{
    "title": "The Forests of the Night",
    "pages": [
        "The theme is \"nautical.\" That usually means a sailboat and the Windwards . But, I did that last year. So, I decided to go a totally different direction \u2013 canal barges. I got to know those things during my time in the UK. Always wanted to try one; never had the opportunity. But, that's what imagination's for. So, here's my contribution. \n\nAlso, I'm mindful of what this day represents. Hence, this story. It takes courage and commitment to raise your right hand and I'm not just talking to all of you eleven bravos and special operators. I'm talking to every eighty-eight mike, food service specialist, and ex-company clerk who's ever put on the uniform. I realize that I'm sitting in the comfort of my home because of your sacrifice and you have my humble gratitude. Of course, Randi has my thanks too, since she's the one who gave me the chance to express it. \n\n*****\n\nTHE FORESTS OF THE NIGHT\n\nThe place reeked of cigarettes, beer and racket. It was New Year's Eve 1940 and there were drunken Germans everywhere. \n\nThe Huns had rolled into Paris the prior June and helped themselves to everything; including Harry's New York Bar. Harry'd closed-up shop and left. So, they needed a barkeep. I wasn't Harry. But I WAS a barkeep. That led to an offer I couldn't refuse. \n\nThe Heinies were persuasive. It was either manage the place... \"Or else.\" People who didn't cooperate were beginning to disappear; and, frankly, it was no skin off my nose. So I satt there nightly, in my worn-out tux, hair slicked back and a cigarette hanging off my lip, making the Krauts feel at home. \n\nIt wasn't THAT odd for an American to be working in occupied Paris. I'd been there since 1919, and the U.S. didn't get into the War until the following winter. \n\nI'd come over when I was sixteen. It wasn't to do the Grand Tour. I'd lied about my age and enlisted. I was full of na\u00efve patriotism back then. I loved being a soldier; until Chateau-Thierry. That's when the Third Division got its baptism of fire. It's also where the Third got its nickname, \"The Rock of the Marne.\" I suppose it's also where I got my hyper-cynical, world-weary attitude; it's a con game and we're all marks.\n\nAfter the War, it was a matter of, \"How ya gonna keep 'em down on the farm after they've seen Paree?\" They mustered us out in New York. But, I'd seen Paree and, I knew that was where I wanted to live. I had my discharge bonus and the City of Lights was cheap back then. So, I was on the next ship back to Le Havre. \n\nI found a place in the 5th Arronddisement; known as the Latin Quarter. Living under the Paris eaves was cold in winter and hot in summer. But frankly, it was a hell of a lot better than my former residence, which was a trench. People might even call my flat romantic; if going down four flights of stairs to use the back-yard shitter is your idea of quaint. \n\nThere was a big Peace Conference at Versailles. The spill-over from that, generated hustle-and-bustle. Plus, the French never need an excuse to party. So, Paris was hopping day and night, and would be that way for the next twenty years. Throughout all that time, yours-truly served the drinks and wiped down the bar. \n\nI hooked on as the night bartender at The Dingo. It was from nine PM to sunrise; all for fourteen francs a week plus tips. The Dingo American Bar and Restaurant was a favorite joint for the Lost Generation. It was the place where Hemingway met Scott Fitzgerald. It was also the place where Papa met Lady Duff Twysden. The less said about that encounter, the better. He DID put her in a novel though, changed her name to Lady Brett Ashley. That character was a real slut.\n\nThe Hemingway I knew, was an asshole. He was forever bullying people, particularly Fitzgerald. To me; his macho man act was just a cover-up for the fact that he was a closet queer. But, Papa liked the ladies too. At various times, he paraded two wives and a dozen mistresses past me.\n\nI didn't begin life running a bar. The family had a farm in one of those all-German enclaves in Wisconsin. I don't remember whether my first language was English, or German. But, it was the reason why picking up new languages was so easy for me. Being fluent like that ultimately had an impact.\n\nThere were too many mouths to feed and I was the youngest. So, when I was nine my folks shipped me to my uncle Fritz. He worked the ore docks in Superior, loading the lake freighters. They didn't have child labor laws back then. So, I spent almost eight years as a loader's assistant, and then as a loader. \n\nThat amounted to shoveling the taconite pellets back on the conveyers, as they filled the holds on those huge ships. Half your young life spent lifting shovels full of iron ore will build impressive arms and shoulders. People started calling me \"King,\" once the movie came-out. They were referring to the gorilla, not my regal bearing. I'm five-ten and about 240 pounds; and there isn't any fat on me. \n\nThe first wave of American ex-pats arrived in the early 1920s. By nineteen-twenty-five, well-known artists were showing up nightly; Hemingway, Fitzgerald, Dos Passos, Picasso. Isadora Duncan even had an apartment across the street. \n\nShe was one voracious lady. I didn't blame her. With a body like that, it would be selfish to NOT share it. The only woman who rivaled Isadora, for sheer volume, was Nancy Cunard. Her daddy owned the shipping line. She must have fucked the entire lost generation, including Gertrude Stein. \n\nThat era seemed like it was a million years ago.\n\nEverything changed in the 1930s. Germany's economic problems helped our friends across the Rhine get back in touch with their former bad selves. I'm not smart enough to know what started the fight. But I DO know that by 1939, the Germans and French had picked up where they'd left-off in 1918. \n\nThe French leadership was incredibly incompetent, even by French standards. So, by June of the following year, long grey waves of Boche were marching under the Arc de 'Triomphe and down the Champs-\u00c9lys\u00e9es. It was far too easy for them.\n\nI slept through the occupation of the City. I usually got to bed around six in the morning. But I had worked late. Too many people were drowning their sorrows or calming their nerves. So, I snored through the German arrival. \n\nIt was business as usual the following day. The French had declared Paris \"open.\" So, it missed out on the destruction that every other major European city experienced. A bunch of the occupants, especially the rich ones, left town in a panic. But, most of them returned a month later, and Paris was back to its usual one-and-a-half-million residents. \n\nThen things kind-of settled into an odd new form of normal. It was easy to pretend that the guys in the field grey uniforms, and all the military traffic, were part of the scenery. And, life went on like it had before the Heinies showed up. \n\nThere was rationing of course, and the French got the short end of THAT stick. But, needless to say; most days the black markets were in full swing. And, you could still get a perfectly cooked chop and a good bottle of Beaujolais at one of the great restaurants; if you were the right customer. \n\nThe Huns had imposed a nine PM curfew, which most Parisians totally ignored. We still worked ten-hour shifts at The Dingo. I had just relieved a Brit named Jimmie, when a couple of German officers walked into the bar. \n\nOne was in field-grey, meaning Wehrmacht. His name was Rommel. We all know where Rommel ended up. But he was just a junior Division commander back then. The other guy was in an all-black uniform. He was a piece of shit named Lishka. \n\nLishka was a member of an outfit called the \"Schutzstaffel.\" The SS is infamous now. But at the time, I just thought he was a National Socialist clown, in a bizarre uniform. His underpants probably had swastikas on them.\n\nSomebody must have tipped them off. Because, they both walked right up to me and sat down. Rommel did the talking. He spoke decent English. But I spoke better German. That sealed my fate.\n\nBelieve me - we civilians were eager to stay in the good graces of the Germans back then. I was just an American, ex-pat barkeep; not a military, or political thinker. I wasn't French. It was none of my business who ran the City. All I knew was that the Huns were in charge and I wanted to stay on their good side. \n\nParisians were trying to keep their lives from being too badly interrupted. I know that sounds incredibly short-sighted and selfish, now. But, society had been way-too civilized up to that point. NONE of us could imagine how dark the heart of man could really be. \n\nThe Germans I knew were the spearhead; professional soldiers with plenty of military discipline. The other crap; the atrocities and the deportations of the Jews, didn't start until the Nazi scum arrived. \n\nRommel said, \"Do you know Harry's New York Bar?\" \n\nI said, \"Of course. Everybody knows that place. It's the top joint in town.\"\n\nThe other guy said scornfully, \"The owner fled the Country.\" \n\nI didn't like his attitude. I said, \"If you haven't read the newspapers your reputation precedes you. He's a Scot, and you two are at war.\" \n\nI got a sneer back. Rommel put his hand on the other guy's arm to shut him up and said, \"The Reich has appropriated several places in Paris. They are reserved solely for its soldiers. Harry's is one of them. Now, we need an experienced person to manage it.\"\n\nThen he paused, fixed me with a meaningful stare, and said balefully, \"You are going to have that honor my friend.\" \n\nI looked at the SS guy. He was daring me to say, \"no.\"\n\nIn reality, I had always wanted my own place. I knew I could make a go of it. I just never thought that I would get the chance. So, instead of turning them down, I told them that their offer sounded like a fantastic opportunity. \n\nDon't you DARE judge me. You weren't in my shoes then, and I didn't have the benefit of your 20-20 hindsight. The Germans controlled the press, and everybody thought they were going to win the war. England stood alone and the Huns were bombing the shit out of them. \n\nAs a result, the attitude in Paris in 1940 was, \"Go along, to get along.\" Of course, some of the French were still full of patriotic fervor and a few resistance groups had sprouted up. Their own countrymen mockingly called them the \"refus absurd.\" That means \"absurd refusal.\" \n\n*****\n\nSo, it was New Year's Eve 1940 and I was wearing a monkey suit and sitting on my regular perch. It was a stool next to the actual piano where Gershwin composed \"An American in Paris.\" But, the pianist wasn't Gershwin. He was a black guy from Norcross, Georgia, named Tyler P. Boggs. \n\nBoggsy had come over with the 369th, nicknamed the \"Harlem Hellfighters,\" and discovered that the French were a heck of a lot less racist than the white folks down south; which really wasn't saying much. So, like a bunch of his fellow soldiers-of-color, and luminaries like Josephine Baker, he decided to stay. Boggsy was a wizard with the ivories and a big draw at Harry's. He was also my best friend.\n\nHe was a flashy dresser and he loved the ladies. He was like me in that respect. Working the Paris bar trade gave us access to everything from royals to hookers. So, there was an endlessly movable feast of beauty and availability. Each night brought a new encounter and I never lacked for bed partners. Boggsy doubled my score. He could seduce anybody with a song. \n\nHarry's attracted the Wehrmacht types; not the Waffen SS, or the freaks from the Gestapo, and the Sicherheitsdienst. So, things were usually convivial. That's why I was surprised when there was a shriek, the sound of breaking glass and a loud slap. That was followed by an angry roar and a much harder blow. \n\nI had heard the same slap, in many different venues, but never the retaliation. It meant it was time for me to saunter over and take a look. I slid off my stool muttering to Boggsy, \"I'll be right back. Keep it light.\" And he began to spin out a slow jazz tune that was pure North Georgia honey. \n\nThe trouble centered in the only collection of black uniforms in the joint. I loathed the SS, even back then. They were low-life trash. So, I got a good grip on my temper before I approached the scene. I didn't want to start my new year by strangling a member of the Master Race. \n\nWhen I arrived, I found a young Untersturmfuhrer being held back by a couple of older Obersharfuhrers. In military terms, that meant that a shave-tail Second Looey was being restrained by two sergeants. But of course, those black shirted fuckers needed appropriately Aryan titles. \n\nThe woman was lying in a heap on the floor, not moving. I thought about ripping the bastard's head off and shitting down his neck. I could have done that, no doubt. But I knew that those guys had their own code and they didn't cotton to outsiders. Even their Wehrmacht compadres were wary of them. And, I wasn't prepared to take on the whole SS. \n\nThis was going to require some old-fashioned bartender tact. \n\nI noticed that all three dickheads were from the Second SS Panzer, Das Reich. Their commander was a regular at Harry's. He liked the American hotdogs. There's no accounting for the taste of members of the German General Staff. \n\nI put on my haughtiest and most disapproving face and said in perfect German, \"I shall have to report this to Herr Obergruppenfuhrer Hausser. He demands that I inform him if his people disobey his orders.\" \n\nThe sergeants looked horrified. Hausser might, in actuality, skin them for public acts of brutality. Those kinds of things stirred up the natives. The Germans didn't want an uprising in France, when England was still a viable threat. That was the reason why they had set up Petain and his Vichy regime. \n\nI said with condescension in my voice, \"I might be inclined to forget this, if you leave immediately.\" I gestured to the drunken piece-of-shit hanging between the two enlisted men, adding, \"And I never want to see him again.\" I made a mental note that, that fucker would suffer a fatal accident. I'd been in Paris long enough to know every trick, and the Seine keeps a lot of secrets. \n\nThe two Germans actually clicked their heels and said, \"Danke!!\" and hoisted their drunken comrade out the door by his armpits. \n\nI turned to the girl. The punch had put her out-cold, even before she hit the floor. I worked the ore docks and I had dealt some one-punch knockouts. It's the only benefit of being built like a silver-back gorilla. So, I had experience with the situation. \n\nShe was sprawled on her side, exactly as she had landed; with her friends twittering around her. I squatted down and pried her mouth open. Sometimes they swallow their tongue. That semi-woke her up. She began to stir. I could see the purple bruise starting to form on the side of her jaw. But it didn't look broken.\n\nI called to one of the waiters, \"Brandy!\" It was obviously for medicinal purposes. So, he brought the drink in a glass not a snifter. She was still just coming around. I raised her into a sitting position. She opened her eyes and looked at me. I expected hysterics. What I saw instead was wild anger. \n\nShe launched a slap at me. I didn't even blink. I have a 22-inch neck. It makes shirts rather hard to find. But I can take a punch. The tactile difference between the forest of bristles on my cheeks, and the SS boy's baby face, must have told her that she had hit the wrong person. \n\nShe looked shocked. I said, \"Relax little lady. I'm not him.\" But I was thinking to myself, \"What kind of broad would take a swing at the guy who had just knocked her out.\"\n\nI held the brandy to her lips and said, \"Here, drink this. I want to make sure there's no permanent damage.\" I knew she would have serious symptoms for a week. We just called it a \"headache\" back then. Now they call it a \"concussion\". \n\nShe sipped the aromatic liquor and shook her head like a dog drying himself off. Then she took another deep sip. The color was coming back into her cheeks and her eyes were better focused. Eight months in the trenches and a lifetime of fistfights makes you expert in head injuries. I held a hand up to each eye. Her pupils reacted normally. \n\nI scooped her up in my arms. She weighed nothing. She struggled a bit. I said, \"Take it easy doll. I'm just carrying you to my office. There's a couch there. You can lie down until you're ready to go home. Your friends can wait with you.\" She relaxed.\n\nThe back-office at Harry's is small, but comfortable. Most of the time I slept there, on the old overstuffed couch. The two women followed me. They were clich\u00e9s. One was a tall and willowy blond. The other was short, dark and voluptuous. \n\nThe girl in my arms was the average French woman. She had a dense mop of dark brown hair. Her face was heart shaped with huge gorgeous eyes. Her figure was neat and tidy, very slim. She was wearing a silk blouse with a black skirt, high heeled pumps and a string of pearls. \n\nI put her down on the couch, stepped over to the sink and ran some warm water into a washcloth. When I returned she was lying with her long legs crossed over each other, one arm shielding her eyes. The single bare bulb caused a lot of glare. \n\nI delicately moved her arm out of the way and put the washcloth over her eyes. I said, \"The light will bother you for a while. You can go home once it stops hurting.\" \n\nShe said, \"Merci.\" It was the first thing I had heard her say. She had a deep husky voice that was pure sex.\n\nI turned to her friends and said, \"Tell me what happened.\" \n\nThe blonde, who appeared to be the best-friend, said, \"The three of us were talking together when that awful man came up behind Bernadette and grabbed her by the breasts.\" \n\nThe blond saw the look on my face. She knew how the French viewed women who partied with the Germans. She said emphatically, \"We are good girls. We do not allow such liberties.\"\n\nShe added, \"Bernadette dropped her wine, turned and slapped the man hard. He punched her in return. It was callous. The two soldiers who were with the man grabbed him and pulled him away. That was when you appeared.\"\n\nI said the obvious, \"If you are such good girls, what are you doing in a bar full of German soldiers?\" \n\nThe dark voluptuous one said, \"The Germans have all of the things we miss in life. We never do anything but flirt with them. What's wrong with that?\" \n\nThere was a lot wrong with it. First, even being seen with a German carried the stink of collaboration. More relevantly. These were all young and pretty girls. I knew the people who drank at Harry's. And I was certain that a few of them were not above rape; at least, if the answer was \"no.\" \n\nIt was hard to believe that adult women could be so na\u00efve. But, letting-go of old attitudes is always problematic, especially in a time of war. That is even truer if the former reality was a lot more pleasant than the current one. \n\nThe world that we lived in, had lost all concept of civility and the Germans ruled the roost. So, it was reasonable that these girls would try to retain some semblance of their old way-of-life. In a lot of respects, I was doing the same thing. \n\nYou need to experience the altered reality of conquest to truly understand the situation. We no longer controlled our daily lives and an alien culture did. I said, \"I'm not judging you; honest. Everybody has to do whatever's necessary to survive the occupation.\"\n\nThen I turned to the tall blonde and said, \"Why don't you help your friend home? I think she'll be alright. Keep an eye on her tonight. Don't let her sleep too much. There might be damage we can't see.\" \n\nJust then, a bunch of brash Teutonic voices shouted, \"Frohes neues Jahr!!?\" \n\nMidnight of a new year always gives me pause. That was especially true for the year 1941. If I'd known, what was going to follow. I might have packed my bags for Kenosha. ",
        "*****\n\nBernadette showed up at the bar in the first week of March. \n\nI was having a smoke upstairs. Boggsy was finishing his breakfast coffee and Pernod. It was the usual shitty weather, with cold drizzle that is characteristic of Paris in late winter. I hadn't seen any of the three girls since New Year's Eve. I wondered what she wanted.\n\nThe jovial atmosphere at Harry's had soured considerably. We knew from the BBC that Goering's boys had gotten a bloody nose from the RAF, and the anticipated invasion of England had been put on hold. Now, the Army seemed to be funneling troops back east toward Russia. The eastward movement made the mood a lot less carefree. The Russians were even more ruthless and brutal than the Germans. \n\nPlus, the clientele had changed. At first, the patrons were Wehrmacht. Now, every form of National Socialist scum hung out at Harry's; Himmler's pet psychos, and suchlike homicidal ilk, showed up nightly. \n\nBernadette stood in the doorway, shaking off her umbrella and looking around. She wore a stylish rain coat with yellow rubber boots, as protection against the puddles, and she radiated the sensuality of all Parisian women. \n\nI was starting to rise when she spotted me. She came bustling over. Boggsy, ever the gentleman, and opportunist, stood and helped her into a chair next to HIM. He said in his deep Georgia drawl, \"Have a seat little lady. Is there something that King can get you from the bar?\" \n\nI had to smile. My absence would put my friend in the catbird seat, when it came to romance. Boggsy never missed a chance. She dimpled at him prettily and said, \"Non, Monsieur, I came to see if Monsieur King would be willing to help me.\" \n\nThat was good news. I had not gotten a chance to evaluate Bernadette. Now that she was sitting across from me; I could see that she was one tasty little morsel indeed. \n\nThe first time we met, I had estimated her age as late-teens, or early-twenties. I think that was because she was so slim. Looking at her in a grey Paris morning I could tell that estimate was off by at least a decade.\n\nThe person sitting opposite me was a well-put-together and dynamic young woman, with a fresh beauty that didn't require cosmetic help. I knew the young Dorothy Parker, and Bernadette could have been her twin. \n\nShe was short, perhaps five two; with thick curly brown hair framing a winsome heart-shaped face. But her eyes and mouth were her glory. Her eyes were absolutely stunning. They reflected her feelings and her passion, and they were mesmerizing. They were shades of blue, depending on her mood. At times, I've seen them range from bright blue to almost violet \n\nHer wide sensual mouth had full sculptured lips. Those lips conveyed merriment, heart stopping eroticism and the au-fait view of a true Belle-du-Monde. \n\nI also noted the last remains of a faded yellowish bruise on the left side of her jaw. She saw me looking at it and said dismissively, \"It is nothing. But it reminds me how strong and clever you are. Perhaps you can help me again.\"\n\nI gazed into those highly intelligent, blue eyes. They were looking at me from under her thick mop of curly brown hair, and I would have done just about anything for her. I said, \"What's the problem doll?\"\n\nShe got the pleased look that every attractive woman gets when she knows that she's enticed some poor helpless male into doing her bidding and said, \"Aurore and her entire family have disappeared.\"\n\nWhat??!! That made no sense. I said, \"I don't understand. Walk me through this from the beginning?\" \n\nBoth Boggsy and I leaned forward conspiratorially, as Bernadette told us about her two friends. \n\nAurore was the short voluptuous one. She and Mirabel, who was the blond, were Bernadette's best pals. They had grown up together in the 16th Arrondissement, near the Bois de Boulogne. That area of the City has broad avenues and stately buildings. Obviously, the girls all came from big money. \n\nThe three of them were inseparable. Mirabel was the cool beauty, the one the boys chased. Aurore was the sex pot, who could get any man she wanted. Bernadette was the charismatic, witty one, the center of attention in any group. \n\nThey went through school and university together and cut a swath through the male population of Paris. All three women were twenty-nine-years-old and scions of French aristocracy. But, the only thing they really wanted was to have some fun, attract a loving husband and raise kids. \n\nThat is, until the Germans showed up.\n\nThe girls' world transformed overnight; just like it did for the rest of us. The most devastating change was the Vichy regime's \"Statut des Juifs.\" That law eliminated the civil rights of every Jew in occupied France. Aurore's family was Jewish. Her father, who was a professor at the Sorbonne, was immediately removed from his position. \n\nMoney wasn't the issue. There was plenty of family wealth. But the implications of that Statute were so chilling that Aurore's parents decided to find a less overtly hostile place to live. \n\nAurore's family's decision to emigrate nearly killed the other two women. Aurore was like a sister to both. They loved their friend. But they could all see that it was not wise for a Jew to remain in France.\n\nBoggsy gave her a sympathetic smile. He was really very sweet underneath the bebopping Harlem jazz-man front. He said, \"Not so good for a black man either. I'm a U.S. citizen. So, I'm safe, for the time being. But I would be in deep shit if we ever went to war with the Germans.\" \n\nBernadette told us that Aurore's father had heard about a shadow network. Those people would smuggle Jewish families out of France, to England; for a price of course. \n\nThe word of mouth was that England was the only place a Jew could be truly safe. The trip cost twenty-thousand francs, which was an unimaginable fortune. But then again, the Bloch family could afford it. \n\nBernadette said, \"Mirabel and I were with Aurore at the time of departure. It was in the darkness before dawn. We wept but we promised to see each other again. Her family, took only their finest possessions, whatever they could pack in a small truck. It was pitiful.\"\n\nI said, \"A truck? Where did they get the ration tickets for gasoline?\" The Germans strictly rationed gas. \n\nBernadette looked puzzled, like she hadn't thought of that before, and said, \"I don't know. Until last year a truck would have been nothing unusual. I was so emotional that it didn't cross my mind.\"\n\nI said, \"Okay, so why do you think anything has happened to your friend?\"\n\nShe said, \"We agreed to correspond, and I have heard nothing from her.\"\n\nI gave her a skeptical look and said, \"If you haven't noticed, there's a war going on and the mail isn't exactly reliable.\"\n\nShe looked exasperated and said, \"Aurore would never leave us wondering about her. She loves us both. She would have sent dozens of letters by now. But, we also sent telegrams to every Jewish community along the proposed route, all the way to Normandy.\"\n\nI looked puzzled and she quickly added, \"That was their destination. It was where they were going to meet the boat that was going to take them across the channel.\"\n\nThen she got a worried look on her face and said, \"Nobody even knew they were coming.\"\n\nBernadette sighed and slumped back in her chair, displaying a dandy set of tits. Okay, I'm a hound. She said in a despairing voice, \"They just dropped off the face of the earth and I'm beside-myself with worry.\"\n\nShe turned a hopeful face toward me and said, \"So can you PLEASE help me. Our families have money. We can afford to pay you.\"\n\nIt wasn't a matter of money. I had dealt with this beautiful little thing twice, and I admired her spirit. But, it was her lovely face and shapely little body that actually made up my mind. She was gorgeous and I'm a sucker for good-looking woman. So, I said, \"When do we start?\"\n\n*****\n\nWe had several obvious barriers. Not the least of which, was the fact that I was supposed to be managing Harry's. I knew that it might be hazardous to my health; if the Germans discovered that I had gone off on a knight-errant quest, just because a gorgeous little doll had waggled her ass at me.\n\nBoggsy solved that for us. He did his patented deep chuckle, the one that makes all the girls swoon, and said, \"Sheeeit man, I can watch this place and still play the hottest piano in Paris. It'll get to meet more ladies, without you hoggin' things. I never thought you did much around here anyhow.\" Then he sat there grinning like a big teddy bear. Boggsy was really a very kind and generous man. \n\nOkay \u2013 one down and an infinite number of problems to go. \n\nThe most pressing concern was that neither Bernadette, nor I had any official standing. So, we couldn't investigate this like the police. Worse, as Vichy began to get a grip on the Country, the French Police were starting to look a lot like the Gestapo. \n\nThere was nothing wrong with poking around in dark corners. I had friends in low-places. That is one of the advantages of being a bartender. But the biggest challenge was the fact that there was a war going on. So, freedom of movement was restricted. \n\nYou couldn't just hop a train to Honfleur. The Germans had appropriated most of them for their own use, anyhow. And since the British knew the Germans were on those trains, it was equal odds that you would get shot up by a guy in a Spitfire. \n\nFinally, and perhaps most important, was the fact that we had no place to begin the investigation. Smuggling anybody out of the Country, let alone Jews, would get you sent to one of the German's new \"camps.\" So, the stakes were high, and secrecy was paramount.\n\nThe obvious place to start was with the person who had arranged things for the Blochs. Thus, the next day Bernadette and I went to visit the parents of the other beauty, Mirabel. Their place was off the Boulevard Montmorency with stunning views of the Bois de Boulogne. \n\nThe Metro ran sporadically. But, now that gasoline was rationed it was the only way to get around the City. There were very few autos on the streets and nothing, but horse drawn taxis. So, the Metro cars were packed so tight that it was hard to breath. \n\nBernadette and I were shoved in like cattle. We were standing so intimately, front-to-front, that I thought I was going to have to propose marriage. I was far too aware of her hard, little body with its pair of perky tits. I looked down at her, just to gauge how uncomfortable our proximity was making her, and she gave me a secret smile.\n\nMirabel's dad was some sort of Director at Peugeot. Be that as it may, he obviously also had a lot of inherited wealth. The parents greeted Bernadette like somebody who had been the daughter's best friend since infant school. They were obviously birds-of-a-feather. At least, when it came to social class.\n\nMe? Not so much.\n\nI didn't blame them. My sad bloodhound face, my permanent five o'clock shadow and my thick, slicked-back black hair doesn't inspire trust. They probably thought I was there to rob the place.\n\nI haven't hurt anybody since my days in the Army. But, Mirabel's parents didn't know that. They just looked at me and thought \"Gorilla!!\"\n\nI tried my most disarming smile, which I think the Bienville family read as menacing; because the parents both took a step back. Mirabel had seen me in action at Harry's, and she knew that I didn't bite. She graciously introduced me to her parents. \n\nPierre was tall and aesthetic. Milane was still a beauty at age fifty-seven. I could see where Mirabel got her looks. Her parents were examples of the aristocratic inter-breeding that afflicts the French. There must have been legions of Comtes and Ducs hanging off both their family trees. \n\nMirabel's folks rather warily offered us seats in the alcove of one of the sunny eighteen-foot high windows, which overlooked the park. You almost wouldn't guess a war was going on. The chairs were exquisite Louis Quinze and I wasn't sure they would hold me. I sat very gingerly. I could feel the legs quiver, but nothing embarrassing happened. \n\nI hunched forward, to appear less intimidating, and said, \"As you all know, Aurore Bloch and her entire family have gone missing. I have offered to help Bernadette find them. I don't suspect anything worse than a breakdown in communications. But I promised her I would get to the bottom of this.\"\n\nPierre and Milane were looking friendlier, like they had decided that I wouldn't run off with the family silverware. While, Mirabel gave me a look that was pure sex. I was thinking to myself, \"I wonder if she likes bad boys?\"\n\nI looked at Bernadette and she was glaring at her friend like she wanted to burn her at the stake.\n\nPierre said, \"We are grateful for your assistance. But, how can we help you?\"\n\nI said, \"We need a place to start, the beginning of a thread; so-to-speak. Do you have any idea who runs this shadow network; the ones who arranged the Bloch family's escape? A name would be very helpful.\"\n\nPierre looked at Milane and they both gave a Gallic shrug. It was so eloquent I began to wonder why we had wasted our time. Then Pierre said, \"Perhaps you should try Amos Weisfeld at the university. He is a friend of ours and he is acquainted with every Jewish person in the City. Maybe he can help. His office is in the Pantheon-Sorbonne. \n\nI had the same up-close-and-personal experience with Bernadette on the short ride back to the Sorbonne in the 5th. Except this time her hard, little buns were shoved against my difficult to disguise interest. Was she occasionally pushing back against me? Or, was that just the swaying of the car?\n\nWe got off at the Cluny-La Sorbonne stop and walked up the Rue Saint-Jacques to the main university building. The Bienvilles had said that Weisfeld was still allowed an office there, even though he was no longer a member of the faculty. He was THAT distinguished.\n\nWe asked for directions from the people sitting around the Pantheon courtyard. I let Bernadette do the talking. She was prettier and a whole lot less scary. \n\nBernadette was beginning to work her way under my skin. She was a flawless example of the ideal French beauty; immaculate, slim figure with long shapely legs and a little round bum. But it was her face that was so spellbinding. \n\nHer features were exquisitely proportioned; with huge, widely spaced, riveting eyes, a classic rounded French nose, wide mouth and erotic, expressive lips; set over a neat, little, pointed chin. \n\nHer facial features were exceptional. However, it was her wealth of hair that set her apart. Her hair was dark brown, so thick that it was impossible to manage, or style. With her diminutive size, it made her look like the cutest, little curly haired moppet on the entire playground. \n\nThat impression lasted, until you looked into her eyes. The sheer intelligence and sexuality that radiated from them was daunting. It reflected an intensity of spirit and personal strength of character that made this vibrant little woman seem indomitable. \n\nI watched as she chattered with the students. She was wearing a grey sweater that showcased her round, full, faultlessly shaped tits and a little silk scarf tied around her neck, bandit style. She had on a short, for that era, cream-colored, pleated skirt, knee socks and a pair of brown, saddle-shoes. She has proportionally longer thighs than the average woman, and they looked gorgeous. \n\nShe did a final exchange with the group and walked back toward me. She saw that I was watching her, and her stride went from chipper to sensual. She grabbed my arm and said, \"Follow me.\" We walked into the main entrance and then turned up a confusing array of halls. I got the impression that the wing that housed the Faculty of Theology hadn't changed since the place was founded, in the Eleventh Century. \n\nWe eventually arrived in front of a door to an out-of-the-way office, Bernadette knocked and a voice from inside said, \"Come.\" Besides being smart, Bernadette has a way with strangers that I totally lack. So, I let her go in on her own. I had no idea what she would find in there. But, I was pretty sure I would scare the bejabbers out of the occupant. \n\nBernadette was in the office long enough that I got curious. So, I peeked in the door. She was engaged in an intense conversation with a wizened old Jewish man. How did I know he was Jewish? Well, the yarmulke was a start. But the main tip-off was the yellow Star of David that was sewed on the front of his old-fashioned formal cut-away coat. \n\nThat was something the Germans had instituted late in the Fall of 1940 and it made no sense to most of us. The Jews had generally been valuable and productive citizens so why single them out? \n\nWell, we all know the answer to that question; now. But it would be four more years before the true meaning of the Holocaust was apparent. Like I said, no normal person could conceive of Nazi bestiality unless they had seen it with their own eyes.\n\nBernadette excitedly waved me in. I would more-or-less fill the office, so I just leaned in the door and offered my hand to the occupant. Professor Weisfeld was well into his eighties. But, he was an intellectual dynamo. I could see it in his astute brown eyes.\n\nBernadette said, \"The Professor thinks he knows who to contact. It's a gentile named Robert. He lives in the Quartier Pigalle, below Sacre-Coeur.\" If Robert lived in that rabbit warren he was a seedy character indeed. \n\nI said, \"Do you have an address?\" \n\nThe old man said, \"Non, but I understand that he will find you if you ask around the shops.\"\n\nPigalle had the, well-deserved, nickname of \"Pig Alley.\" Somebody as beautiful as Bernadette would stand out like a thoroughbred in a herd of donkeys there. But, nobody in their right mind would mess with me. And if they DID; like I said, the Seine keeps a lot of secrets. \n\nSo, we hopped back on the Metro and rode it over to the Place Pigalle stop. Because we were headed to an area where the denizens rarely rode the Metro, the car was a little less crowded, and we actually had room to stand separately. It didn't matter. Bernadette was still plastered against me back to front. \n\nI put my hand lightly on her shoulder. She gave a heavy sigh and leaned her head back against my chest. It was an astonishingly intimate gesture. I could smell the fresh lavender of her hair and her hard, little body was surprisingly warm against mine. The implications were unmistakable.\n\nThis was an unexpected development. Bernadette was clearly a member of the French aristocracy. It seemed incredible that a woman like her would find a ruffian like me attractive. But it was becoming increasingly apparent that she was interested in me, as more than just hired muscle. \n\nI had no idea where this would lead. But the Beauty and the Beast analogy was blatantly obvious. Except, this time there was no handsome prince underneath and the Beauty was the one who was noble. I was just a beast.\n\nThe area where we were headed contained the kind of places that I frequented; cheap bistros and whorehouses. It was an area of petty crime and thievery. The Moulin Rouge was in that neighborhood.\n\nThe Germans cracked down with patrols, and serious reprisals when the natives committed crimes against their soldiers. So, it was generally safe to walk around Pig Alley in the daylight. But the rats would come out as soon as the sun set. And it was starting to do just that.\n\nWe crossed the Boulevard de Clichy and walked up the Rue Andre Antoine, into the squalid area at the foot of Montmartre. The coquins descended on us in a pack. Bernadette began to swear in very colloquial French. They must have been touching her. \n\nI thought to myself, \"Mon Dieu!! What a mouth on that girl!!\" At least she didn't slap anybody. \n\nI used one arm, to haul the largest of them up by his throat, and then slam him against the wall behind us. That was difficult, even for me. He was big. But it made my point. He struggled. But, he wasn't getting out of my grip. The rest of them just stood there awestruck.",
        "I said through gritted teeth, \"Don't you know how to treat a lady my friend?\" Then I slammed him once more against the filthy brick wall. His head hit the bricks and it stunned him. He slid down the wall and lay there sprawled. I turned to the rest of them and said, \"I'm looking for Robert. I will be in that boite, if somebody wants to fetch him.\"\n\nThe rodentia scuttled off. I got us a couple of coffees and two Pernods. I added the water and watched the anise flavored drink become milky white. I said to Bernadette, \"Forgive me for doing that in front of you, but that is the only way to get their attention. I am sure Robert will find us sooner than later.\"\n\nShe just stared at me intently. It was hard to know what was going on behind those glorious eyes. But, it looked a bit like fascination. It was unimaginable that a woman as beautiful and refined as Bernadette would find anything attractive in a guy whose hairline began just a few inches above his eyebrows. But, it almost looked like I had turned her on. \n\nBefore I could say anything further, a scuzzy, rat-like creature pulled out a chair and sat down at the table. He said, \"You wished to speak with me Monsieur?\"\n\nI looked him over. He was a caricature of the grenouille fr\u00e9n\u00e9tique, with the requisite nervous tics and furtive glances. He was five-six, and perhaps 130 pounds. His beady eyes and long French honker, combined with his wispy mustache, no chin, and scrawny neck cemented the impression of rat. \n\nIt was an apt analogy since his pallid skin made him look like he had crawled out of a sewer. Perhaps he had, indeed; because the stench of body odor and stale cigarette smoke was almost overwhelming. I looked at Bernadette and she was suitably horrified. \n\nHe was the right guy, no question. He said imperiously, \"Proceed.\" \n\nThe insufferable arrogance told me that he thought he was holding all the cards. I was going to ask him about the Blochs. But, Robert had made a fatal mistake. He had assumed that we wanted to talk because we needed to escape. That opened up a whole new realm of possibilities. \n\nThere were several ways I could play this. But the most obvious gambit was to just go along with his assumption. That way I would be able to follow in the footsteps of the Blochs. Sooner or later I would either run into them or find out what happened. \n\nIt was dangerous. But I had promised the little lady that I would answer her questions, and I was curious now, too. I said, \"The Germans are after me.\" I thought I would let his mind's-eye fill in the details. I added a touch of desperation, \"I need to get out of France, and I hear that you can help me do that.\" \n\nRobert got the same satisfied look that every shyster gets when he knows he is about to close a deal. He said, \"We can do that Monsieur, but it will cost you. Can you afford it?\"\n\nI was about to say, how much?\" when Bernadette said with assurance in her voice, \"It doesn't matter how much Monsieur. We are wealthy. We can pay.\" \n\nI had a momentary flash of irritation. She had just blown the whole thing. I wasn't going to let her step into danger. She was far too precious to me at that point. I was about to deep-six the whole gambit, when the British intervened. \n\nIt is a common myth that Paris was never bombed. The parts of the City with all the beautiful buildings wasn't hit. But the rail yards in the 18th, especially the Gare du Nord, were bombed regularly. \n\nThe sky was filled with a deep-toned and intimidating roar of airplane engines. Sirens sounded and the quad mount 20mm, Flakvierling 38s and the big lethal 88s opened up. Then the bombs began to fall. \n\nWe knew that we had to get out of there fast. Robert shouted above the din, \"I will meet you here tomorrow. Bring your belongings and twenty thousand Francs. \n\nThe Metro wasn't running during the raid. So, Bernadette and I had to walk back to Harry's. Our route was through the blacked-out streets of the 9th. \n\nThe Rue Jean-Baptiste is a middle-class area. But, it was pitch dark due to the blackout, and the hammering of the guns and the sound of the explosions behind us was overwhelming. I put my arm around Bernadette, just to reassure her. She made a small noise of pleasure and molded herself to me. I said, \"You know we can never go back there now.\"\n\nShe stopped, and very slowly and elaborately unwound my arm, turned to me and said, \"But WHY?? This will lead us to Aurore. If it's the money, don't worry. I have much more than that in my home safe.\"\n\nI could barely see her in the ambient light. But I could tell by her body language that Bernadette was bristling with fury. She said heatedly, \"But you were willing to go a moment ago. What changed your mind? Was it the bombs?\"\n\nI laughed out loud and said, \"I spent my first year in France; getting mortared, shelled and bombed NIGHTLY. It's YOU I'm worried about. I simply can't put you in harm's way like that.\"\n\nI added as gently as I could, \"It's too dangerous. We have no idea what's going to happen. These are all bad men, and we don't even know where we are going. I can protect myself. But I'm worried that I can't protect you and you are very important to me.\"\n\nShe seemed to contemplate that, like what I had said had surprised her. Then unexpectedly, she leapt up, threw her arms around my neck, grabbed the back of my head and planted an open-mothed kiss on me. \n\nThat kiss had more passion behind it than I'd experienced in twenty years in France. She moaned loudly and continued to search my mouth with her tongue. Then, just as suddenly, she let go of me; dropping back to the ground, as agile as a cat. \n\nShe grabbed my belt, tugged on it, shoved my pants down so that they were puddled around my ankles, spun and pushed her own panties down, planted both arms against the wall of the building, flipped her dress up and spread her legs wider. \n\nShe turned her head to look inquiringly at me. I could see in the momentary flash of a nearby 88 that one eyebrow was cocked. Then she waggled her round little butt invitingly. \n\nWe were standing in a blacked-out thoroughfare, in the middle of the crushing rumble and flash of a bombing raid, with anti-aircraft guns blazing-away around us. It was just too bizarre. So, pardon me for hesitating. \n\nBernadette was so far above me in terms of her beauty and social status that I couldn't imagine why she was offering herself to me. But, I would have to be a total moron, or gayer than a tree full of happy chickadees to not take advantage of the opportunity. \n\nI'm neither an idiot, nor homosexual. So, I only hesitated a moment. Her insides were boiling, and she was so wet that I slid up into her without effort. Her head rocked way back, and she emitted a shriek that I could hear over the constant thudding of the bombs. \n\nI felt her passage go nuts as she shoved her 110-pound frame back against me. I was twice her weight. But she was pushing so hard that I had to grab her shapely hips to keep myself steady. Her scent and the frantic gyrations of her cute little butt, got me there a lot faster than I had planned. \n\nIn the meantime, Bernadette had three major orgasms. Her passage would start an insane pulsing, she would whip her head around like she was in agony and then she would sag. I kept going, because I had to get to where I needed to be, no matter the chaos going on around me. \n\nBernadette seemed to pass out after her second climax. I had ahold of her hips and I was pounding her shapely ass like it was the only thing I wanted out of life; perhaps it was. The tempo of the guns was increasing. But I could still hear her shrieks. Then she went completely limp and I was throwing her lifeless body around, like a rag doll. \n\nShe began to come back to me at the thrilling conclusion. She was even making feeble efforts to push back. Then, it felt like the Brits dropped one of their \"blockbuster\" bombs on my reproductive organs. I heard her deep-throated \"Ahhhh\" of satisfaction, even over the earthshaking boom of the 88s, the rapid-fire din of the Flakvierling 38s, and the roar of Lancaster engines. \n\nI put one hand on the wall to steady myself, trying to breath. Bernadette turned and threw her arms around my neck; more to stay on her feet than as a sign of affection. But, she whispered in my ear, \"We are forever one soul. I go where you go.\" \n\nThat was how our bond was forged; standing in the middle of a blacked-out boulevard, with the flashes from RAF bombs and the red-hot tracers and flack bursts lighting up the sky above us. Still, the immense power that was unleashed around us, paled in comparison to the love that I felt for this valiant little woman.\n\n*****\n\nBernadette lived by herself in the Rue St. Germaine. It was one of those Belle \u00c9poque buildings that radiated money. I thought to myself, \"She is richer than her friends.\" That didn't improve my confidence.\n\nGas was at a premium. So, the Parisians trotted out a fin du si\u00e8cle solution. Meaning, once we reached the 8th we flagged down a horse drawn Hansom. Bernadette turned and looked at me questioningly. She saw what I was thinking. So, she addressed the pachyderm sitting between us.\n\nShe said, \"Yes, my father is a hereditary Marquis and I am noble. It doesn't matter in the slightest. I know what sort of person you are; kind, gentle and brave, and stronger than any man.\"\n\nI said, \"But, what would your parents think if you hooked up with a street mutt like me?\" \n\nShe laughed merrily and said, \"Who cares. We're in the middle of a war. Everything's changed. My wealth and status mean nothing to the Germans. Except perhaps it makes me a person who can be exploited.\" \n\nBernadette's apartment must have originally belonged to her parents. It had the look and feel of a place that had been furnished by somebody much older. There was a refined mixture of couches for comfort and Louis Quatorze antiques for show. She sat on a big silk-covered couch, which was so sumptuous that it could easily pass for a daybed. \n\nShe looked at me inquiringly. I walked over and almost literally fell into her huge hypnotic eyes. There was nothing but pure lust behind them. Although we had fucked not more than a half hour ago, she wanted me again; BADLY!! \n\nHer eyes were irresistible. I sat on the couch, took her in my arms and kissed her eager lips. She gave a long, low, sexual moan and threw her arms around my neck, wrapping one leg over my thigh in the process. Then her mouth opened wide and she tried to swallow my tongue. \n\nI eased us back so that we were lying flat on the couch, with Bernadette on top of me. She was dry humping my leg like an eager Jack Russell Terrier. As her body temperature rose, she gave off an erotic cloud of very expensive perfume. It was so sexually stimulating that it made my heart hurt. \n\nMy little partner was locked in a frenzy of desire. She gave me one of her patented penetrating stares, and said with desperation in her voice, \"You have to fuck me now!!\" \n\nThat was good news. But we were both fully clothed. Bernadette hopped off me, moaning with the loss of contact and shed her skirt, blouse, and underwear like they were on fire. I shucked my pants and shirt in the same fashion. I wasn't wearing underwear. I'd been in France long enough to go native. \n\nThe first time we had made love was in the street in the middle of a bombing raid. So, I never really had the opportunity to appreciate Bernadette's body. I almost couldn't believe what she now revealed. I knew she had a womanly figure. But, with her clothes on she seemed slim, almost skinny. In reality, Bernadette simply had a very tiny frame. \n\nShe was a flawless little doll. Her breasts were much larger and more well-formed than I thought. They were perfect upturned teardrops, with brown nipples and huge almost silver dollar sized aureoles. Her hips were round and fruitful, her legs and thighs were fully muscled and gorgeous, her waist and stomach were rock hard and there was not an ounce of fat on her anywhere. \n\nBut it was her magnificent eyes, which were currently stoned with lust, that provided the foundation for her sexuality. They were as haunting and mysterious as the catacombs of Paris and they had a sexual savagery in them that was almost intimidating. \n\nShe walked back to where I was sitting, looking intimidatingly hungry, fell to her knees and proceeded to give my cock a sucking that was like an art form. The odd part was that Bernadette appeared to enjoy the act more than I did. I always had difficulty getting girls to blow me. But, Bernadette treated it like an appetizer. \n\nI was about to shoot when she pulled off me, grabbed my cock at the base and squeezed hard. That stopped my impending orgasm in its tracks. Then she mounted me, and I felt my cock slide up into her tight, hot and wet pussy. I had been in Bernadette less than an hour ago. But there were distractions then. Now, I knew how special she really was. \n\nWe both groaned loudly as I reached the top. She sat there for a second not moving, nipping and pulling at me with her passage. Then she began to move. Her movements started out slowly, but they quickly built to an uncanny rhythm. She was emitting little shrieks as I humped up into her. \n\nThen her sex clamped on me with the grip of a gorilla and began to yell, \"AHHH YESSS FUCK ME!! FUCK ME HARDER!!\" I pounded her for all I was worth, and she collapsed bonelessly, sideways on the pillows that were lining the back of the couch. That gave me the opportunity I was looking for. \n\nUp to that point Bernadette had been the one who was controlling the action. It was obvious that she liked to manage the initial part of the engagement. But then, when she got far enough along she wanted to be underneath, not on top. \n\nShe had definitely released the beast. I attacked the space between her widely upraised legs like a wild animal. I was growling and grunting as I fucked her. She was taking me to the hilt, while moaning and emitting loud shrieks of sensation. \n\nFinally, she began yelling again, \"OH, OH, GODDDD, I'MMMM COMMMMMING AGAIN!\" and her pussy erupted in a chaos of milking. That was too much for me and I came in her like I would never stop. \n\nWe lay in each other's arms for a relative eternity. I was beginning to fear for her silk couch. \n\nShe opened her eyes and looked at me with focused intensity. She said, \"I am not always like this. But, I was overwhelmed by passion because my love for you consumes me. There is only one person in my world now. We are like one soul together.\" \n\nShe added questioningly, \"Do you understand now? I have never felt like this with any man in my life. I know you feel the same way. You were willing to go on this risky venture, simply to protect me. It never crossed your mind to do otherwise.\"\n\nShe was right, of course. I realized, without thinking, that Bernadette was utterly dear to me. That was why I had wanted to keep her out of harm's way. Still, attachment to a woman was a novel concept to me. The life of a bartender is communal in nature. You HAVE to socialize. There is always somebody to talk to. So, you never get lonely in the conventional sense. \n\nThe fact that I was, nothing BUT a bartender hadn't escaped me. But really, who cares? My personal life was solitary by choice. I mean, seriously! who needs a woman? On any given night I would eventually meet every woman in the bar. Hence, the sex was various and frequent. Women were just a source of pleasure.\n\nThen this beautiful and strong-willed little creature came along, and I saw what I was missing. Life isn't easy. But it is a whole lot easier if you have one special person to share its joys and sorrows. That was what Bernadette was to me.\n\nI was aware of our class difference. In normal times that would be an insurmountable barrier. But in this case, we had the same goal and we needed each other. She needed me for protection and I needed her... Well, I just NEEDED her. The odd part was that I had no sense of why we had transitioned from partners to lovers. \n\nThen, the answer hit me. It was astonishing. I was a better man now, because Bernadette saw me that way. I wanted to do the right thing because of her. More important, I trusted her!!\n\nI said, \"It was never a question of how I felt. You are beautiful. But, you are also smart and fearless and more importantly I trust you, like I have trusted nobody else in my life. I have lived a meaningless existence up to this point. I now realize that it has meaning with you in it.\" \n\nHer look of joy was all the reward I needed. \n\nIt's odd how reality shifts. Two years ago, Bernadette was a Marquis's daughter and I was a bartender. And, life continued as it had been in France since the time of Napoleon. I don't think either of us would have even noticed the other one, much less be lying on a couch in each other's arms.\n\nThat world was turned upside down and the new reality was harsh and brutal. It boiled life down to its essentials, where the smart, strong and brave survived. But, that didn't mean it was morally proper to just stand by and watch the helpless being exploited. \n\nSo, because of my love for Bernadette, I was compelled to walk into the furnace of Nazi injustice to retrieve her friend. \n\n*****\n\nWe did some serious plotting. That is, after I had called Harry's. I needed to talk to Boggsy, just to make sure that things were on an even keel. In occupied Paris, losing a job that the Germans gave you was not like being fired back in the States. \n\nBoggsy cheerfully told me that my presence was not necessary. Since, he was making far too much headway in my absence.\n\nWe knew two things. Robert was the entrance to the rabbit hole. And the people who had entered there, were never heard from again. Our plan was simple enough. The Bloch family were Jews. We wanted to find out what had happened to them. Hence, we would put ourselves in the same shoes. \n\nI still had a bad feeling about venturing into an unknown situation with Bernadette. I'm more likely to GIVE hurt, than GET hurt. But Bernadette was a different matter entirely. \n\nI knew that she had a fiery soul. But she was a civilized Parisian woman, protected by her wealth and status. She had never been in a fight in her life. Courage alone wouldn't keep her safe from the denizens of the dark side. \n\nThat created the classic paradox. I finally had somebody too precious to lose, yet I had to risk her because she wasn't going to let me go into this thing by myself. She said that she had taken the unprecedented step of fucking me in the middle of a bombing raid, because my hesitation proved I loved her. She recognized that fact before I did.\n\nIt was a conundrum that I couldn't solve. I just had to play the hand as it was dealt...\n\n*****\n\nThe following day, I was sitting with Bernadette at the same table in the boite. There is less activity around Pigalle in the morning, especially after a major raid. The ruins of the railyard were still smoking. I saw Robert scuttle furtively out of a nearby alley. I truly expected him to emerge from a sewer grating. \n\nI was dressed in a workingman's outfit; chambray shirt, heavy cloth coat, pants and brogues. My brass knuckles, which are my weapon of choice, were inside the removable soles. \n\nSince Bernadette was providing the money she thought that she ought to play the part. Thus, she was much more fashionably dressed. But she was still wearing a pair of walking shoes. \n\nThe first thing Robert did, after he lit an omnipresent Gauloises, was say, \"The money first Monsieur.\" I reached into the little valise and laid two thick stacks of francs in front of him. His eyes lit up with feral delight. \n\nHe said, \"Are you prepared for the trip? What belongings are you taking?\"\n\nI said, \"Only this valise and the lady's case,\" and indicated the small suitcase sitting next to Bernadette. \n\nHe reached for the money. I grabbed his paw and squeezed it hard. His eyes went glassy with pain. God! I was going to have to wash my hands after touching him. I said with emphasis, \"I want to know EXACTLY how you are going to get us to England.\"",
        "A few seconds passed, as I progressively tightened my grip. He said through gritted teeth, \"A canal barge, we take you up the river from near Poissy. The Germans do not inspect the barges yet.\"\n\nIn some ways it was ingenious. Conflans-Saint-Honorine was the barge capitol of France and the lower Seine waterway was perhaps the safest route to travel north. \n\nThe canal barges were everywhere, and you could haul cattle in the bigger ones. They weren't efficient ways to move military equipment. But, they WERE essential to provisioning Paris and its civilians. So, the RAF wasn't shooting them up. \n\nBecause they carried vital supplies, the gas ration was liberal. Their little engines didn't use much fuel anyhow, and if worse came to worse, they could be towed by horses, like they were in the prior century. \n\nI said, \"What happens when we get to Honfleur?\" \n\nHe said, \"That is the easiest part Monsieur. The boats still go out to fish. Both the Germans and the English inspect them. But there are so many that it is impossible to keep track of all of them, especially when they don't want to be found.\" \n\nThen he winked and added conspiratorially, \"Sometimes, they accidently land in Cornwall.\" I believed him. This might work.\n\nAt that point a heavy wagon pulled up. A lot of Paris was still horse drawn in that era. So, this was not an oddity caused by the war. The wagon was the kind that hauled supplies back and forth from the Quais. It was enclosed. The wagon itself had \"Arles Transport\" on the side. The horse looked like a Percheron, very big and burly. \n\nRobert gestured toward the wagon and said, \"Your ride awaits. Pierre will see to you once you are on the barge.\" \n\nIt was all very well organized and systematic. Perhaps this shadow network was what it seemed to be. But the skeptic in me doubted it. \n\nBernadette was ecstatic. She said, \"Aurore must have done the same thing. We will see her soon.\" \n\nI was not so certain. Everything about this smelled like a trap. It would be particularly inhuman to prey on your own countrymen in a time of war and occupation. But the fact was, once we got in the wagon we were at the mercy of whoever was running that network. Rich people traveling alone, with nothing but their most valuable possessions, are tempting targets.\n\nIt's an almost 15-mile journey from Pig Alley to the barge docks in Poissy. The trip would take all day in normal Paris traffic. But since the only vehicles on the streets were military, we arrived at the barge by 1:00 in the afternoon. We had brought along a jug of wine, some bread and a little sausage, and we kissed a lot. So, the trip was bumpy but not arduous.\n\nThe driver looked to be a common travailleur, not a criminal mastermind. Actually, he looked stupider than the horse. He was dressed in the old-fashioned heavy denim chemise with farmer's wooden clogs. I tried talking to him. But, he ignored me. Maybe he was deaf. He never said a word to us.\n\nWe stopped at a canal boat, which was moored along the bank of the Seine. It was across from the tip of the Ilot Blanc. \n\nA coquin walked up from the boat to meet us. He was a huge bear of a man. But his voice was surprisingly high pitched, almost feminine. He said, \"Greetings mes-amis my name is Pierre and I will be your host for the next several days. This is my boat, \"Benedictions.\" It will be a blessing for you and a few of your friends.\"\n\nI looked at him surprised. He chuckled and said, \"You will have traveling companions Monsieur et Madame, another family seeks our assistance. They are already on-board. We were only waiting for you, to begin our journey\"\n\nWe stepped aboard the boat. It was an odd-looking craft. The boat was very long and narrow. That was the reason why the Brits called them, \"narrowboats.\" \n\nIt was perhaps 70 feet in length and no more than 7 feet in width, the better to navigate the crowded French canals. Those disproportionate dimensions allowed the barge to fit into the narrow locks that regulate the Seine's meandering course. \n\nBefore the war, canal boats served the same general function as house trailers back in the States. You could pack the whole family into one of them and explore Europe, through its widespread canal system; or even live on one. It was the extensive lock system that made it all possible. \n\nThe locks were installed throughout the Eighteenth and Nineteenth Centuries. They were designed to make rivers more navigable for deeper draft boats. \n\nThe cabin was comparatively high sided, with a flat top that people could easily walk around on. There were two very short decks fore and aft. The after-deck housed the motor and propulsion gear. So, it was the longer of the two. There was a small hatch covering the engine and a big old-fashioned tiller, which was used to do the steering. \n\nDuring the voyage, I tried my hand at steering. It wasn't like using a wheel. The tiler WAS the rudder. So, you had to use some muscle. At the same time, whatever movements you made were exaggerated by the fact that there was a direct connection between you and the water. So, steering a narrowboat required a considerable degree of \"delicacy\". \n\nThe inside had the look and feel of a bowling alley, rather than a cabin. The back two-thirds of the habitable space was taken up by berths. Those were nothing more than tiny cubicles, formed by throwing up curtains, around a bed to provide a modicum of privacy \n\nThere was a two-foot passageway on the port side. It was difficult for a person who was built like me to squeeze through. There was a wood-fired cooking facility, and a space for people to sit. There was a little toilet, which I was certain emptied directly into the Seine. \n\nThe boat seemed to be in decent shape. I didn't know anything about canal barges. I had spent my entire time in France either in Paris, or in a trench outside Soissons. But I didn't need to. All I needed was for somebody to play a card. That came almost immediately. \n\nBernadette had been happy and eager all the way to over to Poissy. She was even more excited when she saw how livable the boat was. I think that the poor dear thing expected to travel in misery. But, she was willing to endure it for her friend. So, she was relieved when she discovered that we would journey in relative comfort on our quest. I continued to smell a trap.\n\nThe Jewish family was making the trip for the same reason as Aurore's. Their last name was Meier. The Meiers knew that the future held nothing good for a Jew in German occupied France. \n\nTheir family group comprised an older man, who was obviously the grandfather, an attractive forty-something woman, who must have been his daughter, and her four kids. \n\nThe oldest kid was a boy of perhaps twenty-two and they went down in three-year increments from there. The next oldest was a stunning nineteen-year-old girl with a glorious body; voluptuous, just like Aurore. I was beginning to see a pattern. \n\nI watched Pierre. He was looking at the young woman, whose name was Lorelei. He wasn't even trying to disguise his lust. Then he shifted his gaze to Bernadette. It appeared that Monsieur Pierre was trying to make up his mind. \n\nI sidled up to where he was holding the old-fashioned tiller. I took ahold of his arm and said under my breath, \"She's mine and you aren't man enough to take her away from me.\" \n\nHe might have been big, but he wasn't near as muscular as I am. I gave his arm a painful squeeze. He got the message. \n\nThe first part of the journey was idyllic. Spring in France is like no place else in the world. The sun is honey yellow and the breezes are mild and fragrant. The land around us was waking from its winter slumber. And, the world smelled like life and freshly turned earth; as the thousand-year-old rituals of the growing season began. \n\nWe were moving slowly and almost silently through all that bucolic splendor. That is, if you discounted the putt-putting of the narrowboat's small two-cylinder diesel. There are five locks along the lower Seine river. We encountered our first one at Notre Dame de la Garenne. \n\nThere were two green lanterns lit as we approached. That meant the lock was empty and we could enter. The lock gates swung open. As Pierre eased the boat into the lock, the lock gate ground slowly closed behind us. \n\nWe would have tied-up to a bollard if we had been going upbound. But the boat was going to drop several feet. So, Pierre had me and the boy jump off and hold the bow and aft lines. We stood there keeping the big canal-boat steady between the sides of the lock as the water rushed out. \n\nMeanwhile, Pierre walked down the towpath at the side of the lock and sauntered away toward the town. He gave his regards to the lock-keeper, who happened to be a woman. I got the impression that Pierre had made her intimate acquaintance in the past. \n\nAs the boat continued to settle, Pierre casually wandered over to a local boite, which was situated about 50 yards from the lock-keeper's little house. It looked like he was stopping off for a quick glass of wine.\n\nHe greeted four rough looking men who had been sitting there enjoying a bottle of cheap red. They talked for a short while. Then a fifth man approached. The new man was slightly better dressed, and he looked like he was in charge of the other four. \n\nThere was a lot of friendly back-and-forth between all six men. Then, just as the downstream lock opened, Pierre shook hands all-around and strolled back to the narrow-boat. \n\nThere was nothing sinister in what I'd seen. It looked like Pierre was just joshing with a group of his acquaintances. I imagine you meet a lot of people going up and down the river. Perhaps they got together every time he made the run to Honfleur.\n\nBut, there was something in the interchange that raised my suspicion. It almost looked like they were comparing notes. I'm a bartender. I'm used to seeing skullduggery. And, I could smell a big, fat, garlic eating rat. I raised my defenses. \n\nWe cruised under power and with the current. The narrow-boat was moving downstream, so we could make a blazing 4 knots on its little diesel engine. We'd tie up for the night. In the morning we'd continued downriver toward Rouen, which was still two nights and three days away. \n\nBesides the odd interchange at Garenne, there was nothing in Pierre's behavior to raise red flags. He seemed to be your average working-class French riverman; crude and not particularly bright, but with a certain feral cunning. The only disturbing part about him was his obvious appetites. He was visibly lusting after both Lorelei AND her mother. \n\nAt one point he had looked longingly at Bernadette. I rose and walked back to where he was holding the steering tiller. I just stood next to him for a minute, or two. He said under his breath, frustrated, \"I heard you the first time Monsieur. But, she is very beautiful.\" \n\nWe pushed it hard. It was almost like Pierre had a schedule to keep. The rest of the denizens of the boat just thought that he was hurrying to get them to safety. I didn't believe that for a second. It had something to do with the meeting in Garenne.\n\nWe watched the river bank pass as we ate, talked and slept. Everybody kept to themselves, which was fine with me. I was waiting for the next card to be laid down.\n\nIt had been comfortable, almost too peaceful so far. The boat moved at a walking pace. So, we could get off anywhere on the old tow-path and run into the local towns to buy essentials, like gallons of the local red. Even the cheap stuff was excellent, and the farmer's cheeses were to-die-for. \n\nThe canal-boat life appealed to me. You had an endless panorama of French countryside passing outside the big windows. Those windows allowed us to watch the world slide serenely by, while we sat in relative comfort. \n\nThe people on shore could see you too. We even waved to famers leading their animals along the tow-path. Waving just seemed like the friendly thing to do. Since, only a few yards of water separated us from those people.\n\nThe kids played on the long flat roof of the boat. Bernadette and I sat up there, feet hanging over the side basking in the spring sunshine. In that happy respect, we drank the red, ate the farmer's cheeses and enjoyed the peace and serenity of the Seine. \n\nI learned a lot more about my beautiful companion, as we made our way down the tranquil river. The things I learned helped me to better understand the changes that were happening in me. \n\nI told Bernadette about my upbringing; how stark and brutal my childhood had been. I said that, \"I was thirteen years old and shoveling taconite ore all day. It taught me one thing; never expect anything from anybody.\"\n\nI added, \"I might sound cynical. But, I've had plenty of proof to reinforce that mindset. Most of the people I know are shits; every one of them wants a piece of you. So, I've learned to keep to myself.\"\n\nI looked at her affectionately and added, \"Then I met you. You're a rich lady and Aurore is just a friend. I know you're a feisty little bitch.\" That got me socked. I continued with, \"But what in the world is a well-bred woman like you doing in the middle of this mess? Your motivation is something that I am desperately trying to understand.\"\n\nBernadette got the melting look that comes over her when her feelings are riled, and her eyes turned almost violet. She put a hand behind my head and gave me a deep kiss. Then she drew back and looked at me tenderly. \n\nShe said, \"It's elementary. I do what I think is right. People construct elaborate justifications for doing the WRONG thing. But deep down we all know we're lying to ourselves and that causes us pain. If I know that I am doing the right thing, then my conscience is clear and my outlook is happy.\"\n\nShe added, \"Aurore gave me a lifetime of her love. It would be wrong for me to turn my back on her now; just because it inconvenienced me or put me in danger. So, I am bound to do what I can to help her. I would do the same for you. I pledged my devotion and my love doesn't come with conditions.\"\n\nSo, there it was. Bernadette was just saying what we all know is true. If you want to be a happy person, you need to do good things, no matter the cost. It isn't a matter of religion. All major religions have some version of the golden rule. Instead, it's a matter of moral courage, integrity, and personal honor. \n\nUp to that point my version of the golden rule was, \"He who has the gold - rules.\" Now, this virtuous and strong-minded little woman had opened my eyes to the real truth. All, I wanted was to be as forthright and honorable as she was. \n\n*****\n\nOur voyage would have been beautiful and romantic if it weren't for the inconvenient truth that there was a war going on, and we were in the clutches of a fellow who was obviously up to something. \n\nThe seventh night, we tied up in the bend in the river past Rouen. We were in the middle of the Roumare forest. We were a lot nearer the Channel. So, there were more signs of the War, planes flying overhead in formation and military traffic. \n\nRoumare is a vast forested plateau embraced by a lazy loop of the meandering River Seine. It was traditionally part of the ancient estates of the Dukes of Normandy and it hadn't changed much since William the Conqueror hunted in it. The umbrella of branches hid us from marauding British fighters and the solidly packed array of tree trunks kept the panzers at bay. \n\nEverybody on the boat was getting nervous. Honfleur was perhaps a day away and we were all anticipating the next part of the journey, the English Channel would not be as hospitable as this peaceful place. I was convinced that if anything was going to happen - it would happen now. \n\nSo, I raised my guard to the last notch. \n\nThe journey up to that point had been like something out of time. I mean, really; here we were in the middle of a forest that was like it was imagined by Shakespeare. At the same time, the Germans were tightening their grip on all of France. \n\nThe sleeping quarters were constrained to say the least. The beds were, in effect, lined up against one bulkhead and then encased in a series of heavy curtains. You got some privacy because of the curtains. But, I could hear people snoring two cabins down. So, there was no fooling around with my beautiful companion. \n\nBernadette was in her usual sleeping position, an arm and a leg thrown over me. head resting entirely on my chest. She tends to drool and talk in her sleep which is an endearing foible for a French aristocrat. I shifted her slightly, so that she would drool someplace else. She was mumbling something about ducks.\n\nThen, I heard a thump and whispered voices. Since, it was the middle of the night, that could only mean trouble. \n\nI needed to reconnoiter. I gently slipped Bernadette off me. She murmured a complaint. Then I silently worked my way through the slit in the curtain and into the passageway, slipping on my shirt as I went. \n\nI always slept in my pants just in case. So, it was only a matter of putting on my boots. That is, after I'd gotten my two knuckledusters out of the fake soles.\n\nThe intruders were coming from the foredeck. I counted six individuals. They were stealthily making their way through the common area up front, obviously headed for the berths. \n\nFortunately, the passageway was restrictive, it was pitch black and Bernadette and I were in the far cabin. \n\nI hastily gathered Bernadette's clothes and shoes and bundled them under my free arm. Then I abruptly hoisted her over my shoulder. \n\nShe gave a startled squawk. But, her little sound was masked by the clatter of all hell breaking loose forward, as the curtains of the first cabins were thrown wide and flashlights were shone on the startled occupants. \n\nIn the meantime, I was hustling down the narrow passage in the opposite direction. I ran out onto the afterdeck, carrying Bernadette like a sack of potatoes. It was an easy jump to the bank and thence into the foliage, which grew right to the edge of the water. \n\nThere were shouts and screams from inside the barge as I put an extremely muddled Bernadette behind a tree. At that point the intruders had not yet discovered we were missing. \n\nBernadette said justifiably confused, \"What??!!\" I handed her the clothes and boots and said, \"Dress quickly my love. We have to get somewhere to hide and it has to be fast.\" \n\nMost people would want to stop for an explanation, which I didn't have time to give. But, Bernadette was as dauntless as she was brave. Without another word she slipped into her walking pants, shoes and heavy shirt. She DID stop to tie a jaunty little scarf around her neck; just to defy whoever had boarded the boat. \n\nI could hear the shouts of the intruders as they discovered that we were missing. Two of them immediately jumped off and headed into the forest. One of them was coming through the trees, following the path we had taken. The darkness of the forest hid us.  \n\nHe was searching the area with his flashlight. The huge trees made his little beam insignificant.\n\nI waited until he had gotten right next to me. Then I stepped forward and hit him with one short powerful jab. I am very strong, and the metal knuckles I was wearing are designed to concentrate the full force of a punch into a single tiny area. So, the impact was catastrophic. \n\nHe didn't make a sound, as he fell lifelessly to the ground. From the crack I could tell that the blow, which had hit him on his left temple, was fatal. I retrieved his flashlight and shut it off. It was going to come in handy. \n\nThen I grabbed Bernadette and we disappeared into a tangle of vegetation and rocks. \n\nMy courageous little friend had been yanked out of a sound sleep, manhandled into a forest and seen me kill somebody with my bare hands. Most women would be in hysterics. I looked at my steadfast pal and she was staring back with cold, anger. ",
        "She said with steel in her voice, \"Now we will find out what happened to Aurore.\" \n\n*****\n\nI parked Bernadette in a thicket of rocks and underbrush and carefully worked my way back to the boat. I had spent enough time in trench raids, twenty years earlier, to know how to move silently in total darkness. \n\nThe brush and trees grew right to the riverbank. So, it wasn't hard to stay under cover. The other guy was still hunting us. I decided to take care of him first. \n\nIt would be simple because he was stupid. His flashlight lit him up like a Christmas tree. So, I could track him, without exposing myself. I could see that he also had a gun. It was one of the old Luger P08's with the 7.65 Parabellums, instead of the Wehrmacht's newer 9mm Walther. My guess was that that he wasn't German Army. \n\nI didn't want the others to hear gunfire. It would alert them. So, I waited for the guy to walk past. Then I delivered a violent jab to the back of his skull. I was aiming for the brainstem. That, controls all the autonomic functions. He probably didn't know he was dead, until the fires of hell hit him. I picked up his pistol and put it in my pocket. So far, it had been a profitable expedition. \n\nI crept up next to the boat and looked in the big window. The lights were on. It was disgusting. There were four of them, including Pierre. Two were raping the women; Lorelei and her mother. The other two stood-by, eagerly waiting their turn. \n\nThe women were screaming and begging. The younger children had been herded into the passageway. They were wringing their hands and crying. The older boy wasn't visible, nor was the grandfather. \n\nI was about to go in and end it, when I felt a presence next to me. It was Bernadette. She was staring at the scene, on the other side of the tall windows. Standing there in the pitch dark, we were invisible to the people inside. But unfortunately, the degrading scene inside was all too visible to HER. \n\nBernadette's eyes were wide in shock, both hands covered her mouth. She said one anguished word, \"Aurore!!\" \n\nI knew what she was thinking. I didn't see fear, or horror. What I saw instead, was the same blazing anger that I had seen on her face when she slapped me on New Year's Eve. I said sternly, \"I thought I told you to say hidden?\" \n\nShe gazed at me intently and said, \"I go where you go. I told you that when we pledged our love. Now we do this together.\" \n\nThe woman wasn't willing to accept that she was a 110-pound slip of aristocratic beauty, who had never been in a fight in her life. Instead she looked like she was contemplating charging in and confronting an entire boatload of killers. \n\nI've witnessed reckless bravery in the trenches of France. But I have never met anybody as unthinkingly fearless as my dear Bernadette. I said with as much authority as I could muster, \"Stay put. I am going to end this and, you will only get in the way. Promise me that!!\" \n\nShe gave a reluctant nod, like she had trouble making up her mind.\n\nTrench raids were one of the most brutal types of actions of World War I. Their aim was to terrorize the enemy and gather intelligence, not capture ground. A trench raid distills war to its essentials, and the human-being regresses to the savage ground-ape we all evolved from. \n\nAt night, a picked squad of volunteers would slip through the mud and shellholes of no-man's-land. Then they would drop into a German trench, kill a few Germans and high-tail it back, with whatever captured documents and prisoners they could gather.\n\nYou are in a suffocating hole in the ground. The situation is blackout dark. It feels a lot like a grave. It is just you and somebody else. You use knives, clubs, fists and even your teeth. I had been on a lot of those raids. They were useful experience for what I was about to do. \n\nIt might have been twenty years. But, the instinct is always there. I entered through the same hatch that the intruders had used. I had the P08 in my right hand. \n\nThe entire point of a shock attack is to strike hard and decisively, before anybody has a chance to realize what's happening. My plan was simple, kill three and keep one to question. \n\nI immediately, and without hesitation, shot the two spectators; two taps each. It happened in an instant, before anybody knew I was there. They didn't have the chance to say their prayers. \n\nThe two who were doing the raping turned, startled. I couldn't shoot either of them. The women were underneath and the 7.65 is a high velocity slug. So, there was a distinct possibility that my shots would continue through and also kill the victim. \n\nFortunately, the fool who was raping the mother jumped to confront me. Seriously??!! I'm holding a Luger and he is holding his slimy cock. Who do you think won THAT encounter? I put a third round into his crotch area, just because I hate stupid people. \n\nPierre had been raping Lorelei. I kind-of knew that was going to happen. The dumb-shit DID have the presence of mind to bolt in the opposite direction, and I couldn't shoot him. The kids were in the way. So, I chased him. \n\nBut, the disadvantage of being as burly as I am, is that it is hard to get past two panicked children in a two-foot space. So, the rat was about to escape the trap.\n\nPierre had just stuck his head out of the after hatch when I heard a loud \"THUD\" and he toppled backward, stunned. He was beginning to rise, when I arrived and put him down for good. \n\nFortunately for him, I'd removed the knuckleduster from my right hand. I didn't want him dead. I needed some answers. I tossed his unconscious body on our bed, ripped up the blanket and bound his arms and feet. He wasn't going anywhere. \n\nThen I glanced back up the companionway. My brave little sidekick was casually discarding the small log that she had used. \n\nShe said matter-of-fact, \"I had to do something.\" \n\nI was thinking to myself, the guy weighs twice as much her, he is no-doubt a killer, and she had to \"do something?\" It's a fact, that the heart of Richard the Lion-Hearted is buried in Rouen Cathedral, which was nearby. Bernadette might be 110 pounds. But, her heart was forged in the same foundry.\n\nWe both walked to the front of the boat. It was simply pathetic. The whole family was huddled there, arms around each other crying. The two men had tried to resist. Both were hurt. But, not too badly. My own heart turned to ice. \n\nI told Bernadette, \"Calm them down and make them comfortable. I am going to extract every drop of blood from our friend Pierre.\" \n\nShe nodded, with unwavering resolution in those gorgeous eyes. The depth of her anger was reflected in their color. They were like blue marbles. She said sweetly, \"Please make it painful.\"\n\nDawn was breaking clear and gorgeous. The chirping of the birds greeted the rising sun. It looked like it would be a beautiful day on the Seine. I dragged Pierre's inert form out on the afterdeck. I took a pail, filled it with water from the muddy river and doused him with it. He awoke spluttering. \n\nHe tested his bonds and then looked confused. I squatted down next to him and said cheerily, \"Good morning sunshine.\" His eyes focused on me, then they got a look of recognition and he recoiled in horror. I stood up and kicked him in the ribs. I heard a snap. He screamed in pain and pissed himself. \n\nI squatted down and withdrew a knife from the pocket of my pants. You need insurance in the bar trade and that knife had been my companion for two decades. \n\nIt was a slim single action stiletto, something that the French called a \"flick-knife.\" It had a gleaming, seven-inch blade and a bone handle. It was razor sharp and as lethal as it looked. \n\nSome people carry knives to do things like cut rope or carve food. But this one was designed for only one purpose; stabbing. It was long and slim, and it could inflict a range of hurt; from intense pain to instant death. I liked it, because getting up close leverages my superior strength. \n\nNormally, just the sight of me holding it would convince people to give me what I wanted. Once in a while I needed to be \"more persuasive.\" I held my face approximately six inches from Pierre's and said menacingly, \"Now, I need you to tell me everything.\" \n\nGod, he stank! He returned the favor by spitting at me. I had restrained him by tying strips of blanket so that his arms were tightly bound to his body. I took his left hand and slowly shoved the stiletto into the area at the top of his wrist where the median nerve crosses into the hand. I have seen the pain from that cause heart attacks.\n\nPierre opened his eyes so wide that I thought his eyeballs were going to fall out. Then he shrieked in pure and utter agony. I held the knife there for a second twisted it and then withdrew it. I knew that he couldn't feel most of his left hand, now. \n\nI said calmly, \"That was just a mild taste of what's in store for you. You can no longer use your hand, Monsieur. But a man without eyes and balls is not a man, n'est-ce pas?\" \n\nPierre was naked from the waist down. I nicked his cock with the knife. The blood flowed copiously. \n\nHe whimpered and said, \"What do you need to know?\" His abject surrender was gratifying. I had a lot more important things to do than torture this worthless piece of shit. \n\nIt wasn't what I'd expected. I had just assumed that this was something related to the Nazis. After all, it involved Jews. But instead, it was a money-making scam cooked up by eight despicable French crooks. \n\nThe leadership comprised Pierre, Robert and one gentleman whose acquaintance I had yet to make. The other five, all recently deceased, were spear carriers. Pierre was about to join them. And, I planned to make the seventh person, whose name was Marcel, very dead; just as soon as we arrived in Honfleur. \n\nThen, I would loop around to settle accounts with Robert. That should close the books on this little escapade.\n\nThe eight villains had seen the direction that the Nazi wind was blowing, at least with respect to the Jews. So instead of demonstrating even a glimmer of human decency, those knuckleheads decided to go into business; while having a little fun on the side. \n\nThe scam took advantage of the fact that desperate Jewish families would pay anything to flee France. So, the boys set-up a fake network. Robert handled the customer side. Pierre and his boat did the logistics. The gentleman, who was about to have a fatal encounter, handled the sexual slavery. \n\nOnly the pretty girls arrived in Honfleur. The rest of the family were robbed of their money, valuables and other possessions and their bodies were buried in the Forest of Roumare. \n\nPierre was watching me hopefully. He had spilled his guts and he actually expected I would let him wander off. I almost laughed out loud. He had committed unspeakable crimes and even more relevant to me, he might tell his friend in Honfleur that I was coming for him. \n\nI looked at the fool with phony warmth and said, \"You know what? I LIKE you, Pierre.\" \n\nThe dumb-shit grinned, like he knew I would never kill him. I added, \"In fact, I like you so much that I am going to make your death quick and painless.\" His eyes bugged. He gasped, \"Please Monsieur!!\" \n\nI abruptly, grabbed the back of his head and shoved the stiletto under his chin, up into his brain. He died instantly. I needed his boat and I didn't want to clean blood off the deck. I wrapped the body in an anchor chain and dropped him over the side. \n\nThe water was shallow next to the bank. People would eventually discover him. What did I care. There was a war going on.\n\nI still had his three friends to dispose of. I discovered that Bernadette had dragged all three out onto the fore-deck, while I was conversing with Pierre. She said matter-of-fact, \"The bodies were disturbing the Meiers.\" \n\nI was thinking to myself, \"What kind of French noblewoman just rolls up her sleeves, without the slightest question, or pause?\" I knew then and there, that I had to make this steadfast little beauty mine. \n\nMarriage is a merger of abilities, interests and moral precepts. Ideally, the two of you view the world through a similar lens. If you do, then the marriage exists in mutual harmony. At least, that's what the romantics tell us. \n\nBut the fact is that, life's a bitch and everybody's different. We have diverse abilities, interests and even morality; and that divergence can either be a curse or a source of strength. It can ultimately drive people apart. Or it can blend them into a single multifaceted partnership that is much stronger than two people operating alone. \n\nThey call that synergy. It's where the whole is greater than the sum of the parts. That was Bernadette and me. We were polar-opposites in terms of culture and background. But our differences completed us. Adversity demanded that we utilize our varied talents for our mutual survival. And that inexorably melding us into a team of equals; one that was built around shared respect and unconditional caring for each other. \n\nI didn't need to think about whether Bernadette was physically attractive. Anybody with a working pair of eyes could see that. But, what I was learning was that she had an unrivaled strength of character and superb fighting spirit. Those qualities are much more important in the long-haul than simple beauty. More importantly, they were characteristics that I valued above all else. \n\nShe, on the other hand, had seen my ruthless side. I was a lower-class working stiff from the freighter docks in Superior, and she was a Parisian aristocrat, but she loved me. She not only accepted the brute in me, but she realized that my actions were for our mutual benefit, not something that I enjoyed doing. I was utterly committed to being gentle and loving to this superb woman and she also knew that. \n\nI gazed at her fondly and said, \"I know what happened to Aurore. Let me assure you that we will find her and bring her back to us safe. But the story is too distressing to tell right now. Can you trust me for a short time?\"\n\nShe looked at me with those deeply intelligent blue eyes and laughed. She said with sincerity, \"I trust you with my life.\" \n\nWe disposed of the bodies by dumping them in the Seine. That was the best they deserved. \n\n*****\n\nThe Meiers were brave and resilient. That was a familiar pattern with the French Jews I'd met. \n\nThe mother, whose name was Aline, had been brutally raped. But, she was the rock of the family. She had them all calmed and gathered in the common area by the time Bernadette and I had finished with what needed to be done. \n\nLorelei was back to normal and the children had stopped crying. Both of the Meier men had cuts and bruises. But their injuries didn't look serious.\n\nI told them the sanitized version of what had been planned for them. There was no need to make them suffer any further. I said, \"Based on what I know, it isn't feasible for us to arrive with you still alive.\"\n\nThey all looked appalled. I quickly added, \"That would tip off the guy who arranged this, as well as any of his henchmen. So, the best way to ensure your safety is to tell them that you are all dead. That will take the heat off.\"\n\nI said soothingly, \"You can still get to England. We will drop you outside of Honfleur and all you will have to do is conduct a little covert inquiry. The citizens of Honfleur are good people. They are experienced at smuggling and the Resistance is active in Normandy. \n\nSo, we dropped the Meiers at the formal Gardens at the mouth of the tributary leading to the locks. They all strode off resolutely, headed for the city-center. Aline was in front, leading her brood to safety. She was a magnificent woman and I knew that she wouldn't fail them. \n\nMeanwhile, I had other fish to fry. \n\nThe harbors in Honfleur are accessible through a dredged and locked tributary of the Seine. There were probably Germans watching for any strange boat's arrivals. More importantly the person who was about to receive his shipment of new \"talent\" would certainly be waiting for ME. I was counting on that. \n\nThen we heard an ominous sound. We were within easy striking range of English airfields. So, I knew what the wasp-like buzzing was. The Brits flew regular fighter sweeps over the mouth of the Seine, just to keep Hun shipping on its toes; and our canal boat looked just like the barges that the Germans used to move construction material up to the West wall.\n\nThe distant speck was passing east of us, heading toward Le Havre. I was hoping it would stay on its current course. But, as we entered the channel leading up to the lock, it dipped its wing. It was obviously coming over to investigate. \n\nWe could tell that it had twin engines, but we still couldn't decipher the type of aircraft. Two engines normally meant a bomber, perhaps some kind of reconnaissance plane. That was a good thing. Because, it was unlikely that they would try to shoot us up. \n\nThe Brit swung around, to pass over us east-to-west. It was at about 200 feet as it rocketed overhead. It was moving so fast that there was a rush of air. \n\nMy heart sank. It wasn't a bomber. It was a Bristol Beaufighter, a ten-gun terror armed with 20-millimeter cannon that would rip us to shreds. \n\nWe were in a dredged channel, so we couldn't maneuver to escape. All we could do was chug along like a sitting duck and pray that the guys in the Beaufighter wouldn't want to waste their ammunition. \n\nThat prayer quickly proved fruitless. The Beaufighter circled lazily off to the west and then turned to come back at us much faster. He was on what was obviously a firing pass!!\n\nIt was a smart tactical move. We were almost to the lock. Sinking a boat as big as ours in the dredged access channel would close the lock for some time. \n\nThe Hercules radial engines surrounding the small cockpit were getting bigger and bigger in my vision, as the pilot lined up to rake us stem to stern with 20-millimeter fire. My last thoughts were, \"I'm truly sorry my love.\" \n\nThen the pilot abruptly pulled up and hurtled harmlessly over the top of us!! \n\nI looked down the length of the barge to see what had caused him to hold fire. What I saw was The Marchioness, Lady Bernadette l'Arqes d'Langdouc standing on top of the cabin waving prettily at the departing aircraft. She was wearing nothing above her waist but a beautiful smile. It was the most incredible act of bravery I have ever witnessed\n\nI had two additional thoughts; notwithstanding the fact that Bernadette had just saved our lives with her quick thinking. The first was, \"It takes nerves of steel to face flying death with your tits hanging out.\" My second was, \"And what a magnificent pair they are!!\" \n\nThe guy in the Beaufighter must have thought so too. Because, he did a climbing four-point victory roll as he departed. Then he headed back off down the Seine looking for less delectable quarry. \n\nBernadette turned to me with a coquettish grin and said, \"Men!! They are so predictable\"\n\n*****\n\nBernadette and I proceeded into the Vieux-Bassin of the Port de Honfleur. The only person visible was me, holding the steering tiller of the barge. I wasn't sure what to do once we got into the inner harbor. But Marcel helped me out. \n\nThe inner harbor of Honfleur is a perfect rectangle of Quais. The area is so picturesque that it has been a subject for artists like Boudin and Monet. \n\nTwo sides are bordered by a solid line of late Renaissance townhouses, which are narrow and multistoried in the Dutch fashion. A farmer's market was being held on one Quai.\n\nA figure was eagerly waving me into a slip behind one of the stalls. I docked and tied up the boat. \n\nThe man who greeted me was tall and thin, almost like a human candle. I stuck out my hand and said in a friendly fashion, Marcel I presume. He looked puzzled and asked the obvious question, \"Who are you and where is Pierre?\" ",
        "I said dismissively. \"Pierre was unavoidably detained. I'm sure he would want to be here if he could.\" I made it sound like he had been locked up. \n\nI added, \"My name is Victor. I have taken Pierre's place.\" I continued to tie up the boat, like the matter was settled.\n\nThe man checked me out. What he saw was a gorilla with a thick pelt of black hair slicked back like a gangster, twenty-two-inch neck, dark glittering eyes and a five o'clock shadow, on a very firm jaw. \n\nHe decided that if it looked like a thug and talked like a thug, it must BE a thug. So, he gave one of the evocative Gallic shrugs and said, \"What have you brought me?\" \n\nI said, \"This is a particularly delectable piece. One I have enjoyed all the way from Roumare. She is extremely enthusiastic, and she will make us all very rich.\" \n\nI gave him a conspiratorial wink and said, \"The rest of the cargo is in the customary spot.\" I dragged Bernadette out of the cabin. She looked submissive and unspeakably beautiful.\n\nThe douchebag's mouth actually fell open. Bernadette was in a ripped blouse, without a bra. Her prominent brown nipples showing through the rents. She looked thoroughly and extensively fucked, tousled hair and glassy eyed. \n\nThat wasn't an act. We had spent a couple of hours making up for lost time after dropping the Meiers. \n\nI thought Marcel was going to slobber all over my freshly scrubbed deck. The guy said awed, \"Merde!! They have NEVER sent me one like this.\" I could see him figuratively rubbing his hands together.\n\nMarcel walked up to Bernadette, who looked down at her feet, passively. He hefted and bounced one of her lovely tits, then he slid the hand down her smooth flat stomach to rub her mound. She just stood there obediently. \n\nHe pulled up her dress, exposing her naked lower belly. He rubbed the hand between her legs, coming back with a coating of man-juice and her fluids. He seemed satisfied. Bernadette's eyes got a momentary flash of utter humiliation. But, she was resolute and a warrior. \n\nI had told her that the piece-of-shit was going to do that to her, and I cautioned that Aurore's fate hung on her ability to let it happen. I saw her body tense. But she looked at the slimeball meekly without a hint of the fire-storm of anger that I knew was burning inside. \n\nHe said, \"But, she is superb Monsieur, a pi\u00e8ce de r\u00e9sistance. She will be our centerpiece.\" Then he reached in his pocket and came out with a small bag of twenty-frank gold coins. He said, \"Your fee.\" \n\nHe took Bernadette's arm and turned to walk off the barge. He thought our business was settled. I said direly, \"Wait my friend. I am not going to let you have this valuable woman for the usual price. I will need three times that amount before I will consider it.\" I was counting on him not having the cash. \n\nHe said, \"But Monsieur, I don't have that kind of money with me.\"\n\nI said, \"Well then, lead-on and I will follow. I'm sure you have that much at your establishment.\" I was almost certain that he would take us to the place where Aurore was being kept. \n\nI was surprised when Marcel led us to a beaten-up Peugeot. Gas was a problem, even then. However, his knocking-shop supported an essential aspect of morale for the troops who were constructing the Atlantic wall. So, he had liberal access to transportation. \n\nMarcel's place of business was ten miles away in Deauville. We rode there in his rattle-trap car, he and I in the front and our cargo sitting docilly in the back. I knew it was killing my ferocious little lover to act so tame. But Bernadette was grimly determined to save her friend, and part of the price was sacrificing her pride.\n\nIt turned out that, besides being an arrogant douchebag, Marcel was also the mastermind behind the whole operation. So, he just HAD to brag. \n\nHe said that he and Robert had done a stretch in La Sante together in the late '30s. They got in touch after the Germans showed up. Everybody knew that the Nazi's had a giant hard-on for the Jews. So, those two geniuses figured that the richer ones would try to buy their way to safety. \n\nGiven that assumption, they recruited a few more of their ilk. Over the past day, I had personally reduced that merry band by six souls, and as soon as we found Aurore I planned to increase the total by another. \n\nIt was ingenious - really. There were multiple revenue streams. First, there was the legitimate money that the desperate Jews paid to be whisked away from the Nazis. Then there were the ill-gotten gains from robbing and killing them. Those were the short-term profits. \n\nThe real money makers were any girls who were attractive enough to stock Marcel's whorehouse. A sensual beauty like Bernadette would be the gift that just kept on giving. \n\nDeauville is the closest resort to Paris. Hence, the rich and famous have cavorted there since before the Fin de Si\u00e8cle. It has a famous racetrack, glorious boardwalk and sandy beach. Naturally, there were a lot of hotels. The Wehrmacht had appropriated one of the less prominent, but still opulent, places to serve as a \"haven of relaxation\" for its officers. \n\nMarcel said that the idea came to him when the Huns started complaining about the quality of his merchandise. The German's complaint was that his whores were \u2013 well - whores! So, Marcel had to come up with an innovative solution, to \"develop\" a reliable stream of fresh, young beauties. \n\nThe answer came in a flash. He would remove their entire family, preferably in front of them. The shock and despair of witnessing such brutality would quickly convince those poor women to submit. \n\nMarcel bragged about the many well-bred young women he had \"broken\" since the New Year. He laughed and said, \"None of them were virgins. They may have been when they left Paris. But they weren't when they arrived in Honfleur, ha-ha.\" \n\nIt was excruciating, and I could see Bernadette seething in the back seat. I gave her a warning look. I would deal with Marcel soon, and Robert also had a visit scheduled.\n\nWe arrived in front of a small seaside establishment. It was two stories and obviously a hotel catering to the middle-class trade. The red, black and white flag with the swastika, flapping in the brisk sea breeze, proclaimed its new ownership. \n\nAs Marcel talked his way into an early grave, I was thinking about the end-game. We were originally going with Marcel just to find and free Aurore. But, after listening to that unspeakable piece of human excrement brag, I decided that a change of plan was in order. I wanted to permanently retire Marcel and his entire operation. \n\nThe problem was that, I didn't know how many people I would have to deal with, and cleaning house could get dangerous and bloody. Hence, I needed both Bernadette and Aurore safely out of the way. \n\nThat gave me an inspiration. I got out of the car and grabbed Bernadette by the arm. I was rough, and it caused her to squawk, but I had to convey my possession of her. She gave me a questioning look. But, she came submissively, flawlessly in character. I thought to myself, \"Now, THAT'S trust.\" \n\nI said, \"Marcel, my friend, I have a proposition for you. I want to enjoy this delectable little morsel one more time. She is very special. But I have already had her in the regular fashion so, I want a manage-a-trois. I'm a man of extraordinary appetites and I get so bored just fucking one of them.\"\n\nMarcel looked both impressed and reluctant. So, I added with my voice dripping persuasion, \"I will forgive your debt if you let her and one of your current stock of ladies amuse me. It will only be three or four hours, I've already had her several times today, and it will save you many francs.\"\n\nHis close-set, piggy eyes filled with greed. He said, \"That will not be possible Monsieur. My girls are very expensive unless you are a German. Most of them were virgins until very recently and my regular customers do not want them to be over-used.\" \n\nI nodded with understanding and said, \"But of course; however, you would have no hesitation if I added some of the money that you just gave me.\" I withdrew the little leather bag and jingled the coins inside.\n\nI saw the light go on. Marcel had no equal when it came to mindless greed. He said eagerly, \"I believe we can accommodate your wish.\" \n\nThe reception area of the old hotel had been turned into a cheap Parisian salon, like the types Madame Du Berry might have frequented. That is, if she had lost all basic sense of taste and refinement. \n\nIt was late morning. The place was open for business. But there were only three real beauties standing there waiting, tits out. They all looked totally broken and hopeless. \n\nI said scornfully, \"Is this all you have? They aren't worth even one franc.\" It was a bluff. I hated disparaging their looks. But, I didn't see Aurore. I would apologize to the ladies later. \n\nI said dripping disdain, \"I will have to take my possession and leave if you have no more women for me.\" This was the point in the game where we turned over the last card. \n\nThings got tense as I took Bernadette by the arm and started to walk angrily toward the exit. Marcel looked like he had swallowed a pigeon. I could see that his greed was choking him. \n\nHe said anxiously, \"I have one more girl, but she is not yet properly trained. She only arrived last month, and we have not had the time to teach her all that she needs to know.\" \n\nI had been reconnoitering the room as he spoke. Besides Marcel, there was a woman who was clearly the madam. She was a fearsome sight indeed; painted like Mardi Gras Parade float, with a peacock feather in her hair. Her impressive and well-preserved tits were in a late 19th Century bustier; the corset was helping them defy gravity. \n\nThere were two musclebound goons who were clearly there to keep order. It was a workable challenge assuming no Germans intervened. I said with fake excitement, \"But, I must see this girl. Perhaps she will justify the entire five-hundred.\" \n\nMarcel slobbered with greed. He said, \"Please excuse me Monsieur,\" and disappeared into a hallway. When he returned, he brought along a downcast and thoroughly defeated little bundle of femininity. \n\nAurore was shuffling miserably behind!! \n\nI jerked Bernadette toward me as if I was chastising her. I knew she would blow the entire thing if I didn't shut her up fast. I whispered fiercely, \"Keep trusting me,\" and threw her to the floor. I tried to avoid injuring her. It hurt me to do it. But I needed her to NOT react.\n\nI said eagerly, \"What a beauty mon-ami!! I must have her. Please show me a room immediately.\" \n\nThen I gestured toward Aurore and added, \"And bring this little morsel with you. I will provide my own possession.\" I picked up Bernadette and carried her down the hall. \n\nMarcel followed dragging a whimpering Aurore behind him. I said, in a tone of voice that brooked no argument, \"I'll take it from here.\" Then, I handed Marcel the bag of francs and slammed and locked the door. \n\nAurore didn't raise her eyes until the door closed. That was when Bernadette threw her arms around her friend, crying and gasping with relief. Aurore looked up startled, saw me, saw Bernadette and let out an ungodly shriek of recognition. There was an infinite degree of pain and desperation in it. It was heartbreaking. \n\nAurore had screamed so loudly that Marcel was back to pounding on the door. But, it was locked. He yelled, \"Do not damage her!! We will kill you, if you do.\" \n\nI said contemptuously, \"That was just a cry of shame. Don't you know how to train your women!\" I heard him walking away muttering to himself. \n\nThat was when two sobbing bundles hit me like the Paris-Simplon express. I threw my arms around both of them and just held them. It took several minutes to get them to stop crying. It took several more to get Aurore rational enough to talk to us. \n\nI said as gently as I could, \"We are going to get you out of here. But I have to find out what we are up against. Do you know enough about this place to tell me who is in the building right now?\"\n\nAurore nodded eagerly and said through her tears, \"There are two guards, Jacques and Pierre. Besides Marcel and Madame Ferlin there are five of us girls.\" \n\nI had seen four. I asked, \"Where is the other one.\" \n\nAurore sniffed and said miserably, \"There was a customer last week. He was a German. He liked to inflict pain. She is in the bedroom across the hall recovering.\" \n\nThen she burst into tears and said, \"She was my only friend. Her name is Stephanie and she is from a very good family in Lyon. Her parents were both killed.\" I added another count to Marcel's indictment. \n\nI said with grim fury, \"We are going to rescue everybody. But first I have to eliminate anyone who might object to us leaving.\" \n\nI looked sternly at Aurore and said, \"There are only two guards, yes? There are none elsewhere?\" \n\nAurore said, \"Only Jacques and Pierre are present at this time. There are six in total. But, they do not live here, and there are no Germans in the house at this hour.\"\n\nI said, \"Smart girl - good.\" Then I turned to Bernadette and handed her the pistol. I said, \"There is only one bullet. If somebody comes in, don't miss.\" \n\nBernadette gave me a resolute look and said, \"I cannot miss from only a foot away. I want to look them in the eye as they die.\" After what she had witnessed, Bernadette was an exquisite little ball of hate. I didn't blame her.\n\nI put my brass knuckles on and started to slip out the door. Then something occurred to me. I said, \"I'm going to eliminate the muscle, now. So, distract them with a little sound. They are going to expect a lot of sexual music from this room.\" \n\nI heard loud moans and cries of abandoned passion as I started down the hall. It was excellent cover. But, it gave me pause. If a woman can be that convincing without any male present, how much of what I'm hearing in the actual situation is due to me; and how much is just the woman putting on a show? Makes you wonder doesn't it?\n\nI had known that Marcel would eventually try to kill me. I was a loose end, AND I had disrespected him in front of his crew. So, the first thug was posted at the end of the hall; just as I had anticipated. This guy was the biggest of the two, and he was idly holding a Walther at his side. \n\nSince I couldn't warn the others, I had to eliminate this dude quickly and without a fuss. Fortunately, he had his back to me, smoking what smelled like a Gauloises. \n\nThe human neck is necessary because it gives the skull freedom of movement. But it is also the body's greatest point of vulnerability. My arms and shoulders were fashioned by ten-hour days of repetitive lifting. The man's neck had nothing like my strength. Besides, he was relaxed, enjoying a smoke. \n\nConsequently, it was a simple matter to suddenly and abruptly grab his head from behind and give it a violent twist. There was a resounding \"snap\" and the guard dropped the gun and sagged lifeless. \n\nI didn't pick it up. There were still four guards somewhere else, and there were always the Germans. I didn't want to alert anybody by conducting a shooting match. I leaned the dead guard against the wall. Then I went hunting for his friend. \n\nThe other guard was sipping coffee at a table in the salon. The Madam was sitting with him. I strode rapidly toward my target. It took him a fatal second to register what was happening. By then, it was too late. \n\nI covered the intervening distance in three long strides and immediately launched a heavy right hook at his midsection. It had all my weight and strength behind it. \n\nAside from the one guard's orders to kill me, they were just doing their job. So, I only planned on putting this one out of action. Unfortunately, he started to twist to evade me. \n\nThe result was devastating. Because he was twisting toward me, the blow caught him on his sternum, right above his heart; instead of in his ribs where I'd aimed it. A shot like that, with all my strength behind it, at that point of impact, cracks the breastbone and stops the heart. His eyes rolled up and he plopped down lifeless. \n\nThe Madam shrieked. I grabbed her. She pulled a little knife out of a garter. I deflected it by raising my shoulder and she stabbed me in the left deltoid. It hurt like a bitch, but any higher and it would have been into my neck. \n\nI caught her knife hand with my left and squeezed until she dropped it. Then, I dragged her up the hall, opened the door and threw her in with the girls. \n\nIt was Marcel's turn now. As I walked back down the hall I began to hear thudding in the room. Then a blood curdling scream. I had given Bernadette my flick-knife. I suspected she was putting it to good use. \n\nMarcel came rushing up the hall. I met him at the end. Actually, that statement is not quite accurate. My right fist, sans the brass knuckles, met him at the end of the hall. I didn't want him dead; yet! \n\nHe hit the ground like a poleaxed steer. I grabbed him by his ankles and hauled him back to the room, head bumping on the carpet. By my count, the bag was now complete. \n\nI opened the door, dragged Marcel inside, then closed and locked it. The Madam was lying huddled in the middle of the floor, naked and sobbing. Apparently, the only thing that Bernadette had done with the knife, was cut her clothes off. My fierce little wildcat was brandishing the gun at her now.\n\nAurore, who, no doubt, had her fill of violence over the past month, was standing off in a corner looking like she was about to throw-up. I tossed Marcel's limp form next to the Madam. I said to Aurore, \"The two guards are dead. Are these two the only ones we need to be worried about now?\"\n\nAurore looked at me with misery in her eyes and said, \"Yes Monsieur, these are our captors.\"\n\nI said to Bernadette, \"Take Aurore and Madame Ferlin and round up the girls. I will meet you in the salon.\"\n\nBernadette gestured with the gun. Madame Ferlin rose warily, eyeing Bernadette. Bernadette fired a shot into the floor, right between the Madame's feet, thereby using up her last round. \n\nIt pissed me off. I had intentionally tried to avoid making any type of noise that might attract attention. But, Bernadette was gripped by out-of-control fury. She had seen and heard too much.\n\nIt turned out to be a masterstroke. The Madam didn't know that the gun was empty, and its noise made an eloquent point. She shrieked in terror and scampered naked toward the door. I couldn't help noticing that; as old as she was, she had a body to die for. \n\nYep, I'm still a hound.\n\nThe door to the room closed, leaving me and the mastermind behind. I squatted down next to him and slapped him awake. He opened his eyes groggily and then a look of fear came over his face. \n\nIt was utterly gratifying. I was an avenging angel, come to smite the ungodly with the sure swift sword of Old Testament justice, and he knew it.\n\nI said coldly, \"You are going to die now. I wish I could put all of your victim's suffering into your death. But I can only kill you once.\"\n\nHe crapped himself and then began to sob like a little girl. I said, \"Think about your sins as my fingers close around your throat. Maybe God will forgive you but nobody here on earth is going to.\" \n\nHe said, \"Please Monsieur, show me mercy.\" \n\nI laughed and said, \"Just like the mercy you showed all the families you murdered and all the women you raped and enslaved?\" \n\nHis eyes got a look of resignation. I slowly placed my fingers on his neck. It takes six minutes for the brain to die. I looked into his eyes throughout that entire process. I wanted him to see what just retribution looked like. \n\nI suppose you think of me as mindlessly cruel. I probably am. But don't judge me too harshly. Because, you have the same potential. It only takes the right inducement, to coax it out of its hiding place. \n\nIt might have been more difficult to strangle the guy, if I had not spent the whole journey tapping into my personal wellspring of visceral rage. But, the pure horror of the past week, the human misery I'd witnessed, had temporarily unleashed the beast, always lurking in the dark corner of everybody's soul. ",
        "So, I walked away from Marcel with a clear conscience. He had been the source of a lot of misery. Now all I needed to do was get his five victims to safety. \n\nI strode into the salon, only to find that Bernadette had already organized the women. I should have expected that. The three I'd initially seen, and Aurore, were modestly dressed. It looked, like they were going for a ride in the country. They were all well-bred girls from good families. Naturally they would have packed suitable clothes; that is, before they were kidnapped. \n\nThey had a new woman with them. She couldn't stand on her own. Aurore and one of the women supported her. They were all weeping, even Bernadette. The madam was quivering naked in the corner. \n\nI walked over to her and said, \"You have committed unforgivable crimes against your Country and your Countrywomen. I will not kill you. However, we are going to have to tie you up. If you tell the Germans, before we get away, I will make a point of hunting, you down and killing you in a very painful and degrading manner. \n\nThe woman nodded meekly. She said, \"Marcel made me do it. I was disgusted by it all.\" I let her survive. But. I also felt a lot better about the swathe of destruction that I had cut through that awful place. \n\nWe loaded the Peugeot, five girls in the back, sitting on each other's lap. Stephanie, who had damage done to her lady-parts sat up front with me. The girls we'd rescued were all Jewish. So, I was headed for the synagogue on the Boulevard Mauger. \n\nHow did I know that there was one there? Madame Ferlin told me. She was also Jewish. It was part of the hold that Marcel had over her. \n\nThe synagogue was a big stone building that might have been a residence at one time. It had a well-maintained iron fence in front of it and a gate. I stopped the car, got out and opened the gate. The six women squeezed themselves out of the car. \n\nBernadette strode resolutely through the gate and up to the door. The others trailed timidly behind; Aurore and another girl still supporting their friend. Stephanie looked like a wounded warrior returning from the front. In many respects, she was. \n\nI drove the Peugeot back through the roundabout at the end of the Boulevard and abandoned it next to the Deauville Bassin. The Bassin was full of Hun E-boats. That underlined the jeopardy we were in. I could handle a few French goons. But I wasn't going to be able to take on the entire German navy. \n\nI exuded innocence as I got out of the car and sauntered back to the synagogue. I'd let the Heinies figure out how Marcel's vehicle ended up at one of their naval facilities.\n\nI knocked on the door and was admitted by a wizened old man. I assumed he was the Rabbi. \n\nI'd stopped going to church when I began working the docks, and Lutherans aren't exactly cognizant about other religions anyhow. So, I knew zip about the Jews, only that the Nazis seemed to have a \"thing\" for them. \n\nThe old man was kindly. He knew that I was the one who had delivered the girls. He didn't know what I had done to free them. If he had; perchance, he might view me differently. \n\nHe directed me to the cellar. That seemed to be the typical place to find Jews in occupied France. \n\nThe girls were being soothed and reassured by my stalwart little partner. All of them were suffering from what we used to call \"shell shock.\" They had the classic symptoms; passive, withdrawn, thousand-yard stare, and nervous. They must have gone through hell. \n\nThe girl Stephanie was being examined in a secluded corner. It was being done by an older woman who radiated competence. She was clearly either a doctor, nurse, or midwife. \n\nHowever, the thing that caught my attention was the big short-wave radio sitting in the other corner. A young man was working a telegraph key. The Rabbi came up next to me and said, \"The Temple is a place of worship. But it is also traditionally a place of resistance. How were these girls harmed?\"\n\nI said, \"They and their families are victims of an unspeakably wicked plot. The Germans created the situation, with their pogrom against your people. But their own countrymen sold them into sexual slavery. I have already closed the account on all-but one, and he is living on borrowed time.\"\n\nThe Rabbi gave me a look that distilled the travails of the Jewish people into a single glance and muttered, \"Good!\". \n\nI added, \"They were trying to get to safety. Can you help them?\" \n\nHe brightened and said, \"Of course we can. We have secure shortwave contact with the British. We are so close to the German naval base that it is impossible for the Germans to sort out our signal via RDF. We talk to England regularly and we can arrange to evacuate these women via ship.\"\n\nBernadette had drifted up to my side as I spoke to the Rabbi. I turned to her and said with triumph in my voice, \"Get the girls ready. We are going to England.\"\n\n*****\n\nHeavy fog is a common phenomenon in the English Channel, particularly in the late spring. And we were in the middle of a classic pea-souper. That was a good thing, and part of the plan. \n\nThe French fishing boat was at the rendezvous point. Rabbi Blum's little cell of intrepid agents had arranged that with the Brits. We were waiting for the arrival of the Motor Torpedo Boat, which had been sent from Southampton. \n\nAs might be expected, the British considered my information valuable. The extent and shape of the French underworld's collaboration with the Germans was something the Brits wanted to know about, if only for their own intelligence purposes. That justified the pickup. \n\nThe deal was simple. They would settle the girls in permanent and comfortable surroundings. In return, we would tell them everything we knew about French criminal activity in support of the Germans. \n\nNone of the woman had families anymore. So, they would be leaving France, for a new life in England. It would be a difficult transition. But, it was light-years better than living as a whore in a German Army bordello. \n\nI knew that Aurore would marry well, once the male population of Great Britain got a glimpse of her. She was still a voluptuous little sex-pot.\n\nIt took a couple of weeks to arrange the pickup. The girls spent it recovering in the basement of a house in Benerville-sur-Mer, which was a couple of miles away from Deauville, right on the ocean. The house was a Resistance operations center. \n\nThe irony was that the Germans, whose troops were Marcel's customers, were building a huge battery on the hill right behind the town. The girls' ability to hide next to a German installation illustrated the problem the Hun's had unraveling the strands of the civilian population. \n\nThe French were just getting the resistance rolling in 1941. It was a small group, who mostly did intelligence gathering and some sabotage of sensitive targets. The vision and courage of those people impressed me. They had given up their comfortable lives, while most of their countrymen simply accepted the Nazi yoke: as a cost of doing business. \n\nI began to wonder if they couldn't use a man with my particular set of skills.\n\nWe heard the sound of the big Packard engines off in the distance. The Resistance guys who were manning the boat started the clickity-clack Morse signaling with the Aldis lamp on top of the deckhouse of the trawler. \n\nA long, grey, lethal shape emerged from the fog and maneuvered next to our boat. It was one of the Brit's Vosper Motor Torpedo Boats, or MTB's. Those things were heavily armed and could do fifty miles an hour on the water. So, they were perfect for this kind of clandestine work. \n\nThe two boats were tied together to make the transfer. Fortunately, the swells were at a minimum. We would have had a problem if it had been rough weather. I had my arm around Bernadette as they began to assist the women on-board. She was looking at me with love and pride. \n\nIt was time for me to tell her.\n\nI said, \"Well we made it doll. We saved your friend. Now I need you to get on that boat and finish the job.\" She looked at me alarmed. I hesitated. It was killing me. But, I knew what I had to do. \n\nTwo months ago, I was a humble bartender without a care in the world. My only interest was keeping my head down and serving the drinks. The Germans were everybody else's problem. \n\nThen this brave, passionate and virtuous little woman came into my life and taught me about self-sacrifice and commitment to others. Her innate sense of honor, her humanity and strength of character had made me into a much better person, one who couldn't just stand by and let other people do the fighting. \n\nSo, I was going to stay in France and work with the Resistance. I knew that they could use an old doughboy, somebody who spoke fluent German and was good in a fight. And, I knew that Bernadette could give the Brits the same intelligence that I could. \n\nSomebody had to go along with the girls. It was part of the deal, and the thought of my dear little woman safe in England, out of harm's way, would free me to do whatever was necessary to help her cause. \n\nI looked into her beautiful, shining eyes and said, \"I'm not going with you doll. Somebody has to stay and straighten out Hitler, and I think I'm the man for the job.\"\n\nHer heart shattered. I could see it in her eyes. My own heart had already been broken. It happened the moment I arrived at my inescapable decision. She let out a little cry of anguish and threw her arms around me. She said, \"Then I'm staying with you. We can fight them together.\" \n\nShe planted the hottest kiss on me. I reciprocated. Then I unwound her arms and said, \"That's not the way this deal works. We have to tell the British chapter-and-verse what happened.\"\n\nI looked at her, willing her to understand, and said, \"You can do that as well as I can. The Brits are risking their necks to pick us up, and they are going to give Aurore and the rest of these women new lives and hope. But, they need something in return. So, you have to do this. We can't leave them high-and-dry.\" \n\nI could see acquiescence come into her eyes. Bernadette was an intelligent and pragmatic woman and she understood that she was the key to the deal. So, she had to go, to help those poor women. \n\nShe let out a little sob. And without another word she turned and walked resolutely toward the MTB. She faced me bravely, with tears in her eyes and mouthed, \"I go where you go.\" It was what she had promised me after we first made love; a hard-case like me? tears in his eyes \u2013 impossible?\n\nThen she raised her arms to allow the British sailor to pull her up and onboard the MTB. The three Packard engines roared into life. The big grey warship circled like a marauding shark and headed back into the fog. My last sight of Bernadette was her sweet, crying face.\n\n*****\n\nIt was 3 AM and a dozen of us were crouched in the bocage surrounding a clearing outside Bayeux. I was leading a Macquis cell now. I had hooked up with them after I returned from Paris. \n\nI had journeyed down there to settle a debt. Robert was astonished to see me. He passed away shortly thereafter. It was an agonizingly slow and painful death. The ledger was officially closed.\n\nIt had been a rough couple of years. The pace had picked up a lot since the Americans entered the War. And, the Macquis forces in Normandy had expanded. We were now so well organized, that we were coordinating on a regular basis with the Brits Special Operations Executive, or the SOE. \n\nTheir agents came and went with our assistance, executing their missions and then returning to Great Britain. I could also see the endless formations of Fortresses passing overhead and we regularly helped airmen who didn't make it back. We handled that exfiltration the same way we had smuggled the girls. \n\nThe Huns were getting all they could handle from the Russians. As a consequence, the soldiers stationed in Normandy were the sort of troops you wouldn't want in combat, too young, too old, wounded, or just too hopeless to be of use anywhere else. \n\nI had gotten to the point where I only thought about Bernadette every ten minutes. I yearned for her constantly. That was a laugh. A mug like me pining away like a starry-eyed teenager. It was fucking embarrassing. \n\nBut the truth was, Bernadette's image was resting in the niche in my heart that was reserved for the one person I loved more than life itself. As corny as THAT might sound, it was the plain and simple truth.\n\nI wondered what Bernadette and Aurore were doing. Those two beauties must be fending off herds of dashing and handsome British men. The thought gave me fits of jealousy. But that was the choice I had made, and it was something I was going have to live with. \n\nI was a professional tough-guy. I knew I could face-up-to even THAT. Nonetheless, it was a painful burden to bear, and the deep longing never went away. \n\nThe Macquis did its best to make the Hun's life miserable. That mainly amounted to sabotaging their armored trains. \n\nThe Heinies brought men and material up to the Atlantic Wall via rail. Regular trains were vulnerable to air strikes. So, the Germans loaded their critical stuff onto railcars with armor and antiaircraft weaponry. \n\nThose were tough nuts to crack. Even for the rocket firing British Typhoons and the big lethal American Thunderbolts. So, the Macquis cracked 'em for them.\n\nThe Huns were beginning to feel the heat as both the British and the Americans probed the Atlantic Wall. So, they were stepping up their military traffic to Normandy. We all knew that the big show would be in the Pas de Calais. The group I'd hooked on with was in Normandy. But, we still tried to do our part.\n\nTonight's dark of the moon exploit was to restock our larder of Sten guns and Amatol; as well as to deliver some French super-agent. \n\nThe Sten wasn't elegant. But it was so easy to operate, that it could turn your grandmother into a killing machine. The agent was a super high priority delivery for the SOE. \n\nThat's the reason why we were hiding in the shrubbery waiting for the Westland Lysander to make its final approach. We'd carefully cleared and marked the landing field. Then we humble peasants would roll out the red carpet for the arriving French hot-shot.\n\nThe Lysander was a remarkable aircraft. You could almost land it in your backyard and it could deliver a lot of useful cargo. The pilot came in low, like they always did to avoid the Heinie's radar. The Lysander would be mincemeat if it ran into a real fighter. \n\nHe landed hard and taxied over the bumpy field, jazzed the engine to turn for takeoff and then parked. \n\nThe aim is always quick in-and-out. So, we rushed to unload. I was picking up a crate of Amatol - very gingerly I might add. Detonating it would cause a big boom and produce a large hole in the ground, where I used to be standing.\n\nThe VIP passenger opened the door of the Lysander and climbed down the steps. This was the guy who was going to bring us humble Maquisards, the gospel according to Winston Churchill. \n\nThe fellow was supposed to be expert in explosives and train ambushes. Those were the exploits that we ran the most. The Brits had spent a lot of money and time teaching this dude all the latest tricks. The aim was to have him bring the new Resistance fighters up to snuff, not do the ambushes himself. That was what expendables like yours-truly were for. \n\nIt was a brilliant strategy, really. We had plenty of willing volunteers. But they were mostly useless. That was because they didn't have any of the necessary skills. An expert in the fine art of mayhem, like this guy, was a valuable addition to our merry band. \n\nBut, it still pissed me off. The last thing I wanted was some snotty Frenchman meddling in my business. Nonetheless, there was a war to fight and we all had to make sacrifices. So, I was even willing to endure this new clown. That is, if his tradecraft was as good as everybody said it was. \n\nI wondered if he had run into Bernadette? Maybe he could tell me how she was doing.\" Then the godawful thought struck me, \"Maybe he's FUCKING Bernadette?\" It would be my luck. She's THAT beautiful and they WERE both French. \n\nThat nugget of speculation spiked my jealousy meter. But I told myself that I was the one who had chosen to stay. With that depressing thought in mind, I bent down and picked up the heavy crate of Amatol. I hefted it and began to walk away, muttering a surly, \"Welcome to the War, pal,\" over my right shoulder\n\nAmatol isn't as volatile as nitroglycerine. But it is still something that you handle with extreme care. Of course, the very last thing you want to do is drop it. That almost happened when the new French super-agent replied in a sweet husky voice, \"I told you, I go where you go. My love has no conditions.\"\n\n****\n\nThe place was full of cigarette haze and joy. It was New Year's Eve 1944 and events had come full circle. \n\nBernadette and I were sitting next to the piano while Boggsy played the best jazz in Paris. The City had been liberated in the late summer and it was now serving the same purpose as it had back in 1918; a place to blow off steam.\n\nBoggsy'd found his own Resistance group. But, being Boggsy, he had managed to stay in Paris. His group was the OSS's legendary \"Black Rattlers.\" That outfit was a collection of African-American ex-pats. Even Josephine Baker worked for them. \n\nThe Master Race paid no attention to people like Boggsy. Because after all, they were untermensch; servants and entertainers. That was indeed a fatal error. Because, those were the people who heard and saw everything and could go anywhere unnoticed.\n\nBoggsy still kept the ladies satisfied. He just had a side job; working for the OSS. He had an intricate and captivating style in both his keyboarding and his garroting.\n\nA lot of war was yet to be fought. But, Bernadette and I had done our part. The Germans had spooked us with a major offensive in the Ardennes a couple of weeks earlier. It caused a bulge in our lines. But the word was that the Heinies had been stopped on Christmas day, at a place called Bastogne. \n\nI looked at the humble gold band on my love's finger and smiled. She was gazing back at me with the same adoring look. She knew what I was thinking. It had been a thrilling couple of years. Now, we were ready to enjoy married life. \n\nWe had spent the past two years blowing up rail lines and bridges and dodging Nazis. Bernadette never left my side. She told me that she joined the SOE as soon as she was sure that Aurore didn't need her any more. Because her only aim was to get back to me. \n\nI had a hard time while we were apart. But, from her description, it sounded like she might have had it tougher. She went through a rigorous program in the Scottish Highlands. It was the same place the Brits trained their commandoes. \n\nI had changed a lot since my bartending days. But, my dear Bernadette had evolved even more. She used to be a gorgeous French aristocrat. She was still that. But, now, she was also a tough and efficient little killer. \n\nWe were equal partners in everything we did. We blew a lot of bridges and ambushed a lot of trains. Our love grew with the danger we faced. We fucked in caves, bombed-out buildings and hidden basements, and it was touch-and-go at times. But my steadfast little companion was always by my side; blazing Sten gun held delicately in her exquisite aristocratic hands. \n\nAnd, through it all we managed to make a slight difference in what happened on the sixth of June. \n\n*****\n\nIt was an overcast and rainy Tuesday morning. We were just waking up in the operations center in Benerville, when all hell broke loose on the hill behind us. \n\nWe rushed outside to see a firestorm of heavy shells landing on the Mont Canisy battery. I looked out to sea and there were three big battleships blasting the shit out of the Hun gun positions. ",
        "I listened, and further up the coast to the north I heard the constant deep boom of naval bombardment. I thought to myself, \"Is this the invasion? I thought it was going to be in Calais??\" \n\nWe rode our bikes the 8 miles to Cabourg and hurriedly climbed a hill. From the hill, we could see the panoply of thousands of ships and landing craft spread out in front of us. They were hitting what we would later learn was called \"Sword Beach.\" \n\nYou might wonder who would be crazy enough to ride a bike along a bucolic French lane in the middle of the D-Day invasion. But you have to understand that we didn't know what was happening and we were both totally inured to danger at that point. \n\nSo, we sat on a dune and watched the Heinies get their asses handed to them. My arm was around Bernadette's tiny waist and she was snuggled against me, just like she was the first time we made love. That was in the middle of a bombardment too. \n\nI looked down at her beloved face and we kissed. Then it hit me. This was the beginning of the end. Our mission was over. I said, \"I've just been waiting for the ball to get rolling before I asked you this.\"\n\nShe looked up at me questioningly. I paused as a line of destroyers finished pounding the German batteries at Merville. Her beautiful eyes were full of expectancy and merriment. \n\nOnce the thunderous salvo was complete, I continued with, \"Now that we have our life in front of us, I was wondering if you would do me the honor of being my wife?\" \n\nEPILOGUE\n\nThe conference room in the new CIA Headquarters was small. I didn't need that much room. A few of my co-workers showed up to see Dick Helms hand me my gold watch. But all of the people from Wild Bill Donovan's day had been put out to pasture for bad behavior. \n\nMy wife and I were the only ones left of that group. But that was because our language fluency gave us special status. \n\nSo, we spent a career working the CIA's anti-Stasi branch. We had been running ops in East Germany almost from the minute we stopped shooting at the Krauts and started shooting at the Russians. \n\nWe played a lot of deadly games with our East German counterparts in the back alleys of Berlin-Mitte. \n\nNonetheless, all I really cared about was the elegant little woman who was standing by my side. Even though she was fifty-two and had lived in McLean Virginia for a mere twenty years, she still radiated her trademark French style, sensuality and aristocratic elegance. \n\nBut this staunch little woman was no show-pony. She had her Croix de guerre, her British Intelligence Cross, and her American Distinguished Intelligence Cross pinned to her tasteful couture dress. She was wearing those medals to honor me. I had the same set of decorations.\n\nAll I cared about was her. We had built a life and raised two fine children together and throughout that time she had been my wife, my lover and the foundation of our family's happiness. She was always with me. We supported each other in every endeavor in life. \n\nBernadette was a Marquis's daughter and I was just a barkeep. The war had promoted me to some degree of prominence. But career success was insignificant compared to our one important achievement. We had lived the promise that we made to each other on the heaving deck of that torpedo boat \u2013 \"We are one soul. I go where you go.\""
    ],
    "authorname": "dtiverson",
    "tags": [
        "sirens song story",
        "adventure",
        "mystery",
        "retribution",
        "commitment",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-forests-of-the-night"
}