{
    "title": "I Will Love You Forever Pt. 2 Ch. 02",
    "pages": [
        "No one spoke as Kenji drove to where Joel said he was staying. Each of them was wondering what was going to happen next and each of them afraid for different reasons. Joel was afraid for himself, it had been lucky thing that Andrew had broken his left hand as opposed to his right, he wouldn't be able to take notes or do class work otherwise. Patricia as worried about Kenji, she knew that although he was at heart a gentle spirit that he wouldn't hesitate to come to her defense no matter the cost. She said her prayers that nothing happened that he would need to defend her. They weren't worried about the name-calling, but if Andrew Kelley or anyone else touched her ..... Kenji was afraid not for himself but for Patricia and Joel, he didn't know how he could protect both of them but Patricia was the priority. Joel had to learn how to stand up for himself; he had to learn how to defend himself against the likes of Andrew Kelley.\n\n\"You can let me out here.\" Joel said after telling Kenji to make a right hand turn.\n\nKenji and Patricia looked around and then at each other.\n\n\"Where is your home?\" Kenji asked.\n\n\"Not far from here.\" Joel replied, \"I can walk from here.\"\n\n\"We can take you to your home.\" Kenji said, \"It is no trouble.\"\n\n\"No thank you.\" Joel replied softly as he picked up his bag grimacing when he bumped his left hand. \"Thank you for helping me.\"\n\nKenji watched Joel as he got out of the car and walked away, he was struck at how lonely Joel looked and at the defeated set of his shoulders. He wondered who had beaten him down so badly.\n\n*******\n\n\"What is it kirei?\" Kenji asked after they were back on the road.\n\n\"I want you to promise me something.\" Patricia replied.\n\n\"If it is a promise that I can keep.\" Kenji replied already knowing what the promise was.\n\n\"Promise me that you won't get into a physical fight with Andrew Kelley no matter what he does.\"\n\n\"I cannot and will not promise you that.\" Kenji replied. \"I can and will promise you that I will try to avoid altercations with him of any kind.\"\n\n\"Kenji....\"\n\n\"I know what you are thinking but if he harms or physically threatens you in any way then I will address the issue.\"\n\n\"What about Joel?\" she asked.\n\n\"I will help him as much as I can but you are my priority.\"\n\n\"I understand that but I don't want our chances of graduating blown to bits because of Andrew and his friends.\"\n\n\"Understood but Kirei, what kind of man and husband would I be if I allowed something to happen to you just so that I could meet my goals?\" Kenji asked, \"I would rather work as a servant than have you harmed in any way. You and the children will always come before anything else.\"\n\nPatricia didn't argue any further, she heard the resolve in his voice and knew that it was pointless.\n\n*******\n\nJoel waited until he was sure that Kenji had pulled away before beginning his walk home. He had lied when he told them that he lived close to where they dropped him off, he actually lived more than ten city blocks away. He bit back a groan as he tried to put his bag into his left hand, tears of shame ran down his face as he remembered crying and begging like a baby not to be hurt. Why did he think that once he became an adult that things would change?\n\nHe began walking and ended up in front of an abandoned store. After looking around, Joel slipped to the back of the building and into the back door. He had to get moving, it would soon be too dark for him to read. He took the lunch leftovers from his bag and divided it into thirds, he had enough for three meals only and if he had to he would spend a little of his money to supplement his meager rations.\n\nThe store had belonged to his parents and now belonged to him. He knew that if he sold it his life would be so much easier but this was the one place where he had always felt safe and loved. When his parents died, they left him enough money that it paid for school and books but little else hence no electricity. He only left the water on out of necessity... he had to bathe and wash his clothes.\n\nAfter dividing the food up Joel decided that he couldn't study, his hand throbbed so badly that he wouldn't have been able to concentrate anyway. He put the food away and went to his \"room\" where he undressed being careful not to bump his hand. He lay on the mattress and closed his eyes trying to rest but Kenji and Patricia kept coming to mind. Tears started again as he thought about his humiliation and the thought that he would never find the kind of love and respect that Kenji and Patricia clearly had for each other.\n\n******\n\nThey were late and Niko was almost beside himself with panic as he gripped the handkerchief that he was keeping safe for his papa. Uncle Ralph told him that they would be home soon but that seemed like such a long time ago and the sun had already gone down.\n\n\"Come on Niko and eat.\" Abby encouraged, \"They'll be here soon.\"\n\nHe wasn't convinced; he could tell that Aunt Abby and Uncle Ralph were getting worried although they were trying not to show it. The only one who seemed oblivious to the worry was Marie who happily ate her dinner as she chattered about whatever came to mind.\n\nAs soon as he heard the car pull into the garage Niko took off at a run and ran right into Patricia. He couldn't help it; he started to cry as she wrapped his arms around her legs.\n\nPatricia picked him up and hugged him, \"It's alright, we're home now.\" she soothed grateful that it was the weekend.\n\nKenji left their bags in the car and went to them, \"Niko, all is well, and we are here now.\"\n\nNiko reached for Kenji and hugged him. Kenji returned the hug and wondered why Niko was still so fearful of their leaving. It was something that he planned to find out and address over the weekend but not now, Niko was much too upset.\n\n\"Here papa.\" Niko said holding out the handkerchief.\n\n\"Thank you Niko, would you do me the honor of holding it for a while longer?\" Kenji asked.\n\n\"Yes papa.\" Niko replied now visibly calmer.\n\n\"Papa!\" Marie screamed when she saw Kenji, she had already greeted Patricia in like manner.\n\n\"Hello pretty one.\" Kenji said putting Niko down and picking Marie up.\n\nNow that his parents were home, Niko was more than ready for dinner. By mutual unspoken agreement, Kenji and Patricia agreed to spend the evening and the next day with Niko and Marie. It was early in the semester and they wouldn't always be able to set their studies aside.\n\n\"What would you like to do this evening?\" Kenji asked Niko.\n\n\"Will you read with me?\" Niko asked.\n\n\"Of course, go pick out a book.\" Kenji said with a smile.\n\nNiko grinned happily; he loved reading with his papa and mama. He took Marie's hand and led her out of the kitchen. When they were gone, Kenji gave Patricia a smile that made her blush and release a spurt of moisture between her legs.\n\n\"Come here kirei.\" Kenji said patting his lap when he was sitting.\n\nPatricia had long given up on trying to convince Kenji that she was too heavy to sit in his lap and besides she liked the feel of being in his lap especially when he was hard, as she knew that he was now. She got out of her chair and made her way over to him, sat in his lap and wriggled her bottom to tease him. He was hard as she knew that he would be and smiled at his soft moan as she teased him knowing that he loved the tease as much as she loved teasing him.\n\nKenji kissed her softly and held her still in his lap but not really wanting to. He loved these moments with her and was looking forward to many, many more such moments as they and she kept him focused. They sat quietly until Niko came back into the kitchen carrying a book.\n\n\"What happened to the car?\" Ralph asked when he came in from taking out the trash.\n\n\"Niko please wait for us in the living room.\" Kenji said with a reassuring smile.\n\nWhen he was out of earshot, Kenji told Ralph what happened.\n\n\"Shit!\" Ralph swore, \"I saw that most of the slurs were directed at you.\" he said.\n\n\"That is fine as it keeps the attention on me and not Patricia.\" Kenji replied.\n\n\"I understand.\" Ralph replied \"but you know that it's only a matter of time until they drag Patty into it.\"\n\nKenji was way ahead of him, he had already thought about that and would deal with it when and if it happened. But in the meantime, he would do everything humanly possible to avoid any confrontations with Andrew Kelley.\n\n******\n\nAndrew was angry and intrigued at the same time. The \"Jap\" as he had taken to calling him hadn't reacted in the way that he would have had it been his car. He would have hunted whoever it was down and beaten them within an inch of his life. However, he didn't sense any real anger coming from the \"Jap\" instead he remained calm, checked out the car before allowing his wife and the Jew get in. \n\nHe began to wonder just how far he could push before Kenji pushed back and what would it take to break him. One sure way was to fuck with his woman but even he drew the line there. He might make comments to and about her but touch her? Hell no and it had nothing to do with the color of her skin but everything to do with the fact that black or not she was a woman.\n\nAndrew peeked in the living room to check on his father who actually looked better than he had since his return. He wasn't staring off into space and absently rubbing the knee of the missing limb. His eyes were actually bright, clear and focused as he read the paper. \n\nThe change hadn't occurred suddenly but over a period of days, starting with him asking for the paper and then it had progressed from there. He was now eating everything on his plate without coaxing and was actually talking about getting a job of some kind.\n\n\"There's gotta be something that a fella with one leg can do.\" Harlan said as he ate his dinner of meatloaf and mashed potatoes that his wife Evelyn brought home from the diner.\n\nAt first, both Andrew and Evelyn were concerned about what seemed to be a rapid change in attitude but in thinking about it, it really hadn't been that rapid. It started with Harlan asking for the newspaper and progressed from there. Andrew wanted to know the reason for the change but had been too afraid to ask.\n\nNow tonight, Harlan Kelley was bright eyed, bushy tailed and reading the classifieds. He was tired of sitting around on his ass and feeling sorry for himself. He was also tired of Evelyn having to work to support them, it was time for him to man up and take care of his family.\n\nThere was something else on his mind- Andrew. He didn't like the anger and hatred that he felt coming from his only child. Tonight they were going to talk; Harlan wanted to tell Andrew about hate and what it could do to a man. He knew that Andrew would be surprised to know that he didn't hate the Japanese for the loss of his leg, it was war, he himself had maimed, and killed god knew how many sons, fathers and husbands. There was nothing personal to it, he didn't know them, they didn't know him and all of them were fighting for what they believed to be right. \n\n\"Here's dinner.\" Andrew said as he sat the plate of warmed food on the tray in front of Harlan.\n\n\"Thanks son.\" Harlan said as he dug in, \"aren't you eating?\" he asked.\n\n\"I'll eat later.\" Andrew replied. \"Pop? What happened? I mean you're so much better.\"\n\nHarlan took another bite of his dinner and laid the fork down.\n\n\"Andy, there comes a time when a man's gotta stop wallowing in self pity and get moving and for me that time is here and long past. I've been sitting on my ass watching your mom work her fingers to the bone trying to support us and it isn't right. This isn't the life that I promised her....\"\n\n\"That's because of the damned Japs!\" Andrew blurted out, \"They took your leg and almost killed you!\"\n\n\"Andrew....\"\n\n\"And now they're here going to college! I have one in my class! It isn't right they should all be sent back to where they belong!\"\n\nHarlan knew that Andrew was angry but until now, he didn't know just angry he was.\n\n\"Andy that was war. There was nothing personal; I was shooting at them too.\"\n\n\"You don't hate them?\"\n\n\"No I don't hate them.\" Harlan replied, \"I don't know them to hate them any more than they know me. Do I wish that I had my leg back? Damned straight I do but I take pride in that I lost it in the service to my country. The war is over; it's time to go back to living.\"\n\nAndrew wasn't buying it; he didn't understand how his father could have what he considered to be a cavalier attitude.\n\n\"Andy, they weren't the only ones killing. I maimed and took lives too, we all did and I would do it again to serve this country but son, you have to let go of that anger before it eats you alive.\"\n\nAndrew wasn't listening. All he could think of was the months of hardship and of not knowing whether his father was dead or alive, if he was in one of those camps where the prisoners had been treated as something less than human while the Japs here were fed and sheltered and now were occupying classroom space that white Americans should have.\n\n\"Son?\" \n\nAndrew forced a smile and patted his father on the arm, \"I understand.\" he said softly.\n\nHarlan relaxed glad that he and Andrew had talked. First thing Monday morning he was going to start looking for a job.\n\n********\n\nSally looked over at Will as he helped the children with their schoolwork. She liked him even though he had been the one to send Lawrence to prison. His renting a room from her saved her from having to look for work outside of the home, which in turn saved her from having to find someone to stay with Dianne and Eli.\n\nThey had all gotten used to Ralph's very unorthodox family and to some degree Sally had begun to think of them as family as well. The lines of what had kept them separated were blurring and no longer mattered. As time went on, she thought less and less about Lawrence coming home and more and more of a life without him. \n\nShe knew that his views wouldn't have changed and if anything they would have become stronger. At some point, she was going to have to make some decisions but not now, Lawrence had at least another three years in prison. She looked at Will again and wondered why he wasn't married. He was tall, good looking... a woman could do much worse than a man like him. \n\nWill looked up, caught her looking at him, and smiled at her which made Sally blush, she hadn't meant for him to see her watching him.\n\nWill decided that Nick was right; he had to tell Sally about Lawrence. There was always the chance that he could be released early or as Nick suggested escape. He turned his attention back to helping Dianne and Eli with their homework; he would talk to Sally once the children were in bed for the night. It wasn't a conversation that he was looking forward to but it had to be done.\n\n*******\n\nLawrence Goodman frowned as the man next to him lit up another cigarette oblivious to the fact that smoking wasn't allowed. He was a new member to Lawrence's rapidly growing prison group who hadn't been advised of the rules yet one of which was no smoking. He had incorporated the \"your body is a temple\" teaching into his program. What was even more amazing was that some of the members of his group had been amongst the worst troublemakers and were now model prisoners.\n\nIt wasn't something that was missed by the prison officials; it was one of the reasons for his probable early release. However, another issue occupied Lawrence's mind as he waited for the group to show up... there was a traitor amongst them. He didn't know who it was yet but he would find out and the man would be swiftly dealt with and would be used as an example to show what would happen to traitors.\n\nThe thought of traitors made Lawrence think of his wife Sally. She hadn't responded to any letters or phone calls and according to her mother, she hadn't called her either. Kenny had been right about her Lawrence thought to himself. He had tried to warn him but Lawrence hadn't listened, \"I'm listening now.\" Lawrence murmured.\n\n\"You say something?\" the man smoking asked.\n\n\"Yes, I said put your cigarette out.\" Lawrence replied firmly, \"we do not smoke or drink in this group so put it out.\"\n\nThe man hesitated and then put the cigarette out cursing under his breath.\n\n*********\n\nFriday evening passed quickly with the bedtime stories and baths. Kenji and Patricia let the children stay up thirty minutes past bedtime and then planned to spend the rest of the evening alone. It had been a long time since everyone had been together and Patricia wanted to have dinner the next evening. While Kenji had been giving baths, she got on the phone and called everyone. When that was finished, she combed and then braided Marie's hair that now fell to her shoulders. After a final bedtime story, Niko and Marie were tucked into bed, the light turned off and the door closed.\n\nKenji followed Patricia into their room and began to undress, he had been waiting for this time all day and it was finally here. His light brown eyes shone with love and desire as he watched Patricia move around the room as she undressed. He was well aware that she thought herself too heavy even though she was at ease with him and herself but there wasn't anything that he would change about her.\n\nWhen Patricia was finally undressed, she stood in front of him, looked up at him and smiled her eyes full of mischief and desire, a combination that Kenji found potent. He glanced over to the bed and saw the little box that held the diaphragm and hardened even more. They had incorporated putting the device in to their love making so that it was easy to forget what its purpose was. Kenji took a breast in each hand and thumbed the nipples until they were hard. Patricia moved closer, reached down between them and gave his cock the lightest of touches, giggling when he jumped.\n\n\"It has been too long since I have felt you in my mouth.\" Kenji murmured as he moved her toward the bed, \"I have missed you and this.\" he added as he bent down to kiss her. Patricia wrapped her arms around his waist and pressed closer; she had missed him too and told him so.\n\nKenji eased her back onto the bed and knelt on the floor between her legs. He inhaled deeply as her scent and heat hit him, he loved this smell more than any other because it was just for him. He kissed the inside of each thigh with butterfly kisses that mad her gasp and moan. When he reached her mound, he stopped and then very slowly opened her lips with his fingers before placing his mouth over as much of her as he could.\n\nPatricia cried out, ground herself against his probing tongue, the first orgasm was never long in coming, and this time was no exception. She came with a scream that she muffled with a pillow over her face as Kenji continued his assault on her clit. When he finally relented he was about to explode and needed time to calm himself. When Patricia reached for his swollen cock head he stopped her, a touch was all that it would take and he didn't want to release like that, he wanted to come buried deep inside of her.\n\nHe reached over and grabbed the little box containing the instrument that would allow him to remain inside of Patricia as he came and put it in place. Without saying anything, Kenji lay on his back so that his cock pointed toward the ceiling. Patricia on top had become one of his favorite positions as he could play with her breasts and her clit as she rode him. Like her, his orgasm hit him hard and fast taking Patricia along with him, afterwards, Patricia clung to Kenji and shivered as the cool air dried her sweat-slicked skin.\n\nKenji reached down and covered them both, stroking her back until she slept. Sleep didn't come easily to him, his mind was on Andrew Kelley, he knew that the graffiti on the car was only the beginning. He forced the problem out of his mind, he wanted to enjoy his time with his family, he would think about Andrew Kelley another time.",
        "*******\n\n\"What bothers you?\" Hana asked Nick after they had finished making love.\n\n\"I'm fine.\" Nick replied as he toyed with Hana's long dark hair that now had random strands of gray running through it.\n\n\"Something troubles you.\" Hana insisted as she laid a hand on Nick's chest, \"Tell me.\"\n\nReluctantly, Nick told her about Lawrence Goodman's probable early release.\n\n\"When he's free, he's coming here, I can feel it and I need to know how to protect all of you. I haven't mentioned anything to Ralph or the others because I don't want anyone to worry just yet....\"\n\n\"But yet you worry.\" Hana interrupted.\n\n\"I'm a natural worrier, didn't you know that?\" Nick teased.\n\n\"We should be worrying with you.\" Hana replied.\n\n\"To what end?\" Nick asked, \"I'm content worrying about all of us if everyone is happy and Hana, for the first time in a long time all of us are finally happy and I'm not ready to spoil it.\"\n\nHana went silent; the subject was closed as far as Nick was concerned. She had to agree with him on the fact that everyone was happy, even Hiroshi and Kenji's relationship had improved to the point where they were almost as comfortable with each other in the way that they had been before the issues with Patricia happened. It wasn't totally the same and never would be but they were both aware of that. However, deep down in her stomach, a little feeling of disquiet began to grow. She snuggled into Nick who had already drifted off to sleep and closed her eyes, she would be up early preparing for the party at Kenji and Patricia's house as it was now known.\n\n*******\n\nRalph hung up the phone in disgust. He had been monitoring what was happening with Lawrence and was appalled that he would serve only three years for the eight known deaths in which he had actively participated. \n\n\"Three years!\" he exclaimed to Abby, \"Three years for eight lives and there were probably more!\"\n\n\"I know Ralph, but what can we do?\" she asked.\n\n\"I know that we can't do anything but Jesus Abby!\" he exclaimed, \"and I'll tell you something else, he's coming back here when he's out.\"\n\n\"He wouldn't! Nick...\"\n\n\"Is one of the reasons that he'll be back.\" Ralph interrupted, \"and Sally and the kids won't be far from his mind either. The only good thing is that he doesn't know about Kenji, Patricia and the kids.\"\n\n\"Do you think that he'll come after you?\" Abby asked.\n\n\"Probably but it's not me that I'm worried about.\" He replied, \"It's the rest of you.\"\n\n******\n\nThe kids were finally in bed and William decided that there was no time like the present.\n\n\"Sally, we need to talk.\"\n\nSally stopped what she was doing and looked up at Will, \"something wrong? Am I charging too much for the room?\"\n\n\"No Sally the rent is fine.\" Will said, \"It's about Lawrence.\"\n\n\"Lawrence? What about him?\" Sally asked nervously.\n\n\"I'm not going to sugarcoat this.\" Will said.\n\n\"Is he dead?\" Sally asked.\n\n\"No, he isn't dead but Sally, he'll be out in three years instead of four.\"\n\nWill waited for the news to sink in.\n\n\"Three years? He'll come back here won't he?\" she asked.\n\n\"I'm afraid so.\" Will confirmed. \"We just have to be ready....\"\n\n\"He wants to kill me doesn't he?\"\n\n\"According to my sources, not just you. The only ones not on the list are the kids, Kenji, Patricia, Hana and the kids and once he finds out their connection to Ralph and Nick....\"\n\n\"What are we going to do?\" Sally asked.\n\n\"I have friends that are keeping tabs on him and will alert me to any developments regarding his release and escape if that should happen.\"\n\n\"Escape?\"\n\n\"It's possible.\" Will said, \"I don't see it happening but as Nick pointed out, Lawrence has a lot of people who are willing to help him.\"\n\nSally sat down and wrung her hands wishing that she could be rid of Lawrence Goodman and start over with someone like Will.\n\n*******\n\nLawrence watched the face of each man to see if he could determine who the traitor was. So far, no one stuck out but he knew.... He knew that he and the group were being betrayed. His first thought was his right hand man Carl Tucker but it didn't make sense. Carl was a good ole boy from his neck of the woods; in fact, Lawrence served with Carl's cousin just before he lost his arm. For that reason alone, he discounted Carl and set his sights on other potential traitors.\n\nHe looked over at one of the newest recruits, Samuel Murphy. He didn't like the man even though he was a model recruit. He didn't drink or smoke and did anything and everything required of him, in other words he was too perfect and bore watching. Lawrence's gaze moved to the next new recruit, a clearly uneducated man who would make a good foot soldier in that he did what he was told without question but that didn't make him exempt him from suspicion. It was Lawrence's experience that people weren't always what they seemed; Doc and Sally were prime examples of that so Ezra Jones was added to the list.\n\nCarl Tucker made sure to do nothing that would cause Lawrence to call his loyalty into question. He didn't have enough information on the group or Lawrence's plan yet to leave the prison but what he did know was terrifying. The plan of this group was far more radical than any Klan group that he knew of and as soon as he found out what he wanted to know, he was getting the hell out. \n\nHe had already passed on the list of people that Lawrence wanted killed and was surprised to hear sally Goodman was on the list but he didn't question it, he simply passed it on. It had become clear that Lawrence wasn't planning to escape; he wanted to leave the prison a free man and then go back to California. Of the people on the list only one had been killed, the man called Doc. The problem was there was nothing to link Lawrence to the murder although anyone with brains knew that he had a part in it. \n\nWhen Carl volunteered to go undercover in the prison, everyone thought that he had lost his mine but he had his reasons that remained unspoken. To be honest, he wished that Lawrence would try to escape; he wanted to kill the murdering son of a bitch himself. Like Lawrence, Carl scanned the rapidly filling cell and tried to decide which o the men he would implicate as the traitor. That the man would die was of no concern to him, as far as he was concerned, anyone who belonged to such a group was scum.\n\n****** By the end of October 1945, the United States invades Japanese held Korea, Hideki Tojo who was PM of Japan during most of WWII attempts suicide rather than face war crimes, Vidkun Quisling is sentenced to death for collaborating with the Nazis, 1000 whites walk out of Gary, Indiana schools in protest of integration, German rocket engineers begin to work in the United States.\n\nHeavy weight champ Joe Louis is discharged from the army, Elvis Presley makes his first public appearance at the age of ten, \"meet the press\" premiers on radio, Hollywood Black Friday in which a strike by set designers turns into a bloody riot occurs, Juan Peron becomes President of Argentina, the Nazi war crime trial begins in Nuremberg, Paul Robeson wins the Spingarn Medal for singing and acting, French women are allowed to vote for the first time, Jackie Robinson signs a contract with the Montreal Royals, the first ball point pen goes on sale 57 years after it was patented and the US government ends shoe rationing.\n\n*******\n\nAfter Andrew and his friends broke Joel's hand things at school seemed to have settled down although Kenji remained on guard and encouraged Joel and Patricia to do the same thing. The car had long been cleaned of the racial slurs that had covered it and the back window had been repaired. From the time of the attack, Kenji and Patricia insisted on taking Joel home insisting that it was no trouble. Joel's broken hand still wasn't completely healed and he found himself grateful that he wasn't going into surgery as a career choice.\n\nAndrew for the most part seemed to ignore Kenji not even speaking to him.\n\n\"It is the calm before the storm.\" Kenji told Patricia one evening after they dropped Paul off.\n\n\"Maybe he's forgotten about you and Joel.\" Patricia replied hopefully.\n\n\"I think that he is waiting to catch me unawares.\" Kenji said, \"Just remember t keep your eyes and ears open and always wait for me.\"\n\n\"I will but Kenji, I'm worried about Joel.\" Patricia said, \"His hand isn't healing right and I don't think that he really eats other than what we bring for lunch.\"\n\n\"What would you like to do Kirei?\" Kenji asked.\n\n\"I don't know... maybe have him over for dinner or something. He just seems so alone; do you notice that he never talks about family?\"\n\n\"We can ask but I doubt that he will come.\" Kenji replied.\n\n\"How about Friday? He could spend the weekend and we could study together! I'll make chicken or something that isn't pork what do you think?\" Patricia asked excitedly.\n\n\"It is fine by me if he will agree to it.\" Kenji replied. What he didn't say was that he was worried for Joel too; if he agreed to come home with them maybe, he could get their introverted friend to talk to him.\n\n*******\n\nAndrew watched Kenji covertly, as much as he hated him he was intrigued by his calm demeanor. He and his friends hadn't done anything to either him or the Jew since they broke the Jew's hand and spray painted the Jap's car. In retrospect, he wished that he hadn't broken the Jew's hand. It was a spur of the moment thing, but something that he would never apologize for even if a gun were put to his head.\n\nHe not only watched Kenji, he watched Patricia too. Not always personally, but through friends that were taking the same classes as she was. Apparently, she was quite the smart cookie passing every quiz and test with nothing less than a 95%. He watched Patricia a few times himself and found her attractive even though she was black and for now, she was off limits. Just because he wouldn't touch her didn't mean that one of his friends wouldn't but that would be a last resort if all else failed.\n\n\"You ready to go?\" Brian his friend and classmate asked.\n\n\"Ready.\" Andrew replied.\n\n\"Come on then, the meeting starts in fifteen minutes.\"\n\nThat meeting had been a month ago, it was also the first time that Andrew had been with other people who felt as he did. It was because of this group that he backed off harassing Kenji and Joel. Somehow it helped being able to verbalize what he was feeling without repercussions. It didn't change the inevitable that was going to happen between him and Kenji. It just postponed it. \n\nThe leader of the group none other than Patricia's first class teacher urged caution.\n\n\"You do not want to get yourselves kicked out of school because of this; any and all activities need to take place outside of school. In fact, this will be our last meeting on school grounds, nothing is to be mentioned about this group and if you find someone who wants to join, you have to vouch for them and they are not to be brought to the meeting place. Any questions?\"\n\n\"Dr. Hathaway?\" a voice from the back called.\n\n\"Yes?\"\n\n\"When and where is the next meeting?\"\n\n\"I don't know yet but you will receive word when I decide. Now go home and don't do anything that will draw attention to yourselves, any questions as to what I mean by that?\" he asked looking at Andrew and his friends.\n\n\"No sir!\" the young men said in unison.\n\n*******\n\nThe week flew quickly by and to the surprise and delight of Kenji and Patricia; Joel agreed to spend the weekend at their house. Patricia got the room in the basement ready complete with a washbasin and soap, she was considering Joel their first houseguest ever. Kenji smiled at her and stayed out of her way by tending to the children while she cleaned and baked.\n\nWhen the time came, Joel tried to back out and Patricia put her foot down.\n\n\"You promised so you're coming! She said \"and not only that, I've cooked and baked up a storm and I've got your room ready for you.\"\n\n\"I just don't want to be any trouble.\" Joel replied.\n\n\"We invited you did we not?\" Kenji asked.\n\n\"Yes but you were being nice.\"\n\n\"Joel, we weren't being nice.\" Patricia said, \"You're our friend and we want you to come spend the weekend with us.\"\n\nJoel reluctantly changed his mind and brought his luggage with him that Friday. After classes, the trio walked to the car each of them aware that they were being watched. Of the three of them, only Joel was nervous although he tried not to show it.\n\nHis eyes widened when he saw the house, \"You live here?\" he asked.\n\n\"It actually belongs to a friend of ours.\" Patricia explained, \"She and her .... Husband live in another house and we stay here.\n\nJoel couldn't suppress a smile when Niko came running out of the house screaming, \"Mama! Papa!\" At the top of his lungs followed by a much quieter Marie.\n\n\"Hello Niko and pretty one!\" Kenji greeted the children as he picked up one and then the other before handing them off to Patricia.\n\nJoel swallowed a lump in his throat; the scene that he had just witnessed brought back memories of a much happier time. He looked at the small family and wondered it something like that was in the cards for him but then realized that no woman would want a man who couldn't defend her as Kenji could obviously defend Patricia.\n\n\"Joel, this is our son Niko and our daughter Marie.\" Kenji said, \"And children, this is your Uncle Joel, he will be spending the weekend with us.\"\n\nNiko and Marie both gave Joel a small bow of welcome that brought tears to his eyes. He hadn't felt welcome anywhere in such a long time.\n\n\"Come in!\" Patricia said, \"My mom and dad are baby sitting today so you'll get to meet them.\"\n\nJoel grabbed his and Patricia's bags and followed her in. The smell of roasting chicken and biscuits hit his nose as soon as the door to the kitchen was open. Immediately, he began to salivate and his stomach began to rumble, he couldn't remember the last home cooked meal that he had.\n\nHattie was the first to greet him, \"You must be Joel, I Hattie Patricia's mama and that is her daddy John.\"\n\nJoel's mouth went dry when John stood up; he thought that Andrew and Kenji were big! John dwarfed them not in height but in sheer mass.\n\n\"Nice to meet ya, hope you hungry. Hattie here done cooked up a storm.\"\n\n\"Th.... Thank you sir.\" Joel said shyly.\n\n\"Ain't no sir here! You just call me John and my wife Hattie.\"\n\nJoel nodded as he glanced around him, this, he realized was a home, something that he wanted.\n\n\"Well come on in and make yourself at home!\" Patricia said as she handed Marie to Kenji so she could help Hattie finish getting dinner ready.\n\nIt wasn't long before dinner was on the table and they were all sitting.\n\n\"We say grace here.\" Hattie said, \"Kenji says his own prayer but sometimes he says ours, you can do whatever you like.\"\n\nThey all closed their eyes and bowed their heads each saying their own blessings for the meal before them. Joel didn't know where to start so Hattie helped him, filling his plate to the rim with chicken, mashed potatoes with gravy, green beans and two biscuits.\"\n\n\"Eat up, there's plenty\" she encouraged her heart going out to the thin white man who radiated fear.\n\nJoel didn't take his first bite until everyone had their food and that included the children but when he did, he almost wept with pleasure. No one commented as he wolfed his food down and asked for seconds and thirds, finishing the mashed potatoes and gravy.\n\n\"You got room for dessert?\" Patricia asked.\n\n\"Dessert too?\" Joel asked.\n\n\"Yep, Hattie's apple pie.\" John announced proudly.\n\nThat night, Joel went to bed completely full and had the first dreamless, hunger free night that he had in months.\n\n*******\n\nAndrew and his friends sat in the diner where Andrew's mother worked shooting the breeze. Andrew's mind wasn't on the conversation; it was on Kenjiro Takeda and how soon he could start his own personal war against him. \"I wonder where he lives?\""
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "kenjiro",
        "patricia",
        "japanese",
        "bbw",
        "racism",
        "joel"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-02"
}