{
    "title": "On the Side Ch. 02",
    "pages": [
        "\"She won't let us make love at all?\"\n\nAmy pressed her head to my chest as we embraced in her hotel room, her anguish sharp as my own.\n\n\"Katherine was okay with us!\" Amy said. \"She asked me to come with you to New York. Now she's changed her mind?\"\n\n\"Maybe actually seeing us together makes what we're doing more real. But I don't know. We just got here. I'm going to find out.\"\n\nAmy clung. \"She hates me now, doesn't she? For sleeping with you.\"\n\n\"Kate doesn't hate you, Amy. She cares about you. Just like I do.\" \n\nI leaned down and kissed her. She kissed me back hungrily. \n\nWe parted, and I tucked a loose strand of hair behind her ear. \"Anyway,\" I said, we'll survive. We've been fucking non-stop for a week.\"\n\nAmy looked down, nodding, then looked up hopefully. \"Can we do a quickie now? Or later? Before you go to bed with her?\" She guided my hand to her breast. \n\n\"You've gotten addicted to sex,\" I said, chuckling. \"Go take your shower. Get dressed for the restaurant.\"\n\nAmy gave me a naughty look, trying to pull me towards her bathroom. \"Join me?\" \n\nOh, how I wanted to\u2014run my hands over her firm boobs, then pound her against the wall of the shower. But we had done that back home just before we left for the airport.\n\nI marched her to her bathroom, gave her bum a playful swat, and left. \n\n~~~~\n\nWhen your wife of fifteen years says it's okay to fuck someone else, can she really mean it? Or, in her love, is she sacrificing her happiness for yours?\n\nThat's what I pondered at home one week before. I had just run for the phone, standing naked in our bedroom, and had admitted to Kate that I'd spent the night before fucking our nineteen-year-old house guest. Kate then gave her okay. \n\nWell, not entirely. She was accepting. Understanding. Kate tried to sound lighthearted, but I heard the hurt in her voice. I knew her disappointment in not being able to satisfy my stupid, clawing, relentless sex drive.\n\nWhen I hung up, I stumbled to our bed, stretched out beside Amy and stared at the ceiling.\n\nAmy, who had been on the bed on hands and knees, eager for another round, saw my face and lay beside me.\n\n\"So is... is Kate okay? With us, I mean?\"\n\n\"She says she is.\"\n\n\"I knew it!\" Amy laughed and kissed me, eyes sparkling. \"I knew she'd be okay. Oh, Ben... this is so great!\"\n\nAmy tried to pull me on top of her, but I guided her back. I burned with guilt and uncertainty about Kate, and questions about Amy returned. \n\nWhen your homeless nineteen-year-old house guest says she's fantasized about you then offers herself, is she being honest, or is she desperate for a place to stay or someone to belong to?\n\nI turned to her. \"Amy, when you came to us, you said you had nowhere else to stay. Was that really true?\"\n\nShe studied my face. \"Why?\"\n\n\"Just tell me.\"\n\nAmy shrugged. \"Well, okay. I kinda did.\"\n\n\"Kind of?\"\n\n\"Okay!\" she said. \"I have friends. It wouldn't have been great, but there were people I can stay with.\"\n\n\"And now?\"\n\n\"Same thing. I could stay with friends.\" Amy gasped. \"Oh, god. Katherine's not okay? She told you to kick me out? Oh god. Oh, no...\"\n\n\"No! It's okay.\" I gripped her arm. \"She says we can keep sleeping together. She's not overjoyed, but says she understands. I just wanted to make sure about you.\"\n\nAmy thought for a moment, then said, \"Make sure I'm not whoring myself out for a place to stay.\"\n\n\"Ooh, that's harsh. I didn't think so, but there's something else. There's this thing: power imbalance. Bosses shouldn't sleep with employees. Landlords don't fuck tenants. That kind of thing. Our age difference is bad enough.\"\n\n\"So, if I didn't have anywhere else to go you'd have to kick me out? And since I do, I can stay?\"\n\nI laughed.\n\n\"Ben, you didn't coerce me, you know. I kinda did that to you. I'm not here because I had nowhere else to go. It's because there's nowhere else I want to be. I told you. I've dreamed of living here. With you. Sleeping with you.\" She grinned. \"After what we did last night I really, really really want to sleep with you.\" She paused. \"Next, you're going to ask if I'm on the pill, right?\"\n\nGrinning, I said, \"Oh, I know you are. Last week, you left your current pack prominently displayed on the bathroom counter.\"\n\nAmy winced. \"Not very subtle, huh?\"\n\nI chuckled. \"Not very. But even if you hadn't, I knew you'd never have sex unprotected. You'd never try to trap me.\"\n\n\"Because of mom, right?\"\n\n\"Huh?\"\n\nAmy said, \"I'd never trap you because that's what mom did to get my dad to stay. Everyone knows about that.\" \n\n\"Well, I didn't, Amy. What happened?\"\n\n\"He vanished the second she told him she was pregnant with me.\"\n\n\"Oh, Amy,\" I said quietly, \"That's awful. I had no idea.\"\n\nShe sighed, pursing her lips. \"Great. Should've kept my mouth shut. Now you think I'm even more trailer trash than before.\"\n\nI hugged her to me. \"We have never, ever thought of you like that. You're not your mother, Amy. How you grew up and things your mom did don't reflect on you. Even if I'd known that about your mom, I knew you'd never trap me because you're you, Amy. Driven, smart, and so damn honest it hurts.\"\n\nAmy smiled and pecked my cheek. She laid back, and we both admired the ceiling together. Then she said, \"I'm not a child, you know.\"\n\n\"Of course not, Amy.\"\n\n\"Then stop treating me like one. I'm nineteen. I can make my own decisions.\"\n\nI rolled to face her. \"You're responsible for your decisions, Amy. Doesn't mean you're always good at making them. When I was nineteen, I was a fool.\"\n\n\"Yeah? Well, I've never had the luxury of being a fool. I've had to deal with my mom and keep our house since I was little. Pay the bills, deal with all lowlifes she had hanging around, deal with all the endless shit of having no money. I wasn't a little kid even when I was a little kid, you know?\"\n\nI put an arm around her.\n\n\"I get that you're trying to look out for me,\" Amy said. \"Like you've always looked out for me. But I know what I'm doing, okay? If this is a mistake... staying here, making love with you... then it's my mistake to make, okay?\"\n\nI nodded. \"Okay, Amy. Okay.\"\n\nShe lay back. \"Good.\"\n\n\"I'm never going to stop looking out for you, though,\" I said.\n\nAmy rolled on top of me and peppered me with light pecks. She reached between us to stroke me to hardness, running me between her moistening folds. \n\n\"You say the sexiest things,\" she smiled, then sank my dick into her snug passage.\n\nWe made love that Saturday morning less frantically than the night before, and enjoyed it more knowing that Kate had given us permission, at least on the surface.\n\nI knew sometime Amy would tire of me and move on. She deserved to find someone her age, someone she could love without sharing and have a future with. As long as our affair continued, I was keeping her from that future.\n\n~~~~\n\nWe spent the rest of that Saturday fucking: in the shower, in the kitchen\u2014everywhere.\n\nI had to close all the curtains because Amy refused to get dressed, preferring to strut naked all day.\n\n\"Why get dressed when you're just going to get me naked again?\" she said, holding up her arms and swaying in a seductive shimmy. \"Besides, I want to be available. So you can fuck me any time you want.\"\n\nI didn't protest. I couldn't tire of seeing Amy naked, and she seemed to enjoy me watching her. She grinned each time she caught me fixated on her breasts that stood in youthful gravity-defying firmness, or on her wonderful ass. \n\nShe moved around the house happy and carefree\u2014playful and joking, eyes gleaming, always with a little smile. What a change from the guarded, tightly wound girl who had first moved in with us.\n\nMy heart glowed seeing Amy's delight. I stopped worrying about the morals of the situation to bask in her joy and energy.\n\nThat night we readied for bed as if it was normal for a 40-year-old married man and his 19-year-old house guest to stand naked in the bathroom mirror brushing their teeth; that it was normal then to slip into bed together and fuck all night.\n\nThe next days were like a fantasy. We fucked each morning. We fucked at bedtime. During the night, one of us always woke then pulled the other to them for a languid half-awake mating.\n\nI still had to go to work, and Amy had to go to her college, yet I came home to find she had rushed back to greet me wearing only one of my dress shirts or sheer panties and camisole\u2014whatever she thought was most enticing.\n\nWe cooked together every night, though dinner progressed slowly with Amy half naked or wearing only an apron. She loved to tease, wiggling her ass or 'accidentally' dropping something on her boob for me to lick off. Too often, I had to bend her over the counter or table for a quickie from behind. \n\nKate remained busy in New York with her publisher and media events, though we talked and texted each day. We avoided discussing Amy. That would come later, we agreed, when Kate returned home and we could discuss the situation together.\n\nUntil then, Amy was my lovely, always willing live-in mistress. She was voracious, but her sexual tastes were simple\u2014she just wanted to be fucked as often as possible. I wanted her to explore further.\n\nInstead of letting her pull me onto her the moment we hopped into bed, I made her take time to talk, cuddle and explore. Amy loved being held from behind while I kissed her neck, playing with her pussy and breasts.\n\nAmy discovered she adored having her breasts sucked and massaged. She held my head to her while laying back in a daze while I pleasured one firm boob then the other. After about ten minutes, though, Amy started squirming and urged me to fuck her.\n\nAt work, my busy period was still brutal, and I still had work to finish after dinner. One night, Amy stole into my study, naked and, with a sly grin, got under the desk and took me into her mouth.\n\nUnfortunately, she went at it like an industrial milking machine, bobbing frantically. I encouraged her to slow down and play, guiding her to what I liked. She eagerly learned to nurse and lick, drawing me deep while caressing my balls, teasing playfully, all while looking up at me like a groupie worshiping a rock star. \n\nJust before I lost control, Amy sat back, gave the head a loving lick, then crawled from under the desk and walked out, swaying her hips.\n\nI leaped up and caught her in the hallway. She giggled when I spun her to face me.\n\n\"You little tease,\" I growled. \"I was ready to come. How can I get any work done when you leave me like that?\"\n\n\"I was just getting you warmed up. You work too much. Come fuck me.\"\n\nGripping her arm, I trotted her to her bedroom and pushed her backwards onto her bed. Amy watched eagerly as I stripped, spreading her legs in anticipation.\n\n\"I can tease too,\" I said, and slid down between her thighs. \n\nShe tried to pull me back up. \"Don't do that,\" she said, \"It's gross. Just fuck me. That doesn't do anything for me, anyway.\"\n\nOther guys had tried it, she said, but from her description it sounded like only minimal foreplay before rushing to the main event.\n\n\"I'm not fucking you until I get you off with my mouth,\" I said. \"Even if it takes all night.\"\n\nAmy groaned in frustration but agreed and laid back to let me explore. I encouraged her to tell me what felt best as I teased and played with lips, tongue and fingers. Ignoring the powerful urge to just fuck her, I took my time. Soon Amy was thrusting her hips, holding my head, twisting and mewling until she built to a massive, gasping orgasm.\n\nWhen I slid up to hold her as she recovered, she avoided my eyes, her lips tight with a shy smile.\n\n\"Was that okay?\" I asked. \n\n\"That was volcanic! Holy shit. But... it's so embarrassing.\"\n\n\"What is?\"\n\n\"Having your face down there. You making me come that way.\"\n\n\"Amy, I've fucked you over the table with your tits in the mashed potatoes. I've watched you come so hard it looked like you were entering a coma. You're embarrassed about me licking you?\"\n\n\"It's just so... I feel so exposed.\"\n\n\"Mmm. Yes. It's intimate. That's why I like it.\"\n\nAmy pulled me onto her, desperate hunger in her eyes. \"Now for fuck's sake, will you fuck me now? Hard!\"\n\n~~~~\n\nBy Thursday, my busy period at work had wound down enough that I didn't need to bring work home. I rushed home, eager to have the entire night to spend with Amy.\n\nShe greeted me at the door dressed in her old 'professional uniform' of golf shirt and khakis.\n\n\"The Petersons called,\" she said. \"Her dad just went into the hospital. They need me to babysit tonight.\"\n\nI felt crestfallen. \"You gave up babysitting when you started at the college. Don't they have anyone else?\"\n\n\"They called everyone. I'm their last resort.\" Amy pecked my cheek. \"I might not be long.\"\n\nFor the first time in months, I had the house to myself. Without Amy to cook with, dinner seemed pointless. I heated something dismal that slithered out of a can.\n\nSitting alone at the empty table, restless angst filled me. I had become used to missing Kate, but never expected to miss Amy so profoundly. The Petersons only lived four blocks away. Maybe I could stop by and see how she was doing.\n\nI tried watching a movie. All I thought of were the times we fell asleep together on the couch and the magical delight of waking up holding her that first time.\n\nSimilar distractions filled the evening. I thought of Amy constantly, unable to focus, missing her laugh, wanting to hear about her day and to tell her about mine.\n\nThe yearning, the emptiness, unable to think of anything but her: I knew what it was. I'd felt that way only once before\u2014with Kate.\n\nAmy returned around ten and I rushed to meet her at the door like a puppy overjoyed at his master's return.\n\n\"Her dad had chest pains,\" she said. \"They don't think it's serious, but they're keeping him overnight.\"\n\n\"That's a relief. I like the Petersons. They're always canvassing for some charity or other.\"\n\n\"I know. I took their boys door-to-door some nights when I sat for them before. Ben, they're so sweet! Hadn't seen them since last year. They're six and eight now and total scamps.\"\n\nAmy gushed about the boys and their house and how glad she was not to clean their pool anymore, all while dragging me to her bedroom.\n\n\"It's only been a few hours, but I really missed you,\" she said. \"I kept wanting to call and have you come over. That would have looked really weird, though.\"\n\nAmy insisted I strip her and gazed at me while I removed one item at a time, kissing each part of her as it became exposed.\n\nFinally naked, she stood flushed and breathing hard. I stripped in a flash and Amy pulled me on top of her as she lay back on her sheets. From her needy expression and how her hips were squirming, I could tell she needed me as much as I needed her.\n\nAmy gave a short, joyful gasp when I sunk into her, eyes flying open then after a few blinks becoming lidded. The tension in her body dissolved as we mated, kissing and stroking each other's faces, gasping, groaning, sometimes laughing. Around mid-point, we slowed, just gazing at each other, and Amy asked to get on top. \n\nShe rode me wonderfully, arms braced on my chest, head back, eyes closed with her lovely breasts jutting.\n\nWhen Amy came, she planted herself desperately then gave a long, primal growl, eyes closed with an angelic expression, head drooping between her shoulders.\n\nThe exquisite beauty of her orgasm as contractions milked me inside sent me over the edge. I grabbed her hips and bucked, emptying into her forcefully.\n\nWe lay cuddling, recovering and basking in the glow of our mating. Amy absently ground her hips against my side.\n\nI said, \"That was a powerful one for you, wasn't it?\" \n\nAmy ran her fingers over my chest. \"I was imagining we were... doing it for real. Unprotected. That you were breeding me. Giving me your baby.\"\n\nI stroked her hair. \"You don't want a baby at nineteen, Amy. And certainly not with me. I'm old enough to be a grandfather.\"\n\nAmy shrugged. \"Not really. I told you I used to dream about having babies with you.\"\n\n\"You also dreamed about Kate being abducted by aliens. Reality isn't so rosy. You'd never be able to launch your jewelry business if you had a kid to take care of.\"\n\n\"Oh, I could if I had help,\" Amy mused. She fixed me with a gaze. \"Is that why you and Kate never had kids? So you could concentrate on your careers?\" \n\n\"Oh, no,\" I said. \"We tried. Lots. But Kate was already 36 when we got married, then she had an ectopic pregnancy in our first year together. It was awful. She was in so much pain. We didn't know what the hell it was. Anyway, that little episode did some damage. Nothing we tried after that took hold. Now she's 51. It's too late.\"\n\n\"I'm really sorry,\" said Amy.\n\n\"It's for the best,\" I said. \"We'd have been awful parents.\"\n\n\"What? No! You'd be great. So in love. So caring.\"\n\nI said, \"Well, that's the problem. We had a dog once, you know. Long before you started coming around to mow the lawn.\"\n\n\"Oh?\" said Amy.\n\n\"A big black lab. Super sweet and dumb as a rock. But we loved her.\"\n\n\"Ever drop a cake on her?\" \n\n\"Oh, ha ha,\" I said, giving her a playful swat. \"We pampered that mutt, worried about her all the time. Every time Kate thought sometime was off, we rushed her to the vet. Later on, she did get something. When she died, Kate wanted to die too. So did I. It still hurts to think about, even after all this time. Now imagine if it was a kid! It'd be ten times worse. We'd be destroyed if anything ever happened. We'd worried about every little thing... the ultimate smothering helicopter parents.\"\n\n\"No,\" said Amy firmly. \"I was like that when I first started babysitting. Then I learned better. You will to.\"\n\n~~~~\n\nKate called around midnight.\n\n\"Book three is hitting the stores Monday,\" she said.\n\n\"Your publisher isn't great at planning, are they?\" I said. \"They said it would be weeks.\"\n\n\"I know. They're small. Anyway, they want me to stay another week. I've got an interview on NPR Monday and more signings in the area. There's a reading and panel discussion at CUNY Thursday.\"\n\n\"So we won't see you for a whole other week?\"\n\n\"Can you come? There are still seats on some flights for Friday afternoon. I checked. Amy can come too. The adjoining room next door is free. I could book it for her. She'd have some privacy and you two could... well, you know.\"\n\n\"Kate, are you sure you want that?\"\n\n\"Of course. It'll be fun showing her the city. And my editor says she can arrange backroom tours of some of the bespoke jewelry shops here. Amy could learn a lot for her business.\"\n\n~~~~\n\n\"But I've never even been in an airplane!\" Amy protested. \"And it's so expensive. I don't want you two spending so much money on me.\"\n\n\"We knew you'd say that,\" I grinned. \"Think of it as an early birthday present.\"\n\n\"My birthday isn't for two months.\"\n\n\"We know. We've always given you a little something for your birthday since you were what? Fourteen?\"\n\nAmy's crossed her arms. \"Are you sure Katherine is... I mean, what do I even say to her?\"\n\nTaking her into my arms, I said, \"Relax. You're still friends. She cares about you. And she really wants you to go. I made sure. We'll have to talk about how our new situation will work, but we'll do it together.\"\n\nAmy just clung.\n\n\"Look,\" I said, \"you'll have your own room... it's adjoining. That means there's a door between your room and our suite. You can be alone any time you want.\"\n\n\"Alone with you?\"\n\nI laughed. \"I mean by yourself. But yes, we can be alone together too. But you realize it won't be all the time. Kate and I haven't seen each other for two weeks.\"\n\n\"Okay,\" Amy sighed. \"But I still feel like I'm going to an execution.\"\n\n~~~~\n\nAmy placated, I shut the communicating door of her hotel room behind me and entered our suite. The hotel was reasonably priced by New York standards, and close to Kate's publisher. ",
        "Years before, Kate and I grew tired of booking fleapit motels when we traveled and found that hotel. With a suite we had a kitchen to save money on meals, a bedroom separate from the small livingroom, and a spectacular bathroom.\n\nKate sat on the couch, legs curled under her with wine in hand, already dressed for dinner. Warmth filled me at seeing her\u2014two weeks apart was too long.\n\nShe never looked more beautiful. Tall, taut and refined, Kate easily passed for ten years younger than her 51 years. Her students at the college often made passes at her.\n\n\"Is she settled in?\" Kate said. \"How'd she take the news about no fucking?\" \n\nI sat and gave her a kiss. \"She'll be okay. Amy knew she wouldn't have me all to herself. How are you feeling?\"\n\n\"I'm... dealing with it,\" said Kate.\n\nI picked up my own wine glass, thinking I'd soon need something stronger to negotiate the evening.\n\n\"So,\" I said, \"What's going on? All week on the phone, you said you were fine with me and Amy. You even wanted to watch.\"\n\nKate sighed. \"I thought I was fine. I pictured it just being sex. Some friendly, no-strings fucking to give you some relief. But when I saw you at the airport... so close. So in tune with each other. It's not just sex with her, is it?\"\n\n\"Why... uh, why do you say that?\"\n\nKate flashed an exasperated look. \"Come on. I see how you are with her. I see the signs. Guess your heart doesn't entirely belong to me anymore.\"\n\n\"Kate, No! It's just a fling. And affair. Amy... I'm... I mean...\"\n\n\"Men,\" Kate sighed. \"You don't even know your own feelings. Or admit them. Trust me... she's much more than just a fling to you now. I guess I should be happy though... if you're starting to love her you won't hurt her.\" She paused and eyed me seriously. \"You haven't, right? Hurt her? Done things she didn't want to do?\"\n\n\"Kate, I would never hurt Amy. You cured me of that. I'm not like that anymore.\"\n\n\"Hmm.\" \n\n\"Look,\" I said. \"I love YOU. This hurts you. So... we'll end it. You come first, Kate. Always. We'll go back to the way things were. She'll just be our house guest until she moves in with her friend in the fall. I won't sleep with her anymore.\"\n\nKate shook her head. \"No. There's no going back. You'd be miserable and go back to climbing the walls. You're so much happier now! And Amy would have to leave. You two couldn't keep your hands off each other otherwise, could you?\"\n\nI thought about it. \"No, I guess not.\"\n\n\"Right. Anyway, I really like having Amy around.\"\n\nI nodded. \"She certainly keeps the house tidy.\"\n\n\"Not what I meant. She's just a delight. A bit of sunshine in our lives I didn't know we were missing. I like talking to her. Showing her things. It's like having a younger sister. And she's so sharp! Did I tell you she read my draft for book four?\"\n\n\"No.\"\n\n\"Read it all in one night, then pointed out a hole in one of the sub-plots and how much the duchess resembled Madame Bovary.\" Kate chuckled. \"Then she veered off into gossip about some minor scandal at her school and gushed about some hot band that's coming to town.\"\n\n\"Yeah,\" I smiled, \"Sometimes she's a kid, sometimes she's Confucius. I was like that too at her age. Weren't you?\"\n\n\"Certainly not,\" smiled Kate. \"I was always the sober intellectual I am now.\"\n\n\"Like hell. You told me what a troublemaker you were.\" I paused, thinking. \"So... what are we going to do?\"\n\nKate pondered. \"I really don't know. I like seeing you happy. Both of you. I don't want to have to kick Amy out. I just know that for now, I want you to cool it. Let's show her New York. Have fun this week. But no fucking. At least for now, okay?\"\n\n\"I already agreed, Kate. No fucking. But I'm serious\u2014this thing with Amy ends the moment you say it does.\"\n\nKate gave me a long, emotional kiss then hugged me tight. She said, \"Let's see how it goes.\"\n\n~~~~\n\nThe restaurant was only mid-range, but Amy gawped at the trendy decor like it was Versailles.\n\nWe took a high-backed booth for privacy from the Friday crowd, Kate sitting opposite me with Amy in the middle against the wall. \n\nAmy wanted to know everything\u2014which fork to use, how did they fold the napkins like hats, why did they serve butter in little balls too cold to spread, whether every restaurant in New York was really owned by the mob...\n\nSoon Amy settled down, and we talked and ate. Kate and Amy were stiff and polite with each other: the laughing, touching, and open smiles they shared back home gone. They were such good friends before my adultery. Could I ever repair the damage?\n\n\"I'm not going to come home to a messy house, am I?\" Kate said. \"You two being so busy with... other things and all?\"\n\n\"Oh, no, Katherine. I've kept the place clean. Ben helped too, though I wished he didn't. He's been so busy with work. I've tried to keep his stress levels down.\"\n\n\"Oh, that's what you were doing,\" said Kate, \"Then I should thank you for... taking care of his stress.\"\n\nAmy looked wounded. Finally, she said, \"Listen, Kate, I\u2014\"\n\n\"What?\" said Kate, far too sharply.\n\nAmy lowered her eyes. \"Nothing.\"\n\nNear the end of dinner, Amy squirmed and fidgeted in her seat, shooting quick looks at me. I knew what she was thinking: after our dinners at home, we often wound up with Amy bent over the kitchen counter for a quickie or with her scooting under the table to take me in her mouth.\n\nI jumped when toes begin caressing the inside of my thigh. Amy was casting innocent looks up and around the room.\n\nKate sensed something going on. \"Okay, you two,\" she said, dryly. \"I think we'd better head back to the hotel.\"\n\nWhen we returned to the suite, I realized Kate wanted to be alone with me. But after sleeping with Amy every night for more than a week it didn't seem right to just send her off to her room.\n\nAs Amy shed her heels, she said, \"That was so good! Bet we could cook that same thing back home, Ben. Can we try? Pretty sure that whole flamb\u00e9 business is just for show. I'd probably set the ceiling on fire if I tried.\"\n\nWhen she stood, Amy saw the tension in Kate's face. Her pained eyes darted to me, then away. She moved to Kate and took both her hands.\n\n\"Thanks for bringing me here,\" Amy said. \"You're both so good to me. I never dreamed I'd see New York for real.\" \n\n\"I'm glad you could come,\" said Kate.\n\nAmy embraced Kate then laid her head against her. \"I don't want you to be mad at me, Kate. I really thought you were okay with Ben and me... uh... you know.\"\n\nKate smoothed Amy's back while looking at me, her face softening.\n\n\"Well,\" said Kate. \"It's just... it's all so new. We'll talk about it later. Now, why don't you go to your room and get some sleep? It's been a long day.\"\n\nI said, \"Amy, did you want to try our tub first?\"\n\nOur suite's bathroom had marble and mirrors everywhere with a giant whirlpool tub. Amy wanted to it the moment she saw it.\n\nAmy shook her head. \"Maybe tomorrow. You two should be alone. But Kate? Can... can Ben visit me later? Only to cuddle, I mean. That's all. Just for a while?\"\n\n\"No, Amy. We've been apart for weeks. I find it hard to sleep without him.\"\n\n\"Yeah,\" Amy sighed. \"Me too.\"\n\n~~~~\n\nThe bedroom of our suite had a high king bed and broad floor-to-ceiling windows overlooking the city. \n\nAs I unzipped Kate, she said, \"Sometimes I wonder if that girl's manipulating us. She's just too sweet to be real. Then I think no, she really is like that. She really is just the sweetest girl in the world.\"\n\nAs Kate stepped out of her dress I said, \"Sometimes your analytical side gets the better of you, you know. Amy's always been painfully honest with us. She's never lied in all the years we've known her.\"\n\nWith a sidelong look, Kate said, \"She's really got your head turned, hasn't she? She lied when she said she didn't have anywhere else to stay.\"\n\n\"Okay,\" I said. \"But that was such a little fib. Can you blame her wanting to stay with us instead of couch surfing with friends?\"\n\nKate ran her hand over my crotch. \"I think you've been letting your dick do too much of your thinking. Now come to bed and show me if he's learned any new tricks from your mistress.\"\n\nI hugged Kate, her lean body unfamiliar after spending so much time embracing Amy's curves.\n\nKate laughed when I scooped her up and threw her on the bed.\n\nShe seemed frantic to fuck, rubbing against me, talking dirty, stroking me while greasing herself with the lube.\n\n\"I missed you, you know,\" she said with a hungry look. \"All alone in this giant bed.\"\n\n\"I missed you too, Kate. Two weeks apart is too long.\"\n\n\"How do you want to take me? Doggy?\"\n\nKate knew it was my favorite position, but I also knew hers.\n\n\"Get on top,\" I said, \"so I can see you and play with your tits.\"\n\nI was rock hard and ready when she mounted me and slid me inside. She felt glorious, and I was panting with excitement to be making love to my wife again.\n\nKate began riding me eagerly, lifting then impaling herself, sliding and grinding while I held her compact boobs, thumbing her nipples the way she liked.\n\nShe worked away frantically, but though she tried her best to mask it, she was uncomfortable. Obviously, something didn't feel right.\n\nI grabbed her hips to get her to slow. \"Kate,\" I said, \"go easy. We don't have to do this.\"\n\nShe sped up, forcing my dick into her with increasing frenzy, hair falling over tightly shut eyes, her face scrunched in grim determination.\n\n\"Kate... please.\"\n\nShe stopped, breathing hard, jaw tight. I reached to caress her cheek, seeing her pain and disappointment.\n\nShe rolled off and flopped onto the bed.\n\n\"I'll blow you,\" she said. \"Or use my hand. What do you want?\"\n\nI pulled her to me. \"Let's just cuddle, Kate. I'm okay.\"\n\nKate started stroking me. \"Come on, Ben. I can get you off. Come for me. Please.\"\n\nMoving her hand away, I said, \"It's all right Kate. You don't have to get me off. You know I can't enjoy it when you don't.\"\n\nKate looked at me, then nodded and expelled a breath of frustration. She rolled to her side, facing away, and I scooted close to embrace her from behind.\n\nAfter a few moments, she said, \"I wanted tonight to be special. I thought after so long apart, maybe for once I'd...\"\n\n\"It's okay. We have all week, Kate. You usually get 'inspired' when we're in New York. Anyway, I came here to be with you, not just to fuck you.\"\n\nOver the years, Kate and I tried everything as her sex drive waned: toys, role-play, every kind of porn. Each helped, but the appeal of each eventually wore off. Meanwhile, my libido raged.\n\nWhen Kate fell asleep, I considered going back to old habits and jerking off, but after a week of mind-blowing sex with Amy, I knew I could last.\n\nI pictured Amy alone in her huge hotel bed, alone and feeling uncertain and rejected. I longed to slip into her room, just to see if she was okay, just to hold her. I couldn't. I promised Kate.\n\nHow could I balance Kate's feelings with Amy's and my own? Kate was right: if I couldn't sleep with Amy any longer, she would have to move out. The thought made my guts tighten with a queasy sense of loss.\n\n~~~~\n\nSaturday, eating breakfast in the hotel restaurant, Kate and I planned which New York landmarks to show Amy that day and next. \n\nAmy sat listless, eyes dull, and toyed with her food.\n\n\"You didn't sleep?\" I asked. \n\nShe forced a smile. \"A little. I've never slept in a hotel before. Isn't that sad? The room is awesome, but it's so big. The bed too. Took forever to get to sleep. And I kept waking up every time the air conditioner or whatever it is turned on. Hope you guys slept okay.\"\n\nWith Kate to hold, I had slept well, but kept waking up with an erection, each time with thoughts of slipping into Amy's room. From the desperation Amy was flashing from across the table, I knew she wished I had.\n\nKate had already bought tickets to Top of the Rock at Rockefeller Center, so we started there. We decided to take the subway to give Amy the full New York experience. She was fascinated by how everyone studiously ignored each other, the grime, and the complexities of the subway map.\n\nAt Top of the World, Kate and I smiled at each other seeing Amy bouncing around the observation platforms, exclaiming and grinning as she recognized Central Park and other landmarks. She reminded us so much of our own excitement the first time we saw the city.\n\nAs we walked to the next landmark, Amy was looking up and around. \"It's amazing to see a place you've only ever seen in movies,\" she said, \"but it doesn't smell very good.\"\n\nI laughed. \"Not in the summer, that's for sure.\"\n\nWhen crowds allowed, Amy walked on one side of me, Kate on the other. Amy slipped her hand into mine. When Kate noticed, she flashed Amy sour a look and Amy, chagrined, let go.\n\nThe rest of the day we toured the city. Amy's infectious excitement and wonder was tempered by Kate's constant chilly vibes.\n\nAmy was tactile, always leaning in to touch my arm and point and something she had discovered, or just reaching for my hand. Several times during the day she started to lean in to kiss me out of habit then, catching Kate's hurt stare, slumped her shoulders and retreated.\n\nAfter dinner back at the hotel, Kate went into the bathroom, leaving me alone with Amy for the first time all day.\n\nShe was in my arms at once, eyes watery.\n\n\"This is torture, Ben! Why did Katherine invite me? I would have been fine back home. You two could have been alone.\"\n\nI stroked Amy's hair, sharing her misery. \"Give it time, Amy. It's all new to her. To all of us. Monday Kate has a radio interview. We'll have most of the day to ourselves then.\"\n\n\"But we still can't make love, can we?\"\n\n\"Kate asked us not to.\"\n\nAmy sniffled. \"Then send me home! I can't stand being close to you when I can't even kiss you. Can't even hold your hand. And Katherine's so snippy. We used to be friends!\"\n\n\"Shh. Amy, just\u2014\"\n\nThe bathroom door clicked open. Kate stood framed in the doorway, seeing Amy in my arms. The hurt in her eyes felt like a stab through the heart.\n\n\"Amy,\" she said, quietly.\n\nAmy pushed me away. \"I know! I'm not allowed to touch him. I'm not even allowed to look at him. I'm sorry. I'm going to my room. Good night.\"\n\nShe yanked open the connecting door to her room and stomped through, slamming it behind her.\n\nKate stared at the door, looking half angry, half ready to cry.\n\n\"She wants to go home,\" I said with a sigh.\n\n\"Yeah. I heard.\" Kate stepped to Amy's door and knocked. Amy had locked it and refused to answer.\n\nKate knocked again then said, \"I'll talk to her in the morning. Was I really that awful today?\"\n\n\"You're being really cold. Does she deserve that? I'm the one you should be angry with.\"\n\nKate sighed. \"I'm not angry with either of you. I just... I don't know. I don't even know why I'm being like that with her. I feel awful. Let's just go to bed.\"\n\nThe moment we entered the bedroom Kate went to her knees and took me in her mouth. She licked and sucked eagerly, stroking me, running her fingers across my balls, using her considerable skills and years of practice. Soon I was blasting down her throat, leaving me weak and gasping.\n\nShe smiled up at me. \"I'm still good at that, aren't I?\"\n\nI pulled her to her feet. \"Best in the world, Kate. Best in the universe.\"\n\nWe stripped each other and slipped into bed. We cuddled, Kate idly stroking me until I was ready again then urged me to take her.\n\nAgain Kate insisted she was enjoying it, frantically urging me to use her, come in her. But like the night before, she tried to hide how uncomfortable it was, even painful. \n\nI stopped.\n\nKate rolled away and when I wrapped around her from behind, I felt her shuddering with sobs.\n\n\"Kate,\" I said, \"listen\u2014 \"\n\nHugging a pillow, Kate mumbled, \"I don't want to talk about it.\"\n\n~~~~\n\nSunday morning Amy was even more droopy, avoiding my eyes and giving only one-word responses as we planned the day. Kate looked exhausted as well, having tossed all night, waking me each time she turned.\n\nEverywhere we went, Amy trailed behind us, never once trying to walk beside me, never reaching for my hand. She barely spoke all day. She was still interested in each sight we visited, but she was far more muted than the day before, and always wary of Kate.\n\nI had been trying to think of ways to reconcile them, to find some way to make my affair with Amy work, but then realized what a selfish thought that was. I couldn't stand seeing either of them so miserable. It couldn't go on.\n\nWhen we took a shortcut through a small park heading back to the hotel, some guy passed us then suddenly yanked Kate's handbag off her shoulder so hard it spun her sideways.\n\nThe thief streaked with the handbag through the park gate then cut left, sprinting down the street. \n\nAmy didn't hesitate\u2014she sped after the scumbag. We yelled for her to stop, but Amy had reached the edge of the park. She vaulted the low iron fence and pursued, long legs stretching, hair whipping behind her.\n\nBy the time Kate and I made it out the gate to the sidewalk, Amy was loping back to us, purse in hand. We saw the creep at the end of the block, limping away fast.\n\nGrinning, her face a sheen of sweat, Amy handed the purse to Kate. She bent to catch her breath. \n\n\"Oh, my god!\" Kate said. \"Amy, are you okay? Did he hurt you?\"\n\n\"I'm fine,\" Amy laughed. \"He gave up the purse soon as I pushed him to the ground.\"\n\nI saw red. \"Why did you DO that? What if he had a knife? Or a gun?\"\n\nKate joined in. \"He could be part of a gang. You could have been hurt. Killed!\"\n\nAmy's grin faded into confusion. \"What? You saw his clothes. You saw how he moved. He was just some crack-head looking for an easy score. He was by himself. He wasn't dangerous.\"\n\n\"You don't know that,\" Kate said. \"This isn't like home. Do you know how many murders there are here? Your life isn't worth my purse. Why did you chase him? You should have just let him go! Why didn't you let him go?\"\n\nAmy's eyes darted from Kate to me then back. Her face darkened.\n\n\"NO!\" she yelled, stomping her foot. \"NO! No one's stealing your stuff. No one's hurting you. I grew up around junkies like that. I know them. They're the same everywhere.\"\n\nAmy's face was crimson, her fists balled stiffly at her sides. Kate and I were shocked by her rage.\n\nAmy yelled, \"No one hurts the people I love! Not if I can stop it. No way was that shitbag taking your purse. You've got all your interviews and signings tomorrow. It's got your credit cards and everything. You need it.\"\n\nHuge tears streamed. Kate and I reached for Amy at the same time, but Amy turned her back and crossed her arms.\n\n\"Can't I do anything right anymore?\" she sobbed. \"He was just a crack-head. Couldn't even run fast. Guys on meth run fast. Guys on meth will cut you.\"\n\nKate's painful expression matched my own. She gently put a hand on Amy's shoulder but Amy shrugged it away.\n\n\"I'm sorry,\" Kate said. \"I was scared you'd get hurt. I couldn't stand it if you got hurt, Amy.\"\n\n\"Bull fucking shit,\" spat Amy. \"You don't care. You hate me now.\"\n\nKate gasped. \"That's not true! Of course, I care. Amy, I\u2014\"\n\nAmy waived her arm dismissively and stomped away.\n\nWe took a taxi back to the hotel. Amy slumped against the door, staring out at the passing city. Kate looked exhausted and miserable.\n\n~~~~\n\nWe entered the suite, relieved to be back. Before Amy could slink off to her room, Kate caught her arm and pulled her close. Amy tried to push away, but Kate clung. She whispered in Amy's ear for several moments.\n\nThey separated then Amy padded into her room, head down, avoiding my inquisitive look. She left the door open.\n\nKate said, \"I shouldn't have waited so long to talk to her. So we're going to do that now, okay?\"\n\nShe went into Amy's room and clicked the door shut.\n\nI shouldn't have, but I stood listening at the door for some minutes. I didn't know what to expect. Yelling? Lamps being thrown? And who would be doing it? There were muffled voices, then what might have been sobs, then much more talk. ",
        "Whatever was happening, it seemed like it would take time. I raided the suite's mini bar of its tiny overpriced bottles of liquid courage, then sat to sample each one.\n\nWould Kate kick Amy out? She had every right. Or would Amy realize sleeping with a forty-year-old married guy was ridiculous and leave to find a guy she deserved? That would be sensible.\n\nWhatever they decided, I had no say. \n\n~~~~\n\nKate emerged from Amy's room looking grim.\n\nI stood, but had to steady myself with the arm of the couch.\n\nKate eyed the array of mini bottles on the coffee table. \"You only drink like that when you're really worried. What are you worried about, husband?\"\n\n\"You. Amy. The universe in general. Are you okay? How's Amy? What did you talk about?\"\n\n\"Oh, you know: you, her, the universe in general.\" Kate flashed a smile. \"Amy's better now. I think we're friends again. I asked her to forgive me for being so awful to her. And thanked her again for getting my purse and for helping you last week with your... needs.\"\n\nI blinked. \"Uh, okay. And?\"\n\n\"And she's just so sweet, Ben. Growing up like she did, I'm amazed how wonderful she is. I feel so awful for doubting her, for being so shitty to her. You should have seen her in there\u2014apologizing for scaring us at the park, crying and apologizing for sleeping with you, saying she'll move out.\"\n\nThere it was. As I feared, my tryst with Amy was at an end. \"Yeah,\" I nodded. \"I guess she has to.\"\n\nKate took my hand. \"Ben, I asked her to stay. I asked her to keep sleeping with you.\"\n\nI sucked in a breath. \"Kate, no! It's so wrong. It upsets you. As it should. Don't make sacrifices for me.\"\n\n\"When you've found the love of your life, you expect to make a few sacrifices, right? That's what you always say. But I'm not.\"\n\n\"Of course you are,\" I said.\n\n\"No,\" said Kate. \"I've been horrible. When I saw you two at the airport I felt... threatened. Replaced. But since you've been here, I know you love me just as much as always.\"\n\n\"Of course I do, Kate. You're everything. Amy's just... relief. A fling. A fuck toy on the side.\"\n\nKate scowled. \"Don't call her that! Don't minimize her. Amy's so much more. To you. To me. And I'm glad. I asked her if being with you, being with us, was what she really wanted.\"\n\n\"And?\"\n\nKate nodded, grinning. \"Oh, she's sure. Really, really sure. She said she knows it's weird, but she can't help being attracted to you, or how she feels. Then she asked about you. If you felt anything for her. I told her how much you care about her, and how I was scared you were falling in love. You know what she said?\"\n\n\"Uh, what?\"\n\nKate embraced me. \"She said don't worry because your heart's big enough to love us both.\"\n\nHugging me tight, Kate whispered. \"I think she's right.\"\n\n\"Kate, it doesn't matter. You do NOT have to put up with this.\"\n\nKate smiled up at me. \"I'm not losing anything here, Ben. You know the other thing I noticed when you two got off the plane? How happy you looked. Usually at the end of your busy time you look like you're ready to die. Now you look five years younger. And Amy? She was glowing. Free. What a change from when she moved in. You must have noticed. You're so good for her, Ben. And she's good for you. For us both.\"\n\n\"Kate...\"\n\n\"Shh. I want her to stay. I want you to sleep with her. Anytime, anywhere. It's okay. Let's see if this can work out. I told her maybe we could all be family. A weird one, but a family. Think that could happen?\"\n\n\"I... buh... I mean...\"\n\nKate laughed. \"Close your mouth, Ben. But I still want you with me at night. I can do without the sex... most of the time... but it's so hard to sleep without you beside me, okay?\"\n\nA nod was all I could manage. \n\n\"Good,\" Kate said. She pushed me towards Amy's door. \"Now, go be with her. Love her. She needs you so much. And come back after and tell me all about it, okay?\"\n\nTurned back, I said, \"Oh? I thought you wanted to see for yourself.\"\n\n\"Oh, right. That. Does that interest you?\"\n\n\"I've been trying to figure it out since you said it. It just came out of nowhere.\"\n\n\"Think so? You know I like watching. We used to watch couples porn to get me going. And when Kirsten and I shared a dorm room...\"\n\n\"Yeah, yeah,\" I said. \"She fucked guys while you pretended to be asleep. That turned you on?\"\n\n\"Oh, maybe a little.\" Kate looked wistful then straightened herself. \"The thought of you with Amy is... interesting.\"\n\n\"Is that so?\"\n\nKate shrugged. \"Well, I suspect there's marginal degree of compersion in the matter. And, of course, from a sociological perspective, the dynamics of consensual non-monogamy and thruples in previously mononormative pairings is\u2014\"\n\n\"Oh, no, professor!\" I laughed. \"You're not hiding behind your jargon. What are you really trying to say?\"\n\nKate paused. \"I want this thing with Amy to work out. And sometime, if she agrees, I'd really like to watch you two going at it.\"\n\n\"Kate,\" said Amy, suddenly appearing in the door to her room. \"Is it okay if I try that tub tonight?\"\n\nKate and I separated, looking guilty. How much had Amy heard?\n\n\"Of course,\" said Kate. \"You'll love it. You want Ben to join you, of course.\"\n\nAmy's eyes flared, but she said, \"Only... only if that's okay.\"\n\nSmiling, Kate pushed us towards the bathroom. \"Go on, you two. Have fun. I have email and things to do for tomorrow, then I need some sleep.\"\n\n~~~~\n\nI started filling the tub. When I turned, Amy was already naked.\n\nIt had only been two days since I had last seen her body, but I paused to admire her shapely, firm figure, her breasts sitting high and firm, the fertile flair of her hips and her sweet little pussy. Amy's face glowed with burning need, aimed full bore at me. \n\nThen we were in each other's arms, kissing, hugging, hands roaming everywhere.\n\n\"I missed you!\" Amy breathed, helping strip off my clothes.\n\n\"It's only been two days,\" I said, kissing her neck, massaging her tits, stroking her ass.\n\n\"Feels like centuries.\" Amy put her arms around my neck then jumped up, locking her legs around my waist while I supported her by her ass. She reached between us, trying to work me into her already slick opening. \n\n\"Whoa,\" I said, lowering her feet to the floor. \"We haven't even tried the tub yet.\"\n\nAmy whined, \"You're going to make me wait? Just fuck me! We can go slow the second and third and forth times.\"\n\nLaughing, lifted her and sat her on the counter, putting her boobs at mouth level. I started massaging and sucking. \n\nHaving her breasts played with calmed Amy, at least for a while. She leaned forward and stroked my head, holding my mouth to her beautiful boob. Looking up, I saw her mouth open and eyes glassy as she watched me nurse.\n\nI satisfied Amy long enough for the water in the tub to cover the jets, then led her down off the counter to step into the steamy water.\n\n\"Oh, wow,\" she said, easing herself in, \"this thing is like a swimming pool!\"\n\nIt was wonderful seeing her smile again. \n\nI turned on the tub's underwater lights then switched off the bathroom overhead lights. Rippling lines and patterns played around the room as I stepped into the tub.\n\nLit from below in the clear water, Amy looked delicious, her expression serene as she lay back, breasts breaking the surface.\n\nWe soaked for some time then Amy found the control for the jets. She squealed at the grinding whoosh and splash as the water foamed, the patterns from the submerged lights making mad dances on the ceiling and across our bodies.\n\nShe tried leaning back against a jet, then tried one against her pussy, but soon turned off the motor.\n\n\"Too loud,\" she said. \"It feels kinda neat, but I don't get the attraction.\"\n\n\"Yeah,\" I said. \"Kate and I never turn it on anymore. We prefer the quiet.\"\n\nAmy laid back to soak but soon she started eyeing me with hunger again. She then surged over to straddle me.\n\n\"Now can we fuck?\" she said. She tongued her lower lip. \"We've never done it in a tub before.\"\n\nBefore I could answer, there was a knock and the door opened. Kate stepped in, shielding her eyes from us.\n\n\"Sorry,\" she said, \"Don't mind me. Just getting my face cream.\"\n\nAmy had mischief in her eyes. \"It's okay, Kate. You should join us. There's lots of room. Shame to use all this water for just two people.\"\n\nKate looked at Amy straddling my lap with her pert breasts inches from my face. With a distant expression, Kate padded over and sat on the edge of the tub, her eyes roaming over our naked bodies. \n\nShe reached down to swirl a hand in the water. \"Oh, I don't want to intrude,\" she said. \"And I doubt saving water is the reason you two are bathing together.\"\n\nAmy separated from me, sploshing to the opposite side of the tub. I caught her eye and tossed my chin from Kate then pointedly to the water. She got the hint.\n\n\"Really, Kate\" I said. \"You should... JOIN US.\" Amy and I grabbed her and yanked her sideways into the tub, clothes and all.\n\nKate screeched, legs high, arms flailing to stop her fall. \"You bastard!\" she laughed as the water enveloped her.\n\nI pulled her the rest of the way until she lay beside me. Amy was grinning from her end of the tub. \n\nKate gave me a chiding look and shoved me. \"Now I'm soaked,\" she said.\n\n\"Water does tend to do that,\" I quipped.\n\nKate started peeling off her soaked clothes. She draped each item over the side of the tub and soon was as naked as Amy and I. She flashed me an exasperated look then relaxed by my side. Amy just watched, smiling.\n\n\"This should be your alone time,\" Kate said. \"I'm intruding.\"\n\nAmy said. \"You said we could be family. Don't Japanese families do this?\"\n\nKate instantly switched to professor mode. \"Well, certainly. There's a tradition of 'hadaka no tsukiai' and a long practice, though now declining, of mixed bathing in public 'onsen.' I peer reviewed a paper on it a few years ago.\"\n\n\"See?\" said Amy. \"No reason we can't do things together.\"\n\nThe three of us soaked, enjoying the warmth and finally being together without stress.\n\n\"Know what we really need here?\" said Amy.\n\n\"Bubble bath?\" I said.\n\n\"Super soakers. But since we don't have any...\" Amy splatted me in the face with a balled-up facecloth she had been hiding.\n\nI peeled it off then threw it back, hitting Amy square in her face. That led to general pandemonium of the three of us splashing each other, tossing facecloths and laughing.\n\n\"Okay, okay,\" Kate chuckled, \"We better stop before we flood the room below us. You two are sillier than my first-year students.\"\n\nWe lounged and talked until the water cooled. Amy stood, water streaming from her body. She stepped out and stood dripping on the bathmat.\n\nShe cocked a hip. \"Ben, aren't you going to dry me?\"\n\nOne glance at Kate told me it was okay.\n\nI emerged from the tub and grabbed one of the hotel's enormous fluffy towels.\n\nWrapping it around Amy from behind, Kate watched mesmerized as I lovingly dried every inch of my mistress. When I got to my knees in front to dry her legs, Amy squeaked in surprise when I gave her pussy a friendly lap with my tongue. \n\nAmy's eyes were alive with hunger when I stood.\n\nSitting up in the tub, Kate said, \"Are you going to take Ben to your room? I think he needs you now.\"\n\n\"Well,\" said Amy, \"I was thinking... if you really want to watch us, could... could we use your room? Your bed is bigger. I don't mind if you see us, you know. It might be fun.\"\n\nKate's mouth dropped open, then she composed herself. Slowly, she nodded then said, \"Go ahead. I'll be in in a minute.\"\n\n~~~~\n\nThe bedroom air felt cool against my skin as we left the humid bathroom. I turned Amy to face me, but before I could speak she pressed her warm body to mine and touched her fingers to my lips.\n\n\"Don't,\" she said. \"I'm not a kid, remember? I'm not trying to please her. It'll be hot if Katherine watches us.\"\n\n\"So, I guess you heard us before. Don't you feel weird about it?\"\n\n\"Why? It'll be like starring in our own private porn movie. Just for Katherine\" Amy strode to the enormous bed and pulled back the covers. \"And don't you think she should see how good we are together?\"\n\nI switched off the lights. With the curtains open, the city glow filled the room like candlelight.\n\nAmy moved to the window to view the sprawling city. I encircled her from behind.\n\n\"So huge,\" she said, hugging my arms and swaying. \"Could you ever live here?\"\n\n\"It's too big,\" I said. \"I like our little town.\"\n\n\"Me too.\" \n\nAmy turned in my arms. We then noticed that Kate, wrapped in a robe, had crept into the room and was standing in the shadows of the corner. \n\nAmy smiled at her then looked at me. Without a word, she sank to her knees and took me into her mouth.\n\nAmy found it intimate when I went down on her, and I felt nearly the same with me in her mouth while Kate watched.\n\nSilently, Kate moved from the corner over to a chair by the window. She was still in darkness, hidden by the mass of curtains, but now had a front-row seat beside the window close to the bed.\n\nAmy didn't seem to notice. She worked away on me, devoted to pleasing me with her mouth. \n\nShe wasn't as skilled as Kate, but she was learning fast. Amy licked, sucked and teased, looking up with adoring, playful eyes, playing with my balls, occasionally jolting me by raking fingertips along the back of my legs. Soon I felt the urge to come rising. I guided Amy to her feet. She looked at me uncertain.\n\n\"You're getting so good at that,\" I said, \"But I don't want to come yet. Get on the bed.\"\n\nAmy's eyes lit up. She crawled onto the bed and laid back. I slid onto the cool sheets and pulled her to me.\n\n\"I need you so much, Ben,\" Amy said. \"Her hand encircled my dick and stroked it. \"Fuck me.\"\n\n\"Have I taught you nothing?\" I smiled and slid down between her legs. Glancing towards the chair, I could feel Kate watching, could hear her excited breathing, though she was hidden in shadow.\n\nAmy guided my face to her pussy and moaned when I started exploring her. She squirmed, stroking my head.\n\nI built her arousal slowly with teasing light touches, gradually increasing contact with her sensitive clit and eager little opening. Soon Amy was arching and moaning, either forcing my face into her or flopping boneless with mewling little gasps as I teased, licked and worked fingers into her.\n\nWhat was Kate feeling as she watched Amy writhe and moan with my face buried in her pussy? Jealousy? Arousal? Longing for the sex drive she once had? Or maybe she just appreciated our antics as performance art. After finally seeing the reality of me with Amy, perhaps she'd change her mind for good and demand I end the affair.\n\nMy musings were interrupted when Amy drew a breath and stiffened, lifting her hips from the bed then collapsing, her passage rhythmically grasping my fingers. She groaned as orgasm washed through her, a light sheen on her skin glowing in the soft city light.\n\nI slid up to hold her as Amy slowly returned from the void. Her eyes fluttered open and found mine. \n\n\"Fun?\" I said.\n\nShe bit her lip. \"You know it was. You like doing that way too much. Now will you fuck me?\"\n\n\"Eh?\" I said, swabbing a finger in my ear. \"What was that, missy? Didn't quite hear you. I'm getting old, you know.\"\n\nAmy dropped her head to the pillow, groaning in frustration. \"Don't tease! I said FUCKING FUCK MEEE!\"\n\n\"Right now? Are you sure?\"\n\n\"Grrrrr!\" She pulled me onto her and reached down to line me up, lifting her hips trying to force me inside while her other hand pushed on my ass.\n\nI resisted, ducking just in and out of her opening, watching the desperation in her eyes mount as she squirmed and bucked. When she looked like she was about to cry from frustration, I sank into her balls-deep in one agonizing smooth stroke.\n\n\"Uh-gaaahhh!\" Amy yelled, clawing my ass, grabbing the sheets and convulsing. \n\nKate sprang from her chair. \"Oh my god, Ben. Careful! Don't hurt her!\"\n\n\"Uh?\" I grunted, jarred by the distraction. \"Fuck's sake... I am NOT hurting her.\" \n\nAmy's body relaxed then she sought Kate's hand. Grasping it, she said, \"I'm fine, Kate. It's wonderful. Oh, god, he's so wonderful.\"\n\nThe concern in Kate's face didn't diminish. \"It sounded like he hurt you. He's done that. Long ago.\"\n\n\"To you?\" asked Amy.\n\nKate sat on the edge of the bed, still grasping Amy's hand. \"Ben loves me. He'd never.\"\n\n\"Then he won't hurt me, either.\"\n\nKate inhaled, stung by the implication. I saw her thinking, face churning with emotions. Finally, her expression softened. She looked at me softly, then down at Amy. \n\nShe leaned close. \"What's it feel like?\" \n\n\"Uh?\" said Amy.\n\n\"Describe it. It doesn't hurt? Then tell me what it's like.\"\n\nAmy blinked. \"It's, uh, you know. When he goes in that first time, I want to scream, it's so good. So exciting.\" Amy wriggled under me, shifting my cock within her. \"He's so deep in me, Kate. I'm stuffed with him. It's the best feeling in the world.\"\n\n\"Yes?\" Kate breathed. \"Go on.\"\n\n\"When he's on top, his weight on me like this, and he's filling me, I feel... complete. Owned. I'm his prize. His world. And he's mine. Then... oh! Uuugh...\"\n\nI couldn't hold still any longer. Amy gasped when I withdrew, her passage clinging wonderfully, then groaned as I pushed back in. Her face radiated pure joy. I started fucking her.\n\n\"Oh. Oh! When... when he starts moving... like that... I never want it to stop. I need him. I love him. I'd... ooo... give him everything... uh! Let him do anything. Oh, Kate... it's good. He's good. Oh, fuck, I can't... guh.\"\n\nAmy's eyes lost focus and she clung, knees spread and lifted, offering herself, grunting and gasping as I took her.\n\nKate stroked Amy's cheek. \"Yes,\" she whispered, straightening. \"That's just how it was for me, too.\"\n\nAmy gasped and rutted against me then she was all I could focus on. Together, we built up our rhythm, both of us groaning and gasping, kissing and smiling, reveling in the joy of our coupling after being deprived for so long.\n\nKate remained on the edge of the bed, watching us mate.\n\nAmy seemed even more excited than usual, eager to meet my every thrust, clawing my back, holding me to her desperately. \n\nWhen I reached my limit, Kate read the signs she knew so well and whispered, \"Don't come yet. Fuck her doggy style. For me.\"\n\nI withdrew, leaving Amy confused, incoherently groping, trying to draw me back. I nudged her to roll over and when she realized what I wanted, gave a groggy grin and rolled on her tummy. She scooted her ass high and wiggled.\n\nGetting into position behind her, I nudged her knees further apart then paused to admire her. Amy was so intimately exposed, so willing and completely trusting. I could to anything to her, and she would let me.\n\nAmy's head poked up when I pushed back into her welcoming body, then she lowered her cheek to the mattress as I sunk fully inside and resumed fucking her.\n\nI was so close to the edge I had to go slow. Amy growled and moaned as I took her, pushing back at me. She slid one hand in front to grip the sheets and reached the other between her legs to toy with her clit.\n\nWhen Amy's hair fell over her face, Kate reached out to brush it aside then stroked Amy's head as I impaled her. My heart lurched to see Kate caressing my mistress with such affection.\n\nKate leaned close to Amy's ear. She glanced at me and said, \"That's my man fucking you, Amy. Can you feel how much he needs you? He tried so hard to resist. He couldn't. He couldn't stop himself fucking you.\"\n\nAmy's eyes were glazed and her mouth hung open as her face rocked into mattress with every stroke. She tried to respond. \"Guh huh.\"\n\n\"Ben couldn't resist me either,\" said Kate. \"Did you know he was my student?\"\n\n\"Uhh?\"\n\n\"Sociology 101. Final year elective. Bird course, so he thought. Came to my office desperate for help. The way he watched me in class I knew what else he wanted. I knew his reputation. But he was bright. Different. I let him fuck me over my desk. Like he's fucking you now.\"",
        "I was picking up the pace, losing control as Kate whispered our secrets to Amy.\n\n\"He was too rough, but I took it. Later in my bed, I forced him to look into my eyes. Forced him to see me as a person, not meat. He melted. We made love. His first time making love... not just fucking.\"\n\n\"Uh?\" Amy grunted, barely coherent. \"Same... with me.\"\n\nKate nodded and lovingly stroked Amy's head again. \"I thought so,\" she said, then smiled at me. \n\nShe sat back on the edge of the bed, placidly observing us mate, her expression distant. She surprised me by sliding her hand into her robe to touch herself.\n\nSeeing that, I galloped past the point of no return before I could stop myself. I bucked once, twice, then savagely pulled Amy's hips to me, forcing myself deep. The world narrowed into bliss as I emptied into her with burst after burst.\n\nAmy strummed her clit in a blur then soon joined me, releasing a long ragged groan as she came a second time as I inseminated her.\n\nWe collapsed and I wrapped around Amy's limp body from behind, nuzzling her neck, both hands on her breasts. Amy reached back to stroke my neck. She turned her head, dazed and smiling weakly. Amy snuggled back against me and within minutes, fell asleep. \n\nWe lay together for some minutes before Kate pulled on my shoulder. I turned to find her stretched naked on the bed behind me.\n\nShe gave me a kiss then guided my hand between her legs. She was sopping wet. \n\n\"Really?\" I whispered. We'd had to rely on lube for so many years.\n\nShe shrugged. \"How soon until you can go again?\"\n\nThe thought of fucking a turned-on Kate had me rising instantly. Extricating myself from Amy, I turned around to face her. We kissed. Kate stroked me, still slick from Amy. I caressed and explored the rare wonder of Kate's dripping pussy.\n\nWhen I was hard enough, I climbed onto her and we joined, sighing as I filled her.\n\n\"Is that okay,\" I asked. I couldn't keep the smile from my face.\n\nKate wriggled, stirring me inside. \"Mmm. It's really good. I almost forgot how wonderful you can feel inside.\" She grinned. \"Now, how'd you like to fuck your wife? Just for a change?\"\n\nWe went slow, smiling and looking into each other's eyes. Kate was excited, drawing in quick breaths each time I penetrated her. She wasn't pretending, she wasn't enduring it\u2014she was with me, enjoying every moment. She hooked her long legs around mine and pushed back as I pushed in.\n\nThat first time in her office it felt like a conquest to nail the tall, confident professor with those teasing, knowing eyes. Later in her bed she showed me what it was to make love, and I felt like the luckiest man on earth. Every day since then I'd felt exactly the same.\n\nNext, we rolled over so she could straddle me. I held her hips and stroked her boobs as she rode and slid and ground against me. I stayed hard. Having just come inside Amy there was no need to rush.\n\nFrom the corner of my eye I realized Amy had woken and was watching us furtively, curious but embarrassed. When she rolled away to leave, Kate caught her arm.\n\n\"Stay,\" Kate whispered.\n\n\"You two should be alone.\"\n\n\"Please,\" said Kate. \n\nUncertain, Amy lay back down on her side and watched. Kate picked up the pace, fucking with fervor I thought was long past. Soon she braced both hands on my chest, looking at me with lidded eyes, rising and grinding, chasing orgasm.\n\nWhen she came, Kate closed her eyes and planted herself on me, expelling a deep long sigh. Kate's orgasms were always serene but satisfying little affairs. I couldn't remember the last time she had been able to come. The joy of seeing her rapture set me off and I emptied myself into her joyfully.\n\nKate and I cuddled, kissing and caressing as we caught our breath. \n\nI heard Amy whisper, \"That was so beautiful.\"\n\nThe three of us slept in the huge bed, Kate on one side of me, Amy on the other. During the night I woke, erect and ready. I nudged Kate and guided her hand to my eager cock, but she mumbled, \"Can't, hon. Sore. Amy'll help.\"\n\nAmy did. She woke the moment my dick poked her thigh. She \"mmm'ed\" and pulled me onto her, spreading her legs eagerly. We kissed and rutted until she was ready, then she started working me into her, sighing with contentment as we joined. \n\n~~~~\n\n\"I'm so glad to be back!\" Kate left her roller bag inside the door and plopped onto the livingroom couch.\n\nIt was late the following Friday. Book promotions done and the city explored, the three of us were tired and glad to be home.\n\nHaving spent the week sleeping together in the suite's king bed, we realized we hadn't discussed sleeping arrangements at home.\n\n\"You two should be together in your room,\" said Amy. \"I'll be fine for one night.\"\n\nKate stifled a yawn then said, \"That's sweet of you, Amy, but I'll be out like a light as soon as I crawl into bed. Why don't you just sleep with us again tonight, in case you and Ben get the urge? We can discuss details tomorrow.\"\n\nIn our bed, Kate was asleep immediately. Amy and I were almost too tired to make love. Almost.\n\n~~~~\n\nIt was the day before Amy's 20th birthday. Kate had taken Amy shopping the entire afternoon. She needed new everything.\n\nI had just pulled Amy's cake from the oven and was sitting on the back deck, enjoying the warm rays of the end of summer. I heard them return, laughing and exclaiming. They had become such close friends in the weeks since New York.\n\nSoon Amy came outside. She pecked my cheek then stood in front of me, hands behind her back, rocking on her heels. She wore a new sundress, some wraparound style even sexier than the one she had before. It looked just as effortless to remove.\n\nWhen Kate emerged and sat beside me, Amy surprised me by assuming her famous 'salesman' posture. She hadn't done one of her infomercial-style sales pitches since she moved in.\n\n\"Mr. L? Mrs. L?\" she said, \"As the very best customers of my odd jobs service, 'Amy Does Anything', now that we're closed I feel it's important to reward your years of loyal patronage with a special customer appreciation gift. Now, this is optional but not time limited: you can claim your gift at any time.\"\n\nWhen I looked at Kate, her grin was just as wide as Amy's.\n\nI said, \"Okay, Amy. I'll bite. What gift?\"\n\nAmy glanced at Kate and tongued her lip nervously.\n\n\"Oh, Ben, can't you guess? I want to give us all a baby!\""
    ],
    "authorname": "SyleusSnow",
    "tags": [
        "19-year-old",
        "adultery",
        "mature",
        "older man",
        "romance",
        "romantic",
        "voyeur",
        "younger woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/on-the-side-ch-02"
}