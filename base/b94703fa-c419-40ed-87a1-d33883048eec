{
    "title": "Murder Mystery Weekend Pt. 06",
    "pages": [
        "The Big Reveal \n\nFinally, Teresa called us together for the 'Big Reveal', as she called it. We moved inside, gathering chairs into a big circle, and getting fresh drinks. Our Captain placed us individually, in the same order as her list that had been posted in the kitchen - the same one that helped us find the treasure. \n\nClaire was first, then Eliza. Craig looked so forlorn, that Teresa relented. She had the girls trade places, so that Claire and Craig could sit together. Leo was next, then Barb and Ben. Eric was 7th. Sheila, Lena, and I ended up sharing the couch. \n\nTeresa explained her rules for the grand finale. \"You will all vote for the person you think is the murderer. You may also explain your reasons, or your theory, and how you came by it. After your vote, the rest of us can guess who you really are. Finally, you can reveal your secret motives and your goals. Are we ready? Claire, you were #1. You can start.\" \n\nClaire blushed, of course. \"I think the murderer was ... Leo.\" She pointed a finger at her brother. \n\n- \"Me? Isn't it enough that you shot me? Now you have to kill my reputation, too?\" \n\n- \"Why, Claire?\" asked Teresa. \"Why do you think it's him?\" \n\n- \"I don't know. He looks ... shifty.\" She had no clue. Claire probably simply adopted the same theory as her companions on the 'bad' side. \n\n- \"Does anyone know who Claire was?\" asked Teresa. \"Anyone other than Ben, Barb, or Craig?\" \n\n- \"A pirate groupie.\" guessed Sheila. \n\n- \"A wannabe pirate.\" I said. \n\nTeresa handed Claire another copy of her character description, and encouraged her to read it to us. \n\nPENNY - an adventurous young woman, you always wanted to be a pirate. You ran away from home so that you could go to Kingston and join Redbeard's crew. You arrived too late; he had already been arrested. Friendless, and desperate for work, you sign on as a sailor aboard HMS Retribution. \n\n- \"Did you have any special equipment?\" prompted Teresa. \n\nClaire blushed again. \"I had ... the Bible.\" \n\n- \"Which you gave to Colin.\" said Ben, with exasperation. From the very slight hesitation before he said my name, I knew that he wanted to say 'fucking Colin'. \n\n- \"I traded her information for it.\" I said. \"She had no way of knowing that it would be valuable later.\" I was just trying to get her off the hook. From the look she shot me, I think that Claire appreciated it. \n\n- \"Craig.\" said Teresa. \"Your turn. Who do you think the murderer is?\" \n\n- \"Leo.\" said Craig. \"He had a pistol. Plus, I saw him go down into the basement.\" \n\n- \"To get a beer.\" said Leo. \"Completely innocent.\" \n\n- \"Does anybody know who Craig was?\" asked Teresa. \n\n- \"Another wannabe?\" guessed Sheila. \n\n- \"No.\" said Eliza. \"He was a pirate.\" \n\nCraig read us his character description, supplied by Teresa. \n\nONE-EYED JACK - a former member of Redbeard's crew, you were able to escape capture. You signed on as a sailor on HMS Retribution, hoping that you could either rescue Redbeard, or locate his hidden treasure. Be careful: there will be agents of the Crown aboard, including the Captain. \n\n- \"I had a pistol, too.\" said Craig. \"I probably should have worn an eye patch. Sorry about that.\" \n\n- \"That's OK.\" said Sheila. \"Maybe you were the jack of hearts.\" \n\n- \"Or spades.\" said Eric. When everybody but Sheila looked at him, Eric shrugged. \"Two of the jacks in a deck of playing cards only show one eye. Hearts, and spades.\" That was my friend Eric: the idiot savant. \n\n- \"Leo?\" said Teresa. \"You're up.\" \n\nMy buddy turned and pointed. \"Ben is the murderer. He had a pistol. Plus, I saw him go into the basement. I went to get a few beers, but Ben came up with nothing in his hands.\" \n\n- \"Any guesses who Leo was?\" asked our Captain. \n\nThe most anybody knew was that he wasn't a pirate. Leo took great pleasure in reading his brief bio. \n\nENSIGN MAYWEATHER - You are a naval officer, disguised as a common sailor. Your mission is twofold: ensure that the pirate Redbeard reaches Barbados to stand trial, and discover if any members of his crew or other pirates are aboard the ship. \n\n- \"A narc?\" said Eric. \"Were you going to turn us in and confiscate the treasure? Now I don't feel so bad that you got shot.\" \n\nBarbara was next. When Teresa called her name, Barbara sat up straighter. \"I'm going to say that the killer is ... Eric. I don't quite know why. Just a feeling.\" \n\nEric looked happy to be a suspect. When Teresa asked if anyone knew who Barbara was, we answered in chorus: \"The Falcon!\" Some of the others were generous enough to admit that I had come to that conclusion first. \n\nShe read her description: \n\nTHE FALCON - You were one of Redbeard's top lieutenants, and most likely to succeed him. Loyalty led you to sign on as a sailor aboard HMS Retribution, in the hopes that you might arrange your Captain's escape. But you also know that his treasure is somewhere on the ship - and that it would be enough money to set you up as a pirate captain in your own right. Beware, though: your old rival Ned Mulligan was recently sighted in Kingston ... \n\nI gave Teresa a quick look and a grin. She had set me up quite thoroughly. The Scar was out to kill me, and the Falcon knew I was around. I was lucky to have survived. \n\nBen was next. He guessed that Leo was the murderer. Maybe that was where Craig and Claire got the idea. He was a bit annoyed when most of us guessed that he was the Scar. But he hammed it up when he read his character sheet, growling and snarling. \n\nTHE SCAR - You were one of Redbeard's most notorious and villainous associates, renowned for your skill with pistol and cutlass, your cruelty and ruthlessness. You know that Redbeard's treasure is aboard, and will stop at nothing to get it all for yourself. You know that the gypsy is aboard, and that she can help you to locate it - if you can seduce her, or marry her. Finally, your arch-rival Ned Mulligan may be aboard. It's time to dispose of him once and for all. \n\n- \"Whew!\" said Eric. \"That's quite the bucket list.\" \n\n- \"Wait a minute!\" said Barb. \"What's this 'all for yourself' crap? Were you gonna backstab me at the very end?\" \n\nI tried not to laugh aloud. I was more than a little pleased to see that Ben had failed to achieve any of his goals. Except for having sex with Barbara, I guess. I glanced at Teresa again. Had she been trying to steer Ben towards Lena? She had also made a point of asking me to 'be nice' to her. Was that some elaborate plot to have Ben and me fighting over Lena? \n\nIt was Eric's turn. \n\n- \"I think that the murderer is Colin.\" he said. \n\nI tried to look innocent and offended at the same time. \"Me? Why?\" \n\n- \"You had a pistol. You could easily have gone to the basement - almost everybody did that first night. And you had more of a motive than Ben, or Leo.\" \n\n- \"Anybody know who Eric was?\" asked Teresa. \n\nAll of the good guys knew that he was a runaway priest, since he had performed the wedding ceremony. Then we had to explain about the marriage. \n\n- \"Wait a minute!\" cried Barbara. \"Colin and Lena got married? That's so cute!\" She got up and came over to me, to give me a big hug and a wet kiss. Then she did the same to Lena. \n\n- \"You married her?\" asked Ben. \"Just to make sure that I couldn't? And I fucking missed! Aaargh! I still can't believe I rolled a '2'!\" \n\nTeresa had Eric read his description. \n\nTOM HOOK - You sailed with Redbeard years ago, and participated in some of his bloodiest atrocities. You were having horrific nightmares, and couldn't do it anymore. You deserted, and ran away to become a priest, trying to atone for all the crimes you committed so long ago. When you heard about Redbeard's capture, your remembered his treasure, hidden aboard his ship. You could build a decent church with all that money. But beware of the Falcon and the Scar - they may remember you. \n\n- \"Would you really have spent your share of the treasure on a church?\" asked Leo. \"Or would you drink it?\" \n\n- \"Maybe a bit of both.\" admitted Eric. Then he stood up. \"While I have the floor, I just want to say thanks to Teresa. This was a lot of fun. I enjoyed the treasure hunt, and all the clues, and everything.\" \n\n- \"Hear, hear!\" said Eliza. Others joined in. \n\nTeresa waved her hand. \"Eliza deserves the credit, for hosting us all.\" There was a little mutual admiration society scene, and then some hugging, before everyone resumed their seats. \n\nSheila was next. Her guess took us all by surprise. \n\n- \"I think Teresa was the murderer.\" \n\n- \"What? Why would you say that?\" asked Barbara. \n\n- \"Well, I don't feel sure about any of the other suspects. Besides, Teresa had a pistol. She also had the key to his cell. Remember the vomit? Maybe she fed him something that made him puke, or pass out. That way she could get close and shoot Redbeard while he was out cold.\" \n\n- \"Interesting.\" said Teresa, without giving anything away. \"Does anyone know who Sheila was?\" \n\n- \"She told us her name.\" I said. \"Any relation to Anne Bonny?\" \n\nSheila grinned. \"My little sister.\" Then she read her profile. \n\nKATHLEEN BONNY- You are the older and far more successful sister of Anne Bonny, and a renowned pirate in your own right. You command a sloop, the Devilfish, which is following HMS Retribution at a distance. You were a rival and sworn enemy of Redbeard. Hearing of his capture, you took the opportunity to sign on with Captain Fairwind, disguised as a common sailor. You hope to find and abscond with Redbeard's treasure. \n\n- \"Mission accomplished.\" said Eric, tipping his hat to her. \n\n- \"You fooled us all.\" said Leo. \n\n- \"Except me!\" objected Eliza. \"But I didn't know you had your ship. Does that mean that I get forced to walk the plank, while you keep the whole treasure?\" \n\nSheila looked thoughtful for a moment. Then she laughed. \"No! Now that I know who you are, I think that this will be the start of a very profitable partnership.\" \n\n- \"Who is she?\" asked Leo. \n\n- \"Not her turn.\" insisted Teresa. \"Lena is next.\" \n\nLena blushed shyly when everyone turned to her. \"I think murder was done by ... Sheila. She had pistol. And good reason to hate Redbeard.\" \n\nEveryone had some idea about her character, but Teresa had her read the description anyway. \n\nESMERELDA - You are a gypsy fortune-teller, sometimes gifted with the second sight. Redbeard often consulted you for advice. One of his lieutenants, the Scar, is trying to force you to marry him. You hope to escape to Barbados. \n\n- \"I gave Lena extra clues, to simulate her second sight.\" said Teresa. \n\n- \"That's fair.\" said Eric. \"Worked out great for us. Well, until Sheila and Eliza robbed us.\" \n\nIt was my turn next. I had been thinking about the murderer for some time, on and off. When I found out that it was me, I stopped worrying about it, and concentrated on spreading rumours and false accusations. But if I had to pick someone else ... I recalled seeing Craig coming out of the basement before I went down there. But he had no motive ... \n\nThen I remembered the last person I had seen coming up the stairs - \n\n- \"Eliza is the murderer.\" I said. \"I don't know about the pistol, but I definitely saw her in the basement. And I can rule out many others because they didn't have a motive. But I don't know about her - yet.\" \n\n- \"Does anyone know who Colin was?\" asked Teresa. \n\n- \"Dirty Ned Mulligan.\" said Barbara, with a smile. \n\n- \"Fucking Ned Mulligan.\" said Ben, almost simultaneously, with a scowl. \n\nEric also knew that I was a former member of Redbeard's crew, as did Lena. So did Eliza, to my surprise. I read them my profile. \n\nThat left Eliza. \n\n- \"I think Colin did it.\" she said. \"You went into the basement as I was leaving it. And you had a pistol, which I didn't.\" \n\n- \"Does anyone know who Eliza was?\" asked Teresa. \n\n- \"I do - but only because she told me.\" admitted Sheila. Ee was pretty pleased that none of us had recognized her, or figured out her identity. \n\nSILVER SALLY - You are the waitress/ serving wench at the Mouldy Maggot tavern, a low dive frequented by the worst pirates, including Redbeard and his crew. You have picked up a great deal of gossip working there. You are the one who told the authorities where Redbeard could be found, and you collected a reward for turning him in. But you also knew that his treasure was hidden aboard his ship, so you signed on in the hope of getting your hands on it. \n\n- \"So who did it?\" asked Claire. \n\n- \"Wait - what about Teresa?\" said Eric. \n\n- \"Captain Fairwind.\" she said. \"That's all. No secret identity. No secrets at all. But Claire is right: it's time to unmask the real killer. I will now count to three, and on 3, I will ask the murderer to stand up. Ready? One. Two. Three.\" \n\nI stood up. Then I noticed that Eliza was standing next to me. \n\n- \"What the hell?\" said Leo. \n\n- \"Both of them?\" said Eric. \n\n- \"Eliza - would you go first?\" asked Teresa. \n\n- \"OK. As it said in my profile, I'm the one who ratted ol' Redbeard out. Then I found out that a lot of his crew were signing up on the ship. If any of them talked to him, they might find out that I was the informant. Better for me if he never got the chance. So I poisoned him.\" \n\n- \"The vomit!\" I said. \"I knew that was important.\" \n\n- \"Right. I don't know if he would have died, since he puked up a lot of the poison I gave him. So maybe it was just attempted murder for me. Luckily, Ned here went downstairs and finished the job. With a pistol, too, which steered attention away from me. Thanks, Ned.\" She patted me on the arm, and sat down. \n\n- \"Ned?\" prompted Teresa. \n\nI repeated what the final clue had told me about my motivation. \n\n- \"Damn it!\" said Ben. \"I should have guessed it was you!\" \n\n- \"But we do have winners.\" announced Teresa. \"Both Eliza and Eric guessed that Colin was the murderer.\" She presented each of them with a bottle of wine labelled 'Pirate Cove'. \"And then somehow, Colin guessed that Eliza was the murderer - which was also correct.\" She presented me with a third bottle. \"Congratulations.\" she whispered. \n\n- \"Who has a corkscrew?\" asked Eric. \"This prize should be shared.\" \n\nThe mystery was over, but the drinking was just beginning. \n\nBarbara found me, and wrapped me in a tight hug, giving me the full benefit of those heroically-proportioned breasts. She pulled me close, and whispered in my ear. \"I can't believe it was you all along. Just imagine if I had stabbed you in bed ... that would have made for a different ending, wouldn't it?\" \n\n- \"I would have died happy, that's for sure.\" I replied. \n\nI had to find Sheila, and congratulate her. \"You timed it perfectly. In fact, you did everything perfectly. You didn't look too eager to join us, so I never suspected a thing. I'm very impressed by your cunning and duplicity.\" I doffed my tricorne, and gave her a bow. \n\n- \"Thank you very much.\" she said, with a curtsey. \n\n- \"We're OK, you and I?\" \n\n- \"Better than that, Colin. Curiosity satisfied, and still good friends. Nothing to feel awkward about.\" \n\n- \"I'm glad.\" I said, and gave her a big hug. \n\nThen I found Teresa. \"That was wonderful.\" I told her. \n\n- \"Glad you enjoyed it.\" \n\n- \"Tell me: how did you assign the parts? It worked so well.\" \n\n- \"You won't believe me, Colin, but I took a page from your book, and left it to chance. I drew playing cards, matched to the different parts. I only cheated twice - I didn't want Claire to be the Falcon - I think Barbara did a better job of that. Don't you agree?\" She treated me to her patented half-smile. I wondered how much she knew about what had passed between Barbara and me. \n\n- \"She was excellent in that part.\" I agreed. \"And the second?\" \n\n- \"Lena as the gypsy. She could have been Penny, I suppose, but the other parts would have been hard for her.\" \n\n- \"Speaking of Lena ...\" I said. Something had been bothering me, tickling at the back of my mind, since Friday. \n\n- \"Yes?\" \n\n- \"I'm curious, Teresa. How on earth did Lena ever get picked for an exchange program, when she speaks so little English?\" \n\nTeresa tilted her head, to look at me sideways. It was a reflex of hers, when I said something particularly intelligent or perceptive, or when I surprised her. \"Her uncle pulled some strings. It was supposed to be Lena's cousin who came over. But the cousin got pregnant and was beginning to show. She would have had to go home to give birth. The family suggested Lena as a last-minute substitute, and her uncle called in some favors. And here she is.\" \n\n- \"Wow.\" \n\n- \"Would you do me a favor, Colin?\" she asked. \n\n- \"Anything.\" I told her. \n\n- \"It's a big one.\" she warned. \n\nThat caught my attention. I looked into her eyes. But my ex-girlfriend would have made a good poker player; she gave nothing away. \n\n- \"Your wish is my command.\" I said. \n\n-\"You've been busy this weekend.\" she said. \n\n- \"Me?\" Playing innocent doesn't work with Teresa. \n\n- \"Don't be embarrassed, Colin. I told you to have a good time. It appears that you've been doing exactly that.\" \n\n- \"Umm ...\" I had no answer to that. \n\n- \"Remember - I told you this weekend was not going to be about us.\" \n\n- \"I'm a bit confused, Teresa. What is it you expect me to do? Or not do?\" \n\n- \"I don't expect you to do anything. Someone else might, though ...\" Teresa pointedly looked over my shoulder. Lena was standing on the other side of the room. She was sipping on a rum concoction, but plainly observing the two of us. I gave her a little smile. Lena smiled back. I turned to face Teresa again. \n\n- \"Jesus, Teresa - are you asking me to -\" \n\n- \"You married her, Colin.\" Then she saw the look on my face. \"Relax. Breathe. I'm just kidding.\" \n\n- \"Teresa, for Christ's sake.\" I said. \n\n- \"I'm not asking you to do anything you don't want to do. But if you're holding back, or staying away from Lena because you want to get back together with me, you're making a mistake. This weekend is not about you and me. I mean it.\" \n\n\"If you find her attractive - if you find her appealing, then you should do what comes naturally. If that means taking her to bed, then I would be happy for both of you.\" \n\nCan you imagine your ex-girlfriend talking to you like this? Neither could I. It was bizarre, confusing, and yet strangely tantalizing. Mostly confusing, though. \n\n- \"Now I'm going to tell you something you have to keep secret.\" she said. \"Promise?\" \n\n- \"Of course.\" \n\n- \"Lena hasn't had all that many positive experiences with men. Because of her height, a lot of guys are intimidated. She attracted a lot of basketball and volleyball players. Most were assholes. They treated her like she should be grateful for their attention. It didn't do much for her self-confidence, as you can imagine.\" \n\nTeresa reached out and put her hand on my arm. \"She needs a nice guy who will treat her right. I know that you can be that guy.\" \n\n- \"Teresa ...\" \n\n- \"Listen to me. You should act as if I wasn't here at all. Do what Lena would inspire you to do. And if you do sleep with her, Colin - treat her right. Don't fuck her a few times and then dump her. Don't break her heart. But don't deliberately stay away from her while you try to calculate your chances of getting back together with me. It's not about that. It's about Lena. Treat her right.\" \n\n- \"Is that your favor, Teresa?\" I asked. \"You want me to sleep with Lena? And then be her boyfriend for the year?\" \n\n- \"You're not listening, Colin. Do what you want. Forget that I'm here. My favor is actually quite simple: Can I sleep in the den tonight? Alone, I mean.\" \n\n- \"And where do I sleep?\" \n\n- \"Wherever you like.\" she said. \n\nI couldn't read her at all. That Mona Lisa smile, that sphinx-like expression that I found so alluring, now had me completely stymied. I didn't know what she wanted. Hell, I didn't know what I wanted. So I decided to take Teresa at her word, and act as if she wasn't there. First, though, I asked her for a favor in turn. ",
        "- \"Could I borrow your Slovenian-English dictionary?\" \n\nTeresa was pleased. She kissed me on the cheek, and went to get the little book. \n\nThe party was in full swing. Rum, beer and wine were flowing freely, and everyone seemed to be enjoying this last evening wearing their costumes. Armed with the little dictionary, I tried to include Lena in the conversation as much as I could. The others teased us about being married, and Barbara asked - more than once - where we would be spending the honeymoon, and whether she could watch. Lena didn't have to ask me to translate that; she understood perfectly. And if the cute blush on her lovely face was an indication, she was probably ready to consummate our union. \n\nEric was in charge of the music, and he went on a bit of a Rolling Stones kick, mostly from the 'Made in the Shade' compilation album. It's hard to go wrong with 'Brown Sugar', and I've always loved 'Doo Doo Doo Doo Doo (Heartbreaker)'. Then he played another track from that album. Have you ever listened to a song multiple times without ever really hearing the lyrics? Or hearing them, but missing their significance? Then, one day, it finally hits you? \n\nThat's what happened to me when the Stones' song 'Happy' came on. Something finally clicked inside my head. 'I need a love to keep me happy'. And just like that, I knew what I was going to do. \n\nI took Lena out on the balcony, to see the stars. She came along willingly. We talked for awhile, about her home, and her studies. Then I told her the truth. Lena understood. \n\n- \"Teresa?\" she asked. \n\nI nodded. \n\n- \"She is wonderful. And very beautiful.\" said Lena. She didn't try to change my mind. \n\nSoon thereafter, we rejoined the others. \n\n************* \n\nA few hours later, people began running out of gas. Lena was one of the first to yawn. When she decided that she was ready for bed, I escorted her to her room - but only to the door. She gave me a sisterly peck on the cheek, and I wished her a good night. \n\nThat seemed to break the ice for other couples. Ben and Barb said their goodnights, followed by Craig and Claire. Eric and Sheila were debating - something about gangster movies. Eliza usually passed out early, but she was showing remarkable stamina on this occasion. And as long as she was up, Leo wasn't going anywhere. \n\nTeresa studiously avoided looking at me, so I didn't look at her. Instead, I went back outside. It was a bit cool, but I wasn't feeling it. I sat on the end of the dock, on dry land, and looked out over the lake. \n\nI had no regrets. There was no way that I could sleep with Lena. I liked her, and I would gladly have slipped between the sheets with her - two nights ago. But now that I knew her a little bit better, and with what Teresa had told me ... I just couldn't do that to her. Lena deserved a decent guy who would treat her right. Somebody like Craig. \n\nI spent a long time just thinking, asking myself questions that I didn't know the answer to. I was a bit too drunk, and a bit too tired. By the time I went back inside, only Eric and Sheila were still talking. I fell asleep on the couch. \n\n************* \n\nBy some unspoken agreement, everyone slept in the next morning. I woke to Teresa gently nudging my arm. \n\n- \"Help me get breakfast started?\" she asked. \n\nTeresa didn't mention Lena. Neither did I. We just gathered all of the remaining breakfast foods, and worked together in companionable silence. It was one of those slow-motion days. We cleaned up, packed up, and said our thank yous and goodbyes. \n\n************** \n\nI did a lot more thinking over the next few months. There were social gatherings where we all saw each other, and I went out frequently with Lena and Teresa - but never Teresa alone. \n\nAfter Christmas, Teresa started dating a guy named Brent. I disliked him instantly. Thankfully, she dumped him before Valentine's day. \n\nOne cold Monday morning in March, I woke up, turned off the alarm, and got out of bed. In the middle of brushing my teeth, it hit me. I figured it out. Have you ever had that happen to you? You think about a problem, worry about it, drive yourself crazy ... and then, one fine moment where you aren't thinking about it at all, the solution just appears. \n\nI called Teresa, and asked her to have dinner with me that Friday night. I suggested a little Mexican place which I knew she liked, the Tres Hombres. \n\n- \"Sure.\" she said. \"Should I call Lena? Who else is going?\" \n\n- \"No one.\" I answered. \"Just you and me.\" \n\nI could've counted to three before she answered. \n\n- \"Are you sure?\" \n\n- \"Very sure.\" I said. \"It's time.\" \n\nIt took a while for her to answer. Finally, she said \"Alright.\" \n\nThat gave her most of a week to think about it. \n\nThe restaurant was fairly small, and though it did a lot of business with the lunch crowd, it was pretty quiet in the evening. The food was inexpensive, but good. Teresa had dressed up a bit: she was wearing an orange dress, which complimented her long auburn hair. It was still quite cold out, though, so she sore a long-sleeved shirt under the dress, and leotards to cover her slender legs. The dress was low-cut, and she had undone several buttons, which let me look at an impressive amount of cleavage. We ate, and talked about school, and friends. Finally, though, she looked me over very carefully. \n\n- \"You sound different.\" she said. \"You look different, too.\" \n\n- \"I've been thinking. For months.\" \n\n- \"About?\" \n\n- \"Teresa, why were you asking me to look after Lena? Were you trying to push me away? Or were you looking to put me on the shelf?\" \n\n- \"What do you mean?\" she said. That was my girl: she neither confirmed nor denied, and then answered a question with a question. \n\n- \"Were you trying to put me on hold? You knew that I wouldn't just sleep with Lena, and then leave her. Not after what you told me about her. But Lena is only here for another few months. If I had gotten into a relationship with her, it would have ended when she moved home. Did you think I would forget about you in that time? Or that I would be available after that?\" \n\nThat half-smile spread across her face. \"Maybe I just wanted something nice for Lena. For both of you. She's a wonderful girl.\" \n\n- \"She is.\" I agreed. \"But she's not the one for me.\" \n\n- \"And you think that I am?\" she said. \n\nI didn't answer. Instead, I treated her to a half-smile of my own. \n\n- \"Colin.\" she said. \"Do you remember what I said, when I broke up with you?\" \n\n- \"That I wasn't ready. I've been thinking about it ever since.\" \n\n- \"Did you know, then, what I meant? Do you know now?\" she asked. \n\nI nodded. \"I think so. You meant that I lacked confidence. You set up the Murder Mystery Weekend, and then practically ignored me, so that I would go out and 'score' with other women. So you know about Barbara, and Sheila?\" \n\n- \"And Claire.\" \n\n- \"That has to be a secret.\" I told her. \"For Leo, for Craig, and for Claire, especially.\" \n\nShe nodded. I had no need to worry: Teresa never gossiped, and secrets were sacred with her. \"So you knew about all three? And it didn't seem to bother you at all. At first I thought that you were done with me - that you wanted me to move on. But you just wanted me to know that other woman liked me. Because all the time we were together, I acted as if I couldn't believe it - that you were with me - that it was some kind of dream. I was afraid that one morning you would wake up and realize that you could do so much better than me.\" \n\n- \"You're a handsome, charming man.\" she said. \"Part of your charm is that you don't think that you are handsome or charming. You go out of your way to be ... nice - for lack of a better word. That part is wonderful. Don't change that.\" \n\n\"But if you do it because you think a woman won't like you otherwise ... that has to go. Yes, you lacked confidence. You treated me like a Princess. It was really sweet. But sometimes ... you would say things like 'I can't believe you're with a guy like me'. Why would you question my judgment like that?\" \n\n- \"So I gave you the impression that I didn't think I was good enough for you. I put you on a pedestal.\" I said. \n\n- \"A very uncomfortable place to be, all of the time.\" she said. \n\n- \"I also realized another thing about myself. I'm kind of a ... love junkie. In love with the idea of being in love.\" \n\n- \"Yes.\" she said. \n\n- \"You knew about my old crush on Sheila.\" I said. \"And that I had a thing for Claire, long ago.\" \n\n- \"Most men have a wandering eye. But you - I was worried about your wandering heart. That you would always be curious about those girls you were infatuated with for so long.\" \n\n- \"I never cheated on you, Teresa. I was totally in love with you.\" \n\nShe reached out to touch my arm, gently. \"I know you didn't cheat. And I didn't want you to. That's part of the reason I broke it off with you. You needed to go out and 'sow your wild oats'. That's such a wonderful English expression. You needed to 'mow down' some women, and discover how appealing you are. You needed to hear it from others - not just me. Especially the ones you had unresolved feelings for. Satisfy your curiosity.\" \n\n- \"I did. I think both Claire and I already knew that we wouldn't make a good couple. Sheila's different: she would make an awesome girlfriend. But the sexual chemistry isn't quite there.\" \n\n- \"And with Barbara?\" asked Teresa. \n\nI blushed. \"Just ... lust.\" \n\n- \"I know.\" she said. \"I'm just teasing you.\" \n\n- \"So that's what I think you meant by 'not ready'. Lack of confidence, and the 'love junkie'. And then you added Lena to the mix. It took me until now to figure that out.\" \n\n- \"Oh?\" she said. \n\n- \"I think it's all connected.\" I said. \"You knew that I put you on a pedestal. But if I had started a relationship with Lena, I couldn't possibly have done that. She's lovely, but she doesn't have your brains, your cleverness, your wit. And she has none of your confidence. Lena would have needed protection, and nurturing.\" \n\n- \"And you couldn't provide that?\" asked Teresa. \n\n- \"That's not what I said. I could have done that for Lena. But it took me months to understand that you would like some protection, some nurturing, from time to time. I didn't provide that for you, because I was too busy putting you up on a pedestal. I thought you were perfect - that you didn't need that.\" \n\n- \"Everybody needs that.\" she said, softly. \n\n- \"So I would have learned that, if I had gone out with Lena. It would have become a habit with me, to be more supportive. Was that the idea?\" \n\n- \"I'm sorry.\" she said. \"I was being very manipulative.\" \n\n- \"Are you kidding? I'm sorry it took me so long to figure it out.\" \n\n- \"But you did. You're very wise.\" she said. \n\nI called for the check. \n\n- \"So soon?\" she asked. \n\n- \"I'm going to take you home now.\" I said. \n\n- \"That's good.\" said Teresa. \"My roommate is away.\" \n\n- \"I know.\" I said. I took her hand, and led her out of the restaurant. \"Should we get a cab?\" \n\n- \"Probably faster if we walk.\" she said. Teresa was as eager as I was. \n\nHalfway there, we had to wait for a traffic light. I pulled her to me and kissed her. Her lips were soft, and pliant. Her hand went to the back of my head, and stroked my hair. She pressed her whole body against mine. When we finally pulled apart, the light was red again. We jaywalked. \n\nWe were barely inside the door of her apartment when I started pulling her clothes off. It wasn't easy, because I was also kissing her, invading her mouth with my tongue. I unzipped her coat, and tossed it to the floor. My own coat followed a second later. We both managed to maintain the kiss while we kicked our shoes off. I was also groping her, mauling one of her big breasts through the dress while my other hand played over her ass. \n\nSomehow we danced across her apartment, headed for her bedroom. I got a hand under the dress, and found the waistband of her leotard. I pulled it down, to discover that she wasn't wearing panties underneath. Teresa groaned into my mouth. This wasn't going to be anything fancy; I just had an overpowering urge to be inside her, as quickly as possible, as deep as possible. \n\nShe was fumbling with my belt. I helped her, and we managed to get my pants undone and pushed down my legs. As I stepped out of them, the small part of my brain still capable of rational thought sent me a warning. \n\n- \"Wait!\" I said. \"My pocket - condom.\" \n\n- \"No.\" she said. \"I'm on the pill.\" She pulled me towards the bed, nearly tripping me as I got my foot out of my pant leg. \n\nI dropped to one knee, lifted the dress, and pulled the leotard down, over her ass, and down her legs. I was a bit rough, but I couldn't wait. I sat her on the bed, and plunged my face between her thighs. \n\n- \"No.\" she panted. Teresa was trying to push me off, while simultaneously trying to crawl backwards onto the bed. \"In me!\" she said. \"Now.\" \n\nThat was exactly what I wanted. I followed her onto the bed, and pushed her legs apart. Kneeling between them, I found her pussy lips with my fingers, and spread them. With my other hand, I steered my cock between them. I rubbed the head of my cock up and down her slit a few times, discovering that she was already wet. One firm push and I was in. She reached for my arms, and pulled me down atop her. Our mouths met, and we kissed frantically, tongue-wrestling and licking and sucking. \n\nI began to move atop her, stabbing my cock into her, trying to burrow my way even deeper between her legs, up into her belly. She was thrusting her hips up at me. I pulled my face back, and planted my hands on either side of her. With that leverage, I began to fuck her properly. \n\nIn long, slow thrusts, I fed my engorged cock into her depths. Teresa wrapped her legs around my hips. Her fingers flew to my shirt, trying to undo the buttons, but after the first two, she gave up, and put her arms around my shoulders. She started hunching her body, trying to get even closer, and pulling with her arms, like I was some kind of rowing machine. She clearly just wanted to fuck. \n\nI threw any last vestiges of finesse out the window, and just started slamming my cock into her as fast and as hard as I could. It was wild, and primal. I felt like a savage. When we were dating, I had always been gentle - Teresa had reminded me more than once that she wasn't fragile, that she wouldn't break. Well, I put that claim to the test. \n\nOur bodies crashed together, hips lunging forward. I slid a hand under her, gripping one of her ass cheeks. On the next stroke, I didn't withdraw, and didn't let her pull back, either. Instead, I clutched her to me, grinding my crotch into her pelvis. She started panting. \n\nI released her ass, and pulled back until only the head of my cock was still inside her. Then I slammed back in, all the way in. And I started pistoning in and out, in root to tip lunges that shook her whole body. Teresa wrapped herself around me, and a great shiver rippled through her body. I hoped that she was coming, because I wasn't able to hold on any longer. Three more strokes - and my nuts exploded, firing salvo after salvo into her. Normally, I would have continued stroking into her, but the orgasm was so powerful, so intense, that I froze, my body stiff as a plank. \n\nTeresa clung to me even tighter, jerking her hips and sliding her vagina up and down the length of my cock. She milked a few more spurts from me, until I groaned and collapsed on top of her. Her arms went around me, and she held me tight. \n\nWhen her breathing returned to normal, Teresa turned her head to kiss me on the cheek. \n\n- \"Wow.\" she whispered. \n\n- \"Me too.\" I said. \n\nAfter a few minutes, I began to worry that my weight was getting to be too much for her. But she refused to let go of me for the longest time. After a while, though, I could feel my ass getting cool. Her bare legs would soon be getting cold. \n\nI got her off the bed, and pulled back the covers. Then I pulled her dress over head, and unbuttoned her shirt before removing that, too. I stopped then, and simply admired her naked body, which I had not seen for so long. I ran my fingers through her long, reddish-brown hair, and planted a light kiss on the tip of her nose. Teresa has lovely skin, which looks like she has just begun to tan, even in the depths of winter. But she also has a few delightful freckles on her face, including three on her nose which I am particularly fond off. \n\nHer eyes are dark brown, so dark that sometimes it appears that she has no pupils. Her shoulders, her collarbones - I love everything about her. Teresa has large, fleshy breasts that hang low on her chest, spreading apart gracefully. Her nipples sit fairly high on her breasts, surrounded by very large light brown areolae, the size of small coasters. \n\nShe had slender arms, and a slim waist, and an amazingly flat belly. Her ass is not very big - she only weighs 110 lbs, after all. She shaves her pussy, leaving the prominent inner lips fully exposed. She waited patiently until I had finished my examination. \n\nWe crawled back under the covers, and snuggled together, spoon fashion. I held her in my arms, and savoured the moment. There was so much to say - and no need to say it. Teresa may have slept for a little while. Her breathing was certainly regular enough. I just enjoyed the sensation of holding her naked body close to mine. \n\nI started absent-mindedly caressing her leg, and then her hip. She turned her head to look at me, and smiled. I began caressing her belly, and her wonderful breasts. Teresa was not one of those women who usually goes off like a firecracker - from zero to orgasm in 60 seconds. It takes time, and patience, to build up the fire. I knew all of her buttons, and how and when to push them. So I studiously avoided every one of them. \n\nI teased her, caressing her ears, and her shoulders. I rubbed the back of her leg, and her knee. I didn't ignore her most wonderful attractions, but I didn't focus on them, either. My intention was partly to tease her, but Teresa certainly seemed to be enjoying the prolonged, unhurried attention. Her nipples began to rise. I ran my fingers along her pussy lips, and then slipped one inside. \n\nShe was wet, and still full of my come. I lifted her leg, and angled my new erection towards her open pussy. It slid in easily. \n\nMy hands returned to their former occupations, stroking, kneading, and caressing, while my lips played about on her ear, her neck, or her mouth, when she turned her head for a lingering kiss. Meanwhile I see-sawed in and out of her wetness. There wasn't as much friction, but I this was no stampede to orgasm. I was content to slide in and out of her, while I teased her nipples, or cradled her full breast in my hand. It was a joy just to be so close, as close as we could possibly get. \n\n- \"Why did you name my character 'Mulligan'?\" I asked her. \"Was it because you were planning all along to give me a second chance?\" \n\nShe turned her head to kiss me once again. \"Feels to me like you're taking it.\" she replied. \"How many strokes is that?\" \n\n- \"I've lost count.\" I answered. \n\nSex and accurate time-keeping do not go together well. But it certainly felt like we fucked in that position for twenty or thirty minutes. Then I started to feel the first faint tingling in my balls. I increased the pace. \n\n- \"I'm going to - come.\" I told her. \n\nTeresa reached back, over our legs, to get a firm grasps of my ass. She pulled me closer, as if trying to get me even deeper. That was enough for me: I flooded her insides a second time. \n\nWe slept again. At least, I did. When I awoke, Teresa had not moved, much. But our combined fluids had poured out of her pussy, down our thighs, pooling under my scrotum. Her bed sheets were soaked. \n\n- \"Time to change the linen?\" I asked. ",
        "- \"Time for a shower.\" she said. \"You first?\" \n\n- \"Let's save water.\" I suggested. \n\nIt was a bit of a tight squeeze, but neither of us had any complaint. I lathered her up quite thoroughly. I washed every part of her body, and enjoyed every moment. So did Teresa, except when I tried to stick a soapy finger in her ass. \n\n- \"Nu-uh. No. Not happening.\" she said. \n\nTeresa then washed me just as carefully, spending an inordinate amount of time making sure my balls were spic and span. She made me jump with an unscheduled prostate exam. \n\n- \"Oh - so you're not that keen on it, either.\" she laughed. \n\nBut I was certainly keen on her. All of the soaping and washing had produced another erection: I was clean, and hard. I bent her over, in the shower, and slid into her from behind. I started slowly, kneading her still soapy breasts as I thrust into her. \n\n- \"What's - got into - you - tonight?\" she asked. \n\n- \"I - missed - you.\" \n\nI had never had sex in the shower before. It was exciting. So was the sight of her trim ass cheeks as I slammed into them with increasing force. I grabbed hold of her hips, and began to drive into her relentlessly. Teresa was bent over, bracing herself with her hands on the shower wall. Then she reached back, between our legs, and took hold of my testicles. She gently rolled my balls between her fingers. I grunted and came again. \n\nThat led to a new round of washing, before we left the shower, and then dried off. We changed the sheets, and crept back into bed. This time, curiously, neither of us was sleepy, so we cuddled, and talked. \n\n- \"That was a great mystery.\" I told her, for the eleventh time. \"You did a phenomenal job.\" \n\n- \"Of course you enjoyed it.\" she said. \"You got to have sex with three hot women, all on the same weekend.\" \n\n- \"You almost made it four.\" I reminded her. I put a finger under her chin, and tilted her head towards me. \"Did you really want me to go with Lena?\" \n\nTeresa fixed me with that inscrutable half-smile. \"I did - and I didn't.\" she admitted. \"But things are looking up for her, now?\" \n\n- \"She met somebody?\" I asked, surprised. \n\n- \"Oh, Colin.\" said Teresa. \"Why are you so often the last to know? Eric asked her out two weeks ago. Tonight is their third date.\" \n\n- \"You're kidding me.\" I said. \"Eric?\" \n\n- \"If all goes as Lena has planned, she should have him in bed by now.\" \n\n- \"What?\" \n\n- \"Eric is a gentleman.\" said Teresa. \"And totally in awe of her. I think that may be even better for Lena than having someone like you taking care of her. Eric worships her - so I explained to her that she would have to take the initiative.\" \n\n- \"You're still match-making? I'm impressed.\" I said. \n\nTeresa just smiled. \n\n- \"You didn't have an orgasm, in the shower - did you?\" I said. \"Time to do something about that.\" She protested, half-heartedly, but I spread her legs and went down on her. I teased her mercilessly, bringing her to the verge of an orgasm, and then stopping to ask her an inane question. \n\n- \"Where did Eric take Lena for their first date?\" or \"You keep using golf analogies. Does that mean that you want to play around?\" \n\nThe third time I did that, Teresa lost patience, and grabbed me by the hair, pulling my face into her crotch, and grinding her pussy against my nose. We both started laughing. When she recovered, Teresa spun around into a 69 position, and wrapped her lips around my cock. She didn't have time to tease me, as I had resumed working on her clit in earnest. It was no contest; I had too much of a head start. Teresa came hard, squeezing my head with her powerful thighs. \n\nShe would have continued to suck me off, but I wanted to be inside her again. I pulled her atop me. She took hold of my erection, and tucked the head between her now distended pussy lips. Then she sank down on me with a groan. \n\nI love that position. I could watch the sensations play across Teresa's beautiful face, or watch her magnificent breasts jiggle and sway as she rode me. My hands were free, so I could play with her tits, and pinch her nipples. Or I could grab hold of her ass, or her hips. I could even play with her clit and bring her to orgasm, as I did that night, to her surprise, and mine. \n\nShe sank down on top of me, her breasts crushed against my chest, panting in my ear. \n\n- \"Oh, my God.\" she said. When she had enough energy, Teresa started kissing my ears, my eyelids, my nose ... then she realized something. \"You're still hard!\" She slid down my body, and took my cock into her mouth again. This time she could use all of her wiles - and she did. \n\nShe was deep-throating me, my pubic hair tickling her nostrils, when I erupted for the fourth time that night. I pulled her up next to me, and kissed her. \n\n- \"I love you.\" said Teresa. \n\n********** \n\nI awoke in the middle of the night. For some reason - which I can't explain - I was hard as a rock. Teresa's ass was nestled against the top of my thighs. She was twitching a bit - dreaming, I guessed. Her legs were parted. I touched her pussy with my finger, to find that she was unexpectedly wet. An erotic dream? \n\nI slid my finger inside her. Teresa groaned, and pressed back against me. I lubed up my cock with saliva, and entered her from behind. \n\n- \"Again?\" she moaned. \"I'm going to be so sore in the morning ...\" \n\n- \"I love you.\" I whispered in her ear. \n\nTeresa shivered. \"I know.\" she whispered back. \n\n************* \n\nEPILOGUE \n\nTeresa and I moved in together four months later. I have not had another five-orgasm night since then - but not for lack of trying. \n\nEric and Lena dated until her exchange was over, and she had to fly back to Slovenia. As I write this, Eric is flying over there, for his second visit. \n\nBarbara and Ben were together for six months or so after the Murder Mystery Weekend. He got jealous, and possessive. She dumped him for some Apple IT guy. \n\nCraig and Claire were married a year and a half after the Murder Mystery. Eliza graciously allowed them to hold their ceremony on the dock at her cottage. (Teresa and I were invited. I snuck her out to the boathouse late at night, and fucked her twice. She was curious.) \n\nSheila started dating another teacher. I think they may get married. \n\nLeo still has a crush on Eliza. He still hasn't told her. \n\n*********** \n\nThank you for the feedback and positive comments I have received. It was fun to write!"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "costumes",
        "party",
        "friends",
        "girlfriend",
        "romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/murder-mystery-weekend-pt-06"
}