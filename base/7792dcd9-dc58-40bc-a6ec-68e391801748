{
    "title": "The Naughty List Ch. 02",
    "pages": [
        "Winter is here...and Holly is coming. Hopefully, you will, too. Enjoy!\n\nSSW\n\n---\n\nI was never one to deal with frustration very well. I buried my emotions...or ran from them.\n\nThat's how I'd met Chris. I'd been running from the consistent annoyance of my roommate being gaga in love at our shared apartment. Little had I known what had awaited me at the mall. In the bedroom.\n\nWe'd come so far in eleven months. I'd learned to let go with Chris. To embrace the pleasures he introduced to me. Which included a lot of time with his hand on my ass.\n\nThe irony was, as much as I'd despised the act when I'd read the online list last Christmas, I'd grown to like getting spanked by him. Palms only; not the riding crop or flogger he'd also said he liked on the list. And my hands or arms needed to be restrained in some way. Who'd have thought it?\n\nWe'd done lessons on the differences between a blow job versus face fucking. The various sex positions to get the desired internal contact, the most orgasms, and to delay the former the longest. He'd taught me there was an art to eating pussy. How to squirt. The right and wrong way to use my teeth on his cock...to avoid his balls with them. I'd learned he was extremely sensitive when I used my tongue to play with his hardware. That I liked having my hair pulled. And as much as he liked to tease me with his finger at my asshole\u2014and I enjoyed it\u2014I was adamant that it was the only thing inserted there.\n\nFor the past few weeks, we'd been concentrating on orgasm control. It had been hard at first because I'd gotten used to only feeling, not concentrating, when we were together like that. As a result, we'd discussed possible punishments for disobedience. He'd wanted to avoid spanking since I liked it and he wasn't into physical harm. We'd eventually settled on standing naked in the corner, bent over with my legs spread and my wrists bound to my ankles, my ass bared to the room. It was uncomfortable and somewhat humiliating, but not painful.\n\nHe always started with a quarter of an hour and increased it by five-minute intervals if I made noises\u2014whining, heavy sighs, even giggling\u2014or broke my position in any way. Once, I even came because I could hear him jerking off behind me and I'd let my mind wander. That had cost me another fifteen minutes. There had been many times in the corner at first. Thankfully, he was patient, and I quickly became better at stemming my impulses when our times together grew more intense.\n\nThrough it all, he said he had faith in me. I had my doubts that I was too stubborn for him...that he'd give up on me. But he never did. Instead, he continually encouraged me. Reminded me that he would be there for me. And he admitted I'd had his heart from that day in the mall...long before that first night he'd seduced me.\n\n###\n\nThanksgiving had always been my favorite holiday, even before Christmas and my birthday, which was also in December. It kicked off the true holiday season for me. Feasting on turkey, dressing, and mashed potatoes with my parents. Sitting around afterwards watching a movie while we complained that we'd eaten too much but still found room for a slice of warm pecan pie with vanilla ice cream. And I'd been looking forward to having Chris join us this year for it all.\n\nHowever, my parents informed me they had decided to spend the winter in Florida after last year's accident. They just didn't want to deal with the snow anymore. Knowing they'd miss the two special days next month, I at least tried to convince them to wait to leave until after Thanksgiving. But they needed to be down there before the holiday in order to secure the deal they'd been offered for the condo rental. I reluctantly gave them my blessing and watched them drive off with smiles on their faces. My mom had reassured me both her and my dad felt safe leaving me in Chris's capable hands; that we would make new traditions together.\n\nThe problem was, I didn't want new traditions. I wanted the old traditions I'd always known...with Chris added in. But I swallowed my pride and accepted that my life was changing, whether I wanted to admit it or not. \n\nChris surprised me with his parents' plan to fly us both out west for the week to spend the holiday with them. They had moved closer to one of his sisters last winter, and everyone was gathering in Arizona this year. I was so excited to meet them in person. Yet again, though, our plans were waylaid when my boss asked me to pick up extra shifts due to losing another coworker to early maternity leave. I really could use the money, and Chris said he really wanted to go on the trip since it had been a few years since he'd seen his two sisters. He suggested adjusting the time he'd be gone so he could return in time to celebrate the special day with me. As much as it hurt to know I couldn't go with him, I was okay with the compromise.\n\nReluctantly, we parted at the airport after a myriad of kisses when he had to board. I spent the weekend sulking and the first part of the week trying not to spend too much time texting him when I was supposed to be manning the front desk at the gym. It amazed me how often people came to work out leading up to the day synonymous with overeating. One would think they'd be gung-ho in December with all the cookies and sweets they were consuming. Or maybe just wait it out another few weeks when they would kick in their New Year's resolutions to lose weight. That was obviously our busiest time of the year. Then it always tapered off by the end of January only to pick back up in May and June to get those bodies ready for summer. Ah, the circle of gym life.\n\nDespite the changes in my expected plans, I still anticipated Thanksgiving Day. Chris would be back. I'd have my favorite meal. This weekend, we'd go get a tree and decorate my apartment. All in keeping the rest of the traditions alive.\n\nJolie had expressed an interest last week in having dinner with Chris and I. Somehow in the conversation, Dirk got invited, too. She said he was bringing the meat so I didn't have to worry about picking it up. What could I say? Even the smallest bird I'd gotten last year was too much for three of us. If Dirk wanted to go through the trouble of fighting the crowds at the grocery store, so be it. I tried not to imagine the awkward atmosphere at dinner where none of us talked. At all. I reasoned that I'd get over it.\n\nBut this morning when I asked her if Dirk was defrosting the turkey at his place because I'd not seen it, she dropped the bomb that he was on a no-poultry diet and had bought a ham for us to bake instead tomorrow. Lots of people had ham instead of turkey. I liked ham, didn't I? Then she rationalized, since there was no bird, there was no need for stuffing. And as neither her nor Dirk were big on mashed potatoes, they would make scalloped potatoes to go with the meat.\n\nBefore I could even ask about the pie I always made, she mentioned that as she had cut back on sweets, she hoped I wasn't too upset if we just skipped dessert altogether. I held my tongue when I really wanted to lay into her that with all the sex she was having, she would surely burn off any new calories within minutes.\n\nI wanted to be mad at Jolie, but I knew she was just going along with what her boyfriend wanted. Once again, Dirk was to blame for my sour mood. I'd not yet confronted him about the incident from last Halloween. Each time I psyched myself up, something happened that made me lose my nerve. Maybe I hoped in the back of my mind that Jolie would move out to be with him...or break up, either option solving the problem.\n\nBut a year later, here we still were. Him silently rubbing it in my face with his mere presence that he'd gotten one up on me, coming and going as he pleased. Me letting him. And Jolie none the wiser.\n\nI didn't sleep well that night due to the usual, boisterous theatrics of the oblivious couple in the next room. Add to that the absence of my parents, boyfriend, and favorite holiday dinner. All of it culminated in me being a little on the cranky side when I crawled out of bed Thursday morning.\n\nTo add insult to injury, I found the kitchen a mess and Jolie and Dirk making out\u2014possibly more\u2014on the couch. My couch. Which had been delivered just two weeks ago. The one I'd gone without spending beyond bills and minimal groceries for six months so I could afford it. And now, their half-naked bodies were rolling all over the plush, suede cushions, the pillows discarded over the back of the couch and scattered on the floor.\n\nThere were no words that seemed to satisfy what needed to be said. I was standing in an alternate reality. A dream world. That's what it was. It had to be. Because I felt...nothing.\n\nI grabbed my coat and keys then went outside. Sitting on the stoop to the apartment complex, I wrapped my arms around my knees to fend off the chill that set in the moment my butt hit the concrete. The waterworks came on as a trickle then escalated to full force while my mind continued to process everything. No matter how hard I tried, I couldn't come up with a solution. At least not a rational one that didn't involve wrapping my hands around the throats of the two people inside...and I wasn't talking the kinky way.\n\nOver an hour later, I was still rocking back-and-forth when Chris pulled into the lot. I'd been half-wishing I had a cigarette because something I'd read recently said smoking helped you relax. My tears had dried up by then, but they threatened to return at just the sight of my boyfriend. And as much as I wanted to run to him, I couldn't move from my spot. Primarily because my butt was numb and my feet were tingly.\n\n\"Holly?\" He squatted in front of me, pressing the back one hand to my cheeks before gently taking my hands in his, lightly rubbing back and forth. \"Honey, you're freezing. What are you doing out here?\"\n\nI just blinked at him. How did I tell him that the chaos inside my apartment was of my own doing because I'd failed to stand up for myself the very first time I was confronted with my past? That once more, instead of handling the situation, I'd tucked my tail like a coward and tried to disappear?\n\nHe regarded me for a moment longer then helped me stand, walking me into the lobby before wrapping me into his coat. His lips were so warm when they brushed mine. So tender though he pressed harder on the next pass. Then I was whimpering while he plied my mouth with his, his hands alternating between warming my cheeks and holding me to him. The only thought that remained in my head was that I cared he was back.\n\nAfter what seemed like a long time, he whispered, \"God, I've missed you so much.\"\n\nI just held him tighter, nuzzling under his chin. When I still shivered due to the common area heat not being turned on yet, he ushered me down the hall.\n\n\"Come on, honey, let's get you inside.\"\n\nChucking off my coat on one of the dining table chairs, I stumbled back with a small squeal. The kitchen had been cleaned, the couch put back to order, and Dirk and Jolie were not in the immediate vicinity. Had I imagined it all?\n\n\"Do I smell ham?\" Chris asked, his own coat joining mine. \"What happened to\u2014\"\n\n\"Don't ask,\" I mumbled.\n\n\"Is it just us two?\" The sound of a scream and then raucous laughter from the back of the apartment had him shaking his head. \"Nevermind.\"\n\nHe took my hand, leading me to my room. Behind the closed door with just one bedside lamp on, he slowly stripped me and then himself. Neither of us spoke.\n\nWe kissed. We fondled. We made love.\n\nAll of the negative stuff disappeared over the next hour or so. That alternate world I'd felt like I was in earlier? It had moved into this room. There was only Chris and I. Nothing else\u2014no one else\u2014existed.\n\n###\n\nThere was a knock on the door, disrupting my post-coital bliss.\n\nMy lover pulled on his pants and opened my bedroom door to reveal Jolie wearing her coat. Her voice barely reached my ears, and her eyes darted once over Chris's shoulder. He responded curtly, but I didn't hear what he said, either. Not that it mattered at the moment. I was more concerned about the burnt smell wafting down the hallway. The distant sound of the exhaust fan from above the stove.\n\nChris shut the door, kicked off his jeans, and crawled back into bed with me.\n\n\"What did she want? Why do I\u2014 Mmm!\"\n\nHis mouth moved sensually over mine. One hand gripped me behind the neck, holding my head to his. The other hand slid up and down my left side. Caressing my arm, breast, hip, thigh. Intentionally distracting me.\n\nI shoved on his right shoulder. \"What's wrong?\"\n\n\"Shh.\" He brought my left hand above my head and held it there with his, kissing me harder, my head pressing into the pillow now.\n\n\"Chris!\" I wiggled under him, my right palm futilely pushing between us on his chest. In the distance, I heard the front door shut loudly. \"What\u2014\"\n\n\"Getting mad won't change anything, honey.\" He dipped his head, and his tongue ran around my nipple before he gently tugged on it with his teeth. His lips closed around the tip, sucking.\n\nI hissed and arched under him. Fighting internally now between wanting to know what was going on outside this room and getting lost in my lover's charms. His fingers and then his cock pressing between my legs made the decision. Soon, we were both moaning. Writhing. Panting. Coming together.\n\nAfterwards, we lie in the semi-darkness, his chest pressing to my back while we spooned on our left sides. Eventually, his breathing slowed down. When I felt the tension in his arm over me lessen, I shot out from under the covers and streaked down the hall. I skidded to a stop at the kitchen island where a blackened ham sat in my mom's heirloom roasting pan\u2014which had also turned crusty-black inside.\n\nFor thirteen months, my true feelings about Jolie and Dirk had simmered just under the surface. Fearing to even leak out. I'd compromised to the moon and back. Made excuses for why I let them get away with what they had. But seeing my Thanksgiving dinner eliminated and its replacement completely ruined, the people responsible for it intentionally MIA? That sent my emotions boiling over. They erupted in a cry that made my neck and back hurt...my throat raw. But I didn't care.\n\nI stood there buck naked in my kitchen and screamed my head off with my hands fisted at my sides, my feet stomping.\n\nAt some point, I realized Chris was standing by the island with me, also without a stitch of clothing on. He didn't say anything. He didn't try to calm me. He was just there. For me.\n\nOnly when I had nothing left in me and was hunched on my hands and knees on the floor did he step forward. He picked me up princess-style and carried me down the hall. I expected that we were going back to bed. But he surprised me by taking me into the bathroom. Setting me on the closed toilet lid and leaning me against the vanity countertop. Then he ran a hot bath.\n\nWith the lights off and the door closed, he helped me into the tub and sat behind me. His arms wrapped around my waist under the water before he pulled me back when he reclined. Then they moved up, enveloping my upper body in his wet crisscrossed hug while his fingers stroked my hair.\n\nI rolled my head on his shoulder, blinking through the teardrops that lingered on my eyelashes. My hands folded over his arms, lightly holding him while the water level rose and fell over my breasts like the tide ebbing and flowing from my uneven breathing.\n\nOccasionally, he pressed his lips to my head. But he still remained quiet. Patiently waiting, as always.\n\nAnother deep shudder passed through me, making my breath hitch. My voice was scratchy when I finally felt I could speak. I spilled what had happened last year at the Halloween party. The week after. Every day since. Feeling his arms contract and expand around me as I unloaded.\n\n\"I'm a coward,\" I finished, trying to turn onto my side without sloshing too much water onto the floor.\n\nChris just hummed against my hair, his arms adjusting to hold me in my new position.\n\n\"Is that an agreement? Dissention? Because if you fucking say you're Switzerland...\" I felt more than heard the soft chuckle beneath me. Then there was a deep sigh. \"Out with it.\"\n\nHis hand pressed my head back to his shoulder. \"Hear me out, okay? Yes, he was a dick for what he did to you. Specifically for not saying anything to you when he realized who you were. And if Jolie knew all this time... Well, let's assume she hasn't and just leave it at Dirk is a dick.\"\n\n\"I hear a but,\" I mumbled, closing my eyes.\n\n\"Because there is. A big one.\" He kissed my head again. \"Dirk didn't say anything, and neither did you. So you're both at fault. He has apparently brushed it off. You've allowed him to get under your skin and fester. I will say I'm glad you ran out of the house that day to hang out at the mall. But enough is enough. You not only are letting Dirk walk all over you, he's now pulling Jolie's strings so that she's manipulating you, too.\"\n\nI shivered as the water started to get cooler, but I didn't want to get out. Not yet. \"What did Jolie say to you earlier?\"\n\nChris was quiet for a few minutes, lightly dragging his fingers up and down my arm which shivered even more from the trickles of water he left behind. Eventually, he sighed. \"They had gone to Dirk's place to get the potatoes he'd left in his fridge. He wanted to run another errand, and then they lost track of time. When they'd returned, the ham had dried out and burnt. Probably not enough water and/or they'd glazed it too early. Anyway, it was too late to save it. They were leaving to find something to eat, and did we want them to bring something for us. I told her not to bother coming back until at least tomorrow. I knew you would need time to cool off once you learned what had happened.\"\n\n\"You should have let me at her right then and there. Him, too. They wouldn't be having any sex for quite a while, if you catch my drift.\"\n\n\"Shh. This is exactly why I told them to stay away.\" Chris sat up and helped me to my feet. \"Let's dry off and see if we can get some food. Will is gone until Sunday, so I'm taking you to my place just in case your roommate doesn't heed my warning.\"\n\nI nodded, remembering his temporary roommate he'd acquired this summer: his cousin. Will had gotten out of rehab and was staying with Chris while he studied for his GED. It was only a one-bedroom apartment, but there was a large alcove in the living room that Chris had set up divider screens around to hide a futon and a small chest of drawers for Will's privacy. I'd not stayed there very often ever since to give Will the space to concentrate. Plus, he slept during the day due to his night job stocking shelves at a warehouse.\n\nChris took charge of packing me a bag and getting us out of my place. But I hesitated when I spied the ruined ham and damaged roaster on our way through the kitchen.\n\n\"Let Jolie deal with it,\" he said, taking my hand and steering me on toward the front door. \"I know it was your mom's, but it's just a pan. We can try to salvage it tomorrow.\"\n\nFifteen minutes later, I was surprised when he pulled into a church parking lot that was half full. I just raised my eyebrows at him when he came around and opened my door. He waited patiently until I held out my hand. Then we walked up to a long, one-story building next to the taller sanctuary, and he paused, turning to me.\n\n\"I know it's not exactly what you wanted...but it has to be better than none at all.\" He stepped to the side, revealing a sign on the door stating that the normal soup kitchen was serving a free, three-course meal with all the fixings until seven o'clock today.\n\nHis face was suddenly blurry when I reached up to kiss him. \"Thank you.\"\n\n\"Shh, don't cry.\" He gave me a second kiss, wiped his thumb over each of my lower lids, and then threaded his fingers through mine before opening the door.",
        "Inside, it was warm and inviting with simple decorations and delicious smells. The right smells. There wasn't even a hint of a cooked pig that I could tell.\n\nWe walked through the line, and by the time I had my plate laden with everything I'd been looking forward to since last year, the tears had welled up again...but in full force. I can only imagine what the poor lady at the end who handed me a roll and a butter packet must have been thinking when I kept opening my mouth but nothing came out. Chris verbally expressed our shared gratitude then ushered me to a table.\n\n---\n\nBack at his place with full bellies, we sat on the couch and watched a classic Christmas movie on TV. Halfway through, I retrieved a glass of water and knelt at his feet, sitting back on my heels. It was another minute before he groaned and reached down, caressing my cheek.\n\n\"Holly, you don't\u2014\"\n\n\"Shh. I want to show my gratitude for all you've done for me today.\"\n\nHis lips pressed together, but he nodded. When I reached to undo his belt and lower his zipper, he lifted his hips. He kept his gaze on me while I removed his jeans and then his underwear. But the moment I took his cock in one hand and his balls in the other, his eyes drifted closed. He shivered and moaned, his fingers lightly tangling in my hair.\n\nBefore I dipped my head, I saw his lips part. I smiled and slowly stroked just the top length of his cock, eliciting a couple of sharp inhales from him. I reveled in his early sounds of pleasure. Looked forward to what was to come.\n\nHe was warm against my palms. The head so soft under my lips. Salty from precum already. Gently, I hefted his balls and fondled them between my fingers and thumb. That made him groan.\n\nI closed my own eyes and teased his slit with the tip of my tongue. Flicked at the ring and ball protruding from the top. His hips jerked as he hissed, making my smile broaden. I licked around the crown, teasing at the entrance and exit of his jewelry while my left thumb stroked gently at his base. That sent his cock twitching. Gently sucking on the crown, I ran the pad of my right thumb up and down the ridge of imbedded rods on the underside of his cock.\n\n\"Shit!\" Chris gripped my hair tighter.\n\nThe ring and ball grazed against my palate with his sudden yank downward. I moaned and pressed my forearms on his thighs to keep him from thrusting any deeper. With my whole hand wrapped around him now, I stroked harder.\n\n\"Fuck, Holly,\" he panted. His fingers flexed again then loosened a little. \"That feels so good.\"\n\nI hummed and twisted my hand, keeping the friction to a minimum. He moaned deeper and rubbed his fingertips against my scalp. It was like a mutual massage for a couple of minutes while I continued to suck gently on the head of his cock.\n\nSwitching tactics, I circled my right thumb and first two fingers around him then stroked just under the head while I paid homage to his balls. Licking, sucking, and kneading gently. Drawing strangled groans from him. I could feel his butt muscles clenching and releasing. Hear his raspy breathing. His cock grew harder still, which made my pussy throb.\n\nWhen one of his hands caressed my cheek, I lifted my gaze. We locked eyes for a moment, both of us seeming to try to catch our breaths. He actually whimpered when I tilted my head and lifted his cock. His eyes widened the moment my tongue touched the first of the six tiny balls on the underside of his shaft. I held eye contact and moved on to the next ball. And the next. Licking over and around each of them in turn before moving on to the rods connecting each set. Then I repeated the process by pressing my lips to each ball and the skin covering each bar.\n\nJaw clenched and eyes bright, he swallowed hard three times, his Adam's apple bouncing like a buoy on the water. His fingers twisted tighter in my hair. He even seemed to scoot down further, moving toward me.\n\nI grinned before going back to flick my tongue at the tip of his cock a couple of times. At his guttural moan, I engulfed him almost to his base, the PA piercing blocking the rest of the way, as always.\n\nChris flung his head back. \"Fuck! Oh, God! Yes! Don't stop, honey!\"\n\nStroking and sucking his cock, my tongue played at the underside while I fondled his balls. My breasts were aching now, too. I pressed them harder against the couch, trying to suppress my own arousal, and rose up on my knees. It changed the angle slightly so I was able to get that last bit down my throat. I knew it wouldn't be long now.\n\nHe held my head down suddenly, making me gag. \"Fuck! Fuck! Fuck! FUCK!\"\n\nI let go of his cock and clawed at his thighs, blinking rapidly. It took a moment to remember to breathe through my nose. But by then, he'd released me and I was leaning over his lap, gasping.\n\nAt a tug on my hair, I looked up through bleary eyes to see Chris panting heavily. His other hand stroked my chin. I dropped my jaw and used my drool to help stroke him fast and hard. His grip on my hair tightened almost painfully a few seconds later, and then he was coming in my mouth, his eyes clenched tight. Interspersed with his grunts were broken attempts of my name.\n\nI was breathing normally again by the time I'd depleted him. Gulping down my water I'd left on the coffee table, I laid my head on his lap. We both laughed when his cock bumped my forehead twice. I held it away and squeezed him lightly.\n\nChris groaned. \"Oh, God, Holly. Mmm. That was...whew...amazing.\"\n\nLicking my lips, I crawled back up beside him. \"Good.\"\n\nHe kissed me and hugged me tight then tucked my head under his chin while he stroked my hair. \"Thank you...for your thank you.\"\n\nSighing softly, I smoothed my hand over his chest. His heart was still pounding. \"Do you want to watch another movie and just relax? Snuggle?\"\n\n\"I would like nothing more, honey.\" He squeezed my upper arm. \"But we need to get up pretty early. Black Friday, remember?\"\n\nI groaned this time. Going to the mall on a regular day was rarely on my agenda due to a lack of funds. Intentionally going on the worst shopping day of the year? Was I crazy?\n\nHe cuddled me to him in his bed instead, and I fell asleep never more grateful to have him in my life.\n\n###\n\n\"Rise and shine, Holly,\" a warm voice whispered against my ear. \"Time to get up.\"\n\nI cracked one eyelid and softly cussed at the dimly-lit room. The light behind the blinds was blue, indicating it still wasn't daybreak outside. Hadn't I just gone to bed?\n\n\"Come on,\" the voice urged.\n\n\"I don't want to.\" I waved my hand at the face I could feel breathing on my neck. My palm made contact with a forehead, and I pushed it away with my fingertips. \"Leave me alone, Mom.\"\n\n\"Mom? Now that's a new one. I know some women like to call their men 'Daddy,' but...\"\n\nMy eyes flew open, and I scrambled to sit up. \"Oh, shit! Chris!\"\n\nHe grinned at me from where he was stretched out fully-clothed on top of the comforter. \"Good morning, honey.\"\n\n\"Sorry about that. I'll go get ready.\"\n\nHis eyes narrowed, though he continued to smirk at me. \"Do I have to worry about you having suppressed feelings of resentment toward your mother because she woke you too early each morning when you were growing up? Did she sing you a song I should know about to avoid?\"\n\n\"You need to grow up,\" I grumbled, swinging my legs out from under the covers on the opposite side of the bed. There was a growl behind me when I stood and the sheet fell away.\n\n\"In the half-light, you're even more exquisite, Holly. How the shadows touch your skin, highlighting your silhouette. Mmm. Don't move.\"\n\nI sucked in my breath and held it, obeying. Anticipation spread throughout my limbs.\n\nThe bed springs squeaked. I expected him to come around to stand by me. Instead, he approached from behind, across the mattress. Shivers rippled up my spine at the feeling of his fingertips tracing my hips with the lightest touch. His breath caressed my upper back between my shoulder blades before his lips did...then his tongue.\n\nMy whole body trembled now, and I whimpered.\n\n\"Shh.\" His hands swept my hair over my left shoulder before his lips brushed higher up at the base of my neck. Fingers pressed harder into my hips while thumbs stroked the skin on my backside.\n\nThe quaking outside intensified, so I pressed my lips together. Fisted my hands. Still, my legs swayed.\n\nChris pulled on me until I stepped back, halting when my calves hit the edge of the bed. His left arm slid around my side, his hand moving up to cup my right breast...my left nestled in the curve of his elbow while he held me against his chest. His right hand slinked forward as well, pausing at my abdomen to stroke my belly button before continuing a path down to my pussy.\n\nI gasped when two of his fingers spread my outer lips and his middle finger slid between them, circling at my clit. When fingers on his left hand pinched my nipple and twisted it in time with the actions of his right-handed fingers. But it wasn't until he ground his hard-on against my ass that I reached back and gripped the sides of his pants, my knees buckling.\n\nHe stilled. \"Hands, Holly.\"\n\nSwallowing hard, I raised shaky arms until my hands were behind my head. I linked my fingers together and tilted my chin down. Eyes closed, I took in several deep inhales and long exhales.\n\n\"Good girl.\" His ministrations continued. The rocking became more pronounced.\n\nI had to bite my lip to stop my whimpers when his finger stroked deeper between my legs. His left hand caressed and massaged my breast now, his thumb grazing the straining peak. The bulge in his pants rested just under my ass so that I was practically sitting on him while he knelt and I stood. All the while, his mouth tattooed kisses along my neck and shoulders.\n\nHe hugged me tighter, his right hand delving until two of his fingers slipped inside of me and thrust upwards rapidly. His voice was hot and raspy in my ear when he said, \"Come for me, Holly.\"\n\nI did. Gladly. Gasping out his name while trying to keep my hands behind my head.\n\nChris released his hold momentarily only to pull me by my waist back to him...and down onto his cock. I screamed at the sudden penetration. His groan of approval was muted by his mouth pressing to my back. And then we were moaning together, his hands fondling my breasts while my arms hung limply over his at my sides and he bounced me on his lap. Fucking me from behind and under me.\n\nI came again on his command, barely grunting acknowledgement at his multiple requests if I was okay. I was still shaking and mumbling when he dislodged himself from my body and laid me down, caressing my face and hair. Whispering for me that he was there.\n\nThe sound of him zipping up his pants reminded me we had plans, but he didn't have me get up. He left the room for a few minutes. When he returned, he turned on the other lamp by my side of the bed.\n\nHe brushed my hair off my face. \"Feeling better?\"\n\n\"Absolutely.\" I kissed him when he lowered his lips to mine, and then I got up again and pulled on fresh pair of panties. I grabbed my jeans and sat on the edge of the bed. \"Is it the same spot as last year?\"\n\n\"It should be. We'll find out when we get there. Don't put those on, I brought your khakis. Remember, we want to appear professional but still comfortable. It's going to be a long day.\"\n\nI tried not to groan at the numbers on the alarm clock. People actually got up at quarter-to-four on Black Friday? On purpose? But then I did groan when he pulled the blinds aside and I saw a light coating of snow outside. Why in the hell had I agreed to do this?\n\n\"Because you're a great girlfriend, and you wanted to help out a poor guy.\"\n\n\"Damnit. Am I talking out loud to myself now, like I do in my sleep?\"\n\n\"It's adorable,\" Chris smiled, pecking me on the nose. \"Now hurry up. It's going to be a shit show in the parking lot.\"\n\nI raised my eyebrows and checked the clock again. \"Already?\"\n\n\"You wouldn't believe how cutthroat people can be on this day. And I'm not just talking about the women.\"\n\n###\n\nChris had been right. If I'd thought the mall had been crazy last year a week before Christmas when we'd first met, these people were on speed. And we were still outside. After a commute twice as long as usual to get here due to the traffic, we walked about half-a-mile from where we'd parked. My cheeks felt chapped from the crisp wind after only a few feet.\n\nInside, chaos didn't even begin to describe the scene. I just stared for a minute, gawking. Trying not to think of everyone closing in on me like the walls of a room.\n\n\"You have to not let the crowd get to you. This place does an exceptional job of making me feel claustrophobic. I've learned to find ways to see myself through the commotion. Look up...there's nothing there but open space.\" His deep voice was comforting in my ear, as was his hand gently holding mine. \"Just don't do it too often because people may begin to think you're looney.\"\n\nI giggled at that, wondering if he knew from experience, and started down the walkway.\n\nOn either side of the wide space broken up by benches and a directory kiosk, people were shoving their way through the racks of clothes, seemingly oblivious when articles fell on the floor in the various stores. Others were already juggling multiple bags while maneuvering through the masses to the next store. The further we walked, the worse it got. The lines at the two different coffee vendors I was familiar with were a clear sign they were going to make a killing today...and there probably wasn't a chance I'd get my favorite drink.\n\n\"This is nothing, Holly. You should see the other areas of the mall where the techy stores are. The high-end retailers. Kind of makes me glad I don't have a lot of money to spend.\"\n\nI just nodded and continued following him to the office where we were supposed to check in.\n\nTwenty minutes later, I was handing out my first survey after several rejections. We had been stationed in front of one of those preppy stores. Just like where I'd seen Chris last year. The Culligan Man was nowhere in sight, thankfully. One run-in had been enough.\n\nThe morning was just a constant repetition of trying to be a better salesperson than Chris. He'd even wagered he could get more completed than me, so it made the hours go by a little faster. A little friendly competition was good for the soul, he said.\n\nI'd seen at least three movies where a guy introduced the girl he was interested in to his job flinging fish. Of course, she enjoyed it despite her doubts. There was some kooky flirting against a backdrop of lively music, and then they ended up making out while the sun rose, despite the fact that the two of them would have been smelling like a chum bucket if it had been happening in reality.\n\nWhen Chris had asked if I wanted to earn some extra cash, I hadn't expected it to be like a movie. Well, maybe we'd do the make out session later today. But I'd not imagined this. After four hours of the noise and being hit at least a dozen times by random ladies' purses while they adjusted the weight of their purchases as they shuffled by, I would have gladly traded this job for a fish market. At least the fish didn't bicker about getting a lower discount than advertised, or that so-and-so was already out of whatever it was in the flyer and it was only nine o'clock. The complaining voices were almost as bad as the feeling of claustrophobia that started to set in the longer I stood in one place. Looking up occasionally did help. I'd give Chris credit for that.\n\nDuring our break, I managed to grab a table for two in the food court while Chris went to get us lattes and a bite to eat. I watched the hustle and bustle of the crowd swirl around me. Despite the apparent disarray of their movements, they knew where they were going. They each had an agenda...a plan.\n\nBut what was my plan? Not here at the mall, but in life? I'd overheard my boss on the phone Tuesday telling someone that he was going to offer a couple of employees a promotion to fulltime after the holiday. Which started me thinking. If I was one of those candidates, did I want to work there permanently manning the front desk?\n\nMaybe I should have finished college. I'd just not had any interest in any of the fields when it had been time to declare a major. Money had always been tight with my parents. It had been a hard choice, but I'd finally dropped out after my second year and lived at home...got a job.\n\nI'd bounced around for a long time. The gym had been where I'd landed three years ago, giving me the opportunity to find my own place. I'd been hired to answer phones, check in members, and be the physical Google when people had questions. Since last year, I'd been asked to do the bookkeeping as well. Then this summer, I started filling in for the morning aerobics classes when the instructor was out sick or on vacation. I'd gained more responsibility but not more time to do it in...and not more compensation. At one point in my life, I'd dreamed of settling down. Maybe having kids. I didn't think either were possible with my current position. If I didn't get offered the promotion, did I want to stay at the gym and keep living month-to-month? Paying rent?\n\nOf course, that turned my thoughts to my roommate. How I was going to handle that hot mess. Because I was determined that it was done. No more skirting around the issue with Dirk. I needed to lay out the truth and put down an ultimatum. Jolie and I had been friends for longer than we'd been roommates. She'd been the first person I'd thought of when I knew I'd have to get someone to share an apartment. It was my name on the lease, but we had been equal tenants from the start. Yet this past year, I'd felt like I was crashing at her and her boyfriend's place. No more.\n\n\"You look lost in thought,\" Chris said, joining me. Due to the lack of space, we both used our clipboards as placemats. He folded his arms on the table as well, one hand around his paper cup. \"What's going on behind those beautiful emerald eyes?\"\n\nMy cheeks burned, and I could only look as high as his single-dimpled mouth while my hands fumbled at opening the wrapper on my sandwich. This man had seen every part of me laid bare. Why did I always get so embarrassed when he paid me a compliment? Especially one so simple as my eyes? At least I hadn't lost my voice this time.\n\n\"Just trying to figure out what I want to do with my life.\"\n\n\"Wow.\" He removed the lid from his cup, blew on the dark liquid inside, and took a hesitant sip. \"That's a deep subject to ponder. You might need another drink. Maybe two.\"\n\nI copied him and finally lifted my eyes back to his. \"What had you wanted to do? Before you did this?\"\n\n\"Honestly, I'm not entirely sure I had something pinpointed down.\" He folded down his wrapper and took a bite, chewing thoughtfully. \"When I was in high school, the town I lived in had an event each Columbus Day for juniors and seniors. It was like a job fair, except instead of various employers, each station was set up with one of the possible areas of study you could get a degree in. Everything from trade work all the way up to a doctorate. Each booth had brochures from the schools that offered the necessary classes to reach your goal. What you could do with each degree. It was all very cool, but overwhelming.\"\n\n\"I can't even begin to imagine the pressure.\"\n\n\"I had ideas about what I wanted to be...do...when I grew up.\" His smile reached up to his eyes, which were bright and looking somewhere over my shoulder. \"I've always had a fascination with Egypt, but I couldn't tell you when it started. I was glued to the TV for every special on things archaeologists discovered. Like King Tut's tomb. My mom tried to take me to all of the museum exhibitions that came through town. I still have loads of books on the artifacts and the history of the country and people. I used to stare at the pictures for days.\"",
        "I wrapped both hands around my warm cup and smiled, loving how his blue eyes became even more brilliant as he talked. Since we'd met, there had been many times we both shared various things about ourselves...from our pasts. But I couldn't remember him beaming so much. He really did enjoy what he was talking about right now.\n\n\"One of the booths at the event had talked about anthropology. How you could use the degree to be an archaeologist. I thought it was the perfect area to study. I wanted to go to all these places around the world and help uncover lost cities and their treasures. Lost civilizations.\"\n\nThe more he talked, the more I kept envisioning Indiana Jones movies. Which made me think of the whip the lead character used. And that made my pussy throb. While I had no desire to be afflicted with it, just the thought of the implement being brandished was surprisingly arousing. More of my naughtier side revealing itself, as Chris would say. And that made me shiver.\n\n\"Once I started at the university, I grew to like the biology courses,\" Chris continued, pausing to alternate between drinking and eating as he spoke. \"I ended up getting a degree in that instead to allow more opportunities for employment. But even then, the jobs were harder to come by than I had been originally led to believe. I'd thought wanting to be an archaeologist was too limited. My chosen field ended up being too broad. After graduation, I did some subbing and really liked the science classes. But I didn't have a teaching degree to make it fulltime. And I didn't have the money to get the additional classes that would allow me to do that or get a higher degree.\"\n\n\"I'm sorry.\" I grasped his free hand and gave it a squeeze when our eyes met. \"I know all about not having the money to do the things I really want.\"\n\n\"Hmm? Like what?\"\n\nI shrugged. \"Not worry about making ends meet. Go on a vacation every now and then. Find a place of my own where I don't have to deal with roommates. Simple things like that. I'd just expected it would happen before I turned thirty. But unless it happens in the next fifteen days...\"\n\nHe squeezed my hand back. \"I hear you, honey. All admirable wishes.\"\n\nReturning to eating, I nodded to the mall and asked between bites, \"How long have you done this?\"\n\n\"The survey thing? Three years now on Black Friday. Last year was the first for the week before Christmas. But I'm hoping this is the last year for both.\"\n\n\"Ooh. Big plans to change your destiny?\" I tried to suppress my giggle but failed.\n\nIt was Chris's turn to blush. A rare experience to witness. Very charming, though. It made me think of him as a mere mortal, like me, and not the super always-in-control-of-everything man he presented himself to be. The word 'vulnerable' came to mind. I appreciated him even more for it.\n\n\"I received a letter last week.\" He bunched up his empty wrapper and played with the plastic lid from his cup, his eyes on the table. \"Someone I knew while I was in college reached out with...an offer. I've been mulling it over. I really want to accept, but I feel like I've already been at the receiving end of her good graces for too long. There is no way I could ever pay her back.\"\n\n\"Her?\" I started to pull my hand back. Just the simple pronoun had the green-eyed monster rearing its ugly head from a long slumber.\n\nHis fingers tightened around mine. \"Don't. Please.\"\n\n\"Chris?\"\n\n\"I want to explain. Just...not here. Tonight, okay?\"\n\nI nodded, somehow showing restraint when all I wanted was to hear about this woman. Why she would contact him after what, almost eight years? And why he was so concerned about accepting her proposition.\n\nWe rose together, disposed of our cups, and then walked single-file back to our post to complete the rest of the day.\n\nIf I'd thought the morning had dragged, the afternoon was even worse. The shoppers and the employees were both running out of patience, the crowds had increased, and no one really wanted to take the time to answer a consumer survey about their dish soap and laundry detergent. At one point, I wondered aloud if we'd have better luck offering up his Naughty List I'd found last year.\n\nChris gasped at me, his hand on his cheek. \"Holly, I'm shocked that you would even suggest such a thing! These are good, wholesome people. Here I thought you were such a good girl.\"\n\nI just snorted and rolled my eyes at him.\n\n###\n\n\"Tell me about your letter?\" I asked later that night while we were lying in his bed, the sheet tucked around my naked body between us. He was on his back with one arm under my neck. I was on my side facing him, and I kept sighing from his fingers casually running through my hair.\n\nHe glanced at me. \"You know the song, 'Mrs. Robinson,' by Simon and Garfunkel? The movie they created with Dustin Hoffman called 'The Graduate' that had the song in it?\"\n\n\"I think so. About an older, married woman who seduces a young man after college and he falls in love with her daughter?\"\n\n\"Yep, that's it.\"\n\n\"Whoa! What the fuck? Are you telling me that the letter you got is from an older, married woman who seduced you while you were in college? And she turned you on to spanking and the like? Did she convince you to get your cock pierced?\" I scurried to a sitting position as I asked my rapid-fire questions. Held the sheet to my breasts, suddenly self-conscious. \"Did you have a fling with her daughter, too?\"\n\nHe nodded, his face so stoic.\n\n\"Oh, my God, Chris! How could she? How could you?\" I rose up on my knees, putting a little more distance between us. A slight feeling of disgust entered my thoughts for what had happened. He'd been an adult. Surely he could have said 'no' and stopped it. But he apparently hadn't. \"Did she abuse you? Threaten you? Blackmail you or something? No, you must have liked it since you still do it today. Wait, do you still do it with her? Her daughter?\"\n\nChris burst out laughing, holding his sides. \"If you could see the look on your face right now, Holly!\"\n\nMy chest was heaving. \"What? Why is this funny?\"\n\nHe reached out and grasped my hand. \"I was only teasing, honey. Nothing like that happened. I swear.\"\n\nI blinked at him. Wrenching my hand away, I grabbed a pillow and walloped him in the face. There was a muffled shout from the other side. I didn't even cringe. That had to have smarted, but he deserved it for the whopper he'd fed me.\n\nHe must have taken hold of the pillow because when I tried to pull on it to swing again, there was resistance. And then I was being pushed onto my back. I shoved at him, and we rolled back and forth with me on top then him. I ended up in the original position but with my hands held over my head on the mattress, the pillow pressed lengthwise between us. Below it, though, I could feel his erection pressing at my thighs, which had been bared in our tussling. I struggled to free my hands, but his grip tightened.\n\n\"Thank you for being so concerned for me, honey.\" He kissed me soundly then pulled back. His weight shifted until he was sitting on my thighs, my legs pinned together beneath him and his cock between us. One hand held both of my wrists now. He yanked the pillow free with his other.\n\nFor a moment, he did nothing\u2014said nothing\u2014but stare at me. Slowly, he pulled the sheet away, revealing my heaving breasts. His tongue darted out, licking his lips as he ground his cock against me. Then he stilled again.\n\n\"Cad,\" I barely breathed, a mixture of annoyance and arousal warring inside.\n\nChris leaned down and captured one straining nipple in his mouth\u2014evidence of which side was winning. He moaned and pulled back, gently holding the sensitive point in his teeth. Then he let go, licked it, and sat up again, leaving me panting. Aching for more despite my determination to stay pissed off.\n\n\"Professor Bradley taught oceanography my freshman year,\" he said, shifting his weight to his knees but keeping my legs trapped. \"Her son was the leading quarterback on our all-state team. Pete 'The Plow.' I always thought it was because of how well he played football. I didn't find out till later that he got his nickname from clearing snow with his dad every winter. He took over the physical labor part of his dad's landscaping business when his old man retired. Pete has run it all ever since. You know, it was Pete who helped me get your mom and Christmas dinner to your place last year?\"\n\nThe tension in my body let up a bit. But I was still mad at him for telling me such a bald-faced lie. Even if he had been teasing.\n\n\"Pete and I became friends after being in the same study group for biology my spring semester. We hung out at his parents' house quite a bit. They were cool. I even got a job helping out at his dad's nursery taking care of the plants. Mr. Bradley always teased that I should change my degree to botany because I had such a green thumb. That maybe I was a long-lost son.\"\n\nEvery now and then, his body would shift as he talked. I don't think it was intentional, but it caused sparks to light up sporadically through my nether regions. And the continual pressure on my wrists only added to the arousing sensations. I bit my lower lip and flexed my fingers, trying to distract my brain from losing concentration.\n\n\"That March,\" he continued, \"my dad got laid off. Professor Bradley overheard me sharing with Pete that I wasn't coming back in the fall because my parents couldn't afford the tuition. A week later, the Bradleys sat me down and said if I wanted to continue to get my degree, they'd see that it happened. I wasn't to worry about how to pay for my classes, and I would stay with them for housing. I think that was the first time I remember crying. My parents later told me that the Bradleys had a foundation at the university, and they hand-selected two students each year for a full scholarship. The only stipulation was that they were getting a degree in the biological sciences.\"\n\nHe leaned down and captured my other nipple in his mouth, this time swirling his tongue around it and sucking with his lips. My back arched up with my gasp, and he moaned against my skin. I was still panting when he moved his mouth to kiss me in the valley between my breasts. And when he continued to speak while placing soft kisses all over my breasts, using his free hand to push up the flesh.\n\n\"I finished my four years and got my degree. Worked part time at the nursery while I subbed after that. For my graduation present, my parents gifted me that classic four-door in a lovely shade of evergreen that looks like it has been in a couple of Monster Truck Rallies. It's paid off, runs well, and the insurance is dirt cheap, so I can't complain.\"\n\nI giggled at that. I thought my used car was near the end of its life. His appeared to be in worse shape. We sure made a pair.\n\nHe gave me a teasing glare and nibbled at the underside of one breast, which sent me wiggling. Only his deep grind at my waist stilled me. But he did sit up. \"I decided I needed fulltime employment. Over the next couple of years, I worked at various jobs that required manual labor and had nothing to do with my degree. But they always put food on the table, kept a roof over my head, and paid the bills. I was lucky I'd found this apartment so cheap. I saved up everything I earned those last three years of college. The Bradleys wouldn't let me pay for anything. I've tried to save more since then. It's not a lot by most people's standards, but I keep adding to my account at the bank for a rainy day, as they say. Hopefully, my gigs doing temp work all the time will change.\"\n\nWhen he leaned forward again, I raised my head. Our lips met while he cupped my left breast and stroked his thumb over the tortured peak. We moaned into each other's mouths. Then he was sitting up again. Scooting back so that his cock rested between my legs now, the coolness of the piercings reminding me of one of my questions.\n\n\"When did you dedicate yourself to the lifestyle?\" I lifted my chin, indicating the craftsmanship down below. \"Who really turned you on to bondage and dominance?\"\n\nHe laid down kind of sideways on top of me, pulling my arms closer to the top of my head but still holding them in his grip while his cheek rested on my chest, my right breast cushioning him. As a result, his chuckle vibrated through me. \"Well...we were out for Pete's bachelor party, and one of the guys thought it would be a great idea if we each got a nipple pierced to commemorate the night.\"\n\n\"Oh, my God! And they listened to him?\" I couldn't help glancing at his chest, trying to see if there were marks that he'd once had a nipple piercing.\n\n\"Holly...\" Chris lifted his head.\n\nI shifted my gaze to his eyes. Noticed the sparkle there. His wide grin. \"Wait, are you...\"\n\nHe tipped his chin and stuck out his lower lip. \"I'm sorry, it was too easy.\"\n\n\"You are so lucky I can't grab that pillow again,\" I growled, writhing under his weight. Which did absolutely nothing but make me moan because it reminded me that a naked man was lying on top of my own naked body.\n\n\"I knew you were naughty. But borderline sadistic? My, my.\" He tsk tsked before lazily running his tongue along the curves of my breasts.\n\n\"Shut it. I swear...\"\n\nHe mumbled something against my skin that sounded like a warning not to make promises I couldn't keep before resuming.\n\nI just sighed, unable to resist the wave of pleasure drifting over me.\n\nAfter a long moment of nuzzling and licking on his end which had us both moaning, he rested his chin in the valley between my breasts and sighed as well. \"I dated a girl who worked in a tattoo parlor. Her group of friends embraced the punk rock style. Tats, piercings, drinking, drugs, wild sex parties. They were also into BDSM, and I was introduced to a pretty hardcore side of it headfirst. Specifically, the genital piercings. My girlfriend was a proponent of it being very much worth the experience for both of us. She actually did the reverse Prince Albert. One of her coworkers did the Jacob's Ladder. She had been holding back. The feelings were night and day. She'd always been multi-orgasmic, but with the added metal, it was like she had one long orgasm from the start until I came.\"\n\nI suddenly regretted asking him to tell me about his past. Hearing about his sexcapades with his previous lovers wasn't really my kind of thing. Maybe because my own had bombed so beautifully. When I tried to look away, he gently turned my chin back.\n\n\"I'm sorry, honey. Please understand, I was a different guy back then. Still searching for my identity. Fresh out of college and looking to rebel from my proper upbringing, I went overboard.\"\n\nMy chin trembled in his fingertips. His eyes had lost some of their spark, and his smile had fallen. He seemed to be struggling as much as I was.\n\n\"Though I enjoyed the dichotomy of the Dom/sub relationship and how much my...jewelry...improved the pleasure, there were many aspects of that life I didn't like. Drugs were prevalent in our circle. Heavy drinking. Swapping partners. All three combined, usually. I never did drugs. Didn't care much for alcohol. And I'd always considered myself monogamous. I stayed true to my girl. Thought she was doing the same with me despite what her friends were doing. Then one day, I swung by our shared apartment over the studio before I headed to my second job.\"\n\nI tried to read the emotions in his eyes, but they were dark and clouded now. Gazing somewhere off to the side of the bed.\n\n\"She was with two of her guy friends in our bed. They were the ones who had quote-unquote 'taught' me to nurture my dominant side. They had also been very persuasive when I was trying to decide on the piercings. I could see that they sported similar but more elaborate hardware than what I had chosen. One of the guys said it was a relief they didn't have to hide their secret anymore. They didn't even stop fucking while I gathered my stuff. I don't know how long it had been going on, but I hadn't signed up to be with someone who went behind my back like that. Who didn't have the decency to act embarrassed or apologize\u2014even if she wasn't sincere\u2014for cheating when she got caught.\"\n\n\"Oh no, Chris.\" I was sad for him, but honestly not that their relationship ended. If he hadn't left her...\n\nHe dropped his free hand to my neck where he played with my hair. \"I walked away from her and the lifestyle that day. It was almost a year before I felt I could venture back into being a Dominant again. I'd enjoyed the role. I just needed a loyal partner. Maybe better direction. So I searched for support online and came across a popular fetish website. Found that there were varying aspects of all the roles, not just the hardcore stuff I'd been told about. It helped that I could be anonymous and still get advice. Eventually, I got brave enough to go to the local gatherings that met in public for meals and chitchat. Felt comfortable sharing about my own experiences. Asking questions.\"\n\nUsually, I enjoyed Chris weighting me down. His body always felt good on mine. Made me feel safe and warm. But right now, I think he needed to feel that himself. I wanted to hold him...comfort him so badly. The fact that I couldn't because of how he'd confined me in his drawn-out seduction was frustrating. My verbal attempts to get his attention were drowned out by his voice as he continued. Or maybe he just chose to ignore me.\n\n\"Over the next two years, I hooked up with girls from those meetings. But for one reason or another, it never worked out. I wondered if it was me or the piercings. I became less assertive. Only talked to girls if they initiated it. For those who did approach me, I didn't come right out and explain how I was...endowed. But it didn't seem to matter. One girl said she could tell I was hiding something by the way I shied away from letting her touch me below the belt when we made out. After it had happened a second time with another girl, I realized I must have been subconsciously projecting my fears that I would be rejected. And the irony of it, it was happening anyway. Girls didn't stick around with guys who made it blatantly clear they had secrets.\"\n\nThe constant buzz of one of our phones on the nightstand had us both looking in that direction. It stopped a second later. When there wasn't a ding that the caller had left a voicemail, Chris laid his free arm across my chest under my breasts and rested his chin on his forearm, his dark eyes on mine.\n\n\"I'd never regretted the piercings. But I suddenly began to doubt I'd find a girl who would accept me with them. I considered having them removed. I was just afraid of permanent damage. So I set my mind to it that I wasn't going to stop looking for her. Waiting for her.\" Chris let out a shaky exhale. \"Because while I had once enjoyed being a Dominant partner, I was now...nothing. A piece of me had been lost, and I wanted it back.\"\n\nHis thumb stroked my wrists now, which caused a low moan to creep up my throat. I writhed a little under him. Felt his cock twitch against my legs. My pussy throb in response. But I bit my lip, wanting to let him finish.\n\n\"I reached out for help from someone I knew in the local group. I wanted to get back into the lifestyle. I was referred to a guy who worked with Dominants. Trained them. And he lived less than an hour away in one of the suburbs. When I first met him, he had his basement all set up for meetings. They were nothing like the ones I was used to going to here. His included mini-seminars with proper techniques and always ended with the couples practicing whatever had been discussed. Since I was partner-less, he worked privately with me on the weekends in non-sexual situations for about six months.\"\n\nWhile he talked, his fingers moved lazily over my skin, sending goosebumps popping up on my arms and legs...shivers skating up my back. I licked my lips and tried not to moan too loudly.",
        "\"He had a beautiful girlfriend who was a famous mystery writer. There was another couple who came sometimes. The writer's brother and his partner, I think. They were all amazing in providing whatever assistance was necessary during the sessions. So patient and encouraging. Together, they helped me regain my confidence. To discover that I wasn't as hardcore and brutal as those punk guys had been. Yes, I liked spanking and bondage, but I'd always cared more about my partner's wellbeing and feelings than stroking my ego. It was a bit of an oxymoron that as a Dom, I found myself willing to submit to whatever she needed to reach ultimate pleasure. And in a strange way, that itself was the power trip.\"\n\nTears formed in my eyes without warning. I prayed that he wouldn't notice.\n\n\"At the last training session, they told me to not give up. They were sure there was a girl out there who would accept me for who I was, flaws and all the bling included.\" He gave me a soft smile when he tilted his head back and looked up at me. \"It was almost five years since I had been intimate with anyone when I met you, Holly. I haven't had a doubt since.\"\n\nWhen I turned my head this time, he let me. I took several deep breaths. Closed my eyes.\n\nEver since I'd discovered his list, I'd been afraid to learn where his darker side came from. Dreaded that knowing the truth could lead to finding out he'd want more from me than I was willing to give. Able to give. Which meant I'd have to let Chris go.\n\nI choked back a sob from the relief that I wouldn't have to do it now. That the truth was bearable. He was more like me than I'd imagined. Fragile at the core but with a tough outer shell. Braving the path alone and pressing on because he had faith that it would all be worth it some day.\n\nMy eyes fluttered open at his fingertips brushing against my forehead. When I looked at him again, he was worrying his lower lip. I swallowed and blinked away my unshed tears, smiling at him. \"It's okay, Chris. I understand, and I'm with you all the way. Thank you for feeling comfortable enough to share your story with me.\"\n\n\"Woman, you are an enigma,\" he groaned and kissed me softly. \"Sometimes, I fear a bad reaction, but you surprise me with the opposite. I love that about you.\"\n\nMy cheeks weren't the only thing on fire now. I arched my hips to let him know.\n\nChris's fingers were in my hair again, and I tilted my chin up. He just kept staring into my eyes. So I stared back, studying the blue depths that grew brighter again in the light from the bedside lamp. I loved looking at them...at him. My favorite time was when he was sleeping. He was always so peaceful, unlike when I twisted about and talked while dreaming. Especially, when my dreams were about sex.\n\nWe continued watching each other, our breathing settling to an even pace. That we were skin to skin was momentarily forgotten.\n\nEventually, I whispered, \"Why me?\"\n\n\"Hmm?\" His fingertip traced the ridge of each of my cheekbones. \"What do you mean?\"\n\n\"Why pursue me? What gave you the confidence again?\"\n\nHe stroked downward along my neck. Pausing on my shoulder where his other fingers joined the play, gliding over my arm. Following the curve of my breast. \"Something about your attitude that day in the mall drew me to you. I'd watched you earlier, doing your window shopping. You didn't go into any of the stores nearby. And you hadn't bought anything before that from what I could see. Yet, there was the most brilliant, carefree smile on your face. I could tell you were like me. Wanting more out of life than what we'd been given, but still content with it. And then you were heading back my way with your drink. I swear, I didn't know I'd distracted you. I was just being nice when I saw you were looking at me. So, I smiled. The rest is...well, history.\"\n\nI gasped at his fingers on my hip now. Stroking my waist. I licked my lips. \"Why not ask me if I was into a guy with piercings before you took me to bed?\"\n\n\"I was enamored from the start. Swore I couldn't mess up this time. I was still mulling over how to broach the subject when we met for coffee, but then your mom called. My only concern became easing your pain. I did what I'd been raised to do by my parents and the Bradleys. I was there for you, if only as a shoulder to lean on. I'd had no intention of...\"\n\n\"Seducing?\"\n\n\"Okay, yes, seducing you. I only wanted to bring you home where I knew you'd be comfortable. But once we were there... God, woman, do you know what a temptation you are just being in the same room with me? Add in that we were alone? I tried very hard to be good.\"\n\nRight now, he wasn't trying very hard at all because his thumb was stroking that spot along the juncture between my leg and my hip. My body did a little wave against the bed, and I whimpered. Above, I tugged on my arms. His fingers there flexed around my wrists.\n\n\"You were so unbelievably desirable, even after all you'd been through. I took a cold shower just to get you off my mind. Thought it had helped. But then I walked into your bedroom and saw what you were logged into. Hoped but didn't assume it was my profile. Whatever you were reading, it must have been very interesting because you hadn't scrolled down the page for over two minutes. Then when I did see what had captured your attention...\" Chris groaned and closed his eyes.\n\nI gulped, remembering. The questions had both startled and intrigued me. I'd fought against reading them all. Answering them, even in my head. Afraid of what they'd reveal about myself. I whimpered again, not sure if it was from my thoughts or the fact that his eyes suddenly opened and were blazing with desire while he looked down at me again.\n\n\"Although you couldn't know the extent of the answer about the piercings, it was enough to see you didn't seem disgusted. And damn it, I was hard as a rock again. My intent to ask you for a blanket and pillow to sleep on the couch went out the window. I couldn't walk away. Not that time. You surprised me at being so open to everything I did or suggested. Especially the spanking. And then I couldn't stop. I was weak and had to have you completely. Even then, you floored me with your acceptance of my entire being...my piercings.\"\n\n\"The letter\u2014\" I started, but he brushed his fingers across my pussy, preventing me from breathing at all for a few seconds.\n\n\"Professor Bradley got wind from Pete that I was wanting to take some more classes to get my masters...a teaching degree. I just don't have the funds. She's offered to cover whatever financial aid doesn't since she considers me part of her family. The only stipulation is that I come back to work at the nursery fulltime while I'm in school. They're not happy with their current guy who takes care of their plants and shrubs.\"\n\nI licked my lips, trying to wiggle my legs apart when he lifted up and adjusted his body. \"What are you going to do?\"\n\n\"I want to accept. I don't think I should pass up an opportunity like this. But I wanted to talk to you about it first. It's going to take a lot of my time.\"\n\n\"I support you, no matter what your decision. But thank you for asking.\"\n\n\"Mmm. You are amazing.\" He kissed me. \"Do I need to ask if you'd like to come?\"\n\nMy mouth dropped open, but he didn't even give me a chance to answer because he raised up and thrust his hand between my thighs.\n\nI cried out, my body twisting beneath him while his fingers and thumb sought their goal. When they found it, he pressed and circled inside and out at the same time. Making me babble.\n\n\"That's it, Holly. God, you are so beautiful when you come.\"\n\nI choked back a cry when his hand disappeared and was replaced with his cock. My heart thudded in my chest each time he slid home. The balls and bars on the underside of his shaft dragged back and forth over the bottom ridge of my entrance in rapid succession. The ring and ball on top ground against my G-spot. Lather, rinse, repeat. Harder. Faster. Driving me further on.\n\nMy neck started to ache from its constant arch. I could no longer see anything at all because my eyes had rolled back so far. A fire was burning in my lungs, but I didn't care.\n\nChris panted somewhere above me, his grunts mingling with my moans. And then he eased off. Every part of me felt like it was breaking by the time he pulled out. He wasted no time flipping me onto my stomach, still holding my arms above my head. He pressed them back against the mattress, his other hand shoving my right knee up.\n\nA ragged scream ripped from my throat when his cock slammed back into me. The piercings rubbed in different spots now. Created new but enjoyable sensations. It wasn't as easy to achieve an orgasm in this position, but I knew that he favored it as it felt good to him. Plus, it gave him access to my backside.\n\n\"When you sweat like this, honey, your skin just glistens.\" He released my leg and ran his hand flat across my spine. On his next pass down, he used his fingertips. Then just two fingers. Only one. Repeating, as though he were petting. All while he fucked me. Slower but with no less intensity than before.\n\nEach pass had his fingers moving down further until he slipped two between us along his cock and stroked through my pussy from behind. A moment later, I was gasping as he rubbed those fingers over my asshole. My right leg automatically started to relax...straighten out. A resulting smack on my ass had me clawing at the sheet.\n\n\"Don't move your knee,\" he growled.\n\nAnother smack on the same spot of my right butt cheek created a lingering sting. But it wasn't a deterrent because my leg moved again when he returned to fingering my asshole. I couldn't help it. I didn't mind if he held it in place or I could use my own hand. But when I could only use my concentration? He must be dreaming. My mind was currently focused on what he was doing to me, not keeping still.\n\nI whimpered when he suddenly paused with his cock buried in me and leaned over my hip, grunting. The nightstand drawer scraped open then shut. A familiar clicking sound had me jerking my head up. Then I yelped at a harder smack on my ass.\n\n\"You disobeyed.\" At my frustrated cry, he shushed me. \"I'm not denying you, honey. You've had a rough week, and it wasn't fair that I teased you for the past hour. Just stop struggling for a minute.\"\n\nMy chest was heaving as he wrapped a length of rope around my wrists. Binding them with my hands palm-to-palm and leaving a loop sticking out above my fingertips. When he was done, he hooked the loop to a carabiner clip he'd attached to the eye-hook just under the bottom edge of the wooden headboard. The feature had been useful several times in the past when he used handcuffs and rope to restrict my movements. I missed his hand doing the job, but my pulse raced at the more secure method. It wouldn't get distracted in the throes of passion and accidentally release me.\n\nChris kissed my neck before he sat up. \"Good girl.\"\n\nIt was hard to swallow when both of his hands caressed then squeezed my ass, pushing my cheeks together before spreading them apart.\n\n\"Look at me.\" He tugged on my hair until I glanced over my right shoulder, my body twisting slightly. \"Stay just like that.\"\n\nMy left elbow propped up under me with the bit of slack the rope allowed, I was able to keep my body just like he wanted it. But I closed my eyes when he moved within me again. Groaned at the way he still stretched me after all this time. At the friction between my muscles and his piercings.\n\nThere was a jerk on my hair again. \"Open your eyes, Holly.\"\n\nI'd no sooner obeyed when he picked up the rhythm. He released his grip on my hair and both hands moved to hold my right hip, to pull himself into me.\n\nThe staccato sound of skin smacking skin filled the room among our irregular breaths. The grunts and cries between them coming from us both.\n\nHis fingers dug into my skin, his jaw clenched. Sweat dripped down his forehead. Our eyes locked, and I felt my breath catch in my throat. Something primal in his gaze called to me. I growled at him, and he reciprocated in turn. On the next couple of thrusts, he was slower. More deliberate with his movements. Pausing then digging in deeper before pulling back and repeating.\n\nI was so close. So fucking close. I just needed...something.\n\nHe kept it up for several minutes. Then he played with my asshole again. Pressed in with one finger.\n\n\"Chris!\" My cry came out garbled when I pressed my face into the pillow. Beneath him, my body continued shaking from my sudden release. The headboard creaked and groaned from the force of my hands yanking on the rope.\n\nHe didn't let up. If anything, his moves were rougher. Then he grabbed both of my hips and yanked me up onto my knees. He drew back and crashed into me, making me scream again.\n\n\"That's it. Right there, honey. I can feel you squeezing around me. Milking my cock.\"\n\nI recovered enough to turn my head and watch him again. Tried to rock back and meet him with each thrust. I clenched my teeth and hissed through my inhales and exhales when he rained down his palm on my left ass cheek this time.\n\n\"Fuck!\" My whole body went rigid.\n\n\"Holly... Shit. I'm so close. Come again...come with me.\"\n\nIt didn't take long before I felt him grow harder inside me. Suddenly, he grabbed me by the waist and turned me onto my left side. He fell behind me on the bed, quickly pulling our bodies back together. Then he reached across me and brought my right knee back, tucking my foot behind his ass...opening me wide. Fucking me slower, one hand danced on my clit while his other fisted in my hair and held my head back against his shoulder while he assaulted my mouth. I gladly let him.\n\nI was able to hold out until I felt him tense up and break away to yell my name before I joined him in release. Then I was mewling, trembling in his arms.\n\nHe continued to move. The little balls imbedded in his thick shaft pressed into my swollen pussy. Drawing out the sensations for both of us. I was so lost in them that I didn't realize at first that he'd slid a finger in my ass and was rubbing against the reverse Prince Albert piercing that pressed along the membrane wall on the other side.\n\n\"Mmm. Relax, Holly. Yes, just like that.\" His bottom leg slid between both of mine, pinning his right hand against my ass.\n\nA few more strokes later, I was coming again but unable to make a sound. That had me hyperventilating from fear.\n\n\"Shh. It's okay.\" Chris eased out of me and rolled me onto my back. His left palm cupped my cheek. \"Look at me, Holly. Blink twice if you're okay. Good girl. Take a deep breath. Good. And another.\"\n\nI tried to get my senses back together while he untied my hands. Massaged them. Gathered me into his arms and kissed my forehead.\n\nHe was snoring softly before I succumbed to sleep. Despite how I was usually relaxed after sex with Chris\u2014even as vigorous as it had been tonight\u2014something still lingered in my thoughts. Something that prevented me from drifting off and joining my lover in dreamland.\n\nI still had to deal with Dirk and Jolie. Soon. God help me.\n\n###\n\nI kept pacing the length of the kitchen, pausing every few passes to glance at my phone on the counter. That call we'd ignored last night had been from Jolie. She'd followed up later with a text that she had something to talk to me about, and could we please meet around eleven-thirty at the apartment. Thankfully, I hadn't seen it until this morning when I'd gotten up. I couldn't deny that it was the perfect opportunity to talk to her, as well.\n\n\"Maybe it would help to sit down?\" Chris said from his seat on the other side of the island.\n\n\"Having sex with me three times this morning didn't help.\" My voice cracked when I glanced his way. \"I don't think I can do this.\"\n\n\"Shh.\" He was behind me a moment later, turning me into his chest. His fingers brushed my hair off my forehead before his lips pressed there. \"Are you more worried about what she has to say or what you need to get off your mind?\"\n\nI hugged him tight, burying my face in his shoulder. \"Mine. Both. I don't know.\"\n\n\"I've told you before. I'm here for you, no matter what happens.\" He tipped my chin up. \"You do believe me, don't you?\"\n\nI pressed my lips together and nodded.\n\n\"Good. Just remember that.\"\n\nNot even five minutes later, he was still holding me and offering words of encouragement when the front door opened and closed. We both looked up to see Dirk standing there. I started to pull away, but Chris tightened his arms and whispered in my ear to relax. Then he released me.\n\n\"Where's Jolie?\" My voice was no longer shaky, but the same couldn't be said for my knees. I gripped the edge of the island's countertop with my left hand.\n\n\"She's in the hall.\" Dirk stuck his hands in the front pocket of his jeans, making his jacket bulge under his arms. When I started to turn away, he sighed and added, \"I need to say something first, Holly.\"\n\nMy gaze slowly returned to him. I couldn't remember when he'd ever called me by my name...spoken to me directly. We hadn't done much talking that night in the hotel, and I'd made myself scarce this past year when they were in the apartment. I tried to hide my contempt now, but I must have failed because he flinched.\n\n\"I have been an asshole to you, plain and simple,\" Dirk shrugged. \"I know it probably doesn't mean much, but I'm sorry.\"\n\nThe words 'too little, too late,' came to mind, but I kept my mouth shut. Partly because I was stunned he was finally admitting he'd wronged me, and I didn't want him to take it back.\n\n\"This past year must have been horrible for you with me always hanging around. I can't imagine...\" He stared at the floor and cleared his throat. \"You have no reason to believe I'm being sincere. I wouldn't blame you if you didn't. Fucking up like I did...I wouldn't believe me, either.\"\n\nI tried to swallow around the growing lump in my throat. Everything I had planned to say to Jolie\u2014to Dirk if he was present\u2014just slipped away. Chris's hand cupped my hip before his body pressed against my back. Giving me stability.\n\n\"I know this doesn't even come close to making up for the pain I've caused you, but...well, here.\" He took his hands out of his pockets and held one out to me. Grasped in his loose fist was a folded piece of paper. \"I really am sorry.\"\n\nMy hand shook when I took it from him. Even more when I realized it was a check. I opened it and blinked several times. The number 2500 on the other side of the dollar sign stared back at me.\n\n\"I figured since I was practically living here, I owed you some rent. That's a year's worth. Half of what Jolie pays. Plus the cost of the hotel room and a little extra. It's all I can afford right now. If you want more, I can get it for you. I can try to find you a new pan...\"\n\n\"No. No, this is...fine.\" Was this all really happening? An apology and money from the guy who had never given me the time of day despite all of the times we'd been in the same room?\n\n\"So she knows?\" Chris asked, distracting me from my own thoughts.\n\nDirk nodded. \"Yeah. I told her Thursday. Everything. She's the one who insisted I pay restitution.\"\n\n\"That's why she wanted to talk,\" I said more to myself than Dirk.\n\nHe nodded. \"Partly.\"\n\n\"Why now?\" Chris's voice was tinged with anger. His fingers gripped me tighter, making me wince. \"Why come clean after all this time?\"\n\nDirk didn't answer but went back to the door and pulled it open.\n\nJolie paused in the doorway, worrying her lower lip while she looked around. Once she spotted me, she walked over with her head down and gingerly took my right hand in hers. \"I-I didn't know, Holly. About Halloween. I'm so sorry. I\u2014\"\n\n\"You're engaged?\" I blinked at the rock on her left ring finger. Looked up at her then down again. I was happy for her...wasn't I?\n\n\"That explains it,\" Chris mumbled behind me.",
        "\"Dirk proposed Thanksgiving night.\" Jolie squeezed my hand, maybe for courage because her own were shaking. \"That's when he said he had to admit something about you. How you had actually met. I'm still processing it. I knew right away why you hadn't said anything. You always were the more reserved one when we were together. Wanting to keep everyone happy in whatever group we were with, even when you weren't feeling it yourself. But him? He's the most extroverted person I know. I didn't understand why he'd kept it a secret for so long.\"\n\nChris snorted. \"Oh, this should be good.\"\n\nI bumped my ass hard back against him, though I was thinking the same thing. He just grunted softly.\n\nDirk rejoined our intimate cluster at the kitchen island and looked me in the eyes for probably the first time ever. \"Honestly, Holly, the specific details of that night were and still are a blur. I know we were both drunk. We had a good time. I was late for work the next morning and left in a rush. That's about it. I didn't realize who you were when Jolie introduced us. By the time I had, it had been a month. I checked my credit card bill and saw the room charge wasn't on it. Maybe I'd left some cash. I couldn't remember. You hadn't said anything about that night...or the money. I figured you were withdrawn around everyone, not just me. Why rehash a one-time event that would make it awkward between you and Jolie when it didn't seem to bother you?\"\n\n\"But it did. Very much so.\" How I kept my voice even, I have no idea. Maybe it was Chris's presence, which was more evident as he'd slid his arm around under my breasts and lightly grasped my left side as soon as Dirk had stepped forward.\n\n\"I know that now.\" Dirk glanced at Jolie then back at me. \"After I proposed, I suggested that maybe we should elope. But Jolie was insistent that we have a regular wedding, like she's always wanted. Because you had to be there. To be her maid of honor. I couldn't understand why since you didn't seem like best friends. That's when she said you'd been very close since high school. Until a year ago. It all started to make sense. So I told her about us.\"\n\nJolie let go of my hand. \"I told him I wouldn't marry him unless he confronted you. Immediately. That I remembered how last November you'd worked extra hours to pay your half of the rent because you were short a hundred. You paid for that hotel room, didn't you?\"\n\nI started to nod my head when Chris pinched my side, making me yelp and jerk against him. He stepped away, giving me space, and I cleared my throat.\n\n\"Yes, I did. The money issue was hard to handle. But it was worse when you brought him home and he didn't remember me. It had only been a week.\" I sighed and frowned at Dirk. \"I appreciate your apology. Paying me back. It's been a longtime coming, and I do think it was heartfelt. Even though you are only doing it to make peace with Jolie so she'll marry you.\"\n\nJolie squealed. \"Holly! I can't\u2014\"\n\nI held one finger up and shook my head. \"No! You have both had your say. It's my turn. I admit, I'm not the best at relationships. Chris notwithstanding, I always end up with a broken heart and a head full of regret. That party...it was the end of what I had thought was a perfect match. There's no nice way to put this. You were a rebound fuck, Dirk. If you hadn't walked by, it would have been someone else. I had no expectations for it to go beyond that night. And I'm sure I wasn't on your long-term radar, either, so no love lost. It was a fun time had by all.\"\n\nDirk took a step forward, opening his mouth. Chris actually growled behind me, and Dirk retreated, his hands clasped in front of him.\n\n\"Then you walked through my front door.\" I shook my head, reliving that day for at least the hundredth time. \"You didn't even flinch when Jolie introduced us. Maybe you didn't know my name, but you sure as hell should have recognized my face. I didn't understand it. Maybe you'd slept with so many women that they all blurred together, because you surely would have remembered sleeping with someone in a hotel on Halloween a week prior. Since I'm not usually confrontational and I saw that Jolie was so happy, I tried to let it go. I hadn't counted on you always being here. And you completely ignored me. I can't think of a worse feeling than being invisible in your own home. You can tell yourself whatever reasons you want for why you acted the way you have if it helps you sleep at night. Honestly, though? I think you just don't care about anyone but yourself.\"\n\nI paused, swallowing several times. My heart pounded from the adrenaline pumping through my body. I reached out to Chris who handed me the bottle I'd left on the counter by the sink. The water was warm now, but it was wet and helped my dry throat.\n\n\"I don't think\u2014\" Dirk started.\n\nI held up my hand, and Chris said, \"She's not done.\"\n\n\"Case in point, Thanksgiving,\" I said once I could talk again. It was a struggle to keep from shouting. \"Jolie knows very well it's my favorite holiday. That this year, the traditions woven into my memory since childhood had already begun to unravel because my parents became snowbirds. I wanted to do whatever I could to hold onto the rest. I would share my favorite meal with the man I love in my own home. I was happy to include the two of you, even though you could have had your specialized dinner at your own place, Dirk. But for whatever reason, you decided you needed to hijack my day. Then to top it all off, you had to ruin that meal, too!\"\n\nChris hugged me when I turned and leaned my head against his chest, suddenly feeling exhausted. His lips pressed against the top of my head, and one hand stroked my hair. The more steady beat of his heart beneath my ear was calming, breaking through the pounding of my own in my head.\n\n\"What are you saying?\" Jolie asked, tears evident in her voice.\n\nI sighed. \"I can't change the past, but I can try to make things right for the future. Better.\"\n\n\"Do you mean my wedding? You will be my maid of honor, won't you?\"\n\nHad my roommate always been so self-centered? I turned slightly so I could see her, somehow restraining from shaking my head. \"Jolie, sweetie, you and I have been friends for years. Speaking from personal experience, there was a time I thought you could do better than Dirk. But you've claimed he's the love of your life. If that's true, don't let me ruin your happiness. Just don't choose the church wedding for me because I won't be there.\"\n\n\"Holly!\" Jolie turned to her fianc\u00e9 who just stood there like a statue while she tried to cuddle against him. Slowly, he moved one arm and then the other around her shoulders.\n\nI did shake my head then. Two peas in a pod, they were. I stepped away from my boyfriend and took a deep breath. \"One last thing.\"\n\nChris raised his eyebrows. We hadn't discussed what I was going to say next. I prayed he would be on board. If not...\n\nWhen I had everyone's attention, I gave Jolie a sad smile. \"You're currently renting your room from me. I think with the circumstances as they are, it would be best if you moved out. Before Christmas would be ideal. Technically, with how the lease agreement is worded, I could evict you. Please, don't make me.\"\n\nJolie's mouth moved, but no sound came out. She kept looking between Dirk and me.\n\nFinally, Dirk spoke up. \"You can stay at my place. Go grab what you need for now. I'll move you out this week.\"\n\nFive minutes later, I watched the two of them slowly make their way to the door without another word or a look back at me.\n\n###\n\nAs soon as we were alone, Chris secured the lock and chain on the door, chuckling. \"What was that?\"\n\n\"I looked up and saw my way out of the chaos.\" I gave him a smile and kissed him when he returned to me. \"I have a proposition. Please, hear me out?\"\n\n\"Of course.\" He followed me to the couch and sat down beside me.\n\nI took both of his hands in mine. \"Move in with me. Keep paying your rent for now. The money Dirk gave me will supplement Jolie's half of my rent for a while. Once Will gets on his feet, you can get rid of the apartment. It's cheaper to stay here paying only half of the rent, plus you're going to need space to study in when you go back to school. The second bedroom is perfect for an office.\"\n\nChris reached up and tucked a strand of hair behind my ear, a crooked grin on his face. \"You've got it all planned out, don't you?\"\n\n\"You think it's a stupid idea.\" I frowned and looked away.\n\n\"I didn't say that. And please, don't do that, Holly.\" He turned my chin back to him, though I was staring at our laps. \"Look at me.\"\n\nI blinked, feeling dampness on my eyelashes as I obeyed.\n\n\"I'm on board, honey. It's okay.\" He cupped my cheeks in his palms and brushed his thumbs under my eyes. \"I just wish you'd talked to me about it first so I had been prepared. I'm still in a little bit of shock about how you handled the Jolie/Dirk situation. That and your revelation.\"\n\n\"Huh?\" I scrunched up my nose and tried to think about what he could be referring to.\n\n\"Who's this man you love that you wanted to spend your favorite meal with?\"\n\nHeat spread across my cheeks as though he'd flipped a switch. And why wasn't my mouth working?\n\n\"Does he do this to you?\" Chris suddenly moved his hands down and caressed my breasts through the layers of my shirt and bra. Then he pinched and twisted my nipples, making me gasp. \"Does he know you like it hard and rough sometimes?\"\n\nMy arms and head seemed frozen. I watched him lick his lips, the dimple teasing me as it peeked out and vanished. His hands were on the move again and grabbed my hips, dragging me forward. Then I was falling backwards with a startled cry. My head landed on a throw pillow, and my legs were spread around him as he sat facing me on the cushion, one of his legs bent under him.\n\nHe ran his hands up and down the outside and then the inside of my thighs. \"Does he know how to touch you like I do? Seduce you? Please you?\"\n\nThough my arms still refused to raise to him, words were finally on my tongue. But they never left my mouth because his lips descended on mine. His left hand played with my hair while his right lightly stroked my pussy through my jeans. His tongue echoed the motions above. It was agonizing. I loved it.\n\n\"Does he cause you to make sounds like I do?\" He moved his right hand underneath my top and slowly slid it up and down my side from my waist to the bottom of my bra then back. Again. And Again. Making me arch with a choked gasp each time, my fingers fluttering on the couch. The longer he stroked, the louder the noises were that trickled past my lips. \"Yes, honey. Just like that.\"\n\nI was concentrating so much on his face and the movements of his fingers dancing over my skin that I didn't realize he'd scooted the storage ottoman closer. I turned my head at the squeak of the lid's hinges. A deep moan echoed in my chest when he pulled out a rectangular, black box I kept in there amongst the variety of blankets. Though not as tall as a large shoebox, it was the same width and length. Discreet but still plenty of room for...necessities.\n\n\"This guy...does he know about your secret toy box? What you keep inside?\"\n\nMy lower lip rolled into my mouth when I looked back at Chris and saw how dark his blue eyes were. Exactly how they were when I knew he was trying to contain his desire. I started to nod, and he squeezed my breast tightly. I cried out, finally reaching for his arms.\n\n\"Naughty, naughty. We'll have none of that.\" He removed his hand from my shirt then rested the velvet-covered box on my stomach.\n\nThere were soft clicking sounds while he spun the numbers on the lock and when the latch released. He lifted the lid and held up a set of metal handcuffs, putting the box on top of the ottoman. Without a word, he supported my neck to help me sit up, removed my top and bra, and then secured my hands behind my back. He stared at my chest for a moment before reaching into the box again. After a light clatter of items moving around, he pulled out a bundle of jute rope.\n\nGrateful for the respite, I tried to breathe in and out slowly while he folded the length in half and then proceeded to tie a chest harness on me. Whenever he did Shibari work, he seemed to zone out. It was interesting to watch his face, although he usually started with my back to him so I only got to see him half of the time. Now with him doing it all from the front, I saw how his eyes seemed to lose focus on me from the onset.\n\nHis mouth parted slightly, and a light sheen of sweat formed on his upper lip. As he worked, his jaw clenched and released, his head tilting this way and that to avoid mine. His hands expertly wrapped, threaded, twisted, and tugged the rope just how he wanted it. Repeating from back to front, weaving patterns he knew from memory.\n\nWe'd done this so many times, I knew myself just by feel that this would be the basic version. Two double-rows of rope under my breasts as well as above that wrapped all the way around. In front, the rope would also make a V-shape between my breasts and go back over my shoulders. In back, there would be a simple stem down my spine connecting the parallel lines and a figure-eight weave at the top between my shoulder blades to secure the loose ends.\n\nToo soon, he was done. Then I was lying down again with a pillow between my hands and my back. While not constricting like he'd done in the past with my breasts individually wrapped as though in two vices, I could feel the ropes pull taut and then loosen again with each inhale and exhale. The snugness of them against my chest and back was highly arousing. The feelings only increased the deeper I breathed.\n\nHe retrieved something else from the box. For several long seconds, he just held his fist up, apparently making sure my eyes were on it. Suddenly, he loosened his grip, and a narrow chain fell tinkling down with two tiny rubber-tipped clamps swinging back and forth over my chest. \"Does he like to tease you, Holly? This guy you love?\"\n\nI sucked in my breath with a strangled wheeze. Tried to shrink away from him but found nowhere to go. Nipple clamps were still on my list of things I wasn't certain about. The sensation had been borderline painful for me when he'd used them before. I'd been too scared to want to try again. I didn't realize they were even still in the box. Chris had always said he only wanted to bring me pleasure. But would he try to push the line with something he thought would achieve that same goal? I shot my eyes up to his and opened my mouth.\n\nBefore I could speak, he tossed the clamps back in the box and stood, shoving his pants down around his ankles. His shirt was over his head and on the floor soon after. Then he stood before me in all his glory, the light flashing off his jewelry.\n\nThe thought of the clamps was instantly wiped out. I gulped, hoping whatever plans he was forming included allowing me to feel that cock on me...in me...and in short order.\n\nHe rested one hand near my head. The moment he touched my bare breast with his other hand, my eyes drifted closed. Thank God, he didn't tell me to open them again. Each brush of his fingertips along the outside of each fleshy globe\u2014around my areolas\u2014pulled another moan from me. The heat of his palm was palpable as it lingered over one nipple, which seemed to strain for his contact. I clutched at the couch cushion, but my nails just scraped the plush material.\n\nMy eyes fluttered open, and I couldn't stop licking then pressing my lips together. When I arched to him, he pulled back. Moved to my hips where he stroked each curve and dip, tracing the bones underneath. When I tried to twist away, he returned to my breasts. Over and over again, we played that game. And the longer it went on, the wetter I became.\n\n\"Does this guy,\" Chris asked, his voice husky as he ran a single finger up and down the soft hollow of skin just behind my ear along the back of my jaw, \"know right where to touch you to drive you wild?\"\n\nI wanted him to both continue and yet stop touching me there. He knew I couldn't last long with that kind of torture. Not wanting to give in just yet, I bit my lip, trying to tamper the inevitable mewling that always resulted from this kind of foreplay. But it was hard to keep my concentration with my head jerking slightly from shivers at each caress. Several times, my desperate sounds escaped through my gaping mouth.\n\nChris eventually stopped, but not before I was moaning incessantly. He switched to drawing light circles on my skin a few inches above each nipple, swirling around them in a ever-tightening spiral but never touching them directly. The moment my breath hitched, he abandoned that teasing and simultaneously slid his fingers outwards along the top of the upper lines of rope on my chest all the way out to where they disappeared under my armpits. More shivers prickled my skin, and he reversed the motion. Then he repeated it on the underside of those same ropes.\n\n\"I wonder if he knows how to play you. That the slightest nuance in his touch can produce a different sound from you.\"\n\nDown in the valley between my breasts went his fingers, tracing the V-shape he'd created in the way he'd bound me. My pussy spasmed, and I whined softly. He continued down to the bottom horizontal ropes and repeated what he had done above. Except this time, he continued across my sides and slightly around to my back, which was arched with my cuffed hands and the pillow under me.\n\nThe tremors traveling across my skin echoed in my inhale and exhale. A slight shift up caused the backs of his fingers to brush under my breasts. I flinched and cooed. Then he was traveling back to the middle and upwards again through the valley. I whimpered all the way only to gasp when his fingers turned outward and briefly brushed the insides of my breasts.\n\nBeneath my back, I fisted my hands, willing myself to hang on. In addition to trying to avoid speaking, I was trying to avoid coming because he hadn't given permission. We'd played in similar ways before, and I'd held out for longer than I'd expected I would. I just didn't know how long he was going to draw it out this time. Who would give in first?\n\nSudden movement at my waist had me gasping louder. First my belt and then my zipper were released. My pants slid down my legs, and I realized he'd gotten up. I risked opening my eyes to see him watching me while he discarded my pants and panties. His cock bobbed slightly from its elevated position, and I licked my lips. Any thoughts of having the privilege of sucking it, though, were dashed when he maneuvered between my legs and sat back down.\n\nAlthough he was seated properly on the couch now, he was sideways to me with my left knee held up behind him against the back cushion of the couch. My other leg was draped so that my calf rested in his lap, his cock propped up between his abs and my shin. The coolness of the balls from the Jacob's Ladder sent a little shiver from my leg all the way up my spine. The tremors continued while he ran both hands back and forth across my skin. On top, on the outside, the inside. Circling his fingertips by my knee. My ankle. One hand clamping down whenever I flinched.\n\nMy breath hissed between my clenched teeth. The ache in my breasts was increasingly frustrating. I wanted more than just the feather-light sweeps against my skin. I needed his hands fully on me. His mouth. Yet, if he did increase the pressure, I feared I would come...and then I'd be disciplined, which meant no release again for an indefinite amount of time.\n\nThere was no way for me to win. So I closed my eyes and tried to settle in for the long haul, hoping for the best.\n\n\"I wonder if this guy knows how sensitive you are.\" Chris placed his right hand directly on my pubic bone and slid his thumb down to stroke back and forth above the cleft of my shaved pussy.",
        "Sparks shot out from my core inside, and my body lifted up, hovering in the air for a second before flopping back to the couch. He did it again with the same effect. And then I felt him lean forward. I managed to part my eyelids enough to see him grab something out of the black box. I didn't keep much else in there and couldn't remember what was left. We'd only used the contents a couple of times while watching a movie due to my roommate always being here. Chris was taking advantage of our opportunity, for sure.\n\n\"Does he know how to use your toys properly?\"\n\nLightning lit up my eyes at the vibrations suddenly pulsating through my clit. Then I was twisting from side to side. Whimpering but refusing to ask him if I could come...to say what I'd been holding back.\n\nThe vibrations stopped, leaving me panting...grateful. But his thumb lightly tapped several times just above my clit, eliciting a string of sharp cries from my lungs as my inner muscles clenched and released. Suddenly, he smacked my pussy and flicked my clit full-on.\n\nI screamed, unable to close my legs due to his position or spread them wider because he was gripping my right thigh, holding it in place. Inside, I did clamp down, just barely stemming my release. And then the vibrator started up again. I'd heard the steady humming before I felt the plastic tip move along the outside of my pussy, but my body still jerked as though I'd been electrocuted. Although it was useless, I clawed at the cushion under me again. Tried to dig my feet into the other end of the couch.\n\nTwice more, he alternated between touching the toy to my clit and just the outside of my swollen pussy, pulling away right when I was on the edge. But there wasn't much relief before it started up again. Overall, it left me feeling vulnerable with no doubt that he held all the control.\n\n\"Does he touch you like this?\" A finger swept through the heat I could feel radiating off of the insides of my thighs. He moaned, probably at how wet and hot I was. \"Or this?\"\n\nStrangled, gurgle-like sounds erupted from my throat as he continued with two fingers. Rubbing harder...deeper. Teasing at my entrance but not penetrating. Driving me even further up to the pinnacle but not letting me drop in a perfectly executed game of cat and mouse.\n\n\"Hmm, Holly? Does he bring you right to the edge?\" He pulled his hand away suddenly. \"And then leave you hanging?\"\n\nThe growl that came from me was frustration and need bundled together. It was primal. Desperate.\n\nMy mind was still reeling that he was doing this to me\u2014as delicious as it was\u2014when he hopped up onto the couch into a kneeling position. His hands collected my legs beneath my knees and pressed up, finally spreading me open like I'd wanted to before. Then he just sat there staring down at me, his chest rising and falling slightly faster now. His cock barely moved it was so hard.\n\n\"Does this man...,\" he licked his lips, \"make you scream when he fucks you?\"\n\nI held my breath, anticipating him sliding into me. Making what he'd just said actually happen. But he continued to kneel there, his eyes burning into mine. My chest shuddered and heaved on my next inhale and exhale, the ropes feeling like they were what was holding my heart and lungs inside me, not my ribcage. My breasts and pussy throbbed, my nipples tingling from how tight they were.\n\nSilently, I begged him to please touch me like I needed. He'd known for months now just what to do when I was unable to speak my desires for whatever reason. Just a few quick thrusts could ease the ache...for both of us. Because I could see from the sweat on his forehead and the overly-defined muscles in his arms, he was straining to maintain control.\n\nHis eyes flashed, and he leaned forward. My pelvis rose to him. We both let out broken moans when his flesh touched mine. It was just the tip of his cock\u2014primarily the reverse Prince Albert ring\u2014that brushed my outer pussy lips, but it was electrifying. Apparently for us both because he gasped and jerked back.\n\n\"Tell me, Holly.\" His eyes slid down then back up my naked and bound body. The sound of his breath catching made my heart thump harder against my chest. His eyes locked with mine, and his Adam's apple bobbed as though in slow motion. \"This man you love? Does he love you like I love you?\"\n\nEvery bit of my resolve shattered at that look...those words.\n\nMy voice cracked when I managed to finally speak. \"He's you, Chris. Only you.\"\n\n\"Good.\" His cock pressed against my pussy. \"And there's only you for me.\"\n\nI choked back a cry. \"You doubted my loyalty?\" \n\n\"Never, honey. It's just such a fucking turn-on to see you react when I push your buttons.\" As if to emphasize his comment, he pressed a little harder, the tip of his cock nudging at my entrance now.\n\nI whimpered and wiggled to no avail.\n\nHe leaned down and kissed the top of one breast then licked at my nipple. \"Is this what you've been wanting, Holly?\"\n\n\"Please, please, please...Chris, may I come?\" I mumbled at his neck before his lips covered mine.\n\n\"I thought you'd never ask.\" He thrust hard, making me scream.\n\nIn just a couple of strokes, I was shaking beneath him. He continued pounding. Nuzzling my neck, his chest smashed to my chest. One hand fisted in my hair while the other massaged my breast, his thumb going to work on soothing my nipple. And then he was coming inside me while I had another orgasm.\n\nIt was everything I'd hoped it would be and more.\n\n###\n\n=== ONE MONTH LATER ===\n\n\"Are you sure? It's your favorite meal. I can do all the work.\"\n\nI pulled my knees as close to my chest as I could and choked back a sob. \"I can't eat anything!\"\n\n\"Shh.\" Chris brushed my hair off my forehead. \"Don't cry.\"\n\n\"You'd cry, too, if it was Christmas and you were missing out on a turkey dinner the way you'd always had it. For the second time!\" I let loose of the tears now, wetting the pillow.\n\nHe rubbed my back. \"Honey, it's not that bad. Maybe you'll feel better by Christmas Eve. It's still two days away.\"\n\nHis words...his touch. They didn't help this time. I was just...miserable.\n\nI pulled the blanket tighter to my chin, croaking out, \"Please, just leave me alone.\"\n\nChris laughed, and I wished I had the strength to throw something at him. \"Geesh, Holly. You're not the first person to catch a cold at Christmas. And they say us men are bad when we're sick!\"\n\nThe bed shifted. After a couple of heavy footfalls, the door clicked shut, sealing off the stream of light from the hallway.\n\nI lay there in the darkness, hugging the blanket I'd bunched up at my stomach tighter. But that only brought more tears.\n\nYes, I had a confirmed good-ole case of the winter cold that just would not go away. I'd started sniffling and coughing almost two weeks ago after my thirtieth birthday celebration (which had consisted of just the two of us, a bottle of chocolate sauce, a container of whipped topping, my little toy box, and the kitchen island). But there was more to my current demeanor. More that Chris didn't know about.\n\nMy trip to the doctor three days ago had been two-fold: I'd wanted to check out the consistent rasp in my breathing; and I was scheduled to have my first ultrasound. Except that the technician couldn't find a heartbeat. I'd gone back today to get the second blood test to check my hCG levels. After the doctor gave me the news that I'd miscarried, I'd sat in my car for a good thirty minutes staring out at the parking lot but not paying attention to the people and other cars moving about. I'd wanted my mom more than anything at that moment.\n\nChris had come home from work to find me in bed. I hadn't had the heart to tell him yet. He didn't even know I'd been pregnant. I'd planned to wrap up the ultrasound image for one of his presents.\n\nI tried to rationalize now that maybe this was a good thing that I'd lost the baby. Yes, I'd gotten one of the fulltime promotions at work, which included teaching aerobics twice a week in addition to my front desk and bookkeeping duties. It more than helped supplement Jolie's previous rent. Not to mention, it offered insurance. As a result, I'd planned on using Dirk's donation for baby things.\n\nBut that was only half of the equation.\n\nMaybe Chris didn't want to be a dad. We hadn't exactly had this discussion yet, so I didn't know his thoughts on it. Then there was the fact that he was strapped for funds with starting school again in January. The benevolence of Professor Bradley only covered tuition. He still needed a roof over his head and food in his belly. I said he didn't have to contribute toward rent while he was getting his degree, but he insisted that he couldn't live with me for free. We compromised that he'd pay the utilities. At least he was able to get rid of his apartment. Will had passed his GED the first week of December. When we'd talked to him about the plans for the living situation and Chris said his lease was up at the end of the year, Will had insisted on moving out. Since then, he'd talked to his parents and arranged to stay in a room above their garage.\n\nThe timing about the baby was both right and wrong. Awkward. I wanted to be glad that fate had stepped in. Yet all those truths didn't make it hurt any less that I wasn't going to be a mom.\n\nWhen I'd found out I was expecting, I couldn't wait to tell Chris. But the doctor had advised against getting too excited until after the first ultrasound. It had been nothing short of torture keeping the news to myself. Turns out, I'd already been three weeks pregnant when I'd kicked Jolie out and Chris and I had broken in my new couch. I'd conceived right around Halloween. After that office visit, I'd thought it fitting to have something good to remember the holiday for instead of messing up with Dirk. With today's confirming test results, that was no longer true.\n\nLife kept dealing me blows. This one had knocked me flat on my back, and I couldn't find the strength to get back up again.\n\nI fell asleep with tears drying on my face and my heart feeling crushed.\n\nThe next morning, I found cans of chicken noodle soup and clear juice stocked in the kitchen; tissues and pain relievers in the bathroom; and bedding folded on the ottoman. But there was no sign of Chris.\n\nI moped around the house, thankful that my new schedule did not include weekends. When I wasn't doped up on cold medicine and dead to the world, I curled up in the living room mindlessly watching TV or laid in bed despite not actually sleeping. It was the latter when I heard the front door open and close and could see the hallway light turn on under my closed door.\n\nThe sound of the shower running came through the wall. I imagined Chris in there, naked. The thought made me whimper. I longed for him to hold me. But at the same time, I felt ashamed that I couldn't find the heart to tell him the truth. I was still awake an hour later when the light went off. When the apartment went back to its silent watch for the night.\n\nIt was the same routine on Sunday. Chris was gone by morning, his bedding neatly folded on the ottoman. Where he'd gone, I had no clue. He hadn't left a note either day. I wondered if he was mad at me, though I could swear he had sat beside me on the bed at least twice, stroking my forehead and hair. Whispering he loved me. But I could have been dreaming both times. I'd done a lot of that this weekend.\n\nThat night was a repeat of the last. I lie there in the dark and silence, grateful that the gym was closed on Monday and Tuesday for Christmas Eve and Christmas Day. I planned to just sleep through the holiday and continue my ritual pity party. Maybe I could call in sick on Wednesday and take the rest of the fucking week off. Go back to work next year.\n\nApparently, Chris had other plans.\n\n###\n\nIt was d\u00e9j\u00e0 vu waking to the smell of turkey. The sounds of Christmas music. I thought I was dreaming again, just like last year. That had turned out to be real. What were the chances?\n\nCrawling out of bed, I cracked the door open. Chris was singing 'Jingle Bell Rock' in the kitchen. I quietly secured the door and leaned my back against it, sighing and shaking my head.\n\nHe'd done it again. Was he like the Grinch's cousin? Bringing Christmas every year instead of stealing it?\n\nWhen I turned on the light, I noticed tissues littered the floor around the garbage can. Clothes were overflowing the hamper since I usually did laundry on the weekends. And then there was my reflection in the mirror. Blotchy skin, hair that looked like I'd been sleeping in a bush not on my bed, and my nose was so red, I was surprised it wasn't signaling Santa. I could imagine my breath would be similar to having eaten an onion. Maybe I could clean up a bit and look presentable despite not wanting to celebrate anything at all today.\n\nI managed to slip out of my room and into the bath without making a sound. Brushing my teeth made a vast improvement. The hot streams of the shower head felt amazing, too. Especially when I washed my hair. Yes, maybe this was all I needed to feel better. But I soon found myself squatting in the tub. Crying with my arms wrapped around my legs. Unsure what thought of hundreds spiraling in my head like the water going down the drain had set me off.\n\nThe water had already been running cold for a minute or two when the shower curtain was slowly pulled back. Then it rattled on the rings and rod above as it was yanked the rest of the way open.\n\n\"Holly!\" Chris turned off the water and climbed into the tub, too, gathering me in a towel. \"Whatever has come over you?\"\n\nI was too numb to do anything but shiver, my teeth chattering.\n\nHe carried me to my room. Pulled a sweatshirt and sweatpants on me. Sat behind me on the bed and carefully combed out my hair. I was half asleep from the latter by the time he cuddled with me under the covers, his body folded behind mine and the blankets tucked all around us. Each time I started coughing and sniffling, he hushed me. Rocked me. Kissed my damp hair.\n\nAt some point, I got turned around and snuggled closer to him. I gripped his arm, trembling despite no longer being cold and wet.\n\nHe tipped my chin up. \"Holly, honey. What's going on? This can't all be because you got sick.\"\n\nI started to close my eyes and tuck my head against his chest.\n\n\"Don't you dare.\" His grip tightened on my chin until I lifted my gaze to him. \"Look at me. Tell me what this all about. I'm here for you, remember? No matter what it is. I swear\u2014\"\n\n\"I had a miscarriage.\" The words just kind of fell out. I had contemplated for the last three days how I would tell him...if I ever did. It definitely hadn't been like this in my head. Then again, hardly anything with him went the way I expected it to. My sigh made my chest shudder, and my throat was raw from coughing and crying. Still, I tried to explain. \"I was going to surprise you tomorrow with the good news. But it was confirmed Friday... I didn't know how to tell you. Any of it. Chris, it's breaking my heart!\"\n\nHe just blinked, the lamp behind me illuminating his face. He was the one to look away now. After a deep sigh, he was staring in my eyes again. Then he was rolling me onto my back. Climbing on top of me, his hands in my hair. His lips gently brushed mine. Over and over again.\n\nMy knees fell open, and he nestled closer. I mumbled between his kisses, \"I'm so sorry. I know we hadn't planned it. I\u2014\" \n\n\"Oh, Holly.\" He pulled back and shook his head. The back of his fingers caressed my forehead and face, his eyes shiny now. \"We would have found a way.\"\n\nI wrapped my fingers around his hand on my cheek, squeezing tightly. \"I was so scared.\"\n\nHe twisted his hand, grasped my fingers, and brought them to his lips. \"Don't ever be afraid to tell me anything. Please. Good news, bad news, whatever.\"\n\nI nodded and managed to smile up at him, the first time I'd done so in probably a week.\n\n\"Sit tight.\"\n\nI sat up as he leapt off the bed, pulled the door open, and sprinted down the hallway.\n\nChris was back in another minute, sitting on the edge of the bed at my feet. He pulled his hand out from behind his back, revealing a small, rectangular, black box.\n\nI carefully lifted the lid, gasping. Inside was a delicate gold chain with a shimmering charm dangling from it: two green leaves of holly and two red berries.\n\nHe took the box from me and held it in his palm. \"This was supposed to be for tomorrow, but I have a feeling it'll help today. You need a constant reminder that we will handle anything that comes our way...together.\"\n\nI was paying so much attention to the charm I didn't notice right away that there was something attached inside the lid. That Chris had gotten down on the floor...on one knee. I kept looking from him to the box and back again.\n\nOh, God! Oh, God! Oh, God!\n\nMy hand shook when I reached out and touched the gold ring with the small teardrop-shaped diamond that kept sparkling because his hand was shaking. \"Please don't do this because I was pregnant. Or Jolie got engaged. Or\u2014\"\n\n\"All that is only coincidence, honey. The necklace was a last minute gift I saw yesterday. I hadn't had the chance to wrap it yet. But I have the receipt that shows I bought the ring six months ago. Ask your dad. We agreed that Christmas was the perfect time. A year from when I met you. Knew you were the one. Do you know how hard it's been trying not to spill my secret?\"\n\nMy eyes swung up to his again, my hands hovering between my lap and my face, unsure what I should do with them. \"You talked to my dad? When?\"\n\nThe corner of his mouth lifted up. \"Remember that day in June when we were working on the busted pipe in their bathroom sink?\"\n\nI nodded. \"My mom kept wanting to go through some old boxes, but I wanted to help you. I couldn't understand why she was so insistent on doing that right then. Later, I just assumed she wanted to organize before leaving for the winter. She was distracting me, though, wasn't she?\"\n\nHis single dimple popped out as he grinned widely. \"Holly McGregor, will you marry me and be my Mrs. Holly Berry for the rest of my life?\"\n\nI sniffed back a tear, and my eyes widened. Of all the things I thought I'd say if he proposed, I probably surprised both of us when I blurted, \"The turkey!\"\n\nChris chuckled, grappling at me as I tried to climb off the bed. \"Whoa! It had an hour to go when I grabbed the ring. Plus, I set a timer. It's all good.\"\n\nI flopped back on the bed with a deep sigh. \"Thank God, you're in charge.\"\n\n\"Always, honey.\" He stared down at me, one hand scrubbing his mouth and chin. \"So, is that a yes? Will you marry me?\"\n\nI was going to tease him and say I'd think about it. Make some quip about popping the question at Christmas being so pass\u00e9. I had a reputation as a naughty girl to uphold, didn't I? But I realized I'd put him through a hell of a lot in the past few days. And this was most likely not the end of my mood swings from our loss, either. Besides, the bubbles of joy building up inside and the tears in my eyes were going to make it difficult to hide my true emotions much longer.\n\nReaching up, I slid one hand behind his neck, drawing him to me. When our lips were only an inch apart, I murmured, \"Yes. I'm yours forever, Chris Berry.\"\n\n\"Mmm. Good.\" He kissed me softly. When we parted, he placed the ring on my finger and laid down beside me, tucking our clasped hands to his chest. His eyes were shiny when he whispered, \"You know, even naughty boys and girls can be great parents. I'd be happy to try again when you're ready.\"\n\nI smiled warmly and snuggled up to him. \"That sounds very...nice.\"\n\n~H "
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "bdsm",
        "bondage",
        "shibari",
        "piercings",
        "romance",
        "christmas",
        "toys"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-naughty-list-ch-02"
}