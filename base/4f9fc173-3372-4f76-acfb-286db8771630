{
    "title": "My Sister Made Me Ch. 16",
    "pages": [
        "Alex\n\nYawning, she threw the covers off and looked around in confusion as she tried to get her bearings. It only took a few seconds to realize that she was in the guest room at the Logan's house. Toni was sitting on the bed with her and glanced over as she sat up.\n\n\"Good morning,\" she said.\n\n\"Mmm,\" was all that Alex could manage. Every single part of her seemed to ache, and her throat was parched. She didn't think she would be able to speak for a few minutes without drinking something and looked around for some water.\n\nThe door to the bedroom opened and Kenny entered, a tray holding several bags of fast food and some bottled waters in his hands. \"Hey. Good to see you two awake.\"\n\nAlex nodded, reaching for a water and drinking half of it down before stopping. She coughed briefly, then paused and took another, much smaller drink.\n\n\"What happened?\" she managed to ask, finding her voice much more quickly after taking a drink.\n\n\"When?\" Toni said, offering a glance her way as she pulled some food out of the bags and began to devour it, Kenny doing the same.\n\n\"Last night,\" she croaked. \"The last... thing...\" she stopped, rubbing her temples in confusion. \"I can't remember,\" she winced, closing her eyes and shaking her head.\n\nShe remembered dancing with Charles, then going to a strange room and being kissed. She had an image of an odd table pop into her head... but that was it. She frowned and looked over at the other two.\n\nToni raised an eyebrow. \"What?\"\n\nAlex sighed. \"It's all blank. How did I get home?\"\n\n\"Kenny drove us,\" Toni said. \"You really don't remember anything?\"\n\nAlex groaned, feeling like something was getting in the way of her remembering, but she couldn't figure it out. \"Nothing,\" she said at length.\n\n\"All I know is that I lost track of you when James took me to find the bathroom. He walked me around a bit and we watched some people fooling around. We were going to another room, and it turned out to be the one you were in. You were on some weird looking table and a group of people were... you know...\" she said, looking at Alex.\n\nShe stared back incredulously. What the hell had she done the night before and what was going on with her memory?\n\n\"You seemed to be enjoying what was happening,\" Toni offered. \"So, I went and walked around with James some more.\"\n\n\"How could I not remember that?\" Alex asked.\n\n\"Kenny came in at some point,\" Toni said, looking over at him.\n\n\"You really were having fun,\" he confirmed. \"It was pretty clear that you were the highlight of the evening for a few folks. I was occupied in one corner of the room, but I could hear you clearly. There was... like... this constant stream of moans and grunts coming from where you were.\"\n\nClosing her eyes, she tried to recall anything else about the night before. After a few seconds, she shook her head. \"I can't remember a thing about it,\" she said. \"There was a crowd of people?\"\n\n\"I didn't pay that much attention, honestly,\" he said with a shrug. \"I came in and saw the group around the table and went up with my escort to see what was going on. That's when I saw it was you. I didn't want to hover or bother you, though. We went and played in the corner and eventually you were done.\"\n\n\"Were they all doing things to me?\" she asked, feeling a little concerned.\n\n\"Not all of them,\" he said. \"Most were watching, though some were groping you. When I walked up, one guy had his dick in your mouth and some woman was between your legs. There were like 5 other people watching. The guy finished and a woman took his place. You didn't seem to care and just started doing things to her. I left you alone before the woman between your legs stopped what she was doing.\"\n\nShe sighed. \"Do I need to be worried?\" she asked, looking at each of them in turn.\n\nThey seemed to glance at each other for a moment then back to her. \n\n\"Not at all,\" Toni said. \"You were having fun and you were safe. I'm sure you'll be able to remember what happened. You're probably just tired.\"\n\n\"I honestly wouldn't worry,\" Kenny said. \"I was there until you stopped and got up. No one was forcing you and you definitely weren't tied down or anything.\"\n\nAfter a deep breath and a few quiet moments to let it all sink in, she actually did begin to feel a little better. \"Honestly, I just feels like I passed out.\"\n\n\"Well, are you sore?\" Toni asked.\n\n\"Like never before,\" Alex confirmed. \"I think I'll need a week to recover.\"\n\n\"I don't doubt it,\" Kenny said. \"Are you okay other than that?\"\n\nShe fell silent in thought, trying to recall... something. After a few moments, she shook her head. It was no use. She still couldn't remember details. She felt something else though... \n\nShe somehow knew that everything she'd been involved in had been fun and she'd enjoyed it, and yet... She had a strange feeling that something was amiss. She just couldn't put her finger on it. Eventually she decided that it was simply the fact that she couldn't remember and not any particular thing that had happened.\n\n\"Yeah, I'm good.\" She took a deep breath and cleared her mind before grabbing the breakfast burrito he'd gotten for her. \"What about y'all? Did you have a good time?\"\n\n\"I sure as hell did,\" Kenny said with a wide grin. \"Had sex with... three... no, four different women.\"\n\nAlex snickered. \"Did you ever see your mom and dad, or your sister and her boyfriend?\"\n\n\"They were all in one room together playing with separate people when I first noticed them, and then I saw all four of them later in the room you were in.\" As he finished, he looked over at her pointedly.\n\nShe felt herself blush. \"Oh... well then.\" After a few seconds, she looked back over at him. \"Were you okay with that?\"\n\n\"You betrayed me, you whore!\" he cried out dramatically, then broke out into a cheesy grin. \"Of course I am dicklips! We aren't fuckin' dating. Besides, you let me fuck your sister a ton of times. Its only fair that I let you do the same.\"\n\nShe gave him a withering glare for a moment before smirking, then took a bite of her burrito.\n\n\"It's just weird that I can't remember,\" she said after swallowing.\n\nToni shrugged as she took a bite of her own food. She seemed unbothered by Alex's lack of memory. Alex decided that was a good thing and knew that both Toni and Kenny had seen her several times. If they weren't concerned, she wasn't going to be.\n\nAfter having breakfast, Alex and Toni both climbed back in bed, the latter pulling Kenny in with them for more sleep. Waking up again around lunch, the twins went about gathering their stuff up and finally went home. One brief conversation with Sam later, and both were back in their own beds to catch up on sleep before they went to work.\n\nEventually, they had to wake up again, and after she and Toni got dressed and ready, they went to work. Feeling like a zombie for the entire shift, Alex did the best she could to be as chipper and upbeat as possible for the folks that she was serving, or that bought her top throughout the evening.\n\nFinally, the day ended, and she went home. After she got ready for bed, she began to get an uneasy feeling in the pit of her stomach. She couldn't figure out what it was, though, and try as she might, she couldn't relax.\n\nToni surprised her coming through their shared closet, and Alex made room as her twin slid into bed with her.\n\n\"Are you okay?\" she whispered.\n\nAlex frowned. \"Just... feel like something is off. Like... uneasy.\"\n\nHer sister's lips curled into a concerned frown as she ran a hand along Alex's shoulder and arm. \"Close your eyes and let me help you fall asleep.\"\n\nAlex smiled, pulling her down for a kiss and then doing what Toni told her to do. She sighed in contentment as her twin began to softly stroke her hair.\n\n***\n\nThe next morning, she managed to sleep until nearly lunch time. Yawning, she climbed out of bed and went to take a nice long shower. After getting dressed in something decent, she went to see if her mother needed help with anything before Sam's party started that afternoon.\n\nShe supposed it might have sounded childish to other people, but Alex's parents loved to throw birthday parties for all their children. It had been something that they'd always done, and they tended to pull out all the stops. Depending on what each of their children preferred, her folks would either take them to dinner or make whatever the favorite dish was. What came afterward was up to the birthday boy or girl.\n\nIn Sam's case, their dad would make hamburgers or even some barbecue, and they'd play games and socialize for a while before having cake and presents. Typically, it was just family and friends that came, though boyfriends and girlfriends were usually invited too.\n\nEntering the kitchen, she saw her mother looking a little haggard and snuck up to get a hug from behind. Snickering as she patted Alex's arm, her mom kissed her cheek as she stepped to the side.\n\n\"Need any help?\" Alex asked.\n\n\"Oh, thank you honey,\" she replied. \"I'm just about done preparing these patties for your dad. You want to take them outside?\"\n\nAlex nodded and grabbed the pan of hot dogs and hamburgers to carry it out back where her father was. As she approached, Danny saw her coming and opened the door.\n\n\"Thank you,\" she said and went over to where her dad was standing in his outdoor kitchen.\n\n\"Hey there,\" he said, flashing a goofy smile and crossing his eyes.\n\n\"Hi daddy,\" she said, giving him the requisite eye-roll and smile before sliding under his arm and setting the tray down. She inhaled deeply as she smelled him, his unique scent always a source of comfort. It was part after-shave, part cologne, part deodorant, as well as his own personal smell. It made her calm and happy whenever she smelled it.\n\n\"You get up to no good Friday night? I saw you didn't come home.\"\n\nShe flashed him a shocked look. \"Me? Never daddy! I was just hanging out with Kenny.\" Her smiled widened and she batted her eyes innocently at him.\n\n\"Mmmhmm,\" he said, squinting at her suspiciously. \n\n\"Aww... you know you can trust me. Toni was with me.\"\n\n\"Dear God, no!\" he said, shaking his head and sighing deeply as she laughed.\n\n\"That's not very nice,\" Toni called, emerging from the house behind her. She was holding a glass of pinkish colored champagne.\n\n\"Did your mother say you could have that?\" her father asked, one eyebrow cocked sternly.\n\n\"Of course, daddy!\" Toni replied.\n\nAlex snickered and stepped back as her sister came over and took her place, sliding into her father's arm as he put the fresh meat on the grill.\n\n\"Where's Sam?\" Alex asked, looking around.\n\n\"She was out here earlier,\" he said. \"Inside maybe? I know I can count on her to have behaved her damn self,\" he said, casting a look at the two of them.\n\n\"Hey...\" Alex said, scowling.\n\nHistorically that had been true. Sam had been through a lot, though, and Alex knew that she wasn't at work the night before. She began to wonder what her sister had been up to.\n\n*****\n\nSam\n\nSaturday night\n\n\"You have no idea how much I want to take you up on that,\" Duncan told her.\n\nShe was watching him through the hole in the door as she crouched there in front of it. The unique flavor of his cum was still on her tongue and she could still feel how it felt flooding into her mouth and sliding down her throat. Raising an eyebrow provocatively, she moved her lips to the hole again and opened her mouth up. Nothing else interested her in the moment. She wanted more.\n\n\"Well, now I just have to put it in there,\" he said, and she couldn't help but giggle in happiness.\n\n\"I think we both know you'll enjoy what happens to it in here,\" she told him, putting her lips back into place quickly.\n\nHe wasted no more time then, and in moments she had the ridiculously large shaft in her mouth once more.\n\n\"God, you're so good at that,\" he said, the words sounding muffled.\n\nShe was solely focused on sliding her lips up and down the length of his shaft and pushing into her throat as far as she could handle in an effort to convince it to give her what she needed. Several minutes of heaven passed for her, and she could feel her simmering arousal growing steadily as she got to enjoy sucking his cock. She lost track of how long it had been though, and eventually he withdrew from the hole before he'd finished in her mouth again, much to her disappointment.\n\n\"I'd love to stay here and just keep your mouth filled with my dick all night, but I better get back down there to check on my wife and girlfriend,\" he said.\n\nShe frowned. \"I certainly wouldn't mind keeping you here,\" she said, peering out at him from the hole. She brought a finger up and playfully bit on the tip in an effort to be sexy but got embarrassed and tossed her hair with a laugh before looking back out at him.\n\nHe seemed to remember something in that moment and refocused on her. \"Do you want me to put a note up here for guys to clean their equipment before putting it in the hole? I don't know if you prefer them to be clean or even if you care...\"\n\n\"If they still have your wife's pussy on them?\" she finished provocatively.\n\nHe looked like he enjoyed the visual that came with her comment and grinned at her. \"Exactly. I figure that you're here because you love sucking dick and didn't expect to have... well... the pussy flavored variety.\"\n\nDefinitely feeling playful, she decided to try and be a little flirty again. \"Actually, it doesn't bother me. Though, if you think about it, it's really pretty kinky. I mean, doesn't it turn you on to think of sweet, innocent, na\u00efve little ole me sucking a cock and then being surprised that it tastes like pussy?\"\n\nHe groaned and leaned forward to bonk his head on the door. It had been precisely the reaction she'd been wanting.\n\n\"Got a load for me yet?\" she asked.\n\n\"I imagine I'll have to come back if those other women don't drain me dry down there,\" he said, looking back through the hole again.\n\nShe frowned again, playfully. \"I guess if you have to take it away from me, I'll let you. Don't forget about me if you feel the need, though.\"\n\n\"'Mystery-Girl'... I don't think I could forget you if I tried,\" he said with a wink. \"You need anything before I let someone else up here to have a turn?\"\n\nShe shook her head, a content smile on her face. \"Another load from you maybe?\"\n\nDuncan looked back behind him for a moment, then turned back in to look at her. \"Next customer,\" he said before standing.\n\nHer heart started beating fast again. The idea that she was going to get another cock to suck was just crazy.\n\nShe quickly remembered the game she was playing and slid the panel back into place as Duncan and the newcomer talked just outside the door. She couldn't make out all the words, but it sounded like the new guy was getting instructions.\n\nTwo soft knocks on the door made her smile and she slid the panel aside once more. Sliding her hand out, she wiggled her fingers back toward her before pulling back out. A few seconds later, a flaccid, yet still impressive cock appeared.\n\nThe urge hit her again, and she whimpered in arousal as she took it into her mouth. The stranger was able to get it up quickly and after only a minute or so, she was groaning in pleasure as she worked her head back and forth on it, her lips sliding up and down the shaft as he thrust against the door.\n\nSeveral wonderful minutes later, she was forced out of her bliss-filled haze as she slid the cock past her lips again and again. The stranger was groaning loudly as she felt the warm goo flood into her mouth. Swallowing quickly, she sucked hard, almost desperate to get all she could.\n\n\"Jesus Christ,\" the stranger croaked a bit later, staggering back and taking away her toy. \"That was indescribable.\"\n\nShe giggled and slid the panel back in place, then took a long drink of water.\n\nIt was a while before she had another visitor, an average cock sliding in her mouth as quickly as she could get it there. He didn't last long and sounded as impressed with her skill as the others had been.\n\nAfter that one filled her mouth and left, she spent a few more minutes waiting before she heard Kara call out softly.\n\n\"Can I come in?\" she asked.\n\n\"Sure,\" Sam said, unlocking the door and standing.\n\nKara's nudity was a little surprising, and she couldn't help but stare at the nakedness of her friend.\n\n\"Oh... sorry,\" Kara said, laughing and covering her face. \"It's kind of easy to forget clothes around here.\"\n\nSam giggled and waved a hand dismissively. \"No worries. I just didn't expect it.\"\n\n\"So, have you been having fun?\" Kara asked.\n\nSighing happily, Sam leaned against the door frame and looked at her pointedly. \"It's been so awesome,\" she said honestly. \"This is just what I was looking for.\"\n\nKara smiled happily. \"I'm so glad. I was worried that you'd hate it or something.\"\n\n\"God, no,\" Sam said. \"Thank you for setting this up.\"\n\n\"Oh, you're welcome,\" Kara said. \"I was going to come see how you were doing. I think everyone is pretty much done.\"\n\n\"I figured,\" Sam said. \"I guess I can go ahead and take off now.\"\n\nThe sound of the door below them opening caused both women to pause before Kara leaned back and looked down before looking back at Sam.\n\n\"It's just Duncan,\" she said. \"Do I need to make him wait?\"\n\n\"Nah. He knew who I was,\" Sam replied.\n\nHis footsteps resumed and she smiled when she saw Duncan's face appear, her eyes immediately drawn to the enormous presence of his cock.\n\n\"Well, hey there,\" he said, smiling genuinely.\n\n\"Hi baby,\" Kara said. \"I was just seeing her out since it seems like everyone is done down there.\"\n\nSam couldn't help herself and had to force herself to look back up at his face before speaking. \"You know, you can't just walk up with your dick out like that and not expect me to want to take advantage.\" She glanced up to gauge his reaction.\n\nHe looked a little embarrassed, adorably enough. \"Honestly, I don't really even think about it that much anymore.\"\n\n\"Yeah, it's standard practice for people to be walking around nude at this place,\" Kara confirmed.\n\n\"I'm not complaining,\" Sam said, stepping close as she looked around suspiciously, then gripped his shaft her in delicate fingers.\n\nWondering if either of them would protest if she played a little, she finally just threw caution to the wind and went with it.\n\n\"Fuck it,\" she said, kneeling and taking the crown into her mouth without hesitation. The warmth of the flesh felt like it belonged there, and she couldn't help but whimper softly in happiness.\n\nThere was a peculiar taste on him this time, though, and she quickly recognized the flavor. \"Mmmm... is that your wife, or maybe Kara I taste?\"\n\n\"Molly actually,\" he said with a laugh, though she didn't know who he was referring to.\n\nShrugging, she went back to sliding his cock into her mouth and back out again as he began to tell her how good she was doing. His praising of her skills was making her want to keep doing this for him, and she reached up to gently stroke and cradle his balls before moving them to his shaft, hoping for one more yummy treat. Easily deepthroating him, she heard him praise her again as she held it deep. A few seconds passed as she stared up, seeing him and her friend looking down at her. \n\n\"Almost makes me jealous I don't have one,\" Kara said with a giggle.\n\nA playfully naughty idea came to her then and she refocused on making Duncan finish. Expertly stroking her saliva up and down his length, she feverishly coaxed it to grant her her prize. A few moments later, warm goo filled her mouth once again. She swallowed only what she had to until he'd finished, swaying a bit as he slid free.\n\nKara had been watching her but then took a glance down the stairs. That was when Sam saw her chance. Leaning over, she grabbed Kara's calves and slid her cum coated tongue deeply through her friend's pussy, eliciting a cry of surprise and a groan of \"Oh fuck.\" Kara's hand slid the back of Sam's head encouragingly and she felt her arousal swelling yet again.",
        "Unfortunately, she was only allowed to make a meal of her friend's delicious pussy for a minute before Kara collapsed to her knees and shook her head. \"Mmm, that's too much,\" she said. \"I was about to pass out.\" She offered Sam a kiss instead.\n\n\"You said you were jealous,\" Sam said, laughing and kissing her again. She felt wetness on her top and smirked as she looked down. \"Ugh... look at my shirt.\"\n\nWith Kara's help, she stood up and inspected the damage. She was a mess.\n\n\"Thanks a lot,\" she said, looking up at a very content looking Duncan.\n\nHe laughed, but then the door downstairs opened, and she quickly said her goodbyes. Gathering her things, she quietly left through the side door and went to her car. Once she had it started, she hurried out of the parking lot and got on the road before bursting out in laughter and elation at what she'd just finished doing.\n\nOnce she was home, she quietly went inside and upstairs. None of her siblings were home, so she relaxed in a hot bath after tossing her filthy clothes in the hamper. Climbing in bed that night, she could tell that her arousal had not abated, but it wasn't bothering her like it normally did. She'd had fun and it seemed to make things easier on her.\n\nHappy for the first time in a long time, she snuggled up to the stuffed bear she'd had since she was a toddler and went to sleep.\n\n***\n\nThe next morning, Sam got up and pulled on a pair of panties and a shirt after finishing her morning routine. Next, she ate breakfast alone as both of her parents were sleeping in and none of her siblings had been home when she'd awakened. After munching on a banana while she mused about the previous evening, she tossed the peel in the trash and skipped off to make sure that her parents were home and something weird hadn't happened to them.\n\nWalking down the hall that led past the washroom, a few guest bedrooms and bathrooms, several closets, and the door to the garage, she paused just outside her parent's bedroom door and listened. The telltale sound of her father's raucous snore echoed out from the room and she snickered, then started to turn around.\n\nShe stopped short though and mused that it would be nice to snuggle between them, and since it was her birthday, they couldn't rightly refuse her. Tiptoeing over to her mother's side of the bed, she knelt down and kissed her on the cheek. Her mother jolted a bit as she awoke, then smiled warmly as she saw her daughter's face.\n\n\"Morning baby,\" she said sleepily. \"Happy birthday.\"\n\n\"Morning mama,\" she said quietly. \"Can I get some birthday snuggles?\"\n\nHer mother laughed quietly, then lifted the covers over for her to climb in. Happily sliding over the top, Sam moved in between her mother and still-sleeping father as he snored loudly again. Turning to face him, she reached back and pulled her mother's arms around her.\n\n\"Wha?\" her father muttered. The question punctuated by another snore a few seconds later.\n\nThe covers pulled up, her mother hugging her from behind and her dad snoring loudly in her face, Sam felt just about as safe and warm as she possibly could.\n\n\"I'll make you some breakfast in a few minutes,\" her mother said quietly.\n\n\"No need,\" Sam whispered over her shoulder. \"I had a banana already. You guys have a late night?\"\n\n\"I'm sorry, hun,\" her mother replied. \"Yeah, we went out on Friday and stayed out way too late,\" she confirmed. \"Didn't get in until very late and I was drained all day yesterday.\"\n\n\"Oh... I'm sorry,\" Sam said. \"I can let you guys sleep.\"\n\n\"No, no,\" her mother said, scratching her back and kissing her shoulder. \"I should get up. I need to get a shower so we can start preparing for your birthday party.\"\n\nSam nodded, but closed her eyes and breathed deeply in contentment as she clutched her mother's arms close against her. After a while, she began to feel the pull of sleep calling to her, but her father shifted in bed and startled her. His hand came down been them, and Sam could feel him rummage around at his crotch for a moment before falling still again. With that, her mother started to pull away, and Sam turned over to look pleadingly at her.\n\n\"Don't give me those pouty eyes,\" her mother said with a playful scowl. \"I've got to get moving, birthday girl. So does Mr. Noisy there.\"\n\nShe was still pouting as her mother tossed the covers aside and slipped out to head to the bathroom. Sam was about to go ahead and get up to leave when she felt her dad's arm pull her tight against him. Suddenly aware of something poking between her legs, she froze.\n\nThe door to the bathroom closed a few seconds later, and the room fell silent save for his rhythmic breathing against her back. His left arm was draped over her waist and pulled tight against her, the right underneath her neck.\n\nAlmost as if it were a replay of what Dane had done, she felt her father stirring just before he reached up with his left hand and roughly squeezed one breast and then the other. A frail cry of arousal escaped her lips as he pulled her tight against him, his hand roughly mauling her breast again before he slid it back across to do the same to the other.\n\nBetween her legs, the protruding erection was nuzzling happily up against her pussy, despite her internal war of how inappropriate it may or may not be for it to be there. Fighting the impulses careening around her mind to just pull her panties aside, she bit her lip in frustration as he stopped mauling her chest. Knowing she had to get out of there, she was about to do just that when she felt his hand slide into her panties and gently stroke the swollen flesh cloaking her clitoris.\n\nA moment of hesitation cost her, and he slid the digit down further and pushed roughly into her folds before finding the hole a second later. A shiver of pleasure raced through her and she finally managed to shake herself from the daze she'd been in. Sliding out of his grasp deftly, she slid from the bed and hurried to the door before he could fully wake up and see her.\n\nApparently, he wasn't fully awake though, and it looked like he was still drooling in his pillow and fast asleep. The cover had been tossed aside in her haste to get out of the sticky situation and she whimpered in protest as she saw his cock had pushed free from the boxers he'd had on.\n\nThere was no debating it now. It was big. The flesh was red and angry looking, the head bulbous and pulsing. Subconsciously licking her lips as she saw the glistening ooze crawling from the hole, she swallowed hard and tried to make herself leave.\n\nThe sound of the shower turning on startled her once more, and she finally spun around and practically ran from the room and back upstairs.\n\n\"What the fuck?\" she whispered, leaning back against her door.\n\nBreathing heavily, she stood there for a few minutes as she recovered, playing the event over in her mind. It had been a simple misunderstanding, she knew. He'd thought she was her mother.\n\nShe steeled herself as she tried to forget about it. Nothing had really happened, right?\n\nTaking a deep breath, she stood and stepped toward her bed but then stopped again as she felt something. Sliding a finger down to the outside of her panties, she felt the wet spot she'd left there. Bringing her hand up in front of her face, she rubbed them together and watched a gooey string appear between them. Without really thinking about it, she slid both fingers in her mouth and sucked them clean. The telltale tang of precum hit her suddenly, and she realized that it had been her father that had left the goo, and not just her.\n\nShaking her head and not wanting to give it anymore thought, she stripped out of her panties and put on some fresh ones before pulling shorts on over the top of them.\n\nTurning, she looked in the mirror and nodded, satisfied. \"Nothing happened. You snuggled. You got up. That's it.\" The taste lingering in her mouth told her differently, but she was desperately ignoring it. It was her birthday, and she wasn't going to let any silly mishaps caused by the ridiculous level of her arousal ruin it\n\n*****\n\nAlex\n\nSam emerged from wherever she'd been not long after Toni came outside, and Alex gave her a hug and kiss before wishing her a happy birthday. Over the next couple of minutes, the rest of the party guests arrived. The first was Kenny. He was quickly followed by Hannah, coming in and hugging Danny before coming and doing the same to the others.\n\nDane and Sally were next, the latter following the same routine as Hannah had. The girls of the group then descended into conversation while Danny and Dane went and hung with their dad and Kenny around the grill. Wade joined the group a few minutes later, and after greeting his girlfriend and winking at Alex, he joined the other guys around the grill.\n\nA few minutes of mindless girl-talk later, Alex was thoroughly bored of the conversation the other girls were having and was ready to go hang out with the guys. After subtly removing herself from the conversation, she felt her phone buzz and saw that she got a text from Bryce.\n\n\"I'm here,\" was all it said. \n\nShe turned and went back inside, then through the house to the front door. Opening it up, she smiled when she saw his confident smile adorning his face on the other side.\n\n\"Hey,\" he said, grabbing her waist as he stepped in, then proceeded to kiss her fiercely.\n\n\"Mmm!\" she squealed, surprised by the sudden move. Breaking the kiss a second later, she ran her hand along his chest and couldn't help but stare up at him like a giddy teenager. Pulling herself together, she cleared her throat and fixed him with a renewed \"serious\" stare. \"Hi,\" she said. \"Alex is outside, you hound.\"\n\nHe chuckled and shook his head. \"Oh no... I'm not falling for that shit again.\"\n\nShe giggled and kissed him again, then turned and led him inside by the hand.\n\n\"You ready to meet the rest of my family?\" she asked as they wound through the house and toward the back yard.\n\n\"Shit, they better be ready to meet me,\" he retorted, making her snicker and roll her eyes. \"So, are you just gonna say, 'hey y'all, this is my dick donor, Bryce' or just call me a friend?\" he asked.\n\n\"Hmm,\" she said, turning and faking a look of concentration. \"We aren't really anything, are we? I don't guess you're important enough for me to introduce.\"\n\nHe chuckled and dropped his head. \"Ouch. I deserved that.\"\n\n\"Yeah, you did,\" she said, tapping his chest with a single finger. Turning, she opened the back door and offered him a wink as he stepped past her. As he did so, he reached up and pinched her nipple through her shirt. Wincing in pain, she smacked him on the shoulder as he passed and briefly held a hand up to her wounded breast as he grinned widely.\n\nShutting the door behind her, she scowled in mock anger at him before clearing her throat and getting everyone's attention.\n\n\"Guys, this is... my boyfriend, Bryce,\" she said, causing him to chuckle and look over at her. As the went through her family and their significant others and friends, Bryce shook hands and nodded. \"Finally, this is my big sister Sam,\" she said after she'd gone through everyone else.\n\n\"Happy birthday,\" he said, smiling and offering her an obviously professionally wrapped box.\n\n\"Thank you!\" Sam said. \"It's nice to meet you.\"\n\nShe turned and took the box to put it with the others, and Alex smiled up at him as he faced her.\n\n\"Who said I agreed to be your boyfriend?\" he asked quietly.\n\nShe snickered. Stepping close, she lowered her voice so that only he could hear before replying. \"Well, I figured that was more polite than 'the cocky guy that bent me over and fucked me in front of my old boyfriend' or something like that.\"\n\n\"Hey,\" he said, frowning at her. \"I barely fucked you, and Beck was just in the same room.\"\n\n\"Defensive much?\" she asked, raising an eyebrow. \"I guess I could call you, 'that guy that came in my panties while I was wearing them without even asking me,'\" she pointed out.\n\nHe frowned, but then shook his head. \"Nah, I like the sound of 'boyfriend' better,\" he said, the two sharing a quiet laugh.\n\nWade and Toni made their way over then, and she was happy to see the two shake hands and start to talk as her twin slid in close to her.\n\n\"What do they know about Friday?\" Alex asked.\n\n\"I only told them that we had plans,\" Toni whispered. \"I already told Kenny not to let on that he was with us.\"\n\nAlex nodded and breathed a sigh of relief. It wasn't that she wanted to lie or mislead Bryce, but she knew that it might bother him if he learned that she'd gone to a swinger party. There was something about him that made her feel like she had to take it slow and not scare him off, even though his entire persona seemed to deny that. He was brash, cocky, confident, and intoxicatingly dominant; not exactly the type of guy that needed a soft touch.\n\nThen again, she'd had only one other \"boyfriend\" in her life, so what did she know?\n\nAs everyone started to talk and mingle, she was happy to see that he was able to hold his own in conversation with pretty much anyone there, and that no one really seemed to have any kind of negative reaction to his presence. She let her focus stray from him for a while and spoke with a few different folks.\n\nWhen the hamburgers and hotdogs were done, the group lined up to get their food and sat around eating, laughing, and talking. They played a few goofy party games that they did at every party, and then had cake and ice cream. Afterward, Sam opened her gifts and thanked everyone for them multiple times.\n\nFolks talked for a little while longer before they began to leave, and after Toni checked to make sure that Sam didn't want to hang out and do something, she left with Wade to go and spend some time with him.\n\nHeading inside, she took Bryce up to her room for a little privacy so they could talk about that evening.\n\n\"So, what are we doing tonight?\" she asked.\n\n\"Well, this is supposed to be our first real date so how about a movie first?\" As he spoke, he walked slowly toward her, his eyes locked on hers in an unmistakable show of what he was actually thinking about.\n\n\"That sounds fun,\" she said, watching him move closer. \n\nHe stopped a few inches away from her and ran a finger along her collarbone, then slid the tip down into the cleavage of the low-cut shirt she'd chosen. Sliding the finger to the right and inside her top, she bit her lip as he pulled the cloth aside and popped the entire orb free effortlessly. His fingertips pressed together, her nipple the point of contact for both as he gently squeezed.\n\n\"Maybe a walk in the park, or we can hang out in my room at the apartment,\" he added.\n\nReleasing her nipple, he raised a single finger up and pushed in between her lips. She sucked on it without hesitation and pushed a moan back before it escaped. Plucking it from her mouth, he smiled confidently as he reached down and started to slide his hand into her pants.\n\nHer hand instantly gripped his arm and stopped him before he could push into her panties.\n\n\"I... I can't tonight,\" she stammered, having suddenly remembered her soreness.\n\n\"Damn,\" he said with a frown. \"That time of the month?\"\n\n\"Yeah,\" she said with a frown as he pushed her shirt back into place. The fun Friday night had seemingly kickstarted it a few days early. \"Lucky me.\"\n\nHe chuckled and gave her a disarming smile. \"So... movie?\" he asked after a few seconds.\n\nShe laughed, and eventually nodded.\n\n***\n\nA few hours later, Alex gave Bryce a kiss goodbye and told him to text her soon after he walked her to the front door. He gave her a confident wink and flashed her his disarming smile.\n\n\"You know I will,\" he said, his hand trailing behind him for a few seconds as he clutched hers and turned.\n\nShe continued to watch and forced a smile as he walked to his truck, then went inside and shut the door. Leaning against it, she frowned as she tried to figure out what the hell was bothering her. Throughout the evening with Bryce, she'd felt... off.\n\nThe movie had been fine, and Bryce had been great for their first real date. It felt... okay, but she hadn't been blown away. Of course, it wasn't the first time they'd hung out and it was certainly an odd start for a date. But she didn't think that was what was bothering her.\n\nShe shook her head and turned, heading upstairs and into her room. Surprised to find her twin waiting there, she forced a smile and moved over to join her on the bed.\n\n\"What's wrong?\" Toni asked.\n\nAlex frowned. She should have known better than to try and fool her twin.\n\n\"I... don't know,\" she said. \"I feel off.\"\n\nToni brushed the hair behind her ear and gave her a caring look. \"Bad date?\"\n\n\"The date was good,\" she said, shaking her head. \"I just... something isn't right...\"\n\nToni frowned and sighed deeply. \"Well... how about I sleep in here tonight to make you feel safe?\"\n\nAlex smiled and turned to hug her. \"I'd like that.\"\n\nThe two went and got ready for bed, taking a few minutes to talk to Sam and then climbing in together. \n\n*****\n\nSam\n\nLater that evening, Sam came out of her room and checked for the 10th time to see if Dane was back yet. He'd successfully avoided talking to her after the party and had left with Sally before she could pull him away.\n\nShe wasn't going to let that ruin her birthday, though, and after finishing up homework, she pulled a long shirt over her panties, then went back downstairs to hang out with her mom and dad. She found them watching TV on the couch and snacking on some of the leftovers from the party.\n\n\"Hey, birthday girl,\" her dad said, smiling warmly as she went over to sit between the two on the couch they were sharing.\n\n\"Hi, daddy,\" she said with a smile, and definitely didn't immediately think about the accident that morning.\n\nAs she sat, her mother pulled her close and wrapped an arm around her without a word, then started to stroke Sam's hair idly while they watched some nature show.\n\n\"Did you have a good birthday?\" her dad asked as he set his paper plate down on the coffee table.\n\n\"Mmmhmm,\" she confirmed, looking over at him briefly. \"Thank you.\"\n\nHe offered her another smile and went back to watching his show. Content to sit there and pretend to be interested in what they were watching, Sam stayed with her parents until her mother got up and excused herself. A few minutes later, she heard the front door open and close, followed by the heavy footfalls of one of her brothers.\n\nWaiting a few minutes so that it didn't look too odd, she yawned and stretched before scooting over toward her dad. She'd intended to give him a kiss on the cheek, but her stupid horny brain got in the way, and she looked down at the bulge in his pajama pants. As she looked, she saw that even though it wasn't hard, it was still a sizable presence and completely forgot what she'd set out to do. \n\nShe looked up as her father looked over at her with a perplexed look on his face. She was kneeling on the couch and looking at him like she'd been caught with her hand in the cookie jar.\n\n\"Leaving me already?\" he asked.\n\nShe smiled, immediately feeling ridiculous and forgetting all about her stupid horny thoughts and impulses. This was her dad, for God's sake.\n\n\"Yeah, I'm gonna go back upstairs and put away my new clothes and stuff.\"\n\nHe sighed animatedly and tossed her a wink. \"If you have to leave me alone here by myself, then I guess that's okay.\"\n\nShe giggled. \"Daddy...\" she protested.\n\n\"Can this old fart get a hug at least?\" he asked.\n\n\"Of course,\" she said, and leaned over. He had other ideas though and reached over to grab her waist. Both hands found purchase on her soft hips, and he pulled her into his lap before she knew what he'd intended.\n\nWhen she was little, she would give him hugs in that fashion without a second thought. Her legs on the outside of his, her arms around his neck and her head on his shoulder. The feeling of his strength against her smaller form had always brought her such comfort when she'd been sad. His smell, his steady breathing, even his heartbeat; all had been an easy way for her to start feeling better when she was little. That was surely what he'd intended this time.",
        "He pulled her on top of him without a second thought and squeezed her tight up against himself, a very fatherly groan following along with the standard issue backrubs that always accompanied these hugs.\n\nHer legs had slid easily around his, and as she was registering what was going on, she felt her stupid, horny pussy sniffing against his bulge before she'd even slid down on his thighs. The bulge pushed up against her soft lips, and though it was still completely flaccid, it sent a shiver of perverse arousal rocketing through her.\n\nThe only thing she could think to do in the instant that it happened was to clutch at him tightly for fear of letting him see the look of pleasure on her face. She could sense that he didn't realize what he'd caused, and as long as she kept it that way, she figured she could forget about it afterward.\n\n\"That's my girl,\" he said with a long, happy exhale, his hands rubbing up and down her back.\n\n\"I love you, daddy,\" she said, squeezing him tighter.\n\n\"I love you too, pumpkin,\" he said with a quiet chuckle.\n\nShe realized that he was still obviously unaware of what he was doing to her a few seconds later when his hands went from rubbing her back to tickling her waist.\n\nCackling and bucking on top of him, she brought her arms down to pin his hands to her sides and catch her breath. In the two seconds that she was staring menacingly down at his grinning face, she felt the gentle nudge of something growing against the thin cloth covering her pussy.\n\n\"No tickles!\" she said, standing and causing him to laugh even harder.\n\nShe couldn't help but giggle a little herself and shake her head before turning to leave the room.\n\n\"Night kiddo,\" he called. \"Love you.\"\n\n\"Love you too, daddy,\" she called, and glanced back at him as she was stepping around the couch. She was just in time to see him adjusting himself idly as he went back to staring at the TV.\n\nSilently calling herself a freak a dozen times, she sped upstairs and was all set to sequester herself in her room when she remembered why she'd excused herself so suddenly from the situation downstairs. She walked directly up to Dane's door but saw that it was open and the light still off. Glancing over at Danny's room, she frowned when she saw the light on underneath the closed door.\n\n\"Whatever,\" she said with an irritated sigh and went to her room.\n\nClosing the door, she glanced at the form in the mirror and saw the obvious wet spot happily displaying itself on her panties. Silently hoping she hadn't left any evidence of her arousal on her dad's pajama's, she silently wondered if he'd noticed.\n\n***\n\nThe next morning, Sam woke up and went to the bathroom to start her day. As she left her room, she saw that Dane's door was closed and frowned. Glancing around her, she saw the doors to her other siblings' rooms were still closed, so she went and softly knocked on Dane's door.\n\n\"Yeah,\" he called, and she opened it.\n\nHe was standing in front of his bed, his back toward her, and didn't turn around as she stood there waiting. She cleared her throat.\n\nHe looked over his shoulder, then looked back down at whatever he was doing.\n\n\"Are you going to avoid me forever?\" she asked, her irritation only growing.\n\n\"I'm not avoiding you,\" he said dismissively. \"What is it?\"\n\n\"Don't give me that,\" she said. \"You and I need to talk. We've needed to for several days now, but you've been gone, avoiding me.\"\n\n\"I've just had other things going on in my life, Sam,\" he said. \"I'm not avoiding you.\"\n\nShe sighed. \"Dane, come on. Please talk to me.\"\n\nHe turned and sighed in irritation. \"Fuck... what?\" he said, sounding exasperated.\n\nShe winced, but not from any physical pain, and left the room without another word. Hurrying back down the hall to her own room, she shut the door and went about getting dressed for class. She didn't know what hurt worse: the idea that what had happened meant so little to him that he'd forgotten, or that he'd chosen to pretend that it never happened at all.\n\nA gentle knock on the door a few minutes later caused her stop putting makeup on and stand to go answer it. Turning the handle and pulling, she saw Dane standing there with a sheepish look on his face.\n\nShe turned and walked back to the desk in silence.\n\n\"Sam,\" he said.\n\nShe didn't answer.\n\n\"I'm sorry,\" he said. \"Can we talk tonight? I know you have class soon.\"\n\nShe looked at him from the mirror in front of her, then stood and turned to stare at him. She felt like pushing his buttons a bit, and moved over to him.\n\n\"What?\" he asked, frowning in confusion.\n\n\"You don't get to pretend that nothing happened,\" she said angrily. \"I was this close to having sex with you the other morning,\" she spat, holding her fingers up a millimeter apart.\n\nHe stammered something unintelligible that she didn't understand.\n\nNot really knowing why, she glared at him angrily for a few seconds and then slapped him on the cheek as irritation spilled over into anger. A split second later, she felt another urge overwhelm her and grabbed his head with both hands and lunged forward to kiss him right on the lips. As soon as she did, she felt tingles race through her body.\n\nStepping back a second later, she shoved him back toward the door as he stared in obvious confusion while she turned and went back to finishing her makeup.\n\n\"I... we... tonight,\" he stammered.\n\nShe waved a hand over her shoulder dismissively and after another few seconds, heard the door close again.\n\n\"Fucker,\" she muttered to no one.\n\n*****\n\nAlex\n\nAfter a wonderful night of sleep, Alex woke to find that Toni was still sleeping next to her and kissed her sweetly on the cheek. Rising happily, she went about getting dressed for the day as her twin scowled up at her sleepily.\n\nAs luck would have it, her day just got better from there. School was actually fun, and she didn't have to work that afternoon, so she sent a text to Bryce that she was free if he wanted to hang out. Excited to see that he was free too, she told him to text her when he was headed her way and went home.\n\nOnce she got there, she straightened her room up a bit and put away the myriad of scattered clothes strewn around. After a while, Wade and Toni came home, and Alex went through the closet to say hi.\n\n\"You don't work?\" she asked after sliding down to sit on the bed with the two.\n\n\"This evening,\" Wade said. He was laying on his side and idly stroking Toni's bare stomach, her shirt raised up a bit.\n\n\"I'm off,\" Toni said, stretching and making Alex want to kiss her for being so adorable as she did so.\n\n\"Too bad we can't play,\" Wade said, frowning at her. \"Although, I could just seduce your sister here.\"\n\nAlex smirked and looked over at him.\n\n\"You don't think she'd on her period too?\" Toni asked. \"We're twins, dumbass.\"\n\n\"Yeah but...\" he stammered. \"That's not...\"\n\nToni giggled. \"No, it doesn't matter that we're twins. But we're always together and usually get them at the same time. I'd bet she can't play either.\"\n\nWade turned to regard Alex, a ridiculous looking pout on his face.\n\n\"Sorry, honey,\" she said, frowning pitifully for him.\n\nHe chuckled and waved a hand to dismiss the thought and went back to gently tickling Toni's taut stomach.\n\nHeading back to her room after letting them know that Bryce was going to be there, Alex laid back down on her bed and played with her phone. After another half hour, Bryce texted that he'd finished what he'd had to do and was nearly there.\n\n\"Door's open when you get here. Come on up,\" she texted.\n\nA few minutes later, she heard the front door open and got up to go and look down the stairs. Bryce smiled as he continued up, kissing her on the lips as he reached the top.\n\n\"How was your morning?\" she asked, taking his hand and walking him into her room. Shutting her door first, she walked over and shut the closet door.\n\n\"It was good, I guess,\" he said with a shrug. \"Had to stop by and help my dad with something before I could make it over here.\"\n\nShe nodded and sat down on her bed, waving him over to join her. Laughter echoed through the closet door from Toni's room, and he looked that direction.\n\n\"Wade's here,\" Alex said. \"I guess Toni and I are testing you two.\"\n\nBryce looked over at her in confusion. \"How's that?\" he asked.\n\n\"Well, neither of us can have sex right now, so that means you two will have to do without. We'll see how much you want to be with me when you can't just stick something in me.\"\n\nAs she spoke, she slid fully onto the bed and scooted back against her pile of pillows. He chuckled in response to what she'd said and kicked off his shoes before getting comfortable at the other end of the bed.\n\n\"I'm pretty sure there are other places I could stick it,\" he said, pulling her foot into his lap to start rubbing it.\n\n\"Boys,\" she said, rolling her eyes. \"You just can't stop thinking with your dick.\"\n\nHe looked at her quietly for a few seconds before speaking. \"And?\"\n\nShe giggled, then looked behind her as the door opened and Toni came in.\n\n\"My bed is too small to be comfy in,\" she complained. \"Plus, y'all sound like you're having fun in here. Can we join you?\"\n\n\"Of course,\" Bryce said, scooting over to give the other two room.\n\nThe four rummaged around on the bed until they were all comfortable and Alex put on some music for background noise.\n\n\"So, what were you guys talking about?\" Toni asked idly, leaning her head on Alex's stomach.\n\n\"Oh, Bryce was whining about not being able to get any,\" Alex said.\n\n\"God... boys,\" Toni said, rolling her eyes.\n\n\"Hey...\" Wade said. \"Let's get something straight: you two are just as horny as any dude I know.\"\n\n\"Not on our periods, we aren't,\" Toni smirked.\n\n\"Well, you don't gotta be horny to take care of your guy, do you?\" Bryce said with a wide grin.\n\nAlex could sense that he was trying to get a rise out of her sister and kept quiet.\n\n\"Listen, buster,\" Toni said with a scowl, though it was clear she was amused.\n\nFor an hour or so, the four simply talked and relaxed there in Alex's bed. It was nice and relaxing, and she was surprised to find that the topic didn't stay on sex.\n\nWade started to doze off after that. \"I think I'm gonna nap,\" he announced, and was obviously well on his way to do just that. \"Babe, can you do me a favor?\"\n\n\"Yes, I'll behave,\" she said with a giggle.\n\n\"Just wake me up before five,\" he said sleepily.\n\n\"Okay,\" she said, leaning over and kissing him on the head.\n\nAs the four had talked, they'd moved about on Alex's bed in their constant struggle to get comfortable. She'd ended up squished even further into the wall and had Wade laying on her stomach instead of Toni. Bryce was at the other end of the bed, his head by Alex's feet and his legs partially off the bed. Toni had ended up on the other side of Wade, who was taking more than his share up.\n\nIdly running her hand through Wade's hair, Alex looked down as Bryce rubbed her feet and winked. Feeling sleepy herself, she yawned and laid her head back on the pillow, intending to only rest her eyes for a minute. Bryce and Toni continued to talk quietly.\n\nTime passed, and Alex groggily opened her eyes, though she didn't move. Looking at the other end of the bed, she saw that Bryce had moved and was leaning on the other side of the mattress with Toni laying on her stomach near him.\n\n\"You're trouble,\" Toni whispered, obviously trying to be quiet. \"So, is that what does it for you with my sister?\"\n\nShe heard Bryce chuckle before he spoke. \"Are you asking what I find attractive about her?\"\n\n\"Well, that and what we were talking about... the whole 'cheating thing' with Beck,\" Toni said.\n\n\"Alex is... that's a tough one to explain. I mean obviously she's incredible gorgeous, you both are,\" he said.\n\n\"Aww,\" Toni said, though Alex heard the mocking tone she had.\n\n\"But it's like... she doesn't know she's gorgeous, or like she matured not knowing she was,\" he continued. \"You're a fuckin' smokeshow and you fuckin' know you are. But with Alex, its different. She's just as sexy but she carries herself differently. It just does it for me.\"\n\nToni giggled. \"Yeah, I think I know what you mean.\"\n\n\"That's not to say I don't want to just slay your sexy ass right here and now, and pretty much every time I see you,\" he added, and she heard her sister giggle again.\n\n\"And what makes you think I'd give you the pleasure of having me?\" she asked. \"The blowjob the other day could have been a onetime deal.\"\n\n\"What makes you think that you'll react any differently than your twin did when I try?\" he replied. \"I'm pretty sure I can play you like a fiddle.\"\n\n\"Whatever,\" Toni said with a snicker.\n\nAlex managed to slowly turn her head on the pillow without the other two noticing or waking Wade and looked over to get a clearer view. Bryce had a confident smile on his face, and he was staring directly at Toni. She could see that her sister was having a hard time maintaining the confident fa\u00e7ade.\n\n\"You want me to take you so bad, I can see you getting aroused just by me staring,\" he pointed out.\n\nAlex didn't doubt his assessment. Toni looked ready to melt.\n\n\"Alex was right when she said you're a submissive little slut, wasn't she?\" he asked.\n\nToni seemed to hesitate for a second but then grudgingly nodded.\n\nBryce smiled widely and silently regarded her for a second before he stood and moved over a few feet away from the bed.\n\n\"Come here,\" he said, looking over at her again.\n\nGingerly, Toni sat up, but hesitated a few seconds before she stood and walked over to stand in front of him. Once close to him, she seemed to lose a bit more control and looked to be more fidgety. She was looking down at the bulge in his pants when he ran a single finger across her neck and shoulder.\n\n\"What are you going to make me do?\" she asked quietly.\n\n\"I think we both know you what you want to do,\" Bryce said quietly.\n\nToni reached forward for a moment but then snatched her hand back and looked back up at him, as if she were a child asking for permission.\n\n\"I... shouldn't,\" she said quietly. \"I promised I'd be good.\"\n\n\"We both know that he'd love this,\" Bryce said. \"In fact...\" He reached into his pocket and pulled out his phone. \"I'll get a pic of my dick in your mouth so he can enjoy it later.\"\n\nToni whimpered pitifully.\n\n\"You want to be on your knees right now, don't you?\" he asked.\n\nAlex stifled a giggle at the sight of her twin nodding as quickly as she did. Toni was wiggling her hips in place, obviously turned on.\n\n\"You can't yet, though. Right?\" he said.\n\nShe shook her head, and Alex saw the frown on her face.\n\n\"Why is that?\" he asked.\n\n\"You didn't say I could,\" she said, her voice thick with arousal.\n\nAlex saw Bryce smile then and for a few quiet moments, he just stared at her and watched.\n\nShe whimpered once and he chuckled. \"On your knees, slut.\"\n\nFor a moment, Alex was worried that her sister had hurt herself, she'd dropped so quickly. She realized she was squeezing Wade tighter than she'd intended and relaxed. Hoping she hadn't awoken him; she was suddenly very aware of the erection he was sporting. Silently amused, she squeezed him tight again, then felt his hand squeeze her shoulder in response.\n\n\"Okay... go ahead,\" Bryce said.\n\nAlex focused back on the other two then, and saw Toni pulling Bryce's zipper open to find his cock. It slid free, and she wasted no time before sliding her lips around it and starting to suck.\n\nClear arousal surged through Alex, and she felt like sliding on top of Wade despite the obvious reasons she couldn't. She'd loved watching Bryce handle Toni so easily and with such confidence.\n\n\"That's a good girl,\" Bryce grunted, his thrusting hips pumping the length of his cock into Toni's mouth and eliciting gentle gag noises as he pushed against her throat again and again. At the same time, he snapped some pictures on his phone with his free hand.\n\n\"Would you like to fuck me in the ass?\" Toni asked suddenly, surprising Alex. \"I want to cum too.\"\n\nBryce frowned and shook his head at her. \"I'm not going to do anything to you that I haven't done to Alex first,\" he said. \"Besides, this isn't about your pleasure, slut.\"\n\nHe plunged the head of his cock back into her mouth again and she whimpered in protest. A few more seconds of throat fucking later, she heard her twin swallowing while Bryce's face contorted into silent rapture.\n\n\"That's good,\" Bryce grunted after a few seconds, pulling back. Toni quickly leaned forward though and took him back in. With a sigh, he held still and put a hand on the back of her head. It was unnecessary, as Toni was still happily sucking his cock and didn't seem to be stopping. \"We're going to need to wake your boyfriend up soon,\" Bryce pointed out.\n\nToni finally slowed and sat back on her knees, her butt resting on her feet as she stared up at Bryce, the scowl of a spoiled brat on her face.\n\n\"Please?\" she said, frowning pitifully.\n\n\"No,\" he said, pulling his cock back into his pants and zipping himself up. \"Be a good girl and maybe I'll let you do it again sometime. Though you shouldn't leave your sister's room a mess.\"\n\nToni's gaze dropped down between the two, but Alex couldn't see what was down there.\n\n\"Lick it up,\" Bryce said.\n\nToni hesitated again, but then Alex saw her lean over, momentarily disappearing before coming back up and looking up at Bryce again.\n\n\"Good girl,\" he said, his confident smile back. \"Now... crawl over to your boyfriend and suck his cock. You've been bad and need to make amends.\"\n\nToni nodded and immediately turned and crawled back over to the bed. Not bothering to try and wake him up first, she worked her boyfriend's cock free and had him in her mouth in moments. He made a show of waking up and looking down at her in confusion for a moment before he grinned and put a hand on the back of her head as she bobbed up and down at his crotch.\n\nBryce came back over to the bed while she sucked, having put his dick away. Wade had sat up when Toni started taking care of him, leaving an empty space next to Alex that Bryce knelt down on, right next to her head.\n\n\"Hey,\" he said quietly, kissing her on the nose and eliciting a snicker.\n\n\"Hey,\" she replied.\n\n\"I know you enjoyed that as much as I did,\" he said quietly, and she was surprised that her ruse had been discovered.\n\n\"So,\" she said, recovering quickly.\n\n\"So... I'm thinking we can drop the ridiculous trial period you and I are on. I'm just going to be your official boyfriend, okay?\"\n\nShe smiled, unable to stop herself, and lifted her head up to kiss him.\n\n\"I'll text you later,\" he said, kissing her a final time. \"Bye babe.\"\n\n\"Bye,\" she whispered.\n\nBryce stood then and pulled his shoes on. Gathering his keys and wallet from where he'd tossed them, he waved and winked before leaving the room and the house a few seconds later.\n\nFocusing back on the other two, Alex moved over and leaned into Wade's shoulder.\n\n\"Little slut,\" Wade said.\n\n\"Mmmhmm,\" Alex agreed.\n\nHe groaned and pushed Toni back onto her butt, then stood and started to stroke himself while standing above her. With a grunt of pleasure, he started to cum. Laughing, Alex saw Toni squeal in surprise as he sprayed a load of spunk directly onto her face, then another and another.\n\nSighing in irritation, Toni stood and left the room to go clean up.\n\nWade turned and flashed a grin at Alex. He was still holding the shaft of his cock. She smirked and raised an eyebrow at him, causing him to shuffle it back in his pants. Pulling him back down to the bed, she snuggled him up against her again and gently stroked his head.\n\n\"You enjoyed that I guess?\" she asked.\n\n\"Does that make me weird?\" he asked\n\n\"Kinda,\" she said, winking at him.\n\n\"You do realize I've known about her and your friends for a while now, right?\" \n\nShe snickered. \"I know, but its obviously different when its right in front of you.\"",
        "Wade shrugged and a few seconds of silence passed as he stroked her arm with his fingers. \"You like him a lot, don't you?\"\n\nAlex was quiet for a few seconds while she considered the question. \"I do, but I don't know how realistic it is for us to be together.\"\n\n\"What? Why?\" He sounded genuinely perplexed by the notion.\n\n\"Well, for starters, I'm not loyal to him and don't have any plans to be. Plus, he's arrogant, cocky, and dominant. I just don't know how this is really going to work out.\"\n\nWade chuckled. \"That's life though, right?\"\n\n\"I get that,\" Alex protested. \"I just mean that I think I like him for the wrong reasons. I don't know if I can really expect him to be okay with me having sex with other guys.\"\n\n\"Well, I'm okay with Toni doing it. Plus, you two obviously understand that it doesn't hurt that I get to have you too.\"\n\n\"Yes, you do,\" she confirmed. \n\nShe was idly sliding a finger across his chest as she spoke, but then paused and looked up at him.\n\n\"Wade, I'm really glad you were my first time,\" she said quietly.\n\n\"Me too,\" he said, and turned his body so he could look directly into her eyes.\n\nShe couldn't help noticing the rich brown of his eyes and had to force herself to focus. \"You know, Bryce and I were talking the other day and I made a point of saying that Toni and I are twins and that we tend to share everything.\"\n\n\"Yeah, you do,\" Wade said.\n\n\"So... since Toni is yours, I suppose that means I'm yours too,\" she said, still staring at him.\n\nHe didn't say anything for the next few moments, and just as she was starting to wonder if she'd gotten too girly with him, he leaned in and kissed her as softly as she'd ever been kissed. Several seconds passed and she began to feel more girly than she had before as thoughts of how wonderful it felt to be with him filled her head. That was resolved a few seconds later.\n\n\"Ugh, you two are ridiculous,\" Toni said, coming into the room behind them.\n\n\"Oh, shut up,\" Wade said. \"We were having a damn moment.\"\n\nShe giggled and jumped in between them. \"I saw you both watching,\" she said. \"Was I naughty enough?\"\n\nWade chuckled and rolled his eyes at Alex.\n\n\"Very naughty,\" he said.\n\n\"How hot was it when I was being all bad?\" she asked, looking at Alex.\n\n\"I was afraid of melting through my pants,\" Alex confessed, drawing laughter from the other two. \"But if you're going to let Bryce just shove his cock in you whenever it strikes his fancy, then I'm just going to have to let Wade do the same thing.\"\n\nToni rolled her eyes. \"Don't you do that already?\"\n\nWith a giggle, Alex shrugged. \"Yeah, but now there's a precedent. If you can't say no to Bryce, then I don't get to say no to Wade.\"\n\n\"Oh really?\" Toni asked. \"What... like if he wanted to come fuck you in the middle of a shift at work?\"\n\n\"Yep,\" Alex said. \"I mean... hopefully he wouldn't just bend me over a table that people were eating at, but I wouldn't stop him if he did. If you're going to be a tramp for Bryce, I'm going to be one for Wade.\"\n\n\"You know... I'm right here,\" Wade said.\n\n\"Pipe down,\" Toni spat, then looked back at Alex. \"You're just irritated cuz you didn't get to do it.\"\n\nAlex smirked and grabbed Toni, pulling her down and kissing her fiercely. \"Bitch,\" Alex said quietly, licking the cum taste from her sister's tongue.\n\n\"Cunt,\" Toni replied, kissing her again. \"In a few days, I'm going to make you eat my pussy for the whole night.\"\n\n\"Whatever tramp,\" Alex said in a playfully venomous tone. \"I'm the one in charge of our relationship and you damn well know it.\"\n\nToni rolled her eyes, so Alex fixed a stern glare on her.\n\n\"Right?\" she asked, still staring.\n\nHer looked away.\n\nAlex pulled her face back down and kissed her once more, then asked again. \"Right?\"\n\n\"Ugh... fine, you're in charge,\" Toni said.\n\n\"Good,\" Alex said, smiling at her. \"Wade, baby, you can have me whenever you want. Okay?\" she asked.\n\nHe smiled and snuggled closer to her. After a little while longer, he left for work and left the two sisters tangled up in bed. Eventually Toni went back to her own room and Alex did her homework.\n\n***\n\nLater that evening, Alex noticed that she was starting to feel out of sorts again and began to wonder if she were getting sick or something. She obviously wasn't pregnant or anything ridiculous like that, so maybe a stomach bug or something was causing the ill feelings.\n\nDeep inside though, she knew that wasn't what was wrong. There was something bothering her, though she couldn't place what it was. When she tried to think about the previous Friday at the swinger party, she had mixed feelings. For a moment, she felt a slight impulse of negativity, but then it was washed away by feelings of warmth and goodness. \n\nIf she thought about the people in her life, she had nothing but positive feelings well up inside. The situation with Bryce was still being worked out, but nothing negative had happened so far. Thinking about Wade made her feel a little bad that she and Toni had been giving Bryce all the attention, but she'd already told herself that she was going to take care of him as soon as she was able to. In fact, she'd really wanted to be the one to do that for him that afternoon, but Toni needed to learn who was the boss between the two of them.\n\nThinking about her sister only made her happier than thinking about anyone else, save maybe for Kenny, Bear, and Eric, so that wasn't it.\n\nShe hadn't had a chance to fool around with her brothers or really even talk to them all that much, but there didn't seem to be any real drama there. Both of her parents were happy, Sam was doing well as far as she knew, and school was great.\n\nSo... what the hell was wrong with her?\n\nSomething deep inside, underneath everything else, was telling her that something was out of place. Try as she might though, she couldn't figure out what it was. Soaking in a hot bath for an hour made her feel better, but as the evening got later and later, she began to get more and more anxious.\n\nShe'd begun to worry that she was going to have bad dreams that night, and after getting ready for bed she'd just gotten settled when Toni came and slid in next to her. Pulling her clothes off, save for a bra and panties, she pulled the covers over the two of them and snuggled up against Alex.\n\n\"You're still feeling weird,\" Toni said, stating and not asking.\n\nAlex sighed. \"Yeah. I wish I could figure out what it was.\"\n\n\"Want me to stay?\" Toni asked.\n\nIn response, Alex pulled her tight and nodded. Just having Toni next to her made her feel better, but still, the feeling of unease was there.\n\n*****\n\nSam\n\nMonday was relatively typical for Sam. School went fine. She flirted as she always did with her \"history boyfriends\" and was a little surprised when Brandon didn't show for class, but she figured that he'd probably just slept through it or skipped.\n\nShe had an afternoon shift at work that went fine, and afterward, she went home and was able to eat dinner with her folks. She was a little concerned that Dane wasn't there when she'd gotten home, but he did specify that they'd talk that night. He hadn't ever lied to her before, so she didn't think he'd do so now.\n\nIn an effort to keep her mind off of the talk she was going to have to have with him, Sam tried to busy herself with other things. Homework came first, but after that she'd sadly run out of things to keep her occupied. Despite the weirdly sexual encounters that she'd caused with her dad, she knew he and her mother were always a good way to keep her mind off things and keep her calm, so she went downstairs to spend a little time with him on one of his rare evenings off.\n\nAs was typical, she found him in his usual spot on the end of the couch, her mother on the other end.\n\n\"Hey, guys,\" she said, sliding down between them and leaning over on her mom's shoulder.\n\n\"Hey, honey,\" her mom replied. \"Everything okay?\"\n\nSam nodded and snuggled her feet under her dad's thigh to keep her toes warm. He offered her a wink and a smile as he lifted his leg a bit to accommodate her, and she pushed them a little further under before he settled back down.\n\nSnug and comfy, she began to watch the show her parents were watching and was a little surprised to see how racy it was. Samantha would have gotten up and quietly excused herself, but Sam was all too happy to watch.\n\n\"She's married?\" Sam asked as a particularly steamy love scene was taking place.\n\n\"Yeah,\" her dad said absently.\n\n\"That's her son's friend,\" her mom said.\n\n\"Scandalous,\" Sam said with a snicker.\n\nAfter a few minutes, she shifted in her seat to get comfortable again, her butt and thigh tingling from having gone to sleep. Changing positions, she pulled her feet out from under dad's legs and put them over into her mom's lap and leaned her head against his shoulder. Her mother absentmindedly began to rub Sam's feet, and she moaned happily. Lying flat on the couch, she pushed both in reach of her mom's hands. A glance and a chuckle were followed by a resigned sigh as her mother started to rub both feet. Not really registering what she was doing, she felt her dad shift a bit and shuffled her head over to his thigh as her mother continued to rub the aches in her feet away.\n\nEventually, all good things must come to an end, and her mother's foot rubs were no exception. After a comforting pat on Sam's leg, her mother stopped rubbing and kept watching the show. A pout didn't seem to convince her to start again, so Sam turned over on her side and looked back at the TV.\n\nWith sudden realization, she felt how extremely close she was to her daddy's crotch and quietly swore at her own foolishness. Sitting up as nonchalantly as she could, she scooted closer and leaned into his shoulder once more so she wouldn't accidentally cause him some embarrassment. The last thing she needed was for things to get awkward with him.\n\nAfter another few minutes the show ended, and Sam listened as her parents talked about the episode for a few minutes.\n\n\"Well, I've got to go to the bathroom and then I'm going to bed,\" her mother said eventually, then stood and leaned down to kiss them both before leaving the room.\n\n\"I'll be there after the news,\" her dad replied.\n\n\"Night, mom,\" Sam called, then kissed her dad on the cheek and started to rise.\n\n\"You leaving me too?\" he asked, looking up.\n\nSam smiled and nodded. \"Gettin' sleepy,\" she said.\n\n\"Well, give me a hug before you leave,\" he said. He moved his arm up and around her waist, pulling as she smiled happily.\n\nIn her head, she knew it was all innocent, fatherly affection. He wasn't trying to get cheap thrills, even though her pervert brain made it seem like he was. She wasn't analyzing the incident from the day before, and certainly didn't give a second thought as to why she slid both legs on either side of his in exactly the same position that had caused problems before.\n\nHis arm slid around the small of her back and pulled her tight, and again she was silently berating herself for her choice of panties and a long shirt for appropriate clothing. Her arms went up around his neck and she felt the warmth and calm he exuded oozing into her as she sunk down onto him.\n\n\"That's my girl,\" he said deeply, one hand stroking her back and the other pulling gently at her waist.\n\n\"See? This is fine. This is fine. Totally fine,\" she thought, the words bouncing around in her head as she tried to relax.\n\nHer delicate white panties were pressed against the bulge in his pajama pants, and despite trying to not think about it, she could tell he was still aroused from the racy TV show they'd just watched.\n\nShe felt how hard her nipples were in that moment and wondered if he could feel them poking into his chest. Could he feel the soft mounds of her breasts as they hugged? The thought of him leaning her back and sucking one into his mouth popped into her head and she opened her eyes as she hugged him and wondered what the hell was going with her brain.\n\nHis sizable bulge was throbbing against her panties, her pussy oozing and threatening to soak through as she pointedly tried to ignore it.\n\nHe pulled on her hips once more, a pat on the back from his other hand accompanying it to signify that the hug was over. The move had been ill-timed on his part though, as she was just then about to pull up and away. Her hips shifted slightly backward, and she had a moment of relief as the pressure on her pussy was eased the slightest bit. His squeeze and hug-ending pat pulled her hips back tight against him, her pussy grinding back down the firmness of his bulge and sending a shiver through her body as the very real feeling of sexual pleasure filled her.\n\nIt was a fraction of a moment, but she damn near moaned out loud and right in his ear. Only the sound of a key in the front door made it so that she was able to stifle it.\n\n\"Love you, pumpkin,\" her dad said, shuffling her back as she turned quickly away and pulled her shirt down over here panties.\n\n\"Love you too, daddy,\" she said, forcing herself to walk away at a normal pace and not bolt up the stairs that Dane was currently pounding up. Sam wisely took a minute to collect herself in the kitchen before heading up toward her room.\n\nFeeling guilty about putting herself and her unwitting father in that awkward position, she was severely distracted as she reached the top step and saw him coming out of her room. She had rounded the bannister and looked up when they both saw each other. \n\n\"Hey,\" he said, sounding a little apprehensive.\n\n\"Nothing!\" she barked suddenly, then darted past him and into her room. Slamming the door behind her and leaning back against it, she closed her eyes and shook her head, bringing a hand up to rub her temples.\n\n\"Get a grip on yourself, idiot,\" she said after a few deep breaths.\n\nShe counted to ten silently and forced the thoughts of lewdness and erotica from her mind, then opened her eyes. Standing straight, she took another deep breath and opened the door.\n\nDane was halfway between his room and hers but was turned the other way. He turned around as she opened her door.\n\n\"Sorry,\" she said, then waved for him to come in.\n\nHe hesitated, though, looking like he was worried she'd punch him or something.\n\n\"Dane, get in here,\" she said, quickly growing irritated with him.\n\nHe stepped forward meekly, then moved past her to stand awkwardly near her bed. She shut and locked her door, then turned to face him. He was looking at her, but his head was down as if he'd been yelled at or was guilty of some hidden offense.\n\n\"What's wrong with you?\" she asked, her face clearly showing her confusion at why he was acting so oddly.\n\n\"I said I was sorry when it happened,\" he said, holding his hands up defensively.\n\n\"What?\" she asked but then shook her head in irritation. \"No, not that. You're acting like I'm going to hurt you or like you're afraid I'm going to tell Daddy you stole his truck.\"\n\nDane frowned. \"I uh...\"\n\nShe sighed and walked right up to him, his hands not moving as she came in close. Brushing them aside, she slid inside and wrapped her arms around his torso, the left side of her face pressing against his chest. He didn't move, and just continued to hold his arms up weirdly as if he were afraid that she'd shatter if he touched her.\n\nAfter a few seconds, she grew impatient again. \"God dammit, hug me!\" she snapped.\n\nA few tense seconds passed, and then everything was suddenly right within Sam's world as her big brother wrapped his arms around her protectively and squeezed. She sighed as the tension flew from her body and the wicked thoughts she'd been ignoring about her father vanished. \n\nDane had been her security blanket as a child. He was the one that had made the monsters go away. He was the one she turned to first when she needed comfort. He was the man that leaped to her defense when Pastor Dickhead had shown his true colors. He was her protector. \n\nShe sighed in happiness and contentment\n\nMinutes passed as the two clutched each other, and she was determined to not be the one that let go first. Still squeezed tight against him, she posed a question. \"Do you feel that?\"\n\n\"What?\" he replied after a few seconds.\n\nShe giggled and shook her head as he looked down and pulled away.\n\n\"You're so clueless,\" she said.\n\nHe frowned. \"You're being pretty damn weird, not to mention mean,\" he said.\n\n\"Oh stop. Come on,\" she said, ignoring him as she turned toward her bed.\n\nHe started to protest but she wasn't going to have any of it and grabbed his hand to pull him over. Climbing on top, she scooted over to one side as she dragged him down with her. Turning over to face him, she eyed him quietly for a few more seconds, gathering her thoughts.\n\n\"I'm going to talk and you're going to listen. Is that clear?\" she asked.\n\nHe didn't respond for a few seconds, and she raised a single eyebrow in challenge.\n\n\"Yes,\" he answered.\n\nAmused, she shook her head and cleared her throat. \n\n\"I've been trying to figure out how to explain what's been happening with me, and between the two of us, but I'm not really sure I even know, much less know where to begin.\" She sighed and chuckled quietly at herself. \"Fuck it, I'll just do my best and wing it.\"\n\nHe smirked and nodded, but wisely didn't say a word.\n\n\"I don't know how much you know about the women in our family, and I don't even remember if we've really discussed this, but we have some genetic trait that makes us hornier than normal women, or maybe more easily aroused. Maybe both.\"\n\nShe looked up at him as he nodded, indicating that he knew.\n\n\"I had a talk with mom about it and she assured me that I was normal. She and my birth mom had the same issues of being horny all the time, and she even said that it got worse as they got older.\"\n\nDane shifted in his spot next to her, and she could see that he was a little weirded out talking about their mother being horny.\n\n\"Sorry,\" she said, trying to hide her amusement. \"That's not important. What I'm saying is that ever since Pastor Dickhead forced that door open in me, I haven't been able to shut it or even close it just a little bit. I think about sex so much that I find myself making stupid decisions. I trusted the Pastor and his wife much longer than I should have. I tried to make it work with Keith when I knew in my heart that it wasn't going to. I flirt with a group of guys in my class and despite my attempts to get one of them to ask me out, none of them will because they're afraid of hurting the other two. I'm also flirting with a guy in a different class and his girlfriend, and last week I even gave him a blowjob before going and letting his girlfriend try going down on me in her dorm room.\"\n\nDane had a pained look on his face, and she sighed hard at him.\n\n\"What's the matter with you?\" she asked. \"I've had sex. I suck cock. I swallow cum.\"\n\n\"Maybe I don't want to think about you doing that, alright?\" he shot back.\n\nShe sighed. \"Please just listen and try not to judge me before you hear what I'm trying to tell you.\"\n\n\"I'm not judging you, Sam,\" he said, but fell silent regardless.\n\n\"The point of what I was telling you was that I'm finding myself in more and more sexual situations. I'm not sure if I put myself in them, or if I'm just lucky or unlucky enough to happen into them. I needed to find an outlet, or I'd run out of luck and hurt someone or end up hurt myself.\"\n\n\"I know, Sam,\" he said. \"We talked about this before.\"\n\n\"I know we did, but you didn't seem to get it,\" she said. \"I'm obviously attracted to you,\" she said, looking directly at him.\n\n\"It's clear that you're attracted to me too, despite you being all weird about it. The other morning, you obviously didn't know it was me. It was a natural reaction and you're not the first person to get a hardon from a family member. God, you should have seen what happened yesterday! Your jaw would drop if I told you.\"",
        "She winced internally, knowing that she shouldn't have mentioned that and quickly moved past it.\n\n\"The point is, when I felt you behind me and your dick started pushing against my... softer parts,\" she said, choosing her words carefully. \"I wanted it. I wanted it bad. I'm not afraid to admit it, either.\"\n\nShe'd expected him to groan in frustration or turn over, or maybe even get up and try to leave. To her surprise, he simply nodded.\n\n\"I had to actually stop myself from pulling my panties aside and letting you have me,\" she admitted. \"And the fact that you obviously know how to seduce someone made it that much more difficult. You were so in control and I just knew that if you wanted me, I wouldn't have stopped you.\"\n\nHe swallowed hard, but she saw the edges of his lips curl up slightly in a smile.\n\n\"I think it was obvious that you gave me a very, very powerful orgasm,\" she said quietly.\n\nHe confirmed the admission with a slight nod, and she smiled as the corners of his mouth turned up a little more.\n\n\"I don't mind telling you that I don't think I've ever had a better one,\" she said. \n\nShe reached out and traced a finger along his arm, but then realized how flirtatious she was being and shook her head to snap herself out of it.\n\n\"Sorry,\" she said again.\n\n\"We agreed on honesty, right?\" he asked quietly.\n\nShe looked back up at him then. \"We did.\"\n\n\"In my sleep-haze, I thought you were Sally,\" he said.\n\n\"I know, honey,\" she replied. \"You didn't hurt me, and you didn't hurt our relationship. I wasn't in pain. I wasn't emotionally damaged.\"\n\nHe sighed. \"You've been through too much for me to do shit like that, though.\"\n\n\"Don't you see that I'm the one that keeps causing stuff like this?\" she asked. \"It was my fault. I'm the one that keeps asking for snugglebunnies. You didn't just... barge in and shove your dick in me or something.\"\n\nHe looked at her oddly for a second, then laughed and fell back on the bed. A few seconds passed until he recovered, though he continued to lay flat.\n\n\"That's not something I expected to hear,\" he said, then propped himself back up again.\n\n\"Well, sorry, but it's true,\" she protested. \"It was me.\"\n\n\"We're just going to have to agree to disagree on that,\" he said eventually. He frowned then and looked back over at her. \"Wait... what happened yesterday morning?\"\n\nShe winced and closed her eyes. \"I can't fucking believe I said that!\" she groaned. She took a deep breath and opened her eyes once more. \"It's not important to what we're talking about.\"\n\n\"We agreed on honesty,\" Dane pointed out, and she frowned, irritated at him for being right.\n\nBut if she were being honest with herself, the same thing happening with her dad that had happened with Dane would only serve to further prove her point.\n\n\"Fine, but you don't say a thing to anyone,\" she said, pointing a finger at him, and saw him roll his eyes at the notion. \"I'll tell you, but just... fucking listen until I'm done.\"\n\n\"Fucking okay,\" he said, causing her to smirk at him.\n\nGlad that she hadn't mentioned anything about what had happened that night, she focused on the previous incident. After a deep breath, she started.\n\n\"I woke up and no one else was here. I went downstairs and had a banana, then felt like going and snuggling up with Mama and Daddy like I used to when I was younger. I guess I was feeling a little spoiled and needy and they were the only ones around.\"\n\nDane had one eyebrow raised apprehensively. She ignored him.\n\n\"I snuggled up between them and was about to fall asleep when mom finally had to get up to start her day. Daddy was still mostly asleep and pulled me tight against him. It was fine for a while, but then he moved and...\" she looked up and saw Dane's eyes as wide as could be. \"Stop,\" she said, pointing her finger at him. \"Nothing happened.\"\n\nDane breathed a long sigh of relief, and after a few seconds, she rolled her eyes at him.\n\n\"Seriously?\" she asked. \"I think I'd be a little more freaked out if I'd had sex with my own father, Dane.\"\n\nHe laughed for a second and looked down at her. \"Come on, you've been pretty weird today. Admit it.\"\n\nShe didn't, and only sighed in response. \"Anyway, he obviously thought I was mom. He grabbed my boobs, and I felt his dick against me. The point is that I put myself in that situation. He was thinking dirty thoughts, yeah, but they were about mom.\"\n\nDane stopped smiling.\n\nShe sighed. \"I asked you earlier if you could feel what I felt when you were hugging me.\"\n\n\"You did,\" he confirmed.\n\n\"Could you?\" she asked.\n\nHe didn't respond, and it didn't look like he had an answer for her.\n\n\"I felt safe,\" she said. \"I felt everything that I was worried about disappear. I felt the guilt I was still feeling for putting myself in that situation with Daddy go away.\"\n\nFinally, Dane's face broke into a smile, and she couldn't help but return it.\n\n\"You're like... my security blanket,\" she said. \"So... I'm sorry I keep getting us into... tense situations, but please don't abandon me. I need you.\"\n\nHe leaned over and pulled her to him, clutching her against him and holding her there. \"I won't. I promise,\" he said eventually. \"I love you, Sam.\"\n\nShe smiled and nuzzled his chest. \"Love you, too.\"\n\nThe two continued to lay there for another half hour before she patted his chest and pulled away.\n\n\"I'm going to go soak in the tub and shave my legs,\" she said. \"You want to snuggle with me later?\"\n\n\"Sure,\" he said, kissing her on the forehead. \"I can't promise that I won't get a hardon during snuggle time, though.\"\n\nShe giggled as she stood up and stretched, feeling the edge of her shirt pulling up over her butt and revealing the cute panties she was wearing. Looking back over her shoulder, she saw his eyes locked on her rump before he lazily brought them up to look at her face.\n\n\"I think we both know you'll get one,\" she said. \"I can't promise that I won't want to take advantage of it.\"\n\nHe sighed and stood, shaking his head in amusement. \"Sam...\"\n\n\"Sorry,\" she said, giggling.\n\nHe walked over to the door and unlocked it but paused before opening it and was about to say something when she interrupted. \"I was just being honest. We agreed on that, remember?\"\n\nHe closed his mouth again and sighed, taking a few seconds to compose himself. \"See you in a bit,\" he said, rubbing his temples.\n\n\"'kay,\" she said sweetly, swinging her arms in a very girlish manner. \"I'll try to remember to put on clothes.\"\n\nDane groaned and turned, immediately leaving the room as she laughed out loud.\n\n***\n\nSam made sure that Alex was done with her bath and went immediately to go and take care of what she needed to. She finished up and headed back to her room. As she passed Alex's room, she glanced in and saw the twins snuggled up next to each other while they slept.\n\nReturning to her room, she left the door cracked and turned off the lights. Moving toward her bed, she started to climb in, but then paused and thought about her comments to her brother earlier.\n\nWickedly naughty ideas began to crawl around her brain. She didn't even try and stop herself as she pulled her panties and shirt off and slid under her covers, completely nude.\n\nLaying quietly, she impatiently waited for Dane to come back in. She was beginning to wonder if she had to go and find his worrying ass when she heard her door open and shut quietly.\n\n\"Sam?\" he whispered in the darkness.\n\n\"Dane?\" she said, though it wasn't a whisper.\n\nHe chuckled. \"Do you want me to lock it?\"\n\n\"Of course,\" she said, lowering her voice.\n\nShe heard shuffling again, followed by the metallic click-thud of the lock being slid into place. More gentle shuffling came next, and she smiled in gleeful anticipation of his reaction to her prank.\n\nThe mattress bounced a little, and she felt him climbing in. Cool air hit her naked backside and she held her breath in anticipation. Finally, he got in and pulled the cover up over them before sliding up against her.\n\nHe was obviously bare-chested, but that wasn't a surprise. His hands pulled her back tightly against him and she immediately felt the bulge push at an odd angle against her butt. Disappointingly, she realized that he was wearing underwear, but that wasn't all that surprising.\n\n\"Sam,\" he said quietly. \"You're naked.\"\n\nShe giggled gleefully and nodded in the darkness. \"Yep, I told you I'd try to remember clothes. I didn't.\"\n\nShe expected to have to make him stay, but to her surprise and excitement, he simply sighed and snuggled her tighter. With a deep inhale of breath, he relaxed into her and she knew peace again. Warmth, safety, protection, compassion. All of these feelings passed through her as she felt the strength of his presence behind her.\n\n\"This is nice,\" she said quietly, her hand sliding over the top of his, her fingers sliding between his. \"Even if you are wearing underwear.\"\n\nHe sighed again, and for a moment she thought he was leaving. He wriggled around under the sheets in an almost angry manner for a few seconds. When she realized what he was doing, she couldn't help but feel a surge of excitement and surprise.\n\n\"Better?\" he asked, sliding back into place.\n\nShe had to bite her lip to keep quiet as she felt his cock pushing against one of her butt cheeks. A few seconds passed and it got a little awkward, so she replied with an \"mmhmm,\" and clutched his hand again.\n\n\"This really makes you feel safe?\" he asked quietly, and she sighed when she felt his fingers start to dance across the taut skin of her stomach.\n\n\"Doesn't it make you happier knowing that I'm safe and here with you where no one can get me?\" she asked quietly.\n\nHe didn't immediately respond, and she felt his fingers suddenly stop moving across her stomach. Her heart began to beat faster until it was so pounding hard, she felt sure he must be able to hear it. Silence cloaked the two and he inhaled deeply, his torso pulling back a moment as the cool air of her room hit her naked back.\n\n\"Yes,\" he said finally, his exhale pulling them back close together as his hand pulled her back close to him, his fingers starting their playful dance across her tummy.\n\nImmediately comfortable and at ease, she silently wished that the night would last a very long time. Relaxing and listening to his breathing, she kept quiet and just enjoyed their time while it lasted.\n\nA thought occurred to her eventually, and she couldn't help but giggle in quiet happiness.\n\n\"What?\" he asked in hushed tones, his fingers still dancing across the skin of her tummy.\n\n\"Just thinking,\" she said. \"This is my favorite place in the world.\"\n\nHe chuckled, and she felt compelled to turn and look at him over her shoulder, but then decided to flip completely over to face him. His cock slid across her butt cheek and thigh, then slumped awkwardly against her lower stomach. Forcing herself not to react, she moved up to look him in the eyes.\n\nThe moon was only a sliver outside her window, but her eyes had adjusted enough to see the undeniably handsome features of her big brother looking quietly back at her.\n\n\"I'm serious,\" she said. \"You're my favorite person in the world, and you make me feel safe.\"\n\nA smile crossed his face. \"Good. That's what big brothers are meant to do.\"\n\nHappy that he knew she was being serious, she sighed and closed her eyes again to enjoy the night with him. She might have dirty dreams throughout, but she knew that she was going to enjoy every second of sleeping next to him. Feeling like she was well on her way to dreamland, she fell silent and idly ran a finger across his waist with her free hand.\n\n\"Is uh... that... going to cause problems?\" he asked.\n\nShe opened her eyes and looked up at him in the dim light, then sensed the growing erection that was swelling against her tummy.\n\n\"Only if we let it,\" she said quietly. \"Does it always do that when you try to go to sleep or are you genuinely excited to be sleeping next to me?\"\n\nHe chuckled and didn't respond.\n\n\"I mean, you know that you're not going to be getting laid tonight, right?\" she pointed out.\n\nFilthy thoughts filled her mind, and she felt powerless to stop them and couldn't honestly tell if she wanted to.\n\n\"People can have the best intentions and still find themselves in sticky situations,\" he said.\n\n\"Yeah, but we also have willpower,\" she pointed out. \"So... is it something about me that turns you on?\"\n\nHe shrugged in the darkness, though she could easily see the movement.\n\n\"Well, what do you find attractive about other women?\" she asked. \"What first attracted you to Sally?\"\n\nHe chuckled. \"Her tits if I'm being honest.\"\n\nSam giggled and a long silence fell between them. \"Well, do you like mine? I know they aren't as big.\"\n\nDane was quiet for a few seconds but did eventually respond. \"Very much,\" he admitted. \"This isn't a line either, but I actually like yours more.\"\n\nShe bit her lip again to keep from squealing in girlish glee and collected herself. Clearing her throat, she continued, \"Come on! Hers are so much bigger!\"\n\nHe shrugged again. \"I like what I like. I mean, look,\" he said, and she almost cried out in surprise when he reached up and dropped his entire hand down over her left breast. \"Yours are the perfect size.\"\n\nHe squeezed the pale flesh meaningfully. \"It's not so big that I wouldn't be able to play with all of it...\"\n\nHis fingers pushed gently into the flesh and stroked across, then returned to their starting points.\n\n\"...It's not too small that I can't get a nice grip on it for when... well... you know,\" he said, his fingers tightening and pulling the whole orb downward.\n\n\"Like I said. Perfect,\" he said, squeezing and caressing it for a few more seconds before returning the hand to its spot behind her back. \"What about you? Do you like your breasts?\"\n\nShe nodded immediately.\n\n\"So... are they sensitive or is it more of a visual thing that you like about them?\" he asked.\n\n\"Oh, they're sensitive, for sure,\" she said, her arousal coming quickly to a boil. \"But I also love the effect they have on people.\"\n\nHis expression looked to be one of happy contentment, and she couldn't have been more excited that he wasn't freaking out.\n\n\"Yeah, we tend to get stupid when we see titties,\" he said, causing her to smile. \"But it's nice that yours are actually sensitive. I've dated some girls that aren't turned on by breast play.\"\n\nDirty ideas kept popping into her head, and she didn't have enough focus to stop them all, thanks to her surging arousal.\n\n\"Here,\" she said, reaching up and cradling the back of his head and she scooted to sit sideways on one leg. \"Watch what happens.\"\n\nShe pulled gently, drawing his face toward her chest as her heart threatened to pound right out of her body. He didn't pull away though, and she was encouraged enough to keep pulling until she'd pushed her nipple into his open mouth.\n\n\"Suck,\" she said quietly, and he did as she commanded, his mouth and tongue warm on her skin as she stared down in pure awe of what was happening.\n\nHe slid back a second later and smiled as she looked down, one nipple was clearly much more erect than the other, though it was swollen with excitement as well.\n\n\"Damn that's sexy,\" he said, reaching up to briefly squeeze both in his fingers.\n\n\"Thanks,\" she said, trying not to blush.\n\nShe knew that if it wasn't for her rampaging arousal, she would feel like such an idiot and be extremely embarrassed by the situation. She had to keep this going though and looked back at him. \"So, what else do you like?\"\n\n\"About you?\" he asked.\n\n\"Mmmhmm,\" she said. \"Do you like the way my butt looks?\"\n\nIt sounded much sexier in her mind than it did coming out, but she couldn't do anything about taking it back. Luckily, it didn't seem as awkward to him as it did to her.\n\n\"Hell yes,\" he said. \"I know some girls think they have a fat butt, but yours is nice and cute.\"\n\nShe looked behind her and then back at him, raising an eyebrow in mirthful suspicion.\n\n\"Seriously,\" he said. \"Here... lay on your stomach.\"\n\nShe didn't hesitate in the least at his request and slid her legs under the sheets as she turned over and lay flat. As she looked back over her shoulder, he moved to a sitting position and reached over to squeeze one butt cheek and then the other. Then to her ultimate surprise, he spanked her hard enough to make a rather loud slapping noise.\n\n\"So damn nice,\" he said, grinning widely at her as he rubbed the spot he just spanked. \"It's bouncy as hell and feels nice when you push it up against me; even when it's cold.\"\n\nShe giggled and turned to face him again as he slid back down under the sheet next to her. \"My butt isn't cold!\" she protested.\n\n\"Sometimes it is,\" he shrugged. \"I don't mind though. Cold is never good for erections, which is a good thing for us.\"\n\nShe snickered and couldn't help but notice the hard flesh of his cock teasing her by pushing against her stomach again.\n\n\"I figured you'd like my butt because it makes a nice cozy home for your friend there,\" she said, hoping and praying that she wasn't pressing him too much.\n\nHe laughed instead, and she began to wonder just how far they might go. \"Well yeah, but that's not really a fair contest,\" he said.\n\n\"Oh?\" she asked.\n\n\"No,\" he confirmed. \"Any time you even get near me, my dick gets hard,\" he admitted, and she couldn't help but smile. \"Sliding it between your butt cheeks is just asking for trouble.\"\n\nShe laughed and covered her face for a moment. She was trying to appear as if she were embarrassed or shy and not like the wanton sex object that she wanted him to use her as.\n\n\"Well, it's got to go somewhere when we do snugglebunnies,\" she said with a shrug.\n\nHe chuckled. \"Believe me, I've thought of a few places that I could put it.\"\n\nBiting her lip hard, she forced back a giggle and fell silent.\n\n\"What about you, Little Miss Nosy. What turns you on about me?\" he asked.\n\nShe sighed and shook her head, not looking up for a few seconds. Eventually she did, though, and saw him still looking at her waiting for an answer.\n\n\"I like the way your chest and arm muscles feel against me when we snuggle,\" she said. \"Plus, it's nice that you always seem to smell good.\"\n\nHe chuckled in the darkness but kept looking at her.\n\n\"Of course, there's always...\" she said. \n\nReaching down with one hand, she gripped the large, angry erection and squeezed as she looked up at him, his surprise clear. \n\n\"This,\" she said simply, and let go.\n\nAn amused grin came to him and he nodded silently for a bit as an awkward pause settled over them.\n\n\"Is it the size?\" he asked. \"Or how hard it gets maybe?\"\n\nShe bit her lip again and shrugged. \"It's... lots of things, I guess. I mean, you obviously have a really big dick.\" She looked up at him as she finished saying it and couldn't help but smile. \"But... it's also the fact that you're my brother. It's... naughty.\"\n\n\"Very naughty,\" he confirmed. \"Am I the biggest you've seen?\"\n\nShe wanted to tell him yes but knew that he'd think she was being sweet and could easily tell when she was lying.\n\n\"Almost,\" she said. \"Without going into too many details, Kara's boyfriend Duncan has a really big one.\"\n\n\"Oh?\" Dane said, a surprised smile on his face. \"Well, good for Kara.\"\n\nSam giggled. \"Other than that, I...\" she hesitated and looked up at him. He reached up and brushed a hair from her face in that moment and she smiled, realizing that if she couldn't trust Dane, who could she trust?\n\n\"Toni let me watch two different times when she sucked Wade and Bryce off,\" she said, blushing as she admitted it.\n\n\"Really?\" he asked, amused and surprised. \n\n\"Really,\" she confirmed.\n\n\"Toni and Alex... really do share everything,\" he said after musing quietly for a few seconds.\n\n\"Anyway, you're just as big as they are, if not bigger,\" she said. \"But Keith wasn't all that big, and he was able to... well... you know...\"",
        "He chuckled. \"Yeah, I know that size helps but isn't everything. I'm just glad I have what I have.\"\n\nShe smiled happily and moved close to him again. A few minutes of comfortable silence passed between the two before she spoke again.\n\n\"I'm really glad that you're here,\" she whispered.\n\n\"Me too,\" he said.\n\nThe menacing presence of his cock continued to give her fits and she knew she wasn't going to be able to sleep with it distracting her like it was. She didn't want to kick him out and didn't really know what to do about making it go away.\n\nAs if he were reading her thoughts, he sighed deeply at that point. \"Sorry,\" he said. \"I told you that it would be a problem.\"\n\nShe giggled quietly. \"I don't mind it, but it's definitely distracting.\"\n\nHe nodded and pulled back a bit, to her dismay.\n\n\"Why uh...\" she said suddenly, desperate for a way to make him stay, \"why don't you take care of it?\"\n\nHe was silent for a second before he burst out laughing. \"You want me to jerk off right here?\"\n\nShe felt ridiculous for the idea and sighed. \"Well... you were going to leave,\" she admitted. \"I want you here.\"\n\nThere was a long pause of silence before he smiled and kissed her on the forehead. \"Don't worry. I'll stay.\"\n\nHappily, she pulled him back up to where he'd been before, his erection sliding up the skin of her stomach and resting between them, sandwiched.\n\n\"See, we can do this,\" she said. \"So what if you have an erection? I'm just as turned on and we're fine. Right?\"\n\n\"Right,\" he said, smiling at her. \"We're fine.\"\n\nShe nodded and felt confident that they could finally try and fall asleep. Breathing deeply, she wiggled around a little until she got comfortable and fell still.\n\nMinutes ticked by, and she felt the gentle throbbing of his cock against her stomach. Thoughts of how much she wanted to do things to it filled her head, making it impossible for her to ignore.\n\nBut then, she had a moment of clarity. A single thought coalesced into being in her mind. As soon as it manifested, she knew she was going to be powerless to stop it. It crept up from somewhere amid the confused mass of emotional trauma and broiling arousal her brain was thick with and shone like a beacon atop a mountain.\n\nAn image came to her for just a few moments. She saw two of herself standing in darkened room, one beside the other. One of her was wearing dress clothes and looking like she was ready for church. The other was wearing much skimpier attire and looked much sluttier. Both were staring hard ahead.\n\nIt was Sam and Samantha, her two selves.\n\nAs she lay there in those few seconds, she saw Sam reach over and grab Samantha by the head and drag her down to the ground. Samantha didn't fight as she slid to her knees, her nice dress clothes suddenly morphing into a naughty schoolgirl costume, her hair tying itself into kinky twin ponytails. The image of Sam moved behind the kneeling image of Samantha, then both looked up slowly at her, the same look in their eyes.\n\nSilently, Sam pulled on her brother's hip, urging him over and on top of her as she moved up and spread her legs for him. In the same moment, she looked up and found his lips, her tongue pushing effortlessly into his mouth. His cock found space between the two, pressing menacingly against her pale flesh as she silently begged him to take her.\n\nHe broke the kiss and looked down at her, apprehension clear on his face. She reached between them to push the head of his cock down a few inches and saw his eyes close as his mouth opened in shocked awareness. The crown easily slid down across her mound, through her soaked lips, then nestled comfortably at her entrance. Incredibly, he continued to hold fiercely still.\n\n\"Sam,\" he said, opening his eyes and staring hard at her. \"I can't hurt you like this,\" he pleaded. \"Please.\"\n\nShe felt a tear slide from one eye as she stared hard back up at him. \"You could never hurt me,\" she whispered. \"Please.\"\n\n\"Sam,\" he protested.\n\n\"Dane,\" she shot back, staring hard at him. \"Don't you want me?\"\n\n\"More than I ever have before,\" he told her. \"But I don't want you to do this just because you can't stop yourself.\"\n\nShe felt another tear slide free and stared up at him, stunned that he actually thought that she would do that.\n\n\"Hey...\" he said quietly.\n\nShe shook her head. \"I want you so fucking bad,\" she whispered. \"But it's not just because I'm horny.\"\n\nHe leaned his forehead down on the pillow then and she stroked the back of his head. \n\nSighing, she knew then that it wasn't going to happen. \"It's okay, Dane,\" she whispered. \"We...\"\n\nHe lifted his head up and kissed her hard as a groan of surrender found its way out of him. At the same time, he drove the entire length of his cock deep into her, their rampaging, unchecked desire for one another finally coming to a head in that perfect moment.\n\n\"Nnnnguh!\" she cried out, her eyes going wide as she desperately clutched at him.\n\nThe realization of what was happening slammed into her, and she pulled at him in shock as he slowly drew his hips up before thrusting in hard again. Another grunt came, joined by a cry of pleasure and surprise from her.\n\nHe lifted his head up as his cock was buried completely inside her, the pleasure on his face as clear as anything she'd ever known.\n\n\"Are you okay?\" he whispered.\n\nShe nodded emphatically and pulled him back down, her arms going up to wrap around him while he started to plunge in and out of her.\n\n\"Please don't stop,\" she cried out softly. \"This is perfect.\"\n\nHe grunted in agreement and she whimpered in pleasure as she felt the beginnings of an orgasm approaching her. One hand crawled up under her head and held it up as he passionately kissed her, the other moving between them to squeeze her breast. The sensations she was experiencing were overwhelming. His incredible cock was forcing electricity through every cell in her body. Everywhere he touched felt like it was on fire, and she couldn't do anything but silently beg him not to stop.\n\nThundering heartbeats filled her body, a steady rhythm that matched the thrusting cock plunging again and again into her hungry pussy. He groaned and grunted with effort as he drove into her, his whole body seeming to clutch at her and pull her tighter.\n\n\"Oh God,\" she cried out, and felt him lift up a little and stare down at her intensely. \"Ungh!\"\n\nHer orgasm exploded into her and she had to fight to stay focused on him, but felt her body going weak as the incredible wave of pleasure washed over her. He had his mouth open in a look of shock, and she whimpered in pure happiness as she felt him thrust a final time before he started to cum inside her.\n\n\"Oh my God yes!\" she whispered, then forced herself to be quiet.\n\nHe grunted, thrusting hard several more times and kissing her desperately as she whimpered against him. Finally, he thrust deep a final time and collapsed on top of her, her arms going around him to pull him down even harder.\n\nLong minutes passed and neither spoke, though he kissed her sweat soaked skin in small circles every few seconds.\n\nFinally, he lifted himself up and looked down at her. Sensing the question coming, she smiled up at him.\n\n\"Yes,\" she said. \"Yes, I'm okay. Yes, I loved it. Yes.\"\n\nHe chuckled, sliding back down and kissing her again, the movement causing his hips to shift and his cock to wriggle around in her.\n\nGiggling, she pulled him tighter and felt the hard flesh slide in a bit more, a whimper escaping her lips as it did.\n\n\"You okay?\" he whispered.\n\nShe laughed. \"Yes, dammit. Are you?\"\n\nHe smiled and confirmed that he was with a quick nod. A moment later he looked futilely between the two of them, then back up at her, a grimace on his face. \"I, uh... figured that would make my dick go away.\"\n\nShe snickered and flexed herself, feeling the undulating effect of the muscle squishing the hard flesh inside her. \"Yeah, it feels like our friend is here to stay for a while. I can't say that I'm sad about that.\"\n\nHe chuckled and looked down at her again, a moment of silence passing between them.\n\n\"Are we going to be okay?\" he asked.\n\nShe ran a hand through the hair on his head and smiled happily at him. \"This is certainly going to make snugglebunnies more fun.\"\n\nAfter a few more seconds, he leaned down and kissed her once again, a soft whimper of affection escaping from her lips.\n\nSliding himself free, he collapsed down where he'd been before and lay still, watching her quietly as she smiled and stared up at the ceiling. Turning over she gave him a final kiss before she scooted over to the edge of the bed.\n\n\"I'm going to go clean up,\" she said. \"Are you going to be here when I get back?\"\n\n\"If you're okay with that,\" he said, smiling at her.\n\n\"I'd have to come and find you if you weren't,\" she replied.\n\n\"My own little stalker,\" he said.\n\nShe giggled and stood, walking naked from her bedroom toward the bathroom, her brother's cum oozing slowly from her pussy.\n\n***\n\nA few minutes of cleanup later, Sam paused and looked at herself in the mirror in the bathroom. Smiling, she couldn't help but giggle before turning and heading back toward her bedroom. She wondered if Dane would freak out if she woke him up the next morning with a blowjob.\n\nStepping out of the dim of the bathroom nigh light, she passed Toni's closed door and paused as she approached Alex's. The door was slightly ajar, and she'd heard something from within.\n\nCurious, she crept silently over to it and peered in.\n\nToni and Alex were known to sleep in the same bed, so it wasn't all that odd when she saw Toni in Alex's room. What did strike her as weird though, was that Toni wasn't in bed, and was actually kneeling next to it. Sam saw Toni leaning close, then realized the noise that she'd heard had been her little sister whispering. \n\nConfused, she crept closer and listened. It was something being repeated over and over, some specific phrase. Alex was sound asleep, though, and Sam watched in confusion for a few seconds. Her interest piqued, she held her breath and crept even closer to try and decipher Toni's words. After a few seconds, she finally made out some of what was being said.\n\n\"Alessandra. You will not get upset when you think about the party. You will continue to not remember anything after dancing. You will think only good things when you think about Friday night.\"\n\nSam raised an eyebrow as Toni started over, crouched there in the darkness and whispering to her soundly sleeping twin.\n\nTiptoeing silently back to her room, she paused at the door as she tried to figure out what she'd just seen. The twins had always been a little weird to her, though, and she was too tired to worry about it that late at night. A yawn hit her to end the debate, and she promised to check in with them in the morning.\n\nEntering her bedroom, she smiled when she saw Dane still in bed. He was using his discarded underwear to clean up the mess he'd left on himself and as she locked the door and padded quietly over, she saw him toss them to the floor beside the bed. With quiet amusement, she saw that he was still moderately hard and had a good grip on the base of his shaft, playing with it idly.\n\nKneeling on the bed, she sighed and looked down at him.\n\n\"That's enough to make a girl think really naughty things,\" she stated, eying his erection hungrily.\n\n\"That's kind of the point,\" he said."
    ],
    "authorname": "Mentalcase",
    "tags": [
        "brother sister incest",
        "cum swallowing",
        "cumslut",
        "flirting",
        "blowjob",
        "submissive",
        "sister sister",
        "brother sister",
        "sister sister incest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/my-sister-made-me-ch-16"
}