{
    "title": "Secret Smiles and Three Little Words Pt. 31",
    "pages": [
        "Hello readers! I would like to thank all of you for following along with me, but after 250k words and 850+ pages it's time for a break. In this chapter Alex and Gavin take a sabbatical of sorts so I think I will join them. Not for forever, just for a bit. \n\nI love the fact all of you have taken the time to read my story and many of you have left feedback or sent an email to me with encouraging words or some helpful critique which I need as I do want to improve as a writer. I even enjoy the one reader who is constantly criticizing what a terrible story this is, hoping it will end or believing this story is about abuse. I would prefer 'constructive' feedback but if nothing else it pushes me to work harder. My only confusion is, if it is so horrible, why are you still reading 30+ chapters later? There are other stories, by much better writers, on this site to choose from! \n\nThis story is far from over but I need to take a break for a while. I have set my target date for September 1<sup>st</sup>, (my birthday) for my next posting. I may go back to writing before then, as this is a passion of mine and sometimes I think I am going to take a break only to be inspired to write, but I will just keep them on the computer until then. Instead I will have to do some editing of my next novel to be released, it has been put on the back burner as I have taken Gavin and Alex to heart. \n\nAgain, thank you so much for coming along with me, and while there will be a brief interruption in our story and time together, it won't be forever. Thank you from a humbled writer, I'm humbled to have you as readers! \n\nCJT \n\n***** \n\nChapter 37 \n\nAlex awoke with a start, the phone ringing had her jumping in the bed. It wasn't Gavin's cell so it was odd to hear the condo phone go off, with its loud angry shrill. \n\n\"Hey man,\" Gavin said sleepily as he pulled the phone to him. \"What?\" Gavin shook his head as she turned on the light next to the bed. \n\n\"Ok,\" Gavin said slowly. \"Ok, slow down!\" \n\nHe listened as Alex scratched her head and watched him. \n\n\"Dude,\" Gavin said but seemed he was interrupted. \n\n\"No,\" Gavin again tried to say something only to be cut off. \n\n\"If you will just shut up for a fucking minute I might be able to answer you!\" Gavin laughed. \"I've got you brat.\" \n\nThat told Alex all she needed to know, it was Pavel. \n\n\"Is Pavy ok?\" Alex asked immediately. \n\nGavin nodded as he continued to listen answering her question while listening to his friend rattle on. He pulled a note pad to him and began to scribble on it as Pavy continued to talk into his ear, Alex could do nothing but watch. \n\n\"I'm on it,\" Gavin said firmly. \"C'mon dick head, you know me better than that! I'm on it.\" Gavin laughed as Pavy said something that made him look at Alex and that had her wondering what Pavy said about her. \n\n\"You know you can always count on me,\" Gavin said firmly, he then laughed heartily. \"No, you still can't have her, she's all mine.\" He said this with a wink at Alex, again the two men were talking about her but leaving her in the dark. Judging by Gavin's eyes, the conversation was inappropriate. \n\n\"Alright,\" Gavin said standing up. \"I'll call you back in five hours, I should have some sort of update by then.\" Gavin smiled at whatever Pavy said then hung up. \n\n\"What's going on?\" Alex asked him. \n\n\"Pavy's med supplies were hijacked by the military,\" Gavin frowned. \"All the begging he just did for supplies a few months ago is now in the hands of the warlords.\" \n\n\"What's he going to use?\" Alex asked getting up. \n\n\"He's got a few days worth of supplies left, but he needs more,\" Gavin said leaving the room with Alex on his trail. \"I'm going to call in some favors, why don't you go back to bed?\" \n\n\"No,\" Alex said. \"Let me help, with the two of us we can cover more ground.\" Gavin shook his head as he knew better to argue with her. \n\n\"Ok,\" Gavin agreed. \"Call Madelyn, let her know what happened.\" \n\n\"What's Madelyn going to be able to do?\" Alex asked him pulling her cell phone up. \n\n\"Madelyn has friends all over, right now, I need some of them from the State Department,\" Gavin smiled. \"I'm going to wake up a few hospital directors and see what I can rustle up.\" \n\nBy dawn, they had both been on the phone for hours. Gavin with hospitals and local medical distribution facilities, Alex talking to Madelyn, who gave her a list of numbers to call. \n\n\"Ok,\" Alex said walking into Gavin's office. \"I can't get anyone to give me a meeting with the State Department, Madelyn says they should be able to get us there, but she doesn't know how much help they can be when we get there.\" \n\n\"That figures,\" Gavin nodded. \"I've got literally a ton of stuff for him so far, some of the medicines he wants are going to be tough, but I'm calling some pharmacology companies.\" \n\n\"Ok,\" Alex nodded. \"I'll deal with the State Department, you keep working on supplies.\" \n\n\"Alex,\" Gavin shook his head. \n\n\"You have to get that medicine,\" Alex said firmly walking towards the bathroom. Gavin started to follow her when the phone rang stopping him. \n\nHe caught her coming out of the bedroom forty-five minutes later, dressed in a formal business suit. \n\n\"Are you sure you're ok with this?\" Gavin asked her as he looked her over. \n\n\"How is the medicine coming?\" Alex asked letting him drink her in, not answering his question except with her demeanor. Brushing it off as she didn't want to argue with him for that would go against her desire to be submissive. If she didn't vocally argue she was still holding true to that promise, wasn't she? \n\nShe watched him judge her outfit and frown, this was not an outfit he would have approved of as it was stiff and formal. But she was heading to the State Department local office and she wanted to appear professional. She couldn't walk in looking like Gavin liked her, skin showing and sexy. \n\nAlthough the thought did cross her mind to use her sexuality to get someone to talk to her. She then figured, with her luck, the one person who could help her would be a feminist, and totally disapprove of her sexy attire. \n\nSo, she went business like, striving for looking professional. She hoped she was making the right decision. According to Madelyn, the only branch of the government that could help, was the State Department. So this was the only shot they had of getting the medicine to Pavy in a hurry. \n\n\"I have Merc, Novartis and Roche scrambling to put something together for me,\" Gavin said with a smile. \"It's a good start.\" \n\n\"Ok, well keep working, a good start is a lousy finish,\" Alex said grabbing a light jacket. \"I'll be back when I can.\" \n\n\"You are not going to just walk in and get a meeting at the State Department,\" Gavin warned her as he shook his head. \n\n\"I'm not leaving without talking to someone,\" Alex said firmly. \n\n\"Get ready for the run around,\" Gavin said with a tilt of his head. \"I'll work on a backup plan while I wait.\" \n\n\"Good deal,\" Alex smiled. \n\n\"Hey,\" Gavin stopped her. \"Thanks.\" \n\n\"I love you,\" she smiled and blew him a kiss. He gave her a wink then went into his office as the phone rang. \n\n*** \n\nAlex had been sitting in the Jackson Avenue Office waiting for nearly four hours. Gavin had texted several times but Alex was getting the run around that he warned her about. She was trying to be patient, but this was starting to piss her off. How long does it take to talk to one person behind the desk? She was about to get up and go bother the receptionist again as that had been the only thing she had been able to accomplish today. Annoy the only person she had been able to see. \n\n\"How long have you been waiting sweetie?\" Alex turned and saw Madelyn standing there. \n\n\"Four hours,\" Alex said standing and hugging the woman. \"Did you have any luck on your end?\" \n\n\"Yes,\" Madelyn smiled. \"C'mon it's time to press some buttons.\" \n\nThe two women walked up to the receptionist and she grimaced as she saw Alex coming up again. She was tired of telling the woman that there was just no way anyone, would see her without an appointment. The receptionist admired her persistence, but it was making for a long day for her. \n\n\"I'm here to see Ashton Waltz,\" Madelyn smiled pleasantly. \n\n\"As I told Ms. Lasko...repeatedly,\" the receptionist began again. \"Without an appointment it's just impossible to see anyone! Let alone the Director!\" \n\nMadelyn nodded but paid little mind to the woman behind the desk, as she was busily tapping away at her phone. She then smiled and waited while looking at the woman. \n\n\"Really, I'm sorry, there is nothing I can do,\" the woman said apologetically. Madelyn nodded never dropping her smile, the phone rang at the desk. \"Excuse me.\" Madelyn nodded as the woman answered her phone. \n\n\"You have really been here for four hours?\" Madelyn gasped. Alex nodded, it seemed that Madelyn was in complete control but Alex was losing her patience. \n\n\"It's so nice spring is coming, isn't it? Not as nice as I hear your Bahama trip was, but it will be nice to see you keep that tan you have,\" Madelyn went on like she didn't have a care in the world. Alex blushed at the thought that Gavin had given Madelyn personal information similar to what Alex and given to Lena. \n\n\"Ms. Faultz,\" the receptionist said with an embarrassed smile. \n\n\"Yes?\" Madelyn winked at Alex. \n\n\"If you ladies will follow me,\" the woman said leading Alex and Madelyn through a door to the side. \n\n\"Are you kidding me?\" Alex growled. \"Less than five minutes?\" \n\n\"Baby, when you have been around as long as I have, you accumulate lots of favors!\" Madelyn explained taking Alex by the arm and hooking hers in. \n\n\"How?\" Alex asked her. \n\n\"I happen to know the Chairman of the Armed Service Committee,\" Madelyn smiled. \"Who just happens to know the Director of Foreign Intelligence, and he just happens to be having a meeting right now with the Secretary of State.\" \n\n\"Name dropper,\" Alex teased. \n\nOk there was no way Alex had the ability of Madelyn she frowned. Madelyn knew politicians! Alex barely voted, never listened to a political debate and wouldn't know a politician if she was introduced to them. \n\n\"Ms. Faultz,\" the local director smiled shaking her hand. \n\n\"This is Ms. Lasko,\" Madelyn said firmly. \"She had been waiting for four hours!\" \n\n\"I'm sorry, but we are really busy today,\" he said taking the reprimand in stride. \n\nAlex wanted to gripe about the fact he just dropped everything to talk to Madelyn, but didn't want to ruin what little shot they had with a temper tantrum right now. If this didn't work she would have plenty of time to scathe the man in this room. \n\n\"What can I do for you Ms. Faultz?\" the director asked. \n\n\"Absolutely nothing,\" Madelyn smiled pleasantly sitting down. \"It's Ms. Lasko that's in charge.\" Madelyn smiled patting Alex's hand, the man looked to Alex. \n\nAlex explained everything to the man who seemed to be perplexed as to why he was having to hear this. \n\n\"I'm not exactly sure what you think I can do for you,\" he finally said after Alex finished and looked at him as if to say, 'how do you plan on fixing this'. \n\n\"Well, I need to arrange a flight from the U.S. to Africa,\" Alex said shaking her head. Was this the reason this country was so confounded? Everything had to be spelled out, letter by letter? \n\n\"It sounds like you need a cargo company,\" he said leaning forward. \"Customs and the like.\" \n\n\"No,\" Alex said in a near growl. \"You're not hearing me! That would take weeks if not months!\" \n\n\"I am sympathetic,\" the man began. \n\n\"Pavy doesn't have that type of time!\" Alex interrupted. \"He has enough supplies to get him through a couple of days, with the war spilling over the boarder he is dealing with thousands of refugees!\" \n\n\"Again, I'm not sure the State Department...,\" \n\n\"You can supersede the whole customs thing,\" Alex told him. \"In times of emergency you can deliver medical supplies without the normal red tape.\" \n\n\"That is in times of disasters,\" the man explained. \n\n\"What the hell do you call a war?\" Alex asked him, the exasperation filling her voice. \"A normal occurrence?\" \n\n\"Africa is not considered a disaster,\" he explained calmly. \"It is in the midst of a civil war that has been going on probably longer than you have been alive.\" \n\n\"People are dying, people that have nothing to do with the war!\" Alex said her temper rising. \"Women...children!\" \n\n\"Ms. Lasko,\" he said with a deep sigh. \n\n\"Do you like your job?\" Madelyn asked after being quiet letting Alex work. She was enjoying watching Alex's passion. The way she was determinedly going after this man and not letting him break off into his diatribe of what he couldn't do. \n\nShe loved Alex's tenacity, it would serve Alex well when the time came. Madelyn knew Gavin, and only Alex's tenacity would keep him on the path of what Madelyn wanted, and that was him settled down with a family. \n\n\"Excuse me?\" he gasped. \n\n\"What I mean is, is Chicago where you really want to be?\" she asked. \"From what I understand you want a foreign post?\" \n\n\"Yes,\" he nodded with a smile, seeing where she was going. He leaned back into his chair and watched her. \"Are you saying you have some ability to help facilitate that?\" \n\n\"Are we not sitting in your office?\" Madelyn smiled, intimating that by that fact alone she had some clout. \"I'm assuming someone above you called?\" He nodded with an appreciative grin. \n\n\"Help Alex now,\" Madelyn smiled. \"I'll make a few calls, I have lots of markers out. I'm an old woman so I might as well start calling some in.\" \n\nThe man looked at the woman admirably for a few moments. He then shifted his eyes to Alex. \n\n\"What exactly do you need?\" he smiled. \n\n\"I need a plane,\" Alex said matching his smile. \"Preferably a military plane, a big one!\" \n\n*** \n\nWalking out of the State Department office Alex looked to Madelyn in disbelief. \n\n\"What the hell?\" She smiled shaking her head at the woman. \n\n\"This is politics sweetie, which is what my late husband did,\" Madelyn smiled. \"I became quite adept at dealing with these type of men. I even began to make my own maneuvers after a while as it seemed even the wife of political shaker had some sway.\" \n\n\"I had the shaker that politicians wanted, and as his wife, I had him exactly where I wanted. So to get to him, some came through me, which benefited all. That is why I have been at many State dinners in both Springfield and D.C. I still have a lot of friends in...well, a lot of different places. Markers sweetie, favors, that is the currency of politicians. Money gets you elected, markers get you re-elected.\" \n\n\"There were many people that needed my husband's help moving up and around!\" Madelyn said proudly. \"He accumulated lots of markers and after his death, those transferred to me, as some of the things he did, well let's say there are certain people that would be better off if those favors didn't come to light!\" \n\n\"You're amazing!\" Alex laughed hugging her. \n\n\"Now, you owe me a marker,\" Madelyn smiled. Alex pulled back. \"Oh yes, sweetie, nothing in life is free, if I am going to call in some markers I have to get a marker in return. That's how you stay relevant in this game. So to call in markers, I have to get one as valuable, and that is you.\" \n\n\"I'm not in politics!\" Alex gasped. \n\nShe had no idea how she would be of any use to Madelyn in this world of deals. She was an artist and a substitute teacher, she had nothing to contribute to the world of politics! \n\n\"No, but now you owe me a big favor,\" Madelyn shrugged. \"That's the nature of it.\" \n\n\"What do you want?\" Alex asked her, surprised at the heavy handed statement. \n\n\"Nothing right now,\" she smiled. \"But soon...I will want something from you.\" \n\n\"What if I can't pay it?\" Alex asked her. \n\n\"You will pay it, this is not something you can welch out on, Dear,\" Madelyn said firmly as Charles pulled the limo door open. \"You will have to find a way to give me exactly what I ask for. If that means you have to owe someone else for that, then that is your problem.\" \n\n\"Madelyn!\" Alex gasped. \n\n\"Bye Sweetie!\" With that Madelyn closed the door. Alex watched the car pull away with a slack jaw look of disbelief. \n\n\"Why do I feel like I just made a deal with the devil?\" Alex asked herself. \n\n*** \n\n\"Hey!\" Gavin said meeting her in the living room. \"I was starting to get worried!\" \n\n\"I got the run around,\" Alex said as she tossed her jacket haphazardly to the side. She was still deep in thought at what Madelyn had said. What happens if she can't pay Madelyn back? Would that ruin their friendship? Would it ruin Madelyn's relationship with Gavin, which would in turn ruin her relationship with Gavin? \n\n\"What's wrong?\" he asked her rubbing her shoulder as he put his hands on them. \n\n\"Madelyn showed up,\" she told him with a worried brow. \n\n\"Yeah, she called and I mentioned you were going down there,\" Gavin shrugged. \"So she showed up?\" \n\n\"Yeah,\" Alex nodded. \"If she hadn't...I guess I'd still be there...she says I owe her a marker?\" \n\n\"Uh-oh,\" Gavin frowned. \"You know that never ends well.\" He smiled. \n\n\"This is not funny! What if I can't come through for her?\" Alex gasped sitting down the couch. \n\n\"She won't ask for something you can't do,\" Gavin assured her. \n\n\"Do you owe her any markers?\" Alex asked him. \n\n\"Absolutely not!\" Gavin laughed. \"I don't make deals with the devil!\" Alex laughed because he was laughing and she had made a similar statement. At least they were thinking like a couple, both on the same page. \n\n\"How did your day go?\" Alex rolled her eyes. \"Seeing how you didn't have to sell your soul!\" \n\n\"Well, the Pharmaceutical companies aren't much better, but they are coming in big,\" Gavin smiled. \"They should, as I have contacts in just about every major hospital...so they were eager.\" \n\n\"So we have all we need?\" Alex smiled. \n\n\"We have a bulk of it,\" Gavin nodded. \"Shit, it's time to call Pavy!\" Just then Alex's phone went off but she didn't recognize the number. \n\n\"Hello?\" she asked apprehensively. \n\n*** \n\n\"You still have him on the phone?\" Alex asked coming into the office after Gavin had been on the phone with Pavel for ten minutes. Gavin nodded and pushed the speaker phone on. \n\n\"Hey Pavy!\" Alex called out. \n\n\"Hey Beautiful!\" Pavy called out. \"I hear you got the same run around I did!\" \n\n\"Were you successful?\" Alex asked him. \n\n\"No chance!\" Pavy fumed. \"I'm not an American citizen, so that didn't help at all...I think in some corners of your government they still believe the cold war is going on!\" \n\n\"Well, I'm learning that to do anything in this world you have to give and take markers!\" Alex smiled. \"So now you owe me one!\" \n\n\"Oh how I would love to pay that off!\" Pavy flirted. \n\n\"Back the fuck off my girl you piece of shit!\" Gavin warned jokingly. \n\n\"Oh shit,\" Pavy laughed in tease. \"I thought I was just talking to her, didn't know you had me on speaker phone!\" \n\n\"Keep your slimy hands to yourself!\" Gavin said with a smile and a shake of his head. \n\n\"Ok,\" Alex continued after she stopped laughing. \"The State Department is giving us a military transport plane...they said that way it is protected by the U.S. Government. That includes any cargo inside.\" \n\n\"Sounds fantastic!\" Pavy said with a deep relieved exhale. \n\n\"Sorta,\" Alex frowned. \"The problem is, once the cargo is offloaded...it is no longer protected.\" \n\n\"Shit,\" Pavy growled. \n\n\"Which means the military there can do exactly what they did before,\" Alex explained. \"Now if someone can meet the plane, then the cargo will be signed over to them, then that person will be protected by the U.S. Government as a courier. Meaning they will have some sort of weird quasi-diplomatic status.\" \n\n\"So somebody needs to be there,\" Pavy said finishing up Alex's thought. ",
        "\"Not where you are, the plane can only go to Nairobi,\" Alex grimaced as she said this, she knew it wouldn't be well received. \n\n\"Alex, honey,\" Pavy gasped. \"Do you know how far away Nairobi is from me?\" \n\n\"Yeah,\" Alex closed her eyes. \"The State Department will not send a military plane into a combat area, it would put the government in a precarious position. If the plane were to be shot down, it could be considered an act of war.\" \n\n\"Fuck,\" Pavy growled. \n\n\"Look Pavy,\" Gavin came in. \"There is nothing else we can do, you have to meet the supplies or it's more than likely you will lose this shipment as well!\" \n\n\"I know,\" Pavy said softly. \"It's just the time it would take to get there, and then back, the fact I'm basically by myself here! I just might as well count on fifty to a hundred dead, Christ...if not more!\" \n\n\"Pavy,\" Gavin frowned. \"Would you rather lose a hundred? Or thousands without the supplies?\" \n\n\"Fuck you,\" Pavy barked. \"Can you make that decision?\" \n\n\"No,\" Gavin frowned. \"Look do you have anybody there trustworthy enough to go in your place?\" \n\n\"Yes and no,\" Pavy sounded like he was exhausted and pissed. The phone was silent for a while. \n\n\"Pavy, we have no choice, send who you have,\" Gavin finally said. \"We will just have to hope for the best!\" \n\n\"Yeah,\" Pavy grumbled. \"Hey, thanks you guys, I don't want to sound like I'm ungrateful, I just...man this puts me in a bind!\" \n\n\"I know my brat,\" Gavin agreed. \"What else can we do?\" \n\n\"Ok,\" Pavy said trying to sound more upbeat. \"Alex when can the plane be here?\" \n\n\"The plane is already on its way to Chicago, so as soon as it's loaded, he said about 27 hours,\" Alex said. \n\n\"Figure three days, Pavy,\" Gavin said. \"I have the supplies coming into Midway airport, then they will load and leave.\" \n\n\"Three days,\" Pavy repeated. \"Then another three days from Nairobi to me...six days.\" \n\n\"Pavy?\" Gavin said interrupting the Russians thoughts. \"What else can we do for you?\" \n\n\"You done so much now, I hate to ask for anything else,\" Pavy said with a sigh. \"Thank you both so much...Alex, whatever you want sweetheart, it's yours!\" \n\n\"I'm holding you to that!\" Alex smiled. \"Pavy? You be careful there, it will work out!\" \n\n\"If you knew just how much of a long shot that was...given my circumstances!\" Pavy tempered. \"Love you guys! Gavin kiss her good for me, and Alex take care of the lout for me!\" \n\n\"Will do,\" they said in unison. \n\n*** \n\nGavin was staring out the window when Alex came back in from getting takeout food for dinner as neither felt up to cooking. \n\n\"Hey,\" he smiled. \"I thought you got lost!\" He teased as he complained about the time she was gone. \n\n\"I have an idea,\" Alex smiled broadly. \n\n\"Ok,\" he said stopping his advance on her as she pulled out a little blue booklet. \"Fuck no!\" He barked shaking his head to show he was doubly sure that her idea was a bad one. \n\n\"Pavy needs us,\" Alex said still holding up her passport. \n\n\"Absolutely not!\" Gavin barked. \"This isn't some fucking little vacation spot! This is a Goddamn war zone!\" \n\n\"I know,\" Alex said dropping her hands. \"You heard Pavy! He is in a bind! It sounds like he is there all by himself!\" \n\n\"Alex! I...,\" Gavin looked to the ceiling. \n\n\"He needs you,\" Alex said firmly. \"Thousands of people's lives are at stake here!\" \n\nShe crossed the living room and took hold of his face and tilted it down to look at her. \n\n\"You said you wanted to make a difference,\" Alex reminded him. \n\n\"What?\" \n\n\"That day, we were at the opening of the Expo, you were sitting on the bench and you said you wanted to make a difference!\" She reminded. \"You said I touched more lives in the matter of a few hours than you did in all that you were doing.\" He nodded that he remembered. \n\n\"This is your chance to make a difference,\" Alex said kissing his lips. \"I know...I know this isn't what you had in mind, but rarely does life give us the choice of how we make a difference!\" \n\n\"I can't,\" Gavin shook his head. \n\nAlex dropped her head, she knew he would come up the same old argument of leaving his patients. But Pavy was right, they were inconsequential compared to what a war was doing to people. \n\nThe patients Gavin had were dealing with sex injuries from kinky sex, and health problems brought on by poor eating habits, drug use, heavy drinking and smoking. The occasional sports injury due to men who still believe they are in their twenties instead of fifties. \n\nIn the year they had been together, only Madelyn's stroke seemed to be non-self inflicted. An injury that deserved his attention, the others only used him to keep their secret in the dark, or because they were rich enough to show off that they had a private physician. It was a status thing. She knew to get him on the plane, to help him help himself, she had to do something dramatic...but this could backfire big time! \n\n\"I'm going to Nairobi,\" Alex said firmly hoping this didn't blow up in her face. \"I'm going to make sure he gets those supplies, now I know there is no way in hell you are going to let me go there by myself. So why are we even arguing about this?\" She smiled as she tilted her head up to peek at him. \n\n\"You are quite the piece of work!\" Gavin gasped. \n\n\"Oh, one little thing,\" Alex smiled. \"I was doing some research and I don't think you can wear your Armani suits there!\" This got Gavin to laugh. \"So it looks like we are shopping tomorrow!\" \n\n\"My, my,\" Gavin said shaking his head. \"Who is the Dom again?\" \n\n\"You are, Sir,\" Alex tilted her head down. \"Yet you are getting on the plane with me!\" He closed his eyes and nodded. \n\n*** \n\nAlex was loading up boxes onto a pallet two days later when Gavin came over to her. \n\n\"What's all that?\" he asked her. \n\n\"Candy,\" Alex smiled as she blew out a breath. \"You are going to be giving inoculations, right?\" He nodded. \n\n\"Then the kids deserve a sucker for it!\" Alex smiled. \n\nWhile Gavin went shopping for appropriate clothes for the African heat, she went to one of the warehouse stores for cases of suckers and other non-melting type candies. She wound up with two car loads of various candies that Lena had to come help her transport from the store to the airport. \n\n\"You are incredible,\" Gavin said taking her in his arms. \"I hadn't even thought about stuff like that!\" \n\n\"You had more important stuff to worry about!\" Alex told him. Just then his phone rang and she rolled her eyes. She hoped it wasn't some last minute patient crisis that would cause him to guilt up that he was leaving them again. \n\n\"Wheels up, they said, in ten minutes!\" Alex said laughing as she used the military lingo the men and women loading the plane were using. He nodded at her, she hoped she would be laughing after the phone call. \n\nSitting in the passenger area of the plane she watched him double check the supplies that were in the cargo area. \n\n\"Dr. Steward?\" the Air Force Captain called out. Gavin waved at him. \"We are ready if you are.\" \n\n\"Let's go,\" Gavin shrugged. \"Is there a passenger area?\" \n\n\"The whole plane is pressurized, so anywhere you want to be will be fine, just don't open any doors!\" The Captain joked. \n\n\"Probably ought to tell that one!\" Gavin pointed. \"She is the trouble maker!\" He teased. \n\n\"Well,\" the Captain shrugged. \"This is a military plane, with weapons. If she gets out of line, let me know.\" \n\n\"I assure you, she will be out of line,\" Gavin snickered. \n\nHe sat next to her and she leaned into him. \n\n\"Pavy is going to shit when he sees you!\" Alex smiled. He was joking and giving her a hard time, so that meant the phone call wasn't a last minute hiccup. \n\n\"More likely about you!\" Gavin countered. \n\n\"No, he said he needs a surgeon,\" Alex smiled. \"He told me if he ever got you there he would work you ragged!\" \n\n\"That last call was Pavy's dad,\" Gavin smiled. \n\n\"Is he alright?\" Alex asked. \n\n\"Yes, he used to work for the U.N., remember?\" he asked her and she nodded. \n\n\"Well, he is going to have the U.N. troops escort us to Pavy,\" Gavin smiled. \"It seemed the old man was worried about me going into a war zone, so he wants to make sure I'm ok. He called some of his old buddies from the U.N. and they agreed to help out.\" \n\n\"What about Pavy?\" Alex asked him. Gavin shrugged. \"Really? Oh man, that's funny!\" \n\n\"He always liked me better!\" Gavin smiled. \"Did you know when he bailed us out, he bailed me out first, then waited fifteen minutes before getting Pavy!\" \n\n\"Ok,\" Alex said shaking her head. \"I want to help, so show me something that will let me help when you guys need it!\" \n\n\"I don't know,\" Gavin said shaking his head. \"I don't know what he has, what he doesn't...I just flat out have no idea what we are walking into there. You will have to learn on the fly!\" \n\n\"Well we got twenty seven hours of nothing to do,\" Alex told him as the massive plane began to move. \"Show me what supplies we have, the names, if nothing else I can be a gopher. I can get you and Pavy bandages and instruments.\" \n\nGavin nodded as he kissed her. They spent hours going over the supplies, both the technical terms and the medical lingo term. Alex made notes and was a quick learner, Gavin wasn't surprised in the least when she was. She seemed to be able to absorb anything, if she set her mind to it. \n\n*** \n\nAlex was walking in the cargo area, pulling out her sketch book to do some drawing while she was doing nothing on the plane. Gavin handed her a cup of coffee. \n\n\"Thanks,\" she smiled. \n\n\"You know,\" he smiled touching her face. \"I had you on Madelyn's plane and there is something I have always wanted.\" \n\n\"A little clich\u00e9 isn't it?\" Alex laughed as he pulled her back towards the cargo netting. She had the same thought but believed he would laugh at her for wanting to join the 'Mile High Club'. She should have known he would use his Jedi powers and know she wanted this, another sexual bucket list item to check off! \n\n\"Yes,\" Gavin said. \"But I don't care.\" \n\nHe began to kiss her, pushing her against the cargo netting. She let her hands pull his head into her lips tighter, she loved the ability to touch him. He had given her two terrific gifts for her birthday, the trip to the island where she would spend some much wanted alone time with him, and then, permission to touch him whenever she wanted! \n\nShe smiled as he lifted her wrists up and twisted the netting around her hands. One, then the other until she was spread out. She watched him with a gleam in her eye, she had thought about this herself. This would be a much better way to pass the time! She also found it humorous that while he had given her permission to touch him, he still found ways to drive her insane with making sure she couldn't touch him. Like the cargo netting used to bind her hands up and out of play. \n\nHe let his fingers start to move over her, starting with her face, gently moving down to cup her breasts through her shirt. His hands gently squeezing her soft mounds. He stared into her eyes, letting the blue in them infect his mind with pleasure. \n\nThe feel of her body made him shake his head, the softness of her flesh. The way her lips playfully called him in for kisses. The way she held her breath, the way her deep blue eyes sparkled their approval at him, made him want to devour her. To consume her whole, to possess her in ways no man had ever done. \n\nWhat was worse, is that he wanted to do it all at once! No woman had this effect on him. To turn him from a model of patience, to that of giddy high school virgin in the back seat of the parent's Chevy! Desperate to lose the stigma of being a boy who knew not of the pleasures of women. \n\nHe began to kiss her neck causing her head to turn to the side allowing him full access to Alex's soft, warm, delicious skin. His hands dipped under her shirt and he pushed it up until it revealed her soft mounds. He then lifted the bra up as well releasing them for his pleasure. They hardened immediately in the coolness of the cargo area. He let his thumbs brush across the top of them, letting them feel the hardness, their pebble like feel. \n\nHe dropped his head and took one nipple roughly between his teeth and bit, causing her to yelp in the sharpness of his teeth as it grated on her sensitive nipple. He released it and went to the other nipple, and attacked it with a similar ferocity, causing a similar response to that attack. \n\nHe used his hands, as his mouth worked her nipples, to undo the button on her pants. He gently ran his fingers inside her panties and pushed them down with her pants to where they were on the floor of the plane. \n\nHe came off her nipples to look at her in the eye, they sparkled with her approval and he matched her. He looked over her body as it washed with pleasured goosebumps. He let his teeth scrape along her shoulders and arms as he followed the bumps across her body causing her to suck in a breath and hold it. \n\nHe let his pants fall to around his ankles, then he slowly pulled Alex's legs from the puddle of blue jeans around her ankles. Pulling the blue jeans free and tossing them to the side so they were out of the way. He then stood back and looked at her one last time. Her shirt up and her breasts out, her nipples hard, rising and falling with her quickened breaths. Her legs slightly quivering, he couldn't tell if it was from the cold or excitement. Perhaps it was both. \n\nHer hips slightly angled as she leaned back against the crates behind her, her sex on display for his eyes. Her thin strip of dark pubic hair, neatly trimmed down to her sex. The lips of her sex, engorged with her excitement, wetting slightly. She was loving this, her body was telling him so. Then again, she was so into their sex lives that there wasn't anything he had found that she wasn't excited to do with him. \n\nHe moved closer to her and ran his hand down the side of her face slowly, letting them fall and run down her body to her hips where they slipped behind her to run down her ass which was firm under his touch. They went down, slowly, to the most exotic space he could think of, that slight curve of her ass where it met her thigh. \n\nOh how that made him weak, on days when she would stand at the closet deciding what to wear, in only her thong and that exotic place was there for his eyes to enjoy. That was his kryptonite. \n\nHe then ran his hands around her thighs to the front, gently brushing against her sex with his thumbs as he moved down the inside of her thighs now, down to her knees. He then scooped Alex up with her knees in the crooks of his arms as the thick straps of the cargo netting held her wrist above her head, he lifted her off the ground slowly as he stared into her eyes as he guided his cock to her entrance with his hips. \n\nHe found her sex with the tip of his cock and it was warm and moist, showing her excitement. He drove his hips forward slamming into her causing her call out in surprise at the way he entered her. She had expected him to slide in easily, but this was a hammer drive, causing their skin to meet with a slap and a yelp that filled the cavernous belly of the cargo plane. \n\nWith her legs in his arms, his hands cupped her ass and he began to pull on her to meet the forward thrusts of his hips. Slowly at first, after the initial thrust, but she shook her head at him. This wasn't what she wanted, nor was it what he wanted. So he began to bring her in harder to meet his thrusts. \n\nSoon she was biting her lip to keep from calling out in her pleasure, alerting the crew to their lovemaking. While her hands were high above her head, her sex angled to let his cock drive into her, it cocked her body at an angle that left her open to him. He ravaged her, his mouth sucking hard on her breasts and marking her with small purple hickies in several spots. \n\nHis hands gripped her ass roughly, pulling her cheeks apart as he used them to pull into his body causing their bodies to slap roughly as they fucked. He left her breasts and covered her mouth with his and their tongues danced with one another as he continued to plow into her there in the cargo netting. \n\nShe bit his lip with her orgasm flowing from her for the first time, her legs tightening in his arms as he held her up. Her eyes snapped tightly shut as she was unable to watch him in the midst of her orgasm. It seemed to force all her muscles to constrict at once when she was in the midst of her throes of pleasurable release. The scent of which wafted up to their noses, inspiring more desire. \n\nWhen her first orgasm subsided she began to flex her legs to help him, to bring her body into his harder, urging him faster and harder. The desire to have him cum making her crazy. \n\nHis legs began to shake, then they froze up holding him back from thrusting into her, but she was already riding him with her own strength, while he erupted in her with grunt as he squeezed her firm cheeks in his hands. He shuddered and filled her with his cum. Her own orgasm washing from her for her second of the session, at the same time, mixing with his seed as they climaxed together. \n\nWith their breathing erratic from their sex, she laid her head back and reveled in the fact he was unable to control himself around her. She let her smile coat her face as she felt his warmth in her, his cock still hard and deep within her body. She loved the fact that this controlled man became uncontrolled the longer they were together. She absolutely loved it! It seemed he just couldn't stop himself, nor did she want him too. \n\n*** \n\nGavin and Alex descended the rear ramp on the back of the plane just as a forklift had arrived and began to unload the supplies. They shielded their eyes to the bright African sun. They looked around the large airport to a young black man in white shirt, tan shorts and wire framed glasses who was looking over a clip board. He must have be just over eighteen. If that. \n\nHe was arguing with somebody from the Nairobi military. It was very animated as the two argued back and forth. Gavin was surprised that the young man was so forceful given the automatic machine gun the soldier held. It was obvious that whatever they were arguing about, the young man was willing to risk all. Just then a set of U.N. cargo trucks appeared. \n\nGavin touched Alex's arm in a silent command to stay put, as a couple of members of the flight crew ventured out of the plane to see who was arguing so forcefully. The stood next to Alex and watched as Gavin made his way over. \n\n\"What's the problem?\" Gavin asked the men that were arguing. Both men looked to him briefly only to look to Alex, who sort of listened to what Gavin intimated with his touch. She didn't venture all the way over, just halfway. \n\n\"Who are you?\" the Nairobi soldier asked. \n\n\"I'm Dr. Gavin Steward,\" he told them handing him his passport and papers that the State Department prepared for him. \n\n\"Dr. Steward?\" a man jumping out of the U.N. truck called out. \n\n\"Here!\" Gavin waved as he watched the demeanor of the soldier in front of him. \n\nThe arrival of the U.N. seemed to irritate the Nairobi soldiers as then U.N. men were also armed and with better weaponry. While most of the Nairobi soldiers had shotguns, or hand guns, only one or two had automatic rifles. The U.N. troops, hopping out of one of the large trucks, all had automatic rifles and they outnumbered the Nairobi troops two to one. \n\n\"I'm taking these supplies under the U.N. flag,\" Gavin told the soldier in front of him. \"If there is a problem we can call them.\" Gavin said holding up his satellite phone. \n\nThis was what Pavy's dad had told him to say if there was a problem. It was a semi bluff as the U.N. didn't have authority in Nairobi, but it was also an organization that if crossed could make life for the soldiers and the corrupt politicians difficult if they became interested in the happenings of their country. So for the most part, soldiers knew not to mess with anything related to the U.N. ",
        "\"No,\" the soldier said. \"Your papers are in order.\" The man said gruffly, he then barked at the soldiers that were standing around watching. They climbed into the back of a pickup truck and sped off. \n\n\"Dr. Steward?\" the young man smiled. \"That was about to be really hairy!\" The man said with a thick accent. \n\n\"I gathered!\" Gavin smiled shaking the man's hand. \"Are you Pavy's representative?\" \n\n\"Yes!\" the man smiled. \"But thankfully, it seems I was unnecessary! My name is Emem.\" \n\n\"Well Emem,\" Gavin smiled. \"We got a long way to go, so what's next?\" \n\nThe U.N. man arrived at Gavin's side. \n\n\"Look, see the gorgeous woman there?\" Gavin said to the soldier from the U.N. as he pointed to Alex. \"She is the boss, so get with her and figure out how this is to be loaded!\" The U.N. man nodded and went to Alex. \n\n*** \n\nGavin and Alex hopped down out of the truck as they watched Emem run off. They were both happy to be out of the trucks! What they called roads were areas just free of jungle! The holes from the rainy season were the size of Alex's old Rabbit and with each bone jarring jolt, they would crash into one another. After a day and a half of that, they felt like they had been in the octagon with Ronda Rousey. \n\n\"It's hot,\" Gavin gasped. \n\n\"Hey, it's the fall season here,\" Alex reminded. We are in the southern Hemisphere, so when it's spring in Chicago, its fall here.\" \n\n\"Hey, I don't care what season you say it is, its hot!\" Gavin complained with a playful smile. \n\n\"That's why I bought these shorts,\" Alex said modeling them for them. \n\nTurning a full circle on her toes, they barely covered the place Gavin loved, and that was the sole reason for her buying them. If she stood just right, or bent just right, she could make that area visible. Bringing a groan from Gavin each and every time she did it. Like climbing into the truck this morning as he followed her up. \n\n\"Look,\" he said with a scowl. \"These people haven't seen a girl like you, so let's not give the men with guns any ideas!\" \n\n\"A little worried about me?\" she smiled kissing him. \n\n\"In those shorts?\" Gavin admired. \n\n\"ARE YOU FUCKING KIDDING ME?\" The voice caused them to turn. \n\n\"Hey Pavy!\" Alex smiled. Pavel closed the distance and took her in a hug and spun her in a circle a couple of times happily before setting her down. \n\n\"How did you get him to come?\" Pavel asked her, stunned they were there. All the begging and pleading from him over the years could not get Gavin to come here. Now one woman seemed to have Gavin wrapped around her finger. \n\n\"I can get him to do whatever I want,\" Alex teased. \n\n\"In those shorts?\" Pavy chuckled as he stood back and held her arms out so he could look at her fully. \"I don't think you are going to have any problems getting anything you want, from anybody!\" \n\nPavy walked over and took Gavin into and embrace and held him firmly. \n\n\"Dad sent the troops with you I see,\" Pavy pointed out looking at the blue berets. \n\n\"He was worried about me coming into this little corner of paradise of yours,\" Gavin teased. \n\n\"Fucker,\" Pavy laughed as he let out a soft punch to Gavin's stomach. \"I guess we see how I rate!\" \n\n\"Somewhere right along with a pebble in a shoe,\" Gavin joked. \"Now, did I fly all this way to discuss why your father likes me better than you, or are there some other pressing problems?\" \n\n\"You are going to regret that statement! I was willing to let you take it easy today, but now...I'm fucking going to run you ragged!\" Pavy threatened as he turned and put his arm around Alex's shoulder and jerked his head for Gavin to follow them as he walked with Alex within his arm. \n\nGavin and Alex walked into the tent hospital. There were at least fifty people sitting on the ground. \n\n\"Jesus,\" Gavin gasped in disbelief. It looked like something out of a bad war movie, the smell wasn't much better. The smell of body odor, manure and decaying bodies wafted around them. \n\n\"Welcome to my life,\" Pavy frowned. \"This is the main hospital, we have a couple of tents for those we keep for observation.\" \n\n\"Is it always this full?\" Alex asked him. \n\n\"Unfortunately,\" he frowned. \"Yes. Here lately for sure, as it's just me, so I can't ever get caught up.\" \n\n\"It's been worse here lately, the more intense the fighting, the more people run,\" Pavy said with a shake of his head. \n\n\"Well,\" Gavin shrugged. \"Put me to work.\" \n\n\"Gladly,\" Pavy smiled with an appreciative clap on his shoulder. \n\n\"Me too,\" Alex smiled. \n\nPavy guided Gavin to a table that already had a woman on it. The bleeding she was doing was already coming through her top. Gavin took a peek under her makeshift bandaged and frowned. \n\n\"Not what you see back in Chicago, is it?\" Pavy noted Gavin's disproval of the wound. \n\n\"No,\" Gavin agreed. \n\n\"This is Luanna,\" Pavy said introducing a woman in scrubs. \"She is an excellent nurse, I'll have her assist you.\" Gavin nodded as he pulled a tray of instruments over, already fully engrossed in the job at hand. This had Pavy winking at Alex, they both loved that, when Gavin would switch modes. \n\n\"Luanna, this is Gavin Steward,\" Pavy said with a proud hand on his shoulder. \"The best doctor I know. Make sure you take care of him.\" She nodded. \n\n\"Pavy,\" Alex said to him. \"Where do you want me?\" \n\nHe looked to her and cringed. \n\n\"I hate to do this to you,\" he frowned. \"But I don't have time to deal with what you just brought in, which by the number of trucks alone is more than I get in two years! So, if you could, organize it and put it in the store room?\" \n\n\"Ok,\" Alex nodded as she looked at all the sorrowful faces in the room. She felt so sorry for them, they seemed lost. Their spirit broken. \n\n\"Emem,\" Pavy called out, the young man rushed over. \"Take Alex here and help her with the store room. Give her any helps she needs.\" He nodded. \"When this is all over, and I get a chance to breathe, remind me to thank you.\" \n\n\"You don't need to,\" Alex smiled stroking his cheek. \n\n\"Yes, yes I do!\" Pavy said firmly, there was a slight tearing up in his eyes as the appreciation of all she had done overwhelmed him. He left to go back to work. Alex looked to Gavin and he winked at her. She stretched to her tiptoes and kissed his cheek and followed Emem out of the tent. \n\n\"This is our store room,\" Emem said opening the door. \n\n\"Why is this is an actual building, but the hospital is a tent?\" Alex asked him looking at the empty shelves. \n\n\"We had to construct a building we could lock,\" Emem explained. \"Otherwise thieves would come in the night and steal our supplies.\" Alex nodded that she understood as she walked to the end of the building and found more emptiness than supplies. \n\n\"Where do you want to start?\" he asked her when she stopped and looked to him with a frown of her opinion of the lack of things they had. \n\n\"Well,\" Alex shrugged. \"Why don't you give me the inventory sheet for what you have here so we can do an accurate count, that way Pavy knows exactly what he has in terms of supplies?\" \n\n\"Inventory?\" Emem asked. \"We have never done an inventory.\" \n\n\"Ok, how about some paper,\" Alex asked him. \"We will start one. That way he can look at a detailed list of his supplies later.\" Emem disappeared and returned with paper and a clipboard. \n\n\"Well,\" she frowned not sure of how to start this, as this was never something she would have even thought she would have to do. \"It should be easy to count what we have on hand, as there is so little of it, so let's start with a count of that. Then as we bring something in, we will write it down and add it to the list.\" Emem nodded and went to the first shelf. \n\n\"Just call out what you have, then the number on hand,\" Alex said tying her hair up into a tight pony tail. The two began the tedious job of getting the store room in order. The heat of which already had her sweating through her tank top. The air unable to move around the enclosed room. \n\nIt took them a little less than an hour to organize and count what they had on hand, and it wasn't much. Then Alex organized the U.N. troops to start bringing in the supplies from the convoy of trucks in the compound. As each soldier would bring in a box he or she would stop and Alex would write on it with bold black marker what it was and what shelf she had assigned for it, they would then take it to Emem, who would store it. \n\nIt took nearly six hours to completely empty the trucks and store everything. By the time they were done, Alex was exhausted and had sweated through her tank completely and now had rivers of sweat running down her legs and dripping onto the ground. \n\nStanding at the door with Emem, they looked at the store room one last time. Now they had full shelves, with boxes on top of boxes. She even had to start stacking supplies against the back wall as she ran out of room on the shelves. Pavy would be thrilled as anything he could want or need, was now on hand. \n\n*** \n\nAlex went back to the main tent and found Gavin hard at work, but the smile he had was impossible to miss. Yes there were horrific injuries to deal with. Yes most of the wounded were children and women who had no business with the wounds they had, but it was obvious that Gavin felt some pride to be doing actual good for a change. Not dealing with what he believed were self-indulgent wounds of ego. He was back to doing what he went into medicine for in the beginning. \n\nAlex pulled up next to Luanna and began to observe how she worked with Gavin to help him. Luanna explained the instruments and covered the supplies Gavin was using, refreshing Alex's memory from the plane. \n\nPavy would walk by on occasion and kiss her on the cheek, only to keep Gavin riled up. Walking up to the next table had a young woman, who appeared in her late teens or early twenties, not much younger than Alex, she surmised. She had a crying toddler in her lap, who appeared injury free, but the mother had blood down the side of her face from her head wound. \n\nThe child was keeping Gavin from helping her. Alex came to his side and looked to the woman and pointed to the toddler and then to herself, but the woman shook her head apprehensively. \n\nThe interpreter came and explained to the woman that Gavin wanted to treat her but with the child in her arms that was going to be difficult. Alex sat on the table next to the woman and gently pulled the toddler. \n\nThe woman reluctantly allowed Alex to put the child in her lap. Alex produced a sucker and pulled the wrapper off and placed it in the child's mouth, within seconds the toddler's cries slowed to a sniffle. \n\nThe woman smiled at Alex in thank you, and Alex returned the smile as she rocked the child in her arms. Gavin shook his head, nothing his girl did surprised him totally anymore. She was just able to do anything. Impressed that even without the knowledge of language Alex was about to put the injured mother at ease. He smiled at the injured woman reassuringly and worked on her wound. \n\nGavin stitched up the wound and treated the woman for her other injuries she attained during her trek out of the war torn village she fled from. When Gavin was done the woman kissed his hand. \n\nGavin then turned his attention to the child in Alex's arms, giving him a cursory look. The child appeared to have no injuries but was suffering from possible malnourishment. He stroked the young boy's face and smiled at the mother as Alex passed him back. The mother took Alex's hand and kissed it as well. \n\n\"That's high praise,\" Pavy told them as they watched the lady leave. \"The kissing of your hands...it means a great deal here.\" They both nodded. \n\n\"Look,\" Pavy said exhaustedly. \"We have taken care of the most pressing cases, why don't you two call it a day, you look wiped out!\" \n\nThey smiled at him, they were tired. The long flight, coupled with days of traveling through the brush in trucks designed to jar your bones from their sockets had left them exhausted. \n\n\"Emem,\" Pavy called out and the young man appeared. \"Take them to Dr. Haus' tent.\" \n\n\"Dr. Haus?\" Gavin asked. \n\n\"Yeah, he had to return to Germany,\" Pavy frowned. \"We are still waiting on his replacement...that is unless I can talk you two love birds into staying?\" \n\n\"You know we want to, but we can't,\" Alex said for Gavin. \"But we aren't in any hurry to leave either!\" \n\n\"I'll take that,\" Pavy said kissing her on the cheek. \n\n\"Stop kissing my girl you nasty fiend!\" Gavin growled as he pushed the Russian back as the man laughed. \n\n\"Hey,\" Pavy said moving close. \"Have you seen what choices I have around here?\" \n\n\"Are you saying you are settling for me?\" Alex gasped, pretending to be offended putting Pavy on the defensive. \n\n\"What?\" he cried out. \"No! I mean...oh shit!\" \n\n\"Awww yeah!\" Gavin smiled. \"This is why you are still single! Can't keep that rat trap of a mouth closed!\" \n\n\"Go fuck yourself,\" Pavy growled as he walked away. \n\nEmem led them to a tent and let them enter first. It was a large tent, consisting of two rooms, one for a sitting area, and one for sleeping. It had an actual bed, which surprised them. They were expecting cots or perhaps sleeping bags on the ground but this tent had an actual bed and both looked to the other relieved as this was a very welcome sight. \n\n\"Ok,\" Emem smiled. \"This is your place for now. A couple of ground rules...one, if you take your shoes off, be sure to shake them out in the morning! All kinds of nasty critters running around here. They like to climb in boots and shoes, then when you put them on, they can kill you. So look...shake and look again!\" \n\n\"I would put them up on the dresser and stuff something in them to keep the creepy crawlies out of it. I have seen people put them in bags as well and tie them off,\" Emem suggested. \n\nAlex and Gavin looked at him and the exhaustion was taking over. \n\n\"Good night,\" Emem smiled recognizing it. \"Thank you both for all that you have done, get some sleep and we'll see you in the morning. One last thing...\" he pulled a revolver out and held it out to Gavin. Gavin looked to it and then to Emem. \n\n\"You are going to want to take it,\" Emem said holding it out. They looked to one another then back to him. \"It's not for people...it's for the things too big to crawl in your shoe!\" He clarified with a laugh. \n\nIt was then and only then that Gavin took the gun from the young man. Emem left them there and they both looked at the gun that he held uncomfortably in his hand. \n\n\"Have you ever used one of these?\" Gavin asked her. She shook her head. \n\n\"You?\" she asked him. \n\n\"I have had some target practice, but it's been years,\" Gavin frowned not liking the heavy piece of metal in his hands. \n\nAlex remembered back to Pavy's story of the two of them running from drug infested house to drug infested house looking for Carla. They had to take a gun with them for fear of their safety. She wondered after Carla's death if Gavin had touched a gun since. \n\nThey eased into the bed, and cuddled close to one another, the fan on the stand blowing gently across their bodies. Gavin's arm was over Alex protectively, they were both asleep in a matter of minutes. Exhaustion claiming them, but they were both happy. Gavin with the knowledge he was doing what he went into medicine for. And Alex with the knowledge that she had the true Gavin."
    ],
    "authorname": "CJT",
    "tags": [
        "mile high club",
        "public sex",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-31"
}