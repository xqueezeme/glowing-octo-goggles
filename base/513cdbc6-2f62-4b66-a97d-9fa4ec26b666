{
    "title": "Coming of the Spell Caster Bk. 01 Ch. 11",
    "pages": [
        "Here is the final chapter! Chapter Eleven! So happy this novel went to eleven. Congrats! You've made it to the end of the first book! Thanks for all the support and encouragement. Literotica readers are a world apart and I am so very grateful.\n\nStay sexy, horny, wicked, and wild, my friends!\n\nEnjoy,\n\nLana Ocean\n\nCanada\n\nThe Coming of the Spell Caster\n\nSpell Caster Series: Book One\n\nChapter Eleven\n\nAFTER EVERYTHING HAD settled down, Daniel built up a small fire in the fireplace to ward off the evening chill. Amy, Jasmine, and Amber had gone outside for an hour and returned. They hadn't been pregnant and were relieved. Grace sat on the couch in the corner drinking wine and watching Daniel like a hawk.\n\nAmy and Jasmine came over and asked to speak to Grace, and she nodded and joined them in Daniel's bedroom with the door closed. Daniel sat on the couch and sipped his wine. Tomorrow he would leave this all behind. Grace informed him that entry into the school would cancel his farm debt with the King. Daniel had been pleased to hear that. All he had now was a worry about the future and where he and the girls would go from here. What Grace said changed everything for him. He now hoped for a future together, now that he knew they could have a future together.\n\nAmber sat on the couch furthest from him. She said nothing and sipped her wine. Daniel chose to ignore her. He had done nothing wrong. Any issues were with her. Let her sort them out.\n\n\"I don't like you,\" she said softly. \"I can't help that.\"\n\nDaniel didn't rise to the bait and sipped his wine.\n\n\"I can see that Amy and Jasmine truly love you. And now you know about the circle.\"\n\nDaniel watched the fire.\n\n\"We spoke a lot today. There isn't anything we don't tell each other. It's part of being in a circle. They explained everything you did to them sexually. Every detail. I have to admit to being a little jealous. I was never able to make them orgasm as hard or as long. I suppose not having a large... ugh, penis... might have something to do with that. It wasn't for a lack of trying on my part.\n\n\"Despite Grace saying I would one day fuck you; I promise you I will do everything in my power to stop that from happening. I don't want to fuck you. I don't want to touch you. You repulse me, quite frankly. All men do, but you do in particular.\"\n\nDaniel said nothing. Amber started to rise, and he turned his head toward. \"Hey, Amber?\"\n\nShe sat back down and looked at him. \"Yes?\"\n\n\"Fuck you.\"\n\nAmber's eyes widen and then hardened. \"How noble of you.\" She rose and went into Jasmine's bedroom.\n\nDaniel chuckled.\n\nDaniel was almost asleep with the gentle heat of the fire. He had finished his wine and lay slumped on the couch. He felt a hand slide down his chest inside his shirt and he stirred. Amy whispered in his ear. \"Come on, time for bed.\"\n\nHe rose and Amy took his hand and pulled him gently toward the bedroom. When the door opened, he could see lit candles were placed all around the room. All of his expensive candles. He winced and then saw Jasmine and Grace lying back on his bed, covered by a thin sheet, and smiling at him. Jasmine is smiling, he corrected himself. Grace is looking like a cat about to pounce on a bird.\n\nHe went to speak, but Amy pressed her finger to his lips. \"Shh. No talking.\"\n\nShe moved behind him and slowly pulled off his shirt. And then she moved back a step. He heard a rustling and then her arms were around him from behind. He could feel her full naked breasts against his back. They were warm and soft. He leaned back into the embrace. He felt her hands work on the knot on his belt rope and soon his pants were sliding to the floor. He felt his cock rise hard in front of him. His excitement rose and his cock bounced with his heartbeat. Amy kissed his back, and he opened his eyes to see Jasmine and Grace staring at his cock with hunger.\n\nAmy gave him a little push toward the bed. \"Unwrap your gift, lover.\"\n\nDaniel grabbed the corner of the sheet and slowly pulled it off the bed. It slid off the forms of Jasmine and Grace, revealing their naked beauty. This was the first time he saw Grace's breasts. They were perfect globes. Round and firm. Her areolas matched her skin colour and all he could see were her prominent nipples. They stood out half an inch. The surrounding skin was puckered with tightness. He longed to suck on them. Jasmine looked so happy on the bed. She was smiling at him.\n\nHe noticed her hand was buried between Grace's legs. She removed it and he could see how wet it was. He also noticed Grace had no hair on her pussy. None at all. Jasmine took her wet hand and licked the juices off.\n\n\"She tastes amazing, Daniel,\" she said. \"So amazing. Grace says she is part fae. Not fairy, but fae. Her body is a little different. In all the good ways. Amy and I have already had a taste. We're hooked. You will be too. I feel so happy. Grace says it's a side effect of her fae heritage. She says our orgasms will be more powerful, too.\"\n\nDaniel saw Grace smile. \"It's true, Daniel. Eric was beside himself trying to get to my pussy. I'm the only fae mix female the world has known. My pussy is legendary. And I'm not being humble about it. It's a fact.\" Grace leaned back and spread her legs to him. \"I have no body hair. My cunt is magic. I'm the best lay you will ever have. Come get a taste.\"\n\nDaniel fell to his knees on the bed and crawled up between her legs. He grabbed her left leg and pulled it forward until her foot brushed his face. He turned his head and gently sucked her toes.\n\nGrace smiled and wiggled her toes. \"That's a good start...\"\n\nAmy came around and lay beside Grace and watched Daniel suck her toes. Jasmine lay down on the other side. Together they leaned over and took one of Grace's nipples in their mouths. Grace gasped.\n\nDaniel licked up the inside of Grace's foot. Licking the arch and the heel. He moved around to her inside ankle and up the inside of her calf. He swirled his tongue and took in the salt of her sweat. He paused at the knee and licked the inside. Grace panted. Amy and Jasmine were biting gently at her nipples and then sucking them, moving their lips up and down their length.\n\nDaniel moved down the inside of her thigh. He could smell her pussy now. It drew him in. His hunger mounted, but he forced himself to slow down. He licked along her thigh and licked her mons, intentionally ignoring her pussy. His pulse pounded in his head. His desire to devour this woman grew stronger the longer he smelt her pussy.\n\nGrace was moaning. Daniel smiled and started licking up her other thigh.\n\n\"Oh Gods, no. Please! Lick my pussy, Daniel! No man has ever resisted. You're driving me crazy here!\"\n\nDaniel licked up her thigh and licked the inside of her knee and then up her calf. He crossed her ankle, then up the arch of her foot and sucked on the toes of her other foot. He looked down. Grace's pussy was engorged with desire. Her lips were swollen and spread apart, allowing him to see the deep pink inside. Pussy juice had soaked the bed sheet and was spreading like split water. The musk of her scent had him delirious. He could see Amy and Jasmine were loving it. They fingered their own pussies with the heat of their passion.\n\nDaniel started to lick his way down again. He was aware that his cock was now painfully erect. It was so hard it hurt him. Pre-cum dripped from the tip and ran down his shaft. As he approached Grace's pussy, he could see it pulse with her heartbeat. The scent was overpowering. He struggled to stay focused and then found clarity. The world opened to him in a way he had never seen before. Jasmine and Amy were surrounded with beautiful brown and green colours. He could smell fresh tilled earth. Tendrils of light extended from them and caressed each other, and Grace. He could see tendrils wrapping around his cock and up his chest.\n\nWhen he looked at Grace, she was surrounded by a soft blue light. She radiated the colour. Beneath it, he could see how she truly appeared. She was hiding scars on her body. He looked to her right thigh and traced a deep scar with a finger. He then traced another on her stomach. Grace was staring at him intently with shock on her face. He leaned forward and traced the scar on her face. She turned her head away, ashamed. Daniel took her chin and gently turned her face to look at him.\n\n\"You're beautiful with or without your scars. I see you, Grace.\"\n\nShe nodded her head and tears ran down her cheeks. All her strength and resolve were banished. She lay exposed before Daniel like no one else in her life. She couldn't stop the tears. They flowed on their own. \"Drink me, Daniel. Drink from my fountain. I give my nectar willingly to you. Drink.\"\n\nDaniel lowered his mouth to her pussy. He flicked her clit and got his first taste. A roaring filled his ears and all the hairs on his body stood straight up. He lowered his mouth and then clamped it onto her pussy. He drove his tongue in hard, probing and licking the sweet nectar. Grace screamed and pushed her pussy into his mouth. She bucked once, twice, and then came hard into his mouth. A stream of her juice poured into his mouth, and he swallowed it and wanted more. He licked upward and sucked her clit into his mouth, and she screamed again and bucked. A second stream of her cum poured into his mouth. He repeated the action, and she bucked, followed by a third stream of juice.\n\nAs her liquid hit his stomach, he felt a heat flow out from his core. Waves of pleasure rolled over him. A great sense of wellness filled him, and he smiled. He looked up at Grace's wondering face and smiled. She reached down and pulled his face up to her and mashed her mouth against his. Her tongue drove into his mouth, and she sucked on his tongue. This was the kiss of hunger. She reached for his cock with a trembling hand and pulled him painfully to her pussy.\n\nShe thrust her hip up and impaled herself on his cock. She kept thrusting until Daniel took over. He leaned over her on his hands. The only part of him touching her was his cock. He kissed Amy and Jasmine and told them he loved them and then started thrusting. He drove his cock in as hard as he could. His pelvis ground into hers. She grunted and moaned, thrashing her head from side to side. Her pussy sprayed her juice with every thrust.\n\n\"Fuck my cunt! Fuck my cunt!\" she screamed.\n\nDaniel could feel her pussy clench hard on his cock. He froze his pounding, and Grace took a deep breath and held it. As soon as her pussy let go of his cock, he pounded her again and then she came in an explosion of breath and sound. She sobbed and dragged her nails deeply across his back. The pain was intense, and Daniel felt his cock erupt. His cock exploded with a massive load of cum on the first ejaculation. He pulled his cock out and held it as another power jet of cum fired from the tip, splashing against Grace's face. Amy and Jasmine got in front of it, and Daniel aimed a rope into each of their waiting mouths. He plunged his cock back into Grace and pumped three more ropes into her pussy. She came again and her eyes rolled back in her head, and she went limp.\n\nDaniel dropped his weight on top of her. He could no longer support himself. He felt Amy and Jasmine pull him off and then start to lick each of their bodies. Their warm tongues bathed them both. He heard them kissing and reached for them. They kissed each other for a time. They stopped when Grace started to stir.\n\n\"What the fuck happened?\" she asked.\n\n\"You came pretty hard and kind of passed out,\" murmured Amy. She pressed her lips to Grace's and kissed her. \"It was pretty spectacular. We warned you.\"\n\n\"Yes, you did. Except, that never happens with me. Men can't last long with me. It's over before it starts. Even women, as you found out. Where is he, Daniel?\"\n\nDaniel was lying right beside her and tapped her waist. \"Right here.\"\n\n\"Oh Gods, I'm all fucked up right now. How? How'd you do that?\"\n\n\"Strength of character?\"\n\n\"Fuck off, tell me how.\"\n\nDaniel chuckled and then took a breath when Jasmine started playing with his cock. He looked down at her smiling face. Mine, she mouthed. He nodded at her. Love you, he mouthed back.\n\n\"Okay, it was pretty heavy stuff. Your pussy drew me in. The more I resisted, the more I wanted it. Then, like my magic, I found a path to clarity. The world opened up to me. Amy and Jasmine, you were covered in brown and green light. I could smell the soil, rich and moist. You had tendrils leaving you and wrapping around each other and me. Then I saw you, Grace. You were bathed in a blue light. I could also see the true you. Who hurt you so badly?\"\n\nGrace said nothing. She grasped his hand instead and twined her fingers with his. \"It doesn't matter. You saw me. Few have.\"\n\n\"You are beautiful either way, Grace.\"\n\n\"Thank you.\"\n\nThey lay there until Jasmine started getting really energetic with Daniel's cock. Amy cheered her on and Jasmine put on a show. She licked his shaft, balls and head and tried to deep throat him. She spat out thick gobs of spit and stroked his shaft with it. When pre-cum leaked, she slurped it up and showed the others it lying on her tongue.\n\nIn a flash, she climbed up onto his waist and lined him up and drove down. She was so wet there was no friction. Daniel's cock slid deeply into her and filled her. Her vaginal walls clamped around his shaft and held him. She put her hands on his chest and pleasured herself on his cock, riding high until the others could see the head of Daniel's cock exposed, before she would drop her weight back down on him. In short order, she came but kept riding him. Daniel lifted his hands to her nipples, and she nodded her head at him. Grace looked at Amy with a questioning look.\n\n\"Watch, this is amazing.\"\n\nDaniel twisted her nipples. Not too hard this time. He wasn't certain she could take it. She moaned, and he felt her pussy spasm. He twisted harder, and she screeched and came hard on his cock. Pussy juice started to flow and splash between their bodies. Amy stuck out her tongue to catch the drops.\n\nGrace stared at them in shock. \"You are all the dirtiest fuckers I have ever had the pleasure to meet.\"\n\nDaniel twisted again, and Jasmine came again. He did it four more times until Jasmine begged him to stop. He did, and she collapsed on him, spent.\n\n\"So good,\" she murmured and spasmed a little. \"Hold me safe, baby.\"\n\nDaniel wrapped her up in his and held her.\n\nGrace sat up on her side and watched them cuddle. \"You guys are amazing.\"\n\nAmy smiled and leaned in and kissed Grace. Grace fell back and as soon as her head hit the pillow, Amy scooted around and placed her pussy on Grace's mouth. \"Eat my cunt!\" she ordered.\n\nDaniel looked over and watched Grace devour Amy's pussy. \"Lick her asshole, Grace. She loves that.\"\n\nGrace rolled her eyes at Daniel but reached her long tongue up and rimmed Amy. She was rewarded with Amy's moan. They ate each other for a time and then simply lay there exhausted.\n\n\"That was hot,\" murmured Jasmine, who had been watching and rubbing her clit. \"Me next. I want my asshole rimmed like that. Who wants to?\"\n\nAll three of them said 'me' at the same time and they started laughing.\n\nTwo hours later, Amber slipped into the room when everything had quieted down. She had been listening to their pleasure the whole night. She had tried toys, but she still had an ache within her. What Grace said was true. She was drawn to Daniel. Her circle bond let her feel the love between Amy, Jasmine, and Daniel.\n\nThe problem was men truly repulsed her. The idea of having sex with a man was against her very being. She could best describe her revulsion as the same of a heterosexual male being forced to suck another man's cock. Amy and Jasmine didn't understand. They liked men and women equally. She envied them that power.\n\nAs she came in, she was hit with the smell of sex. It smelt mostly of pussy, and she breathed it in deep. She adored the smell and taste. She also smelled spunk and her nose crinkled in disgust. It smelt like bleach to her. Vile, sticky, and disgusting. Watching the girls devour Daniels cum like an expensive wine had almost made her throw up.\n\nWhat was happening in the bed was something she needed to be part of. Without the Daniel part. She watched as Jasmine ate Grace's pussy. Amy was watching and playing with herself. Daniel appeared to be asleep.\n\nStrengthening her resolve, she removed her sleep robe and let it fall to the ground. She took a step forward and then saw Grace turn her head and look at her. She had her legs raised and was pushing Jasmine's head into her pussy, but somehow noticed Amber entering the room. Grace smiled at her and gave a quick toss of her head to mean come over.\n\nAmber stepped closer and Amy saw her. She smiled and got out of the bed.\n\n\"Amber, come join us. We can have a girl's side and a boy's side. Come,\" Amy took her hand, wet with her own juices, and brought her over to lie next to Grace. She lay back and looked at Grace.\n\n\"Is this okay?\" Amber asked, watching Amy slide her head next to Jasmine's and start to lick Grace's pussy. Grace's mouth opened for a moment, and she panted watching the two girls pleasure her at the same time. Then she looked back at Amber.\n\n\"Of course, this is your family, Amber. I'm the stranger here, not you.\"\n\n\"Family?\"\n\n\"Yes, you, Amy, Jasmine, and Daniel.\"\n\nAmber frowned.\n\n\"You don't need to have sex with Daniel, Amber. Ever. No one is making you. What you have are two of the hornist and sweetest tasting pussies you could ever need or want. You formed the circle with them. Take them. A circle is meant to be that way. You form a stronger trust and that powers you to greater heights.\"\n\nAmber's eyes widened a little. She hadn't known that, but she nodded. She breathed in the air and Grace watched her face transform into the beautiful woman she was. \"Your pussy smells beautiful. Can I have a taste?\"\n\n\"If you can convince Jasmine and Amy to give it up, sure. Jasmine's been eating me for half an hour. I've come so many times I have truly lost count.\"\n\nAmber looked over at Daniel.\n\n\"He's awake. He's just taking a break. Building up more cum for us, bless his soul. He needs to fuck all three of our asses before the night is through. That's the deal. When you make a deal with the fae you better deliver.\"\n\nDaniel raised a fist and pumped it once.\n\nAmber grew quiet. Grace moaned a little.\n\n\"Gods. Amy is licking my asshole with Jasmine. Did you teach these girls?\"\n\nAmber nodded.\n\n\"You done good.\" Grace grunted and turned her head and focused on watching herself be pleasured. She was close to coming. She looked at Amber. \"I would love to come on your pretty face, Amber. Drag Jasmine and Amy out of there. Hurry, I'm fucking close.\"\n\nTheir early departure was delayed until noon. They didn't stop fucking until the wee hours of the morning. The sun was just starting to brighten the sky when they finally passed out, unable to continue. They woke in a tumble of arms and legs. Jasmine refused to sleep anywhere but on Daniel's chest. Amy was squeezed in between Grace and Daniel. Daniel had woken with a raging hard-on, and Amy and Jasmine had to calm him down before he would leave the bed. They sucked him off and rode him to orgasm. Three asses were a little raw, but the girls had no complaints.\n\nBut that morning, Amber had woken first with her head on Grace's chest and with her arm draped across the bed. She felt something strange in her hand and lifted her head to look past Grace's huge nipple to see that her hand was resting on Daniel's cock. She was revolted but didn't move her hand, afraid to wake him.\n\nShe had never touched one before. It felt oddly nice. Soft and warm. Like this, she thought, it was almost nice. She didn't notice, but she was fondling it quite a bit, lost in the mystery of it.",
        "Daniel, on the other hand, woke with the first touch on his penis. He had tried to figure it who was touching him by the feel of the hand and had eliminated all the girls, except Amber.\n\nHe didn't believe it could be her, but the hand felt so different. And it was so unsure of what it was doing. The idea of Amber the Bitch touching his cock got him hard in an instant.\n\nAmber noticed the cock starting to grow. She watched in fascination as it grew thicker and longer and harder under her hand. It was so responsive. Nothing had prepared her for that. She held it in her hand and felt the sudden weight of it. Heat poured into her hand. Her toys never radiated this wonder warmth.\n\nShe moved her hand a little and felt how soft the skin was. So lovely and soft. Underneath the skin it felt like a piece of wood, slightly giving. It was two things at once. The head of the cock had swollen as well. It was massive, like a big mushroom, and turning purple, engorged with blood. She ran her hand up to the tip to touch it and the cock jumped a little in her hand. She dropped it and it smacked on Daniel's stomach. She froze and waited.\n\nWhen it appeared Daniel was still asleep, she reached out and touched the large head and pushed it. It was spongy. Soft, yet firm. Her finger suddenly slipped on a wetness coming out the hole at the tip. She brought it to her nose and sniffed it. Her nose crinkled at the smell. She didn't like the smell at all.\n\nShe stuck out her tongue and touched the liquid and then dared taste it. The taste wasn't much better. She had heard it was salty, but she didn't think so. It certainly wasn't sweet either, another lie. It tastes like... it tastes like cum, she decided. She felt a shiver go through her and the little hairs on the back of her neck stood up. That was strange, she thought. It was almost pleasurable.\n\nShe watched the cock for a bit. She could see it pulsing a little, with Daniel's heartbeat, she presumed. The tip lifted a little with each beat. It was fascinating to watch.\n\nThis was the thing that was plunging into her girls' holes last night. She had watched it spread their assholes and ream them. She had watched it spread their pussy lips and fuck them. She had watched it drive into their mouths. And she had watched it spray its cum all over the other girls with some horror.\n\nBut it wasn't as repulsive as I thought, was it? It really was no different than the toys we use. And I've used our toys on all my girls' holes. This toy was just alive and attached to a man. A man with a man's brain and all the other bullshit they brought with them. She shuddered a little.\n\nSuddenly Amber entertained the thought of tying Mister Daniel Davies up and using her toys on him. She could see him tied up and begging for release. His cock at her mercy. The things she could do to him. She would love to ram a dildo up that smug ass of his. No, a strap-on, she thought with glee. She could drive it into him again and again. Hear him cry out in pain.\n\nShe felt her pussy get wet with the thought, and she blinked. I'm horny thinking of tying Daniel up? Then she smiled a little. Maybe this family can work out after all.\n\nThey had everything packed and ready by noon. They mounted their horses, and the pack mule was tied up in tow, with their supplies carefully packed on him. Grace said she didn't need a horse. She would run ahead and scout out the terrain. Daniel thought this was crazy until Grace demonstrated her speed. He shut up after that.\n\nWhen they rode away, Daniel refused to look back. The farm was already in his past. He looked forward instead to their future. A future with his new family.\n\nHe had shared Amber playing with his cock with Amy and Jasmine. They had smothered laughs and wondered what it meant. Daniel didn't entertain the thought she would join him. He was sure that only her curiosity had overcome her revulsion for a time.\n\nThey still felt the magic of Grace's pussy and told her so. She said it could last for days. She related how humans all were told to not eat anything from the fae. In truth, she said, it only applied to eating out the fae. She also said not to worry, they had more nights together to taste more. She had grinned hard at them and ran off to scout.\n\nThey made good time down the road. The horses were fresh, and Amber said they were strong and sturdy horses. When pressed Amber only said that being a hedge witch let the girls sense things like that. Amy and Jasmine had agreed with Amber as if it were common knowledge, and that was good enough for Daniel.\n\nThey talked about what the school would be like. They had only heard rumours. The school was massive and took up a whole district of the city. People came from all over the realm to attend. Normally people were tested at puberty. Those who could afford it, anyway. Because it took some people time to save the funds necessary for entrance, the school had two sections. A large section for the youngsters, and a smaller section for the older, mature students.\n\nThe school taught all the adventuring skills. The best adventurers were hand selected to teach, and it was a considered an honour to be selected as a teacher. Competition was fierce for the combat skills. The more arcane occupations competed with discoveries and achievements. Each student knew they were being taught by the best.\n\nFailure rates were very high, and death was not uncommon at the school. They dealt with powerful magic and deadly fighting skills. Every student prepared as best they could and dealt with what was handed to them. They were either successful or unsuccessful. It was not for the weak.\n\nGraduating from the school would grant you the King's Pleasure and a letter of marque and reprisal to roam the realm and hunt out and destroy evil and monsters. The realm was surrounded by the Wilds. The Wilds produced monsters. Adventurers kept them at bay. That was their purpose.\n\nIt was a road full of riches, and likely death. Each band of adventurers were on their own. They had to depend on each other and their skills. A simple mistake would end a party, even the most skilled.\n\nOn the eighth night they camped by a healthy stream. Amy, Jasmine, and Daniel shared a bed made of combined bedrolls. Each night the girls took turns sleeping with Amber. Except when it was Daniel's turn--then he slept with Grace. Tonight, Jasmine was, as usual, asleep on Daniel's chest, a line of drool puddling on him. Amy was pressed in tight on the other side with a little smile on her face. Amber was snoring alone in her bed roll a couple of feet away.\n\nGrace was awake and quiet. She had felt a presence since they had left the farm. Her sense of urgency to get to the city was becoming stronger. She knew to trust her instincts. Someone was following them. Tonight, she felt, they would try something.\n\nShe had climbed a tree with thick branches hanging over their camp. She could see in the dark with perfect clarity--a natural skill of her occupation and ancestry. She watched the sleeping forms of her companions. She watched Jasmine cup Daniel's cock and balls in her hand in her sleep and Grace smirked. That girl won't ever stop touching him.\n\nGrace felt a flutter go through her she recognised at once. I've become quite fond of this odd group. Daniel is special. I think I saw that the first moment I saw him in the tavern. I'm starting to get a little envious of his relationship with Amy and Jasmine. For once, I would like someone to love me as strong.\n\nShe cursed herself and focused on the night. She could see nothing and hear nothing. But the sense of wrong permeated the air. She suddenly felt the tree was the wrong place to be. She stepped off the branch and fell to the ground. Just as she left the branch, a dart split the leaves where she had been hidden.\n\nShe rolled and burst forward with her speed. She moved silently in her dance. She knew where the dart had come from. And she knew where she would have moved if she had fired it. She burst through the thick bushes, not disturbing a single leaf, and drove her dagger into the man crouched there. She held a hand over his mouth and drove the dagger into his heart and lowered him to the ground.\n\nShe listened and then burst to the left. She wrapped a wire garrotte around a woman's neck and pulled sharply. She cut through the windpipe and felt the wire stop at the spine. She pushed the woman aside as blood fountained from her neck. The woman gargled a little as she died.\n\nGrace moved quickly and caught the last assassin from behind. He had been smart to run. But you can't outrun a night fae-assassin, and there is no one better than me. She drove her dagger up into the brain stem and wiggled the blade a little. She wiped the blade on the black clothes of the dead man and walked back to the camp after examining the bodies. There was nothing on them. Nothing to give away who hired them or why. She had expected nothing less. She slipped out of her clothes and got in the bedroll with Amber.\n\nShe kissed her awake. Grace's pussy was soaking wet. The thrill of the kill always excited her. Amber looked quizzically up at Grace. \"Eat my cunt, bitch,\" she growled at Amber. \"I need to cum now.\"\n\nAmber smiled and slipped down the bedroll.\n\nA week later they saw the city of Whitehaven for the first time. The city was sprawled along the ocean coast. A large natural harbour filled the centre of the city and commercial and residential areas were well planned and laid out in a grid of streets and roads. The city boasted well over a three hundred thousand residents. It was the gem of the realm, the seat of the King, and hosted the Academy of Adventurer Training.\n\nThey entered the city through the massive gate in the northern wall. Grace led them directly to the school despite cries from the girls to at least shop for a little bit. The school occupied an entire district called the Academic District. The grounds of the campus were covered in greenery and parks, with ponds and fountains. Coffee and tea shops were at every corner and students wandered from building to building.\n\nEach adventurer occupation had its own building, built to their specifications, which included housing. There were several common buildings for skill sets not unique to an occupation, like reading, writing, theology, maths, and the sciences. Central to the school was the large headquarters building. It was built of towering white and gold marble and dwarfed the other buildings in the district, and besides the King's Castle, the city buildings as well.\n\nWhen they entered the district, they first brought their horses to a hostler Grace trusted. They were given chits for the horses, and they arranged for their supplies to be brought to the Testing House.\n\nThe Testing House was where all who wished to be students were housed until they were tested. Grace brought them directly to the building and led them inside and stopped inside the massive entry hall. The ceiling was tens of feet above them. Staircases spiralled upwards to corridors and rows of doors. Every square inch of stone was intricately carved in shapes, swirls, animals, vegetation and even monsters. It was a marvel to see.\n\nDaniel whistled and turned in a circle, looking upward. Jasmine crashed into his chest and held him. He kissed the top of her head. \"Don't worry, little one. I'll take care of you.\" He felt her smile into his chest.\n\n\"Ha! I just wanted to hold you.\"\n\nGrace rolled her eyes at them and walked up to the reception desk. She rang a little bell and an office door opened. A middle-aged man stepped forward and placed small, round spectacles on the tip of his nose and squinted through them across the counter. \"Yes?\"\n\n\"Hello, I have four candidates to register, please.\"\n\nThe man looked over at them. The glasses made his eyeballs look much larger than they should. Jasmine was holding tight to Daniel, Amy was on his other side pressed up against him, and Amber was holding Amy's hand. The man sniffed. \"Ah, yes. Well, we have closed registration for the day. Can you please come back tomorrow?\"\n\nGrace stared at the man for a moment. \"It is only two o'clock in the afternoon. Registration is open until four. Register them please and see they have one large room.\"\n\n\"One large room? See here miss, come back tomorrow.\"\n\nThe man turned and started to return to his office.\n\n\"Stop.\"\n\nIt was a simple word, but it carried a weight and authority with it. The man stopped and turned back.\n\n\"I want you to contact Headmaster Quinten, right now.\"\n\nThe man sputtered. \"Headmaster Quinten? I don't think so. He's a very busy man and has no time for registration issues. Come back tomorrow. Good day.\"\n\nThe man turned again, and suddenly he stopped. Grace stood before him with her hands on her hips. No one had seen her move.\n\n\"I am Grace de Moroingi. Do I need to repeat myself?\"\n\nThe man took two steps away from her and held a hand to his chest. \"Madame de Moroingi! I'm so sorry! Please excuse my behaviour. My eyesight is not so good these days.\"\n\nGrace glared at the man. \"Contact Quinten right now.\"\n\nThe man deflated and hurried into his office.\n\nGrace walked back and looked at the worried faces of her friends. \"No worries. We'll get this straightened out. Best if Quinten handles this himself, anyway. Fuck nuts there is about to lose his job. So that's a positive.\"\n\n\"Lose his job?\" asked Jasmine.\n\n\"Yeah, he has one thing to do. Register candidates. He refused to. Fuck him.\"\n\nDaniel cleared his throat. \"Grace de More-in-yah?\"\n\n\"Moroingi. Pronounced More-In-Yay. My family name.\" She refused to acknowledge his smirk.\n\n\"Are you important, Grace?\" asked Amy quietly.\n\n\"Hmm. Debatable. Quinten should be here any second.\"\n\nThe sound of the entrance door slamming open reverberated through the open entryway. Loud footsteps of metal on stone echoed toward them. Striding toward them was a man in gleaming white plate mail. Light seemed to shine from him. He strode directly at Grace, with a smile beaming across his face.\n\n\"Grace! You're back!\"\n\nHe wrapped her in a massive hug. Daniel could see a gleaming sword slung on his back. Emblems covered his armour. He recognised the one central to his chest. It was one of the human gods and a prominent one.\n\nGrace punched the man high in the shoulder. It made a loud clang sound. \"Let go of me, you oaf.\"\n\nQuinten let go and beamed at her. \"It's been too long. How'd it go?\"\n\n\"I have it.\"\n\nQuinten beamed. \"I knew you could do it! None better. The King will be pleased.\"\n\n\"I sure hope so. Last time he didn't seem so happy with me.\"\n\n\"Ah, but now all will be forgiven.\"\n\n\"Gods, Quinten, you pally types are too much about forgiveness.\"\n\n\"Nonsense,\" the paladin said, and finally deemed to take notice of the four others and turned to them. \"Who do we have here?\"\n\n\"Quinten, I would like to introduce you to four of your new candidates, from right to left, Jasmine, Daniel, Amy, and Amber.\"\n\nQuinten beamed at them. \"My pleasure. Welcome to the school. I hope your testing is successful.\"\n\n\"About that. First off, your asshat of a bureaucrat, trying to hide in his office over there, refused to register my friends. And I asked nicely, Quinten. I really did.\"\n\nQuinten frowned, and he beckoned the man over. \"Johnson, is this true?\"\n\n\"I asked them to come back tomorrow, sir.\"\n\n\"Why? It's only two in the afternoon.\"\n\n\"Well, I... I was busy with paperwork, you see...\"\n\n\"You know I can tell when people lie to me, Johnson. You're fired. Pack your things, you have thirty minutes to leave the district. Go.\"\n\n\"But sir!\"\n\n\"Go.\" Quinten's tone was final.\n\nThe man looked at Quinten for a long moment and then fled.\n\n\"There that's taken care of.\"\n\nDaniel spoke. \"That seemed overly harsh. How long has the man worked here?\"\n\nQuinten looked surprised at Daniel speaking. \"Um, about twenty years, I suspect.\"\n\n\"And you just fired him over one mistake?\"\n\n\"No. I fired him because he lied to me. Never lie to a paladin, son.\"\n\n\"I'm not your son. And who cares if you lie to a paladin?\"\n\n\"God does.\"\n\n\"Which god?\"\n\n\"THE God.\" The lights dimmed in the hallway like the sun had been obscured by clouds. The light surrounding Quinten seemed to brighten.\n\nGrace grabbed Daniel's arm. \"Shut up, now.\"\n\nDaniel opened his mouth.\n\n\"Now, you stupid fuck!\" hissed Grace.\n\nQuinten looked annoyed. \"Grace, who is this fellow?\" The light in the hallway returned to normal. So did Quinten. Daniel felt oddly unimpressed.\n\n\"Probably the strongest spell caster the realm has ever known.\"\n\n\"Seriously?\"\n\n\"Did I lie to you?\"\n\n\"Well, no.\"\n\n\"Then you really need to stop saying 'seriously'. The others, and Quinten don't react until I've finished explaining this, the others are a circle of hedge witches.\"\n\nQuinten gasped and stepped back.\n\n\"Quinten! Focus! They are good witches. Just hedge witches. They formed a circle naturally.\"\n\nQuinten seemed to relax and took several breaths. \"You don't lie. Okay. Okay. Hedge witches. We haven't had any witches pass through in a long time.\"\n\n\"Probably because people keep killing them.\"\n\n\"Ah, well, yes. You can't trust a witch, they say. Ha-ha! Never suffer one to live! Ha!\"\n\nThe girls moved closer to Daniel and stared at Quinten.\n\n\"There's more. They are already bonded with Daniel here.\"\n\n\"Oh, dear me. Really?\"\n\n\"You can add 'really' to 'seriously'. Now you know why my friends here need to be in the same room. And they need to train together. I need this set up right fucking now so I can go see the fucking King.\"\n\n\"Language, my dear.\"\n\n\"Yeah, well. He blames me for something I didn't do. So--plug your ears, Quinten--fuck him. I need you to take care of this personally. If you do it, others won't question it. This is really important, Quinten. I know it.\"\n\nQuinten looked long and hard at Grace. \"You know it?\"\n\n\"Yes, just like those other things.\"\n\nQuinten paled. \"Done.\"\n\nGrace came up to each of them in turn and kissed them deeply. Daniel could see Quinten looking away and blushing. \"Be safe, my friends. Don't trust anyone. I mean it. No one. Stay together. Fight together. I'll be back when I can to check up on you, okay?\"\n\nDaniel held the back of her head and kissed her once more. \"Who are you really, Grace, to order a paladin about?\"\n\nGrace flashed a wicked smile and walked away, her hips sashaying with emphasis. Daniel and the girls watched her perfect ass in awe until the doors closed behind her.\n\nQuinten cleared his throat and Daniel and the girls focused on him.\n\n\"Let's start again, shall we? You are friends with Grace, clearly. That carries weight with me and anyone else who knows Grace, and yet still likes her. And that means I will take a direct interest in your training. Welcome to the Academy. You're training starts now.\"\n\nThe End of Book One\n\nCopyright \u00a9 2020 Lana Ocean. All rights reserved.\n\nDaniel Davies will return in:\n\nThe Schooling of the Spell Caster\n\nBook Two of the Spell Casters Series\n\nAuthor's Closing Comments:\n\nLana here at the end of Book One. I sure hope you enjoyed this fantastical, over-the-top, romp. This was a lot of fun for me to write last year. I'm hoping you all get me excited enough to finish the second book. It's all outlined and ready to be written. I just need the encouragement and time!\n\nAnd I know: how I treated Amber and her \"Hard-Core Lesbianism\" is terrible. I won't apologise. I needed her to be a \"man-hater\" for what's coming next with her. She plays a critical role for Daniel. For that to happen, she needs to accept him into her circle as the heart. I kind of want to promise she won't be this lesbian who discovers dick and is transformed. That's what I want to avoid NOW, but when I write my characters often tell their own story and I just write down their words and actions.",
        "As always, thanks for reading my material. If anything, I hope it helped you escape the harshness of reality and get through this crazy pandemic a little easier! Nothing better than a separation from reality with a little eroticism to pave the way with bliss and serenity. I'm talking about post-orgasmic bliss.\n\nLastly: Please wear a mask. Get vaccinated because one, science, duh, and two, it will possibly save your life and others around you!\n\nLana Ocean\n\nCanada"
    ],
    "authorname": "Estcher",
    "tags": [
        "masturbation",
        "fantasy",
        "oral",
        "non-consent",
        "magic",
        "elves",
        "dwarves",
        "threesome",
        "group sex",
        "adventurer"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/coming-of-the-spell-caster-bk-01-ch-11"
}