{
    "title": "The Phoenix Ch. 03",
    "pages": [
        "Hello Reader! \n\nLook's whos finally gotten a new laptop and is almost out of school for the semester! Woohoo! More time equals more stories equals more feedback from you, my amazing support. And a special shout out to my fantastic editor, Nehkara. Your patience knows no bounds. As always, please leave me constructive comments. I feed off the stuff. Enjoy! \n\n-Curiouskatty \n\n***** \n\n\"In darkest night hour, I search through the crowd, your face is all that I see, I'll give you everything, baby love me lights out, baby love me lights out, you can turn my lights out.\" \n\nErin swiveled her hips as she danced slowly around her room. She closed her eyes and Beyonce's voice lulled her into a fantasy world. Wyatt was there, his brown hair and green eyes looking celestial in the moon light. She moved her body for him, with him. His smile was subtle and alluring. \n\n\"Your heart is glowing, and I'm crashing into you. Baby kiss me, before they turn the lights out.\" \n\nHis lean body was closer, his breath tickling her skin. Erin smiled and leaned into his frame. She felt him all around. She was light on her feet as she twirled around him. Wyatt was whispering to her, but she couldn't quite understand the words. But it didn't matter then. They were together. \n\n\"Nobody sees what we see, they're just hopelessly gazing, baby take me, before they turn the lights out, before our time has run out, baby love me lights out.\" \n\nErin was aware of Wyatt's hands upon her, gripping her waist, trying to steady her and hold her close. But it was as if he wasn't there, like his hands were caressing her skin, like his lips weren't brushing themselves on her neck. So she kept moving her hips seductively to the beat of the music. She was lost in it, the music, her fantasy, her excitement. It was as nothing she'd ever felt before. All strange and unfamiliar. But she wasn't afraid. Not at all. She was calm, yet full of energy. That was, until her sister burst into the room. \n\n\"Hey Erin!\" Morgan scream happily as she kicked the door open. \n\nErin's eyes shot open too late and she fell backward in fear, effectively landing square on her ass. \n\n\"Son of a bitch!\" She shrieked. \n\n\"Oops,\" Morgan said, looking down at her guiltily, \"my bad.\" \n\n\"Morgan, what the fuck!\" Erin cursed at her, \"this is how people get ptsd in the first place! Shocks like that!\" \n\n\"How was I supposed to know you were practicing your twerking.\" Morgan walked over and offered her sister a hand. Erin smacked it away, hard. Morgan yanked her hand back and glared down at her. \n\n\"Well damn. I'm trying to make up for it.\" \n\n\"Fuck off.\" Erin growled as she used the side of the bed to get up. \n\nMorgan stared at her peculiarly. Erin was standing, clad in a tank top and white boy cut panties. Her hair was thick and coiled and free around her head. Her deep complexion was hued and her faced was face was twisted in annoyance and something else. \n\nEmbarrassment? \n\n\"Erin, what's up?\" Morgan puzzled. \n\nErin frowned at her. \"My fucking butt cheek hurts, what do you think?\" \n\nMorgan waved that away. \"No I mean what's with you. You don't dance, ever. Your hair is never down except on occasions and I think this is the most naked I've seen you since were children. What's happening?\" \n\nErin looked away. \"Nothing. It's just hot.\" \n\nMorgan didn't believe it for a second. \"Bitch it's December. Don't try that shit with me. Does this have something to do with Wyatt?\" \n\nErin still didn't look at her. \n\n\"I knew it! You fucked him!\" Morgan screech. \n\n\"Can you shut the fuck up?! Dannie's still in the house.\" \n\n\"Oh shut up. She's watching TV downstairs. So tell me, you get the D?!\" \n\n\"Morgan can you sound anymore childish?\" Erin shot her a look. \n\nBut Morgan wasn't having it. She reached out and pinched Erin's bicep. Erin squealed and swatted her hand away. \n\n\"Morgan!\" \n\n\"Stop stalling. It's a yes or no question. Did you shag that adorable nerd?\" \n\n\"NO!\" Erin said loudly and punched Morgan's shoulder. Morgan groaned. \n\n\"Are you lying to me little me?\" Morgan asked, rubbing her shoulder, \"Because if you are-\" \n\n\"What you gonna do about it?\" Erin smirked. \"I'm trained in combat, remember?\" \n\n\"So?\" Morgan challenged, \"I can still whoop that ass little girl.\" \n\n\"Bitch, who you calling little?\" \n\n\"Stop!\" Morgan stomped her foot, \"what happened, you're still not telling me!\" \n\n\"He asked me out!\" Erin finally said, exhausted. She sat on the corner of the bed and smiled up at Morgan, \"he asked me out, big me. On a real date. Like a normal person. Me? Can you believe it?\" \n\nMorgan felt a pang of emotion in her heart right then, looking down at her sister. What seemed so normal to the rest of the world was so extraordinary to Erin. It was another one of those moments when Morgan really saw how much growing Erin had missed out on in the military. Erin was tough and cold and strong, but in matters of the heart she was na\u00efve and scared. She saw how truly young and lost she was and it almost tore her apart inside. She walked up to Erin, leaned down, and kissed her on the forehead. \n\n\"Oh honey, of course he did. He'd be a fool not to.\" \n\nErin sensed Morgan's change in emotion. \"You ok?\" \n\nMorgan just smiled. \"Yeah, I'm fine little me.\" She sighed, then shook it off, \"but what about you? Did he tell you where you all are going? And when is this date anyway?\" \n\n\"On the 28th. He said it should be after Christmas but before New Year so he could say we went on our first date 'last year'.\" \n\n\"First date?\" Morgan quipped, \"is he planning on more than one?\" \n\nErin smiled. \"I certainly hope so! But he didn't say where we are going. Just that I should be prepared to have my socks knocked off.\" \n\nMorgan couldn't help but roll her eyes, which made Erin grin more. \n\n\"I know, I know, he's a giant corn ball. But I've never been with a corn ball before and I've got to say, I really like it.\" Erin paused. \"I really like him. Which is so strange 'cause I hate everybody.\" \n\n\"Yeah, you do.\" Morgan nodded. \n\nErin looked up at her sister seriously. \"Ya know,\" She said, \"I still think about the bad things with him.\" \n\nMorgan sat down in the desk chair across from Erin and listened. \n\n\"I mean, I didn't understand at first, you know? The movies and books say that when you're with a great person, you forget the bad things. They melt away. Even he says it's sort of like that for him when we talk. But for me, it's different. I think about those things, heavily. I tell him about it. About the hot days and lonely nights. About the other soldiers, the people I've met. I tell him about the nightmares and the shakes and the random bouts of throat-clenching fear. And I think about it. I consider it. I turn it over in my head all day long. But with Wyatt, it's not bad. Not at all. It's like, when I tell him... when I know that he's the one that's listening, the bad things lose their power over me. I mean, it's awful, just not as much. I shake less. I sleep more soundly. The dreams don't rack me like they used to. I don't know if I'm explaining this right.\" Erin looked down and bit her nail. \n\nMorgan smiled and patted her on the head. \"I understand.\" She suddenly gained resolve and stood up. \"Wyatt sounds like a special guy, so you need to wear something special on this date. You are trying to get laid right? Let's look for something for that.\" \n\n\"Morgan no,\" Erin protested, \"I won't slut it up. It's our first date!\" \n\n\"So? You guys will have been talking for pretty much a month by the time you go out. The date's this Saturday right?\" \n\n\"Yes. And that don't mean I need to screw him.\" \n\n\"I'm not saying you HAVE to do the ookie doke,\" Morgan said as she rifled through her closet, \"I'm just saying: bring a condom, just in case. And wear a push-up bra.\" \n\nErin rolled her eyes. \"My boobs are fine.\" \n\nMorgan turned her head and gave Erin's chest a glance before turning back around. \"Eh.\" Was her only comment. \n\n\"The fuck you mean 'eh'?\" Erin protested. \n\n\"Well, they fit your frame at least. And they're not little.\" \n\n\"They're just not your D-cups.\" Erin grumbled. \n\nMorgan laughed. \"Damn straight. Now where are those crotchless panties I know you've been hiding from me.\" \n\nErin gaped, shocked. \"Morgan!\" \n\n'Abdi?' \n\nErin stared at the copper skinned man standing in the middle of the dusty dirt road. \n\n'Abdi, what are you doing here? You're not supposed to be here.' \n\nThe man stared at her, his clothes tattered and crusted with blood. His left hand stuck out to the side and was trembling visibly, but she couldn't see his right hand. \n\n\"Who the fuck-?\" Tristan asked before Erin cut him off. \n\n\"Slow it down. Stop the truck. It's Abdi.\" \n\n\"What?\" David piped up from the back. \"Where's Abdi?\" \n\n\"Standing in the middle of the road. He looks fucked up.\" Tristan answered. \n\n\"Fuck. Some assholes probably attacked him after seeing him hanging out with us.\" David sighed. \n\n\"Oh no, his kids!\" Erin remembered suddenly. She stared at Abdi. He appeared to be weeping. \"We should help him.\" She reached for the door, but Tristan put a hand on her shoulder to stop her. \n\n\"Erin no. Think for second. Why is he here? If the local thugs roughed him up, why come here? And how did he get here before us?\" \n\nErin's jaw stiffened. \"What? No Tristan, you didn't say that.\" \n\n\"And why was he just standing there Erin?\" David said in the back. \n\nErin turned around and looked at him. \"No. David you didn't say that either. This is wrong. You're saying things all wrong.\" \n\nTristan's grip tightened on her, focusing her attention on his face. \"Erin think. The village we just left. The men. The suspects. What kind of man is Abdi.\" \n\nErin frowned in confusion. \"What?\" \n\n\"What kind of man is he!\" David yelled in her ear. \n\n\"I don't know!\" Erin yelled back and looked at Abdi. The sun shone on his shaking body. His eyes were pitiful as fat tears rolled down his dusty face, creating a trail. His expression was pleading to them. \n\n\"Answer me Erin,\" Tristan said, \"what kind of man is he?\" \n\n\"A... a sad man?\" Erin stuttered as deep apprehension crept into her throat. \n\n\"No! Erin, think!\" David yelled again. \n\nErin saw Abdi's right arm move. \n\n\"He's... a, um, shy man?\" \n\n\"No!\" It was Tristan that yelled this time. \"Think!\" \n\nFear burst within her now, expanding her chest. Her eyes became moist as she watched Abdi's right arm extend itself further. She was running out of time, and out of answers. \n\n\"He's a scared man.\" She whispered. Abdi stopped moving entirely. He was stone still, watching her. \n\n\"Yes Erin,\" Tristan whispered, \"he's scared. He's afraid. And what would a scared man, with children, with a home, desperate to protect it all - what would he do to save all that he loves?\" \n\nAbdi's left hand shot forward. He was sobbing again, reaching for her. His cracked and bloody lips were moving fast, but Erin couldn't make it out. His right hand emerged. He was holding something. He stretched it out towards her. \n\nAn icy terror seized Erin. She ripped her arm from Tristan's grip and pressed her palms to the windshield. \n\n\"Anything!\" She spoke the answer. Erin started pounding her fist on the windshield. \n\n\"Abdi no!\" She screamed with all her might. \n\nThen he pushed the button. \n\nErin vomited over the side of her bed. \n\nHot sticky mess poured from her and onto carpet below. She sobbed as it dribbled onto the bed skirt, but she kept on retching. Her nose clogged and her teary vision was completely blurred in the darkness of her bedroom. It burned her nostrils and mouth on its way out. She heaved until most of the Christmas Eve dinner was on the floor. Once the gagging subsided, Erin's body slumped weakly. She felt a small tremble pass through her. She closed her eyes and forced herself to stop crying. \n\n'C'mon. Get it together.' \n\nDrained and exhausted, Erin forced herself up and tiptoed into the restroom. She washed her face, brushed her teeth for what felt like an eternity, and changed her pajamas. She grabbed a bucket, scrub brush, carpet cleaner, a towel, and disinfectant and crept back into her room. She spent the next hour cleaning up the mess. She scrubbed and sprayed and pushed back tears. \n\n\"This can't keep happening.\" She said aloud. She looked up and saw that it was 2 am. She swallowed a lump in her throat and pushed back the dream. She scrubbed and scrubbed and changed the sheets. She poured out the bucket in the restroom and scrubbed it out as well. She worked numbly. Once she was satisfied that everything was clean, if a bit damp, she grabbed her cell phone from the charger and crawled back under the blanket. \n\nWhat am I doing? He's asleep, I know this. \n\nErin's mind spoke, but her fingers kept moving. She scrolled down to the last name in her contacts, which didn't take long as she had no friends. \n\nWyatt. \n\nShe dialed. \n\n'Just wish him a Merry Christmas. Just leave a quick message. That's not so bad. Even though it is almost 3 am now.' \n\nShe bit her lip and shut her eyes and the dial tone rang through. Her body curved and she seemed to surround the phone in a fetal position. \n\n\"Wyatt...\" She whispered his name. \n\n\"Yeah?\" A groggy voice on the other end of the line answered. \n\nErin hadn't known she'd shut her eyes until they popped open at the sound of his voice. \n\n\"Wyatt?!\" she said almost frantically, \"what are you doing up?\" \n\n\"I'm not up,\" he answered in a hoarse voice, \"I'm asleep. Besides, you're calling me. Why are you up?\" \n\nErin paused before answering. \"Um, I uh, wanted to wish you a Merry Christmas,\" she lied pathetically. \n\nWyatt didn't buy it. \"At-\" he stopped to check the time, \"2:50 in the morning?\" \n\n\"The Christmas spirit can hit you at any time, don't you know?\" Erin chuckled weakly. \n\nWyatt wanted to laugh, and he would have, if he wasn't so worried. \"Erin.\" \n\nAnd that's all it took. Just the sound of his deep soothing voice, the soft way he spoke her name, was enough to break her. Erin let out a sob. \n\n\"I know this is childish, but I had a nightmare.\" \n\n\"It's not childish when you are dealing with the traumatic things you've had to endure. What happened?\" Wyatt's voice was clearer now as he forced himself awake. \n\n\"I don't want to talk about it.\" \n\nWyatt sighed. \"Yes you do. That's why you called me. You want someone to hear you.\" \n\n\"Yeah, I do. But not about this. I can't-\" Erin's voice broke and trailed off again. \n\n\"Erin, sweetheart listen to me. Listen to my voice. It's real.\" \n\n\"Wyatt-\" \n\n\"No Erin, hear me, right now. My voice talking to you over the phone, this is real. That dream is based on something very real, but it wasn't. That's gone now. It's done. But I'm here. Hold on to that. Hold on to me.\" \n\n\"I wish I could right now.\" \n\nThere was silence from the other end. \n\n\"Wyatt?\" \n\n\"I'm coming over.\" \n\nErin heard shuffling and a jingle of keys. \"What? Wyatt no, that's not necessary.\" \n\n\"What's your address?\" \n\n\"Wyatt-\" \n\n\"Erin, I'm coming. Even if I have to break into the school at 3 am and get Dannie's records to find the address, I will. But I'm hoping you'll make this a little easier for me. Please Erin.\" \n\nShe quietly rattled off the address. \n\n\"Thanks. I'll be there in 20.\" \n\nWyatt hung up before she could utter any more objections. \n\nHe's coming here. Now. Right now. \n\nErin hopped out of bed. She quickly wiped her tears and ran to the restroom. She examined herself and frowned. \n\n'You look like shit on a shingle. Geez.' \n\nShe grabbed her knit hat and stuffed in her curls. She pulled on a cardigan over her tank top. She looked down and decided that nothing could be done about her checkered purple pajama pants. She shuffled downstairs and waited by the window. \n\n'Fuck. I should have stopped him.' \n\nShe stared out expectantly for his car. She was glad that Morgan had made her get contacts. She didn't have to squint anymore as she gazed out into the blackness. She felt like a puppy waiting for their owner. She fidgeted and bit her thumbnail. In a sudden panic, she made a mad dash for the restroom. She brushed her teeth for the umpteenth time and spritzed herself down with vanilla sugar body spray. \n\n'What are you doing?' \n\nShe sighed and went back downstairs as headlights pulled up on the curb. She watched the car park and the tall figure come out and up to her door. Before he could knock, Erin unlocked the door and opened it. \n\n\"Wyatt.\" His name fell from her lips, light and weak. \n\nWyatt didn't hesitate. He wrapped his arms around her shoulders and pulled her body to his. He pulled her hat off in the process and buried his face in her hair. She closed her eyes and drank in his closeness. It was strangely exhilarating. His body on hers, her skin on hers, his warmth mixed with her own, it all felt like an immense hunger had been sated. Her skin was hungry for his. It occurred to her then that it had been years since she last allowed a man to touch her, to hold her, to fulfill this need for human contact. \n\nErin felt starved for him. \n\nWhile Wyatt caressed her back comfortingly, whispering soft soothing words to her and rubbing in slow circles, he felt Erin's hands scan his frame in short frantic spurts. She shifted backwards and pulled him in until they were out of the doorway. She pulled away only to close the door before wrapping herself around his body again. Wyatt obliged, hugging her tightly. He wanted so much to be the warm friend she needed, but her hands were distracting. \n\nHe couldn't exactly recall when they made their way beneath his hoodie and the shirt underneath, but he felt her small cool hands excite his skin. Gooseflesh broke out as her fingers raked down his back slowly. The blood in his body started to change directions. \n\n'No no no no. I can't be sleezy. Not now. Not here. She needs a friend, not a horn dog.' \n\nBut then Erin pulled back and slipped off the cardigan. She pushed Wyatt's hoodie over his head and tossed it aside. Her face set and determined. She knew what she wanted from him. And she was going to take it. \n\n\"Erin.\" He spoke her name tenderly. \"Do you want to talk about it now?\" \n\n\"No.\" \n\nHer answer was short, as she wasn't really paying attention to his words. Her fingertips were dancing along his exposed arms. Her eyes were burrowing their way through his shirt. \n\nWyatt watched her devour him with her gaze and it only made his temperature rise. He felt oddly vulnerable and a little awkward. 'I don't understand. I thought she was sad.' \n\n\"Erin-\" \n\n\"Hush.\" \n\nWithout warning, Erin got up on her tip toes, leaned to Wyatt's neck, and bit him. \n\nWyatt was stunned silent. \n\nThe bite was soft, but what got him was the feel of her tongue on his skin. It was hot, like a torch on his neck. Wyatt gasped as his cock hardened. \n\nErin didn't stop. She pulled him back close, her braless breasts mashed against his chest. Her nipples were hard and jutting enough for Wyatt to feel them beneath his own shirt. \n\n'What the fuck? God yes.' \n\nWyatt fell in line and pushed a hand through her hair. Her mouth suckled at the spot on his neck. She licked and tasted and moaned against him. Wyatt caressed her back and went so far as to give her round ass a shy squeeze. When she didn't immediately push him away, Wyatt did it again. Erin sighed. \n\n'She likes it!' \n\nWyatt grew bolder and pushed his hands into her pajama bottoms. He groaned when he felt her soft cotton panties clinging to her ass. He palmed both cheeks before giving them a generous squeeze. \n\nErin's mouth pulled away from Wyatt's neck so she could moan out loud. A flood of wetness dampened her panties. His big hands and tempered body were making her want to scream. She felt the bulge in his thin bottoms. She admitted to herself that she was shocked at its apparent size. She looked up into his dark eyes and she ground her body against it. ",
        "Wyatt hissed. \"Erin...\" \n\nShe loved the way he reacted. She did it again, moving herself up and down against his hardening shaft. Wyatt's grip in her hair tightened. \n\n\"Erin fuck. I'm trying not to-\" \n\n\"To what?\" she asked in a whisper. \n\n\"You were sad when you called. I don't want to take advantage of that but-\" \n\n\"You're not. Trust me.\" Erin decided to prove this by stepping back. Wyatt watched her as she tucked her hands beneath her tank top and slip it over her head. It was dark in the living room, but the moonlight from the windows were enough. Wyatt saw the round curve of Erin's breasts, the smooth deep tone of her skin, her even deeper dusky brown nipples. His swollen cock twitch and Wyatt did all he could not to grab it while he drank in her image. He took a step forward, ready to attack, when she held up a hand. \n\n\"Take off your shirt,\" She said in a low voice. \n\nWyatt immediately obeyed. He stood, eye glued to her tits, as he waited for her next instructions. \n\nErin swallowed hard and hugged Wyatt again, pressing their naked upper halves together. \n\n'Shit yes. I knew he would be warm.' \n\nErin closed eyes and pressed her ear to his chest. His beating heart echoed her own. She smiled. His heart was pounding in his chest. \n\n'He's nervous. Like me.' It was a comforting thought. \n\nWyatt's arms were around her again. He understood the moment for what it was. He set soft kisses on her forehead and in her hair. He lulled her softly with his words. \n\n\"You are so beautiful. Do you know that? Do you understand how beautiful you are?\" he whispered. \n\n\"No,\" she said, \"but I'm sure with you, I'll become convinced.\" \n\nWyatt smiled. \n\n\"God, your body feels so fucking good.\" Erin spoke just above a whisper, almost to herself. She inhaled the smell of his skin and committed it to memory. It was clean and sweet. It was Wyatt. This was Wyatt. She didn't know that Wyatt was doing the same thing, savoring her. \n\nIt was all well and good, until a door upstairs creaked open. Wyatt and Erin separated and looked at one another as the same thought crossed their minds. \n\nOh shit. Dannie! \n\nThey hit the floor and scrambled in the dark for clothes. Erin found Wyatt's hoodie and tossed it at him, hitting him in the face and almost toppling him over. \n\n\"Shit!\" He said in surprise. \n\n\"Shhhh! Sorry!\" Erin hushed him. She found her cardigan, but not the tank top. \n\n'Fuck. Fuck!' \n\nWyatt shoved his body into the hoodie, inside out of course. Erin pushed her arms into the cardigan, knowing it wasn't enough to hide her bare torso underneath. \n\nBefore either of them knew what was what, the light in the living room was flipped on. \n\nIt was Morgan who greeted them with a shocked smirk. \n\n\"Well, well, well. You don't look like Santa,\" she said, addressing Wyatt. He and Erin stood awkwardly. He blushed a deep crimson, while she glowered at her sister. \n\n\"Um,\" He tried, \"I just wanted to come wish Erin a Merry Christmas.\" \n\nErin couldn't help but giggle at his use of her lame excuse. \n\n\"And what are you laughing at, sinner?\" Morgan turned on her. \"It's a day of holiday cheer and here you two are, fucking under the mistletoe.\" \n\n\"We weren't fucking,\" Erin retorted, \"I had a bad dream and Wyatt came over to comfort me.\" \n\n\"With his dick?\" Morgan said incredulously. \n\nWyatt put his face in his palms and groaned. \"No ma'am.\" \n\nErin elbowed him. \"Stop ma'aming her. We didn't do anything dirty.\" \n\n\"Y'all are half naked in front of God and the Christmas tree, and you didn't do anything wrong.\" \n\nErin tried not to yield. She jutted out her chin defiantly. \"No. He just, held me. That is all I needed.\" She looked over to Wyatt with an appreciative look. \n\nHe smiled. \n\n\"You're welcome.\" He said softly as he gazed at her. \n\nMorgan watched them and smiled inwardly. But she spotted Wyatt's t-shirt on the ground and decided to break things up. She picked it up and shot it at his head. \n\n\"I think Erin is okay now. And Dannie will be up in a few hours. I don't know how understanding she'll be about this.\" \n\nErin rolled her eyes at her sister and turned back to Wyatt. \n\n\"I can't thank you enough.\" \n\nWyatt leaned down and kissed her forehead. \"Anytime. We still on for Saturday?\" \n\nErin nodded eagerly. \"Most definitely.\" \n\n\"Merry Christmas Erin.\" \n\n\"Merry Christmas Wyatt.\" \n\nShe walked him out and shut the door slowly. She was in a happy daze. \n\nWyatt. \n\nThat was, until Morgan found her tank top and threw it at the back of her sister's head. \n\n\"You're getting coal in your stocking!\" \n\n\"Is that a hickey!\" Casey pointed as she exclaimed. \n\n\"What? No!\" Wyatt slapped his hand over the spot on his neck. He had noticed it when he took a shower that Christmas morning. He'd woken very late, but very happy. Casey had come over so the two of them could prepare for Christmas day with both of their parents. They now sat in the car in front of their mother Ana Thompson's house. \n\n\"Wy! You got some Christmas nookie?!\" Casey burst forth with laughter. \n\nWyatt felt a blush coming on. \"No. I did see Erin, but we didn't-\" \n\n\"Do the horizontal tango?\" Casey snickered. \n\n\"Will you grow up please?\" Wyatt chided unconvincingly. It wasn't as if he hadn't thought about it the night before. Or then again in the shower. He had brought himself to climax thinking about her breasts, supple and warm, and her ass, tight and full. \n\n\"Aww, does my big brother have a bad case of blue balls?\" Casey teased and poked at Wyatt's arm. \n\nHe swatted her hand away. \"Shut up. No more about my balls. We've got to get through this fucking day.\" \n\nWyatt was right. Casey laid on a somber expression as they prepared to exit Wyatt's car. Casey hadn't seen her mother in a month, but spoke with her often as Wyatt did. She hadn't seen her father in a year but spoke with him occasionally over the phone. \n\nWyatt hadn't seen or spoken with him in three years. Frank Evans was mean, crass, and rude when he was actually around. When Frank told Ana he would be coming for Christmas, her kind heart couldn't refuse him even though no one wanted him there. Wyatt wasn't looking forward to seeing him at all. He glared at Frank's pickup truck sitting in Ana's driveway. \n\n\"Why did he show up this year?\" He frowned. \n\n\"Because he's got cancer.\" \n\nWyatt's head snapped to look at his sister. \"Are you joking because, if so, that's not fucking funny.\" \n\n\"Unfortunately not. We found out around the time you two stopped talking.\" \n\nWyatt was livid. \"Casey, what the fuck!\" \n\nShe cringed. \"I know, I know. But they swore me to secrecy!\" \n\n\"I don't give fuck!\" Wyatt growled, \"you tell me shit like this no matter what! Mom wanted you to keep this a secret too?\" \n\nCasey looked at him and nodded guiltily. \n\n\"Why?!\" Wyatt yelled. \n\n\"It was Frank's idea. He didn't want you to feel obligated to come back to him.\" \n\nWyatt rolled his eyes. \"No. He just wanted me to slink back like a little bitch and wouldn't take me any other way.\" \n\nWyatt's hands gripped the steering wheel tight. His knuckles turned white. He tried to deep breathe his rage away, but it wasn't working. \n\n\"As a side note, he's in remission. That's good right?\" Casey added shyly. She tried to touch his arm, but he shook her off. \n\n\"Don't.\" \n\n\"Wyatt-\" \n\n\"I said no. Don't touch me.\" \n\nCasey pouted. \n\n\"And you're sleeping here tonight.\" \n\n\"What!?\" Casey squalled. \"The hell I am! Wyatt?\" \n\n\"Well I'm sure as shit not driving you anywhere. Now get out and let's get this shit show over with.\" \n\n\"Wyatt please!\" Casey whined. \"I had to.\" \n\n\"No you didn't.\" Wyatt snarled. \"Years Casey! You kept this shit from me for fucking years! Why did you even tell me now? So I can be the asshole that ruins Christmas? He's my fucking dad too.\" \n\n\"You sure as hell don't act like it,\" Casey mumbled under her breath. \n\nWyatt saw red. \"Get. Out. Now.\" \n\nCasey frowned. \"Fuck it Wyatt. If you want to be pissed, then be pissed. I made mom and Frank a promise and I kept it. You choose to isolate yourself from the family. And this is what you get for it. No one can tell you shit anymore.\" \n\nWyatt was gearing up to yell at her again, but Casey wised up and got out the car. She fixed her dress and heels and walked to the house, leaving Wyatt there to stew. \n\nFuck them. Fuck them all. \n\nWyatt wanted to drive away and spend Christmas with Erin, Morgan and Dannie. He'd cook for them and get them presents and kiss Erin all he wanted. \n\nBut no. I'm stuck here with a bunch of liars, phonies, and bastards. \n\nHe sighed, letting out a deep, ragged breath. He knew he couldn't leave. It would break his mother's heart. So he gathered his gifts and finally got out of the car. \n\nCasey opened the door for him when he walked up to it. \n\n\"Better?\" She asked snidely. \n\n\"Fuck off.\" He shot back. \"And I wasn't joking before. You're not getting a ride home with me.\" \n\n\"Why do you have to be such an a-\" \n\n\"Wyatt!\" Their mother Ana appeared before them, dressed in red and green from her Christmas hat to her reindeer slippers. Wyatt immediately noticed how thin she was and didn't like it. \n\n\"Hey mom.\" He said, mustering up warmth. Unfortunately, the resentment he harbored was made apparent in stiff hug he gave her. \n\nAna frowned. \"What's wrong? Are you drinking again?\" \n\nCasey's mouth dropped. \n\nWyatt grit his teeth. \"No mom. I'm fine. You look...different.\" \n\n\"This is what a kept woman looks like. Carlo takes good care of me.\" Ana smiled and winked. Wyatt stayed frowning. \n\n\"Where is Daddy number 2?\" Casey asked, hoping to deflect the tension. \n\n\"In Miami with his family. His mother was too sick to travel so he went down to celebrate the holidays with her. He's just the sweetest.\" \n\nWyatt wasn't as angry, but he wasn't very keen on listening to the goings-on between his mom and unofficial stepfather. \n\n\"Where should I set these?\" He asked. Ana eyed him before pointing under the outrageously large Christmas tree. \n\nHe walked over and set down the gifts. When he looked back at his sister and mother, Ana had a hand over her mouth while Casey whispered in her ear. \n\nProbably telling her the jig is up. \n\nWyatt figured he was right on the money because his mother tried to walk towards him with an apologetic look on her face. \n\n\"Wyatt, let us explain-\" \n\n\"I'm going to greet everyone else.\" Wyatt turned on his heel and walked further into the house. He would listen to his mother's explanation, but first he needed a drink. A stiff one. \n\n'If only I could.' \n\nHe instead got ginger ale and made the rounds, catching up with various cousins and aunts and uncles. Ana kept trying to get his attention, but he'd slink his way from relative to relative to avoid what he knew would be an unpleasant conversation. \n\nShe gave up and returned to the kitchen to help finish preparing the meal. Wyatt saw how dejected she was and felt a pang of guilt. \n\n'I'll talk to her. Later.' \n\nOnce the food was ready and the table set, the relatives began migrating to their chairs in the dining room. Wyatt kept an eye out, but saw no sign of Frank. Ana sat at the end of the table. Wyatt swallowed hard and pulled up a chair to her right, across from Casey. The ladies looked at him skeptically. Wyatt held up his napkin. \n\n\"Peace.\" \n\nAna smiled and held out her hand. Wyatt held it and returned her smile. \"We still need to talk about it.\" \n\n\"I know baby.\" Ana kissed the back of her son's hand. She reached out and held Casey's as well. \"I love you both.\" \n\nThe trio didn't notice Frank Evans until he plopped down loudly next to Casey. \n\n\"Well, ain't this sweet.\" He drawled. \n\nWyatt's mood instantly soured. Casey seemed shrink into herself, looking down at her hands now in her lap. Ana tried to keep things light. \n\n\"Franklin. Welcome. Merry Christmas!\" \n\n\"Merry Christmas Ana!\" Frank said loudly. \"You look more beautiful than ever. Guess Ricky Ricardo is treating you right.\" \n\n'Better than you ever did.' \n\n\"And my sweet baby girl!\" Frank craned an arm around Casey. He planted a wet sloppy kiss on her cheek. \"How's school honey?\" \n\n\"It's going well Frank.\" \n\n\"Ahahaha! That's my girl. You all watch,\" Frank bellowed. \"This girl is gonna be somebody one day.\" Frank shook Casey as he laughed out loud. His breath reeked of whiskey, making Casey wrinkle her nose. She looked suffocated in Frank's jolly quake. \n\nWyatt's jaw set. The Thirst seized his throat. He forced himself not to eye Frank's drink. \n\n'Just a drop or two...' \n\n'No.' \n\nHe couldn't take it anymore. \n\n\"She is somebody Frank. But of course, you wouldn't know that.\" \n\nFrank squared his gaze on his son. \n\n\"And the prodigal son speaks!\" Frank cracked. \n\n\"Do you even know what prodigal means?\" \n\nFrank laughed, but there was no humor in his eyes. \n\nCasey's eyes bounced between them nervously. Frank still had an arm around her shoulders, his grip on her shoulder tightening. Ana fidgeted with her fork. \n\n\"Let's eat!\" She cried, feigning joy. But her guests moved slow and steady, all ready for the show down. \n\n\"Still a smartass little prick I see.\" \n\n\"Still an asshole I see.\" Wyatt fired back. \n\nFrank finally released Casey and shrugged. He frowned and took a generous sip of his drink. \n\n\"You still spending your days chasing after snot-nosed little kids?\" He raised his eyebrow. \n\nWyatt leaned forward. \"Yup. You still... doing nothing?\" \n\n\"See, that's where you're wrong boy.\" Frank shook his fork at Wyatt. \"I do a man's work. I get rough and dirty and I make money. When do you do that? Making mud pies with the kiddies?\" Frank laughed out loud at his own joke. \n\n\"Frank stop it!\" Ana scolded. \"It's Christmas. Let's eat and enjoy the family company.\" But no one seemed to hear her, other than Casey. \n\n\"Mom's right. Let's eat!\" She helped pass around mashed potatoes and greens, but Wyatt didn't see any of it. \n\n\"I'm fine Mom.\" He assured her. \"It's only Frank.\" \n\nThe two men stared off, tension filling the room like a thick cloud of anger and resentment. Frank smacked his lips and smirked. \n\n\"And tell me boy,\" Frank chided. \"You able to find a woman into kiddie teachers?\" \n\n\"Matter of fact-\" Casey started, but Wyatt shot her a death glare. She caught his look and shut down her sentence. \n\n\"Not yet Frank.\" \n\nFrank grinned wide, satisfied with his answer. \"I didn't think so. Girls aren't fighting for the whiny Mr. Rogers who can't handle a beer on a Wednesday.\" \n\nCasey and Ana dropped their utensils, as did a few of their cousins. \n\n'Well if it wasn't a secret before, it sure as shit ain't one now,' Casey thought. \n\n\"Franklin!\" Ana screeched at him. \"How can you say such an awful thing!\" \n\nBut Wyatt just smirked. \"Don't worry mom. Frank's just boasting since his little health scare is over. Testicular cancer ain't no joke.\" It was Wyatt's turn to have the whole family gape at him. \n\nFrank's face transformed. \"What are you talking about boy?\" \n\n\"You heard me. They snip off a ball or two there Frank? I was wondering why it was so imperative that I not find out about your little condition. You got neutered.\" \n\n\"Pssh. I still got more balls than you boy.\" Frank growled. \n\n\"You mean ball? No more plurals Frank.\" Wyatt grinned at his father, setting the older man off. \n\nFrank stood over Wyatt. \"Listen here, you little shit-\" \n\n\"No!\" Wyatt shot up as well, his fists clenched, his eyes narrowed on Frank. \"I'll never listen to you again. Sorry everyone, I must be taking my leave.\" Wyatt pushed back. \n\n\"Yeah, watch him run off with his tailed tucked between his legs.\" \n\nWyatt shot him the finger. He hoped Frank would throw his drink at him. \n\n'Just a taste.' \n\n'What the fuck?' \n\nWyatt felt shame at his urges. It was time to go. \n\n\"Bye mom. I'll call you.\" \n\nCasey stood to follow. Wyatt shot her another look. She pouted and sat back down quietly. \n\n\"Merry fucking Christmas.\" \n\n\"Y'all better not be hiking, because you are not dressed for it.\" Morgan said, admiring her work. \n\nErin looked at herself in the mirror and smiled. She'd borrowed Morgan's black-sleeved tight dress. She felt simple in her dark tights and boots. The gold spiked earrings and necklace added the edge she never thought she had. Her curls fell to the left, untamed and framing her face. \n\nMorgan applied her make-up, dark shadowed eyes and red stained lips. She raked her fingers through Erin's hair. \n\n\"You look like a rock star.\" She gleamed. \n\nErin smiled. \"Yeah? I mean, you know I don't really look, feminine.\" \n\nMorgan frowned. \"What are you talking about? You're gorgeous. You have weirdly perfect skin.\" She turned around and searched through her make-up bag for mascara. \n\nErin watched her sister and smiled. She felt a sudden burst of appreciation and love. She wrapped her arms around Morgan and pressed her face into her back. \n\n\"Thank you, big me.\" She said sincerely. \n\nMorgan smiled and squirmed a bit. \"You're welcome, little me.\" \n\nRight then, they heard a knock on the door. \n\nErin shot up straight. \"Fuck, he's early.\" \n\n\"Of course he is! What a gentleman!\" Morgan chimed and gathered up the make-up. \"You wearing panties?\" She asked suddenly. \n\n\"Yes.\" Erin stated with a hint of exasperation. \n\nMorgan frowned at her. \n\nErin rolled her eyes. \"For god's sake Morgan. It's our first date!\" \n\nMorgan shrugged. \"Whatever you say!\" \n\nWyatt was floored. \n\nErin stood before him, like a figure he'd dreamt up. \n\n'Jesus, has she been this hot the whole time?' \n\nHis eyes languidly crawled over her curves. He knew he wasn't hiding his lust very well, but he couldn't help it. \n\n\"Hi Wyatt.\" Erin smiled. She admired his outfit. Her eyes went straight for the navy blue tie. It was perfect and she could close her eyes and imagine him standing in front of the mirror, tying and retying it until it was perfect. She could see him adjusting it in the collar of his crisp white dress shirt. She could envision him ironing down any creases in his grey sweater before sliding it on top. She imagined him cleaning off his boots, as they looked perfect now. \n\n\"Um, hello.\" Wyatt coughed out. He randomly cleared his throat, and only then remembered that he'd brought her flowers. \"Shit, um these are for you.\" His clammy fist shot the lilies out in front of him. \n\n\"Thank you, they're beautiful. These look fresh!\" Before she could grab them, Morgan appeared next to her and yanked them out of Wyatt's hands. \n\n\"I'll take those!\" She disappeared again. \n\nErin shook her head. \"Sorry.\" \n\n\"No problem. Was she standing there the whole time?\" Wyatt joked. \n\n\"I don't know.\" Erin laughed. \n\n\"Here you go!\" Morgan appeared again, this time shoving Erin's coat and small purse into Erin's jumpy arms. \n\n\"What the fuck? Did you just phase next to me?\" Erin exclaimed. Wyatt chuckled. \n\n\"Yes. Now leave.\" Morgan hustled her out the door. \"Take good care of her Mr. Evans!\" \n\n\"I certainly will,\" Wyatt said cheerfully. \n\n\"And feel free to stay out late. Very late.\" Morgan winked. \n\nWyatt blushed. \"Um... uh thanks?\" \n\nErin shot her fist out and slugged Morgan on the shoulder. \n\nMorgan just laughed as she shut the door. \n\nErin sighed and shifted on her coat. \"Sorry about that.\" \n\nWyatt didn't hear her. He just stood awkwardly, watching her chest come forward and her back arch as she slipped on her coat. \n\n'Jesus, I'm in trouble.' \n\n\"So where are we going?\" Erin asked, calling back his attention. \n\n\"Oh uh... it's a surprise.\" Wyatt grinned. He seemed to gain a surge of energy and stayed that way the entire drive. He spoke excitedly, careful to avoid his Christmas escapades. He kept a smile on her face the whole ride and when Erin reached over and held his free hand as he drove, he almost jumped. \n\n'He's always so warm,' she thought. ",
        "They reached an old small warehouse. It was a bit out of the way and gave Erin the creeps. \n\n\"Wyatt, where are we?\" She asked, trying not to frown. She didn't like it. \n\n\"It's a surprise. Follow me.\" Wyatt walked ahead of her, but Erin stopped. \n\n\"Wyatt.\" She eyed him. \n\nWyatt frowned, then smiled softly. He extended his hand. \"Do you trust me?\" \n\nErin looked down at his hand. She looked back up at his green eyes and smile. \n\n'Here goes nothing.' \n\nShe clenched her left hand and gave her right hand to him. He pulled her along into the dark warehouse. It reminded her of the one from The Departed, and that didn't help ease her apprehension. They entered a freight elevator and began to ascend. Erin frowned deeply and held Wyatt's hand tight. He smiled down at her and squeezed her hand. \n\n\"Ok, so-\" he said as they came to a stop, \"this is going to be a little unorthodox.\" \n\nThe doors opened and Erin gasped. \n\nBefore her, a jungle emerged. Gorgeous flowers and shrubs burst all around her. The intense floral smell hit her, filled her nostrils, her mouth, her lungs. Green vines draped from the glass ceiling. The colors and scents overwhelmed her. Her mouth hung open; her eyes darted every which way. \n\n\"Welcome to one of the last greenhouses in the city,\" Wyatt said proudly. \n\n\"What?\" \n\n\"Yeah. It was a pet project of mine when I started rehab. I know it's not very big-\" \n\n\"It's breathtaking Wyatt,\" Erin said up to him, \"It's like a dream in winter.\" She walked through the aisles, caressing the delicate flower petals with her fingertips. \n\n\"Casey helped me build it. My kids volunteered here once, but we couldn't swing it again. They don't like the area. But I do. It's old and industrial, but it's quiet. I've never had any trouble here.\" \n\nErin listened, but she was in wonder. She saw roses and lilies, which she recognized, but most of the other flowers she didn't. \n\n\"Is this real?\" she asked herself. \n\nWyatt answered. \"Yeah. And it wasn't easy, believe me.\" He held her hand as he showed her the different buds and blooms. She was fascinated by each and every one. \n\n'She likes it! She really likes it!' \n\nWyatt was happy. He described the planting process and all the reading he had to do. \n\n\"The guys at Lowes only knew so much.\" He laughed. He led Erin into an office in the back. \n\nThere was a cozy office with a table for two set in the middle. Erin smiled. \n\n\"This is lovely Wyatt. What made you pick here?\" \n\n\"You,\" he said, admiring his work. \n\n\"Me?\" \n\n\"Yeah.\" He sat her down and took her coat. \n\n\"How did I inspire any of this?\" Erin watched him. He placed her coat and his on the couch by the door and sat across from her. He shoved his iPhone into its home and turned on Pandora. \n\n\"The rest of the world is loud and harsh and it feels inescapable at times,\" He said, \"you told me once that you used dunk your head in water sometimes when you have attacks. I figured that was a way to drown out the noise in your head.\" \n\nHe looked at her earnestly. \"The world is quiet here.\" \n\nErin wanted to cry. \n\n\"You heard me.\" \n\nWyatt nodded and smiled. \n\nThey ate heartily and lounged on the couch. Wyatt was stretched out with Erin on top of him. The sweet smell of flowers lingered in the air. His heartbeat was steady and soothing in her ear. His hand was buried in her hair, while the other was around her waist. \n\n\"Thank you Wyatt,\" She said against his chest. \n\n\"For what?\" \n\nErin sat up and looked him in the eyes. \"For this. For all of this.\" \n\nWyatt gave her a lazy half smile. \"Thank you for coming.\" \n\nErin couldn't help but laugh. \"Of course I came.\" \n\n\"Yeah but,\" Wyatt shook his head, \"you didn't have to. You didn't have to choose me.\" He sat up, speaking seriously. \"I know I'm not exactly normal. I spend so much time trying to fight off...\" He trailed off. \n\n\"The Thirst?\" \n\nWyatt nodded. \"I'm alone a lot. Trying not to give in. It's like-\" \n\n\"Like you're not a real person. Not like everyone else. You're some anomaly, but not interesting enough to study.\" \n\nWyatt swallowed. It just occurred to him how close their faces were. They'd yet to kiss. \n\n\"Yes,\" he whispered. \n\nAs if on cue, the words of the playing song crept between them. \n\nHoney just put your sweet lips on my lips, we should just kiss like real people do. \n\nWyatt's eyes darkened. Erin watched him brush her hair from her eyes. Her gaze slid down to his lips. She studied them. Wyatt did the same, moving his thumb to lightly glide along her bottom lip. He opened his mouth then and sang along, his voice hushed and deep. \n\n\"I could not ask you where you came from, \n\nI could not ask it and neither could you. \n\nHoney just put your sweet lips on my lips, \n\nWe could just kiss, like real people do.\" \n\nErin leaned forward and pressed her lips to his. Their tender kiss was more than she expected it to be. Wyatt's lips were as warm as she hoped they would be, but they were also sweet and supple. She opened her mouth and took his bottom lip between hers. His tongue slipped forward, like a guest she'd been waiting to arrive. She greeted his with her own, eliciting a drowsy rumble in his chest. Her lips parted wider, inviting him in. Wyatt held her head still with his grip and plunged forward, trying to taste all of her at once. Erin's breath was gone, making her lungs ache. But she was afraid to breathe. She didn't want it to end. \n\nIt was Wyatt who pulled back. \n\n\"Are you real?\" He murmured. \n\nErin shook her head slowly. \"But then, neither are you. We're perfect for each other.\" \n\nWyatt grinned. \n\nHe hadn't felt Thirsty all night."
    ],
    "authorname": "curiouskatty",
    "tags": [
        "black woman",
        "interracial love",
        "white man",
        "veteran"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-phoenix-ch-03"
}