{
    "title": "3 Coins in the Fountain",
    "pages": [
        "Hi folks, this story was edited with great skill by Baney-R. Any goof ups probably happened when I went back over it and changed a few things. This is a longer story so those of you who like that sort thing can relax with a beer and enjoy it. Those of you who don't can get off of the bus now. But you don't get to whine about it later because you have been warned and have chosen to continue. Please note again, this is a longer story. So if you write in the comments below that it was too long you'll only make yourself look stupid. SS06\n\n* * * * * *\n\nThe ads. We see them in a million places at all times of the day. They urge us to be more than we are. They urge us to be brave. They urge us to go beyond our ordinary existence and shoot for the stars. They urge us to go for our dreams. \n\n\"Just do it,\" they say. \"No Fear!\" \"YOLO!\" \"Be all you can be!\"\n\nThat bullshit is what got all of this started. My name is Madelyne Richards and this is my story. It's a really fucked up story so far but I'm still working my way towards the happy ending. A lot of the shit that happened to me is pure bullshit. I'm 100% sure you'll see it my way when this tale is done.\n\nThis all started about six years ago when I was thirty. I was happily married to the man of my dreams. My husband Reid is a chemical engineer and a very successful one. He has his own consulting firm. They do all kinds of work that most people never think about.\n\nThey do product testing for sports drinks, make-up products, automotive solutions and almost anything that needs to be proven safe for human use or consumption. \n\nWe had a lifestyle that was beyond comfortable but not quite rich. But at thirty, it was about to happen. I was about to give up my cushy lifestyle. I was about to begin twenty years or so of hard labor and poverty. I was about to lose most of my husband's love because of something I had no fucking control over. \n\nMy mother loved Reid. And believe it or not his mother loves me. I guess that's why they started putting so much pressure on us and wanted to make us leave our easy, carefree lifestyle and enter into the prison of being parents. They wanted to see my body transformed into something that more closely resembled ... Theirs. They wanted to hear the annoying pitter patter of tiny baby feet.\n\nAnd God knows I wanted to hear it too. I just wasn't ready for it then. I mean on paper, I liked the idea of having a cute little baby. I also loved all of the extra attention I would get. And I looooooooovvvvvedddd the idea of Reid spoiling me even more than he usually did.\n\nI could see myself bravely enduring the morning sickness and sending Reid on all kinds of errands to get me things that I just had to have. I could see the humor in sending him out in the middle of the night for some hard to find food only to find me asleep when he got back with it. I could also see humor in me deciding that I didn't want it, once I saw it, or barfing at the first taste of it. \n\nBut what I hated most was the thought of what it would do to my body. I had always been \"the hot one,\" and I didn't want to give that up. I had no desire to become \"the invisible woman. I didn't want to just be referred to as Reid Richards' wife. I didn't want that suburban mom body. \n\nSure there were a few very lucky women who were able to retain their shape and some who actually snapped right back after a pregnancy. But they were mostly super rich Hollywood types who had their own nutritionists and personal trainers and body sculpting surgeons on call. I hated those bitches with a passion.\n\nAnd even worse than them I hated those track bitches. My husband Reid is an avid runner. He ran track in college and loves to watch those TV track meets that the rest of the world forgets about until the Olympics. There's always some bitch in those meets that took a year off to spit out a perfect baby and then runs her skinny ass back into shape and sets a world record. \n\nEvery time I see that shit it makes me want to chase her skinny but muscular ass around that track and beat the shit out of her. \n\nAnd that was where this story started. My mom had just left after another afternoon of veiled hints and outright whining about not having any God damned grandkids.\n\nI was really pissed. It wouldn't have been the first time I'd told my mother to get fucked, but Reid took her side. \n\n\"You're right, Mom,\" he said. \"It's time.\" \n\nI was speechless. I stood there watching her hug him, while I, the designated brood mare, tried to find words to describe their outright audacity at their decision to turn MY body into an incubator or baby factory for children that I wasn't sure I was ready for. \n\n\"You get right on that, Reid,\" gushed my mother. I hated that bitch at that moment. \n\n\"Yes Ma'am,\" he said, right back to her. \"I'll get right on it.\" Even as he said it, he reached over and smacked my ass, while my mom looked on with glee. \n\nShe walked out the door a few minutes later, grinning like a demented Cheshire cat. \n\nAs soon as the door closed behind her I slapped Reid on the head. \"What the fuck is wrong with you?\" I asked. \"When did WE decide that it was time for us to start our family? My mother does not get to decide what happens with MY body. I mean, I know that you've been sucking her dick to stay on her good side, and I love you for that. But this is something that WE have to be ready for. We can't just start spitting out kids because my mother wants us to have kids now, so she can be a hot grandma.\"\n\n\"Here's my logic,\" he began. I got a sinking feeling in the pit of my stomach. My husband's logic is not logical. He's the same guy who decided that since that price of superchargers seemed to increase with every generation, he should invest six thousand dollars and buy one for his Mustang, because in a few years it would cost even more. That was three years ago. And it didn't quite work out that way. \n\nWhile the superchargers for the newer Mustangs WERE, in fact, more expensive, the ones for his Mustang had actually stayed the same and with available discounts were actually much cheaper. \n\nNow this is where his logic fails. Reid saw this as a wash. Sure he could have saved a few bucks, but it would have meant waiting a year or two for the supercharger. In his mind it wasn't worth it. \n\nBut in the real world, why the hell did he need a supercharger anyway? What roads were there where four hundred plus horsepower just wasn't enough? I can't think of a single situation where he just had to have over six hundred horsepower.\n\nMaybe it was some kind of guy thing. Because whenever someone came over to visit us Reid inevitably showed them his Mustang. The women always went, \"Oh ... It's a car,\" end of conversation. But the guys always asked, \"How much horsepower?\" \n\nI have no idea why he didn't just tell them it had six million horsepower and be done with it. I mean there was no way to prove it. He always opened the hood and showed them all of those shiny pulleys and wires. And they always nodded their heads up and down. They leaned over for a closer look and pretended they understood it all. \n\nI asked my dad about it once and he finally admitted to me that he had no idea what all of that shit did. He just nodded and smiled because he didn't want anybody to think that he didn't know what it was for. But I had to go and marry the one idiot who really understood that shit and craved it. \n\nSo anyway, when Reid started trying to explain his logic about us having a kid or kids, I got scared. \n\n\"Since we know we're going to eventually do it anyway,\" he said. \"Why not just go ahead and do it? Let's just knock one or two things off of the B4K list and then knock 'em all out at the same time. In five or six years it will all be over with.\"\n\n\"Okay Reid what the hell is a befork list?\" I asked. \"And when did we have one? What the hell do you mean knock 'em all out at the same time? And last time I heard your kids are with you for at least eighteen years not five or six.\"\n\nHe sat me down at the kitchen table like I was an idiot and he had to slow things down enough for me to understand him. The B4K list included all of the things that we'd dreamed of doing that would be curtailed or at least hindered by having kids. \n\nThe crazy thing was that Reid was not just pulling things out of his ass. He'd included almost every stupid thing that I wanted to try and his things too. \n\nHe'd remembered things that we'd talked about when we first met. I was surprised that he'd remembered that I wanted to learn to surf in Hawaii or that I wanted to learn to ski in Colorado. Hearing him talking about things that I had dreamed of doing when I was younger as if they were really important almost made me cry. \n\nIt made me realized exactly how much the idiot loved me.\n\n\"So let's go to Europe first,\" he said. \n\nI vaguely remembered one of his Indiana Jones like fantasies about exploring old castles and new racetracks around Europe. I also realized that I had promised to accompany him. But those had been the promises of a very young woman who was madly in love with the man of her dreams. \n\nThe key word here is \"MADLY.\" In other words, I was fucking crazy. My love for Reid was so intense that I'd spent nearly every waking moment, thinking about him. As we spoke in those early days, I wanted him to know me and love me. I wanted him to know everything about me and love me more. But my fear of being ridiculed or rejected caused me to hold back just one secret. \n\nCome on don't be so shocked. We all have our secrets. I have one. You have one too. Don't pretend that you don't. I know about that hidden file folder on your hard drive buddy. \n\nMy secret is a small one. It's a phobia really. Hodo-phobia is the fear of travel. There is no fucking way Reid is going to get me on a plane, train or ship. Shit, I Pat Benatar 4, every time I get into a car. \n\nAnyway, somehow I never got around to ever mentioning this to him ... Or to anyone else. \n\n\"Uhm ... Reid, Honey, this might not be the best time to go to Europe. You know they've been having all of those terror attacks ...\" I said, nervously. \n\n\"Okay, so we won't go to France,\" he smiled. \"And I had no plans on going to Belgium anyway. I mean seriously ... Missing France would be tragic, but outside of the chocolate factory and the Jean Claude Van Damme museum what is there to see in ...\"\n\n\"It's not just France and Belgium,\" I yelled. \"This is just not the time to go to Europe. It's just not safe.\" \n\n\"So ... When will it be a good time?\" he asked. \n\n\"We don't have the money,\" I said trying to change the subject.\"\n\n\"Yeah we do,\" he said. \"I opened an account just for this trip more than three years ago. A part of our taxes each year, every bonus I've gotten and a lot of my overtime money has been funneled into it. We have more than enough. I've also been putting money away for another Mustang, but I can hold off for a few years. I'm not really in love with the new body style. So if I throw that money in with the Europe money then we can ...\" \n\n\"We could have redecorated the house when I wanted to last year,\" I screamed. \"And we could have bought that fucking Gazebo I wanted for the yard ...\" I just walked away from him in mock anger. \n\nBut I knew it wasn't going to be the end of things. He actually came to me later and apologized for saving money for our trip. He'd told me that he'd wanted to surprise me with the trip when he thought we had enough money. He also told me that when it came to Mustangs, he was like those people on hoarders. He would probably never have enough of them. Then he kissed me and I just lost focus. \n\nI have no idea how Reid does it to me, but Europe was no longer even a blip on my radar. I wrapped my arms around him and my legs around his waist. His hands grabbed my ass to hold me against him, while he tried to suck my soul out of my body. His tongue was so far in my mouth it was almost down my throat. \n\nBut it wasn't enough. It was never enough. We had too much in our way, so our clothes began to vanish. \n\nIn record time, Reid had me flat on my back, with my legs in the air. When he entered me, it was pure bliss. We fit together like a hand in a custom made glove. \n\nMy pelvis rose involuntarily to meet his every thrust. Meanwhile, our mouths continued to merge. I love his taste. I swear our tongues become one when we kiss. \n\nHis hands tweaked my boobs with just the right amount of pressure. He tugged on my nipples while caressing the body of each breast as if they were the most important things in the world. My tits weren't big, but they fit my frame and Reid seemed to like them. \n\nHis hands rubbed down my sides and finally grabbed my ass. He pulled my ass cheeks apart and began to slam himself inside of me even further. The added penetration sent chills throughout my body. \n\nA stirring deep inside me told me what was coming. It felt as if a portal to my soul was opening just for him. I began to sweat and my nipples felt as if they were enlarging. \n\nMy pussy started to ripple, but there was something else going on. I was experiencing feelings that I never had before. \n\nNormally when I'm about to cum, my mind shuts down and all I can do is feel. The ability to think leaves me. But this time was so different. I had a vision. I saw images of myself with a blown up belly. \n\nI saw Reid, rubbing my tummy and talking to our child in the womb. That was when the first orgasm hit me. It was the most intense feeling that I had ever experienced. \n\nI knew then that Reid and my mom were right. It was time for me to put being a girl away. My body was ready to make a baby. I had to get off of the pill and start picking out names. \n\nWe fell asleep on each other's arms and sometime during the night, I woke him up and told him the truth. \n\nReid then did a completely Reid thing. He told me that going to Europe really didn't mean that much to him. But knowing him the way I do, I knew that he was lying. \n\n\"Honey, why don't YOU go,\" I said. At that moment, more than my vagina was gaping open. My heart was so full of love for Reid at that moment that I felt like that love struck 22 year old again.\n\nIt just seemed unfair for him to have to give up his dream because I was afraid to fly or to get on a ship.\n\nBesides, I didn't want there to be any resentment between us in later years. When we hit our fifties and could barely stand each other, I didn't want to hear him telling everyone we knew how he didn't get to go to Europe because I was afraid.\n\nSo barely three weeks later, I was kissing him goodbye at the local airport. I gave him one of those kisses that everyone in the area becomes jealous of. It was the kind of kiss that let everyone watching us know that being away from each other was probably going to kill us. \n\nOlder women in the area remembered when they were like me. Younger women in the area couldn't wait to be me. And every man who saw us wanted me. \n\nI'm not the most beautiful woman in the world, but I'm okay. It's not my looks that made me desirable. It's the way I plastered myself to Reid. As we kissed I molded myself against him so tightly that not even the tiniest micro organism could get between us. \n\nMy boobs flattened against his chest. Our bellies rubbed against each other and our lower abdomens meshed. It was the type of hug that only people who are intimate and have been so for a long time can do. \n\nIt's a funny thing because men and women view things differently. Women who saw us got the idea that we loved each other very much. Men who saw us were sure that I was giving him pussy on a very regular basis.\n\nThe drive home from the airport was almost more than I could stand. I texted him at least five times before I got home. \n\nI spent a lonely night in front of the TV and went to bed but couldn't sleep until he answered my texts. It was awful. I had never been so lonely in my entire life. I felt as if a part of me was missing.\n\nThe morning brought no relief. In fact I felt worse. I was going crazy. My best friend, Nancy came over. And as we sat in the sun on my rear deck, I told her about my problem. \n\n\"I miss him too much Nance,\" I said. \"I wish I'd gone with him.\"\n\n\"Then go,\" she said rolling her eyes. \"Just go where he is. Surprise him!\" She got an evil look on her eyes as she said it. \n\n\"I can't,\" I said after a few moments of consideration. \"I must be Mr. T's long lost white daughter.\" She started laughing then.\n\n\"Why would you think that?\" she asked.\n\n\"Cuz, I ain't gettin on no plane, Hannibal,\" I said, making my voice sound deeper and rougher. \n\n\"Well, he'll be back in less than three weeks, Honey,\" she said. \"And a few days after he gets back, he can tell you all about it. He can tell you about the museums, and the art, and the clothes, and just how it felt to be in Europe. You know I've always wondered if Europe was kind of like the US. You know how every state has its own unique flavor, but all in all, no matter where you go, it just feels like America.\"\n\nSometimes without meaning to or trying to, Nancy said some of the smartest God damned things. There were times when she sounded so smart that I forgot how stupid she really is. \n\n\"Wait ...\" I said. \"What do you mean a few days after he gets back?\"\n\n\"Well, for the first few days you two will be too busy fucking each other's brains out to talk about anything,\" she laughed. \n\n\"Will not,\" I said, turning a bright shade of red. \n\n\"Bullshit,\" she spat. \"I've heard the two of you going at it. Just the other night, you were yowling like a fucking AlleyKat.\" \n\nI quickly changed the subject just as I heard the screen door next door slam. \n\n\"I can't wait to hear about all of the art,\" I said. \"I hope he remembers to take pictures. Reid really isn't big on photos. When I text him, I'll have to remind him.\"\n\n\"Yeah, I'm sure old Reid will be lookin' at a lot of ... ART,\" laughed a male voice from over the fence. \n\n\"See, that's what I was thinking,\" said Nancy. \"You just heard it from his best God damned friend. Great minds think alike, right Kyle?\"\n\n\"What are you talking about?\" I asked. I knew that Nancy had been trying to get with Kyle since she first met him. \n\n\"You heard Kyle, Dummy,\" she said. \"Your husband, without you being there has turned this trip into some kind of European pussy hunt. He's gonna be fucking everything that ain't nailed down in several different countries. I told you that you should have taken your ass over there. \n\nYou could have just taken a sleeping pill just before you got on the plane and slept through it. Now you're gonna have to deal with him bringing you back all kinds of deadly European VD. \n\nI've heard they have shit over there that not only resists antibiotics but gets stronger from them. It comes from the fact that they don't shave their legs and their pits.\" \n\nNancy was off on one of her rants. But the things she said had affected me. As she geared up to start again, I heard Kyle laughing uncontrollably. \n\n\"So when he gets back, you have to confront him, and demand a bunch of jewelry and a new car,\" she said. \"Make that motherfucker kiss your ass for a while. Make him eat your pussy whenever you feel like it.\" \n\n\"I already have all of the jewelry I need,\" I said. \"And he just bought me a new car. Right before he got his new Mustang. And ... It's kind of none of your business, but he already does eat my ... You know ...whenever I want him to. But if he does what you think he's doing, we'd be talking about a divorce.\" \n\nKyle continued to laugh even harder and Nancy looked at me like I was stupid. \"I don't understand,\" she said. \"You love him. You love him a lot. Why would you want a divorce?\"\n\n\"Because he's over there cheating on me with a bunch of sleazy European whores,\" I said.\n\n\"Are you crazy?\" she said. \"All he's doing is trying out some different women. It's nothing serious, it's only sex. He's gonna pick up some new techniques and bring them back here to try them out on you, Dummy. It will spice up your marriage and make it fresh. He won't love you an ounce less. It's only sex. He'd be stupid not to do it.\" ",
        "She turned and kicked my fence. \"What's so God damned funny Kyle?\" she laughed. \n\n\"Nancy, have you ever wondered why I pretend not to notice that you have the hots for me?\" he asked. \n\n\"No ...\" she said. \"Maybe ... Okay, yeah!\"\n\n\"That's why,\" he said leaving her confused. \"You are so far from the truth that it isn't even funny.\"\n\n\"So what is the truth?\" I asked.\n\n\"Yeah, what is the truth?\" echoed Nancy. \"And what the hell do you mean I have the hots for YOU? You make it seem like I'm desperate or something. I am not ...\"\n\n\"Nancy are you free tonight?\" he asked.\n\n\"Absolutely!\" she said, with a huge smile on her face. \n\n\"Dammit, I wish I was going to be in town,\" he said. Then he turned to me. It was all I could do not to laugh at the way he had made a fool out of Nancy.\n\n\"Maddie, you'd have to be an idiot to listen to that mattress tester,\" he said. \"Reid loves you more than anything. And you don't have to worry about him cheating on you, he'd never do that. Ever since the two of you met you've been the girl of his dreams. He doesn't even see women other than you.\"\n\nI could tell that he wasn't lying. It made me feel so much better. \n\n\"You're stupid, Kyle,\" chimed in Nancy. \"The store I work at doesn't sell mattresses. We only sell furniture. And I don't test the furniture. I just sell it.\"\n\n\"Sorry,\" he said dramatically. \"Do you sometimes walk people around the store to show them furniture?\"\n\n\"Of course, Dummy,\" she said.\n\n\"So you get paid for \"ESCORTING,\" people around the store. \n\n\"No, Kyle,\" she said exasperatedly. \"I do the escort stuff for free.\"\n\n\"So you're an unpaid escort?\" he asked. I saw where he was leading her and changed the subject again.\n\n\"So Kyle, what IS Reid doing in Europe?\"I asked. \n\n\"He's .. uhm ... Europing,\" said Kyle nervously. \"Dammit Maddie, I can't rat him out.\"\n\n\"So he is cheating on me?\" I said. \n\n\"Of course not,\" he countered. \"He's just getting rid of a few items on his bucket list before he has to settle down and be a responsible father.\"\n\n\"Told ya it was sex,\" said Nancy.\n\n\"It's not sex, you idiot, he's racing,\" spat Kyle. \n\n\"He's what!\" I screamed. \"Fuck! Kyle you'd better tell me all of it, or I'll tell him that it was you who told me.\"\n\n\"He went to Europe to race,\" said Kyle sadly. \"That's why he picked those three countries. While he's in Italy, he'll spend his days at a world famous formula one driving school. Then he goes to Germany to drive on the autobahn. And finally to France, they have those all comers races there. You can rent a car, race it and even have a video of yourself in the race. It's an organized tour. Lots of guys do it.\n\nYou know how crazy he is about his cars. He just wanted to try some stuff before he turns into an old guy.\" \n\n\"So he lied to me this whole time?\" I said angrily.\n\n\"No Maddie,\" he said. \"It wasn't like that. He just decided to try this stuff when he found out that you weren't going with him. Before that he was planning on museums and plazas and all of that other boring European bullshit that tourists from all over the world go there to do and then go home and bore the shit out of anyone who'll listen to them.\" \n\n\"Oh ... so I'm only good for doing boring shit with?\" I screamed. \n\n\"Of course not Maddie,\" he said. \"Reid loves you ... Oh shit! Gotta go, I'm late for work.\" \n\nI was ready to explode. I was so angry at Reid that I started ignoring his phone calls. \n\nLooking back on it now, I see my mistake. I was so consumed with the fact that Reid had ... Well he didn't actually lie to me. He just left a few details out. But it hurt me badly.\n\nWhere most women would have laughed or even considered themselves lucky to have a man who loved them so much that he would never even think about cheating on them, I got incredibly pissed.\n\nAnd as for him racing ... Shit, cars in general and Mustangs in particular were a part of Reid's DNA. He raced here at home almost every time he got into the car.\n\nOver the next few days my anger only increased. It was Nancy who tried to get my mind off of it. \n\nShe suggested that I go out to a party with her. \"If he's over there getting his fun on and driving all fast and crazy, maybe you should have some fun too.\n\nOne of the reasons I went was that Reid would never have allowed me to go out with Nancy if he was home.\n\nWe went to the party and it was okay. They bad food and liquor and there was music playing. It was the same old shit that happens at every other party. \n\nI guess about halfway into the party one of the host's neighbors called the police and everyone had to leave.\n\nNancy was really upset. She'd been the belle of the ball with three or four guys following her around the whole night.\n\n\"Fuck Kyle!\" she'd whispered to me at one point during the night.\n\nI laughed because I knew that was what she actually wanted to do.\n\nBut with Kyle out of town on one of his frequent business trips, she was having her fun as usual.\n\n\"Maddie, I think we should continue the party, or at least a smaller version of it out on your deck,\" she said. She wasn't quite drunk and neither was I, but we were both a bit tipsy.\n\n\"Reid wouldn't like that,\" I said.\n\n\"Reid isn't even in the country,\" she said. \"He's not even on the same continent we're on. And big mouth Kyle is out of town on business. So let's go a little bit wild.\"\n\nI think she saw my hesitation.\n\n\"Come on Maddie ... I like these guys,\" she said. \"Besides, Reid doesn't ask you when he wants to do stuff. So you don't have to ask him either.\"\n\nNancy had just pushed my button. I was still so pissed at Reid that I hadn't answered or returned any of his calls or texts. And I wasn't tipsy enough to be falling over and stupid, but my judgment must have been compromised.\n\n\"Let's party,\" I said. Famous last words, but I didn't know it at the time.\n\nI awoke the next morning with a splitting headache and a foul taste in my mouth. As I tried to sit up, I realized that my entire body hurt. \n\nMy breasts ached. My vagina was extremely sore and tender and my ass hurt really badly. I was also naked. \n\nI began crying as soon as I realized what had happened. \n\nNancy stumbled into my room. \"Can you keep it down?\" she said. \"I have a headache.\"\n\n\"Fuck your headache,\" I spat. \"Your friends raped me.\"\n\nShe started laughing as if I'd said something extremely funny. \"You were begging them for it,\" she laughed. \"You kept telling them you were going to get even with Reid.\"\n\nAs she mentioned my husband, I suddenly threw up. \n\nNancy got me a towel. She wiped my mouth and my face. \"I cheated on my husband,\" I cried.\n\n\"Maybe ...\" she smiled. \"But you were incredible! I can barely fit Roy's dick in my pussy. You took it in your ass. And you had all three of them at once. You're a natural.\"\n\n\"What I am is a whore!\" I cried. \"I'm a drunken whore who fucked her marriage away.\"\n\n\"Only if you get caught,\" she said. \"And Reid is in Europe, racing. He'll never find out.\"\n\nWhen she mentioned Reid and what he was doing, I remembered how furious I was with him. He had been trying to call or text me the entire day before. I had been purposefully ignoring his calls.\n\nI got up and looked for my phone. I couldn't find it. \n\n\"You've always wondered what my life was like,\" said Nancy. \"Now you know. How do you feel?\"\n\n\"I feel awful,\" I said. \"Everything hurts. Your friends treated me like a cheap slut. They didn't care about me. They just wanted to get off. I was just a hole to them.\" I threw up again.\n\nFor the next couple of days my body healed. The bruises faded, but my disgust with myself and what I had done to my marriage grew.\n\nNancy, of course, regarded me with a newfound respect and admiration.\n\n\"I'm just in awe that you were able to take that huge dick up your ass,\" she gushed. \"What did it feel like?\"\n\n\"How the hell should I know?\" I asked. \"I was drunk out of my mind. I don't remember any of it.\"\n\n\"That's why we need to do it again!\" she said.\n\n\"There is no way that would ever happen again,\" I told her. \n\n\"For years now you' e been telling me how my life and the things I do amaze you,\" she said. \"Honey this is it. This is your last hurrah! It's your last time to go out and do something really stupid and wild. A year from now you're going to be someone's mom. Reid sure is living out his fantasies. \n\nHe's out there risking his God damned life every God damned day on a race track. Do you think for one second that he's thinking about what would happen to you if he's maimed or severely injured or crippled or even killed driving some car around a track?\"\n\nI looked at her again and even more of my anger came back.\n\n\"You're not going to be risking YOUR life or YOUR health,\" she said. \"And since he isn't going to find out, you aren't risking anything.\"\n\n\"What if one of these guys falls in love with me, or starts blabbing?\" I asked.\n\n\"Not gonna happen,\" she said. \"All three of them are happily married. Two of them have kids. None of them wants to get divorced over you, Maddie. I mean you have that girl next door type of cuteness, but I don't think they're gonna fall in love with you. This is sex pure and simple.\"\n\n\"Then why ...?\" I paused. \"Why do they want me?\" \n\n\"Because you're a wild freaky bitch who'll do and enjoy the kind of shit they can't get their wives to do,\" she said. \"I'll call them.\"\n\nOver the next few hours my mind, my heart and my emotions all grappled with the idea of what I was about to do. \n\nOn one hand, I knew that it was wrong. But it was no more wrong than what Reid was doing. It was also a lot less dangerous. \n\nEvery time I thought about him, I got angry all over again. Reid knew that I hated the thought of him driving fast. We'd had several arguments about it from occasions when he and I went out in his car and he had to win against other drivers who tried to beat us to the next stop light or pass us on the freeway. \n\nIt was as if he turned into a different person when he got into a car. And his Mustang seemed to invite people to race. Every time someone saw that car they were grinning like a fuckin' idiot and revving their engine. That car was a magnet for trouble.\n\nI was also furious whenever he got a speeding ticket. I needed to have my husband safe and sound. Maybe my feelings were an offshoot of my phobia, but it bothered me. \n\nThe man who claimed to love me, not taking my feelings into consideration bothered me more. \n\nSometime after dark, my doorbell rang. Nancy ushered three men into my living room. I vaguely remembered them from the week before. But I had never really paid them any attention then. I had never considered that I might have ended up having sex with any of them. \n\nThere was certainly no chance that I might fall in love with any of them. There was nothing seemingly attractive about any of them. In fact I felt nothing for any of them.\n\nWith their clothes on I couldn't even figure out which one of them supposedly had the huge dick. \n\nNancy soon had them relaxed and drinking. This time I made sure not to drink anything stronger than a beer and didn't have many of them. Nancy soon had her clothes off and the guys were quick to follow.\n\nWithout their clothes on they looked even more normal. They were all just three normal, slightly pudgy, middle aged guys. At least until Nancy got a hold of Roy and pulled his shorts down. \n\nHis dick was pretty impressive, but it really wasn't much bigger than Reid's. Then Nancy started sucking on it and it almost doubled in length. It got fatter too. I was ready to send them all home then. To tell the truth I was afraid of it. I was sure that huge dick would split my pussy in half. There was no way I had gotten that thing in my ass. \n\nAs Nancy worked on Roy the other two guys started working on me. I decided that letting them play with me was safer than trying to do anything with Roy. \n\nThe funny thing was that I wasn't turned on at all. It didn't seem to matter to the two guys though. They worked on me. They felt my breasts and gently rubbed on me until I started to feel good. Then one of them got down between my legs and started eating my pussy. \n\nI tried to stay in control but he was really good at it. It felt so good that I started spreading my legs further so he could get that tongue even deeper inside of me. \n\nThe next thing I knew I was screaming for him to make me cum. I was so close to the edge that I was sure one or two more strokes of that tongue would do it. But it wasn't his tongue that he put inside of me. \n\nI didn't even know the guy's name but he had a dick and he knew how to use it. His dick wasn't as big as Roy's. It wasn't even as big as Reid's but it felt good and I was so close. \n\nAfter a couple of strokes I was fucking him back like we were made for each other. \"Fuck me,\" I begged him. He squeezed my tits and started to fuck me even harder. I was fucking him back desperately. \n\nI even tried to kiss him but our wires got crossed and I missed his face somehow. I laughed and kept thrusting my pussy at him. Meanwhile, his friend had stood up and was rubbing his now engorged dick in my face. \n\nI opened my mouth and he started gently thrusting his dick in and out of it. I have no intention of lying, it felt really good. Then the guy fucking me groaned and fell limp on top of me. \n\nHe shot a lot of sperm in my pussy. So much that it was streaming down my leg when he pulled out of me. \n\nHis friend pushed him out of the way and got on top of me. He was soon fucking away at me and I was on my way to cumming again. \n\nThe first guy stuck his dick in my face and I knew what to do. I could taste the sperm that was left on his dick and something else that was probably the taste of my own pussy. \n\nI didn't like it, but I was being fucked and I really wanted to cum again. The guy in my mouth pulled out but he hadn't shot off again. He started working on my ass with his fingers. \n\nIt felt really good after a while. Reid had fucked my ass lots of times during our marriage. It wasn't something I liked, but I let him do it because I love him. But these two guys weren't like Reid. \n\nThey weren't tentative or shy about it. They knew what they wanted and they took it. Maybe it brought out a slutty side of me that I never knew I had. But more than likely, I was just reacting to what Nancy had told me. \n\nThis was my last chance to ever do something like this. I had never been much of a wild girl. This was my chance to show that I could hang with the best of them. \n\nIt felt strange having something up my ass at the same time that I had a dick in my pussy. \n\nThe next thing I knew the guy in my pussy had switched positions and put me on top of him. I started slamming my pussy down on his dick like I wanted to break it. But after a few strokes, I couldn't move as much.\n\nThe guy behind me had replaced his fingers in my ass with his dick. A weird shock went through me at first. Then we all slowed down and found a rhythm that worked. \n\nI opened my eyes to see Roy staring almost glassy eyed at me while his two friends both fucked me at the same time. I screamed as I came yet again. When I regained my senses they were still fucking me. They slapped each other's hands like team mates who had just scored a touchdown.\n\nI felt like part of the team too. I tried to kiss the guy under me, but he screamed as he came, filling my pussy again. \n\nThe next thing I knew that huge hunk of meat between Roy's legs was stuck in my face. I opened my mouth as wide as I could but it wouldn't fit. Nancy's jaw must be double jointed. \n\nI wondered then why Nancy hadn't let Roy fuck her. The other two guys moved out of the way and Roy got between my legs. He pushed and forced that huge dick between my inner lips. It hurt badly and I screamed, in pain. He stopped and just held it there. \n\nHe waited patiently and then pushed it a bit deeper. I felt more full than I ever had in my life. Nancy and the other two guys were watching in awe as Roy slowly sank that huge dick in me and then started to fuck me. \n\nAfter a while it became less painful and then I started to fuck him back. It was like nothing I had ever felt before. That dick went further inside of me than anything had ever been. \n\nEvery time he pulled it out I felt empty. And when he slammed it into me, I could feel it poking itself into my womb. Nerve endings that had never been touched before reacted and I started cumming over and over. \n\nI have no idea about most of the things I said. It was like I was in a trance. I told him that my pussy was his. I told him that I loved him. I begged him to make me pregnant.\n\nAnd then I tried to kiss him. \n\n\"No,\" he said. And something resembling sanity returned to me. I opened my eyes and stopped moving against him. \n\n\"Nothing personal,\" he said. \"But I only kiss my wife. Besides, you sucked two guys off. And you have their sperm on your face. Yuck!\"\n\nI looked at the other two guys and they looked away from me too. None of them could meet my gaze. The look they gave me told me what they thought of me.\n\nRoy started trying to fuck me again, but the spell was over. I put my hands on his flabby chest and stopped him. \n\n\"Get off of me,\" I yelled.\n\n\"Hey, this is only sex,\" he said. \"Nobody forced you. This is all in fun. Nancy told us you were married. Save your kisses for your husband. Don't get mad. There's nothing serious going on here. You're the one who got out of control and started screaming about having a baby. Now do you want to fuck or not?\" \n\n\"How about NOT,\" I said, angrily.\n\n\"Fine,\" he said. \"I'm outta here. If I want drama from a woman I'm not fucking, I have a wife for that shit.\"\n\nAs they gathered their clothes and left, I could hear them talking to Nancy about how fucked up I was. I also heard her tell them that she'd call them.\n\nShe came back into the room to find me curled up in the fetal position on the floor, crying my eyes out.\n\n\"I was such a fool Nance,\" I told her. \"They treated me like a whore and ...\" \n\n\"And what?\" she asked. \n\n\"And I deserved it,\" I said.\n\n\"Honey, you just aren't used to being with world class fuckers,\" she laughed. \"Once they got you all worked up, you should have seen yourself. I mean damn ... I like to fuck, but you're like some kind of porn star. You loved it. You were begging them for it and they gave it to you. \n\nAll I could do was sit back and watch a pro in action. I still don't know why you stopped. I really wanted to see Roy get that monster back in your ass.\" \n\n\"They ... They ... Treated me like I was nasty,\" I whined. \"None of them would even kiss me. I was good enough to suck their dicks after they'd been in me, but none of them would kiss me. \n\nOne of them ate my pussy really good. That was what got me started, before that I wasn't going to do anything, but he wouldn't do it after I had fucked him and none of them would kiss me at all.\"\n\n\"I told you from the beginning,\" she said. \"They weren't here to make love to you Maddie. This was just sex. It's just fun. It's a workout, nothing more. I don't know why you were yelling that you wanted to have a baby or that your pussy belonged to Roy. \n\nHe's almost forty and balding. He's not even good looking. Your husband loves you like you're the only woman on earth and he's better looking than any of those guys. You're out of your fucking mind.\" \n\n\"You were the one who talked me into this shit,\" I yelled. \"And you didn't even fuck Roy yourself.\" \n\n\"I was going to fuck the other two,\" she said. \"I've never fucked Roy. I tried to a couple of times, but it hurt too much. I told you I could barely get him in. And I'm not stupid.\" \n\n\"What do you mean?\" I asked. \n\n\"Look Mad,\" she said. \"I know how I seem. But I'm young. I'm single and I'm cute. Right now, I'm sowing my wild oats but someday I'm gonna settle down with Mr. Right, just like you did. Sooner or later Kyle is gonna give me a chance and when he does, I'm not gonna have a stretched out pussy that doesn't feel good to a normal sized guy. ",
        "And that works two ways you know. Not only will a normal guy think your pussy is too loose, but you won't be able to feel anything when a normal size guy fucks you. \n\nYou seem to like it when Reid fucks you. Remember me talking about the way you sound when he rings your bell?\n\nYou didn't sound like that with Roy. First it was all painful and sore, then when you got used to it you were just desperate to cum. Then he got all the way up in there and your eyes rolled back in your head and you got stupid. Are you going to be satisfied with Reid after that?\n\nSo, no thanks, I'm sticking to regular sized guys. I don't want to ever not enjoy it when a guy I love tries to make me feel special.\" \n\nI realized then that as stupid as she was, Nancy was right. \n\nI also realized that I had been the stupid one. I'd had a nearly perfect marriage until I listened to her. And my anger at Reid was also stupid. I'd always known that he was nuts about cars. He'd always loved to go fast. His Mustang was his pride and joy. Other than me, it was the thing he loved most.\n\n\"Maybe you should forgive him,\" she said. \"As long as I've known you two, you've never stayed angry at him for this long. The poor guy is probably going crazy.\"\n\n\"Oh shit,\" I said. \"I'd better turn my phone back on. I'll bet I have about a million texts and voicemails.\"\n\nAs soon as I turned the phone on it updated itself. I had more than fifty text messages and twenty voicemails. But I'd expected more. Most of the voicemails were from my parents. One or two were from my club or friends. Except for the first two messages from Reid that were from before I got angry there weren't any voicemails from him. \n\nI quickly scanned the text messages and discovered that he had stopped texting me shortly after I got angry at him. There were a few messages and then they just stopped. \n\n\"Maybe he got pissed at you because you were pissed at him,\" said Nancy. \"Unless ...\" Her voice dropped off. \n\n\"Unless what?\" I hissed. \n\n\"Maddie, racing is dangerous and I know Reid is a good driver but ...\" \n\nI started crying all over again. I grabbed my phone again like my life depended on it and called Reid. The phone just rang and rang it never even went to voicemail. I hung up and called him again with the same results. I tried again and again. \n\nNancy had to give me a sleeping pill to get me to sleep.\n\n* * * * * *\n\nReid\n\nSo this is Europe. That was the first thing I thought after getting out of the taxi and standing in front of my hotel.\n\nI was already having a hell of a day. My seat mate on the plane turned out to be a real motherfucker. I got up to stretch my legs and while I was gone the flight attendant rolled out the drink cart. \n\nThey'd asked us what we wanted an hour or so before, so when they got to our seats they had the drinks ready.\n\nApparently my seat mate told the flight attendant that he'd take care of my beer until I got back. \n\nI walked up to my seat after my impromptu tour of the plane and saw the passengers around me with their drinks.\n\nI spoke to the flight attendant and she told me that the old guy sitting next to me had it. \n\n\"Where's my beer?\" I asked him. \n\n\"What beer?\" he asked. \n\n\"The flight attendant said that she gave you my beer,\" I told him. \"She said you volunteered to keep it for me.\"\n\n\"I don't know what to tell ya buddy,\" he smirked. \"It's probably a scam. Why would I want to watch YOUR beer? I don't even know you. I'm not like your fucking butler or anything. That bitch conned you.\"\n\n\"Maybe I should bring her over here so the two of you can talk about it and we can get to the bottom of it,\" I said.\n\n\"That sounds like a damned good idea,\" he said. \"But let me ask you something first. Do you maybe have an alcohol problem or something? I mean you're making a federal case about one fucking beer. Toughen up buddy. Walk it off. Rub some dirt on it. It's one fucking beer ... Shit!\"\n\nThe airport here in Italy was scary as hell. There were soldiers with dogs and machine guns everywhere. They take terrorism very seriously.\n\nThe hotel does not look like the photos from the internet. Well ...maybe it does. Maybe it's like women. \n\nYou know how when you first start dating a woman you never see her without her makeup. And then once she's got you hooked, you discover that the face you fell in love with is mostly Maybelline.\n\nThey put the Maybelline version of the hotel on the internet. It was freshly painted and landscaped. \n\nAnd I guess us stupid Americans assume things. We assume the dumbest things. We assume that there is air-conditioning, room service, cable, Wi-Fi, hot water, toilets that work and a bunch of other shit that is simply not specified in the brochure. Go figure. We're crazy.\n\nI spent the first night in Italy, in my hotel room texting and talking to Maddie. I missed her more than she would ever know. It was hard for me to get to sleep without her there beside me in the crappy bed in the hotel room.\n\nAnother thing that bothered me was my guilt. I felt awful for not telling Maddie what I was really doing in Europe. \n\nIt was the first time I had ever lied to her and I swore it would be the last.\n\nDuring the night or very early in the morning, someone slipped a sheet of paper with my schedule for the next few days on it. \n\nAs soon as I saw it, I got excited. I showered and went downstairs to have breakfast with my tour group.\n\nWe had breakfast in what someone had named the Imperial Dining room. There was nothing imperial about it except for the name. \n\nBut then the room seemed suited to the group of people waiting in it. \n\nThere was a collection of misfits in the room that were as different as snowflakes. No two of them were the same.\n\nThere was a huge hulking guy with a beard and a bald head. He was wearing a T-shirt that read proud member of the fifteen hundred horsepower club on the front. The back said something about big tire cars only.\n\nThere was another guy near him who looked damned near exactly like Paul Walker from the neck up. He had the hair color and the hair cut. He even had the cocky little smile. \n\nFrom the neck down he looked like Vin Diesel would have looked if he subsisted on nothing but Cheetos and beer. He had huge flabby arms and a big gut. \n\nHe let out a nervous fart that nearly cleared the room. It sounded like someone had just started a chainsaw. He sat there doing that little Paul Walker laugh and then the smell hit us. \n\nHe then abandoned the table he'd been sitting at for one on the opposite side of the room. \n\nTo make things worse he crop dusted by leaving a few smaller blasts while he walked.\n\nSomeone in the back of the room said he was from the Farts and the Flabbiest which started the whole room laughing.\n\nA guy who looked fairly normal came over and sat down at my table. He introduced himself as Luke Dribble. It was all I could do to keep a straight face. \n\nHe was soft spoken and a really nice guy, but I was pretty sure he was wearing NASCAR underoos. \n\nThere was an Asian guy with a laptop, wearing a Honda jacket, a British or Australian guy who was constantly talking about Jag-U-ar, and a host of other misfits. I felt kind of odd. I probably should have worn some of my Mustang gear. But I had felt that this was a new experience for me. I was here to learn more about driving, not to brag about my car back home. \n\nThere was also the fact that any pure racing car would make short work of my car. It just seemed pretentious or just stupid to boast about a standard production car, even though it was highly modified in a place where there were much faster cars. \n\nIt would be kind of like telling a major league baseball player about your five year old who plays T-ball.\n\nAnd then the entire mood in the room shifted. A very officious looking man in a suit carrying a lot of papers walked towards the front of the room. But he wasn't what everyone was staring at. Following him were three women.\n\nActually, in that testosterone fueled environment, they were closer to being three goddesses. And they knew it. \n\nFrom the way they strutted across the room as if they owned it, it was clear that they knew the effect they were having on the men in the room.\n\nThe first woman was a blond. She was the skinny, Miss America type. She had long straight blond hair and a thin body with legs for days. Her crystal clear blue eyes gave her an innocent look that her cherry red lips told you was a lie. \n\nShe was the all American dream girl; the girl that every guy wanted to marry. She was dressed in one of those skintight leather versions of a driving suit. The same kind that women all seemed to wear at car shows.\n\nThe second woman was also a blond. But that was where the similarities ended. She was almost a foot shorter. Her hair was also shorter and curly. She had huge boobs and an ass like race horse. It swayed from side to side amazingly as she walked.  \n\nThe look on her face told you that she would be fucking someone, probably one or some of the guys in that room, that night. She was the kind of woman that every guy wanted to fuck and then run out on.\n\nShe too wore the leather driver's suit, but it was barely able to contain her ass and tits. \n\nThe last woman had dark hair. It was captured in a very long pony tail. She was in the middle body wise. Her tits were bigger than Miss America's but nowhere near as big as the slut's. She had a very thin waist and a heart shaped ass that was dwarfed by the slut's. \n\nShe was wearing jeans and a tee shirt. As they stepped up to the podium the dark haired woman sat down at a table near the podium.\n\nThe man started talking about the activities we'd do over the next couple of weeks. Most of the guys were more interested in watching the two women on the stage. It turned out that they were his coordinating assistants. They would be helping to keep us motivated and organized. \n\nThe real shock came when it was revealed that the brunette was one of us. She was a driver. \n\nThe following morning we'd be assigned cars and start our lessons and practice sessions. I guess the rest of the afternoon was supposed to be some sort of get acquainted or get to know each other session. \n\nAs I figured, most of the guys made a beeline for the women. They were soon surrounded by all eighteen of the guys. The 19th guy was me. I left to go out and see some of the sites around Rome and take pictures to send to Maddie. \n\nSome of the things I saw were so beautiful that I wished I could have convinced her to come with me. I guess I should have been angry about her having lied to me for so many years about her fear of traveling. \n\nSo many of the times when her behavior about vacations or visiting family seemed odd, now made sense. Most of the time, I had chalked it up to her period or to Maddie just being Maddie. But now it was all clear. \n\nLike I said, I should have been angry, but truthfully, I was flattered. Maddie loved me so much that she hid her fear from me because she was more afraid of losing me than traveling and she was scared shitless of travel. \n\nMaybe I loved her too much. Maybe I was just making excuses for her. I know for a fact that if I had lied to her about anything ...ANYTHING ...Maddie would lose her fucking mind. But I tended not to sweat the small stuff. \n\nSo after an afternoon of taking photos of beautiful things for my beautiful thing, I went back to my shitty hotel room to sort through them and send them to her. \n\nMy plan was to email them to her. That way she could open them on our computer and view them on a bigger screen. That way we could also talk about each photo on the phone as she looked at them. It would be almost like she was there with me. \n\nI called her and for some reason she didn't pick up. So I sent her a text. And I waited. And waited. And WAITED. It was odd for Maddie not to respond to me. I also knew that Maddie never went anywhere without having her phone near her. Maybe she had lost or damaged her phone. \n\nI spent the test of the night calling and texting her until I fell asleep. \n\nI awoke the next morning feeling as if I hadn't slept at all. I went down to the dining room to find the members of our group already there and having breakfast. There were several lively conversations going on. \n\nLuke waved me over to a table near the stage where he sat along with a couple of other guys.\n\n\"Dude Ah'm telling ya she was all over me,\" said the Paul Diesel look alike. \"I was grabbing that fat booty with both hands and it felt good. Who knows what woulda happened if her God damned friend hadn't come into the room.\" \n\n\"Where'd you disappear to yesterday,\" Luke asked me.\n\nI shrugged my shoulders. \"I went to a bunch of museums and took pictures for my wife,\" I said. \"She loves art and sculptures and stuff.\"\n\n\"You missed a hell of a party,\" said one guy. \n\n\"There's always gonna be another party,\" I said. \"But there's only one Maddie.\"\n\n\"Dude for most of us this is a vacation,\" said the big bearded guy. \"We're trying to get away from our wives.\" \n\n\"Preach on Brother,\" said Paul Diesel. \"I have a job that I hate and too many fucking bills to even think about quitting it. Shit, I'm married too. But every time I even glance at my car sideways, the bitch has a conniption. I need this vacation.\"\n\n\"Ohhhh fuck!\" said another guy. \"I can beat both of you. I have three kids that I can't fucking stand. None of the little bastards looks a thing like me and my evil assed boss is my wife's father.\"\n\n\"How the hell did that happen?\" asked Luke.\n\n\"I woke up next to her at a party,\" said the guy. \"I knew her vaguely before then. We had never dated or anything but I'd seen her around. The next thing I knew she was following me around and I was trying to scrape her off like gum on the bottom of my shoe. A few weeks later she told me she was pregnant. I told her I'd help her out with the kid as much as I could but I was unemployed at the time. \n\nThe next thing I knew her dad had given me a job and we were getting married. Before I knew it the baby was born. We had just gotten settled into some kind of life, when she told me she was pregnant again. Her father started looking at me like I was some kind of asshole. I was still in shock. We weren't even having sex that often. It was probably once a week. My sperm must be as strong as my driving skills. \n\nAfter the second one was born she told me that we needed to back off on the sex because she didn't want to get pregnant again. Her body was starting to look like her mother's. I didn't care because truthfully the sex wasn't that good. \n\nAfter that, every once in a blue moon she'd be in the mood and I'd do it just to keep from arguing with her. After one of those times she told me she was pregnant AGAIN. \n\nShe got mad at me and took off for a week. I had to get my parents to watch the little bastards while I went to work. People kept coming up to me and asking me whose kids they were. A lot of people told me they looked like one of the welders that I worked with. \n\nI remembered then that my wife used to date the guy and they were still kind of friendly. Now I ain't no dummy, so when she got back, I confronted her and she stormed out of the house. She left me with her fucking kids AGAIN. \n\nHer father stormed over to my house and beat the shit out of me. I filed for a divorce the next day. \n\nShe came back crying and whining and claiming she loved me, but again, I ain't no dummy. I didn't fold. \n\nSo the bitch cheated. She got two huge guys who work at our plant to hold me down. She stuck some kind of funny thing in my mouth and then left. \n\nAt least she took the damned kids with her. \n\nAbout a week later she showed back up with the big guys and a smile on her face. They dragged me down to the local police station. I thought she was having me locked up for something. While I watched, they hooked her up to a machine that turned out to be a lie detector. \n\nShe passed the fucking test with flying colors. It turned out that she really did love me and she had never cheated on me. Not even once. Then she handed me two DNA tests and showed me a slip for an invitro test for the baby she was carrying. \n\nHer two ugly assed kids ... 99.99999% mine. They may not look like me but they're my brats through and through. I went into shock. And then she took me out of there. It had gotten dark by then she told me she was going to explain it all to me. \n\nI was the only bright spot in her life. She intended to fix things between us but there was still a problem. She took me to a house near ours. But we didn't go inside. We sat in the car and waited for a while. Then she dragged me to the side of the house and we looked inside of a window. \n\nThere I saw her ex, the welder. I got pissed immediately and she just smiled. \n\n\"I knew there was hope for us,\" she said. \"You wouldn't be jealous if you didn't care.\" I didn't say shit. I was too shocked. \n\nHer ex had a huge dick. I mean one of those gigantic porno dicks. And it was buried up to the balls in her brother's ass. The two of them were going at it like newlyweds. I threw up all over the side of their fucking house. \n\nIt turned out to only be the tip of the ice berg though. Her brother wanted to have sexual reassignment surgery and marry the welder. He had always felt like a woman trapped in a man's body. But the Welder told him not to. \n\nThey argued about it constantly. Her brother was transgender, but the welder was just a normal gay guy. He wasn't attracted to women at all. He told her brother that if he got the surgery no matter how Caitlin Jennerish he looked, it would be over between them. \n\nShe had been keeping that secret for the past couple of years. Helping to deal with it was the source of the stress between us. \n\nWhen we got back to our house, her parents were waiting for us. Her father apologized to me and gave me a raise. He told me about how much he had resented me for my normal life, when he could no longer relate to his son. \n\nEvery time I got Angie pregnant, it was a dagger in his heart because my kids were the only grandkids he was ever going to have. I did my best to be gracious but it doesn't change anything. I would never have picked Angie to marry. But with three kids, I have no choice. I also hate my job but someday, I'm gonna own the business. \n\nAngie's brother/sister is saving up money for the surgery and wants no part of the business or his father since he can't seem to adjust to his/her lifestyle. As a matter of fact that's what I'm doing here. \n\nAngie's father had a heart attack after his son/daughter went on the estrogen treatments and got breast implants. The first time he saw him/her he keeled over and dropped on the spot. He was in the hospital for six months and I had to take over the running of the business. \n\nIt was six months of on the job training hell. This vacation is my reward for putting up with it. I just want to relax and drive some cars. If some hot European woman chooses to give me some pussy for my trouble or because I charm the panties off of her ... So be it!\"\n\n\"So be it!\" yelled every guy at our table. For the rest of the trip, \"So be it,\" or Sobie for short was what we called him. \n\nThat morning we were broken into two groups of ten. One group was assigned to the classroom and the other to the track. Each of us was also assigned a partner in the other group and a car. \n\nThe cars weren't what I was expecting. The head mechanic called them Cosworths or RS Cosworths. I later found out that it was the fifth generation of the European version of the Ford Escort. The car was turbocharged and had a top speed of 150 mph. \n\nEvery day we had two classroom sessions; one before lunch and one after. We also had two driving sessions on the track, one before lunch and one after. \n\nJust before we were released each day we had a group session in the classroom. ",
        "We spent the first part of the week practicing. The idea was that we would learn as much as we could about ourselves, our cars and our opponents. On Friday we would all do three laps around the track. The best five of each group would race ten laps on Saturday morning. \n\nThe winner would get to practice all day Saturday afternoon and drive as a relief driver in the local formula one race on Sunday. Monday we headed for Germany. \n\nOn our very first day, of driving, Tuesday, I learned that the Asian guy was a terrible driver. He was far better at hooking his computer up to the car and finding out problems in its engine. \n\nPaul Diesel and the big bearded guy were both Street racers. They were used to handling a hell of a lot of horsepower, but only raced one time, straight down a section of roadway. The concept of multiple laps and cornering blew their minds. \n\nEven my buddy Luke had his problems. Luke was great on straight-aways and he could take corners with the best of them, but only if they were left turns. He took right hand corners so slowly he could be driving Miss Daisy. \n\nI was doing okay. I was always near the top in our group, but I could have been doing better. The problem was that I missed Maddie. Every day I spent all of my time away from the track trying to call her and leaving her lots of texts. \n\nEvery night was spent in my room trying even more. In desperation, I finally called my best friend, Kyle. \n\nI wanted Kyle to go over to the house and find out what the hell was going on with Maddie. Unfortunately, Kyle had to travel for work a lot but he did give me an incredible idea. \n\nHe reminded me of my X-finity security system and the fact that we had cameras all over the house that I could call up on my phone. I could also review all of the footage for up to a twenty four hour period. \n\nMaddie and I often checked in on the house when we first got the system but after having it for a couple of years we had both pretty much forgotten about it. \n\nI lay down on my bed and pulled out my phone. Before I could turn it on there was a knock on my door. \n\n\"It's open,\" I yelled. \n\n\"Hey ... Reid, we're all going to that bar down the street. You've never gone with us so I thought that maybe I'd ...\" he began.\n\n\"Thanks Sobie,\" I said. \"But I'm right in the middle of something.\"\n\n\"Calling the old ball and chain again ...?\" he smirked. \"You two must really be in love.\" \n\n\"We are,\" I smiled. Just thinking of Maddie brought a smile to my lips. Maddie might not be a world class beauty but she's pretty and she's all mine. \n\nI turned my phone on and hit the Xfinity app. Then I laughed my ass off because it was the wrong one. I was looking at the app that let me watch TV on my phone. There was another one that allowed me to control my DVRs from anywhere in the world. \n\nThe last one was the one I wanted. I scrolled through the cameras until I found what I thought I wanted. I saw Maddie talking to that slutty friend of hers. I turned the volume up all the way and could make out a lot of their conversation. \n\nAt least I knew that Maddie was alive and well. She seemed to be upset about something. I checked the other cameras around the house. There was no one there beside Maddie and Nancy. \n\nI wished that I could hear them well enough to understand what they were talking about and why Maddie was angry at me. Then it hit me. I went over to my suitcase and grabbed my ear buds. With the buds I could get the phone's volume much louder and make out what they were saying. \n\nAt first I thought that Nancy was talking about some guy she had fucked. It didn't surprise me. Nancy was a dick seeking missile. It was one of the reasons that I didn't like Maddie hanging out with her. I didn't want people to think that my Maddie was the same type of woman. \n\nBut as I listened to the conversation I got angry. I scrolled back through camera after camera until I found what I needed ... Or maybe didn't need to see.\n\nIt was surreal. I couldn't believe what I was watching. Tears sprang from my eyes as I saw it. My wife Maddie was being fucked by a guy. She was giggling stupidly as if she didn't know what she was doing. \n\nOne guy got off of her and another got on her. She didn't offer any kind of resistance. She even spread her legs so he could get started. \n\nNancy got off of the guy she was fucking to watch. I vomited the contents of my gut into the nearby sink and stood there heaving. \n\nI looked at myself in the mirror and was shocked. I looked as if I had aged ten years over the last few minutes. I was sweating. My heart was beating ridiculously fast and I was still short of breath. \n\nIt made no sense. Maddie had cheated on me. I tried to calm myself down I watched the tape over and over from the beginning. Maddie HAD been drinking, but she hadn't been drunk at all when she brought three strange men into our house. \n\nFrom the way the men had been talking from the time they first walked into the house it was obvious why they'd come over. One of them even asked when they were going to get some clothes off and get started. \n\nBesides anger I just felt stupid. It all seemed so obvious now. When does any woman not want to go to Paris? It had all been planned from the very beginning. Maddie had sent me to Europe by myself on purpose. She had made up the whole ridiculous travel phobia thing so she could stay home and fuck strange guys. I was such a fool. \n\nAs if I hadn't punished myself enough I watched it over and over again. I wondered what the guys she had fucked had that I didn't. I had noticed that one of the guys had a huge dick. Maybe that was it. Maybe my normal sized equipment just didn't float her boat. \n\nI couldn't take it anymore. I left the hotel room slamming the door on my way out as if breaking something would give me back my shattered ego. \n\nI walked a huge loop through the streets of Rome, alternately silently crying and swearing vengeance. \n\nI ended up in front of the huge fountain in front of the hotel. I stood there in front of the fountain, staring at the ornately carved statues that adorned it. I reached into my pocket and pulled out all of my loose change. \n\nI had three coins, a quarter a nickel and one of those stupid Susan B. Anthony dollar coins that everyone mistakes for a quarter. \n\nI chucked my three coins in the fountain, wondering where I'd heard that phrase before. I threw the coins as if I wanted them to rip through the water, then through the marble of the fountain, through the Earth's crust and emerge halfway across the planet and go through Maddie's cheating heart. \n\nOf course that didn't happen. The water slowed the coins down before they were halfway to the bottom. And although my anger still raged, the coins floated impotently down and settled gently on the bottom with all of the other accumulated coins from many countries that were thrown in there since the fountain was last cleaned. \n\nThen I stood there wondering what I had done wrong. I went over every sin I had committed throughout my life. I started with the cookies I had stolen from the church bake sale when I was three and ending up with lying to Maddie about the purpose of my trip here. \n\nI've never claimed to be perfect, but I don't think I've ever done anything bad enough to deserve what Maddie had done.\n\nI closed my eyes and like Dorothy, I clicked my heels together three times and wished with all of my heart that I could wake up at home in my bed. I wished that it had all been just a dream and that Maddie would be waking me up to go to work. \n\n\"It was all a dream ... It was all a dream ... It was all a dream,\" I mumbled. \n\n\"What was all a dream?\" \n\nI cracked one eye and turned to look beside me in the direction of the voice. \n\n\"Oh, Hi,\" I said.\n\n\"So is this what you do every night?\" she asked. I just looked at her. \n\n\"Did I interrupt something?\" she asked. She looked at me more closely and screwed up her face. \n\n\"Are you crying?\" she asked incredulously. \n\n\"No,\" I said quickly. \"There's just smoke in my eyes.\"\n\n\"You don't have to worry,\" she said. \"I won't tell anyone. I know what guys are like. If I told them you were standing out here crying, you'd never hear the end of it.\"\n\n\"It really doesn't matter to me,\" I said. \"I'm going home first thing in the morning. I have some stuff I need to take care of.\"\n\n\"Your wife told you to come home, huh?\" she said. \n\n\"My wife doesn't control me!\" I said. \n\n\"There's nothing wrong with it,\" she said. \"And look you don't have to get angry. I can go somewhere else. I'm not making fun of you. Actually when I heard you guys talking yesterday at breakfast, I thought you sounded like the coolest guy in the bunch.\" \n\n\"Huh?\" I said. \"Why?\"\n\n\"You're the only guy here who actually told the truth about being married. You're actually the only guy here who acts like he is married and acts like being married means anything.\"\n\n\"You don't brag about having a car back home that can beat any car in the whole fucking universe. AND you're one of the best drivers here.\"\n\n\"Thanks,\" I said. \n\n\"So why aren't you uhm... Back there with your friends?\" I asked. \n\n\"Sarah and Jackie aren't my friends,\" she said. \"I know them from last year. They're way too slutty for me. I have to share a room with them because it's cheaper for one thing and because some of the places we go have very limited facilities for women. I also need to have someone to talk to away from all of the guys here.\" \n\n\"You have no idea how tough it is being the only woman in a group like this,\" she said. \"First off there's the fact that I only came here to become a better driver, just like the rest of you. But I also have every would-be Romeo in the group hitting on me.\" I just looked at her.\n\n\"Okay, I know that look,\" she said. \"I'm not like Sarah and Jackie. As a matter of fact that's why I'm here now. Their damned contest has driven me out of our room.\"\n\n\"What contest?\" I asked.\n\n\"The two of them bet five hundred Euros over which one of them can sleep with the most guys in the group before the tour ends,\" she said. \"They've each got a guy in their beds right now. That's why I'm out here.\"\n\nWe sat down near the fountain and just talked for a few hours before she brought it up again. It was after midnight and we both had to be up for the next day's activities but neither of us was ready to call it a night. \n\nI wasn't ready to try to sleep since I knew what would go through my mind. I have no idea why she wasn't. \n\n\"Reid, I think you should rethink your decision to go home,\" she told me. \"I swear that I would never tell anyone about you crying. I know that you're not ready to talk about whatever your wife did, but when you are, I'm here if you need me.\" She smiled at me then for the first time.\n\n\"But whatever it is, you told me that this was supposed to be a once in a lifetime trip for you. Why give it up because someone else did something stupid?\"\n\n\"I know that she probably called you and told you to come home. Or she threatened to divorce you if you didn't or something like that. Don't give in to her. Once you give in to demands like that you'll always have to give up everything you want to keep her happy. Trust me ...I know.\"\n\n\"I don't think you ...\" I began.\n\n\"Trust me Reid,\" she said. \"I was married too. He couldn't handle the fact that I was a better driver or that I knew more about cars. This is my second time doing this tour. When I came last year he told me that he'd divorce me if I did. I did it anyway, but he didn't divorce me. He just told me that now that I had it out of my system I could settle down and be a good wife. \n\nI guess my driving ability threatened his fragile masculinity. I found out that he'd been bolstering it by screwing his secretary. I divorced him and came on the tour again.\"\n\n\"I thought you Italians and Europeans in general had more open views about infidelity,\" I said.\n\n\"I'm not Italian,\" she said. \"I guess it's the dark hair huh? I'm a third generation Mexican American, dummy. I was born in and live in Boston.\"\n\n\"Sorry,\" I said. \"I didn't mean to offend you.\"\n\n\"Reid, you didn't offend me,\" she smiled. \"But what you said is the same thing that asshole I married thought. He figured that we'd go to counseling, talk about our feelings and sweep what he did under the rug. He kept telling me that it wasn't the end of the world and it didn't have to be the end of our marriage. Working our way through it could make our marriage stronger. \n\nI guess he just didn't understand that maybe we could keep the marriage going. But a marriage is really at its core just a partnership. It's a contract between two people. So maybe we could renegotiate the contract and save the partnership, but the love and trust I had for him was destroyed and could never be rebuilt.\" She shook her head and I just stared at her. \n\n\"I know it sounds crazy,\" she said. \"My family was shocked. Our women are supposed to stand by their men no matter what. Maria you have to forgive him they all said. \n\n\"But I knew in my heart that I deserve better. I deserve someone who'll love me the way you love your wife. I was so jealous of her the day you told the guys about going to the museum to take pictures for her. And the smile you got whenever you talked about her ...She's a lucky woman. You still have to stand your ground though. Enjoy this vacation. Maybe the time apart will make her realize how lucky she is ...alright there's the bat signal.\"\n\n\"Huh?\" I said.\n\n\"My roomies just flashed the lights on and off in our room,\" she said. \"I guess they're done fucking for the night. Will I see you at breakfast?\"\n\n\"You betcha,\" I said with more enthusiasm than I felt. \n\nI went back up to my hotel room and saw my phone lying on my bed where I had left it. I put the phone in my suitcase after turning it off. \n\nThen I went to bed. I tossed and turned all night. I dreamed about Maddie doing terrible things. In the dreams I saw her cheating on me over and over. I saw her cheating on me while she got ready for our wedding. I dreamed that she cheated on me with various members of the hotel staff during our honeymoon. \n\nI saw her cheating on me with my boss, both of our fathers and even with Kyle. \n\nI woke up long before I needed to be at breakfast and I stayed up because I just didn't want to sleep anymore. It was mostly because I was afraid of what I would dream next. \n\nWhile I showered, my rational brain had a chance to process the situation as I knew it, instead of as I had imagined it. The things that I had dreamed were only that. They were dreams. They were fantasy visions brought on by the pain of what I had discovered. \n\nNone of those things were true. Maddie's guilt over cheating on me and her assertion that she felt awful about it told me that it had never happened before. I truly believed that. \n\nSecondly, I was sure that the alcohol had played a factor in it. Maddie had gone from constantly texting me about how much she missed me to sleeping with multiple men. It made no sense. She had to have been drunk out of her mind. \n\nThe questions loomed large in my mind. Could we possibly save our marriage? Maria had told me that in her case there was a difference between the relationship and the marriage. I wondered if that was true. Is it possible to separate them? \n\nSuddenly I had an insight. The reason for all of this ... The main reason that we were clearing items from B4K list was the kids. Both of our moms had been pressuring us to get started having kids. At that moment a chill went up my spine. What if this shit had happened after she'd gotten pregnant?\n\nI would have been trapped. It would have been just as Maria's ex-husband had described it. The marriage would have become simply a partnership based on giving our kids the best life possible. I would have been forced to go through the motions to keep my kids happy. \n\nThere would have been no love left, no trust left, no relationship between Maddie and me; just a sham of a marriage perpetrated on giving my kids the chance to grow up in a home with two parents.\n\nWould Maddie continue to cheat? Would I find someone else to love and begin cheating? How long would we have to keep the farce going?\n\nWe would probably have to stay together until our youngest was at least fifteen or sixteen. That only brings up another problem. If she had done this after we'd had a child, we would have only had one. There would be no way I would ever have brought another child into the world with a cheater. \n\nMaddie had always told me that we needed at least three kids. Shit she was probably lying about that too. \n\nThe alarm on my watch chimed suddenly and brought me out of my thoughts. I realized two things. The first was that I had to put all of that shit out of my mind and go eat breakfast so I'd have the energy to drive.\n\nThe second was that my life was fucked up. It was all in a state of flux. I had no idea what would happen in two weeks when I returned home. Nothing would ever be the same. \n\nA lot of it would depend on Maddie. If she came out and told me what had happened, we might be able to work our way past it in time. If she didn't we were doomed. \n\nWhen I first got here, my marriage was the rock at the center of my life. It was the thing I based everything on. My love for Maddie was my safe place to weather the storms that life brought. \n\nAt that moment I realized that everything had changed. Coming here to race was no longer a pleasant diversion. Suddenly, it was far more important. It was all I had left. \n\nI just needed to get into a car and drive.\n\nI went down to breakfast. I got a tray that time instead of just coffee. I grabbed a bowl of fruit, and to my surprise, they actually had bacon. I took six slices. \"Fuck my Cholesterol,\" I said louder than I'd intended. \n\n\"So be it,\" screamed someone further behind me in line. \n\nI grabbed two more slices of bacon. I got juice beside my coffee. I had recently read an article about how cherry juice was supposed to help in lowering cholesterol. I figured it couldn't hurt.\n\nI headed for the table where I usually sat with Luke, Paul, Todd, Hoshi and Sobie. Our table was perfect because it wasn't usually sought after. So we knew we'd always be able to sit there. \n\nThe closer you were to the girls' table, the harder it was to get a seat. Some of the guys who sat at the table right next to the girls had to get there an hour early. Most of the time, they had to eat or at least get their food early too. If they got up to get food, their seats were immediately taken.\n\nEven then they had problems. If their trays were empty, all kinds of guys would start asking them if they were ready to leave since they were done eating. \n\nBut that morning things had changed. I knew that I was different. My focus had completely changed. I wanted to make the best if my remaining time. Instead of just trying to have fun and get better, I wanted to win. Shit, I wanted to win everything. \n\nLittle did I know, bigger changes were in store for me. As I sat down, the guys immediately started ribbing me.\n\n\"Fuck Dude, is that like a whole pig on your plate?\" laughed Todd. \n\n\"Leave him alone,\" said Sobie. \"His wife just told him she's pregnant. He's eating for three.\"\n\nWe all started laughing at that. As much as I was still hurting over what Maddie had done, it was funny so I laughed too. I laughed all the way until I went into shock as two arms wrapped themselves around me in a hug. \n\n\"I'm so glad you're here,\" said Maria as the guys at my table went into shock. \"Are you gonna be okay?\" \n\nGuys all over the room were flipping out and breaking their necks to see what was going on. Maria pushed her way in and sat down beside me. \n\nIn that way that women have she rearranged everything on my plate. She turned it from one sloppy pile of food into two neat ones. ",
        "My eight slices of bacon became two four slice piles. She looked across the table and spotted an extra fork on Sobie's tray. She stretched across the table and eighteen jaws dropped simultaneously. \n\nMaria had changed out of her usual fitted jeans. Her ass was still heavenly ...probably moreso in the looser white capris she wore. She was also wearing a V-neck T-shirt and when she bent to extract the fork she showed a generous amount of cleavage. \n\nShe took the top off of my bowl of chopped fruit pieces and stuck two forks in it. \n\n\"We could have just shared the one fork,\" she smiled. \"But this will be better.\"\n\n\"We're gonna have to share the coffee and the juice, but don't worry I have great dental hygiene so you won't get cooties or anything,\" she added.\n\nThe next thing I knew she was eating Bacon. Then she took her fork and speared a chunk of pineapple. For the next twenty minutes we ate and sipped coffee and juice while it seemed like the entire world ... Or at least the room watched us. \n\nAt one point Sarah, the tall skinny blond came over to ask Maria something. Maria looked at her and then at me and whispered something back to her. \n\nBy that time it was nine o clock and time for us to head to our assignments. Maria was on the track and I was going to class. \n\nShe stood up and turned her back to me. \"Reid, hold this,\" she said, sitting on my lap. She had gathered her long shimmering hair into a loose pony tail and had me hold it for her while she grabbed a hair tie from her pocket. She had to wiggle a little bit to fish it out of her pocket. \n\nSeeing her wiggle her delicious heart shaped ass while sitting on my lap gave a couple of the guys heart attacks. She quickly braided her hair in a long controlled ponytail and looked over her shoulder at me. \n\n\"Thanks for breakfast,\" she said. \"I'll buy you lunch. Let's go somewhere else. I'll meet you by the track.\" And then she was gone. \n\nAs if time had just restarted, the guys at my table and the one next to it suddenly realized that breakfast was over and they hadn't eaten. \n\n\"Fuck food...\" said Luke.\"I need an explanation for what just happened.\" \n\n\"We'll talk about it later,\" I said.\n\n\"So Fuckin' be it!\" declared Sobie.\n\nIt was a strange morning. Suddenly subjects like driving the optimal line or the proper time to brake or downshift were as important to me as breathing.\n\nMany of my classmates on the other hand were simply staring at me and whispering.\n\nOur instructor, a former formula one driver sensed that I was an engaged student and started doing his best to pour as much of his knowledge and history as he could down my throat.\n\nA lot of what he told me was just fluff. Stories of him dueling it out with Jackie Stewart were interlaced with tidbits about local roads in the area that he had practiced on that helped him master different things. I soaked it all up like a sponge. I hoped that some of it might someday help me.\n\nAfter class was over, I made my way to the track. Passing by the cafeteria, I grabbed two bottles of Iced Tea. I figured I'd keep them in the car with me so I could do more laps without having to stop to cool off.\n\nOn days like that one, with temps in the eighties or low nineties it would be over a hundred degrees in the cars and they had no air conditioning.\n\nAs I got to the garage, my timing couldn't have been better or worse depending on your perspective.\n\nThe guy in my class who shared a car with Maria was watching her get out of the car. As she pulled her helmet off and then stripped off her driving suit, he held up a bottle of water.\n\n\"Thank you so much,\" she said as she wiped the sweat from her brow. \"I really appreciate the gesture, but you should save it for yourself. You're about to go out on the track and it's really hot out there. I wouldn't feel right taking it. Besides ...\" she looked over at me and a simply dazzling smile came out. Her smile caused the guy she was talking with to glance over his shoulder and see me. \n\n\"...My friend's got it covered,\" she continued.\n\nI'm not sure which of the three surprised me the most. I was torn between her brilliant and blinding smile, the evil and angry glare that my classmate gave me and her statement that not only was I her FRIEND, but that she thought one of my bottles of iced tea was for her. \n\nI have no idea where she got that idea. I swear they were both for me. \n\nI did notice the waves of hate coming from my classmate though. And sure enough, they weren't directed at her. They were aimed straight at me.\n\nThey also seemed to become more intense when she patted him on the shoulder and floated her way towards me.\n\nShe came over and smiled again as she looked at the two quart sized bottles of Snapple Iced tea.\n\n\"Made from the best stuff on earth,\" she giggled. She had no idea that at least ten guys were watching us and taking it all in. \n\n\"Maybe it's the SECOND best stuff,\" she said elbowing me in the side like I knew what the hell she was talking about. \n\n\"I'll take the Raspberry,\" she said, picking my favorite flavor. That left me the peach tea. She brushed my very short hair back, which made absolutely no sense. It wasn't like I was fuckin' Fabio. My hair is shorter than a crew cut, so I just didn't get it. \n\nI also didn't know why all of the guys were staring at us. It made no sense. The guys in her class should have been heading for the showers. The guys in my class should have been checking out their cars or getting into their driving equipment.\n\nMaria wrapped her sweaty arms around me and hugged me again. My hands, out of habit went to her waist.\n\nShe was the first woman other than Maddie that I had ever hugged since before I was married.\n\nShe felt amazing.\n\n\"Make sure you hit the showers before we go to lunch,\" she said. Then she turned to leave and it all made sense. \n\nThe white Capri pants that she was wearing were soaked with sweat. They had become almost see-through. The guys were looking straight at her ass through the almost invisible pants.\n\nShe was wearing a very tiny pink thong that left nothing to the imagination. I quickly snatched her driving suit from her hand and wrapped it around her waist. \n\nMy actions earned me a round of loud boos and a couple of death threats from the guys watching us.\n\nI saw Maria's eyes flash with anger at me for snatching her suit from her hands. Then she suddenly understood the situation and redirected her fury at the guys booing me.\n\n\"At least there's one gentleman here,\" she spat. \"Sorry, Reid,\" she said quietly.\n\nThen she reached up, pressed that amazingly sexy but extremely sweaty body against me and kissed me. I'm not talking about a peck. I'm talking about a full on lip lock.\n\n\"See you at lunch, Reid,\" she gushed.\n\nI struggled into my driving suit and helmet with my emotions in a flux. Had I just cheated on Maddie? At that moment I not only didn't care about Maddie, I barely remembered who she was.\n\nPeople are always talking about light bulb moments, or when things suddenly just clicked for them. That morning from the time my ass hit the seat, I blanked out everything except driving.\n\nMy first two laps were driven the way I always did them. That means I drove like a freeway racer. I wove in and out of traffic just trying to pass other cars. But with the temperatures climbing and guys getting out of their cars to cool off or get a drink, I found myself with a nearly empty track.\n\nI decided to try a few of the instructor's tips about braking and shifting. I also tried my best to hit the apex of every turn and drive the type of drive line we'd discussed in class.\n\nAfter a few laps I had it down. I was feeling pretty good too until I heard my name over the intercom they used to warn or penalize us or to bring us in. \n\n\"Richards, what the fuck are ya doin? Get your ass up here, now!\" It was the first time I'd ever heard, Ian, our gruff old track manager curse at me. Usually he just left us alone unless we were driving too aggressively or refusing to give way to faster cars. And even then all he did was told the guilty party to sit out a few laps. \n\nAs I got my car off the track a lot of the guys were looking at me or trying not to. The ones who looked at me were smiling or laughing at me. The ones who were trying not to look at me were laughing too, but they were nice enough to hide it.\n\nI dropped my helmet and zipped my suit open to get some air on me. It was even hotter now than when Maria was on the track. I was dripping with sweat.\n\nI walked into the control room and looked for Ian. He was sitting in front of his computer analyzing telemetry as usual. \n\nA brown cigarette that seemed to be more than halfway to being one long gray piece of ash dangled from his lips.\n\n\"What the fuck got into you?\" he asked.\n\n\"Sorry, Ian, I guess I lost focus. I was just trying to practice some of the things we learned in class and I got into a rhythm. I'll try to do better ne...\"\n\n\"What's the track record for students in an RS Cosworth?\" he asked.\n\n\"I'm sorry Ian ... They told us the first day of class but I've forgotten,\" I said. \n\n\"You should have forgotten it,\" he said, sarcastically. \"You just broke it twice. If you keep driving like that you may end up driving more than a few laps on Sunday. And the surprise we have in store for next week might be right up your alley. Hit the showers.\n\nI saw Jackie in the hall as I left the control room. She waved to me. I waved back and went to grab my gear. I needed a shower badly and I didn't want Maria to have to wait for me.\n\n\"Hey, slow down,\" I heard from behind me. I turned and saw Jackie running to catch up to me.\n\nWatching her trying to run was like watching a penguin trying to fly. Her huge breasts were bouncing up and down so hard it looked like she would give herself a TKO ... That stands for Titty Knock Out ... at any second.\n\n\"Hey, Reid, you should come out to the club with us this evening,\" she said breathlessly.\n\n\"I'm not really into the whole drinking and partying thing,\" I said. \"I gave that up about halfway through college. But thanks for asking.\"\n\n\"You should give it a try,\" she said, sticking out her already impressive chest. \"You never know, you might get lucky.\"\n\n\"I'll keep that in mind,\" I said trying my ass off not to laugh. Jackie was obviously trying to win the contest that she and Sarah were having.\n\nI felt sorry for her, because if she had to fuck me to win, she had already lost. Even after what Maddie had done, I wasn't a cheater.\n\nI took a shower and got myself clean and smelling good. I told myself to calm down. I was only going to lunch with a friend ... Or a colleague. \n\nI was playing it cool ... Like a pop sickle in the snow at the North Pole in January. That is until I saw her. \n\nShe was passing by the cafeteria area and heading in the general direction of my room. It was simply unfair. She'd left the braid in her hair until she got out of the shower. Then she'd taken it down, resulting in a head full of incredible S shaped waves that cascaded down her back nearly to her waist. \n\nThe Capris were gone. In their place was a very short, frilly skirt that was playful and sexy at the same time. The peek a boo V neck had made way for a deep scoop neck leotard like top that left nothing to imagine in terms of how spectacular her breasts were. \n\nThe skirt revealed truly spectacular legs. They were the most incredible legs I had ever seen. If you compared Maria's legs to Sarah's, it just made Sarah seemed to be too thin. If you compared the, to Jackie's it made Jackie seem like a fat girl with giant boobs. \n\nHer feet were open and free in tiny flat sandals with straps that criss-crossed their way up her calves.\n\nAs she passed by the cafeteria, it emptied. Even the guys sitting with Sarah and Jackie got up. When she saw me, it generated another million watt smile. And suddenly nothing mattered.\n\n\"Guess what?\" she gushed. \"We have the afternoon off. They said it's too hot to drive the cars this afternoon.\"\n\nI have no words to describe that afternoon. After lunch we visited several museums and an ice cream parlor. Of course they called it by some weird Italian name but it was ice cream. \n\nWe lost track of time and by the time we wandered back to the hotel it was well past dinner. We hugged each other goodbye and wished each other good luck. We both had to race the next day. \n\nShe told me not to be nervous I only had to finish in the top five of my group to move on. \n\nI went back to my hotel room feeling better than I had since I'd left home. But as soon as I got there I started thinking again. I began to wonder how much of what Maddie had done was my fault. \n\nIf I had never left home, would any of this have happened? After thinking about it, I had to admit that the chances of it happening if I had kept my ass at home were remote. \n\nAll in all I had to admit that what had happened was just a spin of the karmic wheel that resulted in escalating lies. \n\nEach lie and its corresponding consequences got worse until our marriage exploded. Maddie lied about her phobia. She lied about going to Europe. So to cover her guilt about it she told me to take the trip alone. Her being lonely and missing me for those first couple of days was her punishment for her lies.\n\nI lied about why I was here. I came here to race. I never told her that I was going to do it, or even mentioned it in passing. So my punishment is having my wife screwing other men. Somehow, the punishment doesn't seem fair.\n\nI debated checking the cameras again and decided that the material I had recorded the day before was enough. I just didn't think she would ever do it again, but I didn't have the stomach to watch it if she did. Besides, she'd been drunk the first time and had felt, or claimed to feel really badly afterwards.\n\nI realized then that I was lying to myself. I wasn't afraid of seeing more video. I was afraid to text or speak to her on the phone. I had no idea what to say to her, or even if I wanted to.\n\nAbove all else I needed time to figure out if we still had a marriage. If there was any chance of saving our marriage, talking to her in my current state of mind wouldn't help.\n\nI could already imagine how that conversation might go... \n\n\"Hey, Reid, Honey I missed you,\" she'd say.\n\n\"Probably as much as you miss that huge dick up your ass, right?\" I'd scream at her. \n\nThen I'd really go at her. I'd...\n\nI'd probably get up and answer the knocking at my door. \n\n\"There's a party in my room,\" said Maria.\n\n\"I'm sorry,\" I said. \"I just don't feel much like partying.\"\n\n\"Me neither,\" she said, brushing by me with one of her megawatt smiles.\n\n\"It's not my kind of party anyway,\" she continued. \"Five guys, one of whom isn't even a part of our group, plus Jackie and Sarah. It does not sound like anything I'm interested in. So I decided to crash on a friend's couch.\" \n\nShe looked around the room. \"Where's the couch?\"\n\n\"It's a love seat,\" I said. \"It's under my suitcase and a bunch of junk.\" \n\nI grabbed my driving suit and a suitcase off of the small sofa. \"You take the bed,\" I said. \n\n\"I knew you were going to say that,\" she said.\n\n\"Sure you did,\" I laughed. She threw me her purse. \n\n\"There's a small note pad in the purse,\" she said. I looked in the purse and found the pad. The very first sheet read, \"Thanks for giving me the bed, Reid.\"\n\nShe went into the bathroom and came out a few moments later. I'd been clearing the love seat and getting myself a pillow and a blanket.\n\nWhen she came out of the bathroom my mouth dropped open. She had bound her hair up into two very long pony tails, one on each side of her head. \n\nShe was wearing a pair of small square glasses and no makeup. She was also wearing some sort of one piece pajama suit that covered her from the neck down, including the feet.\n\nThe tightness of the outfit showed off her gentle yet insane curves. It outlined and draped over her scrumptious ass. And from the way her breasts moved under the upper part, she was clearly naked under it. \n\n\"Sorry,\" she smiled. \"No Victoria's secret stuff this trip. But I can always give you the key to my room and you can go and watch Jackie walk around with those big old titties coming out of her bra.\"\n\n\"No thanks,\" I said. \"I'd much rather look at y...\" I caught myself just in time. \n\nOr maybe I didn't. But she was kind enough to let it drop, as she got into bed.\n\n\"Goodnight Reid,\" she said.\n\nThe next morning brought a surprise. Maria woke up as happy as a lark. She was smiling like the cat that ate the canary every time she looked at me. \n\nShe actually went through the breakfast line with me. She threw in several items that I never would have eaten. She also stared at each and every fruit bowl before deciding on one. \n\n\"Why are you eating two bowls of oatmeal?\" I asked.\n\n\"The strawberry oatmeal is for me,\" she said. \"The maple cinnamon is for you.\"\n\n\"Oh no, it's not,\" I said. \"I hate oatmeal.\"\n\n\"Don't start with me, mister,\" she said. \"We're racing today and oatmeal will give you energy throughout the entire day.\"\n\n\"So be it!\" said a voice behind us.\n\nWe sat down at the table with my friends and again every person in the room seemed to be watching us. Some out of curiosity, but a couple seemed to be angry or jealous.\n\n\"Reid, I think I lost one of my hair clips,\" she said as she stacked our bacon and arranged the tray. \"It's probably in your bed.\"\n\nEvery jaw in the vicinity, several pieces of silverware and a plate or three all dropped at the same time as Maria chattered on.\n\n\"You snore, Mister... It's not a loud annoying honking. It's a very low, little buzzing. It was kind of comforting. I liked it. I thought it was cute,\" she said.\n\n\"Maria,\" I said. \n\nShe looked up and smiled at me again. I twirled my finger around gesturing for her to look around and see that nearly everyone in our group was listening to her. \n\nShe shrugged her shoulders, dug into her oatmeal and pushed a spoonful into her mouth.\n\n\"See, Reid,\" she said. \"We didn't miss anything. If your friends are so interested in what we did, they couldn't have had much fun. I did though. Did you?\"\n\nI think all nineteen guys in our group were staring at me and waiting to hear my answer.\n\n\"I think yesterday was the best day of my life,\" I said.\n\nAfter that the day started. We were surprised to find out the way the day would go. We were told that classes were over and it was time to start racing. \n\nWe went to the track to find all ten cars were there and ready to go. By the luck of the draw, Maria's group got to race first. They all pulled numbers to find out who got to start where. I had expected it to be a NASCAR type thing, where they would win the pole by qualifying runs. \n\nMaria was starting seventh. \"Last year I started ninth,\" she smiled. \"It won't matter. All I have to do is come in fifth and I'll be racing against you tomorrow.\"\n\n\"I don't think I'd like that,\" I said. \"I'd hate to have to try to pass you.\"\n\n\"Honey, it's only racing,\" she said. \"I'd expect you to do your best. Now come on. You can help me get into my car.\"\n\nWhen we got to her car, the guy from my class that she shared the car with was there. \n\n\"I came to help you get set,\" he said.\n\n\"You are sooo nice,\" she gushed. \"But Reid's got it covered.\"\n\nHe smiled, wished her luck and told her not to damage the car because he'd need it next and then walked away. \n\nI held her helmet while she shimmied into her racing suit. Then I held her hair while she braided it. \n\nJust as she was about to put the helmet on, she looked at me and smiled. \"Reid, can I trouble you for one more thing?\" she asked seriously. \n\n\"Sure,\" I said. \"Anything!\"\n\nShe shook her head as if I had no idea what I'd just promised. \n\n\"I need a hug for luck,\" she said. I wrapped my arms around her and pulled her against me. Time stood still.",
        "When I finally let go of her I was dizzy and the front of my pants was a lot tighter than it had been. I looked across the track at my friends. I'd expected to hear Sobie's motto but he was clearly speechless. I walked away in a daze myself.\n\nEveryone seemed to be excited about the race. As I walked under the overhang of the bleachers to get to the seats, I saw the guy who'd offered to help Maria get ready. I nodded at him to be polite.\n\n\"Hey...Reid is it? Congratulations Bro,\" he said. \"You got her first!\" He held out his hand to me as if I was supposed to high five him. \n\n\"What do you mean?\" I asked. \n\n\"Dude you know about the contest, right?\" he said. \"Well those sluts haven't exactly made a secret of it. So the guys are having one too. \n\nThe first guy to screw all three of those sluts wins. I've already knocked off the other two.\" \n\n\"Maria is nothing like them,\" I said. \"We're friends. She slept in my room last night but nothing happened.\"\n\n\"Judging from that hug and the way she looks at you, that's your fault dude,\" he said. \"So if you're not gonna fuck her, would you do me a solid and get out of the way so I can?\" \n\n\"Maria isn't that kind of woman,\" I hissed. \"She isn't going to be a notch on your list. It just won't happen.\"\n\nHe started laughing. \"She's a woman ... She's got a pussy. She's gonna use it,\" he laughed. \"If I had half of the opportunities that you've had I'd already be done with her ass. So why don't you stop cock blocking for a couple of days and after I get mine, you can have her back?\" \n\n\"You're actually asking the wrong person,\" I said. \"Maria is free to do whatever she wants with whoever she wants.\"\n\n\"Dude ... She's a chick. She doesn't know what she wants. If she had been in MY room for a night she'd have gotten what she wants whether she wanted it or not. They always pretend they don't want it at first. But once you get them warmed up ... Umph!\" \n\nAs much as I was trying to stay calm I got pissed. I dropped the helmet I was holding and stepped closer to him. \n\n\"So anyway you need to go on and fuck that bitch or move out of the way!\" he said.\n\nThat was when I grabbed him and slammed him against the side of the building. I cocked my fist back intending to bury it in his face. But suddenly I felt something grabbing my arm. \n\n\"He's an idiot, Reid,\" said Maria. \"He's not worth it. If you hit him they'll kick you out. You won't get to race. He has a better chance to screwing one of these cars than he has of doing ANYTHING with me. If you need to beat him; beat him on the track.\"\n\nI let go of him and he stormed off angrily. I looked at the ground. \n\n\"Sorry,\" I said. \n\n\"Shhhhh,\" she laughed. \"I'm glad you took my helmet. I was coming after you to get it back and heard most of that.\" \n\nI picked up her helmet and gave it to her. She smiled again. \n\n\"So Reid, why'd you walk off with my helmet?\" she smirked.\n\nI blanked out and shrugged my shoulders. \"I think it has something to do with blood flow,\" she smirked. \"I think that hug diverted yours ...\"\n\n\"Delgado, are you racing?\" \n\nWe turned and saw Ian glaring at us. She quickly nodded and ran for her car. \n\nIt was funny, with half of my friends on the track and the rest sitting with me in the stands, you'd think my loyalties would be divided. It wasn't even close.\n\n\"Hey ya wanna put some money on it?\" asked Paul.\n\n\"On what?\" I asked. \n\n\"On the race,\" he said. \"I know you want to bet on your Honey to win.\"\n\n\"Maria isn't trying to win,\" I said. \"She's playing it smart. This is a qualifying race. She just wants to be in the top five. She's starting seventh. She has three laps to pass two cars.\"\n\nHe looked at me strangely. \n\n\"This isn't really my kind of racing,\" he said. \"But hearing you talk about it like that makes me realize that I have as good a chance as anyone else.\"\n\n\"Exactly!\" I said. \"And you should be watching these guys because if you make top five you'll be racing them tomorrow.\"\n\nMaria was good. She was a little sloppy on the curves, but not any worse than the guys. In fact, she was better than some and she had a lead foot.\n\nIn the first lap she picked up a position and was sitting sixth. She only needed one more position to accomplish her goal.\n\nWhat truly amazed me was Luke. He'd started first and was third by the end of the first lap.\n\nHe was quick on the straights and pretty good when he turned left. But whenever he had to turn right, he may as well have been driving backwards.\n\nThe second lap saw Maria storm her way into fifth place and put distance between herself and sixth place. Luke was holding onto fourth.\n\nThe last lap was wild with a lot of places changing hands and a few hearts broken.\n\nSomehow during a flurry of passes in the slalom section of the track Luke dropped to sixth. He came out of the curves like a bullet and beat out the car in fifth by a bumper, no more.\n\nOur friend Hoshi was eighth. And Todd was dead damned last. I found myself running for the track as soon as they finished. \n\nMaria was so happy she was jumping up and down as she got out of her car. She dropped her helmet and leaped into my arms. She finished third, two places better than she needed and even considering the difference in her starting position, she'd improved over her previous year's attempt.\n\nSarah came over while we were hugging. \n\n\"Hi guys!\" she said cheerfully. \"Maria, are you going to be using the shower in our room?\"\n\n\"Uh ... Yeah!\" laughed Maria. \"I'm tired and sweaty and sore all over. I need a nice long shower before I go and watch my second favorite driver qualify.\"\n\n\"Uhm, Reid, is it possible for Maria to use your shower?\" asked Sarah. \"I wanted to use our room to console one of the guys who didn't do as well as he wanted to. I think Jackie is going to do some consolation work too.\"\n\n\"It's fine with me,\" I said.\n\n\"Do I at least have time to get some clothes before you start giving out your mercy fucks, or whatever you're calling them?\" asked Maria angrily.\n\nWe went to the hotel and while Maria grabbed her clothes, I made arrangements. \n\nShe came back to my room a few moments later, still angry.\n\n\"It's bad enough they're doing it at night,\" she grumbled.\n\n\"Hurry up and shower,\" I said.\n\n\"You don't get to rush me,\" she smirked. \"I need time to get pretty for you.\"\n\n\"If it takes you too long, we won't have time for your surprise,\" I said. \"Besides you're already beautiful.\"\n\nHer entire face lit up. \"I have a surprise?\" she chirped. \n\n\"Call me before you get out of the shower,\" I said. She went into the shower with her mood restored. \n\nI called down to the front desk and told them to come on up. I had the guys move everything into the room as quietly as possible. Even so we almost didn't have enough time.\n\n\"I'm done!\" yelled Maria. \n\n\"Don't put your clothes on,\" I said. \"Put on the robe hanging on the hook.\"\n\n\"Okay ... I'm robed!\" she said. I opened the door and took her hand. I put a sleep mask on her so she couldn't see anything. Then I lead her into the main room. \n\n\"Oh my God! What is that smell?\" she asked. \"No what are those smells?\"\n\nI led her over to a table in the center of the room. The table was padded and I helped her to sit and then to lie down on the table on her stomach.\n\n\"Open your mouth,\" I told her. She did. She had absolutely no fear. I fed her a bit of a strawberry that had been dipped in chocolate. \n\nThe look on her face was worth it. I gave her a skewer and let her take the mask off. There was an assortment of fruit chunks and a big bowl of melted chocolate.\n\nAs she ate I began rubbing an apple scented lotion onto her feet and then began massaging them.\n\nI spent a lot of time on the soles of her feet and her toes then moved up to her ankles and calves. \n\nMaria's legs were extremely smooth and had obviously been recently shaved. As I probed and rubbed her aching muscles she started moaning.\n\n\"Oh ... Reid ... that feels sooo ... Gooood!\" she gushed.\n\nThat was when I heard the gentle knocking on the door. \n\n\"It's open,\" I said.\n\nSarah and Jackie looked into the room tentatively.\n\nJackie's jaw hit the floor as she saw us. \n\n\"That is not what I thought you guys were doing,\" she said. There were several different emotions crossing her face. \n\n\"We came to apologize,\" said Sarah. \"But it looks like you landed on your feet.\"\n\nJackie dipped her finger into the warm chocolate and licked it. She reached for a chunk of pineapple from the bowl of fruit and Maria snatched it back.\n\n\"Mine!\" she said. \"Don't you have some Charity work to do?\"\n\n\"We're done,\" said Jackie. \"The next race doesn't start for forty minutes. So we have about an hour before we need to console anyone else.\"\n\nShe looked directly at me when she said it.\n\n\"Reid, if you weren't going to be in the top five we'd console you too,\" said Sarah.\n\n\"No the fuck you wouldn't!\" said Maria in a tone that left no doubt. \"And what do you mean by that? It's his first time racing on this track.\"\n\n\"All he has to do is drive,\" said Jackie. \"Ian is starting him first for safety.\"\n\n\"What does that mean?\" asked Maria.\n\n\"You don't know?\" asked Jackie. \"Reid broke the track record twice yesterday.\"\n\n\"You did?\" asked Maria turning to look at me. As she turned over the robe gaped a bit, giving me a flash of the prettiest vagina I have ever seen.\n\nThe sight of her most intimate spot left me speechless.\n\n\"Wow, you weren't lying, Maria,\" said Jackie. \"He really doesn't brag about himself.\"\n\nAfter Sarah and Jackie left, Maria continued to eat her fruit while I massaged her legs all the way up to her knees. \n\n\"Coward,\" she smirked when I stopped. \n\n\"Maybe you've forgotten, your highness, but one of us still has to race,\" I said.\n\nWe got back to the track with ten minutes to spare. Ian was giving out the starting assignments and as Jackie had said, I was starting first. \n\n\"I wonder when she has the time to fuck Ian?\" asked Maria.\n\nWe lined up. Three rows of three cars each with one car by itself in the rear. As soon as the starter waved the flag, ten cars all roared simultaneously. \n\nAt the first curve, a very hard ninety degree right hander loomed, I leaned on Ian's tips. I waited until the two cars flanking me had already hit their brakes to apply mine. \n\nSince I was slowing later I shot forward into the lead. I concentrated not on driving fast but on hitting the correct line and when to shift or brake. \n\nI was driving the way I had the day before and everyone in the stands was going crazy.\n\nMy lead kept increasing but that wasn't what I was thinking about. I had to drive the slalom section better. There was so much going on there. There were too many back to back opposite direction turns. \n\nThe sounds of the engine and the brakes were the things I concentrated on. My second lap was faster than I'd driven the day before. It was another track record. \n\nThe weirdest thing happened on my last lap. I looked up and saw a car ahead of me. I thought that somehow I'd lost focus and hadn't noticed when he passed me. \n\nGoing into the last curve I used my late braking trick to catch up to him. Like Luke, I gave it all I had and eased past him by a half a car length.\n\nI looked over and waved at the guy to show there were no hard feelings on my part. After all one of us had to win and the other had to be second. \n\nBut even as I stopped my car the guy kept going. I laughed. The idiot was doing a victory lap, I thought. I was a bit confused. \n\nMaria came running over to me along with Luke and Hoshi.\n\nWhen she hugged me, nothing mattered anymore. \n\n\"Reid, you know as nice as you are, you're a dick on the track,\" said Hoshi.\n\n\"You're high,\" I laughed. \"That guy in the number four car is a dick. He's taking a victory lap and I swear I passed him. The guy in second doesn't take the lap. And this isn't even the race. This is only qualifying. Now that guy is a dick.\"\n\nMaria was hugging me and laughing her ass off at the same time.\n\n\"Uh Reid, everyone knows you were ahead of him,\" said Hoshi. \"He wasn't in second. He was in last place. You lapped him dude. He was busting his ass to avoid being lapped. Jeezus that's embarrassing. Technically you came in first and tenth. That means he came in eleventh in a ten car race. You could have let him go. Ask him if you're a dick.\"\n\n\"I believe I heard one of my favorite words,\" interjected Jackie. \"Starts with a D, rhymes with sick ...\"\n\n\"Wrong context, Jackie,\" said Maria. \n\n\"So anyway ...\" began Jackie. \"We're all going out to the club tonight to celebrate the winners and commiserate with those less fortunate. And we want the two of you to be there. \n\nWherever you two have been going for the past few nights will still be there. But we've only got two nights left in Italy so we should all get together at least once.\"\n\nI was about to say no until Maria looked at me and nodded her head. \n\n\"I can't guarantee that we'll stay very long, but we'll show up,\" she said. \n\nAnd we did. It turned out to be a disaster. We started out the evening in a booth in the back. We were talking the way we always seemed to. We talked about our lives and what we did. \n\nWe talked about our likes and dislikes and why Maria was divorced. We were easing our way into MY marital problems when Jackie showed up.\n\n\"Maria, Hon, there's only three of us and there are nineteen guys,\" she said sweetly. \"Do you think you could dance with one or two of them and give Sarah and me a break?\"\n\n\"No!\" said Maria. \"You and Sarah are supposed to dance with them. It's your job. I share a room with you two because we're the only women, but I don't work for the tour. I'm only here to race.\" \n\nJackie was shocked. She stood there for a few moments and then left. But she must've had a bulletproof personality, because she was back a little while later. \n\n\"I'm not doing it, Jackie,\" Maria told her as soon as she got to our table. \n\n\"Come on Maria, you'll make Sobie's night,\" said Jackie. \"And he's a nice guy. It's only one dance then I'll leave you alone. And I'll dance with Reid while you do it.\" \n\n\"Oh alright,\" said Maria. \"But we're leaving after this. It's too crowded and too noisy in here anyway.\" \n\nJackie took my hand and pulled me out onto the dance floor. At first we were just bouncing in time to the music like everyone around us. Then she pulled me closer to her. As close as her huge jugs would allow. \n\nBefore I knew it, she was rubbing them on me and being a gentleman, I tried to back away from her. I guess I thought it was an accident. But her words left no doubt that it was intentional. \n\n\"What's wrong Honey? Don't you like titties?\" she asked in a breathy voice that I guess was supposed to be sexy. \n\nThe problem was that her blatant overtures took away the fun I'd been having for the previous couple of days. The way she acted reminded me that I was married to someone who acted the same way she did. \n\nAnd I wasn't the only one who noticed it. \"We could get out of here and you could give me a massage like you did Maria earlier,\" she whispered. \n\n\"I don't think ...\" I began. \n\n\"Don't think, baby,\" she crooned. \"Just do what you feel. And I've got a couple of things I'd like you to feel ...\"\n\n\"I don't think so, Jackie,\" I said. \n\n\"Reid, I don't bite,\" she said. \"We could just ...\"\n\n\"He said no, Jackie,\" hissed Maria from behind her. \"And I've got a couple of things I want YOU to feel. Like my fist hitting your face and my foot up your fat ass ...\" \n\n\"Time to go, Maria,\" I said. \"We're racing tomorrow. Remember what you told me earlier. It's not worth it.\"\n\n\"You know she planned that whole thing,\" said Maria angrily, as I pulled her out of the club. \n\n\"Good luck, Luke,\" I said as I dragged her past a table where my friends were sitting. \"See you guys tomorrow.\"\n\n\"She gave me all of that BULLSHIT about dancing with some of the guys just so she could have a chance to rub those big sagging tits all over you,\" hissed Maria. \n\n\"Hey guys,\" I said to another group sitting at a table. \n\n\"And even when you tried to get away from her ...\" continued Maria as if we were still talking about it. \"Don't you like titties?\" She whined in a good approximation of Jackie's voice. \n\nAnd then her eyes flashed and she turned to go after Jackie again. I grabbed her arm and pulled her out of the club. She was so angry she could spit. I was sure that steam would come out of her ears at any moment. \n\nWe wandered through the streets in the general direction of the hotel. As we walked my hand slid down her arm until I was holding onto to her hand instead of her arm.\n\nShe seemed to relax then. \n\nWe ended up sitting on a bench in front of the fountain. We stared at the water for a while and the statues that hid the pipes that sprayed the water skyward. \n\n\"Reid, what were you doing that night that I first found you here?\" she asked. \n\n\"Long story,\" I said. \n\n\"I have both the time and the interest,\" she smiled snuggling against my arm. \n\nI looked into her eyes and saw that she was serious. So I did it. I opened the floodgates of emotions that I had been holding back or trying to ignore for the previous three days since I'd discovered what Maddie had done.\n\nI told her not only what Maddie had done, but how badly it hurt me. I also told her how I had absolutely no idea what to do about it. I had pretty much made up my mind that when I went back, I would give Maddie five days ... One day for every year that we'd been married, to come clean. \n\nIf within the five day period, she told me what she had done and convinced me that our marriage was worth saving, I would try to forgive her. Of course we'd have to push having kids back for a few years to make sure that we were stable...\n\n\"Where does having kids enter into the story?\" she asked. She looked up at me with those huge innocent brown eyes that I swear I could have fallen into as easily as I could have jumped into the fountain's pool.\n\n\"For the past few years, both of our mothers have been putting a lot of pressure on us to give them grandkids,\" I told her. \n\nThe look she gave me then sent shivers down my spine. Her chest was heaving with every breath she took and her legs were rubbing together. She squeezed my hand even tighter then and I heard a rushing sound in my ears. \n\nWe were being pulled together like magnets. The attraction was so strong that I felt powerless against it. I started talking to break the spell of the moment.\n\n\"So when you came here and found me,\" I began. \"I was ...\"\n\n\"Suicidal!\" she blurted out. \n\n\"No drama queen,\" I laughed. \"I had thrown three coins in the fountain. I was wishing that it had all been a dream.\"\n\n\"Why throw money in the water?\" she asked curiously.\n\n\"I grew up watching old movies from the forties and fifties with my grandmother,\" I said. \"One of my favorites was about people throwing coins into a Roman fountain and making a wish. Supposedly here in Rome magic can happen.\"\n\nShe kicked off her shoes suddenly and lifted one of her long legs over the edge of the fountain's basin-like base.\n\n\"What are you doing crazy girl?\" I asked grabbing her arm.\n\n\"Borrowing some money,\" she said.\n\n\"What?\" I asked. \n\n\"I'm not gonna actually steal the money,\" she said. \"I'm gonna throw it right back in.\"\n\n\"Maria, look at that water,\" I said. \"It's filthy. People spit in it and do God knows what else. Shit, it might even be all of the nasty bacteria that make the magic happen.\"\n\n\"Do you believe it works?\" she asked.\n\n\"Yep,\" I said. \"It probably doesn't work the way we expect it too though.\"\n\n\"What do you mean?\" she asked holding my hand again. \n\n\"I told you that I wished that what had happened with Maddie had all been a dream,\" I said. \"Maybe that was too big a wish. But the fountain gave me something that's actually better,\" I said. \n\n\"It killed her?\" she gasped. "
    ],
    "authorname": "StangStar06",
    "tags": [
        "cheating",
        "romance",
        "mustang",
        "vacation"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/3-coins-in-the-fountain"
}