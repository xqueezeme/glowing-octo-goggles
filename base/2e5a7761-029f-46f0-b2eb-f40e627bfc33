{
    "title": "The Master and the Ring Ch. 11",
    "pages": [
        "Yvonne of House Granvas had never felt anything like it before. The power surging through her immortal form was immense and all-consuming. She felt the power of the other three women linked to her and then the overwhelming link between them and Henri. The spark taken from Mary was fresh, feeding the sensations she felt. Looking around at her real sister and now her ring sisters, Yvonne noticed their appearances slightly changing. All of them were young and beautiful so the change wasn't as dramatic as it could have been if they were all older. But still Yvonne saw the changes. Wrinkles, skin spots from the sun, any sag in breasts or flaws of any kind were erased as soon as the spell was completed. She felt alive and reborn and from the look of the others she knew she had achieved the same perfection. \n\nHenri stood over them, towering into the night sky with the ring glowing blue around his now flaccid shaft. His cock hung heavy and massive between his legs, his body rippled with the power and the muscles of the Master. Even as far up as his head was, she could still see the fresh tears on his cheeks. He mourned for the girl's body on the altar. Mary was gone forever, a sacrifice that had to be made.\n\n\"I must leave and defend the nation,\" Henri's booming voice sounded down to them.\n\n\"Yes, my king... we will await your return,\" Yvonne said, reaching up to him.\n\nHe took her hand in his enormous palm, holding it for a brief moment before climbing over the palace wall with ease and out of their sight. Yvonne turned back to her three ring sisters. She viewed their naked, perfected bodies and looked down at herself. Her large breasts were higher, firmer and her body felt amazing.\n\n\"Look at us!\" she said.\n\n\"Yes, we are renewed with the spark from Mary. It is how the old Mother's remained young and alive for centuries,\" Heather said.\n\nThe ring around Yvonne's clitoris was hot. She felt it pressing against her body, held on by the magic. She looked down over her breasts and viewed the blue runes shining among her folds; her clitoris engorged and prominent, the tip pressing out from the center. With her fingers, she touched the ring and her nub. The sensitivity was staggering, sending pangs of pleasure into her core with just slight touches.\n\n\"We need to dispose of the body,\" Heather said, bringing Yvonne back to the present issues.\n\n\"No, not as if she was nothing. Henri would want her to have a hero's funeral and a proper burial. He will want her celebrated for her sacrifice.\"\n\n\"As you wish,\" Heather acquiesced.\n\n\"Preserve her with the power until his return. He will see her one more time before she is buried. See her the way he remembers her,\" Yvonne said.\n\nYvonne felt the authority that came with the ring around her sex organ. As the head, she felt the other's obedience through the bond, what was stranger still, was their acceptance of this obedience. She felt her body vibrating with the power of the bond, it was addicting. Arianna cast the spell to preserve and clean Mary's body. Together the four ring sisters left the courtyard and returned to Arianna's and Heather's chamber. The body of Mary floated on invisible flows of the power behind them. They placed her body in the servant bed outside the main chamber. She looked as if she was sleeping.\n\n**\n\nHenri ran faster than any earthly creature. His strides were huge, smashing rock, earth, plant and all else under his bare feet as he ran to destroy the enemy that threatened his nation. His long cock swung freely back and forth as he ran without rest.\n\nHe arrived at the height of the battle the next morning. Garigasia had massed an enormous offensive in the narrow canyon, sacrificing thousands of soldiers until General Sharis's men were completely out of arrows to repel them. The hand to hand combat had become fierce and bloody. Bodies littered the ground and the blood was ankle deep in places.\n\nSuddenly a roar was heard. It echoed down the canyon so loudly that soldiers on both sides stopped fighting. Again the roar was heard. It was the war cry of Henri's country, unmistakable now to both sides. The Garigasian's began to fear, giving General Sharis's men courage to fight harder. The third time the cry sounded Henri appeared. A cheer went up from his men and he jumped with one enormous leap over his own defenses into the heart of the Garigasian horde. What happened after that was difficult to describe or stomach even by the most hardened soldier.\n\nThe ankle deep blood became a river and flowed deep through the canyon as if the spring rain had come early.\n\n**\n\nThroughout the morning the ring sisters felt the power of the Ring lessen as Henri must have been in the midst of battle. They sat together in a small circle, watching the blue light on each of their rings lesson as the morning turned to afternoon and then evening. By nightfall the glow had completely disappeared and the rings appeared only gold.\n\n\"He has fought all day, but I believe it is at an end,\" Yvonne said.\n\n\"Yes, the rings hold steady. The battle must be at an end,\" Heather said.\n\n\"He should return soon,\" Serena added.\n\n\"Yes, and then his true battle will begin,\" Yvonne said. \"Before Mary sacrificed herself, she asked me to protect him. To not let the power destroy him. I promised her I would. Now... now that I see more clearly and feel the strength of the spell, I fear that promise may be impossible to keep. We all know how strong-willed Henri is, but I fear it will not be enough.\"\n\n\"He knew the risks when he asked us to cast the spell. He believed he had no other choice. Even if the power consumes him, he will not regret what he has done,\" Heather said.\n\n\"Already the Ring yearns for another sacrifice, another spark. Henri will begin to feel its draw to have another woman. This will only increase until he gives into the Ring or goes insane from its persuasive power.\"\n\n\"Is there not a third option?\" Serena asked. \"Cannot we satisfy the Ring?\"\n\n\"Power does not beget power. The power must come from something besides us. That is why the Mother's trained the Daughters of Mentula. They promised us immortality if we could please the Master. They were only lies designed to feed the lust of the Ring and ultimately sustain them. They lived for all those thousands of years off the spark of innocent women,\" Arianna explained.\n\n\"Then the Ring must be destroyed again. Now that the threat is gone we will just convince Henri to break it,\" Serena said.\n\n\"Do you not remember what happened to the four Mothers when he broke the original ring?\" Heather asked.\n\nSerena paused... \"They were destroyed, turned to dust.\"\n\n\"Yes, just as we would be if he destroyed the Ring. We cannot remove ours from our clitorises either. We are forever bound as long as the Ring remains whole,\" Heather said. \"I estimate thousands of men served as the Master for the Mothers. The power will consume Henri as it did them before him.\"\n\n\"What if he removes it and hides it deep in the earth?\" Serena asked.\n\n\"Then we wither, grow old and die before our time. Henri will not allow that to happen and we all know it. He will give into the Ring's urges even faster if he sees we are beginning to grow old,\" Heather answered.\n\nThey all nodded in agreement and despair.\n\n**\n\nHenri was covered in thick, almost black blood from the thousands he had destroyed. With no weapon large enough for his stature, he used his hands and teeth to destroy the army of Garigasia. Even as they began to retreat and run for their lives, Henri pursued them, tearing all he found limb from limb. When he returned to his men in the canyon, he was unrecognizable as their king, the gore and blood drying thick on his naked form. His own soldiers fell back in fear as he came into view until General Sharis called forth to him.\n\nHenri felt tired, even with the Ring still around his shaft. It grew hot and he felt the urges, he remembered well, to find a woman. The men cheered when they discovered it was Henri but gave him a large berth as he walked among them. Finding a large boulder, he sat down and rested. Sharis sent the men away to prepare to return home, standing next to the boulder.\n\n\"How far did you pursue them?\" he asked his king.\n\n\"To no man's land. There wasn't more than fifty left by then,\" he answered, flatly.\n\n\"It is finished then, just as you predicted.\"\n\n\"Yes, the word will spread. No one will dare attack us again,\" Henri said.\n\n\"What will you do now?\" Sharis asked.\n\n\"Return home and marry, I suppose.\"\n\n\"What should we do with the dead?\" Sharis asked, looking down the canyon.\n\n\"Bury ours, burn theirs until your fuel is exhausted.\" \n\n\"Very well.\"\n\n\"Return home when you're finished,\" Henri said, standing and walking toward his capital.\n\nSeveral miles away he came upon a large lake among the mountains the canyon pass cut through. Wading in, he savored the cool water and began to wash the gore from his body. He was afraid to remove the Ring in fear he would not be able to stand without it, let alone walk back to his capital. Submerging himself in the cold water, he washed his hair before continuing his journey home and back to the four women he longed to see. The urges to have a woman grew by the minute and the Ring grew hot around his long flaccid cock.\n\n**\n\nYvonne sat dressed in her chamber, the book of spells laid out before her. She had been reading all morning, searching diligently for some way to save Henri from his inevitable demise. The book held no answers, which wasn't surprising since the old Mother's didn't care about the men they used as the Master. Yvonne repeated the words of the original spell in her mind, understanding their meaning more fully now that her knowledge and learning had increased. She looked for a loophole, some backdoor she could use to change the spell by altering it with the magic she and her ring sisters commanded. There had to be a way; in her heart she believed it and in her mind, as possibly the most powerful being in the known world, she was determined to find it.\n\nShe lingered on one phrase in particular, as if sensing there was something in it she could use. It was more of a feeling than anything else. She felt close to a breakthrough when the door to her chamber opened and Henri walked in as himself. He didn't walk very far before falling over onto the floor from what appeared to be exhaustion. \n\n\"Henri, my king!\" She rushed to his side.\n\n\"I'm in need of food and rest, my queen,\" he said with much effort.\n\n\"At once,\" she returned and called for her maids.\n\nOnce she had ordered food for the king she used her magic to transport Henri to her bed. He was only wearing some worn-out trousers he must have found on some clothes line. She sat next to him pulling the covers of her bed over his naked chest.\n\n\"The battle was a victory?\" she asked.\n\n\"Yes, we have no need to fear.\"\n\n\"And the Ring?\"\n\nHe opened his right hand to show her the gold Ring that had left an imprint on his fingers from the grip he held. \"It grows hot and desires me to answer its urges. In my weakened condition I feared leaving it on in case I was not strong enough to resist its call with all the women in the palace.\"\n\n\"We are all diligently searching for a way to help you, my king.\"\n\n\"I just need food and rest now, my lady.\"\n\nThe servants returned with food and drink. Yvonne fed Henri in the bed until he was able to sit up and finish the meal himself. He fell asleep as the noon sun shone down hot on the capital, the Ring tightly in his fist.\n\n**\n\nHenri awoke in the evening with a start. The Ring was burning his hand. He dropped it on the bed before noticing the four women watching over him. He also noticed a pretty maid leaving the room. Her presence was what had made the Ring grow hot. Now that she had departed, he picked it back up and held it between finger and thumb.\n\n\"Even now, with it only in my hand, it pulls me to action. It desires to be one with Mentula and seeks a woman's body,\" he said to his four ladies.\n\n\"We know, my king... we are working on the problem,\" Heather said, standing and coming to the side of the bed.\n\nHe quickly noticed all of their appearances. They had taken on the perfection of the Mothers he had encountered in the Temple of Mentula. They were stunning to behold. Now that he was rested and fed he was keenly aware of their appeal and beauty. He swung his legs to the edge of the bed and sat up. The four gathered around him, some standing others kneeling by the bedside. He fingered the Ring among his fingers, feeling the pull it had on his cock if he let it get too near.\n\n\"It pulls me to it. I'll show you,\" he said, pulling down the worn trousers until he sat naked on the edge of the bed.\n\nHe moved the Ring closer to his flaccid cock as the four women watched eagerly. His cock lifted toward the Ring without being aroused as the pull from the Ring grew the closer it came. Henri held the Ring directly above the head of his penis, only an inch away. His cock was not hard but it appeared erect due to the attraction from the Ring. When he pulled the Ring away, his cock fell between his legs, only to rise again when he held it close once more.\n\n\"It wants nothing more than a woman to sheath it, my king,\" Arianna said.\n\n\"Yes, but no woman can survive,\" Henri said, pulling the Ring away once again.\n\n\"We've preserved Mary's body so that you might see her one last time before burial,\" Yvonne said.\n\n\"Thank you. Her sacrifice must be remembered. Have the funeral preparations been arranged?\" he asked.\n\n\"No, my king. We thought you would want to do this,\" Yvonne answered.\n\n\"Yes, I will make the preparations myself. Has the army returned?\"\n\n\"Not yet, they travel much slower than the Master,\" Heather said.\n\n\"And the wedding?\" Henri asked, looking at Yvonne.\n\n\"Almost finalized, my king,\" she said, leaning forward to kiss him.\n\nHe returned the kiss as her hands touched his legs. He felt a great desire to pull her onto him and make love the rest of the night. Suddenly Serena giggled; she had read his thoughts on what he wished to do to Yvonne.\n\n\"Maybe we should leave the two of them alone,\" Serena said.\n\n\"Or maybe Mentula could please us all as Henri has suggested,\" Heather said.\n\nYvonne broke the kiss when she heard this and turned around to face the other three. Henri expected her to be angry and to rebuke Heather for such an idea. What transpired instead was the exact opposite.\n\n\"That is a lovely idea, Sister,\" Yvonne said to Heather. \"Henri? Do you feel well enough to do as she suggests?\"\n\nHe was stunned and hesitated until she turned back around to face him. \"If that is what you wish, my future queen.\"\n\n\"You may find my change of heart troubling, my king, but I assure you it is no longer a difficult thing to share you with my ring sisters. The bond is strong we have together, we share everything now, even you.\"\n\n\"As you wish, but we must find a more suitable location, the Master will not fit on this bed nor well in this chamber,\" Henri said, his cock already answering the excitement in his body.\n\n\"The courtyard will be sufficient,\" Arianna blurted, not hiding her own excitement.\n\n\"Very well. Follow me,\" Yvonne said.\n\nHenri was the last to stand and follow the four witches ahead of him to the courtyard. His large cock grew steadily with each step as he held tightly to the warm Ring in his right hand.\n\n**\n\nLord Byron's rage was as a blacksmith's kern with full bellows blow. He had never been this disrespected in all his days, nor had he heard of such disrespect from a noble. Yvonne and Serena had not even the decency to write a letter of regret, no, they just never showed to a personal invitation to dinner from the lord himself. There wasn't much left in Lord Byron's chambers that he hadn't destroyed. When the squirrely servant knocked, Byron hurled his sword at the door, thrusting the blade six inches through the hard wood and almost killing the man on the other side. He entered nonetheless for he had an important message from the battlefield.\n\nStepping over broken fragments of several items, he handed Byron the correspondence and left quickly. Byron focused his bloodshot eyes and read. He blinked twice, not believing what he thought he had seen in the ink. Reading again he dropped the letter on the overturned table.\n\n\"This cannot be correct. The king single handedly destroyed the army of Garigasia? That can only mean one thing,\" he spoke aloud.\n\n\"The Master has returned,\" a deep voice said from behind him.\n\nByron turned quickly to see General Sharis standing at the door with the sword from the door in his hands.\n\nByron took a step back as Sharis approached him, admiring the blade and kicking away a broken chair.\n\n\"I know it was you that hired the assassins. You are guilty of treason and thereby sentenced to death by order of the king,\" Sharis said calmly as he towered over the old lord.\n\n\"I... did no such thing!\" Byron bellowed.\n\n\"Your very sons have betrayed you. They squealed like pigs to save their own necks,\" Sharis said, raising the sword.\n\n\"I beg mercy! Please spare me,\" Byron pleaded.\n\n\"Traitors deserve no mercy,\" Shais said, letting the blade fall, cleaving Lord Byron from shoulder to navel with one blow.\n\n**\n\nThe four witches turned around to face Henri as they all gathered in the center of the courtyard. One by one they undressed until all stood naked before him. His cock had grown hard and throbbed, bouncing on with the beat of his heart. He admired their beauty, which was beyond compare. He had never seen such perfection, even the old Mothers were not so pleasing to look upon. \n\n\"Place the Ring and let Mentula appear,\" Heather said.\n\nHenri unclenched his fist, holding the Ring in his palm. He felt the pull on his cock as he neared the ring toward his head, before easing it down his straining shaft. The Master appeared rapidly as Henri was transformed before the four witches. Their rings, hot around their own sex organs, began to glow blue with the Master so close. They approached him, touching his strong legs and reaching up to caress his large orbs hanging under Mentula. To give them better access to him, Henri knelt down among them, putting Mentula at chest level. They all took hold of his shaft, with plenty to spare even with four sets of hands.\n\nTogether they began to stroke the hard flesh, working as one to pull the lose skin along his shaft, covering his bulbous head slightly with each upward stroke. Their hands felt astonishing on his cock. Soon Mentula was oozing copious amounts of slippery effluent the witches began to use to stimulate him further. Several minutes passed as they coated his shaft and head with his own juices and pleasured him with their many hands.\n\n\"Who wishes to try taking him first,\" Yvonne asked several moments later.\n\n\"It should be you, Mother,\" Heather quickly replied.\n\n\"Very well. Henri? Suggestions?\" she asked.\n\nHe recalled how the old witches had pleasured themselves with him on his back tied to the walls of his prison. He had little control, none to be sure. He opted for a different solution this time. Easing his large hand behind Yvonne's naked perfect body, he picked her up as she fell back into his palm. With her on her back, he lowered her to the head of his cock as she spread her legs.\n\n\"And the ring with protect me?\" she asked, a bit nervous.\n\n\"Yes,\" he said just as his enormous head came in contact with her wet sex.\n\nBoth of them moaned together as Mentula entered her, the connection by magic, seeming an allusion as Mentula penetrated her small body all the way and disappeared.\n\n\"It's glorious!\" Yvonne screamed.\n\n**\n\nAs soon as Henri's massive head touched Yvonne's sex, she was keenly aware of the magic involved. It became intuitive to her, shaping and shrinking Mentula to her desires as the shaft eased into her body. She found she could manipulate it anyway she wanted. This was why she screamed out how glorious it was. Her glowing ring around her clitoris had total control over the size of Mentula. Henri pulled back out and she watched in amazement as the shaft widened once it was withdrawn. He eased back in and she manipulated it once again, bigger this time, filling her sex more full than anything previous. She had even made it bigger than Henri's natural size.",
        "Her head fell back in utter pleasure as the feelings of rapture filled her body. She had never felt so full, nor so wide open in her life before. The stress pulled her skin tight, moving the flesh around her ring bound clit, causing wonderful sensations to pulse through her as Henri thrust in and withdrew with more speed and effort.\n\n\"That is astonishing!\" Heather said, watching Henri holding Yvonne in the air and thrusting in and out. \"Is it difficult?\" she asked Yvonne.\n\n\"No, it's... completely... instinctive, we have... total control.\" Yvonne moaned.\n\n\"What does it feel like for you, my king,\" Arianna asked, just as surprised.\n\n\"Incredible, as if her body has somehow grown around it. I cannot tell anything is changing it. It is as if I am not the Master with her ring.\"\n\nYvonne's pleasure was increasing. The excitement and newness of the experience was not lost on her enhanced body. She was soon shaking and writhing in the giant hand of Henri as he held her effortlessly and thrust forth on his knees. The pleasure was astounding, the control she had on her own desire was reminiscent to masturbation and her manipulations of Mentula within her soon brought forth a climax she never knew was possible. She began to tremble, convulse and spasm in his palm as the incredible waves flooded the whole of her person until all sound and sight had diminished and overcome by sheer bliss.\n\nIt was during this enlightened state that Yvonne found the answer she'd been looking for.\n\n**\n\nSerena watched her sister climax in Henri's hand. He continued to thrust into her as she shook and convulsed, groaning in what sounded and looked like absolute pleasure. Yvonne finally fell limp in his grasp and he slowed his thrusts, pulling out completely and laying her down on the courtyard ground. His palm was wet from her climax. Mentula throbbed and pulsed, covered in the plentiful secretions of Yvonne's insides. The sight was inviting to Serena, causing her to step forward and take hold of the massive shaft. She wondered if the ring around her clitoris would allow her to suck him deep as well as protect her during sex. She soon found her answer as she used her weight to pull the massive shaft almost horizontal before opening her mouth to suck the gigantic purple head. She felt the same connection and control Yvonne did when she made contact with him. She shrunk the head and shaft down to a manageable size, taking Mentula into her mouth and further to the back of her throat. It was a strange sensation with her hands around the middle of his shaft, neither touching the other he was so wide, but experiencing the sensation of a smaller shaft in her mouth that she could suck and lick, using her lips like Yvonne had taught her.\n\nShe heard a deep moan come from the Master, Henri was enjoying the oral pleasures she was performing. She sucked and stroked, shrinking more and more of his cock with her mind until she had thoroughly cleaned his shaft of all of her sister's juices in her mouth. As she withdrew, the monster appeared somehow from between her lips until Mentula was again in view. \n\nHeather and Arianna stepped up next, wanting to experience the same. Both of them took turns sucking Mentula and learning how easy it was to control and contort the large member to a more manageable size. Serena stood next to them and took another turn, sucking him as well as she knew how until all three of them had enjoyed Mentula twice each for several minutes.\n\n\"You seemed to have learned quickly,\" Henri suddenly said, as Mentula appeared from Arianna's mouth.\n\n\"Yes, my king. As Yvonne said, it has come naturally to all of us,\" Arianna said.\n\n\"I believe you have mastered Mentula and are doing that which the old Mother's did. I speak not of changing the size. I speak of controlling my climax. I have been on the cusp of ejaculation for far too long.\"\n\nSerena looked at the two witches standing with her and all of them began to smile.\n\n\"Yes, my king. We have found this added knowledge. Are you disappointed in us?\" Serena asked. \"Would you prefer we did not interfere in this way?\"\n\n\"It has its purpose, making me able to pleasure you all, but from experience, I know it becomes unbearable when performed too long,\" he responded.\n\n\"We will adhere to your wishes, my king. We will give you control when asked,\" Heather spoke up.\n\nHenri nodded, looking down at the three standing beneath him; Yvonne had yet to regain her feet. Serena read his thoughts and saw his memories of the Mother's denying him climax for hours and hours. Saw how the witches had floated in the air and manipulated his penis with their power, using imaginary hands and finally a woman's mouth large enough to suck the whole of Mentula. She felt through his memories what this had done to him and vowed never to be so cruel. She also saw his memory of the climax when the Mother's had finally allowed him to ejaculate after he begged and gave in. Henri remembered it well. With all the denial, the pending explosion had been colossal and Serena knew Henri would never forget it.\n\nShe left his mind and memories but not before she shared them with the other three. Yvonne had regained her strength and her feet, coming to stand next to Serena.\n\n\"You must tell him what you have done,\" Yvonne said.\n\n\"Yes, Mother,\" Serena answered, wringing her hands and looking downward.\n\nHenri looked down at Serena confused as she began to speak. \"I have read your thoughts, my king; your memories of the old witches. I know what they did to you and I have shared it with my sisters here.\"\n\n\"I see,\" Henri said. \"Then you all know the power you could have over me, and what pleasures you can bring to us both. I'm not angry, Serena. I trust all of you with my life. Do you wish I lie on the ground so that you can perform the same acts as the old Mother's?\" he asked.\n\n\"We all agree that it would be more conducive considering you size, my king,\" Serena answered.\n\n\"Very well,\" Henri said, easing his large body to lie on the courtyard ground made up of polished stone and lush turf.\n\nSerena admired his prone body, Mentula pulsing, arched over his muscled abdomen. She suddenly lifted herself in the air and rose over his body as the other three watched her. With her mind, she lifted Mentula vertical and floated down to take him inside her tight, recently deflowered sex. She kept him small at first, but with each descending motion, Serena increased the size of Henri's cock until she had exceeded his natural size, feeling the staggering sensations of being so full and the widening and pulling of her flesh. She played with her ring around her clitoris and rode his cock for several minutes, stretching her sex to new proportions.\n\nWanting to feel him in her ass as the Master, she raised high enough to release him before descending down again with him in her anus. She started very small and increased his girth slowly as she rode him until he was as big as his normal girth. The girth she had learned to accept as a prisoner and loved the sensations.\n\nShe rose and fell over and over, while playing with her sex as she was taught. Upon her climax, she pinched both her nipples and screamed out in pleasure as it peaked and burst upon her. She, just as her sister before her, never imagined an orgasm such as this.\n\n**\n\nHenri knew he should have climaxed easily by the time Serena climaxed. He should have spilled his seed when the three were sucking him as well. They were controlling his orgasm from coming, just as the old witches had. It brought back the memories, but he took comfort in believing if he simply asked for control, the four he was so fond of would instantly give it to him. He instead, savored the pleasure their bodies gave him, basked in the edge he hovered on and enjoyed their perfect naked bodies surrounding him as well as the young Serena taking his cock deep inside her tight sex and then her ass.\n\nHe caught her from hitting the hard ground when she began to climax. She lost her ability to hover on his cock from the pleasure. She was still shaking in his hand when he laid her on the ground at his side, just as Heather lifted herself in the air to take her place.\n\nHe expected it from her. Heather bypassed her vagina completely and lowered herself down onto Mentula, taking the monster directly into her forbidden hole. He knew she was capable of almost taking the whole of it naturally and was sure she was only adjusting his girth and length slightly. He moaned loudly as she eased down on his straining shaft. His pleasure instantly peaked once again, but she stopped his semen from exploding forth, keeping him on the pinnacle of pleasure without falling. His eyes blurred, his body quivered, the enhanced pleasure from being the Master covered his body with bliss as before. This time it was so much better because he wasn't trying to fight it or worry about giving in to the old witches. This time he lay there fully committed to enjoying every sensation he could.\n\n**\n\nHeather was stretching her ass further than ever before, loving the pleasure and pain she had grown to crave as a daughter of Mentula. Henri as the Master was still too big to take naturally, but she took as much of Mentula as she could, hovering amid her pain threshold she craved. Her hand rapidly played with her wet sex and rock hard clitoris. The ring made it easier to play with, she found, and stimulated it further than before. She basked in the sensations coursing through her and the power of the rings added in her bliss. She had accomplished that of which she had always wanted. The lie had come true for her and Arianna, two daughters out of thousands, were the only ones to be given the prize they had been promised. All possible because they followed Henri from Garigasia. She'll never regret that decision even if she was subject to Yvonne as the head.\n\nShe monitored Henri's pleasure. Keeping him on the verge of climax but not allowing him that final step where his muscles contracted and the seed flowed. He still had to please Arianna, he couldn't climax yet. Slamming down on Mentula, she let the thick, long shaft penetrate her fast and hard until she could feel it far into her abdomen, filling her bowels with hot, throbbing meat. This moment was exactly what she had lived for. She had trained and toiled for years as a daughter for this exact moment in time. To be pleasuring the Master and taking Mentula into her body, feeling the unadulterated pleasure she knew was capable if she met her goal. Her life was complete; everything was as she thought it should be.\n\nAnd then she climaxed. Not even she could have imagined the pleasure that resulted, even in her wildest daydreams about the Master, she had never dreamed of such sensations of bliss and rapture. Wave upon wave of potent ecstasy covered her body the likes of which she could hardly withstand and not faint. Her juices gushed from her body, dripping like a spilled goblet down upon Henri's trembling form. Her strength left her and she too fell into his hand to be laid on the ground.\n\n**\n\nArianna wasted no time, lifting herself and taking Mentula into her ass as Heather had. She was just as skilled as Heather, taking most of the large shaft into her bowels. She not only rose up and down, but also spun her naked body around in a circle, spinning upon Henri's cock, having assumed control of his climax from Heather. She looked down with a grin when she saw his expression as she spun in a circle as she rose and fell. The sensation was incredible to her and must have been to him as well. She felt his semen boiling within him, he had been denied the ability to climax for a while now and she could sense his willingness waning.\n\nAs she spun, she played with her large perfect breasts as well as her ring adorned clitoris. She just needed to climax and then she could give Henri his control back. She, like Heather, was ecstatic to be in her position. Every daughter longed to be with Mentula and to be as the Mothers. She was no different and to achieve this high calling and gift was not lost on her. Henri's expression had turned from astonished bliss to a slight grimace. He so wanted to be able to release his pent up load. Arianna knew it was going to be epic, she sensed the quantity in the Master's body just begging to be released. \n\nMoving up and down faster, Arianna played furiously with her clitoris and brought forth her climax within a few minutes after seeing Henri's expression change. She too was taken aback by the pleasure she had attained. It was more than the Mother's had promised, words could not describe the ecstasy well enough to explain how she felt as her climax crashed over her for longer than she thought possible.\n\nShe finally could take no more, lifting herself off of Henri and down to the ground with trembling legs. His body was literally vibrating, his hands were in fists and Mentula looked like it was ready to explode from the inside out. He was covered in sweat as well as the three witch's secretions that had poured out of them during their climaxes.\n\nAll four of them stood next to his massive legs and together then used their power to lift his cock vertical. The four of them performed the same oral delight the old witches had when Henri was a prisoner. They were not holding his semen back any longer. As if a woman was sucking his head and taking him down her throat, Mentula finally was allowed to climax and as it did, Henri screamed in pleasure, sending a torrent of white into the night sky. Semen rained down upon him and the four ring sisters for several moments as his climax surged forth again and again, high into the air.\n\n**\n\nWord of the Master's return and the death of the traitor Lord Byron swept the nation as well as the victory over Garigasia grew throughout the known world. With his nation safe, Henri arranged the funeral for the hero Mary Ballantine who was buried among the noble and great ones of his nation. Her sacrifice was known by all and her name praised with a specific day each year to celebrate her life and sacrifice. With the funeral over, Henri and Yvonne were married in a grand ceremony three weeks later. Serena cried as many other women along with her. Men's cheers were heard throughout the nation and peace came finally to his land.\n\nThe urges from the Ring had continued to grow as Yvonne and her ring sisters worked on saving him during those three weeks. The enlightenment Yvonne had received from her first climax with Mentula was not a simple task, taking much preparation and even then they all prayed it would be successful. Henri fought against the urges valiantly, hoping they would have the solution soon. He feared leaving the ring unprotected, keeping it on his person day and night. He soon had to wrap it in several layers of leather to keep the heat from burning him. The only time it cooled enough to touch was when it was around his cock and he was enjoying the witches. But this did little to appease the Ring with no spark to harvest.\n\nAfter the wedding ceremony, he and Yvonne left the palace and traveled alone to a mountain retreat for the king only. It had survived the war and was untouched by the evil Master who had conquered his nation. The scenery was beautiful beyond compare anywhere in the known world, a perfect place for king and queen to spend their first days and nights as husband and wife.\n\nA perfect place for Yvonne to give her special gift to Henri, the love of her life."
    ],
    "authorname": "jasliz",
    "tags": [
        "anal",
        "anal sex",
        "novella",
        "romance"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-master-and-the-ring-ch-11"
}