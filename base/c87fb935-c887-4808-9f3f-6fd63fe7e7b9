{
    "title": "Exposure Compensation Factor Ch. 03",
    "pages": [
        "I had several readers request more from Dierdre and Ken, so here it is. \n\nWhen I posted my last story, I asked, as usual, for Comments, Feedback, and votes. I received very few...so let's try some reverse psychology. Don't tell me what you think, or what you like. ;-)\n\nAre you laughing? Good, because I'm kidding. Come on folks! Votes are like applause to writers, and you don't get an encore unless you ask for it. \n\nThanks for reading. Enjoy. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAh Didi. My darling, Didi. Those four and a half days together changed my life forever. Hers too. I can say that with relative certainty, and all due humility. It showed on her face every morning. \n\nWe had been together nearly two years now. In that time we had become quite the team. \n\nDidi still did her own thing, and had been quite busy in the wake of her cover appearance. She was very grateful for my help in making her an overnight sensation, after years of trying. She expressed that gratitude often, and physically. There was much more to it, of course. Two years takes more than just sex. \n\nI loved her. I knew it quite early, but it took me a while to actually say it. Once I did, the floodgates opened. She had been holding back, defending herself from pain, but now, the only thing missing was an actual marriage certificate. We had become 'us'. \n\nAs far as team Winslow-Hendricks was concerned, we were doing very well. There were times when work schedules had us going in opposite directions, something that helped our bank account, but I still hated. If we weren't spoken for separately, we usually went together. I was there on set for her as moral support if she was the talent before the camera. She was by my side as an assistant when I was behind the camera. \n\nLet me say...and I know my opinion is biased by the fact that I love her, am sleeping with her, and find her the most beautiful woman I've ever know... but, she's one hell of an assistant, with a very good eye. She often anticipates my instructions for whatever model we are working with, and can translate for me when my words fail. Despite years of learning, 'model' is an ephemeral language, constantly changing. Sometimes, I was in need of an update. She took care of that quite nicely, being current on the lexicon. \n\nShe also learned quickly. I had gifted her with a decent, high resolution DSLR, and told her to use it. She would learn the way I did, by shooting lots of pictures, and getting corrected. Of course, I learned on film, so it was a longer and more expensive process. For her, it became part of our bedtime ritual. She would cuddle up beside me, and we would go through whatever she shot that day. I would offer tips to make the images more pleasing. Believe me, at first there were plenty of those, but she got better with astounding speed. Before long, my suggestions were purely artistic. \n\n***\n\nWe were in day one of a shoot for Didi. I was just watching, anonymously to all but one person on the set. The photographer running things was some guy I'd never heard of, a shorter, younger guy who supposedly was a genius, according to him. He had an English accent and a bad attitude. \n\nI was standing aside, watching him set up, yelling at his assistants, and generally being an asshole. For a genius, and an English speaker, he seemed to have a lot of difficulty communicating his intent and instructions. I just met him, and already I didn't like him. A voice behind me made me turn. \n\n\"Ken Winslow? What are you doing here?\" Apparently, two people on set knew me. It was the client, and I had done work for her, and with her, in the past. Her name was Becky Nightly, a name I always found funny. Sounded like a porn star. She was pretty, and blonde, and well constructed. It was only her petite stature that had scuttled her career in front of the camera. She had used her contacts, and perhaps her feminine wiles, to get a foot in the design world. Since then, things had taken off, and now her company was growing exponentially. \n\n\"Becky! How are you?\" I laughed, as she hugged me. \n\n\"Just great. I had no idea you were available. If I had, well, you wouldn't be available,\" she said quietly. \"What are you doing here, anyway?\" \n\n\"Just being a supportive partner,\" I answered. She did the math. \n\n\"Really? You and one of the girls?\" she laughed, raising her eyebrows in surprise. \"I thought you had a strict 'no models' policy? I thought that was smart, by the way. Even when it applied to me.\" She winked. \n\nSeveral years ago...over ten, actually...Becky had spent some time in front of my camera. She really was a cutie, and made it known that she would be willing to spread her slender legs and surrender herself for my pleasure. All I had to do was ask. I didn't. \n\nLater, when I had shot one of her earliest catalogues, she was no longer offering. She was demanding. Three hours of passion followed, which she viewed as a tip for doing such a good job on the images. What wasn't clear was how her husband would view it, so we mutually decided it should never happen again, and never be spoken of. I felt guilty for months, but there was no fallout. \n\nThat was then. This is now. \n\n\"Yeah, but she changed my mind,\" I smiled. \n\n\"Hmmmm. Made you an honest man, did she?\" Becky asked. \"Don't tell me which one...let me guess.\" \n\nThe girls were filtering out of wardrobe. Dresses. This catalogue was for dresses. Didi looked yummy in hers. \n\nThe asshole, otherwise known as Ian, chose a petite blonde as his first victim. She was young, and cute...and didn't deserve the treatment he was giving her. He was abusive, and reduced her to tears quickly. \n\n\"Get the fuck out of 'ere! You cow!\" he bellowed. \n\nI glanced at Becky, and she rolled her eyes. \n\nThe scene was repeated. This guy didn't know how to direct his talent, and when the girls didn't somehow just 'know' what he wanted them to do, he freaked out, and got nasty. \n\nI looked over at Didi, who was sitting patiently, waiting her turn. She saw me looking, and smiled. \n\n\"Ah! There she is!\" Becky whispered from beside me. \"That smile made it too easy.\" All the other girls were looking nervous, worried they'd be next, but Didi was confident in herself and her abilities. She wasn't worried about some snotty English prick.  \n\n\"Deirdre Hendricks, huh?\" Becky added. \"Good choice. She's gorgeous. How long?\" \n\n\"Two years,\" I replied, holding up two fingers. \n\n\"Congratulations,\" she smiled, then gasped, \"Uh oh...\" \n\nDidi was walking onto the set, and Ian was eyeing her like a piece of meat. \n\n\"I'll talk to Ian,\" Becky said. I touched her arm and shook my head. \n\n\"He doesn't know what he's up against,\" I grinned. \"Let him learn the hard way.\" We looked back, toward the set, where impending doom, in the form of my tall, busty darling, was waiting to be unleashed. \n\nDidi was wearing stilettos, and towered over the little fuck. He was looking straight at her boobs, and the cleavage the dress revealed. \n\n\"I'm up here,\" she said quietly, \"and if you treat me like you've treated the other girls today, I quit.\" \n\n\"So quit, you fucking whore! You really think I care?\" Didi glanced at me, a wry grin on her face. She let him rant. \"You're just a pretty piece of tits and ass, and there are millions more where you came from! I'm the artist 'ere, you cunt, and I don't need your fucking useless threats! Get out! Who's next?\" \n\nDidi smiled, and crossed her arms. While we watched, the other girls...all six of them...formed up behind her. They looked at Becky. \n\n\"I speak for all of us,\" Didi said steadily, \"when I say, if he's still here in five minutes, we all won't be. We're not telling you your business, but if you want to shoot a catalogue today, you need to use a photographer who treats women with some respect, not as objects.\" \n\nIt was a mutiny, and I loved it. So did Becky, apparently. She looked over at me. \n\n\"Ken, are you committed to the 'supportive partner' role, or are you willing to work?\" she asked. \n\n\"Just say the word,\" I replied. She smiled, and didn't even look away when she said her next line. \n\n\"Okay then...Ian, you're FIRED! GET OUT OF HERE, AND DON'T THINK I WON'T TELL EVERYONE I KNOW WHAT AN ARROGANT, EGOTISTICAL BASTARD YOU ARE!\" \n\nHe started to reply, but knew it was too late, and gave in, walking sullenly off the set. \n\n\"Do you have your gear?\" Becky asked. I shook my head. \"No problem. I'll make some calls and have a full kit here by noon. Until then, I guess we're wrapped.\" She turned to face the models. \"Ladies, I apologize for my choice in photographers. I think you'll find working with Ken much more enjoyable, right Deirdre?\" \n\n\"Right,\" Didi smiled. \"He's the best.\" \n\n\"Okay. Ken, Deirdre, I'd like to talk to you, please. The rest of you...we'll start up again at, oh, call it one o'clock.\"\n\nThe models applauded, and dispersed happily. \n\n\"Ken, I need to know what you need, exactly, then I'd like to take the two of you to lunch. My treat, for ridding me of that asshole,\" she said. \"If you hadn't been here, I'd be fucked right now.\" \n\n***\n\nBecky made her calls, and we jumped in her car, heading for lunch. She drove a nice Mercedes sedan, with all the bells and whistles, and we sat in the back while she drove to the restaurant of her choice. The girls chatted about dresses, and the catalogue, until we parked. \n\nA few minutes later we were seated at a table with a very nice view, in a private corner of the deck. Ocean view. Seafood. Didi at my side. Oh yeah. \n\n\"So, Deirdre...\" Becky began, but Didi interrupted her. \n\n\"Please, call me Didi. I have a feeling we're friends now,\" she laughed. \n\n\"Indeed we are,\" Becky smiled. \"Okay...Didi...Ken tells me you've been together two years now?\" \n\n\"Yes, that's right,\" she smiled back, taking my hand in hers theatrically, with a glance in my direction. \"Two wonderful years.\" \n\n\"Well, what are you waiting for, girl?\" Becky laughed. \"Why no ring?\" \n\n\"We've talked about it,\" Didi grinned. \"On hold until I no longer need my footloose and sexy image.\" She winked. \n\n\"Ah, understood. Well, there's a couple of reasons I wanted to us to have lunch together today. First, of course, I'd like to say thanks for saving my ass, Ken. I'd also like to ask you a favour,\" Becky smiled. \n\n\"Sure, Beck,\" I replied, \"What's up?\" \n\n\"I need you to plan for six shoots a year for us. Set your schedule around our stuff first. We have the four seasonal catalogues, plus swimsuits, and specials. I guess what I'm saying is...I don't want any more situations like we had this morning. I can't take any more chances on unknowns with a flashy portfolio, and no people skills. I know you. Your work is exemplary, you have a great eye, and, if Didi is any indication, you haven't lost your ability to relate to women. If you'll accept, I want to make you our official photographer, for as long as you'd like to be.\" She took a sip of her drink, then added, \"I know I'm asking for special treatment, so I'll sweeten the usual deal for you.\" Oh boy...more money, and a staff job, too? Does it get any better? \n\nShe turned her attention to Didi. \n\n\"And you...well, don't think I'd steal your man without making it worth your while. You come with him. I want you to be our face. It's nice to have a consistent presence from catalogue to catalogue, and we could do a whole lot worse than you, but hardly do better, especially with that smile you seem to save for him,\" she jerked her thumb in my direction. \"And, I thank you for your actions this morning. I spent a few years in front of the camera myself, and never had the guts to stand up like that. What Ian did was wrong. Thank you.\"\n\nBecky sat back with her drink, and let her offer hang in the air. Didi looked at me. She was still holding my hand, and her grip got tighter. A subtle nod. \n\n\"On behalf of both of us, I accept,\" I replied. \n\n\"Great!\" Becky beamed. \"We'll hammer out the details before the shoot is over. For now, I'm starving. Let's eat.\"\n\n***\n\nAfter lunch, which was very delicious, and very expensive, but on my new employers credit card, we drove back to the set. Waiting for us was a big crate, that contained a bunch of camera gear in separate protective cases. Becky knew exactly who to call to rent equipment, and even had a few lenses I didn't ask for. It was Christmas, come early, and I was one happy kid in the candy store. \n\nThe actual camera body was identical to my own, so there was no learning curve. The assistants that Ian had spent the morning berating were back after lunch, and doing a fine job. My 'special assistant / star pupil / lover / lead model' was also there, ready to do her thing on both sides of the camera. We were ready to go. \n\nWe started over, from the top, beginning with the petite blonde that Ian had destroyed this morning. Her name was Connie, and she was obviously still gun shy, visibly nervous. I didn't even need to say anything, as Momma Didi stepped in to talk to her, looking into her eyes, and whispering encouragement. The fear visibly left her, and in a minute she was smiling, and ready to go. Didi patted her on the back, puffed her hair a little, and stepped back over toward me. \n\n\"What did you tell her?\" I asked quietly. \n\n\"I told her you were great in bed, and that all this was keeping me from getting laid, so to suck it up and smile,\" she giggled. I laughed, too. \"No, I just told her to forget about this morning, that she was pretty. I told her you were a great photographer, and that you always treated your models well, and not to worry. Just to listen, and do her best, and that everything would be fine.\" \n\n\"I guess we should add psychologist to your list of attributes,\" I smiled, and kissed her. \"Thanks, baby.\" \n\nWe got started, and Connie did fine. As soon as she relaxed, and realized that I wasn't expecting more than she could give, her smile lit up, and the images practically took themselves. Didi stood by, but her input was limited to demonstrating a few minor pose corrections. \n\nMoving on, each model did their job flawlessly. During a small break while we were waiting for Didi to freshen her makeup, Becky, stepped over for a word. \n\n\"I've been watching. You really are the best. Everyone is happy, and the pictures are great. You can work with anyone. I knew I made the right choice,\" she smiled. Didi walked back in. \"And she makes you even better.\"\n\nOf that, there could be no doubt. Didi made me better in every way, and now it was her turn to strut her stuff. With her dark, sultry looks, expressive eyes, and incredible curves, she made anything look good...and nothing look even better. The dress she was wearing fit her like a glove, showing a few inches of delectable cleavage in the neckline. Catalogues of this type weren't supposed to be as blatantly sexy as ones for lingerie or swimsuits were, but Didi's sexuality was difficult to turn off. She smouldered through the viewfinder at me, and I had to remind her to tone it down a notch. \n\n***\n\nDespite the early difficulties, day one went well, and while we were behind schedule, I felt sure we could make up the lost time. Three days should still be enough. \n\nDidi and I had another brief meeting with Becky before we left, working out some details for our new arrangement. We also made some plans for tomorrow, then drove back to our hotel. \n\nWhen we left in the morning, she was working, and I was just a spectator. Now, as I unlocked the door to our suite, I was on the payroll, too. Even more interesting , our lives had taken a serious turn for the better, as we now knew that both of us would have a steady source of work for the foreseeable future. \n\nApparently, that change was exciting to Didi, because we were barely inside the door before she attacked me. \n\n\"So, here we are again...working together,\" she purred, pressing her body against mine, \"and now we'll get to do it six times a year!\" \n\n\"Really?\" I laughed, \"I was hoping to...do it...six times this week!\" \n\n\"Only six times?\" she giggled, leaning up for a kiss. \"We might nearly get there tonight.\" \n\nShe took my hand and led me over to the bed, where she sat me down on the corner. With that sex kitten look in her eyes, she stepped back, unzipping her warmup jacket, and tossing it aside. Underneath, there was only Deirdre, and Victoria's Secret, offering her breasts for my viewing pleasure. She reached behind, and the bra dropped away, leaving only skin. She shook her shoulders, wagging those magnificent boobs in my face, then pressing them together with her forearms. \n\n\"I couldn't help thinking, all day long, about the last time we worked together like this,\" she purred, leaning over me. \"Our first night together...and our second, third and fourth. God, you just had me head over heels in no time.\" Her lean had become a lay, as she pushed me back, and rested her body atop mine. Her face was inches away. \"I love you, Ken.\" \n\n\"And I love you, honey,\" I smiled, pulling her the rest of the way down for a kiss. We embraced for a few minutes, before she lifted away. \n\n\"Okay, I think we should go get dinner, because if you let me do what I want to do right now, we won't be eating tonight. Thinking about you watching me through the lens all day got me so hot! If I start, I won't be able to stop!\" \n\n\"Well let's go then, so you don't have to restrain yourself any longer than necessary,\" I laughed. \n\n\"Right! I'll get dressed,\" she giggled, and hopped off me, grabbing her bag and racing into the bathroom. \"I'll only be a few.\" \n\nAt the risk of sounding sexist, I had found that when most women said they'd only be 'a few', you could go for lunch before they were ready. Models in particular were famous for that. Didi was different. She actually meant it, and about five minutes later, she stepped back into the room, looking gorgeous...and I mean GORGEOUS. Her hair, her lips, her eyes...beautiful as usual. It was the dress that stopped my heart. \n\n\"My god, honey,\" I gasped. \"Where have you been hiding that?\" \n\n\"Becky gave it to me. She said she thought you'd like it. I'd say, if your open mouth is any indication... she was right!\" She did a slow twirl. A little grin on her lips, she added the kicker. \"And I'm not wearing anything under it.\"\n\nIt reminded me of a type of gown you'd see in a movie about ancient Greece. Soft, flowing, feminine. Low back, draped neckline, bloused to the waist, where a sash drew it tight. Then cascading to the floor. Except those dresses were usually white, and long, whereas this was a silvery material, and cut just above the knee. \n\nWhile I was gawking at her, she put on her black stilettos, and was now waiting for me. \n\n\"You're going to tease me all through dinner, aren't you?\" I breathed. \n\n\"Yup,\" she smiled. She bounced a little on her toes, jiggling her breasts at me. The fabric transferred even though slightest motion, making it obvious. Her nipples poked tiny tents in the silvery field. \"Just providing motivation. As for myself, I don't think I could get much wetter. Any more, and it will start running down my leg.\" \n\n***\n\nWe were fortunate to have a very nice restaurant within easy walking distance. With her arm in mine, we walked casually toward it. With the heels she was wearing, and the bra she wasn't, I watched as every eye that approached us, male and female alike, opened wider to view Didi's bouncy breasts under their veil of silvery concealment. I was just getting the side exposure, and it was making me crazy. The full frontal must have been spectacular. \n\nOnce seated, we took care of the immediate requirements, that being food. With that out of the way, we sat back to relax, and talk. Conversation didn't really happen, though. Didi knew from the look in my eyes that I was distracted. Since she was the distraction, she could hardly complain. ",
        "I sat there, looking at this woman...this goddess...gazing back at me with her expressive, brown eyes. The smile on her lips made me melt. There was no doubt she had me totally under her spell. \n\nI was the luckiest man in the world. I was in love with the most beautiful woman I had ever met, and she only had eyes for me as well. \n\n\"You're staring,\" she smiled. \"Normally, it would make me uncomfortable, but from you, it just makes me all warm and sticky.\" She leaned closer. \"And I do mean sticky.\" When she leaned in to whisper, she rested her breasts on the edge of the table, supposedly by accident, but I knew her well enough to know that nothing was accidental with her. Her smile twisted into a playful grin. \n\n\"I hope you're not planning on eating dessert here,\" she giggled. She didn't need to say any more. An expeditious return to our room was in both our best interests, and she had a special dessert for me, between her thighs. \n\nOur food arrived within minutes, and that stopped us from staring at each other, imagining what we would be doing within the hour, back in our room. We talked, and ate. \n\n\"You know,\" I began, spearing some of my salad, and gesturing with my fork, \"Becky was just about to step in and talk to Ian, before you did your Jimmy Hoffa impression.\" She giggled. \"If she had, maybe we wouldn't have the opportunity to work together again, today, and in the future. I stopped her, because I knew you could take care of yourself, but I didn't figure on the changes the whole thing caused.\"\n\n\"Well then,\" Didi smiled, lifting her glass of wine, \"here's to English assholes, and women who won't be bullied!\" \n\nWe clinked glasses, and drank the toast, before Didi continued. \n\n\"Jimmy Hoffa? Really?\" she laughed. \"Well, I hope you at least find my body.\" \n\nI couldn't resist. She left that curve ball hanging in the strike zone, and I hit it out of the park. \n\n\"Oh, yeah, baby...I find your body...irresistible!\" I smiled. She snorted, nearly choking on her wine, and nodded. \n\n\"Touch\u00e9, and thank you, my darling,\" she said, her eyes sparkling.\n\nThe remainder of the meal passed smoothly, and after the bill was paid, I took her hand to help her up from her seat. She stood, and moved right in to kiss me, dragging my hand up onto her breast momentarily. \n\n\"Mmmmm, let's go,\" she breathed, \"before I jump you right here.\"\n\nAs we walked out through the maze of tables, I took advantage of my trailing position, caressing her bare back, cupping the firm curves of her ass, and even slipping a hand inside her dress from behind, to fondle her breast briefly. By the time we reached the door, she was breathing hard, and looking a little flushed. \n\n\"If you don't stop that, I can't be held responsible for getting us arrested,\" she gasped, grabbing my hand to control it. \"Just behave yourself for three minutes, then I'm all yours.\" \n\nThree minutes? Okay...I can wait three minutes. I glanced at my watch. \n\nOne minute later, we were still on the street. A minute after that, we were just outside the hotel revolving door. \n\n\"Sixty seconds,\" I whispered, as we shuffled around the spinning portal together. \n\n\"Ooooo!\" she giggled, racing toward the elevator as fast as her heels would allow. She hit the button, and tapped her foot. \"Come on!\" \n\nThe door opened, and we stepped in, thankfully alone, as I counted down the last few seconds. \n\n\"Four, three, two, one...time's up!\" I smiled, taking three steps across the elevator toward her. She peered at me through hooded lids, more than ready for action. Our lips met, and she hooked one long leg around my hip, holding me tight against her. My left hand cupped her ass...her bare ass...and my fingers dipped gently into her dripping cleft. \n\n\"Ohhhhhhhhhhhhhhh, shiiiiiit,\" she moaned, leaning back against the wall. The door opened, and almost closed again before we could make our exit, walking quickly down the hall. \n\nI had to search for the key card, and Didi was impatient, undoing the sash that wrapped her waist. She reached behind her neck, and unhooked the catch there, allowing the dress to slide down her body like a silver avalanche. It landed on the floor around her ankles, and she stood naked in the hall, as I finally found the key and my wits. The door opened, I held it wide for her, and watched in awe as my sexy lady paraded in. \n\n\"Darling...get my dress, will you? Please?\" she smiled, as I gawked, immobile. She still had that effect on me, and knew it. I doubted it would ever change. \n\nI scooped up the donut of fabric, and quickly followed, finding her already laying back on the bed, gently fingering herself. \n\n\"Do you want your dessert?\" she purred, spreading her legs wider. I could see how wet she was from ten feet away, and smell her arousal one step closer. \n\n\"Fucking right!\" I grunted, and mashed my face into her gaping cunt, spearing her deep with my tongue. \n\n\"Oh yes, baby,\" she moaned. \"Eat me. Eat my juicy pussy. Suck my clit. Make me cum, like a bad girl.\" \n\nI was on my knees beside the bed, with her smooth thighs draped over my shoulders, and my face buried in her dripping snatch. My tongue did laps of her engorged lips, with frequent pit stops to torture her clit with more stimulation. If it was possible for her to get wetter, I wouldn't believe it, as a slick of her slippery, delicious honey had spread down her thighs, and up my cheeks. I felt like a fat kid in a pie eating contest, and couldn't get enough. If only I could breathe through my ears, I'd never have to come up. \n\nI grabbed her hard little clit gently with my teeth, then flicked it with my tongue again. Her moans of joy instantly became screams, and she had a huge orgasm, gushing more sweet fluids into my ravenous mouth. I didn't even slow down. Dessert had always been my favourite part of any meal, ever since I was a kid. Growing up hadn't changed that, only given me more choices on the menu. Didi's pussy was tied at the top of the list, with creme br\u00fbl\u00e9e. \n\nHmmm...Perhaps someday, we'll try eating creme br\u00fbl\u00e9e from her pussy... \n\nDidi had a second orgasm, nearly as big as the first. She was now using the pillow to muffle her shrieks, with a corner of it in her mouth. Maybe one more...\n\nI decided to go for the big finish. Since there was no shortage of lubricating juices in the area, and slicked up my middle finger, and began to play with her tight little anus, while continuing to suck her pussy eagerly. \n\nDidi stopped screaming. A gasp, then expectant silence, as she awaited my next move. I wiggled my fingertip in, prying her tight sphincter open. I didn't do this often, but when I did, she loved it. Today was no different. \n\nAs my finger eased into her ass, passing the first knuckle, her legs quivered more sharply, and she groaned. When I was two knuckles deep, the quivers became shudders, wracking her whole body. I nipped her clit once more. Touchdown! \n\nShe arched her back, and screeched into the pillow. Her thighs clamped around my head, and I wriggled my finger deep inside her ass as she clenched, trying to break the intruder off. It's a good thing I took a breath before I tweaked her clit, because air was no longer available. She bucked, and twisted, cumming as big as I'd ever seen her cum. The orgasm wracked her for about thirty seconds, and she just melted in the aftermath. \n\n\"No...more...please...god...no...more...\" she panted. \"Finger...out... now.\" \n\nI extracted my finger, watching her ass remain open for a second after, before closing again. I crawled up to lay beside her, and smiled at her. Her eyes were fuzzy, trying to focus on me, and failing. \n\n\"Bastard. Is that any way to treat the woman you love?\" she breathed. \"Why would you try to kill me?\" \n\n\"Not my intent,\" I laughed, \"and you know you loved it. You can protest all you want, but I know you.\" \n\n\"You're right,\" she giggled, rubbing her face. \"I'm an orgasm addict! My name is Deirdre Hendricks, and I am addicted to the orgasms my boyfriend gives me.\"\n\n\"How would you feel about changing your name to Hendricks-Winslow?\" I asked. \n\nIt just came out. I was more than ready. We had discussed it extensively, and decided we would get married when she was done with her career, but now things had changed. She was guaranteed six jobs a year, by someone who knew her situation. Maybe the time was right to make the transition. \n\nDidi rolled slowly onto her side, facing me. Her hair fell across her face, but one eye studied me through a gap in the brunette curtain. There was a long pause, while she considered her response. She was a very intelligent woman. I wasn't foolish enough to think I knew something she didn't, so I knew she had been having the same thoughts. If I hadn't just temporarily rendered her incapable of thinking, by way of orgasms, she might have beaten me to it. \n\nShe brushed her hair aside, now looking at me with both eyes, and fully regained faculties. A smile grew wider by the second across her pretty mouth. \n\n\"Tell me, Mr. Winslow...do you always soften your women up with mind-blowing orgasms before proposing?\" she giggled. Her breasts were stacked atop each other in this position, and the giggle shook them enticingly. \n\n\"Why, yes, Miss Hendricks. I do. I've found it improves my odds of acceptance,\" I smiled. \"Do you always receive marriage proposals in the nude?\" \n\n\"Yes,\" she laughed, \"I've found it improves my odds of being asked!\"\n\n\"Well, you've been asked,\" I said softly. \"Do you have an answer?\" \n\nDidi nodded, and rolled up onto my chest, resting her big breasts on me, and smiling down into my eyes. I waited, caressing her smooth, bare behind. \n\n\"The answer is 'yes',\" she whispered, and kissed me passionately. \n\n***\n\nThe next morning, we woke in each other's arms, as we often did, but this was different. The decision had been made. \n\nIt had been an energetic, raucous evening in our bed. We had made love three times, in several positions, and she had drained my balls each session. I gave up counting how often Didi came. We were both pretty much exhausted. \n\nHow is it that a woman can cum a dozen times, and look better than ever, but a man cums three times, and looks like a drunken monkey in the morning? If there is a God, she must have a sense of humour. \n\nI let Didi have the shower first, while I tried to gather enough energy and coordination to stand. She was singing under the warm water. I guess she was happy. She was almost done by the time I joined her in the bathroom. \n\n\"Someone's in a good mood,\" I laughed, emptying my bladder. She turned off the water. \n\n\"And why shouldn't I be?\" she smiled, wrapping herself in a towel, and kissing me. \"I have the best 'husband' in the world, and the greatest life ever,\" she giggled, doing air quotes around my part of the sentence. \n\n\"I assume you have a time frame in mind?\" I asked. Stupid question. \n\n\"We're done here tomorrow, on Thurday. I can wait until Friday,\" she stated. \"I think we should invite Becky to come with us. She made it possible.\" \n\nSee? I told you...Stupid question. She had given it considerable thought. \n\n\"With us? Vegas?\" I laughed. \n\n\"Quickest way I know to get hitched,\" she nodded, as I turned on the water. I ran it cold, to clear my head. \n\n\"You're in charge. Just tell me where and when.\" \n\nA hearty breakfast and three cups of coffee finally got me going, and we made it to the set, only ten minutes late. Didi went straight into wardrobe and makeup, while I checked in with Becky, who was sitting in the sun, reading emails on her phone. She looked up as I approached, and laughed. \n\n\"Jeez, Ken...you look like hell! Didi wear you out last night?\" she asked. \n\n\"I'm not too proud to admit it,\" I smiled, taking the seat next to her. \"Yes. She fucked my brains out. Happens every time I propose to her.\" \n\nWell, it was true. The first time, when I really proposed, and she said 'yes, but let's wait', she had nearly killed me. This time was relatively mild by comparison. \n\nBecky smiled brightly. \n\n\"Does that mean that congratulations are in order?\" she asked. I nodded, and smiled. \"Oh Ken, I'm so happy for both of you!\" she gushed, standing up and opening her arms for a hug. I struggled to my feet, and she grabbed me tight. Her head barely reached my shoulder, but she was in control of the embrace, kissing the side of my neck. \n\n\"Didi wants you to come with us. We're going straight to Vegas after we're done here tomorrow. The plan is a Friday wedding. We'd love you to be there,\" I said, hoping I hadn't just rained on Didi's parade. \n\n\"I'm not sure,\" Becky replied, frowning. \"Let me try to move some things around. I might be able to.\"\n\nThe rest of the day went well. Since everyone was getting along, and having fun, the work went quickly, and we made up some lost time. We would easily be able to finish on time. The only bad news came at the end of the day. \n\nDidi was walking out of wardrobe, dressed in her casual, street clothes, and trying not to look gorgeous, when Becky approached us. \n\n\"I'm afraid I have unfortunate news,\" she said, sadly. \"I won't be able to join you in Las Vegas, for your wedding ceremony. I have to be in New York, and I wasn't able to reschedule the meetings there. I hope you understand.\"\n\n\"Of course, Beck,\" Didi said, hugging our friend. \"We didn't exactly give you much notice, did we? We'll miss you, though.\" \n\n\"I may not be there in person,\" Becky smiled, \"but I really like it if you wore one of my dresses. My treat. Any one you want.\"\n\n\"Thank you so much!\" Didi gasped, then looked at me. \"Maybe we should let Ken pick the dress, though. He knows what he likes, and he's got good taste.\" \n\n\"Okay Ken,\" Becky laughed, turning to me. \"I suppose it's any one you want. Have any ideas?\" \n\nI didn't know I would be choosing my future wife's wedding dress today, so I was slightly unprepared. I shook my head, and shrugged. \n\n\"Not really. I guess we'll be trying on dresses tonight, right?\"\n\n\"I guess so,\" Didi said quietly. We said out goodbyes to Becky for the night, and stood alone in the studio. \"No time like the present.\" \n\nDidi took my hand and led me into the wardrobe area, while I made a call to the security guard. There was nearly one hundred thousand dollars, of dresses in the studio, plus the camera gear. It was logical for Becky to hire someone to babysit everything for the entire night. I told him we were going to be here until 9, at least, so he didn't need to come in until then. He gets paid the same anyway, so he was fine with it. \n\nI usually didn't venture into this section of any shoot. This was the model's home turf. She knew what we were up against. I didn't. \n\nThere were racks of dresses hanging along the far wall. I guessed about twenty per rack, and at least twenty racks. \n\n\"Oh shit, it's going to be a long night,\" I moaned, imagining her trying on 400 dresses. \n\n\"Relax, my love,\" she giggled, sitting me down in a chair. \"First they're not all my size, and second, we can narrow it down before we get to the try on stage. I think we can eliminate the floor length gowns, and most of the club or cocktail dresses right away.\"\n\n\"I agree with the gowns, but do we have to dump the club dresses,\" I grinned. \n\n\"Nice try,\" she laughed. \"I know why you want to keep the club dresses on the table. I'd love to wear them for you baby, but not on my wedding day. Okay?\"\n\nHmmm. She had a point. Those dresses would be more appropriate for the strippers at a bachelor party, than for a bride at her wedding...even in Vegas. Skin tight, with a hem that hardly reached six inches below pussy level, and with a neckline that showed more breast than most women had to show, I would like to see her in one, just to say I had. I was sure she would spill out the top, and I liked that idea. \n\nI pouted, and she relented, picking up a little red number off the closest rack, and stepping behind the screen. I don't know if it was force of habit, or if she wanted to effect of the dress to hit me all at once. Either way, I waited patiently for the reveal. \n\n\"Honey, I don't think this will work. I'd get arrested before we made it down the aisle,\" she giggled, and stepped out. \n\nYowza! Holy shit! and Boing! My eyes nearly popped out, and in case you forgot, I've seen her naked. Hundreds of times. \n\nShe was right. Go straight to jail...do not pass Go...do not collect $200, unless you're a hooker. The shiny red fabric stretched tight across her butt, but barely covered it. Up front, her big, perfect, incredibly sexy breasts were on full display, with her areolas nearly visible. \n\n\"Okay...not for the wedding, but I'd love it for my birthday!\" I gasped. She laughed, wagged her finger at me, and went back to the rack to choose another dress. She kept the red one on while we eliminated hundreds of others, whittling it down to about ten or twelve. She was having a hard time keeping her boobs contained, and I was having a hard time concentrating on anything else. She saw my dilemma, and decided to take control. \n\nI was sitting in the makeup chair, and she looked at me with a smile that told me we were taking a break from dress shopping. \n\n\"So, you like this one, huh?\" she asked, transforming before my eyes into my sweet sex kitten. She shook her head, and tousled her hair with both hands, as she stepped closer. Her hips swung like a catwalk model, and her magnificent breasts jiggled, until she stopped right in front of me. \"I like it, too. It makes me hot, although, I think if I was going to wear it out in public, I'd need a little double-stick tape to keep the girls under cover.\" \n\nShe put her hands on the arms of my chair and leaned forward, letting her big, heavy tits push out through the wide neckline. \n\n\"Oops!\" she giggled. \"It's a good thing I'm not out in public, isn't it?\" \n\n\"Mmmmm, yes,\" I breathed, licking my lips unconsciously. She leaned closer, until her breasts stopped an inch from my face. \"If you were out in public, this could be quite embarrassing,\" I smiled, and opened my mouth, collecting her left nipple. \n\n\"Embarrassing...yes,\" she purred, as her hand moved from the arm of the chair to my crotch. She caressed my hard bulge. Her gentle touch made me even harder. I suckled her happily, and she moaned softly. \n\nHer hand went from caressing, to undressing, as she deftly freed my erection from my pants. She stroked me gently, and pulled away from my lips. Her nipple stretched until it popped free, trailing my saliva. I might have been disappointed, if I didn't know what she was going to do. \n\nDidi knelt in front of me. She smiled, and took my hard tool into her mouth, sliding her lips further and further down the shaft, until it touched the back of her throat. She shifted, and I felt her swallow, guiding it down deeper, until her nose touched my pubes. Constant practice had allowed her to become my own personal deep throat queen, and I was her forever loyal subject. Her head bobbed in my lap for a minute of so, ensuring that I was fully hard, and well lubed. Then she lifted off. \n\n\"I'd better take this off,\" she smiled, slipping out of the dress, \"before we make a mess on it, and have to buy it.\" \n\n\"Yes, it would be a shame to be forced to buy that...sexy, little...dress. Having to wear it for me. Terrible shame,\" I replied. \n\nShe was back now, and naked. She straddled my lap, and lowered her juicy vagina over my cock slowly. The sensation was delicious, as always. Once she was fully impaled, her arms went loosely around my neck, and she stared into my eyes. \n\n\"I'm never going to get tired of you,\" she whispered. \"You're my perfect man, and I'm so glad we're together, now and forever.\" She flexed the muscular sheath of her pussy around my shaft, and kissed me, while undulating her hips. \"Mmmmm, and this cock inside me...I'll never tire of this, either.\" ",
        "She began to lightly bounce herself on my cock, moaning softly as she did. I had both hands on her firm, muscular ass, and my eyes wandered down to watch her boobs bobbling on her chest in response to her motions. \n\nDidi's breathing grew more ragged, as her pace and energy picked up. She was truly fucking herself, slamming her hips down over my cock, and punishing her clit against the base of my hard shaft. I was transfixed by her flying hair, wild eyed lust, and the flush that was growing across her chest and neck. She was going to cum. Perhaps I could help? \n\nI abandoned my grip on her ass, and corralled those big, bouncy tits, guiding them to my lips. I fluttered my tongue across the tall, stiff nipples. Then I latched on, and sucked hard. \n\n\"Fuck! That's it, baby! Suck my tits!\" she gasped, fucking harder. \"Make me cum, honey...oh yes, that's it...gonna cum...gonna cum... nnngahhhhhnaaa... cum...ming... cuuuuuummMMMMMING!\" she shrieked, bucking wildly in the saddle. She tossed her head back and groaned, then collapsed against my chest, breathing heavily. \"Oh shit, oh shit, oh shit...\" \n\nI held her, letting her recover for a minute or so, until she lifted her head off my shoulder and looked at me dreamily. \n\n\"Okay baby...your turn,\" she smiled, climbing off. I stood, and she knelt on the chair, hanging her boobs over the back. I pushed my pants down, and stepped out of them, then took my place behind her, and slipped my cock back in smoothly, gripping her hips. Watching her bring herself to orgasm while sitting there had wound me up a bit, so I was eager to become an active participant. I started to drill her hard. \n\nThe studio is essentially a big open space, unfurnished and unfinished, so it has the acoustics of an empty concrete box. Everything echoes, and right now, what was echoing was the sound of frenzied fucking. Slapping flesh. Moans of bliss. Whispered words of encouragement and gratitude. \n\n\"Ooof...ooof...ooof...ooof...\" Didi gasped between strokes as I pounded into her from behind. She was hanging onto the chair for dear life, looking into my eyes, reflected in the makeup mirror. I was looking back into hers, most of the time, but I admit that her breasts, swinging wildly and slapping together, had my attention divided somewhat. \n\nI felt her pussy ripple around my dick, and knew she was cumming again. Her eyes screwed shut, and she grunted, mouth agape. I kept slamming my cock deep into her juicy cunt without pause. Once her spasms passed, her eyes opened again, finding mine in the mirror. \n\n\"Cum for me baby,\" she smiled, reading my expression correctly. \n\n\"Where?\" I grunted, getting close. She answered by wagging her tongue at me in the mirror. \"Get ready... Now.\" \n\nI pulled out, and she pivoted on her hip to sit on the chair just in time. Her mouth was open, and my cock was moving forward to plug into the gap, when the first spurt leapt out. Fortunately, my aim was pretty good, and my cum went right down the hatch, except for a few drips on her chin. By the time my second shot was fired, it was safely inside her mouth, and she gulped it down happily. My balls twitched over and over, pumping a hot load of jizz down her throat. \n\nDidi sucked me clean, and released me. My wobbly legs managed to direct me into the second chair, and I sat, watching her clean my renegade semen from her lips. She smiled. \n\n\"Okay,\" she laughed, \"I think we've established that the red dress, while sexy and quite fun, is not appropriate for our wedding. Our honeymoon? Certainly, but not the ceremony.\" \n\n\"Whatever you say, honey,\" I breathed. \n\n***\n\nWe had reduced the list of possibilities to three, by the time the security guard arrived. Didi was just stepping out from behind the screen, wearing a tight little black number, when he walked in. He wasn't accustomed to seeing a woman's body inside the dresses he guarded at night, let alone a woman with Didi's curves. He whistled. \n\n\"Thank you, Ed,\" she giggled, checking herself in the mirror, then spinning for me. \"Do you concur, baby?\" \n\n\"I do,\" I nodded. \"I think we have a winner!\" \n\n\"Oh thank God!\" she exhaled. \"I never thought I'd say this, but I'm sick of trying on dresses. Let me mark this one down, get changed, and we'll get out of here. I'm starving!\" \n\n***\n\nThe next morning, we were back on set early, talking to Becky. She thought our choice of dress was very nice. Didi would be wearing it later in the day, and our first wedding photos would be printed for international distribution in the catalogue. \n\nWe had worked out all the details of our new arrangement with Nightly Apparel, and everyone involved was very happy. Becky told us that after the first half day fiasco, this had been the smoothest shoot she had ever attended. I was being very well paid, so I had nothing to complain about. Didi, as the new face of the company, was going to be on another cover, which meant she would be busy, and that made her ecstatic. It was a win-win-win scenario. \n\nWe had our flight booked for that evening, a short hop to Las Vegas. A room at the Bellagio awaited, overlooking the fountains and the Strip. In lieu of her attendance, Becky had called ahead, reserving and arranging a post ceremony dinner for us, as a wedding gift. \n\nWith all of 'those' details dealt with, all that stood between us and our wedding was this last day of the catalogue shoot. The last day of shooting typically falls into one of two categories ; a day of hell, or a day of fun. Since everyone was happy, and relaxed, and getting along so well, I didn't anticipate any trouble getting things wrapped up.\n\nI'd been through a few hell days in my experience, when everyone is tired, nerves are frayed, and the cumulative effects result in arguments, tantrums, and generally difficult conditions. \n\nFive minutes in, I knew we were not going to have one of those days, as the two girls in this shot playfully pouted and posed in a flirtatious manner. I took the images anyway. Even if they didn't make the catalogue, they would be good for a laugh. \n\nThe rest of the day was a whirlwind of giggles. The ladies were pretty loose, and were messing with each other constantly, peeking down each other's tops, lifting skirts, and playing jokes on one another. \n\nIn one set, Connie and Didi were posed next to each other. I had taken the first frame, when Didi gave the little blonde a goose with her left hand, which was behind Connie's back. The look on Connie's face, captured in the second, third and fourth frames, was classic. She responded by returning the favour, and the war was on. \n\nI looked over at Becky, who was nearly pissing herself with laughter, and she just shrugged, waving it off. Not every picture needed a serious expression on the model's face, and a playful air was a benefit. We certainly had that covered, as hands grabbed asses, groped boobs, and tickled various body parts frequently. Why couldn't it be like this all the time? \n\nWe saved the shots of Didi in 'our' dress until last. When she walked out with it on, everyone applauded. I guess they had been talking, and the other models knew what was going on. \n\nThe dress was long sleeved, and extended to her knees. It was made of a stretchy, faux leather material, with a subtle swirl pattern hidden in the black tone. It fit her lower half snugly, hugging her hips and thighs. A short slit on the back made walking easier, and provided a teasing view of her inner thighs from behind. Up top, a short collar led into long lapels that framed the deep, open neckline, ending a few inches below her breasts, and wrapping around in both directions to cinch her narrow waist tightly. Her cleavage was on full display, and the effect was devastating. She looked incredible, and the smile on her face...that of a bride...made her even more attractive. \n\nBecky was standing beside me, and turned to face me. \n\n\"Ken, you're a very lucky man. She's so beautiful...but I'm sure you've noticed,\" she smiled. \n\n\"Once or twice,\" I laughed, \"and thank you again for that dress.\"\n\n\"Don't thank me,\" she replied. \"It's not the dress that makes her look so good. Rather, Didi makes that dress look better. I think we might have our cover, right here. She's going to sell a lot of those.\"\n\nShe was probably right. I had my eye in the viewfinder, as Didi did her thing, posing, turning, and showing off her body and the dress for the camera. The flash popped, over and over, capturing her beauty and radiance for posterity. \n\nThere was nothing left to do. We had enough images for two catalogues, let alone one, and I couldn't think of anything we needed to improve on. \n\n\"I think we're done,\" I smiled, turning to Becky. \"Are you happy?\" \n\n\"Oh, I passed 'happy' hours ago,\" she giggled. She turned to the assembled gaggle of crew, hair dressers, makeup artists, and models. \"That's a wrap!\" she said, clapping her hands. \n\nWe did have a few pictures still to take. Didi gathered her fellow models around her, for one, then added Becky for another. Before long everyone was out there, in a big group hug for the camera. The last one included myself, as I tripped the shutter with a wireless remote. \n\n***\n\nWe soon found ourselves standing by the fountains at the Bellagio. \n\nThe flight, ride from the airport, and check in had gone smoothly. After we dropped our bags in the room, we had decided to go for a walk along the Strip. Arm in arm, we strolled a couple of blocks north, for no reason, just enjoying each other's company. \n\nIt's pretty hard to walk along with a beautiful woman on your arm, and not catch some attentive looks. Make that beautiful woman a model, with curves on curves, made for lingerie and bikinis, and even in Vegas, you stand out. Didi felt the eyes on us, and smiled at me softly. \n\n\"Let's head back,\" she giggled. \"All this attention is getting to me...if you catch my drift.\"\n\nSo that's how we wound up leaning against the cast concrete railing that surrounds the lagoon, watching the fountains arch skyward with a few thousand other people. It was dark, and despite the crowd close around us, we were behaving badly. \n\nDidi was up against the rail, and I was behind her, pressed tight into her firm ass. I was hugging her, and nuzzling her neck, but the crowd wasn't watching us, so they couldn't see that I also had two handfuls of her full, soft breasts. Her right arm rested over my fondling hands, but her left hand was returning my attention, caressing my crotch surreptitiously between us. The clich\u00e9 'ooo' s and 'ahhh' s of the crowd hid our own moans of delight, which had nothing to do with the show. \n\nMy bride grew bolder, no longer merely caressing my cock. I didn't even realized she had unzipped me until I felt her warm hand directly on my hard shaft, then cool night air, as she pulled it out. \n\n\"Darling?\" I whispered in her ear, \"You're being very naughty.\" She turned her head more, and whispered back. \n\n\"If I could figure out a way to get it up my pussy right now, I'd show you naughty! Fuck, I'm so horny!\" \n\nSo, we waited for the show to end, while I groped her breasts eagerly, and she stroked my dick behind her back. I did ask her to slow down a few times, lest I make a mess on the back of her skirt. \n\nWhen the show ended, we were faced with the dilemma of putting me back in my pants. Surprisingly, Didi accomplished it without much difficulty, and without looking. Maybe the female ability to unhook a bra behind the back had something to do with it. However she did, I had only minor adjustments to make for comfort. \n\nShe wasted no time, dragging me by the hand through the thinning crowd, and up the walkway to the front doors of the hotel. Into the elevator, with several others, she turned in my arms and kissed me passionately, despite the audience. By the time we reached our floor, we were the only ones left, and she was moaning loudly as my hands roamed her body. \n\nDidi was shedding clothes as we walked down the hallway...again. It was becoming a habit, but she was wearing more this time than she was a few days ago, and our room was closer to the elevator, so she was still semi clothed when we reached the door. I had the card ready, and opened the door quickly, allowing her to strut right in. \n\n'Semi clothed' lasted only a few seconds once the door was closed, and she turned her attention to me immediately. She pinned me to the wall with a scalding hot kiss, while both hands ripped my pants open. Once my erection was free, the kiss ended abruptly, and she dropped to her knees. \n\nOn this, her last night as an unmarried woman, Didi gave me a mind numbing, knee quaking, gut wrenching blowjob, that ended with me exploding down her throat. Then she sucked me back to full hardness, and went to stand in front of the window. \n\n\"Come on, honey,\" she growled, \"Fuck me with that cock...right here, right now!\"\n\nMy sexy lady was demonstrating her exhibitionist side, pressing her stark naked body against the glass. Truthfully, it's highly unlikely anyone would, or even could, see her, as we didn't have any lights on, other than the one by the entry door. Having said that, there was still something exciting about having sex where you could be seen, no matter how unlikely. Having an audience of thousands, out on the Strip, and in the surrounding area? That was just crazy hot. \n\nI stripped out of my clothes quickly, and joined her. She turned the chair that sat by the window sideways, put her hands on the back, and bent at the hips, exposing her backside and pussy for use. \n\nWe hadn't had sex for over 24 hours. In between, we had slept, done a full day of work, flown to Vegas, and most recently, felt each other up in the middle of a tightly packed crowd. She was ultra hot, and despite her oral attention of a few minutes ago, I was pretty eager to probe her pussy as well. \n\nAs I stepped behind her, I felt her hand reach back, between her legs, and grasp my dick, guiding it home. I would normally have spent some time applying my tongue to her vestibule, but she had made it abundantly clear that if I made her wait one more second, she would lose her mind. She was more than just damp. When I pushed inside her, excess juices oozed out, dripping down my balls. \n\n\"Oooooooooo, that's better,\" she gasped, wiggling her hips under my hands. \n\nAs wound up as we were, it was a given that this would not be a gentle, caring session. The only thing that mattered was getting to fuck my almost bride to as many orgasms as I could before I crashed. With that in mind, and with a firm grip on her hips, I skewered her hard, with long, deep strokes that ended with a sharp crack of flesh meeting flesh. \n\n\"Oh!...Yes!...Fuck!...Me!...Ba-by!\" she screamed, in cadence to my slamming hips. I increased my pace, thrashing her harder still, and nearly knocking her over. \n\nShe lurched forward, losing her grip on the chair, and bracing herself against the small table that rested beside it. Her hand brushed against the metal base of the lamp on the table. It was one of those 'touch switch' lamps, triggered by human contact\n\nSuddenly, we were bathed in light. No longer merely backlit, we would be visible from below. Only distance would allow us to maintain anonymity. \n\nMaybe it's my background as a photographer, but I knew we were far enough away to be nothing more than two figures in a square of light, amid hundreds of other squares of light. Two figures having sex, but still...just two figures. \n\nI remember when I was younger, sitting along a river, with my camera on a tripod. I had a monster telephoto lens...borrowed, as it cost more than my annual income...trained on the trees across the river, where one of several bald eagles was picking at a spawned out salmon. Only 1200 mm of lens allowed me to see the scene, bringing things 24 times closer...yet people stepped up onto the berm behind me, to capture the view, and supposedly the birds, with tiny pocket cameras. I knew the tricks human vision could play, as focus trumped perception. \n\nKnowing this...that we felt like we were on public display, even though we were likely still invisible...I pushed Didi's buttons. If she found sex in public exciting, she was going to love this. \n\n\"They can see us now, baby,\" I said. \"They're watching you get fucked!\" \n\n\"Oh god yes!\" she gasped. That bit of mental stimulation pushed her to the precipice of orgasm. \n\n\"There's thousands of people down there,\" I continued, still pounding her hard. \"Thousands...women who wish they were you, and men who wish they were me...fucking your hot, juicy cunt.\"\n\nDidi moaned, and shuddered hard in my embrace, cumming all over my cock. She raised up, letting me wrap an arm around her waist, and turn her, face on, to the window. She braced herself against the glass, arms high and wide, while I drilled into her, pushing her flat into the pane. Her breasts were squashed against the window. Like fucking in a glass shower stall, but with a huge audience, I fucked her, making those big boobs bounce. \n\n\"Yeah, they're watching you, honey...watching me treat you like a cheap hooker...\" \n\nShe interrupted my dialogue with a scream. \n\n\"Fuck, yes! I'm your slut, baby! Doooooooo meeeeeee!\" she shrieked, gushing yet again. \n\n\"Think of them, watching your big, beautiful tits shake while I fuck your brains out. They all want your body.\" \n\n\"Mmmnaaaaaa! NO! They can't have me...only you!\" she shook her head, cumming again. Or still. It was getting difficult to tell. \n\nThat response turned the tables on me. It was true. From tomorrow on, assuming we were faithful, I could look forward to bedding this beautiful, sexy, lusty creature every day, and wouldn't have to share her with anyone. That thought excited me greatly. Too greatly. \n\nI gave her a few more furious thrusts, and pulled out. Didi sensed the impending surge, and dropped to her knees. She was turning to swallow my cock, when it went off. \n\nThe first impressive squirt ricocheted off her cheek, painting the window with a Rorschachian blot of goo. The following few hit her square in the face, splashing into her hair, and dripping off her chin to decorate her breasts. With the mess already made, she just sat back, and let me pump the remainder out across her perfect, pouty lips. She said she was my slut. Now she looked the part. \n\nI sat heavily in the chair, catching my breath, and watching her lick herself clean. She turned to the goop, oozing down the glass. \n\n\"Maybe we should leave that one,\" she giggled. \"Just so housekeeping knows we had fun.\" \n\nMy slut. I loved her. Such a deliciously evil mind. \n\n***\n\nFriday...our wedding day... Didi was enjoying some time in the spa, while I made a quick shopping trip within the hotel. \n\nBack when I first proposed, I was prepared. I bought a very nice ring, and did it right. But, this time, that ring was still sitting in my drawer at home. I needed a stand in, so I hit the first jewelry store in the piazza. A simple gold band would do, and that's what I found. I was back in the room before Didi returned from her massage. \n\nRemember back when I said she was in charge of the wedding? Well she was, and she had done everything in advance that could be done, including applying for our marriage license online. All we had to do was pick it up, a short taxi ride away. While we were out, we had some lunch, then came back to the hotel to kill a few hours around the pool. \n\nIn case you've forgotten, Didi is a professional swimsuit model, so putting her in a bikini like the red one she had on was sure to attract attention. We were sitting together in a double lounge, holding hands, but that didn't stop several men from openly leering at her, and a couple even sat down to chat her up, as though I wasn't even there. She politely told them 'no', and we laughed together at the brazen ego of those who so boldly approached her. I guess I couldn't really blame them. She was gorgeous, and I had done the same in the bar our first night. ",
        "When she went for a dip to cool off, and I wasn't in the pool with her, things got a little dicey. Virtually as soon as she hit the water, a herd of men started hitting on her. I watched her closely, ready to step in if needed, but her eye contact told me she had the situation under control. She wasn't having any of their bullshit, and when she wanted away from them, she just left. As she stepped out of the water, her nipples stood up tall. The water wasn't that cold, so I assume she was enjoying the attention. \n\n***\n\nUpstairs, I dressed, and waited for her, looking out the window over the fountain lagoon. We had cleaned my spunk off the glass, deciding that leaving it would be unfair to the maid. I heard a noise behind me, and turned. \n\nThere she was, my bride wearing 'the dress', and looking ravishing. I checked my pocket for the ring I had bought, while Didi picked up her purse, and we walked arm in arm out, down the hall, and into the elevator. \n\nA taxi took us the four blocks to the chapel, where we were to exchange vows. \n\nDidi giggled when I dug the ring out of my pocket during the ceremony, and slipped it on her finger. The reason became obvious when she retrieved a similar band from under the cinch of her dress, and did the same to me. She had gone shopping too. With the power vested in him by the state of Nevada, \"Cher\", or at least a transvestite version of her, pronounced us Man and Wife. It was done. \n\nThe sun had set, and we decided to walk back toward our hotel. Becky's dinner arrangements were on the way anyway, and we had time. We were no longer two. We were 'us', and it felt wonderful. Our slow stroll took a detour, into the casino that held the restaurant where we would be eating. \n\nAs we passed through, Didi smiled and led me by the hand over to the nearest roulette table. She dug into her purse, and came out with two, one hundred dollar bills, handing one to me. \n\n\"You pick a number, and I'll pick a number,\" she giggled. \"Kiss for luck?\" \n\nI kissed her and we placed our bets. The odds in roulette are brutal, 35:1, so I wasn't holding my breath, but it was just for fun. Sure enough, my number was a dud...but Didi won! As if I needed more proof I was lucky to have her, she just made us $3400 profit. I guess we'd be shopping tomorrow. \n\nWe were still laughing like hyenas when we walked into the restaurant, and were directed to a small private dining area. Our personal server, Vanessa, was a buxom blonde with a bubbly personality. Becky had taken care of everything, so Vanessa waited on us hand and foot. It was a very enjoyable first meal as a married couple. Didi gave Vanessa a hundred dollar tip, from the roulette winnings, congratulatory hugs were exchanged, and we headed back to the Bellagio. \n\nWe made a short stop by the fountains again, just a few minutes of hugging while the show finished. Then we picked our way through the dispersing crowd, and worked our way inside. \n\nWhen we reached our room, Didi stood, looking at me softly, in the hallway outside our door. I knew what she was waiting for. It was very clich\u00e9, but if that's what she wanted, that's what she would get. I scooped her up in my arms, and carried her inside. \n\nThis time, we would be making love. This time would be gentle, caring and languid, taking all night if necessary. This time would be special, not simply because we were married, but because our commitment to each other was tangible. I laid her softly on the bed, but our eyes never left each other's for an instant. I joined her, resting beside her, in her embrace. \n\nNo words needed to be spoken, as we kissed, and caressed each other, our sentiments pouring out with each reverent touch. After several minutes of this soft petting, she turned slowly in my arms, and held her hair aside, silently asking me to unzip her dress. \n\nI did so, nuzzling her neck again as I bared her skin. Once undone, she rolled away from me, and stood to shimmy out of the dress, before dropping her panties. \n\nWhen she rejoined me on the bed, her hands worked at my belt for a moment, then she stopped, looking into my eyes. She rolled aside, and scooted under the covers. The look clearly told me to get naked, and get my ass in bed. \n\nThere were plenty of reasons to do so...physical attributes, enjoyable sensations, that sort of thing...but tonight, emotions were higher on the list. I stripped quickly, and she held the sheet aside for me to slip in beside her. \n\n\"When I was a little girl,\" she whispered, \"I often imagined what my wedding day would be like.\" A smile. \"Never thought I'd get married by a Cher impersonator, but I also didn't see you coming, either. I'm so lucky, and so happy.\"\n\nFurther conversation was limited to gasps of pleasure and whispered 'I love you' s. Our embrace was warm, passionate, and urgent, yet gentle and reverent. We rolled about, kissing and caressing each other, until I found myself under her, with her full soft breasts squashed into my chest. Didi manipulated her hips with skill, corralling the head of my penis between her moist labia, and then working her way down over my erection until I was about halfway inside her. She smiled, and sat up, finishing the job, and seating her warm pussy fully around my cock. \n\n\"Mmmmm,\" was all she said, her hands on my chest to support herself. Her eyes blazed into mine, as her muscular sheath alternately clenched and relaxed around my shaft. She loved to do that when she was on top, tightening her grip on the upstroke, and easing it on the way down, almost like giving a hand job, but with her incredible pussy instead. \n\nI laid back, and let her take full control, tugging and stroking my cock with her gently teasing cunt. As usual, she took great delight in pressing her dangling globes of feminine softness into my face, and I, with equal predictability, happily suckled her tall, stiff nipples. \n\nSeveral minutes of this quiet coupling followed, with Didi riding me slowly, extracting her own pleasure while simultaneously bringing mine to the brink of release. She sensed my excitement, and reduced her pace even more, to an excruciatingly slow stroke that merely drove me crazier. It did the same to her. \n\nI felt her body quiver, and knew her orgasm was approaching rapidly. A few anxious thrusts up into her hastened my own climax, and my semen spilled inside her pussy just as she came. We kissed throughout our mutual bliss, holding each other close, and feeling the love surround us. \n\nThat's the way it is meant to be, isn't it? \n\n***\n\nWe arrived home from Las Vegas late on Sunday. A weeks worth of mail waited for us, inside the door of our home / studio. \n\nWhen we left, seven days ago, I was a mere spectator, going to hold my girlfriend's hand during the catalogue shoot. In the meantime, I had been pressed into service as photographer, hired as a staff member, and proposed to the aforementioned girlfriend, who had been hired to the same staff. Then we had made the trip to Vegas, walked the aisle, and were returning home as husband and wife. Quite a week, really. \n\nI went through the mail on Monday, and found an express delivery notice, from Nightly Apparel. Curious, I showed it to Didi, who just smiled, and plucked it from my hand. \n\n\"I'll be right back,\" she giggled, disappearing out the door. \n\nTwenty minutes later, she was...back, that is...carrying a box, and wearing a smile. She handed it to me. \n\n\"Go ahead, open it. It's mostly for you,\" she nodded. \n\nI popped the tape, and unfolded the flaps, to find a red dress on top. Yes...that red dress, along with a blue one, a black one, and three others further down the pile. I looked over at her, surprised. \n\n\"Honey,\" she laughed, kissing me gently, \"...I said I didn't want to wear them for my wedding, not that I didn't think they were hot, and fun to wear. And, of course, I like what they do to you, and what they make you do to me.\"\n\nShe picked up the box, and headed toward the bedroom. \n\n\"Care to watch me try them on?\" \n\nWho says married life is boring? \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI hope you enjoyed this chapter of this story. My personal feeling is that there could be one more, but I leave that to you. Tell me what you want, please. \n\nAnd... Cast those votes. \n\nThanks for reading. I'll be working on new installments for a few other stories that have been too long neglected, so keep checking in. \n\nThanks again."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "model",
        "photographer",
        "brunette",
        "big tits",
        "tall",
        "public nudity",
        "workplace sex"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/exposure-compensation-factor-ch-03"
}