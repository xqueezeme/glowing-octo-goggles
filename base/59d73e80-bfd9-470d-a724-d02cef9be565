{
    "title": "Fallen Ch. 16",
    "pages": [
        "Taking a deep breath they both follow me the rest of the way. I find that Chancey has returned. He's in the kitchen. He looks up when we enter and glares at me.\n\n\"Remind me never to leave the grounds again.\"\n\n\"Was Mario that much of a handful?\"\n\n\"Mario was exactly what he said he'd be. He taught me the herbs to look for and left me to gather them, while he went to get some stuff. He came back with a big bag and then we came home. We were only gone a couple of hours. It's you that's the handful.\"\n\n\"Really?\" I raise my eyebrow and he bows his head.\n\n\"I'm sorry, My Lord. It has been a somewhat difficult day. I came back to find Serif almost dead, Taz spinning out of control and Sacha going demented trying to find 'something special' for Bridge's lunch. He's a dreadful cook and he'd made such a mess of the kitchen. If it hadn't been that it was for Bridge I would have hit him over the head with a frying pan.\"\n\n\"How is Bridge?\" It's crazy how the sound of his name makes my heart jump.\n\n\"I don't know. I haven't had the chance to go up. I think he's okay, Sacha was smiling.\"\n\n\"And Serif?\"\n\nChancey frowns. \"I don't know, My Lord. David did a good job and he's very strong but...\"\n\n\"But?\"\n\n\"He was very close to the edge when I last saw him. Mario was doing something with him. He seemed confident but Mario is confident about everything.\" \n\nI smile. \"Yes, he is.\"\n\nI turn to my new acquisitions. \"This is Chancey. He is the one who makes the house run smoothly. He is your brother but he is also your master. If he is unfair or cruel to you let me know but I would be beyond surprised if he was. He can be a pain sometimes but it's only because he has a huge task on his hands running this place and he wants to do it well.\n\n\"You will not be expected to do any work around the house, as we have a staff for that. In the beginning, at least, you will concentrate on getting yourselves fit and well and then we will see where you niches lie. Chancey will instruct you on the rules and routines of the house. He will introduce you to the others. If you have any questions then direct them to him and he will answer.\"\n\nI smile at the boys who, now that they are here seem very uncertain and lost. They all do. \"Chancey, this is Sam and Alex. Now they will be Yin and Yang. They are twins and fit together perfectly. The one exists within the other and they are only complete when they are together. These are perfect names for their new life.\"\n\n\"Indeed, My Lord.\" Chancey says brightly, smiling at the twins. \"Come on then, let's get you cleaned up and see what's under all that grime.\n\n\"I'll leave you with Chancey. I'll see you again in the morning. Ten o'clock Chancey, okay?\"\n\n\"Of course, My Lord.\"\n\n\"Do you need to replenish your supplies?\"\n\n\"Not just at the moment but, unless you want to do it as intensely as last time, we are going to have to start taking a little every day again quite soon.\"\n\n\"Speak to me about it again tomorrow.\"\n\n\"Yes, My Lord.\"\n\nWhen I leave the kitchen I go straight to the transfusion suite. I hear voices as I pause outside the door. When I open, it I find Taz sitting on the bed with his back against the wall, holding Serif in his arms, resting his head on the bright gold hair. Serif has his eyes closed but his cheeks are pink and he looks much stronger than he was when I left him.\n\nThey are speaking softly to each other and I am utterly shocked. I have never seen them so gentle and tender with anyone, let alone each other. What on earth is going on in this house?\n\n\"Are you feeling better?\"\n\nSerif opens his eyes and smiles his angelic smile. \"Much better thank you, My Lord.\"\n\n\"No thanks to you,\" Taz snaps and I take a mental step back. \"When I first came I thought he was dead. You took too much.\"\n\n\"I know.\"\n\n\"Taz,\" Serif scolds, \"My Lord told me what he was going to do and it was...\" He flashes a look at me that makes me gasp. \"It was my pleasure.\"\n\n\"But...\"\n\n\"Tell me again what you told me after what happened to you.\"\n\nTaz colours. \"That was different. That was an accident.\"\n\n\"But it was a wild ride.\" He tilts his head to look up at Taz and, after only a few moments of their eyes locking, Taz relents. \n\n\"I'm sorry, My Lord. I was...\"\n\n\"I know you were, Taz. I promise I will never do anything like that again.\"\n\n\"Spoilsport,\" Serif teases and Taz punches him, none to gently.\n\n\"I am glad you're alright. I'll call in and see you again tomorrow. It would probably better if you transfused again then just to make sure.\"\n\nSerif laughs. \"I have enough of your blood in my veins already to make me want to bite, and Taz won't let me. He says I'm not up to it but as soon as you leave I'm going to show him that I am.\"\n\nSmiling, I shake my head. \"Very well, but if you insist, perhaps you will take him back to your room, the walls are far too thin here. I think that one of you would probably go through.\"\n\nThey look at each other with a glint in their eyes and I retreat hurriedly.\n\nWhen I enter my apartment, I hear the laughter from the bedroom straight away. I recognise Bridge's light chuckle and I would know Star's from a mile away. I am so tuned in to him I can feel him wherever he is in the house. There are others in there too.  \n\nWhen I open the door I am surprised to find half the house here. Star and Sacha, of course and Mario who I expected to be here, and also Ara, David and Pen. \n\n\"Who decided to have a party and not invite me?\"\n\nBridge, who is sitting cross legged on the bed, flings himself into my arms and I am instantly filled with sweetness. Oh what fortuitous chance led me to find this angel?\n\n\"I missed you,\" he says softly, looking into my eyes. I look into his and see stars. I have become accustomed to thinking of Bridge as small, but he is almost as tall as I am, as tall as anyone in the house. He is very slender, though. I could almost put my hands around his waist, and his wrists look as if they would snap if I held them too hard.\n\nSomehow, he has managed to keep himself well fed and the slenderness is genetic rather than due to malnutrition, although his illness has hollowed him. Since the treatments began he has started to pick up condition again and I can only hope that it's enough to see him through. \n\nHe looks very, very tired. I take his face in my hand and look into the beautiful emerald eyes. There are shadows there.\n\n\"You should be resting and not having a party.\"\n\n\"I was resting,\" he says indignantly. \"I was just resting with company.\"\n\n\"Yes. It looks like it. I think David and Pen have other things to do and Chancey is looking for you Ara, we have two new friends to take care of.\"\n\n\"Yes, My Lord,\" they murmur but they all have twinkles in their eyes.\n\n\"I'd say you behave like my father,\" Bridge says lightly as he throws himself onto the bed, \"but he never cared that much.\" It's a good thing he can't see my eyes right now.\n\nMario catches my eye but speaks to Bridge. \"I have to go. I have some things I need to talk over with Chancey about what we did today. You make sure to drink all of the tea I made for you.\"\n\n\"It's horrible.\" Bridge wrinkles his nose.\n\n\"No it isn't, it's sweetened with honey.\" His voice and face soften considerably. \"It's going to help you get strong, Bridge and that's all that any of us wants.\"\n\nBridge bites his lip and nods, reaching for the cup.\n\nI follow Mario into the sitting room. \"Thank you,\" I say awkwardly. This respect thing still doesn't come easily to me.\n\n\"The tea will help but it will take time. There is nothing that can do miracles, not like you can. It all takes time. Is there no way you can boost his energy.\"\n\nI shake my head. \"Don't think that it hasn't been on my mind since the start, but I have to keep attacking the cancer. I can't do both: I can't take and give. If I am drawing sickness out I can't put energy in; it doesn't work that way. And I can't stop drawing the cancer out. It is all through him, everywhere. It is so close to killing him I can't risk one day. Even now, his body is struggling to fight it, that's what saps his energy so quickly. He fights but it is still too strong to be fought. So no, there is nothing more I can do, anything I try other than what I am doing now will only make it worse. I have to keep attacking the cancer and hope that he'll have the strength to hold on to the end.\"\n\n\"How much longer?\"\n\n\"Two days.\"\n\nHe purses his lips. \"I don't know. Do the treatments make him weaker?\"\n\n\"Yes. They make his body weaker but cleaner. As the sickness declines his body fights it harder but it's still too strong. Every day he's better but weaker.\"\n\n\"I think I understand. I'll do my best.\"\n\nI put my hand on his shoulder. \"I know you will.\"\n\nWhen I go back into the bedroom Sacha is trying to interest Bridge in lunch but he simply shrugs and sighs. \"Whatever you want, Sacha. I'm not hungry but I know I'll get grief if I don't eat so I'll eat whatever you give me.\"\n\n\"But there must be something that you'd like. Scrambled egg? Noodles? Candyfloss?\"\n\nBridge smiles. \"If you get me candyfloss I'll eat it off your cock.\"\n\n\"Give me half an hour.\"\n\nBridge is smiling as Sacha leaves.\n\nI lie down on the bed next to Bridge and look deep into his eyes. I am aware that Star is watching us but I ignore him. Bridge smiles his slow smile and a light twinkles deep behind his pupils. It's not the flash of red it is with Star, it is a golden light that shines from deep within. It almost feels as if the light is reaching out to me and drawing me in. I smile, despite my gloomy mood and reach out to touch his face.\n\nHe is cold. He is always cold and his skin is translucent pale. Now that I have drawn the sickness to the surface I can almost smell it in his blood and I can see it in him when I look at his face. There are deep shadows around his eyes and it makes me shiver. It would be unbearable if I lost him. But he is far from that. He is ill and cold and tired but he is still strong, I can see that too. I will do it. I will make him better; just a few more days.\n\n\"It's alright, Luma.\" \n\nHis soft words startle me. \"It is?\"\n\nHe nods and smiles. \"Yes, it is.\"\n\n\"What's alright?\"\n\n\"I know you're doing your best. It's not your fault I'm so weak and hopeless.\"\n\n\"Bridge,\" I say sternly. \"You are neither weak nor hopeless. Physically you are not strong right now although in a few days you will be, I swear it. But your spirit is strong, perhaps the strongest of us all. And, as for being hopeless... You should know that after a long, long time you have given me hope for peace. When I am in your arms my restlessness stills and a hole that I had not realised was there in my soul, is filled. I have so much hope for us.\"\n\n\"You do?\"\n\n\"Absolutely.\"\n\nHe looks at me quietly for a while, then he smiles. \"It gives me hope too, Luma. I know that here, with you, I can be myself, be complete. I just...\" He pauses.\n\n\"Just what?\"\n\n\"I don't feel... somehow I don't feel that it's going to last. I don't think you can save me, Luma.\"\n\n\"Don't you say that,\" I snap, shaking him slightly. \"Don't you dare say that! I will save you! There is no question.\"\n\n\"But there is, isn't there?\" he says sadly. \"That's why you look at me with anxious eyes and have whispered conversations you think I don't notice. If you knew you could make me well then why did you ask Mario to make me those herb teas? They're not just for taste. They make me feel strange.\"\n\n\"What do you mean strange?\"\n\n\"I don't know... like now. I drank his tea and now I feel... I feel...\" He sighs. \"I feel tingly, like I'm going to float off the bed and my head feels funny. I can't hold on to thoughts and I'm so sleepy I can hardly keep my eyes open. I know I was tired before but this is different. I feel like I'm drugged.\"\n\nI smile and gently stroke his hair. \"Then you probably are. Who knows what Mario puts in those teas? I don't think he's trying to poison you, though.\" I'm joking but he considers it seriously.\n\n\"No. I'm sure he's not trying to poison me. He's a good person.\"\n\n\"You sound very sure.\"\n\n\"I am. I can see it.\"\n\n\"See it?\" \n\nHe seems to be drifting slightly and his words are disconnected, coming from 'somewhere else'. \"Yes. When I look at people I can see their goodness.\"\n\n\"So what do you see when you look at me?\"\n\n\"You're good, Luma. For a long time you haven't been and it's hurt your soul but that will get better. Inside you're good and she knows it.\"\n\nI am so startled I almost snatch back my hand. \"She?\"\n\n\"What?\" His eyes are heavy now and he looks drugged, drifting.\n\n\"You said 'she'.\"\n\n\"Did I?\" He yawns and snuggles in to me. I am stiff in his arms, my heart pounding.\n\n\"Who did you mean? Who is 'she'?\"\n\n\"I don't know,\" he murmurs, almost asleep, \"but she says she loves you.\"\n\nMy heart stops. \"Bridge I... Bridge?\" He's fast asleep his lips curved in a smile. I put my arms around him and pull him close, having to stop myself from crushing him. If I let myself I would be crying now.\n\n\"Is he alright?\"\n\nDamn. Star startles me. I had forgotten he was here.\n\n\"Yes. He's fine. Mario's concoctions have knocked him out, but he feels strong and he's breathing easy. It's just as well. He needs to conserve his strength. I would have preferred if it had been after he'd eaten but I'll get him whatever he wants later.\" \n\n\"I can't...\" I look up, startled again. Star is standing at my shoulder, although I don't think he even sees me. He has eyes only for Bridge. \"I can't believe that I feel so strongly for him when I've known him for such a short time.\"\n\n\"I know what you mean,\" I say fondly, cradling Bridge carefully.\n\n\"What is it about him that makes him so special? It's not just us; everyone loves him.\"\n\n\"Yes, they do. I don't know, maybe it's his purity. He may have been a whore but he's curiously untouched.\"\n\n\"I can't believe that either. The thought of someone who doesn't love him putting their hands on him is unbearable. I can't believe that he would...\"\n\n\"You don't know his story, Star,\" I say, looking up at him. For once the look he gives me is direct and non hostile. \"He's lucky to have survived this long and prostitution was no choice for him... it was what he knew.\"\n\n\"Was he...?\" Star gulps and rubs his hands on his trousers. \"Did he get hurt at home?\"\n\n\"Yes, I can tell you that much. He was hurt; terribly hurt. He was hurt so much that he welcomed the prospect of death.\"\n\nStar laughs bitterly. \"Yeah, I can understand that.\" His eyes had slid down to rest on Bridge's face but now they snap up again and glare at me as if daring me to press him on it.\n\nDeliberately, I break eye contact and let my own eyes return to the sleeping face in my arms. It is so easy to get lost in him. He is so beautiful, so sweet, so vulnerable. I brush a stray strand of hair out of his eyes and smile.\n\n\"You know... the way you look at him... You're so... I didn't think you could be so gentle, so... human.\"\n\n\"So you think I am a monster?\"\n\n\"Of course you are. Look at you. Look at what you do.\"\n\n\"What do I do?\" I ask quietly and look up at him. He's angry again.\n\n\"You snatch boys off the street, hold them prisoner here, force them to have sex with you and drink their blood.\"\n\n\"And you think it's as simple as that; that it makes me wrong; that it makes me a monster?\"\n\n\"Fucking right.\" That look in his eyes is so hot I could burn myself. He is incandescent with rage, it almost consumes him. For the first time I wonder what he's angry at.\n\nI nod, looking at him thoughtfully. It's lucky I am holding Bridge because if I hadn't been I would never have been able to stop myself from taking him into my arms. Well, apparently she has said I wasn't to let him run away... so here goes.\n\n\"I have to drink to live. In return I give health, vitality and long life. I give warmth and comfort, a full belly, safety, companionship.\"\n\n\"Big deal.\"\n\n\"To Bridge it was a big deal, Star. He was on the point of death. If I hadn't taken him he would have been dead by now.\"\n\n\"Okay... but Bridge is the exception to anyone's rules.\"\n\nSlowly I slide my arm from under Bridge who sighs and snuggles down again. I pull a blanket over him and gently tuck him in and then I stand up to confront Star. He looks uncomfortable then pulls himself up to look squarely in my eyes, almost snarling.\n\n\"What about Serif and Taz? You've experienced Serif yourself, and Taz is just as bad. Where do you think they would have found acceptance? Where would they have been free to be themselves without the distinct risk of ending up on the wrong side of the law, or worse? Where would they ever have found each other?\"\n\n\"Well yeah... they're exceptions too. They're just crazy.\" He seems a little less angry and a little more uncertain.\n\n\"And then there's Chancey. He was a messenger boy for the mob in the 40's. When I found him he was bleeding to death in a dumpster. Now, more than fifty years later he is still sixteen and running the whole house. He came from a home where dinner came from someone else's rubbish. Now he's with Ara who is the cherished son of an aristocrat, who was desperately unhappy, but locked by family and responsibility into a future that wouldn't have killed him but would have broken his spirit.\n\n\"Sacha was the child of the 'free love' generation. He lived in a commune and had no idea who his parents were. By the time I found him he was addicted to LSD, being screwed by everyone in the community, men and women alike, because of his beauty and he was set to burn out before he reached twenty.\n\n\"David and Pen came from similar backgrounds and would probably have had reasonably happy lives but they would never have met.\n\n\"And today I found two new boys in the shell of a broken warehouse. They were filthy, cold, starved and hopeless. One of them was in a coma and slipping away and the other one was waiting for him to die so he could follow. Tell me how wrong I was to bring them here, how much of a monster I am to have taken them away from that.\"\n\nStar drops his eyes then snaps up again. \"Alright. Maybe you're right, maybe their lives are better but there were others, I know that. You killed them. Chancey got rid of their bodies and you just went out and got more.\"\n\n\"I won't lie, yes I did. There were those who died accidentally and those I drained for the pleasure of tasting their last moments in their blood.\" He blanches and his eyes widen. \"There was a time when I hated humans, I hated them with a passion and I wanted to hurt them in any way I could. I'm not proud of that, but I'm not apologising either.\"\n\n\"No, of course not. Perish the thought that you would ever apologise for anything. Now, you're a fucking hero.\"\n\n\"No, not a hero. I still get what I want from the exchange, but I do give back. I give my boys what they need... a home.\"\n\n\"A home?\" He sneers. \"And what about me? You didn't find me under a bridge or in a warehouse. I wasn't dying.\"\n\n\"No?\"\n\nI raise my eyes sharply and he freezes taking a mental step backwards. \"No,\" he says firmly.\n\nI take a step towards him and he doesn't move. \"You were already dead, Star; you were dead inside.\" He looks up as I take another step. \"You were looking for something that night. Maybe you weren't looking for what I was offering, but something close.\"\n\n\"I...\"\n\nHis eyes are locked with mine and the red light is flaring strong in the pupils. I can feel his fear and his uncertainty locked behind a screen of anger. I close the rest of the distance between us until I am close enough to touch.\n\n\"Tell me that, if I hadn't found you that night, you would have gone on; that you would be alive today.\"\n\n\"I...\" His eyes are wide and he looks more frightened than angry now. He turns away but I grab his arms and stop him. He struggles, but soon realises I am too strong for him to make any impression.\n\n\"Tell me, Star; tell me that you wouldn't have died that night... or the next.\"",
        "\"I...\"\n\n\"Tell me.\" Without him even realising it I have let go of his wrists and put my arms around him, drawing him close. He is just about the same height as me and my vision is dominated by the most incredible shade of blue.\n\n\"No...\" he whispers, struggling again, but it is weak and uncertain.\n\n\"Star, you are the most beautiful boy I have ever laid eyes on. When I saw you in the bar, I watched you all night. I wanted to touch you, to taste you, but for the first time ever I was afraid. I was afraid I would drive you away, that I would lose you.\" \n\n\"You kidnapped me.\" He tries to rally but there is no real anger in his voice now.\n\n\"I couldn't help myself. I couldn't let you go.\"\n\n\"You almost killed me.\"\n\n\"It was the biggest mistake of my life.\"\n\n\"You... you drugged me, kidnapped me, brought me here and had sex with me.\" There is a flash in his eyes but I am ready.\n\n\"Can you really tell me that you didn't want it, that you didn't like it?\"\n\n\"I... no I... I didn't want it.\"\n\n\"Really? When you were biting me, when you were growling like an animal, did you really want it to stop?\"\n\n\"I...\"\n\n\"Tell me the truth, Star. Isn't it the very fact that you didn't hate it; that you wanted me, wanted it, that's made you so angry? Isn't it the fact that everything that has happened to you since I passed you the JD in the bar turned you on, that has made you hate me?\"\n\n\"I...\"\n\n\"Tell me, Star.\" He shakes his head, a look of desperation coming into his eyes. \"Tell me,\" I command\n\nSomething snaps behind his eyes and he sags, lowering his head, all the fight leaking out of him. \"Yes,\" he whispers.\n\nI lift his face with my fingers and stare into his eyes, moving my hand to cup his cheek. \"I promised I would not take you unless you asked me to, that I would not lay a hand on you unless you wanted it.\" He swallows noisily. \"If you want me to walk away, right now, I will. If you want me to never speak to you again, I will. If you want me to let you go then I will.\"\n\n\"Why?\"\n\n\"You said yourself that there is something about Bridge that even though you haven't known him for long makes you absolutely sure that you love him and will never stop loving him. I felt that the first moment I looked into your eyes. I love you, Star. I would live or die for you and I can't bear it a moment longer. Being close to you, seeing your smile, your eyes, smelling your scent, hearing your voice is torment. I would rather release you and never see you again than to have to live with you, seeing you every day and not being able to be with you.\"\n\n\"Do you mean it?\" he asks as if he really can't believe he's saying it. \"Do you really love me?\"\n\n\"With all my heart.\"\n\nThere are tears in his eyes and his jaw is trembling where he has clenched his teeth. \"I don't love you. I... hate you.\"\n\n\"Are you sure?\" Still holding his face with my hand I move closer.\n\n\"Yes, I... I don't... I don't...\" He keeps on saying it right up until our lips meet and then he throws his arms around me and pulls me close, kissing me as I have never been kissed before. \n\nThere is desperation in the kiss and I can feel his heart thudding against my chest. The smell of his blood is intoxicating and I want him... oh Hel I want him.\n\n\"Not here.\" I manage to gasp between kisses. \"Bridge... not here.\"\n\nPanting, Star lifts his head and looks down at Bridge, who is sleeping peacefully. He nods and comes willingly when I take his hand and lead him out of the room."
    ],
    "authorname": "Nephylim",
    "tags": [
        "gay novella",
        "gay vampire",
        "gay romance",
        "romance",
        "drama",
        "vampire",
        "supernatural",
        "supernatural romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/fallen-ch-16"
}