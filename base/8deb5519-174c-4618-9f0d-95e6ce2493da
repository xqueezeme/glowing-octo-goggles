{
    "title": "Jenna, Sucker for the Team Ch. 06",
    "pages": [
        "Chapter 6\n\nJenna's life continued like that for the rest of the week. Not only was she sucking off the team, she'd added 'Grandpa Dex' and his cronies to what she now referred to as her 'clients', even though she never took a penny for the services she provided. Getting to swallow their cum was reward enough for her.\n\nBy now, she knew that all the boys on the team knew the score when it came to her. After she'd blown them, a number had asked her out, only to be rebuffed by a shrug of her shoulders and the word \"Sorry.\" As usual, Jenna had kept track of the number of times she'd had to say that word to various team members. That number currently stood at 37.\n\nAt first, she was sure that most of the boys thought she was just a dumb slut who loved to suck cock. Within a week, word got around her academic capabilities. She overheard two boys talking about her in the locker room when they thought she couldn't hear them. Word was out that she was on the Dean's list and had maintained a 4.0 average for the past two years. The two boys commented that \"She's obviously no dummy\", and the way the whole team treated her and stood up for her when other guys tried anything made her feel grateful. They treated her as she'd hoped; like an intelligent, capable young woman. A young woman who didn't go all the way, but still loved to suck cock, and not just a single cock, but loved to suck lots of cock, a whole lot of cock, and swallow as much cum as she could get. Yes, that was the way they thought of her, which was totally fine with her, because that's what she thought of herself, and she liked herself that way.\n\nWith her mornings and afternoon busy with classes, she took to dropping in to see Dexter in the early evening after her daily stint in the 'Relief Room'. The old man would grin from ear to ear every time he saw her, and gratefully feed her both barrels from The Shotgun. He'd sometimes call one of his buddies in for Jenna to service, and it always seemed that when she was there, if Lewis was on duty, he'd make an excuse to 'fix' something in Dexter's room. He never failed to 'fix' Jenna's craving for more cum.\n\n<p align=\"center\">****</p>\n\nFriday arrived and the team was due to leave for the tournament at 1:00pm. As a 'Designated Trainer' for the lacrosse team, Jenna was excused from her afternoon classes as well. While the players gathered outside the bus, the coach stowed Jenna's gear away in the luggage compartments below and took her arm.\n\n\"Come with me, Jenna,\" he said as he led her onto the bus. She noticed the portly old bus driver followed them on and was right behind them as the coach made for the back of the bus. He stopped in the aisle just before the final few rows of seats.\n\n\"Jenna, this is Sid. He's been our driver for years now.\"\n\n\"Pleased to finally meet you,\" Sid said as he gave Jenna a toothy grin.\n\n\"Nice to meet you too,\" Jenna nodded and gave the older man a pleasant smile.\n\n\"Anyway,\" the coach continued, \"with you being a part of the team this year, Sid and I have made a couple of modifications to the bus.\" He pointed to a gap between the back two seats on one side and the third row of seats in front of it. \"We removed the second row as you can see. Now, to make it comfortable for you, we took one of the four-inch gym mats and cut it to fit in the space and then glued it to the floor.\"\n\nJenna looked down at the blue vinyl-covered mat in the space where the second-last row of seats used to be. She knew exactly what the coach had in mind. This is where she'd be 'working' while the team was in transit.\n\n\"We left the two seats side by side in the back row. We figured you could work on two guys at one time to help speed things up.\" He paused and looked at her. \"That's not a problem, is it?\"\n\nJenna was quick to shake her head. \"Not at all. I like the way you think, Coach.\"\n\n\"Great. Now, before the team gets onboard, I wonder if you'd like to try it out, see if everything is okay. It would also be a good way of showing Sid how much we appreciate what he's done to his bus to help the team. What do you say, Jenna?\"\n\n\"I'd be happy to,\" Jenna said as she glanced at Sid, who looked like he'd just won the lottery. \"Thank you so much for doing that, Sid. I hope you're not too upset to have to do this to your bus, but I love it. Using the gym mat is a great idea. With that vinyl cover, at least it'll clean up easy. Some of these boys can certainly make a mess.\"\n\n\"The gym mat was the coach's idea, but I was happy to do it,\" Sid said, clearly sweating as he watched Jenna peel off her denim jacket. The old bus driver's eyes opened wide as he got a close-up view of her big round tits, looking fabulous in the tight black turtleneck she was wearing.\n\n\"I'm just gonna put my coat up here, okay coach?\" Jenna said as she tossed her jacket into the compartment above the seats before pulling a scrunchie out of the pocket of her jeans and whipping her thick brunette hair up into a ponytail. She gave a nervous-looking Sid a little wink. \"It looks like I'm going to be here a while so why don't you have a seat and we'll see how things are?\"\n\n\"I...uh...sure,\" Sid muttered as he squeezed his heavy frame into the seat.\n\nJenna dropped to her knees before the big man, shifting from side to side to try out the cushion.\n\n\"What do you think, Jenna? Will that do the job?\" the coach asked.\n\n\"It's perfect. Thanks for using the thick mat.\"\n\n\"Well, I know you like thick ones, right?\"\n\n\"That's true. What do you have for me, Sid?\" Jenna asked as she reached up and started to undo the bus driver's pants.\n\nFive minutes later, Sid gave Jenna what she wanted, a nice mouthful of thick creamy sperm.\n\nThe bus ride to the tournament location lasted four hours, and the boys on the team kept her busy for the whole trip. She liked taking them on two at time. While her mouth was busy on one, her hand was pumping on the other one as she moved back and forth. She liked it when she got two loads one right after the other.\n\nWhen they arrived, her black turtleneck was a stained wet mess of cum and saliva, just like the mat she was kneeling on. She asked the coach to retrieve a change of clothes for her from her luggage, realizing that from now on it would be best if she kept her bag with her on the bus for just that reason. While the coach went and fished around to find what she wanted, she blew Sid one more time, thanking him for getting them there safely.\n\nAlthough the boys on the team shared a room, Jenna was relieved to find out that she had a room to herself, and not just any room, but a full-fledged suite, with a huge king-size bed and an en-suite bathroom that was almost as big as her whole apartment.\n\nThe team was due to meet for their evening meal in one of the hotel's banquet rooms at 6:00pm. The coach had asked Jenna if it was possible for her to be ready a half-hour before that as he needed her assistance with something. Unsure of what that was, Jenna agreed.\n\nAfter showering in the luxurious bathroom to wash the cummy residue out of her hair and off her body from the bus trip, she got dressed for the dinner. She'd been told that the players were expected to wear a jacket and tie for these occasions so she'd brought along a couple of new dresses she'd purchased with some of the money allotted to her. For this evening's meal, she chose a sleeveless red minidress that clung to her curvy form like a second skin. It had a deeply-scooped neck that showed a scandalous amount of d\u00e9colletage, and little slits on the outside of each thigh that reached almost to her hips.\n\nAt first she thought it showed a little too much of her full creamy thighs, but the more she looked at herself in the mirror, the sexier she thought it looked, especially when she moved and those slits opened up give a teasing glimpse of more of her thighs. To complete the outfit, she wore a pair of strappy red sandals with a slender band that circled her trim ankles before being secured with a tiny gold buckle. She'd painted her nails a fiery red to match the dress and with the rapier like high-heels, she looked stunning in the whole outfit. Not knowing what the evening would bring, she tucked a matching red scrunchie into her little clutch purse.\n\nThe coach called her on her cell and asked her to meet him in the hotel lobby. She arrived to find the coach nicely dressed in a suit and tie. He looked very handsome. She'd never seen him in anything other than jeans or sports-related attire. He was standing near the reception counter speaking with a gentleman who appeared to be in his early 50's, dressed in a stylish suit with an expensive-looking silk tie. The man looked sophisticated and sure of himself, with steel grey hair and rugged features. Jenna thought he looked very much like her father. She thought the two men looked like quite an attractive pair.\n\n\"Ah, Jenna,\" the coach said as she approached. She saw both men look her up and down, approval clear on both of their faces as their eyes raked over her gorgeous form in the sexy red dress. \"Jenna, I'd like to introduce you to Mr. Langford, he's the manager of the hotel.\"\n\n\"Pleased to meet you,\" the man said as he shook Jenna's hand.\n\nThe man's grip was firm and sure, just as she'd expected it to be. She liked his smile, somewhat fatherly, but with a definite spark of interest in the way his dark eyes looked at her.\n\n\"Jenna's one of the team's trainers and I've asked her to join us for our meeting. I hope you don't mind?\"\n\n\"Not at all. Come right this way,\" Langford said as he led them into his office right behind the reception counter. He closed the door once they were all inside. It was a plush office befitting a hotel of this stature, with warm-leather furniture and dark wood accents that gave it comfortable 'club-like' atmosphere.\n\n\"Please, have a seat,\" the manager said as he gestured to two chairs covered in deep red leather opposite his desk. As they took their seats, he circled the desk and sat down opposite them. Jenna couldn't help but notice the way the manager's eyes looked at her as she sat down opposite him and crossed her legs, the slit at the side of her dress giving him an eyeful of her full thighs. \"Now, Coach, what is it you wanted to talk to me about?\"\n\n\"Having stayed here before,\" the coach started, \"I know how much the players on the team enjoy making use of the indoor pool that you have. For the two nights that we'll be here, I was wondering if it would be possible for the team to have exclusive use of the pool from eight until ten for those two nights?\"\n\nLangford looked quite taken aback. \"That request wasn't made at the time your university signed an agreement with us for the booking. Many of our guests enjoy using the pool, and I just can't see doing that. I'm very sorry.\"\n\nThe coach looked saddened. \"It's just that the boys on the team like to get a little rowdy and I don't think it would go over well with the other guests, but I don't want to have to reprimand them for their enthusiasm the night before the tournament starts.\" The coach paused as Langford shrugged his shoulders as if there was nothing he could do about it. \"Look, Mr. Langford, is there any way I can persuade you to change your mind?\"\n\nNow Langford looked at the coach curiously. \"Persuade me?\"\n\nThe coach turned to the side. \"Jenna?\" he said, raising his eyebrows.\n\nBoth men watched as Jenna reached into her purse and took out the red scrunchie. She drew her shiny brunette locks tightly together and had it whipped into a ponytail in seconds flat. Without another word being spoken, she got up from her chair and started walking around the hotel manager's desk.\n\n\"I...I don't understand...\" Langford said as Jenna put her hand on the side of his chair and swivelled it around before dropping to her knees in front of him. Within seconds she had his pants undone and his cock out.\n\n\"What the...oh my god,\" the manager exclaimed as Jenna's hot wet mouth descended on his swelling member. With her skilful technique, the older man was hard as a rock in less than a minute. He looked down at the beautiful young girl kneeling before him, her soft lips and warm tongue doing things to him he never imagined. Three minutes later, he gripped the arms of his chair tightly as he went off, pouring a torrent of cum into Jenna's sucking mouth.\n\n\"So, do you think we can get exclusive use of the pool this evening?\" the coach asked as Jenna got to her feet and wiped her mouth a short time later.\n\n\"Absolutely,\" Langford said as he sat there recovering, his chest heaving as he drew in cool breaths of air. \"And tomorrow night too, provided your young friend here comes and persuades me again.\"\n\n\"Jenna?\" the coach asked.\n\n\"I'd like that,\" Jenna replied as she smiled at the hotel manager. \"Same time, same place?\"\n\n\"That would be perfect,\" Langford said, a grin of pure pleasure on his face.\n\n<p align=\"center\">**</p>\n\nJenna and the coach joined the rest of the team for dinner after leaving Langford's office. Jenna thought the boys all looked wonderful in their suits and ties. It made her feel proud to be part of one of the university's traditions, and part of the team.\n\nWhile nearly all the boys feasted on steak or prime rib, Jenna didn't feel all that hungry, having swallowed what felt like a couple of pints of cum on the way to the tournament. She had a salad for her main meal, but asked the waitress to bring a number of pieces of the delicious bread they'd been given at each table. Jenna figured the warm fresh bread would help to absorb some of the spunk she felt sloshing around in her belly.\n\nAfter dinner, the team dispersed as all they went back to their rooms for an hour or so to relax and change before agreeing to meet up at the pool. Alone in her room, Jenna looked at the bathing suits she'd brought with her, purchased with some of the money from her 'expense account'. She chose the white bikini, knowing it would look good with her tanned skin. The bottom was two tiny triangles that tied over her wide hips with tiny little strings. The front panel had a bit of a scoop to it, ending teasingly just above her shaven mound. The back panel wasn't a thong, but fit nicely over her shapely heart-shaped bum, making her full bum cheeks look meaty and touchable.\n\nDifferent from what she usually wore in the way of bras, the bikini top was totally unstructured, with two white triangles of soft material forming to her full heavy breasts as they settled naturally on her chest. Jenna's boobs were still firm enough on their own to provide and deep dark line of cleavage, which she knew by now that all men loved. Like most large-breasted women, she knew that any hint of cleavage acted like a magnet for men's eyes. Adjusting the slender straps that ran across her back and behind her neck, Jenna smiled to herself in the mirror as she noticed how prominent her nipples were. Satisfied, she pulled on one of the big fluffy robes the hotel provided and let the room.\n\nTaking the elevator to the main floor, she was happy to see a hand-written sign on the door to the pool room: 'POOL CLOSED TO THE PUBLIC 8:00-10:00PM'. Mr. Langford had stayed true to his word.\n\nShe could hear the boisterous sounds of the boys in the room beyond and just before she opened the door to join them, she reached into her robe and gave each nipple a good hard tweak through the bikini top, feeling each bud swell and stiffen against the soft fabric. She knew the boys would like that. When she walked in, she felt all eyes on her as she made her way towards the shallow end. Some boys were already in the pool tossing a ball around while others were gathered near the chairs and tables on the pool deck. The hoots and hollers all but ceased as the boys watched as she took her robe off and hung it on a hook before stepping down the stairs and into the pool.\n\nJenna could see their cocks stiffened immediately as they watched her descend slowly into the pool, her big stiff nipples visible for all the way across the room in that bewitchingly sexy white bikini. She slowly made her way into the shallow end with all eyes on her, until she was in all the way, the water level ending just beneath the spectacular shelf of her tits.\n\n\"Oh fuck yes...\" she heard one voice mutter from a boy somewhere across the pool. After that break in the tension, the boys went back to the way they were, with horseplay ensuing in the pool and many boys talking animatedly about Jenna as they watched her. She knew they'd get a kick out of her doing the breast stroke as she lowered herself further into the water and made her way from one end of the pool to the other. When she'd turned around and made her way back to the shallow end again, she looked up as she heard her name called.\n\n\"Jenna, I've got something that needs taking care of.\" It was Rob that was speaking, the boy who'd basically been the start of all this, the one who'd taken her to the party after the first game of the season. He was sitting next to his good friend, Jeremy, both of them perched on the side of the pool deck with their legs in the water, their dicks pulled out their swim trunks, their hands stroking slowly up and down on their stiffening pricks.\n\nJenna just continued swimming, her strokes smooth and strong as she swam right up between Rob's spread thighs. She found that the shallow end was the perfect height for her as she stood on the bottom, her full breasts glistening with jewels of shiny water droplets, her mouth at the perfect height to service Rob's cock, which was exactly what she did.\n\n\"Mmm...\" she cooed as she lowered her mouth and slipped her lips over Rob's ballooning cockhead.\n\nRob and Jeremy smiled at each other after hearing Jenna purr like that, her enthusiasm for sucking cock making her a perfect member of the team.\n\nFor the rest of the night, while the boys continued to change places, Jenna stayed at her spot, moving slightly from side to side along the pool edge as one boy after another sat down in front of her, feeding her load after load for two hours straight.\n\nThe coach called it a night right at 10:00, not wanting to press his luck with Mr. Langford. With the tournament starting the next morning, the players had a curfew set at half an hour after that, and had been instructed not to bother Jenna or they'd lose their spot on the roster.\n\nFortunately for Jenna, that curfew and the warning about not bothering her didn't pertain to the coaching staff. She'd wondered why she hadn't sucked off any of them at the pool, and now she knew why. Back in her room and after having a long leisurely shower, she dressed in another of her new purchases, another short chemise in whispery black satin, this one with silky bra cups that felt deliciously cool against her big soft breasts.\n\nWhen the curfew time hit for the boys on the team, the three coaches appeared in Jenna's room. For the next hour or so, they kept her mouth busy, sucking and licking at their cocks and holes. They each gave her three loads, some down her throat, some all over her face, and some on her round voluminous breasts. She was such a mess that she needed another shower after they left, but it felt wonderful as she stood under the pelting spray in the huge glass shower, her fingers busy between her legs as she brought herself off one more time. As usual, she'd already climaxed a few times during the evening, sucking cock with her fingers busy between her legs, but she just felt she needed one more before going to sleep. She grabbed the shower wand and removed it from its holder, directly the stinging spray right at her throbbing clit as her fingers sloshed in and out of her dripping cunt. This climax was a big one, and she leaned against the smooth marble wall of the shower as she shook and quivered, her cunt gushing all over the shower floor.\n\n<p align=\"center\">****</p>",
        "For the first time, Jenna was allowed to watch one of the games during the first half. At halftime in the locker room, she quickly sucked off five of the boys on the starting squad, including Rob, who'd started to take his place as the leading scorer on the team. The team won that game by a wide margin over the competition, but the coach wouldn't let them celebrate just yet as they had another game to play in the afternoon.\n\nThey won that game too, with Jenna doing her thing in the locker room as required, both at halftime, and then right after the game, taking a well-deserved load out of each team member.\n\nDressed in a slinky form-fitting black minidress and pointy-toed stiletto pumps, Jenna paid a visit to Mr. Langford in his office before the team dinner that night. Mr. Langford seemed keener than when she'd surprised him the night before, and rewarded Jenna with a two loads in a row.\n\nAgain, dinner in the banquet room was a pleasant affair, with Jenna enjoying more of warm fresh bread she'd had the night before.\n\nFor their pool time that night, she wore a turquoise Speedo one-piece with leg openings cut sinfully high on her wide flared hips. She noticed that it left just as many of the boys wide-eyed as the white bikini had. By 10:00 that night, she'd had her mouth used continuously for another two hours straight, just like the night before. The only difference was that this night, at one point, the boys got her to lie on her back on the pool deck while ten of them stood over her and jerked off at the same time. They totally coated her with milky-white semen, globs and ropes of thick creamy cum raining down on her from all sides. Jenna came without even having to touch herself.\n\nThe coaches arrived for their nightly visit, finding Jenna dressed this time in a slinky satin negligee that was so brilliantly white as to look almost silver in color. By the time they left, both Jenna and the negligee were a soaked stained mess of cum and saliva. She revelled in the sublime pleasure of using the decadent shower again, directing the powerful spray from the shower head over her bumhole and clit as she brought herself off with her busy fingers.\n\n<p align=\"center\">****</p>\n\nThe team won the tournament handily, outperforming and outscoring the competition in every game. Pumped up from the victory, the boys kept Jenna busy on the way home in the bus. She'd started by taking a load out of Sid before the team members were allowed on, and then never left her spot on the cushiony gym mat for the remainder of the four-hour trip. The coach asked to reward Sid for getting them home safely and Jenna eagerly did so, taking another pudding-like load from the portly driver.\n\nJenna's life continued like that for the rest of the season. Daily practices were fun for Jenna. She got to know the boys and the little triggers that would set each one off, whether that be a teasing scratch of her fingernails, a gentle massage of their sperm-filled nuts, or just a good slobbery blowjob, she was always rewarded for her enthusiastic efforts each and every time with a mouthful of sperm-laden cum.\n\nTwice a week she paid a visit to the Director's office. Professor Worthington never seemed to be without his tweed jacket with the elbow patches, but Jenna thought he was a cute old boy as she'd kneel before him and take the Old Bayonet deep into her mouth.\n\nVisiting the retirement home as often as she could, Jenna continued to suck off old Dexter and his friends, with some new residents added to the mix. She noticed that every time she appeared, the old guys that she'd sucked off previously had a little more 'pep in their step' and, according to Dex, were happier than they'd been in years.\n\nThe only mishap was when one frail 94-year old guy in a wheelchair died of heart failure right after coming in Jenna's mouth. Dexter informed Jenna later that the mortician had told him that despite his best efforts, he hadn't been able to take the broad grin off the dead man's face. Dex said it made all of his family and friends find comfort when they saw him smiling like that in his coffin, as if he was happy with his death, which Dex said he was sure the old man was, having died in the manner all the old guys at the home hoped to.\n\nStill feeling somewhat guilty about what had happened, Jenna went to the university's chapel and, although she was not religious, asked if she could speak with the non-denominational minister there. As his eyes flicked down to her sumptuous chest, nicely displayed in a tight grey sweater, the minister said he'd be happy to speak with her and ushered her into his private office. He listened to her 'confession', totally spellbound, his seldom-used member repentantly stiffening beneath his trousers. When she was finished, he suggested that to help assuage her guilt, she should kneel before him and perform her penance. He opened his pants in order to help her with that. He thought she did so well the first time that he insisted she do it once more in order to ensure she had completely rid herself of her feelings of guilt, and to 'thoroughly cleanse her soul', and his pipes.\n\n<p align=\"center\">****</p>\n\nAnd so Jenna's life continued for the rest of the lacrosse season. She was easily able to separate her daily duties assisting the team, along with the time she spent with old Dexter and the other men at the retirement home, from her studies. Her 4.0 grade point average never suffered one bit.\n\nThe lacrosse team went undefeated throughout the entire season, drawing comparisons to the school's 1970 team, which never suffered a defeat during the entire season either. Rob led the way on the field, notching up the league scoring title at the end of the regular season. Matched against North Carolina in the National Championship finals, the score was tied 9-9 at halftime. But thanks to Jenna sucking him off during the short break, Rob exploded for six goals in the second half, securing a 19-17 win by scoring an insurance goal with thirty second left.\n\nRob was named the Most Valuable Player in the playoffs but, in a unanimous vote by the players afterward in the locker room, led by Rob, the honour was bestowed upon Jenna by the rest of the team. A week later, while Rob's trophy sat gathering dust in the hallway of the Academic Building, the players had a plaque made in Jenna's honour which they hung on the wall of the 'Relief Room'. On the plaque was her name, the title of 'Lacrosse Team MVP', and bronzed castings of a pair of kneepads.\n\nAs you would expect, the bus ride home from the National Championship game was a raucous affair, with all the players keeping Jenna doused in cum the whole way home. They'd given her one of the school's cheerleader's outfits to wear for the occasion, and the whole thing was soaked with semen and spit by the time they arrived back at the university.\n\nAs the players high-fived and fist-bumped each other before going their separate ways, the coach took Jenna aside after she'd pulled on her trench coat to hide the evidence. \"Jenna, I can't begin to thank you enough for what you've done for us this year. It's been incredible. I knew these players had some talent, but without you, well, I can't say any more than that you've made all the difference. I really mean that.\"\n\n\"Thank you, Coach,\" Jenna replied, surprised to find herself flushing under the coach's kind words. She couldn't help the restless feeling she'd had since she'd sucked off Sid after the bus had pulled to a halt and the players had filed off to join their friends and family members. That numbers thing of hers was nagging at her again. \"Look, Coach, you know how I have that thing about numbers, and keeping track of things?\"\n\n\"Sure, that's one of the things that we all love about you.\"\n\n\"Well, as usual, I've been keeping track and as of right now, I've swallowed 89 loads of cum so far today.\"\n\nThe coach smiled as he nodded. \"Oh yes, and we do know how much you like nice round numbers, right?\"\n\n\"Exactly,\" Jenna said as she gave him a sly grin as she cocked her head coquettishly. \"Do you think you could give me one more to make it an even 90?\"\n\n\"Of course, that's the least I can do for all you've done for the team. Where would you like to do this?\"\n\n\"My apartment is just around the corner. We could do it there, if you don't mind.\"\n\n\"That sounds fine.\"\n\nFive minutes later, they were in Jenna's quaint little apartment. The coach waited in the living room as Jenna went into the bedroom to change out of the cum-soaked cheerleader outfit. When she walked back into the room, the coach's jaw almost hit the floor. Standing before him was a dazzling display of pulchritude like he'd never seen in his life.\n\nJenna was dressed in a heavily-structured merry widow corset in jet black, the deeply-scooped bra cups absolutely jam-packed and overflowing with soft warm tit-flesh. The reinforced panels of the bodice accentuated her shapely hourglass figure, nipping in at her trim waist before flaring out suggestively over her wide womanly hips. She had on a matching pair of black lace French-cut panties, the ones she favored, cut wickedly high on her broad hips, making her shapely legs look tantalizingly long.\n\nThe coach's eyes drifted down her curvy form, taking in the lushness of her full creamy thighs and meaty calves, which looked incredible with her dimpled knees and trim ankles. Her legs were covered by whispery-sheer black stockings, with broad lacy panels at the top that were held in place by tightly stretched garters leading down from the corset.\n\nHer delicate little feet were clad in black high-heeled slingbacks, with pointy toes that could kick the eyes out of a rattlesnake and 5\" rapier-like heels that were so fucking sexy that they almost made the coach come in his pants right there on the spot.\n\nHe was finally able to draw his gaze back up to Jenna's face, taking a deep excited breath as he looked at her gorgeous visage. She'd quickly cleaned herself up and reapplied her makeup, her eyes done up in pinky-bronze eye shadow that looked incredibly sexy and exotic. Her eyes popped sensually as she'd applied mascara to make her already-long eyelashes look even longer and sexier. Her mouth--her perfect full mouth--was a brilliant red gash, a glossy coating of wet-look lipstick turning it into a perfect target for any hard cock.\n\n\"Do you like this outfit, Coach?\" Jenna asked seductively as she slowly crossed the room and dropped to her knees in front of him.\n\n\"Oh fuck...yes...\" the coach was barely able to mumble out. He stood there dumbfounded as Jenna looked up at him with doe-like eyes as she reached forward and undid his pants. He loved the angle he had as he looked down at her, his gaze taking in that gorgeous sexy face of hers before settling on the massive swells of her breasts below, the corset causing the mammoth globes to be pushed together and up like no set of tits he'd ever seen before. They were absolutely perfect, as far as he was concerned.\n\n\"Mmm, is all this for me?\" Jenna asked playfully as she took his swelling phallus out of his pants and ran her tongue teasingly up the full length of his stiffening cock.\n\n\"It's so big, Daddy,\" she said as she looked up at him, her big eyes open wide with a scared look on her face. \"You aren't going to make your little girl suck it, are you?\"\n\n\"Oh...fuck me,\" the coach groaned as his prick surged to full hardness, the illicit wickedness of Jenna's words setting his libido on fire.\n\nJenna swirled her tongue over the pebbly glans, coating it with a shiny coating of saliva before she paused, her lips pursed into an inviting oval at the tip of his cock. She looked up at him again, her big dark eyes oozing innocence. \"Daddy, you're not going to make me swallow your cum, are you?\" And then she leaned forwards, letting her lips flow over the flowing contours of the big mushroom-shaped head and all the way down the turgid shaft until she had every last inch buried in her throat.\n\n\"OH FUCKKKKKK!!!\" the coach wailed as he went off right there on the spot. His cock lurched and he rifled the first few shots right into her stomach before Jenna pulled back, wanting to taste his thick creamy cum on her tongue. He kept shooting, flooding her mouth with a massive load as she eagerly kept sucking, her lips and tongue relentless as she drew out every last drop.\n\nThe coach came so hard he was afraid he was going to pass out, the sensations were that intense. But he managed to stay upright as his orgasm finally dwindled , both on his legs and his erection still hard as steel.\n\n\"Daddy, you almost drowned me,\" Jenna said as she finally drew back, her lips and chin glistening with cum. She looked up at him as she took his long hard cock and rubbed it lovingly all over her pretty face, mewing and purring like a kitten. \"But it tasted so good. And you're still hard. Do you think you could give your baby girl another mouthful like that?\" She didn't wait for his answer, sliding her lips over his enflamed cockhead as she started to bob her head up and down feverishly, wanting more, like an addict needing their fix.\n\nLess than five minutes later, Jenna was able to feed her addiction, swallowing another big load of the coach's thick milky sperm.\n\n\"Jenna,\" the coach gasped out when he finally came down from his climax, \"that...that's 91 now. What...what are we going to do?\"\n\nJenna looked up at him playfully, her devilish little plan working out perfectly. \"Hmm...I see what you mean. That'll never do. I know, why don't you call Mrs. Coach and tell her you've been celebrating with one of the other coaches, you'll be drinking and you're going to stay over at his house.\"\n\n\"Mrs. Coach?\"\n\n\"Yeah, your wife. I think she'd believe a story like that.\" Jenna paused as she took another long leisurely lick up the shaft of his cock, taking her time as she delved the tip of her tongue into the seeping tip to suck out a shiny morsel of tasty seed. \"Remember when I stayed at your house and sucked you all night long? I'm sure if you stayed here and we did that again, we might be able to get that number to an even one-hundred. What do you think? I could be your baby girl all night long, if you like.\" She looked at him coyly and batted her big dark eyes. \"What do you think, Daddy?\"\n\nThe coach shuddered, turned on beyond belief. \"Oh fuck, yes,\" he said with a low moan before reaching for his cell and making the call to 'Mrs. Coach'.\n\n<p align=\"center\">****</p>\n\nIt was past ten the next morning when the coach, lying back against the headboard in Jenna's bed, had that last load, number 100 to her, sucked out of him. It had been an amazing night, with Jenna changing three times from one sexy outfit to another, each time coming back to take her place between his spread thighs, her lips and tongue worshipping his big thick cock all night long.\n\n\"You know, Coach,\" Jenna said as she curled up next to him, her fingernails tracing teasingly around the base of his spent member, \"I think it's great that the team won the National Championship this year.\"\n\n\"I do too, Jenna, I do too,\" the coach said as he leaned over and tenderly kissed the top of her head.\n\n\"But you know, Coach, I'm just a junior right now. Do you think the team might be up for a repeat of that National Championship next year? I'd like to help again, if that's all right with you.\"\n\nThe coach shuddered once more, totally in awe of this amazing young woman. He couldn't believe it, but just listening to what she'd just said had his cock stirring again. \"Oh my god, Jenna, I think that's a wonderful idea.\" He took her head in his hands and pulled her mouth down to his rising prick. \"Why don't you just suck out one more load for good luck in anticipation of next season?\"\n\nSmiling inside, Jenna took her time and used every trick in her book, taking the coach to the edge of climax a number of times before finally letting him come an hour later, when she almost drowned under the huge load of cum he poured down her throat.\n\nMmm, there's next season's number one out of the way, Jenna said to herself as she rubbed her hand over her cum-filled belly. I wonder how many loads I'm gonna get next year? And I wonder if I can wait that long?\n\nBut that's a different story...\n\n<p align=\"center\">THE END</p>"
    ],
    "authorname": "rmdexter",
    "tags": [
        "oral sex",
        "cum swallowing",
        "big tits",
        "big cocks",
        "multiple partners",
        "mature",
        "age difference"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/jenna-sucker-for-the-team-ch-06"
}