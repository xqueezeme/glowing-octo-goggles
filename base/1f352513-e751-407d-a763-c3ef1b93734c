{
    "title": "Life is a Soap Opera Act 03",
    "pages": [
        "This is the conclusion to the \"Life is a Soap Opera\" series. If you haven't read the other two chapters, you might want to give them a read first. I'd love to hear from you, so please leave a comment or send me an email.\n\n******************\n\nBailey felt like her stomach was on fire.\n\nShe had been drifting in and out of consciousness since the night before. Her sister had finally taken her to the ER first thing in the morning, then called her parents.\n\nThrough the haze, she refused any treatment other than ibuprofen.\n\nThe pain will go away, she told herself. It always does.\n\nBut it hadn't. If anything, it got worse. She heard her parents and the doctors talking. Her mother pleaded with her to sign over power of attorney to them, but she refused. \n\n\"Not until I talk to Gabe,\" she said. Even though the pain was sometimes unbearable, she held out until she could see him.\n\nThey had moved her to a semi-private room. There was no one in the other bed. Her father had arrived a little later, but she told him the same things that she had told her mother, her sister and the doctor.\n\nShe was running a fever. The panic attacks didn't help. Her family never left her side, even when she yelled and screamed at them. One at a time, they snuck downstairs to get something from the cafeteria or a quick nap on a couch in the lobby, but they were always there for her. Bailey appreciated that, she really did. But she needed Gabriel first.\n\nThe sun was going down when the door burst open.\n\nGabriel stood there, a wild look in his eyes. Time seemed to stand still. She smiled feebly through her tears.\n\n\"Bailey . .. oh, my god!\" he rushed over to her bed.\n\nHis fingers wrapped around hers. Bailey began to cry. Relief. Fear. Sadness. She was overcome with emotion.\n\nHe kissed her forehead. His lips felt cool against her skin.\n\n\"I'm here, sweetheart,\" he whispered over and over in her ear.\n\n\"I'm sorry, Gabe,\" she sobbed and buried her face in his shoulder. She tried to pull him close to her, but the pain in her abdomen shot through her body again.\n\n\"Sorry? For what?\" he asked, confused.\n\n\"I'm not . . . I can't . . .\" Bailey started to panic again. Her breaths came shorter. Tears streamed down her cheeks. She squeezed Gabe's hand as if her life depended on it.\n\n\"It's okay, Bailey,\" he said, stroking her hair calmly. \n\n\"Don't let them . . . promise me . . .\" She couldn't continue and burst into tears again. She began to hyperventilate.\n\n\"Would you excuse us for a moment?\" Gabe asked her family. They solemnly filed out of the room and closed the door.\n\nHe sat on the edge of the bed and held her close to him. She cried for a long time. Partly from the pain. Partly from fear. Partly because deep down she knew she could no longer keep her promise to him.\n\n\"What's . . . Bailey, look at me . . . What is it, sweetheart?\" \n\n\"Promise me you won't let them . . . promise me, Gabe . . . Promise me you won't let them give me a hysterectomy.\"\n\n\"What are you talking about, Bailey?\" She could tell he was straining to keep his voice even.\n\n\"I heard them talking, Gabe,\" she whispered, choking back sobs. \"I heard Daddy and the doctor say they're going to do it . . . they're going to take my ovaries.\"\n\n\"No one is taking your ovaries,\" he said, his tone reassuring. A little bit. \"No one is having a hysterectomy today. Everything is going to be fine, Bailey. I promise.\"\n\nThose were the words she needed to hear. From the man she needed to say them. With a great effort, her breathing became regular. She took deep, calming breaths.\n\n\"I'm going to have your baby,\" she vowed. \n\n\"Yes, you are, sweetheart,\" he said soothingly. \"Yes, you are.\"\n\nGabriel wiped the tears from her eyes. He smiled and she knew everything was going to work out. \n\nHis touch was gentle. She felt safe with him. \n\nGabriel.\n\nHer guardian angel.\n\n************ \n\n\"Would someone please tell me what this is all about.\" Gabe quietly closed the door to the hospital room. Bailey had calmed down. She consented to a painkiller, something she earlier refused for fear of someone doing something to her if she passed out.\n\nAndy and Joanne exchanged a worried look. Her father took a deep breath. \"She's had these problems for years . . . but it's never been this bad.\"\n\n\"What kind of problems?\"\n\nThey both deferred to the doctor who was talking quietly with them.\n\n\"Endometriosis. Do you know what it is?\" She asked in a kind voice. Gabe shook his head. \"It's when the same kind of tissue that lines the inside of a woman's uterus grows on the outside as well. It affects about one in fourteen women to one degree or another, although most never know it. When a woman ovulates, the tissue in the uterus swells in anticipation of accepting a fertilised egg. If a woman has endometriosis, the tissue outside her uterus\u2014called implants\u2014also swells. It can cause internal bleeding and be very painful.\"\n\n\"How painful?\" Gabe asked.\n\n\"At best, mild discomfort. At worst . . . think of getting kicked in the balls every five minutes for about four days straight,\" the doctor said. \"Bailey's been seeing me about this for, what . . . three or four years now. She has flare-ups when she menstruates sometimes, but other times, it's just like having cramps. About four months ago, I did a pelvic exam and found some scar tissue from the implants around her fallopian tubes and ovaries. That's why she's in so much pain right now. In the long term, endometriosis can cause infertility but it's not fatal.\"\n\n\"She told me something about taking her ovaries or giving her a hysterectomy,\" Gabe looked confused.\n\n\"We'd only do that in an extreme case or for a woman who did not want to have children. I'm Clara Chapman, by the way,\" she reached out with her hand and he shook it bewilderedly.\n\n\"Gabe MacKenzie.\"\n\n\"Yes, Bailey's told me a lot about you,\" she replied with a warm smile. \"Normally we treat minor cases with simple anti-inflammatory drugs or even hormone therapies. Some birth control pills can reduce or eliminate a woman's period and that makes the symptoms go away because the implants don't become inflamed. I've been trying to get her to have laparoscopic surgery to remove some of the implants, but she's been resistant to that idea.\"\n\nHis head was swimming with all the information that had been thrown at him.\n\nDr. Chapman took his hand, and pulled him close so only he could hear. \"Bailey trusts you\u2014and only you\u2014on this. This isn't life threatening, but unless she does something soon, it's only going to get more painful for her.\"\n\nGabe saw how serious the other woman was.\n\n\"I'm going to go see if we can make our girl a little more comfortable,\" she said and went in to the hospital room.\n\nGabe, Andy, Joanne and April stood in the hallway. Everyone looked shell-shocked.\n\n\"We never thought she would get this bad,\" Joanne said softly. \"She's complained about the pain for a while, but we never had to bring her to the hospital.\"\n\n\"Why would she think you were going to give her a hysterectomy?\" Gabriel asked.\n\nAndy looked away. \"That was my fault. I was talking to Dr. Chapman and we thought Bailey was asleep. We were discussing options and she said unless they do something soon, the pain is only going to get worse. Removing her ovaries or um . . . uterus . . . are only last-resort type things. We should have gone out in the hallway, but she heard us and freaked out. That's when she started screaming for you.\"\n\n\"Are there any other options?\"\n\n\"No good ones. Bailey's been taking prescription ibuprofen for a while, but that tears up her stomach. We've talked about surgery a couple of times . . . but . . .\" Joanne's voice trailed off and she looked embarrassed. \"It's so expensive.\"\n\n\"Not any more,\" Gabe said, his voice hardening. He hated seeing someone he loved so dearly in pain. He wrung his hands for just a second as he made his decision. \"Andy . . . Joanne . . . I would like your blessing to ask Bailey for her hand in marriage.\"\n\nThe pair of them looked shocked. April's jaw nearly hit the floor. \n\n\"I'll take care of her,\" he promised desperately. \"You know how much I love her. I can provide for her. She means the world to me . . . and I don't want to lose her.\"\n\n\"We know, Gabriel,\" Joanne said. She reached out and took his hands. \"When you showed up at the house on prom night, a part of me knew you were going to be in her life forever.\"\n\nThere was a sad look in Andy's eyes. He tried to smile, but he knew Bailey had already given her heart away. Gabriel reached out, but instead of taking his hand, Andy pulled him into a hug. Both men wiped tears from their eyes. Then it was April's turn to embrace her future brother-in-law.\n\n\"You're my baby girl's dream come true,\" Andy said softly. \"And I know you'll always be good to her.\"\n\n\"I will,\" Gabe promised. \"I swear to God, I will.\"\n\n\"Then welcome to the family.\" \n\n************* \n\nBailey had surgery the next day and didn't find out until years later that Gabriel had paid the bill. Dr. Chapman removed most of the scar tissue around her fallopian tubes, uterus and ovaries. She spent the next month convalescing at Gabe's house, her longest stretch ever without going home. He never left her side.\n\nThe show had gone on Christmas break so he wasn't missing too much production. When it returned, he told them that he needed some more time off. Rose and the other writers were very creative in explaining his absence and the producers assured him he would have a place when he decided to return.\n\nGabriel swore the family to secrecy and didn't mention getting married to Bailey; he wanted things to be perfect. \n\nHe waited on her hand and foot around the house. April was working and going to school. Bailey received special dispensation from the dean of students for a late spring registration and signed up for all on-line classes (Thanks again, Al Gore!).\n\nWhen she could get up and move around again, Bailey went back to her work-study job but had to give up waitressing. She switched to the birth control pills that have only four periods a year and for the first time in a long while, she was generally pain free. \n\nGabe hated to, but he returned to New York for a month of shooting before taking off again in February. After confiding his plans with Joanne, Gabriel flew everyone to Florida for a long weekend.\n\nThey told Andy that Gabe wanted to propose to Bailey at Disney World and they told Bailey they were surprising her dad with a trip to Florida and the Daytona 500.\n\nThe five of them had a nice dinner at the California Grille on a Friday night. Thanks to a phone call from the studio, they had some prime seats from the top of the Contemporary Resort to watch the sun set and then view the fireworks in the Magic Kingdom.\n\nHe fidgeted nervously throughout the meal. Bailey simply thought she had died and gone to Heaven. They were staying at the Grand Floridian, which was nothing but pure luxury. The food was exquisite and as far as she knew, she would be spending the next day in Disney World.\n\n\"Having a good time, Pumpkin?\" her dad asked.\n\n\"Oh, yes!\" Bailey could barely contain her excitement. \n\nThe five of them talked until the fireworks started, then they all went outside on the catwalk, their meal on hold. With the music piped in to the restaurant, Gabe stood behind Bailey and held her in his arms. She leaned back. He felt as if he were meant to hold this woman for the rest of his life.\n\nWhen the fireworks were over, the rest of the crowd filed back in to the restaurant, but neither Gabe nor Bailey was in a rush. \n\n\"I love you, Bailey Crawford,\" he whispered in her ear.\n\n\"I love you, too, Gabe MacKenzie,\" she replied automatically. \"Thank you for this trip. It's been wonderful and I know Daddy's going to have a great time at the race on Sunday.\"\n\n\"He sure will,\" Gabe said, not letting go. \"But that's not the real reason I brought you here.\"\n\n\"What do you mean?\"\n\nHe took a deep breath before reaching into his pocket. Her eyes were wide when she realised what he held in his hand.\n\nWith his arms still around her, he opened the small box. The diamonds and white gold shone under the moonlight. Gabe could feel her pulse race.\n\n\"When your mom called me back before Christmas, I thought I'd lost you,\" he said softly. \"I can't stand the thought of not having you in my life. I want to be near you all the time. Bailey . . . Will you marry me?\"\n\nHer fingernails dug into his arm, but Gabe didn't care. When she somehow found the motor coordination required to move, Bailey turned and threw her arms around him. She didn't speak. She couldn't speak.\n\nInstead she just kissed him. It was a hard, passionate, sloppy, delicious kiss.\n\nThey both started to cry. Tears of joy streamed down their cheeks.\n\nGabe pulled back long enough to take the ring from her and slip it on her finger. When some of the other people around them realised what was going on, they started to clap and cheer. \n\nThey each paused long enough to embrace the rest of her family before returning to each other. When the meal was over, they returned to their rooms at the hotel. Gabe and Bailey made love until they both passed out.\n\nThe next day it was off to see the Magic Kingdom and the Daytona 500 on Sunday. Gabe was obligated to attend some of the TV network's functions, but he didn't mind. After all, that was how he was paying for the trip. Andy was amazed at finally being able to attend the Daytona 500 in person. They had box seats, and he was like a kid in a candy store. Or rather, a motorhead gone straight to a Heaven filled with muscle cars, Holly double pumpers and the deep, throaty rumble of big American V-8 engines.\n\nDespite all the sucking up he did to her parents, Gabe knew it was Bailey who was floating along with her head in the clouds. For the remainder of the weekend, they held hands. Bailey's eyes kept falling on the ring, and not just because the rock was huge.\n\nGabe knew that there was a part of her that never thought she would see this day. She was always the ugly duckling next to her sister. But he saw her for who she was, and once she came to believe it, too, the beauty outside matched the beauty on her inside.\n\nHe introduced her to everyone, proudly proclaiming her as his fianc\u00e9e, which he knew would cause a minor stir in the press back in New York. They posed for pictures and in each one, Bailey was radiant. She truly was Cinderella at the ball, only this time the clock was stuck on 11:59.\n\nThe weekend ended with a private jet flight home. They had a gazillion pictures from the weekend, if only to prove to all their friends back in Washington County that it had really happened. The news of their engagement had beaten them back and the local TV cameras were at the airport to greet them.\n\nBailey was overwhelmed by the attention, as was her family. But they handled it well and soon enough they went back to their daily lives. Only now they had a wedding to plan.\n\nReluctantly, Gabe returned to New York. The distance was something neither of them wanted, but they accepted it as a temporary condition. Bailey had two and a half months left before she finishing her AA degree. They were planning a fall wedding and she was going to move to New York and enroll at City College.\n\nIt would be the first time she would be living away separately from April, and Gabe knew that would be hard on the twins. But they both knew that day was coming and they were accepting of the coming change.\n\nThey continued their long-distance relationship. Although it pained them to be apart, they saw the light at the end of the tunnel and knew in a short while, they would be together forever.\n\n************ \n\n\"Is your dad coming to the wedding?\" Bailey asked from the kitchen table.\n\nGabe snorted. \"No. He won't be able to make it.\"\n\nIt was the end of summer. Most of the wedding plans were finished and she was working on the final guest list so they could get a head count for the caterer. He was paying bills.\n\n\"Did you send him an invitation?\"\n\n\"No.\"\n\nLooking up, Bailey gave her fianc\u00e9e a cross look. \"Why not?\"\n\n\"Because even if he could make it, I don't want him there.\"\n\nShe was at a loss for words. Even though she knew Gabriel and his dad weren't close, she assumed he would be invited to the wedding. \"It can't be that bad.\"\n\n\"You don't know my father,\" Gabe said. He sounded annoyed, but she knew it wasn't because of her.\n\n\"You never talk about him.\"\n\n\"That's because he's a worthless sack of shit,\" he spat and Bailey was taken aback at the vitriol in his voice. A couple of times, she had asked about Gabe's dad, but his replies were always cryptic or vague.\n\nThey fell silent for a long time. Bailey watched Gabe stew, knowing that he'd open up once he had a minute to gather his thoughts.\n\n\"Dad left us high and dry,\" Gabe said finally. His voice was soft. And angry. \"He ran out on us and left Mom to raise two kids on her own. We didn't hear from him for almost ten years. And when he did call, he was always wanting something. He showed up one night after a show and just expected me to let him mooch off me. He pulled that same shit with Michael.\"\n\n\"He's still your father,\" she said quietly. Bailey knew they came from different worlds. In hers, family was the most important thing there was. She was close to her parents and sister, even her cousins. She knew Gabe adored his mother and loved his brother, so the thought that he could turn his back on his father seemed alien to her.\n\n\"He never acted like it.\" All Gabe could do was frown. There was a crease in his brow Bailey had never seen before and she hoped never to be on the receiving end of his fury. \"If you ever meet him, there's a good chance that within five minutes he's going to ask you for something. It might be for some money to invest in his latest scheme or it might be a 'loan'. He's always looking for a handout. I tried to help him a couple of times, but he just used me.\"\n\n\"When was the last time you saw him?\"\n\nGabriel shrugged. \"Five, maybe six years ago.\"\n\n\"Do you think he might have changed?\"\n\n\"I doubt it.\"\n\n\"I think we should at least invite him to the wedding,\" Bailey said.\n\nTaking a deep breath, Gabe forced himself to smile. He saw that she meant well. \"Honey, if it makes you feel better, send him an invitation, but unless you want to get married around the Grand Canyon, my father won't be at our wedding.\"\n\n\"Why not?\"\n\n\"Because last I checked, he was a 'guest' of the Arizona Department of Corrections in Phoenix.\" He took her hands. \"I don't expect you to understand, but I don't want my father in my life right now. He's trouble. If you want, I'll take you to meet him, but I don't want him under my roof and I won't let him spend any time alone with you or any of our children. Ever. I just don't trust him.\"\n\nBailey's eyes were wide. She was speechless. He went back to the bills and she sat there watching him for a long time. Despite his bravado, she could see the hurt in his eyes. Her heart broke for him. Her family was so strong and his was so broken. She reached out and took his hand, holding it to let him know that she was there for him, and that he would never be without her love.\n\n************ \n\nIn the weeks before the wedding, Gabe came home to visit and sat her down at the kitchen table one morning. The date was fast approaching and he was trying to get home to her as often as he could, but she still felt like she had a million things to do before the big day.\n\n\"I have something for you to look at,\" he said. \"Don't get so excited, sweetheart; you're not going to like it.\"\n\n\"I'm sure I'll like anything you give me,\" she replied.\n\n\"Not this.\" He drew out a thick envelope. A stack of papers fell out and he set it on the table.\n\n\"What's that?\" Bailey asked.\n\n\"A pre-nuptial agreement.\" The words hung over them for a long moment. ",
        "Bailey felt like he had slapped her. Her heart started to race. It took her a moment to form the words. \"What for?\"\n\nA sadness flashed across his eyes. It was as if he hated to even bring it up. \n\n\"I want you to take this to a lawyer or two and have them look at it,\" he said softly, knowing she was on the verge of slugging him.\n\n\"What if I refuse to sign it?\" she dared to ask.\n\nGabriel took a deep breath. He looked like he was going to be sick. Still, he said the words anyway. \"This is a showstopper, sweetheart. Please . . . take it to a lawyer and have them go over it with you. I'm sorry, but this is something I have to do.\"\n\nDazed, Bailey sat at the kitchen table staring at the document. \n\nFor the first\u2014and last\u2014time, she doubted Gabriel's love for her. \n\nNumbly, she picked it up and drove home to see her parents. They went to see her lawyer/insurance agent and waited for the other shoe to drop.\n\nThey sat in silence as the minutes ticked away.\n\n\"This is the craziest damn thing I've ever seen,\" he said after a long time.\n\n\"What do you mean, Freddie?\" her father sounded concerned. They had gone to high school together and their families had always been close.\n\n\"If he were my client, there's not a chance in hell that I'd ever let him sign this thing.\" The lawyer shook his head and tossed his glasses on to the thick stack of paper.\n\n\"Why not?\" Bailey asked.\n\n\"Young lady, do you know what the purpose of a pre-nuptial agreement is?\"\n\n\"To keep gold diggers from cleaning someone out.\" There was a bit of a harsh edge in her voice.\n\n\"Essentially, yes.\" Freddie said. \"Do you know why he would want you to sign this?\"\n\nBailey thought for a second, not liking the answer that kept coming up. \"He thinks I'm after his money.\"\n\n\"Do you know why he would think that?\"\n\nShe just shrugged.\n\nThe lawyer reached for a folder on his desk. \"When I found out you were engaged, I did some research and checked out your boyfriend. When you showed up here today, I won a hundred bucks from the other lawyer across the street.\"\n\nHe turned the folder around and Bailey's eyes nearly popped out of her skull. It was filled with pictures and news articles, all dealing with Gabriel and Jeannie MacKenzie, as well as a few court documents including what looked like a divorce decree and bankruptcy filing.\n\n\"His first wife cleaned him out,\" Freddie said. \"Not only did she take almost all of his money, but she left him with a mountain of debt that took about four years for him to get clear of. That's why he's being so cautious. Pre-nups protect the wealthier party from being preyed upon by the other. Tell me, Bailey, aside from your personal belongings\u2014clothes, jewelry and all that\u2014what do you own?\"\n\nShe came up blank.\n\n\"Right now, you own a 1970 Buick Skylark Gran Sport convertible\u2014and a mighty nice one at that\u2014but you essentially have nothing,\" he continued. \"You are contributing no assets to the marriage. What do you think your fianc\u00e9e is worth? Give me a ballpark figure. Andy? Joanne? Anyone got a guess?\"\n\nThere were no takers.\n\n\"All of his assets are listed right here: stocks, IRAs, pension fund, the house in the city, cars, cash . . . you name it. How much do you think he's got?\" Freddie flipped through the document to one of the pages he had tabbed. Pointing to the bottom line, he said, \"Gabriel MacKenzie's net worth is around eleven million. He's worked a lot, made some smart investments and it doesn't look like he really spends a lot of money. You may think he's spent the last two years doing nothing, but he and his financial advisor have done some really smart things and made a ton of dough. He doesn't have any vices . . . no drugs, no gambling, no whoring . . . none of the usual stuff you'd expect to see on the E! True Hollywood Story. Plus, he socked away a lot of his money in his mother's name so his wife couldn't spend it, and he got it back when she died. Smart guy.\"\n\n\"So he wants to protect what he's got?\" Andy had a puzzled look on his face.\n\n\"That the thing,\" Freddie's voice trailed off for a second. \"Most pre-nups preserve the relative wealth of each party in the event that the marriage dissolves. Let's say Gabriel has seventy percent of the assets and Bailey has thirty when they get married. If they got a divorce, they would divvy up their assets accordingly. So unless you won the lottery or made a bunch of money, to make a long story short, he'd get more than you in the settlement.\"\n\n\"So why would you advise him not to sign this?\" Bailey breathed.\n\n\"For the first five years, it's a pretty standard pre-nup. You waive claim to any of the assets he brings into the marriage and vice-versa. Meaning that car of yours stays yours. Any of the money made or assets gained\u2014regardless of who the earner is\u2014while you are married would be divided 50/50. It's all here in legalese, but that's essentially what it says,\" Freddie put his glasses back on and flipped to another tab. \"Then we get to the interesting part. After five years, you, Bailey, are specifically entitled to an increasing share of his wealth. This is why his lawyer probably went nuts. Most of the time, this is the stuff people fight about for months on end. It makes people like me very rich with lots of billable hours, but it's never written up this way from the beginning.\"\n\n\"Why not?\"\n\n\"Because if you're a gold digger, he's essentially inviting you to divorce him after five years,\" Freddie said. The jaws on all the Crawfords dropped. \"Oh, it gets better. If you make it to ten years, you are fully entitled to half of his assets going in to the marriage. He's making it very easy for you to clean him out before you turn thirty. That's why if I were his lawyer, I'd either walk away or make him sign a big stack of 'against professional advice' forms before drafting this thing.\"\n\nBailey sat back in her chair, shocked.\n\n\"The only thing you specifically waive any claim on is his apartment in New York,\" the other man said. \"It probably has something to do with keeping his rent subsidy. Of the rest . . . You could take him for everything else if you wanted, including that house you're living in, his retirement and a four thousand square foot 'cabin' out in Lake Tahoe.\"\n\nThe four sat in silence for a few moments.\n\n\"Bailey . . . I'm going to say this as your friend, not your lawyer. I think he's head over heels in love with you. The way this thing is built, he's protecting himself if you do turn out to be someone who's just after him to make a quick buck. But down the road . . . he's exposing himself to the potential for a financial catastrophe. He's betting that you're really in it for love. Even if you decide to leave him in a few years, he's willing to spell out the ways he's going to take care of you now rather than let a divorce court do it down the road, where he would probably win.\"\n\n\"What about kids?\" she asked. \"What does it say about our children?\"\n\n\"Pre-nups don't cover children,\" Freddie shook his head. \"The courts have consistently thrown out pre-nuptial custody agreements since the court considers the welfare of the children first, financial and other considerations second and those interests cannot be considered before the children are born.\"\n\n\"You think I should sign it,\" Bailey said. It wasn't a question.\n\n\"Hell. Yes. And that's speaking as your lawyer,\" Freddie replied. \"Gabriel is looking out for you on this one. He's doing a smart thing in protecting himself in the short term, but down the road, you're coming out the winner.\"\n\n************ \n\n\"I, Bailey Dawn Crawford, take you, Gabriel Jonathan MacKenzie, to be my lawfully wedded husband. To have and to hold, in sickness and in health, for richer and poorer, as long as we both shall live. I promise to be your partner and your spouse. I will seek comfort in you and lend you my strength. I give you my heart and my body and my soul. I will love you without reservation and I will accept your unconditional love. I will be your devoted and faithful wife for ever and ever.\"\n\nAs she said the words, Bailey felt a peace come over her. She looked into Gabe's eyes and saw his love for her. \n\nEverything else faded away: the minister, her sister and her parents, their families and the church that was packed to the gills. All she saw was Gabriel. Her angel. Her husband.\n\nHer hands shook as she placed the ring on his finger.\n\nShe didn't remember the rest of the ceremony. All she knew was that when it was over, the minister announced them as \"Mr. and Mrs. Gabriel MacKenzie.\"\n\nThe wedding was the biggest thing to hit Washington County since the Blizzard of '96. They had the ceremony in her hometown because Gabe knew how important it was to her for all of her family and friends to be there. It was also a whole lot less expensive than having it in New York.\n\nWhen they started planning, Gabe and Bailey told her parents in no uncertain terms that they were footing the bill for their own wedding. He had more than enough money to cover things; Andy and Joanne did not. Instead, they said that any money her folks were going to spend should be put into a trust fund for their grandchildren. As a point of pride, Andy insisted on paying for the rehearsal dinner and covering some of the minor expenses.\n\nGabe and Bailey settled on a reasonable budget and then he turned her loose. Bailey made sure to use as many local vendors as possible and since she was related to or familiar with most of them, she found that many things were either discounted or comped outright. She didn't even mind paying more at the florist or for invitations because it meant that the money would be staying in Washington County, not going to some shop in the city or across the country.\n\nIt was officially the biggest party ever held in the county. Aside from the visiting celebs from The Sun Also Sets and the fact that half the county was invited, it turned out to be a de facto holiday. They got married in her church but had to hold the reception at an old plantation house that doubled as the Women's Club, a nice restaurant and sometimes hosted meetings for the United Steelworkers Local 1394.\n\nThe reception was outdoors and the weather was just right. They were up to their eyeballs in food and guests. Bailey wanted everyone to have a good time and spared no expense. Still, she came in under the budget she and Gabe had set.\n\nChuck and Michael were Gabe's groomsmen. Bailey had April and Kimmy stand up for her. Morgan was away at aviation electronics school, but sent her love anyway.\n\nAs far as Bailey was concerned, the wedding was perfect. Her dress was elegant but not ostentatious. Her mother's best friend did her hair and make-up. The only job Gabe insisted on filling himself was the photographer. They took pictures separately before the ceremony and together afterwards.\n\nGabriel looked so handsome, even next to his brother. She danced first with her husband, then with her father, but she only had eyes for Gabe.\n\nThey cut the cake, did the garter belt thing and bouquet toss. As it was meant to be, Bailey was the center of attention and she loved it. She stopped feeling self-conscious about her big boobs, not-so-flat belly and her round hips. She wasn't hiding behind her bangs or under over-sized sweatshirts anymore. She felt beautiful because to the one person in the world whose opinion mattered most, she was.\n\nAs they drove off in the limo, Bailey took her husband's hand and kissed him. \"I love you, Gabe MacKenzie.\"\n\nHis hands cupped her face and he pulled her to him. She felt lightheaded as his lips met hers. He gave her a succession of soft pecks. \"And I love you, Bailey MacKenzie.\"\n\nShe giggled, loving the way her new name sounded.\n\nIt was dark when they left the reception, and by all indications, the party was still going strong. They drove back to his mother's house\u2014their house\u2014and necked in the limo. Bailey was a little buzzed on the champagne at the reception.\n\nWhen they arrived home, the driver got out, handed Gabriel a package and left them there. Chuck had a check to cover the expenses at the reception and arrangements had been made to bring all of their gifts and stuff up to the house the next day.\n\n\"I've got something for you,\" Bailey said with a seductive look in her eyes.\n\n\"And I've got something for you, too.\" They kissed once more as the limo drove off.\n\nGabriel took her hand and they went inside. She wanted to jump him, but Gabe seemed like he was up to something. To be fair, she had a surprise of her own planned.\n\nThey went into the kitchen and Gabe set his package down on the table. Then opened the fridge and found a bottle of champagne and two flutes. After popping the cork, he poured them each a glass.\n\n\"To us.\" The crystal flutes clinked together.\n\nShe downed hers in one swallow and Gabe filled her glass again. She batted her eyes at him and did her best Scarlett O'Hara. \"Are you trying to get me drunk so you can take advantage of me, Mr. MacKenzie?\"\n\n\"Why yes I am, Miss Bailey,\" he said in a much better Rhett Butler.\n\n\"Well I do declare,\" she slurred. \"My husband had best not find out about this. I am a married woman, you know.\"\n\nThey both giggled and she kissed him eagerly. She started to nibble on his lip when he pulled away.\n\nBailey let out a disappointed sigh which quickly turned to curiosity when Gabe pushed the wrapped package towards her. She raised her eyebrow but he said nothing.\n\nSlipping the wrapping paper off, she opened the box and found a photo album. Thumbing through the pages, she saw a gazillion pictures from earlier in the day. There were none from the reception, but everything at the church.\n\nShe marveled at how handsome her husband was. \n\n\"Who took these?\"\n\n\"My photographers,\" Gabe said with a wry smile.\n\nBailey spent the next several minutes flipping through the album. When she got to the last page, she found a card with her name on it. She slipped the envelope open and a check fell out.\n\nHer eyes widened in disbelief.\n\n\"What the hell is this?\"\n\n\"My wedding gift to you,\" he said and took her in his arms. \n\nTry as she might, her mouth wouldn't form any words.\n\n\"I sold exclusive rights to our wedding photos to one of those celebrity-chaser magazines. I may be buried somewhere near the bottom of the C-list, but there's still someone out there willing to pay for pictures of our wedding.\" He kissed her hungrily. \"It's not Brangelina or Tom-Kat money, but it's better than nothing.\"\n\n\"Better than nothing\", my ass! Bailey thought. This is more than my parents make in a year!\n\nPlus, they were taken by professionals and came out amazing.\n\nBailey was eager to kiss him back. His hands went to her backside and she pulled back. She had something planned and needed to calm herself down before her lust took over.\n\n\"Go into the bedroom and wait a minute for me,\" she said seductively. \"And put your bow tie back on. I love a man in a tuxedo.\"\n\nWith a wink, she retreated into the guest suite to change, fully aware of her husband's eyes on her backside as she walked away.\n\n************ \n\nGabriel lit some candles around the bedroom and turned the sheets down on the bed. He was the luckiest guy in the world. He was married to the most beautiful woman God ever placed in His creation and had found love again.\n\nThe minutes passed slowly, but soon enough he heard Bailey approach. He turned his head and saw his bride standing in the doorway.\n\nHis cock jerked in his pants. His eyes got wide. His heart started to pound.\n\nIlluminated in the soft glow of the candles, Bailey had changed from her bridal gown into his dream wedding dress. She wore a white cupless corset. Her breasts were exposed for him to see, their nipples pointing right out at him. A lace garter belt held up thigh-high stockings.\n\nShe wore no panties over her freshly-shaved pussy. His eyes ran down her body. Over her soft, round hips. Past her shapely legs to her high-heels. \n\nThen back up, lingering on her breasts. A heart-shaped white gold pendant hung from a lace choker. Her hair was still pulled back, but Bailey had put on a thin veil that fell down past her shoulders.\n\nIn her hands, Bailey held a small bouquet of flowers. She stood there expectantly, a far cry from the shy girl Gabe met almost a year and a half before.\n\n\"You are so beautiful,\" he said once he found his voice. Bailey blushed.\n\nGabe walked over to where she stood. He walked around her one time, his eyes devouring her form.\n\nWith one motion, he picked her up and cradled her in his arms. She kissed him right behind the ear and he stepped over the threshold into their bedroom. Carrying her the short distance across the room, he set her down on the edge of the bed.\n\nShe surprised him by standing. Placing the flowers on the nightstand, she took his hands and looked into his eyes.\n\nHer big brown orbs were filled with love. She smiled contentedly.\n\n\"I, Bailey Dawn Crawford, take you, Gabriel Jonathan MacKenzie, to be my husband. I will be your loving wife, your gourmet chef, your steady business partner and your willing whore. I promise not to nag you or ask you to run an errand during a football game. Oh, and the blowjobs don't stop now that we're married. We're going to fuck like rabbits and I'm going to bear your children. I'm going to grow old with you and I will love you every day for the rest of my life.\"\n\nThe pair of them laughed. Gabe brought his wife's hands to his lips and he kissed them.\n\n\"I, Gabriel Jonathan MacKenzie, take you, Bailey Dawn Crawford, to be my wife. I will be your strength and your light. I will not take you for granted when times are good, and I will not shut down and withdraw when things get bad. Every day, I will tell you two things: that I love you and that you are the most beautiful woman in the world. I will be your loving husband, the father of your children and I will grow old with you. I promise lots of foreplay, cuddling and I will never ask you for a threesome.\"\n\nGabe took his wife in his arms. They kissed, softly at first, then more passionately. His hands roamed her body. His fingertips left a trail of goosebumps all over her body.\n\nShe made no move to undress him. Apparently, she was really turned on by a man in a tuxedo!\n\nHis hands cupped her ass and he lifted her back up on the bed. Her eyes were level with his.\n\nBailey moaned as he kissed across her face to her ear. She gasped when he hit that spot just right. \n\nUsing his tongue, Gabe traced the nerve that runs down the side of her neck causing her to squeal with delight.\n\nAll the while, he kneaded her breasts. They were so big. So soft. When he rolled her nipples between his fingers, she thrust her chest forward and had to bite her lip to keep from screaming. \n\nGabe's lips sucked on her collarbone, just as she liked. Then he kissed his way into the valley between her breasts. Bailey's fingers ran through his hair and she pulled him into her cleavage.\n\n\"Oh, god, Gabe,\" she moaned. \"That feels so good.\"\n\nHe suckled on her nipples for a long time. When he wasn't kissing one of her breasts, he was squeezing or pressing his palm against it.\n\n\"I'm gonna fuck your brains out tonight,\" she promised.\n\n\"Not before I eat you out,\" Gabe countered.\n\nBailey giggled. \"Then get eating because I need some wedding night cock!\"\n\nHe couldn't help it. Gabriel burst out laughing. It was the kind of rich, hearty laughter that was shared among friends and lovers. He knew Bailey was a cheap date, and she had easily consumed enough champagne to be flying like a kite.\n\nBut in her eyes, he saw the corner of her heart that was reserved specifically for him. Her face was flush with excitement. As was the rest of her. Bailey's nipples were crinkled up and her labia were swollen in anticipation.",
        "\"I love you, Gabriel,\" she purred.\n\nThey kissed again. \"I love you, too, Bailey.\"\n\nShe hiccupped, but was too drunk to be embarrassed. Her inhibitions were gone. \"Gabe . . . what if I want that threesome?\"\n\nBefore he could respond, she kissed him again, unfazed. Gabe put her words aside in his mind, knowing that it was probably just the buzz talking. Still, it got his heart pounding just a little bit harder.\n\nBailey lay back and Gabe resumed his journey down her body. With her legs hanging over the side of the bed, she spread her pussy for her husband. \n\nGabe started by kissing the insides of her thighs. He bit her gently. She squirmed.\n\nBringing his fingers into play, Gabriel entered her easily. Soon he was kneeling on the floor and he began to piston his fingers in and out of her.\n\n\"Oh, fuck!\" she cried out.\n\nHe could smell her excitement. He inhaled her scent.\n\nFlicking his tongue against her, Gabe massaged her engorged clit. His fingers worked her pussy at the same time.\n\n\"I love it when you eat me,\" Bailey sighed.\n\nShe arched her back when drew her into his mouth with is lips.\n\nBailey was reduced to a quivering mass of flesh as Gabriel worked her over. \n\nHer fingernails dug into his scalp. She thrust her hips forward into his mouth.\n\n\"Right there!\" she screamed. \"Right . . . fucking . . . there!\"\n\nGabe continued with a full head of steam, taking his wife on that one way trip to ecstasy.\n\nUnable to speak, Bailey mumbled and groaned. Her legs crossed behind his back, it seemed that she was trying to pull his head into her pussy.\n\nStill, he didn't stop. Alternating his tempo, Gabe never let up.\n\nHis eyes looked up, but all he could see was her breasts heaving. She was thrashing about on the bed.\n\n\"Don't . . . stop . . . don't . . .\" \n\nHer voice trailed off and he felt her body tense. She tried to sit up and her legs drew him closer.\n\nGabriel's tongue never stopped moving. If anything, he worked faster and harder. His intensity never wavered.\n\nSuddenly, Bailey threw herself back into the bed. She let loose with an ear-shattering scream and he felt her pussy flood with warmth around his fingers.\n\nHer breaths came faster and deeper. Her hands pulled his hair so hard it was painful.\n\n\"I'm cum . . . I'm cumming!\" she shouted. \"Oh, god, Gabe . . . eat me!\"\n\nBailey's cries devolved into an unintelligible stream. Then, with one final breath, she fell limp.\n\nGabe lapped at her for a few more moments, but her body stopped moving. Stopped responding.\n\nHe smiled to himself, satisfied at having pleasured her on their wedding night. Bailey's chest rose and fell rhythmically. \n\nStanding, he checked to make sure she was okay. Her eyes had rolled back into her head. Kissing her on the cheek, Gabe went to the closet and hung his tuxedo up. He didn't bother to dress.\n\nBailey was still passed out on the bed. Between the orgasm and the champagne, she was probably done for the night.\n\nThat was okay; Gabriel just wanted to hold her. Taking great care not to wake her, Gabe slowly undressed Bailey. He set her clothes in the chair next to the bed.\n\nShe was snoring softly.\n\nIn the soft light, Gabe watched her sleep for a few minutes. He brushed the hair out of her face and she smiled in her sleep. Bending over, Gabe kissed her dimpled cheek before blowing out the candles.\n\nHer body felt so soft. After rolling Bailey on to her side, Gabe spooned up behind her. He found that his cock was hard, so he slipped it between her legs. Her pussy was so slick he entered her easily.\n\nHe cupped her breasts in his hands and kissed the back of her neck. Gabriel fell asleep inside her a little while later. \n\nMore than the physical pleasure she brought him, Bailey returned the love to his life. The emptiness was gone. The loneliness forgotten.\n\nTheir lives weren't perfect, but Gabe felt complete. He knew their marriage was going to take a lot of effort and work, yet he looked forward to sharing his life with this woman. Half his age. From a different world. An ugly duckling turned swan. Built to hold him and made to be held by him.\n\nThat night, both dreamed of their future. Of children and vacations and fights and sex and most of all, of love.\n\n************ \n\nEpilogue\n\nThe next morning, Bailey woke Gabriel with an enthusiastic blowjob to make up for passing out on their wedding night. They made love long and slow to fully consummate their marriage.\n\nThen it was time to move on to the next chapter of their lives.\n\nWhen her initial enlistment was complete, Morgan re-upped and stayed in the Navy. She retired with thirty-one years of service; her final duty station was as Command Master Chief of the USS Enterprise. Though she was often far from her home and friends, she was a constant in Gabe and Bailey's lives. Navy life was tough on her personally; she was married and divorced twice but had two darling children who adored their Aunt Bailey and Uncle Gabe.\n\nKimmy's promiscuous lifestyle eventually caught up with her. Excessive drinking and experimenting with drugs led to lots of unprotected sex which resulted in her contracting HIV after a night she didn't even remember. Thanks to friends who wouldn't give up on her, she got sober, went back to school and helped start a local women's shelter in Washington County. She died at the age of thirty-six, much too young for someone with so much promise.\n\nAfter twenty-one years of marriage, Michael's wife filed for divorce. They were empty-nesters and with the children out of the house, she decided that she no longer wanted to be married. Their split was amicable; there was no infidelity, but in reality, they had basically been living separate lives for the last six or eight years anyway. Michael retired from his job as a CPA, married an old girlfriend from college and became executive director of a non-profit foundation that helps single teenage mothers finish their high school educations and either go to college or find a job. \n\nChuck and Teri were always there for the newlyweds. Teri ended up leaving show business when her kids started school. She couldn't keep up with their schedules and working on Broadway at the same time. After a couple of years of staying home, she started working as an agent, with a stable of several high-profile Broadway actors and television personalities. Chuck remained Gabriel's closest friend and became the big brother Bailey never had.\n\nSeveral years after Bailey's wedding, Andy and Joanne retired, mostly due to his heart. They moved into Gabe and Bailey's house because it was closer to the doctors. He\u2014and the high-powered rifle Gabe bought for him\u2014took great pride in scaring off many of April's potential suitors, all of whom were worthless; Gabe had spoiled Andy on future sons-in-law. After receiving a pacemaker, Andy became the doting grandfather and Joanne the family matriarch. \n\nGabe never saw his father again. He finished serving his time for drug smuggling in Arizona and then wandered around the country for a while. While running a scam in Miami, he was gunned down in a gang shootout. \n\nDespite years of trying, Bailey was never able to get pregnant due to the endometriosis. She was heartbroken, so April stepped in. Because that's what twin sisters do. On their fifth anniversary, April offered her womb to her sister and her brother-in-law. After two in-vitro tries (Gabe jokingly pushed for doing it the old-fashioned way; Bailey wasn't quite so amused), April bore her sister twins, a boy and a girl. \n\nWhile she was pregnant and visiting Gabe and Bailey in New York, April was spotted by a talent scout. Enamoured by her raw beauty, he talked her into doing some photo shoots for maternity magazines. Even after giving birth to the babies, she did some more modeling but soon left the business, disillusioned and jaded at big city life. Aside from making a fair amount of money, the one thing she kept from her time in New York was a husband. They moved into the family house in Washington County where she taught elementary school and her husband managed a technology website. She hyphenated her last name and passed it on to her children so the Crawford family wouldn't disappear.\n\nThat leads us to Bailey and Gabriel. After the wedding, they moved to New York where he continued his run on The Sun Also Sets. Jeffrey and Celeste retired a few years later; the show continued on for a few more seasons, but was eventually cancelled as the rest of the cast struck out on their own and went their separate ways. Gabe continued to perform on Broadway for a while, but essentially retired once Bailey went back to work. He stayed home with their children and let his wife pursue her career.\n\nBailey finished her degree at City College of New York, but she gave up her dreams of being a nurse. With Gabe's encouragement, and knowing they had the money for school, she enrolled in the pre-med program and graduated a semester after her sister. She finished med school right after the twins were born and joined a private practice on a part-time basis until Gabe left showbiz. For the rest of her life, despite her husband's insistence to the contrary, she signed her name not as Dr. Bailey MacKenzie, but as Mrs. Gabriel MacKenzie. It seemed she was a little old-fashioned, too.\n\nIn keeping with the alphabet theme, they named their children Corey and Danielle (April's children were Erin, Faye and Gavin). When the twins started middle school, Gabe and Bailey moved home. She wanted to be closer to her family\u2014especially with her father's health failing\u2014and Gabriel had tired of New York. They moved back into their house, sharing it with her parents. That was an odd experience for Gabe, but to the folks from Washington County, it seemed pretty normal.\n\nThe years were kind to them. In his spare time, Gabe volunteered for Habitat for Humanity and the Cold Nights Shelter. He taught some acting classes at the university, but mostly threw himself into raising their children. He vowed to be the kind of father his was not. Bailey received a grant to provide health care to poor rural families who could not afford health insurance and spent her career working out of small backwoods clinics and making house calls.\n\nAs he promised, every day Gabe told Bailey how much he loved her and how beautiful she was. Even after joining AARP, they held hands everywhere they went and became \"that cute, sweet couple\". Their friends were envious\u2014and a little jealous\u2014of the love they shared. \n\nFor the rest of their lives, they never celebrated their wedding anniversary. Instead, on the third Saturday night in May, they dressed up and went out for prom.\n\nAs the soap opera that was their lives unfolded, from one small corner of Heaven, Libby MacKenzie looked down on her growing family. Though she had to wait a little while longer to hold her sons again, she knew she had done right by them. Michael and Gabriel had become responsible husbands, loving fathers and good men. All of her sacrifices, all of her love, everything she had given up for them. It was all worth it.\n\nShe knew because her boys's namesakes told her so."
    ],
    "authorname": "HLD",
    "tags": [
        "drama"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/life-is-a-soap-opera-act-03"
}