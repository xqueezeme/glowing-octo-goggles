{
    "title": "Mr. Worthington's Writer's Block",
    "pages": [
        "*Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\n*****\n\nNatalie Broussard walked down the street with her friend Latasha Weems. The two eighteen year old girls were bored; it was a blistering hot day in early June, with nowhere to go and nothing to do.\n\nNatalie was short, barely scraping five feet but was also slightly chubby, weighing one hundred and thirty pounds. She had a sweet, almost angelic face, long strawberry blonde hair, and wide blue eyes.\n\nLatasha also weighed one hundred and thirty pounds, but she stood five feet, nine inches tall. She kept her brown hair cut very short and she stared hatefully at the world through piggish brown eyes.\n\nThey saw that the old Charles' house had sold; Mr. Charles had lost his job. After a few months, the house had been foreclosed on and their friend, Brianna Charles had been evicted.\n\nThe new owner or owners had planted some colorful flowers along the walkway, so Latasha walked up and savagely kicked at some of the buds.\n\nNatalie giggled as she kicked some of the gay buds too.\n\nLatasha then grabbed the large bird bath and toppled it over, smashing it on the ground.\n\n\"Well, I never!\" a man bellowed in an odd sounding accent. \"Whatever do you think you are doing? Stop that at once!\"\n\n\"Aw fuck you, bitch,\" Latasha yelled\n\nThe girls ran away, giggling at their antics. They truly felt they were within their rights to destroy this unknown person's property; it had been, after all, their friend's property first.\n\nThey weren't giggling when, less than an hour later, the police showed up at Latasha's trailer and arrested them.\n\nThey weren't giggling when, after an uncomfortable night in Kimble Lock-up, they were shoved into a van and transported to St. Elizabeth's Courthouse.\n\n\"Weems, Latasha Weems,\" a bailiff called out. \"Destruction of private property.\"\n\n\"How do you plead?\" Judge Marie Robichaux asked.\n\n\"Uh, what?\" Latasha asked.\n\n\"Not guilty, your Honor,\" a very young looking legal defender said, dropping some files onto the table, most of which slid and landed on the floor.\n\n\"Recommendation?\" Marie asked Sarah Guillory, the assistant District Attorney.\n\n\"Ms. Weems has been here before, Your Honor, minor offenses, but...\" Sarah said.\n\n\"Bail is set at ten thousand,\" Marie said and slammed her gavel.\n\n\"Broussard, Natalie Broussard,\" the bailiff called out and again the same scenario played out.\n\nLatasha's mother let her daughter know she would not be wasting her time or hard earned money; her daughter could just rot in jail until Hell freezes over.\n\nNatalie's mother and father, who had both told Natalie they really didn't like her running around with Latasha also told their daughter that they were sincerely sorry, but they just did not have twelve percent of ten thousand dollars to give to a bail bondsman.\n\nA week went by; both girls were actually beginning to acclimate to life at the Kimble Lock-up. They were given three meals a day, allowed to read, mostly old paperbacks, and for an hour each day, were brought into the gymnasium for exercise. Latasha and an African-American girl grabbed a basketball and played an energetic one on one game. Natalie decided she'd try jogging the quarter mile track.\n\n\"Four times around is a mile,\" the female guard told Natalie.\n\nEvery other day, they showered; Latasha almost got into a fist fight with Natalie when Natalie joked that showering every other day was more than they'd showered before.\n\n\"Bitch, I'm fucking clean!\" Latasha screamed as two very burly guards grabbed Latasha and pulled her out of the shower. \"Know what I'm saying? I'm fucking clean!\"\n\n\"Ain't no telling what'll set a person off,\" the female guard shrugged. \"Might be best you just give her some space, keep your mouth shut.\"\n\nThey moved Latasha out of the cell she and Natalie and two other women had been sharing and rotated a Latin girl in. The Latin girl pretended to speak no English and the two women were sullen, mostly silent women. So Natalie spent a great deal of her time reading.\n\n\"...fucking kiss my ass too, God damn fucking bitch,\" Natalie could hear Latasha screaming angrily as Two guards led her down the corridor. \"That's all I got to say, kiss my fucking ass...\"\n\n\"Wonder what that's all about,\" Natalie said but Miranda simply smiled an apologetic smile and shook her head to indicate, she didn't speak English.\n\n\"Broussard, Natalie,\" the female guard said, stepping up to the door.\n\nMiranda immediately started speaking rapidly in Spanish, pleading with the guard. The guard answered in Spanish and Miranda's pleading took a more whining, pleading tone.\n\n\"No means no, girl, don't give me that,\" the woman said as Natalie stood and waited.\n\nNatalie was led to a room; the same room she'd sat in when her parents told her they couldn't afford twelve hundred dollars to bail her out. She felt a stirring of hope; maybe they had managed to borrow the money.\n\nShe entered the room, looking for her mother or father, but instead saw an attractive blonde man sitting at the table.\n\n\"Well, I do certainly hope you will be more agreeable than your cohort,\" the man said in an oddly accented voice.\n\n\"Um, yes sir?\" Natalie said as she sat in a chair opposite the well-dressed man.\n\n\"I am Mr. Worthington,\" the man stated.\n\nA long moment of silence passed, Natalie looking at the man, the man regarding Natalie through cool blue eyes.\n\n\"Oscar Worthington,\" the man said and again waited.\n\n\"Okay?\" Natalie said.\n\n\"So you do not recognize the name?\" Mr. Worthington asked.\n\n\"No, not really,\" Natalie said after racking her brain, trying to pull up the name.\n\n\"So, the destruction of my property was just a random act that you and that other little guttersnipe decided to perpetrate...\" the man stated.\n\n\"Oh, oh, you're the one got Brianna's house,\" Natalie said.\n\n\"Brianna?\" Mr. Worthington asked.\n\n\"Yeah, Mr. Charles lost his job and me and Brianna, we were tight, we were like sisters and then they got thrown out and I'm sorry; I know it wasn't your fault they got thrown out,\" Natalie started crying, thinking of the emotional parting she and Brianna had shared.\n\n\"And so my little garden and bird bath took the brunt of your anger,\" Mr. Worthington mused. \n\nNatalie tried to stop crying; tears were a sign of weakness in the jail.\n\n\"Yeah, I'm real sorry,\" Natalie admitted. \"See, we'd just dropped a couple of Perkies Latasha's mom had and we're just walking around and...\"\n\nThe man nodded to the guard and got to his feet.\n\n\"Good day, Miss Broussard,\" the man said, nodded to the guard again and left the room.\n\n\"Take a minute, fix your face,\" the guard said gently, also knowing that the sign of tears was a sign of weakness.\n\n\"Now, how good of an actor are you?\" the guard asked just before unlocking the door.\n\n\"Huh?\" Natalie asked.\n\n\"Start yelling and cursing me out,\" the guard said.\n\n\"Fucking bitch, get your fucking hands off me,\" Natalie screamed as the door opened. \"That's your fucking ass, know what I'm saying? I fucking reduce you! I fucking reduce you!\"\n\nHer three cell mates left her alone and Natalie lay in her bunk, still muttering angrily.\n\nThree days after the visit, the guard was again asking for Natalie Broussard.\n\n\"Honey, you don't belong here,\" the guard quietly said as they waited for the third door to be opened from the other side. \"Hear? You're too small and too pretty, and you seem to have a good head on your shoulders. Make the right choices, hear? From here on out, make the right choices.\"\n\n\"Yes ma'am. Thank you,\" Natalie said.\n\n\"Told him he is absolutely out of his mind; should just leave your ass in there,\" Parker Johnson, an attorney snarled as he guided Natalie to a waiting mini-van.\n\n\"Where are we go...\" Natalie asked as Parker left a strip of rubber as he pulled out of the parking lot.\n\n\"You. Do not speak to me,\" Parker snarled.\n\nThe van pulled up in front of the Charles' home and Natalie felt new tears beginning to form. She and Brianna had been close friends and now she had no idea how to get in touch with Brianna. Brianna had said they were going to Jackson, Mississippi; her mother's brother lived there.\n\n\"Come on,\" Parker snapped as he slid the door open. \"Move, let's go, come on.\"\n\n\"Are you always such a dick?\" Natalie snapped back.\n\n\"He can be quite abrupt, can he not?\" Mr. Worthington said as he approached.\n\n\"Mister...\" Natalie said, trying to remember what the man had said his name was.\n\n\"Mr. Worthington,\" the man smiled and swept his hand toward the door. \"Do come in; we're just in time for our luncheon.\"\n\nParker did not say anything, just slammed the van's door shut and drove away.\n\n\"I uh, why? Um, what am I doing here?\" Natalie asked as she entered the small home.\n\nHer eyes again filled with tears as she looked at the living room. She and Brianna had played dolls in this room. They'd watched television in this room. They'd fallen in love with boys and cried about those boys not loving them in this room.\n\nThe battered old couch and the sagging recliner were gone, replaced with soft, comfortable looking furniture.\n\n\"Did Mr. Johnson not tell you?\" Mr. Worthington asked as he urged Natalie toward the small dining room.\n\n\"I tried to ask and he told me to shut up,\" Natalie said.\n\n\"I approached the District Attorney's office,\" Mr. Worthington said as he placed two small salads, two bowls of soup, and some sandwiches, cut into quarters on the table. \"Ms. Guillory agreed with me; it seemed impractical to have to house and feed you on taxpayer's money; how does that benefit me? The aggrieved party in this matter?\"\n\n\"Where are you from?\" Natalie asked, intrigued by his accent.\n\n\"Originally? Hadley Court, in Merry Old England,\" the man smiled a wide smile as he took his seat. \"Now, mind you, I was a child of nine when we came to the States and have not seen my home in forty one years, but it's quite impossible to completely lose the accent.\"\n\n\"I would love to go to England,\" Natalie admitted.\n\n\"And may haps one day you shall,\" Mr. Worthington stated. \"But back to the matter at hand.\"\n\nOver the simple meal, Mr. Worthington explained that Natalie was to be his servant.\n\n\"Ms. Guillory stated that the maximum you would receive for destruction of private property would be six to twelve months, plus a one thousand dollar fine, so, for the next twelve months, you are to be in my employ,\" Mr. Worthington stated. \"You will earn minimum wage for every hour you work; they did away with that whole slavery bit a few years back, didn't they?\"\n\n\"What about Latasha?\" Natalie asked.\n\n\"Oh, that one?\" Mr. Worthington sniffed. \"Quite an unpleasant one, her. No, no, I should fear for my very life were she to be in my presence. I had not even said 'how do you do' or 'by your leave' and she was using the most course, vulgar language.\"\n\nMr. Worthington pushed away from the table and Natalie got to her feet as well.\n\nMr. Worthington looked pointedly at the dishes and Natalie got the message.\n\n\"Now, come, this is, of course fine china; it must be washed by hand,\" Mr. Worthington said and instructed Natalie on the proper way to wash, dry, and store the dishes.\n\n\"Um, Mr. Worthington? You don't expect me to cook too, do you?\" Natalie asked, quite fearful.\n\n\"No, no, I am quite happy to perform the culinary duties; it's something I rather enjoy,\" the man smiled his wide smile again.\n\nNatalie did the math in her head; Mr. Worthington said he'd left England at age nine and had not returned in forty one years, so the man was at least fifty years of age. He certainly did not look fifty. His thick blonde hair had no silver streaks, his round pale face showed no wrinkles, not even crow's feet or laugh lines around his blue eyes. .\n\nHe was at least six feet tall and seemed to be in good physical shape. His muscles were not bulging, but his belly was not bulging either.\n\n\"Now, do you bathe in the evenings; I prefer mornings, after I've done some light yoga,\" Mr. Worthington asked.\n\n\"I uh, wait, I'm staying here?\" Natalie asked.\n\n\"Yes, Miss Broussard, until the year of servitude is completed,\" Mr. Worthington said. \"I do believe I'd already explained this to you.\"\n\nThe man gave Natalie some light chores to perform, and then declared an hour of free time.\n\n\"If the telephone rings, you are to answer it, 'Mr. Worthington's residence,'\" Mr. Worthington stated. \"Please take a message. Of course, they may insist to speak with me but do not, I repeat, do not disturb me. Simply tell them that I am unavailable, no you do not know when I will become available and to please leave name, number and brief message.\"\n\n\"Yes sir,\" Natalie said.\n\n\"Again, an hour of free time; then I shall begin to prepare our supper,\" Mr. Worthington stated. \"I do hope you like fried chicken, mashed potatoes and collard greens.\"\n\n\"Uh, yes sir,\" Natalie agreed, shocked.\n\n\"Oh, come on, southern cuisine is the whole reason I moved here after my divorce from the singularly unpleasant Mrs. Worthington,\" the man smiled then left the room.\n\nThere was no television in the living room but there were several bookcases. Natalie found several issues of Parasols magazine; Mr. Charles had those, as well as Hustler and a few hardcore magazines. She and Brianna had snuck some of the magazines out of the living room and into Briana's room and giggled, looking at the pictures of naked women and men.\n\nShe shrugged and took out the most recent magazine, the June issue and idly flipped through the pages.\n\nThere was a cooking column and Natalie enjoyed reading the recipes as well as reading about the cook's sexual exploits. An advice column also amused her. She then became engrossed in a short story by James Robert Taylor and it wasn't until she could smell the chicken cooking that she realized more than an hour had passed.\n\n\"Mr. Worthington, I apologize,\" Natalie said as she entered the kitchen. \"Can I help?\"\n\n\"I don't know, can you?\" Mr. Worthington asked as he briskly mashed the potatoes.\n\nNatalie stood, uncertain.\n\nThe proper question is 'May I help,' not 'can I help,'\" the man said.\n\n\"Oh, Mr. Worthington, may I help?\" Natalie asked.\n\n\"You may set the table,\" Mr. Worthington agreed.\n\nAfter their meal, Natalie cleared the table, and also cleaned the pots and the skillet Mr. Worthington had used to prepare the meal.\n\n\"Um, where's your television? See, there's 'How I Met Your Mother' and I never miss...\" Natalie asked.\n\n\"I do not own a television,\" Mr. Worthington announced. \"Much more worthwhile things to occupy one's mind.\"\n\n\"Oh,\" Natalie said.\n\n\"Um, you um, you said I was staying here; where's my room?\" Natalie asked after determining that the kitchen and dining room were spotless.\n\nHer eyes again filled with tears; she would be staying in Brianna's room.\n\n\"I did gather your things from your parents',\" Mr. Worthington announced. \"But there was so little that was serviceable; see, while you are in my employ? You will dress yourself and comport yourself in a manner appropriate to a proper household. And this is, I assure you, a proper household.\"\n\nMr. Worthington slid open a dresser drawer and pulled out a soft pink nightgown, a matching robe, and matching bikini panties.\n\n\"I did, however, retain your slippers,\" the man smiled, sliding open the closet door.\n\n\"Oh!\" Natalie smiled, seeing her Winnie the Pooh slippers.\n\n\"Good evening, Miss Broussard,\" Mr. Worthington said.\n\n\"Sir? When I got to get up?\" Natalie asked.\n\n\"Well, no later than seven, I should think,\" the man said.\n\nNatalie did draw a bubble bath and did luxuriate in the steamy pleasure. She shaved her legs and underarms, then dried her hair before pulling on the silky soft nightgown. She did not pull on the panties or the robe.\n\nAgain, it was the smell of food that roused her and Natalie pulled on the robe and her slippers and dashed to the kitchen.\n\n\"Mr. Worthington, can I... May I help?\" Natalie asked, still rubbing the sleep from her eyes.\n\n\"I did state that this is a proper household, did I not?\" Mr. Worthington fixed Natalie with a disapproving glare.\n\n\"Uh, yes sir,\" Natalie wilted under the man's stare.\n\n\"In a proper household, one does not leave one's room until he or she is properly attired,\" the man snapped.\n\n\"I, uh, yes sir,\" Natalie answered, unnerved.\n\n\"Come along, let's get you properly attired,\" the man snapped, placing their dishes into the warm oven for safekeeping.\n\n\"I uh,\" Natalie stammered as the man slid open another drawer and pulled out pantyhose, lacy panties and lacy bra.\n\n\"Come, come, I detest a cold breakfast,\" Mr. Worthington snapped. As he pulled a dress from the closet, as well as a pair of leather pumps.\n\nHis anger overwhelmed any sense of decorum she might have had. Natalie disrobed and Mr. Worthington pursed his lips tightly.\n\n\"Young lady, knickers are to be worn when sleeping. It is quite unbecoming...\" he ordered.\n\n\"But I don't like...\" Natalie protested.\n\n\"I did not ask if you liked them, now did I?\" Mr. Worthington demanded, waving his hand impatiently. \"In my household, you are to wear them. Is this understood?\"\n\n\"Yes sir,\" Natalie agreed, wiggling into her panties.\n\nAfter breakfast, after Natalie had finished cleaning the dishes and pan, the telephone rang.\n\n\"Mr. Worthington's residence,\" Natalie chirped cheerfully.\n\n\"This is Jackie; tell Oscar to call his agent,\" a woman said in a husky voice.\n\nNatalie turned to tell Mr. Worthington, but the man pointed to the pad and pen that sat next to the telephone.\n\n\"You are to write down the time and date and name of the person...\" he stated.\n\n\"But you're standing right...\" Natalie argued.\n\n\"Again,\" Mr. Worthington snapped. \"You are to write down...\"\n\n\"Yes sir,\" Natalie said.\n\nShe looked around to see if there was a clock. Finally, she spotted the clock on the oven and wrote down 8:14 am. He pulled a pair of glasses from his shirt pocket and put them on.\n\n\"Very good, Miss Broussard,\" Mr. Worthington approved. \"You've quite lovely penmanship.\"\n\n\"Thank you; my teachers really liked it,\" Natalie agreed.\n\n\"Jackie, hello, my servant said you'd rang?\" Natalie heard Mr. Worthington speaking. \n\nThe rest of the conversation was cut short by a door closing.\n\nNatalie decided to do some light dusting and started in the living room.\n\n\"My bed must be made; that is your first responsibility after the breakfast dishes have been cleared,\" Mr. Worthington snapped, eyes blazing furiously.\n\n\"Yes sir, I do apologize,\" Natalie responded.\n\n\"Bloody fools, all of them; I simply cannot...\" Mr. Worthington snarled entering what had been Matthew and Michael's room, slamming the door.\n\n\"I said I was sorry,\" Natalie sniffed back her tears.\n\nShe straightened up the bedroom, as well as the adjoining bathroom, and then decided she'd better make her own bed. This was, after all, a proper household.\n\n\"Luncheon will be soup and sandwiches,\" Mr. Worthington said tersely as Natalie again dusted the living room furniture.\n\n\"Yes sir,\" Natalie agreed, still cowed by the man's earlier angry display.\n\n\"Miss Broussard, I am not displeased with you,\" Mr. Worthington said, placing a comforting hand on Natalie's shoulder. \"It's my bloody editor; the silly cow is demanding a rewrite of the last three chapters. I am so mad I could simply bust.\"\n\n\"You're a writer?\" Natalie asked, intrigued.\n\n\"I'm a hack,\" Mr. Worthington smiled tightly. \"I write what one would term dime store romances. The type rarely read through a second time. But Phyllis seems to believe it to be literature. A rewrite! Indeed!\"\n\nAfter their lunch, after Natalie washed, dried and put their dishes away, Mr. Worthington decided that the rear garden needed tending.\n\n\"No, no, my dear girl; as fair skinned as you? And you would really go out without proper sunscreen?\" Mr. Worthington stopped Natalie.",
        "He made Natalie shut her eyes as he gently applied the cream to Natalie's face and neck.\n\n\"Need some balm,\" Mr. Worthington observed, lightly tracing Natalie's lips with his fingertip.\n\n\"Can I, may I get you too?\" Natalie asked.\n\n\"Have already done so; do so religiously,\" he smiled and pulled a large floppy hat on. \"Which is why, at age fifty, I do not look to be an old wrinkled prune.\"\n\n\"And you're quite fit for a man of fifty,\" Natalie agreed.\n\n\"Thank you, but you really shouldn't speak in so familiar a manner,\" the man chided, trying to hide his pleased smile.\n\nAs they pulled weeds, then watered the various shrubbery and flowers, Mr. Worthington told Natalie the names of each and the best growing conditions.\n\nAfter both were quite sweaty, he called an end to their work and ushered them into the house.\n\n\"You put up a wooden fence; their old fence was one of them chain link ones, Natalie observed.\n\n\"I do my yoga and my Tai Chi in my garden,\" Mr. Worthington explained. \"As my attire is rather revealing, I'd prefer a little privacy.\"\n\nNatalie hid her smirk as she glanced to the rear of the fence. On the other side of that wall of wooden planks was Jimmy King's house and Jimmy King was a pervert. He'd tried several times to put a camera in the girl's bathroom at Kimble Academy.\n\nThat evening, Natalie did make sure to pull her panties on with her nightgown, as well as the robe before leaving the sanctity of her bathroom.\n\nThe following morning, Natalie glanced out the window and almost screamed. Mr. Worthington was outdoors, performing a very difficult yoga pose. And the man was completely nude.\n\nAs she'd already surmised, he was not bulging with muscles, but he did have a nice physique and his belly was flat. And Natalie could see that his penis, although flaccid, was thick, uncut.\n\nNatalie let the curtain fall back in place and decided to dress for the day's labors. As she peeled her panties down, she realized that her panties were quite moist.\n\nOn Sundays, Mr. Worthington afforded Natalie the day off. On her first Sunday, Natalie rose, dressed and walked from the small house to the non-denomination church her parents attended. Their battered old Skylark was outside, as was Mrs. Weems' old Dodge minivan.\n\nNatalie entered, found the pew her parents were sitting on, and slid in next to her mother.\n\n\"Oh, now don't you look nice?\" her mother said and Natalie looked down at herself.\n\nIt was a simple short sleeve dress that buttoned to her throat and hung down to just above her knees. When she sat, the hem did rise to her thighs, showing off her pantyhose. The dress was a pale pink; Mr. Worthington had said it favored her reddish blonde hair, as well as her blue eyes.\n\n\"Thank you,\" Natalie said and nodded in greeting to a few of the friends of hers.\n\nAfter church services, they returned to the Broussard's' trailer and had Sunday dinner. Both her mother and father teased Natalie lightly about her 'proper English' and even started imitating a British accent.\n\nAlthough she still went to church, then to her parents' for lunch, Natalie started counting the hours until she could return to Mr. Worthington's house.\n\nNatalie had been in Mr. Worthington's employ for nearly two months when the telephone rang one afternoon.\n\n\"Mr. Worthington's res...\" she chirped.\n\n\"The blind fruit loop there?\" a harsh male voice snapped.\n\n\"I beg your pardon?\" Natalie said, shocked.\n\n\"That old dick around?\" the male voice snapped.\n\n\"Good bye,\" Natalie snapped and hung up.\n\n\"Bitch, you ever fucking hang up on me again...\" the voice snarled when Natalie again answered the phone.\n\n\"I do not know who this is, nor do I care, but you are not to call here again,\" Natalie snapped and again hung up.\n\n\"Male? Using quite hurtful language,\" Mr. Worthington asked, face drawn in displeasure as the telephone rang a third time.\n\n\"Yes sir,\" Natalie angrily replied.\n\n\"That would be my son,\" the man said and picked up the telephone. \"Hello Robert; I see you've still not learned manners.\"\n\nHe listened for a few moments, and then looked pointedly at Natalie. Natalie nodded her head and left the living room to give Mr. Worthington some privacy.\n\n\"Robert, do stop,\" Natalie heard him say\n\nA moment later, Natalie heard the telephone being placed on its cradle.\n\n\"Miss Broussard, you are to chauffeur me to my bank,\" Mr. Worthington called out.\n\n\"Yes sir,\" Natalie called back and grabbed her purse.\n\nOn her second day of employment with Mr. Worthington, Natalie was told that her employer was very nearly blind and did not drive. On her third day of employment, she took and passed the driving test.\n\nNatalie went into the garage, opened the door, and pulled the large Mercedes-Benz out. Mr. Worthington left through the front door and Natalie hurried to open the rear door of the car.\n\n\"Thank you,\" Mr. Worthington said.\n\n\"Welcome, sir,\" Natalie said.\n\nThe ride to the bank was a silent one; Mr. Worthington did not care for music, so Natalie didn't turn the radio on.\n\n\"Sir, am I to come in?\" Natalie asked.\n\n\"Certainly,\" the man smiled tightly.\n\nHeidi Moek, the Branch manager ushered Oscar and Natalie into her office and waited. Finally, Mr. Worthington spoke.\n\n\"My son, it would seem, has painted himself into the old financial corner. Again,\" he said.\n\nNatalie's eyes opened wide at the amount of money Robert Worthington's had requested. She also noticed that Heidi's eyes barely flickered at the mention of the dollar amount.\n\n\"So, you would like to wire this to...\" Heidi said.\n\n\"Ms. Moek, please tell me the dates and amounts of my last three transfers to Robert Worthington,\" he requested.\n\nNatalie saw the beginning of a tear in Mr. Worthington's eye and discretely opened her purse and handed the man a linen handkerchief.\n\nAs Heidi did read out the dates and dollar amounts, Natalie saw the tear dry up and a hardness develop in his blue eyes.\n\n\"No, Ms. Moek, I don't believe I'll be sending him any... No, no, I say, let us send him one dollar,\" he declared.\n\nHeidi tried to hide her smile as she rapidly typed out the transfer.\n\n\"Will there be anything else, Mr. Worthington?\" Heidi asked.\n\n\"No, dear, but thank you,\" Mr. Worthington said and got to his feet.\n\n\"Hello Robert, I've sent you the money and believe me, this is the last you'll be receiving from me. You do have a mother; remember her? Bled me quite dry during the divorce? See about siphoning some from her, would you? But again, I tell you, you'll not receive one penny more from me,\" Mr. Worthington said into his cell phone and then turned the appliance off.\n\n\"Natalie will be answering my own telephone for the foreseeable future,\" he instructed.\n\n\"Yes sir,\" Natalie said.\n\n\"We need to see about getting you a chauffeur's uniform,\" Mr. Worthington said, suddenly feeling a little giddy, a little playful. \"Yes, yes, with the hat and all.\"\n\n\"Yes sir,\" Natalie smiled as the man playfully touched the back of Natalie's head.\n\n\"A cap, shame it would hide all that lovely hair; you'd have to tuck it up under,\" he chuckled.\n\nThe telephone was ringing when Natalie answered the house through the garage door and she almost ran to answer it, and then remembered Mr. Worthington's statement that he would be answering the telephone.\n\n\"The old dick's home,\" she heard Mr. Worthington answer. \"Why hello Robert; what an unpleasant surprise.\"\n\nNatalie stood still and listened.\n\n\"No, Robert, one dollar and not a penny more; you've pissed away nearly one hundred thousand in just the last six months alone,\" the man said tightly.\n\nNatalie sidled to the opposite door, deciding to go to her room.\n\n\"Robert, you are twenty seven years old, it is high time for you to grow up,\" Mr. Worthington snapped. \"Here's a thought; try earning your own way in life.\"\n\nNatalie closed the door to her room.\n\nThirty minutes later, Natalie came out of her room. The house was silent. She found Mr. Worthington seated on the couch in the living room, just silently staring at the wall. Then the man turned his head and looked at Natalie through his impossibly thick glasses.\n\nIn that instant, Oscar Worthington looked every bit of his fifty years of age.\n\n\"I'm ready to go shopping for my chauffeur's uniform, sir,\" Natalie said, hoping to bring some levity to the situation.\n\nMr. Worthington cocked his head to the side, regarding Natalie, then a smile broke out across his face and Natalie smiled.\n\n\"And a cap to hide all of that lovely hair,\" Mr. Worthington agreed, getting to his feet. \"Let us have some tea; I do feel like a spot of hot, sweet tea; just the thing to soothe the nerves.\"\n\nAs he bustled about the small kitchen, Natalie could see the years melting away, and once again, the man was the ageless specimen.\n\nIn the morning, Natalie peered through the window as Mr. Worthington really put his body through its paces. She stripped off her nightgown and panties and rubbed her lips as she watched Mr. Worthington's tight buttocks flex and undulate and the man's heavy balls and cock dangling, shining with sweat.\n\nThen he spun around and Natalie squeaked, stepping back from the window. Then she smirked at her own silliness. Mr. Worthington could not see three feet in front of himself; there was no way he could see her spying on him.\n\nNatalie hurried through her morning preparation and waited until she heard Mr. Worthington's door close before leaving her bedroom.\n\nDuring her afternoon breaks, as Mr. Worthington worked on the rewrite his editor was demanding, Natalie read. She'd tired of reading the Parasols magazines and found a few romance style paperbacks on the shelves underneath the shelves that housed the magazines.\n\n'Sisters in the Flesh' by Ophelia Brown had a cover that intrigued her; it showed a blond and brunette woman, both blessed with enormous breasts in tight bodices holding hands.\n\nAnd it seemed that they were truly sisters; their father was married to the blonde's mother, and the brunette's mother was a Spanish maid hired to look after the house. And the master of the house had impregnated both women.\n\n\"Yes, Phyllis, yes, I just sent you the attachment and as soon as my damned printer finishes I'll be sending you the hard copy,\" Mr. Worthington snapped into his cell phone.\n\nNatalie quickly memorized the page number and got to her feet.\n\n\"Oh, chauffeur, Mr. Worthington called out. \"I shall need to run to the post.\"\n\n\"Right away, sir; I'll get my uniform on,\" Natalie called back.\n\n\"Why, Nate, are you running about in your all together?\" Mr. Worthington teased, stepping into the living room.\n\n\"Nate?\" Natalie asked, pretty face crinkled in amusement.\n\n\"A perfectly good name for a chauffeur, don't you think?\" Mr. Worthington smiled. \"Oh, but Nate, really! It's even worse than that! You're running about in women's clothing!\"\n\n\"Yes sir, I'm afraid so,\" Natalie said and curtsied slightly.\n\n\"Well, no time to change; we really must be off to the post now,\" Mr. Worthington said and left the living room. \"I must say, Nate, you really do make quite the figure as a woman though. I'm jealous.\"\n\n\"Thank you, sir, how nice of you to notice, sir,\" Natalie said, grabbing her purse.\n\n\"Last damned rewrite, I should say,\" Mr. Worthington muttered to himself as Natalie drove to the post office.\n\nIt was a few days later that Natalie heard a knock at the front door. She did check through the peephole; Mr. Worthington had said his son Robert would not be inclined to drive down from New York, but Natalie was still cautious.\n\n\"The smiling face of their mail carrier beamed up and Natalie swung the door open.\n\n\"Hey, how's it going; package too big go in the box,\" the woman smiled and Natalie thanked her.\n\n\"Mr. Worthington,\" Natalie called out, carrying the package toward his office. \"Package came for you.\"\n\n\"Bet I know what it is,\" Mr. Worthington called back.\n\n\"Come,\" he called out when Natalie knocked on the door.\n\nNatalie brought in the package, as well as the rest of the mail, and then backed out of the office.\n\n\"Oh, Nate, please come to my office,\" Mr. Worthington called out a moment later, a lilt in his voice.\n\nNatalie put away her glass cleaning solution and went to Mr. Worthington's office.\n\n\"It simply will not do, Nate, it simply will not do,\" the man smiled as Natalie entered the office again. \"This running around in women's' clothing; it must stop, do you hear?\"\n\n\"Why, yes sir, terribly sorry sir,\" Natalie said, playing along.\n\nShe curtsied slightly.\n\n\"Now, off, off with those trappings,\" Mr. Worthington ordered.\n\n\"Beg your pardon, sir?\" Natalie asked, a little surprised.\n\n\"We're going to dress you appropriately, Nate. You're to be a proper chauffeur, don't you know?\" Mr. Worthington demanded and Natalie saw that the box was now open.\n\n\"No time to dawdle, Nate, let's go, off with the dress, or it'll be the sack for you,\" Mr. Worthington said and dug around in the box.\n\nNatalie unzipped, and then shrugged out of the dress.\n\n\"Oh my, you've really gone all out, haven't you; you've even got on women's' knickers and all,\" Mr. Worthington said, trying to look displeased, but smiled.\n\n\"Yes sir, afraid I have,\" Natalie agreed, also smiling, despite feeling a little uncomfortable.\n\n\"Well, we've no time; suppose you'll just have to leave, will at least leave the pantyhose on,\" Mr. Worthington said.\n\nAfter a moment's hesitation, Natalie did unhook her bra and drop it to the floor next to her dress\n\n\"And here we are,\" Mr. Worthington said, handing Natalie a pair of black trousers.\n\nNatalie slid the trousers up her legs.\n\n\"You've really quite lovely legs, Nate, a shame really to hide them, I should say,\" Mr. Worthington said, pulling a man's shirt from the box. \"Let's get you into this.\"\n\n\"Thank you, sir,\" Natalie said as Mr. Worthington pulled the shirt onto Natalie's arms.\n\nNatalie buttoned up the shirt, taking a few moments longer as the buttons were on the wrong side.\n\n\"And,\" Mr. Worthington said, kneeling down to slip some black socks onto Natalie's feet.\n\nNatalie had to put her hand on Mr. Worthington's shoulder for balance.\n\n\"Finished fastening that?\" Mr. Worthington asked, then unzipped the trousers and tucked the shirt into the trousers. It seemed to Natalie that he did cup her buttocks a little often as he arranged shirt and trousers. Then he zipped the slacks up again.\n\n\"Looking more and more like a chauffeur every moment,\" he said as he looped a belt around Natalie's waist.\n\nNatalie again put her hand on his shoulder to sept into the highly polished boots. Mr. Worthington pulled the chauffeur's jacket on and seemed to spend a little too much time rubbing Natalie's small breasts as he smoothed the jacket down.\n\n\"Almost done,\" the man smiled happily.\n\nHe pulled Natalie's collar up and looped a necktie around Natalie's slim neck, then quickly, expertly knotted it.\n\n\"My wife's father, good man, good man indeed; it was he that showed me the proper way to do this,\" Mr. Worthington smiled softly. \"My father died when I was seven and Mother married a yank had no clue what a tie was good for.\"\n\nNatalie looked up into his blue eyes and saw the sadness in them. She softly touched the hand he rested on her shoulder and he seemed to snap out of his reverie.\n\n\"And now, for the finishing touch, Mr. Worthington chuckled as he dug a slightly large cap from the box.\n\nHe stood behind Natalie, gathering the waist length strawberry blonde hair into the cap, then finally put the cap on Natalie's head.\n\n\"Let me see,\" Mr. Worthington said, walking around to face Natalie again.\n\n\"Why, Nate, so professional! So very, very professional,\" He approved.\n\n\"Thank you, sir,\" Natalie smiled.\n\n\"In fact,\" Mr. Worthington said, grabbing onto Natalie's tie.\n\nHe pressed his lips to Natalie's lips.\n\n\"Isn't this just so British? For the man of the house to bandy about with the chauffeur? Just a little buggery as it were?\" Mr. Worthington husked and kissed Natalie again, using the tie to pull Natalie to him.\n\n\"Mr. Worthington!\" Natalie protested, struggling.\n\n\"Oh, come Love,\" Mr. Worthington said, wrapping his other arm around Natalie's waist, squeezing her buttocks with his hand. \"No one's about; you can call me Oscar.\"\n\n\"But, mmph!\" Natalie protested as Mr. Worthington shoved his tongue into Natalie's mouth.\n\n\"Come, Nate; we've the house to ourselves,\" Mr. Worthington said, pulling Natalie by her tie to the door of his office. \"Let's go mess up the sheets. My girl Natalie will just have to change the bedclothes a day early, won't she?\"\n\n\"But Mr. Worthington,\" Natalie struggled.\n\n\"Please, Nate,\" he said as they reached the door of his bedroom.\n\nHe kissed Natalie softly.\n\n\"I really need this,\" he confessed and softly kissed Natalie's lips again.\n\n\"But I've never...\" Natalie whispered, fearful.\n\n\"Nate, my darling sweet chauffeur, are you a virgin? Truly?\" Mr. Worthington asked.\n\n\"Um, when it comes to men, yes sir,\" Natalie admitted, still resisting.\n\n\"Oh, but you mean to tell me, you've mucked about with girls a time or two, have you?\" he chuckled and eased Natalie to sit on the edge of the bed.\n\n\"Well, that is, uh,\" Natalie stammered, embarrassed.\n\n\"Right, oh, well, you're certainly a very pretty boy and I don't mind telling you, I've fancied that delicious little bum of yours a time or two,\" Mr. Worthington said as began to unbutton his shirt.\n\n\"Mr. Worthington, please! Stop!\" Natalie demanded, standing up.\n\n\"Please, Natalie,\" Mr. Worthington said, tears pooling in his eyes.\n\n\"Please, I need this,\" he begged quietly, hugging Natalie.\n\n\"Please, I need you,\" he whispered and kissed Natalie.\n\nMr. Worthington peered intently into Natalie's eyes through his thick glasses. He must have seen the surrender in Natalie's eyes because he smiled happily and kissed Natalie again.\n\n\"I promise; I'll not take your maidenhead; that'll be for your husband,\" he whispered as he pushed Natalie to sit on the edge of the bed again.\n\n\"Then what...?\" Natalie asked.\n\n\"But since you say this is your first time, I'll show you,\" the man said and quickly shimmied out of his clothing.\n\n\"Mr. Worthington,\" Natalie gasped, looking at his erect cock.\n\nIt was thick, and at least seven inches long. A fat vein ran along the underside. What part of the head that stuck out of the thick foreskin was shiny with pre-seminal fluid.\n\n\"Dear Nate, would you touch my boy?\" Mr. Worthington asked, thrusting his hips forward.\n\nNatalie looked up, wanting to bolt out of the room. But then she steeled her nerves and leaned forward, reaching out a shaking hand.\n\n\"Oh, that is so very lovely, yes, you sure you've never done this before?\" Mr. Worthington asked, as Natalie instinctively curled her small hand around the shaft and stroked it a few times.\n\nHis testicles looked intriguing, odd to Natalie, so she reached out her other hand and tested their weight, tested the feel of them. She looked up from her seated position into the straining face of Mr. Worthington.\n\n\"Oh, Nate, that is very...\" he said in a strangled voice, but I'm afraid if you keep that up...\"\n\n\"Now, Nate, oh, you are doing very well; I did enjoy that; did you enjoy that?\" Mr. Worthington said as he gently removed Natalie's hands from his manhood.\n\n\"Yes sir, I did,\" she admitted s she rubbed her thighs together.\n\nShe could feel the wetness from her pussy seeping through the panties and pantyhose. She could also feel her small nipples were very tight and crinkled. \n\n\"Thank you, Natalie,\" he whispered and kissed her softly, then thrust his tongue into her mouth.\n\nShe put her small hands onto his forearms as she returned his kiss. When he pulled away from the kiss, she again reached for his throbbing, pulsing manhood.\n\n\"Right then, Nate, time for you to learn a little of how us men conduct ourselves when we're alone,\" he said.",
        "\"Yes sir,\" Natalie agreed.\n\n\"I'm tempted sorely to make do with your mouth; you've really such a pretty kisser,\" he mused. \"But that bum of yours has been just absolutely driving me to distraction.\"\n\nNatalie sat and looked at him. She then moved to shrug out of the quite warm jacket.\n\n\"No, no, please, please do leave the uniform on, Nate,\" Mr. Worthington begged.\n\n\"Bugger, I'm just too bloody excited; I'll never make it to your delicious little rump this go-round,\" he moaned and cupped Natalie's small face.\n\nHe then kissed her again.\n\n\"Right then, Nate, do take your hands like you were doing before,\" he ordered and Natalie.\n\nShe reached out and again stroked his thick cock with her right hand. Her left hand again cupped his heavy testicles.\n\n\"Now,\" he husked voice thick. \"Take those delightful lips of yours and plant a little kiss, right there, on the head of...\"\n\nNatalie leaned forward and kissed his cockhead. She then licked at the head, and then tried to force her tongue in between his foreskin and his cockhead.\n\n\"Oh, oh that's very good, Nate; really sure you've not done this before?\" Mr. Worthington moaned.\n\nShe had not; Natalie had read through all of the Parasols magazines on his bookshelf. When the Charles family lived here, she and Brianna had read through all of Mr. Charles' Hustler and Parasols magazines and his hardcore magazines.\n\nThe pictures had given the eighteen year old girls a general idea of what to do and both had confessed they hoped they'd get to do those things and named all the boys in their class they'd gladly do this for.\n\n\"My dear, I'm about to, I'm about to...\" Mr. Worthington groaned.\n\nIn the hardcore magazines, the pictures showed the girls getting a faceful of the man's sperm. But the Parasols magazines stated that most men preferred a girl that swallowed his semen.\n\nThe first jet blasted in and Natalie tried to pull away. But Mr. Worthington's hand gripped the back of her head and she found her mouth filling with a strange, slimy, thick substance that tasted like the schoolhouse paste she used to eat when she was a child.\n\nShe swallowed; afraid she would choke if she did not.\n\nAfter a few moments, he released her head and slumped slightly.\n\n\"Oh, Nate, oh dear boy, oh but that was too good,\" he moaned and sat down next to her at the lip of the bed.\n\nHe then lay back and pulled her to lie next to him.\n\n\"So, do tell me of your mucking about with the girls, eh?\" he asked gently.\n\n\"Oh, Mr. Worthington, don't make me,\" Natalie begged, face flaming red.\n\n\"Told you, Nate; it's just the two of us,\" he chuckled. \"Just call me Oscar, would you?\"\n\n\"Me and Brianna, we um, we liked looking at those magazines, like those Parasols magazines you got,\" Natalie admitted.\n\nShe saw out of her peripheral vision that Mr. Worthington's cock was slowly beginning to rise. Her own excitement had intensified from performing oral sex on Mr. Worthington; she wanted desperately to masturbate.\n\n\"Anyway, we used to just flip real fast past that stuff, you know, the two girls or three girls doing it?\" Natalie went on, rubbing her thighs together.\n\n\"Uh huh,\" Mr. Worthington agreed, squeezing Natalie's shoulders.\n\n\"But this one time, God, about a month or two before they got evicted; she'd just turned nineteen when they were thrown out and I'd just turned eighteen,\" Natalie said quietly, remembering. \"Anyway, we get to this one of these two girls doing it and she doesn't go past it and I'm like 'come on, get to the next one' and she just leans over and kisses me and next thing I know, we're making out and then she's pulling my jeans off and she eating me out.\"\n\nNatalie reached down and squeezed Mr. Worthington's cock, which was standing straight up.\n\nHe rolled over on top of her and kissed her passionately.\n\n\"We've not much time,\" he said when he released her.\n\nHe pulled her to the center of the bed and put her on her shoulders and knees. Natalie watched as he walked across the bed on his knees to his nightstand. He slid open the drawer and pulled out a tube. Then he walked back on his knees to kneel behind her.\n\n\"Right, Nate, we've covered the bases, haven't we?\" he asked and Natalie felt him reach under her and undo her belt and trousers.\n\nHe pulled the trousers down, exposing her rounded buttocks, sheathed in panties and pantyhose.\n\n\"You've a really lovely backside, I mean, it truly is just lovely,\" Mr. Worthington said and ran his hands over her rounded buttocks.\n\n\"Thank you, oh!\" Natalie said then shivered as his hand touched her overheated crotch.\n\nHe then pulled her panties and pantyhose down to her trousers and continued touching her.\n\n\"Damn, just lovely,\" he murmured.\n\n\"Natalie heard an odd sound and realized he must have squirted some of the tube's contents.\n\n\"Oh!\" she cried out as she felt his hand cup her pussy.\n\nHe ran his fingertips up and down her wet slit, then pressed a finger in and found her clitoris.\n\n\"Uh, uh, oh!\" Natalie grunted in orgasm as he manipulated her clitoris.\n\n\"Oh!\" she grunted as he used her distracted attention to slip a greasy finger into her tight rectum.\n\nThen he was again playing with her pussy and again he found her clitoris and she squealed in a second orgasm and he used her distracted attention to rotate the greasy finger, and then begin thrusting it in and out of her rectum.\n\nShe heard the odd sound again but didn't have any time to dwell on it as he was lightly pinching her clitoris.\n\n\"Uh!\" she grunted in orgasm and he slid a second greasy finger into her rectum.\n\nHe played with her pussy, avoiding contact with her clitoris as he fucked his two fingers in and out of her greasy rectum.\n\n\"Oh!\" she squealed again as he teased her clitoris and suddenly she felt the head of his cock pushing into her rectum.\n\n\"Mr. Worthington, stop, please stop,\" she begged as waves of pain coursed through her, radiating from her anus outward.\n\nThen he rubbed her clitoris again and she screamed in orgasm and drove herself back, burying his cock into her anal sheath to the root.\n\n\"Aaiieegh!\" she howled in pain, big blue eyes bulging, beads of sweat popping out on her face.\n\nThen he reached into her billowing shirt, grabbed her small breasts, and pulled them back, forcing her to hold still.\n\nShe grunted and sobbed in pain as she felt him began to pull his slimy cock out of her bowels. His grip on her small breasts was fierce and he pulled them back again as he drove himself forward into her bowels again.\n\n\"Oh, God!\" Natalie grunted in pain.\n\nThen, a slow burning sensation began to build inside of her guts. It slowly built up and she could no longer feel the pain in her anus.\n\n\"Aaiieegh!\" she screamed again when he suddenly flicked his fingernail against her clitoris and she felt the burning sensation spill over.\n\nShe grunted and groaned and bucked in orgasm then screamed again when she felt his hot semen fill her bowels.\n\nHe slumped over her, pinning her to the mattress. Then, when his breathing was back to normal, he pulled his cock from her greasy anus.\n\n\"Oh, dear sweet Nate, that was just too sweet, just too sweet, Mr. Worthington mumbled as he pulled Natalie's panties and pantyhose back up.\n\n\"But I really must start on our dinner,\" he said as he dressed.\n\nNatalie got to very shaky legs and winced as she could feel his semen oozing out of her backdoor, staining her panties.\n\n\"Thank you, my dear love; I truly did need that,\" Mr. Worthington said as Natalie rolled over onto her back.\n\nHe kissed her, sucking on her tongue. He gave her one more squeeze, and then left the room.\n\n\"I really must start our dinner or it would be midnight before we eat,\" he said as he walked down the hallway. \n\nNatalie got to very weak legs, and held her trousers up with one hand as she wobbled out of the bedroom. She walked to his office, grabbed her dress and bra and wobbled back to her own bedroom.\n\nIn her bedroom, she stripped out of her chauffeur's uniform, hung everything in her closet, and then pulled her bra and dress back on. She then returned to his bedroom.\n\n\"Oh, Natalie, there you are dear, now, what on earth? Why do you have Nate's cap on your head? Take that silly thing off this once, do you hear me?\" Mr. Worthington said as Natalie walked through the kitchen toward the wash room.\n\n\"Yes sir,\" Natalie said, removing the sweaty chauffeur's cap. \"Nate and I had a small wager you'd not even notice. Rather silly, I know, but...\"\n\n\"Well, I did notice, I'm not completely blind, not yet,\" Mr. Worthington snapped. \"But for now, my bed linens simply must be changed.\"\n\n\"Yes sir, Nate informed me,\" Natalie agreed, wincing at a sudden twinge in her colon.\n\n\"We'll be having our meal in roughly twenty minutes; would you be finished by then?\" Mr. Worthington asked.\n\n\"Yes sir; the new linens and comforter are already on the bed; I'll just pop these in the wash,\" Natalie said, and then gasped as the twinge became a pain.\n\nShe rushed to the wash room, dropped everything onto the floor by the washing machine, and then scampered through the kitchen toward her bathroom.\n\nShe barely made it to the commode in time and grunted and groaned, emptying her bowels.\n\nThat evening, Natalie was very surprised when Mr. Worthington bade her a pleasant evening, but did not invite her, or 'Nate' to his bedroom.\n\nShe did examine the gusset of her panties, wrinkling her nose at the stain. During her bath, Natalie gingerly touched, tested her inflamed anus and determined there would be no lasting damage to the tender tissue.\n\nThe following morning, Natalie reminded Mr. Worthington that she had a two o'clock appointment with Vanessa Leblanc, the probation Officer the court had assigned to her.\n\nNatalie wasn't sure, but she could swear she saw a glimmer of fear in the man's eyes.\n\n\"And what time is the appointment again?\" Mr. Worthington asked, as if Natalie had not just said it was for two in the afternoon.\n\nOutside of Ms. Leblanc's office, a trio of young men flirted with Natalie. A few months earlier, Natalie would have been flattered, excited by their attention. The moment she got home, she'd be running over to Brianna's house to tell her all about the three 'hot' guys that had flirted with her.\n\nOne of the three young men had several tattoos visible and Natalie had found tattoos sexy. \n\nThe three young men were dressed in unbuttoned flannel shirts, with muscle shirts and sagging blue jeans. It was a look she'd found sassy, attractive.\n\nToday, the tattoos and slovenly appearance looked slovenly, immature, lazy, and unkempt.\n\nOne of the young men was called and he put on a slack jawed expression and Natalie refrained from rolling her eyes. At his pretense of bravado, as if meeting with his parole officer was no big deal.\n\nShe was grateful she was called next and took a moment to make sure her appearance was suitable.\n\nShe was asked to submit a urine sample; she was not afraid to give one. Then she answered Vanessa's questions.\n\n\"So, what's it like working for Mr. Worthington?\" the young black woman asked, smiling. I am just so in love with his accent.\"\n\n\"I love it,\" Natalie heard herself say. He's a very good man, very proper.\"\n\n\"Better than jail, huh?\" Vanessa joked.\n\n\"On Sundays, I go to church with my parents, and then I go eat Sunday dinner with them. Jail wouldn't let me do that,\" Natalie agreed.\n\nNatalie drove Mr. Worthington's Mercedes-Benz to the small house. She entered the home and immediately began her afternoon chores.\n\n\"No, no, Natalie, put that down, do come tell me how it went,\" Mr. Worthington asked.\n\n\"Had to give a urine sample, then told Ms. Leblanc this is better than jail,\" Natalie shrugged.\n\n\"Oh, well, I certainly would hope this is more agreeable than jail,\" Mr. Worthington said.\n\nRoughly two months later, Natalie answered a call from Jackie, Mr. Worthington's agent.\n\n\"You are bloody joking...\" Mr. Worthington snapped as he returned Jackie's telephone call. \"Do tell that woman I simply will not do it. Yes, I most certainly am refusing.\"\n\nNatalie decided to clean her bathroom.\n\n\"Nate! Nate, damn it, where is that boy?\" Natalie heard Mr. Worthington call out.\n\n\"Sir?\" Natalie asked.\n\n\"There you are and what have I told you? No more of this running about in women's things,\" the man snapped.\n\n\"Oh, yes sir, terribly sorry sir, had rather hoped you'd not notice, what, being so busy with your writing and all,\" Natalie apologized.\n\n\"Come, come, I've enough of this foolishness,\" He said, opening the door to Natalie's bedroom.\n\nNatalie found herself being stripped out of her clothing, and then dressed in her chauffeur's uniform.\n\n\"There you are, dear sweet boy,\" Mr. Worthington said happily as the cap was placed on Natalie's head.\n\n\"Sir, yes sir,\" Natalie agreed.\n\n\"Come, my dear boy; it's just you and I,\" Mr. Worthington husked, pulling Natalie's necktie.\n\n\"Shall we mess up my bed, sir?\" Natalie asked. \"Natalie just changed your linens yesterday.\"\n\n\"And the girl can just change them again,\" Mr. Worthington sniffed. \"Lying about, not a care in the world.\"\n\n\"Very good,\" Natalie smirked as Mr. Worthington flashed a quick, playful smile.\n\n\"But are we to talk all day?\" Mr. Worthington asked, putting an arm around Natalie's waist. \"My dear boy, are you losing the pounds?\"\n\nNatalie, no longer gorging herself on snacks and sweets whenever she was bored, as she was rarely bored, was indeed slimming down. The last time she'd weighed herself, at her parents' trailer a few weeks earlier; she weighed one hundred and fourteen pounds.\n\n\"Somewhat,\" Natalie admitted, pleased that he had noticed.\n\nAs before, Natalie sat on the edge of the bed while Mr. Worthington stood; thrusting his cock in and out of Natalie's hot, sucking mouth. This time, he did not have to grip the back of her head; she gladly swallowed his semen as it spurted into her mouth.\n\n\"Shall I tell you more of my mucking about with girls? Natalie asked, small hand stroking his cock when he lay down next to her.\n\n\"Yes, yes, please do,\" he gasped.\n\n\"Latasha, remember her? Anyway, after Brianna and her family got kicked out? Latasha asked I if I ever eat pussy and I told her yeah and next thing I know, we're making out,\" Natalie softly said. \"She's hardcore, though. See, Brianna and me? It was all about love. Day she got kicked out I begged her if we could run off to Massachusetts and get married; I really was so in love with her, but Latasha's got me fisting her pussy, I'm in her almost up to my elbow, you know?\"\n\nMr. Worthington rubbed Natalie's small hard breasts through the soft blouse of the chauffeur's uniform.\n\n\"And in jail?\" Natalie said and kissed him. \"Put me in this cell with this hot little Latin, no speak uh English, but eat uh pussy. She even liked sticking her tongue up my ass hole.\"\n\nShe stroked his hard cock and kissed him again.\n\nHe rolled her onto her knees and Natalie giggled as he jerked her trousers, pantyhose and panties down to her knees.\n\n\"Like this?\" he asked and tried to jam his tongue into her rectum.\n\n\"Uh huh,\" she groaned.\n\nHe licked and sucked her sweaty anus for a few moments, his hand playing with her pussy.\n\n\"Oh!\" she grunted in orgasm as he rubbed her clitoris.\n\nThen he was sliding the drawer open and digging out the tube of lubricant.\n\nHer rectum clamped tightly when she felt his finger press against it.\n\n\"Uh!\" she grunted as he used his other hand to play with her splayed pussy lips.\n\n\"Uh!\" she grunted as his finger slid into her rectum.\n\n\"Reach back here and pull these lovely cheeks apart for me,\" he asked and she struggled but did manage to will her arms to work.\n\n\"Oh, Mr. Worthington, oh God!\" she protested as half his cock slid into her rectum.\n\nHe then rubbed her clitoris quite briskly and she jerked in orgasm and he used the distraction to plunge into her to the root.\n\n\"Uh, uh, oh God,\" she protested as he began to pull out of her again.\n\nHe alternated between playing with her hard little breasts and her wet pussy and she was soon thrusting back to meet his forward thrusts.\n\n\"Uh, oh damn yes!\" he suddenly bellowed and Natalie could feel his hot semen flooding into her rectum.\n\n\"Thank you, Nate; you're a sweet boy,\" he mumbled, kissed her cheek and pulled out of her slimy rectum.\n\n\"Yes sir, thank you,\" Natalie mumbled, pulling up panties, pantyhose and trousers.\n\nShe got to weak legs, wobbled back to her own bedroom and changed back into her dress.\n\n\"Natalie, there you are; I'm terribly sorry, but my bedclothes absolutely must be changed again,\" Mr. Worthington said as he prepared their lunch.\n\n\"Yes sir, Nate told me,\" Natalie said and gave Mr. Worthington a meaningful wink.\n\nThe man's face flamed up bright red, and then he smiled and turned his attention back to the stove.\n\nThat afternoon, and much of the following morning, Natalie could hear angry muttering and even occasional shouted profanities coming from Mr. Worthington's office. She'd finished with her morning chores, and then went to her room.\n\n\"Come,\" Mr. Worthington called out when Natalie knocked on his office door.\n\n\"Sir, I'm terribly sorry, but I simply cannot seem to get this cursed tie to behave for me,\" Natalie said as she walked into Mr. Worthington's office, wearing the chauffeur's uniform. \"If you could?\"\n\nMr. Worthington stared at Natalie for a long moment through his thick glasses. Then he hit 'Alt S' on his keyboard and stood.\n\n\"First, we make sure we've the right length; back side should reach just above the navel and...\" he said, grasping the tie.\n\nHe softly kissed Natalie.\n\nEach step was explained, and then punctuated with a soft kiss to Natalie's lips.\n\n\"You make it too delightful to forget how to knot a tie,\" Natalie smiled and sucked on Mr. Worthington's tongue.\n\n\"And there you are. Now, please close the door,\" Mr. Worthington ordered.\n\nNatalie did and Mr. Worthington smiled when Natalie also locked the door.\n\n\"Can't have anyone just walking in on us, sir,\" she said as she leaned over Mr. Worthington's chair.\n\nShe kissed him, sliding her tongue in and out of his mouth.\n\n\"I do want to suck your cock, sir,\" she whispered into his ear, and then kissed him again.\n\n\"Well, right then,\" the man groaned and Natalie knelt between his legs.\n\nShe unzipped his trousers and fished his hard cock out.\n\nShe licked up and down the underside of his hardness, then sank her mouth over the head and tried to force him all the way down her throat.\n\nHer gag reflex stopped her progress, so she used her hand to jack him into her mouth.\n\n\"Oh, damn, oh but you've got a sweet mouth,\" he grunted and she swallowed each pulse of semen.\n\n\"Could you bugger me, sir?\" Natalie asked. \"I've got the lubricant right here.\"\n\nMr. Worthington unbuckled her belt, and then unzipped her trousers. He pushed her trousers, pantyhose and panties down to the tops of her boots and pushed on her shoulders to make her bend forward.\n\n\"Oh,\" she groaned as his greased finger slid into her anus.\n\n\"Oh, that' so nice, sir,\" she groaned as a second finger quickly joined the first.\n\nThen she fought against the urge to clench her rectum shut as he pressed his cockhead to her anus.\n\n\"Oh, oh yes,\" she moaned as he slid into her backdoor.\n\nThen she squealed as he put his arm around her waist, and sat back into his office chair.\n\nHer weight pushed her down until his entire length was firmly in her. With her trousers bunched up around mid-calf; movement was difficult. She utilized relaxing and clenching her rectum around his cock.\n\n\"Oh, uh oh God,\" she cried out when he teased her throbbing clitoris.\n\nA moment later, he spent into her and she screamed in orgasm.\n\n\"Thank you, Nate,\" he whispered, kissing her neck.\n\n\"Welcome sir,\" she groaned as a tremor shivered through her aching anus.\n\n\"My agent and editor are ganging up on me, driving me out of what little sense I have left,\" he said, hugging her tightly.",
        "He kissed her neck again, and then slapped her lightly on her plump buttock.\n\n\"Enough of this playing around, Nate; I've got lunch to prepare,\" he chuckled and squeezed her buttock. \"But you've a really quite lovely bum.\"\n\n\"Thank you, sir,\" Natalie said and struggled to get to her feet again.\n\nNatalie sat and ate lunch as Nate but dressed as Natalie again after their meal was finished. She then performed her afternoon chores. After her chores were completed, she pulled another romance from the shelf and sat to read it.\n\nMr. Worthington came in, looked at the cover of the book Natalie was reading and smirked.\n\n\"My editor, Doris, the one before Phyllis said that 'Sunrise Over Silver Mountain' would either make me or break me,\" he admitted. \"Then the silly bird had a heart attack.\"\n\n\"Well I'm at the part where they're robbing the train so don't spoil it for me,\" Natalie said, not looking up from the book.\n\n\"Of course, she was wrong; it barely even made a splash when we threw it in the pond,\" Mr. Worthington said and walked to the kitchen.\n\nThen the full words of Mr. Worthington came crashing in and Natalie flipped the book over to read the name of the author. Ophelia Brown.\n\n\"You're Ophelia Brown?\" she asked, delighted.\n\n\"It was actually my sister's name; she married Ladarius Brown,\" he smiled as he seasoned the chicken breasts. \"One of the nicest guys in the world but some racist bastard thought it terrible that an English blonde married to a black man, don't you know? Shot and killed them both as they were getting into their car.\"\n\n\"Oh, my God! Oscar, Mr. Worthington, I'm so sorry!\" Natalie gasped.\n\n\"Me too,' Mr. Worthington smiled sadly, letting Natalie's little faux pas slip. \"So, when I became a hack writer, I just used her name. Has a nice ring to it, doesn't it?\"\n\nShe could tell, a few days later, that Jackie's latest call had upset Mr. Worthington terribly. Before she could get to her room, before she could slip into her chauffeur's costume, Mr. Worthington gripped her arm and pulled her into his bedroom.\n\nWithout much preamble, he pulled off her panties, pantyhose, and shoes in one swift motion then pushed her onto his bed. He licked and sucked her pussy to three orgasms, then pressed his cock to her lips. He roughly fucked her face until he shot his sperm into her mouth.\n\nThen he lay on the bed next to her, holding her to him.\n\n\"You, I ask you something?\" she asked, feeling warm and happy in his embrace.\n\n\"Sure, of course,\" he agreed.\n\n\"Why, you like girls, I mean, you were married, why do you like me getting dressed up like Nate?\" she asked.\n\nShe smiled in relief when his face broke into a grin.\n\n\"When I was in college, I was dating this lovely little red head, Danielle. Absolutely flat as a fence up top but had the sweetest little bum, see Natalie? Every woman I've ever met? They've a twat. But not every woman has a sweet little bum. You? Love, you've got a world class one, just a ripe little peach.\"\n\nShe could see that his cock was beginning to stir and reached down to stroke it.\n\n\"Anyway, Danielle and I went to this Halloween party; I was blind as a bat even then and as a joke, she dressed as a chauffeur. She was always driving me around. But it was the sexiest thing I've ever laid eyes on and she really got into it as well and that was the first time we ever did the old sodomy bit,\" Mr. Worthington said and by now his cock was at full hardness.\n\n\"And was she the former Mrs. Worthington?\" Natalie asked and started to suck his cock.\n\n\"Hmm? Oh no, no, Danielle met this quite wealthy boy and it was the boot to dear old Oscar,\" he chuckled. \"No, Linda and I met, married, had the kids and dog and white picket fence and all. Then she decides to get a bit of religion and no more sex for us. And certainly not the up the bum part.\"\n\n\"Is that Why Robert's so angry with you?\" she asked, taking the time to nuzzle his heavy balls.\n\n\"No, no, Robert's always been quite angry; very much a chip off the old block. His mother being the block, of course. No, Robert had this very sweet little girlfriend,\" Mr. Worthington took a moment to play with Natalie's plump buttocks, and then began teasing her slick pussy lips. \"Angela, just the sweetest little thing. Anyway, he wanted to go to this party, she didn't, he slapped her and left. She came running to me and I'm cuddling her and telling her she shouldn't be treated as such and next thing I know, I'm balls deep in this very lovely eighteen year old and of course that's when Linda happens in.\"\n\nHe chuckled at the memory.\n\n\"And of course, right behind her, Robert. Quite upsetting, I would imagine, seeing your father giving it to the girl you're courting. But anyway, that's my tale of woe. A rather messy and expensive divorce and an upset boy,\" he finished his tale and pulled Natalie into a sixty nine position.\n\nIt was a blistering hot day in late June. Natalie came out of her bedroom and, as was her habit, went to Mr. Worthington's bedroom to make the bed.\n\nShe found Mr. Worthington curled up under the comforter, facing away from Natalie.\n\n\"Mr. Worthington? Are you ill?\" Natalie asked softly.\n\n\"A little piqued,\" the man answered listlessly.\n\n\"May I fix you a spot of sweet tea?\" Natalie asked, concerned.\n\n\"Thank you, Natalie, but that won't be necessary,\" Mr. Worthington said.\n\n\"Sir, is there anything I can do? Would you like me to fetch Nate for you?\" Natalie asked.\n\n\"No, no, that's very sweet. But I'll be up and about in a moment,\" Mr. Worthington said listlessly.\n\nNatalie, by now proficient in the kitchen, whipped up a light breakfast for herself and Mr. Worthington. She placed Mr. Worthington's plates on a tray and carried the tray to Mr. Worthington's bedroom.\n\n\"When I was a child, breakfast in bed was my favorite part of being sick,\" Natalie said cheerfully.\n\nShe arranged the pillows, then got the tray off of the low dresser and laid the tray across Mr. Worthington's lap.\n\n\"Thank you, Natalie,\" Mr. Worthington said and Natalie could see that her employer had been crying.\n\nHis beautiful eyes were puffy and rimmed in red. His nose was likewise blotchy.\n\n\"Welcome, sir,\" Natalie said, then left the room.\n\nShe hurried through her own breakfast, then returned and gathered Mr. Worthington's tray. She put the tray on the low dresser again.\n\nShe then went into Mr. Worthington's bathroom, got a face cloth and wet it with cold water.\n\n\"Here, let's see about getting some of that puffiness down,\" Natalie soothed, placing the folded cloth across Mr. Worthington's eyes.\n\n\"Thank you, Natalie; you're a dear, sweet girl,\" Mr. Worthington said, and then burst into tears.\n\n\"Shh, shh, no, no, why are you crying?\" Natalie soothed, hugging the man to her.\n\n\"Do you know what tomorrow is?\" Mr. Worthington sobbed out.\n\n\"My last day of probation,\" Natalie said.\n\n\"And then you'll be leaving,\" Mr. Worthington sobbed, trying to pull the facecloth from his face\n\nNatalie held the cloth on tight, and then kissed Mr. Worthington's lips.\n\n\"I'll stay if you want me to,\" she said and put her arm around him, still holding the cloth down.\n\n\"You, you will?\" Mr. Worthington asked.\n\n\"Yes sir,\" Natalie quietly agreed and again kissed him.\n\n\"Mr. Worthington's residence,\" Natalie cheerfully chirped later that morning.\n\n\"Hate to do this to you, dear girl,\" Jackie said mirthlessly into the phone. \"But tell Oscar his heartless agent called.\n\n\"Yes ma'am,\" Natalie agreed, wrote the message and turned to see Mr. Worthington standing there.\n\n\"You'll not need to worry about staying on; they're going to be the death of me,\" Mr. Worthington snapped.\n\n\"Yes, Jackie; what is it this time, Jackie?\" Mr. Worthington snapped into her cell phone and slammed the door of his office shut.\n\nMr. Worthington did come out and prepared a light luncheon then again closed himself off in the office.\n\nNatalie did her chores, and then knocked softly on Mr. Worthington's office door.\n\n\"Come,\" Mr. Worthington called out.\n\n\"Can I help?\" Natalie asked quietly, hand on his slumped shoulder.\n\n\"I'm dry, dear girl; I am just absolutely dry,\" he admitted as they both stared at his blank computer screen. \"Jackie and Phyllis? They've thrown my last three submissions on the rubble heap.\"\n\n\"Then you need to write about me,\" Natalie suggested.\n\n\"You?\" he asked and she smiled.\n\n\"Yes, see, there's this bad seed? And she gets hired on, part of a probation deal with this gorgeous older, well let's make that a woman,\" Natalie said and pulled herself into his lap.\n\n\"Ms. Broussard, whatever are you doing?\" he asked.\n\n\"And this bad seed works as a chauffeur and they fall in love and become lovers and when the probation is up, the chauffeur doesn't leave because their love is just too great to lose, too precious,\" Natalie said, kissing him again.\n\n\"Like it so far,\" he agreed.\n\n\"Better love it,\" she said. \"I told you, it's about me.\"\n\nShe snuggled up against him.\n\n\"And it's not until the chauffeur confesses his love that we find out, the chauffeur's actually a woman, in love with the woman that saved her from going to prison,\" Natalie concluded her tale.\n\n\"And do you love me?\" Mr. Worthington asked, kissing Natalie's lips.\n\n\"With all my heart,\" Natalie confessed.\n\n\"Driven to Impropriety' took Ophelia Brown nearly five weeks to complete and did make a little splash. Of course, nearly everyone who read it claimed that they 'knew' the surprise ending before the final chapter but few actually did guess the ending.\n\nIt was a cool September morning when the telephone rang. Natalie raced to answer it before the new machine picked it up.\n\n\"Mr. Worthington's Residence,\" Natalie chirped.\n\n\"The fucking blind dick around?\" Robert sneered into the telephone.\n\n\"Oh, hello Robert; I'll tell Mr. Worthington you called. Don't tell me you already spent that dollar we cent you for your birthday,\" Natalie said cheerfully.\n\nShe hung up on his barrage of profanities.\n\n\"Robert called,\" Natalie said as the telephone again began to ring. \"Should I tell him we're on our way to our honeymoon?\"\n\n\"He already knows,\" Oscar smiled and picked up the telephone. \"Hello Robert. How's Nicole? What's that? Oh, of course I don't care; it's just social convention. So how is my favorite daughter in law?\"\n\nNatalie walked to their bedroom and grabbed the two suitcases they'd packed for their trip to England.\n\n\"No, Robert, you'll just have to pull yourself up by your own bootstraps,\" Oscar said easily into the phone. \"What's that? They'll kill you and Nicole if I don't? Put Nicole on please. What? No, I'm not going to question her, I just want to tell her goodbye and it's quite the shame she married an idiot with a bit of a drug and gambling problem. Hello?\"\n\nHe hung up the telephone and looked up to see Natalie carrying their suitcases toward the garage door.\n\n\"Natalie Worthington, you take that cap off this very instant; where is Nate? It's almost time to go to the airport!\" Oscar laughed.\n\nEpilogue.\n\nParker Johnson looked at the five adults that were gathered in his conference room C. There was a tall, gaunt man; he was the son. Next to him sat an equally gaunt woman. Both twitched nervously; Parker recognized the signs of someone coming down from crystal meth. On the other side of the son and daughter in law was the daughter, a strikingly beautiful woman with long blonde hair and beautiful blue eyes. It was nearly impossible to guess her age, but Parker knew her to be twenty nine years of age. On her left sat her husband, a man whose skin was tanned to leather from hours and hours in the sun. His suit was a nicely tailored suit, but it still displayed the man's muscular physique.\n\nOn the other side of the table, Natalie Worthington sat, weeping silently.\n\nParker of course expressed his condolences to the son and daughter of his client and his client's wife.\n\n\"The aneurism was sudden,\" Parker mused aloud. \"He didn't suffer at all, according to... Well, let's get to the matter at hand.\"\n\nThen, he read the last will and testament of Oscar Samuel Worthington. To his daughter Deborah, Oscar left seven hundred and twelve thousand nine hundred and forty three dollars.\n\n\"Why such an odd amount?\" Dan, Deborah's husband asked. \"I mean, don't get me wrong; it's his money. He can do whatever he wants to with it.\"\n\n\"Seems that is the amount your brother in law Robert borrowed from Oscar Worthington on over the years,\" Parker said.\n\n\"I didn't borrow, there's no way I borrowed that much,\" Robert hotly denied, scratching at a scab on his face.\n\n\"Complete listing of each and every transfer from his bank accounts to yours,\" Parker said, flipping five pages of bank documents.\n\n\"But he's got millions; them stupid fucking fruit loop books sold like shit,\" Robert snarled, not looking at the bank documents.\n\n\"He did, however, put in this will that he will gladly pay for you and Nicole to go in to treatment, get some help with your chemical addiction,\" Parker said.\n\n\"Wait, so there's no fucking money? There's no fucking money?\" Nicole asked, seeming to come out of a fog.\n\n\"Again, he left provisions to pay for you two to get help,\" Parker said.\n\n\"Deborah, you got all kind of money from that ass hole, right?\" Robert wheedled. \"Huh? I mean, how you afford that house, huh?\"\n\n\"I work, and my husband works,\" Deborah said, an obvious Texas twang coming through. \"And I really don't appreciate you calling my dad an ass hole. Anyone's the ass hole, it's you.\"\n\n\"And to my wife, Natalie Faye Worthington,\" Parker continued.\n\n\"There's no fucking way that marriage's legal,\" Robert contested and got to his feet, glaring hatefully at Natalie. \"You tricked him into marrying you 'cause you're knocked up.\"\n\n\"Didn't become pregnant until after we married,\" Natalie denied, arm protecting her swollen belly.\n\nDan and Parker also got to their feet, ready to grab Robert if the man should attempt any harm toward the small woman.\n\nA few months after the will was read, Nicole did contact Parker Johnson about going into treatment. Upon getting out, she relapsed and went right back into treatment.\n\nThe second time she got out, she did not go back to the motel room she and Robert shared, instead moved into a halfway house. Three months later, Nicole filed for divorce from Robert.\n\nOn her twenty first birthday, Natalie opened the door to the smiling face of the mail carrier.\n\n\"Hey, box was too big fit in the mailbox,\" the woman said.\n\nNatalie saw that the box was from Dan and Deborah and opened it. Inside was a teddy bear dressed like a chauffeur. The card that was enclosed had a very sweet note from Deborah.\n\nDan, in his own sweet, loving way simply signed it, 'Love, Dan.' \n\n\"Hey, who's that from?\" Brianna Charles asked, admiring the stuffed animal.\n\n\"Step-daughter and son in law,\" Natalie smiled. \"Its name is Nate. Now, go put some clothes on, huh?\"\n\nThe End.\n\n*Author's Note: I write these stories for my pleasure; I post them here for your enjoyment. Thank you for reading my stories.\n\nNo, no Disclaimers."
    ],
    "authorname": "JimBob44",
    "tags": [
        "older man",
        "younger woman",
        "anal sex",
        "romance",
        "playing 'dress up'",
        "romance writer",
        "legal blindness",
        "drug use",
        "small town",
        "louisiana"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/mr-worthingtons-writers-block"
}