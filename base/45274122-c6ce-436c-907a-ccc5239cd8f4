{
    "title": "Her Orgasm",
    "pages": [
        "A small gallery in SoHo had mounted an exhibit called \"Me, My Selfie and I\". It consisted of erotic images of women taken by the women themselves. Each image was accompanied by a hundred-fifty word essay describing what the image meant to her and included a short bio. \n\nAn artist curated the exhibit, choosing ones she thought captured the most evocative expression of the women. The pictures were printed in large format, mounted and hung around the gallery. My bank had made a small grant to the owner of the gallery for a past exhibit and I regularly received invites to their openings. This one intrigued me.\n\nAs I wandered around taking in the images and reading the essays, I marveled at the courage of these women to expose themselves in this fashion. Not only did they bare their bodies, but also their souls. As a person drawn to exhibitionism, the sight of these images was exhilarating. I noticed that a number of the women who submitted these selfies were present. It was interesting to see them in their natural state of dress as well as in a picture of them in their true natural state. \n\nI was looking at a picture of a middle-aged woman. She was in her bathroom, standing under the shower. The water hit her shoulders and streamed over her naked body. Holding her phone out, she shot the selfie in the mirror. Her body showed some of the effects of time. Her essay and bio described her as a thirty-nine year old divorced mother of a teenage girl, teacher and avid mystery novel reader. She mused if anyone would ever want to look at her naked body again at this stage in her life. I shifted my eyes back to the large print. I could detect a Caesarean scar on her tummy. She was not fat, but also not firm. Her large breasts sagged, but there was still a prurient appeal to them. I focused on her large nipples and areolas that covered about a third of her breasts. She trimmed her pubic hair to a narrow dark strip that definitely did not match her blond hair. Her legs were attractive. Many would still want to look at her body and I had noticed quite a few visitors lingering at this photo.\n\nPerhaps it was the look in her eye that captured us. In spite of her nakedness, I felt a strength and determination in that look. As I studied the picture, I sensed someone standing close to me. I turned and was startled to recognize the woman from the photo. With her hair styled and wearing clothes that emphasized the womanly figure underneath, she was clearly a very attractive woman.\n\n\"You're beautiful,\" I said. \"I hope you realize that.\"\n\nShe looked at the picture. \"Many people have said that tonight. Honestly I never felt it in the last few years, anyway. I appreciate your saying so.\"\n\n\"May I ask why you submitted a photo?\"\n\nThe woman continued to stare at the display. She then turned to face me. \"Control. I wanted control over how I felt about my body, my sexuality. This gave me control. Since my divorce, I was so hesitant to take my clothes off before a man, or even one of my women friends. I feared what they would think. With this, I just said fuck it. Here I am world. Take me or not, but I'm here and this is what I look like.\"\n\nI placed my hand on her arm. \"That's terrific. God, you are courageous and beautiful. I think everyone here feels the same. I hope you feel good about doing this.\"\n\n\"Have you been married?\" I was taken aback by the question. A truthful answer would take too much explaining, so I simply said no.\n\n\"Divorce is a gut kick,\" she said. \"Even if on one level I was happy to be rid of him, on another level I felt rejected. You know having a baby does a job on your body. I can't understand how these models or Hollywood actresses appear in a bikini not long after giving birth. I worked hard, but knew I would never have a tight, hot body again.\"\n\nShe looked at her naked self. \"That's who I am. Did my ex just see the flab and scar? That's what I thought after we split. Of course, he took up with a younger woman, who never had kids. She had this tiny little body. Like I said, divorce is a gut kick. So, to answer your question, yes, I feel quite good about doing this.\"\n\nI was about to say something when a good-looking man approached carrying two glasses of wine. He handed one to the woman and she smiled. He kissed her lips.\n\nShe turned to me and smiled. \n\n\"Thanks,\" she said. Our eyes met and then they moved on.\n\nTaking one last look at her image, I thought about my own desire for control and how I used my body to control other's reactions and behavior. By exhibiting my body I gained a sense of power over others and myself. She and I might just be kindred spirits. \n\nAs I moved around, I saw a number of people I knew both from the art community and the business world. These openings always attracted a strange m\u00e9lange of peoples and personalities. I chatted with some of them and we exchanged views on the exhibit. I went to the bar for another glass of champagne when I noticed a woman standing off in a corner. She was tall and had a striking beauty. Not a classic face such as a model, but one full of character. I felt I knew her, but could not place her or recall a name. I mentally ran through the pictures in the exhibit and was almost certain she was not one of the women on display.\n\nShe must have felt me staring and caught my eye. Her intense gaze held mine and then she smiled. It was at that second that I recognized her.\n\nI noticed she held an empty champagne flute, so I carried mine and a second full one over to where she stood. I offered the glass. She caught the attention of a waiter and passed him her empty. She took my offering and raised the glass. She took a sip, leaving a faint ruby print on the rim. \n\n\"Thank you,\" she said and smiled.\n\n\"My pleasure.\" Her auburn hair framed her strong features, with one lock falling across her forehead. With a gesture that I was certain she practiced hundreds of times a day, she pushed it back and hooked it behind her ear.\n\n\"Gretchen,\" I said as I extended my hand.\n\n\"Danni,\" she replied. \"Enjoying the exhibit?\"\n\n\"Very much. I admire how these women can be so honest. It can't be easy to let the world see you in such a raw, pure way.\"\n\nDanni looked at the picture next to her. It was of a young woman standing in front of a full-length mirror. Her slender body was held erect, with her tiny breasts defined by surprisingly large and dark nipples. She held the camera with one hand and placed the other over her smooth mound. You could detect that one finger had penetrated her compact vulva.\n\n\"You recognize me, don't you?\" said Danni as she looked upon the image.\n\n\"Not at first,\" I said. \"I felt I did know you, but couldn't place it. Then you smiled. God, you have a smile that is both sensual and innocent. I know that sounds contradictory, but that's how it strikes me. It was that same smile you had when you came. That's when I recognized you.\"\n\nDanni turned back to me. \"Think I'm crazy for doing that?\"\n\n\"God, no. I think you are amazing. To be that open is something few women could do. I must have watched you a hundred times.\"\n\n\"Oh.\"\n\n\"No, I'm not some crazy stalker or lurker. It's just that you are so beautiful and watching you work through your orgasm was fascinating. Then you smiled, just like you did a moment ago, and laughed. I thought I had never seen or heard such an honest emotion in my life.\"\n\nDanni smiled. It made my stomach flip.\n\n\"Do you mind talking about it?\" I asked.\n\n\"No, actually no one really ever wants to talk about it. My friends seem too reticent. I think they are afraid to engage me on such a sexual level. I'm not a really overtly sexual person. I never share sex stories with my friends, you know talking about what our lovers are like in bed and that sort of stuff.\"\n\n\"Husband, boyfriend or girlfriend?\"\n\nShe laughed. \"Well, I had a boyfriend at the time. After seeing the video, he broke up with me.\"\n\n\"Did he say why?\"\n\nDanni took a sip of champagne. \"Something about being embarrassed to have his girlfriend on a porn site. I think it was just bullshit.\"\n\n\"Probably jealous that he couldn't make you come as hard as you did on the video,\" I said.\n\nDanni's dark eyes burned into mine. \"You're the first person to get that. I'm quite sure that was it. He was a bit insecure anyway and I think that pushed him over some edge. What the edge was, I can't say.\"\n\nWe had finished our drinks. I didn't want to end this conversation. \"Could we go somewhere and talk. I'd really like to know more.\"\n\n\"More? About what?\"\n\n\"About you. About what you did. About your sex life afterwards.\"\n\n\"That's a lot of more,\" Danni said. \"Not sure I know you well enough for all that.\"\n\n\"Fair enough. Let's start by getting to know each other better. How about dinner?\"\n\n\"Tonight?\"\n\n\"Yes. Have you eaten?\"\n\n\"Not really. I just had a couple hors d'oeuvres here.\"\n\n\"Come on, there are a couple decent restaurants down the block. My treat.\"\n\nDanni smiled. \"Sure. Might be fun.\"\n\nThe September evening was warm and we decided to walk to find a place to eat. We fell into an easy silence, each of us taking in the sights along the way. I recalled reading the article in the arts and culture weekly about the new project by David Curley. I knew some of his previous efforts as they pushed boundaries between the acceptable and the forbidden in sexuality.\n\nHis new concept was to invite women to come to his studio. They were to bring their favorite work of literature. It could be fiction, poetry, essays, whatever they really enjoyed reading. He would sit them at a table in front of a totally black background. You would only be able to see the women from the tabletop up.\n\nWhat you couldn't see is that the women were naked from the waist down, according to the description on the website. Underneath the table an assistant would use a vibrator on each woman as she read out loud. The camera was locked down and as the women read from their choice of literature, you could see them begin to react to the sexual stimulation that was occurring below. Some would start to squirm. Others would take deep breaths and try to continue reading. The session would end when the woman climaxed. The camera stayed on the women until they began to come down. They all usually laughed at the end. As the camera faded out you could hear studio noise and voices congratulating the participant. A couple times you would hear the woman comment on the experience.\n\nI had watched all ten videos that were on the project's website. I found Danni's to be the most riveting. She was reading erotica. She kept control until about two minutes in. Then she began to react. Toward the end, she put her book down and gave into her orgasm. Her long hair fell in tumbles as she bowed her head. She brought her hand to her mouth and brushed her knuckles along her lips. She raked her locks and pushed them back. Licked her lips, closed her eyes and breathed through her mouth. At one point she put one hand under the table for a moment and smiled that enigmatic way that entranced me. When she came, she had both hands pressing on the table top as she let out a series of soft grunts. At the end, she pushed her hair back, looked directly in the camera, smiled and said, \"Well, well.\" She then laughed.\n\nWe found a small bistro that had a table for two. Sitting in the back, we ordered a bottle of wine and reviewed the menu. After our first glass had been served, we ordered. With nothing to distract us, our eyes met.\n\n\"You really don't mind discussing the experience? I am fascinated by exhibitionism. One of my avocations is collecting stories of exhibitionists. Allowing yourself to be videoed while having an orgasm is certainly high on the erotic side of exhibitionism. I love to hear your story and write it. I don't even know if I will ever publish them, I just love writing them. Of course, I would keep your identity obscured and I would allow you to read and review the story. So, can we talk?\"\n\nDanni thought for a moment. \"I guess I am open to discussing part of it. Well, all of it, actually. I'm not sure I want to discuss with you the other parts of my life or certainly my sexuality.\"\n\nShe smiled and added, \"Not at this point, anyway.\"\n\n\"Fair enough. How about you tell me how you got involved.\"\n\nDanni drank some wine and nibbled on a sesame bread stick. \"You mean how does someone who looks like a librarian end up having an orgasm that is recorded and shown to thousands of people?\"\n\n\"I think it's millions by now,\" I said, recalling the stats I read on the site. \"And, you hardly look like a librarian. You are quite beautiful and sensual.\"\n\n\"I don't see that. I dressed up for this opening tonight in clothes that are atypical for me. Besides, I am a librarian.\"\n\n\"Really?\"\n\nDanni nodded. \"I work at CUNY, in the social sciences area. I am responsible for helping with research.\"\n\n\"Well, you just shattered my image of librarians. Any of the students or co-workers see the project?\"\n\n\"I suppose so, none have mentioned it.\"\n\n\"So, how did you get involved?\"\n\n\"Now, that is a story.\"\n\n*** \n\nDANNI'S STORY\n\nIf I had to help one more hapless student work through how to conduct a useful search, I was going to scream. \"God, they spend enough time on-line; couldn't they write a decent research string?\"\n\nThe one thing that kept me going was the thought that I was meeting my sister tonight and going to an interesting-sounding party. Bradley, of course, did not want to come. He didn't like my sister's \"artsy assholes\". I didn't care. I did like them and found them fascinating and interesting. They were so far from the deadly academics I dealt with every day. Five o'clock finally rolled around and I was on my way.\n\nAs I rode the train to Brooklyn, I mentally ransacked my closet for something to wear. Dull colors, full cuts, and slightly out-dated garments were the rule these days. Getting off at my stop, I walked toward my apartment and passed a small clothing store. On impulse I entered. A young lady greeted me and asked if she could help. \n\n\"I need to find something to wear to a party where there will be artists, hipsters and lots of cool people.\"\n\nThe girl laughed. She eyed the plain long skirt, oxford cloth shirt and brocade vest that I was wearing. \"Something not quite along these lines,\" she said.\n\n\"Definitely not along these lines,\" I agreed.\n\nThe sales girl helped me select a short pink skirt, a pale blue cami with a charcoal blouse to wear over it. She added a scarf and some funky jewelry to complete the outfit. She convinced me to buy a couple pairs of lacy thongs. \"Feel sexy, look sexy,\" she said.\n\nLooking down the girl asked if I had any other shoes. I shook my head. The girl wrote out the address for a shoe store in the neighborhood. She promised to call them and ask her friend to help me pick out something to go with my new outfit. As she was packing up the purchases, the girl said to be sure to leave at least three buttons on the blouse undone.\n\n\"You have a nice body,\" she said. \"Let it show a little. And, think about not wearing a bra, your breasts are beautiful.\"\n\nI thanked her and took my bags to the shoe store. Another young lady helped me pick out some shoes that made my legs look good and added some spark to the rest of what I planned to wear.\n\nAs I regarded myself in the mirror that evening, I couldn't recognize the person looking back. Bradley had been and was due back later that night. So, I did not have his input on my new look. When my sister rang at the door, I wondered what she would think. After buzzing her in, I waited by the door until she knocked. I let her in, letting the door cover me.\n\n\"Ready, Danni?\" my sister asked and then stared. Her mouth opened and she looked me up and down.\n\n\"Is that you?\"\n\n\"All me,\" I said smiling. \n\n\"Wow, you look fab. What got into you?\"\n\n\"Tired of the old frumpy, dumpy stuff.\"\n\n\"Well, it's about time. You're not wearing a bra under that cami, are you?\"\n\n\"Nope. And, I just might undo one more button on this blouse. Plus...\" I lifted my skirt to show her the tiny thong I wore.\n\n\"Good for you, Danni.\" My sister hugged me. \"Good for you.\"\n\nWe took a cab to the loft where the party was. Arriving a little after ten, Aubrey and I found the party in full swing. Aubrey introduced me to the host, David Curley.\n\n\"Aubrey, darling, you did not tell me you had such a delightful sister. Welcome, Danni. I hope you enjoy yourself tonight. Feel free to wonder around the place and meet all these other fascinating people. To tell the truth, some of them are not so fascinating, but you'll have to work that out by yourself.\"\n\nAubrey and I got drinks and wandered around. She introduced me to some of her friends and I chatted with some other people I had met at past parties. Aubrey managed one of the higher end galleries and knew many of the artists working in New York. Not too many artists, writers and bloggers crossed into my world at the library. \n\nLooking for a bathroom, I walked to the back of the huge loft and found a long line. I decided it could wait a bit. I strolled back toward a room defined by black partitions. Entering I found a total disarray of CDs, DVDs, tape cassettes, boxes full of paper, a desktop computer and shelves filled with random piles of books and other materials.\n\n\"Fucking disaster, isn't it?\"\n\nDavid was standing next to me.\n\n\"Oh, sorry, I didn't mean to intrude on your private space.\"\n\nHe grinned and looked around. \"No problem. I told you to look around. This mess depresses me.\"\n\n\"Fits the image of the artist,\" I said. \"You know, he can only concentrate on his work. Can't be bothered to sort out all the details.\"\n\n\"Actually, I am quite an organized person and really enjoy order. The problem is that I am completely incapable of doing the organization. It drives me absolutely crazy trying to find anything in here. I waste hours moving piles around. God should send me an angel librarian.\"\n\n\"Well, I don't officially have wings or a halo, but I do qualify for the librarian part. I'd be happy to help you.\"\n\nHe turned and looked at me. I realized my new clothes did disguise the frumpy woman hiding inside. His eyes lingered on the opening in my shirt. I felt my nipples grow stiff and thought he probably could see how they pushed against the fabric of the soft cami. \n\n\"Are you kidding me?\"\n\n\"Nope. Have my masters in library science. I work at CUNY full time.\"\n\n\"Sweet Marian the Librarian, you are a gift from the gods. And, you would consider taking on this dump?\"\n\n\"Yeah. I could only do it nights and weekends, but I'd love it.\"\n\n\"Darling, love is too strong a word for wading in the detritus of my life. But, tell me, why would you even consider it?\"\n\n\"I work with assholes all day. They are totally inept and clueless. Here I would be part of, well, the artistic process. I think it would be fun.\"\n\n\"Danni, let me be straight. I am an asshole. Tonight you see the social and engaging David. Most times I am a grouchy, juvenile, temperamental and unrepentant asshole. As far as the artistic process, I dare say ploughing through this shit is pretty far removed. But, if you are game, I am prepared to pay you a paltry sum and you just might be around when the Muse makes a visit and we make some art. Still up for it?\"\n\n\"How about I start tomorrow?\"\n\n\"Saturday will work. Just not too early. I will be recovering from a night of many further abuses. Unless...\"\n\nI waited.\n\n\"If I gave you a key, would you mind coming in and at least trying to figure out what to do? Then, when I can function, at a nominal level, we can determine how to proceed.\"\n\n\"You'd trust me with a key to your loft?\"\n\n\"Are you planning to rob me?'\n\n\"No.\"\n\n\"Come in and kill me as I sleep?\"\n\n\"Of course not.\"\n\n\"Creep into my bed and take advantage of me sexually?\"\n\n\"What? No way!\"",
        "\"Ah, then I guess two out of three will have to do.\"\n\nWe both laughed and he pulled a key from his keychain. \"The outside door works on a code and this is for the lock to the loft. The code is 3-2-8-4-3. Know what that is?\"\n\nI thought for a moment and said, \"That's the numeric equivalent of your first name using a telephone keypad.\"\n\n\"Christ, you're smart. God, brains, beauty and the ability to create order out of chaos. Truly, you are an angel.\" He reached in and kissed my cheek. \n\n\"See you tomorrow,\" He said. \"I don't have much in terms of coffee and that sort of stuff. We may have some left over wine, cocaine and smelly cheese, uh, but, not too sure about the cocaine. If you want anything else, best bring it with you. I have to catch up with some people, so do not be put off if I don't see you out later.\"\n\n\"No problem. I'll be here around eight.\"\n\n\"God, do they have one of those in the morning?\"\n\nI laughed and David left me. I managed to use the bathroom and went to look for Aubrey. She was deeply engaged with a willowy model-type. Their hands were definitely exploring body parts that simple acquaintances never accessed.\n\nI cleared my throat and her companion looked at me and said into Aubrey's ear. \"Company, dear.\"\n\nMy sister pulled her hand from the woman's breast and turned. \"Hey, sis, what's happening?\" I recognized the intense stare resulting from ingesting a couple lines.\n\n\"Just wanted to share some news, but it can wait.\"\n\nThe other woman adjusted her top and said she'd be right back with a bottle of champagne. \"I'd love drinking bubbly from your tits,\" she said to Aubrey and headed off toward the bar.\n\n\"Someone new?\" I asked.\n\n\"Someone right now,\" Aubrey answered. \"What's up?\"\n\nI told her about David hiring me.\n\n\"Danni, that's great. He could use someone like you. Just be careful.\"\n\n\"Careful about what?\"\n\n\"This is a different world from what you're used to. Just be careful, that's all.\"\n\n\"I am twenty-eight. I think I can take care of myself.\"\n\nAubrey leaned in and kissed me. \"Of course you can, Danni. Just promise me to be careful. Ok?\"\n\n\"Ok. Still my big sister, huh?\"\n\n\"And, always will be. Do you mind getting yourself home? I might be tied up later.\"\n\n\"I don't doubt it. I hope the ropes don't leave marks.\"\n\nAubrey laughed out loud. \"I love you, Danni, you know that.\"\n\n\"Love you, too. Can we talk tomorrow after I'm through here?\"\n\n\"Sure. Let's plan to meet for drinks around six?\"\n\n\"Ok, but I'll call you to make sure.\"\n\nI spied the model making her way back. Aubrey turned and watched the embodiment of living sex approach. \"Yeah, that's cool. Check in first.\"\n\nThe next morning I grabbed a couple coffees and some scones from the corner shop and hailed a cab. I arrived at David's place a little after eight. The code worked and I took the freight elevator to the top floor. Letting myself in I surveyed the damage from the party. My first impulse was to begin to clean up. Instead I made my way back to his office and scooped off some papers so I could sit in the one chair. Sipping my coffee, I took in the challenge. By the time I had finished my cup I had a plan in mind. I pulled off my sweater, rolled up my sleeves and started in.\n\nIt was close to eleven when I heard footsteps in the hallway. I looked up to see a naked woman standing in the doorway. I recognized her from last night's party. She was early twenties, with short purple hair, styled with bangs. Not being too tall, she looked well proportioned. She was clean shaven between her legs and had a couple tats I could see.\n\n\"Hi,\" she said. \n\n\"Hi. I'm Danni. I'm working with David to sorta straighten up in here.\"\n\n\"Cool,\" she said and walked over to me. She offered her hand and we shook. \"I'm Dory, yeah like in Finding Nemo. I was named after my Aunt Doreen and that was before the movie came out, I swear.\"\n\nShe eyed the extra covered cup of coffee. \"God, that isn't coffee, is it?\"\n\n\"Uh, yes, would you like some?\"\n\n\"God, would I. David keeps no coffee around. Waking up here is the pits.\"\n\nI handed her the cup and she drank deeply. \"Jesus, that's what I needed.\"\n\nShe handed the rest back to me. \"Gotta pee. Nice meetin' ya.\"\n\nHer small butt disappeared around the doorway and I heard the bathroom door close. \n\nI was stacking some DVDs when she reappeared. \"Uh, sorry about the bare bod. I crashed here last night and, well, this is how I usually sleep. I didn't know someone was here. I mean I don't care, but didn't want to freak you out.\"\n\n\"No, it's fine. I guess that seeing naked people in an art studio is probably not unusual.\" \n\n\"Hey, it's only skin. Well, gotta run. Meeting some friends for lunch. See ya 'round, I hope.\" She came in and we shook hands again.\n\nAround noon, I ate one of the scones and went to the kitchen for some water. I managed to find a clean tea cup and drank tap water. \n\n\"Hey, you're here.\"\n\nI turned to see David. He was dressed in a short purple robe and looked like he just woke up.\n\n\"Yep. Told you I would. Got a lot done, too.\"\n\n\"Are you always this peppy at the crack of dawn?\"\n\n\"It's after noon.\"\n\n\"Exactly,\" he said. He smiled and I knew he was kidding.\n\n\"I, uh, brought you some coffee but I only have half a cup left.\"\n\n\"You drank my coffee?\" he said with mock indignation.\n\n\"Actually, it was Dory.\"\n\n\"Oh, you met her. Was she naked?\"\n\nI laughed. \"Totally.\"\n\n\"Girl hates wearing clothes. Anyway, I'd take even half a cup right now.\"\n\nI went to the office grabbed the coffee and extra scone. David was sitting at a stool and rubbing his temples. I passed him the coffee and put the scone on a napkin. \"Nourishment, too. You are too much,\" he said. He drank the coffee and chewed on the scone.\n\n\"Some party, eh?\"\n\n\"Guess so. I went home kinda early.\"\n\nDavid nodded and finished the coffee and scone. \"Let me get dressed and you can show me what you've done.\"\n\nA few minutes later, he joined me in the office. I had organized things into separate piles. There was one for DVDs, CDs, tapes and paper that were labeled. I pointed to another large stack that contained things that were not labeled.\n\n\"I thought we could begin this way. At least we can look at what's going to be easy to id and then tackle things that don't have any id. Then you can let me know what system works for you. Once you do, I'll take care of it. Also, I didn't look at anything that was unlabeled. I'm not sure what might be private or confidential.\"\n\nDavid looked around as I spoke. \"It looks better already, Danni. Let me think about what sort of system makes the most sense. As far as the unlabeled stuff, dig in. There is nothing in here that you can't look at. Of course, I know you will respect my work and not discuss what you might see.\"\n\nDavid left the room and I worked by myself starting with the pile of unknown material. I began with paper files. I read each and if it looked like it went with something I had seen I marked the cover in pencil. I would make permanent labels later. \n\nI could hear noises in the loft as I worked. Around two David popped his head in and asked if I was hungry. Since my stomach had been rumbling for a while, I nodded and he motioned me to follow.\n\nHe had cleaned a spot on the kitchen breakfast counter. He must have ordered in because there were several containers of Chinese food. \n\n\"Beer, wine or water?\" he asked.\n\n\"I like beer with Chinese,\" I answered. He placed a bottle of Brooklyn Lager in front of me. He sipped water.\n\n\"What should I use to review the electronic media?\"\n\n\"You can use that desktop or I can give you my laptop,\" he said. \n\n\"I have a laptop. Would you mind if I took some of them home? That way I can review them at night when I won't be here.\"\n\n\"Ok, but I should warn you. Some of those images are rather graphic. There will be many nudes and a good number will certainly be erotic. I did a project with couples who like to pose together and, well, maybe you can imagine. I wouldn't want to offend you. The thing is that erotica is part of my work. So, I suppose you ought to get used to it.\"\n\n\"I'm sure I can handle it,\" I said bravely. Inside, I wondered if I could. \n\n\"Well, take what you want. I've been thinking about your question on organization. I don't know if this would be too much, but since you offered I'd thought I'd ask. For the projects, like the couples, put all the material together. For individual work, like portraits, file them alphabetically by individual. For commercial work, use the client's name and file alphabetically. Now, it would be really good to have some sort of cross-reference system. For example, Dory. We could just put her in an alpha listing. She also does some commercial work for me and she models in some of my conceptual pieces. We did a shoot last month at the Botanical Garden. She and some of her girlfriends posed nude among the various flora. So, in that case I would want to look for Dory, or Botanical Garden, or the date. Would all that be too much?\"\n\nI thought about it and said I could create a database that should be searchable on a number of levels. It might take me a little longer, but in the long run it probably would be the best solution.\n\n\"You're amazing, Danni. Thank you.\"\n\nAfter lunch, I went back to the basic reorganization and packed up a stack of DVDs to take home. Around five, I called Aubrey, but just got voice mail. I told her I was headed home and she could reach me later.\n\nDavid was in the main part of the loft directing a crew of cleaners. I told him I'd be back tomorrow.\n\n\"Uh, ok, but I have a shoot here. You won't bother us, but I thought I'd give you a heads-up.\"\n\n\"I guess clothing will not be a big part of the shoot,\" I said with a smile.\n\n\"Well, not a lot of clothing,\" he said.\n\nHe told me to take a cab and he'd include it in my pay.\n\nBradley was home when I arrived. He had been playing lacrosse and was still dirty and in his uniform. \"Hey, babe.\" \n\nI kissed him and suggested a shower would offer a tremendous improvement. He headed toward the bathroom and I set up my laptop on the small desk in our living room. I picked a DVD and loaded it. The first thing was video. The camera was locked in position and David was directing a young couple. They were naked and he was pointing out the futon on the floor behind them. I couldn't understand much of the audio, but could determine they were talking. After mutual nods, David walked toward the camera and then disappeared. A young woman brought in some lights and reflectors and adjusted them to David's liking. I could hear his voice clearly telling the couple to begin when they were ready. In front of the camera a card appeared that read: Joanie & Amos, 2/14/14 Love Series # 8.\n\nThe woman dropped to her knees and immediately began fellating the man. His penis quickly grew hard and she was working it aggressively. I was mesmerized, never having seen any real lovemaking. I had seen a couple porn movies, but this was real and with non-actors.\n\n\"Jesus, don't tell me you're working for some porn maker.\" Bradley was standing behind me, still wet from his shower.\n\n\"I don't think it's porn. David seems to be doing a series of couples making love with each other.\"\n\n\"News flash, Danni. That is porn. She is blowing the guy. I don't see any art there. I'm not sure I like you working for a porn king.\"\n\n\"Bradley, David is not a porn king. He's a recognized artist and produces many works, some of them erotic.\"\n\n\"Well, 'David' is filming a fucking blow job and that is porn. I don't think you should go back.\"\n\n\"I don't agree with you. And, I am going back. I like him and he is a serious artist.\"\n\nBradley snorted and said, \"He is a serious asshole. Besides regular guys don't have dicks that big. I bet you he's a porn actor.\"\n\nI didn't say anything. I knew Bradley was sensitive about the size of his member. Once we ran into one of his former girlfriends. They did not part on good terms. David started in on her and she got pissed. She ended the argument by saying if he had a dick bigger than a baby carrot maybe he could have made her come. She wished me good luck and stormed off.\n\nBradley called her every disgusting name he could think of. For the rest of the night he kept describing her as frigid and a bitch. I never complained about his penis, but I also never had a very good orgasm with him. He was also pitifully stingy with foreplay and thought my clit was something that warranted only a passing acknowledgement as he sped to screw me.\n\nI watched the video to the end as the woman obviously swallowed. As she released his softening member, he bent and they kissed and hugged. I could see that they believed they just made love. I wrote down their names and date on the cover and fast forwarded past two additional videos involving them. It must have been on the same day, only later. In one they had intercourse and on the other the man did oral on the woman. I at first was uncomfortable watching the man's long dick enter the woman. Halfway through their lovemaking, she turned and got on all fours. He continued to make love from behind. At this point, I was beyond uncomfortable and was seriously aroused. I could only make out a little bit of sound, but the noise they made as their bodies slapped together was unmistakable. I heard him cry out that he was close. She turned her head and said pull out and do it on her ass. He withdrew and stroked his erection a couples times before exploding on her butt and lower back. I used every ounce of strength I had to not put my hand between my legs. The woman lay flat on the futon and the man fell beside her. They met each other's eyes and laughed.\n\nOn the rest of the DVD were eight couples. Of that total, there were two lesbian couples and one gay male couple. I only watched long enough to capture their names and the date from the marker card. I was too excited to watch them make love as I had with Amos and Joanie.\n\nWhen I ejected the DVD, my pulse was racing. I looked at the big stack next to me and wondered if I could get through them. I was relieved to find that some were stills of portraits he did. Most of the people were clothed, although there were several nudes. There were two DVDs full of pictures that David took after Super Storm Sandy. He captured both the destruction and the people standing among the ruins of their lives. It was powerful and David had a remarkable talent to capture so much in one simple photo.\n\nBradley was playing a gory video game and occasionally would look in my direction and make a snide comment. By eleven I was bleary eyed and craved sleep. He said to go ahead because he wanted to finish some level of the game. I wasn't in bed five minutes when I was sound asleep. I admit that my dreams were much more erotic than I could ever remember.\n\nI was up and out the next day while Bradley still slept. I had the DVDs with me as well as my notes. Arriving at the loft I was surprised to see David and the young woman I saw setting lights in some of the videos. They were arranging ladders around what looked like a mattress that rested on the floor and covered with a black sheet.\n\nI called out and David turned. He seemed pissed to have been interrupted, but his gaze softened when he recognized me. He also looked at the bag from the deli I was carrying.\n\n\"Danni, happy you came back. Are you also bearing gifts?\"\n\n\"Coffees and Danish,\" I said.\n\n\"Danni this is Hannah. She is my most trusted assistant. She makes things work and for that I am eternally grateful.\"\n\n\"I might believe that,\" said Hannah \"if you stopped swearing at me and threatening to fire me every five minutes.\"\n\n\"Ah, but have I ever really fired you?\" David asked as he took the deli bag and looked inside.\n\n\"About a hundred times,\" she said. \"But you always call me back.\"\n\n\"See we have a perfect symbiotic relationship.\"\n\nHannah laughed and came over to shake my hand. \"He really is an asshole, you know.\"\n\n\"So he's told me,\" I said.\n\n\"Well, if you can believe anything thing he says, believe that.\"\n\n\"That's it. You're fired,\" he roared.\n\n\"Fine,\" said Hannah, \"set your own fucking lights.\"\n\n\"I meant you're fired after you finish working today. Who knows? If you don't screw up too bad, I may deign to let you work with me again.\"\n\nHannah turned to me, \"See? Asshole.\"\n\nShe took the bag from David. Fortunately I brought extra coffees. She took one, handed one to David and gave me the third. There were two large Danish. She broke one in half to share with me and gave the whole one to David.\n\n\"So, did you plunge into the darkness of those discs?\" David asked.\n\n\"Yes.\"\n\n\"And?\"\n\n\"For one thing, I learned some new positions. I just need to find a contortionist to partner with me.\"\n\nDavid laughed. \"Danni, I'm sure you could have your pick of contortionists.\"\n\nI told him how I had catalogued the material. He nodded and seemed pleased. \"So, what's your plan for today?\" he asked.\n\n\"I can start to put projects together. It won't be their final sorting, but I will start to list all the material in each project and then I can work on the database.\"\n\n\"Sounds dreadful,\" he said. \"Think you could spare a bit of time to work on what you described as 'art'?\"\n\n\"I guess. What do you want me to do?\"\n\n\"Help sweet Hannah. Maybe you can save her from having her ass fired.\"\n\nHannah flipped him the finger and drank her coffee.\n\n\"We'll be joined soon by some volunteers for a new idea I'm working on. I will be filming them from above. It really takes two pair of hands to set the lights and manage the reflectors. I will be perched on top of a ladder and shooting down. Hannah will tell you what to do.\"\n\n\"Ok, if that's what you want, I can try.\"\n\n\"Fine. But, let me tell you, or maybe warn you, about the shoot. I'm working on an idea to record people as they are having an orgasm. I want it unfiltered and just focus on the upper parts of their bodies and not show them masturbating. I have three people, two women and a man, coming. They've agreed to lie on the mattress and get themselves off while I record it.\"\n\n\"I'm not sure I understand the purpose.\"\n\nDavid's dark eyes burned into mine. \"It's art. It speaks for itself.\"\n\n\"Bullshit, David,\" said Hannah. \"Don't let him bully you with that 'art' crap. He has a purpose for everything he does.\"\n\nDavid glowered at her and slowly broke into a smile. \"If I hadn't already fired you once today, I'd fire you now.\"\n\nHannah shrugged it off.\n\n\"Danni, we all have faces. I mean we have different faces for different parts of our lives. I bet you have one face for work. You probably have another when you're talking or enjoying being with your sister. You have a face when you're reading something that intrigues you or when you watch a good film. I am trying to capture the face of sexual pleasure, expressly orgasm. It may not be the face that is never seen, but it certainly is one that we don't show that often to the outside world\u2014usually only to our lovers. I don't know if this idea will work, but we'll try it a couple times and see.\"\n\nI wondered if I could watch people giving themselves orgasms. I recalled last night watching the couples making love and how that affected me. Now I would be one step closer to reality and observing live and in real time. Smiling to myself I thought it certainly wasn't like the library.\n\n\"I'm willing to try to help.\"\n\n\"Great. Go dump that stuff and get up on a ladder. Our volunteers will be here in an hour.\"\n\nFive minutes later I was standing opposite Hannah and wrangling a bar of lights into place. David called out instructions on focus and tilt of the lamps. \n\n\"Danni, come down here and lie on the mattress.\"\n\nIt wasn't a request. I climbed down and asked where he wanted me. \n\n\"Just lie there with your head toward the center. Your feet can be on the floor.\"",
        "I took my position praying that he wasn't going to ask me to start playing with myself.\n\nDavid was perched on top of the third ladder holding his camera. \"Move in toward the center more. Too much, back toward the edge. Ok, hold it right there.\"\n\nI could see the red light on the front of the camera blink. \"Pull your hair behind your head and lay on it. I don't want to see it splayed on the sheet.\"\n\nI complied and he pointed the camera at me.\n\n\"Are you wearing something under your blouse?\"\n\n\"A bra,\" I answered.\n\n\"Good. Take off your blouse.\"\n\n\"Now?\"\n\n\"No next fucking week. Yes, now. For god sakes, it's only a bra.\"\n\nHannah looked at me and smiled.\n\nSitting up I unbuttoned my blouse and slipped it off. All the while, I could not believe my hands were performing this task.\n\n\"Back in place, hair behind your head.\"\n\nHe shot some more video and reviewed it on the viewer.\n\n\"Hannah, get down there and give me a white balance. I want to make sure I get the skin tones correct.\"\n\nScampering down, Hannah retrieved a plain white card and held it in front of my face. \n\n\"I don't suppose you wore a bra today?'\n\n\"Have I ever?\"\n\n\"Yeah, yeah. Well, take off your shirt and get next to Danni.\"\n\nFighting the flee instinct, I watched Hannah pull her tee shirt over her head. Her small breasts barely moved as she tossed it away. I felt my nipples as they extended against the satin of my bra.\n\n\"Move into the frame. Think of a pie and each of you as a third. That's how far apart I want you. Your heads should be almost touching.\"\n\nHanna took her place. David shot some more. \"Do another white balance,\" he barked. Hannah got up and grabbed the card to hold in front of her face after she laid back down. \n\n\"Ok. Move your hips back and forth, I want to be sure you stay in focus.\"\n\nI said to Hannah, \"Move our hips.\"\n\n\"He wants to see what it would look like if you were fingering yourself.\"\n\n\"Oh,\" was all I said and began moving my hips from side to side.\n\nWhen we had done that for a few minutes, David shouted. \"That's enough. You guys can get up.\"\n\nHannah stood and picked up her shirt. I stared at her naked torso. She was quite lovely and her small, round breasts looked so sensual. She noticed me staring. I looked up and she smiled and pulled on her shirt. She looked at the points of my nipples in my bra. I blushed and redressed.\n\nDavid was standing back on the floor. \"I think this will work. I want you two up there. You each should have a reflector and be sure to have gloves in case I want to adjust the lights. I'll be in the bathroom.\"\n\nHannah retrieved two reflectors made of white, shiny material. She also gave me a pair of heavy gloves. \"Never touch one of those barn doors without a glove. Burn the shit out of your fingers.\"\n\n\"Barn doors?\"\n\n\"Those flaps on the side of the lights. You can adjust them to help regulate the amount of light.\"\n\n\"Why is he waiting in the bathroom?\"\n\n\"David always takes a big dump before a project. Says it clears his mind. I tell him that's because he such a big shithead.\"\n\n\"You say that to him?\"\n\n\"I do. Then he fires me.\"\n\n\"Get fired a lot, I guess.\"\n\n\"At least three or four times a week.\"\n\nI nodded. I finished my coffee and heard the buzzer. Hannah checked the security camera and let in the guests. She opened the loft door and a few minutes later two women and a guy walked in. They seemed to know Hannah and they all hugged. She introduced me and we all waved.\n\n\"David said you could use his bedroom to get ready. There are some supplies there if you think you need them.\"\n\nThey walked up the stairs to what I assumed must be the bedroom on a platform constructed at the back of the loft.\n\n\"Supplies?\"\n\n\"Lube and a vibrator. He won't let them use a vibrator to finish off during the shoot, but they can use it to help get them started. Sometimes it takes a while when someone is watching and you're being filmed.\"\n\n\"Voice of experience?\" I asked.\n\n\"Well, David needed someone to be his test dummy. First time it took me like forever to come. After that we experimented with using a vibe, dildo and lube. Found the vibe worked best, at least for me.\"\n\nI couldn't believe that she would so casually masturbate in front of her boss. I was quickly learning that the rules here were not like a normal workplace.\n\nDavid reappeared and Hannah filled him in on the arrivals. \n\n\"Ok, get up there and let's play with light.\"\n\nDavid directed us holding the reflectors in various positions. We also adjusted the barn doors to his liking. I heard a noise and turned to see the three guests walking down the steps. The man was completely naked and the women were naked on the bottom. One wore a bra and the other a crop top tee shirt.\n\nDavid greeted them warmly. I had the feeling they knew what he wanted. He spent some time arranging them on the mattress. One woman had a vibe. After climbing back up his ladder, David checked the view in his camera. He called down to make slight adjustments to their positions. He had us tweak the lights and how we held the reflectors. He ran some video and then checked it. Hannah scampered down to do a couple white balances.\n\n\"Ok. We're all set. Get started.\"\n\nThe man took hold of his penis and began to stroke. I figured that there must have been some lube on his hands because his penis glistened in the bright lights. The woman with the vibe turned it on and was running it along the sides of her pussy. The other woman began by rubbing her hand all over her pussy.\n\nNot much happened for a few minutes. Eventually man became hard and he stroked with one hand and fondled his balls with the other. I had never seen a man masturbate in real life. He kept his eyes closed as his hand glided up and down the shaft.\n\nThe vibe woman, who was full-bodied with short brunette hair, alternated between sliding the pink instrument inside her and running alongside her clit. The third woman had two fingers inside and played with her clit with her other hand. Within another couple minutes, we began to hear groans and moans. The vibe woman was lifting her hips to push against it as it disappeared deep inside her. Her free hand was aggressively mauling her clit. The third woman, a blond with a full blond bush, was thrusting three fingers in side and rocking her hips. I could notice both women's nipples were pushing against the fabric on their chests.\n\nThe man was now grunting loudly and I guessed he wouldn't hold out long. The brunette turned off the vibe and put two fingers in as deep as they would go as her bottom bounced on the mattress. The blond was making squishing sounds I could clearly hear high on my ladder. She was the most vocal, calling out with every push of her fingers. \n\nThe man suddenly cried out and I watched him cum, covering his belly with spurts of cream. The blond was next as she let fly a string of obscenities and now had four fingers inside. After about thirty seconds, the brunette panted hard, grabbed her breast and came with a series of loud grunts. The three lay quietly for a moment. The blond started laughing and the others quickly joined in. David called cut, complimenting them on what they had done.\n\nMy pulse was racing, my heart was pounding and my panties were damp. I had never witnessed such an erotic display. I glanced over at Hannah. Her nipples were quite evident under her shirt. She smiled and mouthed, \"Cool\".\n\nDavid climbed down. He stood next to the mattress looking down at the three spent masturbators. \"One more time?\" he asked.\n\nThe blond laughed and said, \"You've got to be fucking kidding me.\"\n\nDavid smiled and said he was. He told them there were cold drinks in the fridge and they could help themselves. As they walked off, the brunette scooped some of the man's cum from his belly. \"I think I may have a snack as well.\" The three of them laughed as she popped her finger in her mouth.\n\nDavid told me and Hannah to turn the lights off but leave them set up. I went back to the office and started my organizing work. Hannah stuck her head in around noon and asked if I wanted lunch. She was ordering in and I opted for a Caesar Salad and iced tea. An hour later, she came back to tell me the food had arrived.\n\nShe and David were sitting in a corner of the loft where his video monitors and editing equipment were stacked. David had cued up the raw footage from the morning's shoot. We ate as we watched. You could only see the participants from about mid chest and up. By the third time we saw the footage, I was past being turned on by it.\n\n\"So, what do you think?\" asked David.\n\n\"Looks like people getting off,\" said Hannah.\n\n\"Do anything for you?\" he quizzed her.\n\n\"When it was happening live, yeah, I got turned on. But, now, I don't know. There's something not quite there. A disconnect.\"\n\nDavid nodded and turned to me.\n\n\"Like Hannah, it was erotic watching them do it. I'd never seen people masturbate in public like that. But as I watch their faces on the screen, I feel not involved.\"\n\n\"Why?\" David pushed.\n\n\"Well, as a viewer I know they are pleasing themselves. I'm watching, but don't feel part of it. It's more just like watching porn. No emotional investment on my part.\"\n\nDavid nodded and played back the last section where they all came.\n\n\"And, if you don't mind me saying more,\" I offered.\n\n\"No, go ahead. I get what you said before.\"\n\n\"It's sorta distracting. I mean having three faces to watch. Plus, since they all came at different times, it made it even more unfocused.\"\n\n\"Ok,\" said David. \"What would have made it better?\"\n\n\"One person,\" I said.\n\n\"Definitely,\" agreed Hannah.\n\n\"Ok, what else?\"\n\nI thought for a bit. \"I wonder how it would be if the person we were watching was not in control of his or her orgasm.\"\n\n\"How so?\" said David.\n\n\"I don't know. Like if someone else was making her come. Then maybe as spectators we could imagine either ourselves as the person having the orgasm or the person causing it. I think that might be even more interesting.\"\n\nDavid stood up and paced. He looked at the frozen image of the three faces on the screen and paced some more.\n\n\"I've got it. We should only show one person. Probably, just use women. Yes, that's it. Great. Now get the hell out of here and let me think about this.\"\n\nHannah and I stood to leave. David grabbed me and kissed my lips. \"Thank you.\"\n\nI went back to the office and tried to work. My mind wandered back to the discussion. I felt charged that I might have contributed to part of David's artistic effort. Soon, Hannah came to see me. \n\n\"I'm leaving. It was a lot of fun working with you, Danni. I guess you noticed that David now sees the new approach as his idea. Don't let it bother you, that's just how he works. I hope you and I can do work together again\"\n\n\"Me, too.\" I stood and Hannah hugged me. She said into my ear, \"David really liked your input, even if he won't say so out loud. That's a very, very good thing.\" She kissed my cheek. \"And, you are really pretty. I enjoyed being here with you.\" She squeezed me and was off.\n\nI was wrapping up for the day and went back to the main part of the loft.\n\n\"Got another second?\" David asked.\n\nI told him yes. He left and returned with a bottle of wine and two glasses. He poured us each some white wine and asked me to sit. He took a chair across from me.\n\n\"I've been working on the new approach. Tell me what you think. We'll just go with one woman, that I am convinced of. Instead of lying on the mattress, I'll have her sit at a table. Plain background, nothing to distract you. The woman will be dressed in her regular clothes, whatever she likes to wear. I'll lock the camera down and someone will be under the table. She will do, you know whatever, to get the woman off. We will be totally focused on her face and her reactions. What do you think?\"\n\n\"So, she just sits there. Looking at the camera?\"\n\n\"Yeah, that doesn't work for you?\"\n\nI wondered if I should say more, but figured the worst he could do was fire me from a job I didn't need. I did like the job, however.\n\n\"I think that will be weird. The woman should be doing something. Then we get to watch her try to keep doing something while her orgasm is building. Finally, she can't stand it anymore and gives in.\"\n\n\"That would attract you more than just watching her build to orgasm?\"\n\n\"I would feel more comfortable that way. I think just staring at a person staring at a camera is too strange. Plus, it's kinda boring.\"\n\n\"Ok, let's play with this. What could she be doing?\"\n\nWe were both silent. \"Playing solitaire?\" I offered.\n\nHe shook his head. \"Using her phone?\" he suggested.\n\n\"Nope. People get annoyed when people use their phones while you're with them.\" I said.\n\nWe were thinking.\n\n\"Goddamn it!\" he screamed. \"She'll be reading a fucking book. A book she really likes.\"\n\n\"Reading out loud?\"\n\n\"Right, right, that's perfect. Then as her orgasm builds we can watch her struggle to keep her place. Finally, she'll throw the fucking thing away and cum. God, yes, that's it.\"\n\nHe bent and kissed me again. \"This is amazing. We're fucking brilliant.\"\n\nRefilling our glasses, he then made notes on his tablet. \n\n\"Anything else?\" he asked.\n\n\"So, we aren't going to see, you know...\"\n\n\"Her pussy?\"\n\nI nodded. \"No, just the top part of her body. To the world it will look like she's sitting at any table and reading a book.\"\n\n\"How will you, I mean, who's going to, you know, do it to her?\"\n\n\"Does that make a difference?\"\n\n\"Hell, yes. The woman is going to be brave to allow herself to be filmed having an orgasm. That takes a lot of courage. What you don't want is her worrying about who's doing it to her. She would have to be completely trustful of that person. Plus, how will it happen? I don't think many women will be open to just anyone using their fingers or, even a tongue.\"\n\n\"You're right. Right, ok. Let's think. How's this. Putting aside who does it, what if that person uses a vibe. That helped Hannah. We will assure her it's clean.\"\n\nI interrupted. \"Use a new condom and let her see you putting it on.\"\n\n\"Ok, ok. A fresh condom for every time. Will a woman feel comfortable with someone using a vibe on her?\"\n\n\"Well, the person who agrees to be videoed will probably have fewer reservations than some others. So, I'm thinking that she would feel lots more comfortable with a vibe. Especially if the alternative is to have some stranger finger her or lick her.\"\n\n\"Is that how you feel?\" asked David. \"Would you prefer a vibe?\"\n\nI must have turned multiple shades of red. \"I don't think we'll have to worry about that. There is no way I could do it.\"\n\n\"Ok, but I think you are exactly the type of person who would be perfect. Think about it.\"\n\n\"Not going to happen,\" I said.\n\n\"Think about it, Danni. Just think.\"\n\n\"If I say yes to think about it, will you not pester my anymore?\"\n\n\"If you say yes to think about it, I will only ask you one more time. Deal?\"\n\nI nodded and said, \"Deal.\"\n\n\"Now, what would a woman feel most comfortable with, a man or a woman?\"\n\n\"I'm assuming that the woman can't bring her own partner or whatever.\"\n\n\"Yeah, I want the sex to be somewhat unemotional. You know not attached to feelings toward a particular person. I want to just concentrate on the stimulation, then distraction, and finally the orgasm. Let's see that raw, unfiltered face as she comes.\"\n\n\"So, will the woman be naked underneath the table?\"\n\n\"Hmm, I hadn't got that far. Let's see. I think it would be easier if she were. You know, it would give greater access to her pussy and her thighs.\"\n\n\"Then, I'd have to say that I think a woman would be better. First, she might know better how to tease another woman and read the signs of what she likes. Second, I think a woman would be less embarrassed to have her pussy so exposed to a woman than to a man. Also, a woman would understand all the wetness, aromas, and that stuff.\"\n\n\"God, you're really good at this. Ok, a woman it is. Right away I'm thinking of Hannah or maybe Dory.\"\n\n\"Are they gay?\" I asked recalling Hannah's embrace and her words to me.\n\n\"The lines are slightly blurred,\" he said.\n\nA mental image of Hannah with her pretty little breasts exposed flashed through my mind. Then, I imagined her playing with me as I tried to read a book. I was excited with these images bouncing around inside.\n\n\"Well,\" said David, \"good day's work. When can you come back again?\"\n\n\"I plan to take home some more material to review and catalogue. I also have my yoga class on Tuesdays and a staff meeting on Wednesday after work. I might be able to come over for a little while on Thursday evening.\n\n\"Ok, let's plan on it. How about I spring for supper?\"\n\nI agreed and, after packing the material I wanted to review, left the loft. Riding down the elevator, I tried Aubrey again. This time she answered.\n\n\"You are alive,\" I said.\n\n\"Barely,\" she answered. \"I have a new respect for the term fucked to within an inch of your life. That woman is a she-devil. Where are you?\"\n\n\"Just leaving David's. Want to get a bite to eat and a drink?\"\n\n\"Make that drinks, plural, and I'm in.\" We agreed on a place in the Village within walking distance from David's loft. I arrive twenty minutes later to see Aubrey sitting at the bar and flirting with the cute bartender. I admired my sister's looks.\n\nEven at a fleeting glance, you could tell we were related. Our hair is the same shade and shares a similar thick texture. Our eyes are hazel and tend to darken when we get emotional. Where my features might be called strong, Aubrey's are soft. She's shorter and thinner than I. Her fashion style is leagues beyond mine. Whatever she wears looks as if it were tailored for her. Aubrey also moves with a certain grace that seems to elude me. We have always been close, although she is senior by four years.\n\nShe saw me and waved me over. After hugging me, she introduced me to Shelly. \"Shelly is my new best friend and I understand she makes the best dirty Martini's.\" I nodded and soon we each had one in front of us.\n\n\"We'll have a table in ten minutes or so,\" said Aubrey. \"Tell me about David.\"\n\n\"Maybe you should tell me about Willowly Woman,\" I said with a grin and sipped the potent drink.\n\n\"Who?\" Aubrey said with a coy smile.\n\n\"That tall, thin, gorgeous model-type who wanted to drink champagne off your tits. Remember her?\"\n\n\"Oh, her! That woman must have a twelve inch tongue. God, I swear she was going for my tonsils at one point.\"\n\nShelly giggled as she overheard Aubrey. We looked at her and she stuck her tongue out to lick the tip of her nose.\n\n\"Remind me to get your number,\" said Aubrey. Shelly smiled and slipped her a napkin with a number scribbled in black ink.\n\nAubrey and I caught each other up on the rest of our lives. Shelley just placed the second round of Martinis in front of us when the maitre'd told us our table was ready. Carrying our drinks we followed him to the back of the restaurant and each took one side of a booth.\n\nA tall, dark-haired, young woman came over to introduce herself as Martine. She had a French accent and told us she'd be taking care of us. She looked directly at Aubrey as she spoke. Since we had our drinks, Martine relayed the night's specials. Setting down the menus and the wine list, she then handed Aubrey another paper napkin. This one had her name and number.\n\n\"What's this?\" Aubrey asked.\n\n\"Shelly told me I should give you my number.\"\n\n\"Why?\"\n\n\"We are roommates,\" said Martine with a smile. \"We also work very well together when we are not in the restaurant. You should give us a call, no?\"\n\nAubrey looked back at the bar to see Shelly grinning.\n\n\"Yes, maybe I should,\" she said.\n\nAfter Martine left, I said, \"Do you have like some magnet for hot women?\"\n\nAubrey sipped her drink. \"What can I say? Sometimes people like to make friends.\"",
        "I snorted and studied the menu.\n\nMartine returned, we ordered and Martine touched Aubrey's hand as she was taking back the menu.\n\n\"I wonder if this restaurant allows fucking on the tables,\" I said.\n\n\"If they do, I am definitely having seconds.\"\n\nOver bread and olive oil, I filled Aubrey in on what has happened at David's and the material I was reviewing.\n\n\"Sounds like you're getting an education,\" she said.\n\n\"It's not like I'm a virgin or don't know about sex,\" I said defensively.\n\n\"Oh, so you have watched three people masturbate in front of you before?\"\n\n\"Well, no. But, I bet you haven't either.\"\n\nAubrey just smiled.\n\n\"Oh, shit,\" I said, \"I should know better.\"\n\n\"So, do you think you'll be one of his subjects?\" my sister asked.\n\n\"Seriously, Aubrey, can you imagine me doing that?\"\n\n\"I can, Danni. You are beautiful and hot, yet look so innocent. That's a killer combination. Besides, you just told me you are experienced sexually.\"\n\n\"That's a lot different than letting some woman get me off while being videoed.\"\n\n\"Just saying, Danni, you should think about it. I think it would be good for you.\"\n\nAfter dinner we headed our separate ways. Riding home in the cab, I replayed my conversation with my sister. Did I have the courage to participate in David's project? I wasn't sure I had the courage to even think about it.\n\nWork was hectic. It was that time when many papers were due and I had a steady stream of desperate undergrads hoping for miracles. I did my best but knew that the level of their scholarship would be less than stellar. I worked until close to seven on Monday. Bradley was home eating pizza when I arrived.\n\n\"Some in the oven,\" he said. I grabbed a piece and a beer and joined him on the couch.\n\n\"You're late tonight,\" he said.\n\n\"Helping save academic lives,\" I muttered.\n\n\"So, how did yesterday go over at the artist's?\" Bradley made the word artist sound like a disease.\n\n\"Fine. Got a lot of stuff done.\" I certainly wasn't about to describe the project David was working on. Bradley already thought I was working for a smut merchant. I made a mental comparison of the man who masturbated and Bradley. The man had a long, thin penis that Bradley would have disparaged.\n\n\"See you brought some more shit home with you,\" he said.\n\n\"Bradley, don't be a jerk. I'm helping David organize his work. I'm good at this sort of thing, am getting a couple bucks to do it and, frankly, am enjoying it.\"\n\n\"You mean you like porn?\"\n\n\"Again, this is not porn. It's...\"\n\n\"Yeah, art. I get it. You can have people fucking each other, but if you say it's tastefully done then it's art. To me it's just fucking and that's porn.\"\n\n\"I'm not going to argue with you on that. Besides, you watch porn.\"\n\n\"Yeah, I do. At least I call it what it is. I don't try to disguise it.\"\n\nI finished my pizza and said I was taking a shower. When I got out, Bradley was watching a game on TV. Taking a stack of DVDs, I went to the bedroom and told Bradley I was going to work for a while.\n\n\"Sure. Don't get too turned on.\"\n\nI mentally flipped him off. In bed with my laptop, I loaded a DVD. It was a series of videos focusing on the penis. There were all shapes, sizes and colors. The videos started out with a relative tight shot of a flaccid penis. A woman's hand would then come into to scene and play with the penis until it was hard and then the hand would disappear. The camera stayed focus on the penis until it returned to a soft state. The camera stayed on the same penis and the hand reappeared. This time the hand stroked the penis hard and kept at it until it spurt out its cream.\n\nI wondered if the hand belonged to Hannah or Dory. Maybe it was someone else or a person the penis already knew. Each shoot was preceded by a card with a man's name and date. I wrote a label for the disc and recorded the names and dates in the database. I figured I had seen a lifetime's worth of penises.\n\nBy this time, I was ready for sleep. I put all the material on the floor and lay on my side. I slid my hand between my legs and felt the dampness of my panties. Imaging me staring at a camera, naked from the waist down, I slipped my hand inside my underwear. The touch felt so good, so I continued until I obtained relief. As I drifted off, I envisioned Hannah popping her head up from where she was between my legs and kissing my lips.\n\nThursday evening found me in a cab heading to the loft. My mind was a jumble of images from the discs I had been cataloguing and my stomach was unsettled thinking about what David was going to ask me. I used my key to enter the loft. I called out and David told me to head to his office.\n\nHe was seated in front of his desktop computer and looking at the database I had created. \"This is great, Danni. I know it's only a beginning, but it will save me an incredible amount of time.\"\n\nClosing the database, David led me to the kitchen area. He had set two plates on the breakfast counter. Pouring me a glass of red wine, he saluted me. I sat as he pulled food from the oven. I know he ordered in, but it smelled great. As we ate, David asked me about my work at the college. After dinner, he said he wanted to show me something.\n\nHe led me to a dark corner of the loft. He then turned on some lights. There was a raised platform, about three feet off the floor. On top was a plain table and behind the table a black curtain. Underneath the table, part of the platform was cut away. In the space stood a low stool.\n\n\"Our volunteers will be seated at the table,\" he said. \"The camera will be on a raised tripod and you will only see from the tabletop up to about six inches over the person's head. Our manipulator will sit on the stool. In this way, she can have access to our volunteer and not have to be bent over in an uncomfortable position. I think I've thought of everything.\"\n\n\"Will there be skirting around the table?\" I asked.\n\n\"No,\" said David. \"The camera will not be seeing under the table.\"\n\n\"But the woman will be naked below the waist,\" I said. \"You will be able to see her and if you have other people here, they will also see her. It's one thing to agree to have someone get you off. It's entirely something else to have your sex parts open for inspection by everyone and see you being played with. Put skirting around the table.\"\n\nDavid nodded. \"Ok, understood. Anything else?\"\n\n\"How are you going to recruit volunteers?\"\n\nDavid smiled. \"Already started. Of course, Dory and Hannah have agreed. I think Hannah will be the main manipulator. So, Dory will take her place when Hannah is reading.\n\n\"A fellow artist who does performance art sent an email to women she works with. Three of them agreed. Then there are a couple women artists I know in this building. We help each other all the time and they said yes. I called a performance artist I know and she agreed. Plus, I know this porn star who works out of New York and she's on board, depending on when we shoot. The last person is my sister.\"\n\n\"Your sister?\"\n\n\"Great woman. Up for anything. She's done shit for me before. She and her boyfriend were Couple #8 on the Love Series video.\"\n\n\"Joanie and Amos?\"\n\n\"She's Joanie. So, that gives me ten and I think I don't want any more than that. I'll see what type of reaction I get. If it goes well, I can do more.\"\n\n\"That was fast work.\"\n\nDavid smiled. \"Gotta move while the Muse is working. So, do you think you could help?\"\n\n\"Uh, you already have all the volunteers.\"\n\n\"Yeah, although I would bump anyone of them to have you, what I'm looking for is sorta like a grip. Help out moving stuff around. Maybe get drinks for the girls. Help with lights. And, you know, maybe some other stuff.\"\n\nI nodded. I had learned that David always had clear ideas of what he wanted. I need to know what the \"some other stuff\" involved.\n\n\"Well, you have a calming way about you. I was thinking maybe you could be with the girls when they get ready. Talk to them, keep them calm. After listening to you the other day, I think some of them might be nervous. You could be their friend for an hour. Could make things go a lot smoother. What 'd you say?\"\n\n\"Ok, I can try.\" I wondered how I would react to seeing these women experience orgasm. I was so far from my comfort circle that I felt I was in another dimension.\n\nThe rest of the evening I spent working in David's office. By the time I left at ten, I felt I had accomplished a lot. The office was looking better and less cluttered. David walked me out and hailed a cab to take me to my apartment.\n\nOn Saturday I arrived again early in the morning. I set the extra coffee and a croissant on the kitchen counter and headed off to the office. As I was passing the bathroom, the door opened, a woman stepped out. Not to my surprise, she was naked. Unlike Dory, she tried to cover herself.\n\nWe each apologized. She ducked back in the bathroom. A minute later she appeared in the office covered in a towel. \n\n\"Sorry, again. David said that someone might be coming in early. Of course, I figured he meant around noon. I'm Marsha.\"\n\nI introduced myself. I told her there was a coffee on the counter. \"You brought that for David?\"\n\nI nodded. \"Well, too bad for him,\" she said with a smile. \"If he got up at a decent hour, he could have had it. Anyway, he should be used to me taking his stuff.\"\n\nI must have looked puzzled. \"I'm his ex. I guess you didn't know.\"\n\nI shook my head. \"Yeah, we get together every once in a while for a 'remember the good old days' fuck. I came down here to use this bathroom because the toilet in his bedroom needs fixing. Well, nice to meet you, Danni. David has spoken about you. I think he likes you, but I doubt he lets you know that.\"\n\nI worked steadily until noon and the office was almost completely in order. I still had a lot of work to complete on the cataloguing, but at least materials were filed in some order. David stuck his head around the door and asked me if I wanted something to eat.\n\nIn the kitchen, Marsha was unpacking a large paper bag. She had containers of soup, Asian noodles and a stack of cookies wrapped in plastic. Her hair was still damp and hung down to her shoulders. She was as tall as David, maybe even an inch taller. I could see a few streaks of gray in her dark hair, but she looked vibrant. She wore a tight turtleneck and jeans that showed off her butt and legs. In the quick look I had of her naked body, I knew her figure was just short of voluptuous. I pegged her age at mid-forties, which would make her a bit younger than her ex.\n\n\"I understand you two have met,\" said David with a twinkle in his eye.\n\n\"Yes, we have and thank you, dear, for not telling me that Danni would be hear at eight in the morning.\"\n\n\"Oh, don't pretend to be so fucking modest,\" David growled. \"Half of New York has seen your tits and ass.\"\n\nI was shocked at the rudeness of his comment.\n\nMarsha laughed. \"Don't mind him, Danni. David is referring to a play I did a number of years ago that required nudity. Although we did enjoy a decent run, I don't think half the population saw the show. Of course, I have modeled countless times for the old lecher.\"\n\nIt then dawned on me that I had heard of her as an actress. Her last name is different from David's. I recalled that she never does movies, but is on Broadway a lot.\n\n\"David has told me about his new project,\" said Marsha over lunch. \"It sounds intriguing. I just wonder if it will really work.\"\n\n\"Why?\" I asked.\n\n\"Would people really be interested in watching a woman orgasm?\" she said. \"I mean if she were naked that would certainly attract some people. But what you will see is a clothed woman and the only sign of her arousal will be her face. I don't know. I suggested he try it out before he books all the people to come in and do it.\"\n\n\"Christ, Marsha,\" David barked. \"Not everything is a fucking play. We don't have out-of-town runs to work out the kinks. This is something that happens in the moment. I don't want to overthink it.\"\n\n\"David, I'm not saying you have to overthink it. I am saying that before you go off the deep end at least stick your toe in the water.\"\n\nDavid played with his soup as he thought. You could see his mind working out various possibilities. \n\n\"I guess it wouldn't hurt to try one shoot,\" he said begrudgingly.\n\nMarsha smiled and ate some noodles. \n\n\"Ok, how about we do it this afternoon.\"\n\n\"You have someone ready,\" asked Marsha.\n\n\"Yeah.\" He looked at me.\n\n\"No way, David. I told you I couldn't do this.\"\n\n\"Look, it's just a rehearsal, sort of. No one else will be here. We try it out and then see if the whole idea has any merit. Besides it was your idea.\"\n\n\"Oh, now it's my idea. I thought you were telling everyone that you came up with this approach?\"\n\n\"Details, details, Danni. Come on let's just do it.\"\n\n\"Who would do the, you know, stuff.\"\n\nDavid looked at Marsha.\n\n\"Don't drag me into this mess,\" she said.\n\n\"Come on. You told me that you thought Danni is a lovely girl.\"\n\n\"I do,\" said Marsha. \"That does not mean that I am willing to play with her pussy.\"\n\n\"No, no,\" David protested, \"You'll be using a dildo, a vibrator.\"\n\n\"Do you have one here?\"\n\n\"Uh, well, actually no.\"\n\n\"Then discussion ended.\"\n\n\"Maybe this one time, we could, you know, not use a tool.\"\n\n\"Meaning, my hands?\" asked Marsha.\n\n\"Yeah. It's not like you haven't done that before. And more.\"\n\n\"God, you're an insufferable prick.\"\n\n\"Maybe it was the prick part that made you leave our marriage,\" he said. \"Couldn't take all the maleness.\"\n\n\"As you know, it was that the prick seemed to like visiting other places. As far as not being able to take 'maleness, at least I learned to enjoy an orgasm without a guy,\" Marsha spit back. \"It took me a while to realize that big pricks equal big egos.\"\n\n\"You seemed to enjoy a big prick last night.\"\n\nMarsha laughed. \"Yeah. Every once in a while it's good to remind yourself why men are on this earth. Really, if it weren't for sperm, I think we women could get along quite nicely, thank you.\"\n\n\"Well, fuck you. Anyway, will you help out or not?\"\n\nThis back and forth was making my head spin.\n\n\"Hey,\" I cried out. \"You know I'm standing right here. I haven't said yes. How about including me in the conversation?\"\n\nThey looked at me, almost surprised to see me.\n\nMarsha smiled. \"Sorry, Danni. This is how David and I get. You can probably figure out why we're not still married.\"\n\nTo my surprise, David touched my arm. \"Sorry, Danni. We get carried away. Seriously, I would love to have you work with me. This will let us know if our idea is any good.\"\n\nMy mind was turning like a windmill. I recalled Aubrey's words. She thought it would be good for me to try something like this. I knew she would not hesitate even one second to do it.\n\n\"I'm not saying I'm going to do it, but for the sake of argument, I would want to be sure that no one ever saw it.\"\n\n\"You mean besides me, Marsha and probably Hannah.\"\n\n\"Hannah?\"\n\n\"Yes, as much as I complain about her, I appreciate her sensibility. She's good at putting herself in the audience's shoes. I think you are, too, but you not would be able to be totally impartial.\"\n\n\"So, if, and I'm not committing, if we did it, no one else would ever see the tape.\"\n\n\"Not without your full and expressed approval. I promise.\"\n\nTaking a deep breath, I shifted my gaze to Marsha. \"Would you be ok with, you know, doing the deed?\"\n\nShe laughed. \"Danni, you make it sound like a punishment. To answer you, yes I would. I also hope you could trust me.\"\n\n\"I think I could. I never had a woman touch me there.\"\n\n\"I understand. Maybe you could just think about the feeling and not who's giving you the feeling.\"\n\n\"God,\" I said, \"this is crazy, but I'm thinking I just may say yes.\"\n\n\"Great,\" said David. \"Let me get set up. You could use my bedroom to get ready.\"\n\n\"Get ready?\" I asked.\n\n\"You know, loose the jeans.\"\n\n\"Oh.\"\n\nMarsha took me by the arm and led me away. \"Come on, Danni, we need a glass of wine and then we can go upstairs.\"\n\nMarsha poured two full glasses of white wine and I followed her up to David's bedroom. We sat in the unmade bed. I took a big swallow. \n\n\"I don't mind saying I'm really nervous.\"\n\nMarsha patted my leg. \"I can understand, Danni. I admire your courage.\"\n\n\"Stupidity might be a better description,\" I said and took another drink.\n\n\"You know you don't have to do this. Screw David. If you are really uncomfortable, then say no.\"\n\nAlthough I just met Marsha, I felt a warmth toward her. \"It's just that I'm not a sexually adventurous person. My sister would be like peeling her clothes off and spreading her legs.\" I laughed and said that makes her sound bad, which she isn't.\n\n\"I have a boyfriend and we have sex. Before him, I had a couple other boyfriends. So, it's not like I'm a virgin, or something.\"\n\n\"Danni, you do not have to justify your hesitancy with me. I just want you to know that I support you and if you tell David no, then I'll make him back off.\"\n\nI finished my wine. I looked at Marsha's glass. She smiled and handed it to me.\n\n\"Danni, may I ask if you masturbate?\"\n\nI choked on the mouthful of wine. I finally caught my breath and looked at her.\n\nSmiling, I said, \"Yes.\"\n\n\"Do you like it?\"\n\n\"Usually.\"\n\n\"Ok, then think of it as just masturbation.\"\n\n\"Well, all the other times I've been the one doing it.\"\n\n\"Never had a boyfriend masturbate you?\"\n\n\"God, no.\"\n\n\"Girlfriend do it?\"\n\n\"No way.\"\n\nMarsha rubbed my leg again. \"It'll be fine, Danni. I just wish we had a vibrator. I think that would make it easier for both of us.\"\n\n\"Holy shit!\" I cried.\n\n\"What?\"\n\n\"I just remembered that last weekend David tried another approach. Hannah said he had supplies and one of the women used a vibrator that David provided. I bet it's here somewhere.\"\n\n\"Let me go ask him,\" she said. \"In the meantime, maybe you should, you know, take off your jeans and undies.\"\n\nI nodded, drank half the wine and tried to smile.\n\nAfter Marshs left I flopped back on the bed. I could feel the wine starting to affect my brain. I also noticed that I was feeling something between my legs. I undid my jeans and pushed them down, kicking them to the floor. I ran my hand over the front of my panties and was startled at how damp they were. I lifted my butt and pulled them off, dropping them on top of my jeans. Sitting up and crossing my legs, I chugged the last of the wine.\n\nMarsha knocked and stuck her head in. I waved her in, trying to hide my embarrassment at being half naked. She told me I was right and hurried into the bathroom. I could hear her rummaging around and then listened as the water ran in the sink. Marsha appeared holding the vibrator I had seen last week. She dried it with a towel and placed it on the bed. She went to the nightstand and pulled a condom from the drawer.\n\n\"Want to do the honors?\" she asked. I shook my head no.\n\nShe rolled the condom over the vibrator. She turned it on and the humming sent a jolt through my body, even though it was nowhere near my pussy.\n\n\"Shall we go down?\" she asked. I stood, letting my hands cover my pussy. Marsha looked at me and went back to the bathroom. She returned with a large bath towel. I took it and wrapped it around my waist.\n\nTogether we went downstairs. David was adjusting lights. He turned as he heard us approach. I thought his smile was brighter than the lights in his studio.\n\n\"This is going to be great, Danni. Thank you.\"\n\nThe two glasses of wine were working their magic. \"No problem,\" I said.\n\nThere was no skirting on the table. David saw me looking. \"Uh, sorry. I just don't have anything here right now.\"\n\n\"No problem,\" I repeated and dropped the towel. Both David and Marsha were taken aback by my boldness. I giggled. Even without the lights shining directly on my pussy, I looked down to see moisture among the dark curls.",
        "\"Wait,\" David said. \"You need a book to read. I've got a pretty good selection here, what would be a favorite?\"\n\nI thought for a second and said, \"Jane Austen.\"\n\n\"Jane Fucking Austen,\" he screamed. \"No way. God, that will put you to sleep, not turn you on.\"\n\nHe stood there thinking. Marsha stood there holding a vibrator. I stood there with my naked pussy on display. Funny, how it all seemed natural.\n\n\"Yes, I've got it.\" David turned and hurried over to the far wall that was covered by a floor to ceiling bookcase. He moved the mobile ladder into a spot and climbed up to reach for a book. He came over to me and handed me the \"Delta of Venus\" by Anais Nin. I had heard of it, but never read it.\n\n\"This should do the trick.\" He suggested a section and I opened the book to that point. It was a short story entitled Lilith. Marsha helped me up onto the platform. She spread the towel on the seat. I sat at the table, the book opened in front of me. David handed Marsha the microphone. She stood behind me and snaked the wire through the top of my shirt, where I had left two buttons undone. Her hands pushed the wire between my breasts, her fingers ever so softly caressing the warm flesh. Marsha lifted the center portion of my bra and fed the wire through. She clipped the mic to the side of my shirt. Her hand gently cupped a breast. \"You have such beautiful breasts, Danni. In fact, you are beautiful all over.\" \n\nNext she positioned herself under the table. I felt her pull the wire down, across my tummy and then to the side of one hip. She attached it to a box that eventually connected back to the camera. Her fingers, playing along my bare waist and hips, were like the touch of a bird, light and flittering. \n\nMy knees pressed tightly together. I could sense Marsha settling on the stool. \"We're ready, David,\" she called out in a low voice.\n\nLights came on and I squinted to adjust to their brightness. David fiddled with the focus and then I saw the red light blaze at the front of the camera. As we had discussed, I looked squarely into the lens.\n\n\"My name is Danni and I am reading from The Delta of Venus by Anais Nin.\" I looked down and began to read the story. Marsha's hands stroked my knees and pushed them apart. I slowly let her push them away from each other. I could hear the vibrator begin to buzz and I felt dampness.\n\nAs I read, occasionally glancing at the camera, Marsha ran the vibrator along my thighs. My legs were still too closed for her to have access to my most private part of all. The vibrations along my thigh felt good. Suddenly the noise stopped. I looked up in surprise, but then bowed my head to read. Marsha's fingers played along my thighs. Her delicate touch was like a dozen butterflies beating against my bare skin. I felt a finger brush my pubic hair and took in a breath. Marsha's hands pried my thighs farther apart. I knew she could probably see my wetness and maybe even smell my arousal. I had just started a new paragraph when her finger ran along my cleft.\n\n\"Oh,\" I cried out. I took yet another deep breath and took up my reading at the place where I left off.\n\nI heard the buzz. The hard object touched my thigh, just where it met the flesh of my groin. I stopped reading as the vibrations traveled through my sex. My wetness increased.\n\nI continued the story. The vibrator touched the knee of the opposite leg and every so slowly made its way toward my pussy. I was finding it more difficult to read. \n\nThe point touched my cleft. \"Ugh,\" I cried out and brought one hand to my mouth. Closing my eyes, I tried to gain control over my body. The vibrator was moving up and down my cleft, the tip not quite penetrating.\n\nI read. Marsha exerted some pressure against a thigh and I willingly spread my legs wider. The vibrator moved along the entirety of my pubic area. I squirmed in my seat. My fear had now transformed into pleasure.\n\nI looked at the camera. David was not viewing through the camera, but instead stood next to it. His eyes moved from my face to my open sex and back. Even at this distance I could detect the bulge in his pants. \"I'm turning him on,\" I thought. I smiled and stared into the lens.\n\nAs I read more, Marsha pushed the vibrator past my sensitive lips. I gasped and held my breath. Closing my eyes, I fought for control. As I opened them and tried to focus, I was shocked to see Hannah standing next to David. She smiled at me. It was such a sweet and warm smile, that I could not help to smile. Oddly, her presence gave me comfort.\n\nI had no idea how long we had been involved in this session. Later, I was to find out we were only a little over two minutes in at this point.\n\nI could feel myself on the ascent to a climax. Marsha ran the vibrator quickly up and down my parted lips, the tip still only slightly penetrating me.\n\nI searched for my place in the story:\n\n'She brought her legs together in anger. She thought that if this wild sexual mood took hold of her just then, she would not know what to do. Would she get up suddenly and say she had a headache and leave? Or could she turn towards Mabel\u2014Mabel had always adored her. Would she dare turn to Mabel and caress her?'\n\nMarsha pushed the vibrator into my cunt. \"Oh,\" I cried out and hung my head. I grabbed three deep breaths and tried to gain control over my body. Slowly, I raised my head as Marsha withdrew the incessant stimulator. I noticed David and Hannah staring below the table.\n\nI looked for the place where I left off:\n\n'She had heard of women caressing each other in the movies. A friend of hers had sat this way in the darkness of the movies, and very slowly her companion's hand had unhooked the side opening of her skirt, slipped a hand to her sex and fondled her for a long time until she had come. How often this friend had repeated the delight of sitting still, controlling the upper half of her body, sitting straight and still, while a hand was caressing in the dark, secretly, slowly, mysteriously.'\n\nThe tip of the vibrating tool touched my clit. I shook my head and took one hand to touch my mouth, stroke my lips. I know my tongue must have poked out. I again bowed my head and hair fell across my face. I didn't think I could take much more. I raised my head and hooked my hair behind my ears. Placing two hands on the book, I tilted it toward my face and tried to read. \n\nThe passage continued:\n\n'Is this what would happen to Lilith now? She had never caressed a woman. She had sometimes thought to herself how marvelous it must be to caress a woman, the roundness of the ass, the softness of the belly, that particularly soft skin between the legs, and she had tried caressing herself in her bed in the dark, just to imagine how it must feel to touch a woman.'\n\nThe tip of the vibrator again split my lips. This time it did not stop. Slowly Marsha guided it deeper into my cunt. The hardness pressed against my soft insides, the vibrations reaching every nerve of that so, so sensitive place. I was gulping air and shaking my head. Never had I felt anything like the sensations ricocheting through my groin, coming from the epicenter of my sex.\n\nI resolved to carry on.\n\nShe had often caressed her own breasts, imagining that they were those of another woman. Closing her eyes now, she recalled Mabel's body in a bathing suit, Mabel with her very round breasts almost bursting from the bathing suit, her thick, soft laughing mouth. How wonderful it would be!\n\nMarsha pushed the vibe as far in as she could and touched my clit with her finger, pushing down hard on the turgent bud.\n\nI dropped the book. I slipped one hand under the table and put atop Marsha's finger that was pressing on my clit. I pushed her finger harder against me. I pulled my hand away and back up into view. Putting both hands on the table, I hung my head and grunted. Marsha pushed harder on my clit, rubbed it back and forth as she pumped the vibrator in and out of my cunt. I released a string of breathy sounds. \n\nThe tsunami of my orgasm hit.\n\nI threw my head back, whipping my hair. There was no other sensation in my universe other than what was pulsating from my pussy. I slammed my thighs together and trapped the vibe and Marsha's finger. The vibrations would not stop. I willed them to do so, but the pulsation was relentless. A second wave overtook me, larger, deeper and darker than the first. My one hand flew to my mouth while the other kept contact with the table in a feeble attempt to keep me from losing all contact with reality.\n\nMarsha pried her hand from my clit and turned off the vibrator. I relaxed my thighs enough so she could pull the item of torture from my cunt. I was falling fast from the acme of my release.\n\nI pushed my hair off my face and looked at the camera. Euphoria raged through my body.\n\nI laughed. Remembering what David wanted I picked up the book and said.\n\n\"My name is Danni and I've been reading from Delta of Venus by Anais Nin.\n\n\"Well, well,\" I said. And smiled at the camera.\n\n*** \n\nDanni looked at me. Both of our faces were flushed.\n\nThe waitress refreshed our coffees looking from one face to the other. I'm sure she must be wondering what we could have been talking about to affect us in this way.\n\n\"So, did you show your boyfriend or let him see it when David published it?\"\n\nDanni sipped the hot coffee. She looked at the dark surface, hair falling over one eye. As she fixed the wayward lock behind her ear, she smiled.\n\n\"I had a copy of the final project. On it were me and the nine other ladies. I was so eager for him to see it. After I had watched my video and the other women, I agreed to let David include me in the final mix. I was proud of being part of this work.\"\n\n\"He looked at it and made snide comments about the two women whose sessions preceded mine. When he saw me on the screen, he went stiff. As he watched, he grew angrier. Even before I reached my climax, he turned off the disc. He screamed at me. I mean literally screamed at the top of his lungs. He called me every name he could think of, including a whore and a porn slut. He said he would be embarrassed if any of his friends ever saw me like this. Before I could even react, he was in the bedroom packing a bag. I tried to talk with him, but he would have none of it.\n\n\"He left and told me to be away from the apartment on Saturday because he would be around to collect the rest of his stuff. I know I should have felt bad, but what I really felt was relief. He was weighing me down and I knew I would be happy to be rid of his negative ballast.'\n\nI reached across the table and held her hand between mine. \"You're a brave woman, Danni.\"\n\nShe shook her head. \"I'm finally doing what I want and not what I think other people want me to do, or to be. I think I'm happy for the first time in years. I'm in control. Also, I've used my body and have affected other people with it. I gained a sense of power. Can you understand that?\"\n\nI smiled and brought her fingers to my mouth. I kissed the tips and said, \"Yes, Danni, I can understand that.\"\n\nShe stroked the side of my cheek. \n\n\"So what now?\" I asked.\n\n\"Well, I need to work, so I'm staying at CUNY. I am spending a lot more time at David's. Hannah and I are working on a couple projects with him.\"\n\n\"I saw Hannah on David's website in this project,\" I said. \"Next to you, I was most intrigued by her.\"\n\nDanni nodded. \"I was the one under the table.\"\n\nMy eyes widened.\n\n\"She asked me,\" Danni said. \"Told me she would feel really comfortable if I were with her. She had done most of the others and Dory did two. I felt honored, I think. She trusted me. And, she had confidence that I could be involved in such an intimate sexual situation.\"\n\n\"You obviously don't have to answer,\" I said, still holding her hand. \"Did you and Hannah ever...\"\n\n\"No,\" said Danni with a smile. She then added, \"Not yet. Although she looked so beautiful as I sat between her legs. She is smooth there and has the most incredible aroma. I could understand why women go with women. I have a feeling it's only a matter of time. And, maybe not that much time.\"\n\nI paid the bill and we walked out into the warm night.\n\n\"Thank you, Danni. I'm going to write this up and send you a copy. I want to know what you think.\"\n\nDanni gave me a card with her phone and email on it. She stepped forward and embraced me.\n\n\"You know back at the exhibit, you asked to know more about me.\"\n\nI smiled and nodded.\n\n\"I think I could share more of my life after this project. I can say my sex life is certainly different.\"\n\n\"I'd love to hear all about you,\" I said and hugged her.\n\nWe looked at each other and kissed. Our lips lingered, each enjoying the soft heat passing back and forth.\n\n\"Yes, that would be nice. I'll call you.\"\n\n\"I'll wait.\"\n\nWe went our separate ways\u2014for now.\n\n*****\n\nEditor's Notes:\n\nThis is a work of fiction and similarities to real occurrences is coincidental."
    ],
    "authorname": "AltheaRose",
    "tags": [
        "masturbation",
        "artistic nudity",
        "filmed sex acts",
        "exhibitionism",
        "nude selfies"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/her-orgasm-1"
}