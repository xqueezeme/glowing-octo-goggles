{
    "title": "The Trust Ch. 07",
    "pages": [
        "First let me thank you all for the votes and emails. And as I've said before, this is not meant to be the next great novel, so if that's what you're looking for, I'm sorry to disappoint. I started it wanting to do a running chronicle that spans years like a soap opera, so it may never actually reach a satisfactory end for some people. With that in mind, if you haven't read all previous chapters, I suggest you do so before proceeding.\n\nIf I haven't already scared you off, I hope you enjoy it as much as I do writing it. All mistakes are mine. All people, places and institutions are made up, this story in no way reflects reality and any similarities to it are coincidental. Enjoy.\n\n*****\n\nChapter 07\n\nMason was rethinking the whole Batman costume. Looking at himself in the mirror, he cringed at the idea that Marcus was somewhere around the hall, he would never live it down if his old friend caught him dressed like he was. His costume had the mask with cape, gloves and boots just like any good Batman outfit. But the rest of it consisted of his utility belt and a leather thong not much bigger than the g-string he had worn to Cybil's birthday. At least the cape covered his ass he told himself morosely, that and the mottled yellowish purple bruise on his side looked like part of the costume.\n\nBrigid and Cybil finally had to drag him out of the bathroom. Cybil had chosen to be outrageous as always, insisting her Robin outfit would match his. So she too had mask, cape, boots and gloves, only in dark greens and reds. Her costume also ended with a utility belt and a thong, leaving her as bare-chested as Mason. Granted her chest wasn't any better developed than the boy wonders, but even with her hair slicked back in a ducktail, the resemblance ended there.\n\nBrigid's last-minute costume had turned out better than she had hoped. It was along the same lines as his and Cybil's. The difference being that she had a leather bustier with a shelf bra, and bat signal pasties, plus her boots had four-inch stiletto heels. She hadn't expected to be there for the ball, but her father had surprised her by insisting they stay and keep Mason out of trouble. Finishing by telling her he was tired of her moping around when she was away from the boy. Luckily she and Erica had managed to put the costume together without needing anything custom-made, even the pasties were found on Amazon. The thong and bustier had come from Leathers & Feathers.\n\nAllan was MIA, he'd left a message that he and Aida were off on their honeymoon, creating a weeks worth of speculation. Brigid had predicted it, and had been smug when the ring had appeared on Aida's finger. But even she was surprised that they didn't invite anyone to the wedding or courthouse, or whatever they'd done. Nor had Allan elaborated on where they were off to for the honeymoon.\n\n\"There's no way I can go down like this.\" Mason complained. \"If Marcus sees me.\" And he shuddered.\n\n\"Don't worry.\" Cybil told him and smirked. \"I ran down there while you were hiding in the bathroom. He was very complimentary about my costume, but when I told him that Brigid's was even skimpier, he grabbed a six-pack of Guinness and took off for his room.\" And she laughed. \"I expect he'll stay put.\"\n\nMason sighed in relief, then forgot all about it as the girls started popping into his room, their costumes well worth the money spent. Katey as Wonder Woman did not disappoint. She was in the Linda Carter outfit, though the shorts were cut higher and were definitely thinner. Mason wasn't sure how she stayed in the top, she was like jiffy pop ready to explode out of it. A golden coil of rope at her belt finished her look. The smile that grew on her face as Mason whistled and asked her to spin for him was becoming a more common sight lately.\n\nArdella had chosen to go with a ripped up version of the Halle Berry Catwoman costume in leather. Her lips a shocking red, and a long black whip wound about her artfully so that the tail of it swished off her ass.\n\nShelby's Supergirl costume was tame compared to the others, but still sexy with a micro mini skirt and half shirt that bared her midsection, plus the blush that hadn't left her cheeks since she put it on.\n\nBecky was the last one to show up, Cindy and her laughing as they wandered in. Becky confirming that Marcus wasn't likely to set foot outside his room for the rest of the night. Giggling and saying she didn't think her costume would have survived the showing if Cindy hadn't been with her. Her Poison Ivy costume was built on a green fishnet body stocking, with leather leaves and vines strategically arranged about her body and in her green hair. When she moved Mason felt like he was always right on the brink of seeing something. Poison Ivy had always been his favorite villain.\n\nCindy looked around at them all, having a hard time not concentrating on Mason. They'd tried to talk her into going with them, but she'd been too chicken. The idea of being out in public in something like they were wearing just scared her silly. Although she might have liked to try one of the costumes there at the hall, just for fun. She'd figured on staying there and keeping Marcus company, but it looked like he was going to be hiding in his room. She'd been drawn to Brigid's father almost from the first night, kind of puzzled by it herself until she realized that when he looked at Brigid, his eyes filled with the same love her father's had always held when he looked at her. Oh well, she thought, she and Danny would just have to find a scary movie to watch.\n\n\"I wish we could get some pictures here at the hall before we go.\" Cybil lamented, absently pinching one of her nipples as she looked around at everyone.\n\n\"There will be photographers at the ball.\" Becky reminded her quickly. \"I'll make sure we get copies of everything when they turn in their work at Leathers & Feathers.\"\n\n\"Well, we better get down stairs, our ride will be here soon.\" Brigid told them after looking at the clock on the wall. They had considered renting one of the Batmobiles available online, but decided it was not only cheesy, but impractical for seven people. Erica had suggested getting a party bus, she'd been on one a few times and promised everyone would love it. Nor had she been wrong judging by the chatter as they climbed aboard the bus a short time later.\n\nIt was lit up like a Vegas strip club with neon benches lining the walls and a stripper pole in the middle. The driver and owner of the bus was a muscular middle-aged black man who guaranteed discretion for his clients, but didn't try to hide his appreciation for his passengers as they boarded. Giving Mason a grin and a thumbs up as he came up the steps last.\n\n\"You can control the music volume there.\" He told him, pointing at a panel just inside the door on the passenger side. \"The bar is stocked and I don't card, anything you use will be added to the bill. Enjoy the trip, I know I'm going too.\" And he closed the door, glancing back for another look before heading out, passing the makeshift gate and manned check point Mason had agreed to let Big Ben place at the road and picking up the trailing car.\n\nWhen he'd gone with Eric Braden to meet with Ben, he'd gotten a bit of a surprise. It seemed that when the recon soldier had checked out the car before letting Mason get in with Maslow, he'd left behind a small listening device. So Ben had a recording of the entire conversation. \"Don't worry,\" the big man went on, \"Eric has already retrieved the bug, so we're in the clear as far as that goes.\" And Mason had relaxed only slightly, wondering what they planned on doing with the recording.\n\nBen assured him that the sole purpose for the recording was to protect Mason. \"I googled you after the call from Ms. Caro, so I know about your parents.\" And he paused to shake his head and sigh in sympathy. \"So I can guess at the significance of the name Maslow gave you.\"\n\n\"I'm not sure I want to pursue that.\" Mason had told him, going on to explain at Ben's frown. \"I guess I've always had it in the back of my head, that I'd find the man who killed my mother and return the favor. But after the way this thing with Alexei and Viktor got so out of control, I'm not sure I want to have any more violence around me or my friends.\"\n\nBen had let it go at that, going on to discuss the security detachment that would be following Mason, deciding he would start making careful inquiries of his own, knowing an enemy you ignored was the most dangerous kind.\n\nSo now Mason had to leave a detailed itinerary with Eric Braden and was followed everywhere he went. Though he had managed to keep them from following him around the school grounds and riding with him, as long as he promised to never duck out on them. And he'd had to agree to let Eric train him in evasion tactics, Big Ben stressing that in the future he was to run and let his security people handle any fights. So they had a trailing car and Ben had supposedly gotten a few of his men added to the security at the ball.\n\nIt didn't take long before the music was cranked up and a few of the girls started playing on the pole, the laughter pulling Mason from his musing. He'd taken a corner seat in the back, Brigid cuddled up to him. Ardella was pure grace dancing around the pole, but it was obvious Cybil had played around on one before, doing moves Mason had seen in movies, her little body very enticing as she contorted. By the time they crossed the Charles River, she was showing the others how to do a few of the simpler moves.\n\n\"Aren't you going to give it a try?\" Mason asked in Brigid's ear.\n\n\"This is the only pole on the bus I plan on playing with.\" She answered, grabbing his. \"I'll let the young ones figure out that those poles leave bruises everywhere come morning, though it was fun figuring that out when I was their age.\"\n\nMason groaned, \"I can only imagine, but if you keep playing with this pole we'll be putting on a show of our own soon.\" He warned as she held his awakening cock.\n\n\"Okay.\" She murmured, sliding her hand under his thong and pulling him out. Several of the women shouting approval as she swallowed him and the driver blew the horn a couple of times. Mason sighed and let his head fall back, surprised to find a convenient mirror above him that showed most of the girls watching. In the center of the mirror, was a furiously blushing Supergirl that seemed to be trying to use her heat vision on his cock.\n\n\"Now the party's starting.\" Cybil crowed, hanging upside down on the pole watching, her little nipples flushed and hard as diamonds. \"I think someone is getting tied up tonight\" She finished to cheers all around. Mason swallowed and so did Brigid a few minutes later.\n\nWhen they made it through the line of cars unloading, Mason was appalled to realize there was a red carpet with spectators he would have to walk. The girls just laughed and pushed him toward the door. After dropping them off, the driver would take some reserved parking close by until he was called back. He gave Mason a hearty laugh as the girls forced him out, then swarmed out to cluster around him. It was like being a star, so many flashes were going off he couldn't look at the crowd. The only saving grace was he doubted anyone was looking at him with all the women in their skimpy costumes surrounding him.\n\nBecky got them inside at the door, showing a pass her boss had given her in exchange for some promo shots, shots she hadn't yet mentioned to anyone except Cybil. The ball had been sold out when she asked her boss about it, but after hearing the plans they had, a deal was made. Pictures taken each year were used to advertise the next, the better shots were used every year, her boss was hoping for those. Of course Cybil had wanted to surprise everyone, figuring it was better to apologize than scare some of the more timid.\n\nBecky's boss Lynne found them and came over smiling after they'd been inside checking things out for about fifteen minutes and Mason was starting to relax. If anything he was over-dressed, most of the multitude wore things that consisted of lace or leather straps, with little left to the imagination.\n\n\"You all look wonderful!\" She exclaimed, clasping her hands in front of her ample chest. \"Oh Becky, you all look awesome. You want to do it now and get it out of the way?\"\n\nSeeing Becky color and look around like she was trapped, Cybil stepped in. \"We can't wait, where do you want to do it?\"\n\nLynne looked at her and did a little double take, her smile widening as she realized Robin was a topless girl. \"Oh my.\" She murmured, taking Cybil in from the boots up. \"Wonderful. I can see the shots already. Well, follow me everyone.\" And she turned back down the hallway she had appeared from.\n\n\"What's going on?\" Mason asked Becky as they followed, everyone turning to see what she said.\n\nBut again it was Cybil that answered, \"It's just some pictures, we had to make a deal to get the pass because the ball was sold out. And we were going to get pictures anyway, so I didn't see any problem with doing a few promo shots for them to use next year.\" She rattled off. \"Come on, it'll be fun everyone.\" And you could tell she was excited about it, as she fairly danced down the hall.\n\nMason glanced over to Brigid who shrugged, but she was grinning as well. \"Sounds like fun to me.\" She agreed, \"Besides, I think we all want a Batman poster for our rooms.\" And they all laughed at his horrified look.\n\nThey were led into a room with a large backdrop of the Leathers & Feathers storefront to one side. It was a night shot with bright neon signs. There were several large stand lights with umbrella diffusers and fans set about the room. Lynne was talking to a blonde woman standing by a huge camera on a tripod. Mason wasn't too sure about this, but the girls looked excited, even Shelby.\n\n\"Emma here will be your photographer,\" Lynne told them, turning and leading the blonde back to them. She was probably somewhere in her forties, it was hard to tell as she had a weathered look about her, and was whip thin. Her eyes seemed alive and intelligent though as she quickly looked them over. \"She's the best around here, and thank you for doing this. I know it's going to turn out marvelous.\" She finished, beaming at them before waving and leaving the room.\n\n\"Well now, are you all ready to have some fun?\" Emma asked, her eyes lingering on Mason just a little longer than the girls. \"I'm finished setting the lights, so we can get right into it, get you guys back to the party. But first I need you all to sign a standard release form.\" She told them pointing at a stack of papers off to the side on a table, watching as Mason and Ardella both read it before signing, Mason hoping it never caused a problem that had to be explained to Allan. Then walked over in front of the back drop and looked back at him. \"Over here handsome, I want to start with you and build the scene.\"\n\nCybil and Brigid both gave him a little shove to get him moving, then grinned at each other.\n\n\"I want you to stand right here, turn just a little to the left and give me a classic Batman most muscular.\" She told him, not shy about touching him to move his body the way she wanted it. \"Relax for a second, I want to get you set, then, when I'm at my camera I'll have you get all tense okay?\" she went on, setting his right fist at his belt and pushing his elbow back a hair. \"Try to hold that basic pose while I get set.\" And she trotted to her camera, slapping the quick release and lifting it from the tripod.\n\n\"Okay, nice,\" she went on, looking through the lens, \"don't smile, tuck your chin just a bit, yes, like that and give me your best brooding look.\" As she started taking shots. \"You're looking great, handsome. Let's see you flex, no, not that much, think sexy, not muscle beach. Yeah that's much better.\"\n\nBrigid watched, impressed with the photographer's sure hand and more than a little turned on by the pose she had Mason in, something that wasn't lost on any of the women present.\n\n\"Okay, you can relax in pose, this next will be easier to explain if I show you what I want.\" She told Mason, then pointed at Shelby and waved her over. \"Hold my camera for a second sweetie,\" she told her, thrusting it into her hands. \"What's your name handsome?\"\n\n\"It's Mason.\" Shelby supplied.\n\n\"Mason then, watch what I do, I wanna transition from that pose into a Zeus, then I'm afraid I need you to hold it for a while. Like this please.\" She took the same pose he was in, then moving her hands forward, the fists opening palms up into claws as she dropped her chin to stare at them, then slowly raising both arms as she tilted her head back, ending with her clawed hands reaching above her but the arms still bent. Her head back like she was railing at the heavens. \"When you get here, I want you to hold it, don't try to flex, just be tense as I get some shots. If you think you can remember the position, you can relax as I move the shot forward.\"\n\nMason was actually starting to enjoy himself, her directions taking away his uncertainty. When he saw she had the camera back and heard the shutter, he did his best to imitate her, imagining his hands covered in blood, he slowly raised them letting his head fall back and on impulse he roared, his mouth open wide.\n\n\"Beautiful, hold it, hold it.\" She told him, slowly shuffling to her left as she took another dozen shots. \"That was great Mason, try to hold that pose, but relax,\" and she handed the camera off to Shelby again. \"I need you and you.\" She pointed at Cybil and Brigid and waved for them to follow as she crossed to Mason. \"Names?\" she asked and nodded when they told her. \"Brigid, I want you here.\" She went on, taking her by the arm and moving her about five feet to Mason's right. \"Stand here with your back to him, no, turn just a little,\" like with Mason she was hands on, \"that's it, now look down and let this arm reach back.\" And she pulled her left arm back toward Mason, spreading her fingers in a grasping pose. Stepping back, she looked her over then stepped in and twisted her left shoulder a bit more. \"Try and hold that, my you have beautiful tits, lucky girl. When I start shooting, I want you forlorn, you're feeling spurned and reaching back for him. Then when I say, slowly turn your head and look at him. I'll direct you as we go, think you've got that?\" at Brigid's nod she smiled.\n\n\"Cybil then, you'll be here.\" She began, stepping up to Mason's right side. \"Your lord is distraught and you're helpless to comfort him. Start like this, one hand here griping his shoulder like you're trying to pull him back to you, the other hand on his side.\" Then she stepped aside as Cybil replaced her. Taking her front leg and sliding it back about a foot. \"Hold that, now look up at him, shoulders back, bow your back towards him just a hair, great, hold that.\" She went back to Shelby and got her camera.\n\n\"Okay, I know it's hard to hold, but I'll be as quick as I can, this is what I want to happen. When I say one, Cybil will slowly sink to her knees, looking up at Mason as she goes, her hands sliding down his body to rest wherever they end up, but not losing contact. When you reach your knees, let your head fall forward, bowing it as if you failed. Then hold. You got that?\" she asked, waiting until Cybil nodded. \"Great, now Brigid, when I say two, slowly, always slowly everyone, raise your head and turn it to look back at Mason as your right hand comes up to your chest. Then hold.\" Brigid nodded and she went on. \"Your cue is three Mason, I want you to look down at Cybil as if you just noticed her, your arms still up, then look back at Brigid and let your right arm reach out to take her hand then hold. No smiles people.\" She finished as she raised the camera and started shooting. \"One.\"\n\nIt played out the way she said, Cybil trying to get his attention and failing, Brigid and Mason ending with their eyes locked, fingers interlaced. All three enjoying it more than they would have believed.",
        "\"Great, just a couple more,\" Emma coaxed as she shuffled to the right this time. \"And done, relax, I think we got that one.\" She lowered her camera. \"That went better than I had hoped guys, this is going to be fun.\" And she smiled.\n\nShe put them through a dozen more scenarios, Mason in most but not all of them. Coaxing some surprisingly hot behavior out of Shelby, getting shots as she bent Mason back as though by main strength then leaned in and licked his nipple. She had Mason stand with Cybil in front of him, his hand sliding around to take a nipple between his fingers as his other hand turned her head back and up so he could lean in and kiss her.\n\nIn the end they all got to play and were all more than a little aroused. As a last shot, she had Katey, Brigid and Shelby positioned to Mason's right, while Becky and Ardella were on the left. Cybil was in Mason's arms, draped limply. The shot started with the female heroes and villains posed as if they were running towards each other, snarls on their faces. As the camera shutter started, Mason did his best slow run down the middle, carrying Cybil. While the girls attacked behind them, again in slow motion. Emma shooting as fast as she could.\n\n\"That's it folks.\" Emma told them, lowering the camera after what seemed like a couple hundred shots. \"I must say, I enjoyed this more than I had thought I would. You were all great, and I really appreciate it.\" She went on as they all stood, surprisingly a little sad it was over. \"I can't wait to see what we got.\" She opened her camera and changed the card out for another, putting the used one in a plastic case and stowing it in her bag. \"I hope you all enjoyed that?\"\n\n\"If it had lasted any longer, you'd have been shooting a porno.\" Cybil told her, \"I'm having a hard time not jumping Batman here.\"\n\n\"I hear you.\" Emma told her and grinned at Mason, setting everyone to laughing. \"But on a serious note guys, I shoot a lot of catalog stuff around here and I'm always looking for fresh models, especially if they take direction as well as you did tonight. If any of you need to make some extra cash, give me a call, there's always something going on.\" And she pulled out some cards to hand around. Giving the last to Brigid. \"Especially you honey, the jobs I could get with you, it just blows my mind.\" Brigid took the card then gave her a hug, whispering \"Thanks.\" in her ear.\n\n***\n\nMason was surprised to find that it was after eleven when they returned to the ball, it hadn't seemed like they were gone that long. The costume contest was just finishing up. A leanly muscled, flamboyantly gay, red-headed Gorean warrior leading two chained slave boys in silks taking first prize. Second going to what Mason assumed was a sparkling vampire couple, they were certainly beautiful and sparkly, but he hadn't seen more than one of those movies so it did nothing for him. The third place winners were his favorites, three guys made up to look like the stooges in diapers, whacking each other with rattles. He'd always loved that show.\n\nAfter that, they found the dance floor and spent another hour pairing up or dancing in small groups. The girls not missing any chances to rub up against Mason, who was finding the thong a precarious cover as time went by. At one point he looked up while dancing with Ardella, to see Becky dancing with Moe, Curly and Larry. Moe spanking her with his rattle. About twelve thirty, Cybil leaned in to Mason and whispered that it was time to take the party home, while giving his thong a squeeze, then started gathering the others, as he fished his phone from his utility belt and called the bus and the security detachment.\n\n\"It looks like you folks have been having fun.\" The driver said with a big smile as he watched the girls climb aboard, his gaze eating up each as they went passed.\n\n\"The fun's just getting started, twice around the park James\" Cybil told him, pinching one of her nipples and pausing for just a moment, then grinning at him. He nodded his head at her and started laughing, shutting the door as Mason got on last.\n\nMason headed towards the back where he had ridden before as they pulled out and started moving. But Cybil stopped him at the pole and backed him up to it. Holding him against it, she nodded to Katey, who took her magic lasso and started wrapping it around him and the pole.\n\n\"You have been captured by the Lasso of Truth,\" Cybil informed him, \"so you know you have to do whatever we tell you and you cannot lie.\"\n\nMason tried to smile bravely at her as he nodded, not trusting his voice or sure where this was going.\n\n\"Okay, the first question, and remember the rules, would you like me to take your big cock out so all these heroines and villains can see it?\" she asked, running her fingernails over his thong, then stripping it down as he nodded. There were groans all around as his cock quickly rose, practically thrumming with energy.\n\nCybil reached out and laid a finger on its head, pushing it down until it released and sprang back up, repeating this a couple of times as the girls watched and Mason moaned. \"You've been a terrible tease all evening Batman, keeping this hidden under your utility belt, not letting anyone but Batgirl play with it.\" Looking around her, she went on. \"I ask you, my fellow DC bitches, do you think that was fair?\" The others cheered her on, including Batgirl. \"What about you Batman, do you think each of these bitches should have her chances at a little taste of this?\" she asked, making it jump again. \"And remember, you have to tell the whole truth.\"\n\nMason was liking where this was going, so decided to play his role. \"I may be tied to the Batpole Robin, but you should know that when I get loose, I'll be forced to apprehend you along with the rest of these dastardly villains.\" He managed to say, fighting not to spoil his act by grinning.\n\nCybil rolled her eyes at him, letting him know how corny he sounded, then threw back her head and did her best maniacal laugh, slapping him just hard enough to sting a little. \"You will never break free you fool, you will watch as our slave, while we take over your city.\" Mason lost it a little at that, loving her attention to the etiquette of the super villain. \"Prepare for your punishment.\"\n\nKatey went first, it being her rope. She knelt and started licking his cock as she gripped the top of her bustier and pulled it down so her tits finally spilled free, causing Mason to groan.\n\n\"You're wondering how this is supposed to be torture?\" Cybil asked him with a wicked smile. \"Well, each of these lovelies is going to get a five-minute turn sucking your fat cock, with about a minute's reprieve between them. If one of us makes you cum, you'll spend the rest of your pitiful life as our slave. But if you can hold out, you might just get that chance at vengeance.\" Mason looked around him at all the hungry eyes, and prayed for strength.\n\nBrigid sat back and watched as the girls took their turns, absently peeling the irritating pasties off her stiff nipples. Her Mase had certainly found a life since leaving home, much of the credit going to the little hellion Cybil in her opinion, but a life far beyond what she'd imagined. She figured she'd just enjoy the show since she'd already had her taste.\n\nMason sighed inwardly as Becky followed Katey. He'd been a little weirded out by the idea of Becky and Marcus, but had been assured by both Brigid and Cybil, that Becky was a big girl. He'd avoided the subject with Marcus, just as he was sure Marcus was avoiding the subject of Brigid and him. Her enthusiastic attack on his cock did a lot to quiet any last worries though, and left him wondering if he could hold out.\n\nArdella went to her knees with every intention of claiming a victory. It had been a while since they had spent time together, and she was going to enjoy her five minutes. His cock was so hard she had to pull down on it to get her lips around the head. Purring as she took him as deep as she could and leaned her forehead against his stomach. One hand holding the exposed shaft as the other fingered his balls. Then keeping her head against him, she started rocking and rolling it, her tongue working the ridge at the bottom of it as her hand around the shaft started rapidly traveling the extra inch of space it had, almost bouncing back and forth between her chin and his pelvis.\n\nMason didn't even notice how hard the back of his head hit the pole as he jerked, sucking in a deep breath and staring at a cluster of neon lights. Anything to keep from looking at her, knowing to do so would be to lose it. By the time Cybil called time, he was shaking, and he knew Cybil was going to have an easy time finishing him.\n\nThe break was too short, his balls still feeling tight, when Cybil surprised him and looked to Brigid next, but was told she had already had hers. It was the first time she'd ever turned down a chance to play with him, and he was torn. But a smile and a wink from her set him at ease. That left Cybil.\n\nWhen Cybil turned to Shelby and got an emphatic nod and a grin to the question. \"Are you in?\" Mason found himself holding his breath. \"It's all yours then sweetheart.\" And she stepped aside.\n\nShelby had literally been dreaming about this, waking up mornings with the memory of how his cock had felt in her mouth. She'd paid close attention to the girl talk any time sucking cocks came up and filed all the tidbits away to try, even steering conversations around to the subject. Now she wasted no time going to her knees, filling her hand with the thick base, finding it harder than she remembered from her brief exposure. Her mind going over the litany of things she wanted to try as she wrapped her lips around just his head.\n\nMason quickly found himself in trouble, this wasn't the almost fearful touch he remembered. Her slender fingers were gripping the base of his cock almost painfully tight, and he could feel the head of it swelling in her mouth, becoming more sensitive to her rasping tongue. When she started humming he moaned and his toes curled. When she looked up at him through her bangs, he started sweating and felt his jaw clench as he fought to stay in control.\n\nCybil was just as surprised as Mason, and spent a long moment watching spellbound, the next worried that Shelby might just push Mason over the edge and spoil her plans for the evening. This was fun, but she had plans that included helping Mason exact his vengeance, of being the instrument of much of it. Then she heard it, the little rattle that would creep into Mason's breathing when he was close to cumming.\n\n\"Oh shit Shelby, stop...I can't.\" Mason tried to warn her, also trying to twist his hips to the side so he wouldn't cum in her mouth. But Shelby wasn't having that. She wanted to finish it, to taste him. Gripping his utility belt, she held him still as he filled her mouth, finding it hard to swallow fast enough, some of his cum spilling down her chin.\n\n\"Someone's been practicing.\" Cybil accused her with an arched brow and a grin as she finally pulled off him, her lips smacking as his head came free. She was pleased for the girl, even if she had messed up her plans.\n\n\"More like dreaming.\" Shelby told her, her already flushed face turning an even darker red, her tongue absently cleaning her swollen lips. Glancing up, she shivered at seeing Mason's hungry eyes still on her.\n\nCybil had had a fine speech worked out in her head in preparation for Mason's victory. Now she watched Shelby return to her seat, and racked her brain for a way to keep the fun going. But before she could gather her thoughts, the bus slowed and came to a stop, and when they looked forward, the driver gave them an apologetic shrug. \"DUI check point.\" He told them, and they could see the lights at the front of the short line of cars.\n\nBy the time they reached the front of the line, Mason was untied and seated, as well as tucked away. At least as tucked away as it was possible to be in his outfit. Katey too was tucked back into her top, while Brigid and Cybil had opted to wrap themselves up in their capes.\n\nThe driver assured them that it was routine, and that they'd be on their way in a minute. He was almost right, but the officer that took his information, happened to get a glimpse at some of the passengers. He took the paperwork and walked around to tap on the door for it to open, then climbed the steps and stood there with a stupid grin spreading across his face.\n\n\"What's the problem here Jenkins?\" a female voice called up to him, followed by a female officer with sergeants chevrons on her collar and a man Mason knew was one of Ben's. She looked at them, her eyes lingering on Mason for a second, followed by a wink. Then turned on her officer. \"Sometimes I wonder about you.\" She told him, taking the papers from his hands and jerking a thumb at the door. Turning and apologizing to them as he reluctantly left the bus, straining to see until the last.\n\n\"You folks don't party too hard.\" She told them, handing the papers back to the driver, before following the security guy down the steps herself. The door had no sooner closed than Cybil burst out laughing, and the tension broke.\n\n***\n\nBrigid chopped a pile of bacon up and browned it, while Cybil worked on making a bunch of toast. The bacon was mixed into a bowl with eggs and a mound of shredded cheddar, then the whole thing went into the hot pan to scramble. Mason had frustrated Cybil's efforts to get an orgy started the night before, with the simple expedient of throwing her over his shoulder and swatting her ass, telling her to be quiet. The others had laughed, then watched a little wistfully as he took Brigid's hand and crossed to the stairs.\n\nGlancing back at them, he'd winked. \"Sorry ladies, the Batcave's location has to remain a mystery.\" Then headed on up.\n\nIt was while they were all three lying there sweaty, trying to catch their breaths, that Mason rolled back over and looked Cybil in the eyes. \"This is what I want.\" He told her softly, wiping sweat from her brow and smiling at her. \"I love that you want to play, and what happened on the bus was a lot of fun. But I need to know that you and everyone else that might like to play is coming from the same place. On the same footing, I don't think Shelby is there, no matter what she did earlier. And I need the two of you,\" and he looked over at Brigid. \"to know that what's in here, isn't part of any game.\" And he trailed his fingers over Cybil's chest, lingering over her heart.\n\n\"He's going to love them,\" Brigid agreed with Cybil, \"it isn't in him to just fuck 'm and forget 'm, if it were, he wouldn't be Mason.\" She stirred the eggs, scraping the bottom of the pan with the spatula. They'd been talking about the night before and its ending.\n\n\"I know, and half of them already love him.\" Cybil laughed. \"It's only a matter of time before the rest fall.\"\n\n\"You're not worried are you?\" Brigid asked, looking over at her. \"Because I've seen how he looks at you, you've got him so wrapped up he'd drop the rest of us in a heartbeat if you wanted him to.\"\n\n\"Not you, you're part of him,\" Cybil disagreed, \"he couldn't give you up any easier than breathing. No, I'm not worried. I'm looking forward to all the fun we'll share. If I have my way, there's going to be a lot of free loving going on around here.\"\n\nBrigid set the pan of eggs off the burner and turned to take her in her arms. \"Sounds good to me.\" She grinned, then kissed her.\n\nKatey had seen the two headed downstairs when she stepped out of her room. She'd been going to start breakfast, but not seeing Mason with them, she couldn't help heading to his room. It had taken her a long time to get to sleep the night before, and when she had, he'd been in her dreams. His drunken eyes, his voice accusing her of killing her mother. The reek of his breath. She'd tried to wake up, but he wouldn't let her move. Then Mason had been there, her father's face bursting like a balloon as Mason took her into his arms and held her.\n\nHe was sleeping when she got to his room, on his back gently snoring. When she slid carefully in and laid her head on his chest, his arm came up and held her. Feeling the last of the night draining from her, she shut her eyes and drifted away.\n\nWhen Mason woke, he expected to find Brigid in his arms. The heavy breasts against his side ruling out Cybil. So he was a little disoriented for a second when he found Katey looking up at him. He saw the uncertainty enter her eyes as she misinterpreted his momentary confusion, felt her stiffen and start to pull away.\n\n\"Whoa there.\" He told her, pulling her back against him and smiling. \"Where do you think your going?\" She let him pull her back, looking at him and shrugging. \"I was just surprised,\" he told her gently, \"but I can't think of a nicer one than waking up to you in my arms.\"\n\nWith a sigh, she settled back against him and let him hold her for a time. Then looked up at him, her fingers plucking gently at the hairs in the middle of his chest. \"I had a bad night.\" She told him in a small voice. \"He was drunk and yelling at me again.\" He pulled her into a tighter hug, she'd told him about her mother dying in childbirth, and her father's drunken rants, about the dreams. And he understood, having grown up with the specter of his own father lurking in his.\n\nKatey laid there, his heart beat and the warmth of his skin on her cheek. She was in love, she knew it, just as she knew she would never have him all to herself. She could live with that, would live with it, if it meant she had an occasional moment with him like this. He was so gentle, the only man who had ever truly showed her that he cared. She knew he couldn't understand what it meant to her. Or that she would do anything he asked of her, knowing he wouldn't ask anything of her. Sliding her hand down and finding him, she began to grin.\n\nMarcus was feeling grumpy as he wandered down to breakfast, having had a few too many Guinness' the night before. But he perked up a bit when Cindy gave him a hug and led him to the table. Then ran to get him a plate. Though his smile died half-formed when he swung his gaze back to the table once she went through the kitchen door.\n\n\"What?\" He asked, surprised to see his daughter scowling at him.\n\n\"Your ass is just going to get fatter if you keep treating Cindy like a servant.\" She told him, and Cybil spit milk out her nose, setting the whole table to laughing.\n\nKatey's hands were against the tiled wall of Mason's shower, the hot water cascading over her as he thrust into her from behind, his hands wrapped around her stomach as much to support her as grip her. He'd started out washing her hair, his strong fingers doing heavenly things to her scalp. But then she had felt him grow, his cock rising along the inside of her thigh, and as she started moving, seeking it, he had pushed her shoulders toward the wall while pulling her hips back. Then he was in her again, so strong, so hungry. She could feel the shampoo slide down her body with the water, a feather caress that contrasted the force he used to take her. \"Oh fuck, fuck me.\" She hummed to herself as she felt her insides draw up, her breath getting short as the waves began gathering. Laying her forehead against the tile as she shuddered.\n\nMason and Katey showed up for breakfast last, Katey turning beet red at the whistles and good-natured questions thrown at them. Mason just walked her to a seat and held it for her, bending to kiss her before taking his usual seat between Brigid and Cybil. Cybil setting a plate of the eggs in front of him.\n\nThe breakfast conversation returned to the photo shoot they had done, and how much fun it was. Most of the girls excited about the idea of shooting catalog stuff with Emma. Marcus was just starting to tease Mason about it, when Becky looked over at him.\n\n\"I wouldn't say too much about it.\" She told him. \"I might want you to barrow Mason's costume one of these nights. We can go out back and see if you're any good at catching a super villain.\" And the table was laughing again, even Marcus.",
        "Ardella, stitches free for the last week, ran with Mason and Danny most mornings now, her long legs keeping pace with ease. But to Mason's surprise they were joined by Shelby that morning. At five eight, she was taller than most of the girls and seemed like she was all leg, so she did well. Mason still tried to do four miles when he could, running semi hard on the first half and jogging back, so had figured out the two-mile mark from the hall and built a cairn of rocks, though now there was always a couple of security guys sitting across from it in a car until they were done with the run. As was usual, they dropped to a walk when they returned to the gate, waving at the guards there and cooling down as they went up the long drive.\n\n\"You did great.\" Ardella praised the huffing Shelby, like Mason, she had long since found her wind for their runs. Shelby smiled in gratitude, but didn't try to answer, her hands at her hips as she walked beside them. \"You'll be in shape in no time, if you keep coming.\" Ardella went on and Mason nodded in agreement, reaching over and squeezing Shelby's shoulder.\n\n\"You should soak for a bit,\" he told her, \"the heat will keep you from cramping. Not to mention how you're going to feel tomorrow after jumping right in like that.\"\n\n\"Why don't you join her Mason?\" Ardella grinned at him, while Shelby blushed, but didn't protest the idea. \"I'm going to grab a quick shower then make some calls. The granite should be here this week, depending on when the ship makes port and I need to start lining up the crews again.\"\n\nCybil was at one of the desks doing some homework she had put off in favor of the party, and watched them separate as they came in. Nodding as Mason waved and feeling herself get a little damp as he and Shelby turned down the stair to the spa. She was tempted to join them, but knew if she ever wanted something like the night before to really happen, she needed to let things develop. Still, she'd love to see what went on down there. With a sigh she got back to work, Mason would tell her later.\n\nShelby was feeling shakier following Mason across the tiles to the showers than she had felt at the end of the run. He smiled at her as he sat on one of the benches and toed his runners off. His dark blue eyes melting her will, not that she didn't want to be with him, she had really liked sucking him both times and was more than a little happy with the memory from the bus. But she knew she wasn't ready to give her virginity to him or anyone yet, that was a bell that couldn't be unrung as her father had drilled it into her growing up.\n\nMason pulled his shirt off and stood to push his shorts down, but paused as Shelby got that look in her eyes that he'd seen the night they had moved in. \"Relax Shelby, I'm not expecting anything from you,\" he said, keeping his tone gentle, \"you really should spend some time soaking after that run and probably for the next half-dozen if you keep it up, let your muscles get used to it. But I don't have to stay if you're not comfortable.\"\n\nShe looked at him, the night before, she'd have ridden the tide into his bed. She'd been high on the party and the new exciting life she seemed to have fallen into. She'd had his beautiful cock in her mouth after dreaming about it for weeks, had tasted him and knew she would have happily spread her legs as he rolled from one of the others on top of her. But he hadn't. To her disappointment, he had stopped the forming orgy. This morning she had watched him at breakfast and felt grateful. She suspected a day would come and she'd go gladly to his bed, but the fact that he'd given her back the chance to choose, that was something. It was why she had gone on the run, she wanted to know him better.\n\n\"No,\" she began, toeing her own sneakers off, \"it's all right, I know you won't jump on me.\" She gave a little laugh. \"It's just that I'm still not used to the idea of all this nudity.\"\n\nMason watched as she stripped the shirt off, taking a sports bra with it, her breasts hardly jiggling as they settled, her tiny pink nipples drawn and hard. \"Well, from where I stand, you have nothing to be ashamed of.\" He assured her, getting a small smile in return. Then pushed his shorts down and stepped out of them.\n\nShelby watched him walk to a shower and turn it on as she stripped her own shorts down. Admiring his ass yet again, then stepped under the shower next to his. \"I want to thank you for last night.\" She told him as she adjusted the water.\n\nMason was doing his best to not get an erection, thankful of his time with Katey earlier, knowing he'd have lost that battle before it started otherwise. But he wasn't sure what she was thanking him for, so he let his eyes track back to her. Trying to keep from looking down. \"For?\" he asked.\n\nShe blushed at the memory of the bus trip home, then cleared her throat. \"I appreciate what you did last night,\" she began, \"I was a little carried away I think and you stopped me from doing something I think I might have regretted.\" She paused as he frowned.\n\n\"I'm sorry,\" Mason told her, looking worried. \"I know things got a little wild on the bus.\"\n\n\"No, it's not that.\" She interrupted, then swallowed, deciding to just spill it. \"I was talking about losing my virginity. If you hadn't put a stop to the orgy, I'd have, well.\" She trailed off at the realization that dawned on Mason's face. And she shrugged. \"I just think it's something I should give to someone I love.\" She went on, feeling kind of lame.\n\n\"I agree.\" Mason told her wholeheartedly. \"I'm sorry we put you in a position like that, I don't ever want you to think you have to do anything sexual, if you feel like anyone here or anyplace else for that matter is pressuring you, just tell me. I'll put a stop to it one way or another.\" Then he paused as he remembered her sucking his cock and his stomach turned over. \"Oh Gawd, I'm so sorry.\" He said, looking down.\n\n\"What?\" Shelby asked, confused and a little alarmed by the look on his face.\n\n\"The bus.\" He answered, looking at her with stricken eyes. \"I'm sorry you got caught up in that blowjob game. And Cybil, in the bedroom, and shit, I came.\" He trailed off.\n\nBlushing, she couldn't help looking down at his cock. He was flaccid, only about half as big as she remembered him hard, but it still gave her a shiver. \"No, don't be sorry.\" She told him, stepping closer. \"I might not be ready to lose my virginity, that doesn't mean I didn't like what we did do. I take it you know it was me that morning before the lake?\" and at his nod, \"Well, after that, I couldn't get the feel of it out of my mind, I started dreaming about doing it again, but this time for real.\" She blushed as his cock got visibly fatter.\n\n\"I asked the others a lot of questions about it,\" she admitted, \"I even watched some videos and read about it online. When that happened on the bus, I was more than happy to take my turn.\" His cock was definitely stirring now.\n\nMason couldn't help it, the memory of her sucking him was just too much. \"I'd say your research paid off.\" He blurted, \"That was really good.\"\n\n\"I liked it too.\" Shelby told him, sinking to her knees before looking up at him. \"Maybe we could try it again?\" as she slid her hand up his thigh, taking hold of him as a grin spread across his face.\n\nIt was different taking him into her mouth while he was soft. For a short time she had him all, her chin against his balls. But he quickly grew, his cock straightening as it swelled, starting to push her away, the head molding to the roof of her mouth. He'd said he liked what she'd done on the bus, so she gripped him firmly about the base as he filled, trying to simulate a cock ring like they talked about on a forum she had read. And concentrated on just the head, her tongue swirling around it, the slight salty taste getting stronger as she sucked. Glancing up, she found him looking at her hungrily, his lips in a funny grimace, it almost made her choke. So she pulled off and barked a laugh.\n\n\"I'm sorry, but your face.\" She chuckled, watching him try to look normal. Then she went back to it. Like the other times, she found she really liked having his cock in her mouth, there was something basic and primal about it. She supposed fucking would be fun, everybody seemed to like it, but this was so up close and personal, literally in her face. She could hear and smell it all, taste and feel it in so many ways. Taking a deep breath, she began to hum a hard mmm sound through her nasal passages, while her tightly gripping hand started doing short strokes.\n\nMason was finding her second blowjob just as good as the first. His right hand holding the shower mount on the wall, while he fought to keep his left from her head. She was so beautiful kneeling there, he could tell she really liked it. She had an enthusiasm that reminded him of Abby, shit, he should get her to give Shelby a few lessons. The idea fed him an image of the two of them using him as their practice cock and he grimaced. Shelby looking up at him at just that moment, doing a kind of spit take on his cock before laughing at him. But she was getting serious now, stroking and humming as she bore down on the suction, all the while her tongue laved roughly around and around his head.\n\nIn a surprisingly short time, that seemed to take forever, Mason felt his impending end begin. \"Damn Shelby,\" he huffed, \"that feels incredible, but I don't think I can hold out much longer, I'm going to cum.\"\n\nIt was music to Shelby's ears, she'd long since dropped her free hand to rub her clit and had in fact had several small orgasms herself. But there was something building in her too, and there was no way his cock was leaving her mouth before it got there. She felt him swell as he let out a grunt, and it washed across her tongue, a warm salty surge that was echoed between her legs, as she squirted on her fingers. As his second rush entered her mouth she swallowed, her eyes closing as she shook, his cum seeming to go straight through her to gush around her fingers. Her grip on his cock as much for support now as anything.\n\nMason watched in awe, wanting to reach down and help her as she shook, but afraid to let go of the wall mount as she sucked the strength right out of his legs. It finally got to be too much though, and he pulled back, getting his sensitive cock head out of her mouth. Then knelt and took her shaking form in his arms, her head falling to rest on his chest.\n\n\"Thank you.\" He heard her say softly as she relaxed in his arms, and he wanted to laugh. He held her until she raised her head, still looking a bit dazed.\n\n\"You okay?\" he asked with a grin, and she blushed a bright red, but nodded. Standing, he shut off the showers, then bent and scooped her up. Carrying her as he crossed and climbed gingerly into the bath, setting her in a corner and dropping down beside her.\n\nShe was quiet for a long time, pulling his arm about her and leaning into him, her hand bringing his to her breast. \"I think I like that too much.\" She eventually confessed, her tone contemplative. She looked up at him. \"It's a little scary, I'm already wanting to do it again.\" Her hand brushing him under the water.\n\n\"I don't see anything wrong with that.\" Mason chuckled, squeezing her shoulder in a slight hug. \"But I know what you mean, I love oral sex, there's just nothing like using your hands and mouth to get someone going good. There's a kind of controlled craziness to it.\" Looking at her to see if she understood, he found her blushing again. \"I guess nobody has done that for you?\" he asked, sure he'd made the right interpretation. She shook her head just barely, her teeth gripping her bottom lip.\n\n\"May I?\" he asked, smiling when she gave a slight nod. \"Okay, but we're not going to be fucking. I don't care how much you beg.\" He teased her as he lifted her to the lip of the bath and crawled between her long legs. She leaned back on her elbows and laughed. Then shivered as he kissed the inside of her thigh. She was quickly short of breath as his lips and hands explored her body.\n\nMason took his time, he really did love it, but he also wanted her first time to be good. He kissed and nibbled his way up the inside of her left thigh, gripping her at the back of her knees and spreading her wide for his pleasure. Her lips were visibly swollen, a pea sized clit peeking from under its hood. The fine hair a mere shadow in the blue glow of the bath, the silken strands parting before his tongue. He was tempted to tease her longer by starting on her other thigh, but gave in to his own desire to taste her, his tongue swiping the length of her to swirl around the little nub, he felt her give up and lie back, her legs quivering in his hands.\n\nShelby lay on the warm tile, her head hanging off the far side as he did things that made her insides do flips and swan dives, the blood rushing to her head not helping her focus. It was like he was kissing her soul, and it just kept going on and on. After she thrashed through her first orgasm, ending with her shoulders and arms also over the edge, he had pulled her back so her head could at least rest on the tile, but he didn't quit. She felt him start rubbing at her gently with a finger, just the tip parting her lips and she humped to meet it. She'd long ago torn her hymen jumping dirt bikes, but only masturbated by rubbing herself, never inserting her fingers or a hairbrush like she'd heard others did, now she wanted to feel something in her and she groaned her need.\n\nMason thought he understood her go ahead, but went slowly. He'd already determined that her hymen was gone with his tongue, but she was extremely tight on his finger.\n\nShelby held her breath, marveling as his finger slowly sank into her. She could feel it as his knuckle passed her lips, getting fatter as it filled her. The tip wiggling and the other fingers sliding down, slippery as they rubbed her rosebud. When he was all the way in, she felt so full, she couldn't imagine taking his huge cock, but couldn't stop imagining it either. She heard a low moaning, and didn't realize it was her as he began sawing his finger in and out, bearing down on her clit as he thrust steadily, his knuckles thumping her as they met her lips and he withdrew to thrust again. The moaning turning to a low, then louder wail as she shuddered and shook through another massive orgasm, Mason finally going still and just holding her so she didn't roll off the wall in either direction.\n\nHe was there, looming over her when she finally opened her eyes again, a silly grin on his face. She reached for him and he leaned down to kiss her. His chest feeling good against her tits. \"Just fuck me Mason, please.\" She whispered to him.\n\nHe kissed her again, then sat back, shaking his head. \"Don't tempt me.\" He told her frowning, then standing and offering her a hand to sit up. \"I'd love nothing more than to be in you, connected to you. But we are not doing that right now. I promised you I wouldn't.\"\n\nShe looked down and saw his cock jutting from the water and knew he wanted her. But she could see in his eyes that he wouldn't give in and she wanted it just that much more. \"Next time?\" she asked, her eyes pleading.\n\nMason's heart and his cock felt for her, but she had made it clear before all the passion that she wanted to wait, and he wasn't going to ignore that. \"Let's make a deal, if you still feel like this next weekend, we'll go do something, maybe get some dinner in town and see where it goes.\" He offered, and she started smiling.\n\n\"Deal,\" she agreed, standing and stepping back into his arms, her lips brushing his lightly before she giggled and climbed from the bath.\n\nHe watched her slim form in appreciation as she grabbed the last robe by the stairs and disappeared up them. Then got out and gathered their clothes, dumping them in the towel hamper, leaving her shoes beside it. There wasn't another robe and he had no wish to put the sweaty shorts back on, so he shrugged and climbed the stair. It wouldn't be a first for anyone seeing him.\n\nCybil stood at the top of the stair, a mischievous smile on her face, Mason just picked her up and threw her over his shoulder laughing as he turned up the next flight, his cock leading the way."
    ],
    "authorname": "singleot",
    "tags": [
        "blow job",
        "blowjob",
        "exhibitionist",
        "group",
        "rich",
        "romance",
        "romantic",
        "young",
        "photoshoot"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-trust-ch-07"
}