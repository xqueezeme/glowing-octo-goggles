{
    "title": "Secret Smiles and Three Little Words Pt. 46",
    "pages": [
        "Chapter 64 \n\n\"Hey,\" Reese called out stopping Alex from getting into her car. \n\n\"Hey!\" she smiled back. \n\n\"Kari is wanting to have Nora over for a sleepover,\" Reese smiled. \n\n\"A sleepover?\" Alex repeated. The look on her face said it all for Reese. \n\n\"I know how you feel,\" she smiled. \"Letting Nora go somewhere you can't see her.\" Alex made to apologize but Reese held up her hand to stop her. \"No, I'm not offended! I understand completely! The first time Kari spent the night somewhere besides where I could check on her I didn't sleep worth a shit!\" \n\nAlex laughed and looked to the ground embarrassedly. \n\n\"Think about it,\" Reese told her. \n\n\"No,\" Alex shook her head. \"She can spend the night...I mean sooner or later I have to stop hovering...right?\" \n\n\"If you say so,\" Reese shrugged. \"We're mom's, hovering is what we do...and before you say it, you are Nora's mom. I can tell by the way panic ran through your eyes the moment I brought up spending the night!\" Reese waved as she walked back towards her house. \"Just give it some thought!\" She called out over her shoulder. \n\nAlex stood there a moment with her hand on the door thinking. Let Nora out of her sight? Since Livy died Nora has been by her side and under her protection. Letting her go where she wasn't where she could see her? She thought back to the first day she dropped her off at the school, that dreadful empty feeling. \n\nAlex got into her car and pulled out, driving to get Nora from school. Waiting in the circle drive she was deep in thought. The knocking on the window made her jump visibly. She looked to the sidewalk to see one of the security guys with an apologetic look on his face for scaring her. She pushed the button and the window whirred down. \n\n\"Hey,\" she smiled at him. \n\n\"Miss Lasko,\" the guard smiled. \"They need to speak to you inside.\" \n\n\"Is everything all right?\" Alex asked, the panic washing over her. \n\n\"Nora is fine,\" the guard said immediately. \"But there was an issue.\" \n\n\"Oh shit,\" Alex frowned. \n\n\"If you could park your car in the lot?\" the guard nodded with his head. She nodded and slipped the car into drive and pulled away from the curb. \n\nGrabbing her purse, she thought about calling Gavin, but decided against it. \n\n\"Let's see how bad it is first,\" Alex frowned. Thoughts of Lance ran through her head. \n\nWalking into the office she looked towards the door for the Dean. \n\n\"Hi, Miss Lasko,\" the secretary called out. \"It's actually Ms. Jordan who would like to speak to you.\" \n\n\"Ms. Jordan?\" Alex asked. \n\n\"She's a school counselor,\" the woman said to her pointing towards the other side of the office. \"She's waiting for you.\" Alex nodded and walked towards the door. Tapping gently. \n\n\"Come in,\" she heard from the other side of the door. Alex pushed the door open and attempted her best smile. \"Miss Lasko?\" \n\n\"Yes,\" Alex said taking the outstretched hand of the young woman coming around the desk. \n\nJordan led her to the couch and encouraged her to sit. Alex put her purse on the floor and tried not to let her hands shake. \n\n\"First off,\" Jordan smiled. \"Nora is just fine. She isn't in any trouble.\" The woman assured her. \n\n\"That's good,\" Alex said but it didn't relieve her of any worry. If there was nothing wrong, why was she called into the office? \n\n\"I just wanted to ask you some questions,\" Jordan said sitting next to her. \n\n\"Ok,\" Alex shrugged. \n\n\"Most of what I know is from Nora, I like it that way at first. It lets me get the child's view on things before I become tainted with what the adults around them want me to know,\" Jordan explained. \n\n\"You've been seeing Nora?\" Alex asked. \n\n\"I see Nora, we have several counselors on staff, we are assigned students and we check in with them from time to time...more if it is called for,\" Jordan explained. Alex nodded that she understood. \n\n\"It seems Nora is quite the artist,\" Jordan said picking up a sketchbook. \n\n\"She is?\" Alex asked the surprise filling her voice. \n\nThis surprised her as she had never seen Nora draw at home. \n\n\"You didn't know?\" Jordan asked. Alex shook her head. \n\n\"I'm not her mother,\" Alex shrugged. \n\n\"She doesn't draw at home?\" Jordan asked. Alex shook her head. \"Interesting.\" \n\n\"Why?\" Alex asked. \n\n\"Well, I would think she would seek advice from you, seeing how you are an accomplished artist yourself,\" Jordan said with furrowed brow. \n\n\"She hasn't mentioned it,\" Alex told her. What kind of parent doesn't know their child has talent? \n\n\"Alex, may I call you Alex?\" Jordan asked. Alex nodded. \"Alex, given the circumstances don't worry too much. Nora is trying to figure out how she fits into her new life. Being adopted for a child is usually a good thing and the child knows it. Nora's circumstances differ in the fact she didn't spend any time in the foster care system or an orphanage.\" \n\nAlex nodded. \n\n\"But she is still going to deal with the same emotions of abandonment,\" Jordan said cautiously. \n\n\"Livy didn't abandon Nora,\" Alex said quickly. \n\n\"In Nora's mind...she did,\" Jordan said softly. \"I don't mean to belittle her mother's memory or even argue the point of her death. My point is, in Nora's mind, her mother left her suddenly without reason.\" \n\n\"Oh my God,\" Alex put her face in her hands. \n\n\"Does Nora spend a lot of time in her room alone?\" Jordan asked. \n\n\"No,\" Alex shook her head. \"Most of the time she is outside with Kari, especially now that the weather is warmer!\" \n\n\"Who is Kari?\" Jordan asked writing the name down. \n\n\"Kari is the girl next door,\" Alex shrugged. \"They met when we were looking at the house. They have been inseparable since.\" \n\n\"So Kari is an actual person, her friend?\" Jordan asked. \n\n\"Of course she is an actual person,\" Alex told her. \"Why?\" \n\n\"Do you ever see Nora talking to herself?\" Jordan asked. \n\n\"Sometimes,\" Alex shrugged. \"Sometimes I hear her through her door.\" \n\n\"Do you know who she is talking to?\" \n\n\"I'm guessing an imaginary friend, but we all have those!\" Alex defended. Jordan agreed. \n\n\"I agree, we see her talking to herself here as well, on the playground...sometimes at lunch,\" Jordan explained. \n\n\"Does she have any other friends at home?\" Jordan asked. \n\n\"No.\" \n\n\"She doesn't have any here either,\" Jordan told her. \n\n\"What do you mean?\" Alex asked. Jordan took in a deep breath and let it out. \n\n\"After Nora broke Lance's nose, I started to keep regular visits with Nora. Started to watch her go through her day, observe her,\" Jordan explained. \"In all the time I have watched her she has never played with the other students, even though several of them have tried to persuade her to play.\" \n\n\"What does she do?\" \n\n\"She draws,\" Jordan smiled. \"And she is good, so good that I'm jealous as I had an art minor in school.\" \n\nShe handed Alex the sketchbook and Alex turned to the first page. It was a picture of the treehouse. The next contained a picture of Kari. Then one of Alex and Gavin together kissing. It made her smile. The next one took her breath away. It was a cemetery. The one her mother was buried in. \n\nThen woods, and they were not happy woods. They were foreboding woods where shadows lurked. They looked mysterious and deep, perhaps even evil. Alex would have been impressed with the emotions Nora was able to elicit with her drawing. Alex could feel fear and anxiousness from the drawing. Something that took years for artists to be able to manage. That is if she wasn't so worried on why Nora's pictures were so dark and scary. \n\nAlex continued to turn the pages but each one was darker than the next. Scenes of hollowed out buildings they would pass on the way to school. Abandoned barns from driving across Pennsylvania and Indiana. \n\n\"See a pattern?\" Jordan asked. \n\n\"They are a bit scary,\" Alex pointed out. \n\n\"Empty?\" Jordan pointed out. Alex nodded. \"Is the cemetery scene relevant?\" \n\n\"Believe it or not,\" Alex smiled. \"It looks exactly like the cemetery her mother is buried it.\" \n\n\"Did you spend a lot of time there?\" \n\n\"Of course not!\" Alex gasped. \"Maybe two or three visits, it was hard on her.\" Jordan nodded. \n\n\"Well,\" Jordan said changing the conversation. \"The reason you are here was we had to restrain Nora today.\" \n\n\"What do you mean restrain?\" Alex asked angrily. \n\n\"She was drawing in class when she was supposed to be working on her assignment,\" Jordan explained. \"When one of the aides tried to get her back on task...Nora told her...'to go fuck herself'.\" \n\n\"What?\" Alex whispered her fingers over her lips. \n\n\"The aide then pulled the sketchbook from her and Nora proceeded to flip over her desk,\" Jordan explained. \"Our staff is trained and certified in safe restraints. They put her in what we call a 'basket restraint', to keep her from hurting herself or others during the tantrum.\" \n\n\"That doesn't sound like Nora at all!\" Alex told her. Jordan nodded. \"She is normally happy and friendly.\" \n\n\"Normally she is,\" Jordan agreed. \"It's not uncommon for students to act out in a new environment, sometimes it all becomes overwhelming, they don't know what to do so they get frustrated and when they get frustrated it adds on to the confusion and it just keeps piling on...Nora was that way today.\" \n\n\"What happens after a restraint?\" Alex asked her. \n\n\"After the student is out of crisis, we take them to what we call a 'quiet room'. It's basically just a room for them to sit and cry it out, without any of the other children watching. Usually the counselor is called and she is supervised until she is ready to talk,\" Jordan explained. \n\n\"Is that where Nora is now?\" Alex asked. Jordan shook her head. \n\n\"No, she is back in her homeroom now,\" Jordan assured her. \"The idea of the restraint and quiet room is to let the child get themselves together and get them back to class as quickly as we can.\" Alex nodded that she understood. \n\n\"Gavin has been on me about getting Nora some professional help,\" Alex admitted. \"I have been reluctant...I just didn't think she needed it!\" \n\n\"I'll be honest with you,\" Jordan smiled. \"We could all use someone to talk to, a professional, I think we would all be better off.\" \n\n\"So now what?\" Alex asked her. Jordan shrugged. \n\n\"In my opinion, Nora hasn't dealt with her mother's death completely,\" Jordan told her getting up. \"I think it will continue to manifest itself in her drawings...I think that is how she is trying to deal with it. The drawings are a cry for help...she feels dark. She feels alone. She feels abandoned.\" Jordan said coming back with a business card. \"Just like the pictures she is drawing. \n\n\"The first three aren't dark,\" Alex pointed out. \n\n\"You're right,\" Jordan smiled. \"I think those three drawings are what is keeping Nora safe. I think that is what she is clinging to as being her happy thoughts. When she gets scared she runs to those three things...if she can't, she opens the pictures and stares at them.\" \n\n\"According to the aide, she was staring at the drawing of you and the man today,\" Jordan pointed out. \n\n\"Gavin,\" Alex told her. \"My fianc\u00e9,\" she smiled. \n\n\"Nora needs help,\" Jordan told her softly. \"Take Gavin's advice.\" Jordan handed her the card. \n\n\"She is very good with children,\" Jordan said tapping the card. Alex nodded. \"Don't worry, right now you are wondering what you did wrong...let me answer that for you. Absolutely nothing!\" \n\n\"You are one of the pictures in the book that bring her back from her dark place,\" Jordan said with a smile taking hold of her arm. Alex nodded but that didn't make her feel any better. \n\n\"Can I get her now?\" Alex asked. \n\n\"Of course,\" Jordan smiled standing up. \n\nWalking by the courtyard Alex looked out. She saw the mural that the kids had worked on. \n\n\"Would you mind bringing her here?\" Alex asked. \n\n\"Of course,\" Jordan smiled. Alex nodded and stepped out into the courtyard and sat down on a bench facing the mural. It brought back all the memories of her mural. The hard work. The romantic lunches with Gavin. All of it. \n\n\"Aunt Alex?\" Nora's voice brought her back to the present. \n\n\"Hey baby,\" Alex smiled. Nora looked to the sketchbook in Alex's lap and looked down. \"You are quite talented.\" Alex said patting the book before patting the seat next to her in a command Nora understood. \n\n\"Am I in trouble?\" Nora asked her. \n\n\"I don't know,\" Alex frowned after some thought. \"You aren't getting grounded if that is what you are asking.\" \n\n\"Are you mad?\" the little girl asked quietly. \n\n\"I was just sitting her thinking about my mural,\" Alex smiled deliberately not answering while looking at the mural in front of her. \"I was thinking of all the hard work I did, and all the hard work Gavin did!\" Alex shook her head. \n\n\"I don't know if I could have done it without Gavin,\" Alex smiled. \n\n\"I'm keeping you guys from getting married aren't I?\" Nora frowned as she looked down at her lap. \n\n\"No,\" Alex said firmly. \"Your grandfather is!\" She looked to Nora and winked at her. \"If Gavin and I wanted to, we could get married today...but we want a certain type of wedding. One in which my father walks me down the aisle. So we wait until he is completely better.\" \n\n\"That and Queen Madelyn has this elaborate plan of a wedding,\" Alex sighed. \"I don't even know if I need the wedding anymore. I feel like Gavin and I are already married.\" She stroked Nora's hair. \n\n\"I'm going to make an appointment with a doctor for you,\" Alex told her. \n\n\"Gavin is a doctor,\" Nora pointed out. \n\n\"Well, this doctor isn't like Gavin,\" Alex nodded. \"This one is going to help you deal with the pain you are trying to deal with alone. Something I missed.\" \n\n\"I don't hurt,\" Nora told her. \"I can run all day!\" \n\n\"You don't hurt?\" Alex asked her turning to the page with the dark woods. \"I know better.\" Alex said running her fingers over the drawing. \"Do you know how I know?\" Nora shrugged. \n\n\"A great artist can make those who see their work, feel their work,\" Alex told her. \"That's the trick, every artist tries to make you feel what they want you to feel. Take a writer for example, the writer tries to make you feel what the characters in their book feels with words. A painter will do the same with colors on canvass. A sculptor with clay.\" \n\n\"See, the hardest part about being an artist, isn't the actual drawing or whatever, it's the fact you are baring your soul to the world,\" Alex explained. \"You've done that here.\" Alex whispered as she moved closer to Nora. \n\n\"I look at this and I know exactly how you feel,\" Alex explained. \"Because it makes me feel that way too.\" \n\n\"I feel lost when I look at this,\" Alex continued running her fingers down a tree. \"I feel alone. Scared. Becoming an artist isn't the hard part, the hard part is the fact you are naked in front of everybody. That's what Grandpa used to tell me. You have no secrets as an artist. If you are sad, it shows in your art. If you are happy, it shows. If you are scared, sad, lonely...it all comes out, whether you want it to or not.\" \n\n\"But don't worry, that's what makes it great,\" Alex said with a squeeze. \"You put yourself into it.\" \n\n\"I didn't mean to swear at Miss Monon,\" Nora admitted. \n\n\"Well,\" Alex smiled. \"Let's just keep that between the two of us, you can apologize to Miss Monon tomorrow and I'm sure that will make her happy.\" Nora nodded. \n\n\"Is Uncle Gavin the reason you are so happy?\" Nora asked her. \n\n\"What do you mean?\" \n\n\"All your artwork from the show,\" Nora shrugged. \"It was all bright, I was walking around looking at it and it made me happy when I saw them.\" \n\n\"Gavin makes me happy,\" Alex nodded. \"So do you. I think Gavin and I thought we couldn't get any happier than we were, then you came into our lives and we realized, there was a lot more happiness to be had!\" \n\n\"So are you going to have kids of your own?\" Nora asked as they stood up. \n\n\"I don't know, I hope so,\" Alex said. \"Would that bother you?\" \n\n\"No, I would love a little brother,\" Nora admitted. \n\n*** \n\n\"What all should I take?\" Nora asked looking in her dresser. \n\n\"You are just spending the night,\" Gavin pointed out as he put her toothbrush in the overnight bag. \"Not joining the Marines!\" He teased. \n\n\"What's the Marines?\" she asked him. \n\n\"The Marines is a soldier who can't be beaten, they are the toughest, the baddest and the strongest,\" Gavin told her. \n\n\"A soldier?\" she asked. \n\n\"Yep,\" Gavin nodded. \n\n\"I don't want to be a soldier,\" Nora told him. \n\n\"Don't have to be,\" Gavin shrugged. \"Just take your PJ's and your favorite blankie.\" He suggested. \n\nNora began to fold up her blanket. \n\n\"Hey,\" Gavin said sitting down. \"I got a call from school today.\" Nora stopped in mid fold. \"Want to talk about it?\" \n\n\"Are you mad?\" she asked carefully. \n\n\"No,\" Gavin said sitting down next to her. \"Look, I'm never going to be mad at you...we all make mistakes.\" \n\n\"I just...,\" Nora tried to explain but wound up just shrugging as she realized she couldn't. \n\n\"It's the language you used that bothers me,\" Gavin told her. \n\n\"My dad says it,\" Nora told him. \n\n\"Just because an adult says it, doesn't mean it's ok to say,\" Gavin pointed out. \"As a matter of fact, I don't know if I would ever say something an adult would say!\" He joked. \n\n\"I'm sorry,\" Nora said to him sitting next to him. \n\n\"Ok,\" Gavin said. \"No more bad language...promise?\" \n\n\"Promise,\" Nora said shaking his pinky with hers. \n\n\"It's ok to be angry but you can't do the things you did today,\" Gavin told her pulling her into a hug. \n\n\"Aunt Alex wants me to go to a doctor,\" Nora told him. \"Why can't I just see you?\" \n\n\"Well, first things first, doctors don't work on family if they can help it,\" Gavin explained. \"As a doctor we have to be impartial and we have to be a bit distant from our patients.\" \n\n\"But aren't you Queen Madelyn's doctor?\" Nora asked. \n\n\"For some things, yes,\" Gavin nodded. \"But for most things, no, I can't keep my personal feelings from clouding my decisions so I usually refer her to other doctors when there is something wrong.\" \n\n\"It's hard to explain, but when you are a doctor you may have to give them bad news, but if you are close to them you may not want to admit it to yourself,\" Gavin tried to explain. \"When I was in Med School I had that problem with a friend. In the end I did more harm than good because I refused to admit that I couldn't help her, when I finally did admit it to myself...I was too late.\" \n\n\"What happened?\" Nora asked. \n\n\"Nothing,\" Gavin told her kissing her head. \"Grab your blanket and let's get you over there!\" Gavin said changing the subject. \n\n\"What are you going to do tonight?\" Nora asked him going down the stairs. \n\n\"Well don't tell your Aunt...but I have a nice dinner out planned and maybe we will go to this club I heard about that has live music,\" Gavin told her. \"She has been so stressed out about the art showing I thought we could go out and let off some steam!\" \n\n\"She will love that!\" Nora smiled. \"Do you think you are married?\" \n\nThe question stopped Gavin and he turned on the stairs. \n\n\"What?\" he asked her. \n\n\"Aunt Alex said she feels like she is married to you already,\" Nora told him. \n\n\"Did she say that with a smile?\" Gavin asked with a wink. \n\n\"Yes!\" Nora pushed on him. \n\n\"I guess she is right,\" Gavin nodded. \"Marriage is the way you feel in your heart.\" \n\n\"I hope I find a husband like you!\" Nora said jumping into his arms. \n\n\"Well,\" Gavin smiled. \"Let's get through fourth grade first, huh? We'll marry you off next year!\" \n\n\"Uncle Gavin! Quit teasing!\" Nora begged. \n\n*** \n\nAlex had her head down, her secret smile on full display as they walked down the sidewalk. Dinner was a throwback to earlier times. Times when there was no pressure, no pressure of art showings. No pressure of being thrown into becoming a mom, wife, sub, artist and whatever other hat she would have to wear. Tonight she was just a woman who was in love with the man sitting across from her. ",
        "\"I guess this is the club,\" Gavin said. \n\nShe lifted her head and smiled. \n\n\"They have good music here,\" she told him. \n\n\"You've been here?\" he asked her. \n\n\"Lena brought me here one night when it first opened,\" Alex smiled with a shrug. \n\n\"Oh,\" Gavin frowned. \"Here I thought I was doing something special for you.\" \n\n\"You are,\" she smiled. \"You are spoiling me rotten!\" \n\nGavin held the door for her and she went in, the band was setting up. They were on stage and the doorman took their money and told them the music should start before too long. They found a table near the wall and sat down. A young waitress took their order but not before drooling all over Gavin with her eyes. \n\nA streak of jealousy shot through Alex but it faded immediately when she looked to Gavin to see him respond the way he normally did when another woman batted her eyes at him. He barely acknowledged her existence. Instead his eyes were fixed on Alex, and the secret smile was out and she knew he was already planning the session he was going to have with her in his head. \n\n\"Do you even realize when another woman hits on you?\" Alex asked him after the waitress left. \n\nGavin shrugged but didn't avert his eyes from her. \n\n\"I have what I need,\" he assured her. His eyes flashed playfully at her. \n\nThe night was loud, the band wasn't as good as the first time she was there, but then again she wasn't paying much attention to it anyway. She was more interested in the man across from her. \n\n\"May I move to your side of the table, Sir?\" she finally asked when the distance was too much to bear anymore. \n\n\"Are you going to behave?\" he asked. He chuckled and took a drink of his water when her smile broadened and she looked to the table. \"Didn't think so.\" She looked up at him. \n\n\"Come here,\" he told her and she quickly moved to sit next to him. \n\n\"May I touch you, Sir?\" she asked. \n\n\"Yes,\" he smiled. \n\nShe dropped her hand on the inside of his thigh, gently running her fingers up and down his inner thigh. She let her hand wander farther up with each gentle stroke. Soon she was brushing his manhood through his pants with her fingers, relishing in its response to her gentle touch. \n\n\"I so want to go down on you, right here, right now,\" she smiled. \n\nGavin chuckled and shook his head. He was feeling that way as well. He lifted his hand to get the waitresses attention, the young woman frowned when she realized Alex had changed spots and was now seated next to Gavin. She could tell Alex was being naughty, just by the smile on her face. The flushed cheeks, the secret smile and their close proximity to one another. Her hand obviously in the man's lap or near there. \n\n\"Can we get the check, please?\" Gavin told the young girl. Alex stared her down as she stood across from him, and took pleasure in the disappointment in the girl's eyes. Alex looked around after the girl left. \n\n\"Oh my God,\" Alex whispered. \n\n\"What?\" Gavin asked following her eyes. He frowned. \n\n\"I think Elizabeth might be having an affair!\" Alex laughed. \"Not that I blame her! Anything is better than Royce!\" \n\nElizabeth was flirting with a man near the bar. Alex recognized him from her first visit here. It was the same man she witnessed Elizabeth sucking off in the alley way. He must be a regular here at the bar Alex thought, or perhaps he was one of the owners. It seemed really unlikely to her that the man would just show up on a whim at the same time Alex had been her each time. So obviously he had a purpose here. \n\nAlex looked to Gavin to see him roll his eyes and exhale deeply. The entire mood of the table changed and Alex began to wonder if Gavin regretted letting Elizabeth leave. It seemed anytime she was near them Gavin's mood soured. Alex looked back when the waitress came back and waited as Gavin pulled his credit card out to pay the bill. She looked back to see the Elizabeth and her play toy leave the bar. \n\nAlex wondered if they were going out for another quick fuck or suck in the alley again. Part of her enjoyed the idea that she might see the goddess in action again. She loved to watch her and it was always fun to see her skills. She found that she missed watching her work Gavin to a degree when they were together and the three of them would play in their sessions. So small glimpses of the raven haired beauty always got her excited. \n\nAlex felt her Domme side flex and the urge to play with someone came over her. She looked to Gavin as he signed the bill. She would have to let that feeling pass. Maybe the next party they went to, Gavin would let her play with a party favor there. He seemed to enjoy her last performance as a Domme. \n\nWalking out of the bar, Alex let that feeling slide away as she began to think about Gavin working her in a session. She was disappointed that instead of going the way she had seen Elizabeth in the alley, they turned the other way to go to where they parked the car in the parking lot across the street. \n\nWalking by the full parking lot near the building she looked in. The smile crossed her face as she saw Elizabeth, palms down on the trunk of a car near the shadows, barely visible. The large biker looking man behind her, her short skirt pushed up onto her hips, his pants down around his ankles as he held her hips and hammered her with his cock from behind. \n\n\"Holy shit,\" Alex gasped. \n\nThe growl she heard from Gavin told her of his disproval. He took her by the arm and led her away with a quickened pace. She looked to him and saw the secret smile gone, replaced with a hardness she hadn't seen in some time. Not since her bout of pneumonia. \n\nHe chirped the doors to the Aston Martin from a distance and angrily opened the door and held it for her. She got in without saying anything. The door closed with a slam, hard enough to make her jump slightly. She watched him walk around the car and get into the driver's side, again shutting the door harder than necessary. \n\n\"Are you ok, Sir?\" Alex asked him. \n\n\"I'm fine,\" he told her shortly, the tone alone told her all she needed to know. He was anything but 'fine'. \n\n\"Have I done something to anger you?\" she asked him. \n\nHe looked to her and saw the concern in her eyes. He shook his head and blew out a breath. \n\n\"No,\" he said, his tone softening. \n\n\"She isn't cheating on you,\" Alex pointed out. \"She is cheating on Royce!\" Gavin said nothing at first. \"Do you still have feelings for her?\" \n\n\"What are you talking about?\" Gavin finally growled. \n\n\"It's obvious your mood has soured,\" Alex pointed out. \"If it isn't me, then it has to be Elizabeth.\" \n\n\"I'm fine,\" he told her again. \n\n\"So answer the question,\" she said forcefully. \n\n\"Be careful,\" he warned her. \n\n\"I'm ok if you want to bring her back into our lifestyle,\" Alex assured him. \n\n\"I most definitely don't want her back,\" Gavin told her. \"And no, I don't have the same feelings for her, or long to have her back. That relationship is over, and I'm glad it's over.\" \n\n\"Then why are you angry she is fucking some guy? She obviously sees him on the side,\" Alex pointed out. \n\n\"What do you mean?\" he asked her at a red light. \n\n\"The last time I was in the bar, Lena and I spied her giving him a blowjob in the alleyway. They must be a thing,\" Alex shrugged. \n\n\"Is that what you think that is?\" Gavin scoffed. \"Some sort of boyfriend, girlfriend thing?\" \n\n\"Yeah,\" Alex nodded. Gavin shook his head. \"It's not?\" \n\n\"Did you think it was odd that Beth wore those long gloves at your show?\" Gavin asked her. \n\n\"I kinda liked them,\" Alex shrugged. \"Gave her an old movie star glam look.\" \n\n\"Didn't notice the dark circles under her eyes? The fact her hands shook? Or that she seemed to have some sort of skin rash that she couldn't quite scratch enough?\" Gavin asked her. Alex shrugged. \n\n\"I envy you,\" Gavin said turning back towards the stoplight they were at. \n\n\"What's that supposed to mean?\" Alex asked her anger spiking. It had been a long time since it appeared he was picking a fight with her. Not since early on when he was trying to keep her at arm's length. \n\n\"To not know what I know,\" Gavin said softly. \"To not have seen the nightmares I have seen.\" \n\n\"I don't understand,\" Alex implored with him. \n\n\"She's an addict,\" Gavin said bluntly. \"Everything about her screams it!\" He told her as he accelerated. \"The gloves? Covering up injection sites on her arm. The scratching? A byproduct of her using. The sunken eyes, the dark circles, the loss of weight...all of it.\" He was quiet for a few moments. \n\n\"I've been down that road,\" Gavin told her. \"It is so obvious to me, so painfully obvious.\" The lone tear slipped out but she only saw it and said nothing. \n\n\"And the man?\" \n\n\"Her dealer, obviously,\" Gavin told her. \n\n\"What?\" \n\n\"Elizabeth doesn't have a job, she is doing volunteer work that Royce's dad set up for her,\" Gavin explained. \"She doesn't have the money for drugs...so she is using what she has to get her fix.\" \n\n\"I have been hearing in circles that Royce has been ordered to stay away from the drugs while he gets put in position to take the Senate. It's obvious Elizabeth can't, or wont, walk away. She gets her money from Royce, and he isn't giving her enough to buy drugs,\" Gavin continued. \n\n\"You think she is trading sex for drugs?\" Alex said in disbelief. Gavin looked to and gave a short laugh of disbelief. \"How do you know for sure?\" \n\n\"Because Carla did the same,\" Gavin snapped. \"Been there, done that!\" \n\nAlex dropped her head as she thought about that. She hadn't even thought it through like that. She just thought it was a fun little tryst. She looked to Gavin and put her hand on his arm. \n\n\"I'm sorry,\" she whispered. \n\n\"Nothing to be sorry about,\" he told her robotically. \n\n\"Yes there is,\" Alex said to him. \"You're in pain...I see that now.\" \n\n\"Pain not caused by you,\" Gavin told her as he stopped at the next light. \n\nAlex undid her seatbelt which made him look at her as she got up on her knees to move closer to him. She put her hands to either side of his face. \n\n\"She is not your responsibility,\" Alex told her. \"You already have two women on your plate.\" Alex grinned at him causing him to grin back. \"I wish I could take the pain away!\" she said kissing his lips. \n\n\"Are you going to sit back down in your seat and put your seatbelt on, or should I just put the car in park and bend you over my lap here and spank you?\" He joked with her. \n\n\"I'm in need of a good spanking,\" Alex teased. \n\nRight then the light bar of a squad car behind them flipped on and a short burp of the siren told them to go as the light was green. \n\n\"Holy shit!\" Alex gasped as she sat down quickly, yanking the seatbelt across her. They both chuckled as the squad car pulled up next to them and the officers inside looked into the car. Alex waved apologetically and both officers nodded their head and pulled away from them. \n\n\"Damn,\" Alex laughed. \"Had they waited a few minutes they could have caught us in mid kinkery, then we could have borrowed their handcuffs!\" \n\n\"You are something else,\" Gavin said with a sigh as the anger began to melt off him. \n\n\"At least you're smiling again,\" Alex pointed out. \"I was hoping the night wouldn't be ruined, I need my Sir to play with me!\" \n\n\"Getting pretty needy there Little One,\" Gavin pointed out. \n\n\"It's not my fault you spoiled me,\" she countered. \n\n*** \n\n\"You like that you fucking whore?\" the man growled in Elizabeth's ear as he yanked her hair back as he plowed his cock deep in her. \n\n\"Yes, fuck me!\" she demanded. \n\nThe man let go of her hair and took his hand and smacked her square on the ass, the crack of which filled the parking lot with an echo. Elizabeth yelped as the sting of the fingers across her skin ripped through her. He followed that smack with another, then another. Reddening her ass cheek before switching to the other side to turn the other cheek into a red stinging spot. \n\n\"You are such a fucking whore,\" the man growled. \n\nHe began to tighten his grip on her hips and began to drive with such a force that her body hit the trunk of the car she was using for balance. His powerful body driving her into the trunk lid. \n\n\"Fuck me,\" she hissed through clinched teeth. \n\nHer orgasm was building as he fucked her there. His cock driving her open as he slapped her ass cheeks. The top part of her cheeks red from his slaps. The bottom of her behind, slapped by his hips as he buried himself in her hot, wet folds. \n\n\"You like my cock, whore?\" he asked as he yanked her hair to one side. \n\n\"Yes, I love your cock,\" she gasped. \"Fuck me!\" \n\n\"Fucking slut,\" the man snarled. \"I'm going to treat you like a whore!\" He pulled out of her sex causing her whimper in disappointment, she was getting close to getting off! \n\nThe feel of his cock at her anus made her snap her head to look at him. \n\n\"Wait!\" she commanded. \n\n\"Fuck that,\" he retorted. \"You're a fucking slut, I'm going to fuck you like I please!\" \n\n\"Just give me a moment,\" she told him. She tried to move a bit to change the angle but he forced her face against the car trunk. \"Please, I don't care if you fuck my ass but I need a little lube or something to help out at first!\" \n\n\"Whores don't get lube!\" he growled. \n\nHe pressed his cock head into her orifice and she did her best to relax. His cock popped through the anal ring and she gritted her teeth at the feel of his cock pushing into her dry hole. \n\n\"Fucking whore, I told you that you didn't need lube,\" he hissed in her ear. \n\nHe continued to press deeper into her ass, she stopped trying to change the angle and worked on just relaxing her muscles to let her ass accept him. He began a hard fast drive into her and the burning feeling continued as he drove his cock in and out of her ass. She gritted her teeth in pain but could tell by the way he was grunting and the grip he had on her that he wasn't going to last too much longer anyway. So the pain would subside shortly. \n\nWith a sudden flurry of thrusts he buried his cock as far as he could into her and let his cum explode deep within her ass. The soft throb of his cock in her sensitive anus let her know he was cumming in her. \n\nThen with the feel of a burning knife being pulled out of her ass he let his cock pull from her, the cum he just pumped into her coming out right after and splattering on the ground between her legs. \n\nShe laid there on the trunk of the car, the cum leaking out, her ass burning. He used her skirt to clean off his cock from their sex. Then pulled his pants up and buckled his belt. Digging into his pocket he pulled out a small baggie and tossed the whitish powder on the trunk lid near her face. \n\nWithout another word he left her there, her skirt up around her waist. Cum leaking out of her and shame falling on her. She looked to her Dom, the little white baggie near her face and she knew just how far she had fallen. \n\nWith tears streaking down her face she stood and straightened her skirt and picked up her Dom and made her way out of the parking lot. Her ass stinging with every step. It wasn't the first time she had been taken in the ass without lube. But it was always uncomfortable for a few days after. She hoped Royce wouldn't want anal sex for a few days. \n\n*** \n\nAlex waited for Gavin to come around to open her door. She hoped he would not be so distracted with Elizabeth that he wouldn't want to play with her. She then chastised herself for being so selfish. \n\nOpening the door for her he held out his hand for her to take to help her stand. The secret smile was back, and she was happy about it. \n\nLeading her in through the garage door she stopped when he put his hands on her shoulders from behind. He let his skillful fingers pull the zipper on her dress down. She stood motionless as he pushed the fabric off her shoulder and it puddled on the floor at her feet. Slowly undoing her bra, he let it fall from her and join the dress. \n\nHis hands traveled the full length of her body from behind, his cock pressed to her to show his excitement. Her eyes fluttered closed as he crossed her breasts, down her flat stomach to her sex, cupping it gently with his fingers. \n\n\"Are you ready to play?\" he asked her. \n\n\"I've been ready for hours! You've been killing me all night!\" she whispered. \n\nHe took her by the hand and led her down the stairs to the basement. She smiled her secret smile the entire flight down. She knew he had been setting up something down here. She had been anxious to find out what it was since that day she found him down here wondering about the weight capacity of the floor beams. \n\nStanding at the bottom of the stairs he gave her a look to wait, she obeyed. He went over to the laundry table and he moved it easily to the middle of the room. She smiled to herself. She hadn't even noticed that the folding table had wheels on it. She also remembered she thought it was odd that the laundry table was padded in soft leather. \n\n\"I take it that table isn't only for laundry?\" She teased. \n\n\"Much like the kitchen rack in the condo, it's multi-purpose,\" he smiled. \"Just takes a little imagination and any room, any object, can be used for sexual purposes.\" He pointed out. She nodded. \n\n\"Come,\" he said patting the table gently. \n\nShe walked over and he picked her up and set her on the table. \n\n\"Lie face down,\" he told her. \n\nShe turned and obeyed, letting her face lay on the cool leather. She closed her eyes and waited for his next orgasmic idea. For a few moments he didn't touch her. Instead he went to a high cabinet and began to pull some hooks and pulley's out. She watched him from her position on the table. \n\nHe came to her and began hooking hooks around the beams above them. Putting rope through the pulleys and hooking \"S\" hooks to clips already in place showing he had this planned for some time. Perhaps even erecting his idea to make sure it was going to work properly. \n\nThe time in between his taking her dress off her, to assembling the new play toy he was going to use on her was driving her insane. It took nearly half an hour of her lying there while he worked around her. He would touch her each time he would move, or change positions around her. A gentle finger here, a brush of his palm across her bare buttocks. \n\nStanding at the head of the table, his cock pushing against the fabric of his pants and she could see the outline of it. She wanted to reach her teeth out and nibble on it but knew he would step back away from her if she tried. He was diving her mad with lust, the longer he took the worse it was for her. The anticipation of what he was going to do was making her legs tremble with excitement. \n\nSoon she felt the rope looping around her arms and wrists. Then again around her thighs, calves and ankles. Then with a gentle tug, she was lifted off the table and suspended in air. Her arms and legs being pulled tight with the weight of her body as she hung there. There was a subtle worry of falling but dismissed it, if Gavin was doing it, it would hold. \n\nGavin continued to loop ropes around her. Two ropes looped around her chest, one on top of her breasts, one below causing her breasts to stick out as they squeezed gently on her chest. \n\nAnother set of ropes around her hips, wrapping around her body then up into the pulley in the rafters. He pulled on another rope and she was lifted a bit higher, but now the weight had shifted from her wrists, arms and legs, to her hips and chest, making her feel more secure and lest pressure on the joints of her extremities. \n\nGavin then pushed the table away from her and back against the wall, now she was completely suspended from the rafters with multiple ropes and knots. \n\n\"How do you feel?\" he asked her gently as he ran his fingers down her back. \n\n\"Vulnerable,\" she admitted. \n\n\"Any pain?\" he asked. \n\n\"None,\" she told him with a shake of her head. ",
        "\"As this is our first suspension session, I don't want any pain,\" he told her. \"If something starts to rub, or hurt, I need to know immediately. Don't wait and be tough.\" \n\n\"Yes Sir,\" she agreed. \n\nGavin continued his visual inspection of her, touching her body and driving her crazy with it. But she also knew trying to rush him would be a waste of time as he wasn't going to go to the next stage of his plan until he was sure she was safe and secure with no chance of being hurt. She even figured he would slow down even more if she tried to hurry him along. \n\nHe walked around her multiple times, checking various knots, various points in which the rope touched her skin. Wherever the roped touched, his fingers touched, making sure the rope wasn't digging into her too deeply. Running his fingers along her body. \n\nComing around to stand in front of her he tilted her head up with his finger. \n\n\"Are you ok?\" he asked her. \n\n\"Yes,\" she smiled. \"I'm fine.\" \n\n\"Then we begin,\" he told her moving away. \n\n\"About fucking time,\" she said to herself with a smile. \n\nMoving out of her view, she heard him behind her. The sound of metal on concrete had her brain scrambling to figure out what it was. The soft hum of the wand vibrator filled in the blanks of her mind. It was the metal stand he used to prop up the wand against her sex while he played with her in another way. \n\nShe gasped when the soft rubber of the wand touched her already warming sex. He took a few moments to make sure it was properly placed so that it was firmly in her folds, right up against her clit. The vibrations rubbing against her thousands of times per minute as it shook there against her sex. \n\nSoon she heard his footsteps move away from her as he left the wand to do its job and it was very effective as her body began to warm with the excitement. Her sex was producing heat and wetness as the toy worked her over. \n\nComing back to stand in front of her, she lifted her head when he knelt in front of her. The constant vibration had her body tingling all over. She smiled at him. \n\n\"I'm going to put these on you,\" he said showing her the nipple clamps. \"Then I'm going to attach this weight.\" He showed her a gun metal gray weight similar to what she used to use as a kid fishing. She nodded. \n\n\"It's been a long while since I had to remind you of a few things,\" he said, his voice catching a touch of hardness. \"But you know I don't like being nodded at.\" \n\n\"Fuck,\" she gasped. \"I'm sorry Sir! I understand, you are going to put nipple clamps on me!\" \n\n\"Better,\" he smiled. He kissed her lips gently and she came. The vibrations putting her on edge, the excitement of playing pushing her to the precipice then his gentle kiss pushed her over the edge. \n\n\"Keep track,\" he told her with his lips on hers. \n\n\"One,\" she gasped. \n\n\"I'm pushing you hard tonight,\" he told her. \"Remember your safe words, use them if you need to.\" \n\nSafe words? Really? She trusted him completely and he was too careful with her to harm her. She hadn't thought about safe words in so long she was shocked to hear him bring it up. \n\n\"I see you thinking, Little one,\" he smiled. \"But understand, I'm really excited to be able to play with you fully again...I am human and might go further than you can go, so yes, the safe words speech.\" \n\n\"Yes Sir,\" she smiled. She wouldn't need them, but understood where he was coming from. Gavin, thorough as always. \"Green.\" \n\n\"Thank you,\" he smiled. \n\nHe adjusted the small screws on the clamps and then carefully put the first one on. She sucked in a breath as the soft rubber coating on the clamps bit into her soft nipple. The pain radiated out and through her breast. \n\nHe waited until she opened her eyes again before he moved to the other breast and attached the nipple clamp to her other breast. He gently tested each clamp to make sure it was fully secure before he moved on. \n\nWatching her expression, he hooked the weight on the middle of the chain connecting the two clamps to one another. Slowly he lowered her hand until the full force of the weight tugged on the clamps causing her to hiss slightly as they stretched her nipples downward. Right then her body began to tremble from her next impending orgasm. \n\n\"May I cum Sir,\" she asked him in between painful shots from her chest and the vibrations of the wand between her legs. \n\n\"I want you to cum at will tonight,\" he told her. \"You have my permission to cum all you want!\" \n\n\"Thank you Sir!\" she cried out as another orgasm gripped her hanging body. It twisted her body slightly then let her go. \n\n\"Two,\" she said through ragged breath. \n\nMoving away from her head he positioned himself between her legs and ran his hands up the inside of her spread legs. The closer he got to her sex, the more he felt the vibrations from the wand. Repositioning the wand slightly he put it directly on her engorged clit that was protruding from underneath its protective hood. \n\nNow he could let his fingers slide into her wet sex, her cum coating his fingers as he dipped them further and further into her. The moan she let out made him smile. He thrust first one finger into her, then two, bringing her to orgasm. \n\n\"Three,\" she was able to whisper as she came down. \n\nHer breathing was ragged as the time in between her orgasms was shortening, as was usually the case when she got to cumming. The more she came, the more it seemed they were right on top of one another. \n\nMoving back around he stood in front of her, she now noticed he had taken his tie off at some point. She didn't see it happen, but it was off and somewhere in the basement. He was still fully dressed which told her, this was going to be a marathon session. Not a quick one. \n\nHe carefully removed the nipple clamps, first the weight, then the clamps themselves, but each relief caused her nipples to throb and the sensitivity to grow exponentially. Once they were all the way off he gently ran his fingers around the areola, pulling on the nipple itself causing a wash of sensations to flood her. Part pain, part pleasure. \n\nHe played with her nipples, causing her body to shake and jolt. First with his fingers, pinching and pulling. Then he got under her and used his tongue and lips to swirl around her nipples. Each fantastic flick of his tongue caused her to jump into the bindings. \n\nHe moved away from her and lowered her down a bit, rechecked the ropes again. Again he was touching each knot, each place it touched her skin. He tilted her head up and looked into her deep blue. \n\n\"Very much green,\" she smiled at him without him asking. \n\n\"Hmmm,\" he smiled. \"Get ready.\" \n\nShe lifted her head to see his secret smile move to a more diabolical grin. \n\n\"Oh shit!\" She said to herself when she saw what he had in store for her \n\n\"Holy fuck!\" she whispered. She let her head drop, this was going to be a long, cum filled night! \n\n*** \n\nOk, first off, stops cussing at me! I can hear you! LOL. Second, before you get out your poison pens and begin with the angry emails and comments...you have to admit, it's been a while since I left you with a cliffhanger! C'mon let me have some of my petty tortures! \n\nThe good thing? You only have to wait until tomorrow, I submitted two chapters at once so the next should be up tomorrow! Maybe ;)"
    ],
    "authorname": "CJT",
    "tags": [
        "suspension bondage",
        "nipple clamps",
        "fingering",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-46"
}