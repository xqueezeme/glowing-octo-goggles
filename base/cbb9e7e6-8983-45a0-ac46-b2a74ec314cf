{
    "title": "TT Spalding, P.I.",
    "pages": [
        "This is just for fun. \n\nStory was edited by Angel Love with comments, always appreciated.\n\nTT Spalding- PI \u2013 The Waters Case\n\nI was reading my log book. Trying to get the gist of the case so I could finish the final report. The one for the office files, not the one for the client. I kept a full accounting of all of my clients in the hopes of one day writing a book, just like my hero, Mickey. That's Mickey Spillane, writer of Sam Spade novels. \n\nThe broad walked into my office and sat down in the chair in front of my desk. She was a real looker: blond, hair cut short like a pixie, green eyes that were big and round, a figure that would make any guy stop and look back and legs that were at least ten miles long. She had a smile that said there were things she had to share that would be worth my time. All in all, she was a knockout!\n\nThe description was fairly on the money but the vernacular was right out of a Sam Spade novel. I kind of liked it though and I recorded it just like that in my voice recorder. My part time secretary and full time wife of seventeen years, Margaret, or Maggie for short, would get a kick out of it and would type it in 21<SUP>st</SUP> century code.\n\nIn case you haven't figured it out yet, I'm a PI. My name is T.T. Spalding. The T. T. stands for Theodore Terrell, a gift from my parents. I went by TT and threatened anyone who called me by my real name, except for my wife, of course. Yeah, I was a licensed investigator and I worked for myself here in Richmond, Va. My stick was missing persons, business scams and family affairs of all kinds. I generally worked by myself but I had two trainees that wanted to learn the business. Since I couldn't pay them much, they usually worked part time or when I had a big client that paid in advance. Those were few and far between but as I grew, word of mouth would bring in more. \n\nI had been on my own now for slightly more than three years and I was making a good living, especially on the corporate stuff. I really liked that gig but those were the ones that were just becoming more plentiful. The real day to day stuff was missing persons and family crap. I hated the family crap. But, sure enough, the beautiful blonde knockout was in that category. I remembered the day she came in.\n\n\"What can I do for you Miss . . .?\"\n\n\"Waters, my name is Karen Waters and I am a Mrs. I'm married to a man by the name of Steven Waters and I think he's cheating on me. I need you to find out for sure.\"\n\n\"What makes you think that Mrs. Waters?\"\n\n\"He's been coming home later and later, his clothes smell like perfume, there are charges on our credit cards that I can't explain and he hasn't touched me, you know, in that way for over a month. I know he's cheating.\"\n\nI watched her as she talked. She was nervous, very clearly upset, and she seemed angry, but I thought there was something else. I could tell by the way she fiddled with her handkerchief, almost tearing it apart in her hands, that she had more on her mind. \n\nBut, she only mentioned his cheating so that was what I concentrated on. At least, for now. As she spoke, I could see that there were unshed tears in her eyes and she tended to hunch her shoulders, apparently to hide her embarrassment. I believed she was probably right about her husband, and I hated it. But, I needed the money and she seemed desperate.\n\n\"What do you want me to do, Mrs. Waters? I can find out for you very quickly if he's being unfaithful and I can tell you with whom. Is that enough or do you want more concrete proof? Like pictures or tape recordings?\"\n\n\"How much does it cost? I mean, if I want real proof? I would probably want the pictures to make it so he can't just deny it. And pictures would be better if I went to divorce him, wouldn't they?\"\n\n\"Yeah, proof will make a divorce more profitable for you and harder for him to hide anything. I doubt he would want to go to court to fight you if you had the proof nailing him dead to rights.\"\n\n\"All right, how much would that cost?\"\n\n\"I charge a flat fee for this kind of job. It's $3,000. For that, I give you pictures, names, addresses, phone numbers, tape recordings and a daily log covering two weeks. I'll document visits, length of time, that sort of thing. You get the report and if it's satisfactory, you pay me. If you don't like it, you still owe me $1500, $500 up front and I keep all pictures.\"\n\nMoney must not have been an issue with her because she just nodded her head affirmatively. I pulled out the standard contracts and filled in the money and her name and she signed without a qualm. She then proceeded to give me the information I needed to get going along with $500 cash. I promised her a final report two weeks from tomorrow and we shook hands. She thanked me and left, me watching her departing ass as she walked out. If he was cheating, her husband was a fool.\n\nAfter she left, I called Polly and asked her if she was ready for a two week assignment. I told her $800 for the job and it was up to her how much time she needed to get it done. She happily agreed and said she would be there in an hour or so. In the meantime, I went on the net and found what I could about Mr. and Mrs. Waters. Seems he owned a very nice little business, working in the information world. He was rated very high with Dun &amp; Bradstreet and was considered financially sound. We were in business.\n\nI gave Polly the stats when she came in and she was raring to go. Now, Polly was a real knockout herself, just twenty-two with short black hair, boobs that were high and perky and a real cute figure. She worked as a free lance photographer most of the time and I was a sideline for her, She was one hot babe, but my wife had her number. Polly and Maggie were tight and there was no chance of any hanky panky there. Actually, I loved Maggie to death, and she knew it so she had no worries.\n\nSo, Polly went to work on the Mr. while I went back to the computer and compiled all of their vital statistics. One thing I had learned as a cop back in Baltimore, Md. was that there was always more to a story than clear at first glance. And some of the stuff I was getting was very interesting. It gave me a whole bunch of ideas, but there was time for that later once we had what we were after.\n\nIt was a week later when Polly called and said she wanted to go over what she had with me already. She said she didn't need another week: we had enough to bury his ass and she wanted my help in writing the report. I told her to come in and we would review and compile what she had. I was interested anyway. Even though I didn't quite believe her, I liked the lady and I wanted to see if we could make her job of divorcing his ass easy. \n\nWhat Polly had was this: Steven Waters was seeing a woman about ten years younger than himself. Her name was Sally Kardon and she was a receptionist at a posh downtown salon. Seems he had met her a couple of times when he picked his wife up after having her day at the spa. Polly had pictures of him meeting her in front of an apartment building downtown where she lived, swapping spit with her in several different locations, grabbing her ass right in front of the building and in general, making a total fool of himself. But she had more. \n\nShe got the girl's address and had broken in and installed a few small cameras. She had pictures and video taken inside the girl's apartment showing her on her knees giving him a blowjob, him on his knees slamming into her from behind while she was bent over the back of the couch, her on her back with her knees pushed up to her chest while Steven pumped away buried to the hilt in her pussy. There was still more, him eating her out, her with both hands on his head driving him face first into her cunt, him titty fucking her, kneeling over her while she lay on her back, and one, my all time favorite, him plunging into her while holding her up against the wall. This guy was hell bent on fucking her to death and she was doing all she could to make it easy for him.\n\nI told Polly that she had a first class report and all the proof she needed so to write it up and get it ready. We could do this in less than two weeks and make a tidy profit. She agreed quickly but clearly had something else on her mind. I just waited while she thought about it. Finally, she let me know what was bothering her.\n\n\"You know TT, I don't like this one bit. I picked up on some of their conversations and I got the strangest feeling that he was not just cheating on her.\"\n\n\"Go ahead. I think I know where this is going, but talk it out for me.\"\n\n\"Well, I think she started it and I think he was just getting even with her or just trying to even the playing field. I think she's been cheating on him and he found out. There has to be more to it than that, so maybe this was more than payback on his part.\"\n\nI was inclined to agree with her. There was the nagging feeling I had after Mrs. Waters left my office. Well, that and the growing erection I got from watching her ass as she walked away. It's funny. My dick seems to know when a woman is a cheater. It seems to think that she's fair game when an unfaithful woman comes in the office. Well, if Polly and my dick both think something is up, who am I to argue? \n\nSo, I told Polly to go after the wife if she thought it was a possibility and maybe we could get money from the husband as well. Hell, if they were both cheating, why not give both the same ammunition and let them fight it out in court. We make money and they make fools of themselves. And after all, she had tried to make a fool out of me. Worked for me.\n\nWell, Polly went back to work and sure enough, she was right. Seems Mrs. Waters had a boyfriend. Well, actually, she had two. There was one that came to her home when Steve was working and one downtown that she saw at least twice in four days. When Polly told me what she found, I called Mrs. Waters and told her we had the proof she wanted but that it would take us an extra week to ten days to finish up but not to worry as I wouldn't charge her any extra. She wasn't happy but she bought it.\n\nI had stumbled onto what I thought was going on here so I worked with Polly on Mrs. Waters. It was really fascinating and I wanted to use the extra time to see what she had going on. You'd never guess that the sweet thing that came in my office, shy and showing a tear as she talked about the possibility of her husband cheating on poor little her was a conniving slut that had at least two tricks on the side. I, on the other hand, being the cool suave private dick that I was, had no clue as to exactly what was up. \n\nPolly was very good at surveillance and she set up small high resolution cameras in Mrs. Water's home bedroom and in the apartment of a guy by the name of Wally Cannon who lived in a high rise downtown. Not the best part of town but what the hell. How Polly worked her magic, I never asked. She did the job and I accepted it as is. \n\nAfter Polly's breaking and entering, and the additional week I had negotiated, we had four recorded trysts of Mrs. Waters with the Cannon guy and two with the lover who made house calls to service her. His name was Harmon Simms. Seems he was a neighbor who lived three houses away. Convenient. \n\nI sat down with Polly and Maggie. (Maggie was there for my protection). We fast forwarded and reviewed the tapes and selected the best from each one. I had Polly put together DVDs of the best of each lover and get them ready. I thought that with thin new information, maybe she should talk with Steven Waters and see if we could have him hire us as well. I told her we would take a flat $3000 with no questions asked. She suggested $4000 since we had such great movies and it was probably her that was trying to screw him. I agreed that she was a better businessman than me and told her to go for it.\n\nMaybe you think there's a breach of ethics here, but there is no such thing. My license had nothing to do with my morals or my duties to the customer. I just had to declare myself as private, make sure no one thought I was a real cop and I was required to disclose anything I knew to the courts under subpoena. If I double crossed the double crossers, no one gave a crap, and word of mouth in this part of the business wasn't a big deal. My clients didn't talk much about themselves. \n\nWhen she was ready, Maggie and I reviewed what Polly put together. Let me tell you, I was so hot after watching the DVDs Polly made that I had to rush Maggie upstairs to the bedroom where I fucked her silly. I had to admit, she was really into it as well. We lost about 3 hours of valuable work day but who's counting. Afterwards, we went back down and finished the DVDs. God, were they hot!\n\nThe first showed Karen and Wally in his apartment. Polly showed Karen arriving, slowly stripping, then a quick shot of her naked except for a pearl necklace, spinning around for his approval. Then the angle changed to show her on her knees with one hand fingering herself while she held Wally's pecker in her mouth with the other as she sucked him off, moving her hand up and down his shaft. There was a good view of her face covered with his spunk. She was laughing and looked quite pleased with herself. The next few clips showed Karen getting royally fucked in the missionary position by Wally, ending with a loud scream from Karen and a deep grunt from Wally as he filled her with his cum. \n\nI stopped, wiped the sweat from my face, looked at Maggie, wiggling my eyebrows suggestively but unproductively, and then back to the DVD. For the next 10 minutes or so, Karen once again sucked Wally back to hardness and then he took her from behind, pumping into her with a long smooth stroke. Since he had already cum twice, he was able to stay with her for a long time and he alternately held her hips as he plunged into her or bent over her back, grabbing her tits as he pummeled her. \n\nThrough all of this, Karen was moaning, \"Yes, yes, yes.\" It was sort of monotonous to me but she was certainly letting him know she was very happy with him. He was just sweating and pumping away. I had to give it to him. The man had stamina. \n\nThere was a little more but we ejected that DVD and put in the next one. This one was taken in her bedroom at their home and showed the neighbor guy, Harmon Simms. He was a short, balding guy with a small beer belly and lots of body hair. I looked at him and then at Maggie with a questioning look but she just smiled and shrugged her shoulders as if to say, who knows. Why would a looker like Karen let a putz like Harmon even be in the same world with her? I had no clue. Anyway, I pushed play and sat back.\n\nThe answer hit me in the face as soon as I saw the first picture of Harmon Simms naked. My God! I had never seen a cock that long or that big around in my life. I mean I had looked at a lot of porn on the net but this beat anything I had ever seen. He had to be ten inches long and as thick around as my wrist. I know what you're thinking. You've read stories of bigger but this one wasn't a story. This was real and on a real guy. Not a porn star but a nerdy neighbor. He was huge! I shut my mouth and sat back, curious.\n\nPolly had put this one together with a lot more care. I could see why almost immediately. The first scene was Karen, with both hands around Harm's cock and she was trying to get it into her mouth. She was having trouble just getting her mouth open wide enough to take the head in. She finally gave up, tilted her head and began to slide her lips up and down the length of it. While she was doing this, Harm was smiling down at her and running his fat hands through her short blond hair. It was a lot like watching a train wreck. It was horrible but I couldn't take my eyes off of it. I watched his face since that was what Polly had focused on and saw him squint his eyes tight as he fought to control his climax, but he finally lost the battle. The next thing I saw was his fat hands holding Karen's head steady as he let go a blast of cum right into her mouth. He wasn't gentle and she wasn't a happy camper as I could easily tell but she didn't say a word. She just opened her mouth and shut her eyes and took it. \n\nI found myself panting and tried to control my breathing after that but there was more. Polly had moved almost immediately to the next scene showing Karen on her side with one leg lifted in the air. Harm was behind her on his side and holding her leg up, he moved close to her and slid his cock into her pussy. I say slid. Well, actually, it was just the first inch or so and that caused Karen to squeal like a stuck pig. I glanced over at Maggie and I could see she was grimacing as though she was the one being stretched. \n\nHarmon just seemed to accept it as normal because he never even slowed down. He just kept pumping in and out, each time a little deeper, and I watched as the first few inches slid in, spreading Karen's lips apart and stretching her beyond what I thought possible. But she took it and he pushed even harder. I watched in awe as the first five or six inches disappeared while he pushed. \n\nKaren was panting and letting out a little sound that made my skin crawl but she never told him to stop. Finally, after pushing for what seemed like an eternity, most of his monster was inside her. I couldn't believe it but I couldn't doubt the evidence. As I watched, he slowly backed out a few inches and then pushed back in. Karen let out a scream that should have woken the dead but he just did it again and again. Karen finally stopped screaming and just lay there whimpering quietly. I saw the lips of her pussy pull out as he withdrew and then moved in as he pushed. It was obscene but arousing. I had a hard on that wouldn't stop. \n\nWell, Polly had included this scene to its conclusion and I watched it but then I had to stop. I couldn't take any more. Maggie just smiled at me and reached over to grab my erection. She whispered in my ear and I nodded gratefully as she used her hand to bring me to a climax right there. I offered to return the favor but she told me she had taken the opportunity to help herself earlier. \n\nWe put the two DVDs in a small disc envelope, sealed it and put our own evidence tape across the top. With these and the short and sweet report Polly had including their names, addresses and phone numbers, with dates, we were ready to contact Mr. Waters. I called Polly and told her it was a go. First thing in the morning she would call.\n\nI watched as Polly called his office and asked to speak with him. When whoever she was talking to asked the nature of the call, Polly just said to tell him it was very personal from Mr. Spalding. She looked at me with a smile as she waited. Finally, he came on. I listened as Polly told him who she was, what she had and asked if he would be interested. He asked a couple of questions about his wife and I gave Polly the information. That seemed to satisfy him and he made an appointment to come in the next day. We were set.\n\nThe way this worked, I called Karen and told her I had the report ready and all she had to do was come in and read it. If she was satisfied, she would make payment with either cash or a certified check. That was my policy. No chance to stop payment once they left the office. I set the time for thirty minutes before Mr. Waters was due in. All we had to do was follow through. \n\nKaren Waters was right on time and I showed her into my office and shut the door. She was nervous but still looked wonderful. I could almost see her mouth being stretched by old Harm and the rest of it . . . , well, I wish I didn't love my wife so much, but I did. Anyway, I showed her the pictures first and then gave her the report to read. She was quiet for some time and finally raised her head with a smile.\n\n\"This is perfect. You have the name of the slut and her address. I also love the pictures. It's very clear that he's cheating on me and the dates show this to be an affair. Several times with the same girl. This is wonderful. It's worth every penny.\"",
        "With that, Karen reached in her purse and pulled out the cash. I didn't bother to count it as I was certain it was all there. Karen was a cheat but not a crook. I thanked her and asked her what she planned to do next. I wanted her to stay for just a few more minutes and she seemed relaxed enough to tell me about contacting a lawyer. She also mentioned the conditions of her pre nuptial agreement and this was what I was waiting for. I knew it! I knew that was what the deal was! She told me that if she caught him cheating, the pre nup was null and void. If she cheated, it made no difference what he did. She would get nothing. Hot Damn! Polly owed me $20!\n\nWhile I was talking to Karen, Polly had played the DVDs for Steven in our little conference room next door and he was more than ready to pay the four grand just to get his hands on them. Polly had advised him to bring cash so he just handed it over as she gave him the package. Now for the finale. As he sat reading the report she rose.\n\n\"Mr. Waters, would you wait here in the conference room for just a minute? We have someone we would like you to meet.\"\n\n\"Sure, no problem, One of your investigators?\"\n\n\"Well, something like that.\"\n\nWith that, Polly knocked on my door. That was the signal. I turned to Karen and told her I had someone she should meet. She stood and followed me out the door without a clue. I walked to the door to the conference room and stepped to one side.\n\n\"Go on in. There is someone there you need to talk to. We'll give you some privacy.\"\n\n\"Is it her? The one he's cheating with?\"\n\n\"Just go on in. This should give you some closure.\"\n\nWith that, I opened the door and she practically ran in. I quickly shut it behind her and left. It was only a few seconds before it started. And man, was it brutal! I loved every loud, screaming, minute of it. \n\n<H1>Epilog</H1>\n\nMaggie and I sat in our whirlpool on the patio of our little bungalow. We had had a good three weeks. We made just over $5400 after paying Polly $1600 for her part in the deal. Not bad for three weeks and a few days work. Neither of us felt bad as we watched a broken marriage fall apart. Both spouses were cheaters and neither deserved any advantage. We had given Karen exactly what she paid us for and we gave Steven exactly what he needed to make it even. The final result was that he divorced her and she got zilch, nada, nil! Well, when you try to put one over on someone, you pay the price if it goes belly up.\n\n\"Well, we deserve a break, don't you think?\" my lovely wife asked as we soaked in the hot bubbling water.\n\n\"I don't think we have time. There was a man in today that thinks his wife is cheating on him and he wants our help in proving it. He says she has changed recently and he knows something is wrong. I asked him if he had done anything that might have caused her to try to get even and he just shrugged his shoulders but I could tell. He finally told me that he may have but he didn't go into any detail.\"\n\n\"And?\"\n\n\"And I told him we would take the case.\"\n\nShe just laughed and slapped my arm. \n\n\"By the way. I made a copy of those DVDs we gave to Steven Waters. Want to watch them again?\"\n\nMaggie just laughed and reached down to grab me. Neither of us had anything on and we let nature take its course.\n\nTo be Continued . . . "
    ],
    "authorname": "thecelt",
    "tags": [
        "private eye",
        "private investigator",
        "p.i.",
        "cheating",
        "infidelity"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-p-i"
}