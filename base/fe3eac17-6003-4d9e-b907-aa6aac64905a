{
    "title": "Heather's Exquisite Map of Tassie",
    "pages": [
        "Dear reader,\n\nI've written this story for the inaugural 'In a Sunburned Country Event', for both my enjoyment and yours. I self-edited, and although I've proof-read several times, the time came when I needed to stop playing with it and put it out there. Anyhow, I've found the best way to discover an error is to publish, so apologies for any mistakes.\n\nThe events and characters in this story are figments of my imagination, however, the locations described within are real. Known for thousands of years as lutruwita by the indigenous palawa pakana (native Tasmanian people; palawa kani words all in lowercase), and named Van Diemen's Land by Europeans from 1642 until the end of 1855, Tasmania is an island state of Australia.\n\nA mountainous land of wild rugged beauty, Tasmania has a cool temperate climate, often said to have 'four seasons in one day'. Consequently, if you are unfamiliar with Tasmania, my descriptions may not quite fit your preconceptions of stereotypical Australian 'sunburnt' landscapes. The Tasmanian Wilderness World Heritage Area covers approximately 20% of the state, and in the north of this wilderness is a popular multiday hike, the Overland Track.\n\nOn another note, having an Australian setting this story obviously contains many Australianisms, and I suspect the term 'Map of Tassie' is likely to be unfamiliar outside Australia. To clarify this idiom, I found the perfect explanation from Urban Dictionary: \"Map of Tassie -- Australian colloquialism for a woman's pubic hair. Originated from the similarity in shape of a woman's pubic hair to the shape of Australian Island State of Tasmania.\"\n\nI'll also draw your attention to the word 'cobber' which crops up a few times, and is another word for friend, analogous to 'mate'. Once common across Australia but now rare, except in Tasmania where it's still part of the local vernacular. I've also heard it used on rare occasions in Queensland, where incidentally, the story begins.\n\nAnd so, cobber, enjoy this adventure deep into the Tasmanian bush!\n\nThefireflies\n\nEARLY-DECEMBER\n\nA melodic tune from a guitar accompanied by a sweet voice drifted from one of the bedrooms through the old Queenslander house, mixing with the pervasive humidity and smell of cannabis wafting in through the flyscreen door from the back veranda. A fairly standard welcome home for Tim after a heavy day in the hospital emergency department. He tossed his backpack into his room and grabbed a stubbie of XXXX Gold mid-strength beer from the kitchen fridge, before pushing open the flyscreen. \"Mate, that shit'll give ya drug-induced schizophrenia,\" he said to Ryan before taking a pull on his beer.\n\nRyan placed the bong down on the card table, carefully avoiding the sheets of paper sprawled out in front of him, and exhaled a cloud of pot-smoke before turning directly away from Tim, speaking to the empty chair on his left. \"Hey, do you think he's talking to us?\"\n\n\"Ha har. You're mentally deranged already, so what's it matter.\" He swept his hand in the direction of the mess on the card table. \"Anyway, what is all this shit?\"\n\n\"What do ya reckon they are, mate? You've never seen a map of Tassie before?\"\n\nTim bent over the table, picking up the nearest sheet, treating it like maps were completely foreign to him. \"Ah, so this is what a map of Tassie looks like. I thought they'd be...softer. More, um, bushy.\"\n\n\"Just mind me bong there cos if you knock it over on me maps...\"\n\nTim spoke before Ryan finished his sentence. \"Then your maps of Tassie will get all wet. Anyway, obviously I know they're maps. I was wondering what you're planning?\" Tim took another pull of his beer.\n\n\"Bushwalk, mate. Overland Track. Doin' it with me big sister. She moved back to Hobart a while back and we've said for years we'd do it, but neither of us have gotten around to it till now.\"\n\n\"You Tasmanians like to keep it in the family, don't ya,\" Tim laughed. \"Doin' it with your sister and all that. Makes sense now. I've seen photos on Facebook of you two together. She. Is. Hot!\" He emphasised the last three words.\n\nRyan fixed Tim with a serious stare. \"Mate, you're talking about my flesh and blood here. Though, I s'pose you're right, Heather's the hottest sister I've got. She's also the only sister I've got too, funnily enough.\"\n\n\"Whatever floats ya boat, mate. So what's this about the Overland Track? I dunno much about it. Never been to the apple isle.\"\n\n\"You haven't lived till you've been to Tassie, cob. God's country.\"\n\n\"You're mistaken cos God's country's clearly Queensland.\"\n\n\"Queensland? Whatever, mate,\" Ryan dismissed Tim's comment with contempt. \"I swear this state's tryin' to kill me, either with heat, humidity or lightning. Plus, it's full of red-necks like yourself.\"\n\nTim snorted. \"Me a red-neck? And to think I took pity on you and let ya live in our house, even though you're a two-headed bastard? Anyway, you've moved here all the same.\"\n\n\"Mate, you know they removed my second head at the border. But I'd go back to Tassie in a heartbeat if I didn't need me job. Anyway, Heather's posted me these maps and said to get inspired.\"\n\n\"Ya sister sent you her maps of Tassie? Sharing is caring I s'pose.\"\n\n\"Yep. She rolled them into long cylinder and inserted them up the postage tube, then licked the stamp till it was moist, and thrust it through the hole in the post box.\"\n\n\"Mate, that's a bit over the top. You're talking about your hot sister here.\" Inbreeding jokes about Tasmanians are fairly standard in Australia and because they'd become close mates since Ryan moved in eighteen months previously, Tim felt it his matey duty to give his friend shit. After all, Ryan gave as good as he got, occasionally playing up to the incestuous Tasmanian stereotype for shits and giggles.\n\n\"So, tell me, you've been to New Zealand, but not even your own south island. Typical mainlander. Shame on you.\"\n\nThe smile left Tim's face at mention of New Zealand. \"Mate, low blow. You know I went there for Abi.\"\n\n\"Too soon?\" Ryan chuckled, gesturing to the empty chair. \"Have a seat, cobber.\" He moved the bong way from the table, lest one of them knock it over and spill its dank water over his precious maps.\n\nTim sat in the empty seat, placing his stubbie carefully on the table and examined the maps as Ryan rearranged them. \"So you and your sister are planning a long bushwalk?\"\n\n\"Yep. We've talked about it for years, but Heather's been away with the army and then I finally left Tas soon after she returned. We've hardly ever been back there at the same time since Heather left in her late teens, and the walk takes about a week so we've never been able to do it.\"\n\n\"Walking for a week? I s'pose ya Sis must be fit if she was in the army.\"\n\n\"You have no idea, mate,\" Ryan said with a laugh. \"When we were kids she'd run up the mountain with Dad. For fun. She's won triathlons before and could have been an Olympian if she'd cared enough to focus on one particular sport. She still runs ten to fifteen kilometres every other day.\"\n\n\"So what's the plan then?\"\n\n\"Well,\" Ryan said, pointing to Launceston at the top of Tasmania on one of the map-sheets, \"In March I'm going to fly into Lonnie up here and meet with Heather. Our Uncle Pat's hopefully gonna drive us out to Cradle Mountain, over here,\" he moved his finger west, \"Then we'll spend a week or so walking down the track and probably catch a bus back to Hobart. After that I'll catch up with Dad and some old mates, and probably head up the coast to see Mum. I'll drink lots of real beer that doesn't taste like cat's piss, then fly back to Brissie.\"\n\n\"Nothing wrong with cat's piss,\" Tim said, lifting his beer to his lips.\n\n\"I guess you wouldn't know any better since you Queenslanders can't even spell beer.\"\n\nTim chuckled at the old chestnut, peering at his stubby intently and scratched his head in mock fatuity. \"Duh, I always thought beer was spelt with four-Xs.\"\n\nRyan frowned and snorted, as if disgusted by Tim. In the house the guitar and sweet singing stopped, and out in the mango tree a possum began growling into the warm night, advertising his availability to all the local lady possums. Soon after, Georgina walked onto the veranda. Tim swallowed more beer while Ryan looked up, as if caught in the act of planning something shady.\n\n\"What are you boys planning?\" she asked with a curious smile.\n\n\"Armed hold up,\" Ryan said dryly. \"This is the escape route, going overland.\"\n\n\"Ryan's sister sent him a care package with her maps of Tassie, just in case he was homesick.\" Tim earnt himself death stare from Ryan.\n\nGeorgina bent over the table, examining the maps while Ryan tried hard not ogle too much at her long tanned legs, or slim figure, or perky breasts. With long, straight jet-black hair dropping over her shoulders, falling forward as she leant over, Georgina was also the owner of the sweet singing voice and talented guitar play. She spoke with a smile, sounding so sexy to Ryan, making even the most banal sentence sound like a come on to him, and she knew it. \"Ahhh, maps of Tassie. I love it. Are you boys going down there?\"\n\n\"Only me,\" Ryan said, uncharacteristically lost for more words.\n\nTim laughed. \"He's going down to his sister's bush. It's gonna be hard going. It might get a bit wet, but he's got protection. His rain jacket of course. You know how these Tasmanians are. He's flying to Inceston to meet her.\"\n\n\"You're such a knob,\" Ryan spat the words with venom at Tim.\n\nGeorgina laughed. \"You two, always flirting. Anyway, gents, enjoy your, ah, maps of Tassie.\" She turned and walked back into the house, Tim and Ryan watching her behind as she went. A loose floor board gave a slight creak as she entered the kitchen, informing them Georgina would be out of earshot if they spoke quietly enough.\n\nRyan gave Tim an incredulous expression. \"This has always confused me about you two. You went through three or four years of uni with her, forming this tight friendship like you're literally best mates, hanging out all the fucken time, and you've even lived together in the same house for the past five years, and you two never even considered fucking one another? Not even once? It's like, if you look up friend-zone in the dictionary there'd be a photo of you and Georgina, sitting happily side-by-side and not holding hands, literally enjoying each other's company. It's so pathetic it makes me sick.\"\n\n\"You're just jealous, mate, because at least I would be sittin' there with Georgie. She's one of me best mates and I don't feel the need to have sex with her. We get on fine without it.\"\n\nRyan almost choked. \"Like I said, pathetic. Wouldn't stop me havin' a crack.\"\n\n\"I've never seen you havin' a crack, mate.\" Tim took a swig from his beer. \"Anyway, whatever. So you won't be around for a week or two in March?\"\n\n\"Yep. Only three-and-a-half months away.\"\n\n\"I reckon you'll need to do some training.\" Tim gave the fat at Ryan's side a little squeeze. \"Get rid of these love handles here. You're positively fat as shit!\"\n\nRyan laughed. \"Yeah, fair cop, ya cunt.\" He thought for a moment, then spoke in a serious voice, \"Heather will kick my butt on the track, so I've been thinkin' about doing some cardio. Do you want to be me training partner? I've thought perhaps running after work a few days a week would be good, but it might help to have someone who's already semi-fit to come along. I need to do some pack marching too. Maybe walk up and down Mount Coot-tha with me loaded pack on the weekends. Even if it's only an anthill compared to real mountains. I was up there recently and spoke to a bloke with a twenty kilo pack who reckoned he was training for Kokoda. Maybe we could even head down to the border and do a two day walk in one of the National Parks?\"\n\nTim considered Ryan's offer for a moment, wondering if perhaps training with his friend would help motivate him to get over his recent post football season slackness with his own fitness. \"Yeah, count me in. You should probably give up smoking pot too I reckon.\"\n\nRyan turned away from Tim, speaking once again to thin air and jerking his thumb in Tim's direction. \"Get this cunt, he reckons we should give up our favourite herb!\" They both laughed, and then Ryan lowered his voice again, facing Tim this time. \"Do ya reckon Georgie might join us training?\"\n\n\"Mate, you've got Buckley's chance.\"\n\nMID-FEBRUARY\n\nThe human body's a remarkable thing. Its natural state is laziness, looking for the path of least resistance. But given a push, perhaps inspired with a goal, it responds and regular exercise can produce stunning results, if one sticks to their regime. Ryan was very happy the fat he'd accumulated over six years in the IT industry was beginning to strip off after two-and-a-half months of regular training, and Tim even caught Ryan flexing in front of the mirror every now and then, checking out his rediscovered muscle tone. Tim had to admit his friend was beginning to look fit, but of course Tim mocked Ryan mercilessly for it.\n\nThe human body can also be fragile, and sometimes it breaks like a twig. Like when Ryan slipped off a log spanning a small gully during one of his training walks, his left leg falling the short drop of maybe fifty centimetres and his ankle twisting to the side. All with twenty-five kilos of rucksack on his back. The result was a fractured fibula immediately above the ankle joint, his tibia surviving unscathed. But he couldn't walk and Tim splinted Ryan's leg, then hoisted the heavy rucksack onto his back, supporting Ryan on his shoulder as they hobbled the remaining kilometre back to Ryan's car.\n\n\"Fucken fucken bloody fuck!\" Ryan raged, looking down at his orthopaedic moon-boot. \"I've fucken bought me plane tickets and me fucken walking pass and Heather's ready to go too. And now me fucken leg's fucken broken! Fuck you Murphy you fucken cunt. Fuck you.\"\n\n\"Murphy sure is a cunt,\" Tim said. \"I feel bad for you, mate.\"\n\nEven Georgina looked genuinely sorry for Ryan. \"Tough break, man. If you need help with anything let me know.\"\n\nTim looked at Georgina. \"Don't tempt him, Georgie. You may regret it.\"\n\nBut even Ryan was too deep in despair to think of taking advantage of Georgina's good will. Later he Skyped with his sister. \"I broke me fucken leg, Sis. It's absolutely cactus. Completely fucked.\"\n\n\"Are you serious, Ry? Jesus, how'd it happen? Are you okay?\"\n\n\"Slipped off a log and fell in a ditch. Lucky Tim was with me.\"\n\n\"Tim? Your house mate?\"\n\n\"Yeah, he's been helpin' me with me training. Anyway, the doc's fixed it but I got a big fat moon-boot and crutches and not supposed to walk on it for at least six weeks. I'm real sorry, Heather, we'll have to do the Overland together another time.\"\n\n\"That sucks balls, man. Really fucken sucks. I hope you're okay?\" Heather's voice was full of concern for her brother.\n\n\"Yeah, Sis, I'm as okay as I can be, given the circumstances. But it gives me the shits. I was just startin' to get fit again too.\"\n\n\"And you've booked your flights and stuff?\"\n\n\"Yep, sure have.\" Ryan sounded dejected.\n\n\"Well, I still want to go,\" Heather replied. \"It's too close for me to pull out now. I have holidays approved for the first time since I joined the cops, and you know how the weather's pretty nice that time of year. Sorry. You and I can do it together another time. I promise. You understand, don't ya?\"\n\n\"Yeah, Sis, if our situations were swapped I'd do the same.\"\n\n\"I knew you'd understand. So your mate Tim, he's been trainin' with you?\"\n\n\"Yep. He's been on most of me trainin' walks, and sometimes runs with me too. Bloke plays lots of rugby league and cricket on the weekends and rides his bike to and from work each day so he's reasonably fit. He's a real staunch cunt too. Carried both me and me pack a click or so back to the car.\"\n\nThere was a pause before Heather continued. \"Just a thought, but would he like to take your tickets?\"\n\n\"Dude,\" Tim whispered from across the dining table, raising his eyebrows and nodding his head enthusiastically.\n\nRyan hesitated for a moment, then said in a serious tone, \"Yeah, Sis, he might. But do you really want him walking with you in a remote area? He's got a rapey look about him.\"\n\nTim frowned at Ryan and considered kicking his broken leg. Ryan gave him a wink in return.\n\nHeather replied. \"Oh, well you better inform him about all those years we did Wing Chun when we were kids, plus my nine years in the military as a trained killer. Anyway, put him on if you don't mind.\"\n\n\"Yeah, I'll tell him you can patch him up if he cuts himself shaving and then show him some killer yoga poses too.\" Ryan turned his laptop around on the table to face Tim. Heather's oval face, framed by a mane of shoulder-length wavy blond hair, dominated the screen. \"Hi, Tim. I guess you heard everything.\"\n\n\"G'day, Heather, yeah.\"\n\n\"So you'd be keen to use Ryan's tickets and join me for a week long walk?\"\n\n\"Yeah, bloody oath. I'll pay him of course. It won't be difficult to get a couple of weeks off in March. I'm due some leave and was considering taking a week or two then anyway.\"\n\n\"Okay, great, I'll see ya in a couple of weeks then.\"\n\nAfter the Skype call Tim turned to Ryan. \"You sure you're okay with me taking your tickets? This is something you and your sister planned together for some time.\"\n\n\"Nah, it's all good, cobber. Me leg's rooted and it would be a waste not to use those tickets. Go and have fun. Take me bloody camera too and take some pics for me. I'll fucken live vicariously through you. But don't bother tryin' to hit on me sister.\"\n\n\"Why? Cos you'll get all jealous if she goes for me?\"\n\n\"Nah, because she won't go for you. She prefers the ladies.\"\n\nMID-MARCH\n\nWEDNESDAY\n\nTim picked his heavy rucksack off the baggage carousel, heaved it onto his back and walked out of the airport into the grey overcast day. When he'd left Brisbane at six in the morning it was twenty-one degrees Celsius and humid, with the mercury rising to a supposed maximum of thirty-four by two in the afternoon. He'd required a connecting flight via Melbourne, and so he'd arrived in Launceston slightly before two in the afternoon, accounting for an hour's flight delay and the hour lost with daylight savings once he'd flown across the Queensland border. Even so, the local air temperature in Launceston was only now reaching twenty-one degrees Celsius.\n\nHe walked to the drop off/pick up zone and waited, breathing in the jet fuel vapour saturating the air. An early-2000s model Holden Commodore station wagon with blue paint peeling in patches and dark tinted windows pulled up, and Tim recognised Heather as she opened the passenger door.\n\n\"Hi, Tim, I'm Heather, obviously,\" she smiled and offered her hand.\n\n\"Hi, Heather obviously, I'm obviously Tim.\" He shook her hand, noting how firm her grip was, and wondering if he'd made things awkward straight up with his daggy introduction. But she actually laughed, which he found quite cute. He noted she was tall, maybe ten or so centimetres shy of his own one-hundred-and-eighty-eight centimetre frame, and even more attractive in the flesh than she looked on Skype. He also took note of her cute heart-shaped smile and big green eyes dominating her oval face, and how she sported a pair of sun glasses on top of her sandy blond hair, which was tied back in a short ponytail.\n\n\"Chuck ya stuff in the back. Uncle Pat's gonna drive us out to Cradle. It's still about two hours away.\"\n\nStowing his rucksack in the boot and closing the tailgate door, he couldn't miss noting the giant brown and yellow 'HAWKS' sticker across the top of the rear windscreen, and a smaller brown and yellow sticker at the bottom, proclaiming 'Hawthorn Football Club Three-Peat 2013-2014-2015 Premiers' reminding him he was deep in Australian Rules Football territory now. He climbed in the back seat behind Heather and introduced himself to Pat. \"How ya goin', I'm Tim.\"",
        "\"Good thanks, cobber. I'm Pat. Yer had a good flight?\"\n\n\"Yeah, was alright. Stopped over in Melbourne for a few hours, but it was all pretty cruisy.\"\n\n\"That's the way, cobber. Cruisy's the best way to be.\"\n\nTim noted Pat was maybe in his mid-to-late fifties and looked rough-as-guts, with perhaps three days' worth of reddish stubble, and the little hair left on his head was a reddish-brown tangle around a prominent bald spot. He wore an old blue singlet, colloquially known as a 'wife-beater' for its association with blue-collar types who were, in turn, associated with domestic violence. There were a number of tattoos on his arms, including a Hawthorn hawks-head tat, and another in cursive writing on his forearm simply reading 'Kelly Anne Bell 1987-1994'.\n\nDespite his rough looks, Pat was a talkative bloke, and once they were on the highway, he asked, \"So you're Ryan's house mate in Brisbane. What's he like to live with?\"\n\nTim thought for a moment, wondering how much detail he should tell Ryan's immediate family. \"He's alright. A bit messy. Sometimes I wonder how he's survived up till now to be honest.\"\n\n\"Yeah, I sometimes wonder that too,\" Pat said knowingly. \"Does he have a girlfriend up there yet?\"\n\nTim decided to have a bit of innocent fun at Ryan's expense, and despite Ryan's lust for Georgina, he said, \"Nah. I've never really seen him with a girl.\"\n\n\"And to think he used to think he was a bit of a ladies man,\" Pat said, slapping his leg. \"A hit with the older women, remember. Grab a granny night down the grope-and-spanker.\"\n\n\"I heard that was a one off,\" Heather said with a laugh. \"And you always look for an excuse to bring it up, like it's your proudest moment!\"\n\n\"Well he did hook up with Mandy Hayes. She looks like she's at least sixty!\"\n\n\"Mandy's only in her early fifties, Pat. She's younger than you!\" Heather looked over her shoulder and spoke to Tim. \"About four years ago Ryan ran into an old family friend at the Hope and Anchor pub, not long after it reopened, and they spent the evening catching up. It's such a small town that word gets around down here if things happen. But anyone would think Ryan and Mandy's fling was Uncle Pat's proudest moment the way he tells people about it!\"\n\nTim laughed. \"I'm surprised he hasn't bragged about it to me. Maybe it's why he escaped to Queensland. Couldn't handle the fame.\"\n\nPat chuckled. \"If you'd slept with Mandy Hayes you wouldn't be bragging and you'd definitely flee the state too! Anyway, what about you, cobber. Do you have a girlfriend?\" The way Pat asked his question it sounded to Tim like he might be about to ask if he'd be interested in meeting Mandy.\n\n\"Um, sorta. Not really. My girlfriend went back to New Zealand a year ago to see her Mum and Dad, then six months ago she decided she didn't want to come back here at all.\"\n\n\"A Kiwi bird, eh. Grew some wings and flown back home? Well, don't worry, cobber, if she's flown the nest for good there's plenty more fish in the...\" Pat's sentence trailed off, unfinished, before he spoke again. \"Do you mind if I turn the music up a little?\"\n\n\"Nah, go for it. It's your car.\"\n\nPat increased the volume of the car's stereo and a classic Angels' guitar riff began to blare from the speakers with Doc Neeson's distinctive voice singing, Without you near meee I got no place to go...wait at the barrr maybe you might show...Am I ever gonna see your face again, at which point Pat suddenly sang at the top of his voice, \"NO WAY, GET FUCKED, FUCK OFF!\" Am I ever gonna see your face again, \"NO WAY, GET FUCKED, FUCK OFF!\" When the song finished he turned the volume down slightly and simply proclaimed, \"I love that song. What music do you listen to, cobber?\"\n\n\"Um, mostly hip hop. Thundamentals, Drapht. Lately I've been listening to a bit of Kendrick Lamar.\n\n\"Kendrick la-who? Hip hop, eh,\" Pat said as if questioning the youth of today's poor musical tastes and probably wondering if it was a contributing factor to Tim's girl leaving him. \"Not even rock and roll?\"\n\n\"Nothing wrong with a bit of Hip Hop,\" Heather interjected. \"I don't mind Bliss n Eso. They came over to Afghanistan to play for us when I was there, which was great.\"\n\nDespite Heather's support, Tim felt defensive about his musical tastes. \"I don't mind rock. I saw Violent Soho recently. They were sick as. And Ryan and I went to a Dune Rats gig a couple of months back.\"\n\nPat grunted. \"Violent Soho? Dune Rats? Never heard of 'em. I only listen to the real stuff.\" The stereo broadcast a stream of songs from classic Australian rock bands such as Cold Chisel, The Screaming Jets, and Hunters and Collectors, mixed with international bands such as Iron Maiden, Guns N' Roses, and Metallica. Tim wasn't even familiar with some of the music Pat occasionally sang along to, sometimes at the top of his voice despite the presence of Heather and himself in the car.\n\nLooking over her shoulder again, Heather spoke up over Pat's exuberant rendition of AC/DC's TNT. \"So you've brought plenty of warm gear?\"\n\n\"Yeah, I packed a few layers like you advised. I've borrowed some of Ryan's stuff. He gave me his sleeping bag. He reckons it could snow?\"\n\n\"You're not in Queensland anymore, cobber,\" Pat said over his music. \"We get four seasons in one day here.\"\n\n\"Yeah, Ryan said those exact words.\"\n\nThey sped down the highway past fields full of green crops and pastures with sheep and cattle, all under the grey sky. Tim noted the imposing mountain ranges on the horizon to their left. For the first time he began to feel truly excited by the upcoming adventure.\n\nDespite growing up as a generally outdoorsy kid, Tim spent most of the time playing sport, mainly rugby league and cricket, rather than hiking. The closest thing to hiking he did as a kid was exploring the bush on Magnetic Island behind his parent's friend's holiday house with his brother and sister, plus other local kids. At university he'd been on the occasional camping trip with friends, but those expeditions were mostly about drinking around a fire at night, getting pissed.\n\nHe'd accompanied Ryan on his training walks up several of South-East Queensland's rugged peaks, but those were in the sub-tropics where his main worry was the heat, but now he was a long way from the warm latitudes he was used to. What he was about to undertake was a week of walking through rugged mountains where it could possibly snow. Even in summer, if Ryan's tales were to be believed! Four seasons in one day, as everyone who knew Tasmania kept telling him. He'd only seen snow a couple of times in his life, all on his trips to New Zealand with Abigail, and never up close.\n\n\"So what do ya do for a crust?\" Pat asked, snapping Tim's thoughts back to the present.\n\n\"Me? I'm a nurse.\"\n\n\"A nurse? I guess it's quite normal for blokes to be nurses these days. Equal opportunity and all that.\"\n\nHeather laughed, \"Uncle Pat, you're such a dinosaur! There are plenty of male nurses. Many of me old army mates have gone into nursing, so don't worry about him, Tim.\"\n\n\"I'm not worried. It's not the first time someone's pointed out I'm a bloke and a nurse.\"\n\nPat briefly looked in the rear-view mirror. \"I bet they like a strong bloke like you around the wards. In case of unruly patients. I've heard stories.\"\n\n\"I guess. In the ED we regularly have to deal with the drunks and druggos and bogans. Often they've caused their own problems, then come in to hospital making more. How about you, Heather? Ryan tells me you're a cop? You must see a lot of this kind of behaviour.\"\n\n\"Yeah. I joined the police when I moved back here and so far dealing with drunks and druggos is our main bread-and-butter. Seems like most violent crime is alcohol or drug related, so it goes with the territory.\"\n\n\"What about you, Pat? What do you do?\" Tim asked, more out of politeness than anything else.\n\n\"Nothing as exciting as dealing with drunks and druggos. Sometimes I'm a truck driver. Other times I'm a concreter. I used to be a fisherman in a past life...\" Pat's voice trailed off with a hint of melancholy. There was no more talking in the car and Tim stared out the window, noting fields of a dark green crop with light pink flowers on tall stalks. At regular intervals there were signs on the fences, proclaiming 'DANGER. KEEP OUT. Illegal Use of Crop May Cause DEATH.'\n\n\"Poppy fields,\" Pat said, as if reading Tim's mind. \"It's funny, I used to know a girl named Poppy Fields. Never ploughed her but she sure had an intoxicating effect on me.\"\n\n\"Uncle Pat, stop it,\" Heather said with tone of amusement. \"He's right though. They're opium poppies. We grow about half the world's opium here. The legal stuff anyhow. Still, every now and then someone breaks in and steals the poppy heads to brew up some nasty concoction, sometimes resulting in their deaths.\"\n\nThe sight of poppies jogged Tim's memory of a recent article he'd read about poppy crops in Afghanistan, reminding him Heather previously mentioned she'd served there in an earlier conversation. \"So, Heather, you were in Afghanistan?\"\n\n\"Yeah, I deployed there twice. It was pretty brutal.\" She didn't elaborate further.\n\nThey left the highway and drove south through rolling hills covered in pastures towards an impressive mountain, its summit a broad craggy escarpment. Past the great mountain the road wound through open forest and Pat drove with a heavy foot, taking the corners much too fast for Tim's liking. And then suddenly there was a huge parking lot on the left and Pat slowed, pulling up in front of the visitors centre. He hopped out and helped Heather and Tim retrieve their rucksacks from the boot.\n\nPat held out his hand to Tim, squeezing it in a tenacious grip. \"Good luck, cobber. You look after yerself up there.\"\n\n\"Thanks, Pat. And thanks for the lift.\"\n\n\"No worries.\" Pat then turned his attention to Heather. \"And you look after yourself, young lady. I know yer tougher than most men I've met, but don't go busting yer guts or breaking yer leg like that silly brother of yours.\"\n\n\"Don't worry about me, Uncle Pat,\" Heather replied, wrapping her arms around her uncle. \"I can look after myself.\"\n\n\"I know ya can, love. I just don't want ya causin' yer mother any grief.\" His last words were spoken with genuine affection.\n\nPat smoked a quick cigarette by his car before climbing in and driving off. Heather looked at Tim. \"Let's go set up camp for the night. We're at the caravan park across the road.\"\n\nThey checked into the park and found their tent site. Tim's green tent was a two person shelter he'd bought for university camping trips years before, then never used again. It weighed about three kilograms, which was twice as heavy as Heather's grey tent of approximately the same size.\n\n\"I try to keep me gear as light as possible,\" she told him. \"Hey, I hear there's a bar up the road at the lodge. Fancy a drink?\"\n\n\"Sounds amazing,\" Tim said, feeling like it had been a very long day. Walking along the road they came across several grazing wombats at the road's edge. \"Holy shit, how cool is this?\"\n\nThey spent some time watching the wombats, with Tim taking several photos on his phone and Ryan's camera.\n\n\"Did you know,\" Heather asked, \"wombat poo is square?\"\n\n\"Fair dinkum?\"\n\n\"It's true.\"\n\nTim thought for a moment. \"Do they have square bums or something?\"\n\n\"Maybe.\"\n\n\"That's fucken crazy,\" Tim said, half in amazement and half in disbelief. When they reached the lodge they found the bar and Tim ordered two schooners of Boags Ale, but was told they only came in pints or half-pints. \"That'll do us,\" he told the woman behind the bar. Because the temperature was dropping they sat with their drinks by the fire.\n\n\"You'll find in the more classy joints down here the beer glasses are mostly pints,\" Heather stated. And then added with a smile, \"The way it should be.\"\n\nTim laughed. \"Well, at least beer glasses are standardised then. We have schooners and pots in Queensland. Apparently a pot is called a middy in New South Wales, but unless you're sharing a jug who orders a pot glass anyway? But then again I went to Adelaide once and asked for a schooner and they gave me a beer in a pot glass. Then they called their schooner a pint! The variety of beer glass sizes and names in this country do my head in.\"\n\nHeather chuckled. \"Well, this'll blow your mind, but a pot glass is called a ten ounce here in Tas.\"\n\n\"Fuck! Why can't they simply make one standard beer glass size and name it the same thing in pubs all across the nation?\"\n\n\"What, the pint glass?\"\n\n\"Sure, sounds awesome. Just standardise the effen things.\" He smiled at Heather, raising his glass to her.\n\n\"You'd never get the states to agree cos each one'd want the glasses their way, or demand additional funding to transition over to the pint,\" she laughed, clinking their glasses together. \"It'd be like getting them to agree on a standard national railway gauge! Wars have started for less!\"\n\n\"Yeah, I dunno much about railway gauges, but for a start we'd have to get those South Australians to agree a pint is not a schooey, and a schooey's not a pot. Even I'm confused!\" After a chuckle and taking a long pull of his beer, Tim looked at the amber fluid in his five-hundred-and-seventy mil pint glass and said, \"This is really good beer, ay.\"\n\n\"Sure is,\" Heather said with a hint of pride in her voice, as if she'd brewed it herself. \"But Cascade's way better. Hey, do you fancy a meal here? From now on in it will be dehydrated stuff so this might be our last chance for some decent grub.\"\n\nThey ordered dinner and sat back down, while the bar began to fill up with other travellers. Tim enjoyed watching people and had a knack of listening to several conversations at once, gathering there was a small group of older walkers from a local bushwalking club chatting with a young Japanese couple. There was a bloke, maybe Italian, with thick curly black hair, who was big-noting himself to two young women who Tim suspected were Irish and Danish respectively by their conversation. Alone in one corner was a tanned young man, sipping on his beer and like Tim, watching the room.\n\n\"I think we need to save those poor girls from that man,\" Heather said, pointing in the direction of the two women. \"He reckons he's the shit and they're not falling for it.\"\n\n\"Yeah, I think he's Italian. He's telling them about his worldly adventures, but he's not letting them have a word edgewise. He has no chance with them.\"\n\n\"Yeah, but see how he leans forward into them and touches the blond girl's arm all the time. She looks uncomfortable and moves back from him, but he keeps moving in. She's being polite. Let's invite the girls over if we get a chance, to give them a break.\"\n\nThe man left for the bar and Heather walked over to the young women, inviting them to join her and Tim by the fire. \"I'm Heather and this is my friend, Tim.\"\n\nThe girl with the Irish accent was Kathy, from Cork, and the Dane was Anita from Roskilde. They'd spent the day exploring around Dove Lake and climbing Cradle Mountain, and were beginning the Overland Track the following day, as was the Italian man, Antonio. He returned with a drink and joined them, taking a new interest in Heather.\n\n\"You are Australian?\"\n\n\"Yep, born and bred,\" Heather said. \"Where are you from, Antonio?\"\n\nAntonio came from Verona in northern Italy, where Shakespeare's Romeo and Juliet was set, as he told them enthusiastically. But he'd travelled the world too and loved to tell anyone who'd listen to his adventures. If he was trying to impress Heather she wasn't buying it. And oddly enough, Tim found himself relieved. Realistically, he'd known Heather in person for all of a few hours, and previously spoken to her via Skype two times only, and yet he was glad Heather thought this Italian bloke was a bit of a tool.\n\nTheir meals came, and so they shared their chips with their new companions, while Tim and Heather ate juicy Scotch fillet steaks and salad. Heather made sure she addressed Kathy and Anita, giving them a chance to speak where Antonio previously dominated. Kathy was a nurse, so she and Tim chatted, while Anita was a graphic design student.\n\n\"I'm an engineer,\" Antonio spoke up, then fixed Heather with a look. \"Though I prefer to be outdoors in the wilderness, surrounded by natural beauty.\"\n\nHeather gave Tim an exasperated eye roll and Tim replied with a little smirk. For the first time since meeting her Tim felt there was something between them. And why not? Heather was gorgeous. There was, however, an undeniable hardness about her, no doubt about it. In fact, except for her sweet voice and cute heart-shaped smile, plus her floral sounding name, everything else about Heather was hard. She'd taken off her warm polar fleece jacket by the fire, revealing a tight fitting long-sleeved polyester shirt stretched tight over her muscular torso and arms. She gave off a hard vibe, where despite her calm appearance, Heather looked as if she could fight the room at any moment if any shit were to break out.\n\nEvery now and then a muscle in her jaw flexed, and though he was usually attracted to girls with softer attributes, Tim found Heather's toughness alluring, and he felt somewhat chuffed he was developing a rapport with her. Even if she was Ryan's sister.\n\n\"Hey, Antonio,\" he said to distract the Italian, \"how long are you in Australia for?\"\n\n\"Oh, perhaps a couple more months. I'll see how it goes. You never know, if I find a reason to stay I might do so.\" He turned to Heather. \"Are you and your boyfriend Tasmanian?\"\n\nHeather hardly hesitated when Antonio described Tim as her boyfriend. \"I'm from Tassie and my friend's from Queensland.\"\n\nTim noted Heather was capable of looking after herself and he found it rather curious she'd neither denied nor confirmed he was her boyfriend, simply referring to him as her friend.\n\n\"Your state is very beautiful.\" Antonio completely ignored Tim, despite the remote possibility of him being Heather's partner.\n\nHeather gave Tim another look of semi-exasperation and Tim gave her another smirk and thumbs up. She was doing a great job at diverting Antonio's attention from Kathy and Anita, giving Tim the opportunity to chat with them. The girls were easy to talk to and it wasn't long until Tim had them feeling at ease and laughing, discovering they'd met in Melbourne three weeks previously and begun travelling together.\n\n\"I think your friend is flirting with his new friends,\" Antonio said with a bemused look on his face, emphasising the word 'friend'.\n\n\"Why wouldn't he?\" Heather replied, then leaning in towards Antonio and speaking in a quieter tone, only just loud enough for Tim to hear. \"They're very pretty. I like the contrast of the Irish girl's black hair and blue eyes. But I reckon my friend will go for the Dane because she's blond. He likes blonds and they're all he ever dates. He used to have a crack at me back in the day, but sadly for him I bat for the other team, if you know what I mean, and have no interest whatsoever in changing sides.\"\n\nListening to the exchange, Tim almost burst out laughing, but kept under control as Heather made Antonio know he was wasting his time with her. It was a mere setback to Antonio, but he no longer persisted so hard and once he wasn't trying to big note himself he wasn't half bad to talk to. Even if he had no perception of personal space, especially when talking to the women.\n\n\"Well, we all have a big walk tomorrow, so I think it's time to catch some sleep,\" Heather declared once she and Tim finished their meals.\n\n\"Yep, anyone want to walk back to camp with us?\" Tim offered. Of course Antonio and the two girls were all camping at the same caravan park, so they all walked back together. The night air was chillier than Tim anticipated and he couldn't help but shiver, wishing he'd worn an extra long-sleeved layer under his polar fleece jacket.",
        "Before they climbed into their respective tents, Heather whispered to Tim, \"That Antonio bloke has tickets on himself, but I think we gave those poor girls some relief for a little while. Anyway, good night, Tim.\"\n\n\"Yeah,\" Tim whispered with a chuckle, \"I was a bit jealous he didn't give me any attention. But I'll have you know I actually prefer Kathy. I didn't think I had a type, but she looks a lot like my ex, Abi, but with a cuter accent. You can have a shot at Anita if you get a chance. Who knows, perhaps she bats for your team. Anyway, catch ya in the morning. G'night.\"\n\nHeather gave a little giggle. \"I'm not gay, if that's what you think. I told Antonio to throw him off.\"\n\n\"But Ryan told me...\"\n\n\"Ha! Of course he did, the little shit!\" She laughed. \"Well, have a good sleep. I'll wake you at sunrise if you're not already up.\"\n\nTHURSDAY\n\nThe following morning was cool as they packed their sleeping kit and tents, then dropped into the communal kitchen hut for breakfast. There were several familiar faces there; Antonio, who greeted Heather and Tim with a big \"Ciao\" and smile. The members of the local bushwalking club were all there, chatting noisily among one another while cooking breakfast on various lightweight gas, shellite and methylated spirit stoves. There was an English couple and two German men they hadn't yet met the previous night, plus the unknown man from the bar the night before. Tim briefly spoke to him, learning he was Chilean from Santiago named Javier.\n\n\"It's like the bloody United Nations in here,\" he said to Heather as they made their own breakfast; Tim cooking oats on his spirit-burning Trangia and Heather chewing on a muesli bar while boiling water for tea on her tiny lightweight Pocket Rocket gas stove.\n\nAntonio approached Heather as they ate breakfast and Tim flashed her a grin, realising she wasn't interested in Antonio in the slightest, but attracted him like a moth to a flame. She raised her eyebrows to Tim in response, a slight grimace on her face, suggesting exasperation. He'd known Heather for less than twenty-four hours and yet he was sure they'd be mates. Like he was with her brother Ryan, whom he gave and took shit with, bantering back and forth as natural as breathing every day back home.\n\nThey caught the first shuttle bus of the day from the visitors centre to the track-head a kilometre or two down the road. Most people from the camp kitchen were there with them, including Antonio who sat opposite, engaging Heather in more conversation, while the older crowd from the bushwalking club chatted gregariously at the front of the bus. Javier, the Chilean fellow, sat in front of Tim, looking over his shoulder and chatting easily with him.\n\nThe day looked glorious with a cloudless blue sky and they applied sunscreen. Heather put on a pink cap and her dark sunglasses, while Tim sported his broad rimmed cotton-canvas hat he usually wore when playing cricket. He fetched Ryan's small Sony camera from the top of his rucksack. \"Hey, Antonio, mate. Would you mind taking our photo?\"\n\n\"Sure, I can do that.\"\n\n\"Ta, mate.\" Tim and Heather put their arms around each other's shoulders, as if they'd known one another for years, and gave big smiles.\n\n\"There you go.\" He handed the camera back to Tim, then spoke to Heather, \"Will I see you on the mountain?\"\n\n\"Yeah, we're heading up Cradle. Bloody fantastic day for it too. You go ahead, we'll see you up there.\"\n\nAntonio walked off along the raised timber boardwalk across the grassy plain at track's beginning, while Tim spotted some dung on the ground. \"Hey look, I bet these are wombat poos. They're square, exactly like you said! I'll get a photo for Ryan.\" He crouched down and took a photo while Heather laughed. However, when Tim stood up again he struggled under the weight of his rucksack.\n\n\"Do you know how much your pack weighs?\" Heather asked.\n\n\"It was slightly under twenty-five kilos at the airport and that was without water in my bottles. I had to pay extra cos the baggage limit was twenty-three kay-gees.\"\n\n\"Wow, I hope you're okay with such weight. You need some lighter equipment. I guess it's too late now. But don't worry, we can take it easy if the going gets tough.\"\n\n\"I borrowed a fair amount from Ryan. This is basically what he was training with. How much does yours weigh?\"\n\n\"About fifteen.\"\n\n\"Oh, you must have some pretty specky stuff in there,\" Tim said, wondering how Heather's rucksack was a full ten kilograms lighter than his own. They began to walk, noting Antonio heading off towards the forested hills in the distance, while Javier and the bushwalking group were already out of sight.\n\nWildflowers decorated bushes and grasses either side of the track, enticing honey bees and the fat bumble bees who occasionally bumbled past the hiker's faces. Tim was happy he could keep up with Heather, despite the weight on his back. Now Antonio was out of sight, somewhere in the forest up ahead. \"Antonio's not so bad, Heather. He was a bit full of himself, but I thought he'd be your type.\"\n\n\"What gives you the impression he's my type? Yesterday you thought I was gay!\"\n\nTim laughed. \"He's tall, dark and handsome. Isn't that every girl's type? Anyway, it was Ryan who said you preferred girls and then you confirmed it yesterday at the bar. You can have a crack at the Danish girl if you like. I suppose we'll see her later.\"\n\nShe turned and gave Tim a cheeky little smile. \"Ha! Maybe I really do prefer the Irish girl and will give you a run for your money. But don't worry, I haven't been with a woman since I was twenty and realised I still preferred blokes. Anyhow, you seem to think Antonio's handsome, so you can have him cos Antonio isn't my kinda bloke.\"\n\n\"What is your type then?\" Tim asked, genuinely curious.\n\n\"Well, my type used to be A-Jays, back in the day, but I don't even know if I have a type anymore.\"\n\n\"A-Jays? As in army-jerks?\"\n\nHeather chuckled. \"Yeah, sadly. But I don't go for blokes like that now. Too cocky and unreliable. Anyway, what about you? You said your girlfriend went home to New Zealand?\"\n\n\"Yeah, she was from Christchurch. We were together for three years, then she moved back for family reasons. We'd even talked about marriage before she left, and decided we'd try long distance, so I went over there several times over a period of six months. But then she said she couldn't do it anymore.\"\n\n\"I'm sorry to hear.\"\n\n\"Nah, it's all good now. I was pretty cut up about it for a while but I'm learning to let her go. Abi was special. You know, I thought she was the one.\"\n\n\"Is there even such a thing as the one?\" Heather said. \"Anyway, there's our new Irish friend, Kathy, who you like so much. Some, ah, rebound sex might do you good. After all, I hear sex while camping is fucking in tents.\" Her delivery was completely deadpan.\n\nTim couldn't help but laugh. \"Your joke was pretty intense. Not to mention lame.\" Still, she'd mentioned sex, which suddenly caused him to think about her in a new light.\n\n\"It's an oldie but a goldie I reckon,\" she said, looking back with a grin.\n\nThey were now walking up through the forest, surrounded by the slight scent of decaying vegetation, and Tim began to feel the burn in both legs and lungs from the increasingly steep incline. For the first time he noticed the rucksack straps digging into his shoulders, and despite his reasonable fitness, muscles unused to carrying such a load began to scream for more oxygen. A pretty creek ran beside the track, and Tim stopped to rest, taking the opportunity to photograph a small waterfall, while Heather used an Olympus to take the occasional photograph too.\n\nWhile they rested, Heather chatted. \"So tell me, what's Ryan like these days? When he's not breaking his leg.\"\n\n\"He's a good bloke. He's been living with me for over eighteen months now and we get on pretty well. He's a funny bloke though, cos he's got a major crush on our housemate, Georgina, who doesn't feel the same way. Georgie doesn't appreciate his sense of humour but Ryan likes to think he's in with a chance. Though I don't think he's game enough to ask her out. I hate to think how he's annoying her while I'm away.\"\n\n\"Poor Ry, he does have a special brand of humour which isn't for everyone. He's mentioned Georgina a couple of times. But that's my little brother, always falling for girls who aren't interested.\" They began walking up the hill again, Tim adjusting his hip-straps to shift the weight distribution of his rucksack, while Heather managed to chat without even puffing. \"He's told me quite a bit about you too.\"\n\n\"All good things I hope.\"\n\nQuick as a flash, Heather turned and replied with a grin, \"Nah, he says you're a flog.\"\n\nTim snorted a laugh. \"Yeah, like I said, he's a funny bloke. I think I'll probably have to kick him out.\"\n\n\"I was just kiddin' ya. Ryan reckons you're a top bloke. He wouldn't have given you his tickets if he didn't think otherwise.\"\n\n\"Yeah, I know. Giving each other shit's one of our hobbies.\"\n\n\"I guess you two have become quite good mates then?\"\n\n\"You could say so. Georgie reckons he and I carry on like a married couple at times.\"\n\nHeather chuckled, then more seriously asked, \"So you grew up in Brisbane?\"\n\n\"Not originally. I was born in Cairns, where Dad's from. Though me Mum's originally from near Grafton in New South Wales. Um, but we moved to Townsville when I was about three, then Brisvagas when I was thirteen. That's about it.\"\n\n\"Any brothers or sisters?\"\n\n\"I have a sister and brother. Both older. \"\n\n\"Ah, the baby of the family, like Ryan. Do you see them much?\"\n\n\"Probably don't see each other as much as we should, but I guess we're close. My sister's a doctor and so we spend a bit of time debriefing, or venting about the health system I suppose. Every time we're together, actually.\"\n\n\"That's what family's for isn't it? A shoulder to lean on. Someone to vent to.\"\n\n\"Yeah, pretty much. I guess we're lucky. I know you and Ryan are fairly close but live so far apart.\"\n\n\"Yeah,\" she sighed. \"It's a shame he was offered the Brisbane job literally a few weeks after I moved back down here. Murphy's law I guess.\"\n\n\"Yeah, Murphy's a cunt.\"\n\n\"Yes he is. So how'd you end up in nursing?\"\n\nTim chuckled. \"Mum's a nurse so I guess it runs in the blood. Like I said, my sister Jo's a doc and I tried for medical school too, but didn't do well enough on my UMAT test to get into undergrad medicine. My mark had to be in the top fifteen percent of candidates just to get an interview, and I think I was something like in the top twenty percent. But I always found medicine fascinating and used to go through medical texts back in high school, so thought nursing would be the next best thing. Though, every now and then I think about sitting the GAMSAT and having another crack at getting into medicine.\"\n\n\"If you really love it you should totally chase that dream. I actually considered medicine or nursing once, but then bailed on applying for uni and joined the army instead. I chose to be a medic, which was in the same line I guess, and I learnt heaps of stuff doctors and nurses do. I love helping people so it was a great gig most of the time.\"\n\n\"Ryan told me you were in for nine years?\"\n\n\"Yep, nine long years. I was thinking how you said you lived in Townsville as a kid. Well, I was based there for three years out at Lavarack Barracks. Townsville's such a great little city, except it's so fucking hot in summer.\"\n\n\"Yeah, you've got that right. We all still go back up to Cairns some Christmases to visit me Nan and we sweat buckets. Still, she cooks a roast!\"\n\n\"Of course ya Nan cooks a roast.\" Heather said with a laugh. \"Can't give up those Christmas traditions, even if the mercury's approaching forty degrees! Though I think everywhere's hot compared to Hobart. But I reckon all my postings in Australia were somewhere extra hot and humid! Townsville was still one of my favourite places though. My mates and me would regularly run up and down Mount Stuart out back of the barracks, and sometimes Castle Hill in town. You know, the Goat Track. What a killer. Sweating buckets isn't sufficient to describe how drenched we'd get, but I loved it. A great place for training.\"\n\n\"True. Fucken crazy,\" Tim puffed, hardly wishing to think about running up and down hills when he currently had his own hill to climb. With twenty-five plus kilos on his back.\n\n\"So let me guess, you're a Cowboys fan then? I bet Johnathan Thurston's your favourite player.\"\n\nDespite his puffing, Tim couldn't help but laugh. \"Good guess. JTs a fucken legend! I love him.\"\n\n\"You love him, do ya?\" Heather said with a laugh. \"It's funny, down here hardly anyone knows anything about rugby league. But when I lived in Townsville many of me mates were into it and I enjoyed going to games with them. It's a brutal sport. But I always missed real footy. AFL of course.\"\n\n\"Yeah, I saw your Uncle Pat's stickers on his rear windscreen. Quite subtle.\"\n\nHeather chuckled. \"Yep, go the Hawks! Though, if we had our own AFL team here in Tasmania I'd support them too. I don't think Uncle Pat would cos he's such a rusted on one-eyed Hawks fan.\"\n\n\"Yeah, I saw the Hawks tattoo on his arm too.\"\n\n\"Yeah, he also has one over his heart.\"\n\n\"Um, do you mind me asking about the girl's name tattooed on his arm?\"\n\nThey exited the forest at a large crater-like lake, aptly named 'Crater Lake' in the typically Australian fashion of naming the obvious. The topography surrounding the lake was like a bowl, with tall grey cliffs interspersed with alpine trees and shrubs anywhere there was enough soil to get their roots down. Heather stopped and whispered, \"Wow! So amazing.\" She took a photo and then turned to Tim. \"Kelly was my cousin. She was Pat's pride and joy, and Mum says they were inseparable, just like me and my Dad. Uncle Pat was a fisherman back then. He'd grown up with it, working on Grandpa's boat along the east coast. Kelly used to wait at the jetty for his boat to return, and as she got older she'd row a dory Pat had given her a little way into the bay, to get a better glimpse of the returning fishing boats. One morning there was a freak storm and the when the fishing fleets returned they found the dory drifting upside down in the bay. Kelly was found washed up on shore a day later. She was seven. Uncle Pat was heartbroken and never went back to sea again. He hates the ocean, and won't even touch seafood anymore. But he's blamed himself ever since. I was five at the time and still remember.\"\n\nTim felt bad for asking and for judging Pat as a rough character. \"Sorry, I shouldn't have asked. I'm really sorry if I brought up sad memories.\"\n\n\"No, no, it's okay. I know Pat appears rough but he has a heart of gold. He's always doted over me, treating me like a daughter. You see, me Mum's his sister and they've always been close. Uncle Pat helped us out a lot, especially after Dad was injured.\"\n\nTim decided not to ask too many personal questions, and so didn't ask for Heather to elaborate. However, she went on. \"Dad lost his leg in an accident at work. Mum couldn't support us on her wage working admin at the zinc-works, so Uncle Pat and Aunty Joan lived with us for a time to help out.\"\n\nTim felt bad for dragging up old feelings. \"I'm real sorry, Heather. I didn't mean to upset you.\"\n\n\"No, like I said, it's okay. I'm not sure why I told you all that, but it's how it is down here. Lots of hardship and tragedy. It breeds us tough.\"\n\nAnd Heather was tough, exuding an unmistakable hardness, like an aura of steel. As they climbed the steep track to the top of the bluff, Heather pushed on, hardly breaking a sweat, and Tim puffed behind, carefully watching where he placed his feet on the rocky slope, and rarely watching Heather's toned arse uphill from him. He wondered what she was like in her job as a police officer. Probably a real hard arse.\n\nThey reached the top of the bluff and Cradle Mountain dominated the skyline like an enormous craggy rock wall on which a colossal giant once sat, leaving an imprint in the wall where its bum had been, like a gigantic saddle, forming the 'cradle' part of the mountain. Below the saddle was Dove Lake, with its black tannin stained waters stretching away to the north. The region was a light grey quartzite and schist plateau capped by rugged grey-brown intrusive dolerite mountain peaks, all eroded by massive glacial forces over millions of years, but at least as recently as the Pleistocene 'Ice Age' era, over twelve-thousand years previously.\n\n\"Jesus, it's stunning,\" Heather said, taking in the view.\n\nTim, still puffing from the hard slog up to the bluff, huffed, \"Its breath taking.\" Sucking down the delicious cool mountain air, he looked around with the feeling he was in a foreign landscape. \"This reminds me more of New Zealand than Australia.\"\n\n\"It's pretty unique, don't ya think?\"\n\n\"It's beautiful.\"\n\nThey moved on towards the mountain, reaching a double storey hut with stone around the ground floor and slabs of timber shingle cladding the top floor. There was a door on each level, with the top door opening out to thin air, and a broad headed shovel hanging off the slab walls beside it. \"See the top door,\" Heather said, pointing to the top floor. \"The snow can get real deep here and the door up there's the only way out. The shovel's in case you have to dig.\"\n\n\"That's crazy,\" Tim breathed, realising the snow could get several metres deep. There were several rucksacks inside the hut, left by people making the side trip up to Cradle's summit. Tim recognised several belonging to the local bushwalking club members who'd shared their bus on the way to the track-head. He also recognised Antonio's rucksack in one corner. With a little grin he said, \"You'll get to see ya mate up there.\"\n\n\"Oh, I can't wait. I love guys who can't keep their hands to themselves. Normally I prefer to arrest them though.\"\n\n\"I'm sure you'd love to throw a pair of cuffs on old mate.\"\n\nHeather laughed. \"Damn it, I knew I forgot something!\"\n\nThe climb to the summit was steep up an increasingly rocky boulder scree. Tim felt light as a feather now he was unencumbered by the heavy rucksack, and they were practically bounding up the brown rocks, encrusted with orange and green lichens. Heather appeared to have a competitive streak, because every time Tim strode ahead she'd be up beside him and pushing past. However, she was never dangerous on the slope, taking a careful line, but an unspoken competition set in between them, climbing ever upwards.\n\nThe local bushwalking club members were on their way down, and they passed with cheery greetings, stating, \"Not far to go now.\"\n\nHeather watched them disappearing down the track. \"What do you reckon the average age of their group is? I'd say maybe early-to-mid sixties.\"\n\n\"Yeah, probably. I guess.\" Tim hadn't thought too much about them.\n\n\"I hope when I'm their age I'll be as active as they are. It's great.\"\n\n\"If you don't mind me asking, how old are you, Heather?\"\n\n\"That's okay. I'm twenty-nine. Two years older than Ryan.\" She took in a deep breath. \"I don't normally advertise this but I'll be thirty next month. How about you?\"\n\n\"Twenty-six.\"\n\n\"Ah, a little beyond the dark-side of twenty-five.\"\n\n\"Well you don't look almost thirty. I'd have guessed perhaps forty, maybe forty-five.\" He gave her a grin.\n\n\"Watch out, cobber. Otherwise I'll find you a much quicker way off this mountain than you bargained for!\"\n\nThey reached the summit, encountering Antonio chewing an apple, preparing to head back down. \"Buongiorno,\" he greeted them enthusiastically, \"The views are spettacolare!\"\n\nWell, Tim thought, at least he's acknowledging me too now. \"Hey, Antonio, would you mind taking another pic of us?\"\n\n\"I can do that, no troubles.\"\n\nHeather and Tim posed for another photograph and then looked around. Describing the view as spectacular was an understatement. Rugged mountain peaks stuck out of the heathy plateau, intersected by a maze of deep valleys. There were lakes dotting the landscape here and there, with patches of forest and grassy moors. The sky was brilliant blue, but far off to the south-west, hovering over distant mountain peaks, was a line of dark-grey clouds. Once again Tim couldn't believe how different it all looked to his state of Queensland.",
        "Antonio hung about, waiting to leave with them, and they were in such good spirits it didn't bother either Heather or Tim. Of course Antonio focused on chatting with Heather, and to give her a break Tim occasionally asked him a question here and there.\n\n\"Are you going up Barn Bluff?\" Tim asked, pointing to the great solitary knob of brown rock jutting high out of the plateau to the south-west.\n\n\"I was planning to attempt it today, yes. How about you?\"\n\n\"Um, not today. Maybe tomorrow morning. We'll see.\"\n\n\"We Italians love mountains so I couldn't wait until then,\" Antonio stated, as if it were a matter of fact for all his fellow countrymen.\n\nAfter gathering their rucksacks from the hut below the trio walked onwards, past the great rocky buttresses of Cradle Mountain towering above them. Before long they noted another emergency shelter, reminding them they were traversing unforgiving country in which the weather could change to deadly cold with little notice. Antonio departed for his side trip up Barn Bluff, leaving Heather and Tim alone again.\n\n\"Ah, the serenity,\" Heather said as they walked along the cirque above the valley below where their first night's camp would be.\n\nTim smirked. \"Don't you miss him though? He grows on you after a while.\"\n\n\"You're not the one who has to fend him off all the time. He's a persistent bugger, I'll give him that.\"\n\n\"He likes you!\" Tim said with a laugh. \"He's a big strapping lad and he's keen.\"\n\n\"Sounds like you have something for him, Tim. But he better push hard if he's gonna make it to camp before dark.\"\n\n\"I'm sure Antonio likes to push hard.\"\n\n\"Jesus, you sound like Ryan!\" She gave a chuckle. \"Actually, you sound like most blokes I know. You boys never grow out of it do ya?\" Despite her chastisement she'd laughed at Tim's innuendo.\n\nThe track descended through forest and by mid-afternoon they arrived in the grassy valley below the cirque and Barn Bluff, walking past a hut and into camp. While they were setting up their tents a man in a National Parks ranger's uniform approached them, calling out, \"Heather Coughlan?\" and Heather looked up, surprise and recognition written across her face.\n\n\"G'day, Angle-arse! What are you doin here in a ranger's outfit?\"\n\n\"I thought it was you, Cogsy, when I saw you and your friend walk by the hut! I volunteer as a hut warden here sometimes when I'm not working.\"\n\n\"This is Tim. He's a friend of my brother's, down here from Queensland.\" And then to Tim she introduced the ranger. \"This here is Chris. Or Senior Constable Chris Sidebottom. Known to most as Angle-arse. I had no idea he played ranger in his spare time. Unfortunately I sometimes have to work with him.\"\n\nChris gave Tim a cheeky grin. \"Only when she's lucky. Anyway, pleasure to meet you, cobber.\" Chris shook Tim's hand with an iron grip.\n\nHeather and Chris caught up while Tim finished erecting his tent. He'd wondered if Chris and Heather's relationship went beyond professional, especially after his comment, only when she's lucky. Occasionally he glanced in their direction and was sure Chris was flirting with Heather, and unexpectedly Tim felt a slight pang of jealousy. The man looked confident and tough, like he was born in this rugged landscape, and perhaps the type of man a tough woman like Heather would go for. Why am I jealous though, he wondered, I've only known Heather for twenty-four hours, and besides, she's way out of my league.\n\n\"Well,\" Chris was saying, \"I suggest if you're going up Barn Bluff tomorrow, leave as early as possible. The forecast says temps might get to the mid-thirties, believe it or not, so you'll want to get onto the next hut reasonably quick. There's swimming in the lake a little way before the hut, which will probably be a welcome relief if it gets super hot.\"\n\n\"Yeah, thanks for your advice,\" Heather replied. \"We'll probably leave our stuff here and only take water and a few muesli bars. Race up and back. Tim's pretty fit.\"\n\nChris looked Tim over, as if trying to assess the truth of Heather's appraisal. \"You'll do it in no time then,\" he finally said. \"Well, I'll leave you to it. If you need anything drop into the hut. I can offer hot tea or coffee. Oh, and a quick word of advice. Always make sure your food's secure in your pack. There's animals about who'll happily lighten your load for ya. The currawongs know how to open zippers and the possums are so bold they'll almost mug ya. Oh, and there's a quoll about who'll break into your tent to get at any goodies you've left about.\"\n\n\"Quoll?\" Tim said, joining them.\n\n\"Yeah. Little fella about the size of a cat, with red-brown fur and white spots. Cute little buggers, but they have no fear around here and are always looking to scab off bushwalkers for a feed.\"\n\n\"Good to know,\" Heather said. \"What about devils?\"\n\n\"They might be about, but unfortunately the facial tumour disease has decimated them.\" Then with a wink at Tim, he said, \"Anyway, count yerself lucky their numbers are down because devils prefer the flesh of dead or dying animals. To them a human lying in their tent is as good as any easy meat.\"\n\nAfter Chris left, Tim said, \"Funny bloke.\"\n\nHeather chuckled. \"He's good value. I didn't know he volunteered up here. Anyway, how's your tent? You worked it out yet?\"\n\n\"Yeah, gettin' the hang of it. I've only used it a few times before, when at uni. The closest thing to camping when I was growing up were trips to our friend's place on Magnetic Island. We'd sometimes sleep under mozzie nets on the balcony.\"\n\n\"Sounds nice. But some of your equipment is definitely a bit on the heavy side. Nothing wrong if you're able to carry it, and you seem capable.\"\n\nTim chuckled. \"I borrowed some of this from Ryan. But it's funny, he gave me a list of stuff I'd need and when I saw I needed a torch I was going to bring me old Dolphin torch Dad gave me when I moved out of home. You know, the ones the size of a brick! Anyway, Ryan laughed when I went to pack it and gave me his head lamp instead.\"\n\nHeather laughed too. \"Well, I think you're doing fine considering you haven't done much pack work.\"\n\nLater, clouds flew over, releasing some drizzle accompanied by a rainbow in the late afternoon sun, before scudding off again. Heather pulled a pair of tan sheep-skin ugg boots out of her rucksack for walking around camp in, while Tim wore a pair of thongs for camp footwear, which felt amazing compared to his hiking boots, airing his feet out.\n\nTogether they cooked their dehydrated meals in front of their respective tents. Wallabies and their smaller marsupial cousins known as pademelons grazed nearby, cropping the grass like a perfectly mown lawn, and a native hen honked somewhere across the valley in the distance. Heather and Tim ate their dinner in silence, admiring the beauty of their early evening valley surroundings.\n\nAfter dinner Tim took out a pewter flask and offered it to Heather. \"Would you like some Scotch?\"\n\n\"Sure. Don't mind if I do. Thanks.\" Heather took a nip, handing the flask back to Tim with a beaming smile. \"That hit the spot. All I have to offer is some chocolate.\"\n\n\"Ta. This is all very civilised isn't it?\"\n\n\"Can't skimp on life's little luxuries, especially out here in the bush,\" she said, handing him the block of dark chocolate from which he took a couple of squares.\n\nThe campsite filled up like a tent village and the local quoll dropped by, darting enchantingly from tent-to-tent, its pink nose twitching at the end of its long snout and dark eyes staring hopefully at the hikers. Tim smiled at the marsupial, and said, \"Hello little friend! No food from us, sorry.\"\n\n\"What an adorable cutie,\" Heather said with a smile in her voice.\n\n\"Who, me or the quoll?\"\n\nHeather chuckled. \"The quoll, obviously.\"\n\nEventually Antonio, Kathy and Anita walked by, looking for a spot to put their tents in the growing twilight. Antonio waved, despite appearing to be deep in conversation with Kathy, gesticulating wildly with is hands. Heather whispered, \"Looks like you have competition for your Irish friend.\"\n\n\"Nah, tell him he's dreamin'. She won't go for him. Like you say, too handsy and in ya face. I reckon she thinks he's a tool too.\"\n\n\"Do I detect jealousy?\" Heather gave a little laugh. \"The Italian stallion, cutting your grass.\"\n\nTim chuckled too. \"Yeah, I'm totally devo. I thought she was gonna be mine.\"\n\nFRIDAY\n\nThey were awake early the following morning, packing all their gear away except their dewy tents, which they left standing to dry, then ate breakfast while Barn Bluff, glowing red from the rising sun, towered above the foggy campsite. Once again unencumbered by rucksacks they walked quickly up the cirque, then made the steep rocky scramble to the mountain summit. On top they were again treated to magnificent views under a perfect blue sky. The temperature was rising and their walk back to camp left them both sweating.\n\nHeather was wearing a white sleeveless activewear singlet top with black shorts which ended halfway down her well-muscled thighs, and her fleece jacket tied around her waist, just in case the weather turned unexpectedly cold. She wore her pink cap, from which her short blond ponytail stuck out through the rear adjustment hole, strands of hair sticking out at many angles.\n\nHer fair skin was lightly tanned, with tattoos adorning both her arms, from elbow to shoulder, and thighs too. Most were black ink, but a few were coloured. She had a large red rose with prominent thorns on its dark stem, surrounded by black Celtic knot-work covering her upper left arm, and on her right shoulder she wore the face of an Alsatian dog with ears erect and its mouth slightly open, almost in a doggy smile, with tongue half showing. Below the dog was the Rising Sun badge of the Australian Army, with its semi-circular array of golden bayonets radiating out as the sun's rays, surrounded by more Celtic knot-work patterns filling up the background.\n\nWhen she'd faced him, Tim noticed an inked thick black snake coiled down sections of her right thigh. And on the front of her left thigh he'd noticed a small Tasmanian tiger and devil, both side-by-side peeking forward through long grass as if on the prowl, and a thick black broad-arrow in the style the convicts wore down her thigh's side.\n\nAnd on Heather's back, visible above the low neckline of her singlet, Tim could make out black ink in the form of a ragged old scroll type map with sections of the rugged northern Tasmanian coastline disappearing beneath her top.\n\nAfter a quick lunch, they packed their tents and hiked southward. The temperature must have been in the low-to-mid thirties by now, and despite the reasonably flat track, walking along with heavy rucksacks under the sun was sweaty exhausting business. Not far from their destination they came across a whole bunch of people swimming in a lake, including Antonio who was swanning about in red speedo togs, barely leaving anything to the imagination when it came to his bulging package. Kathy and Anita were there too in bikinis, while various other walkers were frolicking about.\n\n\"Ciao, bella!\" Antonio called out to Heather, causing her to cringe a little. \"Come and join us. The water is bellissimo!\"\n\nTim smirked. \"Gotta give him points for trying. Are you keen for a swim?\"\n\n\"Sure. Please hold me back if I try to drown him.\"\n\nUsing the cover of some bushes and pencil pines they changed into their swimming costumes. Tim wore his board shorts, and when she emerged from cover, Heather was in an aqua two-piece bikini. The sight of her caused Tim to catch his breath. She was muscular with skin tight over well-defined biceps and wash-board abs tapering to a v-cut pointing towards her groin. Her breasts were small but firm, with nipples conspicuous under her bikini. He noted her neat hole of a belly button which featured a small metal navel stud.\n\nHer tattoos were better on display now, and he could see the snake on her right thigh sported finely detailed, almost photo-realistic scales as it entwined parts of her leg, with tail up near her bikini briefs and coiled down to above her knee where the snake faced forward, seemingly looking at any admirer in the eyes with forked tongue stuck out, tasting the air. Tim realised he was staring and quickly looked away, embarrassed. When he looked back to her face he noted Heather's humorous smile. \"He's an olive python named Hector. I got him in Darwin.\"\n\n\"Sorry. Your tats...I mean he's impressive.\"\n\nHeather laughed. \"Come on, let's go and swim.\" When she turned from him he could see more of the map tattoo on her back, which was indeed a map of Tasmania on an old scroll of ripped and burnt paper. In the bottom left-hand corner, below her bikini strap, he could make out the words 'VAN DIEMEN'S LAND' below an old-style compass rose with cursive script denoting north, south, east and west.\n\nTim wasn't a bad looking bloke with well-defined muscles from playing sport, particularly rugby league, from childhood to his twenties. But despite occasionally lifting weights he was no Adonis gym junkie and suddenly he felt inadequate. Heather oozed an air of toughness and muscle, and she evidently exercised often. Furthermore, she'd been a medic in the army, even deploying to Afghanistan twice, and also lived in various places around Australia. He found her very beautiful and interesting, and Tim felt rather ordinary in comparison. Consequently, despite his developing romantic feelings towards her beyond lust, he suspected he was far out of Heather's league. Indeed, he wondered, she's a goddess and most blokes probably are out of her league.\n\nWhen they entered the water more than a few heads turned to admire Heather. The English couple they'd seen in the caravan park kitchen were there, along with the young German men. Javier, the Chilean Tim briefly spoke with the previous morning, could hardly keep his eyes from Heather, while Antonio was speechless for once. Kathy and Anita called them over, and Tim decided then and there to keep playing things cool. Heather was Ryan's sister, and since he decided it unlikely he'd have a chance with her he'd simply continue being friendly and enjoy her company till he flew back to Brisbane in slightly over a week. And her company truly was most enjoyable. In the meantime there was a young Irish lady he fancied.\n\nHe gave them a smile. \"Hey, Kath, Anita, how's it goin'?\"\n\nThey swam and splashed and eventually Heather lay on a rock in the afternoon sun. Kathy and Anita followed her lead, and then it was only Antonio and Tim in the water. Tim engaged Antonio in conversation, deciding he wasn't a bad bloke, just a bit over the top when it came to the ladies. Other swimmers left, and new ones came. A group of five young Asian men turned up and began gesturing excitedly at something on the ground nearby. Tim and Javier went across to have a look and it was a fat snake with black and light-orange stripes basking in the sun.\n\n\"That one's dangerous,\" Tim said with reasonable certainty. Even though he knew very little about snakes, before he travelled there he'd read all three snake species in Tasmania were venomous.\n\nHeather walked over and confirmed it a highly venomous tiger snake, so everyone kept clear, moving away from the lake's edge. The poor elapid, fearful of the giant, dangerous, noisy creatures who often came by its favourite basking rock, slithered away into the undergrowth.\n\nAfter briefly chatting with the young men who'd discovered the snake, Tim discerned they were Chinese students studying at university in Sydney. They elected not to stop for a swim, the snake scaring them off, and Tim decided it was time to change back into his hiking gear. Heather arrived behind the bushes as Tim's pants were off and he was drying himself with his tiny microfiber travel towel. He stood there, completely naked in front of her, noting how she'd quickly glanced down to his crotch before averting her eyes and apologising.\n\n\"Sorry, I ah...sorry.\" She turned and left him to change.\n\nTim looked down to his manhood, which hung there oblivious to the goings on, despite the very recent presence of a beautiful young woman in a bikini checking it out. He laughed to himself, thinking there were worse things than Heather seeing his cock. He was a nurse and saw penises all the time and knew his own was about average as far as cocks go. Anyway, Heather was once an army medic and so surely saw many a penis too in her time. In fact, she'd probably had many a cock from tough, confident, battle hardened A-Jays with big swinging dicks, he thought rather unwelcomely. Fuck off thoughts, he thought to himself, chuckling at the irony.\n\nAfter dressing he emerged from behind the bushes. \"Your turn.\"\n\n\"Hey, sorry about before.\"\n\n\"Nah, it's all good. Nothing you haven't seen before, right?\" He smiled and Heather smiled back.\n\nTheir imminent departure from the lake caused a cascade effect, with Kath and Anita using the same bushes to change, leaving Antonio on the rock. \"Leaving so soon?\" he asked.\n\n\"We'll see you at camp,\" Heather said with a smile. \"Be careful of the deadly trouser snakes. I saw one hiding in the bushes over there.\" Antonio looked more concerned than amused.\n\nThe hut was only a little further along the track, tucked inside the forest, and with other hikers already claiming most bed platforms inside the small building, Heather and Tim secured one of the tent platforms, placing their tents side-by-side. Kathy and Anita set up camp on the neighbouring platform and when Heather produced a deck of cards she invited the girls over for poker. They all sat on the edge of the platform, enjoying the card game, and finally Antonio wandered up to their camp, telling them he'd somehow bagged a spot in the hut for the night. Still, he joined them for a few rounds of poker before everyone decided they were starving and went off to their separate camps to make dinner.\n\nWhile they cooked their evening meals, Tim wondered aloud, \"I wonder what happened to those bushwalking club walkers?\"\n\nHeather thought for a moment. \"Probably moved onto the next hut. It was a hot day so they must be pretty tough for their ages. I really admire them.\"\n\n\"Yeah, for sure, it was pretty warm so they must be tough. But it was nice to have a swim. Still, the water was quite chilly.\"\n\n\"The cold water didn't seem to affect you too much,\" Heather said, giving Tim a sly glance.\n\n\"What? Oh. Very funny.\" He couldn't help but smile, recalling Heather glancing down at his nakedness.\n\nSATURDAY\n\nThey woke to the sound of bird calls and muffled camp conversations, making breakfast under a sky showing even amounts of blue and fluffy white cumulus. The day's walk entailed a hike across plains of button grass heath, past lookouts with gorgeous views down forested valleys, and through the enchanting Pine Forest Moor. In front of them Mount Pelion West rose from the plateau, with immense cliffs towering above its forested talus slope. Heather and Tim found themselves walking alone for much of the day as the little gaggles of hikers petered out at their own pace, walking to their own rhythm.\n\nDespite his aching body Tim was getting used to the weight of the rucksack. Keeping up with Heather was no problem on flat ground or downhill, and they conversed much of the time, learning all sorts of things about each other. But he frequently lagged behind when the track climbed and she'd wait for him at various intervals, often preparing to walk on as he reached her.\n\n\"Hold on a minute while I catch me breath,\" he'd say, and though obviously eager to get going again she'd smile and wait patiently. The track wound through some darker rainforest sections with pretty creeks flowing clear from the mountain above, and then traversed up through open eucalypt country. Here they spent some time in silence following a fat echidna ambling along the track as if it were also on their hike, until it finally noticed them and waddled quickly into the grass, where it rolled itself into a ball with sharp defensive spines poking out from its thick brown fur.",
        "Arriving at Pelion Plains early in the afternoon, they inspected the giant hut there, but decided against sleeping inside. \"I don't want to share with twenty or so stinky snoring people,\" Heather said. \"I've done enough of that in my life.\"\n\nThe campsite was large enough for them to pitch their tents off to the side, as Heather suggested, away from most of the other hikers. They spent the afternoon exploring the main hut and the old hut, plus investigating the nearby creek which they found had several nice waterholes. The temperature was likely in the mid-to-high twenties and therefore still warm, though much cooler than the previous day. It was definitely warm enough for some hardy souls to have a splash in the cool creek, including Antonio and Anita. Kathy sat on the warm rocks chatting with Tim while Heather excused herself. \"I need some alone time if you don't mind. I'll see you back at camp later.\"\n\nTim couldn't get over the similarity between Kathy and his ex-girlfriend Abigail. Kathy's hair was dark brown, to the point it was almost black, and her eyes were clear blue. Her face and any exposed skin was lightly freckled all over, and if someone told Tim that Kathy and Abigail were cousins or even sisters, he'd almost believe it.\n\n\"Looks like Anita and Antonio are getting along fine now,\" Tim said, noting the two splashing about in the stream. Anita's long blond hair was silkier and even lighter than Heather's shorter wavy sandy blond locks. In her early twenties, Anita appeared soft and innocent, carefree and happy, while Kathy was a year or two older, but already wiser to the ways of the world.\n\n\"I think he prefers Heather,\" Kathy said, her tone matter of fact. \"But I think he's also realising he won't get anywhere with her. She's too strong for him and I'm certain she's interested in someone else. And it'll only be a matter of days till Anita gives into Tony, you mark my words.\"\n\n\"You reckon? And who could Heather be interested in?\"\n\nKathy stifled a laugh that came out as a snort. \"If you don't mind me sayin', I think yer a bit slow on recent developments. Like, who's Heather hangin' out with these days?\"\n\n\"What?\" Tim started to put two and two together with surprise, wondering if he'd heard Kathy right, because sometimes he struggled to follow her quickly spoken southern-Irish lilt. \"Are you talkin' about me?\"\n\nShe grinned at him. \"Took yer long enough. I'll call it women's intuition, like, or maybe it's the way she kept looking at you in the lake yesterday, but she's definitely into you. Right now she's probably back at her tent, thinkin' all about ya and rubbing one out.\" She chuckled and Tim gave a little laugh, not believing Heather might have a thing for him.\n\nFrom previous discussions Kathy already knew the story about Tim and Heather's connection to one another and how they'd become walking partners, knowing they'd only met in person for the first time earlier the very same day they met the girls at the lodge bar. It was quite obvious Heather and Tim were not a couple, but it was also clear there was a rapport between them. If anyone who'd never met them before spent a few hours in Heather and Tim's company, they'd realise the two were not dating, but might conclude they were quite good friends. However, Kathy was now telling Tim there was more going on. She looked at him with her head slightly tilted. \"I think you like her too, if you'll excuse my meddlin'.\"\n\n\"Yeah, well, she's a girl, right. I'm a bloke. Of course I like her.\"\n\nKathy laughed, causing Anita and Antonio to stop their splashing and giggling to look over to see what was so amusing. Kathy dropped her voice low, almost to a whisper. \"Yeah, of course yer like her. But it's more than like, isn't it? Maybe it's lust? But I think it's deeper. Like I said, it's my intuition.\"\n\n\"Ayyyyy,\" Antonio called out, \"What are you two gossiping about?\"\n\n\"Oh, we're talkin' about you, not with you, so you needn't worry,\" Kathy called out lyrically with a cheeky smile. She dropped her voice again. \"Perhaps she only wants to jump yer bones, like, but whatever her reasoning, she's interested, I can tell. I also think you think she's way out of yer league, because you probably think yer not alpha, or perhaps because you think yer too young for her. Which is all bullshit by the way.\"\n\n\"So you don't think I'm way out of her league?\"\n\n\"Yer a tall, handsome, genuine man, Tim. Yer generally smart, even if yer a bit slow when it comes to the ladies, and you can hold a conversation just fine. Don't get any ideas about me sayin' this but I think yer a bit of a catch. And just quietly, so does Anita. I think you'd punch well above what you think yer weight is. Heather might be intimidatin', but that's part of the attraction, isn't it?\"\n\nTim felt his face flush. He wasn't sure if Kathy was being honest or taking the piss, but he decided her facial expressions and tone of her voice suggested her assessment was genuine. He breathed out a sigh. \"Heather's me house mate's sister and she lives way down here. Probably best not to get too involved.\"\n\nKathy laughed again, and once again Antonio and Anita stopped and stared. \"But...\" she waited for Tim to continue and when he didn't she verbally filled in the blanks. \"Have it yer way if you like, but you'd probably be missin' out. I reckon you wish something to happen between Heather and yerself. Perhaps you'd be happy with a simple fling too, but either way I think you've bonded with her in the last few days and hope there's something more. Sure, the situations confusin', like, because she is yer mate's sister, and perhaps she's lookin' for something more than a fling too? Either way, I'd put money on you two getting together by the end of this little walk.\"\n\nTim thought for a moment, wondering if Kathy's evaluation of the situation was accurate, because he'd not considered things the way she'd described it. He'd known Heather for all of four days, and it was still over a week before he was returning to Brisbane. He hadn't even thought further ahead, or too much about his growing bond with Heather. Sure, he'd sleep with her if she asked him to, but he doubted she would. And he wasn't planning on asking her; partly because he was out of practice with asking a girl if they'd be interested in sleeping with him, and partly because of his feeling she was way out of his league.\n\nSurely it was absurd to think there was something between Heather and himself more than a growing friendship. He was enjoying walking with and getting to know her, and he didn't want to make things awkward between them. \"Jesus, don't go putting ideas in me head now, Kath.\"\n\n\"Oh, these ideas are already in yer thick skull. You only need to work out how to make it all work. Remember what they say, fortune favours the bold.\"\n\nThere were some dark clouds beginning to form in the late afternoon sky and the temperature was dropping fast and so the four of them walked back to camp together. Not far from camp two wombats, a mum and its young, were grazing on the grass beside the track.\n\n\"Oh my, how lovely!\" whispered Anita.\n\nKathy also went to mush. \"Oh, they're so sweet!\"\n\nThe four of them stood quietly watching mum and baby wombat feeding, seemingly oblivious to the humans nearby.\n\n\"Look at the little cub following his mother about,\" Antonio said, every bit as charmed by the creatures as Kathy and Anita.\n\n\"A baby wombat's called a joey,\" Tim whispered, not completely confident. \"But did you know wombats do square poos?\"\n\n\"Ah, that explains the cubic poo all over the place!\" Kathy whispered, as if relieved a great mystery was solved. The wombats wandered away from the track and the humans wandered back to camp. Antonio, Kathy and Anita were staying in the large hut for the night and Tim farewelled them for the evening.\n\nTents dotted the campsite, which was maybe half-full, and other hikers milled about, the smells of cooking dehydrated meals saturating the air. It seemed to Tim everyone was cooking some form of curry going by the flavoursome spicy odours.\n\nHeather was stretched forward on the ground in front of her tent, with her head near her ankles and hands holding onto her bare feet. Her sandy hair was untied, covering her face, the tips resting on her leg beside her shins. Tim had no idea how long she'd been in the position before he arrived, but she must have held it for a further minute or two before she sat up and smiled at him and simply said \"Yoga,\" as a way of explanation. After a moment she said with a smirk, \"Did you have any luck with the Irish.\"\n\n\"We had a good chat. I wasn't even trying with her though. We did see a mother and baby wombat not far from the hut. Hey, do you know if a baby wombat's called a joey?\"\n\nHeather smiled. \"Yeah, it's a joey. Why?\"\n\n\"I thought it might be. Just wonderin'. Maybe after dinner we could see if they're still about.\"\n\n\"Sure. So what ya cooking?\"\n\nBefore flying into Tasmania, Tim bought a number of dehydrated meals, and Heather brought along her own, which were a different brand to his. They cooked their meals separately, but shared samples of each for a little variety. Tim delved into his rucksack, pulling out the first ration pack he came across. \"Looks like vegetarian Masala Dal for me. What about you?\"\n\n\"I'm not sure yet, but I'm glad we're not sharing a tent. You'll be farting like a stinky farting champion!\"\n\nWhile Tim gave a little snort at her comment, she turned and entered her tent on hands and knees, inadvertently showing off her tight bum only an arm's length from Tim. She called out, \"Have a guess.\"\n\n\"Um, how about a nice hot curry?\"\n\nHeather turned and laughed, holding the packet up to him. \"Thai green chicken curry. I do have my doubts about its level of spice.\"\n\nThey cooked and ate their meals, swapping a small portion, then cleaned up their mess kit. The air was quite cool now, with the sun dipping low to the west, occupying the gap between the building dark cloud base and the horizon, sending its rays red and orange over the mountain across the golden grassy plain in front of the hut.\n\n\"Let's check if your little wombat family's still about,\" Heather said, pulling on her polar fleece and ugg boots.\n\nThey walked through the camp where small groups of people were chatting in low voices by their tents. Fires were not permitted in the National Park and so people boiled water for tea on fuel stoves, or played cards by torchlight. The hut was reasonably full, and occasionally someone would clomp along the timber veranda in their heavy hiking boots, off to visit the pit toilets or fill bottles at the water tanks.\n\nHeather and Tim found the grazing wombats fifty or so metres down the track and sat on a log to watch them as the sun snuck below the horizon. Several wallabies and a pademelon grazed nearby while a currawong chortled from somewhere low in a eucalypt, signalling to its flock mates there were humans about, maybe with an early evening snack to steal before heading off to roost. \"Wombats are so cute,\" Heather whispered with a smile in her voice.\n\nThe clouds were increasingly menacing, and the air was now quite chilly in the twilight. Tim turned to look at Heather, who watched the grazing wombat family with a smile on her face, and he couldn't help but smile at her obvious pleasure. She certainly had a soft spot for nature. In silence he handed her his pewter flask of scotch and she shared her dark chocolate with him.\n\nHeather's eyes followed a wallaby hopping to another patch of grass and she caught Tim's look. He averted his gaze back to the wombats, not wanting to stare, but couldn't keep the smile off his face. Perhaps all those things Kathy said about their mutual feelings were true?\n\nHe glanced back, wondering if she'd take his hand if he put it on the log between them. Or what if he was more proactive and simply took her hand? They made eye contact again, the twilight bright enough for him to make out her seemingly nervous little smile.\n\nWhat was the other thing Kathy said? Fortune favours the bold. Fuck, stop with the thinking! It's not like I haven't done this before! With his heart beginning to thump in his chest, Tim leant in towards Heather, a little way at first, and noticed her lean towards him too. He lent in further, slowly but now with confidence, despite his still racing heart. Their faces were close now, and kissing was a foregone conclusion. Both tilted their heads slightly and closed their eyes at the last second before their lips gently touched, sharing a long moist chocolate-scotch kiss in the dark.\n\nTheir kiss was slow and gentle, sensuous without rushing hungrily to suck each other's face off. Tim opened his lips a little, letting his tongue find Heathers, dancing lightly in the space between their mouths. They kept their hands to themselves, sitting on their log and pashing in the cool night air.\n\nGradually their kissing grew harder, their tongues more adventurous and attempting to entangle each other. Eventually Heather moved back slightly, disengaging, and Tim could see her grinning at him in the dark, before he leant in again, their lips covering each other and tongues caressing vigorously.\n\nWith the slightest rustle in the leaves above, a light drizzle fell on them, and they hesitantly disengaged their lips. Without saying a word, Heather smiled at Tim, taking his hand and stood. They walked quickly back to camp while the drizzle grew harder, becoming a shower. Heather only let Tim's hand go to unzip her tent flap entry, crawling in. Tim's heart had calmed, but now beat again as he crawled through the flap, seeing Heather beginning to pull her polar fleece jacket off.\n\n\"Zip the flap please,\" was all Heather said, and after he'd done so, Tim turned to her, reaching out in the dark tent, his hand finding her muscular and now naked waist. She reached for him, caressing Tim's face and he took two of her fingers in his mouth, sucking them slowly from base to tip. He noted the silhouette of her shoulders rise as she took in a deep breath, then she reached down at his shirt, pulling the sweaty polyester over his head.\n\nShe pushed him down to the floor of the tent, kissing him hard, and not liking to be dominated, he fought back. Heather was very strong and gave nothing away and her grip on his hand actually hurt. However, their wrestling space was limited, ending in a stalemate on their sides in the tent's centreline, breathing hard while the rain began to patter heavily on the tent's siliconized nylon skin.\n\nTim let go of her gripping hand and contrary to their preceding roughness he gently caressed up her flank with the tips of his fingers, feeling the muscles there and reaching around her back to unclip her bra. She helped him removed it, and they kissed hard while he covered her firm left breast with his right hand, feeling her hard nipple against his palm.\n\nHeather fumbled with his hiking pants, pulling them down, and then slipped her own sports pants down her long legs. They were naked in the dark tent, ready to pounce on one another as the rain fell steadily through the tree canopy above and onto the taut tent skin. Tim's hand found Heather's in the dark and they entwined fingers, leaning their faces to each other and joining with a deep sensual kiss.\n\nTim's cock felt so hard, like it would burst out of its skin, and when he moved to cover Heather, she lay back on the tent floor, pulling him onto her, kissing him hard all the way. Positioning himself between her legs, he felt her thigh skin tighten around his hips, and his cock grazed her hairy muff. His glans touched her pussy lips, which were wet and ready for him to penetrate her easily, his length sliding deep into Heather's innermost sanctum, and she arched her neck and back with a hushed gasp escaping her lips before he kissed her again.\n\nHeather wrapped her arms around Tim's back, embracing him and pushing her bottom off the ground and grinding their groins together. The length of his cock snug against the walls of her moist vaginal canal, his fat glans consistently hitting a most pleasureful spot inside her. \"Oh, yes,\" she whispered, \"Feels amazing. You're hitting the spot. Right there. Yes!\"\n\nThey weren't moving fast, but pushing against each other in a steady, hard grind. She pulled him forcefully into her, and he pushed back hard, their bodies deeply and utterly connected. Sometimes they kissed and sometimes their faces hovered millimetres from each other, simply breathing each other in the dark. Their tempo increased slightly, as did their pleasure, and Tim kissed Heather slowly as he pushed his cock harder into her enveloping cunt.\n\nShe embraced him harder, kissing him lightly with her tongue rolling up his and coming to rest on his upper teeth for a moment. He could feel her breasts firm against his chest, while their abdominals tightened, flat against each other with sweaty skin-on-skin occasionally trapping air between and expelling it with a noise like a wet fart.\n\n\"Oh, God, Tim,\" Heather whispered, their bodies completely together. \"Oh, ohh, ohhh.\" They moved quicker now, their pleasure building at a similar pace, Tim's hard cock hitting her pleasure spot with increasing frequency.\n\nHe kissed her jawline, sucking down the skin of her neck, and she arched back. It wouldn't be long, the pleasure tingles beginning to flow through both their bodies. Heather gasped, panting frequently, \"Oh, oh, oh, oh.\" It was like a dream. Earlier when they started kissing Tim couldn't believe the turn of events, and since then he'd tried and succeeded to give her as great a fuck as he possibly could. His strongest sexual turn on was pleasuring his partner, and he could tell he was pleasuring Heather immensely, which increased his own pleasure in the greatest positive feedback loop imaginable.\n\n\"Oh, Oh, Oh,\" her breathing was deeper and she held him tighter, and suddenly she pulled his lips hard to hers, shoving her tongue roughly onto his, stifling a deep moan in their mouths, causing his pleasure to overload, pulsating through his body, travelling up his cock, pumping thick cum juice deep into Heather. Her legs, wrapped up around his waist squeezed him tighter as he came, pulling him in, further and further.\n\nTheir kisses slowed, their tight embrace slackened, and then they simply breathed heavily into each other in the dark with their lips slightly apart. Tim felt the occasional post-orgasmic tremor pulse through Heather, as they came down from their pleasure high. The rain pattered on the tent, and the wind picked up through the leaves in forest canopy.\n\nEmbracing for several minutes like neither wanted to let go, they brought their breathing back to normal, then Tim made a move to pull out of Heather.\n\n\"Where do you think you're going?\" she whispered.\n\n\"Earlier you said you were glad we weren't sharing tents.\"\n\n\"Oh, yeah, the curry. I guess I've changed my mind. You can stay.\"\n\n\"I s'pose I could stay with you then,\" he said cheekily. \"I'll get my sleeping bag and mat.\"\n\n\"Okay. You better come straight back. Just keep the farting to a minimum.\"\n\n\"I dunno. It's dangerous enough in here. A Tassie devil mauled me and I might need to gas it.\" He didn't see her shake her head with a smile in the dark, and completely naked he crawled through the tent flap into the steady cold rain. He fetched his sleeping kit from his own tent as quick as he could, throwing it into Heather's tent and following it in through the flap.\n\nHeather ran her hand down his chest. \"You're wet.\"\n\nDespite his shivering, he grinned. \"I'll get you wet.\"\n\nShe chuckled softly. \"Seriously, put this around you before you freeze.\" She helped him wrap his sleeping bag around his body. He reached out, caressing her arm, from hand to shoulder, then ran his fingers lightly down over her breasts, her skin erupting in goose-bumps under his touch. His fingers caressed her nipples, then down her abdominals and along the tops of her thighs.",
        "\"Lie back,\" he said, like an instruction or perhaps an order. Heather did as he wished and he caressed her inner thigh, ever so lightly, all the way to her sticky muff. He was going completely by feel, with very little ambient light penetrating the tent, his fingers finding her wet slit in the dark. He pushed his thumb onto her clit, gently at first, rubbing little circles around and around, pleasuring her eight-thousand or so nerve endings housed there. She took his other hand in hers with a squeeze, and breathed in sharply when he slipped his index and middle fingers inside her. She was wet again and he wriggled his fingers and thumb in a rhythm, feeling and listening for Heather's pleasure.\n\nHer breathing increased, as did her grip on his fingers, and so he increased the pressure on her pleasure spots. \"Oh, gee, oh, yes,\" she breathed, holding onto him, tighter and tighter. Her back arched, using her free hand to help push her bum off the tent floor. Tim increased the pressure with his thumb, rubbing her clit up and down, side to side, circles, trying to read her pleasure rhythm.\n\n\"Oh, Oh, Oh, please, Oh.\" She was louder now, the steady rain outside hopefully muffling her sighs. Heather's hand gripped his with increasing tenacity and he applied more thumb pressure, pulling his other fingers up inside her, caressing her canal ridges, and she moaned with pleasure, \"Ohhhh,\" throwing her free hand over her mouth a moment too late to dampen her noise. Tim felt her pussy muscles twitching around his fingers for thirty seconds or so while her hand entwined with his gripped hard before relaxing. \"Oh, Tim,\" was all she whispered.\n\nHis cock was ready to go again, standing rigid between his legs. He lent in and she took his face in her hands, kissing him ferociously. He kissed back, and took her again in the centre of the tent, sliding his hard cock past her vaginal lips, into her, this time both began pumping with wild abandon. She embraced him tightly, kissing hard, fucking hard.\n\nTim wrapped his right arm around behind her thigh, increasing leverage, pumping his dick in her pussy hole, trying to push right up into Heather, maximising their union. They found a rhythm and once again Heather began to pant, and though she was experiencing great pleasure, almost reaching the edge, she was out of orgasms for now. \"Go for it, Tim. Fuck me. Harder. Yes!\"\n\nAnd he did, their fucking in the tent on the rainy night was wild. It took him a while to build up this time, but eventually his pleasure reached the point of no return and he pushed everything he had into Heather, squirting more cum into her vaginal passage. Once again they breathed hard, collapsing against each other, slowly letting their bodies relax.\n\nEventually Tim felt his cock losing its hardness, and he kissed Heather gently before pulling out. Some of their love juice ended up on the floor of the tent, and some on their sleeping mats. They rearranged their sleeping mats and bags in the dark, discovering they'd not even thought to attempt to keep their sleeping kit off the wet tent walls whilst in their moments of passion, and unavoidably they'd also added their own wetness. But nothing too bad.\n\nThey lay side-by-side in their sleeping bags, listening to the rain tapping on the tent, and Heather whispered, \"Now we know sex while camping really is fucking in tents.\"\n\nTim chuckled. \"It's also very wet. My bag's wet down one side. It's a bit sticky in some spots too.\"\n\n\"It's Ryan's bag, isn't it?\"\n\n\"Trust a Tasmanian to mention their sibling's name immediately after sex.\"\n\nShe gave him a gentle whack, before whispering, \"G'night, Tim.\"\n\n\"Night, Heather.\"\n\nExhausted, they slept against each other like logs.\n\nSUNDAY\n\nDawn broke to the sound of a kookaburra laughing reveille in an old gum tree on the edge of camp, while currawongs chortled to each other, both species preparing their daily ambushes on food left unattended by any camper who turned their attention away from breakfast for even a moment.\n\nRoused by the growing avian cacophony Tim slowly opened his eyes, noting the tangled mass of messy sandy hair a hair's breadth from his face. He'd pinch himself to make sure he wasn't in some fantastic dream, but he already felt sore enough with muscles aching and pubic bone feeling like it had taken a pounding, which of course it truly did. Furthermore, his bladder ached, feeling like it could burst any moment. He did, however, note rain was no longer falling on the tent.\n\nNow, do you know the feeling when you're warm and snug, and perhaps in a tent, maybe even with a gorgeous lover sleeping peacefully beside you, but you desperately need to relieve yourself, and its cold and wet outside? Yeah, some of you know the feeling, I'm sure of it. This was the dilemma Tim faced, delaying the inevitable as long as possible before biting the bullet. He carefully pushed his sleeping bag aside and felt the cool morning air on his skin, and with very deliberate movements in the confined space he pulled on his hiking pants, then cold wet boots without socks. Crawling through the low tent flap resulted in a surprise flow of freezing cold water flowing onto his bare back, causing him to squeal and curse.\n\nRelieving himself on the trunk of the kookaburra's tree was, however, bliss, despite the cold air. The bush around sparkled with delicate raindrops like jewels hanging onto the foliage. He couldn't help but note the crusty dried remnants of his and Heather's sex juice all over his cock and pubic hair and decided he'd need to clean up a little with his towel and bottled water, resulting in more cold water on sensitive skin. A couple of other hikers were emerging from their tents, and Tim decided his sleeping bag next to Heather was a better place to be.\n\n\"Good morning.\" Heather was now facing him as he entered through the flap, her hair still a tangled mop sticking out of her sleeping bag.\n\n\"Hey. How'd ya sleep?\"\n\n\"Not bad,\" she said with a smirk, \"considering I was completely fucked last night.\"\n\nTim laughed as he removed his boots. \"Yeah, I was totally rooted too. Feelin' a bit sore this morning though.\"\n\nHeather simply smiled, watching him climb into his sleeping bag. Tim's face came down on his sleeping mat, close to hers, and he gazed into her big green eyes in silence. Several stray locks of hair ran down her cheek and she attempted to blow them away out the corner of her mouth. Her strands of hair flicked up and landed back where they'd been bothering her and Tim reached out and gently moved them aside, caressing her cheek at the same time, and Heather rewarded him with more smiles.\n\nThey lay there in silence for some time, gazing into each other's eyes and listening to the sounds of people preparing for the day's bushwalk. \"I hope we didn't make too much noise last night,\" Tim whispered.\n\n\"Unlikely anyone heard over the sound of the rain and wind in the trees,\" Heather replied with a little grin. \"But who knows? Perhaps someone overheard our nocturnal activities. I think I was a bit loud.\" She adjusted herself, pushing the bag down a little, revealing her shoulders, arms and the top of her back.\n\nTim raised himself on his elbow, admiring her tattooed upper arms, and the top of her map of Van Diemen's Land on its tattered scroll. He reached out and pulled her bag halfway down her back, exposing the map in its entirety. It wasn't much larger than two hands wide, and perhaps three hands deep. The tattooist was certainly an incredible artist, drawing the map-scroll in exquisite detail, including some shadow relief of mountain ranges in the style of a nineteenth century map. The coastline was rugged, depicting many inlets, bays, some prominent rivers, and several offshore islands.\n\nTim traced his finger along the north coast, over the long estuary of the River Tamar, then gently down the east coast to the heavily indented Tasman Peninsular, Storm Bay and Derwent Estuary, then further south past the long stretch of Bruny Island to South Cape, and up the rugged west coast, past the long inlet of Macquarie Harbour, arriving where he started in the north west. He noticed the goose-bumps form on Heather's skin from his touch. \"It's beautiful. When did you get this?\"\n\nHeather smiled. \"When I was twenty. It's based on an old map Dad gave me to remember home when I left.\n\n\"Must have taken a while. It's, ah, exquisite.\"\n\n\"It took a few sessions before it was done. Hurt like buggery, but I knew the tattoo artist and she did a great job. She's one of the best in the business.\"\n\nTim traced his finger down her map in the approximate location of the Overland Track. He'd spent some time familiarising himself with the route from the maps Heather sent Ryan, so he knew roughly where they were. \"Well, at least if we get lost we have a map.\"\n\n\"You do seem to know your way around a map of Tassie,\" Heather said with a smirk. Somehow her comment seemed crass in the moment, yet he smiled as he shook his head in mock derision. She sat up cross legged, her head crouched below the tent's apex, and gave him a long gentle kiss. He kissed back, but after a while she disengaged, again with a smile, and despite her hardening nipples, she said, \"Come on, we have to mount Tassie's tallest summit today. Plus, I'm busting to pee.\"\n\nPeople were up and about, drying wet gear and shaking off wet tents. Some were cooking, while others were already walking past the tents with loaded rucksacks to continue along the track. Tim cooked breakfast oats while Heather hung their sleeping bags over a rope she'd strung between two trees. \"Probably won't dry completely, but they're not too bad anyhow.\"\n\nThey shook the water off the tents and began to fold each into its sack when Anita, Kathy and Antonio walked by. The two groups gave a wave and Kathy raised her eyebrows and smiled at Tim. He wondered if she somehow knew about the previous night's adventure, finding Kathy's perceptiveness disconcerting.\n\nThey left camp later than most, walking the long incline to Pelion Gap under a blue sky with the occasional white cloud flying rapidly over, pushed along by a cool wind blowing from the south-west. Tim savoured the delicious oxygen filling his lungs with every breath, putting one foot in front of the other and watching Heather's legs in front of him. They chatted, but there was no further discussion about the developments in their relationship. However, he couldn't take the thought of their sexual activities out of his mind. Holy shit, he thought, we didn't use any protection and right now my sperm is swimming inside her! He couldn't push these thoughts from his mind, and the knowledge his swimmers were inside Heather was thrilling, so he decided there was no point in worrying about the lack of birth control at this point in time. What ever happened would happen.\n\nThey reached the track junction at the gap by mid-morning. Many rucksacks were discarded around the little platform, left there by walkers who'd climbed the mountains either side of the gap unencumbered by their heavy loads. Dropping their rucksacks and grabbing a water bottle each, they tied their polar fleece jackets around their waists and began to ascend the track up Mount Ossa. The track wound its way up over the ubiquitous brown dolerite boulders of this part of the world, many stained with patches of orange and green lichen. They passed several hikers who were on the way back down, most greeting them with a friendly \"Hello\" or \"G'day.\"\n\nThey ran into Anita and Kathy on the summit plateau, who greeted them cheerfully. Antonio was standing on the edge of a high cliff, looking into the valley below. \"He'll be a temporary citizen of this world if he's not careful,\" Heather noted.\n\nAs if he knew she were talking about him, he turned and waved as he walked over, beaming. \"Ciao! Isn't this simply magnifico,\" he said, spreading his hands wide. When Antonio spoke to Heather, he was still unaware or unconcerned about encroaching on her personal space, causing her to step back slightly. Tim noticed he was the same with Anita, yet Kathy managed to avoid the attention now.\n\n\"Sure is,\" Heather said. \"It's stunning.\"\n\n\"Last night the hut was cosy and warm,\" Antonio said. \"How did your little tents go with all the rain?\"\n\n\"Yeah, the tent was fine,\" Heather replied.\n\n\"Got a little bit wet from the sleeping bag against the tent wall, but generally kept us dry, no worries,\" Tim added.\n\nThe European trio said their goodbyes, and as they walked off Kathy whispered to Tim, \"We have a bet going about Heather and yerself. Tony doesn't think you have a chance and Anita is still hedging her bets each way, but I think I've already won.\" She gave him a smile and a wink before turning and heading down the mountain side after her companions.\n\n\"What was that all about?\" Heather asked once Kathy was out of earshot. \"You still flirting with her?\"\n\nTim laughed, noting Heather actually looked jealous. \"Sounds like you're jealous. Irish girl cutting your grass.\"\n\n\"Touch\u00e9, Tim. Maybe I am a little jealous. But I do think we both gave the game away.\"\n\n\"How so?\" Tim was even more curious how Kathy knew he and Heather were now lovers.\n\n\"We both used the singular, tent, not plural, tents. I think she picked up on it. Also, I told her to keep her hands off ya cos I was going to fuck your brains out.\"\n\n\"Seriously?\"\n\nHeather giggled and gave him a sly smile, but without answering she turned and walked on across the summit. He followed her with his own smile, unsure if Heather was serious or not.\n\nAbout fifteen or more other walkers shared the rocky summit of Tasmania's highest peak, several climbing the boulder tor marking the highest point which sat one-thousand-six-hundred-and-seventeen metres above sea-level. Judging by accents and languages spoken at least half the hikers were visitors to Australia, such as the two Germans, Javier the Chilean, plus the Chinese students. The rest were Australian, with most people smiling and saying things in greeting like, \"Ripper of a day,\" or \"Ya wouldn't be dead for quids, would ya, cobber.\"\n\nTim looked about the peak, making the observation, \"I think it's great all these people are experiencing this beautiful walk, and everyone's so friendly. But it's also amazing how we're never alone out here, even this far from civilisation.\"\n\n\"You want some alone time out here?\" Heather replied. \"Or did you mean some alone time with me?\"\n\n\"Nah. Why would I want to be alone with you? Last night you mauled me.\"\n\n\"I mauled you? I feel like I was the one who was mauled. My bits are sore today.\"\n\n\"You loved it though, didn't ya.\"\n\nShe hopped up onto a boulder, looking across the myriad of craggy peaks and steep valleys in every direction, as far as the eye could see. \"I enjoyed last night very much. But I'm also enjoying your company. You're a pleasant surprise.\"\n\nTim hopped up onto an adjoining boulder, casting his eye over the jagged mountains. He turned and caught her eye. \"I'm glad you invited me along. This place is beautiful. And well, if you don't mind me saying, you're beautiful too.\"\n\nHeather half-smiled back with only the left side of her mouth curling up, as if embarrassed. \"Nah, I think you must be talking about someone else.\"\n\n\"It's true. Anyway, just sayin'. Take it or leave it. I'm going to climb the actual peak.\" He hopped off the boulder, avoiding some large cracks between the rock columns and made his way over to the summit tor, nimbly climbing to the top and spreading his hands wide. \"I'm the king of the world!\"\n\nHeather looked up at him, and despite her cap's brim, she was shielding her eyes from the sun's glare. \"Right now you're the highest person standing on the ground in this state.\"\n\n\"Come and join me. We'll get high together.\"\n\nHeather joined him on the summit tor, balancing precariously on the rock and throwing her arm around Tim with a squeeze, perhaps for more than just balance. Tim squeezed back with one arm, and held the compact camera out in the other, taking a photo.\n\nThey looked at each other and Tim grinned, whispering in a poor Italian accent, \"You're magnifico.\"\n\nHeather looked down and whispered, \"Stop it.\" But Tim gave her a gentle kiss, capturing the moment in several photographs. They kissed till they almost lost balance, and so retreated off the tor, lest they fall.\n\n\"I'll have to download these photos and wipe them from the card before I give Ryan his camera back,\" Tim said, going through the photos of Heather and his smooching.\n\n\"Yeah, he's gonna get a shock if he finds out about you and me.\"\n\n\"I guess he'll be jealous,\" Tim said, completely deadpan.\n\n\"You bloody mainlanders,\" she laughed. \"Anyway, from the sounds of the way you two carry on maybe he'll be jealous because you're with me and not with him.\"\n\nTim wondered if there was more to her suggestion about him being 'with' her. Is she implying we're together? He still felt he was punching well above his weight with Heather, because she was a beautiful, tough independent woman with way more life experience than himself. She was also three-and-a-half years older and potentially at a different stage in life than he was. Then there was the unavoidable fact they lived several thousand kilometres apart, so he wasn't quite sure where all this was going to lead.\n\nBut he'd also made a bold move the previous evening and it'd paid off, and now he was seeing Heather's soft side. Almost every time he looked in her direction she smiled her gorgeous heart-shaped smile, which wasn't usually on display when she wasn't engaging with him. And they were getting into the habit of making each other laugh.\n\nThey explored more of the mountain's summit, and eventually Tim noticed all the other bushwalkers were no longer around. \"Hey, check it out. We're alone.\"\n\n\"So we are. All alone on top of Tassie.\" They sat side-by-side in the lee of a rock where the sun warmed them but protected from the cold south-westerly wind, with their legs inadvertently resting against each other. In silence they ate muesli bars and looked into the distance where white clouds formed over peaks on the horizon.\n\nWhen Heather rested her head against his shoulder, Tim turned and kissed her forehead. Which resulted in more smiles, then a gentle kiss on the lips, which grew into deeper and increasingly vigorous passionate kisses. His hands gently massaged her boobs, her nipples poking through her black hiking shirt. She was forceful with her tongue against his, and their lips sucked each other hard. She moved a hand to his back, pulling him towards her, and his hand wandered from her breast down to her pants, and within a moment he'd unclipped her belt strap.\n\n\"What do you think you're doing?\" she said, smiling all the same.\n\n\"Hopefully pleasuring you, if you don't mind.\"\n\n\"I definitely don't mind.\" They broke their kiss and he moved down her body, pulling her pants down enough to reveal her wild dark blond pubic triangle. \"I haven't shaved in a while, sorry. I hadn't considered I might get lucky this trip. I expected I might get lucky again today though, so washed it with cold water this morning.\"\n\n\"That's okay. You have two exquisite maps of Tassie. Though, this one's a bit more wild and bushy than your back tattoo.\"\n\n\"Stop it, please.\" Yet she still laughed.\n\nHer outer labial lips were swollen with excitement and meaty, with her inner labial folds protruding slightly through her hair, and he ran his tongue over them, all the way to her clitoral hood, at which point she shifted her bum on the rock, laying her head back a little. His tongue caressed back down her inner lips, tasting her salty wetness flowing. Kissing her cunt gently, in the way he'd kiss her mouth, he moved his tongue around her vulval vestibule, moving back up her folds to her clit, caressing it tenderly. She shifted again, putting her hand firmly on his back, and he flattened his tongue, pushing down and moving around."
    ],
    "authorname": "Thefireflies",
    "tags": [
        "in a sunburned country story",
        "australia",
        "tasmania",
        "love",
        "romance",
        "drama",
        "oral",
        "hiking",
        "camping"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/heathers-exquisite-map-of-tassie"
}