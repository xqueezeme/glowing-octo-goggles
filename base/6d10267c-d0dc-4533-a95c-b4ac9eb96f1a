{
    "title": "What Kevin Did Last Summer",
    "pages": [
        "They never matched the picture.\n\nThat was the rule.\n\nThe picture was always fake, of someone else, and even if it wasn't it was out of date, taken during a time when they were younger, fitter, slimmer. Kevin Duncan knew that. Madam Voluptula had looked like an erotic goddess in the pictures he'd seen online. He figured a fatter, older version would still look gorgeous.\n\nThe Madam Voluptula that opened the door to her innocuous-looking flat was not a fatter, older version of the pictures on the internet Kevin had lusted over. The Madam Voluptula that opened the door was a walking, talking, 3D version of the exact same Madam Voluptula he'd seen pictures of online.\n\nWow, Kevin thought. She was beyond gorgeous. It was like someone had taken a beach babe Playmate-of-the-month from California and dropped her in the middle of an ordinary estate in the Midlands.\n\nHer body was a complete knockout\u2014a lush epitome of the female form. Her breasts and hips were all soft feminine curves while the rest of her was athletic and toned. Most of it was fully on display to Kevin. All she wore was black lingerie beneath a see-through pink negligee. She was tanned all over and her skin was a rich shade of copper in colour. The only way to get a tan that deep in Britain, even in what was nominally described as summer, was to overdo it under a tanning machine or slap on layers of the fake orange stuff. Madam Voluptula's tan looked natural, as if she had her own private beach and sun hiding away in a room in her flat. Her legs went on and on and terminated in a pair of dainty feet. She wasn't wearing any footwear and he saw her toenails had been painted red.\n\nHer face was just as gorgeous as the rest of her body. She had a lovely welcoming smile and her blue eyes sparkled with the promise of fun. Her full lips were glossy with vivid red lipstick. She had big, really big, blonde hair that flowed down past her shoulders in silky waves.\n\nShe was way out of his league.\n\n\"Ah, you must be Mr Duncan,\" she said. Her voice was bubbly like expensive champagne. \"Come in.\"\n\nHe nodded and entered her flat.\n\nShe was way way out of his league.\n\nHe supposed that was the whole point. If you were going to pay for it, it should be with someone you couldn't attract under normal circumstances. The money was supposed to make up the shortfall.\n\nKevin didn't consider himself to be bad looking. Okay, he wasn't one of the student Lotharios that had already worked their way through most of the campus by March, but he looked okay. He felt he was decent enough looking that he could talk to most girls on a Saturday night without worrying they were going to laugh in his face.\n\nNot that he actually chatted to most girls on a Saturday night.\n\nMadam Voluptula was out of his league, even with the four hundred pounds he had in his pocket.\n\nHe and his four hundred pounds were League Two. She was all the way at the top of the Premiership.\n\nHe was either about to get comprehensively fleeced or have the best night of his life.\n\n\"Punctual,\" Madam Voluptula said, flashing him a warm smile. \"I like a man who's punctual.\"\n\nShe led him into an intimate lounge. It was lit solely by candles; there wasn't a single electric light switched on. Overstuffed armchairs and sofas were positioned around a glass coffee table. Despite the intimate lighting Kevin could see it was more a waiting area than someone's front room. There was a white counter in the far corner and the magazines on the coffee table were all hardcore pornography.\n\nMadam Voluptula took him to a big armchair. He sat\u2014or rather sank\u2014into it. The warm leather moulded perfectly to his form. Madam Voluptula lounged on one of the arms. The closeness of her presence sent a surge of blood down to Kevin's crotch.\n\n\"You seem nervous,\" Madam Voluptula said. She walked fingers across Kevin's shoulders. The ample swell of her left breast was tantalisingly close to his cheek.\n\n\"First time,\" he said. His tongue felt two sizes too large and his mouth felt like it had run dry of saliva.\n\n\"First first time?\" Madam Voluptula frowned and drew back a little.\n\n\"First time paying for it,\" he elaborated. \"I saw the rules on your website. I'm not a virgin.\"\n\nInexperienced, yes. Guilty of various cack-handed and excruciatingly embarrassing fumbles in the dark, yes. But a virgin? No. He'd lost those V-plates back in school a couple of years ago.\n\nMadam Voluptula leaned back in and Kevin was enveloped in her intoxicating scent.\n\n\"Why the 'No Virgins' rule?\" Kevin asked. He'd read it on her website. He thought it odd at the time.\n\nMadam Voluptula lightly caressed Kevin's cheek with a warm hand. \"A person's first time should be special. It shouldn't be wasted on the likes of me.\"\n\nKevin's first time hadn't felt special. It had been a complete disaster if he was honest with himself. He'd got drunk and found out the hard way that the logistics of making love on the back seat of a very small car were far more awkward than he'd expected. Six months later and the girl refused to acknowledge he even existed.\n\nMadam Voluptula leaned in even closer and sniffed his neck.\n\n\"You spell nice,\" she whispered in his ear. \"Too many men your age drown themselves in cologne and aftershave. Not you. You smell natural. Scrumptious.\"\n\nShe gave his neck a little lick.\n\nThat triggered a strong reaction in Kevin's underpants as his erection surged upwards and tented the front of his trousers. He blushed. Madam Voluptula giggled and left the arm of his chair.\n\n\"Lois,\" she called out. \"Mr Duncan is here for his nine o'clock appointment.\"\n\nA skinny gamine girl entered the lounge through a door behind the counter. While she had a pretty face with lovely big green eyes, the overall effect was spoiled by an excess of makeup. Her long black hair still had traces of wildness, as though she hadn't quite figured out how to tame it yet. She wore jeans and a denim tank top covered in band patches over a white T-shirt. Kevin noticed she was also wearing long arm warmers over her forearms even though it was the middle of summer. Overall she looked like an awkward girl that might one day bloom into a beautiful woman given years, experience and an injection of self-confidence.\n\n\"What would you like to drink, Mr Duncan?\" Lois asked. Her quiet voice was a contrast to Madam Voluptula's bold, confident tones. \"Tea or coffee?\"\n\n\"A coke please, if you have one.\"\n\nKevin desperately needed something to wet his mouth. Currently it felt like he'd swallowed a mouthful of desert sand.\n\nLois ducked down beneath the counter, opened a fridge, took out a can of coke and placed it on top of the counter. She fetched a plastic cup.\n\nMadam Voluptula sat in the sofa opposite Kevin. She looked otherworldly\u2014an old-style Hollywood glamour puss. Kevin found it hard to take his eyes off her.\n\n\"Before we begin, Mr Duncan, I'm afraid we need to get the distasteful business matters out of the way first. My rate is four hundred pounds for the two hours. I prefer cash. Do you have it with you?\"\n\nKevin nodded. His tongue still felt too thick to form words properly. He stood up, took out his wallet and peeled out two hundreds and four fifties.\n\nHe'd thought this side of the business\u2014the cold sterile transactional aspect of it\u2014would kill his arousal. Instead it gave him the little thrill of being engaged in an illicit activity he shouldn't be.\n\n\"Um, this includes everything?\" he mumbled.\n\nHis wallet had been left a little bare after taking out those notes. If she started hitting him with extras he wouldn't have the cash for them.\n\n\"Oh yes. Everything.\"\n\nAnd when Madam Voluptula said it that way, smiled at him that way, that little illicit thrill he felt was joined by the much bigger thrill of knowing he was about to enter a bedroom with a woman who was both extremely sexy and highly experienced. His erection surged against his pants like a beast trying to break free from a snare.\n\nLois came over with a drink. Kevin drank half the glass in a single gulp. Madam Voluptula handed the money to Lois and the other girl went out through the same door she'd entered by. Kevin guessed she must be Madam Voluptula's maid.\n\nMadam Voluptula sat back down in the sofa. She elegantly crossed one leg over the other.\n\n\"Now that the distasteful business matters are out of the way we can move onto the pleasant business matters. What would you like me to do with you during our two hours? Do you have any particular service in mind?\"\n\nKevin thought about the terminology he'd seen while researching escort sites.\n\n\"Do you offer a Porn Star Experience?\" he asked.\n\nMadam Voluptula arched a delicate eyebrow. \"You want to grab my throat and come in my face?\"\n\nKevin's eyes bugged.\n\n\"N-n-no,\" he said. \"I was hoping it would be wild . . . raunchy. High energy. You using all your experience.\"\n\nBecause I don't have a lot, he was too embarrassed to say.\n\nMadam Voluptula's eyes lit up. Her full red lips curled up in a predatory smile. \"If you want wild and raunchy you've come to exactly the right place,\" she said. \"I'll give you a Porn Star Experience you won't forget.\"\n\nKevin's erection throbbed in his pants. He struggled to bring it back under control. At this rate, if he wasn't careful, he'd blow his load before they even got through the bedroom door.\n\nThere was a loud knock at the front door. It was more of a loud bang, as if someone was hitting the door with their fist. Hard.\n\nKevin jolted uncomfortably in his chair. Madam Voluptula glanced over in annoyance.\n\n\"Lois, are there any other appointments for this evening? You haven't made a double booking by mistake?\"\n\nThe pretty young maid returned and checked a large ledger sitting on top of the counter.\n\n\"No ma'am. Just Mr Duncan. Nine 'til eleven.\"\n\nMadam Voluptula tsked. \"I'm sorry for this interruption, Mr Duncan,\" she said. \"Sometimes prospective clients show up on my doorstep even though my online profile insists they make an appointment first. Lois, can you see who it is, please?\"\n\nKevin craned his neck and glanced around the corner of the door. Lois walked into the hallway and ducked down to look through a peephole.\n\n\"It looks like trouble, ma'am,\" Lois said.\n\nThe door thudded again beneath some heavy blows.\n\n\"Open up. We know you're in there and we know what this place is.\"\n\nKevin's stomach turned to ice and sank through the floor. The illicit thrill he'd felt before was charged by the knowledge he shouldn't be here. Now that it was . . . had gone wrong, that same illicit thrill decayed to fear and anxiety.\n\n\"How unfortunate,\" Madam Voluptula said. \"I'm very sorry for the interruption to your night,\" she said to Kevin.\n\nShe left the chair and joined Lois out in the hallway.\n\n\"Oh dear. Some local ruffians,\" Madam Voluptula said. \"Lois, could you go and take care of Mr Duncan. I'll see if I can sort this out as quickly as possible.\"\n\nThe door rattled under a flurry of blows.\n\n\"Open up or we'll kick it in,\" a harsh voice called out from outside.\n\nKevin heard Madam Voluptula open the door and let in the unseen thugs.\n\n\"Welcome gentlemen,\" she said brightly as if they were normal clients. \"What can I do for you?\"\n\n\"See, told you it's a ho house,\" one of the youths said with a thick estate accent.\n\n\"Yes, sexual services are on offer here . . . for the right price,\" Madam Voluptula said.\n\n\"We're not punters,\" another youth said. He sounded like the leader. \"We've come for our cut.\"\n\nKevin got out of his seat and walked up to the door to the front hallway. Through the crack between door and jamb he was able to look into the hallway without being seen. There were three youths. Despite the mugginess of a warm August night all three wore thick puffer jackets. They wore baseball caps and the lower part of their faces was covered with black bandanas.\n\n\"This is our turf,\" the leader said. His bandana was covered in prints of skulls and crossbones. \"Nothing goes down here without our say so. You want to do business, you pay us our cut.\"\n\n\"Oh, please forgive me,\" Madam Voluptula said. \"It's so difficult to keep track of who's in charge of which street and block nowadays. I would have contacted you and come to an arrangement earlier had I known.\"\n\n\"No excuses,\" the leader snarled. \"Fuck us around and we'll fuck up that pretty face of yours so bad you'll have to look for a new job.\"\n\nKevin felt his fear turn to cold fury. Maybe it was because Madam Voluptula looked so beautiful and vulnerable. Fucking animals. There were three of them. How dare they threaten a vulnerable woman like that. Had no-one taught them any common decency?\n\nFor one teetering moment Kevin's cold rage almost tipped him over into doing something incredibly foolish. He felt a strong urge to go and stand between the thugs and Madam Voluptula. It was primal instinct.\n\nAnd stupid.\n\nKevin was a soft middle-class university student who hadn't been in a fight since he was eleven years old. They were street-tough gang kids. They'd tear him to pieces. His noble act would only make things worse by getting their blood up for further violence.\n\nRationally he knew this, yet still he felt like he should be stepping out in that hallway to intervene.\n\nLois tapped him on the arm. \"Follow me,\" she whispered.\n\nOut in the hallway Madam Voluptula said, \"Let's not be hasty. There's no need for violence here. Come inside. I'm sure we can work something out.\" The last part was a sultry purr.\n\nLois led Kevin through the door behind a counter. She ducked down to the right and slid a wall panel aside to reveal a hidden room. Kevin didn't get in immediately. He looked back at the door leading through to the lounge.\n\n\"Doesn't she have any muscle to protect her . . . a bouncer?\" he asked.\n\n\"She doesn't need one,\" Lois answered.\n\nKevin pulled his mobile phone out of his pocket.\n\n\"That's it. I'm calling the police then.\"\n\nScrew the consequences. Fuck the explaining he'd have to do at being found in the flat of a prostitute. He wasn't going to hide away in a safe room while three thugs raped and battered a defenceless woman.\n\nLois put a hand over his phone.\n\n\"Don't,\" she said. \"It will cause more problems than it will solve.\"\n\n\"But . . .\"\n\nLois put a finger on his lips and pulled him down and into the hidden safe room. She lit a small electric lamp in the corner then pulled the panel back across and engaged a deadbolt to lock it into place.\n\n\"Why don't you want the police to get involved?\" he whispered. \"What Madam Voluptula is doing isn't illegal, I checked. A woman is allowed to sell sexual services from her own premises providing it's only her.\"\n\nLois gave him a sad smile.\n\n\"You haven't been in this world before,\" she said.\n\nKevin looked at the floor. He knew what she meant.\n\n\"It's not about the law,\" she said. \"It's about morality\u2014what other people think is correct and proper. Do you think anyone believes a sex worker when she claims she's been raped?\"\n\n\"That's just . . . wrong,\" Kevin said.\n\n\"It's how it is,\" Lois said. \"We have to look out for ourselves.\"\n\n\"Then why doesn't Madam Voluptula hire some protection?\" Kevin asked. \"Get some big fucking goon to act as her bodyguard.\"\n\n\"Madam Voluptula can take care of herself,\" Lois said.\n\nKevin thought he saw fear in her eyes. It was a quick flash, maybe even a trick of the light. Before he could ask her to elaborate Lois put her finger to her lips. He heard noises in the corridor outside.\n\n\"Follow me. The room is upstairs,\" Madam Voluptula said. She still sounded as bubbly as if the three thugs were normal clients.\n\nThe youths sniggered and made lewd suggestions as they clomped past.\n\nCold impotent rage simmered within Kevin. He knew what Madam Voluptula was doing. She was offering up her body in the hope it would discourage the thugs from attacking her.\n\nThe clomping footsteps continued down the corridor and then turned back to climb some stairs. Kevin heard them moving about above him.\n\n\"What now?\" he whispered to Lois?\n\n\"We wait,\" Lois said.\n\nIt was the sense of impotence that irritated Kevin the most. He shouldn't be hiding away like this. He should be out there confronting them. He knew he couldn't. They'd hurt him. Then they'd hurt Madam Voluptula. And there was Lois to think about as well. All he could do was hide down here and stew in impotent fury.\n\n\"There's no need to worry. This has happened before,\" Lois said. \"Madam Voluptula knows how to handle men like them. They won't hurt her.\"\n\n\"How did you end up here with Madam Voluptula?\" Kevin asked.\n\n\"She took me in,\" Lois said. \"I was in a bad way. My parents died in a rail crash when I was ten. I was sent to live with my uncle. He . . . didn't treat me well.\"\n\nShe self-consciously fiddled with her arm warmers. Kevin saw lines of scar tissue peeking out of the top of her left arm warmer and understood why she was wearing them even though it was the middle of summer.\n\n\"I ran away and tried to make a living on the streets. It went as well as you might expect. Madam Voluptula heard about me and offered me work and a place to stay. She's done the same for other girls before me.\"\n\n\"Work? You do the same as Madam Voluptula . . .?\"\n\nLois smiled even as her face reddened.\n\n\"No no,\" she said. \"I'm seventeen. Madam Voluptula doesn't allow her girls to do any kind of sex work until their eighteenth birthday. She's very strict on that. I work as her maid. I make sure the rooms are kept clean and I answer the phones when she's busy with a client.\"\n\nNice awkward assumption there, idiot, Kevin berated himself.\n\n\"She's taught me a few tricks, though,\" Lois said.\n\nFor a moment her big green eyes lit up and became very suggestive. She really had a pretty face, Kevin thought.\n\nWhoa. Seventeen, remember, Kevin thought. And you're way past the age where you can get away with that shit.\n\n\"They'll come in real useful when I turn eighteen,\" Lois said with an even more suggestive smile.\n\n\"Oh, so you are planning to do . . . sex work?\"\n\n\"Madam Voluptula has a massage parlour lined up. They have a good reputation\u2014they treat their girls well and they screen their clientele to make sure the real pigs are turned away.\"\n\nKevin looked at her incredulously. \"And you're happy with this . . . having sex with strange men?\"\n\n\"Madam Voluptula told me to think of it as providing a service,\" Lois said. \"And like all services, if you fully satisfy the needs of your client they're more likely to return for more. It's the same as any other business in that regard.\"\n\n\"Still, seems a hard life,\" Kevin said.\n\n\"I don't intend for it to be my life. Four to five years, max. That will give me enough money to put myself through university. I want to study science. I was good at it when I was younger. I'll pick up the qualifications I need from college on my days off.\"\n\n\"That sounds like a good plan,\" Kevin said, stunned to realise he meant it.\n\n\"Thanks,\" Lois said with a shy smile. \"I know it won't be easy. Not everyone gets the smooth path. My perverted fuck of an uncle fucked up my youth. There's no way I'm going to allow him to fuck up the rest of my life as well.\"\n\nKevin understood. Different worlds.\n\nHe thought about his own path to university. How much easier it had been. He'd gone to a nice school, followed by a nice college. It had seemed a formality.\n\nAnd maybe he'd taken it a little for granted. He thought about his first year. There had been a lot of fucking around and little in the way of actual work. That would have to change. Hearing Lois's plans and knowing what she'd have to do to fulfil them had given him fresh perspective on how important it all was. Too important to waste on goofing off.\n\nHe heard a loud, rhythmic creaking sound coming from the room above them. He tried not to think about it.\n\n\"You've heard my confession,\" Lois said. \"Now it's your turn.\"",
        "She fixed him with her big green eyes.\n\n\"Why are you here? You look a lot younger than Madam Voluptula's usual clientele.\"\n\n\"Long story,\" Kevin said. \"Originally the money was supposed to be for a holiday to Tallinn. I've just finished my first year at university. Me and a bunch of mates thought it would be really cool to meet up during the holidays and go off somewhere. We picked Tallinn because it's supposed to be hip and they say Estonian girls are gorgeous.\n\n\"I had it all planned out. I checked out the flights and the cheap places to stay and reckoned we could do a long weekend for about four hundred quid. I put the money together by spending the holidays temping at my father's firm.\"\n\n\"Why didn't you go?\" Lois asked. \"Sounds like you'd have had a lot of fun.\"\n\n\"Turns out my friends are really shit with money,\" Kevin said with a wry smile. \"The excuses started coming in a couple of weeks ago. 'My car broke down and I needed the cash to repair it.' 'I couldn't find a part-time job.' The last one didn't even bother with an excuse. He's always skint anyway because he spends any spare cash he has on dope.\n\n\"That left me. I had the money, but I wasn't going to go on my own. That'd be sad.\"\n\n\"And you decided to spend the money on an escort,\" Lois said. \"I'm not sure I see the connection here.\"\n\nUpstairs the rhythmic creaking sounds grew louder and faster. They were punctuated with low moans and sighs. Kevin tried to block them out.\n\nKevin reddened.\n\n\"My first year ended up being disappointing, sexually,\" he explained. \"I thought there would be plenty of opportunities\u2014people going crazy with the freedom of being away from home for the first time, that sort of thing. Didn't happen for some reason.\"\n\n\"And so you were hoping you'd have more luck with one of those gorgeous Estonian girls,\" Lois said.\n\nKevin's blush deepened. \"Sounds pretty sad when you put it that way,\" he said.\n\n\"Why Madam Voluptula, though? You do know she's really expensive, especially for a hard-up university student.\"\n\n\"I thought if I was going to pay for it, I might as well do it properly. I didn't want to pay for it and then it be a bit shit. So I thought I'd pick someone good . . . high class.\"\n\n\"You made a good choice,\" Lois said. \"Madam Voluptula is extremely talented.\"\n\n\"Maybe, if those fuckers hadn't turned up to piss on the party.\" Kevin jerked a thumb upstairs. The creaking sounds were still going strong.\n\n\"I wouldn't worry about them,\" Lois said. \"They'll be gone soon enough.\" Lois's face went strangely flat and expressionless.\n\n\"I'm surprised Madam Voluptula doesn't charge more,\" Kevin said. \"She looks incredible. Like she just stepped off the cover of a glamour magazine.\"\n\n\"I don't think Madam Voluptula is doing it for the money,\" Lois said. \"She sets a price that brings the clientele she wants to attract.\"\n\nThat puzzled Kevin. \"Is she nympho?\"\n\n\"She has a need for sex,\" Lois said. Then she promptly clammed up as though she'd said too much.\n\nThe mattress springs continued to creak away upstairs. Then someone, Kevin presumed one of the youths, gave a very loud and drawn out groan of ecstasy. It was so overblown and ridiculous Kevin found it hard to stay angry. It felt like he'd accidentally ended up on the set of a sex comedy rather than the tough gangster film it had been before. Kevin suspected that groan would sound overdone even for a sex comedy. He had to suppress a sudden giggle.\n\nHe looked over at Lois. She wasn't smiling. Instead she had that same expressionless look he'd glimpsed earlier.\n\nMaybe because that sound is some thug getting his rocks off raping her boss. No wonder she's not smiling.\n\nAnd you're laughing at it.\n\nYou're a fucking wanker, Kevin, he berated himself.\n\nThey sat in silence while the sounds of an orgy filtered down through the ceiling.\n\n\"You must think I'm an asshole,\" Kevin said. \"You're going to have to do all kinds of shit to get to university and here I am, throwing away four hundred pounds like it's nothing.\"\n\nKevin remembered the rich kids he'd seen at university, throwing money around like it was confetti. He hated them. How the fuck had he ended up like them?\n\n\"Why,\" Lois smiled. \"In a few months men like you are going to put me through university.\"\n\nKevin paused again. Different worlds, he thought.\n\n\"Just for the record,\" he said. \"I'm not one of those men that pays for it because it's the only way to get it. Just in case you were thinking otherwise.\"\n\nThey both smiled.\n\nLois closed her eyes. \"Don't judge. Their reasons are their reasons. Your job is to make them feel so good they tell all their friends and come back for more.\"\n\nShe recited it as though it was a mantra.\n\n\"More advice from Madam Voluptula?\"\n\nLois nodded.\n\n\"She's older than mid-twenties, isn't she?\"\n\nLois nodded.\n\nFuck it, Kevin thought. Madam Voluptula was still way hotter than any girl he'd seen during his first year at university.\n\nThen he noticed the silence. The noises from upstairs had stopped. He was about to ask Lois what they should do when he was interrupted by a knock on the panel that served as the entrance to this little hidey hole.\n\nLois slid back the bolt and pushed the panel aside to reveal Madam Voluptula. The escort looked none the worse for wear from her ordeal. In fact she looked radiant. She was practically glowing with energy. Kevin saw she'd changed. She'd replaced her black lingerie with frilly pink bra and panties. Her blonde hair cascaded behind her head in lush golden waves.\n\n\"It's okay to come out,\" she said.\n\n\"They're gone?\" Kevin asked, emerging out into the corridor and glancing cautiously in either direction.\n\nHe hadn't heard them go by, or the front door open.\n\n\"Yes, all gone,\" Madam Voluptula said breezily.\n\nMaybe there was an exit in the back he was unaware of.\n\nMadam Voluptula turned to Lois. \"Lois, the red room needs cleaning.\"\n\nLois nodded and turned to go.\n\nMadam Voluptula lightly caressed her arm as she went by. \"I'm sorry,\" she said. \"I know how much you dislike this part.\"\n\n\"It's okay,\" Lois said, putting on a bright smile.\n\n\"Lovely girl,\" Madam Voluptula said as her maid turned and headed up the stairs at the end of the corridor. \"I'm sure she'll blossom into a fine young woman. Now Mr Duncan . . .\"\n\nShe turned her attention back to Kevin and he felt like he'd been put under a spotlight, albeit one that shone lust rather than light.\n\n\". . . once again you have my sincere apologies. I hope this unfortunate interruption hasn't spoiled your mood and we can still salvage your evening.\"\n\nKevin knew he should leave. Money back or no money back. This was a different world. He didn't belong here.\n\n\"We have a number of options,\" she said. \"We can rearrange your session for another date. We can change it to a one hour session. Or, if you're flexible, we can make it ten 'til midnight and I can still give you the full two hours.\"\n\nShe didn't mention the equally valid option of giving Kevin his money back, him leaving and not coming back.\n\nNot that Kevin was actually considering that option. Madam Voluptula had put an arm around his waist and her soft and warm body was pressed up against him. When it came to leaving, the little man between his legs definitely had other ideas. The close presence of Madam Voluptula had pricked its attention and it was sniffing away at the front of his pants.\n\n\"Was that original eleven o'clock fixed?\" Madam Voluptula asked him. \"Are people expecting you back at a certain time?\"\n\n\"Not really,\" Kevin replied. \"I told my parents I was going out drinking with some old school friends. I guess ten 'til twelve is okay.\"\n\n\"Oh good,\" Madam Voluptula said. She gave his waist a squeeze and Kevin's erection bobbed eagerly in his underpants. \"That was the option I was hoping you'd pick. We'll use the pink room.\"\n\nShe led him to the end of the corridor, but instead of heading upstairs she turned to a door on the left.\n\n\"Are you okay with this?\" Kevin asked.\n\n\"Of course. Why wouldn't I be?\"\n\nBecause you've just been raped by three gang thugs, Kevin thought. Not that she showed any outward signs it had bothered her.\n\nDifferent worlds.\n\nThe pink room was something else. It looked like the idealised fantasy of an escort's bedroom. There was no electric illumination. Madam Voluptula lit a circle of scented candles that were positioned on shelves around the edges of the room. The room itself was dominated by the biggest bed Kevin had even seen. It was on a circular base, but the bed itself was shaped like an enormous love heart. It was covered in pink silk sheets and piles of plump pillows. An equally enormous circular mirror was fixed to the ceiling above it. The walls were hung with tapestries depicting erotic acts.\n\n\"It's very . . . um . . . pink,\" was all Kevin could say.\n\n\"It sets the mood. Mood is important. It completes the experience,\" Madam Voluptula said.\n\nShe pointed to a small shower cubicle in the corner of the room.\n\n\"I'm just going to pop upstairs to see how Lois is getting on. Make yourself comfortable. I'll be back down in a few minutes.\"\n\nAfter she left, Kevin took his clothes off, draped them on a chair in the corner and took a quick shower. As he towelled himself off afterwards a thrill ran through him.\n\nHe was doing this. He was actually doing this. His cock, unrestrained now, bobbed eagerly.\n\nHe wrapped a towel around his waist and sat on the edge of the bed. The mattress was extremely thick and very soft. He didn't have to wait. He'd just sat down when there was a soft knock at the door and Madam Voluptula entered.\n\nShe prowled up to Kevin like a predatory cat. She tickled fingers through the wispy hairs on his chest. Her hand went lower. She grabbed the towel hiding Kevin's private parts and flung it across the room in one easy motion.\n\n\"No need for that here,\" she said.\n\nKevin's uncovered erection throbbed and bobbed.\n\nShe climbed up on the bed and moved around behind Kevin until she was pressing her hot body against his back.\n\n\"Now I know you asked for a high intensity Porn Star Experience, but I think that little interruption we had earlier has left you a little uptight. What we'll do is this. I'll spend the first hour gently pampering you to drain away that tension. Then I'll unleash the raunch for the second hour and give you a Porn Star Experience you won't forget. Does that sound good for you?\"\n\n\"Sure,\" Kevin said.\n\nMadam Voluptula's fingers had already started to knead the meat of his neck and shoulders. At that point, with her hot body pressed up against him, he would have agreed to anything she suggested.\n\nThat felt so good. Her touch felt divine. He felt like all the stress stored up in his neck and shoulders was melting away. Her touch grew lighter and lighter, until it was little more than a whisper sending erotic shivers sparking down his back.\n\nHer fingers slid up his neck and began to work on the muscles of his face. She started on the back of his jaw and then moved up until her fingers were making gentle circular motions at his temples.\n\nRelaxed, Kevin let his head fall back onto the soft pillows of her chest. Madam Voluptula paused long enough to remove her bra and throw it over into the far corner of the room. Then she helped Kevin's head back until he was resting within her cleavage. He relished the soft pressure against the back of his head. Those were her naked boobs pressed against him and they felt wonderful. Madam Voluptula continued to massage the muscles of his face until all the tension drained right away.\n\nShe reached down and caressed Kevin's bobbing erection. It gave an ominous twitch and clear fluid oozed out of the tip.\n\n\"Oh my,\" Madam Voluptula said. \"That fellow seems a little too eager.\"\n\nShe crawled across the bed to one of the side tables and returned with a condom in a foil wrapper.\n\n\"You've been looking forward to this all day, I can see,\" Madam Voluptula said. \"I want you to stay focused here. It will be very anti-climactic if you have an accident while I'm putting the condom on.\"\n\nOh fuck. Premature ejaculation. Suddenly Kevin wished he'd had a good wank before coming here. His cock was like a stack of nitroglycerine. The slightest knock would set him off.\n\nNo no no. He hadn't paid all this money, spent that hour hiding in a cupboard, just to blow his load the moment she tried to put a condom on him.\n\nMadam Voluptula was quick and deft. She rolled the sheath down over his erection before he was even aware she'd done it. His cock gave a couple of warning throbs, but thankfully dialled back from full nuclear.\n\n\"Hehe, like handling high explosives,\" Madam Voluptula said with a giggle. \"Don't worry. You're not the first.\"\n\nMadam Voluptula took off her pink panties and kicked them off the bed. Kevin saw she was shaved down below and her labia were so plump and inviting they looked as though they'd been pumped up with collagen.\n\n\"Given your current state of arousal I think it's best if we move straight to penetrative sex,\" Madam Voluptula said.\n\nThe mention of penetrative sex was enough to trigger another seismic twitch. He felt his balls bubbling up. Fuck, he was going to pop any moment.\n\n\"Follow my instructions,\" Madam Voluptula said.\n\nShe lay face down, her elegant legs slightly apart, in the centre of the heart-shaped bed.\n\n\"Now I want you to position yourself between my legs and slowly insert your erection into my pussy. I'll remain motionless to give you the least amount of stimulus.\"\n\nKevin did as he was told. He shuffled over and went on his knees between her toned thighs. She twisted her hips back, giving him a better view of her luscious sex. Careful not to touch his dick no more than he had to, he guided his cock between her plump labia and slowly eased forwards.\n\n\"Gently,\" Madam Voluptula said.\n\nKevin didn't need to use his hands any more. He pushed down with his hips and the folds of her pussy gobbled up his cock millimetre by millimetre. There was little resistance. He felt warmth and tightness.\n\n\"Now lean over and place your hands on either side of me.\"\n\nKevin did as she asked. He leaned forwards and braced himself with his palms flat on the mattress.\n\n\"Got you,\" Madam Voluptula giggled.\n\nShe snatched his hands and slid them underneath her big fluffy breasts. That took out his support and he lay down on top of her. He felt her nipples pressing down against his palms.\n\nThen Madam Voluptula did something strange with her body. It was like her peachy ass folded inwards and around him. His cock was sucked deeper into her vagina and the warm flesh of her sex puckered up around him and squeezed.\n\nOh fuck yes.\n\nKevin's balls boiled over. His cock throbbed and he quivered in ecstasy as he emptied a big load inside her. A real big load. He fancied he could feel his cock swelling with the passage of the load down his shaft. It wasn't the only one either. A second rushed up his shaft and erupted with an explosion of pure pleasure.\n\nMadam Voluptula wasn't done with him either. She gave her ass a little twitch and deep within it felt like the soft, packed flesh of her pussy was tightening around him, almost as though it was gulping on his cock as if it was a straw. Kevin's hands were pinned beneath the heavy globes of Madam Voluptula's breasts. The only freedom of movement he had was to rear up and rear up he did as a third, even bigger, ejaculation welled up his shaft and gushed out inside her.\n\nThen, spent, he collapsed down on her naked back. He gasped for breath. He was amazed at how much exertion it had been considering the both of them had barely moved.\n\n\"Good boy,\" Madam Voluptula said. \"You held on until exactly the right moment.\"\n\nShe rolled Kevin over onto his back and let his softening erection slide out of her juicy pussy. He lay back and relaxed on the luxurious mattress. Wow, that had been some orgasm, he thought. He'd never come as powerfully as that before. Then he'd never had sex with anyone as straight-up gorgeous as Madam Voluptula before.\n\nThe epitome of professional efficiency, Madam Voluptula was already peeling the used condom off his penis and wiping him up with tissues. Kevin was surprised at how little milky-white fluid had collected in the teat. While he was coming it had felt like he'd emptied enough semen inside her to fill a coffee mug.\n\nHe lay back and basked in post-orgasmic bliss. That had felt amazing.\n\nThen he looked up and saw the time on the clock.\n\nThe minute hand hadn't even reached a quarter past the hour.\n\nThat was four hundred quid well spent then.\n\n\"You seem a little disappointed.\" Madam Voluptula lay on the bed next to him, propped up on one elbow.\n\n\"Oh, no,\" Kevin said. \"It was really good . . . just over a little quicker than I was hoping for.\"\n\nMadam Voluptula reached over and tickled the underside of his balls.\n\n\"Who said it's over,\" she said. \"I'm not running a cheap massage parlour. When my clients pay for two hours, they get two hours. And they get to come as many times as they're able to.\"\n\nKevin looked down at his waist. His cock, having carried out its primary function, was curled up in a nest of pubic hair. Kevin had a horrible feeling he was about to experience the yawning chasm between want to, and able to.\n\n\"Don't worry,\" Madam Voluptula said. \"You have plenty of time to recover for your second service. That's why I got you off so quickly.\"\n\nShe pursed her lips and lightly blew on Kevin's shrunken penis. He felt the air currents tickle through his pubic hair and slide over the skin of his penis. It gave a little twitch.\n\n\"Mmm, yes. You'll be fine,\" she said. \"You're young, you're horny, I'm fantastically skilled. I'll have you nice and hard again for your Porn Star Experience.\"\n\n\"We're still doing that?\"\n\n\"Of course. I adore high intensity sex.\"\n\nKevin's cock twitched again.\n\n\"Not yet though,\" Madam Voluptula. \"For the rest of this hour I think I'll concentrate on making you relaxed and comfortable. You're still too tense. That interruption earlier hasn't helped. Tension is bad for erections. It chokes off the blood your willy needs to get hard. Now turn over onto your front.\"\n\n\"Okay,\" Kevin said.\n\nHe turned over and lay on his front. He noticed the smooth sheets gave off a faint scent of perfume. The mattress moved as Madam Voluptula went away and returned. He felt her weight as she sat on his bum. She let out bubbly laughter as she bounced up and down, grinding his crotch against the soft mattress underneath him.\n\nMadam Voluptula leaned forwards, grabbed the muscles of his shoulders and began to knead them. Her hands were cool and slick with massage oil. They felt heavenly as she worked on his shoulders. Madam Voluptula continued to lean forwards until her substantial boobs were pressing against his back. Then she was lying on top of him.\n\n\"You see, I find the best thing to do to my client while I'm waiting for him to recover his ardour is to pamper him thoroughly with a body-to-body massage,\" she whispered in his ear. \"It both relaxes and turns them on.\"\n\nShe blew in his ear. Warm breath tickled the lobe of his ear.\n\nMadam Voluptula sat back up. She let herself slide down his rump until she was resting on the top of his thighs. There was a brief pause and then she lay down on him again. This time her breasts were pressed against the small of his back. They were wet with massage oil. She gripped his sides and slid her soft boobs up his back until they rested on either side of the back of his head. Then she slid back down until her breasts were back at his buttocks.\n\nKevin let out a contented sigh. Her warm body rubbing all over him felt really nice.\n\nShe repeated the sliding motion maybe ten or twelve times. Each time she varied her route until it felt like every square millimetre of skin on his back had been rubbed by her flesh. He felt a warm glow all over his body and a pleasant erotic tingle that crackled through his hairs.",
        "At the last slide she paused with Kevin's head sandwiched between her naked breasts.\n\n\"Like it?\" she asked.\n\n\"Yes,\" Kevin said. He felt thoroughly pampered.\n\n\"It's not that good as a massage, but it does get my clients really turned on.\"\n\nShe started the downward slide, but paused to deposit a moist kiss on the back of Kevin's neck. She slowly slid down his back, leaving hot kisses in her wake. For the next slide up and down she led with her moist tongue. An erotic shiver slithered up Kevin's spine.\n\nOn the return, she carried on past his buttocks until she was lying on his legs. She parted his buttocks and tickled the sensitive patch of skin between his anus and testicles. She pressed her face into his ass and blew. Kevin felt a stronger twitch in his flaccid cock.\n\n\"Told you your little man would be back up in time for the second hour,\" Madam Voluptula said with bubbly laughter.\n\nShe turned her attentions to his limbs. She wedged his arm tightly between her inner thighs and rubbed her sex up and down against him. He felt wetness and wasn't sure whether it was massage oil or her own juices. She brought his hand up and squeezed it between her breasts. She repeated the motions with his other arm before moving onto his legs. While straddling his thigh she lifted his foot up and pressed it against her chest. He wriggled his toes, relishing the warmth, softness and elasticity he felt underneath.\n\nMadam Voluptula turned on her back and continued to slide over him. This time it was her soft ass rubbing against him.\n\nSo relaxing, Kevin thought. All the tension, even the shock of the gang invasion, had flowed out of him as though he'd melted into a blissful puddle.\n\n\"Don't get too relaxed,\" Madam Voluptula whispered. \"I want that cock hard for some high intensity fucking.\"\n\nShe flipped him over onto his back. There were definitely signs of life in his penis. It had reared up in a stubby little erection. Not quite all the way there, but working on it.\n\nMadam Voluptula lay between his legs and blew on Kevin's cock. It gave a twitch and more blood flowed into his shaft. Another blow and his erection was straining at its maximum length.\n\n\"That's a good little boy,\" Madam Voluptula said, giving Kevin's hard-on a playful pat.\n\nShe slid over to a bedside table and retrieved a foil condom wrapper from a wooden bowl.\n\n\"Time to demonstrate my naughtier skills,\" Madam Voluptula said with an even naughtier wink.\n\nShe put the condom in her mouth, bobbed her head down and administered the latex prophylactic to Kevin's erection in one smooth motion.\n\nThen she began to suck.\n\nA tremor ran through Kevin. He'd heard the expression mouth like a Hoover, but had thought it hyperbole . . . until now. Madam Voluptula really could suck. Her cheeks sank in as she wrapped her plush lips around him. She sucked on him as though his member was a delicious ice lolly. Then she released him with a wet smacking sound.\n\n\"Oh, look at the time,\" she said. \"It's time for the second hour.\"\n\nShe went back down on him for an even more vigorous blowjob. Wow, Kevin thought. If he'd thought she had a mouth like a Hoover before, what was this\u2014a custom vacuum machine designed exclusively for male pleasure? Her cheeks puffed in and out. Her lips brushed up and down. Kevin trembled uncontrollably beneath her as she sucked on his cock.\n\nShe lowered her head all the way down, taking the full length of his fully erect cock into her mouth until the back of her throat was squeezing the sensitive tip and her luscious lips were pressed to his crotch. She rose up, letting her sensuous lips brush up his shaft. Up, down; she increased his arousal with each slow, tender stroke.\n\nShe was so good.\n\nFuck. It felt so good.\n\nKevin thought he was going to come, but Madam Voluptula released his cock completely just as he approached the cusp of orgasm. Blue eyes sparkling, she lay next to him on the bed. Her hand caressed his chest.\n\nHe wanted her to touch his cock. It stood up like a pole\u2014throbbing and craving attention. He moved his right hand towards it without even realising he was doing it.\n\nMadam Voluptula batted his hand away. \"On this bed your penis is mine and I don't share.\"\n\n\"Sorry,\" Kevin said. Chastised, he laid his hand flat on the mattress next to him.\n\n\"Touch my body instead.\"\n\nShe took his other hand and placed it on her breast. The flesh was warm and malleable. He brushed his fingers against her erect nipple. He could touch this all day, Kevin thought.\n\nStill with Kevin's hand on her breast, Madam Voluptula got up on her knees and had Kevin do the same behind her. He placed his right hand on her other breast and gently squeezed. Her voluminous blonde hair was in his face. He expected to smell hairspray and other chemicals, but instead it smelt fresh and natural. Her hair felt silky-smooth against his cheeks. He explored her body with his hands, feeling her lush contours beneath his fingertips. Despite her tanned appearance her skin was baby-smooth. She encouraged him to explore lower, until his forefinger was sliding along the groove of her sex. She was dripping wet and her intimate flesh was feverishly hot to the touch. She placed her hand over his and used her fingers to bend his forefinger up between the folds of her pussy. It was like her vagina had sucked his finger up into a hot damp hole. Once inside he felt her contract around him until her sex was a tight fit for even something as slender as his finger. At the same time she pressed her ass back against him. A wiggle of her hips and Kevin's erection was sliding in the groove between her butt cheeks.\n\nShe extricated herself from his arms and moved forwards on the bed. She dropped down on all fours, looked back at Kevin and growled.\n\n\"Come and fuck me, you naughty boy.\"\n\nShe wiggled her ass enticingly. She placed a hand palm-flat against her sex and gave him a come hither gesture with her finger.\n\nSo, doggy style. Kevin was a little apprehensive. At college a girl he was in the process of getting to know really well had asked to have sex in that position. Getting the angles right had turned out to be a little harder than it first appeared. He'd botched it utterly. And another girl had placed him in the 'does not exist' zone.\n\nWith Madam Voluptula he needn't have worried at all. She reached between her legs, took hold of his cock and fed it into her hungry sex. She was just as tight around him as she'd been with her finger. He placed hands on her hips and began to pump back and forth.\n\n\"That's it. Fuck me hard, you filthy boy.\"\n\nMadam Voluptula added her own movements to their coupling. She braced against the bed and rocked back against him. Harder. Faster. Her lush ass slammed hard against him. Kevin stopped his movements and simply kneeled there. He didn't want to fuck up Madam Voluptula's rhythm. Instead he tried to hang on while her delectable ass slammed against him. Inside, the friction from her vaginal walls was stoking the fires in his balls higher and higher.\n\nIt was already amazing, but then she began to do all kinds of twisty things with her spine to tilt her ass. He corkscrewed back and forth inside her and each movement of her spine changed the angle until it felt like every part of his penis had been exposed to the luscious stroking motions of her vagina. Fuck, that was totally blowing his mind.\n\nAnd other things.\n\nOh yes.\n\nThen, just as Kevin felt he was about to boil over, Madam Voluptula continued her latest forward motion until she slid right off his throbbing cock. She turned it into an elegant roll and turn that left her sitting on the pile of pillows at the head of the bed and facing him.\n\nShe smiled and blew him a kiss.\n\nKevin's cock throbbed in frustration. So close. Instinctively his fingers curled around and he moved his hand towards his twitching hard-on.\n\nMadam Voluptula wagged a finger.\n\n\"Only I'm allowed to touch your penis here,\" she reminded him.\n\nKevin brought his misbehaving hand back under control.\n\nAs flexible as a gymnast, Madam Voluptula opened her legs wide. Breathing heavily, she reached down and rubbed a hand against her sex. Her ample chest heaved up and down with the movements of her hand. Her fingers formed an upside down v and parted the lips of her pussy to reveal the glistening red interior.\n\nKevin shuffled forwards. His erection twitched, eager to be planted in the target presented to it.\n\nThe corner of Madam Voluptula's lips turned up in an impish smile. She closed her legs, blocking his path.\n\n\"I'm starting to get the impression you're teasing me,\" Kevin said.\n\nMadam Voluptula's smile grew wider. She stretched out a leg and ran her pretty pink toes up and down Kevin's thigh.\n\n\"You've watched porn films,\" she said. \"They always go through multiple positions in every scene. I wouldn't be giving you a good Porn star Experience if I let you shoot your load during the very first position we tried out.\"\n\nKevin understood the logic and accepted it.\n\nHis dick, craving any kind of touch, raged against it.\n\nMadam Voluptula moved her foot inwards. Her toes tickled against the softer skin of his inner thigh. She moved further inward, enough for Kevin to thrill with excitement at the prospect of those delicate little toes rubbing up and down his shaft.\n\nShe denied him again. Her foot changed course at the last minute and all she did was lightly tickle the underside of his scrotal sac with her big toe. She moved her foot over to his other thigh and rubbed it up and down.\n\n\"You're really evil with this, you know,\" Kevin said.\n\nMadam Voluptula laughed and showed her perfect teeth. \"I'm a really bad girl,\" she said in a husky voice. \"Actually this is one of my favourite sexual techniques. I give the man short, fast bursts of sexual pleasure, but always stop right before the edge. It allows the arousal to build and build so the release is so much more powerful at the end.\"\n\n\"Powerful?\"\n\n\"Oh yes,\" Madam Voluptula said. She ran a tongue around her moist red lips. \"You're going to come like you've never come before in your life.\"\n\nShe swung her legs apart. Her fingers parted her plump labia.\n\n\"Come inside, said the succubus to her squeeze toy,\" she purred.\n\nKevin needed no further invitation. He shuffled forwards on his knees, pressed the swollen head of his cock between the folds of her vagina and sank down into the luscious warmth. Oh yes. That felt so good. His dick didn't want to leave.\n\nMadam Voluptula didn't want his dick to leave either. She brought her legs together and wrapped them around Kevin. Her movements caused the intimate flesh of her sex to squeeze up around his cock.\n\nHe closed his eyes and moaned. He moved his hips back and forth. His cock slid back and forth inside her sultry tightness.\n\nIf he thought he'd have full control in this position he was mistaken. Beneath him Madam Voluptula flexed her hips and bounced against him with short but powerful thrusts. They grew faster and stronger until once again Kevin felt like he was hanging on to a rocket.\n\nMadam Voluptula bared her teeth. Her hips crashed into him. How was she even able to do that? Kevin thought. She must have twice as many vertebrae as a normal person. She gave his cock a thorough working over until it felt like it had been buffeted into a kind of sensual stupor.\n\nShe wrapped her legs tighter around him and squeezed with thighs that were stronger than her curvaceous figure suggested. She pressed her hips up against him until he was all the way inside her and her plump labia were squashed against him. Her vagina contracted and she squeezed him.\n\nKevin closed his eyes. This was it.\n\nAnd then it wasn't.\n\nMadam Voluptula relaxed her pussy and then slithered out from underneath him as though she was an eel dipped in oil. Her speed caught Kevin by surprise. He fell forward onto the mattress.\n\nHe didn't even get a chance to land on it. Madam Voluptula was greased lightning. She flipped him over and straddled his belly all in one smooth motion. Her legs hooked over his thighs and pinned his legs to the soft mattress underneath. His involuntary bucking motions were stilled. Starved of sensation, his frustrated cock fell back from the peak of release. Again.\n\nMadam Voluptula's red lips parted in a wide smile.\n\nKevin realised he was pinned to the mattress and it had all happened in the blink of an eye. He suspected if he ever had to face Madam Voluptula in a wrestling or judo bout she'd have him on his ass before the echoes of the starting bell had faded away.\n\n\"You always seem to know the right moment to stop. How is that?\" Kevin asked.\n\n\"Practise, experience, and a little something else.\" She placed a finger on her nose.\n\nShe glanced back over her shoulder at Kevin's frustrated cock.\n\n\"Mmm, I'm really looking forward to feeling him blow inside me.\"\n\n\"You're driving me crazy by not allow him to blow,\" Kevin said.\n\nHis cock bobbed back and forth, seeking sensation and finding none.\n\n\"That's the whole point,\" she laughed.\n\nHer laughter made him think of bubbly champagne.\n\n\"Mmm, but you won't have to suffer for much longer. We're approaching the hour. This is the last cool down period, I promise,\" she said.\n\nShe spent a couple of minutes lightly running her long nails over his chest. It felt gloriously erotic even as his cock wailed in frustrated jealousy.\n\nDon't touch there, touch me, it screamed in Kevin's head.\n\nMadam Voluptula lifted her body up off Kevin and moved down until she was level with his waist. She reached back and wrapped a hand around his cock. She positioned herself so her sex was right above his member. Warm juices dripped from her vagina.\n\n\"Are you ready to be ridden to the biggest orgasm of your life?\" she asked.\n\n\"Fuck yeah!\"\n\nNope. He wasn't.\n\nThere was no way he could ever be ready for this.\n\nMadam Voluptula lowered herself down on him. Her sex puffed out and swallowed his erection. Slowly. Teasingly. She lowered her body down until their hips met. A froth of fluids bubbled out of her pussy. She murmured in pleasure as her sex pulsed around his cock.\n\nThen she started to ride him. Slow at first, but then picking up speed and power until her body was slapping against him and the whole bed was swaying beneath them.\n\nMadam Voluptula bared her teeth in a mock snarl. \"I'm on top now.\"\n\nHer hips rose up and down, slamming against him as hard as if she was trying to drive him through the soft mattress.\n\n\"I'm going to fuck all that filthy semen right out of you.\"\n\nShe sighed as her heavy breasts swayed back and forth.\n\n\"Suck it all out of you. Mmm. Suck out all of you.\"\n\nYes, this was definitely the Porn Star Experience, Kevin thought. Wild and raunchy. High energy. She'd completely flattened him to the mattress.\n\nShe varied her movements, again doing those strange bendy, twisty things with her spine that caused Kevin's cock to corkscrew inside her and sent crackling sparks down his shaft. His arousal rose higher and higher. He couldn't keep hold this time. He was going to . . .\n\nMadam rose up and held her pose. Her vagina dilated and went slack around him. Again he subsided from the brink.\n\n\"Not yet,\" Madam Voluptula said.\n\nKevin writhed beneath her. The tension in his bollocks was growing unbearable. His throbbing cock felt like it had grown to five times its usual size.\n\nStill straddling him, Madam Voluptula twerked her ass and gave Kevin's cock a few swift pumps. His balls frothed up, but again, just before the release he craved, Madam Voluptula lifted her ass and let her pussy dilate.\n\n\"Hold on,\" she said.\n\nPump, pump, pump, pause.\n\n\"A little longer.\"\n\nPump, pump, pump, pause.\n\nKevin wasn't sure if he could last a little longer. He felt like a bomb about to explode.\n\n\"Soon.\"\n\nPump, pump, pump, pump!\n\nThis time Madam Voluptula didn't pause. She came back down until Kevin's cock was all the way inside her. A froth of juices poured out of her sex and formed dew drops on Kevin's pubic hair. Again it felt like her soft flesh was folding inwards, drawing\u2014sucking\u2014him up deeper inside her. Pressing up against him. Squeezing.\n\n\"Now,\" she whispered.\n\nKevin let out a loud groan as his testicles finally boiled over. It would have sounded ridiculous and overblown to anyone listening. Kevin didn't care. He'd been sucked too deep into the moment. His body bucked and spat a massive load inside her. It went on for far longer than any ejaculation Kevin had ever felt. His member convulsed and shuddered as it emptied the contents of his balls into her fleshy warmth.\n\nMadam Voluptula closed her eyes and sighed. She wiggled her ass up and down. Her tender flesh stroked and pulsed.\n\nKevin emptied again. The intensity and unexpectedness of it caught him by surprise. His whole body was pouring effort into his ejaculation. Perspiration rose up on his forehead and his hips bucked hard enough to bounce Madam Voluptula.\n\n\"Ooh, frisky,\" she said. \"I like that.\"\n\nShe slammed her hips back down, driving Kevin down into the soft mattress. She leant over and used her hands to pin his shoulders back to the silk sheets. Her pussy spasmed around him. It felt like both a squeeze and a tug.\n\nKevin's orgasm peaked again and semen gushed up his shaft. He couldn't tell if this was his third orgasm or a single, massive one with multiple peaks. The excessive stimulation was frazzling his other senses. He looked up at Madam Voluptula and his vision went blurry. For a moment he thought there was something else occupying the same space and time as her. She was also surrounded in a red glow that looked like St Elmo's fire. Him too.\n\n\"And now for the finale,\" Madam Voluptula said. There was a predatory glint in her blue eyes.\n\nShe gripped him tightly with her thighs. She folded her body over his and flopped down on him. Her big soft tits hit his chest like airbags. She wrapped her arms around him in a tight hug while her moist lips rained hot kisses on his throat. Her ass rose up and down, driving Kevin to an even higher peak of arousal. His ejaculation became a massive geyser of pleasure.\n\nHe looked up in the mirror on the ceiling and his eyes widened. Fuck, he really was tripping out. He saw Madam Voluptula lying on top of him, but she was different. A red something, long and slender like a whip, was swishing around by her lovely round ass. He thought it was a snake until he realised it was a tail. A small set of leathery red wings fluttered between her shoulder blades. And he saw little red devil horns rising up out of her mass of silky blonde hair.\n\nHe was tripping out. She'd fucked him so hard he'd blown something in his brain.\n\nHe reached up to touch where he saw horns emerge from her big blonde hair. Madam Voluptula grabbed his wrist and gently but firmly placed it back down amongst the ruffled sheets. Then she pressed hot lips to his and Kevin forgot about everything else as she kissed him.\n\nKevin's bucks grew weaker, as though he'd run a long race and was now struggling to find the energy to cross the finishing line. The orgasmic peaks of pleasure subsided lower and lower. Finally Madam Voluptula stopped pumping her gorgeous ass up and down. The walls of her sex continued to flutter around him, as though she was drawing out the last dregs of semen.\n\nThen that was it and they lay entwined in each other's arms, breathing hard and dripping with sweat. Well, it was mostly Kevin breathing hard. He didn't understand that. Madam Voluptula had been the active one. Far more active than him anyway.\n\nShe gave him a light peck on the lips and then disentangled from his body. Kevin lay motionless on the bed and stared up in the big mirror while he tried to get his breath back. She hadn't been joking when she'd told him she was going to suck it all out of him. He felt like he'd been run over by a steamroller made out of strippers.",
        "Madam Voluptula looked up at the clock. \"Perfect timing,\" she said, as perky as if she'd done nothing more strenuous than have a light chat for the past couple of hours.\n\nKevin followed her gaze. The minute hand was just ticking up to the hour.\n\nShe fetched some tissues from a bedside table and attended to Kevin's crotch. Again he noticed the amount of cum in the teat of his condom seemed far less than he thought it would be. He felt like he'd come pints, not that little dribble. Then he noticed the dribble seemed to be on the outside as well and anxiety clutched at his heart.\n\n\"Did it split?\" he asked, concerned.\n\n\"No, looks fine to me,\" Madam Voluptula said.\n\nShe rolled the latex sheath off his penis in one smooth motion and wrapped it up in a white tissue.\n\n\"I thought I saw some on the outside,\" Kevin said.\n\n\"That's mine,\" Madam Voluptula as she cleaned him off with some wet wipes. She looked at him and smiled. \"I came as well.\"\n\nShe got up off the bed and dropped the litter in a small bin by the side of the bed.\n\n\"That's it. Time's up, I'm afraid,\" she said. \"Did you enjoy it?\"\n\nKevin nodded his head. He pushed himself to the edge of the bed. It was more difficult than it looked. He felt knackered and the soft mattress pulled at him like a quagmire. He got his legs over the edge and as he struggled to sit up he caught a glimpse of Madam Voluptula in the mirror on the ceiling.\n\nWas that a tail? That was weird. For a moment he thought he saw a red devil's tail swinging behind her. He looked at her directly. Nothing there. No tail.\n\n\"Anything the matter?\" Madam Voluptula asked.\n\nKevin caught a strange undertone to both her voice and glance. He had the weird premonition that if he reacted in any other way than assuming it was a trick of his imagination, he wouldn't leave this room.\n\nStupid brain misfiring on him. Of course it was his imagination.\n\nHe shook his head. \"I'm pooped,\" he said. \"You wore me out.\"\n\nMadam Voluptula laughed. \"More gym work, that's what you need. Good sex is hard exercise.\"\n\nShe showed off her toned body. If Kevin hadn't been comprehensively squeezed out he might have got another stiffy.\n\nShe handed him a towel and he took a quick shower while she put on fresh lingerie.\n\n\"So you'll be back next holidays?\" Madam Voluptula said.\n\n\"Definitely,\" Kevin said. She was expensive, but then so was beer. If he skipped the odd night out on the piss he reckoned he could put the money aside. It was worth it. And potentially better for him\u2014there'd been a few too many late nights partying that first year.\n\n\"Oh good. I like a satisfied customer. They always come back for more.\"\n\nMadam Voluptula put an arm around his waist and led him out of her pink room.\n\n\"If you don't mind me saying, I noticed you were a little hesitant and unconfident at times in there,\" she said quietly in his ear.\n\nKevin grimaced. \"Some less than stellar experiences.\"\n\n\"That's all part of the learning process,\" Madam Voluptula said. \"Would I be right in also assuming you're single? Yes, you must be. You're not the type to visit someone like me if you already have a pretty young thing to share your bed at night.\"\n\nKevin nodded.\n\n\"And let me guess, this is related to those less than stellar experiences.\"\n\nKevin grimaced again. \"That obvious?\"\n\n\"I have a lot of experience.\"\n\nMadam Voluptula paused.\n\n\"Mmm, that gives me an idea for our next session. I'll show you some techniques guaranteed to drive a girl wild. That way, the next time you find yourself in bed with a girl you like, you can be confident of giving her an unforgettable sexual experience.\"\n\nKevin's ears pricked up. Okay he was definitely starting a fund to save up for the next time he was back for the holidays.\n\nMadam Voluptula kissed him lightly on the cheek. \"Until next time,\" she whispered. \"Lois will show you out.\"\n\nShe left him and headed up the stairs. Kevin walked on through to the lounge where Lois was waiting for him. She took one look at him and put a hand in front of her mouth to stifle a laugh.\n\n\"That bad, huh?\"\n\n\"I thought you were being a little ambitious when you asked Madam Voluptula for a Porn Star Experience on your first visit.\"\n\n\"Tell me about it. I think I just got ambushed by a gang of nymphomaniac ninjas.\"\n\nShe handed him a glass of water and Kevin gratefully downed it in one gulp.\n\n\"She's certainly experienced,\" he said.\n\n\"Very,\" Lois said. \"She's also really nice, despite what she is.\"\n\nShe showed him out through the front door. He paused before leaving.\n\n\"Hey, I hope it all works out okay for you,\" he said.\n\n\"Thanks,\" Lois said. \"Same for you.\"\n\n\"Maybe we'll see each other around sometime.\"\n\nLois smiled. Her big green eyes shone when she did that. \"Maybe.\"\n\nShe closed the door behind him. Kevin took a deep breath. Wow, that had gone way better than even his most hopeful fantasies. It could have gone wrong in all sorts of different ways, especially after those thugs had shown up, but instead it had been amazing.\n\nHe'd been really lucky there.\n\nAs he turned to leave he noticed three bin bags lined up along the wall next to the front door. The closest hadn't been tied up properly and had come undone. It looked like someone was throwing out some old Christmas trees, or maybe some dead houseplants. A withered brown branch stuck up out of the top. Funny, it looked a little like someone's hand all curled up and shrivelled like a head hunter's trophy.\n\nHe saw a piece of black cloth as well. There was some kind of pattern on it. White.\n\nHe thought about stepping over to take a closer look.\n\nA light blinked on in a second story window above him.\n\nKevin changed his mind. Nothing good would come of taking a look inside that bag. He hurried on and tried not to think about it, or the two other bags sitting next to it.\n\nThe white pattern on the black cloth had looked like skulls and crossbones.\n\n*\n\nAUTHOR'S NOTE\n\nThis is for Literotica's Halloween competition. If you enjoyed the story please leave a vote. "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "escort",
        "prostitute",
        "massage",
        "tease"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/what-kevin-did-last-summer"
}