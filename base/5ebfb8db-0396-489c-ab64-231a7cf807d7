{
    "title": "Time Rider Ch. 01",
    "pages": [
        "Disclaimer: All characters portrayed engaging in sexual activity are 18 years of age or older. Actual historical figures or living people represented are done strictly for context and humour, I lay no claim to them. As always, critiques and reviews all welcome, illiterate flames will be snickered at. Enjoy! \n\nChapter 1- Give A Monkey A Gun... \n\nMark sat in the chair in his bedroom by his computer desk, trying to look chastised, but he was worried that a tiny hint of an evil smirk was crossing his lips. He hung his head in the hopes it would be less noticeable. Standing in the room with him were two stone-faced men in black suits and dark glasses. They stared at him silently for several minutes before glancing at one another. Finally, the shorter one sighed. \n\n\"Okay, Mark,\" he said heavily. \"Once more, from the top. I want you to give us as detailed an account of what happened as you possibly can. Leave nothing out.\" \n\n\"Everything?\" Mark asked quietly. \n\n\"Everything.\" \n\n\"Well, as long as you think you have the time.\" Mark quipped, sitting up straight and leaning back in his chair somewhat casually. \n\nThe tall man frowned. \"Was that a joke?\" \n\n\"Not a very good one, apparently,\" Mark muttered. \n\n\"Stick to the facts,\" the man said firmly. \"We hate jokes.\" \n\n\"No kidding,\" Mark mused, settling in to relay the events he had already explained to them twice that evening. \"Alright, let me start at the beginning.\" \n\n\"Not funny, young man...\" growled the shorter agent. \n\n\"I found the thing in the park. What did you say it's called?\" Mark asked. \n\n\"A Holmes Field Device.\" \n\n\"Right,\" Mark agreed, nodding. \"I found the Holmes Field Device in the large lilac bushes over in Grosvenor Park.\" \n\n\"Why were you in the bushes?\" interrupted the tall man. \n\nMark gave him a wry look. \"I was making a drug deal. I was supplying uranium to Libyan terrorists. I was hiding the body of a transvestite hooker I killed. What does it matter? It's not your worry or jusrisdiction, if you're telling me the truth, is it?\" \n\n\"Fair enough,\" said the shorter agent amicably. \"Please proceed, Mark.\" \n\nMark nodded. \"It was really small and compact at first and I didn't know what it was. But it kinda gave off a hum and it almost had a glow, I dunno. I pulled it out of the bushes and over to a secluded area where there was still some light from nearby lamps. Anyway, I must've tripped a catch or something on it, because the thing folded out on itself into what looked like a platform and grew these weird-ass frames with displays and dials and buttons and shit. It was like something out of Star Trek.\" \n\n\"I can see how it might appear advanced to you,\" the shorter agent said, nodding. \"To my partner and I, it's rather primitive, but that's not your problem. Please proceed.\" \n\n\"Once I was sure that no one was around or likely to come through, I began fiddling around the the dials,\" Mark continued. \"At first I was confused, because it didn't seem to do much, except spit up weird numbers on the analogue screens, but then I thought about it and realized they were dates. They were just... off.\" \n\n\"Not off,\" the shorter man said. \"Just dates set by a different calendar, if you will. The Holmes Field Device was developed by Ashleigh Holmes, the younger brother of the more famous Sherlock and Mycroft, but he was perhaps even more brilliant. He modified the Gregorian calendar to account for leap years and Daylight Savings, changed the accounting of seconds, minutes, hours and so on to eliminate the need for such inconsistencies. The Holmes Calendar will be adopted eighty three years in your future, but it is so accurate that it won't need to be modfied until the year 12,645 AD.\" \n\n\"Huh.\" Mark said in response, not caring much. \n\n\"Oh, and he also invented the temporal displacement device you found,\" the man added. \"Although it'll be another two hundred and eight years before that comes to light.\" \n\n\"Anyways,\" Mark continued, killing the history lesson. \"Once I figured out they were dates and times, I tried setting the time back a few hours. After that, I started pushing some buttons. Things got blurry for just a split second and then the sun was blinding me. I was still alone, but I stepped off and looked around, still in the same spot, but obviously at a different time of day. I looked at the clock on my cellphone and it seemed to have adjusted to say it was six hours earlier, just like I'd set the dials.\" \n\n\"Your phone adjusted accordingly. Electronics will do that.\" \n\n\"I was really excited to look around but realized I didn't want to be caught and I suddenly thought I should be careful.\" \n\n\"What a novel idea,\" the tall man said dryly. \"Go on.\" \n\n\"Well, I went back to the Holmes Field thing and set it to take me back to the time I'd come from. And it did. Then I began thinking about what sort of things I might be able to do if I was careful.\" \n\n\"And this is where it got interesting, yes?\" the shorter agent remarked. \n\nMark nodded. \"Maybe I could change things. Not big things, but little things. It suddenly occurred to me the D that Miss Fischer gave me on my Physics exam earlier in the semester had kept me from getting into the university of choice I'd applied to. So I decided to see if I could fix that somehow...\" \n\n*** \n\nMark crept through the bushes under the cover of dark, oddly certain than no one was going to see him. He couldn't explain why, but he felt a confidence that he would not be discovered because he hadn't been there before. It didn't make sense, but maybe that was a good thing. \n\nHe knew where Miss Fischer lived, he'd seen her pull into the small, stand alone house in her Rav4 on many occasions. He slipped onto her property through her back yard, instrinctively knowing that her rear door would be unlocked. It was already ten o'clock, but there was no school the next day so she was still likely to be up. \n\nA stick snapped in the yard one lot ever. His head snapped around to see if he'd been spotted, but he didn't see anything. A dog began barking. Stupid animal scared the shit out of him. \n\nHe moved quietly across the lawn to the back door, opened it slowly and found himself in a small kitchen. It was darkexcept for a small night-light and he paused, listening for movment, hearing no one nearby. He stared in bewilderment at the sheer amount of organic cereals and grains that lined the counters around the room, along with fresh fruits and other nutritious snacks. No wonder she always seemed so perky, even if she was shy and retiring. \n\nBeyond the kitchen, he could see the living room and small dining room were still lit. He padded across the linoleum floor silently, hearing nothing. He peeked into the dining room and through it into the living room. \n\nNo one. There was a yoga mat on the floor in front of the long, flat-screen TV. The decor consisted of low tables and beanbag chairs others. Damn, this woman was crunchy... \n\nHe heard water running upstairs and some off-key singing. He crept up the steps to the second floor, preparing himself for what would no doubt be an awkward situation, but he couldn't shake the feeling that he needed to do this, whether he liked it or not. There was a shower happening and he now recognized Miss Fischer's voice. She seemed to be alone and her vehicle had been standing by itself in the driveway. If she was already showering, she wasn't going out again. \n\nMark approached the bathroom, noticing the door was wide open. He guessed that made sense, since Miss Fishcer had told the class more than once that she lived lamentably alone. She took the teasing from her students good-naturedly, but now he could confirm it. She was a bachelorette. \n\nShe was singing and he could hear the shower water splashing off her body as he hid beside the door. He couldn't believe he was doing this. He closed his eyes and took several deep breaths, calming his nerves before subtly peeking around the door and into the bathroom... \n\nThere was no tub, just a walk-in shower. His eyes went wide when he realized that she shower stall was composed of fog and steam-proof glass, giving him an almost completely uninterrupted view of the activities within. Except for the droplets of water that trickled down the treated glass panes, he could see his teacher in all her naked glory. Miss Fischer was facing away from him, running her fingers through her long, wet blonde hair, swaying her body back and forth, her amazing ass glistening wetly. \n\nHe turned out her rather painful singing of a Beyonce song and let his gaze travel up and down her womanly form. His heart thundered in his chest, to the place where he was worried she might hear it. Miss Fischer always dressed rather modestly at school and he was shocked to see what a rockin' bod she had. Clearly she hadn't been lying about the yoga and the crossfit she claimed to do. \n\nHer skin was fair, but not pale. Her shapely back tucked into a small waist, which in turn blossomed out into fit hips which were anchored by her amazing ass. Her long legs tapered down to tiny ankles. If he hadn't been so astonished and exhilarated, he would have had a massive hard-on by now. \n\n\"C'mon, turn around...\" he found himself urging her silently. \n\nMiss Fischer obliged and Mark thought he might faint. She'd always been pretty, of course, but Mark doubt that anyone at school would have guessed what a sex-pot their Physics teacher was. Where the hell had she been keeping those tits?! Did she fucking strap them down? They were large, yet perky. The tiny pink nipples sat atop them proudly, announcing the arrival of their mistress right behind them. Her stomach was flat, but still soft, begging to be kissed. He forced himself to look lower and saw that her pussy was shaved except for the small strip of trimmed hair above. The netherlips were even and not quite plump, but still dismissed any worries of a bony thigh-gap. Her clit hood barely peeked out over the top. \n\n\"Fucking fuck...\" he thought, his mind racing. \"Who knew Miss Fischer was so insanely hot?\" \n\nHe watched rapt, utterly forgetting that she might see him if she happened to look his way. The blonde seemed to have no interest in life beyond those glass panes, however, as she caressed her body slowly, making sure she was cleansed of her organic craft shower gel. Her manicured hands glided up and down her lovely body while she closed her eyes, letting the water from the showerhead rinse it away. \n\nAs Mark watched, she kept her eyes closed but bit her lip gently, one of her hands moving up to slowly and gently caress her breasts while the other snaked its way down her stomach and between her legs to begin playing with her pussy. A quiet sigh escaped her mouth and Mark felt his cock rapidly swelling inside his jeans. \n\nThe teacher pressed her forehead against the glass, her eyes still closed. Her hand massaged her ample breasts while the hand between her legs moved up and down slowly, massaging the lips. Mark swallowed and adjusted his cock inside his pants as he watched intently, unable to believe he was being treated to this incredible show. Another moan escaped her lips as she pleasured herself and began pinching one of her nipples. \n\nIt took all of Mark's willpower to not pull his member out and begin stroking it on the spot, because he had other plans. Miss Fischer, not so constrained, continued to finger her pussy until she was panting. She stopped suddenly and reached up to pull the detachable showerhead off its arm and brought it down to her body. She hummed as she let the stiff streams beat against her shoulders and then her breasts. Mark could see her already hard nipples getting ever harder. \n\nShe then slowly moved the showerhead down her sensual form, over her trim stomach and between her legs. She let out a loud sigh as the water battered her lips and clit. She turned herself around again, pressing her ass cheeks against the glass while she put the showerhead under her pussy to continually stimulate it. Her cheeks squirmed rhythmically around on the glass pane as she jet-fucked herself. Mark watched in disbelief as one hand came back behind and spread her cheeks to play with her little, puckered knot. \n\nMiss Fischer let out a grunt as her middle finger slid inside her ass while the showerhead continued to bombard her pussy with its tiny jets. Mark gripped the front of his pants again, unable to resist, giving himself a squeeze. He sincerely hoped she wouldn't last much longer, because he wasn't sure he would if she kept this up. \n\nFortunately for Mark, his teacher did not seem terribly interested in delaying her reward. The squirming became more pronounced and she groaned as her body began to tremble and then shake. Her finger was working itself in and out of her ass faster and faster while the showerhead was almost crushed to her pussylips. \n\nShe let out a gasp and a cry before falling to her knees, her body almost spasming as she came. Mark gritted his teeth as he watched, desperately willing himself to not massage his cock and join her in autoerotic bliss. The restraint would be worth it. He removed his hand and settled for squeezing the doorframe while watching his teacher. Miss Fischer slowly leaned forward until she her head was on the floor, her ass in the air. She moved the shower jets slowly up and down over her molten sex while her finger teased her ring. He listened to her panting and sighing as she started to come down from what was a clearly badly-needed orgasm. \n\nMark couldn't wait much longer or he'd lose his nerve. He quietly stepped into the bathroom and started to head toward the shower. Miss Fischer had finally moved up back into a kneeling position, still facing away from him and taking slow, deep breaths. She then got to her feet and replaced the showerhead back in its arm above her. She rinsed her face and body again before turning off the water. \n\nSilently, Mark waited off to the side while she slid open the door and stepped out somewhat awkwardly, trying to get her long, wet hair out of her face. She groped around blindly for several moments and Mark realized she'd forgotten where she put her towel. He handed her a hand towel which she absently took and wiped her face with before pushing her hair back. Mark meanwhile handed her a full-sized body towel. \n\n\"Thank you, Mark,\" she said pleasantly. \"I'm always- MARK!!\" \n\nThis last bit was exclaimed loudly and she slammed herself back against the opposite wall from him, her eyes wide with utter shock. Both towels she'd been holding flew from her grip, leaving her naked and dripping wet. He had no idea why, but he tried to maintain eye contact with her. \n\n\"Uh... hi, Miss Fischer,\" he said somewhat awkwardly before swallowing. \"Uh... nice shower you've got there.\" \n\nSome of her wits seemed to return and she realized she was standing naked in front of one of her students. She moved her hands about haphazardly, making several comical attempts to cover herself, eyes still wide and mouth agape. \n\n\"Wh... wha... y... you...\" she stammered. \n\n\"Yeah, I didn't exactly expect to be here either,\" he admitted, rubbing the back of his neck. \"First of all, don't scream or anything. I'm not here to-\" \n\n\"Then why are you here, you little pervert?\" she hissed, finally regaining control of her vocal chords. \"Get the fuck out and I'll possibly consider not calling the police!\" \n\n\"I... can't...\" he admitted weakly. \n\nShe frowned and looked down at his legs, choosing to ignore the rather obvious bulge in the front of his pants. \"Your legs work just fine, young man, but I'll tell you what's not going to after I've kicked you there if you don't get out of my house.\" \n\n\"No, I...\" he began but then realized he didn't quite know how to articulate what he wanted to say. What the hell had he been thinking, doing any of this? \n\nHe finally bent over and picked up the large body towel she'd lost and handed it to her. \"Maybe... I guess you should put this on first...\" \n\nShe snatched it away from him and wrapped it around her body, but if he'd been hoping this made her more amenable to his presence then he'd been wrong. What did happen was her eyes began to blaze with fury as she composed herself. \n\n\"So help me, Mister Simmons,\" she growled as she advanced on him menacingly, her near-nudity forgotten. The towel did very little to conceal her buxom figure. \"If you don't tell me right this instant what the hell you are doing in my house, watching me take a shower, I'll show you exactly what crossfit has done for me, along with the jiu-jutsu classes. You'll be wishing I'd called the cops.\" \n\nMark held up his hands, hoping to calm her. \"There's no need for that, teach, I-\" \n\n\"Don't call me that off school grounds,\" she snapped, still moving toward him until it was Mark backed up against the wall. \"Ex-plain your-self...\" \n\nMark swallowed again, fearing for his well-being. He'd been so much smoother when he thought this over in his head earlier. \"You... you failed me on the Phsyics exam.\" \n\nShe paused in her menacing advance for a moment and raised an eyebrow. \"Your exam isn't for another two months. Irrelevant. Why are you creeping on me?\" \n\n\"I know it isn't,\" he said hastily. \"But... you're going to fail me.\" \n\n\"Then maybe you should be back home studying instead of breaking into my house,\" she snapped, getting ready to beat him senseless. This wasn't like him, but that was no excuse for endangering her. \"Last chance and then it's night-night time with my fist in your brain.\" \n\nMark squeezed his eyes shut, trying to compose himself. His heart was pounding so hard that he wasn't sure he'd ever be able to get another erection again. \"It... I can't explain it if I think you're going to kill me! Please stop threatening to kill me and I'll tell you.\" \n\nShe stopped cornering him and paused, looking annoyed and skeptical. \"This'd better be good, because you're either going to find yourself punched unconscious by a girl or talking to the cops. Explain and then you get your choice.\" \n\n\"It's... actually really good,\" Mark breathed. \"I'm not me. I mean, I'm me, but not the me you know.\" \n\n\"A doppleganger?\" she asked dryly, not amused. \"Lay off the sci-fi and anime, Mark, it's making you too stupid for physics.\" \n\n\"No, I...\" he paused and took another deep breath. \"I'm Mark from this coming up summer.\" \n\n\"Oh, you're a time-traveller now, are you?\" she mused snidely. \"So tell me, since you already know... do I eat your heart or your liver tomorrow with my afternoon salad?\" \n\n\"Look, look...\" he said, trying to keep his voice from pissing itself in fear as he reached into his wallet. \"Look, here's my new voter ID that I got just after my birthday.\" \n\nHe held it out for her to look at. She glanced at it and then up at him, clearly not impressed. \"Y'know, other kids fake their ID's to say they're old enough to drink. This one just says you're now eighteen. No wonder you're failing physics, you can't even fake an ID right.\" \n\n\"Gn, no, I...\" Mark stammered, frustrated with how badly he was fucking up. \"I can't help when I'm from, I'm from three months in the future.\" \n\n\"Annnnd you're here to tell me I'm secretly pregnant with the man who will lead us to victory over the AI machines?\" she sneered. She cracked her knuckles. \"It's a pity, you actually were a pretty good-looking kid before I did this to you...\" \n\n\"No,\" he blurted out. \"I came here to convince you to change my grade because the university I wanted to go to rejects me over that grade!\" \n\nShe paused for a moment. \"Ooookay, so why didn't you just study?\" \n\nHe shrugged nervously. \"I don't know. I can't do anything about that now. Except like this.\" \n\nMiss Fischer stopped and closed her eyes for a moment. This was the weirdest home invasion and rape she'd ever heard of. \"What?\" ",
        "\"Maybe... it was stupid of me to fail,\" Mark said. \"But that's my past. I can't change it directly. But I was hoping to come here and convince you to let me pass anyway.\" \n\n\"If for some reason I were inclined to believe that you were from the future, which I don't, by the way,\" she stated. \"Why would I change your grade if you don't deserve it? Maybe you shouldn't be going to university next year, maybe you need to, oh, I dont know, quit doing juvenile shit like this and grow the fuck up before you go out into the world?\" \n\n\"Can we... can we talk about this somewhere else?\" he asked nervously. \n\n\"No, I think we're good right here,\" she said flatly. \"You're backed into a corner and can't escape. But if I let you live, clearly you might have a job as a science fiction writer. Tell me more and keep it good.\" \n\n\"No, you'll kill me.\" Mark said, sweating profusely. \n\n\"I'm definitely going to kill you,\" she pointed out. \"But if your lie amuses me, I might make it quick and painless. Your choice. Annnnd go.\" \n\nMark didn't know if she was kidding or not, but he decided to treat the threat as real. \"I... I came here to seduce you and convince you to change my grade.\" \n\nMiss Fischer paused, her eyes widening. She said nothing for several seconds but then mirth creased her pretty features and she began to snicker. Seconds later, she was laughing loudly and uncontrollably. \n\n\"It's not funny.\" Mark grumbled, scowling darkly. \n\n\"Yes, yes it is...\" she wheezed, her outrage clearly giving way to utter amusement. \"Ohhhh, God... I almost wish this was true. There'd be so much less blood to get out of the grout on my floor...\" \n\nShe stood up and looked at him again, her eyes shining with tears. \"So let... let me get this straight... you came here to sex me up so good that I'd give you a passing grade you don't deserve?\" \n\nShe burst out laughing again, leaning against the sink to hold herself up. In spite of his predicament, he noticed her magnificent cleavage down the top of her towel. Miss Fischer seemed to have forgotten. \n\n\"I was a lot smoother in my plan for all this.\" he muttered. \n\n\"Oh, I'm sure you were, Mark,\" she said almost sympathetically as she looked up at him again, tear stains on her cheeks. She smiled and he couldn't help but notice she was beautiful. He really had no idea of how to proceed, even if the was committed at this point. \"So how's your plan working out so far?\" \n\n\"Fairly rotten,\" he said. \"I didn't know where I'd find you when I came in and then I saw you in the shower and just... well, I couldn't help but watch.\" \n\nWhat he was saying slowly dawned on her and he could see she was getting irate again. \n\n\"You stood there and watched me masturbate?\" she hissed, her eyes flashing. \"You little pervert!\" \n\n\"Take it as a compliment!\" he said hastily, wincing. \"You're really really pretty!\" \n\n\"And this is where you tell all the other boys at school, right?\" she growled. \n\n\"No,\" he said, shaking his head. \"I don't think anyone at school has any idea what sort of a knockout you are, miss. I mean, you dress pretty conservatively. Any of the girls who saw what I just did would be really jealous.\" \n\n\"Well, thank you for that, but that doesn't mean you're allowed to creep on me!\" she shot back. \"Honestly, why am I still letting you live, you little felon? Are you hoping the courts'll take it easy on you because you're not eighteen yet?\" \n\n\"I am eighteen,\" he insisted. \"I'll prove it.\" \n\n\"You're going to let me cut you open and count the rings?\" she asked. \n\n\"No, I...\" Mark began, his mind racing. \"Your dresser!\" \n\n\"What?\" \n\n\"Your dresser in your room,\" he said, nodding. \"In the back of the third top drawer, there's hand-written note from you to yourself about tonight. And to prove to yourself that it's true, you wrote down something only you know about yourself.\" \n\nShe paused and frowned at him for several seconds before stepping aside and allowing him out of the corner. She pointed out toward the hallway. \"March, mister. I'm not letting you out of my sight.\" \n\nMark exited the bathroom and walked down the hall to one of two bedrooms, which was currently dimly illuminated by a small Himalayan rock-salt lamp. She made him stand in the middle of the room and wait quietly while she began rummaging in the drawer he had mentioned. She seemed to have forgotten she was only wearing a towel or had stopped caring. \n\n\"You're mother's going to weep at your closed casket funeral after I bite your eyeballs out for staring at my ass.\" Miss Fischer said as she kept digging around while bent over. Mark coughed and looked away from her butt. \n\nShe finally stood upright, holding a small envelope she'd withdrawn from the back of the drawer. She frowned as she examined it for several seconds, as if she didn't recognize it. She looked at him again, her eyes narrowed suspiciously. \"You swear you've never been in my house before?\" \n\nHe nodded, placing one hand over his heart and the other in the air. \"Never, miss.\" \n\nShe considered and then unsealed the envelope, pulling out the single, folded page and began reading. \n\nWhatever she read caused her to sit, almost flump very suddenly on the edge of her bed, her eyes wide with disbelief. She looked at him and held the letter up in a trembling hand. \"Is this true?\" \n\nMark shrugged. \"You wrote whatever is in there, I have no idea. The only thing I can tell you that's true is what I already told you, Miss Fischer. I'm Mark from the summer and I've come back in time to convince you to change my grade so I can go to university.\" \n\nShe sat on the bed, looking dumbfounded. She said nothing for several seconds, staring off at the far wall blankly. She then looked back at him again and held up the page. \"I wrote this. I wrote this after I... after you and I...\" \n\nHe nodded. \"I'm assuming you did it to prove all this to yourself.\" \n\n\"How is this possible?\" she asked, still lost. \"How are you even here, if you're from the future and I'm not just bugshit nuts and hallucinating all this?\" \n\n\"I... I have a time machine.\" Mark replied. \n\n\"Really,\" she said, nonplussed, her shock fading rapidly. \"Just like that. A kid who can't pass high school physics has a time machine and can operate it.\" \n\n\"Well, yeah, that's how I ended up here.\" Mark reasoned. \n\n\"Show it to me.\" \n\n\"I will,\" he said, nodding. \"But first, I need to make sure you're going to pass me in that exam. Otherwise, all this means nothing.\" \n\n\"What, so let you fuck me and give you a passing grade?\" she asked, scowling. \"Why should I do all the work?\" \n\nMark frowned. \"First of all, you wouldn't be doing all the work, miss, thank you. Second, it's supposed to happen this way or I wouldn't be here.\" \n\n\"Bullshit,\" she snorted. \"For all you know, I sent you home with your dick in your hand and no passing grade.\" \n\n\"Then what was written on that paper that shocked you so much?\" he countered. \n\nMiss Fischer said nothing for several seconds but then looked back up at him. \"You're... you're sure you're eighteen right now? Because you aren't eighteen in my class.\" \n\nHe nodded. \n\n\"And you'll show me this time machine,\" she pressed, desperate to convince herself. \"After we...\" \n\nMark nodded again. \n\nMiss Fischer exhaled heavily. \"Give me a moment, this is a lot to take in.\" \n\n\"How so?\" he asked. \n\nShe scowled up at him. \"I'm about to fuck one of my students who's apparently a time-traveller and trade a passing grade for sex. What do you think is weird about this?\" \n\nHe shrugged. \"My whole evening's been weird, miss. I found that thing that turned out to be a time machine, then I-\" \n\n\"You just found it today?\" she exclaimed. \"And the first thing you did was decide to come back and fuck your physics teacher?\" \n\n\"Yeah, I kinda need that grade.\" Mark admitted. \n\nShe scowled again. \"So you came back in time and the principal reason isn't even to fuck me?\" \n\nMark pulled at his face for a moment as he tried to explain. \"It's like I said earlier, miss. No one at school knows how hot you are because you never show it. If you did, every guy and bi girl in the school would want to fuck you.\" \n\n\"Maybe I dress like that so I don't have a pack of little horndogs lusting after- oh...\" she murmured, catching herself and realizing she just defeated her own argument. Fluid time was rough to argue against. She sighed again. \"So, uh... how do we do this?\" \n\nMark scratched his head. \"I dunno. Nothing about this evening has gone the way I planned it, but we still ended up here. I guess we need to improvise.\" \n\nMiss Fischer considered. \"Well, you've seen me naked and doing myself, so I think we need to redress the scales,\" she sighed. \"So strip down and let me see what I'm selling my academic integrity for...\" \n\nMark felt an uncomfortably warm flush of embarrassment at her suggestion, but proceeded nonetheless. He had planned on getting naked with her anyway, even if had been under more sensual and controlled circumstances. Clearly he'd flopped at being the Casanova he'd intended on for seducing her and getting that perfect grade. \n\nHe started by removing his t-shirt, pulling it over his head while watched impassively. Mark was proud of his body, since he played sports, but was suddenly very self-conscious now that he'd seen how stupidly hot his teacher was. \n\nHe put a hand against the wall and steadied himself while he used his feet to pull his sneakers off. Then he undid his button and unzipped the fly on his jeans before letting them drop slowly, revealing his black boxers. \n\n\"Well, at least you're not wearing tightie-whities,\" Miss Fischer mused. \"That would've been a deal-breaker, for sure.\" \n\nMark paused, blushing as he realized he was about to pull down his boxers and fully expose himself to his teacher. He had to admit, this had never occured to him before tonight. \n\n\"Well don't wuss out now, Don Juan,\" she said somewhat impatiently. \"This was all your idea, after all.\" \n\nMark squeezed his eyes shut, hooked his thumbs into his boxers and pulled them down. All her heard was silence for several seconds. \n\nFinally there was a whistle from Miss Fischer. \"Okay, I can work with that. Come over here, Mark.\" \n\nAs he walked toward her, she stood and allowed her towel to fall away, revealing her body again. Mark's eyes went wide as she willingly revealed herself to him. He was no longer spying on her, this was something completely different. Miss Fischer stood directly in front of him, her body scant inches from his. She could see in his eyes that he was bewlidered by her sudden change in attitiude. \n\n\"Well, obviously I'm not going to tell you what the secret thing only I would know was, but the note also said I should just throw caution to the wind and enjoy myself,\" she said lightly, walking two fingernails up his chest and over his shoulder. \"And I try very hard to take my own advice.\" \n\n\"So,\" she declared, looking up into his eyes, her blue ones glinting. \"We are going to fuck. A lot. In return, I'm giving you an amazing grade on your exam, no matter how bad you do and you're showing me this time machine my letter confirmed exists. Do we have a deal?\" \n\nHe nodded. He was still nervous, but things seemed to have worked themselves out, even if it hadn't at all gone as he expected. But maybe that was time at work or some deep shit. \n\n\"My note also said I had such a great time that I insisted we keep fucking,\" she purred, her palm now running down his chest and over his stomach, perilously close to his nether regions. \"How does that sound.\" \n\nHe swallowed again. \"That... sounds great. So, do I keep travelling back here through time to meet you?\" \n\n\"Well, yes,\" she said rather obviously. \"I can't fuck the underage Alex in my class and I can't even give away that I know, right? He has to remain a blissfully unaware fuck-up.\" \n\n\"Yeah,\" Mark said somewhat awkwardly. \"Stupid kid...\" \n\n\"Oh, don't be like that,\" she said cheerfully, teasing her fingers over his cock and making him shudder. \"If you hadn't been a lazy grot this semester, you wouldn't have needed to come back to change your grade, wouldn't have seen me in the shower and known that I'm secretly a hottie and then fucked me and got an amazing grade, right?\" \n\n\"Yeah, I... I guess.\" Mark admitted. \"So we just need to set it up so that I keep coming back to meet you and we do this until we catch up with real-time in the future I come from?\" \n\n\"Yep, you're my new fuck-buddy,\" she said sweetly, now moving closer to him so that her nipples caressed his skin. \"Speaking of, you've got some work to do...\" \n\nWith that, Miss Fischer moved back to the bed and laid on it, her legs still over the side. She looked up at him seductively and spread her legs, exposing her pussy, which was glistening wet. \n\n\"You may not have earned that passing grade all semester,\" she said in a husky voice. \"But you're sure going to work for it now...\" \n\nMark moved forward, aware of the fact that his cock was swelling rapidly and knelt by the bed between her legs. He leaned in close and was instantly enchanted by the sight of her slick womanhood, which she now spread open with two fingers. \n\nMark leaned forward and pushed his tongue against his thick, slippery lips, guessing that she was not in the mood to be teased. His tongue snaked up and down before slithering over her clit, casing her to shudder and press her hips against his face. \n\n\"Gn, yes!\" she gasped, grasping his hair with the free hand and stroking his scalp. \"Thank God, you're not a virgin.\" \n\n\"No miss,\" he murmured as he kissed his way around her pussy, his tongue lapping at the lips. She tasted almost sweet and floral, such a big change from that slag Brenda. \"I know my-\" \n\n\"Call me Becky, darling,\" she sighed, slowly undulating her hips rhythmically against his face. \"If we're going to be lovers like this, save the 'Miss Fischer' stuff for roleplay.\" \n\n\"Yes miss- I mean, Becky.\" he replied from between her legs. He now put his hands on her thighs to brace himself and began licking her in earnest, for once looking forward to earning perfect marks on an exam. He could feel his hard-on pulsing and moved her leg slightly so it pressed up against him, causing him to shiver. Becky felt it and moved her shin back and forth slowly, teasing him. \n\n\"Oh, yes, Mark...\" she moaned, her fingers gripping her hair. She was sitting up on one elbow so she could look down at him and her leg that was not brushing against his cock was now on the bed, bent and spreading her wide. He couldn't believe how wet she was. It wasn't water from the shower, she was really turned on. Whatever she'd said to herself in that note had released a sex demon in her. \n\nHe swirled his tongue around her clit before burying it inside her pussy hungrily, eager to drive her into a frenzy. Becky clenched her teeth and ground her hips against his face now with a dreadful eagerness. Her skin was warm and getting moist as he tongue-fucked her. One hand snaked underneath her womanhood and the middle finger began teasing her tight, pink knot. \n\n\"Shit!\" Becky gasped, shuddering as he slid the finger into her tight back tunnel. \"You saw me fingering my ass in the shower! Gnnnn, fuck yes! Do it!\" \n\nMark sucked on her pussy while he wriggled his finger in her ass, feeling her shin massaging his cock eagerly. As angry as she'd been earlier, he was also thinking about her rather shy and retiring persona at school and decided to take a gamble. \n\nWithout saying anything, he stood up, bringing his face away from her crotch and his finger out of her ass. She gasped and whined, looking up at him in needy confusion, but he then reached down to take her arm and pull her off the bed and set her on her knees in front of him. Becky took his cock in her hand and still slid her tongue around the throbbing head while looking up at him through heavy-lidded eyes, glassy with desire. She teased him for a few more moments before sliding her lips all the way down his shaft, taking him completely inside her mouth. Mark groaned and clutched her wet, blonde hair, shivering. \n\nBecky began slowly bobbing back and forth, her mouth forming a perfect, wet seal around him. Her hand followed her mouth along his length, stroking and twisting the glistening skin gently. She hummed and moaned, vibrating his dick with her mouth and making him shudder again. The fingernails of her free nails gently grazed over the skin of his thighs, tingling. \n\n\"Jesus, Mi- Becky...\" he gasped. \"You're amazing at sucking cock!\" \n\n\"Mmmm, I would hope so,\" she purred, pulling her mouth off him long enough to smile up at him while her hand pumped his shaft to keep the rhythm. \"I watch a lot of videos and practice on some pretty life-like dildos, I'd like to think I'm doing something right.\" \n\n\"You are.\" Mark sighed as she attacked his cock again with her mouth. \"You're the best one I've ever had.\" \n\nShe made an 'Mmmmmm' sound around his dick, clearly enjoying what she was doing. She teased his sac with the hand that wasn't massaging his cock and reached around to caress and squeeze his ass cheeks. He couldn't believe what a libertine she was turning out to be, and he was the only one at school who knew! \n\nWhen she pulled her mouth off him again and looked up at him, he could see there was a deep and smouldering lust in the blue eyes, a need for deep sexual pleasure. She squeezed his cock with her hand and her voice was almost molten with lust when she spoke to him. \n\n\"I'm getting on the bed again and you're going to fuck me,\" she said huskily. \"You're going to make me cum real hard if you want that perfect exam score.\" \n\nShe clambered back on the bed, lying on her back and spreading her legs for him again. Mark followed her onto the mattress, kneeling between her legs. She massaged her pussy eagerly with one hand while he lined himself up with her netherlips. She spread them whide open, revealing her glistening inner pink. \n\n\"Fuck me, Mark,\" she purred, eyeing his pulsing cock. \"Fuck me good and hard...\" \n\nHe pressed the mushroom head of his dick against her pliant lips, sliding it up and down, teasing her for a moment and brushing over her clit. She sucked in her breath and hissed, her fingers stroking along his length as he toyed with her. Then she groaned loudly as he pushed his hips forward and slid deep inside with one solid push. Her inner walls gave way around his iron-hard shaft but squeezed him tightly. She felt great around him, as tight or tighter than any other girl he'd ever fucked. \n\n\"Yesssssssss,\" she hissed, her hand pulling him down to lean over her while one leg slung over his back and hooked itself there. \"Mmmm, that's a solid cock you have there, Mark. Now fuck me stupid...\" \n\nHe leaned forward and put his hands on either side of her body while keeping his weight suspended above her rather than pressed down. He looked into her eyes and began to push back and forth, moving his cock in and out of her. Becky bit her lip as she looked up at him, her fingernails digging slightly into his waist. She clenched her pussy around him as he pushed in and relaxed as he pulled back. \n\n\"Ohhhhh, God, I've missed the real thing...\" she moaned, her head falling back as she let the feelings of pleasure flow over her. \n\n\"Yeah, speaking of,\" Mark said, remembering this important point. \"I'm not using a condom here, so I'll need to pull-\" \n\n\"No you don't,\" she panted as she thrust her hips against him. \"You've got a fucking time machine, Mark. Think about it! Was I pregnant when the semester ended?\" \n\nHe thought about that as he kept thrusting into her, having a hard time concentrating on anything other than how tight and wet her pussy felt around him. \"N-no, I don't think so...\" \n\n\"Then cum in me!\" she gasped. \"I'm already better at this time stuff than you are! Now fuck me harder if you want that grade!\" ",
        "Mark nodded and thrust harder and faster against his teacher, watching her glorious body shake as he fucked her. Her incredible breasts wobbled and she squeezed one of them, moaning loudly. Her soft bed barely made a sound beneath them as he pistoned his hips up and down. After a disasterous beginning, his evening was going better than he could have possibly imagined. \n\n\"Gnnnnnn, now from behind,\" she breathed, starting to turn over. \"Fuck me from behind...\" \n\nMark grabbed her hips as she slithered around into her new position on her hands and knees and ground his cock against her pussy and ass, gripping her tight. Becky groaned shamelessly and squirmed her ass back against him, biting at her knuckle. She arched her back as he found her pussy and slid back inside her. She clearly wasn't interested in any slow buildup, because she began grinding back on him eagerly, getting him in as far as she could. He could feel the wetness of her pussy dripping on his thigh. \n\nHe kept his firm grip on her hips and began pounding against her, shuddering as she squeezed and clenched around him with fervour. \n\n\"Definitely tighter than Brenda!\" he thought as he thumped his hips to her ass cheeks. \n\nBecky was panting heavily as she buried her face in the pillow, her ass arched in the air. She gripped the pillow cover between her teeth almost tearing at it. A sheen of glistening sweat had formed on her soft, creamy ivory skin. She squeezed him with each thrust, his cock feeling bigger and bigger each time she did it. She'd missed this so badly, sacrificing her personal pleasure for the job. \n\nMaybe now she didn't have to. \n\nShe almost snarled in delight as he reached forward and wrapped her hair in his fist, pulling back and craning her neck. For an eighteen year-old boy, he was being marvellously assertive now that they'd found their rhythm. Becky loved having her hair pulled, but her favourite part was yet to come. \n\nShe pushed back hard and forced Mark onto his haunches. She straightened herself until she was sitting on his lap, facing away. Becky began bouncing up and down, panting as she sank onto his cock, taking it deep inside and squeezing it. Mark moaned and his hands came around to clutch her breasts, squeezing them hard. Her hands joined his in massaging and molesting them while they fucked. She had him pinned in one spot beneath her and she alone controlled the tempo now. \n\nShe moved her long blonde hair to one side and he understood immediately. He began kissing and biting at her neck, causing her to shudder and sending slivers of pleasure down her spine. She writhed and bounced on his lap with abandon, reveling in the sensation of a real cock deep inside her after all this time. She resisted the very strong urge to turn her head to the side and kiss him. Not just yet. \n\nWhen she felt the inklings of deep pleasure building inside her, she moved off his cock and pulled him around onto the bed, lying him on his back. Her eyes were fairly blazing with lust as she straddled him, lining her gooey pussy up with his throbbing hard-on. They both moaned loudly as she sank down onto him, his cock burying itself up to the hilt. Her fingernails dug into Mark's shoulders while she pinned him and she hissed as his hands found her breasts again. \n\n\"Yes, darling...\" she grunted as she began grinding herself down on him, shuddering at how deep he was inside her. \"Fuck me, thrust that cock up inside me, Mark. Fuuuuuck...\" \n\nMark pumped his hips up dutifully, matching her pace. He loved the cowboy position and clearly she did as well, but he knew he wouldn't last very long at this rate- she felt too good and was too tight for him to not bust before long. His hands fondled and mauled her lovely breasts before he pulled her down closer and took one of the pink nipples into his mouth, sucking on it greedily. Becky keened and shivered in delight. \n\nMark sucked and rolled his tongue around the pink bud, even biting and tugging on it, much to her pleasure, seemingly, because she got even wetter and tighter around his cock while they fucked. He could hear the wet sucking sounds her pussy made as it swollowed his member, feel her warm, sticky wetness on his thighs. He'd never imagined it would feel this good. He'd been certain earlier that most of his time would be spent conning his shy teacher into doing this at all, forget the grade issue. \n\nBut Miss Fischer was a sex-starved fiend, seemingly, and she was going to make him cum harder than he ever had before. Her golden hair fell around her lovely face, which was mere inches above his. Her eyes were closed as she concentrated on working her hips against him, up and down, his cock nearly all the way out of her before she took him back deep inside her steaming, slick tunnel. \n\nThey were both covered with sweat and ragged gasps were all they could manage as they gripped one another and writhed lustily, desperate to cum together. Mark gritted his teeth and was squeezing her breasts again while Becky pushed down harder and harder on his cock with each thrust. She began whimpering and shaking and Mark could feel her pussy clenching tighter and tighter with each moment. \n\n\"Oh, shit...\" she gasped, her whole body shuddering now as she pushed down feverishly. \"Oh, God, Mark, I'm-\" \n\nShe sat up straight and arched her back, teeth gritting as she fought to hold on for those last few precious moments... \n\nBecky almost screamed and Mark moaned loudly as the floodgates burst. His throbbing cock began pumping cum deep inside her and her pussy spasmed around rippled around him. Everything went black for Mark as he was enveloped by a tingling wamth of an intensity he'd never known before. He could feel his cock and even his balls spilling his entire offering into her slick, tight depths, both of them still thrusting against one another madly. \n\nBecky finally collapsed on top of Mark, her chest heaving. Her body was limp, almost like a wet dishrag. Mark lay beneath her, equally exhausted. His still-hard cock was buried in her pussy, and they could bothfeel their mingled essence oozing out of her and trickling down his shaft. Her soft, warm body felt divine against his. \n\nSlowly, sluggishly, he wrapped his arms around her and she hummed contentedly at the embrace. She finally opened her eyes and smiled before kissing his nose. \n\n\"I think you earned that perfect exam score,\" she purred. \"Definitely earned it.\" \n\n\"That's good to hear,\" he mumbled, still lost in lethargic pleasure. \"I'd better start failing all your quizzes too.\" \n\nBecky giggled and hugged him close, sighing. She finally brought her head up again, resting it on her elbow and looking at him. \"We'll be laying here for a bit yet, but we also need to talk about doing this again. A lot. The letter said so.\" \n\nMark nodded. \"Yeah, I'd like that, Becky. Then it's up to you to make sure my past self doesn't suspect anything.\" \n\n\"I'm sure I can work that out,\" she mused. \"He's pretty annoying, unlike your sexy self.\" \n\nHe smiled. \"Hard to believe how much difference three months and a time machine can make.\" \n\n\"Mmmm, and you still have to show it to me before we part ways for the night,\" she said lightly. \"The letter says you kept your word and showed it to me. So let's shower up and then you can take me to see it, okay?\" \n\nMark nodded. This was, thus far, the best evening ever. \n\n*** \n\nThey were walking back to Becky's house, arm-in-arm, laughing and talking like lovers. Not only had Mark shown her the time machine, he had actually shown her how it worked by bringing her back to earlier in the night. They'd hidden in the neighbour's yard and watched Mark's earlier self creep to her back door. Becky had stepped on a stick that broke loudly and caused Earlier Mark to look around warily, but a barking dog covered the mistake. \n\n\"I was wondering what that sound was,\" he chuckled. \"Never would've guessed it was you and I.\" \n\n\"Yes, but you need to be careful, Mark,\" she said, trying to sound serious as they said on a quaint swing in her backyard, holding hands. \"I don't know how all this works, but getting that close to your earlier self can't be good. You need to remember where and when you've gone to avoid yourself.\" \n\nHe nodded. \"I promise to not visit you more than once a day, at night. You'll clear an area on your basement floor where the Holmes Field Device can show up undetected by anyone else, away from prying eyes.\" \n\nShe nodded. \"We'll need to fine-tune the dials and so on to get exact coordinates, but I think the device moves somehwat slowly against the earth's rotation, so you can actually travel physical distances as well as through time if you're extremely careful.\" \n\n\"Wow, Becky,\" he said, shaking his head. \"You're already better at this than I am by a factor of a thousand.\" \n\nBecky smiled. \"I want to say it's because I'm a physics teacher, but that'd be a lie. It's just solid math and common sense, really.\" \n\nShe turned in to face him in the loveseat of the swing and brought his hands up to rest against her heart. She stared deep into his eyes, the darkness of night protecting them from prying eyes. \n\n\"You have my word, Mark, that you'll recieve that perfect test score,\" she said quietly. \"In return, you'll do extra studying with me on the nights you come back and fuck me, so that just maybe you'll actually deserve any offer you might get.\" \n\nHe nodded. \"And I promise I'll find some way to take you on a time excursion.\" \n\nShe smiled and brought his hands to her lips, kissing the fingers gently. \"We're going to be fucking so often, Mark. We'll be sick of each other by the time the semester ends.\" \n\nHe smirked. \"Doubt that, teach. You're the best fuck a guy could ask for. And I can't even tell anyone.\" \n\nBecky giggled and lowered his hands, letting them linger on her soft breasts beneath the shirt she now wore. She sighed at his touch and then leaned in to press her lips to his, finally kissing him. They rocked slowly on the swing beneath the moonlight, kissing silently for several seconds before Mark gently pulled back and smiled. \n\n\"I'd better get going,\" he said, his voice tinged with regret. \"Couple of more seconds of that kissing and I wouldn't have been able to leave.\" \n\nMiss Fischer nodded. \"I know. See you tomorrow night?\" \n\nHe grinned. \"That's the plan. Have a good night, teach.\" \n\n\"It already was, thanks to you, Mark.\" Becky said, blowing him a kiss and then waving as his silhouette retreated out of sight. \n\nSilence. \n\nBecky leaned back into the slowly rocking swing and stared at the stars overhead for some time. Finally she giggled and stood, skipping back into the house cheerfully. She had a letter to write. \n\n*** \n\nThe two agents were silent as they assessed the young man, who waited stoically for some sort of reaction from them. He found himself waiting several minutes, which he was not surprised by. \n\n\"So?\" Mark said finally. \"Totally hot story, right?\" \n\n\"Yes, we're both agog and atwitter,\" the tall man said dryly. \"Young man, the Temporal Enforcement Agency takes a dim view of using any device, registered or otherwise, being used for reckless personal reasons, forget showing such anachronistic technology to anyone from a time period not acquainted with time travel.\" \n\n\"Well, why the hell would I know that?\" Mark retorted. \"I'm not the one who left a Holmes Field Device lying around in the bushes in the Twenty-First Century where any shmuck could find it. You're lucky it was me and not some deranged criminal.\" \n\n\"Be that as it may,\" the short man interejected. \"There are consequences for reckless use of a temporal device.\" \n\n\"Imagine that,\" Mark said somewhat petulantly, having a sinking feeling he knew what was about to happen. \"So, what, you're just gonna take it away from me?\" \n\nNeither man answered immediately. Something occured to Mark and an evil grin spread across his face. \n\n\"You can't take it away from me,\" he concluded, seeing the dismay in their expressions as he figured it out. \"I'm meant to have this Holmes Field Device or you already would have. You know I'm going to be using it in the future so there's no way to keep it from me.\" \n\n\"Well, your personal future,\" the tall man admitted. \"Much of your personal future is still the past for my partner and I, but this past you're in right now is completely new to the two of us.\" \n\n\"So, my future self is in your past but my now self is just happening?\" Mark asked. \"Wild. How do you keep it all straight?\" \n\n\"By doing as little as is humanly possible,\" the short man said very firmly. \"Even trained experts in quantum and temporal travel can get confused when the timelines gets cluttered.\" \n\nHe now pointed to his partner's ear. \"You see his bionic ear?\" \n\nMark nodded. \n\n\"I accidentally shoot it off six years from now and there's nothing either of us can do about it. It's his past, because it's already happened to him, but it's my personal future. All I can do now is apologize in advance.\" \n\nThe tall agent grunted and looked away, clearly displeased. \n\n\"That's really deep.\" Mark mused. \n\n\"Yes, it is. It's not meant for idiots. And whether you like it or not, certain things can never, ever happen. Time will prevent paradoxes from happening.\" \n\n\"Like what?\" Mark asked. \n\n\"For instance, you cannot go back in time and kill your own grandfather before he gives birth to your father, because that would mean you never existed and therefore could never pull the trigger to kill him. A paradox.\" \n\nMark shrugged. \"Okay, but how does it stop me?\" \n\n\"Who can say?\" the short agent replied. \"All I can tell you is that you simply won't succeed in killing your grandfather, no matter how hard you try and meticulously you plan. If you try to shoot him, the gun will jam. If you try to poison him, it'll turn out he is immune to it or you used tap water by mistake. If you try to strangle him, you might have a heart attack before you finish the job. You... will... be... stopped. The Temporal Enforcement Agency spends most of it's time making sure nitwits like you don't get clock-hammered every time they get a dumb idea.\" \n\n\"Huh,\" Mark said, still trying to wrap his brain around all this mumbo-jumbo. If he hadn't fucked Miss Fischer earlier, he still might not believe this was real. \"What else can't I do?\" \n\n\"People usually find it's hard to get close to significant hisotrical events,\" the tall agent mentioned. \"Alexander cutting the Gordian Knot, the Crucifixion, the Yalta Summit... Time doesn't like it when people who shouldn't naturally be somewhere try to crowd in and get involved or snap a few pictures. They'll find that the technology fails to get them there, generally. We call it 'The Limelight Effect'. Do yourself a favour and don't try. We've seen people get stranded and die in the wrong era because of the Limelight Effect when the batteries or power source on their device go suddenly dry.\" \n\n\"Well... what if I wanted to... y'know, get with a girl from another time period?\" Mark asked. \n\nThe agents looked at one another and sighed in despair. \"You kids and getting laid,\" muttered the shorter one. \"Same principals as before- get too close to a famous women you want to have coitus with and Time will push you away. Try to become your own father by having sex with your mother and Time will stop you. You'll get smacked down real hard for those types of shenanigans.\" \n\n\"So Time would clock-block me?\" Mark laughed, earning him a withering stare from the two men. He coughed and stopped talking. \n\n\"Look, you're absolutely right that we can't take your time machine away or stop you from using it,\" the tall agent said. \"We're here to impress upon you the need to not be, in your century's vernacular, 'a total fucktard' about this. Believe it or not, we want to help, because Time is a very harsh mistress and frankly, you're a moron who couldn't be bothered to pass high school physics. This doesn't bode well.\" \n\n\"Best advice, try not to use it,\" the shorter man added. \"If you must, keep careful track of where you've been and when. That way you don't trip yourself up. And do not, for your own sake, travel forward in time ahead of where you currently exist. The Agency will have no problem throwing you in prison for eternity since it is now your personal, uninterrupted future.\" \n\n\"That's not fair,\" Mark said, scowling. \"Why can they do that?\" \n\n\"Let me be blunt,\" the shorter man said, leaning forward and smoothing his tie. \"In the future, nations and alliances understand time travel and how to do it. But idiots like you from the past or selfish jerks from concurrent time or even beyond cause problems by doing stupid things. Time-knots caused the economic downfall of the Oceanic Pact and the resulting riots killed tens of thousands. People who didn't deserve to die because of people like you who don't care about the big picture.\" \n\nHe held out a small device with a screen displaying a black girl with vibrant green eyes, smiling. She wasn't more than five. \n\n\"T'Pani here was killed in the Time Troubles riots and there was nearly a total ban on all time travel once war was averted and the Temporal Enforcement Agency was created in response. She didn't deserve to die. So think before you do things, got that, kid?\" \n\nMark nodded. \n\n\"Good,\" said the taller agent, who tossed him a small gadget. Mark examined it in his hand. It looked like an old-school brass pocket watch on a chain. \"It's a type of chronometer. It'll help you get around if you're ever stupid enough to end up lost. Warning though, it won't work in front of people who don't know what a chronometer or a watch are. Use it carefully.\" \n\nAnd with that, the two men turned and exited from his bedroom. Mark didn't dare follow them. He sat silently for some time, pondering the situation he now found himself in. \n\nAnd another evil smile crossed his face. \n\n*** \n\nBecky panted as she pressed herself against the glass of her shower door with Mark behind her, holding her tight as he slid his cock slowly in and out of her ass. She felt herself beginning to contract and clench as orgasm approached. She ground back against him lustily and Mark groaned as he lost control and began pumping his cum deep into her. \n\n\"Yes, Mark!\" she wailed as she joined him in cumming. They writhed and slithered together in shared ecstasy until they were both spent, sinking to their knees and slowly recovering under the jets of water from her showerhead. His hands caressed her soaking body while hers reached back and wrapped around his neck. \n\n\"Mmmmmm, I think you just passed next Tuesday's pop quiz as well,\" she purred, nuzzling his cheek. \"Would it be asking too much for you to fail every test and quiz if I can guarantee you a pass?\" \n\n\"I think I can promise that,\" he replied, causing Miss Fischer to giggle. She ran her fingers through his dark hair. \"Whatever teach wants, teach gets.\" \n\n\"Good,\" she said softly. \"You have a lot to catch up on.\" \n\n\"Don't worry, Miss Fischer,\" Mark said assuringly, turning her face so he could kiss her. \"If there's one thing I've got plenty of now, it's time...\" \n\n*** \n\nAuthor's Notes: Well, this chapter happened to be ready and I decided to rock it out. Yes, there will be people who bitch about the fact that Alex &amp; Alexa hasn't updated and neither has Sapphic Serenity, but those chapters just ain't finished yet. I'm a busy man, patience, grasshoppers. \n\nThis particular story is going to be fun, bent and weird sci-fi. Nothing too outlandish, but time travel and the inevitable entanglements along with graphic sex (let's face it, who among us WOULDN'T use a time machine to go and fuck?) should keep you all entertained. Just as important, I'm enjoying the wackiness of it, so this will be another series. ",
        "No writing this weekend for me, I'm attending Anime North for the first time in ten long years. However, if I get my fraggle rocked by a cute cosplay girl, I'll be sure to write about it. \n\nKeep your stick on the ice! \n\n<ul> <li> Management \n\n</li> </ul>\n\n(Savagely Canadian)"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "humour",
        "sci-fi",
        "technobabble",
        "teacher"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/time-rider-ch-01"
}