{
    "title": "Home for Horny Monsters Ch. 64",
    "pages": [
        "Hi all!\n\nFirst off, sorry this is a couple of days late (unless you're from the future, you won't know any different). While I try to adhere to my posting schedule, this last week was just a string of bad luck. I liken it to the suddenly pipes bursting in your house. You gotta get that shit fixed and it takes time, but rest assured that the Hawthorne family is well and good. Just very tired. Regardless, I appreciate the emails and such asking if I was doing okay. It means a lot to me that the community here can be so supportive.\n\nIf you're a new reader, welcome to my story about a man who gets a magic house and has tons of action/sex packed adventures. You're gonna be so goddamn lost if you're jumping in now, so why not go back and read the other 63 chapters? Don't worry, we will wait for you.\n\nReturning reader? Welcome back! I have some great news for you! Starting next month, Dead and Horny will be wrapped up and I will be back to posting two chapters of HFHM a month. I will likely stick to that schedule for a good chunk of time.\n\nAs a quick recap, last chapter we had Mike arrive in Oregon to meet Velvet the Arachne. Beth did a soul swap with Naia and something went awry. Lily announced her plans to impregnate everyone in the house with Mike's sperm, but she was just joking...right?\n\nPlease remember to leave some stars and comments, I love the community here, you all are amazing!\n\nConflicted\n\nThe snow crunched beneath Mike's feet as he walked through the forests of Oregon. In front of him, Yuki walked on top of the snow carrying her shield, leaving no trace of her passage. Up above, Abella circled.\n\nThe Nirumbi, in their haste, had made no effort to hide their tracks. The ones who had survived the slaughter at the cabin had gathered into a larger group and headed north. Though his tracking skills were only slightly better than the average person, the thirty-foot wide path made of tiny footprints and discarded spears made his job easy.\n\n\"Anything up ahead?\" he asked, then looked up. Abella held up both fists, which was the signal for NO. He adjusted the strap on the rifle Velvet had loaned him.\n\n\"Then we keep going,\" Yuki said. They had spent the night in the cabin, and were now trying to track the Nirumbi. The plan was to find where they were hiding in the woods, and then figure out what to do with them. The internet had been no help\u2014in fact, his phone had been unable to acquire any kind of signal since their arrival.\n\nWith Bigfoot still sleeping off his poison, they would have to wait for him to wake up before they could leave. Quetzalli and Dana had stayed behind with Velvet in case of another attack. Not only could Quetzalli shock any attackers, but the away team would hear the resulting thunder and be able to send Abella back to assist.\n\n\"Here's another one,\" Yuki declared as she knelt down in the snow. Mike joined her and frowned.\n\nThe Nirumbi had been quick to carve up their own at the cabin before being forced to run. While fleeing, some had obviously fallen due to injuries and had received similar treatments. This one had been hastily hacked apart and was missing both legs and an arm.\n\n\"Why the fuck do they do this?\" Mike asked.\n\n\"Don't know,\" Yuki replied. \"Quetzalli had some ideas, but her information is rumors from hundreds of years ago. Her best guess was that it was a way to honor the dead or the act has some kind of religious implications.\"\n\n\"Thou shalt eat thy dead?\" He looked away from the little man on the ground. \"Would hate to see the other nine commandments.\"\n\n\"It's not really for us to judge,\" Yuki said as she summoned a blanket of snow to cover the body. \"To them, the act of eating their own is no different than you brushing your teeth after meals.\"\n\n\"That serves an actual purpose, though,\" he objected.\n\n\"And you think this doesn't? At a bare minimum, their bodies become food for others. You only find it detestable because you were raised with the idea that you don't eat grandma when she dies.\"\n\n\"Maybe that started because grandma is too chewy,\" he said. \"Not a lot of great meat on an elderly woman.\"\n\nYuki snorted. \"Maybe humans don't eat grandma for the same reason that Nirumbi eat each other\u2014as a sign of respect.\"\n\nMike nodded. Though cannibalism didn't make complete sense to him, his own lifestyle could be seen as immoral and confusing to others.\n\nThey continued onward for a few more minutes before the path narrowed, leading them down into a small ravine surrounded by majestic trees and thick bushes blanketed in snow. If not for the footprints, they would have missed the narrow path that ran beneath a trio of very large pine trees.\n\nYuki crouched down and went ahead of him. He knelt to follow, but paused when he heard Abella thump into the ground behind him.\n\n\"Nowhere to land inside,\" she told him. \"It's completely surrounded by trees.\"\n\n\"Great,\" he muttered, then followed Yuki in. When he emerged from under the tree, he stared in awe at the large stone overhang above them. They were surrounded by trees on every side, and the overhang itself formed the entrance to a large cave.\n\n\"Wow,\" he muttered, then snapped a few pics with his phone. \"Do you think this is one of the goblin caves?\"\n\n\"Maybe.\" Yuki inspected the mouth of the cave. It was only a few feet tall, and Mike would need to crawl to properly fit inside. \"From what I can tell, they all went in here.\"\n\n\"So, what's the plan?\" he asked. \"Find a way to follow them in, maybe flush them out?\"\n\n\"Hold up.\" Abella moved to the mouth of the cave and inspected the rim. She traced the edges with her hands, then moved away from it with a frown. \"This is a recent opening.\"\n\n\"How can you tell?\" he asked.\n\n\"It would be hard for you to notice, but you can see where the edges look clean.\" She pointed at a few areas. \"Moss grew along here, but there's a thin line where there used to be stone. This cave was blocked off at some point, but it's been recently opened.\"\n\n\"Hmm.\" Yuki swished her tail, and the snow around their feet turned into frosty cyclones as the snow shifted about. What would have taken hours to find with shovels became only a couple of minutes when a pile of rubble was revealed away from the mouth.\n\n\"Aha!\" Abella picked up a small boulder and hefted it up to the opening. She rolled it back and forth, then pinned it against part of the wall. \"This piece came from here,\" she noted.\n\n\"So the Nirumbi dug their way free?\" he asked.\n\n\"When you dig, the dirt goes behind you,\" Abella told him, then dropped the boulder. She inspected the rim of the cave again. \"There are scratch marks on the outside. Big ones.\"\n\n\"Bear?\" he asked.\n\n\"You wish.\" Abella opened her hand and put it against the stone. \"Some of these gouges are deep enough for even my fingers to fit inside.\"\n\n\"Something dug them out?\" He moved to where Abella was standing. \"Who and why?\"\n\n\"All questions we may not like the answers to.\" Yuki looked down at the rubble. \"If we can fit this back inside, I can help seal the entrance.\"\n\nMike stood back as Abella pushed and rolled boulders back into the opening. Yuki created a ramp made of ice, which caused the boulders to roll further down into the cave. He kept expecting the Nirumbi to arrive and fight back, but assumed that maybe they had had enough.\n\nYuki blasted the cave with ice magic, creating a thick wall of ice that sealed the rocks in. They backed out of the small clearing and Yuki stayed behind long enough to use one of her tarot cards to break apart the overhang. It collapsed, creating an even bigger pile of rubble outside the cave system.\n\n\"Even if they can dig their way out of that, it will take them weeks,\" she said. \"And once the ice starts melting, this part of the cave will flood.\"\n\n\"I guess that means mission accomplished?\" He tried to sound nonchalant about it, but his thoughts were on the large claw marks. Who had found the Nirumbi and let them out?\n\n\"The sooner we get home, the better,\" Abella declared. She took off, leaving Yuki and Mike alone in the forest.\n\nThe two of them exchanged a look. He wanted to ask the kitsune if she knew why Abella seemed so tense, but knew that Abella would hear them. His few attempts this morning to start a conversation with the gargoyle had gone nowhere.\n\n\"I guess we just need to get Bigfoot back on his feet,\" he said. \"He can help us get home.\"\n\n\"That could still be a couple of days,\" Yuki replied. \"Whatever they dosed him with would have killed a lesser creature.\"\n\n\"I guess the question is whether the attack was intentional. Were the Nirumbi sent by someone, or did Velvet happen to wander into their territory?\"\n\n\"No idea. But their territory is inside that shitty cave, and they're welcome to it.\" They were following the tracks in reverse now, and she was walking beside him. \"Did you know that Emily used to talk about this place? I always wanted to come check it out, but she kept telling me there was nothing to see. Naturally, now I know why.\"\n\n\"The Arachne?\"\n\n\"Mm-hmm. Some say that gunpowder was invented by the Chinese just to scare them off. Their bodies are covered in fine hairs, gives them amazing sensory abilities. However, melt those hairs off and they're like a bunch of drunks in a bar.\"\n\n\"Have you ever run across one before now?\"\n\n\"I hadn't. I'm still young for my kind, and the Arachne had largely migrated to Europe. Between the big cities clustered together and a population unfamiliar with them, they were better able to thrive.\" Yuki paused, then looked back. Her ears twitched. \"You feel that?\"\n\nHe stopped and looked where she was looking. The forest was silent, other than the occasional thud of falling snow. \"I'm not picking up on anything dangerous, if that's what you're asking.\"\n\nYuki frowned. Her tarot cards appeared in her left hand, and she fanned them out. \"I feel like we're being watched.\"\n\n\"Maybe some of the Nirumbi got locked out?\" He readied the rifle, his finger resting on the trigger guard. While not a sharpshooter by any means, he had been able to earn the Marksmanship merit badge when he was a scout. If anything came out of the woods, he was confident he could at least hit it.\n\n\"Not Nirumbi,\" she said.\n\nThey stood this way for so long enough that Abella joined them. The gargoyle tilted her head from side to side, then shrugged her shoulders.\n\n\"I don't hear anything,\" she said. \"If something's out there, it isn't even breathing.\"\n\n\"That's ominous as fuck,\" Mike said. \"Let's head back and hope whatever it is will be just as scared of us as we are of it.\"\n\n\"I was never scared,\" Abella muttered, then took back to the sky. Mike watched her circle overhead and then let out a sigh. Hopefully whatever was bothering her would resolve itself.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nBeth sat on the edge of Naia's fountain with Ratu's crystal ball in her lap. Naia was lying in the water, her features barely visible above the surface.\n\n\"And?\" asked Ratu. It looked like she was in bed, her dark hair fanned out around her head.\n\n\"Nothing out of the ordinary here,\" replied Zel. When Beth had sent word to the centaurs that she needed a checkup, she had been surprised when Zel herself had arrived. \"Vital signs are normal, and I'm not seeing anything in her bloodwork.\"\n\n\"That's all you have to say?\" asked Beth.\n\n\"I love what you're doing with your hair,\" Zel added. \"But that's to be expected, right?\" She looked over at Naia.\n\n\"Indeed. Beauty without peer, and minimal effort, too.\" Naia smirked.\n\n\"Hmm.\" Ratu's voice barely came through the crystal ball. She picked up the cup of tea on her nightstand and sipped it. \"That certainly rules out a few theories of my own.\"\n\n\"Such as?\" Beth asked.\n\n\"Hybridization. I wondered if perhaps you had become part nymph, beyond the soul swap, that is. I also worried that perhaps a recent breeding had caused some overlap. Your dalliance with the dullahan could have unexpected consequences, much like Mike did with Cecilia.\"\n\nBeth blushed.\n\n\"As far as I can tell, she's still human.\" Zel packed away the small apothecary she carried with her. \"I'm afraid I can't be of much help.\"\n\n\"Your assistance was very valuable.\" Ratu bowed her head. \"Now that we have ruled out the obvious, we must step into the realm of hypotheticals.\"\n\nBeth frowned. She didn't like the idea that what was happening with her was hypothetical. In fact, nothing strange had happened after the tub incident, and she was already content to leave the issue alone. However, Naia had insisted on Ratu's input.\n\n\"Have you spoken with Mike yet?\" Ratu asked.\n\nBeth checked her phone. The picture Lily had sent Mike was still on delivered, which meant Mike hadn't seen it yet. This troubled her, but there wasn't much she could do about it. \"I haven't,\" she told them.\n\n\"That man gets himself into the best kind of trouble.\" The naga chuckled, then refilled her cup. \"I am ready to posit a theory.\"\n\n\"Lay it on me.\"\n\n\"According to Naia, your mind was actually inside of the soul swap with her. This is not a normal occurrence, and proof that something exceptional has happened. I believe that your soul may have a special susceptibility to change.\"\n\n\"How so?\"\n\n\"Let's look at the evidence. Your soul has left your body on more than one occasion, allowing your body to give host to a tormented soul.\"\n\n\"She prefers that we call her Jenny,\" Naia added.\n\n\"Regardless, Beth's soul has been displaced on more than one occasion. In a separate instance, a powerful entity, the demon Oliver, was able to graft a piece of his essence onto your soul. This required that we run your soul through a magical filter, which almost didn't work, I might remind you. You were purified, in a manner of speaking.\"\n\n\"So how is this all related?\" Beth asked.\n\n\"Souls aren't liquid in nature. Think of them like a slow-moving fluid. You dip your finger in a pond, it will look the same after you pull your finger out. Poke your finger in pudding, not only will some stick to your finger, but it will take some time for the hole to close.\"\n\n\"But I control the process,\" Naia said, sitting up in the fountain. \"She shouldn't have been able to take more than I offered.\"\n\n\"And I don't think she did.\" Ratu paused and leaned away from the orb. When she came back, she was holding a small sandwich. \"Think back on the finger analogy. If Beth was the finger, and your magic the pond, it wasn't just a quick dip\u2014it was a soak. Her soul, while mixed with yours, had a giant open wound. You can't soak an open wound in water and expect nothing to happen.\"\n\n\"I'm infected with magic?\" Beth asked, barely able to contain her excitement.\n\n\"I prefer the term blessed. But yes. Over the course of her years, Emily was able to nurture and grow her own talents in the realm of magic. It required hard work and dedication, but it did start with the nymph's blessing. For you, I suspect that your soul may have attuned itself to Naia's, thus fast-tracking the process. Think of it like a transfusion. You've been steeped in powerful magic, or maybe calibrated is a better word? Aligned? No matter.\" Ratu waved her hand dismissively.\n\n\"Beth can do magic now?\" Zel had pulled out a notebook and was scribbling notes. \"Water magic specifically, or...?\"\n\n\"My guess is simply a natural talent for it. Water manipulation was a coincidence. Rather, she was about to cave her own head in and her magic protected her.\"\n\n\"So, does that make me a witch?\" Beth asked. \"Or a wizard?\"\n\n\"When you can do magic, you can call yourself whatever the fuck you want.\" Ratu sighed. \"But this also comes with a burden of its own. She needs to learn some basics, if for no other reason than to avoid injury. Based on what I've heard, she has more power than she can handle.\"\n\n\"But my magic protected me,\" Beth said. \"How would it hurt me?\"\n\nRatu cleared her throat. \"When it comes to magic, your imagination is the limit. Your bones could have become rubber, or you could have shrunk to the size of an insect. There's no telling what you're capable of in your current state. You also need to remember that magic always comes with a price. Sometimes, the cost isn't worth paying.\" The naga leaned off orb again and came back with a quill and a piece of paper. \"I am writing down some basic texts for you to read from the Library. I'll send this to Sofia, and she'll make sure you get them. You have to study, if for no reason than to avoid blowing off your own face.\"\n\nBeth nodded, doing her best to contain the ball of excitement that had formed in her belly. The idea that she now had her very own kind of magic felt much like winning the lottery. What would her magic be like? Would it feel cold, racing through her veins like ice? Or perhaps it would be like fire, eager to erupt from her fingertips.\n\n\"After I look at these books, should I study under someone?\" She moved close to the ball. \"Would you be able to teach me?\"\n\nRatu smiled, then shook her head. \"I am in no condition to help you right now. Besides, my understanding of magic is focused on enchantments and objects. My own abilities are of a divine nature, so I'm not sure how much help I would be. In fact, I would recommend Yuki for the job, if she'll accept.\"\n\n\"I can help a little bit.\" Amymone appeared from her tree, hanging upside down by her legs. She folded the page she was on in her book and then closed it. \"And Naia, too. Our magic is nature-based and very niche, but we can explain some of the basics. We taught Emily, when she first came here.\"\n\nNaia smiled, but her grin faded. She turned to Beth, a somber look on her face. \"We all know that the shadow drove her ambition, and a similar thing can still happen to you. You have to be careful.\"\n\n\"I will,\" Beth promised. She looked up at Amymone. \"When can we start?\"\n\n\"After you get those books from Sofia.\" The dryad swung back and forth, her skirt held in place by a few convenient vines. \"I would focus on meditative practices. Being able to touch your magic is a great start.\"\n\nNaia nodded. \"Mike figured that one out pretty fast. But his magic is...well...\"\n\nBeth laughed. \"Somehow more useful than you'd expect,\" she finished.\n\n\"His magic is something else completely,\" Ratu added. \"Neither divine nor inherent. It doesn't have a label. When he advances enough, he may choose to pursue spellcraft. By then, you will likely be a suitable instructor for him.\"\n\n\"Divine...versus...inherent...\" Zel was scribbling furiously. \"So, it's different being born with magic versus acquiring it? What about the rules of heredity? Is magic passed along genetic lines?\"\n\n\"Depends on the magic.\" Ratu opened her mouth extra-wide and shoved the whole sandwich in and swallowed it in one bite. \"Sorry, I'm hungry and can't wait any longer. Typically, inheritance is usually only a factor if the creature itself is magical. Dragons are a great example, as well as my own kind.\"\n\n\"What about half-breeds?\" Zel looked up. \"For example, what if your mother was a naga and your father was a human?\"\n\nThe naga laughed. \"If they could actually conceive a child, it's possible. It's been a long time since any cross breeding has occurred, and you can thank the Greek and Roman gods for that. Caused nothing but problems, and it actually became a huge taboo to breed with humans because of it.\"\n\n\"Fascinating.\" Zel closed her book. \"Let me know if you need anything from the herd. It was nice to see everyone.\"\n\nThe centaur bowed low, then headed off toward the door of the greenhouse.\n\n\"You'd think she'd want to take the shortcut home,\" Beth noted.\n\n\"She probably wants some time to herself,\" Naia said. \"When you're the one in charge, you don't often get opportunities to be alone. Besides, she has a lot to think about.\"\n\n\"Like what?\"\n\nNaia shrugged and flashed a smile. \"That isn't my burden to share,\" she said, then turned her attention to the garage. The door opened, and Eulalie stepped out. She was wearing a dark tank top with a matching black skirt with white stripes down the side.",
        "\"Am I interrupting something?\" she asked.\n\n\"Not really.\" Beth noticed that Eulalie's lower half didn't look as glossy as it had the day before. \"Do you need something?\"\n\n\"Just spreading my legs. Slept like the dead, and I didn't mean to be out for so long.\" She walked over to join them, her legs moving in a rhythmic fashion. Beth had felt uncomfortable yesterday being so close to Eulalie, a reaction she felt guilty about.\n\nToday was different. Her fear had been replaced with curiosity, and she couldn't help but notice thin grey cracks had appeared along Eulalie's legs.\n\n\"Did you hurt yourself?\" Beth gestured at the lines.\n\n\"No. This is normal.\" Eulalie looked at Naia. \"Am I allowed to soak in the fountain?\"\n\n\"Everyone is welcome. Unless you pee in the water. Then I might drown you.\" Naia winked.\n\nBeth watched Eulalie as she stretched out in the water and sighed. The fountain was big enough for the Arachne to properly spread her legs, and she floated around like an ominous lily pad. As tempted as she was to stick around and get to know Eulalie a bit more, there was something else on her agenda.\n\n\"I've got some things I need to take care of,\" she announced. \"See you all later tonight.\"\n\n\"Have fun.\" Naia gave Beth a knowing look.\n\nWith a skip in her step, Beth headed for her room and let herself into the magic cave in her closet. It didn't take her long to reach the Labyrinth. As she approached, she saw the fairy trio chasing each other around the mirror pool, trying to push each other in.\n\n\"Can one of you find Asterion for me?\" she asked. For the first time, she realized that the fairies shimmered when she looked at them. Each one was surrounded in a colorful field composed of their unique color. They left spectral trails behind them as they whizzed about her.\n\n\"Ooh, you seem different today,\" said Cerulea. She was blue and had beetle-like features.\n\n\"I think she's extra pretty.\" This was from Carmina. Shaped like a dragonfly, she zipped about, inspecting Beth's face up close with compound eyes. \"And she smells good, too.\"\n\nOlivia, using her long grasshopper legs, bounced up and down next to Beth. \"I think it may be feeding time,\" she announced with glee, then the three of them flew into the Labyrinth, leaving a trail of glitter in the air that slowly descended.\n\nBeth laughed, then straightened out her dress and waited. It took a bit, but the doors of the Labyrinth finally creaked open. Ever since getting knocked off their hinges by the shadow, they didn't fit quite right. They made the entrance look even more ominous.\n\nAsterion stood between the doors, his axe casually held over his shoulder. He took a few steps forward and snorted. The dark fur of his body made it look like he was covered in soot, and he had grown a small patch of fur between his horns that looked suspiciously like a mohawk.\n\n\"My friend.\" He greeted her with a voice that rumbled like an old Harley Davidson. \"Have you come to walk the Labyrinth with me?\"\n\n\"I have.\" She moved to his side. He held out an arm, and she wrapped her arms around it and clung to him while they walked. \"Take a girl somewhere quiet?\"\n\n\"Hmmm.\" A smile crossed his face. Though generally slow to process information, this was a task he was well-versed in. Asterion led her through the maze, careful to step around the traps. The fairies, sensing an easy meal, circled them while giggling.\n\n\"You seem extra...pretty today,\" he told her.\n\n\"Thank you.\" She stroked his bicep. It was like trying to squeeze a piece of metal wrapped in leather. \"Has Ratu been keeping you busy?\"\n\n\"Indeed.\" He took her through a few turns that she didn't recognize, and then they stepped into a room with a pond in the middle. A small island with soft grass had been built in the middle.\n\n\"This is new,\" she told him.\n\n\"The lady built it for me,\" he said, then scooped her up with one arm and walked through the water. It came up to his waist as he crossed. When he set her down on the island, she kicked off her shoes and savored the sensation of the soft blades beneath her toes.\n\n\"What do you need an island for?\"\n\n\"To make you...more comfortable.\" Asterion smirked. \"The ground is soft, like a human bed.\"\n\n\"You had this built for me?\"\n\n\"Indeed.\" He set the axe down on the grass. \"It will be more comfortable than the rocks.\"\n\n\"Let's find out.\" She moved into his arms, tilting her head to kiss him.\n\nAsterion obliged, letting out a grunt of approval when she squeezed the head of his cock through his loincloth. She explored his lips with hers, smiling at the feel of his stiff fur against her face. When he put his hand on her breast, she placed her hand over his own.\n\n\"Feel free to be rough with me,\" she told him, her whole body tingling as if full of starlight.\n\n\"Hmmm...I do not wish to hurt you,\" he replied.\n\n\"Don't worry. You won't.\" She squeezed his cock hard, then gave it a couple of pumps. \"And I'll tell you if you do, so don't worry about it.\"\n\nHe looked doubtful, but nodded his acceptance. When he squeezed her breast, she moaned, then pushed him onto the ground. Surprised, he toppled over, his loincloth flapping to one side to reveal his massive member.\n\nShe felt a surge of energy and confidence. When she knelt down to take his massive member in her mouth, she could hear Naia's voice in her ear.\n\nUse your tongue on the frenulum. Slow strokes up and down, fast ones side to side. Beth could almost picture the nymph's smile as she gave instructions. Not one to disobey, she followed them.\n\nThe noise Asterion made was somewhere between a grunt and a bellow. He lifted his head to see what Beth was doing, then placed his hand on the back of her head.\n\n\"I can be rough?\" he asked.\n\n\"Only if I can.\" Beth smirked at him, then opened her mouth wide.\n\nThe minotaur forced her head down onto his long shaft. What ordinarily took her several minutes of concentration and slobber was accomplished in seconds. His massive glans pushed against the back of her throat. Her gag reflex was non-existent and she inhaled him. She tried to take him all the way, but he pulled on her hair, stalling her progress.\n\nBreathe through your nose, there's plenty of room. The nymph's encouraging words helped Beth relax. Your body is ready for this, you just have to trust me.\n\nNaia guided Beth through the deepest blowjob of her life. When Asterion came, she couldn't swallow fast enough. Sperm shot out her nose and pooled on his belly. Her sinuses didn't even respond, and she took a deep breath through her nose to swallow what she could. Each gulp filled her with energy, and she felt a fire inside that needed to be quenched. The fairy girls dropped out of the sky, greedily stuffing their faces with what Beth had missed. They were like Mother Nature's horny cleanup crew.\n\n\"It's my turn,\" Beth told him, then squeezed the base of his cock. He grunted, a big grin on his face; Asterion could easily go twice, it was something about his genetic makeup. The fairies let out a cheer and moved away as Beth positioned herself over his waist, her legs spread wide.\n\nWhen she lowered herself, she deliberately missed his cock, letting it slide up her belly instead. While grinding her pussy on the base of his shaft, she gave his cock a good rub, marveling at how it slapped her above her belly button. It was both wide and long, and she couldn't wait to feel it stretch her out, to test her new limitations.\n\nAsterion groaned. Beth looked down to see that Carmina had latched her mouth onto the edge of his urethra and was sucking.\n\n\"I've got a better use for you,\" she declared, then wiped some of the semen off of Asterion's gut and pulled down her top to reveal her breasts. She swiped some of the cum on her nipples, then pulled the fairy off of Asterion's dick and moved it to her breast.\n\nCarmina, without missing a beat, latched on like a magic nipple clamp. It made her skin tingle pleasantly, so she snatched Cerulea out of the air and repeated the process with her other breast. Both fairies were hungrily nibbling on sensitive flesh, which sent tingles up and down Beth's spine.\n\n\"Time to test her out,\" she muttered, then slid up Asterion's shaft while pressing it flat against his belly. She was practically sitting on his chest once she could switch direction and move back down. His huge glans pressed against her swollen labia, creating a tremendous amount of pressure as his shaft bent before forcing her vaginal lips apart.\n\nBeth groaned, then stopped for a moment to acclimate. She was soaking wet, and it was almost like the core of her body was now liquid metal. There was just enough friction that she could feel every glorious inch as it slid inside of her, but the experience was not like anything she had previously felt. It was almost as if she had grown millions of nerve endings all along the inside of her vagina, and she could tell exactly where the head of his penis was while it was inside her body.\n\nShe cried out, her eyes filling with tears. It was almost like every previous sexual encounter had been but a shadow of what could be. Her lower body felt so full as she slowly approached the base of Asterion's shaft, and the sensation of being stretched apart was perfectly balanced between pleasure and pain.\n\nThe fairies were now biting the edges of her nipples, and when she grabbed her own breasts, they flattened beneath her hands to remain in place. Olivia landed on Asterion's forehead and looked at Beth expectantly.\n\nShe snatched up the green fairy and placed her at the base of Asterion's cock. All of the fairy girls were stretchy like elastic, and she knew they wouldn't get hurt, even if squished. Beth lifted her hips long enough for Olivia to wrap her long legs around Asterion's girthy shaft, then slid back down. A tiny mouth licked her all around her clitoris, sending delightful tremors through her body.\n\n\"Beth.\" Asterion was looking at her in awe as she started with a slow grind. She usually rode on top of him, but had to stop every so often to take a breather. His thick glans kept pushing up against her womb, an act that usually hurt.\n\nNot anymore, though. The rigid tissue of her cervix no longer had any complaints as she shoved herself onto him. She laughed in delight as her lower belly distended along the path of his cock. Maybe her magic would make her stretchy like the fairies? Was that a choice she could make? If her body could be made to stretch, how big of a cock could she physically take?\n\nA chill ran up her spine, and she groaned. Movement off to the side caught her attention, and she saw that the pool of water was moving now, circling the small island like an eddy current.\n\nOh God. She discovered that the water was reacting to her movements. When she shifted from her slow grind to a steady motion that slammed Asterion's hips into her thighs, she felt the heat inside her body build as the water splashed and spilled onto the nearby banks. Was her arousal triggering the water's movement?\n\n\"Beth, I...\" Asterion's eyes were bugging out in his head, and he placed his hands on her hips. \"I am getting close.\"\n\nShe leaned forward and put her hands on his horns. This caused her ass to lift off the ground, and she gave the minotaur a kiss on the nose.\n\n\"Fuck me like you mean it,\" she growled.\n\nAsterion snorted, then slammed himself into her.\n\nThe shockwave of pleasure went straight to her skull, then scattered through her limbs as he repeated the act. He paused to regard her with those puppy dog eyes of his, and she responded by putting her hands on his chest.\n\n\"Is that the best you can do?\" she demanded.\n\nHe slammed into her again, then let out a grunt that sounded like a train coming to a stop. Beth put her hands on his neck and squeezed.\n\n\"Yes!\" she cried as she slammed her full weight down onto his cock. The water around the island was climbing into the air, creating ribbons that crossed over each other. When he came inside her, she could feel liquid heat suffuse her whole body.\n\nShe slammed herself onto Asterion hard enough that Olivia shot out like a rubber ball, bouncing off a pair of rocks before tumbling onto the grass. The fairy girl let out a belch and went limp.\n\n\"More, more!\" Beth could feel her orgasm building, and watched in awe as the streamers climbed higher. Asterion groaned, his eyes rolling up in his head as his massive cock twitched inside of her. She felt like she was plugged into him, able to move her body in a perfect rhythm that kept him from coming down from his own orgasmic high.\n\nShe was gasping now, and her body felt like a giant rubber band, stretched to the limit. When she finally snapped, she let out a shriek of delight as the water around them exploded, showering the small island in a miniature rainstorm. Desperate to ride the waves of pleasure coursing through her, she was able to tease out a second, smaller orgasm that accomplished the same effect. The ground was drenched, and she could barely see now that her hair was in her face. Carmina had fallen off one of her breasts, and she tried to hold Cerulea in place as a third orgasm built. Down below, Asterion was moaning, his fingers digging into the damp soil.\n\nThe water sloshed along the banks as the ribbons began to climb into the air again. For just a moment, Beth felt a connection with the small lake, her heart and mind expanding to fill the chamber.\n\nThe connection faded when a loud buzz filled the air. A yellow light fell from above like a shooting star, then stopped to hover in front of Beth, weaving about to get her attention. It was the fourth fairy sister, Daisy. She was signing frantically, and Beth had to fight a groan of disappointment as she squinted her eyes in an attempt to focus.\n\n\"Someone's causing trouble in the front yard?\" It was her best guess, and Daisy, though deaf, could hear vibrations through her wings. Beth's stomach dropped as the call of duty tempered her lust.\n\nDaisy nodded, then shot off for the center of the Labyrinth.\n\n\"Guess we'll have to finish our fun some other time,\" she said as she pulled herself off of Asterion. The minotaur groaned, sat up to help her stand, then flopped back as if relieved.\n\nBeth hastily threw on her clothes and then jogged to the mirror pool. The path they had taken in hadn't been complicated, and it was easy enough to find her way out. Once past the gate, she stood on the edge of the water and looked at her reflection. Even though she had been soaking wet only minutes ago, her hair was starting to curl itself back into how she had styled it that morning.\n\nWith a grin, she took a deep breath and hopped in. The water was cool to the touch as the Labyrinth disappeared and she was rushed to the house.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nBack at the cabin, Mike hung his coat on a hook by the door and then sat down in a comfy armchair by the fire. The warmth of the crackling heat was complemented by the pleasant smell of burning pine that permeated the cabin. He let out a sigh and kicked off his shoes, then put them up on the ottoman so that the heat would reach his toes.\n\n\"Master.\" Emery flew up carrying a thermos. \"Some coffee to warm you.\"\n\n\"Please just call me Mike.\" He smiled at the imp, then took the thermos. \"And thank you. Is there a full pot? The others might want some.\"\n\n\"But of course, Mas\u2014Mike.\" Emery beamed and then shot across the cabin to the kitchen. The little imp was surprisingly strong, and easily manipulated the coffee pot despite it being almost as big as he was.\n\nMike closed his eyes and enjoyed the warmth of the fire. Quetzalli came out of Darren's room wearing a thick sweater and leggings.\n\n\"Where did you get those?\" he asked.\n\n\"Dana bought them for me.\" Quetzalli grabbed the hem of her sweater and lifted it above her belly. \"I like how it holds everything in place. I feel far less wobbly this way.\"\n\nGod bless you, Dana, he thought to himself. The dark leggings left little to the imagination, and Quetzalli forgot to lower her sweater when she turned her attention to the loft, giving him a great view of her ass. Up above, Dana had appeared at the top of the stairs carrying a box.\n\n\"Velvet said there's some food in here,\" she announced. \"Que, fix your sweater.\"\n\nQuetzalli straightened out her sweater. Mike looked at Dana, who winked at him.\n\n\"Where's Velvet?\" he asked.\n\n\"She was checking out the barn. Wanted to see how much damage was done.\"\n\n\"What about him?\" Mike looked over at Bigfoot. He was sprawled out across the couch now, and he grunted every couple of minutes in his sleep.\n\n\"No improvement. Speaking of which...\" Dana set the box on the counter and walked over to squat next to Mike. \"The arrows were poisonous, but we don't know what it was. I pulled a bunch of them out of myself, and am kind of worried what might happen next time I feed.\"\n\n\"How so?\" He leaned forward in his chair.\n\n\"The air here is cold, so I packed snacks for myself in a small cooler, which are now in the fridge. But what I mean is that when I eat, my blood will flow for a little bit. That will circulate the poison, and I have no idea what that means in terms of my zombie-ness.\"\n\n\"Oh.\" He frowned. Would the poison damage her after feeding? The idea that her regeneration would stall out like a car on a cold morning worried him. \"You're wondering if you might go through your supply really fast.\"\n\n\"Correct.\" She patted him on the leg. \"Not that I think you'll mind, but I might have to come to the source.\"\n\nHe nodded knowingly. Dana wasn't physically attracted to him, but right after a feeding, she became insatiably horny and would fuck anything she could get her hands on. It was a situation he made sure to never take advantage of.\n\n\"Well, it's a good thing we've got Quetzalli to help,\" he added. \"Whatever makes you happiest.\"\n\n\"You're a good guy,\" she told him, then patted his knee. She went back to the kitchen and opened the box to pull out some cans of soup. \"I'll heat some up for you since I'm not doing anything else. Do you wanna go out and check on Velvet?\"\n\n\"Yeah, no problem.\" He put his shoes and coat back on before going outside. Yuki was busy inspecting the perimeter she had built. Small fortress walls of ice had been built around the cabin, with nasty spikes made of ice waiting for anybody who may climb them.\n\n\"Everything good?\" he asked.\n\n\"Kind of.\" She stopped what she was doing and looked at him. Her green eyes were blazing with light. \"Still concerned about what I sensed in the woods. I'm not taking any chances with your life.\"\n\n\"Neither am I.\" He gave her a wave as he headed for the barn. It looked like it had been in pretty good condition before the Nirumbi had gotten hold of it. The large door on the front had been torn down, which is where he walked in. He found Velvet right away, standing in the back next to an old Jeep. Its windows had been broken out, and the interior had been gutted.\n\n\"Velvet?\"\n\nThe Arachne turned to look away from him, her fingers swiping at her face. \"Sorry,\" she said with a sniffle. \"It's just...this was my dad's car. Back when I was small, he would take Lala and me for rides around the forest. He would spend hours out here keeping it in working order. It was how he got supplies from town.\"\n\n\"It's hard seeing it like this, isn't it?\" Mike moved to the side of the vehicle and put his hands on the cool metal. \"When I was a kid, my mom and I bounced from home to home a lot. The only constant we had in our lives was our station wagon. I'm surprised the damn thing even ran. It was totaled in an accident, caught on fire and burned to the ground. The picture made it into the paper, I felt like I was looking at the murder scene of a friend.\" He didn't mention to her that he had been inside, and so had his mother. The fire had claimed his mother's life and freed him from her abuse, but not before leaving a mass of scars along the side of his body.",
        "\"My dad last drove this in October. Snuck out between storms to get a few things for the house, then came back.\" Velvet turned to face Mike and held out a car key. \"The last time this key was used, he was alive.\"\n\nMike simply nodded, hoping she would say more.\n\n\"This whole place was always just us, you know? When mom died, Eulalie took it the hardest. There were even times I thought she was being ridiculous about it. I even told her to move on and caused a few fights. I feel bad about that now. I can't even look at this car without feeling like I'm going to fall to pieces any second.\"\n\n\"And that's okay.\" He stepped around one of her legs so that he was facing her. From this close, he could see the individual hairs on her legs. Where Eulalie's body had been glossy and sinister, Velvet's looked soft like a child's teddy bear. \"We all grieve differently. Just tell me what you need.\"\n\nShe looked up at him, her dark brown eyes shimmering. The other eyes along her forehead glistened like tiny jewels, and he reached out to take her hand.\n\nHis magic ignited, catching him off guard, and the two of them froze in place when he shocked her. For just a second, his senses were overwhelmed as they magnified the world around him. The air in the barn was shifting back and forth in microcurrents around his legs, and he could hear the subtle shifting of wings up above. Strands of Velvet's hair stood on end, lifting away from her face as his magic crept along her skin.\n\n\"Mike...\" Velvet looked at him in awe.\n\n\"Are you two okay in here?\" Abella's talons crunched the fallen wood of the door as she walked into the barn. The gargoyle looked around the structure and shook her head. \"What a shame. You can tell this place has some good bones. I'm sure it can be rebuilt.\"\n\nVelvet yanked her hand away from Mike and tucked the strands behind her ears. The odd sensation of the air moving around him vanished. \"It'll take some time, but we'll get it fixed up. We use this place for food storage, though I guess we could use dad's old room or something.\" At the mention of her father's room, her voice hitched slightly.\n\n\"Well, that's one possibility,\" Mike said. \"You're always welcome to come stay with us at the house. We have plenty of room. In fact, we have an entire forest inside a magic greenhouse in the backyard. We're even stocking it with game, I'm sure you could work something out with the centaurs.\"\n\nVelvet looked at him in contemplation for several seconds, then tilted her head. \"You would let me come live with you?\"\n\n\"Only if that's what you want.\" He looked down at his feet, wondering how much to say. He could tell her about the Society, the shadow, or pretty much every attempt on his life. But that wouldn't exactly sell her on the safety of the home. When he looked up at her, he saw that she had tilted her head to one side as if studying him. \"I'm not going to lie. Sometimes living with me is dangerous. It's definitely complicated at times. But it wouldn't be lonely.\"\n\nAbella scowled. Her tail thudded against the ground as she crossed her arms and turned away.\n\n\"That's...\" Velvet frowned. \"I'm not sure how I feel. Don't take it personally.\"\n\nHe nodded. \"Let me know if that changes.\"\n\nVelvet looked at him, then over his shoulder at Abella. It looked like Velvet wanted to say something as she rested her hands on her belly. She tapped her front foot a few times before stepping past him.\n\n\"If you'll excuse me,\" she said, then scurried out of the barn. Abella watched her go, then turned to face Mike.\n\n\"You can't be serious,\" Abella hissed. \"One of them is a terrible idea, but both of them?\"\n\n\"Ah.\" So, this was her problem. He walked over to the jeep and placed his hands on the cool metal. Prior to the Nirumbi's treatment, he could tell it had been well cared for. The man who had maintained this vehicle had raised two daughters out in the wilderness, all while showering them with love. In his opinion, such a person was to be admired.\n\nHe turned to lean against the car. \"Tell me what you're thinking.\"\n\n\"They're dangerous.\" Abella pointed in the direction Velvet had gone. \"Fast. Strong. Ruthless. If you let them into the house, I cannot protect you there. And the others, they look to you for guidance. They would accept the Arachne as one of us, and all it would take is a little bit of planning.\" She drew her finger across her throat. \"In your sleep, one by one.\"\n\n\"I see.\" He was surprised to hear her speak so candidly about Velvet and Eulalie in such a manner. \"What would you have me do?\"\n\n\"Leave them here. Send Eulalie back.\" It was clear she had another solution in mind, but he knew she wouldn't say it out loud.\n\n\"They are dangerous, aren't they?\" He moved away from the Jeep and walked toward the gargoyle. \"Could easily snap my neck and drag me out into the woods. But so could you, if you wanted. Or Sofia. Lily and Yuki both almost killed me, yet I got away even if it was by the skin of my teeth. Hell, Jenny almost smashed my face in with a table.\"\n\n\"Mike.\" Her voice was pleading. \"I don't know how to convince you.\"\n\n\"I know.\" He was in front of her now. She was shorter than he was, and he put his hand on her cheek. \"You're just trying to protect me. Because that's what you do.\"\n\nShe nodded. Her dark eyes were like pools of ink.\n\n\"Do you remember when we first met? How you saved me from the Mandragora?\"\n\n\"How could I forget?\" Her voice was almost a whisper.\n\n\"In those first moments, you were so amazing.\" She had broken through glass windows and grabbed him before he could become Sweet Pea's next meal. \"Yet you were frightening. This stone woman with wings and talons. A magnificent tail that swished behind you as you tore me free and saved my life. I was so grateful to be alive that it never occurred to me that you were there to hurt me.\"\n\n\"You looked so pathetic,\" she muttered, then laughed. \"How could I not rescue you?\"\n\n\"I'm surrounded by amazing women,\" he said. \"Every day, I feel like I see something new that astounds me. But what I've realized is that every woman in that house is different in her own way. Even from their own kind.\"\n\nAbella looked up at him, her eyes narrowing. \"You still want to trust them, don't you?\"\n\n\"It's not like everyone gets a chance to save my life to prove their worth.\" He moved his hand around her waist and pulled her close. Her lips parted as he pulled her in. \"Please. Give them a chance. For me.\"\n\nHe didn't know what to expect, but Abella pushed him away. She stomped out of the barn and took to the sky in such a manner that he could tell she was angry.\n\n\"Well...damn.\" He sighed, then headed back for the cabin. This was going to take more effort than expected. He pulled his phone out of his pocket and frowned. There was still no signal. Frustrated, he stuck it back. Tomorrow he would try to find somewhere to receive a signal. He could text home to check in, and maybe get some advice from Beth or Naia.\n\nHeaded back to the cabin, he felt a cold spot in his stomach. It was subtle enough that he almost didn't notice, but when he stopped to scan the trees, he felt it intensify when he lifted his gaze toward the top of a distant pine. Hoping to catch a glimpse of whatever threatened him, he stared defiantly.\n\nThe chill flared briefly, then vanished. Whatever danger lingered had passed.\n\nWiping sweat off the back of his neck, he did his best not to run back into the cabin.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nIt didn't take Abella long to find a rocky outcropping suitable to land on. She was far enough from the cabin that nobody would casually find her, but close enough that she could get back if something happened.\n\n\"Damnit, Mike.\" She slammed her fist into the rock, smashing the top layer into dust. Why did he have to be so trusting? She smashed a few layers of rock under her fist before pulling her legs in and wrapping her arms around them.\n\nThe sun was on her back, and she closed her eyes and let out a sigh. The warmth was slowly working through her body. Her kind didn't need to eat\u2014in fact, they could absorb energy from just about everywhere. Sunlight was always best, but even a good downpour of rain could make a decent snack.\n\nShe feasted on the sunlight, her body huddled in a meditative pose. There was plenty right now to think on, and those thoughts made her feel like she was tumbling out of the sky.\n\nMike clearly accepted the Arachne, but she could sense hesitation on his part. Something was triggering a fear response in him, and she wished he would listen to it. Instead, he was so focused on playing monster philanthropist that he was ignoring his basic instincts.\n\nIt also didn't help that the Arachne were attractive from the waist up. Her lip twitched, and she dreaded to even acknowledge the effect this would inevitably have on Mike. Thousands of years of evolution had designed them to be appealing, for it was in their nature to hunt, to kill.\n\nAnd regrettably, to breed.\n\nAbella struggled to keep up with Pierre as he followed the Arachne through the streets and buildings of the Panier. They were staying high enough to avoid detection for even she had heard of the Arachne's legendary ability to sense movement. The creature was moving stealthily, and Abella was unable to hear her footfalls. She did hear the occasional grunt from the prostitute, and was surprised that she was still alive.\n\nWhen the Vieille Charit\u00e9 came into view, the Arachne slowed down and approached the building cautiously. She scaled the outer walls of the almshouse and then jumped down into the main courtyard.\n\nAs Abella and Pierre descended, the Arachne laid the prostitute on the ground by the chapel. With a nervous glance at the surrounding buildings, she backed away and vanished into the shadows.\n\nAbella and Pieree circled overhead for several minutes, watching. It was too dark to see anything other than the huddled figure on the ground.\n\n\"Did she just leave her there?\" Abella asked.\n\n\"I don't know. The Arachne are a strange breed.\"\n\n\"Maybe...maybe she had a change of heart.\"\n\nPierre scoffed. \"I doubt it. Why would you even suggest such a thing?\"\n\n\"Because...well, they are half-human, aren't they?\" Abella was circling lower now. \"Perhaps she decided against eating her and left her where someone would find her.\"\n\n\"You give humanity too much credit to\u2014Abella!\" Pierre cried out to her as she descended.\n\nThe shadows stretched away from Abella as she landed as quietly as possible next to the prostitute. The woman's eyes were open, and her pupils were dilated. She was drooling when Abella knelt down next to her.\n\n\"It is okay,\" she whispered. \"I am here to\u2014\"\n\n\"Abella!\" Pierre slammed into the ground behind her and grabbed her by the wingtips. \"Look!\"\n\nAngry at her brother, she whipped around to face him. His eyes were scanning the pillars that surrounded the chapel, and she saw dark shapes moving among them. From the darkness they came, their legs silent on the walls and ground of Vieille Charit\u00e9. Although the largest stood no more than four feet tall, there were dozens of them.\n\nThey were Arachne children. With a hunger in their eyes, they approached. Their pale skin and black legs made them look like ghosts floating through the darkness.\n\n\"We must flee!\" Pierre's wings flared wide as Abella took to the sky. Being smaller than her brother, she was able to get airborne much faster than he could. As she climbed into the sky, she saw dark shapes leaping across the sky above them. Gossamer strands stronger than steel plucked at her wings as she passed through the trap that had been set by the adults, and she was able to make it to safety.\n\nDown below, Pierre growled as he got caught up in their webs. He dodged from side to side, but not before an Arachne hurled herself from the roof and grabbed onto him. His wings flapped hard as a second then third Arachne scrambled on to him and he fell to the ground below.\n\n\"Abella!\" Pierre screamed in rage. \"Get to the clan!\"\n\n\"Pierre, I\u2014\" She watched in horror as he battled the Arachne. Their fangs and poison were useless on him. He managed to kill an adult and a few of the children before they swarmed. The sheer number overwhelmed him as they tangled him up in their webs. They carried his struggling form up the wall of the chapel. Once at the top, the arachne threw him off.\n\nThe first time he fell, nothing happened. But the Arachne repeated the process over and over. Abella could only watch in horror as one of Pierre's wings snapped off at the shoulder, could only listen to his howls of pain. The Arachne were methodical, and when her brother eventually shattered on the cold hard ground of Vieille Charit\u00e9, she let out a wail of desolation. His glowing red heart cooled in the night, filling the air with steam as it glowed like an ember until it slowly turned black.\n\nThe Arachne watched her from below, but she was almost a hundred feet in the air. Her brother's fragments were pushed to the side of the building like ordinary rubble, and the children carried away their human meal as the grownups cleaned the grounds. Within minutes, the courtyard was silent. Abella raced back to the clan to tell them what had happened.\n\nThe hurt of centuries past was still fresh in her mind as she remembered what happened next. The clan held her responsible for Pierre's death, and she became an outcast among her own family. The Arachne had been using the plague as cover for their hunts, and once the clan made the hard decision to yield ground and leave, Abella was not invited to follow.\n\nThe centuries had been lonely. She had a vague recollection of meeting the Architect. She had been invited to become part of a family once again. Even though the memories had been sealed away, there was an emotional warmth when she considered them.\n\nWhat could she do about her current Arachne problem? For so many years, she had been the muscle, the silent guardian ready to lay down some hurt on whoever threatened the house. To be fair, Mike had gotten into far more trouble already than the other Caretakers combined\u2014that, at least, was something she could remember. And right now, he was getting into the kind of trouble that she couldn't prevent.\n\n\"Hi Mom. Hi Dad.\" Velvet's voice carried over the breeze, causing Abella to cock her head. When she closed her eyes, she could picture exactly where Velvet was. Somewhere about fifteen feet down and fifty feet back from where she currently sat. Careful to rotate without making a sound, Abella tracked the voice to an otherwise unremarkable spot overlooking the valley floor. Tucked in between a pair of pines stood Velvet. She was kneeling on the ground, addressing a pair of unmarked stones.\n\nShe listened as Velvet recounted the last few days at the cabin, including Mike's arrival and invitation to the house. The Arachne's voice wavered more than once, and Abella was surprised to see her wipe away tears.\n\n\"Dad, I don't know what to do,\" Velvet confessed. \"This has been our home all my life. I feel like if I leave, I'm letting you down. Even worse, I would be leaving you behind. I can still smell you here. Did you know that? It's like your breath clings to every tree. All those patrols, the hikes that we took. This forest is like a book of memories, and I get to open it every time I step outside.\n\n\"But I'm also lonely. I still have Lala and Uncle Foot. And always Emery. But that's it. My whole world can be counted on one hand. Mike showed up with four other people, and that's not even all of them! Do you remember when Dana and Lily came? It was all we could talk about, even after you died. What if every day could be like that...hmmm?\" Velvet looked over at a nearby bush. \"No, there aren't any birds nearby. Yes, I'll keep watch while you fix your web.\"\n\nIs she talking to a spider? Fascinated, Abella continued to watch.\n\n\"And Mom? I know you and I didn't always see eye-to-eye, but I could really use your advice on something. I've been having these strange urges ever since Mike came, and I'm worried that it's...well, you know.\"\n\nNo. Abella felt every alarm in her body going off. It didn't take much to realize exactly what kind of urges Velvet was having.\n\n\"Lala isn't even here,\" Velvet continued. \"So I can't ask her if she feels the same. She's always been nonchalant about it, but we've never been around a man other than Dad, so...what do I do? What can I do? What if I can't control myself around him, like you did with Dad? What if I lose myself?\" Her voice rose an octave. \"There are too many things, too many emotions, it's like I can't breathe. I don't know what to do.\"\n\nOh, I know what I want to do. Abella briefly wondered if it would be possible for Velvet to suffer an accident. Maybe fall off the side of the cliff or get smashed by a boulder. The others would never suspect her.\n\nBut she would know. And it wouldn't surprise her if Yuki could do magic to find out what had happened. She didn't dare imagine the look of betrayal on Mike's face, the very idea of it broke her stone heart a little.\n\n\"Merde,\" she whispered. The only solution would be constant vigilance.\n\nVelvet finished her conversation with the dead and left.\n\nAbella waited a bit and then flew down to the memorial. The two stones were made of marble. One had a spider carved into it and the other a human, and they both overlooked the valley floor. The cabin was visible through the branches of the pines, making it a perfect resting spot.\n\nShe looked over toward a nearby bush and saw a spider frantically repairing its web. The impulse to crush it was strong, but that would make her no better than an Arachne. Besides, the last thing she needed was for the spiders of the forest to tattle on her. If Velvet could talk to arachnids, then she needed to assume that nothing she did was private.\n\nAbella stretched her wings and waited for a bit longer. When the spider was finished, it scurried back into the safety of the bush, leaving the web out for its next meal. Satisfied that the spider was safe now from birds, Abella threw herself off the side of the cliff and let the air currents carry her across the valley.\n\n\"I'll be watching,\" she muttered under her breath.\n\nAnd when the time came, she would be ready.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nBeth burst out of the closet, water soaking her clothes and seeping into the floorboards. Over the winter, Tink had built a special drain beneath the floor of the closet so that it wouldn't make such a mess. A process that used to feel like rushing down a slip-and-slide was now more akin to having a bucket of water dumped over her head.\n\nA small crowd had formed in the front room. Beth shut the door and reopened it. The magical portal was one way, so now she was greeted by coats, a stack of towels, and a hula hoop with glowing runes embedded along the outer rim.\n\n\"Strange man outside house!\" Tink ran up to Beth, a hammer clutched in her diminutive hands. \"Been looking in the windows!\n\nBeth held the hoop over her head and let go. The runes flared as their magic forced the water off of her and onto the floor. It had been a gift from Ratu, but it could only be used a couple of times a day. When the hoop clattered on the ground, she picked it up and stuck it back in the closet. \"Where's Lily?\"\n\n\"Oh, I'm around.\" The succubus was standing up on the third-floor landing, leaning over the edge. She tumbled forward and into the air, then landed gracefully on the hard wood below. \"Time to be the man of the house?\" she asked.\n\n\"Maybe not yet, let's see what we have.\" When Beth looked outside, she saw a man in glasses standing just off the porch. He was clearly trying to see into the windows of the home and was pacing.\n\nBeth opened the door and stepped outside. \"Can I help you with something?\"\n\nThe man was wearing a brown sweater vest and a long-sleeved button down beneath it. His glasses were perched on the edge of his nose like a squat bird, ready to fall off at any moment.",
        "\"Where's Mike?\" he demanded.\n\n\"May I ask who's calling?\" Beth had a pretty good idea.\n\n\"Tell him his neighbor is here to talk to him again about the noise.\" Murray finally seemed to notice Beth, and his cheeks flushed. He promptly adjusted the hem of his vest and pushed his glasses further up his nose. His fingers went through his thinning hair like a comb.\n\n\"What noise?\"\n\n\"It was a woman screaming. Around lunch time.\" Murray's face became smug as he held up his phone. He tapped the screen a few times and Beth heard shrieks come from the speaker that she immediately recognized as her own. She fought the burning sensation in her cheeks, hoping to hold a poker face.\n\n\"Oh. That.\" Lily-Mike stepped out of the door and walked slowly down the steps. She wore a crimson doublet and bright white pants. The outfit was outlandish, and Beth couldn't help but notice that it included a giant codpiece. \"What do you think it was, Murray?\"\n\n\"I think it's trouble for you,\" Murray said, his resolve wavering. \"You agreed to keep it down.\"\n\n\"Did I?\" Lily shook her head. \"Last time I checked, there weren't any laws about making noise in the middle of the day.\"\n\n\"Listen here, weirdo, there may not be laws about noise during the day, but this woman is clearly in distress. Now I don't know what you all are doing over here, but I'm sure the police would be very interested to hear about it.\"\n\n\"I'm willing to bet that you have already contacted them.\" Lily grinned devilishly, which looked especially ominous with Mike's features. \"And they didn't give a flying fuck. Am I right?\"\n\n\"Mike,\" Beth cautioned, and put a hand on Lily's arm.\n\n\"And if you must know, the noise was from this one right here.\" Lily slapped Beth on the ass, causing her to jump. \"She was getting fucked so hard, she saw stars. It doesn't surprise me that you've never heard the sounds of a woman being pleasured\u2014\"\n\nMurray's face turned bright red and he pointed at them. \"Enough! You may think you're funny, Mr. Radley, but I'll have you know that you don't know who you're dealing with!\"\n\n\"I know exactly who I'm dealing with,\" Lily replied. \"You're the kind of man who sits in silent rage as he tries to fall asleep. Fantasizing about how the world has yet to recognize your greatness. You work hard for someone who takes advantage of you, then come home and pound your meat to VHS porn because you're afraid the government is watching your internet, am I right?\"\n\nMurray's mouth was opening and closing like a fish, and he had gone white. It was like the oxygen had been sucked out of him. His left eyelid fluttered.\n\n\"And that's not all,\" Lily continued. \"Because you fall asleep and dream about them, don't you? All those young women, straight out of college, looking for internships and\u2014\"\n\nBeth pinched Lily's arm. \"That's quite enough, Mike.\"\n\nMurray looked like he was going to be sick.\n\n\"Maybe Murray here should worry less about what we do in the safety and comfort of our own home and worry more about that suitcase full of women's lingerie in his closet.\" Lily sneered. \"It's totally fine to wear what makes you happy, you insipid little shit, but if you think you're gonna come over here and threaten us with the cops in anything less than your best body stocking\u2014\"\n\n\"MIKE!\" Beth clamped her hand over Lily's mouth as Murray's glasses fell off his face and clattered to the ground. The man's eyes had rolled up into his head, leaving only the whites of his eyes.\n\nIn the silence that followed, Beth realized that the yard had gone still. The few centaurs who were out working the yard had paused to watch.\n\n\"Murray?\" Beth didn't dare touch the man. His breathing had become ragged, and every few breaths he let out a high-pitched whine.\n\n\"Stay back,\" Lily said as she stepped in front of Beth. \"If this fucker blows his load, I'm going to\u2014\"\n\nMurray opened his mouth and a sound like high-pitched static came out of him. It was disorienting, causing Beth to topple over backward and land on her butt.\n\nLily punched Murray in the face. At the moment of contact, a cylinder of white light surrounded him and blasted her backward onto the porch. The centaurs threw their spears, but they just shattered on the wall of light. The Jabberwock moved to attack, but let out a cry of frustration when it was pushed away.\n\n\"Shit, shit, shit,\" Beth muttered, but still couldn't stand. Waves of nausea rolled through her body, and she covered her mouth with one hand when she felt her gorge rising.\n\nA mist rose up from the ground and drifted out into the street. The centaurs were now grouping up and launching a volley of arrows, but these did no good either. A few of the centaurs toppled over, and were helped to their feet as they fled through the doorway to their village.\n\nKisa and Cecilia were suddenly there. They grabbed Beth by the hands and dragged her up the stairs. The eerie sound followed them into the house, but vanished as soon as the door was shut.\n\nA few seconds later, the door opened again and Lily stumbled in, now in her regular form. Beth was horrified to see that all the flesh on Lily's arm had been burnt away.\n\n\"What in the unholy fuck is that?\" Lily demanded as she plopped down and inspected her arm. When she moved her fingers, Beth could see the exposed muscle slide over itself. \"Ow, shit! This really fucking hurts!\"\n\nEulalie stumbled in from the backyard, her hands over her ears. She was dragging long lines of webbing behind her, as if it was leaking from her body. Panic was written on her face as she slumped onto the floor.\n\nSofia stood by the front window, her sword in hand. She scowled at Murray as he continued to shriek.\n\n\"At least that sound can't get in here,\" she said, then looked around. \"Is everyone okay?\"\n\n\"Naia came inside,\" Eulalie muttered. \"Amymone is hiding underground. I feel like I'm going to be sick.\"\n\n\"Tink have idea.\" The goblin had her face pressed to the glass. \"Maybe start fire?\"\n\n\"No fires.\" Sofia looked at Beth. \"Who is this man?\"\n\n\"He's the neighbor, he came to complain about the noise.\" She remembered what Mike had told her about him the other day. \"He was acting weird a couple of days ago. Mike said he seemed possessed. We figured it was the society.\"\n\n\"What the hell is happening out there?\" Kisa had joined Tink at the window. \"Where are the lions?\"\n\nBeth rushed to the window and saw that the front yard had been gobbled up by fog. The outer walls of the property had gone missing. Were they just hard to see because of the fog? \"He isn't actually attacking anybody, so maybe the lions don't see him as a threat?\"\n\n\"I can't...make this...\" Lily was focused intently on her wounded arm, her face scrunched up. Smoke rose from the edges of her ruined skin. \"It isn't healing!\"\n\n\"What does that mean?\" Beth asked.\n\nSofia frowned and looked outside. \"I don't know,\" she said.\n\nThe front door banged open, and Sulyvahn stumbled inside, his head cradled in his arms. He tripped and fell, spilling black smoke from his neck all over the floor.\n\n\"Suly!\" Beth went to his side as Sofia closed the door.\n\n\"Blasted wretch an' all his shoutin,\" Suly mumbled. \"Wasn' in me right mind, couldna hardly move.\"\n\nBeth helped him to the couch, and then returned to the window. Murray was frozen in place still, his mouth wide open as he shouted. The cylinder was visible now, sending a beacon of light into the sky.\n\nWhat sort of trouble were they in now? It didn't seem society-related, so what could it be? Beth paced in front of the window, pausing only to watch Eulalie use her webs to bandage Lily's arm. The Arachne moved quickly, her fingers deftly winding gossamer strands around Lily's ruined flesh. The finished product was an elbow-length glove that shimmered in the light as Lily tilted her arm from side to side.\n\n\"I'm afraid that's the best I can do,\" Eulalie said.\n\n\"At least it doesn't hurt, thank you.\" Lily squeezed her fingers experimentally. \"I sure hope the boys down at the docks like their handies with some glove action.\"\n\n\"Oh, however will they manage?\" Eulalie offered with a smile. \"But at least we're safe inside, right?\"\n\nThe power fluttered, then went out. The dim light of day through the front window was the sole illumination as Murray continued to scream in the front yard.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nWhat sort of madness will our housemates descend into? Will the porch survive this new threat? Will Mike hold hands with Velvet? Will Beth find a cock big enough to fill her new magic void? Stay tuned!\n\nThanks again for reading, and I can't wait to share the next few chapters with you. There will be some amazing surprises, the emergence of a new villain and I sense a new monster girl on the horizon. This one has been much requested and I have been laying the seeds of her arrival for a long time now. Don't miss it!\n\nOh, and one more thing. Make sure to take some time for yourself. We all have the potential to be amazing in our own way, but you'll never make that happen without giving yourself a little downtime. Take care of yourself, because you've earned it.\n\nUntil next time!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "size-queen",
        "arachne",
        "monstergirl harem",
        "magic vagina",
        "minotaur lovin",
        "story driven erotica",
        "whats up with the weird neighbor",
        "abella backstory zomg",
        "lily pretending to be mike"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-64"
}