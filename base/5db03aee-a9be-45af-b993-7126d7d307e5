{
    "title": "A Free Night Out",
    "pages": [
        "Tracey stood in front of the mirror and applied her shocking pink lipstick. She was heavily made up with her short dark brown hair in a messy style. She was wearing a silver dress that showed a good amount of cleavage and stopped at mid-thigh. She looked herself up and down in the mirror approvingly, taking in her silver stiletto boots and hold-up stockings: she looked hot and she knew it.\n\nShe heard a horn sounding outside, grabbed her bag and put her lipstick into it before leaving her flat to jump into the taxi that was awaiting her. \n\nShe slid into the front seat and greeted the driver, an overweight Indian in his fifties who, in Tracey's experience, invariably smelt of both spicy food and body odour.\n\n\"Hiya, Mr. Bal. You all right, love?\" she said as she buckled her seat belt. In reply, Mr. Bal reached across and squeezed Tracey's right breast.\n\n\"You have excellent tits,\" he commented in a thick Indian accent as he pulled away without indicating.\n\nTracey was proud of her body: she was tall with long limbs, a slender waist and large firm breasts; in fact she rarely wore a bra when going out for the evening.\n\n\"Thanks, chuck. Ouch!\" Mr. Bal had slid a hand down the front of her dress and was roughly pinching her nipples. \"Slow down, I'm not going anywhere!\"\n\nMr. Bal grunted in reply before continuing his groping, albeit slightly more gently. After a few minutes he turned into an industrial estate, dark and quiet early on a Saturday evening.\n\nTracey was a little disappointed: sometimes Mr. Bal waited until he'd picked up Tash and asked her to satisfy him but tonight he couldn't wait and so it was her turn. Maybe she shouldn't have worn such a revealing dress after all.\n\nMr. Bal leant back and unzipped himself pulling his grubby semi-erect penis out. Tracey sighed, unclipped her seat belt and bent down to take it into her mouth before Mr. Bal encouraged her to do so more forcefully.\n\nIt had all started off as a bit of friendly competition really. Tracey and her best friend Tash would go out every Saturday evening and flirt as much as possible so that they paid as little as possible for taxis, drinks, food and entry to clubs. Eventually they got better and better at it so that it was a matter of pride for them not to pay a penny on a night out. But they also had to do more and more to ensure their evenings were completely cost free.\n\nTracey's view was she was happy to do anything but have full penetrative sex as she felt that this would be being unfaithful to her boyfriend who was currently stationed with the army in Germany. Everything else however was acceptable, although she had never made him aware of the niceties of her moral stance. And with that constraint in mind, she'd progressed from heavy petting to offering manual relief before succumbing to what most men wanted: oral sex. For Tracey sucking a man's penis was like shaking his hand. Although, as she resignedly bobbed her head up and down on Mr. Bal's erection, she reflected that she preferred them clean in much the same way she preferred shaking a clean hand over a dirty one. \n\nShe looked up at Mr. Bal, knowing that he found the contrast between her wide innocent sparkling blue eyes and her hot dirty mouth utterly entrancing. He'd always admitted that he wasn't an attractive man and that sex with his equally unattractive wife was both rare and mundane. He was just grateful that he was getting a regular blowjob every week from one of two gorgeous young women.\n\nMr. Bal had been a taxi driver for years when he'd met Tracey and, because he lived near her, he'd got into the habit of picking up the girls for their regular Saturday nights out. After several months the girls had suggested he give them a discount in return for letting him feel their fine breasts. The discounts and favours had gradually become bigger and bigger until one evening Tash had proposed that she suck him off for a free ride. He hadn't hesitated to accept.\n\nTracey sensed Mr. Bal's impending orgasm and started swiping her tongue over the top of his knob to accelerate his climax. This was too much for the taxi driver and he erupted copiously into her mouth although she had no problem swallowing it all.\n\nAs Mr. Bal drove to Tash's house, Tracey reapplied her lipstick and then cursed as she remembered that she'd left her breath mints at home.\n\nWhen they arrived, Tracey ran out of the car and knocked on Tash's door. Natasha answered immediately and gave Tracey a kiss on the cheek.\n\n\"Urgh, are you wearing eau de curry cum?\" she said. \"How was his dick?\" Tash giggled.\n\n\"As smelly as usual,\" Tracey replied, \"Have you got any mints so I can I get his taste out of my mouth?\"\n\n\"Here, have some chewing gum.\"\n\nThe girls got into the back of the car while Mr. Bal eyed Tash's body in the mirror. Tash was shorter than Tracey but she had a curvier body and shoulder-length blonde hair. He almost regretted having already taken advantage of Tracey's talented mouth as he stared at Tash's full inviting pout.\n\n\"Where to, girls?\" he asked.\n\n\"Shall we try Heat?\" Tash suggested, \"it's a new club, you know, where Sinful Apple used to be.\"\n\nTracey assented and Mr. Bal took them directly to the city centre before dropping them off.\n\n\"See you next week, girls,\" he said through his open window. Tash leant down to blow him a kiss goodbye, allowing him a good long view of her impressive cleavage. She was wearing her usual halter neck top and mini-skirt.\n\n\"Bye, Mr. Bal,\" she replied. \"Shame you can't get it up twice in a night otherwise you could collect us tonight and have a go in my mouth. You know how much I love sucking your cock,\" she teased. Mr. Bal drove away, flushed and flustered.\n\n\"Tash, you shouldn't tease him. And anyway, he tastes foul,\" said Tracey.\n\n\"I know, but I do love making him squirm!\" Tash laughed. \"Right, do you recognise who's on the door?\"\n\n\"No. Who shall we do?\"\n\n\"The one on the left. I like black guys,\" Tash replied without hesitation. She strode purposefully to the front of the long queue.\n\n\"Hiya, love,\" she smiled provocatively at the tall doorman, whilst thrusting her breasts forward. The bouncer looked her up and down and couldn't help breaking his professional mask with a big, slightly addled, grin. Tash often had this effect on men.\n\nShe leant forward and whispered in his ear, \"Do you like having your cock sucked?\"\n\nHe swallowed and stuttered, \"F-fuck, yes!\"\n\n\"Well, what are you waiting for? I swallow as well!\"\n\nThe doorman looked stared open-mouthed at Tash and then Tracey. He swallowed again before turning to his partner, \"Cover for me, Carl.\"\n\nHe grabbed Tash's hand and pulled her into the club and immediately into the cloakroom, taking her to the back, ignoring the attendant who was busy with other clubbers. By the time Tracey had followed them in, Tash was already on her knees fumbling at the bouncer's crotch. She unzipped him slipped her hand into his trousers and pulled out his penis.\n\n\"Ooh, what a lovely big cock,\" Tash said before swallowing half of the doorman's rapidly expanding erection.\n\nAs Tash went to work, Tracey moved closer to allow the doorman access to her breasts. \"Does that feel nice?\" she breathed in his ear. \"She's good isn't she?\"\n\nTash was now concentrating on flicking her tongue over the head of his penis, before starting to slide her mouth up and down his shaft. He moaned as the pace of Tash's head-bobbing increased.\n\nAfter a few minutes of groans punctuated by slurping sounds from Tash, the doorman pulled Tracey's breasts out of the top of her dress and began licking her stiff pinkish-brown nipples.\n\n\"Oh, that's lovely, darling,\" she said, \"go on, come in her mouth, she loves the taste.\" \n\nAnd, on cue, the doorman grabbed the back of Tash's head and thrust his cock down her throat before unloading his cum. Tash, gagging, still managed to swallow it all down before sitting back, affectionately kissing the tip of his cock and smiling up at him, \"How was that, sweetheart?\"\n\n\"Fucking fantastic,\" he replied, not believing his luck.\n\n\"Can we go through, darling?\" Tracey asked. The bouncer nodded, squeezed Tash's breasts and ushered them straight through to the bar.\n\n\"Thanks, love,\" Tracey added. \"If we're back next week, try me out. I give great head!\" she laughed as they walked away.\n\nThe girls made their way onto the main dancefloor and half-danced, half-pushed their way towards the bar, which was surrounded by people three to four deep. The girls, well-practised at getting to the front of any queue, flirted outrageously with strategically chosen men in the crowd until they were close to enough to see the bartenders.\n\n\"Oh look there's what's-his-face. He used to work at the Canny,\" exclaimed Tash.\n\n\"Can you remember his name?\" asked Tracey.\n\n\"No, but his dick curves off to the side like a banana!\" Tash replied, giggling.\n\n\"Well, go on then see if you can catch his eye.\"\n\nWithin two minutes Tash was on her knees in the stockroom while the ecstatic barman fucked her face, groaning with pleasure and smiling with happiness at his luck. Tracey stood to the side leaning on a shelf, while smoking a cigarette, giving him a saucy wink when he looked up at her.\n\n\"Shit, Geoff - what's going on?\" exclaimed another younger bartender as he walked into the room to change a barrel.\n\nTracey immediately moved into action. \"Hi love - you really look like you could do with a blowjob,\" she said glancing down at the tenting in the young man's trousers. He stammered incoherently while Tracey moved smoothly towards him taking his hands and placing them firmly on her breasts. \"There, have a feel - do you like them?\" she added teasingly.\n\nThe inexperienced 18-year old had barely got a word out before Tracey had extricated his erection and bent down to lick it as if it were a lollipop. Tash glanced across and gave a Tracey a knowing smile around her mouthful of cock. Tracey immediately began to bob her head on her lucky victim's penis and Tash responded similarly. The two men began to moan in unison while the girls' heads continued their synchronised dance, vying to be the first to bring their man to culmination.\n\nIn the end, both reached their climaxes almost simultaneously, the older man pulling back to come over Tash's imp-like face with his spunk. Giggling, Tracey swallowed her own load before licking Tash's face clean with long searching strokes of her nimble tongue.\n\n\"Thanks, lass,\" the first bartender said with a satisfied sigh. \"Free drinks all night,\" he glanced questioningly to his colleague.\n\n\"Shit, yes, whatever you want,\" the younger man confirmed, obviously smitten by the girls or rather their able and willing mouths.\n\nAll evening, Tash and Tracey drank Bacardi Breezers, being served first whenever they went to the bar. They punctuated their drinking by dancing suggestively with each other and rubbing themselves up and down fortunate men on the dance floor, attracting a hungry crowd of male onlookers eagerly watching their firm young gyrating bodies.\n\nBy the end of the evening, both were thoroughly drunk and stumbled out of the club arm-in-arm, leaning against each other to avoid keeling over.\n\n\"I'm hungry,\" Tracey slurred, \"let's go to the chippie and suck off Greasy Tony.\"\n\n\"OK, I like my chips salty,\" laughed Tash.\n\nThe two young women made their way erratically to the chip shop. They entered and joined the queue, making eye contact with Tony who co-owned the shop with his wife, a formidable lady with more than a hint of moustache. Tony's pulse quickened as he served the girls; they'd not been in for a few weeks and he knew he was in for a treat.\n\n\"Bag of chips twice, love,\" Tracey said, giving Tony an unsubtle wink. Miraculously Tony's wife, busy with another customer, failed to notice.\n\n\"My treat, Tracey,\" Tash said loudly as she paid Tony for their takeaway with the exact change before both burst into a fit of giggles.\n\nTony's wife looked on disapprovingly, as the girls staggered out of the shop before making their way to the quiet alleyway at the back of the chip shop, loudly shushing each other exaggeratedly.\n\nOn cue, five minutes after they'd left the shop, Tony stole out of the back door to meet them.\n\n\"Quick girls, she thinks I'm going for a shit,\" Tony urged in his Maltese accent.\n\n\"Ah, ah, ah,\" Tash wagged her finger at Tony chidingly, \"Hang on, big boy. Where's our money?\"\n\nTony wordlessly handed back the money for the chips, almost breathless with excitement.\n\nTracey and Tash looked at each other for a moment before Tracey raised her eyebrow and handed over her bag of chips.\n\n\"Going down!\" she declared before sinking to her knees in front of Tony, her dress riding up to reveal her stocking-tops.\n\nTony has already extracted his erect penis and sighed loudly as Tracey's mouth closed slowly over him.\n\n\"Oh shit, that's so good.\" He looked up Tash, still munching happily on her chips. \"Go on, you too, please,\" he begged.\n\nTash burped in a decidedly unladylike manner. \"Tracey, is their room down there for two?\" she chuckled.\n\nTracey grunted around her mouthful of cock, before holding it out for Tash who had carefully balanced their chips on a nearby bin and pulled open her halter top to reveal her large and well-formed breasts.\n\nTony's eyes bulged alarmingly as the two girls began flicking their tongues up and down his erection, before taking it in turns to alternately slide their hot mouths up and down him and lick and suck his testicles.\n\n\"Oh, god. I can't believe this is happening,\" murmured Tony as the two girls kissed each other over the knob of his cock. He pawed their breasts and pinched their nipples as he got closer and closer to climax.\n\nAs Tracey bobbed her head in effort to make him come quickly, Tash murmured, \"Go on, Tony. Come in her dirty slutty mouth.\"\n\nThis was too much for Tony and he began to spurt down Tracey's throat. She pulled her mouth off him with an audible pop, and directed the rest of his cum over Tash's tanned breasts.\n\nTash rubbed the cum into her boobs before taking her chips from Tracey.\n\n\"Bye, love,\" she said, \"Better get back to that dragon!\"\n\nTony thanked them and rushed back inside before his wife realised he had been gone for so long.\n\nThe girls stumbled down the road, finishing their chips.\n\n\"I'd forgotten that he smelt so much of chips,\" Tash laughed.\n\n\"His cock's the same size as one!\" Tracey giggled. \"C'mon, time to go home.\"\n\nThe two girls waved at cars until a taxi stopped for them.\n\n\"Where to, girls?\" the driver asked as they staggered into the back of the cab. He adjusted his mirror so he could have a good look at their exposed knickers.\n\n\"We're going to take you to heaven, darling,\" Tash promised as she pulled up her top to show him her boobs.\n\n\"Take us somewhere quiet and we'll suck you off, love,\" Tracey added, pulling aside her thong to show him her pussy. \n\nThe taxi driver, a large fit man in his fifties with short grey hair, paused, smiled and pulled away to find a secluded spot. He parked up in a side street before climbing into the back with the two girls.\n\nTash had taken her top and skirt off and Tracey her dress so both we left just in their skimpy pants, stockings and boots. They'd already pulled out the driver's sizeable cock by the time he settled himself on the back seat between them.\n\nHe leant back with a huge sigh as the girls went to work on him with their agile mouths. After ten minutes of licking, sucking, bobbing and kissing, Tash leant back with grudging respect in her voice.\n\n\"He's big isn't he, Tracey? And he's lasting well too. Do you mind if I fuck him?\"\n\n\"No go for it!\" Tracey replied. Tash gave the driver a deep tonguey kiss, before pulling aside her thong and sliding her moist pussy down onto him with a satisfied sigh.\n\nHe grabbed hold of her hips as she rode him powerfully. Tracey stared excitedly, using two nimble fingers to play with her clit, the driver avidly watching her doing so.\n\nEventually he lay back pulling Tracey towards him. \"I want to taste your cunt,\" he breathed as he tongued her wet pussy while Tash continued to fuck him. The girls kissed each other sensually and fondled each others' breasts as he assuredly brought them both to orgasm, Tash coming first, a few seconds before Tracey added her climactic moans to her friend's.\n\nThe driver lifted Tash off him and turned Tracey around. \"I want you too, you little tart,\" he growled at the dazed girl.\n\n\"No, you mustn't,\" Tracey refused despite her temptation, wanting to keep her silent vow to her boyfriend. She looked at her friend before blurting out, \"You can fuck me up the arse though.\"\n\n\"Tracey, you dirty little whore!\" Tash exclaimed affectionately. \"Here let me get you ready,\" she added before sliding her fingers into Tracey's pussy. She worked her fingers in an out before rubbing the juices into her arsehole. She slowly inserted a finger into Tracey's tiny little hole, before pulling it out again.\n\n\"God, she's going to be tight,\" she informed the driver unnecessarily. He grunted his acknowledgement before, somewhat roughly, pushing his cock up Tracey's backside.\n\nTracey screamed loudly and collapsed into her friend's arms. \"Oh fuck, Tash, it hurts, it hurts so good.\"\n\nThe driver managed a few powerful thrusts before he emptied a never-ending load of spunk deep into Tracey's little arsehole. \"Oh fuck yes, that's fucking fantastic!\"\n\n\"Are you OK, love?\" Tash asked, still holding her friend tightly.\n\n\"Yes, I'm fine,\" Tracey replied as the driver pulled away.\n\nHe dropped them off at Tash's house, insisting they take his mobile number and promising to pick them whenever they wanted.\n\n\"He was nice wasn't he? A great fuck,\" Tash commented as he pulled away. \"C'mon stay with me tonight; you can hardly walk, love.\"\n\n\"Thanks, dear,\" Tracey replied.\n\nThe two girls disappeared through the front door, satisfied that, once again, they'd had a great night and they hadn't had to pay a penny. "
    ],
    "authorname": "seth_perm",
    "tags": [
        "blowjob",
        "freebies",
        "groupie"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/a-free-night-out"
}