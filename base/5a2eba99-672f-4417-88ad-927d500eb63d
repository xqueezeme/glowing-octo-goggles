{
    "title": "The Big Tits Club Ch. 13-14",
    "pages": [
        "-- CHAPTER 13: Hot Tub --\n\n****\n\n\"Naimh O'Brien, will you go out with me?\"\n\nThe Irish redhead's eyes got huge as she looked at me in utter shock that I'd break The Rule and actually ask her out. Her mouth gaped open, and within two seconds I realized I'd made a terrible mistake.\n\nI've seen a lot of shocked expressions before, many in movies but quite a few in real life as well. There are certain shocked expressions that are \"good\" shocked. You know, like a rom-com where the guy finally asks the girl to marry him, and you can see the joy in her eyes when she claps both hands over her mouth but is too surprised to verbally respond.\n\nAt the opposite end of the spectrum was the kind of shocked expression Naimh gave me right now.\n\nYeah, that bad.\n\nI was confused. After everything she'd just said about joining the BTC for me and not Sam, about getting together if we really clicked, plus the confirmation I'd seen in her eyes when I'd asked if she was in love with me... Well... I'd sort of taken her agreement to go out with me as a given. So to see the horrified look on her face took me by complete surprise.\n\n\"Matty!\" she hissed, suddenly pushing my chest until I pulled my dick out of her pussy and squatted in front of the couch. \"We can't do that!\"\n\nI blinked, not understanding. \"Why not?\"\n\nSitting up straight, Naimh leaned forward and gave me the kind of scolding look Mother would give me as a child had I knocked over and destroyed a thousand-dollar lamp. \"There's a RULE, did you forget that?\"\n\n\"No, of course not. But... I thought--\"\n\n\"You thought what? That after everything I've been through with Alice walking away from the club, you thought I'd take the remaining friends I have left and throw them away without a backwards glance?\"\n\n\"What? I never--\"\n\n\"I'm still coming to terms with the guilt of betraying Alice, okay? I WILL NOT BETRAY THE ENTIRE BTC!\" she barked intensely with narrowed eyes and flaring nostrils. \"'Nobody dates Matty.' That's not the spirit of The Rule; those are the actual fucking LETTERS of The Rule!\"\n\n\"I get it, I get it.\" I held up both hands defensively and muttered, \"I'm sorry! I... I mean... It was an impulsive thought, okay? I've... Please understand, I've wanted you for SO long... And now that we're finally... I mean... I'm not trying to say that everything's changed just because we had sex for the first time... But--\"\n\n\"But everything's changed because we had sex for the first time?\" she finished for me.\n\n\"Everything's changed because of the way you looked at me right after you came,\" I told her sincerely. \"That look of... love... I mean yes, finally having sex with each other changes things. But I've wanted to be with you since I first met you, and that's the truth.\"\n\nNaimh softened. \"And I've wanted you for a long, long time too.\"\n\n\"And I thought that... that now that we've crossed that line... that maybe we...\"\n\nShe shook her head. \"We crossed the sex line, yes. But Sam was right all along. We have to draw the line... an unbreakable line... somewhere. And there's a reason The Rule has the word 'dating' in it. You can't date one of us, not even me, no matter how much we might both want it. That would be the end of the BTC, period.\"\n\n\"You're right, you're right,\" I admitted.\n\n\"Did you even THINK of how Sam or Belle would've reacted if they'd heard you ask me out? I... shit. What time is it?\" Naimh suddenly whipped her head around left and right. We'd started this conversation because she'd been the first to arrive after school, but the others had all planned on coming over as well. \"Where the hell IS everybody?\"\n\nI was suddenly whipping my head around left and right as well, praying that none of the girls had actually heard me ask Naimh out. She was right: I hadn't thought about it. And a heavy stone sank into the pit of my stomach as I waited anxiously for one of them to step out from around the corner of the doorway or something.\n\nBut nobody came forth. The house was empty except for the two of us, which totally didn't make any sense. The others should have arrived and started ringing the doorbell at least twenty minutes ago.\n\n\"They're in the hot tub,\" Naimh announced from over by the glass sliding doors. She was still buck naked, as was I, the urgency of locating the others more important at the moment than any potential embarrassment over our nudity. Everyone had seen us naked before anyway.\n\nI walked over to join her, and sure enough, I could see four heads just above the deck in the hot tub, their clothes flung across the lounge chairs nearby.\n\nWithout another word, Naimh slid the door open and walked outside. The early-December air was cold, but she didn't close the door behind her, expecting me to follow. I was about to, but at the last second realized that nobody out there had any towels, so I quickly went to the linen closet and grabbed six towels before finally going out to join them.\n\n\"There's my dick!\" Sam cheered enthusiastically as I approached the tub. \"Do you have ANY idea how frustrating it's been to go cold turkey for almost two fucking WEEKS?\" \n\nI frowned. \"Has it been that long?\"\n\n\"Men.\" Sam rolled her eyes. \"I haven't had you since that Monday when Belle sucked out your creampie. Wednesday was the San Francisco trip, and then I know Alice leaving on Saturday kinda threw you off. But thank you very much, Neevie, for getting everything in working order! Although he looks cold. C'mere so I can warm him up! Or do you need a few minutes to recharge?\"\n\n\"Umm, what? How did you--?\"\n\nSam rolled her eyes and stared pointedly at my crotch. \"Dude, your dick's still wet.\"\n\nI glanced down to see that indeed, there were creamy streaks of pussy juice still drying on my limp penis. \"Uh, well...\" I exchanged a look with Naimh but decided trying to explain the situation wasn't going to do me any good, so I just went with it. \"Yeah, giving me a few minutes would probably be a good idea.\"\n\nSetting the towels down, I quickly went to sit down in the gap between Belle and Zofi. That put Belle and Mari on my left, Zofi and Sam to my right, and Naimh directly opposite the circle from me. All five girls were gloriously naked, but I was still rattled enough that I didn't bother ogling.\n\nGlancing at Belle, I asked, \"How did you all end up out here?\"\n\nBelle explained helpfully, \"When I saw that Neevie was here waiting for you, I decided giving you two a little privacy would be best. So I hung out front directing everyone to go around the side garden gate and just hop into the hot tub.\"\n\nZofi added, \"We did check up on you a little while ago. I went to take a peek through the sliding door.\"\n\nNaimh's eyes went wide. \"What did you see?\"\n\nZofi shrugged. \"Matty was giving you a backrub. Clearly, things didn't quite end there.\"\n\nNaimh and I both blushed, but neither of us said anything further.\n\n\"Don't be embarrassed,\" Sam said with a grin. \"You FINALLY got the one-on-one with Matty you always wanted. Was it everything you hoped for?\"\n\nNaimh blinked and looked down. \"It... uhhh... wasn't quite like that. We spent most of the time talking about Alice, actually.\"\n\n\"Oh.\" Sam winced and looked apologetic.\n\nThe redhead picked her head up, narrowed her eyes for a moment, and gave Sam a pointed look. \"To be perfectly honest, we... uh... we didn't finish.\"\n\n\"Didn't finish... having sex? What?\" Sam looked surprised.\n\n\"We both wanted to, but in the end it... the mood just wasn't quite right.\"\n\n\"Oh, I'm sorry.\" Sam sat back, her teasing, flirtatious demeanor evaporating.\n\n\"Don't be. Not your fault. But...\" Naimh's eyebrows waggled. \"You CAN be part of the solution.\"\n\nCurious, Sam sat back up. \"What's that?\"\n\n\"Like I said: we didn't finish,\" Naimh explained with a mysterious smile. She looked pointedly at me for a long second, and then returned her attention to Sam. And in an overly dramatic voice, she added, \"I feel REALLY bad for leaving Matty hanging with the massive erection he had. The poor thing! To be pressed up against this amazingly hot, naked body only to be denied at the very end? It's not fair. Can you help me out, please? You don't want him to get blue balls now, do you?\"\n\n\"Oh no!\" Sam exclaimed and clapped both hands against her cheeks with mock theatricality, catching on quick. Turning to me, she put on an expression of abject sorrow for my poor, neglected state and sauntered towards me across the middle of the hot tub, walking high enough for her entire upper torso to rise above the water so that streams of water ran down her gloriously wet and naked breasts.\n\n\"You poor thing,\" she murmured in that overly theatrical voice like some cheesy porn video, and climbed into my lap. Trapping my face against her bare cleavage, she wiggled her torso to make her melons jiggle against my cheeks, adding, \"Why don't you let me take care of ALL of your needs, hmm?\"\n\nSam suddenly yanked on the back of my head so that I looked up at her through her mountainous tits. She was obviously waiting for an answer. \n\n\"Umm, yes?\" I mumbled.\n\nThe busty blonde grinned and shoved her tongue down my throat.\n\n****\n\n\"Ohhh... myyyy... gawwwddd...\" I couldn't help groaning at the wicked sight before me.\n\n\"Enjoying this, aren't you?\" Belle asked from my left, almost absentmindedly rubbing my bare pectorals.\n\n\"You could say that,\" I agreed, my jaw hanging down so low it was practically in the water.\n\nMari leaned over from the other side of Belle. \"Is this really happening?\"\n\nNaimh rolled her eyes. \"C'mon, we already knew they were licking each other. Is this really such a big deal?\"\n\n\"Knowing something and seeing it right in front of your face are two completely different things.\"\n\n\"Seriously, guys,\" Naimh scoffed. \"Nobody freaked out like this watching Belle suck a creampie out of my cunt.\"\n\n\"Yes, we DID!\" Mari exclaimed. \"You were just too busy getting eaten out to notice.\"\n\n\"Oh... well...\" Naimh's voice trailed off.\n\nBelle fixed Naimh with a look. \"Just because you've seen them dyking it out before doesn't mean WE'RE already jaded to seeing this for the first time.\"\n\n\"Agreed,\" I said, adding, \"And watching them do this WHILE Sam's fucking me in the hot tub... I mean... Wowww...\"\n\nIndeed, Sam was fucking me in the hot tub, straddling my lap reverse-cowgirl. At the same time, Zofi was standing atop the submerged bench, one foot planted to either side of our legs, her pussy at just the right height for Sam to hold onto her BFF's ass and cram Zofi's crotch into her face.\n\nSam chose that moment to pull her head back, flash us a naughty grin, and announce, \"My first 'proper' threesome!\"\n\n\"And your first time fucking in the hot tub, for both of you, right?\" Belle asked.\n\nSam nodded. I replied, \"Obviously.\" \n\n\"I call 'next'!\" Belle announced. Mari giggled.\n\nZofi glanced down at the petite strawberry-blonde. \"If you don't want to wait, I'll let you switch with me now. Sam's REALLY good with her tongue.\"\n\nSam pulled her head out again and lasciviously licked her lips.\n\n\"Or if you sit up on the edge,\" Zofi continued, her blue eyes shining brightly, \"I'll take care of you right now.\"\n\nBelle's eyes got BIG as she stammered, \"N-n-no, not THAT! I meant fucking Matty in the hot tub!\"\n\n\"Don't knock it 'til you try it,\" Sam drawled. \"Zofi's tongue is the only thing that's kept me sane for the last two weeks.\"\n\nBelle's eyes remained big while she nervously shook her head in the negative.\n\nSam laughed and went back to her cunt-lapping. And I went back to gawking.\n\nIt was a rather awe-inspiring sight to see. Zofi was tall to begin with, and the sight of her slender form standing so far above me - water beading and running in rivulets down her firm breasts and the rest of her porcelain skin, normally puffy nipples crinkled hard in the cold air, her eyes closed as she bit her lip in blissful rapture - made her seem like the Greek goddess of love and beauty brought to life.\n\nWait, wasn't Sam supposed to be Aphrodite?\n\nWhatever.\n\nMeanwhile, Sam was still gyrating her ass in my lap while I used her big tits as handholds to help her move against the restrictive water, trying to get a little more sensation. As amazing as it was to feel the mental high of hot tub sex and watch the girls dyke it out right in front of me, my dick wasn't getting a whole lot of stimulation and I wasn't anywhere near cumming.\n\nZofi started getting cold after a couple of minutes exposing her wet body to the sub-60-degree air. She slid back down into the tub and gathered the warm water in her hands to vigorously rub her own tits, mashing her mammary flesh between her palms. Then, she cuddled up next to me for extra warmth while I wrapped my right arm around her, and she leaned in for a sweet kiss, those cold and erect nipples digging into my side.\n\n\"Thanks for the show,\" I told her after our tongues explored each other's mouths for a minute or so.\n\nHer sparkling blue eyes glittered. \"Anytime.\"\n\nMeanwhile, freed from being distracted by Zofi's pussy, Sam started humping me in earnest, her movements setting the hot tub's surface to sloshing. I gripped her tits tighter and really yanked her back to meet my upright cock, but she didn't seem quite satisfied with how difficult it was to get up to speed.\n\n\"Didn't realize fucking in a hot tub would be so HARD,\" she complained. I still loved how her Aussie accent turned that last word into \"HAHD\".\n\n\"Stand up and bend over the edge for a minute,\" I suggested.\n\nWilling to try anything, Sam dismounted my dick and went to kneel on her original seat. She then elevated out of the water so that her ass was in the open air, with her forearms braced on the deck.\n\nEven at my height, I wasn't quite tall enough to stand on the floor of the hot tub with my crotch above the water level. But when I planted my left foot on the bench beside her, I was just able to get my dick into the open air. So pulling Sam's ass down just a bit by the hips, I was able to notch myself into position and start thrusting inside.\n\nZofi had a front row seat, and gasped as she saw my thick prod stretching her best friend's cunt. She actually held her breath watching inch after inch disappear from view, and then flashed those pretty blue eyes back to my face while she blushed.\n\nThe cocky part of me wanted to ask, \"You want a turn?\" But the gentleman who had always played the role of the \"safe guy\" stifled the comment and I focused on Sam. The absolute LAST thing I wanted to do was make another virgin feel pressured into doing something she wasn't comfortable with and leave the club.\n\nSam the attention-whore, on the other hand, was super-eager to get properly plowed in her public sex debut, now that everyone could see the act without any water or bubbles in the way. She waggled her ass impatiently, trying to impale herself even faster while whimpering with obvious need. I gripped her hips and slammed her as hard as I could. There was still a lot of resistance from the water, but I could at least pound her pretty pussy with a little power this way. And she grunted and groaned in satisfaction at finally getting the sensation she would need to get off.\n\nBelle was suddenly standing next to me, pressing her tits against my side and reaching around to rub my chest and abs. The impish pixie muttered, \"Fuck the shit out of her, Matty. Make her cream on your beautiful cock. Fill up that tight twat with every drop of sperm you've got boiling in those big heavy balls so you and everybody else can watch me suck it back out. Oooh, you like that idea, don't you? Hmm? I love how you started fucking her even harder. Oh? Are you getting closer to cumming? Better pound that bitch into the ground. Harder, babe, harder. Oh you're such a fucking STUD! Fuck that bitch! Fuck the shit out of her! Harder! Harder! Oh my gawd you two look amazing! Why the fuck aren't we doing this EVERY day? Fuck-fuck-fuck-fuck--\"\n\n\"OOHHHWAAAAAAAUUUUUUGGGGGHHHH!!\" Sam started howling at the top of her lungs as she clenched up and came, loud enough for me to wonder what the neighbors might make of this racket. I knew neither of the houses alongside us had a viewing angle on the hot tub, but I sincerely hoped their windows were closed against the cold weather for noise reasons. Sam had collapsed face-down, her entire torso out of the water and across the deck, with her arms spread to the sides. When Belle had started egging me on, I had pushed her forward and down so that I could stand up on the bench and really lay down the lumber without the water in the way.\n\nFeeling Sam's snatch spasm around my shaft nearly sent me over the edge of ecstasy as well, but not quite. There was something I had to do first, something I should have done a long time ago but never quite got around to it. Other things just always managed to come up.\n\nBut not today. Belle was still right next to me, staring heatedly at my prick pistoning in and out of Sam's pulsing pussy. I slammed in and out of Sam three more times, just enough to feel my balls come to a full boil. And at the last second, instead of giving the busty blonde a cream filling, I yanked myself out, grabbed Belle by the head, and parked her right in front of my waving wet dick.\n\nI roared as the first ribbon of jizz flew out of its own accord, unguided but accurate to splatter straight across the bridge of Belle's nose and down her cheek. She gasped in surprise, her mouth gaping open just in time for the second shot to half fly in, with the rest coating her chin. By then, I'd let go with one hand to stroke my own shaft and guide a squirt across her forehead and over her left eye. And taking a half-step forward, I managed to pump out the rest of my jism directly between her eyebrows and held her in place there with my left hand while she closed both eyes and giggled while feeling me paint her face with my cum.\n\nThere was a LOT of it, by the way. Fucking Naimh but not cumming had triggered my balls to start manufacturing more than half an hour ago. Having Sam ride me in the hot tub, first cowgirl and then reverse cowgirl so that she could eat Zofi's pussy sent my testicles into overdrive. And let's face it, I'd only cum twice before in the past eight days: once straight down Mari's throat after our \"study break\" and once more straight down Belle's throat an hour later (pulling out of her pussy to let her swallow since I'd felt bad for denying her all week in my depression). \n\nThe point is: Belle's tiny little face got completely COVERED in cum, just as Sam had fantasized more than a week ago. Mari had started squealing the instant I'd started hosing Belle down. Naimh was laughing. And Zofi was cheering.\n\nSam, unfortunately... well, Sam missed it. She'd been pretty wiped out by her own orgasm, and was still lost in dreamland when I'd pulled out and started coating my \"little sister\" in cock cream. When she came to and found that Belle had already licked up what she could find and was scraping the rest into her mouth, she got a little upset, whining to me, \"How could you let me miss Belle's first facial! You gotta do it AGAIN!\"\n\nSince I was sitting back down in the tub by now, my arms stretched out across the deck to either side of me, I'd wheezed and said, \"Fine, but I'm gonna need a minute.\"\n\nMeanwhile, Zofi had spotted a dollop of cum on Belle's forehead that my \"little sister\" had apparently missed. She bit her lip and quivered until she couldn't take it anymore. Suddenly, she darted forward, grabbed Belle's head to lick up that dollop, and then jammed my creamy cum straight into Belle's mouth with her tongue.\n\nBelle squeaked as she suddenly found herself in her first lesbian lip-lock. At first, she looked like she didn't know how to react. But as she began sucking on Zofi's tongue and tasted my jizz, \"Matty's cumslut\" came to life and she wrapped her arms around Zofi's head to return the kiss in earnest.",
        "\"Woo-hoo!\" Naimh cheered.\n\nSam started laughing.\n\nMari was speechless and silent, her mouth gaping open and her eyes now the size of dinner plates.\n\nNaimh sidled up to me, a warm smile on her face as she leaned over and set her head down on my shoulder. She seemed MUCH more relaxed now than she'd been since before setting foot in my house today, and I wrapped an arm around her shoulders. \"Hey you,\" I greeted while kissing the crown of her head.\n\n\"I'm sorry for earlier today,\" she said apologetically. \"You were right about everything. I was just stuck in my own head, but I think I'm better now.\"\n\nI winced. \"Well there was definitely ONE thing I was wrong about: I never should've asked you that question at the end. I'm sorry about that. I really HAVE wanted you forever and I just got caught up in the giddy excitement. You made the right decision, saying 'no'.\"\n\nShe glanced up at me. \"I didn't say 'no'.\"\n\nI frowned at her. \"Didn't you?\"\n\nShe shook her head. \"I said, 'We can't do that.' There's a difference.\"\n\nI blinked, processing that.\n\n\"A huge part of me wanted to say 'yes',\" she continued. \"But these girls mean everything to me, you know?\"\n\n\"I know.\"\n\n\"So... don't go feeling rejected or anything, hmm? I'm definitely not saying 'no'. If anything, I'm saying... 'not yet'.\"\n\nI arched an eyebrow. \"'Not yet' implicitly suggests a 'Yes, eventually'.\"\n\nNaimh grinned. \"Yes, it does.\"\n\n****\n\nEverybody was pruning, so we got out of the hot tub to head into the house. Even though I had literally just ejaculated, I still got a kick out of watching five hot babes climb out of the water buck naked, and I ogled all the exposed flesh I could see. I told them I'd collect the clothes and bring them inside.\n\nThe girls didn't get dressed, though. Everyone seemed to have gotten over any lingering shyness, and even Mari was happy to show off her goodies. Sam said it reminded her of the naked in high-heels bootcamp and that it was quite freeing to be able to walk around my house without any clothes on. Zofi was quick to suggest the group of us should do it more often. In the meantime, it wasn't close to dinnertime yet, so we headed up to my bedroom so I could satisfy the BTC members I hadn't gotten to yet.\n\n\"Wait!\" Belle exclaimed. \"I'd called 'next' on hot tub sex!\"\n\n\"You'll have to settle for Matty's bedroom sex,\" Sam told her.\n\n\"But I can already get Matty's bedroom sex whenever I want,\" Belle whined.\n\n\"Annnd just for THAT little comment... You, miss, are going LAST today,\" Sam declared, smacking her right hand into her left palm like a judge banging a gavel.\n\nThe girls all chuckled, even Belle, who realized she'd shot herself in the foot.\n\nZofi wanted to go for a mustache ride first, even though I didn't have a mustache. Mari wanted to deep-throat me. These things were ordinary enough. What was NOT ordinary was Naimh dropping onto my queen-size bed right next to my head, spreading her legs apart, and then Sam climbing into place between them. Sam actually turned and winked at me before dropping her face and taking a long, languid lick at the Irish redhead's pink pussy. But I didn't have time to really think about it as Zofi settled her own pink pussy right on top of my face. So I grabbed her tight model's ass and crammed her crotch into my sucking mouth. Then I reached up to palm her D-cup tits and start tweaking her nipples just the way I knew she liked them.\n\nMari went for a mustache ride after Zofi while Belle took over sucking my cock. Naimh screamed her orgasm a minute after Zofi had cum, so I made a snarky comment to Sam about being the better pussy-eater. Sam promptly sat up, looked over at Belle, and asked, \"Hey, you sure you don't wanna try dyking a bit?\"\n\nBelle's mouth was full of Matty-dick, but her eyes went wide in surprise before she shook her head and pulled off. \"Uhhh, I'll take a rain check on that.\"\n\nSam shrugged. \"Mari?\"\n\nStill on my face, the Latina girl looked down in a near-orgasmic daze. \"Whuh...?\"\n\n\"Another time, perhaps,\" Sam drawled and then winked at Naimh. The two of them switched places, and I nearly blew in Belle's mouth when I saw the Irish redhead start eagerly lapping at the busty blonde Aussie's twat.\n\nAfter I got Mari off, Belle blew me to the brink of eruption. But when I started grunting that I was gonna cum, Naimh abruptly pulled her head out of Sam's crotch, wiped her face with her forearm, and yelped, \"Not yet! I need to climb on that monster and finish what we started this afternoon!\"\n\nI set my head back down, caught my breath, and let myself walk back away from the edge of orgasm, metaphorically speaking. Meanwhile, Belle withdrew, Naimh climbed aboard, and I grinned in happy delight to finally have the most gorgeous girl in the world sitting on my cock once more.\n\nTwo minutes later, the others started walking out the door. Naimh and I both looked up in surprise, but Belle explained, \"You said you never finished your one-on-one earlier, so we figured we'd give you some private time.\"\n\nI frowned. \"But didn't you call 'next'?\"\n\n\"I'm good. We can make it up another day.\" Belle blew me an air kiss with her hand. \"Take your time. We'll go start on dinner.\"\n\n\"Aww, thanks guys!\" Naimh exclaimed cheerfully.\n\nThey all filed out, everyone except for Sam, actually, who hung back and stared after us with a bit of a confused expression on her face. But a moment later, Zofi came back, grabbed the blonde by the elbow, and flashed us an apologetic look as she dragged Sam out the door and then closed it behind her.\n\n\"Now, where were we?\" I asked quietly as I cradled Naimh's beautiful face in my hands and stared joyfully into emerald-green eyes that stared right back at me the same way.\n\n\"Alice was right. I'm in love with you, Matty,\" she said quietly while pecking my nose. \"No, I won't date you. I swore I'd never betray the BTC, and I never will. But... yeah... I've been in love with you since forever.\"\n\nTaking a deep breath, I nodded and said the only thing I could in that situation. \"Thank you. It means a lot to me.\"\n\nThe redhead giggled. \"Not gonna say it back to me? Not even to get into my pussy?\"\n\n\"I'm already in your pussy,\" I pointed out while flexing my Kegels to make my dick twitch inside her.\n\n\"I'm glad,\" she said. \"Because after going a week without feeling you inside me, not even my mouth, I don't EVER want to go this long without you again.\"\n\n****\n\nAfter dinner, we assembled in the family room to watch a movie. Alice's absence was still in the back of everyone's mind, but at least nobody got left out of musical chairs. Still, we did have one small moment of drama with regards to the seating arrangement after Mari and Belle snuggled up to either side of me on the 3-cushion couch.\n\n\"Switch with me,\" Sam told Belle. \"You get to cuddle with him whenever you want.\"\n\nAlready comfortable and nestled beneath my right arm, with her legs pulled beneath her and to the side, Belle looked up at the taller girl in surprise. At first, Belle looked ready to respond with some kind of 'You snooze, you lose' sort of comment, but Sam added a quiet, \"I've missed being with him for almost two weeks. Please?\"\n\n\"Sure, no problem,\" Belle replied and got up, moving over to the loveseat with Zofi (who looked pretty jazzed to have Belle alongside her). Naimh was in the armchair, the DVD remote in hand as she skipped through the previews to get to the main menu.\n\nA minute later, I had my arm around Sam's shoulders, but she gently tugged my hand downward, placed my palm directly over her right breast, and then added a little pressure so that my fingers molded around the curvature of her underboob. Feeling a little bold, I let my left hand slide down Mari's chest, over her left breast, and palmed her boob as well. The lovely Latina flashed me a quick smirk and reached up to pat my hand, cupping my fingers around her breast a little more firmly. And then she dropped her right hand onto my leg, rubbing my left thigh gently.\n\nThe days of me keeping my hands to myself, waiting (hoping?) for one of the girls to give me permission to go exploring, were starting to feel like a distant memory.\n\nTwo minutes into the movie, Sam's left hand started rubbing my right thigh. Three minutes after that, she started rubbing my bulge. If Mari noticed, she didn't comment or interfere. And then two minutes after that, Sam took hold of my right hand and guided it inside her scoop-necked sweater.\n\nI inhaled rather sharply when I felt bare tit-flesh filling my hand, and I'm pretty sure my dick twitched as well. Mari glanced up at me, and a moment later she leaned forward to look around me and see what Sam was up to. As soon as she recognized that my right hand was inside Sam's sweater, she quickly pulled my left hand into her sweater as well.\n\nMe? I was grinning like an idiot, holding two naked breasts in my hands belonging to two different girls. Even more amazing, they were the biggest breasts in the BTC, with both girls wearing 36DD bras. Even though I was no longer a virgin dreaming of getting laid, it was still quite a thrill to be in my position.\n\nWhile the girls had changed back into their clothes after the hot tub and subsequent sex session in my bedroom, I'd elected to go with a clean t-shirt and a fresh pair of gym shorts. Sam's steady rubbing and the feeling of Double-Ds in my palms had my dick rock hard and extending down my leg. It was easy enough for Sam to pull the leg-hole of my gym shorts and boxers back and wrap her hand around my shaft so she could start stroking me in earnest. But two minutes later, Mari's hand went in search of my bulge, figured out what was going on, and she leaned across me to ask quietly, \"Hey Sam, can I have a turn?\"\n\nSam grinned, and a moment later I found my bare erection getting stroked by Mari's right hand.\n\nThe girls took turns jacking my cock for the next ten minutes, neither of them progressing any further than that. We actually watched the movie. It wasn't a particularly sexy movie or anything, so my level of arousal was kept at a mild simmer due solely to the breasts in my hands and the girls stroking my shaft. But then Sam twisted to face me while it was Mari's turn to play with my manhood, pulled my head to hers, and puckered up to give me a sweet kiss.\n\nMari felt me throb the instant Sam's tongue slithered into my mouth, and she stifled a giggle. She didn't stop jacking my dick or anything, and in fact began stroking me harder. A minute later, the shy little wallflower surprised both of us when she leaned over and whispered, \"I wanna see you ride him.\"\n\nSam broke the kiss and glanced at Mari. \"Right here? During the movie?\"\n\nMari shrugged. \"Why not? You're making up for lost time, aren't you?\"\n\nSam's eyes glittered, and she immediately started to tug her jeans off while I went ahead and dropped my gym shorts and boxers down to my ankles. The movement was quite different from just pawing at each other during the movie had been, and was enough to draw the attention of the others in the room. Naimh rolled her eyes and returned her attention to the TV. Belle and Zofi gawked a bit, shared a little grin, and likewise turned back to the TV. But Zofi kept stealing glances in our direction as Sam got herself naked from the waist down, moved to straddle my lap reverse-cowgirl, held my dick upright, and slowly sank her tight twat down around my flagpole.\n\nWe'd come a LONG way since that night Sam got upset seeing Holly give me a handjob beneath a blanket.\n\nOnce she got me firmly embedded, however, Sam was in no hurry to make me pop. We went back to watching the movie, albeit with a busty blonde bombshell sitting in my lap squeezing her cunt muscles around my cock every so often. She also snaked my right hand up beneath the hem of her sweater so I could go back to playing with her tits again.\n\nIn the meantime, Mari didn't have a cock to play with, but she settled for sliding her left hand into her own sweater to cup my hand over her boob and guide it in fondling her breast and nipple just the way she liked it. At the same time, she leaned into me, puckered up, and we exchanged a sweet kiss.\n\nI completely forgot about the movie at that point. It just felt too nice to hold Mari like this and kiss her tenderly, thumb her nipple, and feel a snug pussy around my dick. Sure, in the back of my head, I was aware that it was actually Sam's snatch surrounding my shaft, but if I lost myself in Mari's embrace, I could almost imagine I was fucking virginal Mari instead. I moaned and squeezed her a little tighter at that thought, and she moaned into my mouth and squeezed ME a little tighter. There was no rush. Mari and I made out in a languid, unhurried fashion not unlike many of our makeout sessions in Belle's bed. I pivoted my hips around just enough to make my cock carve the inner canal walls constraining me. And even though my dick was quite literally inside Sam at that very moment, I found myself moaning, \"Mari... Angel...\" into our liplock.\n\nShe definitely heard that.\n\nBut as nice as it was to makeout with Mari, there was only so long I could stay embedded in a snug pussy and NOT want to get off. The way things were going, Sam seemed likely to sit there until the movie was finished before really going to work, and I needed to speed that process along. Pulling my left hand out of Mari's top, I snaked it under Sam's sweater so that I could grab both breasts at the same time, and I gripped them as handholds to help tug her body downward while using the springiness of the couch cushions to help me thrust in and out of her.\n\nSam moaned when I started doing that, and I dropped my right hand to bracket her clit and start fingering her. That REALLY got her going, and she started to undulate her body in rhythm with my thrusts. You'll recall that Sam was never good at keeping quiet, and when she started whimpering and whining Naimh actually turned and tried to shush her with a finger over her mouth. But even biting her lip and clenching her teeth couldn't keep Sam's vocal cries from sounding off in the darkened room, and eventually Naimh just paused the movie and said, \"Hurry up already!\"\n\nFreed from her futile attempts to keep the volume down, Sam not only started screaming in ecstasy but she also started humping me without restraint. Whereas she'd been limited to circular undulations to keep her movements subtle, the big-titted blonde started using her legs to raise her body up several inches and slam her butt down into my lap over and over again, truly FUCKING me now as she raced towards climax.\n\nHer movement dislodged my hand so that I couldn't diddle her clit anymore. No matter, because Sam replaced it with her own hand, strumming rapidly as she accelerated towards orgasm. I had to grab onto her hips just to hold on for the ride, lest she buck so far up that we'd get disconnected. And less than two minutes after Naimh paused the movie, Sam threw her head back and howled her release.\n\nBut I hadn't been ready to cum yet. Sam may have been pretty well primed for a short fuse from the slow-dicking and clit rubbing, but I felt like I'd been starting from scratch. Her slow and subtle movements had kept me hard, but that was about it. And two minutes of Sam's hyper-fucking hadn't been enough to get me even close.\n\nI needn't have worried, not with four other hot babes who all had my best interests at heart. Mari took one look at the expression on my face and quickly helped Sam climb off my lap. The instant my wet dick was waving in the open air, she sank to her knees in front of me, planted her hands on my knees, and swallowed my dick down to the root. It was so easy for her to deep-throat me now. And for the next few minutes, she blew me with expert technique, bringing me to the brink faster than I would have imagined.\n\n\"Dayyum,\" Zofi exclaimed with a laugh. \"When did Mari become the blowjob queen of the BTC?\"\n\nMari's eyes twinkled as she glanced over at the brunette. She happened to be at full-depth at that moment, and when she actually managed to snake her tongue out to lick my balls, the added sensation set me off.\n\n\"Ohmigawd, Angel,\" I grunted.\n\nThat was all the warning she needed. She pulled back just far enough to take a deep breath through her nose, inhaling all the oxygen she could. The next moment she slammed her face all the way down and sucked powerfully, drawing out my explosion.\n\n\"Nnngggaaahhhh!!\" My semen burst forth, pouring like a firehose straight into Mari's belly. The other girls shrieked, squealed, or otherwise exclaimed their astonishment watching the shyest member of the group drink down every drop like a pro. I think they enjoyed the sight even better than me.\n\n\"DAYYUM!\" Zofi repeated even louder. \"Mari! You're swallowing him!\"\n\nBelle was laughing. \"She's just showing off now. She first did it yesterday afternoon.\"\n\nBy then I had finished spurting and collapsed like a limp fish into the couch. Mari pulled off, swallowed audibly, and turned around while gaping her mouth wide open so everyone could see it was empty. The girls surrounded her, cheering, and after she stood up they all hugged her like she'd just won an Olympic medal or something.\n\nMe? I was an afterthought, discarded after my role in the achievement was complete. Not that I minded. I wallowed in the blissful haze of post-ejaculatory contentment, observing as Mari enjoyed her moment.\n\nSpeaking of Mari, she basked in the glow of being the center of attention for a couple of minutes, but then started waving the girls down while saying, \"Hey-hey-hey, since I have your attention, I have a little request to make.\"\n\nIt took another minute for them to settle down, but eventually everyone shut up and waited to see what she had to say.\n\n\"I realize that this request goes in direct violation of The Rule, but I promise I'm not looking to steal him from the rest of you or anything like that. Next Saturday, as in a week from tomorrow, I'd like Matty to take me out on a date.\"\n\n\"Wait, what?\" Belle asked in surprise, not having advance warning for what her best friend was asking.\n\n\"You mean like a date-date?\" Zofi looked confused.\n\n\"Nobody goes on dates with Matty. That's The Rule!\" Naimh chirped next, perhaps thinking of her own flat refusal to go out with me earlier this afternoon.\n\n\"Holy shit!\" Sam exclaimed, clapping both hands over her mouth as she came to a realization. \"Are you serious?\"\n\nMari raised her eyebrows at Sam, blushed pink, and started nodding.\n\n\"Serious about what? I don't get it.\" Now Naimh looked confused.\n\n\"Ohhh...\" Zofi's blue eyes got big as she seemed to catch on.\n\nThen Belle got it. \"Oh, Mari!!\" She promptly bear-hugged her BFF from the side.\n\nSam frowned. \"Have you asked him yet?\" She turned to look at me.\n\n\"No. I knew I'd have to clear it by you guys first.\"\n\n\"Well the answer is YES, of course,\" Belle exclaimed.\n\n\"Wait-wait-wait. Are we still talking about going on a date?\" Naimh now looked REALLY confused, which matched the way I felt. \"Because The Rule--\"\n\n\"Doesn't apply in this case,\" Zofi stated. \"If you're asking permission, the answer is YES for me too.\"\n\nSam nodded. \"I'd be a total hypocrite if I said no, after the way my last date with him ended up.\"\n\nZofi giggled. \"Yeah, exactly the way Mari's date is gonna end up.\"\n\nNaimh blinked twice and finally got it. \"Ohhh.\" And a beat later she exclaimed, \"Ohmigawd!\"\n\nI was still pretty slow on the uptake. I blame the recent ejaculation. So speaking up, I asked, \"Will somebody tell me what's going on?\"\n\nAlmost as one, the girls all rolled their eyes at me for being a dense \"boy\". All except Mari, that is. She took a step closer to me, clasped her hands in front of her left thigh and looked at me quite nervously, returning to her shy wallflower natural state after the momentary high of being the Blowjob Queen of the BTC.",
        "\"Next Saturday... A week from tomorrow... Will you please take my virginity?\"\n\n****\n\n-- CHAPTER 14: Mariangel --\n\n****\n\nThe next week flew by really fast, but then you know what they say about how time flies when you're having fun. And that next week was REALLY fun. For one thing, I got laid every single day. For an 18-year-old who had started the academic year as a virgin, that's an incredibly amazing achievement. If you had told me before school started that I would have a week in December during which I would have sex a minimum of one time per day, I would have thought you were crazy. And yet, here we were.\n\nBelle came over by herself on Saturday morning; she'd never gotten her hot tub fuck, you see. So we skinny dipped, made out like a pair of lovesick teenagers, and she ended up straddling me on the bench with my dick in her tight twat. With our height difference, putting her in my lap like that put our faces at the same level, quite convenient for kissing.\n\nThat turned out to be a LOT harder than we'd been expecting. My petite little strawberry-blonde still had a SUPER tight pussy, and the water was washing away all of her natural lubrication. We even tried getting her mounted out in the open air first intending to THEN sit down in the tub, but it was fucking COLD outside and we were both so frustrated that I was having a hard time staying erect and she wasn't getting wet at all. In the end, I actually went into the house to grab the bottle of lube I'd purchased to help situations like this. We got me lubed up, we got her lubed up, and we just barely managed to get me inserted out in the open air fast enough to not get TOO cold. And then we finally sat down in the tub.\n\nIt wasn't our best sex session ever. Neither of us even had an orgasm. But it was a bucket list item she got to check off, and taking a shower together afterward was really fun. We then fell into my bed and made love the normal way. And in the end, \"Matty's cumslut\" asked me to pull out so I could blow my load all over her face for just the two of us, with no other girls around. \n\nAfterwards, we went out to get lunch together. Technically, we weren't on a \"date\", but Belle held my hand walking between the restaurant and the parking lot, rubbed my knee beneath the table, and kissed me a few times along the way. We also went back to her house, since her dad was out, and fucked again since we could use her bed. I don't know how you define the term \"date\", but that sounded like a pretty good date right there.\n\nOn Sunday morning, Mother and I went to brunch. She commented on my improved mood in comparison to the previous week, and asked if Alice had rejoined the BTC. I explained that she hadn't, and while I was still sad about that fact, both sides had learned to move on. In the privacy of her car on the drive back home, she asked how things were progressing with the other girls in the club, and while I was trying to be careful not to give anything away, my lawyer mom found a lot of answers contained within my non-responses. In the end, she merely said, \"Make sure she's using protection,\" and left it at that.\n\nSunday night, Sam came over and said she was antsy. She spoke politely with Mother, although there was a subtext to their conversation I didn't quite understand. In the end, she led me by the hand up to my room and started kissing me while reaching her hand into my pants. I hissed, \"My mother's right downstairs!\"\n\nSam rolled her eyes, replied dryly, \"I'm aware of that,\" and unsnapped her bra. She ripped both her sweater and the bra away, planted her hands on her hips, and gave me an imperious look, commanding, \"Drop your pants.\"\n\nI took one look at her big 36DD boobies in my face and dropped my pants. \"Can you at least TRY to be quiet?\" I pleaded.\n\nThe pretty platinum-blonde scrunched up her face, shook her head in the negative, and replied, \"Nah.\"\n\nShe was definitely a screamer.\n\nMonday afternoon, Sam, Belle, and Mari were all at Belle's house per usual. Belle got it into her head to mount me reverse-cowgirl in her desk chair, roll us up underneath the desk, and just sort of undulate on me while continuing to do her homework. That lasted about five minutes before I rolled the chair back, bent her over the desk, and blasted my pelvis against her ass a bunch of times before blowing my load deep inside her. She was so short, her feet didn't even touch the floor the whole time.\n\nSam took one look at the jizz oozing out of Belle's sodden snatch and asked if she could suck out the creampie. Belle blushed, gave Sam an apologetic look, and muttered, \"Uhhh... I don't think I'm quite ready to go there just yet.\"\n\nSam shrugged like it was no big deal and said, \"Fine. I'll just have to get it straight from the source.\" She then bent over and took a long lick along my half-hard penis and drawled, \"You taste pretty good, Belle.\"\n\nMy little pixie blushed pink to the tips of her ears.\n\nSam then went back to sucking me. She didn't even fuck me that afternoon. She just gave me an AMAZING blowjob that freaking blew my mind and nearly rendered me unconscious. The fact that I'd cum into Belle's pussy just minutes earlier actually worked against me, since it only prolonged the agony and nearly had me crawling out of my skin from pleasure overload. And after Sam swallowed every last drop, she shot Mari a challenging look as if to say, 'Hey, top THAT.'\n\nTuesday used to be Naimh and Alice day. Now it was just Naimh day, and the Irish redhead took advantage of the situation to full effect. We fucked three times in a single afternoon, in every position, all over my house. \n\nFirst I fucked her on the stairs.\n\nShe rode me on a table chair.\n\nI bent her o'er the kitchen isle.\n\nShe gave me such a blissful smile.\n\n(Go back and read that with a Dr. Seuss rhythm)\n\nI drew the line at fucking in Mother's bedroom though -- that would've been just too weird. We also didn't fuck in my room or the family room, since... well... we'd already had sex in those places. I came all over her when she parked her face beneath my cockhead, eyes closed and mouth gaping. We took a shower together to clean it all off and started round two in there. I came in her mouth the second time when she had me pull out during the kitchen island fuck so she could duck and swallow my load. The final ejaculation she kept inside her cunt. She pulled her panties on immediately afterward, saying she wanted to feel me squishing inside of her for the whole drive home.\n\nI didn't finish my homework.\n\nWednesday Sam and Zofi teamed up on me, although I obviously wasn't having sex with Zofi yet, nor would she put my dick in her mouth. She DID still like licking my cum off of Sam's tits and snowballing it into Sam's mouth. I asked her about that apparent discrepancy, not wanting to suck my dick but having no issues tasting my jizz. She shrugged, said the idea of giving me a blowjob didn't really turn her on. Perhaps if I was her boyfriend and I had no one else to give me blowjobs, she would have done so out of obligation, but I clearly had other sources for BJs, and so she didn't need to. As for the snowballs, she said my cum didn't taste bad or anything, and she got a naughty thrill out of feeding it to the other girls.\n\n\"And hey, it got me a chance to kiss Belle, didn't it!\" Zofi enthused happily.\n\nThursday was Belle and Mari day, and while Mari was obviously waiting for Saturday to lose her virginity, she was more than happy to let me nurse at her nipples, eat her out, and blast my cum straight down her gullet. Belle just wanted to get laid, period, since she'd had a stressful day at school. She even came over to my house in the evening as well, saying she slept much better at night with a belly full of Matty cum.\n\nFriday, of course, all the girls came over right after school. Surprisingly enough, I only had sex once that day. The girls wanted me to conserve energy for my date with Mari, you see. Okay, technically, I had sex with Naimh, Belle, and Sam, but I only ejaculated once (Naimh and Sam got a double-facial). The rest of the time we hung out, played Texas Hold 'Em for pennies, and generally had a good time as friends. As much as I enjoyed grabbing asses, sucking on titties, and pounding my prick in and out of plentiful pussies, when you removed the sex stuff from the schedule it freed up a lot of time for the other things we used to do together in the BTC, and I found I'd started to miss that.\n\nNot enough to stop having sex with the girls. I'm not CRAZY. But yeah, a change of pace once in a while wouldn't be so bad.\n\nAnd then came Saturday.\n\n****\n\nMari had asked me to take her out on a date, a date that would end with me taking her virginity. Other than that, she hadn't provided me with any specifics. As the male party to the encounter, I was expected to come up with the schedule, pick her up, pay for the meal, and generally be responsible for making the night truly worthy of the momentous occasion. Fair or not, those were the expectations.\n\nFortunately for me, I had an ace in the hole.\n\n\"Do you need me to write it all down?\" Belle asked me for the third time.\n\n\"No, no. I got it,\" I reassured her, chuckling.\n\nThe short pixie reached up, checking my tie for the fourth time. \"I just don't want anything to go wrong.\"\n\nI laughed and gently pushed her hands away. \"Relax. Everything will be fine. Aren't -I- the one who's supposed to be nervous before a first date?\"\n\nBelle snorted. \"Guys are only nervous before first dates because they're wondering whether or not they're gonna get laid at the end of the night. For you, it's a foregone conclusion.\"\n\nI arched an eyebrow. \"I imagine you're right, but how you came by that knowledge I don't want to know.\"\n\nBelle chuckled and ran both hands down the front of my shirt. She rubbed my pectorals for a moment, smiled softly, and then raised her eyes to mine. She quickly went up on her tiptoes and puckered up, so I gladly gave her a sweet kiss. For a moment, her eyes unfocused as she looked lost in thought, and I raised her chin up with my fingertip.\n\n\"Hey, you alright?\"\n\nBelle sighed and looked up at me, her pale green eyes just a tad moist. \"Your first date with a BTC girl. I know I was the first one to say it was okay, but... it just feels a little weird, you know?\"\n\nI shrugged. \"I think we can agree the wedding thing with Sam was my first date with a BTC girl. As for this one with Mari, we both know she's not going to try and steal me from the group. This really is just one special night for her, and that's it.\"\n\nBelle gave me a sad look. \"When's MY special night gonna happen?\"\n\nI frowned. \"Wait, NOW you want a special night? That night when you gave me your cherry, I TOLD you I'd get dressed up and take you out to a fancy dinner, rent a horse-drawn carriage, the whole nine yards.\"\n\nShe shook her head immediately. \"I never needed any of that to give you my cherry. What we had was great... apart from the whole ridonkulously painful first time. Otherwise, I don't regret a thing.\"\n\n\"Then what is it?\"\n\nBelle shrugged, sighed, and gave me that sad look again. \"I'm still in love with you, Matty. But I know Sam's in love with you, and Neevie's in love with you, and while I don't think Mari's quite there, by the end of tonight she might very well be in love with you too.\"\n\nI sighed. \"I think a lot of teenage girls think they're in love because they're teenage girls and they don't know any better. I'm not sure if ANY of us really know what love is.\"\n\n\"Well -I- know I love you.\" Belle suddenly pushed my chest. \"And I thought you said YOU loved ME?\"\n\n\"I DO,\" I told her unequivocally. \"You're my Annabelle.\"\n\n\"I'm not talking the love of a 12-year-old boy terrified of losing his sister.\" Belle's eyes narrowed as she folded her arms across her chest.\n\n\"Neither am I.\" I held her upper arms firmly and leaned down to kiss her. She kissed back, but not passionately, and when I pulled away her eyes were still narrowed. \"I meant what I said before. If you asked, I'd leave the BTC to be with you. I may not be one hundred percent sure I know what love is, but THAT'S how I feel about you, and only you.\"\n\nBelle shook her head. \"I've told you a million times: I'm not breaking up the club for you.\"\n\n\"I know you have. But that said, we clearly don't need the club's permission to be alone together. We get to be alone all the time. And if you ever want a special night with me, we can just get up and GO.\"\n\nBelle pursed her lips and shook her head. \"No we can't.\"\n\n\"Why not?\"\n\n\"Because I'd have to tell the girls I had a romantic date with you. I wouldn't hide that from them.\"\n\n\"You mean the way you hid that we were having blowjobs and oral sex for two weeks? Or how you hid that we were having sex when the whole club was dropping the hammer on Sam?\"\n\nBelle frowned and rubbed her forehead. \"And I came clean in the end both times. No, we're not doing a romantic date without the BTC's permission.\"\n\nI shrugged. \"Then ask permission. Sam's had a date. Mari's getting a date tonight. Just... ask.\"\n\n\"Maybe...\" Belle took a deep breath and exhaled slowly. \"Maybe... but not tonight.\"\n\n\"Of course not.\"\n\nBelle nodded once, firmly, and gave me a hard look. \"Sure you don't want me to write it all down?\"\n\nI rolled my eyes and shook my head in the negative. \"Relax. I have this.\"\n\n****\n\nI didn't have it.\n\nThe date was a disaster. Well, that's overstating it. Everything turned out alright in the end, but it definitely STARTED as a disaster.\n\nFirst of all, the van broke down in the middle of the freeway. I don't know WHAT went wrong, but all of a sudden the whole vehicle was shaking itself apart and the check engine light came on. I managed to pull us over to the side of the road, turned on the emergency flashers, and stared at Mari with a \"Holy shit\" expression.\n\nI'll remind you that I went to high school during a time before ubiquitous cell phones. Back in those days, the California Department of Transportation installed Call Boxes every couple of miles on the freeways. I took a guess at the direction of the nearest one, left Mari in the van, and went walking down the shoulder in search of one to call for a tow truck. Fortunately, we only had to wait a half-hour for one to arrive and tow the van to a nearby shop. From there, I called a taxi and got us a ride to the very expensive and exclusive restaurant, only to find that we'd missed our reservation and the hostess at the stand wasn't very hospitable about my explanation of the broken-down van. In the end, right when I'd started complaining to her manager right there in the lobby that they could at least still fit us in, shy little Mari decided she couldn't deal with the confrontation anymore and asked if we could just leave and find somewhere else to get dinner.\n\nAcross the street was a local diner. You know: red vinyl seats, white countertops, greasy fries, and a waitress fresh off her smoke break. Mari in her nice evening dress and I in my suit and tie were quite out of place, and I was still angry about the treatment we'd received at the restaurant, so the mood wasn't ideal. But Mari was doing her best to placate me, and it wasn't until halfway through our meal that I remembered that I was supposed to be making this night special for HER. And yet there she went spending all that emotional energy making ME feel better.\n\nI also knew that while my ego wanted to try salvaging the situation entirely on my own, there was still a chance to make things right by acknowledging that I wasn't alone, and that I could get help on my side if I only asked. So that's when I excused myself to go call Belle at her house, explain what was going on, and have her come pick us up in Mari's car.\n\nSee, Mari didn't want me to pick her up for a date from her own house; too many weird questions that way. So she'd told her parents she was visiting Belle and would be back by her 11pm curfew, which meant she'd left her car at Belle's house (and fortunately, her keys, since she didn't want to carry around her heavy purse). She'd also stashed the dress they'd bought together during the week at Belle's house, and she'd changed her clothes and fixed up her makeup at Belle's place before I walked over to pick her up with a big bouquet.\n\nShit, I'd left the bouquet in the van. No matter.\n\nThe point is: Belle picked us up from the diner, we took Belle back home, and then we tried to get back on schedule.\n\nBelle had reminded me how much Mari loves Christmas and all the various decorations, so I drove Mari through one of the neighborhoods that really goes all out with the lights and music and everything. She ooh'd and ahh'd at everything before I drove her to a cute little hole in the wall place that had the most amazing desserts.\n\nMari LOVED dessert. She had forced herself to stay away from sugary, butter-laden confections for the past few years as part of her drive to get into shape. She exercised like crazy, but even exercise can only take you so far if your diet is shit, especially when your DNA is filled with genes that give you 36DD tits on a 5'4\" frame and a big booty to match. She was the kind of girl who would never have six-pack abs, no matter what she did. But she'd worked hard to get to her Salma Hayek-esque hourglass figure, and it showed.\n\nSo you see, sharing a mountain of ice cream atop a fresh-from-the-oven brownie with syrup, sprinkles, and a cherry on top was quite the delight for her, and nearly made up for the botched reservation on its own.\n\nThus riding a sugar-high, Mari let me drive her back to my house where I scooped her up in my arms, carried her up the stairs and into my bedroom like a wedding bride, and gently lay her down across my bed. For a girl who spent so much time worrying about her weight, having my strong arms lift her up like she was a feather was more of a turn-on than any words I could have spoken. And she was ravenous to devour my mouth as soon as I lay myself alongside her.\n\nTen seconds later though, she squeaked and broke away from our kiss, exclaiming, \"I forgot!\"\n\nI blinked in surprise, not understanding. \"Forgot what?\"\n\nShe rolled off the bed without answering, stood up, and rather nervously picked at her dress trying to straighten out the wrinkles and make sure it wasn't bunched up anywhere. It was a prom-type dress in olive green that complimented her warm skin tone. From the waist down it was a smooth, satin fabric that hugged her ample curves before tightening around her knees, which kind of restricted her ability to walk but looked pretty sleek nonetheless. From the waist up, the satin was covered with see-thru lace and rose up over her shoulders with wide straps that covered her shoulders but left a plunging V-neck down the middle which put her considerable assets on full display. And after getting herself situated, she put her right hand on her waist, jutted her hip out, and posed prettily while batting her long eyelashes at me.\n\nClearly, it was a move she'd practiced quite a bit, and I rewarded her effort with a broad, wolfish grin that clearly communicated my desire to get off the bed and ravage her. I also loosened my tie and took off my suit jacket, but I didn't get up yet. Belle had not only helped me come up with an itinerary, she'd also told me Mari's planned script as well to make sure I didn't accidentally mess things up. She'd also (repeatedly) offered to write it all down.\n\nNext up was the lingerie reveal. Mari did a slow pirouette to show me the backside, where the shimmering material was pulled taut across the Latina's juicy ass. The lace paneling helped obscure the way her bra strap would have dented the fabric and masked the zipper that held the dress together. Mari paused to watch me ogling her ass (fantasizing about porking her from behind, actually), and giggled until my eyes finally tracked up to hers. Only then did she give me a coy look and request, \"Unzip me, please?\"",
        "I got off the bed and stood behind her, my fingers feeling through the lace to find the zipper that had been tucked into a small pocket. I dragged it down to her waist and fiddled a bit with the bra clasp, but refrained from opening it just yet. Belle had warned me that Mari wanted to do that herself. Instead, I kissed the newly-revealed bare skin of her upper back gently, and then backed away to sit on the edge of the bed.\n\nMari smiled and turned back to face me. She started to look nervous, which made me start to look concerned. It wasn't like she'd never been naked in front of me before, and she'd actually practiced this sort of stuff with the girls during the naked in high-heels bootcamp thing. But stripping down with all her friends getting naked at the same time and cheering her on is one thing. Performing an orchestrated strip-tease one-on-one as a prelude to losing your virginity is something else entirely.\n\nTaking a deep breath, Mari shook her head as if to clear it and smiled again. Her hands went to both shoulder straps at the same time, pulling them down to her upper arms. While this left her shoulders bare, her massive tits still held the dress upright, and she had to reach to the front of the dress, hook her fingers into the V-neck, and pull it down. The material still bunched up around her narrow waist, because I hadn't pulled the zipper ALL the way down. It continued for a couple of inches down her ass, and only after she reached back to unzip that part was the material loose enough to fit around her big junk in the trunk and fall to a puddle around her 2-inch heels.\n\nLooking shyly at the floor, Mari stepped out of the dress over to the side and then attempted to repeat her previous pose with hip out and right hand on her waist, but the maneuver was far more awkward-looking this time around. The nerves were finally getting to her, but I let out a long exhalation and murmured an appreciative, \"Holy shit, Angel...\"\n\nThe sound of my voice reacting so favorably to her appearance made all the difference in the world, and Mari raised her chin to look up and examine my expression. Seeing the delight on my face gave her strength, and she stood up a little more proudly while thrusting her chest upwards and jutting her hip out to the side a little more.\n\nShe was... well... quite fuckable. Desperado eat your heart out. A black lace bra molded around her considerable assets, mostly obscuring her hard dusky nipples but not entirely. Matching lace panties completed the set, and when I raised a finger and twirled it slowly, Mari grinned and slowly turned around. The back of the panties featured a fairly thick black band around her waist, but the lace over her cheeks curved inward rather than outward, accentuating the roundness of each amazing globe. I couldn't help bypassing the script then. I slipped off the bed, grabbed onto Mari's hips, and started kissing her buttcheeks.\n\nMari squeaked in surprise at my unexpected improvisation, but she didn't freak out. I made exaggerated \"nom-nom\" noises while sucking on her chunky butt that made her giggle. And after a minute, she glanced back at me and asked timidly, \"You don't think my butt's too big?\"\n\n\"I LOVE it. There's a reason they made that 'Baby Got Back' song.\"\n\n\"But Belle's got such a tight little heinie. I've always hated having such a big booty.\"\n\n\"I like butts in all shapes and sizes, and yours is perfect for YOU. I can't wait to fuck you from behind.\"\n\n\"Matty!\" she exclaimed, a little scandalized at my vulgarity.\n\n\"Sorry, sorry,\" I apologized, getting up and returning to the bed. \"Getting ahead of myself.\"\n\nMari looked thoughtful, shook her head, and asked, \"You really do like it?\"\n\n\"LOVE it. I told you.\" And I reached out to grab her ass in my right hand and rubbed it for emphasis.\n\nMari thought about that. \"Well... If you'd like, maybe we can do it from behind for my first time?\"\n\nMy dirty mind interpreted her statement incorrectly at first, as I was suddenly seized with a vision of pressing my thick cock into Mari's tight asshole from behind, but I quickly washed that idea away. The idea of pushing myself into Mari's pussy from behind while holding onto that thick butt was enticing enough, and I nodded my agreement, \"Yeah... I'd really like that.\"\n\nMari gave me a shy smile, but then a new hungry look came into her eyes, and she pointed out, \"You're wearing too many clothes.\"\n\n\"Oh, right!\" I'd forgotten this part of the script, distracted by Mari's lingerie reveal. I didn't actually know whether or not she knew Belle had told me her plans, but I knew I was supposed to start undressing myself now.\n\n\"Let me do that for you,\" Mari said suddenly, going off-script. She stepped forward, frowned, and started fiddling with my shirt buttons. She'd never actually undressed me before, not during a study break or anything like that (aside from pulling my pants down to give me a blowjob). But if there was a first time for anything, it was tonight. Her nervousness showed, but she got me open from throat to tails, took hold of my tie, and used it to tug me closer so we could kiss. And then she slid her hands onto my bare chest and rubbed excitedly while our tongues tangled.\n\nMari was leaning forward a little awkwardly, so I scooped her up in my arms and took a big hop backwards so she could straddle my lap atop the mattress. We both stayed upright making out, and she got my shirt to slide down my arms before I finished shrugging out of it completely. Next up would be my pants.\n\nThe luscious Latina pulled back, her brown eyes intense and playful now. Being proclaimed the Blowjob Queen of the BTC had given her a tremendous confidence boost, and she didn't hesitate to slide back off the bed and start fiddling with my belt. Suddenly she was in a great hurry. Before I knew it, my pants and boxers were down around my ankles, and my dick was suddenly all the way down her throat in a blink of an eye.\n\nBut getting me to explode down her throat wasn't the goal tonight. She only slammed her face down around my shaft a couple of times, making little gurgling noises at the bottom before she picked her head up and flashed me an impish grin. She raised up high enough to give me a quick peck on the lips and requested, \"Unhook me?\"\n\nOh, yeah. I'm a tits man and not ashamed of it. Without hesitation, I reached around her with one hand and flipped the clasps. There were actually six hooks connecting together Mari's over-the-shoulder boulder-holder in two columns of three, but I only got five of them on the first try. Feeling a little embarrassed, I reached around with both hands to get to the last one, and at last the massive cups fell away.\n\n\"Can I please fuck your tits first?\" I asked abruptly.\n\nThat wasn't in the script, but Mari didn't seem to mind. She giggled and replied quite slowly, \"Any... time... you want. Just ask.\"\n\nMy eyes were wide as she grabbed her big boobies and prepared to enfold my dick between them, but she stopped and looked up at me. \"Oh wait. I saw Sam do this for you and you seemed to really like it.\" Straightening upright although still kneeling before me, my angel grabbed her titties and mashed them together, alternating up and down like a pair of cheerleader pom-poms.\n\nI laughed and nodded my agreement. \"Yes, I definitely like that.\"\n\nMari giggled and pom-pommed away, but stopped after a minute. Squeezing both boobies together, she held them up to my face and intoned quietly, \"Bite my nipples.\"\n\nMy eyebrows went up, but leaned forward and gently bit down on first one and then the other puffy nipple, adding in some extra suckles as well while she moaned with obvious relish. That part wasn't in the script either.\n\nMari's eyes glittered as I pulled away. Then she finally bent over, wrapped up my rod within the confines of her cleavage, and happily humped her chest up and down for my enjoyment. The titty fuck didn't last that long, though; we had other things to do. I pulled her off and pulled her up before pulling her onto the bed with me so we could make out. In the meantime, I also kicked myself free of my shoes, pants, and boxers. The socks would take a little more work, but I'd get there eventually.\n\nMaking out on a bed with me, Mari was used to. We slowed down and enjoyed ourselves for a while, which means I did a lot of pawing at her tits and ass, suckled on her nipples while she cradled my head to her chest, and swapped a lot of spit. But after five minutes or so, I found myself on top of her, the base of my throbbing erection pressed against her crotch, only a thin layer of lace separating our two sexes. Mari set her head down on the mattress and looked up at me with eyes full of wonder, a little in disbelief that we were here in this moment.\n\nShe reached up and traced her fingers around my face, from my forehead, down my temple, along my jaw, and under my chin. I smiled at her warmly and said, \"I wanna eat you now.\" It was part of the script, after all.\n\nBut Mari shook her head, and in a shy, quiet voice, she murmured, \"Can't wait. I want you inside me now, please.\"\n\nI arched an eyebrow, but she was already rolling over onto her stomach and thrusting her ass up into the air. I sat back while she got into a modified doggy-style position on her knees and elbows, with her forearms angled together like a triangle and her hands overlapped, waggling her panty-covered butt at me.\n\n\"Is this how you wanted me?\" she asked rather nervously, her head craned around to look back.\n\n\"We can still do missionary or with you on top if you want,\" I offered.\n\n\"No... Everybody does it one of those ways for their first time. I wanna remember this for the rest of my life, remember you staring at my ass while you push inside me.\"\n\nThe heat in her words made me want inside RIGHT NOW, but I forced myself to be patient. Getting behind her, I briefly thought about leaving her high-heels on but decided to take them off, and then I started peeling down her panties. Her butt was a work of art, big and round and yet firm to the touch, not saggy at all. The globes were big enough to form a line of butt cleavage that obscured her asshole from view, but I grabbed onto each cheek with each hand and separated them. Once her nether regions were revealed, I couldn't help but lean forward and take a long lick from her clit, through her pussy lips, and along the happy trail up to her anus. I even swiped my tongue across her crinkled sphincter, which tasted perfectly clean. Mari shivered when I did that, so on impulse I dove back in, licking her asshole and even pushing my tongue a little bit inside.\n\n\"Matty-Matty!\" Mari squeaked in surprise. \"What are you doing?!?\"\n\n\"Pretty sure this is called a rimjob.\" I went back to tonguing her ass, as she was quivering and obviously enjoying it.\n\n\"Oh my lord... Belle's never gonna believe this!\" she squealed, bunching up my bedsheets in her hands. \"Matty's eating my ass!\"\n\nI chuckled and went back to licking her. But a second later - with Belle's name now bouncing around my brain - I stopped, slipped off the bed, and went over to my closet. Sliding open the louvered doors, I breathed a sigh of mixed relief and disappointment.\n\n\"What are you doing?\" Mari asked, confused.\n\n\"Just checking to make sure Belle's not hiding in the closet. She said she wanted to watch me take your virginity.\"\n\nMari giggled. \"She told me, too. But I... I was just afraid I'd be too nervous if she was watching us.\"\n\n\"Makes sense.\"\n\n\"Besides...\" Mari blushed and looked down. \"Just for one night, I wanted to have you all to myself. To have you focused entirely on me.\"\n\nI immediately dropped down next to the bed closest to Mari's face, trailed my fingers down her cheek, and gave her a sweet kiss. \"One hundred percent of my attention tonight is entirely on you, Angel.\" And then I kissed her again.\n\nMari was smiling brightly when we separated for air, and she tittered excitedly when I jumped back into position behind her and between her thighs. I started by licking her pussy and stabbing my tongue at her clit. But then returning to my previous mental bookmark, I resumed tonguing her ass, much to her squealing delight.\n\nAt the same time, I raised my right index finger and slowly inserted it into her pussy, intent on stretching her out and making sure she was good and wet. I had no idea whether or not Mari would be as tight as Belle, but having been traumatized by Belle's deflowering, I wanted to prep Mari in the same way I'd gotten used to prepping Belle. Once I was able to get my index finger moving pretty well in and out of her, I added a second finger, and eventually a third. And by the time I had all three fingers pumping steadily in and out of her sopping wet snatch while I continued rimming her anus with my tongue, Mari's legs were shaking so hard she threatened to collapse.\n\n\"Matty...\" she whimpered pitifully. \"Matty... I think... you're gonna... I... I can't... Matty, please... I wanna... I'm... Unnngh...\"\n\nI could tell she was really close to cumming, and had actually been really close for a couple of minutes now. I was still pumping my fingers and licking and sucking her asshole with abandon, finding the whole thing a really novel experience. But whatever I was doing wasn't QUITE enough to give her orgasmic release.\n\n\"Matty PLEASE!\" she cried, hovering right at the edge.\n\nTraumatized by Belle's deflowering or not, I didn't hesitate. Something told me Mari could take it, and more importantly, I could tell she desperately needed me to push her over. Keeping my fingers going, I pulled my face from her ass and knee-walked myself into position. My left hand held one asscheek open to the side. I pulled my right hand out of her snatch and held the other asscheek to the side. With just my hips, I guided my missile into position. And staring straight down at the perfect image of her bubble butt spread apart by my hands, I hit the jets and slammed my way inside in a single thrust as smoothly as a hot knife through butter.\n\n\"HOLY FFFFFFFFFFFUUUUUUUUUUUCCCCCKKKKK!! Mari threw her head back as she felt the sudden penetration, pushing down with her hands and extending her arms so that she was fully upright in a doggy-position. She shuddered as the incredible climax exploded across her entire body at once, all the pent-up energy from being kept on the edge for so long radiating outward in a single concussive wave.\n\nAnd then her arms collapsed, mashing her face and chest down onto the mattress while she twisted her head to the side so she wouldn't suffocate. Instead, she merely gasped for oxygen, her body continuing to quiver a little bit and occasionally spasm a lot from climactic aftershocks.\n\nHer legs probably would have collapsed too, were she not held aloft by my dick in her no-longer virgin pussy. I kept myself at full-depth, holding onto her hips in a tight grip to keep my crotch mashed right up against hers. I let her enjoy the post-orgasmic bliss for a couple of minutes, just sort of slowly grinding myself around the inside of her vaginal chute to maintain my erection while watching her walk a tightrope line between conscious bliss and blissful unconsciousness.\n\nIn the end, she didn't quite pass out. Her breathing slowed, her irises refocused, and she glanced back at me with a bit of a sloppy grin. \"Oh my lord, Matty,\" she muttered softly, her eyes unfocusing again as she stared away into the middle distance. \"That was... was... I can't even...\"\n\n\"Not bad for your first time, huh?\" I said with a chuckle, proud of myself for giving her such a great orgasm. She'd had some pretty good ones from me eating her out, but I'd NEVER seen her blow her top quite like that.\n\nHer eyes came back to me. \"If sex is gonna be like this all the time, we're gonna do it a LOT. I'm amazed the others haven't moved into your house yet.\"\n\nI chuckled again, withdrawing a few inches and then smoothly pushing myself back in. Her eyelids fluttered while I did that. \"I can't promise it'll be like this every time, Angel, but I'll definitely try to live up to your expectations.\"\n\nMari smiled warmly at me, this time without any sexual heat, just the same kind of warm, kind-hearted smile she'd always had for me even before we ever started doing sex stuff. \"You already have, Matty. You already have.\"\n\n****\n\nI did manage to give Mari a second orgasm before finally busting my nut. By then, we had changed positions so that I was on top, her legs wrapped around my waist so she could watch my facial expressions changing from the pleasure her pussy gave me. We kissed a lot that way; Mari had always been fond of kissing, even when we'd progressed past making out and the other girls (cough: Naimh) wanted to spend more time with my dick in their mouths (ironic, since Mari turned out to be the BJ Queen of the BTC). I was glad I'd decided to take off her high-heels, or else my back would've had tons of impact marks. I never did get my socks off though until after I came.\n\nPer Belle's script, I gave her plenty of warning that I was getting close to cumming. Mari wrapped her arms around my neck, held me close, and fastened her lips over mine. She wanted to be kissing me while feeling my cock spurt jets of scalding hot lava into her womb for the very first time, and a minute later, she got her wish.\n\nMother's warning about protection still pinged in the back of my brain, but Belle had assured me Mari was on the pill now, and that she'd specifically targeted this Saturday night to be certain it would be effective. So I let myself go, groaning into my angel's mouth while creaming her cunt with every drop I'd built up all night. I really flooded her, actually, because after I came and pulled out, we spent another thirty minutes in my bed just lying there and talking before starting round 2, and every now and again she had to stop and get more tissues to blot up the jism that never seemed to stop leaking out of her.\n\n\"I'm thinking we may have to organize some kind of schedule, even though Sam said she didn't want that,\" Mari commented while pillowing her head on my chest. We reclined together against my headboard with several pillows propping up my lower back. \"Sam likes Mondays, Neevie on Tuesdays, Zofi can have Wednesdays, and I've always liked Thursdays. Then on Fridays we can all have fun together, and the whole BTC will still be 'in balance'.\"\n\n\"What about Belle?\"\n\nMari snorted. \"Belle's gonna fuck you every weekend as it is, and probably a few weeknights as well.\"\n\nI chuckled and sighed. \"I don't know if the others will go for a rotating schedule though. It takes the spontaneity out everything and reeks of obligation. Like, I don't want anyone looking at their calendar thinking, 'Oh, today's my day to put out for Matty.'\"\n\n\"I think you've got that backwards. You're a gift, like Christmas morning, and we'd all be looking forward to the day we get to unwrap you.\"\n\nI chuckled. \"Well, maybe if your schedule wasn't actually about sex. Like, we've let Sam always be in charge, right? Well, what if the rest of you got to be in charge for a day every week? Nobody's obligated to have sex, not even me, but it's understood that on Thursdays, Mari's wants and needs get priority, et cetera. It's kinda like you girls calling 'next', only it's already understood that you've got 'next' because that's your day.\"\n\nMari giggled. \"It's like when one kid in the class is student of the week and they get to go to the front of the lunch line or lead the class in the Pledge of Allegiance.\"\n\nI blinked. \"Uh, well, sorta.\"\n\n\"The idea has merit, and I certainly enjoyed having those little moments of authority when I was the teacher's helper, stuff like that. Of course, you say it's not about sex, but I'm still gonna want to be the first one to get this bad boy inside me every Thursday.\"\n\nI chuckled. \"If that's what you want on that particular Thursday. Hypothetically, of course.\"",
        "\"Of course.\"\n\nI leaned back against the headboard, holding Mari's warm naked body in my arms. It felt nice to just cuddle her like this; she was always a good cuddler. And I started to imagine just what life would be like under the kind of schedule I'd just described.\n\nSam would be horny and want to fuck all day on Mondays. Maybe she would bark orders and act like an orchestra conductor to put herself and whoever else was around into various sexual combinations, like, 'Mari sits on Matty's face while I ride him reverse-cowgirl and Belle plays with his balls until he spurts inside me and Belle sucks it all out.'\n\nNaimh would turn Tuesdays into one-on-ones, maybe even get up and leave the house with me to go get ice cream, make out in public, and hold hands while walking around town looking like a million bucks so that guys would turn their heads and be super-jealous of how hot my girlfriend looked. We'd both get turned on from the attention and go home to fuck like bunnies.\n\nZofi confused me the most at this point. She seemed the most obviously bisexual of the club, happy to eat pussy and make out with other girls. On the other hand, she still loved kissing me, having me go down on her, and holding hands everywhere we went around school. I knew she wasn't full lesbian or anything like that, but she'd shown little interest in having sex with me and had already commented about not being aroused by the idea of sucking my cock. I wondered what she might do if she were \"in charge\" on Wednesdays, perhaps pushing Belle's buttons about \"turning her to the dark side\" or simply ordering me to keep my face in her crotch all afternoon. There were far worse ways to spend a few hours.\n\n\"What are you thinking about?\" Mari asked me quietly as she reached down to pet my sleeping anaconda. He was starting to wake up given my train of thought.\n\n\"I'm thinking about what all the girls would do if they each had a day to be 'student of the week'.\"\n\nMari giggled. \"I know what I'd do on my day.\"\n\n\"What's that?\"\n\n\"Make Sam do my homework for me.\"\n\n\"What?\" I barked in surprise.\n\n\"I'd have Zofi give me a manicure. Do you ever notice her nails? They're exquisite.\"\n\n\"Uh, can't say I have.\"\n\n\"I'd tell Neevie to do my laundry, and Belle could cook me a snack.\"\n\n\"I think you and I have very different ideas of what we'd do if we were in charge.\"\n\n\"I'd make you give me backrubs.\"\n\n\"Well that, at least, I can understand.\"\n\n\"Ooh, actually, Neevie could be my fluffer! Going down on you to get you nice and warmed up before I come over and sit down in your lap, riding you while we watch a movie like you did a week ago with Sam.\"\n\n\"See, THAT'S the kind of stuff I was thinking about.\"\n\nMari giggled. \"I can tell. Your dick twitched when I said that.\"\n\n\"I'd be happy for you to go for a ride right now.\"\n\n\"Mmm, in a minute. We still have time, although I wish I didn't have a curfew. Then I could stay here all night in your arms.\" She sighed contentedly. \"I'm enjoying this too much... just lying on your chest right now. I can hear your heartbeat.\"\n\nNodding, I stroked her spine and rubbed her ass, but didn't otherwise attempt to speed things along. She kept rubbing my cock, enough to keep it hard but not quite enough to get it rock hard. And for several minutes we simply cuddled together in silence.\n\nEventually, though, Mari spoke again. \"Is this what it's like for you and Belle?\" she asked quietly.\n\n\"Hmm? Is what like?\"\n\n\"After you've had sex. Do you just lie naked in bed together like this? Talking?\"\n\n\"Well, uh, we actually haven't had sex THAT many times. She was so sore after her first time that neither of us could really enjoy it. Actually, how are YOU feeling? Any soreness?\"\n\n\"No, not at all. I feel amazing,\" she replied brightly. \"But back to you and Belle. Do you snuggle like this a lot? Doesn't have to just be after sex. Like those two weeks you were doing oral to each other without the rest of us knowing. Or even just hanging out. I have this very clear image of you two doing what we're doing right now: Cuddling in bed, talking about... whatever, or staying silent and just thinking... no pressure to talk, just... content.\"\n\nI thought about that for a few seconds, thought about all the times I'd found myself with Belle under my arm in the same way Mari was under my arm right now, whether in one of our beds, on a couch, or even a poolside lounger in the summer.\n\n\"Well... yeah, I guess you could say we do this a lot,\" I finally confirmed.\n\n\"What do you guys talk about?\"\n\nI shrugged. \"Everything. Nothing. Just... whatever comes to mind. Kinda like now, I guess.\"\n\n\"Do you talk about the rest of us girls?\"\n\n\"Uhhh, I probably shouldn't say.\"\n\n\"That's a 'yes', then.\"\n\nI chuckled and rubbed Mari's shoulder. \"We talk about everything.\"\n\n\"What do you two say about me?\"\n\n\"Mari!\"\n\n\"I'll tell you what we say about you.\"\n\nI arched an eyebrow. \"There's a crude saying: Bros before hoes. I'm pretty sure there's a female version.\"\n\n\"Chicks before dicks.\"\n\n\"There you are. I can't let you betray Belle's trust.\"\n\n\"I suppose. Still, there's so much I want to say to you now; it just feels wrong to NOT let you know what I know. Things are different after giving you my virginity. I feel so much... closer... to you. Nothing's ever going to change that. No matter what happens to us ten years from now, fifty years from now, I'm always going to remember you.\"\n\nI smiled. \"I said something similar to Sam.\"\n\n\"She's in love with you, by the way. Sam.\"\n\nI sighed. \"She's just horny.\"\n\n\"She's always been horny. Now she's in LOVE, and she gets jealous, even though she tells herself not to be. She's jealous of how much time Belle gets to spend with you. She's jealous of the way you stare at Neevie like she's the most beautiful thing you've ever seen. She's even jealous of me for being able to deep-throat you.\"\n\nI looked down at Mari with a frown. \"What happened to 'chicks before dicks'?\"\n\nMari ignored me. \"Neevie's in love with you, too. She's always wanted to be your girlfriend, like... your actual girlfriend, not just the BTC's girlfriend. She's told me these daydreams about going for long drives in a convertible with the top down, just the two of you, stopping on a beach, and sitting between your legs while you kiss the back of her neck and watch the sunset. She wishes she could walk around the school on your arm, go to parties on your arm, do restaurant dates every week, watch plays, all that jazz. I think, actually, she was really close with her boyfriend back in Ireland, and she misses having that kind of pair-bonded closeness.\"\n\nI had been smiling all through the first part of that, but the end bit about the ex-boyfriend in Ireland gave me pause. It made me feel like a replacement for Naimh's true love, and I wondered how much of her feelings for me were real and how much were projected.\n\n\"But that thing with Alice really messed her up,\" Mari continued, oblivious to my ruminations. \"She's hesitating and holding herself back. She doesn't want to do anything to rock the boat, and I feel like even if she had a 'Neevie Tuesday' to be in charge, she'd actually spend most of her time trying to make the rest of us happy instead of thinking of herself, just to avoid feeling like she was being selfish. You notice she's not chirping as much or playing the instigator anymore.\"\n\n\"Huh...\" I pondered that.\n\n\"And Zofi's a lot more into you than she lets on. I can't quite figure that girl out just yet. I know it seems like she'd rather take a back seat, mess around with the other girls, and let the more aggressive bitches crawl all over you, but you don't notice how often she sort of stares at you longingly when she thinks nobody's watching her.\"\n\n\"And you DO notice?\"\n\n\"Nobody pays attention to the quiet one. I see a lot when they don't think anybody's watching. It's classic misdirection. Sam does it a ton. She'll tell Neevie to go give you a titty fuck, and then while everyone is watching the two of you, her mask falls away and her true face comes out.\"\n\nI glanced down at Mari. \"You are dangerous.\"\n\nMari giggled. \"I'll take that as a compliment.\"\n\n\"Okay, now you've got me curious. What else do I need to know that I don't already know?\"\n\n\"Alice wants you to take her virginity, too.\"\n\n\"WHAT?\"\n\n\"We've talked about it, and not even leaving the BTC is gonna change her mind. She'll spend some time away from us, but after a few weeks she's gonna really miss her friends, miss you being her best friend, and realize that banging you is something she's always wanted for herself. Once she realizes she's ready for sex, she'll come back and happily join 'Matty's Harem', as she puts it. It was always going to be you; she's known that since eighth grade. She told Belle, too, but swore us both to secrecy.\"\n\n\"An oath you're clearly breaking right now.\"\n\nMari shrugged. \"You got my cherry. I now serve a higher master... or something.\" She emphasized the last part by rubbing my penis.\n\nI frowned. \"I don't want you to get into any trouble.\"\n\nShe shook her head distractedly, staring a thousand yards away. \"Belle dreams about marrying you all the time. She's planned a hundred different weddings and come up with dozens of boy names that start with M and girl names that start with B.\"\n\n\"Maybe you should stop before you say anything she won't forgive you for.\"\n\n\"She said you offered to leave the BTC for her. Scared the shit out of her, actually, because of how tempted she was to take you up on it.\"\n\n\"Mari...\"\n\n\"She said she wants to tell her dad she's in love with you, move into your house so she can spend all night with you, fall asleep with your cum in her pussy, and wake you up in the morning with a blowjob.\"\n\n\"Mari.\"\n\n\"But she's terrified of destroying her relationships with all of us, including me, which is why she told me. The whole group has spent years swearing by The Rule to prevent any one of us from stealing you away from the others. You think Neevie's trying to hold herself back so she won't break up the BTC? She's got nothing on Belle's level of guilt, which is why Belle's always hanging back when the whole group plays around together, why she wanted to give Neevie that one-on-one time, and why she prepped you for taking me out tonight. She's trying to prove to herself that she's not a selfish bitch and still cares about her friends.\"\n\n\"MARI.\"\n\nI squeezed her just as hard as I'd barked her name, and only then did she seem to snap out of her trance. She blinked rapidly and stared up at me in surprise.\n\n\"Your turn,\" I said seriously. \"You already exposed your friends despite the whole 'chicks before dicks' thing. What do I need to know about YOU that I don't already know?\"\n\nMari's eyes got BIG, but she clammed up and set her head back on my chest, staring pointedly away from me.\n\n\"Mari... Angel...\" I intoned, gently. But she bit her lip and shook her head in the negative.\n\nI took a deep breath, weighed my curiosity against my better judgment to never pressure a girl into doing anything she wasn't comfortable doing, and decided to let it go. Even as forthcoming as she'd been for the last several minutes, I realized it would always be easier to reveal other people's secrets than reveal your own. Exhaling slowly, I patted her back and said, \"Fine, you don't have to tell me. I won't push you. You know I'll never push you.\"\n\nShe nodded slowly, glanced up at me, and said quietly, \"Thank you. I've always felt safe with you.\"\n\n\"And I'd like to make sure you keep feeling that way.\"\n\nShe smiled warmly, and then crawled up my body so she could kiss me. I wrapped both arms around her naked body, held her close as our tongues came out to play, and rubbed her ass while she ground her crotch against my growing erection, riding it like a rail until my shaft was coated in her honey and as hard as steel.\n\nIt was a simple matter to elevate my prick and let her sit down on it. She pressed her forehead to mine and cooed happily as she felt every inch filling her up. After a while, she sat back to really work her hips around, gyrating like a belly dancer. The motion did wonderful things to her big tits, and I reached up to play with them -- and even bite her nipples a little - until she bent forward to smother my face with her melons.\n\nMy angel humped herself to the precipice of another orgasm on top of me while I nursed at a nipple and gripped both buttcheeks to help me use her body as a masturbatory toy. At the penultimate moment, I reached forward and stabbed my middle finger into her rectum, an act that set her off like a rocket as she screamed and thrashed and practically gave me a concussion the way her boobs were banging into the sides of my head so hard.\n\nMari went limp atop me after that orgasm wiped her out, so I rolled her onto her back and re-plugged myself in. She lay limp beneath me, letting me rut in and out of her lush body save for cradling my head and moaning about how much she loved having sex with me. Her head started lolling side to side and her eyes rolled up into her head as the pleasure took over and she was lost to the delirium. I was suddenly seized with the desire to see her big boobies dancing as I pounded away at her, so I sat back on my heels and pulled her body with me so that her ass was in my lap as used my abs and legs to really hammer her.\n\nUp and down and left and right those titties bounced, making the shape of a snow angel, or maybe butterfly wings. Depending on my angle, they would sometimes gyrate in circular orbits, and sometimes they would bounce in different directions, crashing together like Uranium atoms in a nuclear energy simulation. Growling animalistically, I sped up faster and faster, harder and harder, consumed by a vision of blasting my wad all over Mari's marvelous melons in motion. And when she clamped up and came, her cunt clenching and compressing around my cock, I roared my release, yanked out my dick, and rapidly stroked my own shaft to spray great ribbons of spunk all over those big, damn, beautiful breasts.\n\nWhen I was done, I nearly collapsed flat on top of my devirginized lover but managed to twist myself and fall down in the empty space alongside her instead. Chest heaving, I gasped for air while she whimpered and panted in the aftermath of her own climax as well. Sweat dotted Mari's forehead, and her eyelids were fluttering on the brink of unconsciousness again. One day, I told myself, I would give her such an incredible orgasm that she actually WOULD pass out from too much pleasure. But for now, her Zen state of delirium was enough to satisfy my ego.\n\n\"Matty... Matty...\" Mari moaned almost mournfully.\n\nI chuckled and reached out to stroke her arm. \"Hey, Angel. That was amazing.\"\n\nShe shook my head like I didn't understand, still gasping for breath while her hand reached out to touch my face, but she was somehow uncoordinated and couldn't quite get it right. \"I... I... I wanna... I need to... tell you... the truth... my secret...\"\n\nI chuckled and took hold of her hand, bringing it in so she could palm my cheek. \"That's alright, Angel. You don't have to say a thing.\"\n\nShe shook her head again. \"I... I do... Not even... Not even Belle... knows...\"\n\nPart of me felt guilty for letting Mari reveal so many secrets tonight, which is why I'd (sort of) made an effort to curb her from spilling EVERYTHING. But even so, I found myself curious to learn even more. Still, I NEVER would have expected her to say what she said next.\n\n\"The truth is... I wasn't really a virgin.\""
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "first",
        "big breasts",
        "18-year-old",
        "teenagers",
        "high school",
        "virgin",
        "hot tub",
        "mff",
        "booty",
        "harem"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-big-tits-club-ch-13-14"
}