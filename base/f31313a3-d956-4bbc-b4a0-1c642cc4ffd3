{
    "title": "The Twelve Vitali Ch. 18",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they mean the world to me and have brightened my days. I hope you enjoy this series despite its differences to the original story. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*\n\nThe booming of a door slamming announced someone else was in the townhouse and had slammed the door to make sure the couple cocooned upstairs knew of their arrival. Matteo smiled crookedly and rolled from the bed, pulling on his pants from the night before.\n\n\"Leave me the shirt, please, unless you want me to wear that dress again,\" she pointed to the puddle of blue fabric on the floor.\n\n\"I guess he's not ready to see you walk around the house naked,\" Matteo shrugged and left the shirt on the bed. \"It could be cruel to do that to him.\"\n\n\"I understand everything you said, but I am going to need more time to accept that this is the way it has to be before we can joke about it,\" she said seriously.\n\n\"Sorry, humour seemed to be my go to when I think about what it all means at the moment. He's been going through a lot himself lately, and the possibility that you could forgive him and care about him again is the one bright spark in a pretty bleak outlook at the moment,\" Matteo explained as he had during the night. \"There's no rush to do anything, not from him, and definitely not from me.\" He kissed her and moved out of room \n\nThey had stayed awake all night talking about everything that had happened to them over the weeks they had been apart. She had been thrilled for him that his fathers' had told him he would inherit the Vitali Chair. She wasn't sure how she felt about what that meant for her and, in turn, Ricco, who would be his Oracle, not to mention the fact that Ricco had already practically moved into Matteo's apartment and bedroom. Matteo had admitted he wasn't sure how he would feel once it became a reality, but he seemed quite accepting of the situation and the fact that she would need to have an intimate relationship with his brother eventually.\n\nAfter having the conversation with Roberto, and again with Matteo before she had come here, she had let her mind wander to Ricco often over the last two weeks. Her feelings for him mixed and tumbled in her head as she struggled with the idea of being intimate with him again. She had loved him, but knew at the time that he didn't love her in the same way. There was so much she did like about him, and now that she understood why he had held back in their relationship she could forgive and look at him with the same eyes that had seen so much good in him so long ago. Her attraction to him was still real; he had the same colouring and similar features to Matteo, but was leaner and not quite as tall. She'd imagined what it would be like to sleep with both of them, and each time she had become anxious about Matteo and how he would accept it if she came to love his brother again the way she loved him.\n\nCat was craving coffee, so she got up and decided to test out how both brothers would react to the situation they would find themselves in once they returned home. She found her underwear from the night before and turned up her nose at the lace panties, wishing she had access to fresh clothes. She found Matteo's boxers and donned his white tuxedo shirt. She looked in the mirror and ran her fingers through her hair, taking a deep breath. This was as good as it was going to get, so she stamped down on her anxiousness and made her way downstairs. She wandered casually through the lounge room where the two brothers sat talking quietly nursing large mugs of coffee on her way to the kitchen.\n\n\"Good morning,\" she said cheerily as she padded barefoot toward the kitchen.\n\n\"My morning just got infinitely better,\" Ricco said with a chuckle, looking at the mix of emotions crossing his brother's face.\n\n\"Do you have to?\" Matteo scowled at Ricco.\n\n\"Oh, come on. I would have to be dead not to appreciate a girl wearing that shirt with bedroom hair and eyes. The fact that it's Cat, you can't expect me to ignore her!\" Ricco shook his head, holding his chuckle.\n\n\"There's a housekeeper in there,\" Cat said, surprise in her voice as she exited the kitchen with a full cup of coffee. \"Do you think you could call Marcus and get him to send over some clothes for me? Your boxers aren't a particularly good fit,\" she chatted casually as if everything was normal between them and took a seat beside Matteo on the couch.\n\n\"The dress you wore last night was stunning. Don't tell me he ruined it!\" Ricco said in mock horror.\n\n\"Not at all, but I can't be seen wearing the same dress two days in a row! I am the fianc\u00e9 of Matteo Vitali, after all. Or I will be once he proposes properly, if he proposes properly, I should say. He might have changed his mind in the last few weeks. A lot has happened, I understand?\" she tilted her head as she asked the question, making Matteo groan.\n\n\"I wouldn't worry; he'll get around to it. Unless, of course, you'd accept my proposal, you have choices, you know,\" he smirked at the look his brother levelled at him. If looks could kill, he would have been six feet under.\n\n\"Don't go to any trouble. As you said, I'm sure he'll get around to it,\" she returned his smirk.\n\n\"If you two are quite finished,\" Matteo grumbled. \"Ricco brought your belongings from the facility. You won't be going back there again. You can get out of my underwear and into your own whenever you like.\"\n\n\"Right now works for me!\" Ricco said, enjoying himself. He'd been awake all night talking with Marcus and Bruno about what had occurred to upset Matteo and Cat, as well as the outcome of her trial and their recommendations to spend time getting to know the other mothers, starting with Peri and Marina.\n\n\"The trial is definitely over?\" she asked, unsure of what he had meant by not returning to the facility.\n\n\"In a manner of speaking. Marcus has made some recommendations, but they can be dealt with back in Melbourne,\" Matteo reassured her. \"They've recommended you spend some time with Peri and Marina, as well as the other wives of the twelve chairs. Peri was going to come here, but given that Hella is having difficulty remembering who you are, it is best if we take you home today. I told you this last night.\"\n\n\"You did, but I guess I expected to hear it from Marcus or the Commander, and with these recommendations, I feel like it's not over,\" she said with a frown.\n\n\"The trial is over,\" he reassured her. \"We can take you to see the Commander and Marcus, if that is what you need.\" He watched her as she took a sip of her coffee and could see that there was something else on her mind that she wasn't saying. \"What is it?\" he asked.\n\n\"Nothing. I'd like to see Marcus this morning, if that's okay,\" she said, getting to her feet. \"I'll go and change. You should probably put a shirt on too,\" she grinned, trying to make light of his question and expression. She wanted to speak to a few people before she left, including Miss Hella, but she knew by his tone that Matteo wouldn't approve, so she decided to speak to Marcus first and ensure she had passed the trial she had put so much effort into.\n\n\"I'll bring your bag up if you want to shower,\" Matteo said, looking at her critically. He knew something was on her mind, and it wasn't like her to be so evasive.\n\n\"Thanks,\" she leaned over and kissed him, giving Ricco a small smile. \"Thank you for bringing my stuff over.\"\n\n\"My pleasure,\" he returned her smile, and the two men watched her walk back upstairs.\n\n\"So you told her, I take it?\" he asked. \"She didn't seem surprised by my offer of a proposal.\"\n\n\"Yeah, we didn't sleep,\" he admitted, getting to his feet and grabbing her bag.\n\n\"I didn't expect you would, but I thought you'd be occupied with better things than talking,\" Ricco chuckled. \"How did she take it?\"\n\n\"Pretty well, but she knew this was a probability before she came here. She did a lot of research before agreeing to this trial,\" Matteo informed his brother. \"She will need time to come to terms with it though. She doesn't do anything without over thinking it, which is why I am going upstairs. I know something else is on her mind about the trial and leaving here.\"\n\n\"Good luck,\" Ricco said. \"Did our bags arrive? I could use a shower myself.\"\n\n\"I guess so, I haven't checked,\" he looked down at the tuxedo pants he had grabbed from the floor this morning and chuckled. \"Like you said, better things to do, speaking of which...\" he grinned and went to the stairs, taking them two at a time.\n\nMatteo stripped off his pants as he entered the bedroom and walked naked into the adjoining bathroom. He stepped into the shower and took Cat into his arms, kissing her. His hands smoothed over her body, and he felt his arousal immediately spring to life.\n\n\"Ricco is waiting for us!\" she said in a breathless whisper once released from the kiss.\n\n\"It's something he has to get used to, just as we have to get used to him being a constant presence,\" He held up his arm where he once again wore the watch that tied the brothers together.\n\nMatteo kissed her again, his fingers twisting into her hair as his mouth devoured hers, his tongue roughly dancing with hers, his pure animalistic growl drowning out the sound of her own pleasure-filled moan. He forced her up against the wall with the sheer weight of his body, sandwiching her soft, yielding body between his much harder one and the solid surface of the tiled shower wall. One hand trailed down her ribs and around to her backside, his fingers digging into the curve of her ass and lifting her higher against the wall till his hard, throbbing cock was pressing against the softness of her belly. His other hand moulded to her breast, squeezing, as his fingers pinched her nipple to a hard bud.\n\n\"Kitten!\" he growled as his mouth left hers to trail hotly along her jaw to her neck, his teeth grazing her soft skin, kissing her just as hard there, feeling her pulse racing against his tongue.\n\nCat gasped for breath as his mouth left hers to move to her neck, her hand gripping the back of his neck for support as he lifted her against him, moaning as he pushed his hard, thick cock against her belly. Her body ached for his, even after the night they had spent together, need and desire for him overcoming her yet again, making her pussy clench and her thighs quiver. Her nails raked the skin of his shoulders as she felt the bite, her yelp turning to a deep purring moan of pure pleasure as his teeth sank into her skin and she arched even closer to him. Her nails raked the smooth skin of his chest, down the muscles of his abdomen, her hot palm gliding lower to wrap around his cock. She felt him jerk in her hand, felt his groan against her neck as she caressed him with sure strokes.\n\nHe raised his head, gazing down into her desire filled eyes. He had every intention of making this a quick and easy fuck, but he found that thought escaping his brain looking into her eyes and knowing that she wanted him as much as he wanted her. His hand left her breast to take hold of her chin, tipping her head back far enough that he could see her face fully. His breathing was short and slightly ragged, what blood he had left in his brain was roaring in his ears, fogging his brain, making him forget everything but her hand and what it was doing to his cock.\n\nShe stared up at him, into those dark eyes that gazed down at her with lust and desire. She knew exactly what she wanted, or she wouldn't have waved a red flag in front of the raging bull. She had made mistakes in the past, but the biggest one was not being honest about what she wanted. She tightened her fingers on the girth of his cock. She slowly smiled at his sudden intake of breath, purring in pleasure as his cock throbbed in her hand, growing even harder. She slowly stroked him, feeling his hot, hard flesh pulse when she slowly sank to her knees.\n\nHis hand squeezed her ass hard as he growled; her hand had stroked him to an even greater state of arousal, pushing a strand of pre-cum from the swollen glands. His breathing hitched when she started to drop to her knees in front of him, and then he hissed through gritted teeth, slapping his hands against the wall above her head for support. He steadied his legs under him when the tip of her tongue touched the sensitive underside of his cock. He stared down at her, his chest heaving as he tried to regain control over his breathing. He watched as she flattened her tongue to the underside of his cock and licked him from base to tip, flicking and swirling her tongue over and around the swollen, smooth head to gather up the pearl of pre-cum.\n\nWhen she closed her kiss-swollen lips around the girth of his thick cock, taking him as far as she could into her hot, wet mouth, he groaned deeply. He stared down at her, watching as her head started to bob, her lips sealed around his cock, her hand sliding up and down the shaft, stroking what her mouth couldn't contain at that moment, groaning in pure pleasure. He would admit to anyone that he had enjoyed many good blowjobs in the past, but with Cat he always felt like he could lose control rapidly, with his head exploding right along with his cock.\n\nCat briefly looked up at him as he stared down at her, his lips parted as he breathed, each inhale accompanied by a low hiss, and she would have smiled, but her mouth was full of his thick, throbbing cock. She was so wet and aching with desire for this man, and she sucked his cock harder, her fisted hand sliding along his saliva coated flesh even faster, keeping up with the rhythm of her bobbing head. Her slurping and sucking were almost completely drowned out by the shower and sound of his groans. When he reached down and fisted his hand in her hair, holding her head in place as he started to fuck her mouth, she dropped her hand and moaned, showing him just how well Miss Hella had taught her to suck cock, despite using toys.\n\nShe began sucking him even harder, her tongue stroking his swollen glands as he withdrew before thrusting in again. She tasted the steady stream of pre-cum that dribbled down onto her tongue, feeling him grow even harder, thicker in her mouth. She gasped when he suddenly pulled himself out of her mouth and hauled her to her feet, her eyes locking with his. She could tell by the burning desire in his eyes that she had pushed him to even greater need. His mouth came crashing down on hers once again, and she arched against him, kissing him back with just as much passion, just as much burning desire, moaning at the feel of his hot, saliva coated cock pressing insistently against her belly.\n\nNever breaking the kiss, Matteo bent slightly at the knees and hooked one strong arm under the curve of her ass, lifting her against his body. Her mouth swallowed his groan, and she curled her fingers around the back of his head, wrapping her legs around his hips as he positioned himself so the swollen head of his cock rubbed against her pussy. He broke the kiss, staring down at her with lust filled eyes, his chest heaving with every deep breath he drew into his lungs, then he slammed his cock into her, making her cry out loudly. The morning sunlight streamed in through the open curtains, bathing her in its light as the shower continued to bathe her in its water. He stilled for a moment, feeling all of her and looking down on her naked body flush with desire, her breasts with their perfect pink nipples, tight hard buds of flesh, and he felt his cock throb even harder inside her.\n\nHe fucked her like a man possessed then, his hands hard and rough against her body as he took her and possessed her. She was his, and no one else mattered. She loved him and desired him in the same way he did her, and he took her as always with a passion he had never known existed before her. He roared loudly as they came together and finally let his knees buckle, carrying them both to the floor of the shower stall.\n\nCat whimpered into Matteo's chest, coming down from the great high she knew only he could give her. She had soared to highs under the cruel and needful urgings of Hella, but never like this. Never the way Matteo could make her soar to the heights of pleasure. She sat, coming down from her high, clinging to his big, strong body, uncaring of the water the shower rained down on them. Eventually, Matteo moved to pull down the soap and a soft loofah and began to wash her and himself slowly and gently. She let out a soft purring sigh of pleasure and nuzzled into him further.\n\n*****\n\n\"I understand you wanted to talk to me before leaving this afternoon, Catriona,\" Bruno said as Cat took her seat in front of his desk. \"Would you prefer to speak alone?\" he indicated Marcus at his side, and Matteo, who stood with Ricco behind her chair.\n\n\"Our relationship has always been built on absolute honesty, and I have no wish to change that now, nor make Matteo doubt me by sending them away,\" she said quietly, lacing her fingers in her lap.\n\n\"Very good. First, let me apologise for any embarrassment Hella caused you last night,\" he said somewhat stiffly. \"It was a gross breach of protocol and was contained from anyone else at the ball knowing of your relationship to her.\" He explained apologetically.\n\n\"I, too, could have handled the situation better,\" Cat admitted. \"I am sure Marcus is well versed in handling such issues, and I trust him to do so,\" she smiled up at the tall heir to the Battaglia family.\n\n\"How can I help you this morning?\" Bruno asked, leaning back in his chair looking more relaxed.\n\n\"I would like to know that when I leave my trial will be complete and that any report to Roberto or a member of his family will reflect that,\" she said without beating around the bush. \"After last night's incident, where I could have behaved better, I would like your reassurance that the report will be a positive one, regardless,\" she got to what she needed to know.\n\n\"All reports I have received concerning your behaviour here at the facility have been glowing. A single incident that was not of your making will not reflect on you at all,\" Bruno spread his hands palm up as if to dismiss the whole incident.\n\n\"I would like the opportunity to see a few people I have spent time with during my trial before I leave,\" she said in the same quiet voice. \"Including Hella, if I may.\"\n\n\"Who would these people be?\" Bruno asked, raising an eyebrow. \"Aside of Hella, of course. I will allow you to see her if you are accompanied by Marcus.\"\n\n\"I'd also like to properly thank the three ladies who made my dress for the ball,\" she said. \"And I would like to see Nymph, please.\"\n\n\"Nymph?\" Bruno queried, looking up at Marcus.\n\n\"A young woman in training to be a Kept. I believe she and Cat formed a friendship during their time here,\" Marcus informed his father. \"Marina can gather the seamstresses together, and I can take her to see both Hella and Nymph.\"\n\n\"Was that all you needed, Miss Leone?\" Bruno asked.\n\n\"I...\" Cat took a steadying breath. She had thought about this all morning deciding what the right thing to do would be. She worried about Matteo's reaction and how the man she was talking to would take it, but she decided that it was for the best that she made the small complaint. \"I would like to talk to Nero about one of his nurses who was unnecessarily cruel and demeaning to the girls when left alone with them at the hospital, including me.\"\n\n\"Get Nero in here now!\" Bruno snapped at Marcus, who had already fished his phone out of his pocket. After Hella's breach of protocol last night, to have a second complaint from this young woman was unbearable for the older man. His family's reputation could not sustain it if word got out about mistreatment of the hospital patients. So many families used the facility as a drug rehabilitation facility and trusted the Battaglia with their sons and daughters. He doubted that such a nurse would dare to treat a known family member with anything but respect, but the idea that any of the people who came here for sanctuary and a new life could be scared away during the medical portion of the training sickened him.",
        "Nero arrived within minutes and listened patiently to her story about her own treatment at the hands of Nurse James and the complaints made by the other women during her time at the hospital. She stated that no other nurse was purposely cruel or spoke to them the way he did, so she knew it wasn't necessarily part of the expected experience of becoming a Kept.\n\n\"The girls would never say anything, but I wanted you to know,\" Cat said, using the same quiet voice that had been a feature of her time in this office. \"I know he has been helping Hella recently, and she never left me alone with him, but if he returns to the hospital you may want to alter his duties a little,\" she suggested.\n\n\"I will handle it, you have my assurance,\" Nero said in a stiffly formal way. There would be security footage from her time in the hospital still on the server backup tapes that he could easily pull to confirm what she was saying and confront James.\n\n\"Thank you, I'm sorry, I couldn't just let it go. I know those girls now. In fact, I was just like them once. Living a life I didn't want and feeling like I had no options,\" she said sadly. \"I had to say something.\"\n\n\"You did the right thing,\" Matteo stepped forward, unable to remain a passive watcher anymore. \"It's only by identifying problems that they can be fixed. It's the same in any business,\" he reassured her. He was proud of the way she had spoken and handled herself in the face of such strong alpha type men. \"It won't affect the positive reports, and it won't affect mine or Ricco's stance after last night. We trust the men here to handle each situation appropriately, and no more needs to be said about it.\"\n\n\"We appreciate that,\" Bruno said. \"You can trust that we will take all the necessary measures needed in both instances. Thank you for your candour, Miss Leone. I hope you will not think badly of your time here.\"\n\n\"Not at all,\" Cat rushed to reassure the older man. \"I have learned a great deal, not only about the families and protocols, but about myself. I appreciate everything that was done for me during my time here.\"\n\n\"I'm sorry, I have other appointments this morning,\" Bruno said, visibly noticing the time. \"Marcus will take you to see the people you wish before you leave. Have a good flight home, Miss Leone. I will see you again, Matteo, Ricco,\" he nodded his head on each of the men's names.\n\n\"Thank you, Commander,\" she smiled and came to her feet, following Matteo and Ricco from the room. Cat let out a long breath as she exited the room and looked up at Matteo with a crooked smile. He took her hand as they followed Marcus to the tea room where he had always met with Cat.\n\n\"Nymph will be more comfortable meeting you here rather than in an office,\" Marcus explained. \"It would be better for her if you didn't tell her you have been lying about who you are this whole time.\"\n\n\"I understand,\" she said quietly. \"Perhaps it would be better if I saw her alone? These two handsome men might make her question where I am going.\"\n\n\"I'm not leaving,\" Matteo said stiffly.\n\n\"Then perhaps Ricco and I will go and collect Hella while you supervise this meeting,\" Marcus said easily, as a kitchen staff brought in brunch style food and sweet treats, setting them up on a nearby table for the small group to help themselves.\n\n\"While we had a reprieve for twelve hours, I'm afraid Matteo and I are once again joined at the wrist. I will be content to watch from the edges though,\" Ricco smiled at Cat softly.\n\n\"You sent for me, Master Marcus?\" Nymph asked, walking into the room.\n\n\"I did,\" he acknowledged and signalled her forward into the room. \"Jane is leaving us today, and she wished to speak to you before she left. You may sit with her for a short time,\" he instructed. \"These two men will be observing while I attend to some business, but I will return shortly, as you have other lessons to attend, and I would not like you to be late.\"\n\n\"I understand, Master,\" Nymph frowned in confusion, showing that she understood very little of what he said and what was going on.\n\nMarcus nodded at the group and left the room to retrieve Hella and allow her to change before facing the Vitali men again.\n\n\"Let's grab some coffee,\" Ricco said to Matteo, encouraging him to give Cat a little space as she spoke to her friend.\n\n\"Jane? What's going on?\" Nymph whispered, taking a seat beside her. \"You can't leave, we're almost finished with the first stages of this course, it's all fun from here.\"\n\n\"I have to go,\" Cat smiled. \"I just couldn't leave without saying goodbye. You've been such a good friend to me. Every time I got down and thought I couldn't go on you were there to make me smile and buoy me up. You are amazing, and the best friend I could have ever hoped to make here.\"\n\n\"But why do you have to go? Is it something to do with whatever is happening around here today?\" she asked.\n\n\"What's happening?\" Cat worried that her issue with Hella would have negative consequences for her friend.\n\n\"I was met by a Master this morning who said he was taking over from Miss Hella. I didn't think that would happen for a few weeks yet. Then I got this call to come here to see Master Marcus when I wouldn't normally see him until our etiquette lesson,\" she explained. \"They never mess with the routine, even on weekends, so something has to be going on, right?\"\n\n\"I guess you're right. Maybe you have just been doing really well and they are stepping up your training. You still want to do this, don't you?\" Cat asked.\n\n\"More than ever!\" Nymph said excitedly. \"You should have seen Master Francesco, he's beautiful.\"\n\n\"I think you mean handsome,\" Cat laughed.\n\n\"Oh yes, that too,\" Nymph said dreamily. \"I can't believe you're leaving. You can't just give up like that.\"\n\n\"I lied about why I was here,\" Cat said under her breath. \"I never planned to take a contract, and they know that now, so I have to go.\"\n\n\"No way,\" Nymph whispered back. \"Why would you lie?\"\n\n\"I needed to prove I could do it, and I have. Look at me. I have great posture, I can dance and converse about everything, and I can take everything Hella dished out,\" she smiled. \"I needed to understand what it was like to be in that position and be vulnerable and have no control over my life to appreciate what I did have,\" she admitted.\n\n\"So the pimp daddy boyfriend was a lie?\" Nymph asked incredulously.\n\n\"No, that was true, mostly. I had an awful boyfriend like that a long time ago, he's in jail now. Those two men over there are good men who love me and would never treat me that way, and they have come to take me home,\" she admitted. \"I have responsibilities I can't run away from anymore, so I have to go.\" She leaned forward and hugged her friend. \"Please don't say anything to the other girls about why I left.\"\n\n\"Your secret is safe with me if we can have some of that chocolate cake,\" she grinned and eyed the table of food.\n\n\"You can have anything you like from that table, punishment-free,\" Cat laughed and watched Nymph jump up and rush over to the table to help herself to the treats and a large glass of juice.\n\n\"They're not Masters, are they?\" Nymph asked, suddenly remembering the two men who were watching them indulgently.\n\n\"No, they have come here to take me home with them, not to stay here,\" Cat laughed. \"Would you like to meet them? It will give you the chance to practice your etiquette skills.\"\n\n\"I don't know,\" she said nervously. Nymph eyed the two men suspiciously. \"They seem to be watching everything we do like the Masters.\"\n\n\"They are dominants, or at least I think they both are,\" Cat frowned not knowing if Ricco had the same experiences as his brother growing up.\n\n\"I'll save you the trouble of guessing,\" Matteo got to his feet and walked toward the two women. \"Hello, Nymph, I'm Matt, and that is my brother, Ric. For the sake of protocol, you can call me Sir and him as Master.\"\n\n\"Thank you, Sir,\" Nymph grinned.\n\n\"My pleasure,\" he nodded. \"Thank you for being a friend to... Jane... during her time here.\" He had paused over her name and corrected himself before making the mistake of using her real name.\n\n\"More coffee?\" Ricco groaned. \"I feel like I haven't slept for days, oh, wait! I haven't,\" he chuckled and poured himself another cup of coffee.\n\n\"I would have done that for you, Master,\" Nymph said, moving toward the table of food.\n\n\"I'm quite capable, enjoy your time with Jane,\" he waved her away.\n\nCat watched both Matteo and Ricco talk to Nymph through different eyes. They were always so normal with her that to see them both treat her friend as a trainee Kept surprised her, but she said nothing as she watched her friend automatically accept the rules and protocol and even look more relaxed than she had done when she first arrived. Nymph had resumed her seat beside Cat and barely taken a sip of her drink when Francesco arrived, and she gasped. Francesco went to greet the brothers, ignoring the two women for the moment.\n\n\"See, he is beautiful, isn't he?\" Nymph practically swooned. Cat looked at the tall man with salt and pepper hair and deep laugh lines etched around his eyes and mouth.\n\n\"Just as well I am leaving so you can keep your new Master all to yourself,\" Cat laughed softly. \"Luckily I find Matt and Ric very handsome, so I won't be too disappointed about it.\"\n\n\"Nymph, it's time to go,\" Francesco said from a distance and turned back toward the door.\n\n\"Good Luck,\" Nymph whispered, and quickly hugged Cat without saying anything else and followed Francesco from the room.\n\nAs if it was a revolving door, Marcus escorted Hella into the room. Cat was mildly surprised that Hella looked fresh and as beautiful, as always. Cat came to her feet to greet the woman she had called Mistress until Matteo had arrived. She wouldn't, or at least couldn't be submissive to her now with Matteo in the room, but neither would she be disrespectful. She invited Hella and Marcus to sit with her and made the offer of refreshments, unsure of whether it was her place to do so, but she had asked for this meeting, and she guessed that made her the host. Matteo and Ricco returned to the small circle of chairs, and once everyone was settled Cat spoke directly to Hella.\n\n\"I apologise for my behaviour last night. Matteo's appearance had been a surprise, and then seeing you was even more of a surprise and I reacted badly. We had never discussed Matteo or the fact that I was here because I loved him,\" she said quietly. \"Perhaps if we had talked about it you would have realised that I would always do as he asked over another. He asked me to be here. He asked me to accept a Mistress rather than a Master. He is the reason we had our time together.\"\n\n\"You have nothing to apologise for,\" Matteo frowned at her.\n\n\"I think maybe I do. I am sorry if I ever gave the impression that I would be submissive outside of the training I received here. I was doing what was asked of me, but having had a little time to think about it I never said that to you directly. I wasn't here by choice, it was a requirement so I could be with the man I love. I am not submissive across all areas of my life,\" Cat finished.\n\n\"You didn't have to tell me, I knew. You played your part here so well that I allowed myself to get carried away. I apologise,\" Hella admitted through gritted teeth. \"Thank you though, for this. I appreciate that you don't hold the incident last night against me.\" She forced the words out as if they were hard to say. She turned her head to look at the man who would take the girl she had enjoyed owning away from her and studied him. \"She made the name Kitten a hard limit because of you,\" she said, trying to temper her tone from accusatory to casual.\n\n\"Did she?\" he smiled approvingly at Cat. \"I am glad of that. I expect that you and Francesco will add the testing of her limits to the report. I will enjoy reading what else she made a hard limit for you.\" His tone was arrogant, as if nothing was off limits to him, and he saw her recoil slightly and smirked.\n\n\"Are we done here?\" Marcus cut into the conversation before Hella could disgrace the family any further by reacting to Matteo's deliberate baiting.\n\n\"I wanted Matteo to know that, in spite of last night, Miss Hella was very good to me. She was patient and kept me safe at all times. She respected my limits and indulged my kinks. I came to care for her and had thought her care for me was what caused the incident last night,\" Cat said quietly. \"I can see that I was mistaken, I'm sorry for taking up your morning,\" she said sincerely. \"I know you're a busy man.\"\n\n\"Not at all, give me just a minute and I will call Marina to bring the ladies down to see you,\" he smiled. \"Hella, you can return to your room,\" he commanded and stood to walk the woman from the room.\n\n\"I called the girl 'Pet' as another might use the word 'Dear'. It is hard to believe you were all so offended by such an innocuous word,\" Hella rolled her eyes as she came to her feet. \"This whole thing is ridiculous. You need to grow up and start acting like men instead of boys who won't share their toys!\"\n\n\"As I explained last night,\" Ricco said, leaning across Cat to place a steadying hand on his brother's shoulder. \"It was never about what you said, it was about the way you said it and the tone you used. Just as rolling your eyes at my brother will also put him offside. Would you allow any of your charges to speak like that to you?\" He asked pleasantly.\n\n\"Of course not, but they are...\" she paused, realising that these men were putting her in her place, and she re-evaluated the situation.\n\n\"Would you speak to Marcus or Bruno in that tone?\" Ricco pushed further. \"Perhaps you feel that the other tables aren't worth your respect, but the leaders of those families make up the thirteenth, and Bruno must face those thirteen and be accountable for his family. I'm afraid even Cat's goodwill may not help you come back from this little outburst. Your respect for the Battaglia chair, which allows to you lead a privileged life, should have been enough to stay your inner bitch for thirty minutes!\"\n\n\"My family has my respect! I owe you nothing! You don't deserve a girl like her! You have no idea how to treat her properly to get the best from her! She needs me! You will only ruin all the training I have given her! You should think about more than your tiny dick and leave her here to complete her training properly! She may claim not to be submissive, but she is a natural, and you will waste the gift that she would give you willingly!\" she spat.\n\n\"I believe,\" Matteo growled, \"That I would be happier with a more formal punishment for Hella after this little exchange! Catriona asked for this meeting with the best of intentions, and even apologised for her part in the incident last night, though as far as I can see she did no wrong. Instead of accepting our leniency with grace and gratitude it has been dismissed with vitriol and slander!\" Matteo snarled, directing his comments directly to Hella, who seemed to shrink under his gaze.\n\n\"You chose the wrong man to test; your good will means nothing to me. You can hate me until the end of time, for all I care, and while I would have let the matter go because the woman I loved asked it of me, I find that I can no longer do that. You are an arrogant bitch who just threw away the next two years of her life because you believed my love for Cat made me weak!\" he said sharply. \"You could not be more wrong. The gift of her love has only made me stronger, as you are about to find out.\"\n\n\"Stay here with Ricco!\" he said sternly to Cat, and stepped forward, wrapping a fist around Hella's upper arm and practically dragged her from the room.\n\n\"You can't do this to me!\" She shrieked at him. \"You have no rights here!\"\n\n\"If one of my family members spoke to Marcus or Bruno the way you spoke to me, they would already be on their way to the Papillo! Do you seriously have no idea who I am and the power I can wield?\" He practically shouted at her as the door closed behind them.\n\nRicco immediately moved to comfort Cat, who he knew would be blaming herself for the scene they had just witnessed. Cat automatically moved into the familiar comfort of his arms as she had done so many months ago and tried to push back the tears that threatened. She hadn't expected Hella to attack Matteo like that, she had been trying to make things better between the two families.\n\n*****\n\nCat sat on the plane listening to Matteo and Ricco talk as if nothing had happened before they left. The opposite was true, and seeing Matteo so mad had frightened her. She'd managed to keep it together while talking to the ladies and exchanging numbers so that she could seek their assistance with ball gowns that suited her figure and colouring. She had loved how they took what she liked from each dress and melded it into a single beautiful gown.\n\nShe had apologised profusely to Marcus for causing the second scene with her request to see Hella. While he had said he was grateful for exposing a flaw in their training program, he had seemed deeply unhappy when they finally left, and she felt guilty for that. She felt guilty about putting everyone in the position they were in now, and she felt her eyes well up with tears. She didn't belong in this world, she had no idea what she was doing, and all she had managed to do since getting involved with this family was hurt the people around her.\n\n\"Cat?\" Matteo frowned seeing her eyes mist over. \"Tell me.\" he said, softly removing his belt and moving over to where she sat.\n\n\"I'm sorry. Everything just went so wrong! I didn't expect her to be so angry, or you...\" she swallowed loudly. \"You were so angry!\" He voice was pitched, and the tear that had been threatening finally spilt over to her cheek.\n\n\"I wasn't,\" he took her in his arms and rubbed her back. \"I needed to talk to her like that to get her full attention. She was treating me like every other man she comes into contact with, and she needed a reality check. Neither Ricco nor I are weak little bit players in her fantasy world. She had high connections in that family and believed she was untouchable. Now she knows there are consequences no matter who you are.\"\n\n\"Marcus looked so upset too. He said he wasn't, but...\" she shrugged helplessly. \"It's all my fault. I should have just let you take me home this morning.\"\n\n\"Marcus is a man who prides himself on being thorough, and it was he that chose Hella as your trainer. He has taken it badly that his decision has caused his family embarrassment, as I would for any bad decision I made that brought our family into disrepute. It is the type of men we are,\" he tried to explain. \"You did nothing but do what was asked of you and try to make a bad situation better today,\" he kissed her forehead as he continued to stroke her back.\n\n\"Marcus and Marina will be visiting us soon, as will Peri and Joshua. Maybe we can spend some time at the house on the hill and do some riding. Marcus always enjoys riding, it will help him to relax,\" Ricco suggested.\n\n\"You'd have to ask Cat, I gave her the house the day she agreed to marry me,\" he shrugged. \"I wanted to knock it down, but she has asked to renovate and redecorate it instead. I guess I should find you an architect and builder when we get home.\" He said, taking Ricco's cue to move onto other subjects so she wouldn't wallow in her guilt.\n\n\"You still need to propose properly,\" Ricco reminded him. \"You haven't put a ring on it,\" he chided his brother. \"What does proper proposal entail, exactly?\" Ricco asked Cat, steering her onto happier topics.\n\n\"That is for him to work out. I want romance and emotions, and... I don't know. I want more than a business proposal and a paper ring made from a beer bottle label. Although the ring was pretty cute the second time you gave it to me,\" she grinned. \"That is what got you the tentative yes.\" Cat knew they were trying to take her mind off what happened and the guilt she felt, and she was grateful, even though she was still upset by the scene.",
        "\"Seriously? A beer bottle label was the best you could come up with?\" Ricco groaned.\n\n\"I proposed the first night I met her, I wasn't prepared,\" Matteo sighed defensively. \"It was the best I could come up with on short notice.\"\n\n\"Where is this impromptu ring now?\" Ricco asked, picking up Cat's left hand. He could see her frown as if trying to remember what had happened to it on the day she had accepted his proposal on the flight to Melbourne.\n\n\"I have it,\" Matteo grinned. \"When I propose, and you say yes for good, I will give it back again.\"\n\n\"You're not even going to spring for a new beer label?\" Ricco teased. \"I could make you one from a champagne label, and you could trade up,\" he offered.\n\n\"That would depend entirely on the champagne,\" she giggled, making him raise his eyebrow.\n\n\"Don't look at me, that's something you have to work out for yourself, I'm not helping you steal my girl from me,\" Matteo chuckled. He appreciated that, having spent so much time with Ricco over the last few weeks, he didn't feel strange about the easy banter that had an overtone of intimacy about it. They talked about the future as if they would live it together, and even Cat seemed to be taking it for what it was.\n\nOne of the pilots appeared in the door leading to the cockpit and nodded to Matteo, who got to his feet and disappeared through the door.\n\n\"Papa must have heard what happened this morning,\" Ricco commented, making all her guilt and ill feeling rush back. \"I guarantee he approves of everything you and Matteo did,\" he reassured her. \"You tried to make things right between the families; he, above everyone, would appreciate that. He will also appreciate that Matteo wouldn't be treated with disrespect while visiting the facility.\"\n\n\"Thanks for saying that,\" Cat gave a small smile. \"Can I ask you a personal question?\" she asked.\n\n\"I think for this whole relationship between the three of us to work you will be asking a lot of personal questions. I know I fucked up the first time with you, but I will prove you can trust me. Matt and I have talked about how important it is to be honest and put everything out there. If we don't it can never work and we will all end up miserable,\" he said gently, knowing she had less than twenty-four hours to get used to the fact that he would be part of her and Matteo's relationship.\n\n\"Why did Matt say that Nymph could call him Sir and you Master?\" she asked. Her curiosity had been peaked at the time, and it had remained as an unanswered question in the back of her mind.\n\n\"I have had more mentoring than him from a real Master who works with the women we train in Melbourne. Matteo is a Dominant in the sense of an Alpha. He knows how to engage in the BDSM lifestyle sanely and safely. I know that, but I have also had further training in the art of Shibari and Kinbaku and earned the titles of Nawashi, which means Rope Master, and Kinbakushi, which roughly translates to Rope Bondage Master,\" he explained in detail for her, knowing she would need to ask further questions if he didn't. Cat always had so many questions, and he had taken on board the information Matteo had given him about Cat's insecurities and her need to understand before she would trust and accept the relationship they would need to build.\n\n\"I don't think Matteo has rope in his white room. Miss Hella used it sometimes for different things,\" she explained without going into detail.\n\n\"I didn't know the white room existed, to tell you the truth, but I am not surprised,\" Ricco said thoughtfully. \"I imagine it will be some time before you and I find ourselves in that room. As I said, I know I screwed up, and we need to build trust again. I'm patient, to a point, and I would never do anything to hurt yours and Matt's relationship.\"\n\n\"So, what then? We date and get to know each other all over again?\" she asked. The fact that she had been thinking about being intimate with him again during her training was something she wasn't ready to discuss.\n\n\"Sure. Why not? I doubt Matt would mind if we had a date night now and then,\" he agreed. \"There are no hard and fast rules to this, but I have told Matt that I don't want to live like a monk or have a Kept. As I said, I'm patient, and I am sure we can work out any problems that arise as we go.\"\n\n\"Did you have a relationship with Maryanne?\" she asked. \"When you thought Jacobi would be named as Chair?\"\n\n\"That was the plan, I guess, but you can't fake chemistry, and we didn't have it. Strange for Maryanne, since Cobi and I look pretty similar, but I don't think they embraced the idea, and I wanted a real relationship, especially after meeting you. I got confused and torn between what I felt and wanted with you and what I knew I would have to do if Cobi's predictions were right,\" Ricco admitted. \"I couldn't have told you at the time, you wouldn't have understood. It was never about you, I loved everything about you, I was just in a bad place, and you were right to leave me at the time.\"\n\n\"Our relationship back then was always doomed. I would never have been able to accept any of this without everything that happened in between,\" Cat said wistfully. \"I left Melbourne because there was always something good between us, so that whenever we saw each other we were drawn together. I had to leave or end up back in a bad cycle with a man coming back to claim me over and over again. I met Matt the night I arrived in Brisbane, then Peri Donati took me into her family, and they all embraced me and gave me a glimpse into the families of the twelve tables,\" she paused and took a breath. \"Your brother, though, he wouldn't let me run away. He made me face some realities about myself and my life and showed me that none of the things from my past that I wore like a badge of shame mattered to him or anyone else. He made me feel worthy, and I never had to prove myself to him.\"\n\n\"None of that ever mattered to me either!\" Ricco said defensively.\n\n\"I know that now, but I wasn't ready to hear it then. I don't think you were ready to say it then either. Everything that happened from the time I met Vanessa has led me to this place and was meant to happen, I think, so that I can sit here and tell you that I love Matteo. I love him with my whole heart, and going to the Battaglia and accepting that you and I will have a relationship is what I will do because I love him and can't bear the thought of not having him in my life,\" she said seriously. \"The old Cat would be avoiding both of you and wanting to go home to my little house when we arrived home because I caused the problems last night and this morning, but I know he won't let me, and I know he still loves me, even though I messed up badly. I know it in here, and in here.\" She touched her head and her heart.\n\n\"I have to admit that, even though I'm a little bit jealous, I am glad you told me that. Matt deserves a love like that. He's the best of us, and I love him too,\" Ricco told her in the same serious tone.\n\n\"Papa wants us home when we arrive,\" Matteo said. He had heard most of what they had said to each other, and he moved to pick Cat up and sit on the chair, pulling her into his lap. \"Ricco's right. Papa's pleased with the way we handled everything with the Battaglia, as is Bruno, who called him. You have nothing to be concerned about,\" he reassured Cat and nuzzled her neck, breathing in the scent of her.\n\n*****\n\n\"You didn't run away or opt out,\" Roberto said, as Cat took a seat near his desk after Matteo and Ricco had been dismissed to go and find their brothers. They had briefly stopped at home and dressed for a special family dinner to welcome herself and Kalum home. She felt very overdressed in the blue dress Matteo liked so much.\n\n\"No, right up until the final day when Matteo and Ricco arrived I was treated well and have no complaints,\" she said carefully. She had made her one complaint to Bruno Battaglia himself.\n\n\"You handled the final days there well. You tried to make the situation better. Unfortunately, the woman involved did not take your cue. It is sometimes difficult for those who hold power to forget that it can be a temporary thing. Tell me what you learned of your role in supporting Matteo and Ricco to lead our family,\" he sat back, touching his fingertips together in a steeple as he often did when having a serious conversation with her.\n\nHe listened as she spoke about the responsibility to give back to the community and the extended family who were not in such a privileged position. She would need to get to know the large family and would work with not only Theresa but the wives of the other brothers and cousins who would make up the new table to ensure that everyone felt valued. She would have a staff that she would need to oversee, and she would become involved in serveral charitable organisations that she could choose for herself or take on the ones already favoured by the family. In addition to all of this, she hoped to maintain her own career, at least on a part-time basis, and begin building a family with both of the men.\n\n\"Delegation is the key to keeping all of the events you will need to juggle in order,\" he nodded at her summary and interrupted with small corrections and little tips such as this from time to time. \"You have done well, and I believe the recommendation to spend time getting to know the other mothers of the table will be good for you, but they are not urgent recommendations and can wait until after the gathering.\"\n\n\"If you think that's best,\" Cat agreed.\n\n\"I do,\" he smiled. \"There is one very important element of being a mother that you haven't mentioned yet, I would like to meet at least one of the men who will populate the next table while I am able to enjoy the moment.\"\n\n\"Maryanne is about to have a son,\" Cat said quickly.\n\n\"That child may not ever sit on the table, depending on how many sons you and Matteo's other brother's wives produce,\" Roberto explained. \"All of the other responsibilities pale in significance and can be delegated to others. Only you can produce the next generation of Vitali leaders.\"\n\n\"Matteo and I have talked about children and wanting a big family, I had just thought that I would have a year or two before we had to start,\" she said quietly.\n\n\"I'm not sure I will be here to meet your first born if you take that long,\" Roberto said sadly. \"It took far too long for you to fall in love with one of my sons, for my liking,\" he chuckled.\n\n\"I thought it was a bit of a whirlwind romance myself,\" Cat laughed. The truth was that they had only talked about having a family of their own recently, and not in depth at all, but she hated to admit that. If Roberto wanted grandchildren soon, she would need to start thinking about it seriously instead of a 'one-day' plan. \"I have known you much longer than I have known Matteo.\"\n\n\"Papa, we're home,\" a soft feminine voice said after a soft knock preceded the door opening.\n\n\"Mia, is Kalum with you?\" Roberto asked.\n\n\"Yes, thank you, Papa! The whole thing was a dream! I'm so happy!\" Mia gushed. \"Look, Cat,\" Mia came into the room holding her finger out for Cat to see a glittering ring. \"I'm engaged!\"\n\n\"That's so exciting, congratulations, Mia!\" Cat embraced her tightly and squealed over the beautiful ring.\n\n\"I'm hoping your brother will get me one of those one day soon,\" she grinned.\n\n\"I'm sure he will. I have never seen him so happy,\" Mia laughed. \"He's almost as happy as I am!\"\n\n\"Where's Kalum?\" Cat asked. \"I should take the opportunity to kiss him in congratulations before he's a married man.\"\n\n\"He went to find Matt and tell him before the others. Matt's always been a bit overprotective of me, and Kalum doesn't want to piss him off,\" she said with a laugh. \"You probably haven't seen his temper, but he can be pretty scary when he wants to be.\"\n\n\"I've seen it, and you're right,\" Cat agreed. \"I don't blame Kalum for going to tell him first.\"\n\nWhile Mia and Cat had been gushing over the ring, Roberto had made a call, and a moment later a confused looking Kalum entered the room escorted by Lucca.\n\n\"I got him just in time,\" Lucca nodded at his father.\n\n\"In time for what?\" Kalum asked, his confusion clear in his voice.\n\n\"Catriona, would you mind terribly waiting for me with Lucca while I congratulate my daughter and her fianc\u00e9, please?\" Roberto said in a cheerful tone, and guided Mia and Kalum from the library out the side door that led to the extensive grounds.\n\n\"What's going on?\" Cat asked. \"I thought Roberto would be happy that he had returned and proposed to Mia.\"\n\n\"He is, we all are. Kalum's a great guy. I expect Papa would rather they didn't tell everyone about the engagement yet so they can throw them a party. Our family loves a party, and with so many aunts and uncles you can only imagine what weddings and engagement parties are like,\" he grinned. \"I guess you'll find out sooner or later.\"\n\n\"I'm hoping so,\" she laughed self-consciously. \"I'm not sure about the party, but I'd like the wedding part. Maybe we could elope.\"\n\n\"Not likely. If you did they would make you come back and have a real wedding anyway,\" Lucca chuckled.\n\n\"It won't matter if he never proposes,\" she gave a nervous laugh.\n\n\"I thought he already had?\" Lucca looked at her speculatively.\n\n\"He did, sort of, but I wouldn't accept formally until he proposed properly, instead of,\" she paused. \"He just didn't propose very well the first hundred times, so when he finally wore me down, I said he would have to propose properly before I would say yes properly.\"\n\n\"First hundred times?\" Lucca looked at her incredulously.\n\n\"He was pretty persistent, which is why I didn't think he really meant it,\" she shrugged.\n\n\"So, he needs a pretty grand gesture to make you believe he means it?\" Lucca asked, seeing Roberto come back into the room and nod at him.\n\n\"Not grand, it just needs to be more than, 'hey, babe, how about now'?\" she giggled.\n\n\"He calls you babe?\" Lucca winced.\n\n\"No, but that's the general feel of it. He'd ask in the morning and I'd say no, and an hour later he'd say, 'how about now'?\" Cat shook her head but continued to giggle. \"I bet Kalum was very romantic when he proposed to Mia. They look so in love and happy,\" she said with a wide smile.\n\n\"No doubt we'll find out soon enough,\" Lucca agreed.\n\n\"Thank you for waiting for me. Let me escort you to dinner,\" Roberto held out his arm for her to take as Lucca skipped ahead and opened the door for them, disappearing through it at the same time. \"We have quite a few of the extended family here tonight; everyone has been so concerned with Stefano's health that with your return it seemed a good time for a dinner party. Theresa has been wonderful pulling this all together at the last minute.\"\n\n\"Oh,\" Cat faltered. She had no idea she was walking into a party. \"I only made it as far as the library when we arrived.\"\n\n\"Don't worry, my dear, they are all quite friendly, and, I expect, looking forward to meeting you and Kalum tonight,\" he said reassuringly. They walked through the house to the back deck that overlooked the pool area and turned toward the side of the house. A large Marquee had been set up and was lit with soft lighting, making it glow golden against the darkness of the night. People milled around inside chatting jovially in small groups as they approached, and as they came to the entrance a hush descended, and people began to take their seats as Roberto escorted her through the centre of the marquee to where Matteo sat with Stefano and Theresa as well, as the four other older siblings.\n\n\"It's good to see you, Stefano, you're looking well,\" Cat smiled and bent to kiss his cheek.\n\n\"Looking well, considering,\" he chuckled at her polite greeting. \"I am fighting fit and ready to dance the night away,\" he winked at her. \"After my son makes the opening speech, maybe you and I can tango, I can still give these young ones a run for their money.\"\n\n\"I don't doubt it, but I would hate for Matteo to develop performance issues this early in our relationship, because you're such a hard act to follow,\" she laughed easily, and Stefano erupted into a roar of laughter that made him cough.\n\n\"Thanks for the consideration,\" Matteo groaned, giving his father a stern look. \"I think the only dancing you will be doing tonight is the waltz with Mama, if you're lucky, and she's not so heartbroken by your flirting with my girl that she will turn you down.\"\n\n\"I don't see you telling him to get his hands off your girl,\" Stefano pointed to Roberto.\n\n\"I don't have reason to,\" Matteo shrugged. \"He's not openly flirting with her.\"\n\n\"That you know of anyway,\" Roberto chuckled and took his seat, allowing Matteo to pull out the chair beside him for Cat. When she sat, she realised a hush had descended on the gathered crowd, and her eyes scanned the room looking for a familiar face. Her eyes landed on David and Mick, and she smiled. She had known that David had started to become close to Matteo, and even Ricco, to a degree, but she hadn't expected to see him at a Vitali family dinner. He was sitting beside Frankie and Anna, and Cat realised he probably was a little like family to at least Frankie and his wife. That was the last thought she had before she heard Matteo address the small crowd. He had stood beside her to make what she assumed was the opening speech for the night, and she turned toward him in her seat, leaning back into Ricco who had been seated on the other side of her.\n\n\"Thank you, everyone, for coming tonight at such short notice,\" he began. \"I've invited you all here to meet the woman I love, Catriona Leone,\" he paused as there was a general murmur and a small smattering of applause. \"Despite proposing at least a hundred times, she has managed to resist my charming ways,\" there was a general murmur of discontent, and he held up his hands and smiled at them all. \"To help you to understand why she might decline the invitation to become Mrs. Matteo Vitali, I'd like you to indulge me as I tell you the story of how we met and why a confirmed bachelor like myself would have fallen in love with this woman.\" He turned and indicated Cat, who sat beside him blushing deeply.\n\n\"What are you doing?\" she whispered, mortified by where this speech was heading.\n\n\"Trust me,\" he smirked and turned back to his captive audience. \"Late last year I travelled to Brisbane to meet with my long-time friend and cousin, Dante Donati, and his brother, Joshua. They'd given me an apartment for the duration of my stay, and I was there relaxing on a dark and stormy night in my pyjamas. I was reading the family newsletter when the door crashed open and a drowned rat, with what looked close to tribal war paint streaked across her face, practically fell over the threshold,\" he paused as there were titters of amusement from his audience.\n\n\"At a loss, I asked the first thing that came to mind, \"Why is your face blue?\" and she responded by demanding to know what I was doing in her apartment. Being my charming self, I explained that she was mistaken and she had to leave. I even suggested that she go back out into the near cyclonic weather and find somewhere else to stay. Unsurprisingly, she told me that she would not be the one to leave,\" he waited again as quiet laughter erupted. \"After discovering a tube of paint in her artist kit had exploded, she went to the bathroom to clean up, and I called Dante to find out what the deal was with the apartment. It was a simple mix up that could be corrected the next day,\" he explained casually before remarking. \"The next thing I knew the drowned rat with blue war paint had disappeared, and this beautiful woman emerged from the bathroom.\" \n\n\"We shared pizza and beer and talked about our lives, and I proposed that first night. She even seemed to consider the proposal until she found out who I was and turned me down flat. She knew some of my family, and unbeknownst to me she had, until flying to Brisbane that night, worked for my sister's interior design company as an artist. It seemed the Vitali name wasn't as impressive as I had thought,\" he chuckled with the crowd as she blushed deeper. \"Or it might have been that I proposed to her with this ring,\" he held up the first ring for all to see, \"I had fashioned it from a beer bottle label as we chatted that first night.\" There was more laughter. \"I know what you're all thinking, and even though I am a real charmer and present her with this magnificent ring, she still turned me down. Unbelievable, right?\"",
        "Even Cat had begun to giggle at his self-depreciating recount of their first meeting, even if he left out a lot of detail.\n\n\"Fortunately for me, even though she moved out of the apartment after making me sleep on the couch, I got to spend quite a lot of time with her over the next week or two as I met with Josh and she met with Peri about our different projects, and then she disappeared again for several weeks. I had begun to stalk her at that stage, and send her gifts, until her brother, David,\" he indicated where David sat, \"threatened to punch me if I continued to stalk his sister, who was working and had told him and me that she would meet with me when she returned. You all know what a patient man I am, right?\" He chuckled as more laughter came up from the crowd.\n\n\"Still this woman couldn't be rushed, and I waited patiently to propose again when she returned, which I did, over and over and over again. Then, just when I was wearing her down, she gave me an ultimatum, that if the next time I proposed wasn't suitably romantic and meaningful, she would never accept. So here I am in front of all of you telling this story about what a charming, patient and hopelessly in love man I am and how much I want to marry this woman,\" he smiled as the crowd gave a collective \"Aww.\"\n\n\"Catriona, you make my world a better place to be in. You are smart and funny and so, so beautiful. I love everything about you, from the funny look you give me when you think I'm doing something crazy, like now, to the amazingly big heart you have that encompasses everyone you meet,\" he got down on one knee. \"Please, Cat, marry me,\" he lifted a ring box and opened it, holding it out to her.\n\n\"Yes,\" Cat whispered and cupped his face, uncaring of the ring or the people around them and kissed him. \"I love you, and I can't wait to be your wife.\" After everything they'd been through over the last three months she knew for sure that being his was exactly what she wanted."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "ball",
        "mistress",
        "lesbian",
        "engagement",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-18"
}