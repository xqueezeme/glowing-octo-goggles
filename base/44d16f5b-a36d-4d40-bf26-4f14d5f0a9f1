{
    "title": "I Kissed a Girl Ch. 07",
    "pages": [
        "**Thank you to all of my readers. I have enjoyed the journey with Kat and Jenna, and hope you have as well. It has been a pleasure expanding on what was supposed to have been a single, short story, dreaming up what their next adventure would be. But I owe that in part to you, the reader, as I've only written what you've requested. May their adventures continue on in your own imaginations. -- H **\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI had a dream.\n\nI was walking along a street in the middle of the day. But the light was too bright. I could only see a couple of feet ahead of me and the sidewalk directly beneath my feet.\n\nThere was nothing to my left. Just a white space. On my right were buildings in one long continuous line, but the walls were almost translucent. There were no signs on the storefronts. When I stopped to look in a display window, I could tell there were shelves inside with objects on them, but they were blurry, like I suddenly had acute astigmatism. I even tried a door, but the knob wouldn't turn.\n\nThere were no sounds. No cars. No people. Not even a bird. The only interruption in my path was the occasional street lamp or pot of flowers. In fact, the sidewalk was smooth. No cracks. No cross streets. Not even a seam between sections.\n\nI wondered how long I had been walking. How much further I had to go. Where I would end up. Why I was walking to begin with.\n\nSuddenly, there was a break in the buildings. An asphalt path led off the sidewalk to my right. Ahead of me, the buildings and sidewalk continued on. I paused only for a moment before I took the new path.\n\nIt led into an alley, but there weren't any dumpsters or trash or piles of rubble like one would expect. As before, I could only see about an arm's length away. This time, it was darker than pitch before me.\n\nA lone lamp somewhere above was the only light now. It was low enough that I could see it, but too high to illuminate my immediate surroundings. Up by the light, brick walls covered in wet moss rose on either side into the sky until they disappeared into darkness again.\n\nI could either keep going or turn back. I didn't know what lay in either direction. While I had been unable to see my entire path before due to the brightness, at least it had seemed better to see something than nothing. Hadn't it? Why was it so hard to make a decision? Shouldn't it be easy to pick the path that I was used to?\n\nI woke up with a start, gripping my pillow and panting. I used the bathroom in a half daze then crawled back beneath the sheets and the warm duvet, trying not to wake Jenna. For the longest time, I just lay there, staring at the ceiling, trying to remember if there was more to the dream.\n\nWhen I couldn't fall back asleep, I got up to make some coffee. It was still the middle of the night and the apartment was dark, but I knew where everything was. I used my hands to guide me around the kitchen island and to get a mug out of the cabinet to put in its spot on the Keurig. I picked a general K-cup, popped it into the slot, and waited for the machine to do its magic.\n\nI took my hot drink into the living room area, grabbed a thick blanket, and curled up in the oversized chair, pulling my feet under me. As hard as I tried, nothing else about the dream registered. It was just an unending walk on an unending street with two options: to continue the way I was going, or to enter dark territory and hope for the best.\n\n\"Kat?\" Jenna whispered behind me.\n\nI turned my head towards the bedroom doorway. \"I'm sorry, did I wake you? I tried to be quiet.\"\n\n\"No, sweetie. Just nature calling. But I got worried when I didn't see you in bed. Everything okay?\"\n\n\"I had a dream. I couldn't go back to sleep.\" I lifted my mug to her. \"Thought this would help.\"\n\nShe leaned against the back of the chair and gently massaged my shoulders. \"Want to talk about it?\"\n\nI shook my head, trying not to think about how sexy she had looked in just panties and a short T-shirt, her hair messy from sleeping. \"It was just a dream. Go back to bed.\"\n\n\"Okay.\" She started to leave, but then she paused and tangled her fingers in my hair. \"I know a way to help you sleep, if you're interested.\"\n\nI tilted my head back to see her face. \"Now?\"\n\n\"Hmm mmm.\" She just smiled at me, her fingers massaging my scalp. \"But only if you want to.\"\n\nI took one last sip of coffee, set the mug aside, and threw off the blanket. \"Coming.\"\n\n\"You hope.\" She laughed and took my hand, leading me back to the bed. As she pulled a vibrator from the drawer on the nightstand, she said, \"Take off your clothes and lay down.\"\n\n\"Are you sure this will work?\"\n\n\"Yes. Now, shh.\" Jenna wasted no time parting my thighs and sliding the vibrator between them. She turned it on low and pressed it at my entrance. There was a slight hesitation as my body adjusted to being penetrated, and then the smooth plastic slipped inside me.\n\nI gasped, gripping at her arms. \"Oh! Yes! Please...more.\"\n\n\"Feels good, doesn't it sweetie?\"\n\nI just moaned and opened my legs wider.\n\nShe steadily stroked the vibrator in and out of me, her other hand supporting her weight as she sat beside my hip and leaned over me. She kissed me softly. Languidly. Her tongue tracing my mouth and slithering inside when I parted my lips.\n\nAfter awhile, she moved down to kneel between my legs. Her free hand now rubbed my piercing into my clit, the hand holding the vibrator speeding up now that she had a better angle to control it. She paused only once to increase the level on the toy, and then she was coaxing me to come.\n\n\"That's a good girl. Give into the feeling, Kat. Let go of whatever is troubling you. It's just you and me.\"\n\nI gripped the sheets, pumping my hips in rhythm to her thrusts, rolling my head from side to side. I could feel the peak calling to me. I was getting tired again. Part of it was from the frustration of not finding release. It was right there, I just couldn't get to it. I growled my displeasure.\n\n\"I know, sweetie, I know. Hold on.\"\n\nJenna's motions stilled for only a moment, and something rustled in the drawer again as she leaned away from me. Then she lifted my legs up. Wedged her knees beneath my ass. Released my legs so that they were forced wider apart by the width of her hips. And then she withdrew and plunged the vibrator back into me.\n\nI arched my back, whimpering when I felt another vibrator circling my clit. It made my piercing rattle against the plastic and press into my most sensitive area at the same time.\n\n\"That's it baby. Come for me.\"\n\nAnd finally I did, screaming loud and long and shaking beneath her like leaf in a storm.\n\nShe didn't say anything as she slowly removed the toys and lay beside me while aftershocks rolled through my body. As she pulled the covers over us and wrapped her arms around me. As she pressed her lips to the back of my head and flung her leg over my hip to get closer to me while we spooned.\n\nI smiled as I gave into my exhaustion. As always, Jenna knew just what to do. And I loved her for that.\n\n###\n\n\"It wasn't a bad dream. It was just...I don't know.\" I sighed into my second cup of coffee the next morning, watching the snow fall outside the living room window that glimmered with ice crystals in the corners.\n\n\"It's okay, Kat.\" Jenna patted my knee from where she sat beside me on the couch. \"Sometimes we just have strange dreams.\"\n\nI nodded. \"This was definitely strange.\"\n\n\"Do you want to tell me about it?\"\n\nI set my mug aside and snuggled up to her, feeling and hearing her heart beat against my ear as I laid my head on her chest. Her sweater was warm and soft, just like her.\n\nIt didn't take long to relay the dream despite the fact that the dream itself had seemed to be endless. No beginning really, no end except waking up. Just me existing there with no purpose but to walk. And to make a decision.\n\nJenna rubbed her hand up and down my arm. She was silent for a long while, and then she said, \"Maybe you're having second thoughts about choosing this lifestyle. I mean, you did kind of jump into this rather quickly.\"\n\n\"Jenna Swallow!\" I struggled to sit up, and she struggled to keep her arms around me. But I managed to push away from her and get to my feet, although my legs wobbled and I had to grab onto the arm of the couch to steady myself. \"How\u2014 Why\u2014 I don't understand... You proposed...\"\n\n\"Yes, I did. And I meant it. But really, Kat, this has all been happening so fast. It's completely understandable if you are unsure about your decision. Any of them. You can take more time to think about it. It's okay.\"\n\n\"No, it's not okay!\" I stomped my foot and fisted my hands at my sides. \"I don't know why I dreamt of having to choose between a light and dark path. Maybe it was just reality affecting my subconscious... A way of my mind finally admitting that I'm heading in a different direction. Not that it's wrong, just that it's new and unfamiliar. But I do know I want to be with you. Only you. And I'm not changing my mind about that. We are getting married. I'll go with you today to the courthouse to prove it, if you don't believe me.\"\n\n\"Kat\u2014\"\n\n\"I'm serious.\" I wanted to pull my hair out, but I settled for pacing instead. \"I know you want an official marriage. An actual wedding ceremony with family and friends. But I'd accept a civil union ceremony, since that's all that is legal here in Illinois right now. Whatever it takes to make you believe me.\"\n\n\"I believe you, sweetie.\" Jenna stood and put her hands on my shoulders to stop both the flow of words spilling from my mouth and the circular path I was going to wear into her nice area rug. \"And I do want what you said. But we will do this right. We will not rush into this. I want us both to be completely solid with our decision.\"\n\n\"I am solid. As a rock.\"\n\nShe just raised her eyebrow.\n\n\"Well, maybe not a rock, but I'm not changing my mind. Hell, I wouldn't have told Celene you were my fianc\u00e9e if I didn't hope for that someday myself.\"\n\n\"Someday.\"\n\n\"Stop it. You know exactly what I mean.\" I pulled back and crossed my arms. I turned to watch the snow again. \"I know we've only been together for a little over seven months. But it also seems so long. I can't explain it. This is right for us. Why are you fighting this?\"\n\n\"I'm not fighting it, Kat. I'm just\u2014\"\n\n\"Wait!\" I turned back to her, narrowing my eyes. \"Are you having second thoughts, Jenna? Wishing you hadn't proposed?\"\n\n\"No. I want to marry you, Kat. It's just... It's not going to be like if you had married Danny. People aren't going to accept us as a couple very easily. Some not at all. You're going to have to be comfortable with that, especially when they turn their noses down at you. I've spent years in the lifestyle. I'm accustomed to how the rest of the world treats people like us. But you're not. We've been pretty secretive about our relationship thus far. You're\u2014\"\n\n\"Jenna, I want to do this. This isn't some fling, like Lauren thinks it is. I can finally be me. I don't feel like I'm just going with the flow like I did when I was with Danny. Yeah, I was going to marry him, and I did love him on some level, but that was mostly because it was just expected. This? This is so out of character for me. But it's who I really am. It's who I'm supposed to be. You make me feel alive. You've shaken up my world, for the better. I'd be devastated if you walked away from me now. I'd survive somehow, but I don't want to think about that.\"\n\nJenna grinned. \"I'm not going anywhere, Kat. You're stuck with me. I just wanted to be sure\u2014\"\n\n\"What do I have to do? Sing 'The Point of No Return' from 'Phantom of the Opera?' Throw me a rope here.\" I rolled my eyes, cursing under my breath as I suddenly thought of what we had done over the weekend with rope. I needed to keep a clear head.\n\n\"Oh, Kat.\"\n\nI blinked at the low tone of her voice. And I swallowed hard when I saw the way her eyes shined and her mouth parted ever so slightly as she stared at me. \"Um, yes?\"\n\n\"You know that's my favorite song from the play...and the movie. So very seductive. Enticing. Makes me want to throw you on the couch and have my way with you right now. While the song plays in the background, of course.\"\n\nI gulped. \"Of course.\"\n\nOkay, both of our heads had taken a complete dive into the gutter.\n\nFor me, just thinking of the song made my breasts ache and my clit throb with desire. Even though Christine was taunting the Phantom in the play\u2014leading him into a trap in that scene\u2014I secretly wished she had chosen him and they had gotten down to it in his lair beneath the Paris Opera House. I'd fantasized about it many-a-times. Apparently so had Jenna. Although in her version, the Phantom had probably always been female. Butch, albeit, but female still the same.\n\nJenna stood and took a step toward me. \"I think I need a little convincing...\"\n\n\"You don't say?\" I took a step back.\n\n\"Mmm hmm.\" She advanced, I retreated.\n\nWe continued the game until I bumped into the bedroom doorframe with a gasp. She took the final step closer until we were chest-to-chest. She brought her lips to mine but did not touch them.\n\n\"You really are a tease, aren't you Kat Jenkins?\"\n\nShe didn't wait for my answer but took my hand and led me the rest of the way into the room.\n\nThe bed was still unmade, the covers thrown halfway to the floor after we'd made love before getting up late this morning. I watched her strip down completely and then lay on the fitted sheet, her head resting on a pillow with her hair splayed out.\n\n\"Eat me, Kat?\"\n\nI licked my lips. \"With pleasure.\"\n\nI climbed fully clothed onto the bed between her legs. Lying on my stomach, I positioned her legs over my shoulders and ran the flat of my tongue over her shaved pussy.\n\nJenna squealed and lifted her hips up. Her legs closed, locking my head between them.\n\n\"Down girl.\" I wrapped my arms under her legs and gripped her thighs on top to pry them open.\n\nWhen she settled back to the bed, I licked her again, slower this time, relishing the feel of her smooth skin against my rough tongue.\n\nHer sweet smell drifted up to fill my nose. She'd used a cherry-scented body wash during her shower this morning, and her skin had absorbed the aroma. But underneath was her unique, natural perfume. It was slightly musky\u2014reminding me of the sesame ginger sauce we used whenever we marinated chicken. When she was aroused, as she was now, it was much stronger.\n\nI inhaled deeply and sighed, kissing her swollen lips that currently hid her sensitive bud.\n\nShe said I always smelled like lavender and tasted like a tangy plum. I had scrunched my nose up the first time she told me that, but she had insisted she loved it. As long as she was happy...\n\nI massaged her thighs as I licked all over her pussy, not dipping between her outer lips yet. She had taught me how to draw out the sensation, arouse her more by delaying the inevitable...the predictable. I was as anxious to get to the juiciest bits as she probably was. Still, I forced myself to linger a little longer before delving into the sweetest part of her.\n\nI waited until she whimpered and wiggled her hips before I moved my fingers from her thighs to between them, gently parting the skin that brushed my nose. I heard her sigh and flicked just the tip of my tongue at her clit. Her whole body jumped as she cried out.\n\n\"Damn, Kat.\" She took a deep breath, and I felt her muscles clench under and around my head. \"Baby, you are getting so good at this.\"\n\n\"Mmm, hmm,\" I hummed against her skin, smiling when she jerked again. \"Taught by the expert.\"\n\nI flicked my tongue out once more and then slowly pressed it deeper before dragging it downward.\n\n\"That feels so good.\"\n\n\"It should, honey.\" I giggled and then moaned as I tasted a bit of her own honey on my tongue when I pulled back to catch my breath. I repeated the process once more, gathering more of her essence on the tip of my tongue and then rubbing it into her clit this time instead of swallowing it.\n\nFor several minutes, I just massaged her pussy with my tongue, holding her swollen lips wide open, breathing my hot breath on her so she writhed beneath me. When I felt she'd had enough torture, I slid my tongue down to her entrance and circled it until she rotated her hips in the same motion. Then I probed inside with just the tip. My nose rubbed against her clit, and her scent inundated my senses.\n\nIt wasn't long before her whimpers turned to moans. I licked all around between her lips. Sucked her clit into my mouth, gently held it with my teeth. And then I flicked my tongue at that hidden bud until she screamed my name.\n\nI was sweaty and my mouth was covered in her cream as I sat up and let her legs relax. Here eyes were closed, her head tilted to the side. Her hands cupped her heaving breasts.\n\nI licked my lips, watching her come down from her high. Loving the soft blush color that decorated her cheeks. The dampness of her hair as it stuck to her forehead and temples, the rest of it messy around her face on the pillow. Her puffy, parted lips that let her breath escape in quick gasps and moans.\n\nI followed the curve of her chin and traced the lines of her jaw to her neck with an invisible pen that only my eyes could see. Across her shoulders, down her arms into the crooks of her elbows. Up to her hands that had relaxed around the full globes with the rosy peaks. Along the slender fingers that brought me so much pleasure and comfort and wiped away so many of my tears. Over her flat stomach layered with a thin sheen of sweat to her belly button that was centered perfectly between her rounded hips on her narrow waist. She was very much a woman. And a satisfied one at that.\n\nAs I lay watching Jenna\u2014my fianc\u00e9e, my lover, my friend\u2014I imagined her in a variety of outfits. The blue-gray pantsuit she was wearing that awful night when she'd rescued me from the bathroom stall at Maggie's. The dark slacks and lavender blouse she'd worn on our plane trip to Europe. The blue T-shirt and white shorts on the train back to Florence\u2014the latter of which I'd discreetly removed under a blanket in order to pleasure her. The black corset with matching G-string and garter belt she'd bought in Paris before introducing me to her other purchase, a strap-on dildo. The silvery-gray dress that was the twin to my red one she'd worn for our six-month anniversary. The black dress she'd worn on Christmas.\n\nI'd seen many pictures and videos of lesbians and had been around several of the ladies at the club in the months since getting together with Jenna. For many of the couples, there was a butch-looking partner. A lady who tended to dress in pants and manly-shirts and wear her hair short while her partner was more feminine and wore skirts and dresses and had a longer hair style.\n\nI had asked Jenna once about that. She'd just shrugged and said that was just how some of them were. Some women didn't want to embrace their feminine sides...they preferred not to be all girly. And their partners were cool with that. Some even favored it that way. Made them feel more like a girl-guy couple. But there were lots of lesbian couples who both were very feminine, and it worked for them as well. It was just like in a guy-girl relationship where some women chose to wear jeans and flat shoes when they went out and not skirts and blouses or fancy dresses and heels. It didn't make what they wore wrong, just what they were more comfortable in those clothes. It was all a matter of preference.\n\nJenna was very much a lady, and she wore her hair long. But she did tend to wear pants and darker, monotone colors. I hadn't really thought about it before. Yet, she would wear a dress, and she seemed to enjoy getting dolled-up on occasion.\n\nMe? I was a girl all the way. Put me in a skirt any day. Especially one that let Jenna tease me underneath it at opportune situations. We made a good pair, the two of us. We had our own styles, and yet we complemented each other very well. I wouldn't have had it any other way.",
        "\"Mmm, Kat. That was lovely,\" Jenna purred and gave me a lazy smile, drawing me back to the present.\n\nI held up my hand and wiggled my fingers, grinning back at her. \"Ready for round two?\"\n\n###\n\n\"Kat, it's illegal!\"\n\nI had never seen Jenna so upset. Well, maybe the night that I had punched Danny in the face and broke my hand, but this was completely different. And she had every right to be mad. Problem was, I wasn't all that upset, and the situation concerned me.\n\nMaybe I had just expected it to happen, so it wasn't all that big of a surprise when it finally had.\n\n\"Why are you so calm about this? We could sue them!\"\n\nI exhaled loudly and plopped down on the couch, pulling my knees up to my chest.\n\n\"They can't fire you for being a fucking lesbian, Kat! Hell, they made a fucking movie out of it. Haven't you seen 'Philadelphia' with Tom Hanks? Granted his law firm fired him because he had AIDS, but Denzel Washington made it clear that if Tom had contracted the disease by some other means, like a blood transfusion, they would have been more lenient than to find out he was gay and had gotten it from anonymous sex.\"\n\nI sighed again. \"That's not the reason they told me I was let go. And yes, I've seen the movie.\"\n\nPart of me had wanted to lie to her. To make up some reason like they were cutting other people's jobs as well. But I knew I needed to be honest with her. Now instead of later when she found out from someone else. She was like that mother who knew everyone, so it was better to be upfront than suffer the consequences when the truth eventually came out.\n\nFinally, she stopped pacing and sat down, taking my hands off my knees so I had to turn towards her or let my legs fall off the couch and sit cockeyed. I acquiesced and faced her.\n\n\"What happened, Kat?\"\n\nI shrugged. \"I don't really know. One of the girls noticed my diamond. She told me congratulations. Another girl overheard and said the same thing. And then another and another. It's been a month. You'd think they would have noticed by now.\"\n\n\"That sounds innocent enough.\"\n\n\"They asked for details, but I said we hadn't set a date yet.\"\n\n\"When you say 'we,' did they realize you meant you and I?\"\n\nI shook my head. \"No, I didn't elaborate. I guess they just assumed I was talking about a guy. I'm not really open around them, so it wasn't any big news that I hadn't shared I was dating and engaged again. They didn't ask, I didn't tell.\"\n\n\"So what happened next?\"\n\n\"That was this morning. Right before lunch, Mr. Andrews stopped by my desk. He said he hadn't realized I was seeing Danny again, but he was glad we'd made amends and wished us luck. I had to correct him. I didn't want any rumors spreading. So I told Mr. Andrews the truth. That I wasn't marrying Danny.\"\n\nJenna gripped my hands tighter. \"And?\"\n\n\"I can't remember all that I said, but it included your name and that I was very happy. I also said I wouldn't be taking another leave of absence for a honeymoon, if he was concerned about that.\"\n\n\"I'm sure that shocked him.\"\n\n\"His face went kind of pale. He said 'I see,' and told me to enjoy my lunch.\" I looked down my lap and then across to where Jenna held my hands. Her thumb rubbed absently over my ring. \"When I got back from lunch, Mr. Andrews called me into his office. He said he had been wanting to talk to me about my annual review from last year, but things had been busy with the tax season upon us.\"\n\n\"So the basic cover-up...you weren't meeting their expectations so you were let go, when he really fired you for being a fucking lesbian.\"\n\nI cringed at her language. She always got that way when she was upset. I did see her point. But there was also some truth to what Mr. Andrews had said. \"Honestly, I see where he's coming from. I got dumped by my fianc\u00e9 and then went on an extended fake honeymoon. I wasn't there as much as the rest of the personal bankers, so I wasn't able to make my quotas in the fourth quarter. They have rules, and if you don't meet quota, there is a risk you may get let go.\"\n\n\"Honey, I know you're trying to be the nice girl you are, trying not to believe people can have a mean streak even if it's blatantly waved in your face. But I'm sure that other personal bankers have gotten married or had kids or even gotten sick and had to take an extended leave. And they weren't fired because of it.\"\n\nI didn't want to cry, but I couldn't stop the tears from forming in my eyes and trickling down my cheek.\n\n\"Shh, Kat. It's okay.\" Jenna pulled me into her arms. \"I didn't mean to upset you.\"\n\n\"I'm not suing,\" I sobbed against her chest, gripping at her suit jacket. She hadn't even been able to change after she'd gotten home from work herself. She'd found me staring blankly outside, a cardboard box of my personal possessions from work on the storage bench in the bay window's alcove. \"That's what everyone does these days when things don't go as they planned. It's stupid and meaningless and greedy most of the time. A waste of taxpayers' dollars so a wronged-person can cash in. Yes, I know I'm in the right here, and I would probably win, but for what? To make a big deal out of the fact that I'm a lesbian? Maybe it's what others would do, but it's not who I am. And I don't want them to be forced to take me back. I don't want to work at a place where I'm not wanted because I like to fuck a chick rather than a dick.\"\n\nJenna's laugh started low and grew louder until her whole chest rumbled and made me shake as well. \"Oh, Kat.\"\n\nI sniffled and took a deep breath. \"What?\"\n\n\"Nothing, sweetie. Absolutely nothing.\" She hugged me tight and laughed again.\n\n\"No. What?\" I tried to look up at her, but she had rested her chin on top of my head.\n\n\"I've just never heard it worded that way. You, my dear, are an enigma. Don't ever change. I love you just the way you are.\" She kissed my hair and relaxed against the arm of the couch. \"So we're not suing for wrongful termination.\"\n\n\"Nope. I'll figure something out.\"\n\nJenna just laughed again. \"We will figure it out together. I do have an idea, but I'll need to make some calls. Do you think you'll be okay staying home alone the rest of the week?\"\n\n\"Do I have a choice?\" I sighed.\n\n\"No, not really. Just don't do anything drastic.\"\n\n\"Like what? Pierce another part of my body?\"\n\nJenna went stiff beneath me.\n\n\"Uh, I was only joking.\"\n\n\"I am going to say this once and only once. I would not be opposed to you piercing another part of your body with the exception of your nose, lip, or eyebrow. I will not be married to someone who looks like they could be in a rock-and-roll band from the nineties.\"\n\nIt was my turn to laugh. \"So you're thinking what? Tongue or nipples?\"\n\nShe hugged my tight, and I felt her shuddering exhale. \"You are going to kill me, Kat Jenkins. I swear.\"\n\n###\n\n\"What do you think of moving?\"\n\nI looked up from the Chinese takeout Jenna had brought home on Thursday night. \"To where?\"\n\n\"Northampton, Massachusetts.\"\n\n\"Come again?\" A lump of food stuck in my throat, and I had to take a sip of soda to help wash it down.\n\n\"It's the largest city for lesbians in the United States, per capita. Same-sex marriage is legal there. It's closer to the ocean making it a shorter trip if we want to go back to Europe. And it's also where my younger sister, Meredith, lives.\"\n\nWe had discussed her only sibling before. I knew she was a lesbian, lived somewhere on the East Coast, and they tried to see each other once a year, but that was about it. \"What about your job?\"\n\n\"We actually have an office in Amherst near the Five Colleges. Tim is more than happy to accommodate me to work from there. And I'd be happy to not have to face his ugly mug on a daily basis. Granted, I'd still need to travel when he needed me to, but it's less than ten miles if we live in Northampton.\"\n\nI set my fork down and crossed my arms on the table. \"You've got this all figured out, don't you?\"\n\n\"I told you to give me some time and make some phone calls.\"\n\n\"You don't have to do this. I can find another job here.\"\n\n\"Sweetie, there's nothing keeping me in Chicago. As long as I'm with you, I can live anywhere.\"\n\n\"Do you want to move to Northampton, Jenna?\"\n\n\"Honestly? I think it would be a great place for us to begin our life together. A place to start over. To get away from,\" she waved her hand in the air, \"things here.\"\n\n\"You mean like Danny and Lauren? And homophobic bosses?\"\n\n\"Well, yes. We have an opportunity, and I think we should take it. But it has to be something we agree on. Don't do this just because I brought it up and went through all of the trouble of\u2014\"\n\nI pointed my fork at her now. \"Don't say something you'll regret, honey.\"\n\nShe held up her hands in defeat. Then she smiled at me. \"Think about it. You don't have to give me your answer yet. But I will need to know by next week. Meredith put a bid on a duplex for us, so if we don't go, I need to let her know. She's going to send me some pictures and the specs. I'm sure you have lots of questions. And I'll try to answer them as best as I can.\"\n\n\"No, I only really have one.\"\n\n\"Really?\" She took our empty containers to the garbage and turned back to me, wiping her hands on a towel. \"What is that?\"\n\n\"Well, two, I guess.\" I pushed my chair back from the small table we'd squeezed into the kitchen area and sauntered over to her. I wrapped my arms around her neck and leaned in until our lips were barely touching. \"When are we leaving? And do you have a preference for when I get to marry you?\"\n\n###\n\nFor the second time in the past year, I boxed up all of my belongings and loaded them into a moving van.\n\nIt was a little bittersweet, saying goodbye to Chicago. And I was finally getting upset about the loss of my job. But I took out my aggression in my packing. It gave me something to do all day. Although there were times that Jenna would come home to find me crying because something had triggered a memory and I'd gotten distracted to the point that I'd curled up on the couch or the bed or even just the floor.\n\nOn the big day, we first took a trip down to the storage unit where the majority of my furniture was, and then we stuffed the rest of my things\u2014as well as all of Jenna's\u2014into a space that was about the size of a small shipping container. I couldn't believe how much stuff we had accumulated between the two of us. I prayed our new home was bigger than Jenna's current apartment.\n\nWe agreed to sell my car as it was over ten years old. We were driving hers out east, and I would look for a new car when we got there. I thought the long road trip would give us practice with patience. I mean, we had gone to Europe together, but this was different. We would be stuck in the same car for hours on end. Granted it wasn't as long as a lifetime together, but it was a good test.\n\nAs Jenna pulled away from the curb and headed toward the Interstate, she asked me, \"Kat, are you sure about all of this? You're not reconsidering? The move? The marriage?\"\n\nSeriously? Did she really think I would have packed up my life if I wasn't going to go through with this? I gave her a sideways glance and grinned.\n\n\"Ask me again when we get to Massachusetts.\"\n\n###\n\nWe survived the first leg of the trip okay. We stopped overnight in Ohio and had a hot shower together before we crawled into bed and fell asleep in each others arms, too tired to do anything but make out for a couple of minutes.\n\nIn the morning as we got ready, I wondered what our new bathroom would be like. Meredith had only sent us pictures of the main living areas, but she had said there were two bathrooms. One had just a toilet and sink\u2014a powder room, she'd called it\u2014but the master bath had both a shower and a soaking tub. From what I could tell, everything looked and sounded modern, but I knew from experience that realtors sometimes embellished certain features to sell a place. Seeing would be believing.\n\nAfter grabbing our complimentary breakfast down in the lobby, we gassed up the car and headed back out on the road. The guys with the moving company had decided to keep driving last night for a few more hours, so they should be arriving before us. Meredith had taken the day off of work to get everything ready for our arrival and greet us. I wasn't sure what time we'd be rolling into town, but it was comforting to know we wouldn't be completely alone.\n\nJenna had entered our destination into the GPS, so I read magazines or talked to her as she drove. But as we entered our new state, I started getting a little giddy. And the way she kept grinning at me, I knew Jenna was, too.\n\n\"I'm glad we're doing this.\" I patted her on the knee and she jumped.\n\n\"I'm just a little nervous. And anxious.\" She reached over to squeeze my hand, and the car swerved a little. A vehicle honked then sped around us. Jenna cringed. \"Oops!\"\n\n\"So am I. Just don't run us off the road with your excitement. Or get a ticket,\" I added, noticing the needle on the speedometer as it hovered at least ten miles over the limit. I closed my latest magazine and reached for my bottle of water. \"Just think. Tonight, we'll be sleeping in our new house. Our first place that we got together. The beginning of our new life.\"\n\nShe slowed down to turn off at our exit and glanced at me. \"Do you remember how we christened Scuderia Apartment in Tuscany?\"\n\nI felt the sparks ignite deep in my belly remembering how she'd laid me back on the kitchen table and buried her face between my legs. I nodded and cleared my throat.\n\n\"I think we should do the same with our new place.\"\n\nI took another gulp of water. \"You know, I'm sure if the police pulled us over, we could convince them we were ignorant of the speed limit. Us being from Chicago and all.\"\n\nJenna grinned at me, and the card sped up as we merged back into traffic.\n\n###\n\nOur new place was beautiful. It was a gray, two-story duplex on a quiet street lined with trees. Jenna thought the best part was two-car garage. I was just thrilled to have a place all of our own without people above and below us. Not that I hadn't liked living in the city, but this seemed more up my alley. It was very idyllic.\n\nA privacy fence separated our house from the one next door and enclosed our small but sufficient backyard. We had a wooden deck where we planned to put a grill. A tiny balcony upstairs off the master bedroom would give us a wonderful view of the stars at night.\n\nThe moving van was sitting out front when we arrived. The men were already unloading furniture and boxes onto the front lawn. A red-haired woman in jeans and a white parka was directing traffic with a clipboard. Meredith. She had the same narrow face and perfect, pouty lips as Jenna, but she was a little shorter. I knew she was in her late twenties, but she looked like she was just a kid. In any regards, she had gotten her older sister's good looks. I half-wondered if she'd dyed her hair, or if Jenna had a different parent.\n\nI laughed. \"Looks like we're late to the party.\"\n\nJenna gave me a quick kiss then jumped out of the car and ran over to the woman, hugging her tight.\n\nI pulled on my coat, grabbed another one from the backseat, and joined the two women. I tossed the second coat at Jenna. \"Put this on or you'll get pneumonia.\"\n\nJenna obliged and then took my hand. \"Mer, this is Kat.\"\n\n\"It's good to finally meet you,\" I said as I reached out my other hand.\n\n\"None of that bullshit. We're going to be sisters.\" Meredith gave me a huge hug and a kiss on the cheek. Then she stepped back and smiled. \"Congratulations to both of you. We can make chit-chat later. It's freezing, and the guys could use some help now that you're here.\"\n\nI rubbed my hands together. \"I could use some coffee. We should have packed the Keurig in our car.\"\n\n\"Not to worry,\" Meredith said. She pulled out her phone, held it up to her ear, and said, \"They're here, sweetheart. Okay, see you in a few.\"\n\nI raised my eyebrows and glanced at Jenna. Then I laughed. Jenna had her fists on her hips and a pout on her face. It was so darn cute.\n\nMeredith pocketed her phone. \"Reinforcements are on the way with refreshments.\"\n\nJenna cleared her throat. \"Sweetheart?\"\n\nMeredith's cheeks were already red from the winter air, but they darkened even more. \"Uh...yeah. Did I forget to tell you about Joanie?\"\n\nJenna had her arms crossed now. \"Joanie, as in your intern?\"\n\n\"Um, maybe we should continue this inside, girls?\" I said, starting to jump up and down to keep warm.\n\n\"Good idea, Kat.\" Meredith looped her arm through mine and turned toward the house. \"I'm so glad you decided to move here. I know we're going to be good friends. It'll take a little bit, but you'll adjust. I can take you downtown tomorrow and show you all around. Oh, and I have the paperwork for Smith College. The job is yours, it's just a formality.\"\n\n\"Sounds good. Thanks for all of your help. I don't think we could have done this without you, Meredith.\"\n\n\"Don't mind me. I'm just your sister,\" Jenna huffed behind us, but I heard her footfalls crunching on the lawn as she followed. \"And you are going to answer my question, Mer.\"\n\nWe ditched our coats in a closet and gathered around the kitchen island\u2014a real island with a marble top and a butcher-block section, not the little lunch-counter/jut-out like we'd had in our apartment. Our conversation got postponed as the movers had trouble getting Jenna's couch through the front door. I suggested going through the garage and taking off the door that led into the house that way as it wasn't as heavy as the front door. Weren't these professionals?\n\nThe men stared at each other for a moment, shrugged, and then backed up again.\n\nI went over to close the door when a girl with a black fedora, short black hair, a black parka, khakis, and black Doc Martens walked up the sidewalk with two bags in one hand and a drink carrier with four paper cups in the other.\n\n\"If you're Joanie and that's coffee, I love you.\" I grinned and took one of the bags as it started to slip from her fingers. \"Come on in, the show's just starting. Apparently Meredith has a lot of explaining to do to her sister regarding you. I can't wait to see Jenna's reaction.\"\n\n\"Thanks. You must be Kat. Glad to finally meet you.\" Joanie nodded and stepped past me. She toed off her shoes as I shut the door, then held up the items in her hands. \"Where do you want these?\"\n\n\"The kitchen is fine. Just throw your coat in the closet over there.\"\n\n\"I did not jeopardize my job, Jenna. I just told you. We waited to do anything until after her internship was over. Geesh, will you just lay off me?\" Meredith's frown turned into a wide smile as we joined them in the kitchen at the back of the house. \"Joanie! Please explain to my sister that you were not having an affair with your boss.\"\n\nJoanie glanced at me and laughed. \"You're right. I'm just in time.\"\n\n\"Joanie, it's good to meet you,\" Jenna said, coming around the island to give her a hug. \"I have nothing against you two dating, I'm only trying to protect my little sister. That's all.\"\n\n\"We did everything by the book, Jenna. Nothing to worry about.\" Joanie patted her on the back and removed one of the cups from the carrier, handing it to me. \"We waited six months after my internship before we started dating, and I got a job at a different office.\"\n\n\"Out here, sis, things are different. You'll see. It's easier for girls like us. Not so uptight and worrisome that someone will find out we like chicks and we'll lose our jobs. Not with a good portion of the city being lesbians.\" Meredith gave me a soft smile. \"I'm sorry you had to go through that. But I agree with you. I think you did the best thing by not pursuing legal action. And don't worry, they won't hold your sexual preference or your reason for dismissal against you at Smith.\"\n\n\"Thanks, Meredith. And thank you, Joanie.\" I took a sip of the hot coffee and sighed, relaxing against the counter. \"I think I'm going to like it here.\"",
        "###\n\n\"That was crazy. Just absolutely, fucking crazy,\" Jenna sighed as the front door shut several hours later.\n\n\"Which part? The moving in or finding out your sister has been seriously dating for three months?\" I pulled my T-shirt over my head and tossed it into our hamper. \"I rather enjoyed it all.\"\n\n\"Both.\" Jenna started undressing herself. \"So where do you want it?\"\n\n\"Want what?\"\n\n\"Your christening.\" She was down to her panties and bra and stood with her hands on her hips, looking around the bedroom. Our bedroom. \"On the dining room table? The kitchen counter? I think it should be someplace other than the bed.\"\n\nI paused with my jeans at my knees, my heart racing suddenly. A sly smile turned up the corners of my mouth. \"Out on the deck. Me leaning over the patio table. My breasts and nipples smashed against the cold glass. You taking me with the strap-on as the winter wind bites our skin.\"\n\nJenna slowly turned back to me and lowered her hands. \"What if the neighbors are on their balcony?\"\n\nI stood and kicked my jeans away. \"Then they're in for an eyeful.\"\n\n\"Oh, Kat!\" Jenna licked her lips and growled. \"Are they ever.\"\n\n###\n\nIt was too easy. Just too easy.\n\nAdapting to a new town, a new job, new friends. It should have been a hell of a lot harder. We should have struggled to fit in. Yet we were accepted with open arms. Almost like two daughters finally come home.\n\nMeredith and Joanie introduced us to their friends, their stomping grounds. They showed us where the best food was and where to avoid. What times it was best to get groceries. Where the local gym was if we wanted to work out.\n\nAfter we had settled into our new routines, Meredith and Joanie took us to an erotic toy store that catered to BDSM lifestyles. I wondered how much Jenna had shared with her sister, or if Meredith was kinky in that way, too. Did her and Joanie do the same things Jenna and I did behind closed doors? Well, most of the times the doors were closed.\n\nJenna let me pick out one item and handed me her credit card. I had a hard time choosing, especially with the large selection we already in our toy box. We had a strap-on with multiple attachments, nipple clamps, vibrators of various sizes and shapes, a variety of cuffs and chains, and blackout-blindfolds. I wasn't sure what else there was, or what we would need. Jenna was better at this part.\n\nI thought about butt plugs or anal beads, and then I considered maybe some lingerie from their boutique. I was leaning more toward the lingerie when I saw it. It was unique, and I felt my pelvic muscles clench at the thought of the item. Problem was, it was a little pricey, and I couldn't get just one. Both of us needed one. I prayed Jenna wouldn't flip out when she got her credit card bill.\n\nI waited until the girls were distracted by drooling over some videos, and then I snatched two of the items off the rack, took them to the counter, and had the guy ring me up. He even offered to gift wrap one of them when I explained why I was buying two.\n\nWhile we ate lunch, the girls interrogated me on my purchase, but I kept my mouth shut on that topic.\n\n\"Well, you're not the only one with a surprise.\" Joanie grinned and handed me a small, white envelope. \"Go ahead. Open it. I know you said you didn't want a bridal shower. So just consider it our engagement gift to the both of you.\"\n\nThere was nothing written on the outside. I flipped it over, slid my finger under the seal, and then pulled out a white piece of paper with my name on it. I had to read it twice before I realized it was a gift certificate for a tattoo parlor.\n\n\"It's very nice, but I guess I'm a little confused. Are we supposed to get matching tattoos or something?\"\n\n\"No, silly. It's for those nipple rings to match your clitoral hood piercing,\" Meredith whispered to me with a wink just as the waiter approached with our check. \"If you get them now, you'll be healed by your wedding night.\"\n\nI choked on my water and gaped at Jenna. Her own jaw went slack as Joanie whispered in her ear. Then Jenna's eyes met mine, and she grinned really wide. Oh boy. I had to go through with this now.\n\nThat night, Jenna grilled hamburgers on the grill for just the two of us. I made us a salad and poured us glasses of wine. When she went outside to check on the meat, I ran upstairs into the bedroom and laid the wrapped purchase on her pillow.\n\nI was jittery all through our meal. I felt like it was Christmas Eve again and I was hiding the fact that I was going to do a stripper pole routine to surprise Jenna. Then again, tonight's surprise was a bit more...intimate.\n\nIt didn't help that Jenna wanted to watch a movie after dinner. Halfway through, I excused myself and went back upstairs to grab her box.\n\nJenna was in the powder room when I went back downstairs. I paced between the couch and TV at least fifteen times before she returned.\n\n\"Is everything okay, Kat?\"\n\n\"Here.\" I held out the wrapped box and bit my lip.\n\n\"What is it?\"\n\n\"My housewarming gift to you.\"\n\n\"You didn't buy it today, did you? You were supposed to\u2014\"\n\n\"Just open it.\"\n\nShe rolled her eyes and slid her fingernail under the tape on one end, prying the wrapping paper away from the box. The ribbon and paper floated to the floor as she stared at the item that was no bigger than her palm.\n\nWhen she didn't speak for several minutes, I cleared my throat. \"It's um, a clitoral G-string.\"\n\n\"I can read, Kat.\"\n\n\"The larger ball slides up into your vagina. The elastic straps hold it on like a regular G-string so that the smaller ball presses against your clitoris with the connecting curved part resting\u2014\"\n\n\"Yes, Kat, I figured that out.\"\n\n\"Don't you like it?\"\n\n\"Oh, sweetie, I do.\" She blinked, and I saw a tear roll down her cheek.\n\n\"So what's wrong? Why are you crying?\"\n\n\"Because I love you. You are so selfless. I give you my card to get yourself a new toy, and you buy me something.\"\n\nI stared at the floor, at her bare feet. \"I got one for myself, too.\"\n\n\"Well, that's good. I wouldn't want you to miss out.\"\n\n\"Are you sure you like it?\"\n\nShe put a finger over my lips to silence me. \"I think it's perfect for us.\"\n\nI clutched her hand when she took mine and followed her to the stairs. She paused only to shut off the lights on the way. My heart rate picked up as we ascended, and I could feel dampness between my legs. When we reached the bedroom, she stopped me beside the bed.\n\n\"Where is yours?\"\n\nI took a shaky breath and pulled my box out of her nightstand drawer. \"I hope you liked red. I got a blue one for myself. But we can trade if you\u2014\"\n\n\"Shh. Red is just fine. I don't deserve you, Kat Jenkins.\"\n\nWith those words, she took my box out of my hand, opened it, and pulled out the contents.\n\nI licked my lips.\n\n\"Take off your clothes, Kat. I want to see it on you first.\"\n\nI obeyed, shivering as I stripped.\n\nWhen I was naked before her, she ran the backs of her fingers down my cheek. \"God, you are so beautiful. Here.\"\n\nMy hands shook when I held the thin, elastic bands wide open and stepped into the space between. My nipples hardened when I slid the hard \"finger\" into place. My knees wobbled for a moment when it rubbed against my piercing. With the bands adjusted on my hips and between my ass cheeks, I struck a pose to display the insertable jewelry.\n\n\"How, um, does it feel?\" She licked her lips as her eyes slowly roamed up and down my body.\n\nMy voice came out a little rough when I was able to speak. \"Oh, just wonderful.\"\n\n\"My turn.\" Jenna stripped and mirrored my actions until she stood across from me.\n\nAll I could see was the golden scarab design that covered the finger and attached to the elastic bands as it rested on the outside of her pussy. It was so fucking sexy looking.\n\n\"Um, how does it feel to you?\"\n\n\"Absolutely divine.\"\n\n\"It says we can wear these all the time. With or without panties. It might take some getting used to feeling it all the time.\"\n\n\"Mmm hmm.\" She reached out and caressed my left breast ever so lightly, her thumb grazing over my nipple, making me bite my lip to stop a rising whimper. \"I think you should use Meredith's and Joanie's gift tomorrow. Don't you?\"\n\nI let the whimper escape and closed my eyes, my knees threatening to give out. \"Uh huh.\"\n\nShe tipped my chin up. \"Look at me, Kat. We'll go together. Don't worry. Okay?\"\n\nI nodded and opened my eyes. \"Yeah.\"\n\n\"I think you've had a long day. You need to rest. Lay down on your back.\"\n\nI crawled onto the cool sheets, my legs together, my hands on my belly.\n\n\"Now, just relax, sweetie. I'll take good care of you.\"\n\nJenna knelt on the bed beside me. She leaned down and licked my lips before she gave me a kiss. As she sat back, she tucked her finger underneath the bands on my hips. Her knuckles pressed into my skin as she pulled the G-string out of me and down my legs.\n\n\"Close your eyes, Kitty Kat, and just feel.\"\n\nI cried out as her mouth latched onto one of my nipples and her fingers rubbed my piercing into my clit. I shuddered through a small orgasm. I couldn't imagine how sensitive I would be after I'd had my appointment tomorrow. How long would I have to wait for her to worship my breasts again? But Jenna's constant stroking down below made me forget even that as I fell into a deep well of pleasure.\n\n###\n\n\"I don't care what you say.\" I held the last wedding invitation in the air out of Jenna's reach. \"If it weren't for him, I wouldn't have gotten my clitoral hood pierced. He's been an amazingly good friend since I met you. I'm not inviting his bitchy sister, but he is always welcome.\"\n\n\"Fine, you can invite Brad.\" Jenna handed me the envelope and then gave me a peck on the cheek.\n\n\"Wine's gone,\" Meredith said from the kitchen doorway. She tipped a green bottle back into her mouth, her waist-length red hair cascading down her back over her white tank top and green cargo shorts.\n\n\"We're out of invitations, too, so we're done anyway.\" Jenna pushed back from her seat at our new table in our new dining room at our new home. Well, it was six months old now, but it was still very new to both of us.\n\n\"Do you want to me to drop them off at the Post Office tomorrow?\" Joanie said from her seat next to me. \"I have some other errands to run on that side of town anyway.\"\n\n\"That would be great.\" I placed a stamp on the corner of the envelope before I added it to the stack in a box at the center of the table.\n\nI turned toward the raven-haired girl who wore her hair buzzed on the sides. It was a rare feat to see her without her signature fedora. I think her hair looked cute. Very punk. We had become good friends since we had moved here. She'd told me that she had struggled with her own decision to become a lesbian, too. Hers was more of a desire to be one but she'd resisted due to the fear of society and her family shunning her. That is, until she'd gone to Amherst for college and met other girls like her...and Jenna's sister. We shared an amazing bond, the four of us.\n\n\"Thanks for your help tonight, Joanie. Meredith. For everything.\" I felt Jenna's hands on my shoulders as she stood behind my chair. \"We both appreciate it.\"\n\nJoanie squeezed my hand. \"Thanks for letting us be involved.\"\n\n\"I wouldn't have picked anyone else.\" I smiled and felt my heart skip a beat. I was one step closer to marriage. And this time, no one was cancelling on me.\n\n\"Guess we'll call it a night, then.\" Meredith kissed her sister on the cheek, gave me a hug, and then put a lid on the box of sealed invitations. \"Oh, as one of my duties as wedding planner, I'm supposed to tell you that final fittings are Tuesday at five thirty.\"\n\n\"We will be there.\" Jenna walked the other ladies to the door, locked the deadbolt behind them, and then turned back to me. \"My hands are a little sore from stuffing envelopes. And I think I drank too much wine. But that was fun.\"\n\n\"Yes, it was.\" I smiled up at her and then shook my head. \"I can't believe we're getting married in a month. Has it really been a year since you walked back into my life?\"\n\n\"You walked into mine, sweetie.\" Jenna took my hand and led me to the bedroom. \"It seems so long ago. Yet, these past six months have gone by so quickly. Are you glad we came here?\"\n\nWe'd reached the bed, which glowed from the lamps on the nightstands. She reached for the clip on top of my head, releasing my hair so it fell around my shoulders.\n\n\"Very much so. I love my new job at Smith College in the administrations office. Your sister has been such a blessing. It's so much more enjoyable helping students than trying to sell services at the bank.\" I shuddered as she pulled my shirt over my head and the cool, spring breeze from the open window floated across my bare skin. \"I love all of the new friends we've met. How I can be so open around everyone and not feel like they're judging me.\"\n\n\"Anything else?\" Jenna unbuttoned my jeans, tugged them down my legs, and then helped me step out of them.\n\n\"I love our new home and our new city,\" I whispered as she stood up and faced me.\n\n\"I love that insertable jewelry you bought.\" She ran her fingers across the outer casing, gently pressing it against my pussy before she flipped her hand over and stroked the juncture of my leg and pelvis with her nails.\n\nI sucked in my breath, standing completely still as she continued stroking my sensitive skin. When she finally stopped, I said, \"Did I mention that I love that I'm marrying you?\"\n\n\"Yeah, I like that one the best, too.\" She gripped my hip and tugged me closer, kissing me until we were both moaning. She finally stepped away, turned me, and gently pressed against my shoulders so that I fell back on the bed.\n\nI swung my legs up on the mattress and patted the sheet next to me.\n\nShe sat and rested her hand on my thigh. \"I got you a present today, Kat.\"\n\nI smiled up at her. \"You shouldn't have, but thank you.\"\n\nShe retrieved a small, square black box from beside her clock. She set in on my chest just above my -breasts. It rose and fell with my now-labored breathing.\n\nI cringed a little at the dull ache in my nipples as they strained against my bra and the silver rings and captured beads that had been inserted through them. It had been several weeks, and they were healing nicely, but the lady at the tattoo parlor said to allow a full two months before we played with them. So I kept my bra on most of the time. I couldn't wait until I could have Jenna's mouth on them again.\n\nI pulled on the silver ribbon that was around the box and then removed the lid. I stared at the contents for a moment before I lifted two thin, silver chains. One was about a foot-and-a-half long, the other one less than twelve inches. Both had clips on either end, but the shorter one had a tiny metal ring in the middle of it.\n\n\"We'll have to wait to use them for awhile, but I couldn't pass them up when I saw them.\" As she put her hand behind my neck and pulled me upright, the box slid off me, tumbling from the bed. She nipped at my lower lip with a low growl. \"The smaller one hooks onto your nipple rings, and the bigger one hooks to that chain and to your clitoral ring. It's surprising what you can learn from your sibling. Meredith is more kinky that I thought.\"\n\nI whimpered. One day, she was going to give me a heart attack. Boys with toys? They didn't have an edge on Jenna Sallow and her compatriots.\n\n\"I'm thinking...\" Jenna pulled back but didn't let me go. The cool air competed with her hot breath on my face. \"If you're a good girl, when you're done with me, you can have the strap-on. But no orgasms until then, okay, sweetie?\"\n\nI swallowed heavily. \"Sounds great.\"\n\n###\n\n\"Congratulations, Kat,\" Brad whispered in my ear as he hugged me. He stepped back and smiled at the glowing woman beside me. \"You, too, Jenna. You make a lovely couple.\"\n\n\"Thanks, Brad.\" Jenna accepted his kiss on the cheek and shook his girlfriend's hand. \"I'm glad you could make it.\"\n\nMost everyone else who came through the receiving line was unfamiliar to me. Sure there were our new friends and some coworkers from the college, but most of them were Jenna's family and friends from back in Chicago. I had no siblings, both of my parents were dead, and I just didn't know anyone besides Brad that would be comfortable enough at a lesbian wedding to invite them to come this far. But I had enjoyed the short ceremony all the same.\n\nWhen everyone had given us their blessing, Jenna and I took our seats at the head table at the front of the reception hall. Meredith sat on Jenna's left, and Joanie sat on my right. All four of us laid our Calla Lilies with dusty-green ribbons tied around the centers on the table in front of our places and lifted our champagne glasses as our guests helped toast us to a new life together. \n\nWe'd decided just to have the two in our wedding party as witnesses. Meredith had chosen a floor-length gown in the dusty-green color that went well with her hair that she'd pulled back into a French braid. Joanie had refused to wear a dress, so we had found her a linen-pantsuit and vest with a top in the same dusty-green...and a linen fedora with a matching green ribbon.\n\nJenna and I were the first to get our food, and while we filled our plates, I could not stop looking at my wife. She looked so beautiful with her blonde hair pulled back in a French twist, highlighting the diamond hoop earrings and diamond-accented pendant in our green shade that I'd given her as a wedding present. Her simple, ivory dress had a low neckline, looked a lot like a sexy nightgown\u2014which made my mind wander quite frequently throughout the ceremony\u2014and was finished off with a dusty-green ribbon around the waist.\n\nI had elected for an actual wedding gown in white. Something completely different from the ivory mermaid-style I had chosen for my previously-scheduled wedding. This one was strapless with a sweetheart neckline and ruching from the bust down to the waist where the skirt fell in full, gathered folds. The bodice hugged me so well, I was afraid it might burst if I ate anything more than a piece of cake. I'd had the seamstress affix a heart-shaped diamond brooch to the neckline on my dress. Jenna had given me a pair of diamond tear-drop earrings as part of her present to me. They added just enough sparkle around my face that helped draw the eye up to her other gift, a silver-and-diamond tiara that held my diamond-rimmed veil over my long curls.\n\nWe ate. We kissed. We danced. We kissed. We talked to friends. We kissed some more. It was a very enjoyable night. I don't think I would have been as relaxed or had as much fun at my wedding and reception a year ago if it had gone through as planned. And I wouldn't have traded this evening for anything in my life.\n\nI think the best part was when Meredith and Joanie tried to convince Jenna she needed to remove my garter. Jenna crossed her arms and shook her head. She'd said we weren't doing any of the usual wedding traditions like bouquet tosses and dollar-dances...and especially the father/daughter dance as my father had passed away and she hadn't thought it fair that her father was there and mine wasn't for that momentous event. She had even declined letting her father give her away so I wouldn't feel left out. I'd cried when she told me she was making that sacrifice for me.\n\n\"Come on, Jenna.\" Meredith batted her eyes at her older sister. She glanced at the DJ who was patiently waiting for a decision after Jenna had interrupted his announcement for the garter toss. \"Just go along with it.\"\n\n\"Hell, I'd do it for you if I knew you wouldn't kill me afterwards. I want to take a peek at that piercing I've heard so much about.\" Joanie gave us both a big grin and then stepped back with her hands raised when Jenna glared at her. \"Just kidding.\"\n\nI felt heat rush to my cheeks. I had turned quite a few heads upon moving to Northampton. Apparently I was quite the catch. But even Joanie? Who'd a thunk?",
        "I cleared my throat and leaned in to kiss my wife on the lips. \"Come on Jenna, just get it over with.\"\n\n\"Fine. If it will make you all happy.\" Jenna rolled her eyes and gestured to the DJ that he could continue.\n\nI took a seat on the folding chair someone had brought to the center of the dance floor. A pillow sat on the floor beside me. I tried not to moan when Garbage's \"Sleep Together\" blared through the sound system. Jenna hiked up her dress and kneeled on the pillow. She looked me in the eyes and shook her head, but she didn't say a word.\n\nIt took her a little bit to lift the skirt of my dress enough to get underneath. I knew when she'd realized I had on white stockings with a garter belt when she squeezed my calf and I felt her mouth and tongue against my knee. I had my legs together, and I wasn't going to make it easy for her, but damn, she made it hard to keep focused when she touched me like that.\n\nThe song was almost through the second verse by the time she pried my knees apart. I tried to keep my eyes open as I heard the words of the chorus repeating, \"If we sleep together/Will you like me better/If we come together/We'll go down forever,\" and felt Jenna's hot breath against my bared sex. By now she would have realized I wasn't wearing any panties.\n\nI choked out a gasp as I felt the tug on my piercing...where I'd tied a tiny bow with a green ribbon, even though I'd had little hope that I could convince her to do this part of the reception. But now that I had, I was regretting it because she lingered, licking at my clit, running a finger down through my pulsing lips.\n\n\"Got it,\" Jenna said, her breath a little ragged.\n\nI blinked, realizing she'd pulled the garter off my thigh and had come back to the surface. I swallowed and managed to say, \"Took you long enough.\"\n\nShe grinned, showing me the tiny ribbon between her teeth. \"There was a slight delay at the station, but the train got back on track. For now.\"\n\nI moaned and stared deep into her eyes. Her wide, shiny, dark violet eyes. She was as turned on as I was.\n\nI don't remember much of the rest of the reception. Sure, Jenna flung my garter into the waiting crowd of women and a few men, most of them gay friends of ours. Interestingly enough, Brad caught it. He gave me a wink and slid the garter on his left bicep before he gave his girlfriend a kiss. A girl I didn't know caught the throw-away bouquet we'd had made. And then there was more dancing.\n\nThe guests trickled out as the night grew on. I couldn't stop smiling. Or looking at Jenna. And then it was all over. Meredith and Joanie loaded up our gifts in their car. We waved goodbye to everyone, and then Jenna and I piled into the limo that would take us away for the night. In the morning, we were flying off to Tuscany...to the same villa in Grosetto that we had visited last year.\n\n\"That was a very cute trick you pulled on me with the garter,\" Jenna whispered in my ear as I snuggled up to her on the wide seat.\n\n\"You liked?\" I grinned and kissed her lips.\n\n\"Very much so. Except it distracted me the rest of the evening.\"\n\n\"Good. Because you've been distracting me ever since I saw you standing at the alter in that dress. You know, I could swear it looks like lingerie.\"\n\n\"Oh, trust me, sweetie. You haven't seen my lingerie for tonight.\"\n\nI sat back and grinned. \"I don't think we're going to need any lingerie where we're going.\"\n\nJenna just rolled her eyes and then pulled me back into her embrace to kiss me long and deep. We didn't come up for air until the limo stopped at the bed and breakfast.\n\nSomehow, we managed to get untwined from each other long enough to get upstairs to our room. The door was barely closed and locked behind us before I was back in her arms, our tongues tangling and our moans combining in a heated rush. Then I whimpered and tried to pull away.\n\n\"Slow down, Jenna. Please. We have the rest of our lives to be hot and heavy. I want to remember every moment of this night.\" I wiped my fist at my eyes, wishing I didn't get so emotional.\n\n\"Sorry, sweetie.\" Jenna was panting, and she turned away to catch her breath. When she turned back, she held out her hand. \"Come here. Let me get you out of that dress.\"\n\nI had dreamed of my wedding night since I had been a little girl. Every girl does. I had not imagined it to be like this, though. Tender feminine hands undoing the buttons down the back of my dress and holding my hand as I stepped out of the pile of expensive satin on the floor. Violet eyes slowly looking up and down my practically naked body.\n\n\"As much as I love the stockings and garter belt, everything comes off tonight, Kat.\" She reached up and removed my veil and tiara, setting them on the table by the TV. I stepped out of my heels, and she removed my earrings and my mother's diamond bracelet that she'd given to me before she passed away. Ever so slowly, Jenna unhooked the clips on the garter belt and rolled each stocking down my leg until I was completely naked.\n\n\"I just thought you should know, I wouldn't have wanted to share today with anyone but you.\"\n\nShe took my hand and guided it to her shoulder. \"I know, sweetie. And I know that we didn't save ourselves for this night. But that doesn't mean it can't still be special. I want to rediscover you. You're right. We should go slow. No toys. Just what we have naturally. To let go and do whatever we feel, Kat.\"\n\nI nodded and moved up to unclasp her necklace and then her earrings, hearing her soft gasp as she realized I was delaying unveiling her body. I reached behind her and released her hair, moaning as it bounced in soft waves around her face. I lifted her skirt a little, and she stepped out of her shoes. When all that was left was the dress, I pulled on one end of the ribbon, undoing the loose knot in the back. \n\nI stepped back, taking her in one last time as she stood in her wedding dress. With her hair a little messy now, she truly did look like she was wearing a nightgown. She watched me silently, but her chest heaved up and down, giving away her anticipation.\n\nIt only took a little nudge to move the wide straps of her dress off her shoulders. With her arms at her sides, the dress slipped down as if in slow motion, first revealing her naked breasts that were high and full with perky nipples. Then her narrow waist. And finally, her shaved pussy.\n\nI gasped, my eyes flying up to hers.\n\n\"And you thought you were the only one to think of going commando.\"\n\nJenna took my outstretched hand, and I pulled her toward me. Our lips joined in a tender kiss, our arms wrapping around each other, our hands threading into each other's hair.\n\n\"I have to have you, now,\" Jenna gasped, pulling away from me and pushing me down onto the bed.\n\nThe comforter and sheets had thankfully been pulled down already by the housekeeper, so I didn't have to worry about Jenna wasting time doing that herself. But she did pause long enough to turn off the lights. Then she was on the bed, on top of me.\n\n\"I'm going to make the first one quick because we've both been waiting so long, sweetie.\" She kissed me on the lips, her tongue flicking at mine. \"And we'll probably fall asleep because we're both exhausted. But don't be surprised if you wake up in the middle of night having an orgasm.\"\n\n\"Promises, promises,\" I breathed heavily, gently biting her lower lip.\n\n\"But first...\"\n\nI cried out as her mouth covered my right nipple and she flicked her tongue at the ring there. My hands were on her head, holding her still. She moaned and gently tugged on the ring with her teeth, making me hiss and arch my back. She moved to my other breast, repeating the heavenly torture. Oh yeah, it was going to be a wild night.\n\nSuddenly, she rose up and kissed me hard, her lips bruising against mine as she lay atop me, her breasts squishing my breasts, my piercings rubbing deliciously between us. And then her hand pressed between my thighs. I bent my leg, putting my foot flat on the mattress and leaning my knee outwards, opening myself up to her. I buried my hands in her hair again as she rubbed my clit with two fingers.\n\n\"Yes!\" I cried when she let me breathe. I clenched my eyes and flung my head back into the pillow.\n\nHer mouth moved to my neck and finally back to my breast. She slid her hand down further so she could bury those same fingers inside my tight sheath.\n\nI gasped and arched up to her. One minute, I was silently begging for release, the next, she had me on the brink. I released my hold on her head and concentrated instead on falling over into oblivion. And then I was there, screaming her name, feeling her fingers plunging in and out of my core, making love to me like I needed her to.\n\nShe collapsed on top of me, kissing my neck, her hair covering my face. \"I love you Kat Jenkins.\"\n\nBefore I drifted off, I wrapped my arms around her and whispered in her ear, \"I love you, too, Jenna Swallow. I'm so glad I decided to kiss a girl.\"\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "wedding",
        "lesbian wedding"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/i-kissed-a-girl-ch-07"
}