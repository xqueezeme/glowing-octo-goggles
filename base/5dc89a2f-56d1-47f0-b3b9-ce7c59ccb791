{
    "title": "The Morrisons Ch. 28",
    "pages": [
        "I appreciate Fat_Dad editing this chapter of \"The Morrisons\" we have combined our story characters, but each story is separate from the other. \n\nIt has been almost 2 years since I've published a chapter of The Morrisons, due to health reasons. However, I have been writing this chapter a little bit at a time over the past 6 months. I hope you all enjoy this chapter. \n\n~ ~ ~ ~ ~ ~ ~ ~ \n\n**PLEASE NOTE: \n\n**Author's Note: The Morrisons is a continuing story where each chapter builds on previous chapters. If this is your first encounter with The Morrisons, I'd like to suggest you read the previous chapters prior to reading this one. Please enjoy! \n\n**Before you read this chapter, be advised that it contains very graphic depictions of raw sex between two or more consenting people. Since I am an amateur author, you may find some errors in spelling, or punctuation. IF such depictions or errors upset you or make you lose sleep, PLEASE don't read any further. It's a different-strokes-for-different-folks kind of story. \n\n~ ~ ~ ~ ~ ~ ~ ~ \n\nFor the record: All characters engaging in any sexual activities - are of legal age! \n\n~ ~ ~ ~ ~ ~ ~ ~ \n\n****************** \n\nChapter 28 \n\nAfter walking hand in hand on the beach, Joanna and Hanna circled back towards the coconut grove. A short distance away, they stopped and listened to the wonderful sounds of people making love on the moon lit beach. \"Let's move closer so we can watch them.\" Hanna whispered. \n\nAs they moved forward both could see the silhouettes of people on the lounges in various positions and it was evident, they were all enjoying themselves. They could see some of the participant's faces while others had their faces turned. Two of the couples they recognized were Tom Sr. and Tom Jr. receiving oral sex on lounges set up, side by side. Tom Jr.'s mom was hungrily attacking his rock-hard cock while Faith (Tom Jr.'s wife) eagerly manipulated Tom Sr.'s manhood. Both Toms were gasping as they neared their orgasm. One Tom after another let their partner know they were close to cummming. It appeared that both females eagerly stepped up their actions. Soon both Tom Sr. and Tom Jr. released loud groans while pumping their hips in sync with their female companion's actions. Janet and Faith swallowed their partner's juices until they were completely dry and cleaned. After Janet and Faith finished, they crawled up the lounge to snuggle under the arm of their Tom. \n\nHanna hugged Joanna and said in a soft voice, \"I wish my first introduction to oral sex would have been as loving as what we are witnessing. They look so much in love and care for each other.\" \n\n\"Yes,\" Joanna replied in a whisper, \"True love is a marvelous thing. I can't imagine what you went through between those three thugs who treated you so wrongly. I hope by now, you realize not everyone is like Harold, Pete and Bill. When you have flash backs to that time you were abused, those three guys will never hurt you again because there are many people protecting you. I will protect you no matter what it takes. You are a lovely young lady and I hope over time you will be able to move on.\" \n\nShortly after both Toms achieved their sexual satisfaction, there came a blood curdling shriek and scream of pleasure from Brenda Summers (Tom Sr. executive secretary) on a lounge just a short distance from Tom Jr. \n\nBrenda was folded almost in half with her legs and feet up near her head. A muscle-bound man between her widespread legs pumped his cock into her well lubricated pussy. Brenda's hands clutched the back of his arms so he couldn't pull away. As one orgasm, after another, wracked her body, Brenda continued to scream and moan in ecstasy for almost a minute. \n\nHanna looked at Joanna and moved her head in the direction of their cabin. Joanna picked up on the hint and while holding Hanna's hand, they both stood up. They surveyed the scene once more before they said good night to all three couples. \n\nAs they started to walk away from the very sexy scene, and were about to pass both Toms, they paused for a moment and watched Janet and Faith move up on the lounge straddling the Tom under them. Both girls positioned their pussy over each Tom's face before they lowered their well lubricated pussy down on the waiting face of their partner. Joanna and Hanna could hear the slurping sounds as both Toms began to return the favor they had received. \n\nHanna leaned into Joanna and kissed her lightly on the cheek before she said, \"Come on, let's get back to our cabin, I want us to have some of that kind of fun.\" \n\nWalking briskly, they arrived at their cabin within a couple of minutes. Once inside, Joanna suggested they take a shower to make sure all the sand was washed off their body. Hanna didn't argue and led the way to the bathroom. After starting the shower, Hanna looked at Joanna sitting on the toilet. When she finished and wiped her pussy, Hanna smiled saying, \"My turn.\" \n\nIn the shower the two girls hugged and kissed each other under the warm spray. Their hands explored each other's body. They stopped briefly to fill their scrunchies with body wash before they continued to get cleaned up. By the time they finished both ladies were moaning and panting like a cat in heat. They hurried and dried each other's body before they rushed into the bedroom. \n\nAt the bottom of the bed they stopped, and Hanna pulled Joanna into a one-armed hug. She stared into Joanna's green eyes as she raised her free hand and placed it on Joanna's \"B\" sized breast. \"I feel safe with you Joanna. There's just something about you that gives me the comfort I really need. But for now, I want to do things to your body even though I don't have much experience.\" \n\n\"On Hanna, you are such a lovely young lady with a beautiful body. It is I who should feel privileged to be allowed to enjoy a moment like this. You have a lifetime to love and be loved and I really hope our being together is just the start of your adventure.\" \n\nJoanna pushed her pubic mound against Hanna's pubic mound before she started slow rotations and gyrations. She pulled Hanna into an embrace and feather kissed her lips softly before she slowly moved to Hanna's ear and down the side of her neck. Within seconds Hanna was pushing her pubic mound back against Joanna and purring softly. \n\nThey separated only long enough to crawl up on the bed side by side so they could continue. Hanna's hand found its way to Joanna's small brown nipple and rolled it tenderly between her thumb and index finger. \"My nipples are so sensitive love.\" Joanna whispered. Hanna giggled and replied, \"Mine are too.\" \n\nJoanna, stirred by her passion, leaned forward until her lips softly brushed Hanna's, simultaneously their hands explored each other's body. Their breathing became irregular and in gasps. Their hips were in constant motion as each of the girls lovingly massaged each other's clit. \n\nJoanna pulled back from their kiss and beheld the mixture of love and lust in Hanna's eyes. It was only for a few seconds but to Hanna it seemed much longer. Suddenly Hanna started giggling and with that, her whole body shook. \n\nJoanna asked, \"What's so funny girl?\" \n\nHanna once again stared deeply into Joanna's green eyes before she responded, \"I'm looking forward to making love to you. I was only giggling because I'm excited and as you can tell, I'm soaking wet. I hope I don't drown you when you go down on me.\" \n\nJoanna responded with, \"No problem honey, I'll have you lie on your back and I'll get between your legs, so all your juices I miss will flow on the bed. I know that doesn't sound so romantic, but I don't want to drown tonight either. Wait, let me get a towel and put under you so we won't have to sleep in a wet spot later.\" Joanna slipped out of bed and went to the linen closet and brought back a thick towel, only to find Hanna with her feet firmly planted on the bed and her ass raised. \n\nWhen Joanna crawled back up on the bed, she asked Hanna, \"Now ... where were we?\" \n\nHanna giggled once again, only this time she kept going. Finally, Joanna asked, \"OK, I give up, what's so funny this time?\" \n\n\"You must be some cop! It took you less than a minute to get that towel and you forgot what we were doing and now you want me to remind you. Do I need to join the police department so I can be your partner and remind you what you have to do?\" \n\n\"Oh, you're a silly girl,\" Joanna laughed and replied, \"Honey, that would be fun. But I don't think the department could handle both of us as a team. You could get us in all kinds of trouble - good trouble mind you - but none the less - trouble.\" \n\nHanna giggled like a young schoolgirl before mimicking Joanna, \"Where were we?\" \n\nBoth girls started laughing as they moved together and embraced. It didn't take long before they were locked in a very passionate embrace and hot kisses. The interruption was only a minor diversion but then again, they had all night, so they weren't in much of a hurry. After a couple hours of intense and passionate love making, both girls collapsed on the bed, breathing rapidly and each heart pounding in their chest. \n\nWhen they had a chance to calm down, Joanna suggested, \"Let's go out on the porch and sit on the swing. We could use a little fresh air.\" \n\nWithout another word, both rolled in opposite directions and vacated the bed. They met again at the foot of the bed. Hanna said, \"I'd like to rinse off before we go out there.\" Joanna agreed so they detoured into the bathroom. This time Joanna adjusted the water while Hanna quickly peed. Joanna took her turn on the toilet before both stepped into the shower. \n\nThey finished their quick rinse, \"I'm not going to use a towel, I'd love to go outside wet and let the air dry my skin.\" Joanna suggested. \n\n\"That sounds like an excellent idea.\" Hanna added. \"I'd like to do that too.\" \n\nThere was a nice warm breeze blowing softly and they stepped out on the porch. They moved to the swing and both sat down at the same time. They allowed the swing to move slowly back and forth as they talked quietly. \n\nIn the quiet of the night with only the soft sounds of the surf off in a distance, they heard a male and female voice that seemed to get closer. They continued to swing while listening to a female giggle. Both Hanna and Joanna looked to their left, but with the trees overhead, it was very dark. \n\nAs the voices came closer, Joanna recognized the female voice as belonging to Carrie Thompson and the male voice was Fred Holden, Carrie's boyfriend. Joanna and Hanna couldn't see them until they were almost in front of the porch. As they were about to pass by, Joanna greeted them by wishing them a good evening. \n\nThe newcomers stopped in front of the porch and returned the greeting. Joanna asked them if they would like to sit and chat a while and they accepted. Joanna got up and went into the cabin and returned with four bottles of cold water and passed them out, before she sat down again. While they sipped their water, they talked quietly. \n\nJoanna asked the new couple how they were enjoying their stay on the island. Carrie was quick to respond that it was nothing like being at home. She took a long pull on her water and swallowed before she said, \"Guys this is the land of magic. I know Fred is used to being with other nude people, but he's had a hard on more than any time I can remember since we've been dating. I don't know if you want to hear about his cock but let me tell you this one last thing before I finish. We were down on the beach earlier and it was so wonderful to have all the loving couples down there sharing the beach with us. The sounds people make when they make love and have an orgasm were so wonderful. Each one of us added something to the chorus of noises. I've never made love with others being so close. I know it affected me in a positive way and I suspect that Fred was affected too because his cock has never stayed so hard for so long as it did down there on the beach.\" \n\nHanna piped up and said, \"I think Fred has still got a hard on.\" \n\nCarrie was quick to say, \"Yes he does Hanna. Would you like to feel it or stroke it? I share, you know.\" \n\n\"I couldn't possibly do that Carrie.\" Hanna replied. \"He's your man.\" \n\n\"Hanna, you don't have to worry, there are only four of us here and I don't think anyone of us is going to say anything that would embarrass you later. If you want to take Carrie up on her offer, I'm willing to let you stroke my cock.\" Fred added. \n\nThere were a few moments of silence before Hanna whispered, \"Fred if you don't mind, I would love to. I don't have that much experience in willing participation with males, but I'd love to experiment if you and Carrie didn't mind.\" \n\nJoanna stood up quickly and said, \"Come over here Fred and sit next to Hanna and I'll sit in your chair.\" \n\nCarrie was quick to add, \"Hanna you don't have to be shy or bashful with us. If you want to try something, just say so. I'm positive Fred will be very accommodating, especially for you.\" \n\nFred stood up and followed his hard cock across the porch and paused a moment before he sat down in the swing next to Hanna. He quietly said, \"I want you to know, even though I came over here to sit next to you, you don't have to do anything, if you don't want to. You don't have to ask permission either, whenever you are ready to do something, just go for it.\" \n\nHanna looked at Fred for a few seconds before she reached out and touched his cock and used the tip of her index finger to trace an invisible line up and down before she went south and touched his balls. Fred inhaled sharply when he felt Hanna grasp his balls in her small hand. He even slid his ass towards the edge of the swing so he could spread his legs a little more and give Hanna extra room to explore. \n\nIn her soft voice, \"You can touch me if you want to Fred.\" Hanna added. \n\nFred looked at the beautiful young lady beside him and although his smile was not visible in the dark of night, he timidly draped his arm around her shoulders and moved his hand so he could cup her lovely breast in his hand. He felt her shiver at his touch, and he questioned her if she was ok. \n\n\"My nipples have always been so sensitive when someone else touches them. I appreciate you going slow with me because of the experience I had with those really bad men.\" Hanna replied. \n\nCarrie spoke up and proposed, \"Would you two like to go in on the bed where there's more room? Joanna and I can come in if you'd like, or we can stay out here, it's your choice.\" \n\nEverything was quiet for almost a full minute before Hanna looked at Fred and asked. \"Fred if we go in on the bed, you won't force me to fuck you, will you?\" \n\n\"No Hanna, we will only do what you want to do and nothing more. Carrie and Joanna can come in if you want them to, I don't mind.\" \n\n\"If they stay right here on the porch, they will be close enough. Knowing that all the other people here are making love or having sex is making me very horny and when we get in the bedroom you will feel how wet I am. I think it will fine if just the two of us went in, if that's alright with Carrie.\" Hanna said in a quiet shy voice. \n\nHanna stood up first and held her hand out to Fred. He took her hand and as they walked in front of Carrie and Joanna they paused and Hanna asked Carrie, \"If things feel right, would it be ok with you if I had Fred put his cock in my pussy?\" \n\nCarrie jumped up and hugged Hanna before saying, \"Honey, you know what Dan Morrison has always said about love making or sex; both participants have to agree. You will have to ask Fred if the time comes, but for me, if you want to make love to Fred, you can go for it girl. I love you dearly.\" \n\nHanna turned and while holding Fred's hand both entered the cabin alone and headed directly for the bedroom. Hanna turned to Fred and put her arms around his neck and hugged him while pressing her body firmly against his. Fred kissed the side of her neck and down her jawbone until Hanna pulled back enough for him to lightly kiss her lips. Fred allowed his hands to move up and down her back for a few seconds before he went down and cupping both ass cheeks in his hands and pulled Hanna closer to him. Hanna moaned into his mouth when her pubic mound was mashed firmly against Fred's hard cock. \n\nThey had a tongue battle for a few minutes before Hanna pulled back and looked into Fred's eyes and whispered, \"Let's get on the bed.\" \n\nFred watched as Hanna turned and crawled up on the bed. Her delicious looking slit and tiny rosebud asshole were on full display for him. When Hanna turned and laid down on her back, she automatically allowed her legs to remain open. Fred stood in place and stared openly at Hanna slightly open pussy. \n\nHanna started to close her legs, but Fred held up his hand and said, \"Please don't do that. You are so beautiful, and I just have to stare at you for a moment longer.\" \n\nFred's staring made her feel a little self-conscious, however his words were so comforting. She knew he was looking directly at her spread open pussy and at the same time he was telling her she was beautiful. After what she suffered at the hands of those monsters, she thought no one would ever look at her again much less consider her beautiful. Both her pussy and asshole had been really abused by many men and she was still a little intimidated being laid out completely naked and being seen by a man. \n\nAfter a few more seconds Fred started to crawl up the bed, with his face aimed between Hanna's legs while his rock-hard cock bobbed up and down from his groin. Hanna held out her hands, but Fred ignored them, and he started kissing her thighs, first one and then the other. Each time he kissed a thigh, he moved closer to the apex of her legs. \n\nFinally, he reached his target and the first kiss was planted directly on her tiny extended clit. Hanna gasped then gave a little yelp followed by a very satisfied sounding - oooooooooh. Fred smiled to himself and the next move was to run his flat tongue from her tiny rosebud hole to her small clit. When Fred's tongue touched Hanna's clit, once again she moaned, and raised her hips to make the contact with her clit last longer. Hanna reached down and grasped his hair and used that to pull his mouth tightly against her pussy. She strained with sexual excitement as Fred's tongue drove into her pussy and licked upward to her clit repeatedly. \n\nFred worked his tongue feverously until he had Hanna's hips grinding against his face and the volume of her moaning with pleasure grew in intensity. Hanna experienced several small orgasms until the big one hit her and rocked her world. As she got louder and her hips gyrated sporadically, Fred found it hard to keep up with her. Inwardly, he was glad when her hips finally raised off the bed and vibrated as Hanna screamed in ecstasy. \n\nWhen Hanna finally released the back of his head, Fred pulled away and looked up Hanna's naked body. The girl had a huge smile on her face, but her eyes were closed. Without waiting for an invitation Fred moved her body until he was lying beside her. Hanna expelled a huge satisfied sigh as she opened her eyes slowly. When they were wide open, she rolled her head towards Fred and smiled as she whispered, \"Oh God, thank you Fred. I really needed that after listening to everyone talk about sex and seeing others enjoying sex. A girl, even with my misfortunate history can still get majorly horny. \n\nFred leaned over and kissed her and whispered back, \"Hanna, you are a very beautiful young lady and I'm truly sorry for what happened to you, but you are safe now. No matter where those guys are now, they can't find you and besides, they can't get to you with all the security you have around you. Just think of it this way, you are more secure than the U.S. President with all his secret service people. You have people that you know for sure who are watching over you and then you have untold numbers of people who you don't know, who are watching over you. This may sound ridiculous because I've never experienced what you have but try to be yourself and do what you want to do. No one is going to hurt you, including me.\" ",
        "\"Speaking of which,\" Hanna quietly said with a smile, \"I owe you a return favor. I'm not ready to have sex with you but I can give you a blowjob.\" \n\n\"You don't owe me anything Hanna.\" Fred replied. \"I was very thrilled that you allowed me to be here with you tonight and even more than that, you allowed me to give you some sexual gratification. That alone is enough for me. I don't need anything in return for giving you a moment of pleasure.\" \n\n\"But you went down on me and guys usually want something in return for doing stuff like that. I know I said I didn't want you to fuck me, but I can give you a blowjob or a hand job if that's ok with you. I want you to know how grateful I am for what you did.\" \n\n\"It was all my pleasure to bring you to several orgasms and knowing that I gave you pleasure, it good enough for me. You know, if you want to hang with Carrie and me while we're here, that would be great. I'd love to have you along and I'm sure Carrie will too.\" \n\n\"Are you serious? Are you sure Carrie wouldn't mind? What about when you two want to make love to each other? Won't I be in the way?\" Hanna rapidly fired the questions at Fred without giving him a chance to answer even one of them. \"I don't want to be a third wheel and screw everything up. Both of you are here on a vacation while I'm here for my protection.\" \n\n\"There is only one way to find out if Carrie wouldn't mind, let's go back out on the porch and ask her.\" \n\n\"Wait, I want to freshen up before I go back outside. Would you like to join me in the shower?\" \n\nFred smiled as he said, \"I'd love to join you in anything you want to do. You're a very special girl.\" \n\n\"You know flattery will get you everywhere and by the way, you are great for my ego, even if you are telling me little white fibs.\" \n\n\"I'm not fibbing about anything Hanna. You are very easy on the eyes, you have a wonderful personality, your smile is a killer, and most of all, you radiate the care you have inside you. You ARE a special girl and I'm not just saying that to hear myself talk.\" \n\nHanna pulled Fred by his hand, so he got off the bed and when he did, she embraced him and buried her face in his neck. Fred held her tightly even when he felt a few drops of liquid drip on him. Fred moved his hands up and down her back and whispered sweet things that only she could hear. \n\nThe embrace lasted a few minutes before Hanna lifted her head and pulled it back slightly so she could look at Fred's face. With tear streaked cheeks Hanna asked, \"Why couldn't I have met people like you and the rest of this group before those three bastards that raped and made me do things that only a fucking whore would do? Everyone around here has treated me so much different and I sometimes feel I don't deserve it or that I'm worthy of all this love.\" \n\n\"Listen Hanna, I'm not a psychologist so I can only tell you from my point of view that you are not a bad person, those three guys are criminals and what they did to you or made you do to other men and any of the other girls they used and abused is a criminal act. They will pay for their crimes, I guarantee it. I want to you hold your head up high and tell yourself daily that you did not cause what those guys did to you.\" \n\nHanna leaned forward and planted a long kiss on Fred's lips before she pulled away saying, \"Thank you for re-enforcing what I have been told in my sessions since I was rescued. You weren't present at those sessions and you have no way of knowing what was said. I believe you; you have made me feel so much better. I was really feeling down when they announced that there was a jail break and the three bastards were on the loose again. You've brightened my day,\" she said with a giggle, \"Even if it is night outside.\" \n\n\"Let's go in and shower quickly and then we can go outside to dry off.\" \n\nHanna tugged at Fred's hand and he followed her. She adjusted the water then stepped in. Fred was right behind her. Hanna took the shower nozzle off its base and sprayed Fred with it. They laughed together as she handed the shower nozzle to him. Hanna started running her hands all over Fred's neck and shoulders and when she moved down to his chest, she tweaked his nipples playfully. Fred was surprised and the slight painful tingle caused him to yelp. Once again Hanna giggled as she said, \"Oops, sorry, I didn't mean to hurt you.\" \n\nFred regained his composure quickly and replied, \"Nawwww, it didn't hurt, it just surprised me.\" \n\nHanna playfully leaned forward and took his right nipple between her lips and used her tongue to wave across the sensitive tip of his nipple. Fred shivered and an oooooooooo escaped his lips. Hanna smiled as she moved over to the left nipple and gave that one the same treatment. When she pulled back, she laughed and said, \"I had to kiss your boo-boo.\" \n\nHanna allowed her hands to roam down across his abs, around to his back, up and down the tight muscles in Fred's back then finally down to his tight and hard ass cheeks. Hanna tried to squeeze both cheeks, but the muscles were firm enough to resist any pressure from her hands. Without warning, Hanna sunk to her knees until the tip of Fred's cock bumped into her nose. \n\nThe second Fred realized what Hanna had done, he dropped the shower nozzle and reached down and put his hands under her arms, in an attempt to lift her up again. Hanna looked up while resisting his efforts and said, \"If I didn't want to do this, I wouldn't.\" \n\nHanna opened her mouth and engulfed the head of his cock. Fred stared at her for a few seconds before he pleaded, \"Really Hanna, you don't have to do that, I'm just happy to be here with you and to make you happy.\" \n\nHanna let his cock slip out of her mouth and looked up saying, \"Are you saying you don't want the girl on her knees with your cock in her mouth to give you a blowjob?\" \n\n\"Yes, I'm saying it isn't necessary for you to do anything sexual for me.\" \n\n\"Then I'm going to do my best to suck your cock. I have never had a guy tell me I didn't have to suck his cock, especially when I already have it in my mouth.\" \n\nWithout another word, Hanna opened her mouth and used her hands, which were still on Fred's ass, to pull him forward until his length was buried deep within. Fred moaned and started pumping back and forth, while allowing Hanna to be in complete control for the depth of his cock. It didn't take long for Fred to get the familiar feeling that he was going to cum. In a broken gasping voice, he let her know he would be ready any second. \n\nHanna didn't stop her actions and when Fred erupted in her mouth, she gallantly swallowed every drop of his baby making seed. She cleaned his cock completely before she stood up and once again leaned in and kissed Fred. He accepted her tongue in his mouth even though some of his cum was still coating it. \n\nWhen they finished kissing, Hanna reached down and picked up the shower nozzle and started spraying both bodies. Fred used his hands to rub her skin as the water flowed over it. When he reached her pubic mound, she automatically spread her legs to give him full access to her pussy. As the spray flowed, you could hear a slouching sound while he washed her pussy. \n\nHanna turned the nozzle on Fred and used one hand to rub his body. Hanna was being playful when she reached his cock, she moved the nozzle less than an inch from the sensitive rim at the base of its mushroom head and used her hand to massage it. When Fred's cock started to rise again, she told him to turn around. He did as he was instructed and then she told him to bend over and not move. Once again, he moved into the position she wanted when he felt the spray directly on his spread ass cheeks. Hanna moved her hands over his ass before moving her hand between his cheeks all the way to his balls. When she drew her hand back up, she intentionally poked his asshole with her middle finger. This made Fred jump, but he settled down when he realized Hanna wasn't going to push her finger into him. \n\nThey finished rinsing off and turned off the water. Both stood in the shower for a few minutes before they stepped out and walked out to the porch. Joanna and Carrie were still talking quietly but stopped when they saw the couple come through the door and take a seat, side by side on the swing. There was a moment of silence before Hanna said, \"I want to thank you for allowing your boyfriend to be with me.\" \n\n\"You are very welcome. I hope you enjoyed his company.\" Carrie commented. \n\n\"Oh yes, he was a perfect gentleman. You are a very lucky woman to have such a caring man.\" \n\n\"I know and I think I'll keep him around for a long time. I think we will be next to tie the knot. We have talked about it several times, but we haven't made anything official yet.\" Carrie added. \n\n\"Yes, I love Carrie and I want to spend the rest of my life with her.\" \n\n\"Honey, it's getting late, we should let Joanna and Hanna go to bed.\" \n\nCarrie stood up and Fred followed her action and then both Hanna and Joanna stood. Everyone hugged each other and said goodnight before Fred and Carrie stepped off the porch and waved as they started walking toward their cabin. \n\nJoanna looked at Hanna and asked, \"Are you ready for bed?\" \n\n\"Oh yes, I'm worn out.\" \n\nThey lovingly embraced before turning, while holding hands, and walked into the cabin. \n\n****************** \n\nUp in the air on the Gulfstream, Jimmy Turner went back to the bedroom and knocked on the door asking, \"Dan, are you awake? I need to see you for a moment. \n\nI had drifted off, but I said in a sleepy tone, \"Jimmy give me a second.\" I quickly untangled myself from the bodies which surrounded me. \n\nKim looked at me asking, \"Where are you going? \n\n\"Shhhhhhhh, don't wake up Beth and Terri. Jimmy wants to see me.\" \n\nIn unison I heard, \"We're awake.\" Came a replay from Beth and Terri, followed by laughter. \n\nI managed to get off the bed and went to the door and opened it. I asked Jimmy if the information was private or could the ladies hear it too. Jimmy smiled, \"I think it would be good for everyone to hear.\" \n\nJimmy stepped into the bedroom with the three ladies spread naked across the bed. He started with, \"Marsh and Becca will be landing shortly at our military base and then park the planes in a secure hangar next to our airstrip. Marsh has already notified the bullpen and they sent an additional detail to your house even though the other detail is still on duty. The new detail has entered your house and checked it out completely. Dan, your house and property are totally secured. We have decided to keep the new detail in your house until you arrive so they can give you a full report which I hope will make coming home easier for you and especially Terri.\" \n\n\"Dan, I know Mary is one of your trusted police officers but what would you say to me providing an additional female security person to your home, specifically for Terri?\" \n\n\"Jimmy, I'm going to let Terri answer that question. Terri?\" \n\n\"What do you have in mind for her to do to guard me? I have things to do around the Morrison's home, I don't want to be bumping into her every time I do something.\" Terri asked Jimmy. \n\n\"Terri, we can cover all that ground once I know if you want the additional security. I would like her to be within feet, of you, all the time, even at night. She wouldn't have to be in your way and that way Mary can be tasked to protect the rest of the Morrison family.\" \n\n\"I don't know, Dan what do you think?\" Terri asked. \n\n\"Terri, you're just as important as the rest of my family. However, there's a safety issue with you. The rest of us could be in danger if we are all together but with us working during the day, I'd rather you have an additional layer of safety, just in case. I know it is highly unlikely with all that Jimmy is doing, BUT ...\" \n\n\"I understand what you're saying, and I appreciate what everyone is doing. I guess it won't hurt to have another person around as you said, just in case.\" Hanna replied. \n\n\"Good, I'll get right to work on who we are going to provide for the detail. I'll personally make sure she will fit right into your lifestyle.\" Jimmy said. \n\n\"Ok, is there any questions you have for me before I let you go back to sleep?\" Jimmy inquired. \n\n\"How soon will we be landing at your airstrip?\" \n\nJimmy looked at his watch before saying, \"It really depends, but I expect to be on the ground in about two hours, maybe a little more. I heard we have a storm ahead of us and we may have to go around it to avoid the turbulence. We don't want to bounce everyone around. I can assure you; we are going as fast as this beautiful plane can travel. \n\n\"I'm sure we are Jimmy. I appreciate everything you and Marsh are doing. Although I'd love to be home, safety is our number one priority.\" I added. \n\n\"Jimmy when will your new security person be with us?\" Beth inquired. \n\n\"She will be at your house when you arrive. I want all of you to know, if she isn't a perfect fit, let me know immediately and I can quietly do a switch without saying a word to her. I want all of you to feel totally comfortable with my people. I have plenty to choose from. Also, I already started an interview process before I came here. I should ask, are there any qualities you would like to have with my employee other than able to respond immediately to an emergency?\" \n\nI looked at the ladies on the bed before I said, \"The biggest thing beside responding to emergencies is that she should be a nudist or willing to be nude. Also, she shouldn't be a loner, we would want her to participate with all family functions. Of course, if we go out to dinner or whatever, I will cover the costs so she shouldn't be bashful to order what she wants. I know this is kind of petty stuff but it's also important part of fitting in.\" I said. \n\nI looked at Kim, Beth and Terri and they nodded their heads but didn't have anything additional to add. \n\n\"If there is nothing else, I'll get back up front so I can talk to my people and let them know your wishes.\" Jimmy added. \n\nI shook Jimmy's hand and he left the bedroom. \n\nI started walking towards the bathroom and a naked body whizzed by me. All I saw was a beautiful ass with bouncing cheeks but that didn't narrow down who it was until I looked back at the bed and saw Kim and Beth just getting up. I heard laughing from the bathroom. All of us heard, \"Slow poke, you snooze, you lose.\" \n\nKim and Beth walked over to me and hugged me from each side telling me they loved me. I should have known something was up with them, but I was enjoying the two naked bodies rubbing on each side of me. When Terri exited the bathroom and I thought it was my turn, I started to pull away, but Kim held me firmly while Beth broke away and quickly went into the small airplane bathroom. Kim kissed me, \"Honey I love you, remember ladies first. You are first, after me.\" \n\nTerri moved up to my other side and said, \"I love you to honey. You are the only man for me. I love you so much.\" \n\nI looked both ways and then back at Kim as she pulled away to go into the bathroom only to be replaced by Beth. I again looked at both ladies before saying, \"I certainly have a wonderful life. I never thought it would be possible to love three women equally.\" \n\nKim exited the bathroom saying, \"Hey hunk, it's your turn to drain that monster between your legs. Let him go girls, before he pisses on the floor.\" \n\nBegrudgingly, Beth and Terri turned me loose and I immediately headed for the bathroom and not a second too soon. I didn't want to give away how bad I had to go, but I no sooner reached the toilet, which thankfully Kim had lifted the seat already, I let go a stream that would have rivaled a horse. The pain in my lower abdomen started to disappear immediately. I shook my cock a few times at the end of my one-man performance and reached down to flush more than half a bowl. \n\nI joined my lovely wives along with the soon to be mother of my child as we joined in a four-way hug. We exchanged kisses and vows of love for each other. After a few minutes, I suggested we go out in the cabin in case someone else would like to use the bed. \n\nAlmost everyone was sleeping when we went into the cabin, so we poured some coffee for each of us and picked out a snack before moving to a seat. I selected a seat near Jimmy so we could talk a little bit more. He told me that Marsh and Becca were preparing to land at the military facility at the Turner base and within a half hour they would be back to the hanger that we would be going to at the Turner airfield. I became excited knowing we were getting close. What I really wanted to know was about the plan to put those evil bastards in a prison they wouldn't be able to escape from. \n\nJeff slid into the seat beside me and said, \"Hey boss, I want to thank you for allowing me to come with you.\" \n\nJimmy looked at Jeff as he said, \"Son, you left a safe place to be in a semi-dangerous one just so you could go back to work. I don't know what you were thinking or if you even were thinking, but I want you to know, I'm impressed, and I don't impress easily.\" \n\n\"I agree Jimmy. I was shocked when Terri spoke up, back there on the island, but then again, I encouraged her to take control of our home and do whatever needed to be done independently without asking for permission. I guess that came back to bite me in the ass.\" \n\n\"But you Jeff, after what you went through working for Harold while protecting Hanna and Terri the best you could, I'm still wondering why you would want to put yourself in possible danger when you could have stayed on the island in a safe place. I don't want you to think I'm ungrateful because I'm not.\" \n\nJeff sat silently for a few moments before he said, \"Dan, I have a reputation to protect. Although I haven't had a lot of luck holding a high paying job, I have always worked to provide for my family and that's what's important to me. I have done whatever it takes to make sure my family had a roof over their heads and food for the table. It is very important to me to have a job or jobs because I never wanted to take handouts or welfare like so many other people. When I learned that you were coming back to go to work, I figured if it was good enough and safe enough for you, then it's good enough for me. I won't be a slouch, but I want you to know that I really appreciate everything, and I do mean everything you've done for me and my family.\" \n\n\"Jeff, I haven't done that much for you. I gave you a job when it was obvious that you couldn't go back to work for Harold. You are the one who has exceeded my expectations and have performed your job at a level which would make any other employer jealous they didn't hire you first. YOU are the reason that you are doing so well. I'm glad you have your own house now instead of living in that old place you were in. You have come a long way and really, I can't thank you enough to stepping up to the plate and willing to go back to work. You will be staying at my home and riding to work with me, so I'll be able to make sure you are safe. It's my turn to watch out for you.\" \n\n\"I don't know you, like Dan does, but I have to say your work ethics are impressive. Any other young man would have chosen to stay in a safe place and as a combat veteran, I know what it's like to step out into the unknown.\" Jimmy told Jeff. \n\nWe talked for a little while longer before Jimmy announced, \"Marsh and Becca are back at our airstrip. Ted and Mary are ready for instructions from the governor.\" I nodded my head and smiled. \n\nAs uncomfortable as clothes had become, I mentioned to Kim, Beth and Terri that we should get dressed because we would be landing in a little while. We walked back to the bedroom and all of us put on the clothes we had and then went back out and got some more coffee before we took a seat. By the time we came back, some of the others had started waking up. Those who are still sleeping were woken up and told that we would be landing soon, so if they had to use the bathroom or wanted some coffee, now would be a great time. ",
        "Everyone was back in the cabin and involved in a general conversation when Jimmy announced we would be landing in a little while. He asked those who were standing to please sit and for everyone to buckle their seat belt. I once again thanked Jimmy for flying us home and he told me it was no problem. \n\nSoon we could tell that our plane was slowing down and reducing our altitude. Looking out the window I could see the ground in what looked like little squares and then they grew until I could make out the trees and the lay of the land. \n\nIt wasn't too long before we were on the ground and taxiing toward the hangar. Once we stopped Jimmy walked over to the door and opened it for us. Jimmy went up to the cockpit and talked to Sam and Dirk as the rest of us disembarked from the Gulfstream. We were met at the hanger by Marsh, Ted, Becca and Mary. They had been there for a couple of hours, so they had a chance to shower and make the necessary calls. \n\nI immediately walked over to Ted and asked him what he found out. Marsh and Jimmy joined us and the four of us walked over to the office where it was more private than in the middle of the hangar. Once we were all seated, Ted said, \"I called the governor shortly after we landed and told him I was back home. He thanked me for being so prompt because he wanted to move things along immediately because he wasn't sure how deep the problem was.\" \n\n\"He informed me that he wanted to meet with us, oh by the way, he agreed to have Marsh present, but he wants to meet us away from the capital or the governor's mansion. Marsh suggested his house, but the governor nixed that because he doesn't want to take the chance of being recorded. He is going to come down here because after we talk, he's going to make an official announcement with us by his side so the Sheriff's office and the State Police will know to step back and only offer their assistance instead of running the investigation. The governor has insisted that only a few from each department will be hand picked by us. They will be told that we must have a copy of their file so we can evaluate them on a case by case basis.\" \n\n\"Now, the only thing we need to do is come up with a place the governor will feel is safe enough to discuss all this with us.\" \n\nMarsh spoke up saying, \"We were just talking about where to meet when you arrived.\" \n\nJimmy quickly added, \"I know the governor personally, would you mind if I talked to him right now and make a couple of suggestions for a meeting place?\" \n\n\"Absolutely not.\" Ted said quicker that you could take a breath. \n\n\"Give me the phone, I'll call the governor's private number which I'm positive you don't have.\" Jimmy said as he reached for the secure line phone. \n\nIn a few seconds Jimmy said into the phone, \"Hi governor this is Jimmy Turner. Yes, I know, Marsh and Ted are sitting right here with me now. They told me you want a very private meeting and you turned down the one they offered. How about I send an unmarked helicopter up to pick you up and bring you down here to one of my places to meet? No governor I won't blindfold you.\" Jimmy laughed into the phone. \n\nWe were still listening to Jimmy's one-sided conversation with the governor, \"When were you thinking about meeting and may I be present at this meeting too?\" \n\n\"Tonight, would be fine. Can you slip your State Police security detail long enough to meet my chopper? Shall I pick you up at the same farm I did the last time we had to meet? OK, so be there around five-thirty and I'll come and pick you up myself. Oh, I have one more question for you. Do you mind if we include the guy who has had both girls live in his house since all this broke? Yes, his name is Dan Morrison. I can send you a secure report on him, so you'll know he's one of us. Ok sir, I'll see you at five-thirty and no, I won't bring the blindfold. Oh, bring a change of clothes with you and I'll set you up in a suite for the evening. Yes, I'll take you out to dinner. Yes, I'll pick up the tab. Yes, you can bring her wife with you and we can let her stay with the girls down here while we do business.\" Jimmy laughed as he hung up the phone saying, \"The cheap son-of-a-gun won't ever change.\" \n\nMarsh looked at Jimmy asking, \"Why didn't you tell me that you are friends with the governor?\" \n\nJimmy leaned back in his chair and with a smile that covered his face as he said, \"Marsh, you should have known. I've been in this business for a long time and there are people in all places, high and low, that I either know well or I'm friends with. \n\n\"Anyway, the meeting is set for tonight as soon as I fly the governor down here. I think it would be great if you reserved a suite for him at the hotel, like I promised. We can fly him over to your office and get him and his lovely wife into the hotel without too much fanfare and anyone recognizing them.\" \n\n\"Ted, I didn't mean to steal your thunder, but I know I can help you by being a background person for you. I don't want you to repeat my name or Marsh's name in any report you give or any interview you make. Son, you are going to be hammered with the news media once the governor makes his announcement, I hope you are ready to be blasted from all sides. The ones you'll have to worry about, other than those who are involved with this, are the jealous sons-a-bitches from the State Police and the Sheriff's office. I know you started the investigation and I'm glad the governor has given you the lead on this. You are certainly going to have your hands full as you lead the charge against those dirty bastards. I promise you; I will supply you with the most up-to-date information anyone has, and I don't want anything in return. Most of all, you can't let anyone know where your information is coming from.\" \n\n\"Ted, you are going to make some enemies along the way during this investigation so it would be wise for you and your wife to stay with either Dan, Marsh or me while this is going on. I know you'll be welcome at my house.\" Jimmy said. \n\nMarsh spoke up saying, \"Ted both of you will be welcome at my house as well.\" \n\nFinally, I said, \"Ted, you already know you are welcome at our home.\" \n\nTed looked at each of us before he smiled saying, \"We already have a bedroom at Dan's house with many of our clothes hanging in the closet or in the dressers, so although I appreciate all the offers, I think it would be best if we stayed where we are for now.\" \n\nMarsh spoke up asking, \"So where are you going to have our meeting tonight?\" \n\n\"I should blindfold the three of you, so you won't know where the place is, because I only use my personal stuff for real security issues like this. Since we are all working for the same goal, I'll be nice to you and tell you we will be in my bunker. Like yours Marsh, mine is loaded with all my toys. I want all of you in the bunker before I arrive with the governor because even now, he won't know it's my personal place.\" \n\n\"I think it would be great if Becca met us at my helipad and took the governor's wife over to the Morrison's house while we meet. That way all the women are together and scheme against us. Is that ok with you Dan?\" \n\n\"Yes, sure it is, anything I can do to help is ok with me.\" I said. \n\n\"Well then, on that note, Dan, tell your ladies not to cook anything for dinner, we'll all go into the back door of The Hole and use the conference room.\" Jimmy replied. \n\nTurning to Marsh Jimmy asked, \"Would you please call Virginia Hastings over at The Hole and tell her we want to conference room for a \"VERY PRIVATE\" dinner and she should hand select our waitresses. Tell her we will give her a number later for dinner but in the meantime, she can start preparing for many of us.\" \n\nMarsh picked up the phone and called The Hole and spoke to Virginia and when he hung up, he said, \"Everything is all set for dinner except the number to set the table for.\" \n\nTed said, \"It sounds like everything is taken care of until tonight. What time will you be picking Dan and me up for the meeting Marsh?\" \n\nMarsh said, \"How about I pick you up at six and then it will only be a short wait before Jimmy gets back with our guest.\" \n\n\"Sounds good to me and it sure should be interesting to hear what the governor wants.\" Ted replied. \n\nMarsh asked, \"Is there anything we need to cover before we have the meeting?\" \n\n\"I think this is a wait and see what the governor is expecting of us. Although I'll be leading the investigation, I need to get my direction from him. Not knowing how deep this may run, we may be taking down some very important people. I'm not surprised to hear that my chief was part of the sex ring. However, he got off too easy by being shot during the jail break.\" \n\n\"Speaking of the jail break, our people are still working on any possible location of the three guys who are the low-level snakes. Once we get them, maybe we can get them to talk. We need the big fish as well as the small ones. Ted, as I said before, we don't want to hinder you or your investigation but as a man to man, if we should happen to capture Harold, Pete and Bill first, you know we don't have the same restrictions on interrogation that you would have if you arrested them. If we can get something out of them and then turn them over to the police without them knowing who we are, the information you receive anonymously could be used against them in a court of law.\" Jimmy added. \n\n\"And, you won't have to tell the governor anything about that part other than Jimmy has volunteered his resources to assist you. Just so you know, I don't really plan to say anything during your meeting unless I'm asked a question. I'm sure Jimmy will be the same way. This is your show and you handle it the way you want to.\" Marsh added. \n\n\"I'm only going to be there as an interested party because the girls are staying with me.\" I said. \n\nTed was the next one to speak, \"Listen guys, I appreciate all the offers to help with this investigation and I can't tell you what to do IF you apprehend the three or even one of them first. That way I have no knowledge of anything, and I can honestly say that. I want the scum bags caught and I don't care who gets them. I also want anyone associated with them caught and once again, I don't care who gets them first. They have beaten, raped, humiliated and most of all ruined the lives of so many young ladies. I want them caught and held accountable for their actions.\" \n\n\"I think all of you are on the same page and when we meet with the governor tonight, we will find out more information.\" Jimmy said. \n\n\"I have a question Jimmy; did you really blindfold the governor at any time?\" I asked. \n\nJimmy broke out in a belly laugh and said, \"Yes I did. He was being a prick so I told him that if he wanted me to help him I would, but I didn't want him to see where I was taking him. He finally agreed to be blindfolded because he really wanted my help.\" \n\nNow Marsh was confused and asked, \"Won't he recognize the room you had him in when you had him there before, since you're not going to blindfold him tonight.\" \n\n\"No, I already figured that out by using a different room to meet in. It will be the same concrete walls but using one of the other rooms will throw him off. He's not that smart you know.\" Jimmy said with a smirk. \n\nEveryone laughed and Jimmy stood up and said, \"I need to go out and have the mechanic check out the chopper I want to use later. Marsh when you go into my bunker, go to the reading room. There's a table in there which we can use for note taking. That way when I bring him in the back entrance, he won't be anywhere near the room he was in before.\" Once again all of us laughed. \n\nWe all stood up and walked back out into the hangar and met up with everyone else. It took us a few minutes to arrange for the transportation down to my house but eventually everyone had a ride. It didn't take long to get down to my security gate and our driver pushed the code in without me telling him what it was. We pulled up in front of the house and our front door opened and a couple of guys stepped out and welcomed us home. \n\nMarsh walked up to the guys and exchanged some greetings with them and then a brief update on the house and property. The guys stepped aside, opening the doorway for us the enter. Just after we walked in, Marsh received a phone call from Jimmy, and they talked a few minutes before Marsh said to me, \"Jimmy said he won't have the new girl for Terri until tomorrow and asked if the two guys could stay in place of her.\" \n\n\"I guess they could use Jenna's room tonight if they don't mind sharing a bed. Or one can sleep down here on the couch.\" \n\nKim came over to me and I broke the news to her that she and the other girls would be entertaining the governor's wife while we were having a meeting with the governor. I also told her that we were going out to dinner immediately after the meeting. Kim took everything in stride as she usually did and told me she'd be ready when it was time. \n\nMarsh came over while I was speaking with Kim and asked how many people we would have to go to dinner. I looked at Kim as she started naming them. We'll have me, you, Beth, Terri, Mary, Jeff, Ted, and Shelly. Joe is going to take Kelly, Allison, Ashley and Debbie to their homes, so we won't have them for dinner. So, if my count is right, we'll have eight people for dinner Marsh. \n\n\"Thank you Kim I'll add that number to my list.\" \n\nMarsh excused himself and walked over to Terri, Mary and Shelly and told them he wanted them to meet the new security detail for the night. He called the guys over to where he was standing with the girls and introduced everyone. Terri immediately resumed her role as the house administrator and asked Marsh if the two guys would be staying overnight at the house with Mary and Shelly there. \n\nMarsh confirmed they would be staying so Terri turned to the two guys and asked, \"Did anyone tell you this house is a nudist household?\" \n\nThe guys looked at each other with a blank stare while Terri continued, \"You won't have to worry about being nude right now because we are getting organized and we are going to have a guest here in a little while. However, when we come back from dinner and its just the family and our two policewomen, Mary and Shelly, we are always nude until it is time to go out and away from home. I'm not sure if you are going to dinner with us but if you aren't you can get nude after we leave so you'll have some time to adjust.\" \n\nBoth guys stood there slack jawed looking directly at Terri not believing what they had just heard. Finally, one of them spoke up saying, \"Ok so we're the new guys and get sandbagged right off the bat. I hope you aren't serious.\" \n\nMarsh laughed at the guys before he said, \"Great, someone left out part of the SOP for this detail. Guys, Terri is telling you how it is, listen to her, she's the house boss. What she says goes no matter what you hear from Dan, Kim or Beth Morrison. Not one of them will contradict what Terri says. \n\nTerri turned to Marsh asking, \"What the hell does sop mean? I don't want to sound dumb, but I've never heard of that before.\" \n\n\"Terri, what I said was SOP it's short for (Standard Operating Procedure) and someone at our end forgot to tell the guys they would have to be nude during their detail here.\" \n\nOne of the guys asked Marsh, \"Are you pulling our leg with this nudist stuff or what?\" \n\n\"No, I'm not pulling your leg. When Terri tells you it's time to shed your clothes, you'll have to shed your clothes and be nude until you are relieved tomorrow. If nobody has told you, Terri will also have a confidentiality statement for you to sign. It is in addition to the confidentiality statement you signed for your work for the Turner Company.\" \n\n\"Ummmmm Marsh, don't we have a choice in this matter? \n\n\"Why yes you do have a choice in the matter. You can work the detail and abide by the SOP, whether they told you in advance or not, but you were just informed by Terri what you'll have to do. And your choice comes in, do you want to work or go home?\" \n\n\"Do you mean to tell us that everyone, including the women are going to be nude at the same time we have to be nude? What happens if we get, you know, a hard on?\" \n\nMary, Shelly and Terri had large smiles spread across their faces as they watched the two guys squirm. \n\nMarsh grinned as he added, \"I know you guys haven't worked for Turner Security very long, but this is only a minor situation you may be asked to do during your employment with us. You might even like being nude around everyone. Do you have any more questions?\" \n\nShelly spoke up, \"When I came to work here and found out I had to be nude, I had almost the same reservations that you two are having. The only difference is I didn't have a cock to show but I still worried about people staring at my bald pussy and my and my \"C\" cup titties. But I found out quickly that no one really cares what you have, that is unless you're going to have sex with them.\" \n\nMary was next, \"Hell, I had the same reactions when I first came here. Unlike Shelly I only have small tits but I'm proud of my little \"A\" cups. You two, if you stay will see my bald pussy later so I'd suggest you don't get all worked up over letting your cocks swing free. Besides if I like one of them, I might just ask to take it for a ride.\" \n\n\"Gheeeez I'm getting a hard on and I haven't even seen anything yet!\" One of the guys said. \n\nThe other one chimed in, \"I'm not getting hard, I am hard.\" \n\n\"Well whip them cocks out so we can see what you're hiding.\" Mary said with a smile. \n\n\"We can't do that right here with everyone around.\" One of the guys said. \n\n\"OK, I'll make a deal with you, I'll pull my pants down and let you see my pussy, like a show and tell game from grade school. All you have to do is pull your pants down and let me see that stiffy you said you have locked up behind that zipper.\" Mary challenged. \n\n\"Hell, I'm game for that so we can see both cocks at the same time.\" Shelly added. \n\nMary said, \"On three and we all drop them and leave them down until we all agree to pull our pants up. But before we count, all of us will undo our belts, unbutton and unzip your pants so you're ready to drop them.\" \n\n\"But what if someone else looks this way when we have our pants down?\" \n\nMary replied, \"Then they will see your cock and my pussy. No big problem because if you stay, all of us are going to see you later anyway.\" \n\nReluctantly both guys started to work on their pants while both Shelly and Mary had their pants open and panties showing to tease the guys. When the guys caught up with them, Mary counted and when she reached three, both girls pushed their pants and panties down to their knees. Both guys we a bit slower and had to be encouraged by the girls before they finally pushed their pants and boxers down to their knees. \n\nTerri stood there with a big smile on her face as she watched the guys stare at the girls and the girls staring at the guys. The silence was broken when one of the guys said, \"WOW, both of you look good enough to eat. I have to say; those are really beautiful.\" \n\nMary was next to say, \"I hope you guys decide to stay, I'd love to take a ride on at least one of those hard cocks. I might change my mind and take on both of you.\" \n\n\"Don't you dare leave me out of this.\" Shelly exclaimed. \"I'm checking out tonight's entertainment. I want to have one of those sliding right in here.\" Shelly spread her pussy lips, so the guys got a good look at her. \n\n\"While all of you are drooling over each other, I want you guys to know the rule of the house. Dan Morrison has a policy that both parties must agree before two people engage in any type of sex. In this house, no really means no. Anyone breaking that rule will be escorted off the property and a police report will be filed. I don't anticipate either of you guys will have a problem with that rule.\" Terri announced. \"And just to make you a little more comfortable, those confidentiality statements go both ways. Nobody outside of this estate talks about what happens in the confines of the estate.\" ",
        "Both guys acknowledged what Terri said and then watched as both Shelly and Mary began to dip a finger between their pussy lips and bring their wet finger up to rub their clit. After a few more minutes of playing, Mary said, \"OK, that's enough for now, we can work on something else later. Go ahead and pull up your pants.\" \n\n\"So, Terri do you ever get naked?\" One of the guys asked. \n\n\"Yes, I do, and you'll find out when we get home from dinner. Although I would have been tempted to try out one of you a while ago, I can't do it now.\" \n\n\"I'll be the one to ask, why aren't you interested is having sex with us now?\" \n\n\"Terri looked at both guys and replied, \"I am trying to get pregnant by Dan so I can have his baby.\" \n\n\"Aren't you related to Dan?\" \n\n\"No, I am his house manager. I was the first one hired when Dan and Kim decided to have employees. Now we have house keepers, ground keepers, we have police officers like Shelly and Mary. We also have a third police officer who is in Hawaii with Hanna, the other girl who was abused. The other officer's name is Joanna. And all of us live here and are nude all the time unless we leave the property.\" \n\n\"WOW, that's a set up that I wouldn't mind being part of.\" One of the guys exclaimed. \n\n\"You are, at least for tonight.\" Terri said quietly. \n\nEveryone laughed as the guys had to agree with Terri. \n\nThe afternoon passed uneventfully. Marsh showed back up at the door for Ted and Dan right on schedule. They walked out and got in Marsh's car and rode up to Jimmy's bunker. When they arrived, they followed Marsh down underground to the library. Marsh said, \"I'd give you a tour, but I think Jimmy would like to do that. Ask him sometime and I'm sure he'll let you see what he has down here. Do you want something to drink, we have coffee, water, soda, wine and beer? Name your poison.\" \n\nI said I'd have some water and Ted followed me and asked for water also. We sat and took first drinks of water as Marsh turned on the television. What we saw was the helipad without any activity. We sat around and chatted about miscellaneous stuff until the sound on the TV came to life. All of us could tell there was a helicopter in the area, but it hadn't come into our view yet. \n\nWe watched as Jimmy brought his chopper in for a landing and then the shut down the rotors. No one exited the chopper until the blades stopped turning. We saw Becca get out and walk around the chopper while Jimmy got out and opened the rear door. We watched as Jimmy held out his hand and the governor's wife took it as she stepped down to the ground. The governor was right behind her, but he got down by himself. \n\nAs they started to walk, Marsh rotated the camera and followed them. We watched Becca take the governor's wife to the car and Jimmy escorted the Governor to an area where he pushed a button and suddenly a door appeared. Once they were inside the door closed and you wouldn't even know there was a door there. Marsh killed the television before Jimmy and the governor arrived in the room. \n\nWe stood up and Jimmy made all the introductions before we shook hands and then took a seat. The governor got right to the point and asked Jimmy, \"So why do you have a sidekick now. Are you getting to old?\" \n\nJimmy took the shot and returned one by saying, \"Politicians are the only ones who die on the job, governor. The rest of us retire and move on to something else to enjoy the rest of our lives.\" \n\n\"Touch\u00e9\" the governor said with a grin. \"At least I didn't have to wear that fucking blindfold this time. What did you do, build another place for your retirement? Looks to me you have a really interesting book collection.\" \n\n\"I have to keep you guessing sir. You know me, I'm not a showboat. I used to run an honest business but now Marsh is the new owner and he's a fine young man. I'm sure you will find that you can call him just like you used to call me. Marsh is up to speed with all my equipment and he can call the shots in a tough situation.\" \n\nMarsh sat silently as Jimmy talked. Finally, Jimmy said, \"I know you came here to talk to Ted, so I'll shut up now and let you two get to business.\" \n\n\"Before I start in with Ted, I want to congratulate Dan, I can call you Dan, can't I?\" \n\n\"Yes sir, you can.\" \n\n\"Very good Dan. As I said I want to congratulate you for all you have done for the three people who were victims of this violent group. I understand that two of the girls are living at your house and the young man, you gave him a job.\" \n\n\"Yes, sir to all of that. It was my civic duty to help them since I have the means to do so. When Terri applied for the job as my house manager, my wife and I didn't know she had been abused and that she didn't have any place to go, that was safe. Harold knew where she lived and had threatened her and told her she couldn't get away from him. \n\nThen we found out about Hanna who was sexually abused, raped and beaten. She was in the hospital and thanks to Ted knowing a doctor who could keep everything confidential, we managed to keep her anonymous until we were able to move her into my house. \n\nJeff the poor guy had a family, but he still stepped up to the plate helped us get Hanna away from Harold, so I gave him a job where I work.\" \n\n\"I want to thank you for everything you've done Dan. I hope one day I'll be able to help you in some way.\" \n\n\"Thank you, sir, I appreciate it.\" \n\nNow to you Ted, I've been briefed on what you started before going on vacation and I understand that you have only a few officers that you've worked with and can trust. What's the name of those officers that kept the information confidential?\" \n\nTed replied, \"Their names are Officer Mary Davis, Officer Shelly White and Officer Joanna Doyle. \n\nWhen the governor finished writing down the officer's names, he sat back in his chair and said, \"I want to congratulate you Chief Ted Johnson for your commitment to protect and serve the community you live and work in.\" \n\n\"Ummmm, I'm only a sergeant at the police department sir.\" Ted responded. \n\n\"That's right, you WERE one of the sergeants at the police department until about thirty seconds ago. Now you are Chief Johnson, do you have a problem with that?\" \n\n\"NO SIR, I will do the job the way it should have been done.\" Ted spoke up with a positive attitude and voice. \n\nNow, this is what I want you to do. I don't have any idea how deep this sex ring is, but I want you to dig and dig deep. I want all the sons-a-bitches caught and locked up in a prison where they will never smell fresh air again. I don't give a shit if it's the whole damn Congress or the Administration. DO you get what I'm saying son? This is not a political thing this is about young women in my state who have been beaten, raped and sexually assaulted.\" \n\n\"I won't have it and that pencil dick chief that ran your department is dead because of his involvement. The only thing I regret is that I can't send him to prison where I know he would have been abused just like he condoned those girls being abused.\" \n\n\"I want everyone who either participated, condoned or even bought tapes of the girls being abused to be caught and tried in a court of law. I want them in prison where I know they will not only serve their time but be abused just like the girls they abused. I know of some damn hard places to do time and I want each one of them to be in one of those facilities. I want them to be tormented until they draw their last breath. Do you get where I'm going CHIEF?\" \n\n\"Yes SIR!\" Ted replied. \n\n\"Son, you have the authority to follow this wherever it goes and if it goes outside your jurisdiction, then let me know and I'll have someone I can trust to make the bust for you. I WANT YOU TO UNDERSTAND, this is your baby and with each bust, I want your face in the picture, no matter where it is. Do you understand me son?\" \n\n\"Here is my card with all my numbers but most of all, my personal private number is on there. Call that number most of the time because I'm the only one who has access for it. Jimmy has the same number. Speaking of Jimmy and now Marsh, let me just say, I had a talk with Jimmy on the way here and he assured me he will be your back up and it won't cost you or me a dime. Jimmy and I go way back, and I want you to use his resources because he's the best in the business of investigations.\" \n\n\"Marsh, I don't know you, but Jimmy speaks highly of you, so I have to accept that you are in the top of your field. I would like it if you would help the Chief investigate and bring everyone to justice and I do mean everyone. I can't tell you how much this makes my ass itch since I found out it's going on right under my damn nose. I want it to STOP and I want all the assholes in prison and being stretched!\" \n\n\"I'm not going to get into the logistics or tell you how to do your job so work together and solve this damn problem and get those fucktards off my streets and back behind bars. Chief, clean up this city and make the police department respectable again.\" \n\n\"Are there any questions or does anyone need clarification of what I want or have said?\" \n\nTed was the first to say, \"Sir, I will do my best to clean up this city and with the help of Marsh and Jimmy we will bring in those guys and we will get them to reveal any information they have so we can round up all the others who were involved. Expect to be hearing from me because I'm positive the Sheriff's office and the State Police are not going to accept that a City Police Chief is stepping on their toes.\" \n\n\"Ted don't worry about stepping on anyone's toes because if they had been doing their damn job, they would have already arrested the former Chief before he got himself killed. If they give you too much shit, I'll just give you a new title with more authority than they have. As far as I'm concerned, they can all eat shit and bark at the moon. However, if you ask them to do something for you and they don't I want to know about that too.\" \n\n\"I'm going to hold a press conference tomorrow before I return home. I want all three of you standing behind me. I don't want any local politicians there either. This is a matter for police work, not campaigns. Ted, I'm just going to make a simple statement about your promotion and your authority to run this investigation the way you see fit. I will probably take a few questions, but this is an open investigation, so I don't want any details out there for the press to manipulate. \n\n\"Ted, if you want to say a few words, I would like for you to send a clear message to Harold, Bill and Pete they won't get away and you expect them to be back behind bars soon.\" \n\n\"Now are there any other questions?\" \n\nJimmy said, \"As I told you on the way here, Ted will have our full backing, but I don't think it's a good idea for us, Marsh and me, to be standing with you during the press conference. I would like this to be Ted's big moment so the city officials and residents can see the man who will be leading the police department. He's the police officer and we should be the guys behind the scenes, right Marsh?\" \n\n\"Definitely! We should remain anonymous because if the Sheriff's office and the State Police see us standing with Ted and you, they will wonder who's in charge of the investigation and we don't want that. We want them to know Ted is the man for this mission.\" \n\n\"Governor,\" Marsh added. Jimmy and I are both friends with the local county sheriff. He has some officers that may try to raise questions, but the sheriff himself will not. If for no other reason than he won't want to lose his Turner connections.\" \n\n\"You bring up some excellent points that I hadn't anticipated. You're right I don't want the other departments to read anything into you standing with me and Ted. So, I'll go along with you and just have Ted by my side.\" The governor said thoughtfully. \n\nThe room lulled into silence for a few moments as everyone looked at each other. Jimmy broke the silence by saying, \"Well, if that's all there is, let's go get something to eat. Governor, we're taking you and your wife to The Hole for dinner. We are going to go in the back entrance and use the conference room for dinner, so no one other than our other dinner guests will know you and your lovely bride are in town.\" \n\n\"I appreciate that Jimmy. In the morning I can call my press secretary and let her know where I am and have her set up the press conference for me. I know she will be pissed off at me for slipping out of the office without her knowing, but I didn't want anyone knowing what I just said to you three. That's private and I hope I can count of all of you to keep it that way. I only want my staff to know I came here to appoint a new police chief because the other dumb bastard was a dirty cop and got his ass killed in a double cross from the criminals he had in his jail.\" \n\nJimmy pushed the button on the speaker phone and made the call to my house. Terri answered the phone on the second ring saying, \"Morrison residence, how may I assist you?\" \n\n\"Right back on the job, good for you Terri. This is Jimmy, we are ready to head over to The Hole for dinner. Terri you can make the announcement and I'm sure you have enough vehicles there to bring everyone. I'll drive the four of us to The Hole. Hold on just a second Terri I have to ask Marsh a question.\" \n\n\"Marsh did you add the two new guys to the dinner list?\" \n\n\"No, I didn't but that doesn't matter, if we don't have room for them in the conference room, they can eat out in the restaurant. If you want them to come along, that would be ok.\" \n\nJimmy continued, \"Terri, tell the new security guys they can come along and get a free dinner on me. Tell Becca to park in the back and use the back entrance so no one sees the governor's wife. The rest of you should come in the back too.\" \n\n\"Yes sir, we'll be on our way in a few minutes. Is there anything else?\" \n\n\"No that's all for now Terri. See you in a few.\" \n\n\"What a lovely voice she has.\" The governor acknowledged. \n\n\"That sir is Terri; she is one of the girls who was abused. She's the first one to break away and answered my ad in the paper for a house manager. She was impressive the day she came for her interview, Kim and I hired her on the spot. It was only after we hired her that she spilled the beans about what she had been through and that Hanna was being treated worse than she was. The other person working for Harold was Jeff and he tried the best he could to protect Hanna. That's the short version of the very long story, but either way, you are going to meet Terri and Jeff in a few minutes.\" \n\nIf you don't have any special table arrangements, I'd like it if you allowed me to sit next to Terri and Jeff so I can talk to them during dinner. I don't want to pry or ruin their dinner, but I'd love to find out more about them.\" \n\n\"Ok then,\" Jimmy said, \"Let's get this show on the road.\" \n\nThe four of them stood up and as they started for the door the governor turned to Ted and shook his hand saying, \"Congratulations son you're going to need big shoulders for this job you know. I'm overruling your local yocals and they aren't going to be happy about it.\" \n\n\"I've pissed people off before, the important part is that you don't get pissed at me if we discover someone involved that might be connected to you in some way. As you said, we don't know how deep this runs but we need to arrest anyone who is connected.\" \n\n\"I understand son, that's why I wanted to meet with you away from my office and the capital. I don't want anyone to know what I've authorized you to do. I want you to catch anyone who's connected.\" \n\nThey walked down the same hallway that Jimmy brought the governor in and when they got to the entry way, Jimmy pushed the button and the door opened for them. They walked the short distance to the building near the helipad and once again Jimmy put the code into the keypad and the door opened. They walked in and got into the vehicle with Jimmy and the governor in the front seats. \n\nIt was only a few minutes' drive over to The Hole and during the ride it was quiet in the car. Jimmy pulled around in the back and parked. All of them got out and Marsh led the way through the back door and into the conference room. Once in there, Marsh excused himself and went out to speak to Jack Davis and Virginia Hastings who oversaw The Hole. \n\nJimmy offered the governor a drink and he opted for a martini, so Jimmy mixed one for him. I asked for a bottle of water and Jimmy took out a bottle of water for himself also. We stood around waiting for the others to arrive and we didn't have to wait long. The door opened and we clearly heard female laughter. They filed into the room along with a waitress who went to the bar and got ready for drink orders. \n\nWhen Terri and Jeff entered the room, I motioned for them to come over to us. When they were standing by us, I introduced them to the governor. Terri and Jeff were surprised to meet him but at the same time they knew he would be there. Terri graciously told the governor that his wife was a lovely lady and she enjoyed speaking with her. The governor held out his hand and Terri took it in hers as he said, \"Thank you young lady, and if you don't mind, I'd love it if you and Jeff would sit next to me during dinner so I could find out more about the two of you.\" \n\nAs he shook Jeff's hand he said, \"I don't want to pry and ruin your dinner, but I really am interested in what you two went through. \n\n\"Sir, I want you to know, I'm not what you call politically correct conversationalist. I say what's on my mind and if someone doesn't like it, tough shit.\" Terri added. \n\nJeff stood beside Terri and smiled broadly because he knew Terri, and what she was saying was very true. \n\n\"Young lady, I grew up with a father who was in the Navy and when he got out he bought a cattle ranch and between my father and all the ranch hands, I learned some damn good words and the proper way to use them, so you won't offend me in any way.\" \n\nJack Davis came into the conference room and after getting everyone's attention he asked us to find a seat so the waitress could take our orders. He continued by saying, \"I'm not going to supply menus to you but I'm offering this challenge. If you can think it, I will cook it for you.\" \n\n\"However, if you order a live flopping fish for dinner, I will tell you that all of my fish is definitely fresh but the flopping part I can't do for you. Governor, I don't know what they feed you at home, but I know I can top anything they cook. Please feel free to use your imagination.\" \n\nEveryone applauded Jack and all he did was take a bow and smiled. \n\nThe waitresses gave us a few minutes to think about what we wanted to order before they started making their rounds. After everyone had ordered, the waitress for the bar made her way around the table for drink orders and refills. \n\nThe evening progressed smoothly and when dinner was served the conversations were limited to descriptions of the excellent food and the noise from knives and forks busy on each plate. When people finished their dinner, they sat back and rubbed their full belly. Jack popped in and out of the room periodically and when he noticed almost everyone was finished, he had the waitresses start to collect the empty plates and another offer of coffee to everyone. \n\nWhen the table was cleared Jack came back in to announce that dessert would be served in a moment. When the first desserts arrived, Jack was there to introduce everyone to his version of fresh strawberry shortcake with New York cheesecake and vanilla ice cream with fresh whipped cream and chocolate shavings. \n\nOnce again there was almost complete silence as everyone enjoyed their dessert. When Jack came back in at the end of the dessert the room erupted in applause for the Chef. The governor spoke, \"Jack, if you want to come to work for me, I'll promise to pay you far better than Jimmy or Marsh can. I thought you were bluffing when you gave us the option to order anything we wanted, but I was wrong. I don't admit that often or not at all, but you've stumped me. Thank you that was the most delicious meal I've ever had. ",
        "\"Thank you, governor, your praise is well taken and welcomed. However, I must decline your offer because I really enjoy my position here and I would assuredly worry that you would not be able to get the kinds of fresh foods I use daily. I never use frozen or processed foods like they have in other places. But, thank you for your offer and I will say, anytime you want a great meal, come on back and I'll hook you up. And as an aside governor, I'd be willing to bet that Marsh is paying me more than the state is paying you.\" \n\nThe governor and his wife both smiled and he said, \"Maybe Jimmy will invite me back once a week for a meeting or something.\" He finished by looking at Jimmy and laughed. \n\nJimmy laughed as well before he said, \"With all the money my tax dollars are paying you, next time you pay for our meals.\" \n\nThe governor faked a cough and in his non-committed way of speaking, \"We'll have to see what the future holds.\" \n\nEveryone thanked Jack for his excellent meals, and he left the room. We sat around for a while longer and then Terri said, \"It has been a long day, and I'm getting tired. I don't want to be a party pooper but I'm positive I'm not the only one who's tired. \n\nI stood up and personally thanked the governor and his lovely wife and extended my thanks to Jimmy, Marsh and Becca for getting us home safely. I also admitted that I needed to get to bed because I was going to go to work in the morning. \n\nEveryone stood up and the room filled with different conversations all mixed together. Ted approached me and asked if he still had his room at my house and I told him he was always welcome at our home. \n\nJimmy and Marsh decided how to get the governor and his wife into the hotel without anyone seeing them. We were off to the side while we decided who was going to go in each car until everyone was taken care of. We thanked the waitresses on the way out the door and quickly went to the various cars in the back of the building. \n\nWhen we got home, Ted told me he wanted to use my office for a private call to his wife Marion who stayed behind in Hawaii. I told him he didn't have to ask, just use it. The rest of us stood around in the kitchen in general conversation until Mary asked, \"What did the governor say during the meeting?\" \n\n\"I can't reveal what he said until he makes the announcements tomorrow. Ted might want to tell you something when he gets off the phone with Marion, but that's up to him.\" \n\n\"WOW, a real mystery story forming right here in our own little city. The big man comes to town secretly and then meets a small group of co-conspirators before he is fed and led off to a hotel where we suspect that he'll spend the rest of the night fucking.\" Shelly laughed \n\nAll of us thought what Shelly said was funny but then Terri reminded us that we are a nudist household. All of us except for the two new security guys started taking our clothes off. When most of us were down to underwear, Terri looked at the two new guys and said, \"Come on get those duds off its SOP for this house. We are going to be nude in a second and you're not going to be standing there staring at us. \n\nOnce again, the two guys reluctantly started removing their clothes. Terri stood there facing them with her bra and panties on waiting for them to catch up with her. When they were down to their boxers and the rest of us were nude, Terri said, \"Let me catch up to you, I'll take off my bra and then we can all drop our drawers together.\" \n\nTerri only took a second to remove her bra and let the straps slide down her shoulders until her lovely orange sized breasts with their light pink areola and tiny nipples were revealed to the guys. They stared at her until she said, \"Ok, drop them drawers.\" \n\nTerri slowly lowered her panties until her bald slit was showing. The guy's cocks jumped to attention as she pushed them down the rest of the way and stood before them completely naked. Even though the rest of us were naked as well, Terri was the one they were most interested in. Terri carefully stepped forward until she was within arm's reach before she asked, \"May I?\" \n\nBoth guys nodded dumbfoundedly as she reached out and wrapped her hands around each cock. She watched what she was doing as she stroked them simultaneously. Suddenly one guy started breathing erratically and Terri looked into his eyes before asking someone to give her a paper towel. Then she added, \"Better bring two paper towels I think we are going to have a problem, Houston!\" \n\nKim scurried to the sink and pulled off a couple paper towels and headed back to Terri. She ripped the towels apart and gave Terri one while she kept the other and said, \"Let me have one, I think this is fun. What a way to break them in.\" \n\nTerri relinquished the one that was going to blow soon and started really pulling on the other one. While all the rest of us watched the reactions of the guys, Terri and Kim continued to give each guy a hand job. \n\nMary whispered, \"That's making me so hot and wet. I may have to ride one of them tonight.\" \n\nShelly whispered back, \"I know you're right girl. I want a piece of that action later too.\" \n\nBeth cuddled up to me while Jeff moved to Beth's other side. Beth kissed me first and then turned towards Jeff and kissed him too. She whispered to Jeff, \"We'll have to fix you up with one of the house cleaners, so you won't be so horny. I don't want you to have to do that until Tina gets back here.\" \n\nJeff smiled at Beth as he said, \"I'm going to have to do that tonight. Watching this is going to send me over the edge.\" \n\nBeth looked at me and then back at Jeff before she said, \"Go get a paper towel and I'll do that for you right now.\" \n\nJeff stared at Beth for a few moments and saw her nod her head towards the kitchen sink. Jeff turned and walked over to the sink and pulled a paper towel off the roll. When he walked back to Beth, she took the paper towel and kneeled in front of him. His cock was right in front of her mouth, but she took his cock in her hand and started working it expertly back and forth and up and down. Jeff stood over Beth and watched her lovely titties bounce and felt the marvelous feeling of her hand on his cock. It didn't take Jeff long before he was groaning in pleasure. About five minutes in, Jeff said, \"I'm going to cum Beth.\" \n\nBeth giggled and asked, \"Would you like to cum on my titties Jeff? Do you want to see your jizm on my naked body?\" \n\nThat was all it took for Jeff to explode and Beth did aim his cock at her titties and moving his cock, she painted her chest. After she had milked all of Jeff's juice out of his cock, she stood up in front of him and smiled. Without warning she stepped towards Jeff and pressed her chest against his as she kissed him passionately. She wrapped her arms around him and held him tightly for the duration of the kiss. Even when she pulled back from the kiss her chest was still pressed against his. Her eyes explored his and without saying anything, she decided to let him fuck her tonight if he wore a condom. \n\nBeth stepped back from Jeff and over to me and looked me directly in my eyes. I could see something was up, but I waited for her to tell me. \"I'm going to take Jeff up to the bedroom and let him fuck me with a condom on, I hope you don't mind.\" \n\n\"I've always said as long as both parties agree.\" \n\n\"I'm going to have him wear a condom because I don't want to get pregnant by anyone other than you. I want your baby and no one else's.\" \n\nI looked at Jeff and asked, \"Are you down with that Jeff?\" \n\n\"I think the real question is,\" Jeff said, \"Is it ok with you that Beth and I go upstairs and have sex?\" \n\n\"As I said a few minutes ago, I've always said as long as both parties agree. I'm not having sex with you Jeff so you will have to take that up with Beth.\" \n\nBeth solved the question by taking Jeff's hand and walking away towards the stairs. Up the stairs they went and that's the last we saw of them until we walked past their bedroom door and saw Jeff was busy eating another delicious dessert between Beth's sweet young thighs. \n\nKim smiled as she looked at me and said, \"I love that girl. She fits right in with us.\" \n\nEveryone settled in for the night and things got quiet except for an occasional screech or loud moan from those where were getting their sexual exercise. \n\nMorning came way to soon and when my alarm clock went off, it's a good thing I didn't have a gun under my pillow. I smacked the snooze button which is something I've never done before but when the alarm sounded the second time, I shut it off and groaned as I rolled out of bed. Kim heard me and woke up saying, \"I need to pee, gang way here I come.\" \n\nI laughed as Kim bounced twice on the bed before she was on her feet running for the bathroom. She was like a baseball player sliding into base as she slid across the seat she stopped perfectly in the center and let out with a very loud, \"awwwwwwwwwww!\" \n\nI thought she was going to dehydrate herself because it seemed like to took forever for her to stop. When she finally did, I was right there with a folded piece of toilet paper. When she spread her legs, I reached in and gladly wiped her pussy for her. I sure love my job. \n\nI held her hand as she stood up and when she moved out of the way, I lifted the seat and was just about ready to piss when Kim reached around me and held my cock for me. She was delighted to once again move it around and make all kinds of shapes in the water. When I finished, she shook it a few times for me and then announced that I was officially finished. \n\nI took her hand and the two of us walked into the bedroom where Beth and Jeff were still cuddled together naked on top of the sheet. We stood for a few seconds and enjoyed the beauty of the sleeping couple. I nodded for Kim to wake Jeff up while I moved to the other side of the bed to wake Beth up. \n\nKim was far more creative than me because she laid on the bed behind Jeff and reached around him and picked up his semi-erect cock and started stroking it. Meanwhile I was on the other side and I only leaned over and captured one of Beth's nipples in my mouth and ran my tongue over the sensitive end of it. Beth moaned and rolled over on her back before she opened one eye to see who was attached to her tit. She smiled up at me and said, \"Good morning husband, what a lovely way to wake up.\" \n\nAt the same time, Jeff rolled on his back and opened both eyes and gasped when he saw it was Kim who was stroking his cock. She continued and said, \"It's a great morning to shoot a load. Come on darling, let me see you cum.\" \n\nJeff's hips started moving in unison with Kim's hand and it didn't take long before he was working up to cummmming. Kim reached over to the nightstand and pulled out a couple of tissues and finished Jeff off. The tissues caught most of his load, but some splashed up on Kim. \n\nKim and I welcomed the sleepyheads to the new morning and then invited them to come into the master bathroom and shower with us. Beth announced she had to pee, so she was off on a dead run while Kim and Jeff took their time. I headed off to wake up Ted but was surprised to see he was up and showered already. From his room I could smell the coffee, so I returned to our room, ready for my shower. \n\nKim and Beth weren't surprised to hear that I smelled the coffee, but they were surprised that Ted was up and showered and already downstairs. I washed Beth and Jeff washed Kim and then we switched, and the girls washed us. We used the same method with drying off and while the girls were brushing their hair, Jeff and I headed down to the kitchen. \n\nJeff said to me as we walked the hall, \"Dan, I have to thank you for everything. God, how many employees get the benefits I've gotten from you. I'm talking about being able to share your new wife, to be woke up by Kim who is giving me a hand job. I mean am I dreaming or is this real?\" \n\n\"Jeff, this is real and as long as you keep our activities to yourself without telling anyone outside our home, you can continue to share in those special benefits. We are not the jealous kind and although nudity isn't about sex, we enjoy sharing our bodies with others if both parties agree. I know you had to wear a condom last night because Beth wants me to get her pregnant, but Kim can't have any more children. I know what it's like to wear condoms and I don't like them so if you and Kim agree to have sex, I know you wouldn't have to wear one.\" \n\nAs we rounded the corner into the kitchen, Terri was pouring coffee into two more cups. We grabbed a small towel out of the cabinet and put it on the chair before we sat down and joined Ted and Terri. I asked Ted how long he'd been up, and he said he heard Terri moving around so he got up and showered with her. Terri had a large smile on her face, \"I love it when someone rubs the body wash all over me. Ted is a gentleman and a fine example of the male species.\" \n\nI looked at Ted and said, \"I would like for Shelly to go to work with Kim today. We don't know where those guys are but since they came here to get Terri and Hanna, they must know who we are. That way, Mary can stay here with Terri but unlike in the past, I want both Mary and Shelly to be armed at all times.\" \n\n\"I know we have a security detail both outside and the two guys inside but as I said, they have been here already so Marsh and Jimmy both know to put their crews on high alert now that Terri is home.\" \n\n\"I'm going to carry concealed today because Beth and Jeff are going to be with me. I'm going to try and convince Kim to carry in her pocketbook but that's a decision she'll have to make.\" \n\n\"Let's give Marsh a call and see if they have any other ideas.\" \n\nTed picked up his phone and dialed Marsh's number and while the phone was ringing, Beth, Kim, Shelly, Mary and the two new guys walked into the kitchen. Terri got up and brought the coffee pot over to the table while the new arrivals each spread a towel on their chair and took a seat. \n\nSuddenly a breathless voice answered the phone with, \"Hey what's up Ted?\" \n\nTed responded with, \"Marsh did I disturb you?\" \n\n\"No, I'm out on the trail with wolf to get our morning exercise and my phone started buzzing. What's up?\" \n\n\"Dan and I were wondering what you and Jimmy have planned for an alert status since Terri is at home. All of us are going to be away working today and I won't have the police alert available until I can get to the office and sort things out. I used to have Joanna with a radio here so she could call for help, but right now I wouldn't trust having anyone from the police station coming out here. We also talked about, since Harold's guys have been here before, we need to make sure this place is secured. Also, Dan wants Shelly to go to work with Kim, and Mary will be here with Terri and the girl you said you would send over to replace these two guys that are here now.\" \n\n\"That's a good point Ted and to tell you the truth, that one slipped by me and must have slipped by Jimmy as well. Are my guys there with you?\" \n\n\"Yes, they are Marsh, would you like to talk to them?\" \n\n\"OK, here's the blonde guy.\" \n\nWe could only hear the one side of the conversation and when he finished, he handed the phone back to Ted. \n\nTed listened to the phone for maybe five minutes before he said, \"Ok Marsh, that works. The other thing that Dan mentioned is he's going to carry today because Jeff and Beth will be with him. Marsh remember I will be at the press conference with the governor late morning or early afternoon. You can reach me on this cell phone all the time, but I will be in the office in a little while so you will be able to reach me there also.\" \n\nWhen Ted finished his call, Terri stood up and said, \"Before you all get blabbing about what's going to happen today, is French toast ok for breakfast?\" \n\nEveryone looked at each other with many nods of agreement. Terri watched then announced that French toast was the item selected. As she got up to start the preparations to make breakfast, Kim and Beth also got up and joined her. With the three of them working together, it didn't take long before the wonderful aroma filled the kitchen. \n\nTed started the conversation with the information he learned from Marsh. The guy who talked to Marsh added the information Marsh told him. I asked a few questions before I was satisfied the coverage was going to be adequate. Shelly asked if she should be dressed in uniform when she went to work with Kim. \n\nI looked at Ted and suggested, \"People might wonder why Kim has a police officer following her around all day or for many days so if it's alright with you Ted, I think she should be in civilian clothes and an ankle or thigh holster.\" \n\n\"What's wrong with me carrying a purse? I don't like purses, but it's a well-known fact that a woman takes her purse with her everywhere she goes.\" Shelly inquired. \n\nTed laughed and said, \"I really can't see you carrying a purse, but I agree with Dan, it would cause too much suspicion for you to be in uniform. I suggest you wear slacks instead of a dress or skirt. That way if you must get tough, we'll be the only ones to know what your lovely pussy looks like, and not the world.\" \n\n\"You are a fucking pervert Ted Johnson! Do you really think I'd go to work in a dress without panties?\" Shelly responded. \n\n\"I don't think you would but there's always that one-time chance that you would forget to put some on when you run around here all the time without any. Hey sweetie I have a wonderful idea, if you stand up, we can all admire that cute little thing between your legs and let you know we all love you dearly.\" Ted joked. \n\nShelly stood up and parted her legs slightly and then used her finger to run up and down her crack for additional attention. \"If you don't watch it Ted Johnson, I'm going to come over there and sit right on your face and you might not survive to go to work this morning. You won't have to worry about Marion, I'll make sure I take good care of her personally.\" Shelly shot back. \n\nOne of the security guys said, \"Wow, is he your boss or something?\" \n\nShelly started laughing as she said, \"Ted stand up for a second.\" \n\nTed was good natured this morning, so he played along with Shelly's request and stood up. Everyone looked at Ted as Shelly said to no one in particular, \"See, Ted isn't as big a prick as he wants all of you to believe he is.\" The room exploded in laughter while Ted shook his cock at Shelly before returning to his seat. \n\nTed sat back down, with a smile spread across his face as he said, \"My dear, that was a very low blow, but I have to give you that one. I'm positive that Marion will have something to say about that when she comes home.\" \n\nShelly jumped up and went to the refrigerator and picked up the maple syrup and more butter because she saw Kim had picked up the large plate of French toast and Beth was reaching up for the plates. Mary also moved out to the kitchen and opened the silverware drawer and started to gather the needed utensils. Everything came together quickly and soon everyone was filling their plate and ready to eat. \n\nWhen breakfast was almost finished, everyone heard the sound from the monitor in the kitchen, that the front gate being activated and opened. Ted, Mary and Shelly immediately got up and Ted grabbed his pistol on the way to the front door. They quickly approached the door and opened it slightly so Ted could see who was coming in. He gave a sigh of relief when he saw my limo coming up the drive. He stood behind the mostly closed door until he saw only Joe get out of the car and approach the house. When he was on the porch, Mary opened the door all the way and Ted had stepped back to allow Joe to enter. \n\nJoe was dressed in his chauffeur uniform. He followed the three officers into the kitchen and suddenly there was a shuffle of chairs around the table and Ted brought another chair for Joe. Mary poured Joe some coffee and Terri went to the stove and made some more French Toast without even asking Joe if he was hungry. ",
        "Joe commented, \"I know I'm early Dan, but I didn't know what you had planned for your first day back in the office.\" \n\nWithin minutes, Terri set a plate in front of Joe and he looked up and thanked her. \n\nI told Joe I was glad he came early, and I'd take advantage of that and go to the office early. I also asked Joe if he had a pistol permit and he replied he has an unrestricted concealed carry pistol license. He told us as a chauffeur, he's held one for many years. Then he shocked me by saying that he has always carried a concealed pistol in his limo, just in case. \n\nTed mentioned to Joe he wouldn't get a personal reception at the door tomorrow like he did this morning. Ted went on to advise Joe there would be a security person down by the gate to survey anyone who wanted to come in, even if they had the code to open the gate. \n\nTed said, \"When you pressed the code into the gate keypad this morning, we were notified when the monitor over there sounded. We didn't know who was coming in so early, so we were ready just in case.\" \n\n\"We talked with Marsh this morning and one of the many things that we are adding is a security person at the gate, just like I had an officer down there before we left on vacation. Joe this security person will be a bit different than having a cop there. Don't worry if the security person wants to check inside your limo any time you approach the gate, even if you have the Morrisons with you. We are using an extra layer of security. Also, the security person at the gate, will radio the house to clear your entry every time.\" \n\n\"As I already said, the security person will be one of Marsh's people so they will rotate shifts. The girl who is going to replace these two guys at nine o'clock this morning, will be bringing her own radio and I will be stopping by the bullpen and picking up a third radio so I can hear what's going on also. What I'm saying is; this is the new normal until we put those bastards back in jail.\" \n\nJoe smiled saying, \"That's no problem, I'd rather them take a few minutes more to have my car checked than have someone get through and cause a problem.\" \n\nTerri smiled and thanked Joe for his consideration. \n\nI said, \"Well since you're here and had a chance to eat, I guess we can all go get dressed and get on the road. Kim, I want you and Shelly to ride with me, we'll drop you off at your office and pick you up this afternoon. That way we all stay together.\" \n\nAll of us excused ourselves as we stood up and headed for the stairs. I talked to Kim as we dressed and asked her to put her pistol in a bag or something so she could back up Shelly if any trouble started. I was surprised when she readily agreed to carry. I went to the closet and took out both pistols and checked them and then popped a clip in each one. I put the first round in the pipe and made sure the safety was on both weapons. I took out two additional clips and put one beside each gun. I went back to the closet and selected my shoulder holster and Kim let me know she was going to put her pistol in her briefcase. When all of us finished dressing we went back down to the kitchen. \n\nAlthough the two security guys had seen Kim and Beth completely naked, I noticed they had a hard time keeping their eyes off them when they were dressed. I must admit both of my lovely wives were model material and even if I was a little bit bias, the stares of those guys confirmed I was correct. \n\nI looked at Terri and Mary and reinforced what both Ted reported after talking to Marsh and what the one security guy said. I asked Mary to keep her weapon next to her all day even if the new girl was going to have her weapon near her as well. Terri came over to me and hugged me tightly as she whispered in my ear, \"Don't worry honey, I feel safe with all the preparations you and Ted have made. I love you and I'll be here when you get home tonight.\" \n\nI pulled back and looked into Terri's blue eyes and said, \"I love you sweetheart and I always will. You are my girl and I won't let anything happen to you if I can prevent it. I will use all that I have to make sure you are safe.\" \n\nKim and Beth joined us and each of them took a turn saying, \"I love you Terri.\" \n\nI let Terri go and stepped back before saying, \"Ok, let's get this show on the road, we've got work to do.\" \n\nAs the girls and Jeff walked towards the door I hung back and shook hands with Ted while I congratulated him again and wished him a good day. He wished me a good day and then I turned and followed the others. \n\nTerri and Mary had quickly made their way to the front door and made sure the tradition of hugs and kisses at the door was continued. \n\nWe entered the limo and Joe closed the door behind us. At first, we rode in silence until Jeff made his verbal observation that our mode of transportation this morning was one, he never expected to be in. I told him until I took Tom's job, I used to drive to work just like he had to do. \n\nWe stopped in front of Kim's work and she kissed both me and Beth before the door opened and she stepped out behind Shelly. I wished them a good day and I had Joe stand with the door open until they were inside the building. Joe then closed the door and drove to our workplace. This time I got out first and looked around before Beth and Jeff had a chance to exit the car. \n\nWe were early so I told Jeff to come up to my office with me. There weren't any of the normal people there to greet us, so it didn't take long to get to my office. When we arrived all three of us went in and sat down. I told Jeff, \"I know you have a responsibility in your department, but I want you to stop by here hourly, so I know all is well. I also told him if he ever had any little hint of trouble, he was to hightail it to this office immediately. I reminded him, even though I didn't have to, that he was also in need of protection just like the girls. He nodded his head to indicate he understood, and he thanked me again for caring about him and his family. \n\nWe talked for a little while until my phone alerted me to a call and when I picked it up, Kelly said, \"Good morning Dan, may we come into your office?\" \n\nI asked who \"we\" were, and she responded that Allison was with her. I told her to come in. \n\nWhen they came into the office they sat down, and I inquired of them why they came in so early. They looked at each other and laughed before Kelly said, \"Dan it wasn't planned for both of us to be here now, I swear. I met Allison down by the front door and I asked her the same question. I'll admit I planned for me to get here early so I could see what was on my desk and clean it up before the day started.\" \n\nAllison smiled, \"And I planned to get here early so I could see what was on my desk and clean it up before my day got started.\" \n\nI looked at Beth and said, \"Honey it seems to me that your pick of secretaries was right on the money. I'm sure the other candidates would not have been as committed as these two wonderful girls are.\" \n\n\"Dan, it makes work easier when we have two bosses who share the same personality and have something other than derogatory comments to give us.\" Kelly was quick to respond. \n\n\"I second the motion.\" Allison added. \n\n\"Well I'm certainly glad to hear you like your boss and I'll remember that when the next trip to some exotic place or Hawaii comes our way again.\" \n\nMy phone buzzed again and this time when I picked it up Taffy excitedly exclaimed, \"YOU'RE REALLY BACK. OH, THANK GOD! May we come to see you?\" \n\nI told her to come in, everyone else was here so she might as well join us. Seconds later two screeching girls bounced through my office door and raced over to give me a hug. Taffy Davis and Connie Swensen tried to talk at the same time inquiring about our trip to Hawaii and asked why we came home early. \n\nI sat in my chair totally stunned that the small group of people that Beth and I hired had come to the office early so they could get some extra work done before starting their day. I felt the love and I'm sure by the look on Beth's face, she did as well. \n\nI asked the girls if everything was going good for them and both excitedly answered \"YES!\" \n\nI let them babble for a few minutes before I said, \"Listen ladies, we'll have to continue this later, I want to catch up and set up some meetings while Kelly and Allison want to clear their desks. Both girls hugged me again and then promptly left the room. \n\nI told Kelly to call the shop and ask them to bring a TV set up to her office and get it tuned in to the local news station. I told her to monitor the TV while she works and let me know when the governor makes his announcement. I told her I didn't expect it to come on until late morning or very early afternoon, but I wanted to see it when it happened. That way I could get my work done and turn on my big screen TV in my office when it came on. \n\nI looked at Beth and asked her to set up a meeting at nine with all the department heads and at the same time I asked Allison to have conference room number one set up with coffee and pastries. I also asked Allison to be present to take the notes at this meeting. While I was at it, I asked Jeff to prepare a brief statement knowing that he would have to gather the information second hand and he didn't have much time to do it. I also told him not to worry about a detailed report this time if he presented some information on how his department was doing. \n\nEveryone got up and quietly left my office and I picked up the phone and called home. Terri answered the phone as usual and I asked her how things were going, and she told me everything was quiet. I told her to remember my office number was on speed dial and don't be afraid to use it. We said our goodbyes and I hung up. \n\nI called my attorney Ed Hurley and spoke with him for a few minutes but that's all I needed to pass the great news on to Beth. \n\nAfter I hung up the phone, I turned my attention to all the papers on my desk. Once I was involved in my work, time flew by and soon Beth used the intercom to let me know my meeting was coming up in fifteen minutes. I asked her to step into my office which she did only seconds later. I looked at the beautiful rings on her left hand and said, \"At this meeting, you know someone is going to see your rings and start asking questions. What are you going to tell them?\" \n\nBeth looked at me as she said, \"I'm going to tell them I married the greatest man in the world while I was away. That he's the love of my life and we will never part.\" \n\n\"That's lovely sweetheart but they are going to ask you what his name is and what are you going to tell them?\" I inquired. \n\nBeth came over and put her arm around me and said, \"I'm going to tell them my name changed from Thompson to Morrison. Then I'm leaving the rest of it unsaid.\" \n\n\"Well, Mrs. Morrison, you'd better head down to HR and change your name from Thompson to Morrison so there won't be any confusion when some of the wicked gossipers start checking up on you.\" \n\n\"I can't do that until we get word that the judge accepted my name change application.\" Beth argued. \n\n\"It just so happens I called Ed a little while ago and asked him how your attorney Brian Greene made out in court and since Ed is the head of the firm, and he knew what we are doing, he told me you are officially Beth Morrison.\" \n\nBeth let out a scream I'm positive Terri would have heard at home. I know my ears were ringing as Beth grabbed me and pulled me out of my chair and wrapped herself around me. Allison and Kelly slammed open my office door and asked what the hell happened. I had to answer because Beth was crying and had her face buried in my shoulder. \n\nWhen I said, meet the official Mrs. Beth Morrison both rushed to Beth and congratulated her. Beth switched from my shoulder to their shoulder and suddenly I had three ladies crying in my office. I tried to comfort them, but I couldn't get a word in edgewise. \n\nFinally, I said, \"Ladies, you'll have to dry your eyes, or we'll have to postpone the meeting under flood conditions.\" \n\nMy attempt at being funny went over like a loud fart in a church. All three of them turned and looked at me with a less than happy face. I knew then and there I was beat, so I just sat down in my chair and shut my mouth. The three of them headed into my bathroom and shut the door, that's when I really knew I was in trouble. \n\nI waited patiently, if you can call it that. I kept checking the clock on my desk and watching the seconds tick by. It seemed like they were in there for an hour when it was only five minutes. They came out, all smiles and Beth came over to me and kissed me before she said, \"Beth Morrison has a wonderful ring to it. Thank you, sweetheart, I love you.\" \n\n\"I love you too Beth with all my heart. We'll celebrate later at The Hole. But first, let's go do some business. Kelly if the governor comes on before we're out of our meeting, come and get me. Allison, did you have any problems getting the people to set up the room?\" \n\n\"No, I didn't. Everything went smoothly.\" Allison confirmed. \n\nWe entered the conference room and we received a standing ovation. I took my place with Beth on my right and Allison on my left. I smiled as I said, \"Brownnosers, give the boss a standing ovation and expect him to go easy on you. When I was sitting in your chair out there, I wouldn't have thought to do that with Tom Banks up here.\" \n\nFrom somewhere in the back of the room, someone said, \"That's bullshit, and you know it.\" \n\nI responded with, \"It sounded good when I said it. Ok, make sure you get your coffee and pastries before I start, because I don't want you to be distracted during our meeting.\" \n\nI started the meeting just like Tom used to do because I always liked his format. We went around the room and some of the departments showed some improvement while others were almost stagnant. I had many questions for the less than efficient departments. I reminded each of my department heads that I came up from the bottom of the company. I worked in most of the departments of the company before I became a manager and then into a department head. I told the department heads that were down, I would come and meet with them one on one and see what we could do to build them back up again. I told them I would be a hands-on boss instead of sitting behind my desk crunching numbers. At the end of the meeting I told each department head they had a chance to take my job some day when I'm ready to retire. \n\nAt the end of the meeting we stood around for a few minutes before returning to work and drank some coffee and ate up all the pastries. Many of the guys I had worked with came up and congratulated me and I thanked them and looked forward to working with them again, even though it was in a different capacity. \n\nWhen I got back to my office Kelly told me Marsh had called and wanted me to call him back ASAP. I left everyone behind and went into my office and closed the door. Before I could call Marsh, Beth peeked into my office and pointed to herself and I waved her in. She sat down across the desk from me, so I put my phone on speaker phone. When Marsh answered his phone, I told him right away he was on speakerphone and only Beth and I were in my office. \n\nMarsh said, \"Thanks Dan. Beth can hear what I have to tell you.\" \n\n\"I hope you have some good news for me.\" \n\nMarsh said, \"I sent a team down to Flores, Guatemala to retrieve the body of Bill Jefferson this morning. Apparently, he was shot during the jail break and was still able to move enough to get away, with some help. He was being cared for in a small clinic but with the unsanitary conditions down there, he is reported to have contracted an infection that killed him.\" \n\n\"I sent a message to Ted the minute I found out so he can use that information for his press conference. It seems that those guys have someone behind them to get that far away in short period of time. I wanted you to know we have one of the three down and two more to go.\" \n\nBeth and I listened to Marsh tell us the news and a smile spread across our faces. When he was finished, I said, \"It sounds to me like he might have died a slow and painful death and I'm not a bit sorry to hear that. I'm not one to hold grudges but for what they did to our girls and untold number of other girls which we don't know about, they are well deserving of a slow and painful death.\" \n\nMarsh agreed with me but then he turned back to the logistics of how the three of them moved so far. We compared notes for a few minutes and then he told me Jimmy was going to broaden the search. He said Jimmy really wanted to get a live one so he could interrogate him. When he finished telling me the news, he told me he'd keep in touch if anything more came up. \n\nI hung up the phone and Beth and I talked for a few minutes more. Beth said she had some work on her desk and need to get it done so she got up and kissed me before she left the office. \n\nAround noon Kelly came in and told me she saw the governor was going to hold his news conference at one o'clock so I could finish up what I was doing in time to watch it. I paged Beth and told her to come into my office a little before one o'clock to watch the governor. \n\nI called Kim and let her know the governor's press conference would be on at one o'clock. I also told Kim the news Marsh gave me, and she was also very delighted to hear Bill was dead. \n\nI paged Jeff and told him the governor's press conference was going to be coming on at one o'clock so if he wanted to see it, he could come to my office. He told me he would be up after he finished talking to one of his people. \n\nI worked on some papers and cleared my desk by the time Jeff came into my office. I told him the news Marsh gave me and he was very happy, but he said the two worst ones were still on the lamb. He told me Bill only waxed the hair off each girl's pussy and any other body parts he was directed to do. It was the other two who made the girls do such atrocious things like fuck or suck the cock of anyone they chose. \n\nWhen the time came, everyone came into my office and we watched my big screen TV as the camera panned around showing us there was a rather large crowd gathered in front of the police station. NBC, ABC and CBS news media had cameras set up to film the event for their own news stations later in the day. There were countless news reporters present also. \n\nWe saw the governor talking to his press secretary before he and Ted approached the podium. Being the politician that he is, the governor recognized various people in the crowd before he went straight into the business of why he was there. He didn't hesitate to tell everyone how upset he was that a group of unscrupulous residents of his state and possibly other states are suspected of perpetrating heinous crimes against young girls. He went on to state some of the girls have been treated for various injuries and there is additional physical evidence which shows there are more than just a few girls who were raped and abused, photographed and made to perform in sexual type movies. He encouraged any female that was abused by Harold Gordon, Pete Jensen and Bill Jefferson, to contact the special eight hundred number which he announced, to call, and report their abuse. \n\nHe gave a brief description of the jail break stating by all reports he'd received, the prisoners were in their cells at the time of the breakout, so there must have been some inside help for them to get out and get away. The governor also said, by the reports he received the former police chief was a dirty cop and was as knee deep in the shit as the three perpetrators of the original crime. He told everyone it is reported the chief is the one who facilitated the escape and was shot and killed in the double cross, with his own service weapon. He then announced that anyone who participated, bought a film or tape of the abuse or knowingly remained silent about the girl's abuse, would be arrested and prosecuted, to the fullest extent of the law. "
    ],
    "authorname": "RecHiker",
    "tags": [
        "brother sister sex",
        "daughter",
        "exhibitionism",
        "father",
        "father daughter incest",
        "incest",
        "mother",
        "nude",
        "sister"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-morrisons-ch-28"
}