{
    "title": "Bless This Broken Road",
    "pages": [
        "Author's Note: Just a short tale of betrayal, broken lives and learning to live with the scars that come from it. This would probably be considered a BTB (bitches &amp; bastards) type of story. If those types of stories ain't your thing then I'd skip this one. Why waste your time? \n\nMy thanks to WindySwimming and Mostera1. WindySwimming for his editing and Mostera1 for his input. They made this story a whole lot better than when it started. \n\nBless This Broken Road - Written by Marcus Hummon, Bobby Boyd and Jeff Hanna Performed by multiple artists including the Nitty Gritty Dirt Band and Rascal Flatts. \n\n**** \n\nI loved just lying in bed on a Sunday morning. I admired the way the N'awlins dawn slowly began to peek over the horizon and shine through our bedroom window. Of course the fact the early morning light was gradually revealing a naked woman sleeping next to me had a lot to do with my mood. \n\nShe lay on her stomach, her head turned away from me, face buried in her pillow. But I knew she was awake, I could hear her soft, shallow breathing. I smiled realizing we were watching the same sunrise. \n\nI gazed upon my wife's long, lean form. Her 150 pounds barely made her six foot frame look healthy. I grinned knowing now that she was finally healthy, crushed beneath her where two beautiful breasts that she frequently reminded me were 'nearly C's'. When I'd met her she was not even 130 pounds and they were 'barely A's'. \n\nGently I began caressing her pale skin, carefully brushing her dark curls from her shoulder. Softly I touched a small circular scar on her arm and felt her body tense. I leaned over and kissed the back of her neck. \n\n\"Shhh,\" I whispered into her hair. \n\nShe reached up and gently stroked my hand, her permission for me to continue. It was a ritual we'd performed many times over the past five years. Thankfully it was needed less and less. It had taken years for my wife to finally come to the place where she'd only flinch when I touched her scars. \n\n\"I love you, beanpole,\" I said kissing her bare skin and referring to one of her few cherished childhood memories. Beanpole had been her mother's nickname for her. \n\nShe sighed and I could barely make out her hushed words. \n\n\"I love you too, sugah... please, please never leave me.\" \n\nCarefully I traced the circular ridges that dotted her arms. They weren't as noticeable as the angry scars on her back. My beautiful, marred angel had survived a nightmarish past that had tried to crush her spirit. It had succeeded for a time but over the past eight years, she had slowly regathered her life. Jordan still struggled with her self-esteem but she continued getting stronger and more confident each month. \n\nI studied the long, ugly scars that crisscrossed her back. They reminded me of a road map and the words of a song flashed in my head. They spoke of past relationships as being broken, jagged roads that finally lead us to our true love. \n\n\"Every long lost dream,\" I whispered in her ear as she softly sighed, recognizing the song. \"Led me to where you are.\" \n\nWe all have life changing events in our past. Fate throws out all kinds of twists and turns, dip and potholes in our road of life. I guess how we deal with those times determines what kind of lives we have. \n\nEven with her frailties and vulnerabilities my wife had an incredible strength deep inside that was only matched by her passion. It had been that strength in the midst of her weakness that had saved me. It had brought me back to life. \n\nI was in awe of the way my wife was overcoming her past. I'd like to say I'd dealt with mine as well... I hadn't. I'd let my worst times drive me over the edge and into the bottom of a bottle of tequila. \n\nWhat put me there? That's easy. It was being betrayed by those closest to me, including my ex-wife Britney. \n\n**** \n\nWe got married too young. I guess that's as good is any excuse. There were lots of other things that factored in but basically we were just too immature, too stupid and confused lust for love. Well, at least one of us did anyway. \n\nI was living in Texas at the time. I can't say a lot about my upbringing. My family consisted of my aunt and uncle, who raised me as one of their litter, along with my five cousins on a west Texas ranch. \n\nI can't complain too much since I was fortunate not to have gone through the foster care system. Mom got knocked up by some guy and then dumped me on her sister's ranch when I was two. I never saw her again. My aunt and uncle are good enough people but I never fit in with the rest of their herd. \n\nLife on a ranch in the middle of nowhere really is like living on another planet. I escaped when I went to college. Unfortunately after I left I had little contact with my relatives. \n\nIt was in college where I met Brit at an after game party. She was a junior and I was a sophomore and our football team had just beaten some no name school. It was as good as any other excuse for a party back then. \n\nThe kegger was held at a big, old house off-campus that had a bunch of girls living in it. My roommate had gotten an invite and I'd just tagged along. I drove since he was going to meet his girlfriend at the party and go home with her afterwards.  \n\nI fell in lust with Britney from the first moment I saw her. She was the kind of girl who looked drop-dead gorgeous when she was all dressed up. However, at the moment she wasn't the raving beauty she usually was. When I first saw her, she looked like she had been partying hard for several days. Still even with the now stringy hair and bloodshot eyes she looked hot in her skinny jeans and halter top. \n\nShe had a pretty, round face framed with bleached blonde ringlets and a nice figure. She'd gained her freshman fifteen and it looked like she carried it all in her butt. How could I tell? Well her bubble butt had the jeans she was wearing screaming to rip in places that weren't considered chic. \n\nI felt the spark from across the crowded room when our eyes met. She tried to seductively sashay over to me. I say tried because she was obviously drunk and her sashay was more like an epileptic stagger. \n\nAfter an agonizing and downright humorous thirty seconds, she finally made it over to me. She draped her arms around my neck and uttered those magic words. It's the male equivalent to 'you complete me'; a saying that has made countless female hearts beat faster. \n\nShe peered into my eyes with her big, green, unfocused eyes and then changed my life with only two words. \n\n\"Wanna fuck?\" she growled. \n\nOMG! A girl after my own nineteen-year-old heart! Tapping into my vast knowledge of the English language, I gave her my best and most romantic line in an attempt to forever win her heart to go along with that body. \n\n\"Uh, yeah.\" \n\nOkay, the blood must've drained from my brain. I'm fairly intelligent, contrary to what many people may think, but I'd been drinking too! \n\nBrit took me by the hand and led me upstairs. She took us to one of the bedrooms and opened the door. Inside was a girl riding atop some guy. As she bounced up and down on the guy, Brit stumbled into the room. \n\n\"What the fuck?\" Brit yelled as she leaned against the door. \n\n\"Hey get a room!\" the girl yelled back. \n\n\"This IS my room, bitch,\" Brit slurred. \"And I think that's my ex, too! Bobby?\" \n\n\"Oh shit, Brit?\" the guy groaned. \"Damn! That's why this room looks so familiar!\" Brit pulled me back into the hallway and slammed the door. \n\n\"Assholes!\" she screamed at the door. \n\nTurning to me she tried to focus on my eyes. \n\n\"You got your own place?\" \n\n\"An apartment,\" I replied. \n\n\"Your roommate gone?\" \n\n\"He's downstairs. Probably already passed out or left with his girlfriend.\" \n\n\"You got a car?\" \n\nI nodded. \n\n\"How far away is your apartment?\" \n\n\"About ten minutes.\" \n\n\"Good!\" she said leading me back downstairs. \"Let's see if you can get me there before I eat you!\" \n\nWhen we got downstairs she led me over to a blonde girl who was a few inches taller and had breasts larger than Brit's C-cups. The girl was also wasted but was obviously having a good time as she was teasing several guys and girls who were hovering around her. I wondered how long it would be before she'd probably flash them all her tits. \n\n\"Anna,\" Brit blurted out. \"I'm going to go to umm... what's your name?\" \n\n\"Brad,\" I said chuckling. \n\nBrit flashed a killer smile at me and turned back to Anna. \"I'm going to Brad's apartment and fuck his brains out!\" \n\nAnna drunkenly glared at me while the group laughed. \"Alright stud,\" she said, \"let see the driver's license.\" \n\nConfused I slowly pulled it out. \n\n\"Show it to me,\" Anna ordered. \n\nI held it up as she dug something out of her purse. When she pulled her cellphone out I knew what she was doing. She took several pictures of my license. \n\n\"Alright, Brad Marshall, you take good care of our girl. Remember,\" she slurred, \"we know where you live.\" \n\nBrit squealed, grabbed my hand and dragged me towards the front door. \"Don't wait up, Mom!\" she yelled back over her shoulder. \n\n\"Mom?\" I questioned. \n\n\"Yeah,\" Brit laughed. \"She looks after me and rides my ass about things I should do. Of course she doesn't ride my ass like you're going to, right cowboy?\" \n\nIf I didn't think Brit was serious about attacking me before we got to my apartment she proved me wrong. Of course it was funny as hell watching her try to dig my dick out of my jeans. My erection had made my jeans an extremely tight fit and Brit had major problems trying to stay balanced in a moving car. Thankfully we got to my apartment before she actually tried to get me in her mouth and had the chance to bite down if she lost her balance! \n\nWe staggered into my apartment and began attacking each other. In our rush to get to each other's body, our clothes weren't being fully discarded. She had my shirt off me, but my jeans and boxers were down around my ankles. I had her bra off, but her top was still around her neck and her panties and jeans still dangled around her right knee. \n\nOur lust was so overwhelming I barely had the chance to take in the sight of her beautiful, young body. Her lovely breasts looked large on her five and a half foot body. Each soft globe supported a soft, pink areola with a tiny strawberry on top. Her body wasn't muscular, more curvy and sexy. But it was her exquisite bubble butt that grabbed and held my attention. It was so round and inviting, I think I started to drool before Brit was on me. \n\nWith a stout shove she pushed me back onto the couch and launched herself on top of me. She spun around and pushed her gorgeous butt into my face. The smell of her excitement was intoxicating as I buried my face into her pussy. She let out a long moan as my tongue began to explore. Moments later I felt warm, moist lips envelope my manhood. As she began to sink lower and lower taking me deeper into her mouth, I felt her body spasm as she gagged. After a second attempt and the resulting gag, she spun around on my chest and squinted down at me with her barely visible green eyes. \n\nGrinning, she straddled me, slipping my rock hard erection into her now gushing tunnel. The intense heat of her pussy almost made me lose it right then. Fully seated, she closed her eyes and gasped as she began rocking back and forth. Slowly she began to find a rhythm, sawing herself on top of me. \n\nI reached up and fondled her pert breasts as they gently swayed with her movement. She let out a deep moan and pressed herself even harder into me. Then her eyes flew open wide. \n\nThere are very few things that can distract a horny, teen-age guy in the middle of getting his rocks off. The girl he's with throwing up all over him is one of those things. There's nothing like the smell of bile and vomit blended with rum and fruit juices with the added surprise of Cheetos mixed in, to really kill the mood. \n\nThen as if things couldn't get any better... Brit passed out. She flopped forward like a ragdoll. Between our half-dressed, naked bodies and the toxic waste that had once been in her stomach, we made a disgusting human sandwich that took months for me to purge from my memory. \n\nI quickly rolled her to the side and jumped off the couch. I barely made it to the bathroom before I lost it. I spent the next several minutes worshipping the porcelain god. \n\nWhen there was nothing left to leave on the altar, I staggered back into the living room. I was met by a surreal vision of an incredibly sexy blonde with her delicious ass up in the air ... covered in puke. I was sure this was one of Dante's levels of hell. \n\nWith great effort, and much gagging, I carried Brit into the bathroom and put her in the shower with me. She groaned a few times as I stripped the rest of her clothes off and rinsed them off with us in the shower. \n\nAs I washed her, I won't tell you I didn't toy with more than a few fantasies dancing in my drunken head. I didn't act on them though. I ended up putting a naked Brit in my bed and went back to try and clean up what I could of the couch. I took her clothes and put them in a garbage bag and dumped them in our utility room. I thought about taking them down to the apartment's laundry room but by then I was exhausted. \n\nI did the best I could with the couch however there was still a faint odor that sealed its fate. My roommate and I would be getting a new used couch in the near future. Exhausted, I dumped my tired ass into my roommate's bed. \n\nSunday morning came a lot sooner than I expected. I woke to the sound of two girls arguing in my living room. Forcing my eyes to open, I saw it was 7:16 in the morning! Who the hell fights that early on a weekend? \n\nDragging myself out of bed, I staggered into room and was met by a crying Brit and an obviously pissed off Anna. \n\n\"You bastard! Where the hell are her clothes?\" Anna yelled. \"I've heard of guys trying to keep panties as a souvenir but all her clothes? You really are some kinda asshole perv aren't you?\" \n\nI was stunned. I was also still trying to wake up. Brit walked over to me wiping the tears off her face. I noticed she was wearing different clothes and vaguely remember thinking that Anna must have brought them. \n\n\"You bastard!\" Brit cried. \"How could you do that to me?\" \n\n\"What? I didn't\u2014\" \n\nI didn't finish my sentence before I felt her hard slap across my face. \n\n\"You son of a bitch! I'm going to report you to the cops and charge you with date rape.\" \n\nI was absolutely stunned as I watched them storm out of my apartment, slamming the door behind them. It wasn't but a few minutes later before my anger started to boil. I went and got dressed and then drove back over to Brit's house. I made sure I had what I needed before walking into the snake pit. \n\nWhen I got there, I was met at the door by one of the girls who lived there. \n\n\"She doesn't want to talk to you, asshole,\" she sneered. \n\n\"Well she'd fucking better talk to me unless she wants this to be not only all over campus but in court as well. And I can guarantee you she'll come out looking like the fucking, drunk slut she is. I wonder how mommy and daddy will like that!\" \n\nThe girl's shocked face told me I'd made an impression. She told me to wait and quickly ducked back into the house. A moment later she returned and led me into their dining room. \n\nThe house looked like a disaster with reminders of last night's party scattered everywhere. Seated at the dining table were Brit and Anna, the girl who answered the door plus two other girls that I guessed were their housemates. All five females glared at me like I'd farted in church. \n\n\"You've got some nerve coming here,\" Anna snarled. \n\n\"Shut up, bitch!\" I snapped obviously shocking her. \"You came into my home and accused me of date raping the slut sitting next to you. I'm here to tell you that rumor better sure as hell stop and mean right fucking now or I'm going to make the lives of every whore that lives here a living hell! \n\n\"I'll publicly sue your asses for defamation of character. Then I'll go find every boyfriend and one night stand you've ever had and make sure everyone, including your families, is aware of every nasty, sordid detail. I won't even bother to make sure it's true, since the truth doesn't seem to mean shit to y'all. Will that open me up for the same kinda lawsuit I'm planning to file against you? Yeah, but the damage will have already been done, kinda like be labeled a date rapist. \n\n\"Since you were both wasted last night let me also remind you she announced to everyone she was going to my place to 'fuck his brains out.' I'm sure I'll be able to find a couple witnesses to that. \n\n\"As for reporting me to the cops, please do. If you want I'll call them for you. Even though I tried to clean it up, I'm sure there's plenty of her DNA still left on my couch.\" \n\n\"So you admit to having sex with Brit?\" Anna snapped, trying to go back on the attack. \"Even though you knew she was drunk?\" \n\n\"Hell yeah, but she wasn't the only one drinking. Listen, I went to a party last night and had this good-looking blond with a sweet ass stagger up to me and ask me if I wanted to hook up. Of course I said yeah! Then she took me upstairs to her room, only to find Bobby, her ex, being ridden like a racehorse by some redhead.\" \n\nI could tell last night's memories were starting to clear for Brit and Anna. Their three housemates sat there with their mouths open. \n\n\"So she said lets go to my place. After getting a mug shot of my driver's license we make it to my apartment where we start to do it on the couch. Just as she started really getting into playing cowgirl, she turned a dream night into a nightmare by throwing up all over herself, me, and my couch! \n\nAll five gasped. Brit put her head in her hands and groaned. She was beginning to connect all the dots. \n\n\"That's why I'm positive her DNA is all over my couch. I ended up showering us both off and dropping her passed out ass into my bed. Then I went and tried to clean up before crashing in my roommate's bed. As for her clothes ...\" \n\nI opened the trash bag I had with me and poured out Brit's clothes out onto the table. Even though I'd rinsed them out, being wet and sitting overnight in a plastic garbage bag didn't lessen the smell. Everyone, including myself, gagged. \n\n\"Here are her clothes,\" I snarled at Anna. \"And if you want more evidence just come over to my apartment and take a whiff of my couch. Sorry I'm not the perv you've tried to make me out to be, bitch! \n\n\"Of course, if I'd known what kinda hell I'd take just for being a nice guy, I would have done things differently. I could have just dumped her half-dressed, stinking ass on the front yard. Or I should've just hosed her off, stuck her pretty ass in the air and called a bunch of guys I know. She wouldn't have had a clue who or how many guys she fucked last night.\" \n\n\"So now that you've heard what actually happened last night, I better not hear one fucking word about date rape. I've seen what happens to guys labeled that and I'm not gonna let some drunk slut ruin my reputation when I didn't do anything. Am I clear?\" \n\nAll of them reluctantly nodded. I tossed the empty garbage bag onto the table and turned to leave. \n\n\"Um, Bruce?\" Brit stammered, a tear running down her face. \n\n\"It's Brad and you might as well save it. There's not a damn thing you can say that will make this better. You're lucky you can barely remember last night because it'll be burned into my memory for a long time!\" \n\nAnd that's how it ended... at least for a while. I never heard any rumors so I let it die. I did get a letter from Brit and a card from Anna saying they were sorry. I kept them in case I needed more evidence. \n\nA month later I was at another house party when someone tapped me on the shoulder. Turning around I was surprised. There stood Brit, looking all the part of a hot co-ed but this time I could tell she wasn't drunk. ",
        "\"Can we talk?\" she said softly. \n\nI stood there silently staring her. It was obvious she was uncomfortable She was beautiful but I wasn't sure this was a conversation I wanted to have since I was still trying to put our last meeting behind me. \n\n\"Please?\" she said peering into my soul with those deep green eyes. \n\n\"Alright,\" I said sighing. \n\nShe flashed me her smile and it brought a smile of my own to my face. She led me outside to the back patio and we found a couple chairs to sit in. I guess the patio light was out because it was dark out there. The only the light was coming from inside the house so where we were sitting was draped in shadows. Sitting in the dark helped hide her distracting looks and I relaxed. \n\nShe was quiet for a moment before she spoke. \n\n\"I'm not a slut,\" she said her voice wavering. I could tell she was trying not to cry. \n\n\"Listen,\" I said hoping to end the conversation before it really got started. \"There were a lot of things said\u2014\" \n\n\"No!\" she said loudly, \"I mean yes there were a lot of things said but no, I'm really not a slut like you think. What happened that night wasn't a normal for me. I saw Bobby with that redhead earlier and got a little wild trying to show everyone, including myself, that I was over him.\" \n\n\"I'm sorry,\" I said quietly. \"I didn't know you still had a thing for him. I'd like to say I wouldn't have taken you home with me if I'd known, but I can't honestly say that. It's not often I have a beautiful girl throwing herself at me.\" \n\nI could hear her snort, and then softly laugh. \n\n\"Well like I said I normally don't get so wasted and I sure don't act like that. I haven't been that stupid since I was a first semester freshman. And as for being hung up on my ex, not likely, it was more a pride thing. He showed up in my home trying to rub our break-up in my face. I acted more out of anger than hurt.\" \n\nWe sat quietly for a few minutes before I heard her softly giggle. \n\n\"So... you think I've got a sweet ass?\" she teased. \n\n\"Britney, you know you do. You're not stupid. You know damn well how you look and what that does to most guys.\" \n\n\"Yeah, some guys are easy,\" I could hear her smile. \"Right now I'm only interested in how I affect one guy though.\" \n\nI paused, wondering if she was toying with me. Then I wondered if I really cared or not. \n\n\"And who is this guy and does he want to be your next victim?\" \n\nI heard her get up and she stepped into the light. She looked incredible. I was sure there were prettier and hotter looking girls on campus but at the time I couldn't think of one. \n\n\"Well,\" she said smiling. \"As far as being a victim, that's totally up to him. However, I hope he'll look at it as a reward for taking care of me when I was vulnerable. Or he could view it as me trying to give him the most sincere apology I can for how I reacted the morning after.\" \n\n\"I... umm Britney...\" \n\n\"Brad, its Brit. And I would like you to take me back to your apartment where I can thank you properly.\" \n\nEven in the poor lighting I think she could see my less than enthusiastic response. \n\n\"Wow,\" she said softly. \"Rejected.\" \n\n\"I'm sorry Brit,\" I said gently then chuckled. \"Although I doubt that's happened to you often, but then again hopefully you don't go calling many guys rapists.\" \n\nShe grimaced. \"No,\" she said softly. \"That was the first and only time.\" \n\n\"So you see,\" I calmly explained, \"I'm more than a little wary about what will happen if I take you to my apartment again. Is this some kinda revenge or setup? Hopefully you see my concern. Hot drunk girl comes on to me then calls me a rapist, then offers herself to me a second time? Sounds like a porn fantasy, doesn't it?\" \n\nI watched her smile spread across her face. \n\n\"Well,\" she said grinning, \"some fantasies can come true. Let's see if we can make this one a reality.\" \n\nShe took me by the hand and led me back into the house. After looking around she dragged me in the direction of her best friend Anna and some guy standing beside her. \n\n\"Anna! Tim!\" Brit shouted before we got close. \n\nAnna's smile disappeared as soon as she saw me. I thought I saw her mouth the words 'oh shit.' I was sure when we walked up to them. \n\n\"Oh shit,\" Anna said staring at Brit. \"You're really going to do it, aren't you?\" \n\nBrit grinned and nodded. \n\n\"Well, I will if he accepts my offer.\" \n\n\"Yeah right,\" Anna smirked, \"like any guy with a pulse would turn that down!\" \n\nAnna's boyfriend looked at all three of us confused. Anna looked at him and smiled. \n\n\"This is Brad,\" she explained. \n\nTim must have known the story and recognized my name because he nodded and went back to drinking his beer. \n\n\"And Brit,\" Anna continued, \"is going to take him home and give him an 'I'm sorry I was such a bitch' fuck!\" \n\nTim choked on his beer as both girls laughed. Anna turned her attention back to me and studied me. \n\n\"You having doubts this is on the level?\" she asked already knowing the answer. \n\nI nodded. \n\n\"Hell I would too, but I can tell you it is. Brit's talked about this a lot since that morning. We both felt like shit for the way we treated you ...\" Anna paused and smirked again. \"But don't you go fantasizing about a threesome! I'm not that sorry and these tits are reserved for my boyfriend here.\" \n\n\"So those are mine?\" Tim said grinning. \n\nBrit and Anna laughed. \n\n\"They should be,\" Anna chuckled, \"You play with them even more than I do!\" \n\nTim's face turned beet red and I found myself laughing with the girls. Then Tim's face began to morph into a huge toothy grin. \n\n\"So does that mean I get to fantasize about a threesome if Brad can't?\" \n\nThis time both Tim and I laughed as the two girls were momentarily stunned. \n\n\"Only in your dreams,\" Anna scolded as she slapped him on the arm. \n\nI guess that was Brit's cue for us to leave. We said our goodbyes and headed for the door. Just as we were leaving Brit turned and yelled back at Anna. \n\n\"Don't wait up, Mom!\" \n\nI froze like I'd been hit by lightning and Brit tripped over me. She stared up at me with a deep concern. \n\n\"That's the same thing you said that night,\" I explained through gritted teeth. \n\nI saw her concern turn briefly to fear and then she got a determined look on her face. \"Come on,\" she said calmly. \"We've got some bad memories we need to erase and I know just the memories I want to replace them with!\" \n\nIn all honesty she did just that. When we got to my apartment she broke any tension by teasingly asking if it was a new couch. It was. She then led me into my bedroom and began undressing me. Within a couple minutes she had me flat on my back and had impaled herself on me. Whatever alcohol distorted memories I had of her that first night were nothing compared to the stone sober vision I now had as she ground and rode on top me, driving us both to a quick explosive orgasm. Her body was as tight and soft as I'd remembered and her passion was overwhelming. \n\nShe took me four times before the sun came up the next morning. The first two times were pure animal lust but the last two were something more. She still couldn't give a blow job worth a shit. But her ass and body, the exquisite taste and heat of her kisses, the way she rolled her hips as she ground herself into me and the mewing sounds she made as she orgasmed; those were things quickly burned into my memory. \n\nBrit told me later that the first time was because she really was sorry, the second time because she wanted me so damn bad and the third and fourth time ... because she was falling in love with me and never wanted to leave. \n\nAfter that night, I didn't want her to leave either. \n\n**** \n\n\"You were thinking of her again, weren't you,\" Jordan's soft, Southern voice asked bringing me back to the present. \n\nShe'd rolled over and we were now face-to-face. I stared into her mesmerizing hazel eyes that were full of concern. \n\n\"Huh?\" \n\n\"You were thinking of her again.\" \n\n\"Kind of,\" I replied quietly. \"More like I was thinking of my own broken road and that always involves Britney.\" \n\nI smiled, leaned over and kissed her gently. Softly I began singing again. \n\n\"Others who broke my heart they were like Northern stars, pointing me on my way into your loving arms.\" \n\nShe smiled, rolled back over then snuggled deep into me. I felt her tight little butt press hard into my groin. My response was both immediate and extremely noticeable. \n\n\"Sweetheart,\" I whispered in her ear, \"you do that and we'll have a little repeat of last night.\" \n\n\"Promise?\" she giggled and wiggled her butt even more. \n\n\"Oh yeah,\" I groaned. \n\n\"Hmm, well tell you what, you hold me for a little while then I'll make sure you can't get out of bed until noon.\" \n\nI laughed. I knew there was no way we'd be able to stay in bed until noon but the thought of her trying to make it happen sure was interesting. \n\n\"Deal,\" I said kissing the back of her neck. \n\n**** \n\nBrit and I had a rollercoaster romance. We were both overly passionate and that led to some mind blowing sex and many days right out of a fairytale storybook. That same passion made for some monumental fights as well. The good times were great, but those few bad times were painful. \n\nBrit was still a party girl and her girl's night out with Anna was a constant source of arguments. However the makeup sex was incredible and as far as I knew she never cheated on me. We both thought we were in love so twenty months after we'd met, we were both saying 'I do' while standing in front of a church full of friends and family. Well they were mainly her family since only my aunt and uncle showed up at the wedding. I was kind of surprised they came. I'm ashamed to admit it but my wedding was only the second time I'd seen them since I'd left for college. \n\nOur marriage started off great. Brit graduated and got a job locally while I finished up my last year and got my degree. Anna and Tim ended up getting married and moved to Dallas. I graduated a year later and got a job with the same company as Tim. Within a month, Brit had a job in Dallas and we'd moved into a home just four houses down from Anna and Tim. \n\nI found out later, this had all been planned years earlier by Brit and Anna. Anna had persuaded Tim to recommend me to his company so we could move closer to them. I wasn't too upset since I'd gotten a great job right out of college and Tim and I became best friends. \n\nOver the next couple years we settled into a twenty-something, yuppie, married lifestyle. Life was busy but good. Our marriage was going great, and the sex was off the Richter scale. Brit and Anna had toned down their party girl tendencies and they only did a girl's night out once a month. \n\nTim and Anna did have a party at their house once a month. There were eight couples that made up the core of our group of friends. Two were wives Brit and Anna went to college with. They lived only a couple miles away, so once a month it was like a mini- college reunion. The other four couples were from the housing edition. The husbands all got along well although we weren't all close. It was the women who formed some kind of a sisterhood. \n\nThings flowed smoothly and soon I was looking forward to the next phase of our lives. I wanted to start a family, but I knew Brit didn't want to even consider being a mother until we reached our thirties. It was something we'd discussed and agreed to before the wedding. Still I went ahead approached her about starting our family earlier than we'd planned. Her response was less than enthusiastic. I was disappointed but not surprised. \n\nBrit enjoyed her job and I loved mine. Both Tim and I were construction engineers; he worked mainly on new, commercial developments while I found my niche in restoration jobs. Work was good even though it involved many Saturdays and a few overnight trips. \n\nThings began to change a couple of years after we moved to Dallas. There was always an additional couple or a stray single that showed up at our monthly parties. They were usually relatives or guests of someone within the group. They typically came a few times then wandered off, so I wasn't overly concerned when a good-looking guy a few years older than us showed up one month. \n\nHis name was Derek Prendergast and I found out later he was some kind of a heartthrob back in college. Brit, Anna and their two college friends all had a crush on him back in school. Each one had dated him for a short time. It was quickly evident he'd been a pussy hound back then. Evidently things hadn't changed much. He was a year out of law school and had been transferred to Dallas by his daddy's law firm down in Houston. \n\nHe was married but unfortunately his wife had stayed in Houston. Good for her, I guess, but bad for any husband who had a wife that caught his eye. \n\nI instantly disliked him, so did Tim. However, we were quickly outvoted by the sisterhood, so Derek became a mainstay at our parties. A few months later Fate intervened again. I started working on a long term project that made it impossible for me to attend our monthly parties. \n\nI had my concerns about Brit attending those parties without me and shared them with her. It wasn't that I didn't trust her but more than I didn't trust him. What resulted were some of the worst fights we'd ever had. Anna and Tim ended up talking to me and reassured me they'd keep a close eye on things. Reluctantly, I conceded. \n\nIt only took a few months before I noticed things weren't right. It didn't take a psychic to figure Derek was at the center of it. Brit had sung Derek's praises non-stop for the first two months and then... nothing. \n\nOne day I overheard Brit talking on her cell to Anna. Her words set off alarms. When she told Anna, \"Don't wait up, Mom,\" my stomach turned. Over the next couple months I was suspicious. I watched her and even checked up on her several times but found nothing. \n\nI confided in Tim about my suspicions. He and Anna again met with me trying to alleviate my concerns. Tim said he'd never seen anything inappropriate and Anna assured me there wasn't anything going on. It wasn't until I showed up at the next monthly party unannounced that I found out the truth. \n\nIt was late summer so when I got to Tim and Anna's house I knew most everyone would be in the backyard lounging around the pool or grill. I wanted to make a surprise appearance so I came in through the front door. Brit's two college mates were sitting in the living room visiting and laughing. When I came in, their laughter abruptly stopped. I watched their eyes dart towards the stairs as the color drained from their faces. \n\nIf I hadn't suspected something was wrong before, my spider sense now was just screaming things weren't right. One woman tried to distract me as the other stood up. \n\n\"Don't,\" I growled and she quickly sat back down. I started walking towards the stairs and then I heard one of them speak. \n\n\"Please Brad,\" she said quietly, her voice shaking. \"Please don't go up there.\" \n\nI paused and stared at the two women. It dawned on me that not only did they know what was happening upstairs, they were apparently okay with it. Score one for the sisterhood! I knew Anna and Ashley were the de facto leaders of the group, but I had no idea some of the wives would follow them like lemmings. \n\nI shook my head in disgust and headed up the stairs. I knew where I thought they'd be. There were three upstairs bedrooms. One had been converted into an office and the other into a home gym. That left the guest bedroom as the logical choice. \n\nI was both right and wrong. I was right they were in that room, but I was wrong if I thought I was prepared to see them together. When I opened the door, the asshole was just pulling up his pants while my wife lay there, sprawled out naked on the bed. She was still basking in her post-coital bliss. \n\n\"Oh shit,\" Brit said seeing me first. \"Brad!\" \n\n\"Hi honey,\" I spat. \"Surprise!\" \n\nDerek looked at me first with shock and then smirked. Well ... he did until he got a good look at my face. Then he took a couple steps back. \n\nI'm six foot and weigh in at about 190 pounds. Not all that impressive but there wasn't lot of fat so it wasn't too bad either. This Don Juan wannabe was a couple inches taller and a good twenty pounds heavier but it was evident it was all show with little to back it up. \n\n\"Listen dude...\" he started before Brit cut him off. \n\n\"Derek please, let me talk to him.\" \n\n\"Not a whole lot to say is there Brit? Not when I find my slut of a wife fucking this piss ant.\" \n\n\"Derek, would you leave us alone for a few minutes so we can talk?\" she said ignoring my comment. \n\nDerek grabbed the rest of his clothes and left. \n\n\"Brad\u2014\" she said standing up. \n\n\"You might want to get a towel or a cork,\" I growled glancing down at the moisture dripping down her leg, \"depending on what your intentions are.\" \n\nShe looked down and quickly grabbed a towel. Looking back up she at least had the decency to appear embarrassed. \"Brad, I'm sorry,\" she said softly. \"You weren't supposed to find out this way.\" \n\n\"Find out what?\" I yelled. \"That my wife's a cheating whore?\" \n\n\"No,\" she stated coldly. \"That I love Derek and want a divorce.\" \n\nThe next several minutes weren't as much a discussion as a shouting match. In the end, I learned their affair had been going on for several months. They'd been discrete except for these monthly parties. Apparently our circle of friends had fully accepted them as a couple now. It was also evident the sisterhood had pressured some of the husbands into silence. \n\nBrit said she had always had a thing for Derek and now he was in a position to divorce his wife and they would be together. She continued to destroy my world by telling me she still loved me but Derek was her one true love. \n\nWhen I asked what the hell she was talking about. She told me she and Derek had fallen in love her freshman year in college but his family had pressured him into law school and into a political marriage. It had been common knowledge between her and her college friends. \n\nI was stunned. \n\nI'd been aware they had gone out a few times but I never knew there had been anything serious between them. The ramifications of what my soon to be ex-wife was saying began eating away at me. \n\nIf what she said was true, then Anna and Tim would've been aware of what was happening. Not only that, they would have had to allow it to happen, possibly even encouraged it, all while lying to my face. That would have been true for the sisterhood as well. Those who were supposedly my friends had betrayed me. The pain was almost as bad as the one I felt being betrayed by the woman I'd loved. \n\nWhat I was feeling at the time I really couldn't say. Mercifully I was in shock so I was numb. \n\nI went downstairs and was met by Anna and Tim and the crowd of strangers who once claimed to be my friends. I saw the emotions on their faces, the embarrassment, the shame, the sorrow but the pity was the worse was by far. I felt a cold rage beginning to build as Anna and Tim approached me. \n\n\"Brad,\" Anna said with tears in her eyes, \"she's my best friend and she loves him. What could I do?\" \n\n\"Well mom ... fuck off, you lying bitch! If this is how you treat someone you call a friend, I'd hate to see how you'd treat someone you disliked.\" \n\nI glared at my ex-best friend. \n\n\"You stay the hell away from me from now on or I swear to God I'll cripple you,\" I seethed. \"And you better sure as hell keep away from me at work or I'll make sure we both get fired. Understand me, you back-stabbing piece of shit?\" \n\nTim looked at me with an intense pain etched into his face. His eyes were starting to tear as he nodded. \n\n\"Damn dude,\" a voice said behind me. Turning around I was face-to-face with Prendergast. \n\n\"It's not like it's a surprise she'd want to improve herself,\" he continued. \"And it's not the end of the world, she's not the only\u2014\" ",
        "He never finished his sentence. I'd like to say my left hook knocked him out but it probably didn't do anything but surprise him. I'm not much of a fighter but I'm also not totally clueless. My punch may not have put him down, but my knee to his balls that followed it sure as hell did. \n\nI jumped on him and got in several good shots before Tim and a couple other ex-friends pulled me off. As they drug me off of Prendergast, I got a couple more good kicks to his ribs and at least one good stomp on his balls before I was completely pulled away. \n\n\"Get your fucking hands off me!\" I yelled breaking away from them. \n\n\"Some fucking friends y'all turned out to be!\" I barked at the crowd. \"Of course I shouldn't be surprised since I know at least three of you are cheating as well. Damn! I didn't know this was some kind of a wife swapping party.\" \n\nActually I didn't know anything. I suspected one husband of cheating but the rest of my rant was a bluff, meant just to spread doubt and pain. \n\n\"Y'all can just go to hell!\" I shouted as I forced my way out of the room. \n\nI don't remember walking home that evening. I do remember nursing a bottle of Patron as I waited for the cops. Surprisingly they never showed. Unfortunately, Brit did. She didn't say much, just went upstairs and packed. On the way out she stopped. \n\n\"I'll be staying with Anna for a little while,\" she said with tears streaming down her cheeks, \"I'm not sure what's going to happen after that. Brad, the paperwork has all been prepared. You'll be served tomorrow. Do you want it done here or at work?\" \n\n\"What do you think?\" I snarled. \n\nShe stifled a sob. \"I'll tell them to come here then. Brad, I'm so sorry. When Derek told me in college his family had already arranged his future career and wife it destroyed me. He was the love of my life. I know he had a bad reputation back then but he's changed. He's his own man now and we have a chance to be together again. I ... I just have to try. I didn't want it to end like this.\" \n\n\"How did you think it would end? Did you think I'd give you my blessing to go off with him? Damn, you really are a selfish slut aren't you? Don't let the door hit you in the ass as you leave, bitch.\" \n\nWith a loud cry, she was gone. \n\nA couple days later she was back. However her mood had definitely changed. Now things were ice cold between us and neither of us had anything to say to each other. \n\nThe next day when I got home from work I was met at my front door by two police officers and a restraining order. Apparently Britney feared for her safety. I was removed from my home and I have no doubt Derek moved in that night. Derek and Brit had played me perfectly. \n\nI did find out why there hadn't been any charges filed against me after the party. Apparently Tim found his balls shortly after I left. When Derek threatened to call the cops, Tim responded that if he did that Tim and several others would claim Derek hit me first. Tim told Derek he'd been lucky. If he'd gotten what he really deserved for stealing another man's wife, he'd be dead and his family would still be looking for his body. \n\nTim's discovery of his conscience made little difference to me. I'd been thrown out of my own house, lost my wife and all my friends. I'd thought about trying to get revenge but what could I do? I couldn't embarrass them. Everybody already knew, so I was certain her family did as well. \n\nDerek was already filing for divorce so I couldn't ruin his marriage. I was sure Daddy Prendergast already knew what a piece of shit his son was, so there wasn't much I could do there either. I'd also found out Derek's thing for married women was the reason he'd been sent up to Dallas from Houston in the first place. Seems he hadn't changed despite what my soon-to-be ex-wife believed. \n\nBritney had apparently made her decision to trade up so I sure as hell didn't want her back. I wasn't in a position to hurt Derek professionally or financially at the moment. So I had to settle for kicking his ass as my only revenge at the time. It sucked but at least I had something. \n\nThat left me sitting in a crummy motel room with no wife, no friends and no home. I watched my life spiral downward. I wasn't sinking in my self-pity. I was taking a swan dive into it. \n\nThe next several months were hell. The pain and frustration kept eating me from the inside and in order to escape it I self-medicated. My so called friends tried to apologize but I told them all to go to hell. I'd never trust them again so I didn't just burn my bridges, I nuked them! \n\nOne woman, Karen, asked me if her husband was one of the people cheating that I had referred to that night. Everyone knew her husband, Jeff, was a flirt and if anyone was cheating it was probably him. I told her that wasn't the real question she should be asking. The real question was which one of her friends was he sleeping with? She left crying. I should've felt bad, but they had all betrayed me and with the tequila, I wasn't feeling anything anyway. \n\nBy the time my divorce was final, I needed a fifth of tequila every two days just to function. My personal life was a living hell and my job performance was quickly deteriorating. \n\nNot surprisingly, I saw Britney and Derek got married a month after our divorce was final. I thought about crashing the wedding but by then I was just barely hanging on to my job. I knew any legal issues would take away the only thing in my life that was keeping me sane at the time. \n\nSeven months later I learned Britney was pregnant. That's when I completely stepped off the deep end and went on a drinking binge. \n\nI guess Fate decided it had shit on me enough because for some reason my company didn't fire me. Instead they forced me into a rehab with plans to relocate me so I could get a fresh start. I suspected Tim may have had something to do with it but I never knew for sure. \n\nThe rehab they sent me to was a two month, military boot camp like ranch in the middle of nowhere. Shit, I'd ended up back on the ranch! As much as it sucked it was a turning point in my life. I came out of it sober and looking forward to a new beginning. \n\nWith my restoration background, my company sending me to New Orleans was a natural. After Katrina, there were lots of old properties that the owners had just taken the insurance money and bailed. The new owners would restore some of these beautiful, old places as they were financially able to. It was a slow healing process for the area and it matched my life perfectly. \n\n**** \n\nI laid there for a while just enjoying the closeness before I could feel her begin to tense. I knew my wife was thinking about something and it was upsetting to her. A few seconds later I knew what it was. \n\n\"Would you do it again?\" she whispered just loud enough for me to hear. \"Would you go through all that just to find me again?\" \n\nI cupped her breast and pulled her even closer. Holding tightly I nuzzled her hair and gently kissed the back of her head. \n\n\"Yes, \"I whispered, \"I wouldn't enjoy having to go through that again but if I knew you were on the other end of it ... I'd do it again in a heartbeat.\" \n\nI could hardly breathe as I waited for her response. She could be so passionate and loving but she could also be melancholy and morose. I hoped she'd let my love blanket her and not go down a darker path. When I heard her stifle a sob, I knew the answer. \n\n\"Jordan?\" \n\n\"I'm sorry,\" she said in a small voice. \"I'm so thankful you'd do that for me. But I don't think I could... I just couldn't...\" \n\n\"Sweetheart stop, I know how much you love me. I would never expect you to... no one should ever have to go through what you did. I'm just thankful you can still love. I'm even more thankful you can love me.\" \n\n\"I do love you,\" she said her voice getting stronger. \n\n\"I know. It's what keeps me going most days. It keeps me sane.\" \n\nAs I held her I felt the tension leave her body. She began to relax again as she took my hand and gently kissed it. \n\nWith my wife resting I was able to regather my thoughts. \n\nI could hardly breathe as I caressed the more than a dozen small circular ridges covering her arms and shoulders. As she pressed against my chest, I could also feel the scars that covered her back. The thoughts of her nightmarish past made me silently scream in rage. I took a deep breath to calm myself and make sure I didn't alarm my wife. \n\n**** \n\nShortly after her mother had died in a car accident, Jordan's stepfather had turned both physically and sexually abusive. She was only fourteen the first time he visited her bed and forced himself on her. After she'd told a neighbor about it, he'd started beating her, trying to break her already fragile spirit. The circular scars she bore were reminders of when he'd used her as his ashtray. \n\nJordan finally ran away from home when she was seventeen. She'd lived on the streets for a couple of years. She wouldn't talk much about what happened while she lived there; those memories were best left to the nightmares which occasionally plagued her. To escape her situation, or to at least numb herself from it, she'd begun drinking and using drugs. She'd become an addict before she'd been rescued by Stan, her ex-husband. \n\nStan was a trucker out of the Big Easy and had picked her up in a truck stop outside Kansas City. He was a big boy, six-foot-four and over 280 pounds, although a good 60 pounds of it was fat. He was her knight in shining armor; at least he started out that way. \n\nJordan had told me her marriage was good for the first year or so and then the abuse began. They were both alcoholics and Stan was a mean drunk. Jordan had tried to use the booze and drugs to buffer her from the harsh reality of her situation but the beatings kept getting worse. \n\nThings finally came to a head a couple months before their third anniversary. \n\nOne of Stan's friends, John, had his own tattoo shop a few blocks off Bourbon Street. He had offered to do a tattoo for Jordan at a fraction of the price he usually charged, if she would act as a walking billboard for him. Jordan was thrilled but Stan wasn't. He had always suspected John was trying to get into Jordan's pants. \n\nEven with their twisted, toxic marriage, Jordan knew Stan loved her. Reluctantly he had agreed but still wanted to talk more about it after he had returned from a long haul. He was headed out to the west coast on a long run and would be gone for a couple weeks. Unfortunately being drunk, Jordan didn't hear anything past his okay. \n\nWhen Stan returned, Jordan had already sat topless for hours letting John create his masterpiece. It had mostly scabbed over and was healing well. Even sober, Stan went ballistic. He accused her of sleeping with John among other things. If she'd been thinking clearly she would've moved out that night. She wasn't and didn't. \n\nThe next night a drunk and enraged Stan caught her getting out of the shower. He had already paid a visit to John earlier that evening and had left his friend badly beaten, both hands broken. \n\nThe beating he gave Jordan was worse. He'd taken an extension cord and had tried to beat the tattoo off of her back. The attack was so vicious it put Jordan in the hospital for several days and forever disfigured her back. Stan had packed up and fled the state before Jordan ever regained consciousness. \n\n**** \n\nI stared down at the intricate, multi-colored fairy covering my wife's left shoulder blade. It had once been a work of art, something people would have stopped and admired right there on the street. Now it was marred. \n\nI gently stroked the long reddish ridges that disfigured the tattoo and striped her upper back. Her breath caught and I could feel her stifle a small whimper. Her scars from being whipped were much deeper than the lines that marked her back. \n\nFighting back a tear, I began covering her back with kisses. \n\nJordan's stepfather had died several years earlier and we hadn't heard from Stan in years. I hoped he was dead as well and they were both burning hell! \n\nI tried to keep my mind on Jordan and not on the bastards who had done this to her. I couldn't change her past but I swore I would do my damnedest to give her a good future. \n\n**** \n\nJordan spent three days in the hospital. Her wounds would heal but the scars, both on the inside and outside, would remain. They caught up with Stan somewhere out in Arizona. Since he'd crossed state lines, he ended up doing time in a federal prison out there. \n\nA couple of weeks after she had gotten out of the hospital, John showed up on her doorstep. With both hands broken he wasn't able to work and with no money he had no place to live. Whether it was guilt or just the fear of being alone, Jordan let him move in. Within a month he was sharing her bed as well. Apparently Stan's suspicions about John weren't too far off. \n\nJordan and Stan weren't insured so without Stan's paycheck and the uncovered medical bills, Jordan wasn't able to keep up. John saw the writing on the wall and as soon as he was able to work, he left. The bank foreclosed on Jordan's small house a little over a year later. Jordan was facing being homeless again and that fear pushed her even deeper into the bottle. \n\nIt was the old hippie couple Jordan worked for that she finally let help her. Jonas and Starr had hired her shortly before she'd actually married Stan. She'd worked in their art studio for four years and they were as close to family as she had. After she lost her home, they moved her into a backroom in the studio and forced her into rehab. \n\nShe'd been clean and sober for two years when I'd met her at an AA meeting. That's where our two roads had crossed. \n\nWhen I first met Jordan I was less than impressed. She had her shoulder-long, curly, dark brown hair pulled into a simple ponytail and wore a ball cap to hide her face. She also wore extremely baggy clothing that mostly hid her body. Those few glimpses that the clothes allowed showed an anorexic figure. Those things combined with her standoffish personality basically gave off a stay the hell away from me signal. \n\nWe had been going to the same AA meetings for about two months before I noticed her standing near me. After that I noticed she would typically stand or sit near me, not close enough to have a conversation but still somewhere in my vicinity. I spoke to one of the women who had been there awhile and she'd given me some basic background on her. \n\nIt didn't take a genius to see she didn't trust men so it was more out of curiosity than physical attraction that made me want to meet her. When I first approached her I thought she was going to bolt like a frightened animal. Thankfully she didn't, however, she wouldn't look me in my eyes the first several times we talked. When she finally did, my world changed. \n\nI don't think I fell in love with her at that moment but I wanted, no ... I had to find out more about her. One night she missed a meeting, so I used it as an excuse to go to the art studio to check on her. \n\nWhen I got there I was blown away. What I witnessed wasn't the timid, scared rabbit I'd expected. What I found was a confident, out-going, young woman who even though extremely thin, was quite attractive. When she first saw me I thought she was going to have a heart attack. \n\nI walked over and began speaking as calmly and softly as I could. She stared at me like a deer caught in the headlights. I apologized for visiting her at work but told her I'd missed her at the meeting last night and was worried. \n\nIt wasn't until I asked her about some of the artwork being exhibited that she came out of her stupor. Slowly she began describing each piece and by the time we were done she was truly back in her element. When she flashed that huge, beautiful smile and laughed, I knew I was hooked. \n\nDating Jordan was an adventure. It was like tap dancing in a minefield. I never knew whenever I'd say or do something that would remind her of her past. Slowly I learned those areas which were upsetting to her and avoided them. \n\nWhen our relationship turned physical I wasn't sure how she'd react. She was understandably timid when she first let me see her body. She was painfully thin, to the point that her bones were visible. However it was the scars on her back that ended up actually cementing us as a couple. \n\nI realized immediately how much she cared for me. She was letting down her defenses and at that moment I had the power to devastate her by simply rejecting her. That kind of trust broke down whatever barriers I had. My fears and distrust crumbled as I watched a damaged, fragile woman show incredible strength by overcoming her fears enough to trust me to see the one thing she was most ashamed of ... herself. \n\nI gently kissed her back, then slowly turned her around and made a show of looking her up and down as if I was appraising her like a piece of art. She'd ducked her head waiting for my harsh judgment. I lifted her face so she had to look at me. \n\n\"Incredible, simply beautiful,\" I whispered. \n\nI then kissed her as if my life depended upon it. I hadn't realized it at the time but my life, or at least my happiness, really did depend on her. \n\nShe responded to my kiss by rewarding me. Honestly, I would have been happy with just sex since I hadn't been with anyone but my right hand since we'd started dating. However, what we did that night was nothing less than an unforgettable night of making love. \n\nJordan likes to tell me that was the night she went from being in love with me to being completely mine. I always correct her by telling her that was the night we stopped being Jordan and Brad, and became ... us. \n\nWe dated for a little over a year before I got up enough courage to ask her to marry me. She'd made it clear months earlier her answer would be yes but I couldn't help but have doubts if we could make it. It wasn't that I questioned our love, it was the fact that we were both so messed up. \n\n**** \n\nI found myself still lazily stroking my wife's back. I reached over and gently caressed her cheek. Staring into her eyes I softly sang the rest of the chorus. \n\n\"This much I know is true, that God blessed the broken road that led me straight to you.\" \n\nTears formed in her eyes as she fought back a small smile. \n\n\"Really Brad?\" she whispered, a hint of desperation in her voice. \"Are you really happy you found me?\" \n\nHow do you tell someone how important they are to you without scaring them? I thought to myself. And if you do tell them the truth it leaves you open and vulnerable to their actions. \n\nIt had been Jordan's love for me that had given me back my life. Because of her I'd dared to trust ... to love again. She was the center of my life. This strong but fragile woman both needed and desired me. Because of that there was absolutely nothing I wouldn't do for her. I'd love and protect her till my last dying breath. That kind of love is intimidating to many and more than a little scary to most. \n\n\"Without you,\" I said kissing her gently. \"Without you my life would've been colorless like one of those etchings you have in your art studio. You brought my world to life and I thank God for it every day. \n\n\"You're like some artist painting my future. With each stroke, every tear, every smile, every touch you make my life richer. Am I glad I found you? Is a drowning man glad when a life preserver is thrown to him? More than he could ever describe!\" \n\nShe surprised me as she launched herself towards me. Before I could even react I felt the soft, warmth of her lips on mine. I could taste the salty remnants of her tears as her kiss turned more passionate and her tongue invited mine to dance. \n\nAs she pressed her body into mine trying to meld our skin together, I thought we were soon to be making love but she paused. Pulling her face away from me she stared deep into my eyes and whispered. ",
        "\"Thank you for loving me.\" \n\n\"You make it easy. Besides I'm so lucky to have such a beautiful and sexy artist painting my life.\" \n\nI saw her eyes dart away from mine. \n\n\"Jordan,\" I said softly but with enough intensity that she looked at me again. \"You are beautiful. You are an incredible work of art... a masterpiece.\" \n\n\"Maybe a Picasso,\" she snorted. \"Brad I know what I look like, what my body looks like. I can see the scars. I know how ugly they are and what they make me look like.\" \n\n\"Dammit, you stop right there,\" I growled. \n\nI could see the surprise and fear in her face. I had never spoken to her that way before. \n\n\"If I heard some guy say that about you, what do you think I'd do?\" \n\nHer face softened as she relaxed. A spark flashed in her eyes as a tiny smile formed. \n\n\"I'd probably be talking to the police, explaining why you hit the guy.\" \n\n\"Exactly and what if it had been some woman who would've said that?\" \n\nThis time she actually giggled. \n\n\"Well, I doubt you would've hit her ... but I can imagine some of the ugly, cruel things you might've said. Sugah, I know\u2014\" \n\n\"So why would you think I'd be okay,\" I said interrupting her, \"hearing you put down my wife. She's the woman I forsook all other women for. The one I love with everything I have. Why would you ever think I'd put up with that shit?\" \n\nShe looked at me as if I'd slapped her. \n\n\"Oh baby, I'm so sorry!\" \n\n\"Jordan,\" I said softly, \"you are a masterpiece. I just wish I could make you understand, to have you see yourself through my eyes.\" \n\nI thought for a few moments, sat up and propped myself up on a pillow. \n\n\"Let me try to explain it like this,\" I said smiling at her. \"Suppose you had the Mona Lisa hanging in your studio\u2014\" \n\n\"I'd probably be arrested for art theft!\" she laughed. \n\nI couldn't help smile. I loved her laugh. \"Alright, bear with me. I'm trying to make a point, okay?\" \n\nShe sat up and grinned, trying to look submissive. \"Okay Master Yoda, I'll be good.\" \n\nI stared at my naked wife sitting cross-legged on our bed. As I slowly scanned her up and down, I found it impossible to remember what I was going to say next. When I had settled on her face, it was obvious from her impish smile she knew exactly the effect she was having on me. \n\n\"Yoda huh?\" I snorted, regathering my thoughts. \"Well we'll have to see how well you handle the force a little later, young Jedi.\" \n\n\"Promise?\" she giggled. \n\n\"Oh yeah,\" I sighed. \"Now what was I saying?\" \n\n\"Something about the Mona Lisa,\" she replied grinning. \n\n\"Oh yeah. Not that I think she's all that beautiful but she's definitely considered a masterpiece, agreed?\" \n\nJordan nodded. \n\n\"Alright now let's say some idiot somehow breaks in and takes a knife to it.\" \n\nI listened to my wife gasp as her hands flew to her mouth. \n\nGawd, I loved these artistic types. They're so creative and have such vivid imaginations that they can actually visualize certain scenarios. \n\n\"With a few swift slashes he's changed the painting forever. Afterwards a ton of money is spent trying to repair it. When they're done, it's been restored as close as possible to its original state. Remarkably, they've done an outstanding job. However, there are still noticeable lines where the knife had cut the canvass. \n\n\"Now ... is the painting as beautiful as it was before? No, but many will still consider it beautiful. Now the real question, is it still considered a masterpiece? \n\n\"The answer is ... of course. The bastard's blade didn't change the skill Leonardo de Vinci showed with each brushstroke. It didn't remove the smile portrayed in the painting or the importance of that painting to the art world. \n\n\"It would still draw countless visitors , each one marveling at the painting as a whole. The fact it had been wronged would probably endear it even more to its current admirers. The publicity of how it had been mistreated would gather even more attention and draw a new wave of admirers.\" \n\nI peered intently at my wife praying she would hear and believe my next words. \n\n\"My beautiful, scarred wife ... you are that masterpiece.\" \n\nShe embraced me so hard I could barely breathe. She buried head into my chest and I gently stroked her hair as she clung to me. I could barely make out her repeated 'thank you' through her sobs. \n\nAs I held her, I hoped and wondered if she would let the words sink this time. I knew her self-confidence was getting better after being destroyed by her past. She was getting stronger every day and the woman she was becoming was even more spectacular than the one with which I had initially fallen in love. \n\nI thought of the fears I'd had before we'd gotten married. I hadn't known how she would react when things got hard. Mainly I didn't know if she would run away. We were both so weak back then. I didn't know how I'd ever be able to give her the love she both needed and deserved because I was still so damaged myself. Thankfully, those questions were now distant memories having already been answered. \n\nMy greatest fear was what would happen if our pasts came back to haunt us. Those fears became a reality just a couple of years after we got married. We ended up facing both of those ghosts within a few months of each other. \n\n**** \n\nI knew immediately something was wrong when I came home to find my pregnant wife sobbing. She told me she'd gotten a call from Stan. He had been released early and was back in town. She said she'd told him she was remarried and pregnant but he still wanted to see her. \n\nI told her I'd be happy to take care of it but if she needed to meet with him for closure, I was okay with that as long as I was there with her. Apparently it was the right answer since she crawled up onto my lap, draped her arms around me and smothered me with kisses. Jordan said that part of her life was over and she never wanted to be reminded of it again. I knew that wouldn't be the end of it ... it wasn't. \n\nStan decided to visit Jordan one evening while I was working late. He came into our home and they had heated words. In the end he grabbed her arm hard enough to bruise her. We reported it but it was a he said, she said, even with the bruise and his past. Sometimes the law is just so damn inept it isn't even funny. \n\nThe police warned him to stay away from Jordan. We got a restraining order against him but that wasn't good enough for me. \n\nIt took several weeks but I was finally able to pull everything together. First I hired a PI to find out a little bit about Stan's recent stay in prison, namely who he played house with and how they felt about him getting out. After that I just needed to cash in a few personal favors. \n\nThere's a wide variety of individuals who work on construction sites. Fortunately, I know many who are of ... questionable character. It wasn't difficult to arrange a little welcome back party for my wife's abusive ex-husband. \n\nFrom there it was a waiting game until Stan could be talked to without witnesses and at the same time I would have a good alibi. It took a couple weeks but one night Stan was mugged outside a bar. \n\nThe police of course questioned me but my alibi was solid. I'd planned on Stan being roughed up a bit and then threatened to stay away from Jordan. They were supposed to let him know evidence would be planted to make sure he broke parole and go back to prison. Unfortunately, one of the guys took what he'd done to Jordan personal. He ended up whipping Stan and beat him bad enough to put him in the hospital. \n\nEven with all that, Stan didn't leave town until a week later. I guess finding a bag of weed in the front seat of his truck let him know he'd soon be going back to being Big Mo's favorite bitch. We never heard from him again. \n\nWere my actions a little extreme? Probably but the son-of-a-bitch came into my home and threatened my wife and our unborn baby. He's lucky I didn't put a bullet in his head and dump his body in some unmarked grave! \n\nI ended up coming face-to-face with my past several months after the Stan episode. It wasn't as extreme but was just as uncomfortable. \n\nIt started when I learned that for one of our restoration projects my group would be teamed with another group from our Dallas office. Not surprisingly, Tim was a part of that group. \n\nI expressed my concern with my boss. His response was 'to be a professional and get over it.' With a newborn son at home, I figured I liked my job and the paycheck that came with it so I did just that. \n\nTim and I worked side-by-side for a week before he approached me. \n\n\"Hey Brad, got a minute?' \n\n\"Yeah, what do you need? Is something wrong with the load bearing wall in the kitchen?\" \n\n\"No it's fine. Look Brad. I just wanted to talk to you ...\" he said uncomfortably. \"You think maybe I could buy you a beer after work?\" \n\n\"I don't drink anymore. Recovering alcoholic ... remember?\" \n\n\"Shit! Yeah, that's right,\" he groaned. \"Sorry man, I just wasn't thinking. Listen, I just wanted a chance to tell you how sorry Anna and I are.\" \n\n\"Look Tim, apology accepted. I got a wife and kid now, there's no need to rehash the past.\" \n\n\"I know, I know,\" Tim said shaking his head, \"it's just well...\" \n\nI could see he was struggling to say something. \n\n\"Just spit it out.\" \n\n\"Anna is coming down this weekend,\" he said hesitating. \"She wanted me to ask you and Jordan out for dinner, our treat.\" \n\nI could see his look of discomfort as he easily read the anger on my face. \n\n\"Tim, we aren't friends and never will be again. The thought of exposing my wife to the two of you actually makes me sick.\" \n\nTim hung his head and sighed. \n\n\"I understand but I had to ask.\" \n\n\"Why?\" \n\n\"Well, because what happened back then really shook my marriage. Britney cheating on you, Anna helping her and me keeping quiet, all of us lying to you, there was plenty of guilt to spread around. This weekend was hopefully a chance to face up to what we did and apologize. It wouldn't make everything better but at least it would be a beginning.\" \n\nI studied him closely. We'd been friends back in Dallas and I could tell there was something more. \n\n\"And?\" \n\nHe looked away from me and sighed deeply. His body sagged slightly as if preparing to receive a coup de grace. \n\n\"Britney is coming with her.\" \n\nI was speechless and just glared at him. \n\n\"Brad,\" he said softly. \"All they want to do is apologize. Just think about it and give me your answer tomorrow. I know if it were me I'd tell us all to go to hell, but you're not me. So I'm asking you to think about it before you shoot it down.\"  \n\nI knew my answer was not just no but hell no. But I also knew I would need to talk to Jordan. I had told her I would stand by her if she needed to confront that asshole of an ex-husband of hers, so I needed to give her the chance to offer to do the same. \n\nShe shocked me when she suggested we should accept. I told her I really didn't need to do this but she said she'd felt such a release after Stan left town that she wanted me to have that same resolution. I said I would do just about anything for my wife, even things I didn't like. She felt this was important so I allowed it to happen. \n\nI told Tim we'd do it but with a couple conditions. First there wouldn't be dinner but we'd meet for beignets at a little outdoor cafe off Jackson Square. The second condition was that Tim had to put in a request to go back to Dallas immediately. After that weekend I never wanted to see any of them again. He reluctantly agreed. \n\nJordan decided to make a night out of it so we planned to go to one of our favorite little seafood places near where we would meet the others later that night. It was business casual attire but she wanted to dress up a bit. When she came out of our bedroom I found it hard to breathe. She wore her little black dress but hadn't dressed it up with any expensive accessories. Still she looked good ... real good. \n\nAt first I thought maybe she was trying to make a statement to my former friends and ex-wife. However, then I realized it was going to be the first time we had officially been out to dinner since our son was born. \n\nMotherhood had done wonders for Jordan. My timid, meek wife had become a momma bear when it came to Brandon and that forced confidence was slowly bleeding into other areas of her life. \n\nThe last month she had hovered over her new born baby like a hawk. I'd had to beg and threaten her just to get her out of the house the few times I could. I'm sure she was more than a little stir crazy after a month of being at home guarding the nest. \n\nI realized it was going to be an even more interesting evening when Jordan pulled out her black, four-inch stiletto pumps. Looking at me she could barely contain her grin as she raised her eyebrows at me. \n\n\"What do you think...\" she cooed seductively, \"stud?\" \n\nYou need to remember both Jordan and I are both six foot tall, okay she is a quarter inch taller. It's a little something she enjoys pointing out to me whenever she can. We both know she looks a little like a newborn giraffe in those things, but she dearly loves to wear them so she can look down on me and gloat. \n\nI love the sound of her laughter so it never bothers me despite how I pretend to act. It's all for my bride's enjoyment anyway. Of course the fact that it makes it convenient to reach under her dress and stroke her inner thighs while we're out in public doesn't hurt either! Of course I felt obligated to do that any time I caught her smirking down at me which turned out to be, often. Her response to my teasing was also predictable. \n\nI can't tell you the number of times we've had to cut an evening out short and race back to our home or hotel. Several times we'd barely made it to my truck before we were tearing each other's clothes off. Don't laugh, a few blankets and pillows in the back bed of a truck, a starry night and a remote area, and the night can definitely become very memorable! \n\nShe smiled at me and chose a shorter pair of black pumps. She'd decided she'd wanted to go dancing after our meeting if we felt like it and the FMP's weren't suited to that. \n\nWe ended up having one of her close friends at work watch Brandon that night. I think Jordan called home every fifteen minutes. Her constant need to check on our son was actually a blessing in disguise. The humor of watching my lovely bride fidget and dance in her seat helped lessen the tension building as the time grew closer to our meeting. \n\nWhen we entered the cafe, several heads turned our way. Jordan could certainly pull off the long, cool woman in a black dress look. I had to laugh to myself and smile. My wife's self-confidence was definitely getting stronger and I was beginning to realize how just her presence made me a better man. Having her beside me brought out more and more of my better qualities. \n\nWe found our table quickly and I introduced Jordan to everyone as we were seated. I noticed immediately that the past five years hadn't been kind to Anna nor Britney. While Anna had definitely put on extra weight, Britney looked like she'd lost too much. \n\nWe spent the next several minutes dancing around the elephant in the room as the women complimented Jordan on her appearance and oohed and aahed over pictures of Brandon. The table resembled a group of friends getting reacquainted after several lost years. It was making my stomach turn. \n\nI waited until the waitress had taken our dessert orders before I began. \"Alright, let's get this started,\" I said coldly. \"Say what y'all need to say. What do you want, Britney?\" \n\n\"Honestly?\" \n\n\"No lie to me. You know how much I just fucking love that!\" I snarled. \n\nBoth Britney and Anna jumped back in their seats at my vehemence. Tim shook his head slowly. \n\n\"I told you both but neither one of you would listen,\" he said calmly. \n\nBritney recovered first. \"Well, I know I more than deserved that,\" she said as she took a deep breath and settled herself. \n\n\"Okay Brad,\" she continued, \"the truth. The truth is before I found out last week that you were remarried. I'd originally planned to come down here to New Orleans, oh excuse me, Nawlins, to see if you still had any feelings for me. I knew we wouldn't just fall into each other's arms, not after what I'd done, but I'd hope there would be some flicker of love that had somehow survived.\" \n\n\"Not likely,\" I snorted. \"Any good feelings I had towards you were washed away when I heard you were pregnant with the asshole's kid. What did you do? Leave it with Derek, while you went out looking for your next victim? And by the way, it's pronounced New Awlins down here.\" \n\n\"You really don't know do you?\" she said ignoring my language lesson. \"Tim said you'd cut all communication with him but I would've thought someone in our circle of friends would've let you know.\" \n\n\"Circle of friends?\" I spat. \"They sure as hell weren't my friends! In case you don't remember, that entire circle of assholes covered for you, especially that bitch sitting next to you.\" \n\nI saw the color drain from Anna's face as my words stung. She reached over and gripped Tim's hand. \n\n\"Then they all had the balls to tell me I was their friend but they didn't want to get between us. Sure didn't stop them from welcoming the asshole Prendergast now did it? Hell I was replaced before I even knew I was voted off the island! \n\n\"I had no one, Britney. My aunt and uncle were isolated, still living on their west Texas ranch. I'd lost all my friends, including my supposed best friend, and the woman who I'd hoped to spend the rest of my life with. The same wife who threw me away for another guy and ended up giving him what I'd begged her for, a family. \n\n\"I was already so miserable that I was a drunk before our divorce was final. Then, I sank lower hearing you and Derek were getting married so soon after our divorce and then the cherry on top. Surprise, Brit is pregnant! \n\n\"That little piece of news put me over the edge. It got so bad I almost lost my job. Want to guess who finally came to my rescue? My company! They sent me to rehab and then transferred me down here to give me a new start. \n\n\"How funny is that? My company was more loyal to me than those who claimed to be my friends or those who said they loved me.\" \n\nBy this time all three women at the table had tears in their eyes but only one of them was holding my hand. She was the only one of them I would ever let get near me again. \n\n\"I'm so sorry Brad,\" Britney said quietly as she wiped the tears from her face. \"I knew I'd hurt you but I never knew ... I'm sorry. I know it's not enough but it's all I've got.\" \n\nIt was then our poor waitress brought our desserts. Her face looked as if she stepped in dogshit! I'm sure she looked at our table which consisted of three crying women, one uncomfortable male and another obviously angry male, and she just wanted to run away. \n\nTim called her over, handed her some money and whispered something to her that made her visibly relax. Within seconds she'd left our beignets and a fresh pot of coffee on the table and had disappeared. \n\n\"Brad,\" Britney said gathering herself. \"If you were hoping we all paid for what we did to you, well ... you got your wish. Karma really is a bitch. I doubt since you don't talk to us anymore that you didn't know about the fallout from that party. Karen ended up divorcing Jeff\u2014\" \n\n\"You can't blame that on me,\" I said loudly. \"If he couldn't keep it in his pants, she should've divorced his ass.\" \n\n\"Well,\" Britney continued, \"he couldn't and she did. She also began accusing most of us of sleeping with him. Between all that drama, the embarrassment of Derek's and my affair and Anna and Tim's situation those monthly parties were cancelled.\" \n\n\"Tim and Anna's situation?\" I asked knowing immediately I had taken the bait and been drawn into the conversation. ",
        "Britney smiled slightly. \n\n\"Yeah, Anna and Tim separated for several months back then.\" \n\nI stared at Anna and watched her eyes begin to tear again. A quick glance at Tim confirmed Britney's statement. \n\n\"Seems they're back to their old selves again though, him doing whatever she wants no matter what the consequences.\" \n\nAnna started to say something but I interrupted her. \n\n\"If he wasn't, we wouldn't be sitting here this evening.\" \n\n\"Brad,\" Anna said gently. \"While it may look that way, things have changed in our marriage. Some of the changes have been for the better and have strengthened our marriage, while some other areas haven't healed completely. That's why we're here tonight.\" \n\n\"What we did ... we're so ashamed. We just needed to tell you how sorry we were. No, it's more than that. I needed to tell you how sorry I am for betraying your trust.\" \n\n\"When everything came into the light during that party, what I saw made me sick. Our ... my actions were unforgivable. I'd forced my husband to choose me over his best friend even though I knew what we were doing was wrong.\" \n\n\"My actions tore us apart. Tim moved out for two months. It would've been longer but when we found out I was pregnant, he moved back home.\" \n\n\"Congratulations,\" I said coldly, \"do you know who the father is?\" \n\nBritney gasped, while Anna looked like I'd slapped her. I turned and glared at Tim, daring him to say something. \n\nAnna recovered first. \"You may not believe it,\" Anna said softly, \"but I never cheated on Tim.\" \n\n\"Well,\" I replied coldly. \"Britney had to learn to be a good cheating wife from someone and you were such a good mom to her back then. So you're right, I don't believe you, guilt by association.\" \n\nAnna sighed deeply and nodded. \"Apparently my husband felt the same way. One of the conditions he demanded before he'd move back was I end all communication with Brit. We didn't talk for over a year. Then, with Tim's permission, I re-established my relationship with Brit but so much had happened by then. Things between us have never been the same. Brad, I am so sorry. I'm sorry for what our actions did to you, what they did to all of us.\" \n\nI sat quietly and didn't say anything until I felt a thin, warm hand squeezing mine. I looked over at Jordan and I could see the pleading in her eyes begging me to let go of the past. \n\n\"Alright, Anna,\" I sighed. \"What's done is done, can't change any of that. Truth is I don't hate you or Tim. I just try not to think of either of you. That was until Tim moved down here and was a daily reminder.\" \n\n\"Man, I'm sorry but I didn't think you'd meet with us any other way,\" Tim said softly. \n\n\"Well you're right, I wouldn't have. So you've said your apologies and I've accepted them. You're forgiven. Now maybe we can all go on with our lives and never cross paths again.\" \n\n\"What about me?\" Britney said her voice full of emotion. \"Am I forgiven?\" \n\n\"What about you?\" I said colder than I meant to. \"Hell Britney, all of this has been about you ... as always.\" \n\nShe wiped a stray tear from her face with her napkin. I felt Jordan's hand gently squeezing mine again. \n\n\"You're right Brad. I was a stupid, selfish bitch back then.\" \n\nAn awkward silence covered the table. It was as if they were all waiting on my response. \n\n\"Well don't expect me to disagree!\" I snapped. \n\n\"It probably won't make any difference but,\" Britney softly continued. \"I knew I'd made a horrible mistake before our divorce was even final. During his divorce, I learned that Derek hadn't been as honest with me as I first believed. His family had never forbid him from marrying me. They'd hoped he'd marry his previous wife but they never arranged it. Derek told me later he'd felt pressured by them.\" \n\n\"I had my doubts but by then I was committed. I knew I'd destroyed any chance of saving our marriage. Like a fool, I'd chased after an old dream that wasn't even real back in college.\" \n\n\"You asked earlier who was watching my baby. My baby girl is in the arms of the angels. I lost her in my fifth month of pregnancy. The doctors discovered a couple of things at that time. I apparently have a genetic condition that won't let me carry a child full term. The fact I carried my baby for five months was supposedly a minor miracle. \n\n\"There was another thing the doctor's discovered. I had HIV and didn't know it. It was apparently a gift from my ex-husband!\" \n\nI was stunned. For a moment I thought she'd accused me of giving her AIDS! \n\n\"Well it sure didn't come from me,\" I spat. \n\n\"No,\" Britney smirked sadly. \"It was my other ex-husband, Derek. When Derek and I got married I'd thought we'd both been tested for HIV. I thought it was a part of the blood test we were required to get. I was wrong, HIV testing is optional. While I was tested, Derek wasn't.\" \n\n\"So you might have given it to me?\" I growled. \n\nJordan squeezed my hand. Brit looked at me with tears running down her cheeks. \n\n\"Yes, I might've but I didn't. I was having unprotected sex with Derek while we were still married. Thankfully I didn't infect you. My initial tests all came back clean. Even my follow-up test a few months later were negative. They said I was apparently infected shortly before or after I got pregnant. Derek claimed he must have caught it before he moved to Dallas but when a married woman who lived in North Dallas tested positive and identified him as her lover, his cheating was exposed. \n\n\"Lawsuits and threats of lawsuits made Derek unpopular with his father's law firm. Although nothing ever came of it, the scandal was enough for the firm to distance themselves from Derek. Two other married women had their worlds turned upside down when he was forced to give up any other sexual contacts. \n\n\"I don't know why I hadn't expected him to cheat on me. I shouldn't have been surprised since he'd cheated on his first wife with me. I guess I'd hoped it wouldn't have happened within the first year of our marriage. \n\n\"I was alone too, Brad, although I knew I'd brought most of it down on myself. My husband was cheating on me, my ex-husband hated me, my family was extremely disappointed in me for what I'd done to you, and my best friend wasn't talking to me. \n\n\"Our marriage didn't survive a year after my miscarriage. Derek slithered away into some hole. He died six months ago of pneumonia. I'm told it was AIDS-related. \n\n\"My condition hasn't developed into AIDS but I live with the fear every day. It isn't the death sentence it was years ago but it sure as hell has changed my life. \n\n\"I also get to live with the fact there's no one to blame for my situation but myself. It's my own damn fault I threw away a good marriage for a foolish schoolgirl dream. I chased a fantasy and ended up with nothing. Now my life is still in ruin and my future is pretty bleak. \n\n\"I'll never have the family I now want to have, not because of the HIV but because of the genetic defect. Of course adoption is an option but being a single woman with HIV makes things tricky.\" \n\n\"Britney,\" I said flatly, \"you're still attractive enough to sucker in some victim. You don't have to be single.\" \n\n\"No,\" she said sadly. \"I can still get laid or even have a short term fling but that's about all it ever is. I don't date much because of the disease and because it limits the type of men who will go out with me. Most are already HIV positive or just too horny to give a damn. When they find out, most men either look at me as a one night stand or someone to share their disease with. That cuts down on the number of men who are of the type I'm looking for, the type I had with my first husband. \n\n\"Brad, if you were hoping for some kind of justice, you got it. I'm a thirty-year-old, cheating, two-time divorcee with HIV. Not the type of woman most men are looking to marry and spend the rest of their life with! \n\nI watched in silence as my ex-wife seemed to crumble into herself. Her tears were flowing now, as were Anna's and Jordan's. I sat there confused on whether to offer my condolences, laugh, or applaud her performance. \n\nThen I looked at my wife and had an epiphany. As I stared at Jordan's face and saw the empathy that filled her eyes, I realized something. Well actually several somethings. \n\nTurning my attention back towards Britney, I noticed everyone at the table staring at me. I guess it was my turn in the spotlight again. \n\n\"I won't tell you it doesn't bring me some sense of satisfaction to hear your life sucks after what you did to me,\" I said softly, \"what you did to us. But it doesn't bring me any joy. I'm not doing some happy dance since you've got HIV. Of course, I'm not going to lose any sleep over it either. \n\n\"The simple fact is, Britney, I really don't care what happens to you... or Anna or Tim. When Jordan came into my life, my past went where it belonged, behind me. I rarely think of any of you anymore. \n\n\"Now I have an incredible wife who is my entire world. Recently she added to our world by giving me a son. She's my future, she walks beside me in everything I think and do, and she watches and guards my back. She really is everything to me. \n\n\"Just so you'll know Jordan has a past that makes mine look like a fairytale. She's not only survived it but she's overcoming it! Separately we're two damaged people but together ... we're whole again. \n\n\"Truth is our love is more than a little co-dependent. Hopefully the few good aspects of that condition outweigh the many bad ones because it was her intense desire for me that helped me put my demons to rest. I watched her conquer her deep distrust and fear of men with her overwhelming need and love for me. \n\n\"It was her strength that helped me to do what I never thought I'd ever be able to do again, trust. I found that her need for me was matched only by my intense desire for her to need me. Is that unhealthy? Probably, but for two recovering addicts it's salvation. \n\n\"So when the sexiest, most beautiful beanpole I'd ever met confessed she'd fallen in love with me ...\" I said looking at Jordan. She chuckled even though her eyes were still brimming with tears. I smiled at her and continued. \n\n\"If you could only see the way she loves me then maybe you would understand,\" I said stealing a line from one of our favorite songs. I turned my attention back to Britney. \n\n\"With someone like her now in my life, why would I spend one moment more than necessary thinking about that nightmare y'all put me through? You've said what you needed to, now it's my turn. Y'all are forgiven ... now just go away. \n\n\"Go become polygamists, marry each other and give Tim that threesome he's always fantasized about, or join a cult and commit mass suicide. Hit the lotto and become rich or let Tim pimp you both out as whores on the street. Go on and have a wonderful life or have a shitty one, I don't care. Just as long as you are never a part of my life again, I'm good!\" \n\nI smiled to myself remembering how my little rant had basically ended the party. It hadn't ended the evening though and that's why I was smiling. Jordan had looked so damn good that I had to take her out dancing after our meeting. \n\nNot that we danced for very long. She'd wrapped her arms around my neck and causally played with my hair as she peered into my eyes. When she began to grind her body into mine, I knew we'd be lucky to make it home before we attacked each other. \n\nWe did make it home that night, barely. I'd like to say we had wild monkey sex but I can't. Jordan had wrapped herself around me like a python so there wasn't enough room to have monkey sex. Instead we'd had one of the most intense, grinding nights of passion I've ever experienced. Damn what good memories! \n\n**** \n\n\"A penny for you thoughts,\" she whispered, her soft, southern voice drawing my attention. \n\n\"Worth way more than a penny,\" I laughed, \"and definitely pornographic!\" \n\nI watched her eyes widen and then a small, evil grin formed on her angelic face. \n\n\"Hmmm, maybe we could work out a payment plan?\" \n\nShe reached over and gently ran her fingers down my chest, across my abs, and further south. She then gave me a gentle but firm squeeze when she reached her target. \n\n\"Oh,\" I groaned, \"I'm sure we can work something out.\" \n\nShe pushed me on to my back and I felt her warm tongue begin to tease my manhood. I sighed and closed my eyes as her incredible mouth enveloped me. As she slowly began to bob up and down, I heard hushed voices outside our bedroom door. \n\n\"Mommy?\" the muted little voice of our five-year-old, Brandon, called out. \n\nTalk about nature's mood killer! My beautiful, sexy wife giggled with her mouth still full. Then she sat up grinning from ear to ear. \n\n\"Yes baby?\" she said laughing at the look of disappointment written on my face. \n\n\"Can me and Caleb get up and watch cartoons?\" \n\nShe looked over at the clock and smiled. We both knew if this had been a weekday neither Brandon nor his three-year-old brother would be up by now. Either Jordan or I would've had to pull them out of bed and they both would have moaned and shuffled around like zombies. But since it was the weekend, surprise, up at the crack of dawn. \n\n\"Not yet, sweetheart,\" she cooed. \"Why don't you and your brother crawl back in bed and read or color for a while.\" \n\n\"But mom ...\" both boys answered in unison. \n\n\"Boys?\" I said in my most authoritative, fatherly voice. \"What did your momma say?\" \n\nJordan and I stifled our laughs as we heard two little sets of feet run back into their room. My lovely bride turned and looked deep into my eyes. I could see a healthy mixture of mischief and desire hidden in those hazel eyes. \n\n\"That should give us a little time,\" she said smiling. \n\n\"Enough time to work on giving you a little girl?\" I said smiling. \n\n\"We did that last night... umm... twice,\" she laughed. \"You think the third time will be the charm?\" \n\n\"Oh yeah,\" I said grinning. \"Of course I might be a little biased.\" \n\n\"Ya think?\" she laughed. \n\n\"Come here lover,\" she growled as she pressed her lips to mine. \n\nThe sweet taste of her kisses made my heart race. I slowly ran my hands down her long, lean torso until my hands rested on her small hips. I gently laid her on her back and began to trail my kisses down her long neck, across her d\u00e9colletage, and softly attacked her two round globes. She let out a small whimper as my tongue worshipped the small dark pebbles sitting proudly atop those soft mounds. \n\nWhen I heard her breath become raspy, I continued to work my kisses further down her body until I reached her trimmed patch of curly dark hair. I cupped her small, muscular ass in my hands and pulled her even tighter to me. \n\nMethodically I began to lathe her labia and was met by her small gasps. She arched her hips as I buried my tongue, probing as deeply as I could. Her small mewing became rhythmic as I slowly mete out a cadence that her body was trying to dance to.  \n\n\"Oh sugah, yes... right there... like that...\" she panted. \"Oh...oh Gawd...\" \n\nHer body went rigid like it had just received an electric shock as her orgasm coursed through her. She loudly gasped and then let out a long, soulful moan as her body slowly relaxed, coming down off her high. \n\n\"Oh Brad,\" she breathlessly whispered. \"Oh sugah that was... that was...\" \n\nI didn't let her finish. I crawled up her body and passionately kissed her. Instinctively she reached down and guided me inside her as she locked her long legs around my waist. I could feel and hear her groan inside my mouth as I began to drive into her. Within minutes I felt her catch her breath as she clamped tightly down on me, caught in another orgasm. My groan joined my loving wife's as I exploded within her. \n\nMy body clung to this woman as I felt her incredible muscles milking me of everything I had left inside. I was surprised I still had anything left after last night's marathon. \n\nI looked into her sleepy, contented face and smiled as I noticed her half-open eyes were swimming in raptured bliss. Her smile told me everything I needed to know. She was mine and I was hers... forever. \n\n\"I love you, Jordan,\" I whispered to her. \n\nThe brightness of her smile turned up several notches. \n\n\"I know lover,\" she giggled, \"oh boy, do I know.\" \n\n\"Mommy? Daddy?\" came a little voice on the other side of our bedroom door interrupting our post-coital intimacy. \"Is it time yet?\" \n\nMy beautiful wife buried her face into my chest and laughed. It was a sound I swore I would spend the rest of my life trying to give to her daily. \n\n**** \n\nEpilogue: \n\nSo did I bring joy to her life every day? Nah, I succeeded most days but not all of them. Let's face it we're both pretty damaged people. Between my anger, her fears and Fate occasionally taking a dump in our path, there were days that there wasn't much to laugh about. Luckily those bad times have been few. \n\nI haven't been able to completely avoid seeing Tim over the years. Our company's corporate office is in Dallas, so that's where they hold the big company meetings. Yes, I'm still with the same company. They were loyal to me when I needed help and now I try to stay loyal to them. Of course, now that they've made me the head of their Louisiana operations with a paycheck to match, it makes it pretty easy to be loyal. \n\nTim and I are cordial to each other on the occasions our paths cross but that's about it. About five years ago, Jordan and I went to Dallas for the weekend to attend a corporate awards banquet. My team was being honored. \n\nAt the banquet, Tim and Anna approached us and asked us to dinner the next evening. Even though it had been fifteen years since our last meeting, I wasn't all that excited about it. However, one look at Jordan told me it was time to let it go, so we accepted. \n\nIt was friendly but guarded. The conversation focused mainly on family, work and the cities we called home. Anna still carried a little extra weight but looked good. We found out they had two kids, a boy and a girl, about the same ages as our sons. \n\nThe only mention of Britney was when Anna informed us they had drifted apart when Anna had gotten pregnant with her second child. She'd heard many years later that Britney had remarried but that she'd eventually developed AIDS and had died. She believed Britney and her husband had adopted two HIV-positive children from Africa but she wasn't certain. \n\nI hadn't thought about Britney in several years so I was ambivalent when I received the news of her death. That chapter of my life had long since been closed. \n\nOver the years, Jordan has blossomed in a true force of nature in the community. My wife has become a local celebrity both in the business and public sectors. \n\nShe took over the art studio when Jonas and Starr retired and moved out to Colorado. Something about legalized pot, go figure. Jordan poured the same passion and love into the studio that she gave the kids and me. So it was no surprise that the studio has been so indisputably successful. \n\nBut it was in the area of public service where she endeared herself to our city. Eight years ago, Jordan was asked to speak at a local conference on domestic abuse and recovery. \n\nMy beautiful, thirty-nine year-old, wife showed up in a pair of jeans and a bikini top. While her scars initially shocked most of the audience it was her words that absolutely stunned them. She spoke with an intense confidence and was brutally frank when describing certain parts of her past. But it was when she compared herself to New Orleans that she won their hearts forever. \n\nLike the area when Hurricane Katrina hit, Jordan stated her life was left scarred and broken. But it was the love of some friends, her children and her soul-mate that restored her to life. She would always bear the scars just like the city would, but those scars didn't make her who she was, they were just a reminder of where she'd been. Sort of like a road map. ",
        "Her life was a masterpiece, just like the city she loved, and nothing could ever change that. And yes, I took a little credit for that one. \n\nThere wasn't a dry eye in the place when I and our four kids joined her on the platform. The applause was loud as she kissed each child's forehead but it became deafening when she kissed me with such passion that I didn't hear the cheers and catcalls for several minutes afterwards. \n\nThat's right, I said four kids and yes, I did give her a little girl... two actually, Marie and Julianna. They're both teenagers now and look like they're going to be as tall and beautiful as their momma. As a matter of fact, Jordan and I are getting ready to go see Caleb graduate from high school. \n\nJordan and my marriage has changed somewhat. As she's become stronger, I've backed off some and let her bloom. She's rewarded me for that by loving me even more, as if I thought that was ever possible. Our love has matured in so many ways and it seems to be interwoven in everything we do. Of course in other ways it hasn't changed much. \n\nJordan's wearing her FMP's tonight and giving me a sweet impish grin. With the girls all staying overnight at a friend's house, I've got a feeling we won't be staying for any after graduation receptions. I wonder if we'll even make to my truck! \n\n**** \n\nAdditional Note: The lyric quoted? If You Could Only See - recorded by Tonic. Just givin' credit where credit's due."
    ],
    "authorname": "DFWBeast",
    "tags": [
        "cheating wife",
        "adultery",
        "betrayal",
        "loss",
        "alcoholism",
        "recovery",
        "new orleans",
        "btb"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/bless-this-broken-road"
}