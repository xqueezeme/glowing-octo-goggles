{
    "title": "Dream Weaver Ch. 04",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 15 - The Whirling Dervish\n\nI was barely aware of the commotion above me. I could not move. I managed to open my eyes, and I saw blood spattering. A second later, FBI lawyer Bond fell to the floor, his head bloody, crushed in...\n\n... by a crowbar.\n\nCindy! I thought to myself. She's here, she's fighting above me! I realized to myself, somehow knowing it. I saw more blood spatter, and heard a man scream in pain. I still couldn't move, but I fought to stay awake... to live.\n\nOthers joined in, and the fight was over. I heard the voice of an older man say \"Let's get him in here.\" I felt hands pull me up off the floor, then half-carry, half-drag me back into the room I'd come from. I was now back on the table, but sensed I was among friends.\n\n\"Saline solution, Doctor.\" said a voice. I realized it was FBI Agent Sandra Speer.\n\n\"Good.\" said the voice of Dr. Leonard Cordell. I felt a needle go into my right arm, into the vein. As the saline solution started going into my vein, I felt instantly better. Life and death kind of instantly better.\n\n\"We've got to get some moisture into him, but not too much at one time or it'll thin out his blood. Then we've got to get some nutrients into him.\" I heard Dr. Cordell say.\n\nA moment later, I felt another presence, then heard another voice, a very familiar voice say \"How is he, Doctor?\" It was Cindy's voice.\n\n\"He's near death.\" said Dr. Cordell. \"We're doing what we can.\"\n\n\"Near death, hell.\" I whispered, forcing my eyes open. \"Not even close.\"\n\n\"Don!\" Cindy gasped, taking my left hand in hers. I squeezed her hand as hard as I could... that wasn't much, but I felt her squeeze back.\n\n\"Damn, I cannot believe it.\" Cordell said. I wasn't believing much of it, either...\n\n* * * * * * * * * * * * * * *\n\nDr. Laura Fredricson, Deputy Director of the CIA for Science and Technology, dressed in all black, came into the hallway and surveyed the carnage. Four men lay dead on the floor; the heads of two of them had been crushed by severe crowbar blows, one that almost took the top of the man's head off. Two others had had their necks broken. And other men were seriously injured.\n\nHell hath no fury like a platinum blonde scorned, she thought. And a blonde armed with a crowbar.\n\nLaura had come up to Cindy and taken the blue crowbar from her with the words \"May I?\" Now, as she wiped the crowbar down, she turned to the object of her sheer fury.\n\nDr. Casey B Walker was being held to one side by FBI Special Agent Martin Nash, Walker's hands cuffed behind his back. Jack Muscone, Todd Burke, and Teddy Franklin had helped Dr. Cordell get her husband Don into the other room for emergency treatment. Other agents, loyal to Laura, were waiting for their orders.\n\nThere was one other person there, as well. The woman whose name could not be spoken came up to Walker. \"Looks like Commander Troy was not guilty of treason, after all.\" the woman 'Diana' said.\n\n\"Like hell he's not, even if I didn't prove it... this time.\" Walker snarled, his face a mask of fury... and insanity.\n\n\"There won't be a next time.\" the older woman said. She turned to Laura.\n\n\"Well, Dr. Walker, looks like you're the one who has committed treason here---\" Laura started, but Walker interrupted her.\n\n\"I want my lawyer.\" he said. \"I'll see you in a courtroom in New York. And then we'll see who's the traitor.\"\n\nLaura smiled... a smile that nobody ever wants to see. She tapped the blue crowbar in her hand as she said \"Oh, I don't think this one is going to see the inside of a courtroom.\" Then her voice quietened but filled with menace as she said \"You know how we handle things like this Walker.\" She then turned to the CIA agents loyal to her and said \"Take this piece of crap out of my sight...\"\n\n* * * * * * * * * * * * * * *\n\nI was in and out of it as I felt hands cleaning me up. I found out later that it was a pretty bad mess. Then I was covered in sheets and transported out of the building. Then I was dreaming that I was in that helicopter with Pastor Raymond K. Westboro. 'Kyle' Westboro, the man whose name Ned had used for his identity while in The Asylum, perhaps out of sarcasm... or respect.\n\nIn reality, I was being life-flighted to University Hospital. I would find out later that the facility I'd been in was underground, below an old dilapidated warehouse on the outskirts of the City that was secretly owned and operated by the CIA.\n\nAt one point during the flight, I woke up and said \"Laura!\" I heard Cindy say \"She'll be coming right behind us. She's taking care of the bastard that did this to you...\" I was back out of it by the time she finished the words...\n\nPart 16 - Awakening\n\nWhen I woke up again, I was in a room in University Hospital. Two bags were hanging on a rack next to me... one was whole blood, the other some liquid food... the only way to be properly fed in a hospital, I thought to myself. I was also catheterized, I realized. Not the first time I'd awakened to that, I realized.\n\nI looked up. I could see through the window that it was still dark outside. Cindy was asleep on the sofa in front of the window. My iPhone and other personal items, as well as some clothes, were on a table to my left, and I could not reach them.\n\nAbout that time, Cindy woke up, and saw that I was awake. \"Good morning, sleepyhead.\" I said. \"What time is it?\"\n\nShe looked at her watch. \"4:30am.\" she said, getting up and coming to my bedside.\n\n\"I think the better question is: what day is this?\" I asked.\n\n\"Friday, July 1st.\" Cindy replied.\n\n\"Geez... what happened to me?\"\n\n\"What's the last thing you remember?\" she said, answering the question with a question.\n\n\"Uhh...\" I said, \"We had the victory party for solving the Westboro case. You and I talked in my office, then I left for home. I saw a plane come into County Airport, then... nothing after that, until I woke up in that room.\"\n\nCindy nodded. \"On the road to your house, the Mountain Nest, you called in on the radio that there was an accident. When the responding Officers got there, they found the two collided cars, and your Police SUV, with your crowbar, badge, and gunbelt in the seat. The other cars were empty. Cameras caught a van coming out of there, which went to County Airport. And that plane you saw... probably was the one that took off with you in it. It went to the City, landed at their smaller airport for small private jets. We lost you after that.\"\n\nCindy continued: \"Your wife recognized the plane that came in as belonging to the CIA, so she had an idea that something was going on with them. We told Bettina and Priya that you were working with the FBI on the Westboro Syndicate, and so to not even bother asking about you. Needless to say, we were all beside ourselves trying to find you, but your wife and the FBI guys were the ones doing most of the work.\"\n\nI nodded. \"So, where was I?\"\n\n\"There's a secret CIA facility in the bad areas of the City. They had a building there, and an underground base. Apparently they have one in Midtown and one in Southport, and Laura wasn't sure which one you might've been taken to, until that signal device you had was set off.\"\n\n\"I seem to remember someone over me, abusing some heads with a crowbar.\" I said. \"Which I appreciate very much.\"\n\n\"Yeah, I took care of business.\" said Cindy. \"When I saw you lying there...\" She paused a moment, working hard to keep from getting emotional, then said \"Well, let's just say I didn't hold back.\"\n\nAs much as I tried to stay awake, I couldn't. \"Wake me up for Bettina's broadcast...\" I said...\n\n* * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" was the next thing I heard. \"Channel Two News has learned that Police Commander Donald Troy has been admitted to University Hospital for exhaustion and dehydration!\"\n\nBettina went on, reporting from in front of the Hospital: \"Commander Troy has been working for several days with the FBI on leads to the Raymond Westboro syndicate. While many arrests have been made, more are expected. The FBI reported that Commander Troy simply overworked himself and did not take proper care of his body until he collapsed. The Hospital issued a statement saying Commander Troy was resting comfortably, and recovering rapidly.\"\n\nAs Bettina went on, talking about the Fourth of July festivities, my doctors came in. One was Dr. Morgan, the other... Dr. Leonard Cordell.\n\n\"Ah, you're looking one hell of a lot better than yesterday.\" Cordell said.\n\n\"Thanks for saving my life.\" I said.\n\n\"Did what I could.\" said Cordell as Dr. Morgan listened to my heart and took my pulse, you know, doctor stuff. He said \"Dr. Cordell, I think we can take him off the blood and saline after this bag is done. We'll keep tube-feeding him, though.\"\n\n\"Good, if that means I won't have to eat the hospital food.\" I said, trying to smile. Dr. Morgan chuckled, then left.\n\n\"I'll just tell you this, son.\" said Admiral Cordell. \"I didn't think we were in time. I am stunned you survived. Happy, but totally stunned. You're one tough S.O.B.\"\n\n\"Not gonna let those bastards get me down.\" I said. \"And please tell Dr. Milton that his device worked... and saved my ass.\"\n\n\"Yes, yes it did.\" said Cordell. \"We picked up the signal. Fortunately we were close by, but your wife will have to tell you all that.\"\n\n\"Which she will,\" said my wife Laura, entering the room, \"when my husband is sufficiently recovered to hear it.\"\n\n\"I'll leave you two alone.\" said Cordell.\n\n\"Thanks, Doctor.\" I said. He nodded to me, and to Laura, I noted, before leaving.\n\nLaura turned to me. \"Come here.\" I said. She bent over me and I pulled her down and kissed her mouth as hard as I could. She returned it.\n\nWhen she raised her head, there were tears in her eyes. \"Darling, I am so sorry...\"\n\n\"It's not your fault.\" I said. \"How are the kids?\"\n\n\"Distracting me, I see.\" she said, seeing my ruse. \"The kids are fine, but Carole has been missing you and asking where you are.\"\n\nI nodded, then realized I was tired again. I heard Laura say \"Just relax, Darling... we'll talk later...\" I didn't catch the rest...\n\nPart 17 - Issues And Answers\n\nWhen I woke up again, out of a (fortunately) dreamless sleep, I felt better. Much better. The I.V.s were no longer attached to me, though I was still catheterized. I took the catheter out (hey, it's my penis, nurses!) and tried to sit up. I made it to a sitting position, my legs hanging over the side of the bed. \n\nI felt a bit lightheaded, but that cleared up as I breathed and then looked around. I was wearing black pajamas (real pajamas, not a ninja suit). I noticed red marks on my ankles, then I looked at my wrists: there were round red marks on them, as well. I realized that the electric shock torture had been real.\n\nNo one else was in the room with me. Getting up, I saw my sword cane next to the chair with my clothes on it. I checked my iPhone; it was 5:30am, Saturday July 2d. Taking the cane, I headed to the door. When I opened it, I saw a Police Officer sitting by the door in a chair. It was Patrolman Phil Goodwright, and he seemed shocked to see me.\n\n\"Commander!\" he whispered. \"Are you okay? You should be in bed, sir.\"\n\n\"I'm tired of bed, Patrolman.\" I said. \"Did Captain Ross go home?\"\n\n\"No sir.\" said Goodwright. \"She's in the waiting room right down the hall, there. Her father just came in a few minutes ago.\"\n\n\"Good.\" I said. \"I'll be back in a minute.\" With that, I ambled down the hall towards the waiting room. I heard a woman's voice, and she sounded upset. I turned into the room.\n\nCindy was on the sofa to the left of the door, her father Dr. P. Harvey Eckhart sitting to her left side. And she was crying. \n\n\"He was just laying there,\" sobbed Cindy, \"and I couldn't do anything about it. I couldn't help him...\"\n\n\"Now you know...\" I said out loud, \"exactly how I felt when you were lying on that gym floor.\"\n\nCindy looked up, her eyes showing her shock. Eckhart's eyes were twinkling as he nodded.\n\n\"Don...\" Cindy said. \"For God's sake, sit down.\" I did so, on her right side. She put her arms around me in a bear hug and would not let go. I hugged her back. I also reached over her and shook Eckhart's hand.\n\n\"Thank you, Dr. Eckhart.\" I said. \"For everything.\"\n\n\"Oh, it was my pleasure, young Donald.\" said Eckhart. \"I am delighted to see that you were able to survive those despicable people and what they did to you.\"\n\n\"Thanks for what?\" Cindy asked, knowing there was something going on between me and Eckhart, but not knowing what.\n\n\"Later.\" I said. \"I think I'll keep this secret from you, just for the sake of doing it.\" That got Cindy laughing, then she started crying again.\n\nAnd then, standing before me, was the lovely black Nurse Jones. She needed no words. I got up and went back to my room, Cindy helping me and Dr. Eckhart following.\n\n* * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redhead from outside the Hospital at 7:00am. \"Commander Donald Troy remains in University Hospital, recovering from exhaustion and dehydration! Doctors are saying that he is recovering well and should be released from the hospital soon.\"\n\n\"Channel Two News is also investigating a report that Commander Troy was life-flighted from the City to University Hospital. The FBI is not commenting on the situation of Commander Troy's illness, nor where he was taken ill. Chief Sean Moynahan of the Town & County Police Department would not confirm any details, but said he expects that Commander Troy might have to be restrained from trying to return to work too quickly.\"\n\n\"Good thing this is a three-day weekend.\" I said to Cindy, who was watching the newscast with me. \"I guess running the Triathlon is out.\"\n\n\"If you try, I'll chase you down.\" said Cindy. \"And knowing us, we'd end up winning the damn thing.\" I chuckled, as did Eckhart.\n\nBettina wasn't finished: \"And in national news, career State Department diplomat Dr. Casey B. Walker was tragically killed when he stumbled in front of a moving bus in Washington, D.C. yesterday afternoon. Eyewitnesses say Dr. Walker was on his afternoon jog and tripped just as a bus was coming around the curve. The bus driver, who was a substitute driver, could not stop in time. Police say that the driver was not impaired, and no charges are expected in what was simply an unfortunate and tragic accident...\"\n\n\"That karma is a bitch.\" said Cindy.\n\n\"As is my wife, when she's fired up.\" I said, knowing what had just really happened.\n\n\"Okay,\" Cindy said, getting up. \"I'm going to go call in to the Station and see if anything is going on. So you guys can talk about whatever it is that you won't tell me about.\"\n\n\"In due time, my friend.\" I said. Cindy was not mollified, but left. I had obtained the anti-bugging device from my wallet in my pants, and I now activated it.\n\n\"I owe you a debt of gratitude,\" I said to Eckhart, \"for that post-hypnotic suggestion.\"\n\n\"Ah, I see you figured that out.\" said Eckhart.\n\n\"Yes, as soon as I heard the words 'January, Suborbital, Denomination', and came out of their drug-induced hypnosis.\" I said. \"I figured you'd planted it in my head when Wargrave forced you to brainwash me.\"\n\n\"Actually, no, my young nephew.\" said Eckhart. \"It was done the night you brought Eleanor Burke in. That's why the three words had to be the same; you were being treated at the same time she was. You were made to believe you were sitting in my office, looking out at the River the whole time, but you were undergoing my therapy at the same time she was.\"\n\n\"You see, Donald,\" continued the founder and great leader of 'The Vision', \"I knew that it was possible that someone in the Government might try to come after you. Your FBI friends are good people, and your wife is a wonderful woman... but there are some very bad apples in those organizations, as well. So I 'conditioned' you that if you heard those three words from someone else, and not yourself, it would create what I call a 'post hypnotic snap', which would flood your brain with activity and allow you to overcome any hypnotic spells you might be under at the time.\"\n\nI nodded. \"It worked. I guess that's why I used those words for my passwords when I was in that dream state... for lack of a better term. But it felt real... very real, too real.\"\n\n\"Yes. Their methods are diabolically effective, and they work untiringly to make them even more viciously efficient.\" said Eckhart. \"And by the way... my daughter has also been conditioned the same way by my methods, without her knowledge. If she is ever in trouble, you can use those same three words to activate her mind and snap her out of any trouble she is in.\"\n\n* * * * * * * * * * * * * * *\n\nAt 9:30am, Cindy and I received visitors after Dr. Eckhart had returned to The Vision World Headquarters. The visitors were my wife Laura, and Cindy's sister Molly. The only child with them, however, was Carole.\n\n\"Daddy!\" my daughter cried out upon seeing me, a radiant smile on her little face. There was a smile on my face, too as I held out my arms for her.\n\n\"Hi, Fussbudget.\" I said. \"Are you being a good girl for your mommy?\"\n\n\"Yes, Daddy.\" Carole said. \"Are you coming home soon?\" Out of the corner of my eye, I saw Laura nod.\n\n\"Yes, Carole.\" I said. \"I'm coming back home soon, and you and I can play with Jim, and with Bowser and Buddy.\" Carole smiled brightly at that.\n\nI chatted with Molly some while Laura waited patiently, then Cindy said \"Hey Carole, why don't you and I go take a walk with Molly.\" Carole reached out for Cindy, who took her, leaving me alone with Laura... who had a computer in her hands.\n\n\"Dr. Morgan is going to release you later today.\" Laura said. \"But only after finding a way to make you promise to go home, get in bed, and continue resting. He was seriously considering having you sedated to keep you from doing too much too soon, so don't push your luck.\"\n\n\"Yes, ma'am.\" I said. \"What's the computer for?\"\n\n\"I'll tell you the whole story when we get home.\" Laura said. \"But I wanted you to see this first.\" She opened the computer and started a video. It showed a camera in that hallway, recording me coming out, trying to fight off my attackers, and then being subdued. And then it showed what happened next.\n\nMy God... how in the hell did I win the Police Boxing Matches? I thought to myself. The video showed the lawyer Bond throwing punches at my head, then getting up to kick the back of my head. He missed and got me on the shoulder... and then there was a flash of blue.\n\nThe CIA agents were well trained in the martial arts. But they had no chance when Cindy came into the fray like a whirling dervish. It looked like a choreographed Bruce Lee movie... but the blood showed that it was not.\n\nOne man took a solid crowbar blow to the side of the head, and the crowbar nearly went through his head; he was dead instantly. Two other men tried to grab Cindy and were thrown off, the second one having his arm torn out of its socket by a savage blow as Cindy pulled him by her.\n\nThen the lawyer Bond went at her, and the blue crowbar swung again. Blood went everywhere as his head was crushed in. Another man tried to grab Cindy from behind, and as he came over her shoulder she grabbed his head, twisted it, and he dropped dead with a broken neck. One last man received a powerful kick to the head, which also broke his neck and killed him, so I was told. ",
        "I saw others helping me to the other room, followed by Admiral Cordell, and Jack Muscone and Martin Nash helping to secure the arrest of the other men. The tape then stopped as Laura was taking Cindy's blue crowbar from her and wiping it down.\n\n\"Wow.\" I said. \"She obliterated six agents and that asshole Bond.\"\n\n\"Six highly trained agents, too. I've never seen anything like it.\" Laura replied. \"She was on fire. Any idea why?\"\n\n\"Didn't like her blood kin being fucked with?\" I asked. Laura nodded.\n\nWhen Cindy brought Carole and Molly back in, I said \"Carole, give your cousin Cindy a big hug for helping your daddy.\" Carole gave Cindy a big hug, and Cindy realized what I'd just been watching.\n\n\"You saw?\" she asked.\n\n\"Did I ever.\" I said. \"Thank you.\"\n\n\"You did the same for me, and Teresa, at Ward Harvester.\" Cindy said.\n\n\"I wasn't facing six-to-one odds.\" I said.\n\n\"Oh heck, those odds are in Cindy's favor, every time.\" Molly said, teasing her little sister. That got me laughing, and I couldn't stop...\n\n* * * * * * * * * * * * * * *\n\n\"And here he is, being rolled out of University Hospital in a wheelchair!\" shouted Bettina Wurtzburg as KXTC and KSTD carried my dismissal from the Hospital live at 2:30pm. I waved at the small crowd, being held behind a police tape line with officers behind it.\n\n\"Commander, what happened to you?\" shouted Priya Ajmani.\n\n\"Didn't drink enough water.\" I shouted back.\n\n\"Where is your crowbar, Commander?\" shouted Bettina Wurtzburg. That was a damn good question, I thought.\n\n\"Captain Ross is the real Iron Crowbar today, but don't tell anyone; it's her secret identity.\" I shouted back. A blue crowbar was waved in my general direction by the aforementioned platinum blonde.\n\n* * * * * * * * * * * * * * *\n\nAs I got out of the car at the Mountain Nest, I was greeted by a lovely sight. My mother Phyllis came out to greet us... alive, well, and looking healthy and radiant. I gave her a warm hug and she helped me inside.\n\n\"First, some soup.\" my mother said as I sat at the breakfast table. The soup was a medicinal chicken and herb dish, and it was delicious. I felt very much better as I finished off the bowl.\n\n\"Okay, I'll be going now.\" said my mother a half hour later. \"Don, Molly and I are keeping the kids and the dogs, and of course we'll have Cindy, Teresa, and Todd looking in on us. Meanwhile, you get some rest son. Mother's orders.\"\n\n\"And doctor's orders, too.\" Laura said. She escorted Phyllis to the door as I went into the den. The bed inside the sofa on the far wall had been pulled out and made up so that I could sleep in it without having to climb the stairs. I changed into pajamas and laid down. Laura came and cuddled beside me.\n\n\"I saw the news report that Casey Walker had died.\" I said. \"Tragic accident.\"\n\n\"Not tragic to me.\" Laura said with asperity. \"So, first, I need you to tell me everything you can remember during your ordeal.\" I told Laura the story as best I could remember it, leaving virtually nothing out... except the actual passwords themselves. That was my and P. Harvey Eckhart's secret.\n\n\"So,\" Laura said, \"they induced you to believe Todd, Chief Griswold and Cindy were dead, and that you had no children. They killed off your parents in your 'dream state'. I didn't exist at first, and you were married to Melina, who cheated on you with Jack Burke and then left you. They were taking away all the people and things you loved and could cling to, then inducing you to feel emotional pain, to demoralize you.\"\n\n\"I guess that's why they had Jack and Martin be bad guys, too.\" I said. \"You know, I first started realizing something wasn't right when I saw a man at The Asylum that I'd never seen before. You once told me that we cannot dream of people that we don't know or haven't met or seen, that our brains can't make up anyone out of nothing. This guy was older, distinguished, big forehead, glasses, tall. Does that ring a bell?\"\n\n\"No.\" said Laura. \"You're right about people in dreams... so maybe he was really standing there, and you were aware of him?\"\n\n\"Yeah, that's what I was thinking.\" I said. \"So they kept asking me about jump drives, and classified information, and trying to make me admit I was a traitor... which I am not.\"\n\n\"Yes.\" Laura said. \"What happened is that Dr. Casey Walker began 'Operation BEEKEEPER' to investigate you. He thought you'd passed classified information to Priya Ajmani, and blamed Sharples for it. He then further thought you were a criminal, maybe even the Consultant, when he thought you knew too much and were solving too many crimes too quickly. He's not the only one that has ever thought that, I might add.\"\n\n\"Your old mother, 'Diana', thinks that, too.\" I said.\n\n\"She once did.\" Laura said. \"Then you called her by her name and rocked her world, in the non-sexual sense. Anyway, Walker got Bond and Staffeld to go after you, and for Walker and Bond it got really personal, especially after you pushed back against Bond on the questioning. Then I stepped in, and that made them angry at me as well as you, and even more determined to 'prove' you were a traitor.\"\n\nLaura went on: \"They tried to force you to confess by those 'enhanced interrogation' techniques, but you never would confess. That convinced some of my superiors at the very highest levels that you're loyal. Walker pretty much went insane, and went way over the line in his treatment of you; ergo, after we interrogated him, my authorization to terminate him with extreme prejudice was approved... and again, at the very highest levels.\"\n\nI nodded. \"I guess those methods aren't all that effective.\" I said. Laura looked at me funny.\n\n\"Don, you have no idea.\" Laura said. \"Those are some of the most devastatingly effective techniques we have. And some of the most brutal and least-used. We rarely have to go that far; enemies usually break long before that. Even some of our most hardened Islamist enemies broke from things like waterboarding, which pales in comparison to what they put you through.\"\n\n\"I guess that's because I was innocent? And not unwilling to die... and that because they went too far in taking my life away, giving me nothing to live for, to hope for.\"\n\n\"That may well be the case.\" Laura replied. \"Especially the latter part. You'd just all but tried to commit seppuku on that helicopter, and your mind is such that you refused to submit, preferring death to the dishonor of treason.\"\n\nI nodded, contemplating it all. And I decided it was too much to process at the moment. \"Okay.\" I said. \"Well, I guess on Tuesday I'll start helping the FBI with the Westboro Syndicate again. How are they doing with that?\"\n\n\"Oh hell, they stopped the minute you were reported missing.\" Laura said. \"Poor Jack Muscone has been beside himself, and now has a reputation for grinding agents into the ground relentlessly looking for you. His boss, the Deputy Director, was working with me looking for you, as well.\"\n\n\"How did y'all find me?\" I asked.\n\nLaura replied, \"You saw that plane come into the airport just before you blanked out?\" I nodded and Laura said \"That plane was Walker's, and they used it to fly you to the City. We traced it quickly enough, but we didn't know where you were. I didn't even know about that secret CIA facility west of the City; I only knew of the one near the Railyards, and you weren't there. But we were monitoring the City area, so when your alarm went off, we were almost right on top of you.\"\n\n\"And Admiral Cordell helped you?\" I said. \"You asked him? or he asked you?\"\n\n\"No.\" Laura said. \"I think Teresa told him about you being missing, or maybe it was Myron and Mary. Cordell was one pissed off man, too. Then Todd and his friend Teddy showed up and insisted upon helping look for you. It was easier for me to just let them than waste time arguing. And when your transmitter went off, Cordell and Todd were all over it like white on rice.\"\n\nMy brain did process that, and rather quickly. There was only one question left... where the hell was my original red crowbar, that had been on the helicopter with me and Westboro?\n\n\"There is one other thing, Darling.\" Laura said. \"The processes and the drugs that were used on you... have never been used on anyone we intended to keep alive.\" As I looked at my wife in shock, she nodded and said \"Yes, every person who has ever been subjected to what you endured... did not survive. You are the only one who managed to live through it.\"\n\n\"As such,\" Laura said, \"I'm going to be studying you, and watching over you. Others will be watching over you, as well, including Cindy and your Chief. Please don't take their heads off if they seem overly concerned about you or watchful over you. The truth is that you should be put on Restricted Duty for a long time, even months, but you'll never go for that.\"\n\n\"So it's unofficial,\" she admonished, \"but we have no idea how you're going to react to things going forward. So take it easy, let me know of any physical, mental, or emotional strange feelings you have... besides when looking at my legs like you are now... and don't try to hide anything, especially if it might endanger the lives of anyone on your Police Force.\"\n\nI was stunned at what I was hearing, but I agreed with Laura's 'requests'... knowing they were not just the TCPD Psychiatrist's 'requests'.\n\nPart 18 - Day of Freedom\n\nMonday, July 4th. Though I was recovering well, I was still tired. So I was given a wheelchair to toodle around in. That morning, instead of going to the Start Line for the Triathlon, I went to Police Headquarters. I had to shake a lot of hands of Officers welcoming me back. Well, I didn't have to; I wanted to.\n\n\"Oooooh, nice ride.\" said the ever-perky Tanya Perlman, driving down the hall to greet me. \"Wheelchair races, anyone?\"\n\n\"I'll take a raincheck.\" I said. \"How are you doing?\"\n\n\"Good.\" Tanya said. \"They're going to be finished with the new State Crime Lab building soon. I'll give you a tour. By the way, you have a visitor in your office.\" I wheeled down the hallway.\n\nInside my office was Jack Muscone. When he saw me, his beady eyes became a little wide, and his handshake with me was a bit firm.\n\n\"Hi Jack.\" I said. \"Someone tried to beat you to the witch trial.\"\n\n\"Thank God they failed.\" said Muscone. \"I think you heard what Captain Ross did to those guys who were beating you down in the hallway. My only regret is that I did not get to do that to them myself.\" I wheeled around behind my desk as Jack sat in a 'hot seat' and told me that on Tuesday we could start nabbing more Westboro people. All I had to do was sit in a chair or in bed and correlate the data.\n\n\"You'd better have a damn good reason for being in this office instead of at home resting.\" I heard a voice say. It belonged to the Town & County Sheriff, Daniel Allgood. He came into the office, followed by Chief Moynahan. I made a point to shake hands with both of them before answering.\n\n\"Sheriff, I am at home.\" I said. \"This office is home.\"\n\n\"Heh heh heh heh.\" chuckled Moynahan. \"Sheriff, you will never be able to con-tain the Iron Crowbar. At least here in his office, I can make him sit quietly instead of chasing after bad CIA Agents.\"\n\n\"Uh huh.\" said the Sheriff skeptically. \"Seriously, Don, Melina and I are very happy you're okay. Having said that, I really don't want you overdoing it until you've recovered.\" The mention of Melina's name triggered my memory of the induced dreams in my head. If I wasn't careful, I'd begin wondering what was the dream, and what was reality...\n\n\"May we join this party?\" asked a happy voice, belonging to the ever-irreverent Mary Mahoney Milton, as she and Myron came to the door.\n\n\"By all means, please!\" I said.\n\n\"Don,\" said Muscone, \"these two people have been a godsend to us in tracking down Westboro. Please tell me what it will take to hire them away from you.\"\n\n\"Not even burning me at the stake will work.\" I said. I would later thank Myron and Mary, and tell them to thank Myron's father profusely for that signal device that had fortunately worked to perfection... and saved my life.\n\n* * * * * * * * * * * * * * *\n\n\"And here he comes,\" said the radio announcer as I listened in on my earpiece. \"Todd Burke is in clear first, with the Bradley Rangers simply unable to keep up with Burke and his partner Teddy Franklin today. The real race is for third place, with the Army ROTC team holding off the Coltrane County Fire Department team...\"\n\nI was at The Fairgrounds, near the finish line, sitting in the wheelchair. I was wearing my light blue shirt with my badge embroidered over the heart, khaki pants, and my khaki Tilley Hat. I had my (current) red crowbar, as well. Technically, this was a uniform, so I had my gunbelt on... I had not yet been put on restricted duty.\n\nWith me were Laura, Molly, Cindy, Teresa, Joanne and Seth, Barry Oliver, Myron and Mary Milton, Tanya Perlman and Jack Muscone, Martin Nash and Sandra Speer. A large number of people had greeted me today, everyone from the Mayor, Congressman Condor, and Councilman John Colby, to little Susie Haskins, Davie Marsdon and Timmy Austin. I took selfies with the kids.\n\n\"Davie, Timmy,\" I said to the boys, \"you did a great job telling Sergeant Rudistan about your secret passage under First Baptist Church. Because of you, a lot of lives were saved.\"\n\n\"That's because of you, Mr. Crowbar, and Captain Ross.\" said Davie. \"We just showed them the secret panel.\"\n\n\"You did your part.\" I said. \"And I suspect good things are coming your way for that.\" Yes, I did have plans...\n\n\"Mr. Crowbar,\" said Timmy, \"can we get a tour of Police Headquarters?\"\n\n\"Why, I think that can be arranged.\" I said. \"Maybe on August 1st, how about that?\" The boys were very excited.\n\n\"Sir,\" Teresa said quietly, her right arm and shoulder immobilized, \"August 1st is Promotions & Medals Day. It'll be a really busy time...\" I just smiled enigmatically at my Vice Lieutenant.\n\n\"Yes, it will be.\" I said. \"And trust me, it'll be the perfect time for the boys to come through and see us...\"\n\nI then studied Teresa. \"Tell me, Lt. Croyle, how you happen to be able to still be on active duty?\"\n\n\"She qualified with a gun left-handed.\" said Cindy Ross, overhearing us. \"Only the second person ever to be qualified with both hands with a gun. Hmmm, wonder who the first person was...\" That first person to do that was Your Iron Crowbar.\n\nJust then, Todd Burke crossed the finish line, in first place. Teresa was not beaten going over to him for congratulations, followed by his BOW Enterprises people and Cindy. Meanwhile, Tanya was peering at me, her cheeks rosy and her eyes twinkling.\n\n\"You've got something planned for those boys.\" Tanya said.\n\n\"Oh, I've got a lot planned... a lot.\" I said, smiling. \"And I'm going to need your help on some of it, too.\"\n\nPart 19 - Soul of the Iron Crowbar\n\nFor the next several weeks, I basically sat at my desk. I'd re-qualified with my gun, both left-handed and right-handed. Lt. Teresa Croyle was at Police Academy Advanced Course, and Detective Joanne Warner was at Detective School. They'd be back by August 1st. \n\nFortunately, it was a very quiet month. I spent most of my time either with the FBI or with Myron and Mary, putting together the threads that wove into a tapestry of successful prosecutions of dozens, even hundreds of Raymond Westboro Syndicate members.\n\nI also spent time putting Officers in for awards, writing up recommendations at every level. Cindy wrote up one that made me smile when I approved it. And some of my nominations caused Boards of Inquiry to be convened... I'd put both Cindy and Teresa in for the Medal of Valor.\n\nIt was a busy time, but fortunately not a physically demanding one, and I'd fully physical recovered from my ordeal, and was even beginning some swimming and Aikido training. But my back still hurt, sometimes badly. That was a problem.\n\nAnd that led to Friday, July 22d. My nephew Todd came to get me before dawn. I hugged and kissed Laura goodbye, and I noticed Todd sneak a kiss from Laura while I hugged my mom. Todd then drove me to County Airport, where we boarded a plane. It took off, then headed northwest.\n\nWe landed at Seattle, then boarded a bigger plane. It looked like a typical Japan Air Lines jet, but once I was aboard I was surprised to see it was not typical of airline seating. It was composed of compartments.\n\n\"Ah, Donald-san.\" said Takaki Misaki as I was invited into a back compartment after we took off. \"I am honored to have you with us on our flight.\"\n\n\"I am honored to be here with you.\" I said. After Todd and I were invited to sit down, we were served sak\u00e9 by Todd's assistant Mariko, who was actually the daughter of Misaki-sama.\n\nAfter talking with them for a good while about how I defeated Westboro, we all went to our assigned beds to get some sleep. I woke up just before we landed. Our destination was Tokyo, Japan.\n\nI had my passport, but did not need it. Special buses met our plane, and whisked us out of the airport and onto the road that led south and west of Tokyo, towards Odawara and Atami, with Mount Fuji-san in the west.\n\nI was taken into a complex of buildings that had once been an ancient castle. As it grew dark, I was given proper clothes to wear: a red kimono with black patterns across it, a sash belt, leggings, socks and slippers. The ancient costumery was kind of cool.\n\nTodd was dressed similarly, but his kimono was all black. Takaki Misaki met us and led us into an audience chamber. I was totally stunned at whose presence I was in... the Emperor of Japan himself.\n\nWe all bowed formally and he bowed back. He congratulated me on my successes against Westboro, but also against the rogue Corrigan Cell, the Casey Walker Cell, and the fight against Superior Bloodlines. There must be something bigger than I originally realized, I thought to myself.\n\nAfter our meeting with the Exalted, I was then led to a small room. It opened into a large outdoor courtyard. I was invited to sit down and watch a short video. And I found out where my red crowbar had gone.\n\n\"We took the liberty of taking your crowbar, Donald-san.\" said Misaki. \"As you can see, it has been transformed.\" That was an understatement. I watched as a disciple of Yoshindo Yoshihara, Japan's preeminent swordsmith, melted down my crowbar, along with other metal from the helicopter, from First Baptist Church, and from raw iron ore. Over time, which was several weeks, the metal was forged into two swords... one of them being a katana.\n\nAs I had watched, Misaki had left me and Todd. Now, as a large drum beat steadily my nephew escorted me into the Courtyard. There were several dozen people, all in black, some masked, a few not. I went through the rows of men to the rhythm of the drum to the dias in front, where Takaki Misaki awaited me. He was now in a formal kimono uniform with a large overmantle, as he'd worn in the field at Cemetery Hill during the Tea Ceremony back home.\n\nBehind him, I noticed that someone was in a chamber, shrouded by curtains. And I realize that it was likely the Emperor or a family member in there, thus giving the seal and mandate of the Chrysanthemum Throne to this ceremony.\n\nMisaki-sama opened the ceremony by saying something in Japanese, and the assembled gathering shouted as one in reply. He then said \"Donald-san, the Iron Crowbar, your virtue and service are beyond reproach. To whom do you swear loyalty?\"\n\n\"To the United States Constitution.\" I replied with alacrity. That apparently was a good answer. An old man, a scribe, imprinted words on five pieces of rice paper with hiragana script. Mariko came up, her hands in latex gloves that contrasted with her lovely peach kimono, and used a device not unlike a diabetes-tester to prick my finger. She pressed my finger to the five pieces of rice paper, my blood smearing them.",
        "\"Donald-san, you gave my son Taichi great honor in his greatest moment. In return, and for your greatest honor in defeating a most powerful enemy, I give you your crowbar back as a memento, perhaps in slightly different form.\"\n\nTodd came up with long box. Opening it, Misaki displayed the two swords in their sheaths, wrapped in silk. \"These swords were crafted at the invitation of the Exalted himself by the swordsmith Yoshindo Yoshihara and his apprentices. Remember, Donald-san, the sword is the soul of the samurai, and your crowbar will always be part of your own soul now.\"\n\nWith that, Misaki extended his left hand with the short sword. \"Arigato, Misaki-sama.\" I said. Mariko helped me to put the sword in my sash belt, then Misaki extended his right hand with the katana, and I thanked him again. Instead of putting the sword in my belt, I turned to the audience and pulled the sword halfway out of its scabbard so that they could see it. The craftsmanship was incredible; I was now in possession of one of the very finest swords in the world. The assembled group shouted three cheers.\n\nMisaki took out a fan with an intricate design on it and opened it. He waved it three times with some wording, and all of the assembly raised both hands and shouted again and again in reply. Todd would tell me later that this was a ritual of renewed loyalty to whatever we'd sworn loyalty.\n\n* * * * * * * * * * * * * * *\n\n\"I guess you've figured out what that was all about, Uncle Don?\" Todd said as we flew back home.\n\nI said: \"The Media likes to talk about groups like The Illuminati, the Bilderburgers, Skull & Crossbones, and whatever. They're the Globalists, the Elitists, and people like Mitt Baker, Conrad King, and Wallace Bedford are a part of them.\"\n\nI continued: \"What the Media does not tell us about are the groups opposed to the Global Elitists, who worked to found the United States after winning our freedom in the Revolution, who work to keep Free Men free, who work to stop the corruption. Takaki Misaki is one of those, as is the Deputy Director of the FBI, Jack Muscone's boss. Obviously you're a part of it.\"\n\n\"As is my mother, your sister.\" said Todd. \"We're sort of independent, though I've allied with Misaki-sama for a long time. The CIA tried to recruit me as well as my mother and Ned. Ned gave them lip service, while Mom and I flat-out rejected them, as did you.\"\n\n\"So Melina tried to recruit you into the CIA, eh?\" I said.\n\nTodd looked surprised and said \"No, it wasn't her. She didn't commit to them until recently.\"\n\n\"And Eckhart?\" I asked. \"He's allied with us, isn't he?\"\n\n\"Not much gets by you, Uncle Don.\" Todd said with that brilliant grin of his. \"Yes, Dr. Eckhart is a... 'friend', I guess would be the best word. And now you are one of us, if you want to be, or you can stay independent and work on your own. Knowing how good you are, that might be best for all of us, that you stay on your own. We know you have no love for the Establishment and the Globalists.\"\n\nI felt the katana in my left hand, in its scabbard. The handle was covered by an intricate weave of read and black threads. Good Wildcat colors, I thought to myself. And the steel is of the steel that destroyed the evil Reverend Jonas Oldeeds, and the insidiously evil Pastor Raymond K. Westboro. The sword felt alive in my hand.\n\n\"What are you going to name it, Uncle Don?\" Todd asked. \"The katana?\"\n\n\"I don't know.\" I said. \"It'll come to me.\" Well, actually it already had a name in Japan, it was simply 'The Crowbar Katana'...\n\nWhen we got home to County Airport, Lt. Teresa Croyle was there to greet us. She no longer was wearing her sling. Surprisingly, she bowed to both of us, and we bowed back as she said \"How was your trip, Commander?\"\n\n\"Good.\" I said. \"You qualified with your gun again?\"\n\n\"Both hands.\" said Teresa. \"Just like you. May I see the Crowbar Katana?\"\n\nI showed it to her...\n\nPart 20 - Day of Honor\n\nAugust 1st. A lot was going on, but the most important thing was that it was my daughter Carole's third birthday. We had had her party for her the day before, knowing that today would be busy. I looked in on her, seeing her sleeping peacefully. The redoubtable Bowser, by way of contrast, was alert and watching me.\n\n* * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF reporterette from in front of City Hall at 7:00am, Monday, August 1st. \"It is going to be a huge day today as the Police and Fire Departments celebrate their promotions and medals day. It's an especially huge day for the Police Department, as the Town & County Council has confirmed that at least one Distinguished Police Cross will be awarded for the first time in over a quarter century! There will be a parade at noon, followed by the public ceremony at 1:00pm here in front of City Hall.\"\n\n\"Channel Two News has also learned that the last recipient of the Police Cross, Joe Smedley, will be present at today's ceremony, showing himself in public for the first time in years. It is not known if Mr. Smedley will present the Fire Cross to its recipient, whom neither the Council nor the Police Department will identify at this time.\"\n\n\"The Council has not confirmed what other awards will be given out today.\" said Bettina. \"Many people believe that a special award is in store for Commander Donald Troy after his role in breaking up the Raymond Westboro Crime Syndicate, but there is no confirmation on what that might be, especially as Commander Troy has already been awarded a Medal of Valor in the past.\"...\n\n\"The Commander?\" said Joanne Warner. \"A Police Cross for what he did? He should be getting the Medal of Valor.\"\n\n\"He already has an M.O.V.\" said Lt. Wes 'Coldiron' Masters.\n\n\"He should get a second one.\" said Cindy Ross.\n\n\"True.\" said Teddy Parker. \"Maybe it's you for the Police Cross, Captain Ross. Or Lt. Croyle.\"\n\n\"The only thing I know,\" I said, walking into the room with my companion, \"is that just about every Officer on the Force is going to be getting something today.\"\n\nI then turned to Joanne with my companion. \"Detective Warner, you remember your buddy Bowser, don't you?\" I handed Bowser to her after he sniffed her and found her to be a friend.\n\n\"Oh, I just love this dog! What a sweet dog!\" she said, petting him as he sat on her desk. Bowser had on his Police bandana over his back, and his K-9 badge on his collar. He looked utterly adorable and his usual redoubtable self.\n\n\"Joanne, would you keep Bowser for a couple of hours for me?\" I asked. \"You can keep him in my office or another room.\"\n\n\"Yes sir, I'd love to.\" said Joanne as Teddy Parker attempted to make friends with Bowser. I told him to let Bowser sniff Teddy's fist, and soon enough, Bowser had more friends.\n\n* * * * * * * * * * * * * * *\n\nAt 8:30am, two groups of Army ROTC cadets convened in the Civic Center. They were both going to be in the parade today. One of the units was from the University. The other was from my School. They were Cadets of the rising Senior classes.\n\n\"It's great to see you again.\" said the Colonel of the Wildcat delegation, shaking my hand. \"I heard all about your day with Pastor Westboro, and also what happened with some bad people at the Federal level. Glad you're okay.\"\n\n\"Thank you, sir.\" I said. Then I stepped up before the two groups.\"\n\n\"Ladies and gentlemen, I'm Police Commander Troy, and---\" I was interrupted by applause, as both groups gave me a standing ovation.\n\n\"Thank you.\" I said after a moment. \"I need to hurry, here. First, I want to thank both groups for being in the parade today. It's an honor to have some of my fellow Wildcats here; I remember when I was one of you. And I got to work out a lot of mornings with the Bulldog cadets, which I also appreciate. You're all great people, and I hope you'll do well in your military careers.\"\n\nI then said \"I asked you here this morning so that you could hear from someone.\" I turned to the door, and Chief Griswold wheeled in old Mr. Davis. Mr. Davis was in his old Army uniform, with Airborne wings and the Pathfinder badge over his rows of medals... which included the Distinguished Service Cross and the Purple Heart.\n\n\"Mr Davis here was one of those that jumped behind the lines on D-Day.\" I said. \"And even more, he was a Pathfinder that marked the landing zones for the Paratroopers. Mr. Davis, would you mind speaking to these future Officers?\"\n\n\"Commander Troy is too kind in his introduction.\" said Mr. Davis. He then proceeded to talk to the Cadets, who were a rapt audience. I had to leave for the Medal ceremonies at Headquarters, but I was told that it was an extremely fascinating next two hours for those in the room. It was also recorded on videotape for posterity, for those days when Mr. Davis was no longer among us...\n\n* * * * * * * * * * * * * * *\n\n\"Here it is.\" Commander Della Harlow said as she opened the box. We were in my office, and she was showing me the new medals.\n\n\"Wow, that is beautiful.\" I said. It was a Distinguished Police Cross. The Maltese Cross was in blue enamel with silver trim over a wreath, with the Public Safety seal in the middle. The cloth drape and ribbon was solid red, with blue border and thin white stripe separating the red and blue.\n\n\"And here's the Distinguished Service Medal.\" said Della. The ribbon was solid blue with blue edges and a thin white stripe between them.. The Medal was a sunburst of rays, every other one enameled blue and the remainders enameled white.\n\n\"Also very nice.\" I said. \"What else?\"\n\n\"Well, we're about to find out.\" Della said mysteriously. \"It's time to go into the backyard and give some medals out.\"\n\n* * * * * * * * * * * * * * *\n\nThere were few promotions, but a lot of medals. Mostly Achievement Medals, and those were given out in groups, units, of Officers to save some time. Then came Commendation Medals.\n\nThis included my personal favorite award of the day. I brought my dog Bowser up, and Cindy pinned a K-9 Commendation Medal upon his collar as the Chief read the proclamation rewarding Bowser for exposing the Consultant of Crime. That proclamation would proudly hang on Bowser's owner's wall... next to my Medal of Valor citation. I held Bowser up with great pride as the Officers applauded him.\n\n\"He loves that dog more than he loves me.\" Laura whispered to my mother Phyllis in the grandstands as they watched the ceremony. Phyllis just giggled and patted Laura on the thigh.\n\nHigher medals then came. Every Officer that went into the Church while it was rigged for bombs, save two, received Police Medals. One of those two excluded Officers was Sergeant Micah Rudistan.\n\nAnd that was because he became the second Police Officer to be awarded the Public Safety Legion of Excellence, which was pinned up on him by the first recipient, Lt. (Ret.) Tanya Perlman. It is possible they were a both a little mischievous about it as she pinned the medal on his uniform jacket.\n\nThen came the Purple Order. The medal around the neck could only have one oak leaf cluster, designating multiple awards, so I pinned a medal with a drape and two clusters onto Teresa Croyle's uniform jacket. Amazingly, this was the only Purple Order for the Police. The Fire Department was awarding one to the bomb squad member who was injured when the First Baptist Church collapsed.\n\n\"Okay,\" said the Chief to conclude the ceremony, \"those in the parade be at your assigned places before twelve noon. The rest of you, report to City Hall before 1:00pm for the ceremony.\"\n\nAfter the ceremony, my mother took Bowser to take him and his medal home, and I took Davie Marsdon and Timmy Austin and their families on a tour of Headquarters. They were dressed up in suits and clip-on ties, looking as uncomfortable as I am sure they felt. But they were loving every minute of it. The inmates in the holding cells shouted at them to intimidate them; the inmates were actually doing it for the kids' own good, to scare them straight. Davie and Timmy wanted no part of jail.\n\nAnd like the Senior Citizens some months before, the boys' favorite part of the tour was the Iron Crowbar's office.\n\n* * * * * * * * * * * * * * *\n\nThe parade was a good one. The three high school marching bands marched. The Bulldog and Wildcat Cadets marched. Fire trucks carried Fire and Police Officers around the route, including me, Cindy and Teresa. After we disembarked at City Hall, the Booker T. Washington High School Band performed on the cleared street between the City Hall portico and the grounds of the Square, which was rapidly filling with people. The BTWHS Band put on an excellent choreographed routine.\n\nAnd then came my surprises.\n\nI'd gone to the Trophy Shop and gotten some medals. They had red, white, and blue ribbons, and either silver or gold medallions. I had the words \"Crowbar's Crew\" engraved on them. Two were gold, the rest silver.\n\nTo start off the ceremonies, I had Davie Marsdon and Timmy Austin come up. One way to instill leadership in others: put them in front of people. Davie and Timmy faced several thousand people in Courthouse Square as I draped the the gold medals around their necks for their part in the evacuation of First Baptist Church. Davie the former troublemaker was loving it. One day in the far-flung future, David Marsdon would become a Brigadier General in the United States Army... and it all started here.\n\nThen came the twelve Senior Citizens of the Community Center, including old Mr. Davis and old Mrs. Boddiker, Mrs. Williams, and the others. They got the silver medals, and had insisted that Cindy Ross put them around their necks; she was their honorary member. Even old Mr. Davis got emotional; it had meant something to him to be able to contribute in his old age.\n\nNext up... was Captain Cindy Ross. For her role in leading the evacuation of First Baptist Church, she was awarded the Police Distinguished Service Medal. Chief Griswold read the proclamation as I clipped the medal on her uniform jacket pocket. I thought it should have been more, but this was indeed a very high award, rarely awarded before retirement. And it came with a metal-bordered blue ribbon, giving Cindy three such rectangles on her regular uniforms. Dr. Eckhart was on the stage, and had been sitting by Cindy as her family. He had tears in his eyes, I noted.\n\nThen Chief Griswold made an announcement: \"For the next award, the first Police Cross in decades, we are honored to have a special guest to make the award. Retired Admiral Leonard Cordell is a veteran of several wars, including Viet Nam, serving as a medic and then a doctor, patching up our wounded soldiers, and some of our wounded Police Officers, as well. He has asked for the honor of pinning this award upon it's recipient.\"\n\nAdmiral Cordell came up in his formal uniform, the first time he'd worn it in years. I saw the foremost medal on his jacket: the Navy Cross. Cindy Ross moved to the podium to read the proclamation. She had insisted, and after what I'd seen on that videotape, I was not the one that was going to tell her she couldn't. She called up her friend, Lieutenant Teresa Croyle, and read the proclamation as Admiral Cordell pinned the Police Cross on Teresa's uniform.\n\nDr. Cordell then gave Teresa a crisp hand salute. Not flinching, Teresa returned it. Only a few of us knew that that salute was not just between them: this was a salute that reached across generations, and a father and a daughter.\n\nAfter a huge round of applause for Teresa, she did not return to her seat, but came around behind the group of dignitaries on the stage... and stopped behind me. She unclasped the Medal of Valor around my neck and handed it to Laura, who just happened to have its box in her purse. Then Teresa motioned for me to come forward.\n\nSensing what was happening, the crowd began cheering. Chief Griswold came up and said \"Ladies and gentlemen, I cannot trust myself to read this one. So I've asked my friend, and former Police and Fire Officer Joe Smedley to help read the proclamation.\" Joe Smedley came up, wearing civilian clothes and the Medal of Valor around his neck.\n\nFireman Roy Easley had been the last recipient of the Medal of Valor, but today he conceded to be the one holding the box. Cindy put a stool behind me as I stood at the front of the stage. As Joe Smedley read the proclamation acknowledging my defeating one of the most viciously evil crime syndicates ever, and at extreme danger of the loss of my life, Cindy took the Medal of Valor, with an oak leaf cluster on the panel above the medal, and draped and fastened it around my neck. I was the first, and would be the last, to receive more than one Town & County Medal of Valor.\n\nAs the audience began applauding loudly, I felt something tugging at my leg. I looked down to see a three-year-old hugging my leg. My three-year-old. Carole had somehow gotten away from her mother and run up to me. I picked up my daughter, ignoring the pain in my back, and told her to look at all those people. She just clapped her little hands like they were doing.\n\nAs I looked over the crowd, I cynically thought of how they wanted my scalp just weeks before, because the Consultant and the Media told them to hate me. Now, they were cheering me loudly. Tomorrow, they would demand my scalp again, if told to by the Media or anyone else taking advantage of their lemming-like desire to blindly follow.\n\nI also remembered the words of the final scene of the movie 'Patton', as stated by George C. Scott:\n\n\"For over a thousand years, Roman conquerors returning from the wars enjoyed the honor of a triumph - a tumultuous parade. In the procession came trumpeters and musicians and strange animals from the conquered territories, together with carts laden with treasure and captured armaments. The conqueror rode in a triumphal chariot, the dazed prisoners walking in chains before him. Sometimes his children, robed in white, stood with him in the chariot, or rode the trace horses. A slave stood behind the conqueror, holding a golden crown, and whispering in his ear a warning:\n\n\"All glory is fleeting.\"\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/dream-weaver-ch-04-1"
}