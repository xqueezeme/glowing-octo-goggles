{
    "title": "The Hunger Ch. 13",
    "pages": [
        "I highly recommend reading chapters 1-12 before beginning this chapter. While this chapter can be read as a stand alone story it is entirely dependent on the events of the earlier chapters. A writer thrives on your feedback. Please take a moment to vote and leave a comment if you feel so inclined. Your votes are greatly appreciated. I hope you enjoy my scribbling.\n\nI wanted to warn my readers that this chapter while definitely sexy, is also definitely lacking in action packed sexual content that you may have come to expect in the previous chapters. This chapter was a break in the action that I felt was needed to set up the following chapters. However, never fear, Kim will be back to her usual adventures in the next chapter. I hope you enjoy. \n\n+++++++++++++++++++++\n\nI awoke the next morning to a wonderful sensation. Sometime during the night Heather and I had switched positions and her longer, lankier body was curled around mine. Her hand was once again draped over my breast. I felt her warm, slow breath against my neck. After sleeping alone for so long, I thought I could grow used to this. \n\nI noticed sunlight peaking through the window and looked over at the clock, 7:00. Wow! Normally an early riser, this was the latest I had slept in on a weekday in a long while. I recalled that I didn't have to go to work and as much as I wanted to luxuriate in Heather's warm embrace, my peanut sized bladder had other ideas. \n\nI managed to slip out of bed without waking her, wanting to allow her to catch up on her sleep. She just may need her rest, I giggled to myself, as I recalled the adventure I had planned for us. I slipped quietly in the bathroom and after taking care of business there decided that coffee was in order. After setting up the coffee pot and starting it, I went off to take a shower. I would have preferred to shower with Heather but I felt pretty grody and didn't feel like I could wait for her. I decided a quick rinse off would suffice for now.\n\nMoving quietly, I returned to the kitchen for my coffee. I settled in on my sofa and turned on the TV to the news channel. I had turned the volume down, not wanting to disturb Heather. I don't know why I even bothered. I wasn't able to concentrate on the TV. My thoughts soon turned to Heather as I sat there, digesting the numerous events of the previous evening. She had certainly surprised me, although I must say they were pleasant surprises. I knew that she was capable of much more than I had seen in her, but the degree to which she had demonstrated this was the real shocker. As I have noted earlier, I saw a lot of my prior self in her. Obviously I had more experience than her but much of that experience was fairly recent. I was just slightly ahead of the curve. \n\nI reflected on the fact that I was quickly assuming the role of mentor to Heather, in the same way that Sharon, and to some degree Amy, had been to me. That thought both scared and excited me. After thinking about it for a while, I decided the fear was based on my own insecurities. The more I thought about it, the more I became comfortable with the idea that I had gone from student to teacher.\n\nAnother thing that had surprised me was how passionate Heather had been. This passion not only included how she had received pleasure, but also in the way that she had given it back to me. She had certainly gone through a rapid and extensive transformation. I thought this was worth some discussion with her and was uncertain about how to go about it. I finally decided to wait for the right time and just play it by ear.\n\nThese thoughts, and my rapidly developing feelings for Heather, led me back to thoughts of what sort of future we had with each other. The upcoming transition to a potential long distance relationship weighed heavily on my mind. On top of that was her upcoming graduation. Who knew where she would end up? At least in the short term we were going to be relatively close and my travel schedule would bring me close to her on a regular basis. As if that wasn't enough, there was the issue of how, if at all, my relationship with her would fit in with my relationship with Jim and Sharon. \n\nFinally I gave some thought to how these developments may impact what little planning I had done for the weekend. I felt that the possibilities had been greatly expanded. I had greater confidence in Heather's capability to handle whatever came her way as far as sexual exploration was concerned. I just wasn't sure how that may fit into the greater scheme of things. I finally concluded that this was another \"play it by ear\" issue. That grated slightly against my \"type A\" personality that wanted a plan for everything. However, in this case, I was forced to remain flexible. Planning is all great and wonderful when it's your own life, but a bit more difficult when the needs and desires of significant others are involved. \n\nMy mental jousting was interrupted by the more pressing need for a coffee refill. As I was leaving the kitchen, I heard the toilet flush in the bathroom. Heather was up and I decided to get her some coffee. I tried to recall how she took it. I checked the clock and saw it was already 8:30. I had lost track of time while lost in my thoughts. I found her in the bedroom.\n\nHer face lit up in a smile as I entered. My pussy throbbed once again as I saw her smile and my eyes took in her gorgeous body. I was just amazed at how she could have that effect on me. She took the coffee from me and kissed me. Her kiss lingered and I felt in it the reverberations of the passion we had shared the night before.\n\nBreaking the kiss, I asked, \"How did you sleep?\"\n\n\"Really good, I needed it. It would have been better if I woke up with you though.\"\n\n\"Yea, I know and I'm sorry. I woke up earlier and I knew you needed to catch up on your sleep so I slipped out. I'll make it up to you later, I promise,\" I replied.\n\n\"I'll hold you to that,\" she said, chuckling.\n\n\"I hate to be a spoil sport, but we have a busy day ahead of us. Do you think you can get moving after your coffee? I'm supposed to meet Jan at 10:30 and drop off the car and I need you to drive the other car to where I'm meeting her,\" I stated. \"If we hurry up, I'll buy you breakfast,\" I added.\n\n\"OK, that sounds good. I'll go jump in the shower. I really need it.\"\n\n\"Want some company?\" \n\n\"Sure, I would love it,\" she replied, her eyes sparkling and her face covered by a broad grin.\n\n\"We don't have time for hanky panky this morning, but I'll wash your back,\" I said. \n\n\"Deal!\" she replied.\n\nWell, I ended up washing more than just her back. I washed all of her, including her hair and I struggled with my sexual urges when I moved to her pussy, ass, and breasts. Her nipples were still sore from the nipple clamps and I tried to be gentle, softly brushing them with a soapy wash cloth. Then it was her turn and she washed my hair and washed me. Her fingers felt wonderful on my scalp, and although I had already showered I wasn't going to ruin her readily apparent fun by not allowing her soapy hands to roam across my exposed flesh.\n\nWe took turns getting ready in my small bathroom. I went first while she gathered her toiletries and makeup from her overnight bag. While she was getting ready, with her taking longer, I went to my computer and checked my account for the wire transfer. Sure enough it was there, and I quickly paid off a couple of bills before I was tempted to spend the money. I also moved some of the money into my savings account. Even after paying off my credit cards I was happy with the balance and excited by the possibility to have more than just a little disposable income for the first time in my life. Before I shut down the computer, I found the \"Nine Levels\" in my bookmarks and printed off a copy to give to Heather later. \n\nHeather was slipping into a cute blue sundress when I returned to the bedroom. I had checked the weather earlier and knew it was doing to be warm so I decided to join her with a similar dress. She was going without a bra and I gladly joined her in that as well, thinking that it would make shopping a lot easier. I did compromise by slipping on a thong, as had Heather. \n\nA few minutes later we were headed out. As we moved to the parking lot I briefly went over the itinerary that I had laid out in my head with her. The first stop was to the car wash to pick up my car and then on to meet Jan on campus. We agreed to wait until later for a larger meal and settled for a take-out cappuccino and muffin at the local coffee shop. \n\nWe managed to pick up and drop off my old car without too much trouble. Jan was a bit surprised when Heather showed up with me, but they greeted each other and chatted briefly while I took care of turning the car over to her. \n\nThat taken care of, Heather and I said our goodbyes and headed off for a day of shopping. This was a little different experience for me. While I had been shopping with friends many times, it was my first time to do so with a lover. I looked upon it as a great adventure. I had already decided to treat Heather and gotten her to agree to it as a reward for hooking me up with Jan, referring to it as a finder's fee. I had looked over her toiletries bag and knew she had everything she needed and what she didn't, she could borrow from me. That just left her wardrobe for the weekend and maybe a few other things. It wasn't as if she needed a lot to go to a nudist camp, but I was thinking more in terms of something for the party. \n\nWhile we were driving, Heather filled me on her friend, Jan. Jan had a reputation as a bit of a prude on the cheer leading squad. She, at least outwardly, wasn't the party girl that many of her contemporaries were. However, at the gym she had a much different reputation. Heather described her as a \"LUG.\"\n\n\"LUG?\" I asked.\n\n\"Yea, 'Lesbian Until Graduation',\" she explained. \n\nApparently, Jan had made it clear to several of the female clients and other staff members that she was available for trysts. Heather had had a friendly talk with her and told her she needed to cool it and be bit more discrete or she could end up getting fired. During this conversation, Jan explained that she was bisexual but had decided to swear off men while she was in school. She didn't want to get tied down in a relationship, but was more than interested in \"friends with benefits\" that could help meet her sexual needs. She also made it clear that while she was more into older women, she did find Heather attractive and was interested in including her in her games. Heather had been tempted, but somewhat hesitant, and it was about this time that I came into her life and she really hadn't given Jan's offer much more thought.\n\nThis conversation was just finishing up as we pulled up to our first stop, my favorite lingerie store. Heather mentioned that she had never really been \"lingerie shopping\" before and was excited. Previously, underwear was sort of an after thought at the local department store and her wardrobe was mainly sports bras, and a few miscellaneous panties and thongs. Her lingerie collection was definitely limited to the practical, utilitarian, daily wear variety. I was on a mission and would soon change that. \n\nI think Heather was a little surprised when I was greeted by name when we entered. I turned down the offer to help by the owner and told her that we would be doing some serious browsing and would let her know when we needed help. My focus was on Heather first and I had a few things in mind for her. I quickly discovered that she was going to be of little help but that she readily acquiesced to however I wanted to attire her. My mind flipped back to her previous explanation of her Dom/sub fantasy and it all started to make sense to me. I was good with that and tore through the small store like I was possessed. \n\nI basically just kept her stationed in the dressing room while I power shopped for her. It was pretty evident how happy this made her. She liked to being doted over and see seemed pleased with my choices but a little disturbed by the prices. I told her to not even look at the price tags, that that was my concern. She was obviously not accustomed to being spoiled. Our brief history, and hoped for future, made me feel like she was well worth spoiling. Besides, if all that I hoped for was to come about, she would need at least a basic wardrobe. She had giggled earlier when I said something about these being \"fuck me clothes.\"\n\nAbout an hour later I was satisfied and told her so. What I had come up with was at least the beginnings of a satisfactory lingerie wardrobe. It included items that she could not only wear to the type of event we would be attending over the weekend, but some lounge type items for quiet evening at home when more than bare skin was called for. The items I got for her included: a really hot bra, garter, and thong combo that was a royal blue and almost had me salivating. I actually got her two bras for the set. One was a demi cup bra that you could either leave the nipple exposed or not. I also got her a shelf bra that matched the set. When I saw her firm breasts perched on the platforms, I couldn't resist. Her breasts really didn't need a bra, but the bras were definitely a delicious decoration for them. She thought it was all a little silly until she looked at herself in the mirror. \n\nAfter seeing her in the cowl neck top she had worn the day before, I knew that was the style for her. I found a teddy with a similar design except that it plunged even further, almost to the navel. The teddy had detachable garters that I thought made it a little more flexible. After seeing her breasts displayed in it, it was definitely added to the \"yes pile.\" I got her another teddy that was made of black eyelash lace and has high cut legs and had a thong bottom that looked great on her. I also added a red silk cami and tap pant set that looked really cute on her. The top was a halter and the bottom is a set of boy shorts. Her ass looked great in it. I topped that off with a black lace body stocking that was crotchless. I also found a darling chemise that could be worn either as lounge wear or as a saucy cocktail dress. I carried the pile over to the cash register, and stopped and grabbed a selection of hose in various colors and styles to go along with some of the outfits. \n\nSomething else caught my eye and I grabbed a gauzy beach wrap that she could wear at the camp if she got shy or self conscious in bare skin. I had one that Sharon had given me that I sometimes wear when I think I have had too much sun but am not ready to go back inside yet. \n\nThe owner's eyes grew wide when she saw me bringing her the pile. They grew even more when I said, \"I'll be back.\" She immediately knew she was going to have a very good day. \n\nBy the time I got back, Heather had dressed and was waiting for me. I explained to her that my shopping was going to have two goals. One was for what I called my \"professional lingerie,\" in other words an upgrade of my current plain underwear. The other goal was additions to my \"sexy\" lingerie, meaning party wear. Whenever possible I was looking for items that could serve in both roles. Heather's role was primarily to help me when I went back to the dressing room by bringing different sizes and colors at my request. \n\nWith a plan in place we dove in with both feet. Heather turned out to be a lot more helpful when it came to helping me find items and making suggestions than she had been for herself. I guess she wasn't being held back by her fantasies in that regard. It turned out that our tastes in lingerie were quite similar and she found a few items on the racks that I found to be very appealing. \n\nI started off with the professional items while making note of a few \"sexy\" things that I would come back to later. The first item on my list was new bras, although I tried to focus on sets, like that I got for Heather. I wasn't sure if I could get away with garter belts with all my outfits, but my new found appreciation for them left me wanting to keep that open as an option. I ended up with four sets, along with a couple of extra bras. A few of them were shelf bras that I thought would work for play wear. One of the garter belts was actually a waist cincher, sometimes referred to as a waspie, that I thought was real sexy. Heather agreed and it was added to the growing stack. Most of these were from designer labels that I had previously eyed with desire but always considered to be beyond my meager budget. I justified the higher prices as being acceptable due to the higher quality and durability that went along with them, or so I hoped. \n\nI found a rack that had several nice teddies that had an under-wire cup and most had detachable garters. I got several of these in a variety of colors. Finally I got a couple of silk and lace camis that I could wear as a top under a suit jacket.\n\nI made another trip to the cash register and the owner was again wide eyed, especially when she saw some of the high end items. I just gave her a big smile and said that I'd be back. \n\nWhen we got to the party wear stuff, Heather was in heaven. I didn't really need a lot, but there were a few things that had previously caught my eye during previous visits and I decided now was the time to finally go for them. I was looking for fun stuff that I could wear to a party or for a lover. I wanted things that not only made me look sexy for an appreciative audience, but made me feel the same way. As we shopped, I explained this theory to Heather. She was all ears and nodded frequently with a growing degree of understanding. I had unknowingly slipped back into my mentor persona.\n\nI tried on a couple of sexy teddies that exposed various amounts of flesh and settled on a couple. I tried on a couple that were crotch-less but found them a little silly and opted for thong bottom or snap-crotch models instead. I tried to find teddies that were cut higher on the hip as I found that they tended to make my short legs look longer. I also strayed towards teddies that had a loose or lace top that exposed the swell of my breasts. Heather's feedback was invaluable as I tried them on. I tried on a body stocking like Heather's but rejected it. Without her longer legs it just didn't have the same appeal. I found a gorgeous black silk gown that I fell in love with. It wasn't overtly sexy, despite the plunging neckline and split bottom, but something about it appealed to me.\n\nFinally, my attention was directed towards the corsets. I found several that caught my eye but when I tried them on I was disappointed with how they fit me. I decided some professional help was needed and I called out to the owner. After a somewhat lengthy discussion, she and I came to the conclusion that the off the rack corsets, even in the smaller sizes, were just not going to work well for me. She mentioned that there was someone locally that made custom corsets for some of her more exclusive clients and that she could arrange to have one made for me that would fit like a second skin. I was enthusiastic about that idea until we started discussing price. She finally sold me on the idea that I could leave a down payment and not make the final payment until it was delivered. I was still hesitant at investing that much money on a single piece of lingerie. The owner, Sue, could still see that I was wavering. She mentioned that the corset had a lifetime warranty and that the price also included lifetime alterations. I did some mental calculations of my expected income in the next 30 days, the amount of time until it would be delivered, and finally gave into my urges.\n\nSue went to go get an order form and a tape measure and asked me to step back by the dressing room and strip down again. What followed seemed like a measurement of every part of my anatomy except the depth of my pussy. Sue, although very professional, seemed to give me a few lingering, appreciative glances and I couldn't help but get a little excited as her hands moved all over my naked body. Her touches and looks seemed to go beyond just what was needed for the measuring. ",
        "When she was finished and I was again getting dressed, for who knew how many times, I had an idea. \"Sue, would you mind getting my friend Heather's measurements while you are at it and just holding them for us. After I get this one back, she may decide she just has to have one too.\"\n\nSensing the chance at another big sale, she quickly agreed. Heather's eyes were wide as she stood there silently and was measured. I could sense her excitement. I think I made Sue's day with more than a big sale. From my perspective I could see that she was very much interested in Heather's sleek and fit torso as well. Sue is an attractive, elegant middle aged woman and she reminded me a little bit of Sharon. I had never really considered her in a sexual way in the past. I decided to reconsider that status. Perhaps it was her, or perhaps it was me, but there was just a subtle, sexual vibe present. \n\nSharon had once referred to something she called \"swingdar,\" which I guess is analogous to \"gaydar.\" She claimed to be able to somehow sense that someone that she had just met may be swinger, or at least open minded when it came to sex. Perhaps I was developing my own swingdar capabilities? I decided I would pay Sue a visit in the near future and perhaps further explore my suspicions about her.\n\nSue said there was one more step in the ordering process and she got a three ring binder that said \"Ann's Corsets\" on the cover. She had me pick out a corset design and a fabric from the swatches in the binder. She was very helpful as she went over the various designs. I finally decided on a full length model that came down to my hips. The bra cups had one interesting feature. The cups could be folded inwards so that it could be worn either as open cup, similar to a shelf bra, or as a full cup. The full cup allowed it to be worn as outerwear, with a skirt, and maybe a jacket to make up a full outfit. I liked the idea and it fit well into my plan of flexibility. It also had detachable garters, which I liked. She also mentioned that it would be designed so that it could be tightened up to 4 inches, depending on my desires for \"waist training.\" I had a vague idea of what Sue meant by waist training but I decided to do some research later and find out more.\n\nWith the order completed, we went back to the register and I resigned myself to facing up to the music and seeing how bad the damage was going to be. I showed Sue my repeat customer card that entitled me to a 10% discount. I had gotten that on a previous visit when I realized that I was going to be making many repeat visits to the store. I didn't realize how big a deal it was going to be at the time. Sue saw it in my hand and said that for a purchase of this size she could do a little better than 10%. That was music to my ears. She tacked on an additional 10%, bringing my discount up to 20%. \n\nWhile she was ringing up our purchases, I noticed something in the glass display case at the cash register and stopped Sue and asked her about it. Basically, it was a fake pearl G-string. I thought that was a fun and interesting idea and not very expensive. I pointed it out to Heather and she giggled and agreed. I told Sue to add two of them to our purchases.\n\nI also grabbed several pairs of hose from a nearby rack and threw them in. I knew I would be wearing hose more often and had already decided that I was going to avoid wearing panty hose as much as was practical. I had grown to enjoy the freedom of not having my crotch enclosed in hot nylon and the extra hassle of stocking was worth it. The fact that I was going to be out on the streets making sales calls, and not in an air conditioned office most of the time, made this a more important consideration for me. I got both stay up hose, and some sexy lace top hose that I could wear with garters. Some had a seam running down them. I also splurged on a couple of pairs of expensive silk hose. I justified their purchase with the fact they were less likely to run than nylon hose. \n\nI was somewhat shocked at the total when Sue was finished, but it wasn't as bad as I had expected. Heather's eyes went wide when she saw how much I was spending. I just handed over my debit card and watched as a good sized chunk of my windfall from selling the car dissolved with a swipe of the card. 'Oh well, easy come, easy go,' I said to myself. Besides, I would probably never need to go all out like this again. I resigned myself to the fact that this was a one time splurge. Then I reminded myself that I still owed the final payment on the corset as well. That was going to be another $200 but I would have 2 paychecks in the bank before I would have to come up with that. \n\nWe said our \"goodbyes and thank yous\" to Sue and struggled to carry several large bags out to my car. I was instantly happy that we were in my larger company car. The purchases from the lingerie store almost filled the trunk by themselves and the day was still young. I had never considered the possibility of buying lingerie in such bulk. \n\n\"Spending money makes me hungry, you ready for some lunch?\" I asked Heather.\n\n\"Yes, definitely,\" she replied. I led her to a nearby bistro that was within walking distance.\n\nAfter we had settled in and placed our order for ice tea and splitting a large chicken Caesar salad, Heather looked at me and said, \"I can't believe you.\"\n\n\"What do you mean?\"\n\n\"I can't believe you just spent that much money on underwear,\" she replied.\n\n\"It was fun, wasn't it?\" I asked in reply.\n\n\"Yea, but that was a lot of money.\"\n\n\"I know, but look at it this way, its not like it was a one shot deal right? Unless we balloon up to two hundred pounds, which isn't likely in the near future, it's something we can both continue to enjoy for years to come. It's not like we walked into a casino or something and blew the money with nothing to show for it. Besides, I can justify at least part of it as being new wardrobe for my new job.\"\n\n\"I guess so, but it's still a lot of money,\" she moaned.\n\n\"It was worth it, and besides, it was the most fun I have had with clothes on, even if it wasn't a lot of clothes, in a long time.\"\n\n\"Yea, it was fun. Thank you so much.\"\n\nI returned her smile and said, \"You're very welcome and feel free to fully show your appreciation later on.\"\n\n\"I plan on it, trust me on that,\" she said, grinning broadly. \n\nAbout that time the waiter appeared with our salad and an extra plate to split the salad and we changed the topic. The rest of our lunch time conversation was devoted to discussion of the rest of our shopping extravaganza and preparations for the trip to the camp.\n\nWe also agreed to split a piece of cheesecake. We readily justified the extra calories as being a reward for only having hadsalad for lunch. \n\nHeather insisted on paying for lunch. It wasn't much and I knew that paying would probably help resolve any guilt she felt at how much I had spent on her. So, I let her pay for it without too much argument, as long as I could leave the tip. She agreed to the compromise. We left cash on the table for the waiter and were quickly back on the road again.\n\nWhen we were back in the car I had a sudden thought. \"Heather, you don't own any sex toys, so you?\" I asked. \n\n\"No, not unless you count my fingers,\" she giggled sheepishly. \"My old college roommate bought me a cheap little vibrator once, mainly as a joke, but it didn't last long and I have always been too embarrassed to buy one for myself. It was pretty weak and was enough to get me aroused but not enough to make me cum,\" she explained.\n\n\"There's one of those big adult bookstores on the way to our next stop. I've always wanted to check it out. When I started buying toys, I was pretty shy about it too and got most of mine online. Since I have you with me to help fight off the perverts, I think I might be able to check it out. Whaddya say, will you be my body guard?\"\n\n\"OK,\" she replied, a little hesitantly, \"I guess I can give it a try, as long as I have you with me for moral support.\"\n\n\"I feel the same way,\" I replied. \n\n\"Just promise me one thing?\"\n\n\"What's that?\"\n\n\"Just don't go crazy buying stuff for me like at the lingerie store,\" she replied seriously.\n\n\"I won't make any promises I can't keep,\" I said while turning to grin at her.\n\nLuckily, this conversation was terminated by our arrival at the bookstore. I encouraged Heather to hurry up, before we lost our nerve. \n\nWe entered the store and were a bit surprised. First, we had to show ID to the young cute clerk to prove that we were over 18. I wasn't expecting that. Next, the place wasn't as sleazy as I was expecting. It was clean, well lit, and the products were well displayed. There were a few men wandering the aisles, and even two couples. The men, for the most part, looked like typical business or trade types on a long lunch break. I didn't see anyone that fit the scary \"pervert\" stereotype that I had feared and expected. \n\n\"This isn't so bad,\" Heather whispered in my ear. I nodded my agreement and we wandered around a bit, taking in the lay out of the store. \n\nI soon found the toy section and was amazed by the selection. I had grabbed a hand basket when we entered and I soon had a cordless egg and pocket rocket vibrator in it. I thought of them as inexpensive \"stocking stuffers.\" I also found a rabbit vibrator that I thought Heather might like. I decided to restock my supply of lube and added some Astroglide and silicone lube. Heather's comfort level must have increased and she wandered off a little on her own while I was getting the lube. \n\nI caught up with her and found her looking over a selection of anal toys. She blushed when she finally noticed me standing beside her.\n\n\"See anything you like there?\" I asked, ignoring her embarrassment and trying to sound like it was no big deal to reassure her.\n\n\"I have no idea, I was just a little curious about these I guess. I was just trying to figure out what they would do for you,\" she replied. \n\n\"Would you like a few recommendations?\" I asked.\n\n\"Do you... I mean... have you... used any of these?\" Heather stuttered, obviously surprised.\n\n\"Yea, I have a few in my toy collection.\"\n\n\"You just never seem to stop amazing me,\" she replied.\n\nI grabbed a set of anal beads and a set of three anal plugs labeled as an \"anal training kit\" and tossed them in my basket. Heather was silent but wide eyed at my choices. I also saw one of the fancy jeweled metal plugs that Amy had loaned me and I decided to add it to my own growing collection. \n\nI steered her to the next aisle where the dildos were displayed. Heather was amazed by the variety of shapes and sizes. We giggled like a couple of teenage girls about the different models and their various attributes. I noticed that she kept gravitating back to a really big realistic silicone dildo. I immediately flashed back to her description of her \"fantasy man.\" As we moved to meander on, and without her noticing, I grabbed \"fantasy man\" and deposited it in the basket. I led her back to where the DVD's were displayed. \n\nI had decided I would pick up a couple of movies for an occasional, quiet movie night. I had never really been a big porn aficionado but thought I would see what was available. My limited exposure to porn was usually in the form of something a former boyfriend had shared with me in his lame attempt at seduction. I assumed there was something better available. I had heard there were some that were designed more for women and couples and I thought I would check them out. \n\nWe were amazed at the selection but quickly discovered that most seemed to be of the stock male oriented, commercial variety. As we meandered through the aisles we found an area that contained specialty films. I was drawn to the lesbian section first and found that again most were of the commercial variety, although we did find a few that seemed to be made by women, for women and featured \"real people.\" Heather agreed with my sentiment on this and we collaborated on choosing a DVD that appealed to both of us. We found a section marked as amateur on the next aisle that appealed to both of us. We quickly found that most seemed to be commercial vids hiding behind an amateur label. Most of the actors were simply relative unknowns, as opposed to the big name porn stars in the main stream vids. We dismissed these but did find some that caught our eye. They seemed to be swinger parties that had been recorded and released as amateur movies. Heather and I read the covers on a couple of them and decided on one that appealed to both of us. The participants seemed to be \"real\" and the description of the action in the party appealed to us. \n\nWe wandered through the lingerie section out of curiosity, but the quality of the items there was very low. It was certainly no where near that of Sue's merchandise. Much was what I can only describe as \"disposable.\" It was the kind of stuff a man might buy for his wife to be worn once to satisfy some fantasy and then relegated to the back of a drawer. I sincerely doubted many women would buy this kind of lingerie for themselves.\n\nWe then took a quick stroll through the BDSM department. Again, my prot\u00e9g\u00e9 was in shock but not so much that she didn't ask me a lot of questions about the things hanging on the wall. I was able to answer most of her questions, but some of the more extreme items there left me in as much doubt as her. I was able to make some assumptions, but a few left me totally stumped.\n\nThe cute cashier greeted us with a smile. \"Did you find everything,\" she asked courteously and professionally, as if we had been shopping at a department store. I replied in the affirmative as she began to open the packages on the vibrators to install batteries and check them. She seemed very nonchalant about it and I assumed that in this kind of job she had probably seen it all. I couldn't help but wonder exactly what kind of experiences she might have had working in that kind of environment. \n\nAs she proceeded with the check out process, I noticed something in the display case that caught my eye. It was called a \"clit clip\" and was basically a wire that was doubled over and had glass beads hanging down on both sides. The clip part reminded me of the kind of hardware that you would use to hang drapes. The diagram on the package made its use pretty clear and I couldn't help but imagine Heather's cute pussy similarly adorned. I asked the clerk to add one to my purchases. \n\nHeather had wandered off as I was taking care of business with the clerk and she seemed to be enthralled with something in another glass display case. I approached her to see what had gotten her attention. The case contained a selection of piercing jewelry. I recalled our previous conversation on that topic as part of Dom/sub fantasy and made a note to explore it further at a later time. \n\nThe clerk seemed to be ready for me so I returned to her and with another swipe of my debit card I had managed to dispose of another chunk of the windfall. Admittedly, it was a lot less than what I had spent at the lingerie store, but still over a hundred dollars. As I was signing the receipt, I wondered if this store had a frequent customer discount program too. Probably not, I concluded. \n\nI caught Heather's attention and she rejoined me and helped carry out our new goodies. Our bags from the adult store were much smaller, but a lot heavier as we loaded them up and prepared to proceed with our shopping expedition.\n\nThe rest of the shopping trip was a slightly less eventful. I went to an upscale women's shop that I had only dreamed of shopping at before. I needed a couple of new suits to wear for work. I had the more casual items pretty well covered, but only had two suits, one of which was a present from my parents when I graduated, that I referred to as my \"interview suit.\" In my past position, those only were worn when there was a major meeting with clients that I was asked to sit in on.\n\nI quickly picked out 3 designer suits. Two were silk and one was wool. They were black, a pin-stripe navy, and black. I got both slacks and a skirt with each so that I could mix and match. I thought that they, along with the khaki and white suits that I already owned, would cover all the bases. \n\nThe shop had an in-house seamstress and I spent a few minutes with her and arranged for alterations. Again my short stature was an issue but the seamstress seemed competent and capable of doing a good job on the alterations. I had the skirts shortened to mid thigh. I planned on wearing heels with them and wanted them short enough to show a little leg, but long enough to cover hose and not be too trashy. I also found a couple of silk and cotton blouses that I thought were needed to fill out my wardrobe. \n\nI had an image in my head that I want to portray in my professional life. Basically it was a confident, attractive young woman that was not afraid to be a woman in a male dominated world. I wanted my \"look\" to portray a certain sense of femininity that was sensual but not quite sexual. \n\nHeather had wandered off while I was taking care of this. I found her over in the dress department, holding up a black mini-dress. It was pretty much your basic silk, \"little black dress\" except that it had a deep V in the front and a draped back that fell almost to the crack of the wearer's ass.\n\n\"Isn't it gorgeous?\" Heather exclaimed. I could see that she had fallen in love. \n\n\"Go try it on,\" I told her.\n\n\"No! Absolutely not! I can't afford it and I forbid you to spend anymore money on me,\" she replied, struggling to hold her voice down and not to create a scene.\n\n\"It doesn't cost anything to try it on, does it,\" she said. I could see that she was being swayed slowly and was susceptible to my logic. I had opened a crack and she stepped right through it. \"Do they have it in any other colors and my size?\" I asked. \n\nWe found the same dress in a rich purple that was my size. I grabbed both dresses and took her hand and led her to the dressing room. We shared a dressing room and helped each other try on the dresses.\n\nOne look at her in the dress and I knew we were going to get it. She exuded sex appeal in the most sophisticated way. The dress was made for her. I knew that Heather would put her foot down if I said anything so I decided to be sneaky about it. I was also pleased with the purple version on me. To be honest, it didn't have the same stunning impact that Heather's did, but like I said, the dress was made for her. I decided I might need a stunning number like this for the occasional cocktail party and did the math in my head as to whether both dresses would fit into my remaining budget. Sue's additional discount just about covered it and my mind was made up. Heather was definitely going to owe me. I was starting to see the appeal of being a \"Sugar Daddy,\" or is that \"Sugar Momma,\" even if Heather didn't really qualify as a kept woman.\n\nI handed the dresses to the sales woman that had been helping me earlier when I was selecting the suits and quietly asked her to add them to my purchases when Heather had wandered off again. I nodded towards Heather, held up a finger to my lips and she smiled in understanding. I'm sure she was paid on commission and she was more than willing to play along. \n\nI settled up at the register and checked with the sales woman about when my altered suits would be available. Another slide of the debit card and my funds were just about depleted, but not quite. I had one more stop planned and my power shopping plan would be complete. I carefully closed the bag with the dresses and blouses in it and gathered up Heather and we were off again.\n\n\"Where now?\" she asked.\n\n\"Shoes, of course,\" I stated, \"That should just about do it for the day and then we can head back to my place and get ready to leave.\"\n\n\"I would certainly hope so, you are certainly into doing the shop till you drop thing, aren't you?\"",
        "\"I've never done anything like this in my life and may never again,\" I replied. \"I'm just enjoying it while it lasts.\" \n\n\"I'm having fun too, I like helping you spend your money, I just wish you hadn't spent so much on me,\" she said, again beating a dead horse. \n\n\"Drop it, OK. I enjoyed spoiling you and you are worth it. Besides if I hadn't spent it on you, I would have just spent it on something frivolous for myself. One of these days, after you get out of school and have a great job, I'll let you return the favor. OK?\"\n\n\"OK, deal, consider it done, although I'll ever have the kind of money that you are spending on me.\"\n\n\"You never know.\" What I really wanted to say was that if she ate my pussy the way she had the night before, we would be even. I didn't say it though. I knew she would have taken it the wrong way; probably the same way I would have taken it if someone had said it to me.\n\nThe drive to the shoe store was relatively short. It was located in an eclectic area of alternative shops. I knew that it sold shoes that covered the range from mild to wild. They didn't carry the expensive designer brands, but their quality was good and prices were reasonable. I had never really fallen prey to the designer shoe addiction that had claimed some friends, as well as their credit card accounts. I was mainly looking for heels to go with my new suits and to fill in a few other holes in my business wardrobe. My previous work shoes were usually hidden under a desk. That was no longer going to be the case and the new shoes had to fit into the \"look\" I described before. \n\nI wasn't planning to go too far overboard. I wasn't looking for the kind of \"fuck me pumps\" I had recently bought, but was more interested in some sheek heels with a relatively high heel that would elevate my physical presence in business settings. \n\nWe tore through the store with a vengeance with Heather assisting me. I monopolized a young sales girl for a good while, sending her back and forth to the stock room. I was disappointed that they didn't have a few styles in my size but I finally settled on four pairs that I was happy with. I gave them to the girl and told her we were going to do a little more looking around. I found Heather over looking at the \"fuck me pumps.\"\n\n\"Have you ever worn heels like this before?\" I asked, sneaking up behind her. Even before the words came out, I had already considered the fact that she was probably going to need shoes to go with the black dress that I had bought her. \n\n\"No, never. I'm more of a sneaker and sandal kind of girl. Besides, I never really have the right kind of occasion to wear something like this. I don't even know if I could wear them without breaking an ankle. They are sexy though, aren't they?\"\n\n\"Uhh huh, they are definitely sexy. I have a couple of pairs,\" I stated.\n\n\"You do? Where do wear them?\" She asked.\n\n\"Mainly to parties, parties like we are going to tomorrow.\" Her face flushed as she considered my reference to the party. \"I have a little money left that is going to just burn a hole in my pocket, why don't we get you a pair. They aren't that expensive.\"\n\n\"No, not a penny more!\" she exclaimed.\n\n\"OK, we'll consider it a loan then. I know you want them. You can take me out for a nice dinner the next time you have a little extra money. OK?\" \n\nHer eyes flitted back and forth between me and a sexy, black pair with four and a half inch heels and ankle straps. I knew I had won and she had given into the temptation I had offered her. I could see it in her eyes. Without even asking her, I called the sales girl over, pointed to the pair and asked her to get us them in Heather's size after asking her what size she wore. Heather had resigned herself to getting the shoes and did not utter a peep. I was getting really good at this. \n\nWhile Heather was being outfitted with the shoes, I looked around the store a little. Off in a corner I found a pair of thigh high, stiletto heeled leather boots that I fell in love with. One look at the price tag told me that they were outside my budget but I knew I had to at least try them on. \n\nI went back to Heather and saw her walking shakily in her new heels. \"They take some practice,\" I offered. \n\n\"I guess so,\" she replied. \n\n\"Don't worry about it, you'll get the knack of it with a little practice. It's not that hard. I'll help.\"\n\nSeeing her in the heels produced something just short of a total melt down in me. Her legs were gorgeous barefoot, but in the heels they just made you want to spend hours licking them. I also took note of the change in her posture in the heels and the way her ass jutted out and her rolling hips almost made me start salivating. \n\n\"Those are definitely the shoes for you,\" I said, grossly understating how I really felt. One look at her face and I said, \"We'll take them.\" \n\nI did try on the boots and loved the way they looked and felt on me. The five inch stiletto heels not only increased my apparent height, they also seemed to lengthen my legs. Honestly, they did look a little silly with the sun dress I was wearing, but I tried to ignore that. Even if there had been any doubts about whether I would be returning to get them, the way that Heather looked at me wearing them was more than enough to settle the issue. I only hoped that the look of lust I had shown when she was trying on the heels wasn't as apparent as what I saw on her face. Her eyes were locked onto my legs in obvious fascination. I had apparently hit an exposed nerve. I was still taking notes. \n\nI begrudgingly gave the boots back to the sales girl and told her I would come back for them. After reconciling my own disappointment, I decided to get us out of there before I changed my mind. \n\nOne more swipe of the debit card and my windfall was officially history. We managed to squeeze the bags containing the shoes in the back seat. I purposely kept Heather away from the side of the car with the dress in it and tried to cover it up. I hadn't really planned on when I would give it to her, but thought I might save it for a special occasion, real or created. I giggled at the idea of our 3 day anniversary and then settled on saving it for a graduation present. I knew I was going to have a hard time resisting seeing her in the dress again, and soon. \n\nAs I was walking around the car, something caught my eye. There was a tattoo and piercing shop across the street. I pointed it out to Heather and asked her if she wanted to go check it out. I didn't have to work hard to persuade her.\n\nThere was a young man and woman sitting in a small lobby area, watching TV when we entered. I guess that they both were pretty much what you would expect in a place like that. I saw lots of tattoos on exposed skin, and a few facial piercings.\n\n\"Can I help you?\" The girl asked.\n\n\"Yea maybe,\" I answered. \"We may be interested in getting some piercings and wanted to see if you might have some information for us.\" I think I shocked Heather a little with the matter of fact manner that I discussed it. \n\n\"Yea, sure.\" The girl replied. \"Come with me over here.\" \n\nI followed her back to a small office area, Heather in tow, her hand gripped firmly in my own. \n\n\"By the way, I'm Dawn.\" the girl introduced herself.\n\n\"Nice to meet you Dawn. I'm Kim and this is my girlfriend Heather.\" \n\nI could almost sense Heather's reaction to my proclamation of her status as girlfriend. I knew part of it was that it was the first time I had publicly, or privately for that matter, proclaimed her status as girl friend. Part of it was also the fact that we were in public. I was aware of exactly what I was saying and how it would be received. I thought there could hardly be a better place for my first public declaration of our alternative lifestyle. I somehow doubted that someone like Dawn would be shocked. Besides, I was starting to like the idea of keeping Heather a little off balance and surprised. \n\nDawn didn't skip a beat and said, \"Here's a little booklet I put together with basic information about different kinds of piercings. It also has some links to some good online resource websites. BSME is a good one and there are a lot of testimonials and write ups on different people's piercing experiences, both good and bad, on the site.\"\n\n\"OK, that's exactly the kind of info we were looking for,\" I replied.\n\n\"I also have this after care information,\" she said and handed me a single copied page.\n\n\"After care?\" I asked. \n\n\"Yea, you know, how to take care of the piercing afterwards while it's healing, the do's and don'ts. That's where a lot of people end up having problems with piercings. They don't follow the after care instructions and they get infected or migrate.\" \n\n\"Migrate?\" I asked, feeling like she may be speaking another language. \n\n\"That's when the channel that's created by the piercings widens before it's healed and it may break through the surface or get too wide.\"\n\n\"OK, I can see how that could happen,\" I said.\n\n\"It happens, but like I said you have to pretty much ignore the after care instructions,\" she added. \"Where were you thinking about being pierced?\" \n\nBefore I could say anything Heather jumped in and answered, \"Hood and nipples.\" I was a little surprised. Up until that point she had been silent. \n\n\"OK, cool. There's a lot of info in there about them, especially about the different styles and jewelry.\"\n\n\"Styles?\" Heather asked, again speaking before I could say anything. \n\n\"Yea, you know, the placement of the jewelry. Female genital piercings are a sort of specialty of mine,\" Dawn replied. \"I included some pretty basic sketches in the booklet, but if you want to see actual pictures of the different styles then I would suggest one of the websites it refers to.\"\n\n\"OK, we'll check it out,\" I said. Heather was distracted, busy flipping through the booklet. \n\n\"Let me make a suggestion. Read the booklet and after care information. Do some research online and get some ideas of what you are interested in. When you are ready, come back and we'll sit down and do a consultation before we proceed. Some women are better suited for some piercings than others and I can make some recommendations based on your anatomy,\" Dawn said, clearly enjoying her role as instructor to what she must have thought to be a couple of na\u00efve lesbians. I couldn't deny the na\u00efve part. I made a mental note to talk to Amy about this as a sort of disinterested, and more knowledgeable, third party. Amy clearly had more experience at this sort of thing than either of us. \n\n\"One more thing,\" Dawn said, \"Is the purpose of the piercings more for decorative or errrr... sexual purposes?\"\n\n\"Isn't it possible to accomplish both?\" Heather asked, the nature of the conversation pulling her interest back from the booklet. \n\n\"Yes, I guess they are all decorative to some degree. Some are almost purely decorative. Of course the sort of response you get varies widely, depending on the woman. Also, the response can change over time. As you do some research, just take that into consideration.\"\n\nI asked Heather if she had any more questions and she said no. She buried herself back into the booklet. I told Dawn we would be back and we headed out the door. \n\nI hadn't gotten very far out the door when something else caught my eye and on a whim I grabbed Heather's hand and pulled her into the shop next door. It was a swimsuit shop and the window display is what had caught my attention. I had been infatuated with the micro bikinis that always seemed to be featured on TV travelogues from some Brazilian or Australian beach. I had even gone so far as to once web surf through the Wicked Weasel website. Even though fascinated by this type of bikini, I had usually written them off as impractical. After all, when would I be lounging on some beach in Brazil or Australia where I wouldn't feel totally self conscious in something like that? On top of that was what I had come to recognize as my self image body issues. The time I had spent at the nudist camp had gone a long way in curing those and bolstered my self acceptance. In addition, I now had my own personal trainer (who also just happened to sleep with me occasionally) that was seeing to the care and fitness of my body. I felt better about myself than I ever had.\n\nHeather rolled her eyes when she saw that I was dragging her into yet another shop. She too stopped and stared at the mannequin dressing in the micro bikini in the window display. She quietly acquiesced to my \"shopathon\" mentality. I quickly found the racks containing what I was looking for and dove in.\n\n\"Kim, I thought you were out of money,\" Heather said.\n\n\"Well, not exactly,\" I replied while doing mental math calculations in my head. The electronic deposit for my paycheck had hit my account that morning, in addition to the wire for car money. I had used the car money to pay most of my bills. I hadn't planned on dipping into the paycheck, but the sudden opportunity to fulfill my fantasy of getting a sexy bikini like this settled the matter.\n\nIt was a relatively quick stop, at least compared to the previous ones. I insisted that Heather get a similar micro-kini. She fought me of course until I finally said, \"Well, I'm going to get two of them and if one of them just happens to be your size then I guess you'll just have to borrow it occasionally. Besides, I think I'm going to need a little moral support the first time I wear this.\" \n\n'Not that size was a major issue,' I thought. They were basically all one size fits all anyway. \n\nI could see Heather ever so slightly slip into her sub persona as I more or less bullied her into trying on the bikini. I found two that I really liked a lot. Mine was made from a metallic blue lame' material and Heather's was a satiny black. Both were cut similarly. The tops were basically two small triangles that covered only part of the breast with two strings that went around the neck and behind the back. The bra cups, if you would call them that, could be scrunched together so that all that was left was a strip of material that covered the nipple. The bottom was similar except that it only had one triangle. The back was a thin strip that was just a little wider than a G-string. The triangle in the front, while tiny to start with, could also be scrunched together to convert it into a strip so that it only covered the clit and labia.\n\nAs I looked at myself in the mirror I was convinced that the goal of the designer had been to create something that was just this side of illegal. Whoever the designer was, I was convinced that they had succeeded. I also noticed that my already small \"landing strip\" was going to need either a trim or total removal before wearing this. I mentioned this to Heather and she agreed and said she would need to do likewise. I smiled as I imagined an intimate evening spent shaving each other and playing afterwards. \n\nWhen I turned to look at Heather, I had an almost immediate thought, that being that I was going to have to buy the suit. Upon seeing her in it, my pussy soaked the bottom of my suit. While I thought I looked good in my suit, Heather looked like hers had been designed with her body in mind.\n\n\"Damn girl, we are getting that for you,\" I almost moaned. The twin peaks of her nipples, trying to poke through the top, was enough for me to see how excited she had become seeing herself in the bikini, and perhaps imagining herself wearing it in public. My pussy throbbed again when I saw her reaction as she took me in as well. Her reaction was enough to make me glad that I had made my impromptu decision to stop in the shop.\n\nWe helped each other adjust the bikinis and experimented a little with moving the triangles in and out, giggling the whole time. The touch of her fingers near my erogenous zones, and mine on hers was starting to get to both of us. I decided that if we didn't stop soon that we were going to making a scene in the small dressing room. Besides, as much as my pussy was saying to go for it, the clock was ticking and we were starting to run short on time. As much as I hated to do it, I told Heather we needed to get moving and started to help her out of the suit. As I did so, and she helped me out of mine, I made a note to plan on getting her back into that micro-kini as soon as possible.\n\nI remember thinking that the makers of these suits had a real good thing going as I paid for them at the register. Their profit margin must be huge. The cost of materials was negligible and the mark up as a specialty product was huge. My marketing background kicked in as I considered all of this. \n\nI threw the tiny bag containing our purchases in the back seat and we were soon on the road again. Heather, of course, felt obligated to scold me for spending more money on her. I told her I hadn't spent a penny on her. Seeing her body in that suit was entirely selfish on my part and that I had bought it for myself. She countered with the fact that it was impractical and not something that could be worn very often, even at the nudist camp. She added that she didn't think that she could even wear it at the pool of her all adult apartment complex. I fired back that maybe we would have to do something about that and come up with some ideas about where we could wear them. My mind immediately fast forwarded to thinking about the possibility of a tropical vacation. \n\nAfter arriving back at my place and making several trips to unload the car, we set about preparing to depart for the camp. I carefully hid the dress I had bought Heather in my closet. The rest of the bags and packages went into a pile on my bed. They would remain there until we got back. We mainly just sorted through them to find those items we planned on taking with us. I gave Heather an extra overnight bag to use. We took a lot of her lingerie so that we could play dress up and decide what she would wear to the party. Besides, I offered, we may want to changes clothes during the party, depending on our mood and the atmosphere. Neither of us really knew what the other guests would be wearing, or not wearing, as the case may be. We agreed that some additional flexibility may be called for. I had already decided what I was taking and had it packed quickly. I saved us a trip to Heather's place by explaining that she could wash what she was wearing at Sharon's and wear it back home. She was good with that idea. \n\nMy frequent trips to the camp had encouraged me to buy a second set of makeup and toiletries that I kept packed. I had justified the expense as worthwhile with the idea that it would be a major convenience after I started traveling for business. The fact that it served a dual role on weekends was just icing on the cake. \n\nA quick check of Heather's toiletry bag assured me that she was properly prepared. I also reviewed her clothing bag and saw that she was all set. As an after thought, I threw in our new micro-kinis to show off to Sharon and Amy. I also packed another bag just for toys. I included a few of my favorites as well as all of Heather's new toys and some lube and a back up supply of various sized batteries. I made one final stop in the kitchen and packed a small cooler with a variety of sodas and bottled water for the trip. We quickly had my car loaded and made a pit stop in the bathroom before hitting the road again. I was somewhat amazed at our coordinated efficiency. Heather and I made a good team. Of course a lot of that had to do with the fact that we really didn't have all that much to pack. \n\nI made one final stop before we got to the highway. I decided to top off the gas tank of the car. It was the first time I had used my new company gas card and I was very pleased about it as I stood there looking at the price of gas displayed on the pump. I thought of it in terms of having just saved the price of a couple of smaller purchases that I had made earlier in the day. I was really starting to like how my new economic situation was working out. ",
        "As I finished filling the car, I had an idea. I grabbed one of the bags from the car, and asked Heather to go to the bathroom with me. She replied that she didn't need to go but when I asked her again to accompany me, she relented. I think she was a little puzzled by the bag that I was carrying but must have suspected that I was up to something. \n\nWhen we got to the bathroom, I locked the door and set the bag on the vanity. I turned to her, took her hands and asked her if she wanted to try out her new plug while we were on the road. The puzzled look on her face turned to one of surprise as her eyes fastened on the bag once again. She simply stood there, silent for a moment and I could see the uncertainty in her face. \n\nI helped resolve her unease by simply saying, \"I will if you will.\" \n\nHer eyes brightened, she smiled and agreed with a cheerful \"OK.\" \n\nI quickly dug out my plug, one of my old ones, and a bottle of lube. I thought it would help things a little if I put mine in first and she watched as I efficiently dropped my thong around my ankles, lubed the plug and then my ass. A minute or so later, my ass was full, the excess lube wiped off, and my thong back in place after grunting softly as I slid it into place. All the while, Heather watched me, obviously more than a little fascinated. \n\nWhen I was done, I asked her if she was ready. She nodded slowly and a bit hesitantly. I knew she was nervous. I had removed the smallest of the three plugs in her training set and told her we would start her off with it. I could see that she was relieved that I hadn't chosen one of the larger one's that was closer in size to the one I was using. I lubed it up and set it on its base on the vanity and asked her to lean over the vanity, pull up dress, and pull down her thong. I had to really try hard to not become too distracted as I set about lubing up her ass, inside and out. It wasn't easy. I had slid first one, then a second of my small fingers into her ass and made sure the inside was well lubed. \n\nWhen she was all prepared, I said, \"I'll just hold it for you. I'll let you push back onto it at your own speed. Take your time. I've had a lot more practice then you have, so don't feel like you have to rush.\" \n\nI placed the rounded tip of the plug against the wrinkled ring of her anus and asked, \"Ready?\" \"Uh huh,\" she almost gasped in response. \n\n\"OK, just relax. Don't clench up, you might even want to try pushing out a little bit, like you are going to the bathroom. When you are ready, just push back with your hips and I'll hold it steady. Don't forget to breathe, just like you are doing yoga,\" I advised, fully into my mentor mode.\n\nShe started to push back and nothing budged at first. I then saw her remember to relax and the ring opened slightly and the tip slid in a fraction of an inch. Her breathing became deep and regular and she pushed back further. I placed my free hand on her exposed back, just above her ass and softly caressed the skin there. She was making slow but steady progress as she stopped and started. I looked up and I saw her face in the mirror over the vanity. The look on her face was a mixture of concentration, and occasional twinges of pain, mixed with what I can only describe as determination. Soft moans escaped her lips occasionally in rhythm with the movement of her hips. I felt a strong sense of pride in my prot\u00e9g\u00e9. Her eyes met mine in the mirror as she noticed me watching her and I smiled at her, trying to be supportive and show her my pride in her. She returned the smile and it was almost as if she got additional strength from me. \n\nHer rectum was continually being stretched wider by the tapered shape of the plug and when I looked back down again I saw that she was approaching the point where the flange would slip in and she would be able to close around the narrower neck. \n\n\"Just a little more,\" I said, trying to encourage her.\n\nShe pushed back hard one final time and the plug lodged itself fully in her ass and her rectum closed around the neck. Her last thrust backwards was accompanied by a louder grunt. I could see her grimace as she was stretched. That look was quickly replaced by one of relief as the worst was past. \n\n\"You OK?\" I asked.\n\n\"Yea, I think so,\" she gasped, still recovering from the effort.\n\n\"Just stay there like that for a minute, relax for a minute, and I'll get you ready to go,\" I instructed her. \n\nI used some toilet paper to clean up the excess lube that had oozed from her ass, replaced the thong, and pulled the hem of her dress back down. When I was done, I took her by the shoulders and gently pulled on them until she was once again standing upright. Her thong had a lot of lycra in it and I knew that it would hold the smaller plug in place. I made sure the thong strap was situated against the base to hold it in place. \n\n\"Do you think you can walk to the car, or do you need another minute?\" I asked. \n\n\"I'll give it a shot. My legs are a little rubbery right now,\" she replied.\n\nI took her hand and after checking to make sure the back of my dress was in place, led her back to the car and opened and held the door for her as she got in.\n\n\"How do you feel?\" I asked after negotiating the car back into the flow of traffic and pulling onto the highway. \n\nShe sat there, contemplating my question for a few moments while I got the car up to speed, set the cruise control, adjusted the position of my seat and settled in for the drive. I had loaded a few favorite CD's into the sound system and soon had some easy listening music playing in the background. I felt the pressure of the plug in my own ass as I moved around and felt the resulting twinge in my pussy. I could almost see the wheels turning in her head as she tried to put words to the sensations coming from her lower extremities.\n\n\"Weird, really weird,\" she finally replied. \"At first it was a weird kind of pain as I stretched, but I guess you know about that. Then I was just full, really full. Almost like I had to go to the bathroom... and now I'm still full but I guess I'm starting to get into it a little. My pussy is getting wet so I guess that's a good thing,\" she giggled. \n\n\"Yea, that's generally a good sign,\" I giggled in response. \"Was the pain worth it?\" I added, a little more seriously.\n\n\"You know, I didn't really mind it that much. It wasn't like other kinds of pain, like a tooth ache or a pulled muscle. It was sorta like the nipple clamps last night, a good kind of pain. I guess it's what they call pleasure/pain in the erotic stories,\" she said. Her words were slow and calculated, as she tried to describe something that did not lend itself well to words.\n\n\"You know what's the weirdest part?\" she asked?\n\n\"What's that?\"\n\n\"Sitting here, in plain sight of all these other people driving by with this huge thing shoved up my ass,\" she giggled again. \"I can't help but imagine what they would think if they knew. In a funny way I guess it's a turn on for me, on top of how it feels. You know?\"\n\n\"I think I understand completely. Remember when we first met at the gym?\"\n\n\"Uhhh, yea. What about it?\" she replied.\n\n\"You saw my plug in my gym bag didn't you?\" I asked.\n\n\"I thought I saw something.\" A sudden realization hit her. \"Oh my gosh! Do you... I mean you wear it... there?\" she exclaimed.\n\n\"Duh! Yes sweetie, the plug and another toy I sometimes use there, something called duotone balls. Almost every time you have worked me out. Why do you think I like the exer-cycle so much?\" \n\nHeather seemed to be lost in thought for a while and again I could see the wheels spinning in her head. I think she might be thinking of the possibilities of this sort of toy use. Finally, she was ready for more information and she turned to me.  \n\n\"Do you ever cum while wearing it? I mean at the gym? I mean, I have never seen you...\" She finally just seemed to run out of words but I got the gist of her question.\n\n\"No, I mean not just from wearing it. I enjoy it and its pleasurable and all, but it's not enough to get me off from just wearing it. The fact that I'm wearing it in public without anyone knowing is a turn on for me too. I do sometimes use one when I am masturbating though. I enjoy the feeling of being full back there when I'm masturbating and I always seem to have a real intense orgasm that way.\"\n\nHeather was again lost in thought and asked, \"Do you think I could... I mean... could I get away with wearing it at the gym... at work.\"\n\n\"I don't see why not, it's not like you're going to have a violent orgasm right there in the middle of the floor. It does make the time go by, especially when I'm going something boring like riding the bike. The bike seat is really nice, just the right amount of pressure on the base, and the movement helps out too.\" I answered. \n\n\"Wow, you never cease to amaze me!\" she exclaimed.\n\n\"I hope not, I wouldn't want to start to bore you,\" I replied. \n\n\"I somehow doubt that.\" She said and then seemed to consider something else. \"The other toy you mentioned, the duo thingy. What's that all about?\"\n\n\"I'll show you later. I brought it too. It's better when you are more active, like on the bike. It goes in your pussy.\" I said, in a matter of fact tone.\n\nOur conversation continued as we made good time. Heather squirmed in her seat a little from time to time, obviously exerting more pressure against the plug. She asked a lot of questions about the camp and the people I knew there. I tried to answers her questions as openly and honestly as possible so that she got full disclosure, the good and the bad, although there was very little I could truly describe as bad.\n\nWe had gotten away from the city and the traffic had thinned out. I asked Heather to get us something to drink from the cooler in the back seat. She had to contort her way between the split seats to get to it. She oohed and aahed a little as she experienced the sensations that the plug produced as she did so. She had told me a few minutes before that she was getting a little \"squishy.\" I had a thought and told her to also get my toy bag and set it up in the front seat with us.\n\nAfter handing me my drink, she set the bag on the center console and returned to her seat and buckled back up. Seeing that there was no traffic near us, I dug into the bag, my eyes flickering back and forth to the road, and retrieved the pocket rocket vibrator. I handed it to Heather and asked her to take it out of its package. \n\n'Why don't you use that to take the edge off? It'll help the time pass quicker,\" I said to her, grinning wildly. \n\nShe seemed a little shocked at the idea, at least at first, but warmed to it quickly when I pointed out that the tinted windows would provide some privacy. She swiveled her head around, checking to see if there were any nearby cars or truck that would notice. Seeing none, she noticeably relaxed. Before long, she had dress up and the vibe pressed against her pussy. She was still a little reserved and pulled the dress back down over her hand but still only draped across her thighs so that no one could see clearly what she was doing. \n\nThe plug had done a good job in warming her up and the addition of the vibe was enough to quickly bring her arousal to a peak. It wasn't long before her moans and groans drowned out the music from the sound system. \n\n\"Can I, Kim, can I?\" she gasped between moans.\n\nShe didn't have to finish. I could sense her need. \"Yes sweetie. Cum for me. Cum now.\" I said, my words almost a whisper. It was all she needed and she predictably blasted off into her orgasm. Her cries of release echoed in the confined space of the car. One thing I had always loved about Heather was the way her body trembled when she was cumming and this time was no different. Her legs continued to noticeably tremble for quite a while as she enjoyed the afterglow of her climax. \n\nThe vibe had ended up on the floor board at her feet, still vibrating quietly. I managed to lean over and grab it and turn it off. It was still wet and a little slippery from her juices. I placed it back in the toy bag.\n\nHeather was a total failure as a conversation partner for quite a while. She laid back, slumped in the car seat and seemed to be almost comatose as she recovered and enjoyed her post orgasmic contentment. \n\n\"Thank you, I sorta needed that. You've kept me turned on all day.\" she finally said, her head rolling towards me. I looked at her and I could see the relaxed glow on her face as our eyes met. \"You're welcome darling. I wish I could say it was my pleasure, but we both know that isn't exactly true,\" I jibed at her.\n\n\"I guess I should say I owe you, but that's becoming something I seem to be repeating over and over. I guess one of these days I'm going to have to devote a lot of time to paying you back,\" she replied, slowly returning to her normal chatty self. \n\n\"One of these days I'll let you,\" I replied, smiling at her as we shared the meaning of what might be behind our words. \"Realistically though, watching, and hearing you just now was a pretty good payback. I enjoyed it. Maybe not quite as much as you, but it was nice. It sure beats making this drive alone. You are pretty good etnertainment,\" I added.\n\n\"Want to know what made it really nice for me,\" she asked rhetorically.\n\n\"What's that?\"\n\n\"It was the fact that you told me to do it. That was such a huge turn on for me. I kept thinking about it. I'm not really doing this for myself, I'm doing it because you told me too. I really got off on that. I mean... it was more than just the 'helping me' thing, a lot more. I really, really liked that and I hope you will do it again.\" There was a large measure of sincerity in her words that really struck me. I had to sit back and think about them for a minute and let allow them to sink in.\n\nI came to one conclusion. The submissive side of Heather's personality seemed to run a lot deeper than a few \"fantasies\" and her \"help\" quirk. Her comments and what I had observed while we were shopping was leading me to the conclusion that she was a lot more sub than she or I had realized. It ran deep but it was starting to rise closer and closer to the surface as we got more involved. I hoped that could be attributed to the growing trust she was developing in me. Whatever the cause, I had to consider what this meant in terms of our developing relationship. \n\nI had just decided to try a few experiments with her to test my assumptions when my reverie was interrupted by the fact that I needed to pull off the highway and to start navigating once again. Heather's excitement level rose when I announced that this was our exit and we were getting close. 'Perfect timing,' I thought as I noticed the sun starting to get low in the west. I smiled to myself when I noticed Heather getting fidgety and nervous as I pulled up to the entrance to the camp. \n\n\"Relax Heather,\" I said to her. \"I'll protect you from the nudist bogeyman.\" \n\nShe giggled in response and said, \"But who is going to protect me from you?\" \n\n+++++++++++++++++++++\n\nPlease stay tuned for Chapter 14 of The Hunger for the continuing details of Kim's experiences. Please take a moment to vote if you enjoyed this story. Please check out my other stories as well. Stay tuned to this same bat time and bat channel. Thank you. "
    ],
    "authorname": "CorsetLvr",
    "tags": [
        "masturbation",
        "anal plug",
        "vibrator",
        "bisexual",
        "lingerie",
        "corset",
        "piercing"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-hunger-ch-13"
}