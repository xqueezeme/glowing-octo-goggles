{
    "title": "The Thin White Wall",
    "pages": [
        "It was undeniably an accident. I swear. My Dad, however, would say, \"Wyatt, accidents always find you and you should take responsibility.\" As if it is really my fault that when I was riding my bike on the sidewalk some jerk doesn't bother to look as he is backing up his car from the garage... forcing me to careen into a mailbox and land on a skunk. Or the time I missed the Science and Engineering finals for my county because my chemistry teacher, Ms. Gordon, told me it was at the Ridgedale Convention Center instead of the Ridgedale Showcase Hall? I ended up delivering my speech on subliminal messages to an auditorium full of Furries... Who dressed me up as a rabbit first - oh, the memories! Still, I would argue that none of these occurrences were my fault; only the product of unfortunate events.\n\nAnd I had never any intentions of manipulating anyone for my benefit. Ever. It all started out with something I was raised to do - help someone when they are in need.\n\n*\n\n\"What the fuck, Addison?\"\n\n\"I'm sorry, Jordan; it won't happen again.\"\n\n\"Damn right, it won't!\"\n\nThe loud smack echoed which was quickly followed by a crash of broken glass.\n\n\"See what YOU make me do! Worthless Hick, you better have your act straightened out before I get back!\"\n\nJordan's footfalls on the stairs were like leaden thuds that gave way to a thunderous door slam; leaving only tears in his wake.\n\nAnd I heard it all through the thin white wall.\n\nI have lived in a townhouse all my life and have come to realize, my Dad did not have much money. What was once housing for workers of a nearby plastics factory that closed when I was two, was now littered with the few former employees who couldn't go elsewhere (like my Dad who was janitorial and unlike my Mom who worked the main line and left when her boyfriend boss was transferred) and college students from nearby State University. \n\nFrom the outside, the first floor was a red brick that since turned an orange-ish color covered by a three foot awning that extended the length of the building - what it could possibly protect is beyond my knowledge - but the second floor was sided an ugly brown that truly resembled what comes out of everyones backside. I suppose the architect got it right; the outside absolutely resembled the product interior because two key features exist: first, the floor plans are all the same and second, the architects did not have your privacy in mind when designing the building. \n\nI could easily watch the television set of the three senior college coeds, Shelly, Eve, and Kennedy, who lived across the street. I can't tell you how many reality shows I ended up getting hooked on because my teenage hormones were focused on those beauties and therefore, their television. Who will get the rose this week? I have joined several of the bridge games my eighty year old neighbor to my left, Mrs. White, hosted, all while sitting on my couch as she would call out the cards I had and I'd respond. Most importantly, however, I could hear everything that occurred to the woman who was my neighbor on the right, Addison Stevens, especially since her bedroom was adjacent to mine.\n\nFrom the information I was able to gather, she came from Alden, Iowa and was a senior at State University in line for her bachelor's degree before she would advance to their veterinary program of another four years. On the phone to her parents, she would put on a front, saying all was well, but to her friends back home, she was miserable. The big city of Hilldale was far more complex than her small populated city back home. \n\nI wouldn't describe her as beautiful, though to me, she really was, just not in a supermodel way - her extra pounds provided her an hourglass figure with amazing ass and tits, err, assets - as much as I would call her innocent and pure. With her curvy auburn hair that always seemed to have a ribbon in it that matched her outfit, dimples, and glasses, she gave off a distinct wholesomeness that was very alluring. Being that I was fourteen and going through puberty, I suppose all these college girls around me were alluring, but I won't lie and say I didn't have fantasies about the girl next door.\n\nBut the move from country life to city life generated a social pressure upon her that she could not live up to, falling for the first asshole that showed an interest in her and his name was Jordan Bates.\n\nIt made me sick.\n\nI wanted to help. \n\n*\n\nNow, as a fourteen year old freshman in High School, I felt there were limited options for me to assist my twenty-two year old neighbor. I mean, I wouldn't even listen to me, why would she? For the same reasons, confronting Jordan also seemed to be an impossible task. What would I say? \"Hey man, stop hitting my neighbor?\" He'd probably kill me. No, the answer lied with my science project.\n\nI studied all there was to know about the creation, delivering, and every use of subliminal messaging, even creating one and playing it through a speaker underneath popular pop music. At my station was a bowl of Skittles and my message encouraged the eating of them. Every judge at the city competition did so before realizing what my project detailed. It got me to the county finals, but alas, you know how that transpired. \n\nThe delivering of the message would be easy; Addison uses a white noise machine when she sleeps. All I need to do is send what I want through white noise, mirroring hers.\n\nThe message, however, was a different story. It had to be clear and concise, and something Addison truly wants to happen. I eventually fell upon the basic principle that no one wants to get their ass kicked.\n\n- Break up with Jordan\n\n- Find someone worthy of you\n\n- Defend yourself\n\n- Listen to my statements\n\nI quickly deleted that last recording. I did want to encourage the following of the other three declarations, but after all, I wouldn't listen to me... So I quickly changed it to something far more direct. \n\n- Obey my Statements\n\nSlight difference, yes, but if you tell someone to listen, what was said may become nothing more than a fleeting thought. Tell someone to obey and they are more apt to take heed.\n\n*\n\nJordan usually came back every three or four days, basically whenever he felt he needed another power trip. I played my white noise overlapping Addison's white noise every night he wasn't around.\n\nBy the end of the first week, I felt dejected. Nothing had changed. Every time Jordan was around, Addison had an additional bruise or black eye.\n\nAt the end of the second week, I was set to give up. I was preparing to play the recording one final time before calling it quits when Jordan began pounding on my neighbor's door.\n\n\"What the fuck is this text, Addison?\" Jordan was relentless with his fist on the wood.\n\n\"Exactly as it states,\" Addison calmly replied through the door. \"We're through.\"\n\n\"You can't break up with me; you hear me, you Hick!\"\n\n\"You know I really hate when you call me that... Now leave and don't come back!\"\n\n\"I'll show you!\"\n\nThe pounding on the door turned into something far more. It was as if Jordan was hitting it with a truck. I ran downstairs to find Jordan was kicking at Addison's door.\n\n\"Go back to your room, Wyatt,\" my Dad gave me a sharp look as he hung up his cell phone.\n\nI followed my Dad's directive, but was only half way up the stairs when I heard the crash of my neighbor's door slamming open.\n\nI felt myself wince at every grunt and groan as guilt washed over me. This is my fault. I did this. All I am hoping for is Addison's survival so I can apologize. \n\nIt didn't take long for the police to arrive. I kept a steady eye on the proceedings, watching from my window until an ambulance soon pulled in front of the building. My heart skipped a beat when the stretcher vacated my neighbors door. I then saw justice in the way of Jordan being put in the back of the ambulance while Addison was standing, shaking the officers hands, profusely thanking them for their speedy response. \n\n\"Are you sure that you're all right, Ma'am?\"\n\n\"I promise you that I am,\" Addison smiled before shrugging her shoulders. \"Two weeks ago I started taking self defense classes because I knew he wasn't going to take me breaking up with him easily. Now I'm glad I did.\"\n\nI couldn't help my smile. Yes, I did that... \n\n*\n\nA realization soon struck me that I couldn't actually tell anyone what I accomplished. Tell Addison? Why would she believe me? Likewise my Dad and my friends. No way would I even believe that story. Alas, I'll have to settle for an idea my psychology teacher, Mr. Livers, who desperately needs to retire by the way, had taught us, altruism: the practice of selfless concern for the well-being of others.\n\nI did my best, and I was proud of myself. I stayed quiet. \n\n*\n\nLife is a curious animal. Four years passed in what seemed to be a blink of an eye. The coeds across the street graduated and moved out. Eve is now Ms. Johnson, the new psychology teacher who replaced Mr. Livers, but alas, I had already took the course. \n\nAddison graduated three months ago, a whole semester early, with her Doctor of Veterinary Medicine Degree. She was prepared to move back to Iowa, just waiting for her lease to run out when she met Brodie Winters, a mid level immigration lawyer at some big firm. I would describe him as plain; he wasn't interested in any of Addison's interests, never gave her anything, nor did he ever ask about her. It was his life, and she was along for the ride. In fact, I don't think he's even said the words 'I love you.' Still, he didn't abuse her physically or mentally, so I didn't really focus on him; or Addison either for that matter. Snooping obsessively into the lives of others was always more Mrs. White's forte.\n\nMy life was coming together. I've had three girlfriends, though I'm currently single, and work part time at my Dad's friends auto shop - Gary and Son Auto Shop. I'm pushing papers and being a customer service representative, but Gary is also teaching me the ropes, almost like an intern. When I graduate High School in two months, I'm all set to enroll in automotive classes, take the test (which I am already prepared), and get my certification. Did I mention I just celebrated my eighteenth birthday and I bought a car at an auction? Granted, it doesn't run and it needs a whole lot of work, which is also the only reason I was able to afford it, but when it does, I'll be cruising in my very own 2010 Camaro convertible.\n\nYes, life was good.\n\n*\n\nI had just finished pulling my Mongoose mountain bicycle out of the house when I heard the sweet voice from behind.\n\n\"What would you do if your boyfriend went to Las Vegas with another woman?\"\n\nIt was followed by a lamented sigh.\n\nBeing a Saturday, I was going to ride my bike to work, knock out eight hours and then go to the Dave and Buster's to hangout with my friends, Shane and his girlfriend Joyce, Dante and his girlfriend Camilla, as well as her friend Leilani. It was our prom night, but since the six of us pretty much despise High School, we decided that we wanted to have our own personal celebration. I'm just glad Gary lives a half a block from his shop and lets me shower there. \n\nI had already threw my leg over the center bar of my bike when Addison asked her question, and after seeing my Dad through the years still not get over what my Mom did to him, I couldn't have just ignored the plea, either. I was brutally honest in my Statement.\n\n\"Brodie Winters is cheating on you; what an Asshole. I would...\"\n\n\"Nadine, I'm going to have to call you back.\" There was a pause as Addison hung up the phone. \"What did you just say?\"\n\nOops. I should've known that at twenty-six, Addison wouldn't ask her eighteen year old neighbor questions regarding her love life... Not to mention that I probably shouldn't know her boyfriends name. Regardless, what I said, I meant.\n\nI looked over my shoulder and saw the inquisitive hazel eyes through her red rimmed glasses of my neighbor staring at me. I got off my bike and turned toward her. I wanted my Statement to be utterly clear. \"Brodie Winters is cheating on you which makes him just as big of an Asshole as Jordan; and we both remember what you did to him. You deserve far more in life than to put up with him parading around Vegas with some super slut and all that bullshit. I say you have yourself a day, go to the spa or whatever it is you do to unwind.\" There, that Statement should cover it.\n\nAddison's eyes began to water and I quickly gave her a comforting hug. \"You deserve to be happy and in love; and when you find the one for you, do whatever it takes to hang onto him,\" I Stated.\n\nAddison squeezed me back before letting go of our embrace. \"Thank you, Wyatt.\"\n\nI gave her a soft smile before walking back to my bike. I glanced over my shoulder and Stated, \"Seriously though, take today and do something for yourself. You will love...\"\n\n\"Wyatt, take this to the dumpster on your way out.\"\n\nMy Dad interrupted my Statement by throwing a bag of garbage on the porch before ducking back inside. It also disrupted my chain of thought as I was going to finish with the word \"it.\" As I picked up the bag, I instead finished my Statement with the beginning of a new Statement. \n\n\"Me...\" I gave Addison a small wave as I hopped onto my bike, \"Whatever it is you do, I'd use his money to pay for it, if you can. It's the least he can do for two timing you.\"\n\nAddison stared at me with doe eyes as she let out a slight gasp. Her hand went to her chest giving her whole constitution an appearance of absolute realization. \n\nAs I peddled off toward the dumpster, I couldn't help the feeling of pride I had for Addison. I knew she was going to finally take charge of her love life. Good luck, Addison.\n\n*\n\nThe day was long, but good. When doing something you love, work just doesn't seem like work and I was even able to put a fuel pump on my Camaro. \n\nTime with my friends is always a riot, though Leilani seems distant in our group. She comes because Camilla, who seems to be her only friend, invites her. She's different from the rest of us on two fronts; first being that she is smart enough to get accepted into nearby State University unlike the rest of us who didn't get accepted anywhere, and secondly; she's so shy. It's so prominent that she tends to hide her chocolate brown eyes behind her silky black hair and her sun kissed skin from her Hawaiian heritage in frumpy clothes. She seems to only laugh at my jokes and only speaks to give her order to the server. Still, neither of those differences are issues to the rest of us. The humorous banter between the six of us flows easily amongst us providing us our own clique to survive High School life.\n\n*\n\nI had gotten home late, right before my Saturday curfew of midnight. I had already slipped into a fresh pair of boxers for bed and had just flipped the light switch off when a light tapping began on my window. I shook my head, \"Who would be throwing rocks at my window?\" \n\nAs I turned toward my window, I realized that it wasn't someone throwing rocks, there was someone actually standing on the crappy three foot awning at my second story window. I grabbed a wrench from the top of my toolbox as I peered hard into the night. \"Addison?\" I released my grip of my makeshift weapon and slid my window open. \"What are doing? Are you okay?\"\n\nAddison was meek, her eyes downcast. \"Sorry,\" she breathed heavily. \"I know I shouldn't be at your window, but I didn't want to be alone.\" She then shook her head, taking a half step back to her place, \"I'm going to head back home.\"\n\nMy heart immediately went to her. Here was this woman, clad in baby blue pajamas, standing on a rickety awning in front of her teenage neighbors window. She must be hurting. \"No, it's all right,\" I quickly pinched the latches to the screen and removed it. \"We just have to be quiet; my Dad's already asleep.\"\n\nAddison nodded as she accepted my hand to help her inside. Unfortunately, the only options for seating was on my bed, though Addison didn't seem to mind.\n\nI sat down myself, maneuvering my body against my headboard. \"Want to tell me about it?\"\n\nAddison moved from the edge of the bed and nestled herself against me, her head on my shoulder and a hand on my chest. \"Honestly, I just didn't want to be alone; knowing that Brodie's in Las Vegas with some other woman. It just makes me feel... worthless.\"\n\n\"Actually,\" I held Addison tight as I Stated matter of factly, \"I would view you more like a crown jewel and he a bumbling idiot of an asshole for not knowing what he had.\"\n\n\"Thank you.\" Addison leaned up and kissed my cheek before resting her head back on my chest.\n\nI decided to change the subject to get her mind off of her love life. \"So, what did you do today?\"\n\nI heard the faint smile in Addison's voice, \"I took your advice and went to the spa. I got a nice massage, a pedicure and a manicure,\" she finished by holding up her hand. \n\nThe only thing she said that I understood was massage and I had zero clue on what I was to be looking at on her hand. I raised my hand and lightly caressed hers, \"Yes, very smooth.\"\n\n\"My nails, Silly,\" Addison snickered. \"I got my fingernails and toenails done.\"\n\n\"Oh,\" I shrugged, giving off a small laugh as I did. \"They look very nice.\" They really did with the clear polish and white tips.\n\nAddison shook her head before going on about her day, \"Yes, it was very relaxing.\"\n\nI just listened and held Addison close. I'm glad she was able to laugh to relieve some of her stress.\n\n*\n\nIt was a surreal moment as I woke up. There was a woman in my bed... and not just in my bed, but in my arms. \n\nMiracles can happen.\n\nAs Addison began to stir, I tensed up. Would she be upset? I mean, it is my bed, but I could've been a gentleman and slept on the couch... but we were talking so easily; we just fell asleep. Would she wake up thinking she was in bed with her boyfriend instead of her teenage neighbor? Am I dead?\n\n\"Good morning,\" Addison raised her arm and as she did, she accidentally brushed my morning erection. \"Oh, sorry... Was that because of me?\" Her hand finished making it to its destination to wipe the sleep from her eyes. \"I would have to at least go one one date with you, and that's only because I've already known you for eight years.\"\n\nDate first? Is that even a possibility? At least she knew who she was in bed with... I was always pro my life. The knowledge did allow me to relax. \"Hey, you can't blame me for that... A beautiful woman is in my bed and I'm not supposed to get an erection?\"\n\nAddison looked at me with an affectionate smile, \"You know, in eight years in this city, no one has ever complimented my appearance and here you are having done it twice; once to get me in your bed and once, I presume, to get get me out of it.\" \n\n\"What?\" I laughed before shaking my head. \"I was only speaking the truth... Usually, the getting a girl in bed part has a different meaning; we just talked.\"\n\n\"I know,\" Addison kissed my cheek. \"And that's why I want to take you out to breakfast; my treat for being so amazing last night.\"\n\n\"All right, but you really don't have to.\"\n\n\"I want to.\" Addison then looked toward the edge of the bed as if it were miles away, \"I really don't want to get up.\" She then gave a sigh of resignation and slid her body to the edge before standing up with a yawn. She made her way to my window, \"Your Dad still home?\"\n\nI nodded, \"Yup.\"\n\nAddison threw a leg out the window, \"Give me an hour and I'll meet you out front.\"\n\nI got up, took a shower, got dressed, and let my Dad know I was heading out... And still had to wait thirty minutes. Why do women need an hour to get ready? Just one of the great mysteries in life.\n\n*\n\nBreakfast was good, I mean how would one truly ruin eggs and toast, though my Dad tries on occasion, but the conversation was even better. Addison was funny, kind, sweet, and caring. How did she ever get involved with the beater or the cheater? It's as if all they wanted was to take advantage of the country girl from Iowa. Hell, I wish she was a few years younger so I'd have a chance with the woman.",
        "*\n\n\"Do you mind if I show you something?\"\n\nWe got into Addison's red Jeep Wrangler when she spoke. Her voice was oozing hopefulness, as if I'd say no to her.\n\n\"Of course,\" I smiled. \"I have nowhere to be today.\" All I had planned was doing some work on my car, but being with Addison was even better.\n\n*\n\nAddison pulled into a place I've only passed by... the Hilldale Conservatory. I had known it was here, but I've never bothered to partake in the sights of flowers and plants.\n\n\"This is my favorite place here in Hilldale,\" Addison had a beaming smile as she stepped from her Jeep. \n\nI walked a step or two behind Addison as she took in the beauty she held dear. I wasn't impressed; to me they were just flowers. \"So what is it about this place that you find amazing?\"\n\nAddison turned with a smile that took my breath away. She closed the gap between us in half a heartbeat. \"Close your eyes. \"\n\nI did.\n\n\"Now take a take deep breath through your nose.\"\n\nI did... and, I must admit, the smell was far better than grease and oil... and it was definitely better than what I assumed was going to happen - get strangled to death by the smell just like when I walk by the Bed, Bath, and Beyond in the mall. \n\nI opened my eyes and saw pure exuberance. I looked around and really took in this place for the first time. It was growing on me... or perhaps it was Addison's passion? Actually, it was both. I stared into her eyes, \"It is amazing.\"\n\n\"It is home,\" Addison smiled. \"In this big city, this place brings me back to Alden. This place kept me from giving up and going back home after repeatedly falling for the wrong guy or fellow students mocking my Iowan euphemisms; like what you call soda, we call pop, or when a classmate of mine was crabby, I said he's got the holler tail. My fellow students never let me live it down... I felt so buried; I'd come here and it helped.\"\n\nNow it all makes sense. Not that she's not allowed to like flowers, but a sense of home during a bout of homesickness can do wonders. I Stated, \"You should be proud of yourself; and if you feel no one else is, always remember, I'm proud of you, as well.\" It may not mean much coming from her eighteen year old neighbor, but I wanted to give her that vote of encouragement. \n\n\"Thanks.\"\n\n\"And if you keep that never giving up attitude, you'll find the right person that will give you that sense of home just by being with him.\"\n\nAddison wrapped her arms around me in a fierce hug. \"Perhaps someday soon.\" She pulled back with a smile, \"All right, now its your turn,\" she handed me her keys. \"Take me somewhere you enjoy.\"\n\nI thought for only the briefest of moments. It could only be one place. \n\n*\n\n\"This is where my baby is.\" I made the final turn into Gary and Son Auto Shop.\n\nAddison's eyes lit up in shock, \"You have a baby?\"\n\n\"Come on,\" I smiled as I stood from the Jeep.\n\n\"We're at a car shop,\" Addison's look of confusion was priceless. \n\nI went around back and used my key to open the door, turn off the alarm, and then open the back service bay door. \"There she is; my baby,\" gestured my arm to my Camaro. Normally, it's left outside, but after work on Saturday's, I roll it inside because Sunday's are the real day I get to work on it.\n\nAddison laughed, \"The car's your baby?\"\n\nI then did to her as she did to me at the conservatory. \"Close your eyes.\"\n\nAddison did.\n\n\"Imagine driving down the road just enjoying the sun on your shoulders and wind in your hair, or pulling up to a club in style, your beauty getting out of a sleek muscle car, instantaneously making everyone envious of you.\"\n\nAddison opened her eyes with a smile, \"Okay, I'm in.\"\n\nI chuckled, \"To which one?\"\n\n\"Why both of them, of course,\" Addison gave me a playful slap. \n\n\"Well, in a few months, when its ready, you'll be my first call.\"\n\n\"Well, I better be your second!\"\n\nThe shout came from behind Addison, startling her.\n\nI walked over to Heath, an eight year old moppy haired kid who lived right behind the auto shop. \"You know it,\" I ruffled his hair. \"Heath, I'd like you to meet Addison.\" I turned towards Addison, \"And Addison, this is Heath, the little car junkie who lives behind the shop.\"\n\n\"Hello, Heath,\" Addison kneeled down to shake his hand.\n\n\"I don't like her,\" Heath crossed his arms as he glanced up at me. \"Why can't I be first? I helped with the brakes and I'll do your first three oil changes,\" he finished by holding up three fingers. \n\n\"How about we both go on the first ride together?\" Addison smiled sweetly at Heath, which was enough to melt my heart, but she still added a cherry for him, leaning into his ear and not so subtly whispering, \"Or maybe you and I can take the first ride and we'll leave Wyatt at home; you can even drive?\"\n\nHeath's grin went ear to ear, \"Okay, Wyatt, she's a good one.\" He then started walking toward my car, \"You can keep her.\"\n\nAddison blushed three different shades of red while I just rolled my eyes.\n\nI explained what still needed to be fixed on the car and how Gary was helping me get the parts I couldn't get at the junkyard at discounted prices. The rest was up to me... and Heath as he reminded.\n\nAddison listened with rapt intetest, and though she wasn't into cars, she felt exactly as I did at the conservatory; it was growing on her. She could go for a ride just to ride as I could walk through a grove of flowers just for the scenery. \n\nPerhaps it's not the things we do, but who we do them with?\n\n\"How about dinner?\" I offered with a smirk, \"Since you got breakfast, my treat.\"\n\nAddison smirked in a way that made me dizzy, \"That was for all you did for me last night; I'll pay for dinner too.\"\n\n\"Nah,\" I shook my head and then Stated, \"Dinner's on me.\"\n\n\"Well, at least let me pay for a movie afterwards,\" Addison's expression pleaded the same.\n\n\"Okay, you're on.\"\n\n\"Wait,\" Heath interrupted. \"We're not working on the car today?\"\n\n\"Afraid not, my friend,\" I ruffled his hair again. \"Today was about showing it off; but don't worry, we'll work on it soon.\"\n\n\"Oh, all right,\" Heath dejectedly walked out the door.\n\nAddison looked at me affectionately, \"I didn't know you were the fatherly type.\"\n\n\"I wouldn't necessarily call it fatherly as much as his Dad is out of the picture and he gravitated to the shop about a year and a half ago.\" I then chuckled at the memory, \"His Mom took some serious convincing to let him come over, but, even after multiple assurances by us he'd be okay, she only agreed after her son started rattling off the correct camshaft specifications for a 350 Chevrolet small-block engine. He is an absolute sponge.\" I then shrugged my shoulders, \"I guess that by fatherly you mean someone he looks up to, then I suppose you're right.\"\n\n\"It's really sweet that you do that. Not everyone would, and it means the world to Heath.\"\n\nI changed the subject with a smile, and offered my hand without even thinking about it, \"You ready for that dinner?\" Yes, accepting praise was not my strongest of suits.\n\n\"Absolutely,\" Addison graciously took my offering, though our hand hold only lasted until I had to lock the door.\n\n*\n\nDinner was amazing and the food was great as well. It was as if Addison and I just clicked, like two puzzle pieces interlocking as one. We even did the couples stuff of holding hands and sharing popcorn at the movie. Damn, why couldn't I be a few years older or her a few years younger?\n\n*\n\nWhen we arrived back at our places, I had wanted to kiss Addison, but my sanity won out. Today was not about Addison's teenage hormone of a neighbor stealing a kiss or copping a feel of the woman next door. This wasn't a date. Today was about Addison having a good day despite her asshole of a boyfriend being in Las Vegas with another woman. \n\nI kept everything to myself as I walked to my porch, pausing momentarily to offer a fond, \"I had a wonderful day, Addison; thank you. Goodnight and sweet dreams,\" I finished with a smile.\n\n\"I had a wonderful day as well,\" Addison replied in kind. \"Good night.\"\n\n*\n\nI had just laid down, a content smile strewn across my face. Yes, the day was good, great even, and it was just the right amount of perfect to carry me through the rigors of High School on a Monday. My eyes were just sealing shut when a light tapping began to occur on my window. It could be only one person. \n\nI got up and quckly opened my window. \"Hey, Addison,\" I whispered. \"Is everything okay?\" I was genuinely concerned. In the hour we were apart; what could have possibly happened?\n\nAddison gave a demure smile, \"I just didn't want to be alone,\" she finished by biting her lower lip. \n\n\"Well step right in,\" I offered my hand and she accepted it easily. \n\nI laid in bed, my arm around my neighbor as she snuggled into my side.\n\n\"Still can't get that asshole out of your mind, huh?\"\n\n\"That's not it,\" Addison tilted her head and started nibbling my neck. \"Right now, I have someone else in mind. Her hand, which was on my chest, glided south until it caressed my manhood.\n\n\"I thought you said we'd have to go on a date first?\"\n\n\"Addison gave a slight snicker, \"What do you think today was?\"\n\n\"Uh,\" My voice caught at the realization that, yes, today felt like a date; perhaps the greatest date of my life. \"Yes, and I must say the greatest I've ever been on, but...\"\n\nIt has been a few months since my last girlfriend and, at eighteen, my hormones were in overdrive, especially with this twenty-six year old beautiful woman coming on to me, but I've also witnessed firsthand the effects of cheating and I needed that clarity... \"What about your boyfriend?\"\n\nAddison pulled back slightly, her breath now in my ear, \"So Brodie's allowed to go to Las Vegas with some super slut just aching for his dick and I'm not allowed to enjoy myself with a great guy?\"\n\nSolid point. The hypocrisy in my question was baffling. If one is cheating, the other should be empowered as well. I turned my head and gave a light brushing of her lips with mine. \n\nNow, all day, Addison and I joked around freely. It was what made the day so special. We would go back and forth and it created our chemistry. So I embellished on what she just said about the girl with her boyfriend and turned it on her as a joke.\n\nI even laughed as I Stated, \"That makes you a super slut, mine alone, just aching for my dick; a mild mannered veterinarian to everyone else but my personal Bitch in heat with me, satiated into a stupor only when I am satisfied, no matter how, when, or where.\" My smile was ear to ear. \n\nAddison laughed at my words before something more carnal overtook her. She nibbled at my earlobe before, in a hushed whiper full of pure seduction, she breathed, \"Yes...\" Simultaneously, she rocked her body desperately against me as her hand delved into my boxers hungrily stroking my erection while her lips latched with absolute need with mine. The kiss was deep and aggressive, her tongue probing all things sexual, before she let up slightly to finish her response to my Statement, \"to all of it.\"\n\nMy lips found hers and my hands found the hem of her pajama top. It was the end of any and all resistance from me.\n\nAddison quickly relieved herself of her pants before pulling down my boxers, allowing me to kick them off to the floor. Her lips found mine again as she threw her leg over my waist before she pulled back a little, taking my lower lip briefly as she did, \"Your slutty Bitch is going to fuck the shit out of you now.\" \n\nIt was said so matter of factly, it ratcheted up my arousal by a factor of ten.\n\nAddison's smile was sheer animalistic as she descended upon my manhood and she mewled excitedly as she reached my base.\n\nDamn, was Addison wet. \"Whoa.\" It was as if my cock slid into a pool built just for it. I couldn't stop the involuntarily lurch from my groin and it was met with an enthusiastic gasp from my partner. \n\n\"All for you, Baby.\" Addison punctuated that declaration by lifting higher and then dropping down again.\n\nMy hands gravitated to her breasts, two wonderfully proportioned orbs of flesh that I couldn't help but manipulate. I molded. I squeezed. I flicked and twisted the nipples; they were so hard I swear they could cut glass. \n\nAddison plunged upon my tool in explosive need. She did so many variants to the same action, it was mindboggling. She went up and down, circular, straight grinding, she reached back and played with my balls, she used her internal muscles to grip my manhood... It was intoxicating.\n\nI couldn't take it anymore. Was it awesome Addison was riding my brains into mush? Absolutely. But it was so pleasurable, my body wanted more. My hands took hold of Addison's hips and thrust hard back into her depths. But I wasn't anywhere near done. I went on a rampage, slamming into her channel as if I were a piston while forcing her body with all my might down upon the invader.\n\nSomehow, some way, Addison had enough of her wits about her to lower her lips to my ear, \"We're not using a condom so let me know when you're about to cum and I'll take care of it... Now fuck your Bitch.\"\n\nAddison spurned me forward like no other. I was a man on a mission as I sent a repeating barrage of thrusts deep into her wanton pussy with reckless abandon. It was a torrid pace and one that kept Addison right on the verge of euphoria. \n\nI tried to hold on and wait for Addison. I really did, but she was just too addictive with her own movements to garner my release. I'm sorry Addison. \n\n\"I'm about to...\" It was all that I could strain out without blowing directly into her womb.\n\nAddison was quick in her dismount and I thought she would use her hand or maybe my boxers to finish me off, but no; her mouth was on my member in half a heartbeat. Her tongue swirling and caressing as her head bobbed down all the way to my pubic hair and back again, all the while her hand massaged my balls\n\nIt was far too much. I grabbed my pillow to cover my mouth and I screamed as I released a torrent of cum into Addison.\n\nIt was a truly shocking revelation that as I was cumming hard into Addison's willing mouth, she was cumming as well. I felt her body quake as she swallowed load after load, moaning wildly around my shaft.\n\nAddison slithered up and into my body. She purred contentedly as she burrowed into my side, \"I never came so hard or so much in my life.\" Her body shivered in an aftershock at the thought. \"Jordan used to force me to do that, so I never did with Brodie, but you, Baby, I'll eat your cum for breakfast, lunch, and dinner. Best. Meal. \n\nEver.\"\n\nI held Addison tightly, \"I'm glad you enjoyed it, because that was absolutely amazing for me. You can do that to me anytime.\"\n\nWe laid there, just talking about the simple things in life; High School and my future as a mechanic to how early we both had to get up before we came upon the melancholy of her plans of moving in with Brodie when her lease expired.\n\nAddison's head was on my chest, her hand began lightly caressing my limp extremity. She wasn't trying to get me hard as much as it was just sort of something for her to do, though it was working. \"Did you enjoy fucking another man's girl?\"\n\nI knew everything about Addison, and, if truth be told, I had fallen for the woman years ago and the recent knowledge I had obtained was the proverbial icing on the cake. After the wonder of last night, the amazingness of today, and the undeniably incredible evening tonight had been, I wasn't going to let our age difference stop me from going for it.\n\n\"I wouldn't call it fucking another man's girl as much as I would say I was trying to steal another man's woman. I love you, Addison.\"\n\nAddison shivered as she clutched my body. I wasn't sure what she was feeling; only her actions dictated closeness. I had to see her face. I rolled us over, my body next to her lying form with my head hovering above hers.\n\nAddison was crying. \n\nAddison was smiling.\n\nThrough the waterfalls of liquid and pools of hazel, I swear I saw Addison's soul. It screamed, 'Yes! I love you!' and it was echoed, albeit far more meekly, as she dried her eyes, \"I love you, too.\"\n\nI positioned myself on top of Addison, my manhood at heaven's gate. I leaned down, noting her angelic smile, and kissed her soft lips.\n\nThe kiss wasn't as full of need as it was before, yet it was just as passionate. It wasn't hunger as much as it was our mutual love for each other funneling to and from our souls to a point where I could not tell you where I ended and Addison began.\n\nI slid in effortlessly. I held it momentarily before pulling back until only the tip remained before bottoming out again. I did once more, and as I did, I was met by the upward rising of Addison's hips.\n\nIt was a slow coupling and it mimicked our kiss in every way. We were latched together in two places, but it seemed we were melding into one. I have never in my life experienced such feeling nor do I truly know how to explain it. \n\nAddison simultaneously wrapped her arms and legs around me. I couldn't disagree as I cherished the closeness it presented, and it spurned me to increase my tempo... and we didn't even break our continuity as she did the same; Addison simply knew.\n\nI truly didn't want to break our kiss. I didn't. Unfortunately, it had to be done. Upon separation, I immediately missed the connection, but still felt what it represented.\n\n\"Addison, I'm going to cum.\"\n\nI went to pull out, but Addison's legs clamped around me, her arms pulling me down tighter causing my head to be next to hers, her lips in my ear. \"Cum in me, Baby. If you want to make a thousand babies, or have me take the morning after pill, or even adoption, whatever you want, just cum in me. Steal me away from that asshole and mark me as yours; mark me as your Bitch, forever.\"\n\nI wasn't sure what the consequences would be; was it a safe time for her or would we get lucky? If not, I knew she had a well paying career, but none of that factored into my decision. I knew Addison needed this. I could hear it in her voice - and I wanted to give Addison everything she wanted, needed for eternity.\n\nAs soon as I began to cum, Addison did as well. She clamped her hand over her mouth to thwart the scream. I, however, was in a locked position. It was a reflex action as my mouth went to her shoulder. I was cognizant enough not to bite down fully and break the skin, but I did leave a small indentation. \n\nAs I came down from my high, I fell to her side, \"Sorry about that.\"\n\nAddison turned to face me, her expression one of pure happiness, \"Don't apologize, I love that you marked me twice.\" She curled into me and we easily fell asleep.\n\n*\n\nIt was a slow and painful morning. I cringed as my alarm went off while Addison simply smacked the nuisance. It was already considered morning when we finished our activities and the time from then and to the alarm was not lengthy.\n\nI kissed Addison, \"I'll see you in an hour,\" \n\n\"I don't want leave,\" Addison then kissed me. \"But I'm already going to be in a rush and there is no way I'm not taking my man to school.\"\n\n\"I can get a ride; you don't have to rush.\"\n\n\"No, its not that; I just have to stop and buy a laptop before work, as well. I spilt coffee on mine on Friday and it won't come back on. I meant to pick one up over the weekend, but...\" Addison smiled not so innocently. \"Love you, Baby. See you in an hour.\"\n\n\"You can borrow my laptop if you want.\" \n\n\"Are you sure?\" Addison looked at me curiously. \"I only need something to type up the reports for my patient's owners.\"\n\n\"Certainly.\" Am I sure? Of course I was sure. Never in my time knowing Addison had she ever done anything to anyone's property. She would give you the shirt off her back if it was so needed. Not that I used it anyway, as I tend to be on my tablet for anything that requires a computer. Besides, there was one irrefutable fact... \"I love you, too.\"",
        "I handed her my laptop without a second thought, kissed her one final time, and helped her out the window.\n\nI texted Dante, my ride to and from school.\n\n- Don't get me, I've got a ride.\n\nYes, my new girlfriend was going to be giving me a lift. I smiled at the knowledge I would no longer have to sit and watch Dante and Camilla as well as Shane and Joyce do all those things relationships encompass while Leilani and I just watched... Though I did feel kind of bad for Leilani, she'll find love eventually and when she does, she'll do whatever it takes to keep it. She may have an overly passive personality, but I always sensed she had a strong propensity for love.\n\nI had finally made it downstairs. It was a chore. If yesterday was an indicator, I still had ten minutes before Addison would be ready to go.\n\n\"Good morning, Wyatt,\" Dad sipped at his coffee filled thermos.\n\n\"Morning,\" I mumbled as I poured a bowl of cereal.\n\nDad laughed, \"Yeah, I figured as much considering your late night. He then shook his head, \"I know what it was like at your age, and I know you can't really help when the urges strike you, but when you watch porn, keep in mind that I have to get up early as well. It was loud enough that I thought you had a girl in your room, but I would have heard you trying to sneak her in and out of the house so I know that wasn't the case.\"\n\nOh, what little did he know... and if I wasn't grateful about him coming up with my lie, I would have been embarrassed if he had actually heard me masturbating. \"Sorry; I'll try to keep it down.\"\n\n\"Well, I'm outta here,\" Dad grabbed his car keys before heading out the door. \"Try and stay awake at school.\"\n\n\"Bye, Dad.\"\n\n*\n\n\"Where are you going?\"\n\nI had just let go of Addison's hand, taking two steps to the passenger side door of her Jeep. I thought it was obvious where I was going. I turned back to see my girlfriend, with her eyes raised and a disarming smile as she held up her keys for me to take. I changed tact and decided to act like I knew she wanted me to drive, \"What? I guy can't open up the door for his beautiful, sexy, girlfriend?\"\n\nAddison walked over to me, putting the keys in my palm and a kiss on my lips, \"Nice touch; no one has ever done that for me.\" \n\nUpon hearing that, I knew it was my mission to open every door for my girlfriend. \n\nAddison continued, \"Though I don't feel sexy wearing these clothes.\" She picked at her blue blouse and black slacks; her typical work attire.\"\n\n\"Addison,\" I smiled as I Stated, \"You'd make a snowsuit sexy.\"\n\n\"Aww,\" Addison blushed. \"You know, comments like that make me love you more.\"\n\nI shut the door and then got into the driver's side. As I put the key into the ignition, I figured it was time to break the news, \"I just thought you should know, my Dad heard us last night.\"\n\nAddison went pale as she gulped, \"What did he say?\"\n\nI chuckled, \"He told me to turn the volume on my television down.\"\n\n\"Huh?\"\n\n\"Yeah, he thought I was watching porn.\"\n\n\"I guess you'll have to come over to my place then,\" Addison giggled before leaning into me, her hand caressing my manhood. \"Besides, your Bitch wants to express how much she enjoys your cock and I can't do that if I have to be quiet.\"\n\n\"You know, you've been calling yourself that a lot,\" I parted my legs to give her better access.\n\n\"Of course, Baby; it's the pet name you gave me.\" Addison unzipped my pants and lowered her head onto my shaft.\n\nWhen I Stated, 'You're my personal bitch' I had no idea Addison would take it to heart like she did. \"But don't women hate to be called a Bitch?\" I groaned as I did everything I could to concentrate on the road.\n\nAddison lifted off my saliva coated member, \"Words are a matter of context. When you said I was your personal Bitch in heat, you meant it lovingly, which is way better than being called a stupid Hick in a derogatory manner.\" She then licked my mushroom topped crown, \"Now just sit back and focus on the road, Baby... and stop interrupting my breakfast.\"\n\nI could do that... err, try to do that.\n\nAddison began working in earnest for her meal. She bobbed her head with quick strokes while her right hand massaged my balls.\n\nThe feelings were glorious, and very distracting. I did my best to keep the car steady, but often drifted before bringing the Jeep back into the lane.\n\nI was getting close... to school and a pleasure induced high. My right hand gave up on holding the wheel and rested on her head. Immediately, her left hand raised up and clamped upon mine, forcing pressure upon it and therefore her head. I easily obliged, locking my fingers in her hair and forcing a faster pace.\n\nAddison began moaning, my actions increasing her libido as well, which in turn raised mine.\n\nAddison's face was already buried into my pubic hair when my hips involuntarily rose. I held her tight as I unleashed a tsunami of cum into my girlfriend's mouth.\n\nAddison came as I did, her body tensed in sheer euphoria as she chugged down every drop of my essence.\n\nI pulled in front of Hilldale High, surprised that we made it here alive.\n\nAddison lifted her head, tucking my cock back into my pants, \"Yummy.\" She wiped at her mouth, with a cat ate the canary grin, \"I swear, I must really love you because just knowing your cumming makes me cum so hard... I'm going to have to start bringing an extra pair of panties with me.\"\n\nI stared deep into Addison's eyes as I Stated, \"However you feel, just know I love you more.\"\n\nI got out of the car and walked over to her side, opened her door, and then walked her to the driver's side. It was the least I could do after what she did for me.\n\n\"Love you, Baby,\" Addison kissed me goodbye.\n\n\"Love you too, Add...\"\n\nAddison interrupted me by tilting her head and raising her index finger. I understood completely. \n\n\"I mean, I love you, too, Bitch.\"\n\n\"That's better.\" Addison gave me one more kiss before she got in the car, \"See you after school.\"\n\nI waved her off before I walked toward the school.... Addison said it was based on context, but the context of what I said was meant to be a joke, nothing more, but she interpreted it lovingly - and it made her genuinely happy. She was right, however, as long as I don't call her it in a derogatory manner, does it matter?\n\nNo it does not.\n\n\"Ow.\" I couldn't help the exclamation as I bumped into someone. Though I said it more in surprise, the person who echoed the declaration certainly took the brunt of the collision. \"I am so sorry,\" I turned around to find I had bumped into Leilani. \"Are you all right?\"\n\nLeilani had tears in her eyes. I didn't think I had that much momentum, but she was clearly shaken.\n\n\"I'll be fine,\" Leilani wiped the liquid in her eyes.\n\n\"Are you sure?\" I grabbed her book that fell to the sidewalk and handed it back to her.\n\nLeilani gave me a soft smile that may or may not have been manufactured, \"I'm okay.\"\n\nI tilted my head, \"Positive?\"\n\nLeilani legitimately snickered at my persistence, \"Yeah, I'm all right. No harm done.\"\n\nFinally satisfied, I headed to my first class.\n\n*\n\n\"Hey, Wyatt,\" Dante sat next to me as Camilla sat next to him. \"So how'd you get to school this morning?\"\n\nLunch was usually a torrid affair. All of us, except Leilani, shared the same period and we spent that time either discussing what happened last weekend, what we'd be doing this weekend, or if there was some explosive gossip going around school. That last one usually only involved the girls, but sometimes it wrangled us guys into its web.\n\nCamilla seemed far more intrigued than she normally would have to something as simple as the question Dante posed to me, but it also made me happy that I'd be able to reveal to my friends my big news from over the weekend.\n\n\"Addison is my next door neighbor, you've seen her before, Dante.\"\n\n\"Yeah,\" Dante nodded. \"Isn't she like some kind of doctor?\"\n\n\"Veterinarian,\" I coolly responded. \"She's twenty-six and...\"\n\n\"Twenty-six?\" Camilla sounded relieved upon her asking me to verify Addison's age again.\n\n\"Yup,\" I smiled as I was preparing to drop my bomb. \"She's also...\"\n\n\"Hey, did you guys hear?\" Shane had interrupted me as he and Joyce arrived at our table. I had never seen the couple so animated.\n\nJoyce was nearly jumping at the news, \"Cooper Rutledge beat up Rick, Sam, and Eric at prom and apparently his girlfriend, who is hot as fuck by the way, grabbed Neil by his dick and said he wasn't even close to packing what Cooper has!\"\n\n\"Eric even broke his hand in the fight!\" Shane piled on.\n\nCooper Rutledge, after years of abuse and torment by Neil and his crew - I mean who could forget the song and dance routine they made up making fun of his weight with the school band behind them - finally stood up to those assholes and won. Though he didn't hang out with us, he always seemed like a nice guy. Good for him... and good for those other idiots as well. It's nice to know everyone got what they deserved.\n\nThis was big enough news for all of us to get involved into the discussion, the conversation lasting until the end of lunch.\n\n*\n\nI had to wipe the drool from my mouth.\n\nAddison was dressed in a mini dress that had a plunging deep v neckline that went past her navel with the hem of the dress not even covering her ass as I could still see the luscious bottom curves. She had a pair of large, gold hoop earrings and high heels for accessories and for her makeup, black eye shadow, mascara, and a deep ruby red lipstick that was done to perfection... And she was leaning back provocatively against the front of her Jeep.\n\nWow. Just wow... while still drooling.\n\n\"That's exactly the reaction I was looking for... Now just imagine me posing on your Camaro.\" Addison held out her keys for me. \"Now I feel sexy.\"\n\nThe thought of her posing on my car made me smile. \"You look breathtaking,\" I gave Addison a kiss as I took the keys. \n\n\"Thanks, and thanks again for the laptop. It's in the back seat.\" \n\n\"No problem; anytime,\" I smiled. \"So when did you have the time for the make over?\"\n\nAddison excitedly smiled, \"Lunch; though I didn't change until after I left work.\" She then pointed over my shoulder, \"Who's that?\"\n\nI glanced in that direction, \"Vice Principal Carpenter. Why?\"\n\nAddison giggled, \"He wanted to know what I was doing here and when I told him I was picking you up, he just stared at me for a minute before walking away, and I heard him mumbling about where were these girls when he was in High School.\"\n\n\"That's a compliment; the Vice Principal is jealous of a student because of you,\" I chuckled as I opened her door, \"And what would my lovely Bitch like to do today?\"\n\n*\n\nThe mall. It's usually not a high on my to do list of places to go. That all changed when Addison told me that's where she wanted to spend our time after I got out of school. The trip to the conservatory made me open to this experience with her, knowing full well that whatever I would want to do, she would be right by my side regardless of what that might be. Once again, it's not what you are doing, but who you are doing it with. \n\nI opened the door and we entered the mall. I easily slid my hand into Addison's palm.\n\nAddison leaned into me, her head nuzzling into my shoulder as she purred into my ear, \"Baby, I do love you holding my hand, but wouldn't you rather hold onto something else of mine?\" Her hand moved my whole arm from between us to behind her back, her arm then wrapped around my waist. Then, with her other hand, she shifted my hand from her lower back to the swell of her ass. \"I'm your slutty Bitch and I like to be held like one.\"\n\nThe feeling of Addison's ass in my palm was amazing. \"I'm convinced.\"\n\nAddison sighed contentedly as we walked down the main string of shops, she not caring in the slightest to the disapproving stares of half the people nor the lewd glances by the other half.\n\nI was beginning to love the infamy I was receiving. I honestly felt like I've won the jackpot. Here I was in a faded t shirt and jeans while it appeared Addison was ready to start swinging from a pole. \"So, did you have any particular store in mind?\"\n\n\"I was able to go to this one sex shop to get a new wardrobe of going out into public outfits, but I really wanted your opinion on bedroom attire.\"\n\nIf what she is wearing is her idea of outfits suited to going into public, I had no idea of what to expect for 'bedroom attire.' \"You want my opinion on pajamas?\"\n\nWe stopped and I finally noticed our destination... Victoria's Secret. \n\n\"Not pajamas, but lingerie,\" Addison giddily left my side, but grabbed a firm hold of my hand to drag me in. \"Don't tell me exactly, because I want to surprise you, just give me ideas. Do you like teddies?\"\n\nI felt out of place. The outfit was okay, but my uneasiness clouded my focus.\n\nAddison saw my reaction. \"That's a no,\" and went to the next type of lingerie. I must've still had the same look on my face because she snickered, \"Baby, if you don't loosen up, you'll leave me with no other choice.\"\n\nThat threat didn't change anything. \n\n\"Okay then,\" Addison waved over the sales associate.\n\n\"Is there something I can show you?\" A long haired brunette woman with a nametag that read Sheila quickly came over with a smile.\n\n\"Yes,\" Addison pulled the lingerie from the rack, \"If you're man was eighteen years old, would this make him horny?\"\n\nI coughed. \n\nMy eyes went wide.\n\nI turned fifty shades of red. \n\nSheila did her best to keep a straight face. \"I don't know, Dear. A man typically is able to communicate with his significant other so his woman wouldn't have to ask the sales clerk.\"\n\n\"Isn't that the truth,\" Addison gave a lamented sigh.\n\n\"All right, all right,\" I threw up my hands knowing exactly where the rest of this conversation was heading. Though, I must admit, Addison's humor is one of the main reasons I love her so much. I moved quickly to the next rack of hangars, \"I like the ones that are see through in the um...\" I paused as I noticed Sheila still standing next to Addison. I didn't want to offend.\n\n\"Tits,\" Sheila smiled as she walked by me. \"I'm an excellent judge of what my customers want to hear, so don't worry, I've heard it all before.\"\n\nI nodded as I pointed to the mannequin and next item that intrigued me, \"These dangly things that clip to the leggings...\"\n\nAddison giggled, \"Garters and stockings.\"\n\n\"And these bead things around the hole...\"\n\n\"Crotchless g string,\" Addison snickered. \n\n\"Yeah, those.\" I ignored the fact she was finding humor in my answers. I didn't care. Now that Addison and Sheila got me to quit being so self conscious, all I could think about was seeing Addison in lingerie. It was inspirational. \"And these are my favorite because,\" and I moved behind Addison and let my hands start at her ass before roving over her body, finishing by giving a quick, soft squeeze of her breasts, \"they hug your perfect body, oh so tightly.\"\n\nAddison barely breathed out, \"Corsets.\" She then leaned into me and gave me a brief kiss. \"Thanks for the roadmap to your cock; now meet me in the food court in an hour.\"\n\n\"That's what this was about? You already had a roadmap to that and my heart just by being you,\" I punctuated my Statement by smacking her ass. \"Have fun and I'll see you in an hour.\"\n\nAs I walked by, Sheila nodded while giving me a light clapping of her hands.\n\n*\n\nI heard the conversation about me from behind, but chose to ignore it. I just pretended to be oblivious to Camilla and Leilani as I sipped my vanilla shake as I played a game on my phone.\n\n\"Just go say hi to him,\" Camilla urged.\n\n\"But what about the girl?\"\n\n\"He said she was his neighbor.\"\n\n\"But I don't know what to say?\" Leilani desperately countered.\n\n\"I just said to say hi to him, didn't I?\" Camilla then snickered, \"If you don't go over there and say something, I'm going to leave you here; now get going and I'll be at Spencer's.\"\n\n\"Whoa!\"\n\nDid Camilla just push Leilani?\n\nI heard the dragging of feet heading my way and decided to save Leilani of her embarrassment. Really, am I that scary? With the rest of our friends, sure she's quiet and shy, but with me, she always takes it to a whole other level. \"Hello Leilani, what brings you to the mall?\"\n\nLeilani squeaked. I surprised the girl so much she actually squeaked. \n\n\"Um, hi, um, Wyatt,\" Leilani barely formed the sentence. \"Just shopping with um... um...\"\n\n\"Camilla,\" I finished for her.\n\n\"Yeah,\" Leilani's head shied down and if I didn't know better, I'd swear she was trying to memorize the dirt spots on the floor.\n\n\"You want to sit down?\"\n\nI always thought Leilani's smile was exceptional when it was on display and this instance did not disappoint. \n\n\"Thanks,\" Leilani slid easily into the booth bench opposite from me, dropping her bags carefully as she did. \"What brings you here today?\"\n\nLeilani was getting a little comfortable; not a single \"um\" in that sentence... She still couldn't look me in the eye, or face, or even my hand. \"Oh me, I'm here giving advice to...\"\n\nThe high heeled footsteps finished right at my table. There wasn't even a pause as Addison melted into my side, \"Hey, Baby, I hope you like what I got.\"\n\n\"I'm certain I will,\" I gave Addison a cursory hello kiss. \"Addison, I'd like you to meet a friend of mine, Leilani. Leilani, this is my girlfriend, Addison.\"\n\n\"What a pretty name,\" Addison smiled.\n\nLeilani's face fell, \"I... I... I need to go.\" She grabbed her bags, and I was certain she was about to cry as she walked slowly away.\n\nAddison looked at me. I didn't know. \"Don't take it personally, Leilani's always been that way around me.\"\n\n\"Just around you?\" Addison's eyes raised in question.\n\n\"Pretty much,\" I shrugged. \"To everyone else, she's just shy, but for some reason, I make her nervous.\"\n\n\"And what about you?\" Addison eyed me carefully, \"Do you like her?\"\n\n\"I mean, she's nice and all, and I consider her a friend...\"\n\nAddison leaned into my ear, \"Do you want to fuck her?\"\n\nI was shocked into a defensive position at the question. \"I would never, ever cheat on you,\" I Stated emphatically. I thought that would be abundantly obvious after how much disdain I had for Brodie and especially since I told her about my mother. \n\n\"I know that, but, that was a non answer if I've ever heard one,\" Addison laughed and I wasn't sure how that was a non answer. \"Well, regardless, we don't want to leave a friend of yours in tears, do we?\" She got up and put speed in her steps as she caught up with Leilani just exiting the food court.\n\nAddison's surprise departure left me behind by quite a bit as I had to collect my girlfriend's bags.\n\nWhen I arrived, Addison was already whispering into Leilani's ear, Leilani was blushing, while both were staring at every step I took from the table to them.\n\n\"Are you all right, Leilani?\"\n\nShe gave a faint nod. \n\nAddison smiled sweetly in Leilani's ear, \"Just remember what I said, and if you need to talk, you have my number.\"\n\nAs Leilani slowly walked away, you can see her mind trying to come to grips with a weighted decision... as if it was life altering. \n\n\"What did you say to her?\"\n\nAddison melded into my side and she mewled happily as my hand immediately gravitated to her ass. I'm so easily trained. \"I just calmed her down and gave her something to think about. She'll be fine, I promise.\"\n\n\"Oh, I almost forgot,\" I dug into my pocket and pulled out a box, \"It's not much, but this is for you.\"\n\nAddison looked at me with a beaming smile. She accepted the gift before delicately opening it. \"It's beautiful.\"\n\nIt was a simple necklace with a cubic zirconia stone and matching earrings. \"I'm sorry it's not the real thing, but someday, it will be.\"\n\n\"No, this is perfect,\" Addison smiled as she switched her earrings and put on the necklace right there. \"Thank you.\"\n",
        "*\n\nAm I going to die?\n\nThat was the exact thought crossing through my mind as I inched my way to Addison's window on the awning. There were so many soft spots, it felt like I was walking in a bounce house. Addison had done this twice, but I weigh more than her... Am I going to die?\n\nI finally made it to an empty room. Oh, the bed, a dresser with a television and blu-ray player, nightstand, bookshelf, and a random office chair placed at the foot of the bed were there, but Addison was not.\n\n\"Addison?\"\n\nI heard the huff from the other room. \"Please stop calling me THAT!\"\n\n\"Bitch?\"\n\n\"Just a minute,\" I heard the excitement in her voice. \"Sit in the chair!\"\n\nI did as instructed, noting that I guess I wasn't easily taught. As I continued to sit, I couldn't help but notice the different degrees in her book and blu-ray collections. Addison had a row of veterinary manuals/documentaries, then came the serious masterpieces of novel/Oscar award winners, and finally a row of sex booklets/porn with titles like \"How to Talk Dirty,\" \"Blowing Him Away,\" \"The Ultimate Guide to Anal Sex for Women,\" and \"Tickle His Pickle,\" with movies titled, \"Slut Training,\" \"Slutty and Sluttier,\" \"Yes, I Am a Slut,\" \"Fuck My Ass and My Face,\" and \"How to Perform Pole and Lap Dancing.\"\n\nNow, I knew Jordan was the mastermind behind these additions to her libraries, but I am quite stunned Addison still had them.\n\n\"Are you ready?\" Addison's voice was sultry and seductive. \n\nReady? Ready for what? Ready to see Addison? \"Of course.\"\n\nI wasn't ready. The music, Beyonce's 'Dance for You', began to play half a heartbeat before Addison strutted with absolute confidence in the room. Her outfit, a sheer red corset outlined in white, a red crotchless g string with white beads, white garters with white nylons and red high heels, was mouthwatering. Her eyes never left mine.\n\nAddison slowed as she approached me. Her hand went to my chest as she began to circle my seated position. From behind, her other hand did as well, before she leaned in and mashed her breasts in the back of my head. Her hands went down, and then back up to my shoulders, then scrapping across my neck as she finished circling me.\n\nAs soon as she came around the side, she flung her leg on top and then around me, anchoring it with the back of her ankle to the stem of the chair, while the other slid in between my leg and the arm rests.\n\nI will never forget Addison's eyes, so captivating, as they stared me down. She wanted to do this for me; to prove that everything she did was for me. \n\nI felt the same way. Addison was always in my thoughts first and foremost, and I just wanted to make her happy.\n\nAddison kept that eye contact as she moved her hips in circles as she brushed her tits against my body.\n\nMy hands went to her sides, and were going for her breasts when they got swatted away. She kept her gyrating as she wagged her finger at me and smiled while she shook her head no. Her point pointedly clear: hands off.\n\nAddison's hands went to the top of her corset and pulled the fabric over her mammaries down and I got the slightest view before she let go and they became clothed once again.\n\nAddison then stood, slowly, her leg from behind the chair brushing my thigh and then my painfully hard erection. She rocked her hips to the music, turning around as she did. She then sat down nearly fully on my lap, her hands using the arm rests for support.\n\nAddison became a woman possessed. She began grinding with fervor in circles, side to side, and then up and down. She leaned back into me and started caressing my neck with I love you kisses.\n\nI was going absolutely insane. Addison had made it clear I was not allowed to use my hands, but that was becoming a vastly unpopular concept to my body.\n\nMy hands took hold of her hips of their own volition and before she could give a counter argument, I bent her forward over the bed.\n\nMy actions startled Addison which caused her to give off a discombobulated \"Oh\" sound.\n\n\"You think you can invite me over, dress like my wet dreams, dance like stripper, turn my cock into an iron bar, and not expect to get fucked?\" I punctuated my question by slamming full throttle into Addison's over saturated pussy.\n\n\"Oh yeah, Baby,\" Addison moaned out.\n\n\"I take it My Bitch approves?\"\n\nAddison spasmed at me calling her by her chosen name. \n\nIt spurred me on more. \n\nI was relentless in my assault. I pounded with sweet violence, deeper and harder into her abyss with every thrust. I grabbed Addison by the hips and used them as my anchor to keep her from being pushed further on the bed.\n\nAddison's bookshelf caught my eye, and it dawned on me... 'The Ultimate Guide to Anal Sex for Women.' Did Addison like anal sex? I wasn't sure but as I rammed back forward, her ass shook and I knew I needed to try it.\n\nFrom videos I saw online, without lubrication, this could be painful. As I slid out of Addison, however, I realized my dick was overly lubricated. I pulled the g string to the side and Addison immediately repositioned herself, shifting her ass to a slightly lower position and visibly relaxing. \n\n\"Enter slowly, Baby,\" Addison breathed.\n\nI put my cock at the entrance and pressed forward... Damn, was her ass tight. I moved forward, a millimeter a moment. Apparently, I was going too slow as Addison pushed back...\n\n\"I'm good, Baby,\" Addison fully clapped back with her ass for good measure. \n\nI groaned instantaneously. \n\n\"Well since you just took care of me, let this Bitch that is most definitely in heat take care of you,\" This time she didn't stop and shifted forward before pushing back. She clapped back again and again, causing an unrivaled pleasure in my body. \n\n\"Fuck,\" I involuntarily called out.\n\nThere was so much sensory overload. The tightness that enveloped my shaft... The jiggling of her ass as it bounced back... The constant state of howling Addison was enraptured in as she fucked me silly... It was too much as I cried out, the room nearly spinning as I was caught in a wave of euphoria that became exponentially increased as Addison came equally, or maybe even more so; her muscles doing their best to squeeze every drop of my essence straight into her colon.\n\n\"Holy shit,\" I panted as my sweat covered body caved on top of my equally covered girlfriend, my arms bracing me enough to not turn her into a pancake.\n\n\"Yes,\" Addison hummed as she allowed her body to absorb my weight. \"That was delightful.\"\n\nI moved my hands closer, allowing them to embrace my love. \"That's an interesting collection of books and movies you got there.\"\n\n\"An old boyfriend used to make me do all sorts of things, and I had packed them all away with the intent on getting rid of all of it.\" Addison turned her head and gave me a kiss that meant forever. \"But then we became a couple, and I'm proud to say that I want to be the best Slutty Bitch I can be for you.\" \n\n\"I love you,\" I kissed her back the same way; a true expression of the truth in my heart. \"I think we need a shower.\" \n\n\"No,\" Addison's voice was soft yet forceful at my attempt at separation. \"Just a little while longer; I want you to fall out naturally.\"\n\nI snuggled back into Addison thoroughly convinced. \n\n*\n\nIt was a sad goodbye the next morning when Addison dropped me off at school. Tuesday's, Wednesday's, and Thursday's were her office's days to stay open later, while today, as well as Wednesday, Thursday, and Friday I worked from three to six at the shop, in addition to my eight hours Saturday. Still, we would only be separated an additional four hours, but it felt like an eternity. We weren't crying over the cold hard facts, but it was disheartening... Just more proof of our love.\n\n\"Have a good day, Baby,\" Addison gave a soft smile.\n\n\"You do as well.\" I put a hand to her cheek, \"I love you, Bitch.\"\n\n\"Love you, too, Baby,\" Addison nuzzled into my hand before getting into her Jeep. She then rolled down the window, \"Try to give some extra attention to Leilani from now on. \"She needs it.\"\n\nI nodded as I waved her off.\n\nExtra attention. It's not like I didn't talk to Leilani when we saw each other, which means I need to what? Search her out? Be more physical with her? Not in a sexual way, of course, but in the same light that I treat Dante and Shane? Having no other understanding, the answer was simply, Yes.\n\nIt didn't take me long to find Leilani. She was near the front entrance, same as yesterday, though she wasn't in tears this morning, but she did have that same weighted look strewn on her face from the mall. It was obvious now why Addison wanted to have me give her extra attention. Something was truly troubling her and anything from me could help ease her through it or simply allow her a few moments reprieve from it. Sometimes, that's all it takes.\n\nI walked right up to her and picked her up in a hug. \"Hey, Leilani; how's it going today?\"\n\n\"Whoa.\" Leilani's eyes went wide and she dropped her backpack at the sudden and unexpected hug and lift. Her smile went ear to ear as I set her down. For the first time, she actually looked at me as she spoke, too excited not to, \"What's gotten into you, Wyatt.\"\n\n\"Nothing.\" I laughed, \"You just looked like you needed a pick me up.\"\n\n\"Ha, ha,\" Leilani said the words for laughter, while laughing herself. Her tone then went back to her typical, muted quality, as if she just realized to whom she was speaking, \"I see what you did there.\"\n\n\"Let me walk you to your first class,\" I picked up her book bag and started into the building. \"Ms. Dyers trigonometry class, right?\" \n\n\"Yeah,\" Leilani was a few steps behind but caught up easily to my pace, not as if I was trying to get away from her. \"You don't have to do this, you know.\"\n\n\"I want to.\" I truly did. Leilani was a friend, and I wanted to help my friend.\n\n*\n\nI was only late for two of my classes while barely arriving on time to the others as I had made it a point to escort Leilani to every single class of hers. It was an interesting experience. I enjoyed the time I spent with her, because she allowed herself to talk to me, as if it were a trial run of a what if... She was still shy, but it wasn't awkward, which allowed her smile to shine through. It was endearing. \n\nIf it wasn't for my deep love for Addison, I would actually consider asking Leilani out.\n\nNot a chance.\n\n*\n\n\"Rumor has it, you have a girlfriend,\" Dante sat at the lunch table with raised eyebrows and a curious stare.\n\nAll eyes were on me as my group of friends sans Leilani hammered away at me with their curiosity. Though, I must say, Camilla's gaze was far less forgiving as she sat next her boyfriend. \n\nI couldn't hold my smile, \"I tried to tell you guys yesterday...\"\n\n\"Is it really with that doctor neighbor?\" Shane sat in disbelief. \n\nJoyce couldn't wait to add, \"Is she really twenty-six?\"\n\n\"Yes and yes.\" It was my moment. I felt on top of the world at my friends knowing that I not only have a girlfriend, but an older woman as one. \"Addison is amazing and...\"\n\n\"Did it ever occur to you to talk to us about this?\" Camilla angrily interrupted, \"Huh?\"\n\n\"What?\" I was deeply confused by her assessment. \"Why would I have to? Did Dante ask me about dating you? No. I was happy for my friend and I was happy for you.\" I didn't raise my voice, though Camilla had. I chose logic first, but that may not last a second time.\n\nDante put a hand over Camilla's hand and she did a double take. One look at her boyfriend and she withdrew from the fight. \"You're right and I'm sorry, Wyatt.\"\n\nDante nearly spit out his drink. \"Did I just hear you apologize?\"\n\n\"Shut up,\" Camilla playfully slapped him. \"Wyatt, I'm happy you're happy.\"\n\n\"We all are,\" Dante added and Shane and Joyce confirmed by nodding their heads. \"You're just dense.\" All my friends emphatically agreed with that last remark.\n\nAfter not realizing that Addison and I were on a date for all of Saturday, I couldn't even argue what was said. I shrugged with a laugh, \"Yeah, I know.\"\n\n\"So,\" Joyce leaned forward, \"tell us about her.\"\n\nVery few conversations hold our attention for the entirety of lunch; yesterday, it was Cooper Rutledge. Today, Addison Stevens was the star.\n\n*\n\nI opened the door for Leilani; and not just the school door, either, but the door to Dante's Toyota Corolla as well. Maybe I'm just used to doing it for Addison or perhaps I'm trained to do it for all females now, though, I didn't do the same for Principal Rachel Larson who came out after us. I'm not exactly sure why, but Leilani enjoyed my thoughtfulness. \n\nLeilani's head was still shied down, but she did brush a tendril of hair behind her ear, \"Thanks for today, Wyatt.\"\n\n\"I'm glad I could help,\" I smiled as I could visibly see that whatever was on her mind was alleviated. Not focusing on the issue allowed for clarity. Regardless, I wasn't going to let up. With Leilani opening up a little, I was able to see a new side of her and I wanted to encourage more of that even further. Hopefully she'll come out of her shell.\n\n\"You sure you don't want a ride?\" Dante called out.\n\n\"Nah, I have a half hour to kill and it's only two blocks away.\" I shut Leilani's door, seeing she was texting someone, and it just felt right to whistle as I walked away.\n\nUntil I received a text...\n\n- Sorry, Baby, but I have to run an errand tonight and I won't be back until late; tomorrow and Thursday as well. If you still want to come over then, my window is always open for you. Love you!\n\nWell, that sucks. Will I go see Addison at night? I love her to much not to visit, but just when I thought I only had a couple hours left, it quickly became half a day. Oh well, I understand Addison is an adult and with that comes inherent responsibilities. It did allow me to keep up on my homework, although it still sucked.\n\n*\n\nThe next couple days became routine. With the elongated days we were having, Addison and I tended to cuddle and talk, though she wouldn't tell me about her errands saying it was a surprise, before we fell asleep, too tired to do anything else. I must say, there is something therapeutic about cuddling with a woman who loves you as much as you love her. Stress just melts away.\n\nAt school, it was all about Leilani as she was truly coming out of shell. On Wednesday, she sought me out instead of me coming to her and her voice became slightly more pronounced. On Thursday, she initiated holding my hand as we walked to class and when I spoke to her, answers were clear and concise without hesitation. There was still shyness, but underneath that exterior, a confidence was brewing that wasn't there before. \n\n*\n\n\"I only have something quick to do after work today so I'll be home when you get off work.\" Addison kissed me sweetly and it felt like heaven. \"Your surprise will be waiting for you, Baby.\"\n\n\"You don't have to get me anything,\" I kissed her this time. \"You being my Bitch is more than enough. Love you.\"\n\n\"Love you more,\" Addison sat in the driver seat. \"You're going to love tonight.\"\n\n\"If it's with you, I know I will.\" How I cherish Fridays; a whole weekend with my girlfriend. I closed her door, \"Have a good day at work.\"\n\nAs soon as Addison pulled away, Leilani was right by my side.\n\n\"Hey, Leilani,\" I took her backpack from her as a true gentleman carries a girl's bags. \"What's on your mind?\"\n\n\"Mast...\" Leilani flinched momentarily before collecting herself, \"I mean, I'm thinking about what master's degree I want to pursue; biomedical or automotive.\"\n\n\"Automotive?\" I raised my eyes to my friend. \"Really? I didn't think you were interested in cars.\"\n\nLeilani shrugged, \"I wasn't, until you.\" She then melted into my side just as Addison does, \"You changed everything.\"\n\nThis closeness was a little much for me. I'm afraid that in encouraging Leilani to be more open, she may have fallen for me. I had to make my position abundantly clear. \"Leilani, I will never cheat on Addison. Our relationship is...\"\n\n\"I know,\" Leilani interrupted, \"and I would never put you in that situation. I care for you and Addison too much to come in between the you two.\" I just want to get a feel for what it might be like to have a boyfriend in the near future.\"\n\nNow that I could get behind. I couldn't help the smirk, \"You finally got an eye on someone, huh?\"\n\n\"I wouldn't say finally, because I've liked this guy for almost two years, as much as I would say I finally know how to be with him.\"\n\n\"Well, good luck,\" I embraced Leilani tightly as we walked down the hallway. I just hoped the guy she likes didn't see us and therefore ruin her chances. We absolutely looked like a couple. \"As for your degree choice,\" I handed her bag to her as we reached her class, \"Go with the one that you will enjoy most. I speak from experience, doing something you love makes the work day go by much faster.\"\n\n\"Thanks, Ma... Wyatt,\" Leilani accepted her bookbag. \"I appreciate your advice.\"\n\n\"No problem.\"\n\n*\n\nTime was moving at the pace of a sloth. By the time Leilani relinquished my hip and I got to work, I would've sworn somebody was pranking me. Every time I glanced at the clock it seemed to read ten minutes prior, as if I was traveling back in time. As much as the surprise was ever present in my mind - What could it possibly be? - I genuinely was excited to just be with Addison. Cuddling and talking at night were great, but to do something, anything out of the confines of the townhouse will be thrilling. Dinner? Movie? Conservatory? Sign me up for any and all of them. It's not what you do but who you do it with, and I was missing my who.\n\n*\n\nI was eager with anticipation. So much so, I didn't hear a word my Dad said the entirety of the trip home. So much so, he had to scream my name and clap his hands in front of my face for me to understand that he wanted my order at the McDonald's drive thru window. He heartily laughed at me when I nearly jumped through the roof of his Chevy Silverado.\n\n*\n\nWhen I got home, I raced upstairs, taking two to three steps a time, just to get into the shower. I dressed in a white button down shirt and black slacks before stopping myself from stepping out of my window. I shook my head with a laugh at realizing it wasn't eleven o'clock at night, but seven in the evening. I always go out on Friday's. There was no need for the awning. I could leave the house, which means my Dad won't try to find me later, and simply walk next door. Besides, it's daylight, I can just imagine any one of my neighbor's on the block calling the police because they witnessed me breaking into Addison's townhouse.\n\nI didn't even give a knock when the door flew open and I was pulled inside. Before the door shut, Addison's lips were devouring mine in a passionate need.\n\n\"I've missed you, Baby,\" Addison pulled back with a hungry smirk, her sheer black corset, garter, and fishnet stockings tantalizing my very being.\n\n\"I've missed my Bitch as well,\" I nodded while smiling. \"And now we have all weekend together.\"\n\nAddison's smirk turned into a mischievous grin, \"You ready for that surprise?\"\n\n\"If it has anything to do with what you're wearing, then hell yes.\"\n\nAddison caressed my cheek before gliding down and tickling my chin, \"Then why don't you make yourself cozy on the bed and I'll be there in a minute?\"\n\nI was convinced. \n\n*\n\nI had just made myself comfortable as I sat up against a couple pillows against the oak headboard when I heard a metallic sound. My eyes raised in curiosity when Addison peeked her head into the doorway.\n\n\"Are you ready, Baby?\"\n\nAddison looked breathtaking all dolled up just for me. I wanted my girlfriend in the worst way. \"Absolutely.\"\n\nAddison smiled as she walked with confidence into the room. In her hand was a chain linked leash tautly stretched out of the room. As she stepped closer, someone else appeared. She had a wonderful figure as everything was exposed due to the black body harness in which she was dressed, the leash connected to the ring just below her neck. Her midnight black hair was done up in pigtails, but her head was held down, staring into the carpet. She looked vaguely familiar...",
        "\"Leilani?\" As I slid forward to the edge of the bed, the girl went to her knees. My eyes were nearly squinting just to be sure. \"Is that you?\"\n\nAddison is the one who answered as she fell into my side, \"Baby, this is your surprise.\" Her head went to my ear and her hand to my dick, \"I want you to fuck her as rough as possible in whichever holes you want. She needs this more than you can possibly know.\"\n\nI was deeply confused, \"Leilani, I'm flattered, but...\" I then realized I was saying this to the wrong person. My head swiveled toward Addison, \"I won't cheat on you.\"\n\n\"A good man never cheats on his woman, and I know you are a good man.\" Addison's tone was serious before it quickly became a sultry whisper, \"But a good woman brings her man a Fucktoy to play with when he deserves it... and you always deserve it.\"\n\nI glanced down at Leilani, and she was on the verge of tears at the possibility of being rejected. \"You want this?\"\n\nLeilani's head nodded.\n\nStill trying to grasp what was occurring, I double checked for clarification, \"You want this... like this?\" I emphasized the last two words.\n\nLeilani's head lifted enough to where I saw her smile, but more importantly, I saw her eyes desperately pleading with me to continue. \n\nI glanced at Addison, \"What about you?\"\n\n\"I didn't get all dressed up to watch,\" Addison giggled before her lips gravitated toward mine.\n\nThe kiss was a heated, lustful kiss. Our mouths were continually open, our tongues dueling to much delight for supremacy, while our breathing was heavy. \n\nI completely forgot about Leilani until during our passion, Addison slipped the leash into my hand and then forcing a strong pull in my direction. Instantaneously, there were a pair of hands upon my pants, relieving me of the pesky garment. A small gasp escaped Leilani's lips and Addison once again pulled the leash in my hand, this time twice as hard. \n\nAs much as neither of us wanted to break the kiss, she did, going directly to my ear, \"You need to take control and be forceful with her. Watch.\"\n\nAddison stood as Leilani slowly went down my shaft. Her mouth was taking me inch by inch until Addison's hands went to the side of her head and shoved it swiftly to my base. She wasn't done, however, as Addison pulled Leilani back up only to throw her back down again.\n\nAddison repeated the movements again, and this time as Leilani came slightly off my cock, between the spittle... and the gasp... and the watery eyes, I saw a maniacal smile. Yes, this was her pleasure. I let myself fall into her world.\n\nI wrapped the leash around my wrist and pulled Leilani closer while Addison's let go of her head but quickly replaced her hands with her foot; and her talk became so forceful, so dirty.\n\n\"Choke on my man's cock; know your place, Fucktoy! Earn that cum down your throat.\"\n\nWith my participation, I saw pleasure. Leilani wasn't just happy as her smile had shown just moments before, but deep rooted in her eyes was absolute pure ecstasy; as if her dreams were being fulfilled. \n\nWatching her joy spurred me further. I thrust into her willing mouth and then did so again. Despite having the leash, I wanted to dominate Leilani more. My hands took a tight hold of the pigtails, forcing her head to meet me half way.\n\nAddison's dirty talk, the way the girls were dressed, the look of joy in Leilani's eyes, not to mention my dick slamming down her throat... I was on the brink. My ministrations increased, my need coming to the forefront with a guttural growl.\n\nI exploded. It was wave after wave of unleashing my satisfaction into Leilani, who desperately tried, but was completely unable, to keep pace. When I was drained, I finally released my captive.\n\nLeilani coughed a couple times before giggling excitedly. She had swallowed what cum she could, but there was still plenty plastering her face and in her mouth. That excitement, however, was short lived as Addison pulled the teen from the floor.\n\n\"You need to share, Fucktoy.\" Addison immediately locked her lips to Leilani's.\n\nThe kiss was deep, and I could see my cum being tranferred between the two. One of Addison's hands went to the back of Leilani's head while the other forcefully injected two fingers into her channel.\n\nAddison relenquished the kiss and went to straight mauling Leilani's pussy. It was aggressive and carnal. She turned my friend toward me, completely exposing the depravity. I relaxed against the headboard and enjoyed the show.\n\n\"Look at my man,\" Addison instructed and Leilani obliged. \"You enjoyed being his Fucktoy, blissfully covered in his cum.\"\n\nAddison's movements became fierce, the pressure on Leilani's pussy causing her to be on her tip toes while flowing like a river. A thick sheen was coating Addison's hand, and only becoming more prominent as her three fingers were now delving into the teens abyss.\n\n\"You're nothing but a toy to play with; three holes to fuck... I can feel you about to cum,\" Addison's free hand pulled at Leilani's hair, her breath now in her ear. \"But you know you're not allowed without receiving permission. Beg.\"\n\n\"Please Master,\" Leilani squealed. \"Please let me cum.\"\n\nAddison did not give permission nor was she letting up; in fact she ratcheted up the intensity. I was thoroughly enjoying the show.\n\n\"Please, Master, please let your Fucktoy cum!\"\n\nI was honestly starting to feel sorry for Leilani. Addison was relentless. \"Don't you dare fucking cum without permission, Fucktoy.\"\n\n\"Please, Master... I'm begging you, please, please, let your Fucktoy cum. I... I...\" I could see the strain becoming overwhelming. \n\nAddison's hand left Leilani's hair and attacked her clit. \"I dont think he can hear you.\"\n\nMy eyes lit up at the sudden knowledge. Leilani was begging me. This evening, I was her... Master.\n\nI collected myself in short order and calmly gave the words Leilani had cherished to hear. \"You may cum.\"\n\nLeilani suddenly became limp in Addison's arms, a continuous moan escaping her lips as she lost all control of herself. She came. She came hard. The liquid came forth like a sprinkler as she squirted a never ending flow of pleasure.\n\nAs soon as Leilani calmed, Addison laid her gingerly on the bed. \"She's going to need a minute.\"\n\nI chuckled, \"I would too, after that.\"\n\nAddison slithered up to my side, her hand teasing my cock as she did, \"I came when you came into your Fucktoy. I never thought I'd love someone so much.\"\n\nSo many parts of that statement caught my attention. Addison came from watching me cum? She said Leilani was my fucktoy like that was her name and what she was permanently going to be? But most of all, I understood her feelings as I felt the same way. \"I love you.\"\n\nAddison smiled, \"Does that mean you're ready for me?\"\n\nAs if Addison couldn't feel my full strength mast in her hand. \"Since Tuesday.\"\n\nAddison flung her leg over me and my erection slid easily into her saturated canal. Reverse cowgirl was a different view from what I expected. I thought that I would be hypnotized by Addison's luscious ass as she started bouncing on my pole, but instead, my eyes were entirely focused on her lower back.\n\nAddison got a tattoo. It was elegantly done on her lower back in the shape of a heart with several lines curving and arching outward across her lower back... but the cursive words in the center of the tramp stamp caught my eye and had me reading and rereading them over and over.\n\n\"Wyatt's Bitch?\" I grunted as I lifted my hips to match Addison.\n\n\"Was that a question?\" Addison leaned forward to really drive her plummets onto my manhood. \"Now fuck your Bitch because I'm most definitely in heat.\"\n\n\"Just... reading,\" I struggled with speech, too caught up in the wonders that is Addison's sheath as I did my best to meet her demand.\n\n\"I hope you like it,\" Addison leaned back and changed the penetration point again, but this time she started grinding. \"Because I am proud to be your Bitch.\"\n\n\"Love it,\" I hissed out as a new experience was wafting over me... Leilani's tongue began lapping where I and Addison met while her hand was massaging my balls with deft skill. \"Holy shit,\" my body lurched on its own.\n\nSo many sensations were coursing through my body as upon my reaction, both girls ramped up their ministrations. Addison, flexing her muscles, encouraging all that I am, as she rocked her body against mine. Leilani softly caressing while her tongue was moving at the speed of light, tickling at the base of my shaft and higher when Addison allowed. \n\n\"Bitch, I'm going... I'm going...\"\n\nAddison didn't stop and I couldn't possibly hold out. \n\n\"Ugh!\" My body seized as I came in a torrent... causing Addison to shriek with delight, her spasms wracking her body in euphoria while Leilani lapped at anything that spilt out. My mind couldn't process the insanity of it all and I sighed as the rest of my strength left me.\n\nAddison cuddled into my side while Leilani was first cleaning me up with her mouth before moving on to Addison. \n\n\"We need to come up with a better plan,\" I breathed out. \"I would at least like to be out of High School before we have children.\"\n\n\"Relax, Baby,\" Addison tapped her index finger playfully against my nose. \"We both went to the doctor's office and got an implant to prevent pregnancy.\"\n\n\"Both?\"\n\n\"Yes, both... Which means after you recuperate, I want to see you fuck your new toy,\" Addison smiled sweetly. \"Until then,\" Addison paused to moan, \"Do you mind if I play with her? She's giving me quite the lashing and I want to return the favor.\"\n\n\"Be my guest,\" I couldn't help my smile.\n\nAddison excitedly turned herself around, one of her legs nearly kicking me in the face in the process, allowing Leilani to climb on top of her. It took but a moment for the two of them to be locked into a sixty-nine position.\n\nI scooted down and maneuvered myself to where I was laying on my side to get the best view possible... and what a glorious view it had become.\n\nAddison and Leilani were attacking each other with gusto. Their heads were bobbing, their lips were puckering, and their tongues swirling all to the delight of the other. Their periodic moans became closer together and it was doing wonders for energizing what was once limp.\n\nIt would have to take something really astounding to keep my eyes from bouncing back and forth from the midsections of each of the girls, but as I was going from one to the other, the black blotch did exactly that.\n\nIt was on Leilani's back and it was a tattoo exactly the same as Addison's with the exception of the words. My hand went to the exposed flesh, \"Wyatt's Fucktoy?\" \n\nWithout hesitation, Leilani responded, \"Same answer as her. I'm proud...\" She was cut off by Addison putting her hand on her head and pushing it where she thought it belonged.\n\nThat was enough of an answer to put me back at full strength.\n\nI slid off the bed and before me laid the glorious view of Addison devouring Leilani's pussy. I inched forward carefully, not wanting Addison to be caught in the middle, before Addison reached out and guided my cock into Leilani. Just the tip was in, but it got Leilani's attention. Addison didn't hesitate and forced Leilani's head back to its task, this time holding it there as she applied a hard pressure.\n\nI pushed forward with ease. Leilani was well lubricated and I had no issues bottoming out into my friend. I pulled back, and went forward again, this time at a faster pace.\n\nThat was all I needed. My tempo increased to full throttle and I truly began pounding with sweet violence into Leilani. The view was fantastic as her ass shook with every one of my thrusts prompting my involvement into her wishes even further.\n\nMy hand raised before falling swiftly, causing a loud smack to echo in the room and forcing Leilani's body to shiver in delight. I took turns on her cheeks, right then left, and then right again. Each sting of my palm was met with a mewl of bliss from Leilani, her ass becoming red under my onslaught.\n\nI was feeling the urge. My hands went from spanking to a firm grasping of Leilani's hips. I plowed into her quim, plunging harder and deeper, turning my friend into nothing more than a rag doll. \n\nI groaned in rapture as I came into my friend - my Fucktoy? - and it triggered both Addison and Leilani into heavenly bliss.\n\nThere wasn't much. It was my third release and quite frankly, I was spent. My cock deflated almost immediately, falling from Leilani's channel with a plop.\n\nAddison had immediately took up the impossible cause, engulfing my manhood with her willing mouth.\n\nI wiped at the sweat on my brow, \"Yeah, I don't think you're going to get anything out of that.\"\n\nAddison smiled, \"A girl can dream, can't she?\"\n\nI shakily crawled back onto the bed, quickly getting comfortable. I felt I could sleep for a century as Addison melted into my right side while Leilani snuggled on my left. Their hands both embraced me tightly but came together themselves on my chest.\n\nAddison purred softly in my ear, \"Can we keep her?\"\n\n\"That was fun,\" I chuckled at what I perceived to be a joke. I turned my head to the love of my life and was taken aback. \"You're serious? You say that like Leilani is a pet or something?\"\n\n\"A toy,\" Leilani mumbled into my side, barely awake, but actively listening. \n\n\"See,\" Addison gestured to my friend, \"she's okay with it.\"\n\n\"I... uh...\" I had lost the ability to speak. \n\nAddison snickered at my stammer, \"Baby, you know my lease is up next month, right?\"\n\nI did, but I didn't want to think about Addison not living right next door to me. I nodded.\n\n\"And you two are graduating next month, right?\"\n\nI stared at Addison curiously, wondering exactly where she was going with this. \"Yeah,\" I drew out the word.\n\n\"And you did steal me and make me yours, right?\"\n\nI smiled at that one. Of all that Addison was saying, that statement was the one truth in my life. \"I love you; where are you going with this?\"\n\n\"I have a job, you have a job, our Fucktoy is going to school to major in biomedical engineering while minoring in automotive engineering just to be able to talk to you, and then she'll have a job; why don't we find a place and move in together?\" Addison finished by nibbling on her lower lip.\n\nThe idea had merit. I absolutely wanted to spend the rest of my life with Addison. The question then was what about Leilani. \n\nMy grin was ear to ear as I caressed Addison's cheek, \"I can't wait to move in with you.\" I then squeezed my friend, \"What about you? Is that something you want to do Leil...\"\n\n\"It's Fucktoy, and yes, Master,\" Leilani sighed softly into my side. \"Bitch and I already discussed this.\"\n\n\"Then let's do it,\" I laughed a satisfied laugh before my forehead furrowed. \"Wait, she calls you Bitch now, too?\"\n\n\"Of course,\" Addison burrowed into my side. \"I did say I'm proud to be your Bitch, didn't I?\"\n\n\"Yes, but you're my Bitch,\" I Stated. I then glanced down to Leilani. \"I suppose since we're going to be living together, Fucktoy can call you that, too.\"\n\n\"Makes sense,\" Addison sighed contentedly. \n\nWe fell asleep just like that until the alarm on my phone went off. It was annoying, but my curfew was in ten minutes. I grudgingly pulled myself from the pile, got dressed, went home, climbed the stairs so my Dad would know I made it back in time, went to my room, went out my window, climbed through Addison's window, got undressed, and reconnected with the pile. It was a necessary five minutes.\n\n\"Missed you, Baby,\" Addison yawned as she entwined herself to my side.\n\n\"It was too long, Master,\" Leilani did the same on my other side.\n\nI yawned myself before falling back asleep. \n\n*\n\nI woke up refreshed, and apparently before anyone else. Regardless, I had to get home through the window, shower, get downstairs, and make my presence known before coming back over through the front door. Ah, the things we do for love. Now, if only I could find my shirt?\n\nI didn't find it, but I have more at home.\n\n*\n\nI made it back to Addison's to hear combined laughter coming from the shower. I was tempted to join them, but thought better of it. It is a townhouse shower; to say they were small would be an understatement. I decided to make breakfast instead.\n\nAfter what Addison has been wearing and what Leilani wasn't wearing last night, I'm not sure why I was stunned at their clothing choices. \n\nLeilani was in a pair of white booty shorts and a white tank top that didnt even cover the bottom curve of her breasts with the word FUCKTOY in big block letters across the front... and it was definitely a size to small.\n\nAs for Addison, all I could ask was, \"Isn't that my shirt?\"\n\n\"Was,\" Addison smiled as she sat at the kitchen table with Leilani.\n\nI almost burnt the bacon because I was staring at Addison's ass, as it was in full view because the shirt, which only had a solitary button clasped in the middle, was all she was wearing. \n\n\"Why, I think he likes our lounging around the house clothes,\" Addison smiled.\n\nI set Addison's plate down in front of her and gave her kiss. I then set Leilani's plate in front of her and hesitated... I was going to kiss her as well, but thought better of it and went to pull back.\n\n\"You can kiss her, too, you know,\" Addison sipped at one of the glasses of orange juice I had already set out. \"I told you, Fucktoy doesn't count as cheating.\"\n\nI kissed Leilani, and it felt like... home. It wasn't like the soul searching kiss Addison and I constantly share, but there was something perfect about us knowing each other for the past couple years that found its way into our connection. It was a love, but a very much different love and not nearly on the same level as Addison and I.\n\nLeilani smiled as I pulled back, \"Master, that was wonderful.\"\n\nIt was. It truly was.\n\n\"Aww, that was so sweet,\" Addison had puppy dog eyes as she stared at us. \"Fucktoy, do we kiss like that?\" She finished by pulling me into another kiss, this time it wasn't a token moment of affection, but a sizzling embrace.\n\n\"I've seen you two really kiss, and that wasn't it.\" Leilani took a bite of her scrambled eggs. \"When you two mean it and aren't just showing off, it's something that everyone in the vicinity knows that true love exists.\"\n\nWow... That surprised me. I knew that's how Addison and I felt for each other, but is our love really that transparent? \n\n\"You'll get there with him,\" Addison patted her arm.\n\n\"No, Master loves me differently than you,\" Leilani shook her head. \"I'm just happy he loves me.\"\n\n\"I do love you, Lei...\"\n\nLeilani cut me off by raising her eyes.\n\n\"Fucktoy. I love you Fucktoy.\" I held up my hands, \"I promise I'll get there, it just takes some time, right Bitch?\"\n\nAddison giggled, \"It was a rough couple days, but I am now happy.\"\n\nLeilani smiled, \"I love you, too, Master.\"\n\n*\n\n\"What the fuck?\"\n\nIt was collective as I introduced Addison, and surprisingly, Leilani. With her hair being done up and the skimpy, barely there pasted on micro red dress that showed lots of cleavage with matching heels; if I hadn't known it was her, I'd probably would have not recognized her either... and with Addison dressed similarly but in white; Dante, Camilla, Shane, and Joyce's jaws visibly hit the table.\n\nIt had been a fun day. After breakfast, I went to work while the girls spent the afternoon looking online for potential homes for the three of us. When I got back, there were a couple that garnered the girls attention as well as an apartment that would lease by the month in case there were delays in the home buying market. All I cared about was the place having a garage.\n\nAll was going well, and we were planning on figuring out what we wanted for dinner when a group text hit both mine and Leilani's phones.\n\n- Pizza Shack and miniature golf???\n\nIt was responded by a flood of texts afterward of agreements and meet up times.",
        "Addison looked over my shoulder as I stared at the screen, \"Sounds like fun.\"\n\nI wasn't so sure. It wasn't that I didn't want to hang out with my friends nor have them meet Addison, but what about Leilani? Will Addison's and my relationship bother her in front of our friends? My thoughts were interrupted as another text filtered through.\n\n- I'll be there!\n\nI glanced at Leilani who was smiling. \n\n\"What?\" Leilani laughed. \"It does sound like fun.\"\n\nAnd so we arrived at the Pizza Shack with Addison and Leilani looking like strippers, despite my reminding them we were going to be playing miniature golf and driving go karts and myself in a t shirt and jean shorts, with each of them clinging onto one of my arms as it were their sustenance of survival. I could see why our friends seemed utterly helpless to formulate a more elegant response than what Shane barely exasperated.\n\n\"Everyone, this is Addison, and you all know Leilani,\" I pulled out the chairs for my girls before sitting between them.\n\nCamilla wasn't having any of the cordial greeting. She stood and pulled Leilani off to the side. The conversation was meant to be just between them, but in Camilla's agitated state, it was far from private. \"What the hell is going on?\"\n\nLeilani gave a knowing grin, \"You said I should...\"\n\nCamilla interrupted, \"I never said you should be a fucking hooker; look at you!\"\n\n\"I'm comfortable and...\"\n\n\"I can't fucking believe this,\" Camilla interrupted again before turning, savagely pointing her finger at me, \"You! How could you...\"\n\nLeilani interrupted Camilla this time; the first time she had done so to anyone. Her hand clasped Camilla's shoulder, turning her back toward her and gave her a disarming smile, \"Wyatt has done nothing but be who you've always known him to be, the same guy I've always loved.\"\n\nCamilla stared at her friend, stunned by the bravado, \"Huh?\"\n\nLeilani's emotions started to take hold and she sniffed in an attempt to stifle them. Addison and I both stood and embraced Leilani from behind as she spoke from the heart, \"I fell behind, okay,\" she wiped at her eye before looking over the table and then back at Camilla. \"You all know how I felt about Wyatt, but then Addison won him first... and she's great. She didn't even see me as a rival, she saw me as a friend. She offered to include me in their once in a lifetime romance without hesitation. She even helped me be more positive about myself; I would've never had the strength to wear this, let alone talk to you guys so openly.\" \n\n\"Are you happy?\" Camilla saw the truth in Leilani's eyes, but still felt compelled to ask before adding, \"That's all I care about.\"\n\n\"I am,\" Leilani took a breath and smiled, \"Just tell me what you would've done if Dante already had a girlfriend when you fell for him? What if she offered you what Addison offered me? What if she helped you become a stronger person?\" She then glanced at Joyce, \"What about you?\"\n\nJoyce shook her head with a laugh, \"Don't you even think I'm doing what Addison did, you are all mine.\"\n\n\"Wasn't going to,\" Shane threw up his hands in defense.\n\n\"Before you even say it,\" Dante chuckled, \"I know you don't like to share anything.\"\n\n\"I share,\" Camilla gave a look of surprise to the statement.\n\n\"Really?\" Dante raised his eyebrows, \"Then what about,\" he snapped his fingers in thought, \"Shane, what's that foreign exchange students name?\"\n\n\"Oh, hell no,\" Camilla lightly smacked his arm before turning to me, \"You better not fuck this up.\" \n\nAs if any of this was my idea.\n\n\"I meant I share other stuff,\" Camilla then sat down next to Dante, \"So I'm not woman enough for you? Didn't you say you liked that thing I did for you last night?\"\n\nDante grew red in the face. He knew he lost. He hugged Camilla before giving her a small kiss, \"You know I was just joking, Babe. You're the only girl I'll ever need.\"\n\n\"I know,\" Camilla smugly smiled. \n\nAddison's smile was ear to ear at the interactions, \"I think all of you would make a fortune doing reality television.\"\n\nWe all laughed.\n\n*\n\nAddison ingratiated herself into our group effortlessly. Her humor filled quips caused raucous laughter, and everyone enjoyed her presence. Most importantly, was Leilani's personality. She no longer spoke in stuttering one word sentences. She was open and honest with herself which made her more open and honest with everyone else and we all knew it was because of Addison.\n\nFor me, the night was eye opening. I had already committed to sharing a home with Addison and Leilani, but tonight relinquished any and all doubts that it would somehow not work. Everything we did turned into a positive memory under an umbrella of mutual love.\n\n*\n\nI didn't notice the black BMW sedan as I pulled Addison's Jeep in front of her townhouse. In fact, none of us had. The three of us got out in a fit of laughter and made our way up the walk.\n\n\"Addison?\" The voice was full of shock. \"Is that you?\"\n\nWe all turned to see Brodie Winters, Addison's ex boyfriend who she dumped on Monday through a phone call, and had since blocked his number due to his indiscretions in Las Vegas.\n\n\"What are you doing here, Brodie,\" Addison rolled her eyes. \"I told you, I was breaking up with you.\"\n\n\"No, you said that we were through because I was cheating on you and I did no such thing,\" Brodie then paused as he glanced at me. \"Who's this? Is he the real reason you broke it off with me?\"\n\n\"I dumped you because you took some super slut to Vegas for a week.\"\n\n\"You mean Veronica?\"\n\nAddison folded her arms.\n\n\"You broke up with me because you think I'm screwing my boss, the person you know I hate, the bane of my existence?\" Brodie put a hand to his head in stunned consternation.\n\n\"I know you did, but even if you say you didn't, I found a man who isn't afraid to say 'I love you,' who is willing to laugh at my jokes, who will buy me gift and not because its a holiday...\" Addison took a deep breath and a small smile pursed her lips in thought of her fondest memory of us, \"Someone who took the time to enjoy the one place in this city I hold dear.\"\n\n\"That stupid place with the flowers?\" Brodie exasperated. \"I can't help that the one place you like is the world's most boring site.\"\n\n\"Goodbye, Brodie,\" Addison turned and started walking toward the door.\n\n\"Fine,\" Brodie tossed his hand in Addison's direction. \"I can't believe I thought your quiet demeanor was perfect to just sit there and shut up like a good wife should do. Don't you come crying back to me when you find this kid can't give you the life of your dreams, you stupid Hick!\"\n\nI had heard enough. I had heard enough ten minutes ago, but when he called Addison the one named she despised most, my fist flexed and a sneer formed on my lips. I took two quick steps and flung my arm forward.\n\nA papers width. Addison had come from behind and hooked my arm before it connected, a mere papers width away.\n\n\"Don't do it, Baby,\" Addison soothed. \"He wants you to hit him so he can claim assault. Let's go inside.\"\n\n\"You want to hit me?\" Brodie leaned his face closer to mine with a smug smile, \"Go ahead and hit me. Come on, you pussy... Be a man.\"\n\nLeilani then gave him the middle finger, \"Get lost, Asshole!\"\n\nI lowered my arm and turned with both Addison and Leilani on my arms. \n\n\"Yeah, that's right, walk away,\" Brodie got into his BMW. \"You'll never be a man.\" He slammed the door closed before speeding off with a squeal of his tires.\n\n*\n\nWe got inside, and I held Addison in a fierce embrace with Leilani doing the same on her backside.\n\nI gave her a brief kiss, \"Bitch, are you all right.\"\n\n\"See, it's all about how you say it,\" Addison snickered before wiping the tears from her eyes. \"I'm fine... More than fine actually, because I have you.\" She kissed me this time. \"And you,\" she lifted one of Leilani's hands and kissed the back of it. \"Thank you... Thanks to both of you for your support.\"\n\n\"Anything for you,\" I smiled.\n\n\"After what you did for me, it was my pleasure.\" Leilani let go and plopped on the couch, \"How about a movie to lighten the mood before we let Master have his way with his slutty Bitch and his favorite Fucktoy?\"\n\n\"Sounds good,\" Addison took residence on the other end of the couch leaving the middle vacant fof me.\n\nI guess I don't get a say in the matter.\n\n*\n\nSomething was bugging. I just couldn't let it go. I was unable to focus on the movie, my mind kept wandering to the incident with Brodie. \n\n\"Is everything all right?\" Addison whispered into my ear. \"You seem distracted.\"\n\n\"Something Brodie said is bothering me.\"\n\nAddison gave me a soft kiss on the cheek, \"Baby, don't let that jerk ruin our night.\"\n\nI couldn't let it go. \"Did you know that he hated his boss.\"\n\n\"Yes.\"\n\n\"But you still thought he was cheating on you?\" I tilted my head so I could see Addison's face.\n\n\"Of course,\" Addison snickered. \"Because you told me he was.\"\n\nIn what world did that make sense? An educated twenty-six year old believed her boyfriend was cheating on her simply because her teenage neighbor said so? Even then, I only Stated such a thing because she mentioned it first. I could only respond in confused eloquence, \"Huh?\"\n\nAddison laughed at my stupor, \"Baby, you told me he was cheating on me when I was talking to my friend back in Iowa about Brodie going to Las Vegas with his boss to assist on a deposition.\"\n\n\"I thought you meant he just took another woman to Vegas to screw around with.\" I shook my head, \"Why did you believe me so blindly?\"\n\n\"I wasn't sure then; I just subconsciously knew I needed to obey your statements.\"\n\nMy forehead crunched in consternation. \"That doesn't make sense?\"\n\n\"You're right; that is until I borrowed your laptop on Monday.\"\n\nI hadn't used my laptop in nearly a year. What the hell could that have anything to do with this. \"Still lost.\"\n\n\"Tell me,\" Addison smiled. \"Do you remember four years ago?\"\n\n\"I was a freshman in High School, hadn't even met Leilani yet, um...\"\n\n\"Jordan Bates,\" Addison finished starkly.\n\nThough I had forgotten his last name, I definitely remember the guy who beat the crap out of Addison. \"What about him?\"\n\n\"Well,\" Addison snuggled even deeper in my side. \"On your computer was a an old file called Addison's Salvation...\"\n\nI tensed up as I swallowed hard. Yes, the file that marked all that I did to help my poor neighbor from the likes of an Asshole... in detail.\n\n\"Good, so you remember,\" Addison kissed my lips. \"Here I thought I personally got the courage to get out of that mess on my own by taking self defense classes and come to find out, there was a man behind the curtain... You. But in doing so, to encourage me even further, one of your phrases was to Obey your Statements. I was furious when I found out.\"\n\nI put my hand to my forehead, \"I'm sorry; I only wanted to help.\"\n\n\"I'm not mad, Baby.\" Addison playfully slapped my arm. \"I was then because not only did you tell me Brodie was cheating on me, but also that I love you, and you had turned me into a super slut just for you who cums in buckets only when you cum.\" She then reminisced thoughtfully about her feelings, a small smirk appearing, \"You saved me, though. Did you know Jordan is in prison because he murdered his next girlfriend by throwing her down a flight of stairs?\"\n\nI shook my head no.\n\n\"That would have been me.\" Addison then nodded, \"And that's when I realized I did love you and wanted to be that super slutty Bitch that you had Stated, even if you were joking.\"\n\nI glanced to Leilani, still in disbelief, \"What about you?\" I half chuckled, \"Are you under some subliminal messaging too?\"\n\n\"Well duh,\" Leilani laughed. \"Isn't it obvious?\"\n\nI nearly coughed up a lung.\n\n\"When I met her in the mall,\" Addison elaborated, \"She was devastated that we were going out. I felt so bad for her because it reminded me of me and you left such detailed notes on how to do it, I gave her an option.\"\n\n\"Be your Fucktoy or go without,\" Leilani finished. \n\n\"What?\" I screamed. \n\n\"If I'm your Bitch, it seemed fitting that she be something considered dirty as well... and sluts love their toys.\"\n\nI ran. I ran at the reality of the situation. I manipulated another person for my benefit... and then she manipulated someone else for my benefit. How did this happen? Is my love life a lie? Of course it is. I burst through my front door and collapsed against it in a panic as my phone was blowing up.\n\n\"Give us a few minutes,\" My Dad pounded against the kitchen wall twice and my phone immediately stopped ringing. \"You really messed up, didn't you?\" My Dad walked over to me and held out his hand. \"Let's talk it out on the couch and see if we can make heads or tails of the situation.\"\n\nI accepted his hand, he pulled me up, and we sat on the couch.\n\nDad patted my leg, \"I sure am going to miss you next month when you move into that house.\"\n\n\"I don't know if that's going to happen.\" It then occured to me, \"How did you know about that?\" Truly, since Addison, Leilani, and I just talked about a house this afternoon?\n\nDad grinned what I call his Dad grin when he knew something before he was supposed to, \"These walls have ears, Son.\"\n\n\"You mean these walls are paper thin and you heard us,\" I nodded understanding exactly what he meant.\n\n\"Yup,\" Dad chuckled before his tone became more fatherly, \"So what happened to change your mind so quickly? You were all in earlier today.\"\n\n\"Well,\" I cringed not knowing how to come clean about what I've done. \"I did something that wasn't good.\"\n\n\"You mean the subliminal messages,\" Dad let loose his Dad grin again at my puzzlement as he knocked on the wall.\n\n\"Hey, don't knock on the wall when you're just getting to the good stuff!\" Mrs. White shouted from next door.\n\n\"My Son sneaks out his window at night and I'm not going to find out why?\" Dad then shouted, \"Thanks for the info, Mrs. White!\"\n\n\"You're welcome, and Wyatt, way to go, you Stud you... tell that MILF and that Vibrator of yours they hooked a good one!\"\n\nMrs. White cracks me up at the names she gives everyone on our block... Just who she is. But she was wrong about one thing, \"Addison isn't a mother, Mrs. White.\"\n\n\"Is that what MILF means? Damn, now I have to come up with something else... Now finish the conversation; it's like listening to an episode of Days of Our Lives.\"\n\nI shook my head as I laughed but Dad corralled our conversation. \n\n\"You know, I remember this kid who did a science project a few years ago on subliminal messages with the thesis being a person would only do acts proposed to them if they truly wanted to.\" Dad then tilted his head, \"Addison wanted to follow your statements because at first, she wanted out of that horrible relationship, but now because she trusts you completely. She trusts you so implicitly, she wants your statements to be true. She knew you wouldn't take advantage of her because you saved her all those years ago and now that you've connected personally, she did something that your mother was unable to do,\" his head shied down briefly at the painful memory. \"She chose love over money and material possessions, and she did it right in front of you, tonight.\"\n\nI didn't have a rebuttal so I decided to change the subject, \"But what about Leilani? She didn't deserve...\"\n\n\"That girl loved you for the longest time but you were too dense to see it,\" Dad cut me off. \"It was obvious to anyone, even me, at how infatuated she was. Every time she came over to study or came with your friends just to hang out, she always had eyes for you; and now you want to fault her for taking her only opportunity to be with you because if she had to wait for you to ask, she'd be waiting forever. Addison gave her a way to have her dream so she wants to be what she is now.\"\n\nOnce again, I had no rebuttal. I also had no topic to change the subject. \n\n\"The only question I have for you, Son,\" Dad continued, \"Is how do you feel about Addison and Leilani?\"\n\nHow did I feel? \"I love them, of course, but do I deserve...\"\n\n\"Stop,\" Dad interrupted. \"All that other stuff, doesn't matter. You love them and they love you.\" Dad then pointed at me, \"Now the question is, what are you going to do about it?\"\n\nI raced upstairs. My Dad smiled at my action until he noted my direction wasn't next door. I quickly found what I was looking for and hustled back downstairs, \"Dad, can I borrow your truck for a minute?\"\n\n\"That's a little rash, don't you think?\" Dad held out his palm to slow me down.\n\nOf course, my Dad knew what I grabbed. \"I promise we'll take our time, Dad. Can I, please borrow the truck before the store closes?\"\n\n\"All right,\" Dad tossed me the keys. \"You're eighteen and have always had a good head on your shoulders.\"\n\n*\n\nI would have qualified for the Daytona 500 with the speed in which I made it to the store and back. They had a fair collection and I was happy with my purchase as I ran through Addison's door.\n\nI was completely out of breath, my hands on my knees as I panted out, \"Sorry about... that. It... was a little... overwhelming... to hear.\" I straightened my posture just in time to be engulfed by four arms. \"But I'm back; if you'll still have me.\"\n\n\"You had us worried,\" Addison squeezed me so tightly, it was as if I were her own personal stress ball. \"And yes, I'll have you, forever.\"\n\n\"Even longer, Master,\" Leilani's clutch was just as constricting. \n\nI slinked from their combined grasp and I felt a sudden nervousness. What will they say? I may always be dense about women, but I had to take responsibility. I loved them too much to not do so.\n\nI lowered to one knee, pulling a box out of my right pocket while pulling another from the bag I was holding. I flipped open each of the two boxes with my thumbs. The small ring box with my Grandmother's old diamond engagement ring given to her by my Grandfather, I bestowed onto Addison, while in my other hand was a necklace box, inside a beautiful studded collar that I presented to Leilani.\n\n\"I want you two to know, that this was all \n\nan accident. A welcome accident, as we start our lives together, but very much an accident. Will you two marry me?\"\n\nAddison and Leilani collapsed upon me. Addison turned my head toward her and gave me one of her soul searching kisses and I became dizzy at the affect, \"In case you didn't realize because, well, its you, that's a yes from me.\"\n\nLeilani then kissed me sweetly in her fashion of love, and I felt all her comforts in my heart, \"And a yes from me, as well.\"\n\nI let out a relieved breath at their acceptances. \"I love you two, very much.\"\n\n\"We love you, too,\" Addison and Leilani both answered succinctly. \n\nAnd with that combined response, I knew there was nothing the three of us couldn't handle, together. Our love was going to win life, and I couldn't wait for the future with Addison and Leilani by my side. \n\nThere was two hard, quick knocks on the wall before my Dad shouted from next door, \"I'm just glad you're finally taking responsibility for those accidents you always cause for a change!\"\n\nAnd the first step in that future is to get away from these thin white walls...\n\n \n"
    ],
    "authorname": "fgmntfmgnshn",
    "tags": [
        "anal",
        "blowjob",
        "domination",
        "mff",
        "neighbor",
        "riding",
        "subliminal messages",
        "teen",
        "young",
        "older woman"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-thin-white-wall"
}