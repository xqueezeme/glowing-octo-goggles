{
    "title": "Fuck Ch. 06: The Morning After",
    "pages": [
        "Amelia woke to the smell of coffee brewing. She looked over and Blake was gone, but the light underneath the bathroom door told her he was still in her apartment. She picked up her phone to look at herself in the camera and saw her hair was disheveled and her girl-next-door makeup had turned into girl-next-day. She quickly fixed her hair into a pony tail and licked her fingers to remove the mascara from under her eyes. \n\nAmelia stirred from the site of the previous night's impiety to clothe herself. She put on something that looked relaxed and comfortable but also made her feel attractive. An ensemble to feign innocence of effort. \n\nWhy is he still here? She thought. This is kind of awkward. What do I do? \n\nShe bent down to touch her toes and stretch for a moment. As she did, her phone fell from her pocket and clattered to the ground. She heard the door knob to her bathroom rattle a second before Blake peered his head out. She flipped her hair back to look up at him. \n\n\"You're up.\" He walked out of the bathroom, the door unveiling his towel clad hips and bare chest. Amelia noticed his hair was dry so he hadn't been in the shower yet. She stood up and watched as he poured her a cup of coffee. She could have moaned at the sight. \n\n\"Sorry I don't mean to overstay my welcome I just really wanted to take a shower before I go. I hope that's okay.\" he scratched his head. \n\n\"Don't be sorry.\" Amelia smirked and sipped her coffee as she noticeably sized him up. Blake raised his eyebrows and chuckled. \n\n\"Are you hitting on me Ms. Amelia Peterson?\" He leaned against her counter. \n\n\"I'm allowed.\" \n\n\"I'll have you know I am chaste and virtuous\" Blake spoke in a high pitched voice with the fingertips of one hand on his chest. Amelia chuckled narrowly escaping the fate of coffee running through her sinuses. \"And I won't be seen in town with the likes of you mam. I have a reputation to uphold.\" \n\nAmelia set her coffee down and made her way over to him. \n\n\"You're about as virtuous as a witch.\" She put on her best gravelly-cowboy voice. Blake feigned a gasp. \"And the town is well versed in the reputation of your chastity.\" She was in his face now, her mouth an inch from his. \"Slut.\" She said grazing the terry cloth between his legs with her hands. He smiled and kissed her. \n\n\"Mm. I think I kinda liked that voice you were doin.\" he teased. \n\n\"Oh yeah?\" Amelia smiled. \"Did it get you going?\" she kissed him again. \n\n\"Yeah I think it did.\" he laughed. \"Next I want you to hog tie me in the stables.\" He flicked an eyebrow. \n\n\"Oh yeah.\" Amelia scoffed. \"I bet you'd take to it about as well as a hog too.\" \n\n\"Hey!\" He protested. \n\n\"Oh you think you could be tied up and be fine with it?\" \n\nBlake sucked his tongue through his teeth. \"Eh probably not.\" He conceded and kissed her a little deeper, his hands rested on the small of her back. \"The thought of having you in front of me with no way to touch you-\" He kissed her and ran his hand around to float his fingertips on her nipple and then lightly squeeze her breast. Amelia inhaled sharply. \"I would lose my mind.\" \n\n\"You're a fucking asshole.\" she smiled, her mind flashing to her own bound hands the night before. \n\nAs their lips touched and breathing became heavy, Amelia felt her nipples harden in his hands and her body ready itself for Blake's presence. Blake's towel fell in their passion and she instinctively reached down to touch him. He moaned as she gently ran her fingers along his length. She marveled at how soft its skin was and when she felt the beads of precum forming at the tip, her mouth began to salivate. She loved when his body showed her the desperation he often refused to reveal.  \n\n\"Damn you're ready for me aren't you?\" She smiled on his lips and stroked his precum down his cock \n\nBlake bent down and used his arm to swing her legs out from under her so he could carry her to the bathroom. Amelia gave a surprised giggle and looked up at him as he held her. She bit her lip at the sight. She nuzzled his neck and kissed, licked, and nibbled it. As she did, she heard him gulp and felt his skin prickle with goosebumps. She smiled at them triumphantly, wishing she could kiss every hair she had enticed to stand. He opened the shower door with his foot and carried her inside. He set her down, turned his back to her and allowed the cold water to hit him before it adjusted to a warmth suitable for a lady. He turned around to face her after his adjustments and kissed her hungrily. \n\nShe laughed as the water poured over her. \"Blake I still have clothes on.\" \n\n\"Oh that's a problem.\" He smiled and slowly peeled her shirt from her wet body. She blushed furiously as he paused to gaze at her breasts and ran a thumb along them despite their familiarity. As her body transitioned to the temperature she started to tremble slightly. Blake stepped closer and, leaving air between them, kissed her neck lightly. Her hands came up to hold his shoulders but he quickly grabbed them and set them back down at her sides. She rolled her eyes but obeyed anyway. His warm body so close to hers made her recognize how cold she felt and she trembled vigorously. \n\n\"Shhh.\" He whispered. \"I'm right here.\" \n\nEven though he kept a gap between them, she surmised he was really just asking her to focus. She took a deep breath and her trembling calmed slightly. Blake gave a moany, slightly menacing chuckle that made her heart skip and looked at her with a hint of admiration. \n\n\"Good girl.\" \n\nAmelia blushed and narrowed her eyes, trying to catch her breath. \n\n\"Don't glare at me girl or I'll tease you longer.\" He threatened with an authoritative eyebrow raised. \n\nAmelia huffed but didn't argue as she wanted him to continue. \n\nBlake smirked and leaned his mouth to her ear. \"Good. Girl.\" He exaggerated. Amelia rolled her eyes, biting her tongue as best she could. The words took her mind to the memory of him spanking her in his truck and her fist balled with need. \n\nBlake slowly pressed his lips to her jaw under her ear. He trailed her collar and intimately kissed down her chest, kneeling to meet the rest of her body face to face. He restrained himself enough to graze his fingers along her breasts and nipples while Amelia struggled to keep her hands to her sides. His hot mouth on her nipple was a sensation so intense she threw her head back to moan. He pulled his head back slightly and his tongue left his mouth to delicately tease her nipple in a way she could view. Her eyebrows furrowed in desperation at the show. Their eyes met and stayed locked as he moved to work on her other nipple, kissing his way over very slowly. His expression was controlled and steady, meanwhile Amelia was hanging on by a thread. \n\nShe couldn't see over his head but his hands had traveled and landed gently right below her belly button. He slipped the tips of his index fingers in the band of her soaking yoga pants and circled its circumference around her hips, still gently licking her nipple and maintaining eye contact. The motion to remove her pants was slow and deliberate but the shock of the exposure of her skin was surprisingly sensitive. The pants were discarded to the other end of the shower with a heap. Then, with her fists clenched and her breathing labored, he ran his fingers down over her pubic bone and to one side of her lips. He admired her as if she were a sculpture. \n\n\"Blake?\" She breathed \n\n\"Yes?\" His voice was quiet but deep as his hand traveled back up the other side, teasing her inner thigh and circling her most sensitive parts. \n\n\"Can I just wash up a bit first?\" she asked self-consciously. \n\nBlake glared at her as he lowered his face to her pussy. He gave one long lick up her lips from end to clit and her hands hit the wall behind her looking for something to grip. \n\n\"No.\" He said and licked her again. Control wavering, Blake dove his face deeper into her, moaning at the taste. He mouthed her pussy, licking sloppily but slowly as if savoring every taste. Amelia's knees trembled and she whined loudly as he lost himself in her. \n\n\"Goddamn it Blake!\" Hearing this, Blake seemed to snap back into consciousness and he lightened his movements and resumed teasing her. \n\n\"I'm sorry baby.\" He kissed her pubic bone. \"Got a little carried away.\" \n\nA fury rose underneath Amelia's skin. \n\n\"If I had the focus to slap you right now I would.\" Amelia panted. \n\n\"Mmm\" he flattened his tongue as he teased her. He looked up at her, smug. \"But you don't.\" He dug his face deeper for a moment and moaned into her pussy. \"And you won't.\" \n\nAmelia's blood boiled at the slight but it only aroused her more. \"Fuckfuckfuck.\" she chanted quietly through her teeth. \n\nBlake smiled and winked at her. Her heart fluttered clumsily in her chest and it took everything in her to not attack him. He bent his neck back and filled his mouth with water. He brought his mouth back her pussy and let a small jet of water spurt from his mouth onto her clit. Amelia shouted in disbelief and had to catch herself with her hands on his shoulders as her legs nearly gave. Blake chuckled. He took her hands and guided her to lean back on the wall. \n\n\"God that felt so good.\" she moaned. \n\n\"Yeah? You liked that baby?\" he grinned and ran his hands up her legs. \n\n\"Uh huh.\" she whined. \n\nHe filled his mouth again and once more jetted the water onto her clit. This time he opened his mouth and, as the water fell over his jaw and onto her pussy, he dove his face in and deeply lapped at her. She shouted as her legs struggled to keep her standing. Blake moaned into her pussy and the sound was deep and primal. Any semblance of restraint Amelia had was fading quickly. \n\nBlake made his way back up her body, this time filling the space between them by pressing his naked skin onto hers and finally allowing her to touch him back. He worshiped every inch he encountered on his way up to her face where he kissed her with a passion that pressed her harder against the wall. He broke their kiss to put his lips by her ear. \n\n\"Amelia.\" his voice was deep and gravelly and his hands read every inch of her like a book. His arousal was very much present as she felt the urgency through his touch. \"A woman with a body like yours should never have to wash it by herself.\" He breathed through his nose like a bull. \n\nAn embarrassed chuckle escaped her throat but was cut off by a gasp when he passionately bit the nape of her neck. Her nipples hardened once more and the hairs on her body stood on end. The pain was so intimate. He reached up to feel her breasts and growled into her neck. With deep breaths, she wondered at how hot it made her to feel so desired. \n\nA bottle of body wash stood inches away and Amelia watched it travel from the shelf into Blake's hands. He kissed her deeply and she breathed him in. Her hands moved from his shoulders and down his chest. His hard muscled body caused her eyes to roll back under their closed lids and she lightly dragged her nails across his skin. The smell of the blue liquid filled their nostrils as he lathered it in his hands and poured some down her chest. It was hard for her to believe he was taking the time to wash her when he was so obviously heated, but she thought better of trying to understand the motives behind his odd behavior. Questioning usually lead to delayed gratification. Instead she tried to remain calm as he baptized her in lathered admiration. \n\nBlake's hands moved delicately over her body. The erotic, tactile feeling of him rubbing soap into her skin, and the slow, careful, and strong nature with which he touched her gave a sense of affection from Blake that differed from his usual urgent lust. She closed her eyes and breathed in his gentle handling of her body and told herself to be patient. \n\nAs he covered her body in soap he began to massage her muscles. He started at her neck and made his way down her arms. He even took the time to work down the length of each finger. It was maddening in both the time it took and in the overwhelming, electric pressure it was building in Amelia's body. Every precious second Blake took to roll his fingers through her taut muscles was time she could be spending entangled in his body. He turned her around and worked his thumbs into her shoulders and trap muscles while she took a deep breath and tried not to remember how divine it sounded when he moaned. \n\n\"You carry a lot of tension here don't you?\" He managed to make the words sexy as they grazed her ear in the warm air of his breath. \n\n\"Mmmmm\" was all she could manage to respond with. \n\n\"You put too much pressure on yourself Amy. You need to relax.\" \n\n\"Says the man that drives me the most insane of anyone.\" She smirked. \n\n\"But\" he chuckled \"I'm sure you feel pretty relaxed when I'm done with you.\" He said with a smile and continued to work his way down her body. \n\n\"Maybe immediately after, yes.\" she forced herself to talk as he pressed his thumbs on either side of her spine. \n\n\"But then?\" He pressed down to the bottom of her back bone. \n\n\"But then-\" Amelia lifted her head up to peer an eye over her shoulder at him and smirking said \"-I just touch myself until I can see you again.\" She teased. Blake inhaled in approval and grabbed her ass, working his fingers into her muscles. He grunted like an animal. She whimpered and instinctively arched her hips back into his grip. \n\n\"Fuck.\" He gripped her ass tighter than he meant to. He kissed her cheek and gave it a slight nibble. \"I would love to see that.\" She felt him smile against her ass and she giggled. \n\n\"Yeah? You wanna watch me touch my pussy baby?\" She felt it twitch and finally sensed she was getting somewhere with his resolve. \n\n\"Mmm yes please.\" He poured more soap into his hands and grabbed her ass again. He ran his hand between her cheeks and she jumped and turned around. \n\n\"Don't do that part!\" she blushed intensely, back against the wall. She hated the thought of someone washing her there. \n\nBlake stood, towering, his face incredulous. \"I've seen it before you know.\" \n\n\"I know, just, I'll do it. That's weird.\" Amelia felt so small. \n\nBlake glared and grabbed her wrists to bring her face close to his. \"Amelia.\" he hissed condescendingly. \"I have seen every part of you. You're gorgeous and sexy as hell. You're being ridiculous. I wash myself everyday. I'm pretty sure I'm qualified enough.\" He could see the panic and embarrassment in her face and he leaned in to kiss her slow. Her kiss was curt and nervous in return. \"I'm bathing every part of my beautiful little slut.\" He ran his nose along the side of hers in a soothing whisper. \"So you can either try to fight it,\" His tone leaned to stern \"which you know I'll win, or you can relax and let me wash your sexy fucking body like I want.\" His gaze went over her tits and shoulders and stopped at her eyes. \n\nHe stood hovering, still holding her when her bravery kicked in. If this extremely attractive man that seemed to be obsessed with her body was so adamant about washing EVERY part of her, who was she to stop him? \n\n\"Fine.\" Amelia conceded, embarrassed. \n\nBlake grinned and brought her into a kiss. \"Don't be shy with me baby bird. You know I'll take care of you.\" \n\nShe tried to relax as he rubbed her shoulders and kissed her neck. \n\n\"Put your hands on the wall.\" He instructed. \n\nAmelia took a deep breath and obeyed. He guided her wrists down farther and farther until her ass was spread underneath the water. Her face was bright red, not that he could see it. \n\nBlake made a groan of approval as he looked at her submissive position. He stood behind her and she could feel his cock on her ass. She wanted to arch her back towards it but thought it would distract him and she wanted this over with. He ran his hands along her back and grabbed her cheeks with need when he reached them. \n\n\"Goddamn you are so fucking hot.\" \n\nBlake let a thread of soap fall along her spine which he rubbed in. He kneaded at her glute muscles and her hips once more. She felt his cock twitch in response. He rubbed his hands up until they met her tail bone and she braved herself. \n\nHe slowly ran his middle finger along the split of her ass and she felt him graze her asshole. \n\nThey both moaned unexpectedly. Amelia was shocked at how it made her quiver. \n\nBlake leaned a shoulder back and allowed the water to rinse her before he ran his finger back up. \n\n\"You like this don't you?\" He teased, his voice clearly portraying his own excitement. \n\n\"Yes.\" Amelia tried to breathe. Blake leaned forward, his hardness pressing into her. He kissed her back and moaned. \n\n\"You have such a cute little asshole baby.\" He cooed and pressed his finger onto it while he spoke. \n\nAmelia moaned and her pussy started to ache. Blake gently massaged her asshole with his finger while he ran his other hand over her cheek. Amelia could tell it was driving him crazy how turned on she was from it. Her hole opened up slightly and Blake groaned loudly. \n\n\"I want to fuck your ass so bad baby.\" His other hand was digging into the flesh of her hip. \n\nAmelia was shocked and excited at his lust. She definitely wasn't ready for what he wanted but the fact that one exposed part of her was making him so ravenous sent her pussy twitching. \n\n\"You can fuck my pussy while you look at my ass.\" She offered with a teasing smile and swayed her butt underneath his cock. He unconsciously thrust himself against her movements. Amelia knew she had him now. \n\n\"You're so hard against my ass.\" She cooed breathlessly, rolling her hips on him, urging him to let go of his self-control. \"Blake I can feel you throbbing.\" \n\nThe water turned mildly cold as he pushed his hand down on her back. The pressure of his hand made her instinctively stand on her tip toes to arch her pussy towards him. He ran his hands over her ass for a second in admiration. He licked his fingers and rubbed them over her asshole and she gasped and shuddered. \n\n\"Mm you fucking like when I play with your asshole don't you?\" He praised. She felt his cock moving along her slit and she moaned louder, becoming incoherently desperate. \n\nThen the water turned freezing all at once. Their shouts bounced off the tile as they tried to change the temperature. \n\n\"It's out of hot water.\" Amelia said clinging to Blake's warm body. He turned it off and instead of taking a moment to think over their options, slung her over his shoulder and burst out of the shower. Her excitement rose at his show of strength and playfulness but his face seemed to mean business as he tossed her dripping wet body down onto the bed. He came down onto his hands towards her and she dove her wet body underneath the covers. \n\n\"I'm so cold.\" She cried from her plush cocoon, getting revenge for him teasing her now that he was as desperate as she had been. \n\nBlake ripped the blankets off all at once and shook his head as if she were in trouble. The blankets landed on the floor too far for her to reach them again. \n\n\"Aw.\" He feigned pity as he spread her legs open, but his eyes were predatory. \"Poor thing all cold and wet.\" He licked her pussy slowly and she cried out at his hot tongue on her cold body. When his tongue retreated into his mouth he planted a kiss on her pussy. Her body prickled with goosebumps and her back stayed arched. \n\n\"Hmm.\" He thought, and licked her again. \n\n\"You don't feel cold at all.\" He licked again and dug his tongue into her a bit. She gripped the sheets and her toes curled at his assessments. \n\n\"But wet. Yes.\" He ran his fingers up and down her lips, coating them and rubbing her wetness over her pussy. \"You're certainly wet.\" \n\nHe looked up at her with a half-smile. He maintained eye contact as he went back down to taste her. She wanted to protest and demand that he fill her with his cock but his ministrations felt so incredible she couldn't speak. He was going so slowly and tenderly that she wouldn't cum but was right there on the verge of it. ",
        "Blake scooped his hands underneath her ass cheeks and squeezed them. Amelia moaned loudly. Blake growled into her pussy in response. He used his leverage with his hands and lifted her slightly and groaned as he licked her asshole. Amy gasped and her body lit up impulsively, but she jolted away anyway. \n\n\"No. Come back here!\" he demanded. He grabbed her ankles and slid her back within reach. He seemed completely crazed. \n\n\"You don't have to do that.\" Amelia slightly panicked. \n\n\"Do you not want me to?\" Blake asked trying to mask the disappointment in his voice. \n\n\"It's not that, it's just-\" \n\n\"Did it feel good?\" \n\n\"Well yeah, but-\" \n\n\"Then shut up and let me eat your ass.\" He squeezed her cheeks again and she made a noise between a squeak and a moan that Blake interpreted as a nervous excitement. He smiled evilly and pushed her thighs up so she was completely exposed to him. \n\nBlake ran his fingers over her pussy and slid his tongue over her ass. He groaned and his voice vibrated against her. She whimpered and gripped the sheets. \n\nBlake grunted and dug his face into her. In his passion he grabbed and lifted her hips so he was kneeling against her back, lapping at her ass while her ankles jiggled against her ears. She giggled at his enthusiasm but he unexpectedly dipped his fingertip into her pussy and she yelped instead. \n\n\"Is something funny?\" He challenged with a smirk. \n\n\"N-no.\" Amelia gasped. Her legs began to shake as he fingered her and licked her and Amelia clawed at his knees unknowingly. \n\n\"That's right.\" \n\nBlake's fingers dug into her cheeks with need. Amelia tried to breathe with her body folded over and through the exhilaration of new and surprising sensations. Soon it became too much and she wrapped her legs over his shoulders and pushed her body so that her legs forced him down and she was now on top of him with her pussy right above his face. \n\nBlake looked up in shock at her. She could tell he never expected her to wrestle him down, especially so easily. \n\n\"Blake. Fuck me. Now.\" She commanded. Blake glared up at her. \n\nBefore she could react, he rocked back, swung his legs up around her and jerked her back down onto the bed, quickly switching places. He swiftly positioned himself on top of her properly, her face now painted with the same stunned expression he had moments before. \n\n\"That's a little difficult to do when you're sitting on my chest don't you think?\" he hissed. Amelia couldn't find words to respond with so she just stared at him surprised, and remarkably turned on. \n\nBlake gave her a look that made her believe he intended to toy with her more, and normally he would never obey an outright command, especially after the stunt she just pulled, but she knew she caught him at a rare time where his fire was too much to control. He glared, knowing he had won this round. Blake maintained eye contact as he reached his face down to her pussy. Her legs opened at his beckoning even though all she wanted was his cock. Anticipation forced her to obey. \n\nHe put his tongue deep inside her and for a second she thought she might cum. Blake dragged his tongue from her pussy, pressing firm against her, over her lips, clit, belly button, over the center of her body, he made his way between her breasts, over the hollow of her collar bone and her neck, finally finding her mouth where they kissed deeply. \n\n\"Fuck.\" She exclaimed, shivering. \n\n\"Can you taste yourself?\" He kissed her again. His voice was a deep, breathy pitch and she'd only heard it this way when he was far into the throws of desire. \n\n\"I only taste you.\" She intertwined her fingers in his hair and looked him in the eye for a moment. He furrowed his brow, slightly breathless. Their lips met again and their bodies became hurried as they felt and groped and tasted each other. Blake reached down to place himself and Amelia opened her legs wider, anticipating the distinct, delectable sting of his entrance. \n\nThen a phone began to ring. \n\nThey looked for the noise and saw it was Blake's on the nightstand where he had slept. Amelia watched Blake look over at who it was and then go back to kissing her. \n\n\"Who is it?\" She asked, his energy felt wrong all of a sudden. \n\n\"It's no one.\" He kissed her neck. \n\nWrong answer she decided. She quickly jolted over and snatched the phone off the nightstand to see the name \"Jenny T\". Blake grabbed the phone and threw it on the ground. \n\n\"I said it was no one.\" He barked defensively. \n\n\"Why is Jenny calling you?\" She sat up glaring. Blake sighed. \n\n\"I was supposed to see her for breakfast today.\" He sat on his heels. \n\nAmelia paused. \"Like a date?\" She searched. \n\n\"Yes.\" He responded defensively. \n\n\"So your plan was to come to my place last night and fuck me and then stay the night, and then leave to go on a date with Jenny?\" \n\n\"Not exactly.\" He rolled his eyes. \"I didn't know I'd be coming over here last night did I? Also I had completely forgotten about the date or I would have canceled with her obviously.\" \n\n\"Hm.\" Amelia replied seemingly looking for something in his face. \n\n\"Do you really think you have a right to be mad about this?\" He asked. Amelia had an answer but he continued. \n\n\"First of all, I'm not your fucking boyfriend\" \n\n\"I am NOT-\"Amelia started to argue but he cut her off. \n\n\"-Second of all you were on a date last night. Third, I forgot about the date and stayed with your ass all night. I don't honestly see why you would be mad when I was with you instead unless you're just jealous for some reason which would be enormously hypocritical.\" The phone started buzzing again. \n\n\"I just don't understand why you would be at my house last night if you had a date today.\" Her voice was laced with poison and her tongue struck her teeth with a force meant to warn him to be cautious. \n\n\"I already told you!\" Blake shouted, heeding no warnings. \n\n\"I don't care if you're dating Blake, I'm not jealous. I don't want to be your girlfriend and we've talked about this. But don't act like you're not a fucking player if you are. Do whatever you want but I will not be your side bitch.\" She moved to stand from the bed and put her clothes back on. \n\n\"Right.\" Blake sighed and rolled his eyes. He moved quickly grabbing her legs and pulling them down so she was on her back and he grabbed her arms and pinned her to the bed, also pinning her legs with his. \n\n\"Get. The fuck. Off. Me.\" Amelia seethed. She didn't bother fighting his strength but it spiked her anger to unparalleled levels that she couldn't. \n\nBlake put his hand tightly over her mouth, making her want to absolutely kill him. \n\n\"I am not-\" he said in an anger she'd never seen before. \"-dating Jenny.\" \n\n\"You, are not a 'side bitch'\" his jaw was clenched. His anger seemed to match hers, which surprised her and she started to relent and listen to him. She took slight notice of an ache in her leg. \"I'm not trying to 'play' her or you, you goddamn psycho.\" \n\nAmelia took a deep breath for the first time since his phone rang. But her slight relief had no effect on Blake's fury. \n\n\"I agreed to that date weeks ago. And I completely forgot about it because you drive me fucking crazy.\" Amelia noticed the pain in her thigh was from his erection pressing into her. Defiance took her body from her mind and she started to become wet again. \n\n\"God I could slap you right now.\" His hand clenched her jaw slightly. \"You're the hottest fucking thing I've ever seen.\" Blake's whole body was tensed. \"You're all I THINK about. How could you imagine I would want to play you?\" \n\nAmelia blushed deeply, her brow was furrowed. Embarrassed over her reaction and confused by it, she couldn't think of anything to say. She wasn't ready to really unpack all of what was just said, nor could she think of how to in that moment. Instead, she slipped her hand out of his grasp above her head and gingerly removed his other hand from her mouth. She could tell he expected her to say something as his face was expectant and defensive. Not letting go of his hand, she maintained eye contact as she reached it down between them, and allowed him to feel the wetness between her thighs. When Blake realized what she was doing with his hand he reached and felt for her desperately and he breathed a full breath of air through his nose with his jaw clenched as he rubbed her pussy. His hand holding her wrists gripped tighter. She looked up at him Smokey eyed. \n\n\"Fucking bitch.\" he glared and kissed her deep. Their bodies moved frantically in a way that made it seem like they were trying to consume each other. His hand moved over to position himself. Amelia felt the head of his cock travel along her thigh until it pressed against the source of the wetness on his fingers. He thrust his length into her possessively. \n\n\"FUCK\" she screamed retracting her captive arm from his grip. She was so tight around him it felt like he had reached into her stomach. The necessity of this claim surpassed the discomfort she felt. He needed to own her in that moment as much as she needed to feel his. \n\nThey panted and Blake's thrusts were hard but slow as he slid slowly out of her and drove himself fully back inside. Amelia's pain eased as she stretched and adjusted to him and she clawed his shoulders as she felt the full length of him leave and enter her. \n\n\"Do you think I fuck anyone like this?\" Blake growled. \n\n\"No.\" Amelia responded exasperated, her whole body tingling. \n\n\"No! This is just\" Blake charged himself deep within her again. \"For you.\" His words seemed venomous and seething. \n\nAmelia whimpered and her hips started to buck and twitch. She held onto him for dear life. \n\n\"You fucking-\" thrust. \"-idiot.\" He continued, his teeth clenched, thrusting every few words. \"You're the only-\" \n\n\"-person-\" \n\n\"-I want-\" \n\n\"-in my bed.\" \n\n\"Blake!\" Amelia panicked, breathless and trembling. \n\n\"Amelia Peterson\" Amelia's back arched as he growled her name. \"Your body-\" he ran his nails from her collar to her belly and she clawed the sheets. \"-fits mine.\" He grabbed her hip to drive himself in further. \n\n\"Blake!\" Amelia's dug her fingernails into him. She was so close and he was ignoring her. She'd never been about to orgasm whilst being reprimanded, and she wasn't the least bit upset about it. \n\n\"You fucking know better.\" his voice was so deep and rumbling, Amelia thought it was the most perfect sound she'd ever heard. \n\n\"Blake.\" her voice barely above a whisper. \n\n\"No no no. Don't cum yet.\" Blake commanded without easing off whatsoever. \"You want me all to yourself?\" He hissed. \"Then fucking take me.\" He slammed his cock in her and stayed there. It felt as if he were digging deeper the longer he stayed. She struggled to gasp for air. Blake seemed to size her up, daring her to complain, watching as she savored the pain and pleasure of his entirety. Finally, he relented and withdrew and they both took a deep breath. He bent down and kissed her on the cheek. The act delayed her orgasm but she knew it wasn't far away. \n\n\"Good girl.\" He planted kisses along her face and neck. \"What a good girl.\" he praised. She felt him realize he was on the edge of cruelty and reigned in some of the hate and anger he was fucking her with. \n\n\"Look at you.\" His face was close but turned down to look at her body and his cock sliding in and out of her. \"How could you be jealous?\" he spoke and kissed up her breast to her neck. \n\nAmelia was on fire. With his ear next to her mouth, she turned slightly and said \"How could you?\" Blake's hand dragged up her torso and grabbed her breast defensively. \n\n\"Do you think I could have ever fucked Richard?\" \n\nBlake clenched his jaw at the mention of his name and started to thrust again. \n\n\"Maybe.\" He provoked. \n\n\"Oh fuck you.\" Amelia wrapped her legs around Blake's hips and drove him into her. He let out a surprised shout of pleasure. She held his neck so his ear was by her mouth. \n\n\"You know what you do to me Blake.\" She teased. \n\n\"It's not just that big, beautiful cock of yours.\" his body was tense as she slowly bucked from beneath. \n\nHe grunted as he pushed his hips to meet hers, listening intently. \n\n\"It's not just your body,\" She ran her hands up his muscled frame. \n\n\"It's not just your face.\" She kissed him deeply and he growled into her mouth. \n\n\"It's the fact that you make me crazed for you.\" She watched him breathe heavily. \n\n\"It's that you can make me dripping wet just with a look.\" \n\n\"Mmmm.\" A lustful, cocky smirk spread across his face. \"Is that right baby?\" He slapped his hips against hers again. \n\n\"Fuck!\" Amy dug her nails into his shoulders. \"Yes!\" She tried to breathe. \n\n\"It's your deep, sexy voice.\" Her fingers grazed lightly over his throat. He grabbed her hand from his neck and slammed it on the bed, trying to focus. \n\nShe laughed and bit her lip. \"It's your arrogance.\" \n\nAmelia whispered in his ear, letting her hot breath tease the sensitive skin and she ran her hands all over his body. \"You're so fucking hot Blake. You fuck like you can read my mind. You fuck like you know better than me. You fucking drive me crazy.\" \n\nBlake bent down and kissed her with all of his passion, lust, jealousy, need. As he spoke in her ear, he grabbed her breasts and teased her nipples. \n\n\"You're my perfect little slut Amy. You're mine.\" his voice rumbled deep and hot in her ear. He was smiling. She melted and rocked her hips harder against his rhythm. \"And I'm gunna make you cum.\" \n\nAmelia moaned loudly and clawed his back as he began to fuck her harder. She drank in the delicious smell of him and it made her nipples hard. Every time he withdrew from her, her pussy twitched with need. She admired his face through intoxicated eyes. He had so much power. His strong jaw twitched as he fucked her. One large hand slipped gently to her face and he rubbed his thumb down her cheek and chin. \n\n\"Oh baby.\" He smiled down at her. \"Look at you shaking already.\" Amelia was close. \"God you take this cock so well.\" He bit his lip and thrust again as if to show her. He kissed her and faced her. \"I can feel you.\" His jaw was clenched. \"I can feel your tight little pussy twitching on my cock.\" Amelia tried to breathe. Blake's speech became hurried, he was losing control. \"Mmm you're gonna cum for me baby, I can feel it.\" His breath was hot and excited. \n\n\"I-I\" Amelia tried to speak. \n\nBlake bit her neck, moaning into the sensitive flesh and she shouted as she came hard. He growled a primal sound through his teeth into her neck as he felt her orgasm clench around him. He took her to the hilt and her pussy pulsated. Her body contracted rhythmically and she whimpered through the waves of her pleasure. \n\nHis jaw loosened and he kissed the marks he left behind. He was panting and electrically aroused. \"God you're so beautiful.\" He kissed her. \"I have to make you cum again.\" He continued to kiss her and run his hands up and down her arms and over her torso. Her orgasm caused his enthusiasm to take control of him. \n\n\"I'll need a minute.\" She chuckled breathlessly. \n\n\"Ok.\" He responded and kissed her chest. His cock slipped out of her and she twitched. He kissed her hip bones. \n\nThey heard Blake's phone buzz again. \n\n\"I'll turn it off.\" Blake reached over to grab it. He sat back on his heels as he looked at it. \n\nAmelia glared at the device in his hands. \"Answer it.\" \n\n\"What? No.\" Blake thought she was testing him. \n\n\"She's not going to stop calling, just answer and tell her something came up. You owe her that.\" \n\nBlake looked at her uneasily but answered it. Amelia heard yelling on the other line but couldn't make out any words. \n\n\"Hey, hey I'm sorry there was an emergency. I couldn't make it.\" Blake said trying to sound honest. \n\nAmelia leaned over quickly and licked up his cock in one stroke. Blake gasped and his hips bucked. He put a hand on her forehead to keep her away from his cock while he tried to talk. Amelia reached up and slowly removed his hand with a mischievous look in her eye. She locked stares with him as she took his finger in his mouth. Blake took a deep, shivered breath as he watched her and couldn't bring himself to take back his hand. She made her way to her real target and licked up his cock again. He allowed it, his thinking still fuzzy from arousal and stared at her intently as she worked. \n\n\"Yeah sorry it's just hard to talk right now.\" He looked down at her hazy eyed. She looked up, into his eyes, as she reveled in the feeling of his dick in her mouth. She took him to the base and moaned passionately on his cock. He gripped the sheets with his one free hand and his toes curled. \n\n\"It's kind of personal I don't- um- really want to get into it.\" Blake looked up to the ceiling and tried to breathe. \"I know, I should have told you. I'm sorry.\" \n\nAmelia felt the rush of blood in his cock and it made her own body set aflame once more. She kept one hand stroking her saliva all over him as she leaned up to his free ear. She felt her tits graze against his chest and shoulder on her way. She rubbed her nose along his neck until she got to his free ear. \n\n\"End it.\" she said. \n\n\"What?\" Blake mouthed to her in surprise, utterly confused and savagely lustful. \n\nHer arousal clouded her thoughts immeasurably and made her possessive. \n\n\"Tell her you can't see her.\" Amelia's grip tightened slightly around his dick and she kissed and nibbled his neck. \n\nBlake looked at her uneasy but was also finding it incredibly difficult to process. \n\n\"Jenny, I'm sorry I fucked up. But this thing that's come up,\" Blake struggled to find the words as Amelia had gone back to worshiping his cock with her mouth. He stared as she sloppily licked him, stroked him and seemed to lose herself in the pleasure she was providing him. \n\n\"It's just not a good time for me to be dating. I'm sorry.\" Blake's ear filled with the tinny sound of someone yelling over a cell phone and he hung it up and threw it onto the comforter on the ground. \n\nAmelia smiled from behind his monumental erection. \"You're such a good boy.\" she teased and licked up his cock from base to tip. \n\nBlake sucked his tongue in his teeth and shook his head at her challenge. He grabbed her hair by the roots and jerked her head back slightly. She stared up at him with a mischievous smile. \n\n\"Oh you want it like that huh?\" \n\n\"Mmmhmm.\" Amelia giggled. \n\n\"You unappreciative little cunt.\" Blake shoved his dick in her mouth and she eagerly sucked what he gave her. \n\n\"Don't ever talk to me like that, or I'm going to fuck this pretty little face of yours Amy.\" Blake thrust her head down on him, forcing his whole dick down her throat. He held her there as she went from eager to uncomfortable. He lifted her head up and she gasped for air but still tried to appear collected. Fingers still entwined in her hair, Blake dragged her to the carpet so he could stand. He looked down at her knelt under his giant cock and Amelia saw his animalistic lust flash over his clenched jaw and flaring nostrils. He pushed her back down and roughly bobbed her head up and down. Amelia tried to keep from gagging as he fucked her face. His beastly nature was making her wetness replenish. \n\n\"Fucking bitch.\" he growled and relieved her mouth for a moment. She knelt, gasping in front of him. He studied her for a second, then she reached her hands up to his hips and pushed his cock back in her mouth. He gasped and threw his head back to moan. She looked up at him as she slid her hand up and down his length with her mouth behind it. She moaned on his dick, drunk on every inch of him. \n\n\"God you're fucking crazy.\" he admired. She moaned a smile in response. He knelt down and swept two hands under her arms to pick her up and kiss her deep as she wrapped her legs around his waist. She loved how easy it was for him to throw her around. ",
        "Blake slammed her against a wall. He grabbed her tits forcefully and she felt his cock pressing against her pussy. \n\n\"I have to fuck you.\" Blake reached down to position himself. \n\n\"God please, please Blake I need your cock inside me now.\" Amelia was frenzied again. They both yelled out as he pushed himself inside of her again. Amelia could tell he wasn't going to last long. She used her arms around his neck to jump up and down on him. He looked tense and almost violent. She could tell he was holding back. \n\nThe view of his tightened muscles made her dizzy. She reached down to feel his chest and her legs tightened around him as she felt how rock hard his body was. Her nails dragged along his chest and she moaned loudly. A crazed need for his orgasm rang through her. \n\n\"Baby I want to feel your cum inside me.\" She whined. He looked like he was ignoring her and trying to concentrate, his teeth were clenched. She grabbed his jaw and forced him to face her, he was breathing hard and looked pissed. \n\n\"I need your fucking cum in my pussy Blake.\" \n\nHe looked away again, grunted and slammed his hand on the wall behind her to keep focused. She smirked to herself, loving that it was so difficult for him not to cum. She slowed her movements on him and leaned her mouth to his ear. \n\n\"Baby I need It.\" she dragged her teeth on his ear and he gasped and groaned. \n\n\"Goddamnit Amy!\" his heated anger made her moan. She could feel her orgasm building again. \n\n\"Come on baby. Don't you wanna make this pussy yours?\" Her nose was dragging along his neck. \n\nShe saw fury flash over his face and he covered her mouth with his hand, forcing her head against the wall. \n\n\"This pussy is already mine. Isn't it?\" he growled. Amelia nodded obediently. The pressure continued to build inside of her and she felt herself twitching on him. His hand ripped away from her mouth. She pulled him in to kiss her. \n\n\"Say it!\" he ordered. \n\nShe turned his ear to her mouth again. \"My pussy is yours Blake.\" She moaned, her voice thick with desire. She licked with the tip of her tongue from his collar to his ear. \n\n\"Fuck!\" he shouted and his fist flew at the wall without either of them knowing. Amelia groaned as pieces crumbled to the ground. She felt her pussy clench with arousal at his rage. \n\n\"You're gunna make me cum again you fucking animal.\" she clawed his back as he continuously slammed hers into the wall. \n\n\"Show me what this cock does to you. Show me what my cum does to you.\" he growled. \n\n\"Yes! Fuck! Fill my pussy!\" Amelia cried out. \n\n\"I'm gunna cum!\" Blake pinned her and yelled, digging his fingers into her thighs as she felt him pump into her pussy. This sent Amelia into her own orgasm and she screamed as her body tightened around him. \n\nThey stayed there panting until Amelia felt Blake's legs tremble under their mutual weight and he carried her to the bed so they could catch their breath, shaking against each other. \n\nBlake looked at her as he panted and stroked a hand along her cheek. He brought her face to his and kissed her sweetly. When his cum dripped out of her she shivered with a buzzy sense of pride. \n\nHe rolled over to his back and started to laugh. Amelia looked at him and joined in. \n\n\"Oh my god.\" she laughed. \n\n\"That was fucking insane.\" Blake ran a hand through his hair. \n\n\"That was insane and stupid and delicious.\" Amelia stretched her whole body with a grin. \n\nBlake hooked a hand around her waist and dragged her to him. \n\n\"You're so fucking hot Amy.\" he said with a smile and kissed her shoulder. \"I can't think straight. Your pussy makes me crazy.\" \n\nShe giggled and arched her ass against his hips. He sat up over her. \n\n\"Don't you start again!\" He laughed. \n\n\"You broke my wall I'll start whatever I want!\" She pointed to the damage. \n\n\"What that? I can fix that.\" he rolled his eyes. \n\n\"Oh really?\" Amelia raised her eyebrows. \n\nBlake got up and went over to her desk, wrote something down, ripped a page from her notebook, dug around for a piece of tape, and hung the page in front of the hole. \n\n\"Boom. Good as new.\" he knelt over her again. \n\nShe laughed and climbed out from under him to look at his repairs. \n\nThe notebook paper just read \"I &lt;3 Blake's big cock\". Amelia bellowed with laughter. \n\n\"Oh my fucking god.\" she fell back on the bed as she laughed. \n\n\"It's like contemporary or something.\" he tried to hold back his own laughter. \n\n\"Yeah you're like Banksy.\" \n\n\"Oh I'm much better than Banksy.\" \n\nAmelia's laugh deepened again. \"I'll make sure to keep your identity secret.\" \n\n\"Well we're not doing a great job so far, Kylie already knows my 'secret identity'.\" Blake laid on his side to face her with a smirk. \n\n\"Yeahhh but there's no keeping anything from Kylie.\" Amelia turned her body as well. \n\n\"True.\" Blake sighed. \"Do you think she'll tell other people?\" \n\n\"Well definitely Landon.\" \n\n\"Does that bother you?\" \n\nAmelia thought for a moment. \"No, I mean they're engaged now I expect they tell each other everything.\" \n\n\"Would it bother you if Landon told other people?\" Blake continued. \n\n\"I mean, yeah, wouldn't it bother you?\" Amelia asked, nonchalant. \n\n\"Damn. No. Not at all.\" Blake turned over to lay on his back. \n\n\"Wait why?\" She could sense she had offended him but wasn't thinking clearly enough to decipher why. \n\n\"Why would it bother me? You're the only one it bothers Amy.\" \n\n\"Well wouldn't we seem like hypocrites? After always arguing and everything?\" She tried to sound logical so it would calm him. \n\n\"What? Who the fuck cares?\" Blake sat his head up to look at her. Her tactic apparently failed. \n\n\"I guess that's a good point.\" \n\nBlake got up and started looking for his clothes. \n\n\"What are you doing?\" Amelia was desperately hoping he wasn't as angry as he seemed. \n\n\"I've been here long enough haven't I? It's time to go home.\" He slipped his pants up. \n\n\"Ok but Jesus you don't have to go like that. If you're upset we can talk about it.\" \n\nBlake sat on the end of the bed and began putting on his socks and shoes. \n\n\"Look I know how I feel, when you figure yourself out just let me know.\" \n\nAmelia was now racing around trying to put something on. There was something terribly embarrassing about being the only one naked in an argument. \n\n\"Wait what do you mean?\" Amelia slipped on a pair of leggings and a tank top, still dribbling cum out of her pussy. She tried to ignore it. \n\nBlake made his way to the door and Amelia followed behind him. Blake had his hand on the knob and Amelia had her hand on the door. \n\nBlake sighed. \"Amy, when it comes down to it, people are going to talk no matter what. And if you're going to let it affect the way you live your life, I can tell you, you will never be happy. So when you figure out what you want, outside of how other people perceive you, you have my number.\" Blake turned to open the door but Amelia slammed it closed again. \n\n\"Look I'm sorry, I'm not ready to go around telling people we're fucking and I don't think it's anyone's business so I don't think that gives you the right to be mad at me.\" \n\n\"No it's not anyone's business but if you're embarrassed about it, maybe you shouldn't be doing it.\" Blake hissed and tried the door again. \n\n\"Let me leave Amy.\" \n\n\"I'm not embarrassed. And I don't want you to think that I am.\" \n\n\"I'm sorry what?\" Incredulous, Blake rand both hands through his hair. \"I'm fucking lost now. If you're not embarrassed then why are you sneaking around and telling me not to tell anyone?\" Blake was losing his patience. \n\n\"Well I was embarrassed at first, but now that I know you better I realized I was wrong about you and there's nothing to be embarrassed about.\" \n\n\"You really need to figure out what the hell your opinion is because a literal minute ago you were afraid to seem hypocritical if other people knew, now you're saying you're not embarrassed. I seriously can't keep up and I really would like to go home.\" \n\nAmelia held the door firm. \"I don't know! I'm still figuring it out and it's a little hard to think when you've had almost no sleep and have been doing nothing but fucking for the past 10 hours! I'm sorry!\" \n\nBlake crossed his arms silently waiting for her to get whatever this was out of her system. \n\n\"Earlier you said you know how you feel and that I need to figure out how I feel.\" She said. \n\n\"Yes?\" Blake threw his head back with impatience. \n\n\"What do you mean? How do you feel?\" Amelia's heart was beating hard in her chest. \n\n\"You can either stand away from this door or you can let it hit you. Your choice.\" Blake glared. \n\n\"Why won't you just talk to me?!\" She yelled. \n\n\"There's no point in arguing with someone that doesn't know what they're arguing for!\" Blake shouted back. \n\n\"Fine, fucking go then.\" Amelia backed away from the door and Blake went to leave. He took a step outside and then sighed. He turned back around, marched over to Amelia, and pulled her into an intimate, soft kiss. \n\n\"You're not embarrassed huh?\" She could tell he wanted a definite answer this time. \n\n\"No.\" She decided. \n\n\"Go to dinner with me.\" He challenged down the barrel of his nose. \n\n\"What?\" She pulled away, wide-eyed. \n\n\"If you're really not embarrassed, go on a date with me. In town. This weekend.\" \n\n\"This is NOT thank kind of arrangement. We don't date, we fuck.\" \n\n\"Please, I'd be the best damn date you've ever had. I knew you were a fucking liar.\" Blake started to walk away again. \n\n\"I'm not a liar! And you'd be a terrible date!\" She yelled after him. \n\nHe marched back until they stood nose to nose. \"Prove it.\" \n\n\"Fine! Saturday night. But this isn't a date! This is just to prove I'm not ashamed!\" She pointed his muscled chest, eyebrows raised in a mask of austerity. \n\n\"Oh this is a date Baby Bird.\" He smirked with a childish, teasing tone. \"I'm gunna charm you better than a goddamn Disney prince and you're going to love every fucking minute of it.\" \n\nAmelia just glared in response and only thought of something to say after he started to walk out again. \n\n\"YOU BETTER TAKE ME SOMEWHERE FANCY!\" She yelled after him. \n\n\"WEAR SOMETHING NICE!\" He shouted back and slammed the door closed behind him. \n\nAmelia curled up on her desk chair, put her knuckles up to her mouth, and failed to hide the unstoppable grin painted on her face. \n\nWhat the fuck do you wear on a date with Blake Daine?"
    ],
    "authorname": "draia",
    "tags": [
        "amelia",
        "blake",
        "controlling",
        "draia",
        "good girl",
        "hatefuck",
        "mine",
        "shower"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/fuck-ch-06-the-morning-after"
}