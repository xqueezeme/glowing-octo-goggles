{
    "title": "Rock and Water Ch. 08",
    "pages": [
        "My promise for shorter breaks between chapters seems to have not quite come to pass. I truly appreciate your support and patience! Things get a little deeper between Corrine and Patrick this chapter...hope you enjoy! Many thanks to FA_JF for her ongoing support and advice!\n\n*****\n\nMonday arrives all too soon. Saturday was spent on the motorcycle exploring back roads in the gorge. We checked in on his cabin while out there, enjoying a fast and desperate fuck after having been pressed together on his bike for so many hours, the close contact and vibrations driving us both mad. That evening, back at his home, I soaked in bath salts in the tub; a welcomed relief after the flogging the night before and being on the back of his bike all day. \n\nMost of Sunday was spent with his \"Little Brother\" Luka, who I'd heard so much about over the past weeks. For ten years old, it was clear that his rough upbringing had toughened him, and made him seem older than his years. It was only after we took him to see the new X-men movie and ice cream afterwards that I could see him loosen up a little and show his goofy side. He was guarded with me at first, but by the end of the day he'd warmed up a bit, and was curious about my work at the radio station. We made a plan to go to the studio on his next Sunday with Patrick. \n\nIt's Monday now, and as planned, we head to the gym together to work out and confront Kym for her hostility towards me. From the moment we walk in the door, our movements are followed by Kym. As it was before, her expression is bleak, with a tinge of sadness. It's clear she tries to stay focused on the client she is training, but when the session is over she remains in the weight room, tracking our movements from the far wall.\n\nAlthough I trust Patrick's assertion that they were never more than 'friends with benefits', it's obvious that what happened between them was much more to her. My feelings about Kym vacillate between being pissed off and sympathetic.\n\nI head over to the other side of the gym to do some stretches on the mats. Just as I settle into my first one, I watch with no surprise as Kym sheds her loose gym top and walks towards Patrick in her sports bra and tight gym shorts. Her young, tight body catches the attention of both men and woman as she passes. My breath catches as she moves to embrace Patrick in a hug. He looks caught off guard, but accepts the hug briefly before pulling away. She keeps her back towards me, but shortly after they start talking I see him gesture towards me so Kym is forced to turn around and acknowledge my presence.\n\nShe looks miserable as they walk in my direction, but turns and flashes Patrick flirty smiles along the way. I hadn't expected this confrontation to occur in the middle of the gym, and feel unprepared to say to her what I'd been rehearsing all morning. As soon as they reach me, Patrick breaks away from her to stand by my side, gently laying his hand on my shoulder.\n\n\"Kym, I'd like you to meet Corrine, my girlfriend. Corrine, this is Kym.\" His demeanor is warm, albeit a little guarded.\n\nKym's lips initially become a thin line as her whole body tenses, but then as if on stage she quickly recovers her composure.\n\n\"Corrine, is it? You look familiar...have you been here before?\" She's laying the sweetness on thick.\n\nI take a deep sigh and decide I'm not going to play her game.\n\n\"Yes, Kym... We both know I have. Listen, I have no issues with the fact that you and Patrick hooked up. What I'm not okay is you trying to intimidate me every time I walk in the gym.\"\n\nBriefly she'd looks at a loss for words, but recovers quickly. Cocking her head with a smile, she exclaims, \"Oh right! You do look familiar... Didn't I see you last week in the water aerobics class for our, uh... our older members?\"\n\nMy eyes widen, and I can't hold back a gasp of laughter as I shake my head. This girl is priceless.\n\nPatrick stands tall and responds for me. \"Kym, what the hell? Corrine's been coming to this gym longer than I have, and you know that. I don't know why you seem hell bent on staring her down every time she comes in, but it needs to stop. Now.\"\n\n\"I have no idea what she's talking about. Honestly, Patrick... I don't know why she'd say such things.\" Kym is doing her best to look incredulous and hurt at the same time.\n\nPatrick pauses, and looks between the two of us. Is it possible he's questioning whether my accusations hold any merit? For a moment, I wonder.\n\n\"Kym, Corrine has no reason to make any of this up. In fact, she did her best to hide it from me for a few weeks. Just tell me why you're being such a bitch...\" his voice softens a little before he adds, \"when I know that's not who you are.\"\n\nKym's righteous demeanor begins to crumble in front of us. \"Patrick, I just don't understand... I know you wanted me. The night of my show...after the show...it was incredible. We had such a connection.\" Her voice begins to crack as she continues. \"I gave you space! I gave you time!\" Her hands ball into tight fists against her side as small tears begin to form in the corners of her eyes.\n\nAs manipulative as she's been, her breakdown feels pretty sincere. I move to step away to let them talk in private, but Patrick's hand tightens on my shoulder.\n\nPatrick's words are calm, but firm. \"I'm not going to lie to you or Corrine that our night together wasn't a good time, it was, but that's all it was Kym...just a night; one in many for me during those days.\"\n\nKym flinches and I do too, until Patrick continues, sincerity in his voice. \"Please Kym, you have to understand. I did my best to be honest with you where I was in my life at that time. I wasn't looking for a relationship. If I had any idea you had feelings for me, I never would have been with you.\"\n\nShe looks crestfallen, but nods a little as she looks down at the floor. \"I know,\" she says, \"you did...I just thought...maybe if I played it cool you'd eventually want me.\" She looks up with red eyes at him, then me. \"Fuck! I'm such an idiot.\" She practically stomps her feet on the ground. \"Why does this keep happening to me?\"\n\nI finally find my voice, and ask softly, \"Kym, how old are you?\"\n\n\"Twenty-three.\"\n\nI think back to myself at twenty-three. \"At your age I was convinced every guy was 'the one'. Sex and attraction are incredibly powerful, but it's also easy to lose yourself. You should never have to change who you are, or deny what you need from a relationship...sadly I learned that lesson a bit later in life.\"\n\nKym is still looking at the floor but once again nods. With a deep sigh, she says, \"I hear you...I know. My friends tell me that all the time.\"\n\nShe lifts her head and looks at me evenly. \"Sorry for being such a bitch. I just...I just don't get it. I mean, why would he want you when you're...\" She trails off and stops herself before going any further. \"Shit. I better just go.\"\n\nWith that, she walks away and quickly pushes through a door for employees only. Patrick and I are left standing there, stunned.\n\nHe starts to laugh. \"What the hell was she talking about? Why wouldn't I want you?\"\n\nI look at him, eyes wide open. \"You really don't know what she was going to say?\"\n\n\"No\", he says, shaking his head.\n\nI love that he doesn't, and with a smile take his hand. \"No matter...but you just earned yourself a blowjob.\"\n\nOverall, this weekend has shown us that in submitting to him fully, I never once lost my sense of self, or self-worth. Instead I felt valued and cherished, while he seemed greatly satisfied by each and every act of trust I bestowed on him.\n\n***\n\nA few more weeks pass. Trips to the gym have been stress-free. While Kym isn't overly friendly, she no longer seems fixated on the two of us, and most of the time ignores us both. Regardless, it's summer and we've spent less time in the gym and more time on our bikes, or hiking local trails with the dogs.\n\nAlthough no longer daily, Addie and I continue to speak on the telephone and Skype frequently. She's struggled with Frank over spending time with his new girlfriend, and I brace myself for resistance when I ask how she would feel if I invited Patrick along to London when I come to visit her later in the month. I've yet to ask him, waiting to see her reaction, and am pleasantly surprised when she appears okay with it. I assure her that we'll still have plenty of alone time. It's clear that Addie holds no illusions for Frank and I reuniting, but this is all still so new for her.\n\nWhen I do ask Patrick to join me in London, he grabs me tight and gives a resounding \"Fuck, yeah!\", then proceeds to interrogate me about Addie for the rest of the evening. He's been to London a few times before to visit some ex-pat friends from his river rafting days. They live just outside of Bedfordshire, a bit over an hour outside of London, and we plan to add on a few days at the end of the trip to stay with them.\n\nThe growing trust and comfort in our relationship has allowed for an intimacy I've never known. Somehow over time, my submission towards him has become less of a role, and more just a way of being. In giving him control, not just over my body but also more and more frequently in our everyday life, I've felt calmer and more centered than I ever have.\n\nMy concerns about deepening my submission to Patrick, both in and out of the bedroom, have eased as I've come to realize he's not arbitrary in his commands, or exertion of control. Little by little I've let go of my constant vigilance. I slip more easily than I thought I would into a more deferent mindset, surprised that not once do I feel condescended to or put out by his decisions. In fact, I find it quite freeing to let go of all of the choices I usually have to make in a given day, from the clothes I wear to our plans for the day.\n\nThe trust I feel when I give my body over to him has only strengthened too, after twice now using my safeword \"yellow\". The first time involved the most complex Shibari he had yet to undertake; a beautiful but severely confining array of knots that had me lying on the bed on my belly with my thighs open, knees bent, and arms crossed behind my back so that each hand held the alternate wrist. I'd felt myself sinking deeper into an almost meditative space, comfortable and divinely blissful, when he started to braid rope into my hair.\n\nHe'd been checking in with me throughout the evening, but when he pulled the rope binding my hair back and began to secure it to rope that was crisscrossing my back I began to feel anxious. For a moment I kept quiet and took deep breaths, but quickly I felt myself sinking into a panic attack.\n\nBefore I am even aware of my actions, I quietly, but clearly said, \"yellow\".\n\nWith a knife that had been lying close at hand on the bedside table, he quickly cut the rope between my braid and back, causing my head to drop to the bed. In a flash he was on his knees and at eye level with me, his hand cupping my face. Already my breath and comfort had returned, and despite reassuring him that I was good to continue, he chose to remove the rope altogether. Sensing my disappointment, he assured me we'd try it again, this time without head restraint.\n\nWe spent the evening exploring reasons why head restraint triggered panic in me, when it never had when his hand was tight in my hair. Whether it was the position, or the extreme nature of the restraint, I could never voice a clear reason for my panic. Despite my assertion that it wouldn't happen again, my lack of insight for the cause of my reaction did not sit well with Patrick. Now that I knew how quickly I would be released If need be, I pleaded to try it again. He nodded, but I could tell from the look in his eyes that it would be a while before he'd want to pursue it. It was obvious the experience had spooked him.\n\nThe second time I said \"yellow\" was when he'd covered by breasts, torso, cunt lips, and inner thighs with clothespins. You'd think with all of those pegs pinching my flesh, I'd have called out \"red\" before then, but the intense pain had me riding a wave of endorphins that caused pleasure to pulse through my body, and my mind to float in the clouds . The wave crashed, but not in a good way, when he clamped clothespins on each of my pinky toes. It felt like two elephants had started tap-dancing on them, and I screamed \"yellow\" so loud the dogs were barking outside his bedroom door.\n\nOnce again, Patrick acted quickly but calmly and removed the two offending clothespins. I smiled gratefully up to him, my eyes wet with tears. His plan from the beginning had been to remove the pegs as I orgasmed, and the thought of him removing them without that bliss sounded like a nightmare waiting to happen. I urged him in broken words to continue, and before I know it the slim vibrator that had been resting dormant in my ass buzzed to life, while his Hitachi wand was pressed against my cunt lips and clit.\n\nI figured he'd want to make me come quickly, but instead once he saw me writhing in pain and pleasure below him he took his sweet time taking me to the edge and back again, over and over until a sheen of sweat covered my body and moisture flooded between my legs.\n\nWhen finally he allowed me to come, he left the wand between my legs and then two by two quickly removed the pegs from my body. Fresh screams and tears wracked my body as pain and pleasure twisted in my head for dominance until it didn't matter which one took control. Once they were all removed, I collapsed onto my back and continued a long, cathartic cry as he gently soothed my fiery skin.\n\nOnce my tears had subsided, I turned towards him with wide eyes. I could see him scrutinize me, trying to discern if I was okay. A look of relief flooded over him when with a shy smile I'd asked him to promise to do that again one day...soon.\n\n***\n\nPete and Patrick have torn apart my kitchen, leaving me without a fridge or stove. My camp stove and a cooler have been good temporary substitutions. They've worked together before, and seem to get on well with each other except for their taste in music, which amuses me to no end. Whereas Pete would prefer listening to classical all day, Patrick needs a little more energy in his music to keep him going.\n\nI've remained adamant about keeping our relationship private from Pete, wanting to keep our personal and professional relationships separate from each other. Patrick has been less than thrilled with this arrangement, obviously feeling frustrated by his lack of say in the matter. While he has no interest in sharing the D/s nature of our relationship, he doesn't see the harm in Pete knowing that we're dating. Although I feel more secure than ever with him, I still prefer that Pete not worry about whether his job will go south if our relationship does. I know this doesn't make sense since the two work independent from each other, but it's just a feeling I have.\n\nPatrick has acquiesced, grudgingly, but I've noticed that as soon as Pete leaves in the late afternoons, he is quick to get his dom on, and more often than not I'm naked within five minutes and in one compromising position or another. This evening is no different, and once Pete is gone I find myself naked, kneeling on a cushion with my legs spread and my hands clasped behind my back grasping the opposing forearms as Patrick cooks a stir fry in my electric wok.\n\nDespite my current state, we're having an amicable conversation when all of a sudden Patrick falls silent mid-sentence, mouth slack and breath caught.\n\n\"What?\" I utter, when from behind me I hear footsteps. My heart begins to slam in my chest.\n\n\"Uh...um...sorry,\" says an obviously mortified Pete. \"I, um, forgot my phone. I would have called, except... Oh, shit... I didn't have my phone.\"\n\nI don't turn around, for obvious reasons, but slowly move my arms around to cover my breasts, and close my knees together. \n\n\"It's okay, Pete,\" I barely whisper, my throat suddenly incredibly dry.\n\n\"It's... just past you on my work table.\" He says gruffly. In my peripheral vision I see him walk quickly past me, grab his phone, and hightail it past me once again.\n\nWith a quite mumble, Pete says goodnight once again and hightails it out of the kitchen.\n\nMoments later the side door slams shut.\n\n\"Fuck, fuck, FUCK!!\" I shout, bolting up from the cushion and towards my bedroom, but Patrick moves faster and is quickly in front of me, blocking my exit from the kitchen. Sounds of the stir-fry sizzle in the background. \n\nHe places his hands on my arms firmly, holding me at a distance as he looks down on me. My eyes are wide and my chest heaving; a rush of embarrassment, anger, and panic surges through me. He's breathing hard too as the two of us stand there, our wills clashing.\n\n\"Back on your knees, Corrine; I didn't say you could get up.\" His tone is firm, and a bit harder than I'm used to from him.\n\n\"Are you fucking kidding me? Move, Patrick. I want to get dressed. I'm not up for this anymore tonight.\"\n\nPatrick removes his hands from my shoulders, holding his palms up for a moment. He doesn't move from the doorway, though, and continues to look down on me, a mix of question and challenge in his eyes.\n\n\"You're not up for what tonight?\" \n\n\"This...\" I gesture wildly to the cushion on the floor, then wave my hand in front of my naked body. \"...this game, this role-playing. Fuck it!\" With each word, I feel my chest clench. I don't mean them, what's between us has been anything but a game, but I can't seem to rein in my own outburst. I feel flustered and out of control.\n\nStanding there with my hands on my hips, breathing rapidly and ready for him to get angry and lash out at me for my harsh words, I watch, instead, as he composes himself. It's subtle, but I see a resolute calm take over, I see his jaw relax as the tension around his eyes softens. \n\n\"Do not move,\" is all he says as he walks past me. My back to him, I can hear him working on the stir-fry before I hear the sound of the Wok being turned off. We both know that what I chose to do in this moment, whether to stay where I am or run for the bedroom, will decide not only the fate of the evening, but potentially the direction of our relationship.\n\nI stay. \n\n\"Return to the cushion and resume kneeling.\" His voice is vacant, without emotion. This scares me more than his anger.\n\nI surprise myself by how quickly I trot back to the cushion and resume my position on my knees, hands locked behind my back, grasping my forearms tightly. I'm desperate for some sign of approval for my compliance, for any sign of affection from him. Instead, I watch as he dishes up one plate of food for himself, grabs a beer from the cooler, and walks over to the table.\n\nNormally by now, I would have been invited off the cushion, dished up our plates side by side, then sit in our usual seats at the table, talking about our days. Although I may be naked and he clothed, the dynamic tended to be pretty laid back. Instead, I watch from my cushion as he takes a seat at the table and opens his beer.\n\nI'm comforted that instead of taking his usual seat, which would have put his back to me, he picked a chair that faces me. His eyes pass over me for the first time, impassive, as he sets his plate down and begins eating. I can't stand the silence, the not knowing what he's thinking.\n\n\"Patrick, I...\"\n\n\"Quiet.\"\n\nThis shuts me down in a second.\n\nWhile his tone is sharp, his eyes are now gleaming. It's clear that my obedience has pleased him, and I can see the wheels turning behind his fiery eyes. Something about that look just makes me melt inside, and creates quick changes to my body and psyche. My nipples and areolas quickly constrict, and my blood runs hot as it courses through my veins. My focus is solely on him as all else drifts away.\n\nMy excitement is obvious to Patrick, and as if to reinforce the current disparity in our positions, he casually begins to eat. For some reason this excites me even more and it's taking all of my will to keep my knees spread. My cunt and ass begin a rhythmic clenching that both drives me on and frustrates me. I can feel droplets of fluids slide over my labia, onto my perineum. Keeping me on the floor as he eats our dinner, seemingly indifferent to my needs, drops me into that lovely focused headspace, where all I want to do is to please and serve him.",
        "Very calmly, he begins speaking.\n\n\"It would seem we have some things to talk about, some things to clarify.\"\n\nI open my mouth to speak, but he cut's me off before I can.\n\n\"Before you say anything, I have some instructions for you.\" He pauses and a slight smile forms in the corner of his mouth.\n\n\"As we talk, I want you to touch yourself. Play with your cunt...your clit...your tits. Keep yourself on edge, but do not allow yourself to come. Begin now.\"\n\nHe doesn't have to ask twice; immediately my hands let go from behind my back, and before the pins and needles have time to hit after having been in position for so long, one hand begins to cup and squeeze one breast as the other dives down to my wet cunt and immediately drives two fingers in deep, down to the last knuckle. My palm begins a steady massage over my engorged and exposed clit as my hips begin a rhythmic sway. Heat and pressure begin to build rapidly within my core.\n\n\"I'm going to ask you some questions now, and I don't want anything from you except a direct reply to the question I've asked. When I'm satisfied with your answer, I'll move to the next one.\" He pauses to take bite of his food before continuing. \"Answer me now to let me know that you understand. Address me as Sir, or Master, for the rest of the evening, or risk a significant punishment.\"\n\nMy eyes widen and my hands stop for a brief moment. We've never brought up the word, or concept of \"Master\" before, and the fact that he has now only stresses that tonight's conversation is going to be pivotal for our future. Hearing the word slip so easily from his mouth makes me question how long he's wanted this, which sends a jolt of both apprehension and pleasure to rush through my body, in a way I would never have expected. Whereas calling him 'Sir' is an accepted, societal expression of respect, the moniker 'Master' leaves no room for misinterpretation that it's anything less than subservience and ownership.\n\n\"Yes, Sir,\" I humbly reply in a whisper. His eyes study me intently, accepting that I have chosen to continue calling him 'Sir' but I see challenge in them too. He wants more from me, when I thought I've given him everything.\n\n\"Louder, slut,\" he commands.\n\n\"Yes Sir!\" I shout out just as I pinch my nipple with a little twist.\n\n\"Keep those fingers going; stuff a third finger into that wet hole. Put on a show for me.\" He is clearly enjoying the show, as his eyes shift slowly from my breasts, to between my legs, and back again.\n\nI let out a grown as my third finger joins the first two, and my body begins to hump itself against my palm. I can feel the telltale tingles begin to cascade through my nerves and focus in my pelvis, alerting me to my impending orgasm. By forcing my body to cease its movements and focus on my breathing, my desires ebbs just enough to prevent me from crashing over the crest.\n\nPatrick pushes his half eaten plate to the side, finishes off his beer, then leans forward with his elbows on the table, one hand enclosed around the fist of the other, except for his thumb that is rubbing back and forth across his plump bottom lip as he watches my slutty show, just for him.\n\nHe doesn't say a word for the longest time, and I edge three more times as my cunt juices begin to flow freely, soaking the cushion below me. The flesh of my breasts is mottled red from my squeezing and pinching of the tender mounds, my nipples hard and hot.\n\nHis voice is barely a whisper, but I hear him murmur, \"You are the hottest, dirtiest little slut that I could have ever dreamed of. Those three holes are mine, Corrine. You cunt is mine. Your mouth is mine. And that sweet, tight little ass is mine.\" I know the words should upset or shame me, but instead I let out a choked gasp as they feed me instead.\n\nHe shakes his head a little, reaches under the table to adjust his cock within the confines of his shorts, and once again looks all business.\n\n\"Corrine...while I know you didn't mean our relationship as a whole, tonight you mentioned that what we're doing here, what happens when you submit to me, is just a game, or a role you're playing. Is that really how you feel, because I'm damn sure not playing any games here?\"\n\n\"No Patr..., No Sir!\" I practically groan as I shout out my answer. I need him to know that's not how I feel, but I'm trying to follow his rule of not saying more than he asks.\n\n\"Then I can only assume you were trying to hurt me when you implied it did. I understand you were upset by Pete's discovery, but it's done, and I think you'll be surprised by how come tomorrow he won't give a damn about it. We're all adults here; everyone has their kinks. I'm sure he has his own and knows damn well how to be discrete.\"\n\nI take a deep breath, and nod my understanding, but feel like I need to voice a lingering thought before we can move on. I pull my hands away, and place them on my thighs. Looking into eyes, I express my concern.\n\n\"I'm sorry, Sir...for reacting the way that I did. I've never felt so exposed in my life, not only in the literal sense, but also my character. Submission has always been a very private affair for me, and having Pete see me like that was incredibly unnerving.\" I pause and take a deep breath. \"While I wish I didn't say what I did, I also wish that you had been more sensitive towards my feelings.\"\n\nPatrick bites his lower lip as he weighs his response, then nods.\n\n\"You're right, Corrine.\"\n\nI let out the breath I didn't realize I was holding as relief floods me.\n\nHe continues. \"My fallback tends to be asserting my dominance, my authority, with each rebellion you present me with. Admittedly, I've worried if I didn't, some sort of precedence would be set, and the whole dynamic we've established would collapse. I see now, I need to look at each event individually, and determine within the best of my ability when it may be time to take a step back. I can see now that this was once such event.\"\n\nMy heart wells up with love for him. \"Thank you. You have no idea how much that means to me.\"\n\nWe both notice at the same time, that my hands, as if on their own volition, have moved back to touching myself. I blush at my inability to control myself, while a wicked smile crosses his face.\n\n\"I'll grant you the option I didn't give you before. Would you like to continue with my line of questions, or save it and just have a quiet night?\"\n\n\"Please, I'd like to continue.\" My breathing is becoming a little shallow as my excitement crests again.\n\nHe gives a single nod. \"Okay then, we'll continue. Edge yourself again. Sit up off the cushion enough to play with your ass too.\"\n\n\"Ugh...\" escapes my mouth along with my breath. I'm afraid that even a fingertip on my tender, tight ring will send me crashing into bliss; but I comply.\n\nRaising up off of my heels, I lean forward just enough to reach behind myself and with my third finger I begin to lightly caress my most sensitive hole. My other hand, three fingers stuffed inside my swollen cunt, resumes fucking and grinding against my mound. A quick swipe of my finger over my soaking perineum lubricates it thoroughly, and I press the tip into my asshole with ease. Electric shocks careen through my entire pelvis and gut as I begin to pant through my parted lips.\n\nFor a moment it's almost as if I'm outside of my body, watching down as I fuck myself with my own fingers on his command, lost to the pleasure it's bringing me. Both embarrassment and wanton pride flush through me for the lack dignity and composure I'm displaying. Who is this woman, who only years before was ensconced in a vanilla marriage?\n\nI catch myself from coming, pulling back just as the tingles begin to take hold of me once more. I look to Patrick for his approval, and receive it in the form of a lustful, but loving grin from him.\n\n\"Next question, Corrine,\" he sits up higher in his seat. \"Are you up for going deeper, for more experiences where I push you harder...perhaps go a little darker? Are you willing to submit to me in ways that demonstrate even more my dominance and control over you?\"\n\nHis question floats through me and fills every corner of my mind. Without hesitation I know the answer. \"Yes Sir. Please...please push me, take me...teach me. I want to feel consumed. I want to be owned by you.\"\n\nWe both are breathing hard, my last words are not lost on either of us. Like 'Master', the meaning of 'owned' is absolute. I want to give him everything I have, to expose myself to him and leave myself raw and vulnerable, yet know I'm safe and protected by the very same man.\n\nHe slowly stands, and with no rush to his movements walks over and stands above me. Unsure of where to look, my eyes stare straight forward, only to be met by the huge bulge straining against his shorts. I can smell him, through those shorts, and my mouth begins to water. I close my eyes as I take in the masculine smell of sweat and precum.\n\n\"If you want to be owned, then you will call me Master.\"\n\nMy thoughts spin as I nearly lose control of my barely reined in orgasm. Tears begin to form in the corners of my eyes as I plunge another finger into my sensitive ass. Once again, we're at a crossroads that once breached we can never return from again. Once I call him 'Master', all pretense is over, and I realize I want nothing more.\n\n\"Yes Master! Please Master...please...\"\n\nNo longer able to control his hunger, Patrick's hands, in rapid-fire movements, tear at the button and zipper and quickly both the shorts and his boxers drop to his ankles. His cock stands out, angry and red, from the confinement; precum liberally drips from his slit. Without a word he grabs the back of my head, twisting the hair as his fingertips graze my scalp and pulls it back and down, effectively opening my mouth to him. With his other hand he guides the engorged and purple head deep into my mouth until it hits hard against the back of my throat, causing me to gag and choke for a moment until I recover and close my mouth snuggly around him.\n\nAs he fucks my mouth, a litany of words pours from him.\n\n\"If I'm going to own you, you'll have to give me your complete and total trust Corrine. You'll have to expose yourself to me...everything. No holding back. No hesitation. No shame. Safe words will always be a must. I insist. But one-hundred percent honesty and deference to me when I ask for it will go unquestioned. Do you understand?\"\n\nWith obvious effort he pulls his cock from my wet and sloppy lips, using his hand to wipe my mouth and chin dry so I can speak.\n\n\"I...I think I do. I want it; I do...just...not 24/7.\" I know we've talked about this before, but it must be said before we go forward.\n\nHe takes in, and lets out a deep breath; consciously making the effort to slow his own thoughts down and explain his thoughts better. \"Fuck 24/7. Trust me. I don't want that either. I promise. I'm not going to be unreasonable, but this will be a change for us. We are so close to it already. You've been such an exquisite submissive Corrine...we just need to break through some last barriers to get where we both want to go.\"\n\n\"Anything, Sir.\" I sit up taller on my knees and look him straight in the eyes for the first time since this all started.\n\n\"Anything, Master.\" As I say those words, a clear image comes to mind of what that barrier might be; of what it would take to truly make myself as vulnerable to him as I have ever been, but before I can say it myself, he beats me to it.\n\n\"Then tonight, my sweet submissive, your cunt is going to accept my fist.\"\n\nWith that, his cock plunges in my mouth once again. He fucks it with abandon as I gag and drool.\n\n\"Hands behind your back,\" he orders, and I quickly pull them from my cunt and ass and grasp then behind me. With those words he's effectively prevented any more pleasure for myself; my own need for orgasm denied. His other hand continues to control my head, bobbing it up and down over his increasingly swollen cock. Quickly he is coming in hard spasms into my mouth, as he lets out anguished moans and his seed drips down the back of my throat.\n\nPatrick pulls out and immediately drops to his knees, pulling me into a tight embrace. I'm still swallowing and panting from my efforts, and he comforts me with words of love, along with caresses through my hair and down my back. Reaching onto the table for a napkin, he pulls back enough to lovingly wipe my mouth and face of drool and tears.\n\nI look at Patrick and feel overwhelmed by the love I have for him, and I want to show him that I truly am his. With no uncertainty I feel completely at his mercy; I feel owned and with that a sense of belonging and acceptance of myself that I've never experienced before.\n\n\"Master,\" I say softly, feeling the word slip through my lips in reverence of him. His eyes burn into me and the look leaves no question that the reverence is quite mutual. He gently stands and tugs his boxers and shorts back up before pulling me up level with him. He zips his shorts, but leaves them unbuttoned which has me completely entranced by how sexy he looks.\n\nHe pulls a chair out from the table. \"Here, sit...\" He moves to the sink to fetch me some cold, filtered water first, then to the wok for a plate of food. I chug the water quickly, my thirst almost unquenchable. He refills my glass once more before sitting down.\n\n\"The night is young my sweet sub. Eat. I want you strong for me, because I'm going to take a lot from you tonight.\" He looks more relaxed, once again, and a sly smile lightens up his previously penetrating expression.\n\nI just sit and stare at him for a moment. My mind is slowly wrapping around what lays ahead of us tonight. His fist. An act that I never believed I'd ever experience. One I've shamefully craved and kept secret, even to my online dom, Robert. I watch as his hand grasps his beer, and sharply intake my breath as I see the size of it. I look at each finger, each knuckle, the way his hand covers more of the bottle than not. My mouth drops open as my thighs press together involuntarily. My eyes shoot up to his in panic.\n\n\"Are...are you sure, Master? I'm having a hard time believing your fist will even fit.\" I blush a little, taking small sips from my water and trying to pretend this is the most normal conversation we could be having.\n\n\"You are snug, love, but no fear. It will happen, and you are going to feel me so deep inside you, baby. It may take a while, but I'll take my time and make sure you'll be as slick as you've ever been.\" With that his tongue darts out and moistens his lower lip. I nearly combust.\n\n\"Just picture it Corrine, because I can.\" He takes my hand and begins rubbing my palm with his thumb. \"My cock is already so hard, thinking of you lying on your back, hips up on a pillow, legs spread so wide for me...\"\n\nI picture this vulnerable position too, and my face reddens as I imagine what it will look like from his vantage point between my legs.\n\n\"You cunt will be so ready for me, so ready to be filled by my fingers, fist...my arm.\"\n\nI let out a moan as my juices begin to escape my pussy lips once more. Air from the fan kisses my wet cunt making me acutely aware of my need.\n\n\"Now, Please Master! Can we just go now? I can't wait any longer.\" I realize the word 'Master' is getting easier and easier.\n\n\"No.\" His words are firm, but an almost smug smile passes over his face. \"Eat, use the bathroom, clean up a little. In fact, take a quick bath. It's been a long day already, and I want you fed, relaxed, and ready for me. When you're finished, place your lube and the Hitachi wand from my bag on the bedside table, and wait for me standing at the end of the bed.\"\n\nIt takes only a second for me to dig into the delicious, but cold, food. At this point, I don't care. I want to jump through these hoops and into bed as quickly as I can. We both finish our food in record time. His amused suggestion of ice cream is met by my silent glare, before he shoos me off for my bath while he takes the dogs out for a walk.\n\nThe bath is absolutely glorious, and I'm so thankful for the suggestion. Under water, I run my hand over my naked pussy lips, enjoying the soft, supple skin. My fingers just barely graze my already stimulated clit where it pokes past the confines of its hood and I let out a deep moan as the air escapes my lungs. Not wanting to take anything from Patrick, I quickly move my hand away and allow my lust to simmer.\n\nI'm just stepping out of the bath as I hear the front door close. My heart begins to beat wildly as I dry myself, then put the towel aside, release my hair from its clip, and walk naked into the bedroom. I retrieve and place the lube and wand on the table, and just reach my place at foot of the bed just as he walks into the room.\n\nHe approaches me, leans down and gives me a gentle kiss with his soft lips, then steps into the bathroom himself. I hear him relieve his bladder, then turn on the shower. I sigh deeply, as I'm left alone with my thoughts a little longer.\n\nMy nervousness gradually quiets down as I wait for him. Only the sound of the shower and my slow breaths occupy my mind. The shower turns off, and almost in a trance, I track his movements as I hear him open the door and grab for a towel. I don't hear anything for a few moments, but then in my peripheral vision I see him walk out of the bathroom and towards me.\n\nHe's wearing a pair of dark grey boxer briefs and nothing else. The ink on his body only adds to the strength that emanates from his presence. Each one tells a story of him, and I couldn't imagine anyone of them missing. He looks larger than life as he crosses the room, and it's all I can do to remain standing in place when all I want to do is run into the comfort of his arms.\n\nHis approach matches my own desperation, and in one fluid motion his arms are around me, lifting me up and on the bed, his body covering mine as his lips crash down to my own. The unfettered hunger in his kiss takes my breath away, as his body crushes mine into the bed. I feel helpless to his need, and can barely bridle my own as I kiss him back with an equal passion. The feel of his tongue against my own, the rasping sound of his breath and groans, and the heat of his skin against mine have my heart beating wildly and my body aching with primal need.\n\nHis lips pull away as he rolls off of me onto his side, pulling me with him so that we're facing each other. Patrick's eyes are an almost crystalline blue, and the warm smile on his face fills me with both heat and comfort.\n\n\"I'm very excited about this, Corrine. It's going to be amazing for both of us.\"\n\nI can see in his eyes the truth of his words, but I've had a nagging voice in my head that keeps reminding me that this is something that I initially brought up, not him.\n\n\"Patrick...I have to ask.\" I pause to moisten my lips with my tongue. \"Is this something you've done before?\"\n\nHe nods his head slowly. \"I have.\"\n\n\"So it is possible.\" I say this almost to myself; relief that at least one other woman was able to take his fist.\n\n\"Just one woman, or have there been others?\"\n\nHe smiles at my blatant curiosity. \"Just one.\"\n\nI bite my lower lip, just a little. \"Your wife?\"\n\nPatrick gives a little chuckle. \"Yes, my wife.\"\n\nI don't know why this comforts me, but it does. I want this to be special for both of us. While I'm glad he has experience doing it, I'm also relieved this isn't something he's done with many of his past lovers.\n\nThe feel of his fingertips lightly pressing me down once again into the bed turns my focus back to him, and to my body. As one hand caresses my hair away from my neck, his lips find my pulse and he begins with gentle licks, kisses, and nibbles that send chills and tingles throughout my body. Broad strokes of his tongue are then followed by an incredible pressure as his lips and mouth suck on the tender flesh. Faint groans begin to escape with my breath.",
        "His other hand begins a slow, tortuous path down my shoulders and sides, before rising up again once more to my shoulder. He continues this path, straying at times to touch my belly, back, and hips. My skin feels like it's on fire, while a pressure begins to build in my breasts and core causing me to arch upwards, seeking contact and relief.\n\n\"Sir...Master...touch me, please.\" I barely recognize my own voice, so wrought with need.\n\n\"Shhhh, sweetheart. Relax...go with it. Breathe.\" I look up at him. His eyes are closed as his head dips down once more; his tongue darts out, making contact with the tip of my left nipple. I try to slow my breathing, but am captivated as his wet tongue draws lazy circles around the almost painfully tight bud. Cool air breezes over the peak as he moves his attention to the neglected twin, again lavishing it with his wet and determined tongue before sucking it deeply into his mouth.\n\n\"Aaaahhhhhh,\" I moan as every nerve in my breast begins to transmit pure pleasure through my body and straight to my cunt where a wave of fluid begins to leak from my swollen lips. I try to turn and wrap my legs around him, only to be secured firmly to the bed with my hands held in his over my head, and his body straddling my hips. Without interruption though, his mouth continues sucking and biting my breasts and nipples until I'm gasping underneath him.\n\nHis hard cock is straining against the boxer briefs, moistness spread out over the fabric from his precum. He begins to grind his entrapped cock against my cunt and clit, allowing for a brief moment his own pleasure before moving to my side once more. Before I can mourn the loss of contact, his hands leave my wrists and one grasps my cunt, covering it entirely, squeezing and massaging my mound until my fluid is leaking between his fingers.\n\n\"This is MINE.\" His voice is hard, wracked with passion and possessiveness.\n\nFingertips begin to explore every fold, caressing, pinching, and finally inserting deep inside of me; first one, then two, quickly followed by three.\n\n\"Spread,\" he commands, and my legs part until the muscles and skin of my inner thighs are pulled tight and begin to prickle. I wonder if this is it, if he's going to keep adding fingers until he pushes his fist in, but instead he begins to alternate between two and three fingers, fucking me slowly, then quickly; twisting his wrist to ensure pressure and lubrication is spread both on the outside and inside of my swollen cunt walls and lips. The intensity and intimacy of this act alone is bringing me dangerously to the edge, and when he leans over and entraps my swollen clit between his teeth I scream out and buck my hips against him.\n\n\"Too much...too much,\" I scream, now trying to pull back and away, the sensations so acute my body is vibrating as every nerve and muscle are dancing under his skilled hands and mouth. Thankfully, he responds a little by releasing my clit from his teeth for a moment, before resuming his attention to the aching peak with his tongue. This I can handle a bit more, but wave after wave of pleasure continues to threaten to push me over the edge.\n\nMore pressure and sensation fill the void within me as I realize he has added a fourth finger, and is fucking me hard and deep with them all. My cunt walls feel as if they are squeezing in on him, and my breath catches in a moment of panic as I wonder how I can take anything more.\n\nPatrick's mouth and tongue move slowly up my torso, his hands on either side of me, holding his body off of mine. I feel a broad stroke of his tongue between my breasts before his mouth finds mine again, my own taste and musky odor still on his lips and clinging tohis beard.\n\n\"Ahhh, fuck..., I could do this all night baby. You taste so very sweet and your body is just giving itself to me.\" His eyes shine down on me, and all I feel is pure love.\n\nHe looks down at his hand, still pumping four fingers rhythmically in and out of my wet hole.\n\n\"You're ready, baby. You're ready for me...for my hand, my arm. Your cunt is mine to take.\" His last words come out as steady and calm as the first, and I can see that despite his excitement he is totally under control.\n\nOur eyes are locked on each other's, my breathing erratic, his deep and calm.\n\n\"Deep breaths, love. You need to calm yourself, just a little. I'm going to need you to breathe through the pain, through the stretching.\"\n\nSomehow I begin to control my breathing again, although it does nothing to diminish my need.\n\n\"Ask for it Corrine. Ask for my fist.\"\n\n\"Master, take my cunt. Fill it. Own me.\" My breath now mirrors his, and an overwhelming sense of calm and peace take over. \"Please, Sir...please put your fist in my cunt.\"\n\nUp on his knees, Patrick grabs a thick, firm pillow and positions it under my hips, before reaching over me for the lube and the wand. I watch in a trance as he liberally squeezes lube over his right hand, and halfway down his forearm. He uses his other hand to spread the glistening lube over and between his fingers, then his hand, wrist and forearm. I can't believe how much he is using, but know I will appreciate it in just moments. A towel I had not noticed is lying beside him on the bed, and he uses it to wipe his left hand clean before picking up the wand and turning it on its lower setting.\n\n\"Keep your feet on the bed, knees up... legs spread. Keep your eyes on me, Corrine. Watch me. Trust me.\"\n\nI feel the wand gently press against the folds of my cunt and press in. Gentle vibrations reach up inside of me until I can feel my bowels trembling. He runs the head of the wand slowly up and down over my spread cunt lips, my slick juices preventing any resistance; back and forth, over and over until he brings it up and over my mound and leaves it there. Even on low, the vibrations are powerful. My excitement has ratcheted up once more, but focusing on his eyes and breathing allow me to experience the pleasure without pushing for release. I allow the sensations to penetrate through me, and my whole being feels light, as if I could float off the bed.\n\nTwo, three, then four fingers resume their deep penetration of my wet hole. The lubricant, along with my own juices, is creating a stream of wet sounds to emanate from between my legs. Our eyes remain glued on each other as he pushes deeper, past his knuckles. Once again, along with in and out, his hand is gently twisting and probing, loosening my resistance with each stroke. The stretch is incredible, and it feels as if he is directly pushing against my pelvic bones from every direction. Pain vacillates with surges of pleasure as he takes his time to loosen and soften my body's resistance. Soon enough though, his efforts are rewarded with my own movements against his hand as my body opens to him. Taking that opportunity, I can just barely feel as his thumb tucks into his hand and with a series of slow pushes and twists of his wrist, I can feel the broad knuckle of his thumb pass through the tight passage and he is fully inside of me.\n\n\"Aaaauuugghhh,\" is all I can say as I feel his hand ball up into a hard and rounded fist inside of me, as he slowly begins to push deeper within me. Eye contact is lost as I prop myself up on my elbows and look down between my legs, his eyes are riveted too as we both watch his forearm slowly slide in an inch or two, before pulling back again. Again, his arm slides forward, deeper this time, twisting just a little, then pulling back again. A rhythm develops, and sensation abruptly overwhelms me as I feel his fist and arm dragging against my swollen cunt walls, my cervix rebelling with each push against it. My body is thrown into a tailspin as it attempts to push him out while also sucking him in.\n\nIt is unlike anything I could have imagined or ever experienced before. It's more than just the sensation of being filled beyond comfort that is propelling me forward towards an unknown peak I've never reached. It's everything. It's watching his arm disappear inside of me, claiming me. It's the unnatural act that it is, being filled by not a cock or a toy, but a man's fist and arm. It's what it represents, the vulnerability, the ultimate giving. All of it together is lifting me to a level of submission that I could never have understood otherwise, and the orgasm that is building behind these sensations threatens to undo me.\n\nPatrick does not attempt to fist fuck me fast or hard, but continues his gentle rhythmic pace. He begins to move the wand over my swollen clit, taking care to remain over the hood lest the sensations become more intense than they already are. Slick with my cream and the lube, the wand glides back and forth over my hard clit as his fist and arm continue their movements inside of me. Before long I find myself begging for release.\n\n\"Please Master...please...agghhhhh. May I come, oh please let me come.\"\n\n\"Do it, Corrine. Come on my fist. Come until you can't take it, then give me more.\"\n\nHe doesn't change his movements or rhythm, but allows me as I begin to buck against him, the stretch and sense of being stuffed overcomes me and my orgasm flashes through me in a crazed series of spasms. Almost inhuman noises escape my mouth and my body flails on his arm. Fluid pours from my body and the release feels insanely cathartic. Aftershock continue to jolt through me, even after Patrick removes the wand from my oversensitive clit and slowly slides his lower forearm, hand, and now outstretched fingers out of my trembling channel.\n\nMore fluid leaks from inside of me and I'm feeling confused and stunned by my loss of control. I turn on my side away from him, curled into myself and begin to cry, not out of sadness but an extension of the release that has already started. The sheets are soaked. I feel raw, exposed, dirty, and incredibly vulnerable. All things I had been seeking, but together, all at once, threaten to pull me into my own head, far away from Patrick.\n\nI hear the wand drop to the floor and without words or attempts to turn me towards him, Patrick conforms his body around mine, pulling me into his snug embrace. We lay there quietly, his warmth and strength soothing me, and I feel myself opening to him again, no longer feeling shame for my needs, or for the sounds and mess I made.\n\n\"Patrick?\"\n\n\"Yeah, baby?\"\n\n\"What the hell just happened?\"\n\n\"You squirted, sweetheart.\" He pulls me in tighter, and I don't care that his arm, let alone the bed, is still covered in wetness.\n\n\"I don't...I've never...\"\n\n\"You do, and you did.\"\n\n\"Holy fuck.\"\n\nSuddenly, exhaustion roles over me like never before. It barely registers when Patrick gently helps me from the bed and guides me to the shower. Clipping my hair up, he runs the shower until its warm and coaxes me in with him. My eyes are heavy, but I can feel a soapy washcloth gliding over my body, then between my legs. I register that I am very, very tender, but the feeling only creates a gentle wave of pleasure to course through me once more.\n\nBack in bed with clean sheets, as I'm about to drift, it occurs to me that he never found his release.\n\n\"Patrick, let me...,\" my words are almost slurred a little with sleep as my hand reaches down between his legs to his now soft cock.\n\n\"No, Corrine. Not tonight. That's not what tonight was about.\"\n\nMy mind attempts to process his words, but I can't seem to get past the idea that I failed him on some level for not getting him off.\n\n\"Before you punish yourself for not serving me, you need to know that you served me harder and deeper tonight than you ever have, and for that I am grateful.\" He kisses my forehead before continuing. \"But know this...tonight you gave yourself to me in a way I have only ever dreamed of, and I am a greedy man. I'm going to want more, ask more, and demand more submission from you as your Master than I have before.\"\n\nSuddenly I'm wide awake, contemplating his words and what they might mean. I know him though, and I trust him. He loves our companionship too much to make dramatic changes, and doesn't want that to change any more than I do. I'm left with only happiness and warmth in my heart, in belonging to him.\n\n***\n\nTwo more chapter to go dear readers..."
    ],
    "authorname": "jhollander",
    "tags": [
        "bdsm",
        "fsub",
        "mdom",
        "masturbation",
        "fisting",
        "love"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/rock-and-water-ch-08"
}