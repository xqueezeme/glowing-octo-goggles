{
    "title": "The Succubus Ch. 02",
    "pages": [
        "Last night, Daniel Cambion got one hell of an offer: prove that he had the mind of a demon, and he'd become one - a sex demon, actually. If he failed, the succubus that made him the offer would, literally, fuck him to death. Now he has just seven days to fulfil seven of his greatest fantasies. First on the list: his neighbour in the room next door, a Japanese student named Emi Kurosawa.\n\n==========================================\n\nEver since she moved in just a few days after Danny, she'd been in his head. He'd always had a thing for Japanese girls, and on top of that, Emi was simply beautiful: pale, creamy skim; straight black hair; a slender, athletic-looking body. From what he'd seen, while she was far from the most heavily endowed girl he'd ever met, she seemed to have a more than ample chest. He couldn't wait to see what she was hiding beneath her sometimes quite conservative clothes.\n\nThat was what he found himself thinking as he paused in front of her door, psyching himself up to knock, trying to ignore the much larger problem of how he was going to get her to agree to his fantasy. In truth, the two of them had barely spoken, as he was too shy to make more than a little small talk with her \u2013 much of it awkward. He had no idea under what circumstances he might get her into a position where he could come on her face, but that was what the succubus demanded of him, and so he was going to have to make it happen. Just as importantly, he wanted to make it happen, and he was getting hard just thinking about it \u2013\n\nHe knocked, nervously, trying to look natural for when she opened the door. He definitely wasn't prepared for her to open it little more than a crack, peering around it looking just as nervous as he was, her face flushed.\n\n\"Oh, hey, Danny... what's up?\" she asked, and he noticed that she seemed to be wearing a bathrobe, but her bare shoulder was visible where it had slipped, as if she'd thrown it on in a hurry to answer the door. Thinking that she might be half-naked just a few inches away wasn't helping anything except his erection, causing him to shift uncomfortably.\n\n\"Hi, Emi...\" he began, trying to think what to say. Part of him just wanted to blurt out his predicament, completely insane as it would sound, just to see what would happen. Another part wanted to somehow utilise the gift the succubus had given him: a vial of her otherworldly breast milk, that she had said would arouse the desire of any girl who drank it. Yet besides the problem of trying to get her to taste it, he only had the one vial, and as difficult as Emi might be to persuade, he had even less chance of getting through his later tasks without it.\n\nEmi glanced back into the room. \"Erm, I'm kind of in the middle of something,\" she said, and Danny suddenly clicked that she probably wasn't alone in there. It was still the morning, but she was often up and pottering around in the shared kitchen by this point, suggesting she had just got out of bed for entirely different reasons than oversleeping.\n\nHe winced, embarrassed. \"Don't tell me your boyfriend is in there? I had no idea...\"\n\nShe gave him an odd look. \"Not my boyfriend.\"\n\nBefore Danny could finish making his perplexed expression, another voice chimed in. Another girl's voice. \"He was totally going to ask you out, babe!\" From behind the door, a pair of bare arms grabbed Emi in a hug, forcing her to let go of the door. It swung open, exposing Emi in her short, terrycloth bathrobe \u2013 untied, and merely held shut by her hands \u2013 and standing behind her was the owner of the mysterious voice. This girl was a little taller than Emi, but was more or less successfully using her as cover to keep her modesty, as from Danny's perspective \u2013 noting the curve of her hips, her bare shoulders, and long legs peeking out from behind his crush \u2013 she couldn't be wearing anything at all.\n\nDistracted thusly, it took a moment for him to recognise her, but it was her hair that gave it away: black, but for a bleached streak at her hairline. Usually when he spotted her around campus, she was wearing far more makeup \u2013 and clothes \u2013 to really seal the gothic image. \"Hi,\" she said, extending a hand over Emi's shoulder. Emi just looked mortified.\n\n\"Karen!\" she exclaimed, as Danny shook it, looking almost as flustered as Emi.\n\nKaren laughed, hugging Emi again. \"Sorry, boy, but I guess I beat you to her.\"\n\n\"So I see,\" Danny said, dumbfounded. Whilst his mind raced off in one direction as he considered what he'd just interrupted, he was also well aware that this might have put an insurmountable barrier in his path.\n\n\"You know, he is kind of cute...\" Karen noted, her hands wandering to cup Emi's breasts through the robe.\n\n\"Karen!\" Emi complained again. \"Sorry, Dan; I don't know about Karen, but I don't swing that way anymore. And even if she does, I'm not willing to share her!\"\n\n\"You're such a spoilsport, Emi,\" Karen retorted, continuing to fondle her girlfriend's breasts. The act was beginning to take its toll as Emi's face reddened, and her robe began to slip apart. \"Look at the poor guy. We've got him all riled up and you just want to leave him out here whilst we go and have fun?\"\n\n\"Er, I don't suppose I get any say in this?\" Danny asked, his eyes locked on Karen's hands.\n\n\"Of course not, silly boy,\" Karen laughed, slipping her hands under Emi's robe. The Japanese girl gasped. \"Now get in here and watch \u2013 right, Emi?\"\n\nEmi just nodded, letting her robe fall open as Karen continued to grope her, squeezing her breasts together to show off her cleavage, rolling her nipples between her fingers to elicit more pleasured gasps. Dan managed to drag his eyes away, following the smooth lines of Emi's stomach down to her completely hairless pussy. When he continued to stand there gawping, Karen simply guided Emi back into the room with one hand and reached out to drag Dan in with them with the other. In doing so, she revealed herself to him clearly for the first time, letting him discover that she was just as gorgeous as her girlfriend. She was a little more muscular whilst still being incredibly feminine; her breasts were smaller but her nipples were pierced with small, silvery rings; and her pale, white skin was covered by tattoos: colourful Oriental-designs of koi fish and water on one arm, a tangle of ivy-like roses and thorns crawling up her thigh, and a flowery image that wrapped around a stylised heart across her upper chest that dipped between her breasts, leaving them exposed but creating a delicious contrast.\n\n\"I think today is your lucky day,\" Karen whispered to him as she shut the door, her hot breath lingering on his skin as she leaned in close.\n\nEmi seemed to be just as dazed as Karen returned to her, stripping the robe off her shoulders and exposing her completely. The gothic beauty pushed her down onto the bed and sank between her legs as they hung over the edge, burying her face in Emi's cunt whilst her long, black-painted fingernails grazed her skin teasingly. Dan stood awkwardly, not knowing what to do, but knowing he had no desire to take his eyes off the spectacle. Neither girl was paying any attention to him now, as Karen took delight in pleasuring Emi, and Emi herself was grabbing the sheets in ecstasy, pulling her girlfriend in closer by wrapping her legs around her naked back. Knowing what he had to do, and daring to take the risk, Dan started stripping off his clothes, his cock bouncing free as he slid his boxers down last. Wrapping his hand around his member, he froze up, unsure whether to jack off over the show before him, or try to find some way to join in.\n\nKaren paused in her ministrations, her chin slick with her girlfriend's juices, and smiled as she admired Dan's package. \"Easy there, boy,\" she warned, \"all you get to do is watch... for now. But take it slow, no point getting there ahead of us, is there?\"\n\nKaren's words reminded him of what he was supposed to be there to do. Dan grinned as he gripped his cock harder, starting to slowly stroke himself as Karen climbed up onto the bed, twisting around so that she could sixty-nine with Emi. Both girls moaned into the other's cunts, and Dan had to fight to keep himself from jerking off too fast and risking ruining the experience \u2013 and his chance. He tried to focus on them rather than himself, watching Karen's tongue dance down Emi's slit.\n\n\"That's right,\" Karen whispered, raising her head slightly, \"take your time, enjoy the show.\" She ran her fingers over Emi's thighs, pulling her legs apart to expose more to Dan, dipping her fingers into her girlfriend as much for his benefit as for hers. Smiling wickedly, Karen reached over to the pillow at the end of the bed, feeling around for a moment before pulling her hand out from beneath it with a long, bulbous glass dildo. She licked it seductively to both warm it up and get it wet, before sliding it along the length of Emi's pussy. \"She says she doesn't like the cock, but this always gets her going,\" she teased. That earned her a playful slap on the ass from Emi, who didn't break her ministrations on Karen's own pussy. The goth girl shivered as Emi thrust her tongue deeper, and responded by slowly slipping the dildo inside Emi. The little Japanese girl cried out, muffled by Karen's pussy and thighs, but ecstatic nevertheless.\n\nDan found his dick twitching, feeling that familiar surge as he was almost overwhelmed. He'd never been in a situation remotely like this; ignoring the night with the succubus, even if it was some strange dream \u2013 the weight of that little vial of demon's milk in his pocket, now thrown on the floor, said otherwise \u2013 his most adventurous sexual encounter was probably a hurried blowjob in a storage closet. It hardly compared to being inches away from two gorgeous girls doing everything they could to make each other come, while he struggled to contain his own oncoming orgasm.\n\nThen Karen caught his eye and winked, licking her lips and nodding gently, forming her mouth into a meaningful 'O'. Danny froze, hand on cock, wondering if she meant what he hoped she meant, but then she rolled her eyes and mouthed 'fuck me' exaggeratedly. She didn't have to ask twice, Dan almost fell over stepping forwards and thrusting the head of his shaft between her waiting lips. She let out a quiet mmf, as if trying not to alert Emi to her partial betrayal, and Dan had to suppress his own groans of pleasure. Just below his cock, the glass dildo was slipping in and out of Emi's pussy, sending the girl into trembling paroxysms, muffled cries of ecstasy coming from between Karen's thighs. Karen herself was feeling the effects of Emi's work, her eyelids fluttering, low grunts of pleasure rumbling in her throat, but she was working her tongue around Dan's head expertly. He started to thrust into her mouth and she opened her mouth wider to let him, and in moments he was following her instructions to the letter, fucking her throat with abandon.\n\nAbruptly she drew her head back, letting Dan's cock fall from her lips, and releasing an enormous scream as her orgasm hit. \"God, yes!\" she cried, digging her nails into Emi's thigh, thrusting the dildo harder than faster than before as she brought her girlfriend to the same heights. Emi's muffled moans suddenly became much louder as she gasped with pleasure, and for air.\n\nThe two girls rolled apart and Danny backed away for a moment, cock bobbing, unsure what to do, briefly paralysed by the sight of the two beauties shivering and sweating on the bed as they came down.\n\n\"Like what you saw?\" Karen asked breathily, laying with her head hanging upside down off the edge of the bed. Dan was tempted to lower his cock back to her lips and resume fucking her throat, but a needling voice at the back of his mind reminded him that, pleasurable as this whole exercise had been so far, he still needed to achieve something more.\n\n\"Oh, yes,\" he mumbled, staring at Karen's tattooed breasts as they rose and fell with every breath.\n\n\"Want to see more?\" Karen asked, reaching out to run a hand up the inside of his thigh, cupping his balls, \"Or are you ready for something... else?\" she said, giving a playful squeeze.\n\n\"Karen!\" Emi said, lifting herself up on her elbows.\n\n\"Oh, come on, he's been good so far \u2013 and now that we've come, why can't he?\" Karen asked, running her fingers up the length of his shaft.\n\n\"Because... I'm not...\" Emi said, but she seemed distracted by Karen's hand now as she started to wank Danny's cock more vigorously.\n\n\"Don't you want to see what happens next?\" Karen said, grinning deviously, knowing she was in control. Dan stood helpless, feeling his come start boiling up, and Emi sat speechless, watching things unfold. \"Tell me, Daniel, what do you want to happen next?\"\n\nThat startled Dan out of his stupor, if only for a moment. \"I...\" he managed, but she wasn't letting up on his cock.\n\n\"I'd think you might want to fuck me, or Emi, or both of us, but...\" Karen laughed, slowly down the handjob, feeling his cock twitch dangerously, \"I think we've been a bit too stimulating.\"\n\n\"A bit,\" Dan admitted, glad for the moment of respite, but yearning now for her to finish \u2013 to come, any way he could.\n\n\"Do you want to...?\" Emi asked, trailing off, unable to say it. She was watching an enormous bead of precum drip from Dan's cock.\n\n\"Come all over us?\" Karen suggested helpfully.\n\n\"Your faces,\" Dan blurted, earning a gasp from Emi and a chuckle from Karen.\n\nShe looked at Emi. \"I'm game, darling, are you?\" she asked. The Japanese girl nodded hesitantly, still mesmerised.\n\nKaren was the first to slip off the bed and kneel on the floor beside it, crossing one arm under her breasts to lift them up and together as she took hold of Dan's cock again. When Emi didn't follow right away she rolled her eyes and laughed, grabbing her girlfriend by the ankle and playfully dragging her over. The Japanese girl slid off the bed nervously, kneeling besides Karen, her hands in her lap as if to provide a little modesty \u2013 far too late.\n\n\"Come on, Emi,\" Karen said, leaning across to kiss her neck, with her free hand sliding around the girl's back to stroke her hip, \"it's a little late to turn back into a wallflower.\" Jerking Dan off with one hand Karen turned up the heat on Emi, pulling her closer so that the two girls knelt side by side, thighs pressed together. The goth cupped Emi's breast and bit at her neck, causing Emi to moan softly. Soon the Japanese girl's hands were busy once more \u2013 one buried in her own lap, the other in Karen's; both girls shifting to meet Emi's thrusting fingers, already burning hot from their lovemaking on the bed.\n\nDan was almost ready to explode, and Karen must have been able to feel it. Still distracting Emi with her roaming fingers and tongue she pulled him closer until his cock was just a few inches from Emi's face, Karen's hand a blur as she jerked him faster. \"Oh god,\" Dan groaned, feeling the come surging up from his balls, \"I'm going to \u2013\"\n\nEmi's eyes snapped open as she realised what was happening, but she didn't pull away, only flinching slightly as the first string of hot come splattered across her cheek. After a moment of hesitation she opened her mouth as a second shot hit her face, while a third landed partly on her waiting tongue and partly on her lips, dripping down onto her chin. A fourth and fifth shot followed, filling her mouth with the creamy white liquid. Karen laughed gleefully as she kept milking Dan's cock, redirecting his remaining spurts so that they splashed across the tattoo between her breasts. As Dan's knees sagged she brought his wilting dick to her breast, smearing the last of his come across her pierced nipple.\n\nDan dropped down to the floor as soon as Karen let go over his hypersensitive cock, all the energy drained out of him. He'd never shot such a huge load before. When he'd suckled on the succubus' milk she had promised him more come, and more stamina, too. He wondered if that was as big as his load was going to get, or if he could look forward to more.\n\nNow, though, he was focused on the sight in front of him: two gorgeous girls covered in his come. Emi seemed to be in shock, her hands no longer moving but still pressed into her own pussy and her girlfriend's, but Karen was smiling happily, massaging Dan's cum into her breast before raising her fingers to lick them clean.\n\n\"So, babe, spit or swallow?\" she asked, and Dan wasn't sure if she was asking him or Emi. The Japanese girl's mouth was still open, his come almost spilling out over her lips. \"Oh, just give it here, then,\" Karen said, laughing, and pulling Emi into a deep kiss. When their lips parted, his come stretched between them.\n\n\"Wow,\" Dan muttered, blown away.\n\n\"It's like you've never watched two girls snowball your come before, Daniel,\" she quipped, reaching over to give his soft dick a squeeze. He stiffened slightly already.\n\n\"I can't believe we did that,\" Emi said, coming back out of her shell. She looked down at her the come that had dripped from her chin and onto her chest, collecting in her cleavage. \"I've got to take a shower.\"\n\n\"Mmm, don't waste it,\" Karen scolded, leaning over to run her tongue up Emi's sternum, licking up the line of come. She continued up the other girl's body, planting kisses on her neck and jaw before forming her tongue into a point and licking the come from Emi's cheek. \"Okay, now you can go.\"\n\nEmi nodded distractedly, getting up and heading into her room's bathroom. Moments later the sound of the shower running filled the apartment.\n\nKaren watched her leave and waited until the water was on before spinning back to Dan, biting her lip seductively. \"God, that girl can make me come, but sometimes I just want something inside me, you know? Fuck me before she comes back?\"\n\nDan blinked, feeling his cock surge back to life. A quick recovery was another benefit the succubus had promised him and Karen's request was enough to set him off. \"I don't know, that was amazing but \u2013 won't Emi mind?\"\n\nKaren waved a hand dismissively. \"Even if she would, she doesn't have to know \u2013 trust me,\" she continued, getting up on her hands and knees and pointing her ass at Dan, \"she takes forever in there, even when I'm not in there with her, fucking her up against the walls. Now get your cock over here and fuck me before I decide to use a dildo instead.\"\n\nUnable to resist the request a second time, Dan positioned himself behind Karen, grabbing her slender hip with one hand and guiding himself into her soaking wet pussy with the other. He was rewarded with a low moan from Karen and an intense heat engulfing his cock as he thrust into her.\n\n\"God, yes, fuck me \u2013 do it, hard and fast,\" she ordered, grinding her ass into his pelvis and pushing him deeper inside her.\n\nHe obliged, grabbing her by the hips and pushing her away as he drew out, only to slam back into her again. She was already so wet from Emi's fingers and tongue that he had no trouble working up to a steady rhythm, the sound of each thrust as his hips met her ass barely audible over the sound from the shower.\n\n\"Yes!\" Karen cried out, biting her lip, and reaching back to grab his thigh and hold him in place as she came suddenly, her nails digging into his skin. Knowing he'd pushed her over the edge again was almost enough to finish Dan off for a second time and he managed a few more thrusts, breaking Karen's hold, before coming himself. Karen gasped as he came inside her and slid forwards, his final spurts splashing onto her ass and lower back. Even though it was his second load of the day, it was still huge.\n\nKaren spun around with a hungry look in her eyes and lowered her mouth onto his dick once more, swirling her tongue around the head as it softened and sucking up the last of his come. Dan almost fainted from the rush as she tended to his sensitive cock and finally had to pry her from his crotch before it became too much. What he saw as she sat back, though, shocked him even more than the sex \u2013 and yet, it explained everything.",
        "\"You're only just figuring it out?\" Karen asked, flicking her tongue across her lips to catch a bead of come \u2013 her forked tongue.\n\n\"You're not Karen, are you? You're the succubus,\" Dan said, glancing at the shower. Demon or not, she hadn't been lying when she said Emi could spend forever in there.\n\nSmiling wickedly, Karen's features began to change. Her characteristic black hair with the blonde streak began to bleach before his eyes, eventually settling on the acid pink he recognised from the night before. Karen's face became Maya's face: her eyes larger, her lips poutier, her skin impossibly flawless. The tattoos seemed to move beneath the demon's skin, blurring, and disappearing. Even her breasts swelled, her white skin shot through with blue veins \u2013 yet the nipple rings stayed, he couldn't help but notice. Finally, Maya's tail whipped out, curling around to tap Dan on the leg.\n\n\"Not bad for an incubus-in-training,\" she laughed, her voice now that of the succubus, with just a hint of Karen's. \"One fantasy claimed, six to go.\"\n\n\"Are you \u2013 are you really Karen? Is she even real? What are you doing here?\" Dan asked, overwhelmed.\n\n\"Oh, there really is a Karen \u2013 and she really is the lovely Ms. Kurosawa's girlfriend. I decided to do a little research on the challenges you've set for yourself, and it was easy enough to slip in here incognito after the real Karen left for classes,\" Maya explained. \"After I confirmed that Emi Kurosawa has little interest in men I decided to do you a favour. I didn't want you to be stopped at the first hurdle, after all \u2013 where would be the fun in that?\"\n\n\"But she...\" Dan said, confused. \"I, you know, on her...\"\n\n\"Oh, that,\" Maya said. \"I told you about drymimancy, didn't I? Lapping on her gorgeous, hairless cunt I could read all sorts of things into Ms. Kurosawa \u2013 including the fact that while she may have changed allegiances, she still has certain fantasies it takes a hard cock \u2013 and a lot of come \u2013 to satisfy. I knew that under the right circumstances she'd be your willing cumrag. I just had to get her hot enough.\"\n\nDan blinked, once again finding the vulgarities rolling off Maya's deft tongue distracting. \"So, what, you're helping me now?\"\n\n\"My dear Daniel,\" Maya replied, \"I was already helping you. You didn't even have to use my milk! Of course, my assistance does have its price, one that you've already paid. Another fuck, and you're one step closer to addiction.\"\n\n\"Wait, you tricked me!\" he complained.\n\n\"Tricked you?\" Maya asked. \"You're trying to become an incubus, Daniel. If a little trickery is going to get in your way, maybe I should rethink my offer... we can end this right here, if you want. I'll even let her watch. Mmm, in fact, perhaps we can wait until the real Karen returns, and I can fuck you to death while you watch them drive each other to ecstasy over and over \u2013 three mortals for the price of one.\"\n\n\"No, no, I'm still in,\" Dan said quickly, interrupting her train of thought before she got too carried away with it, and before he got too hard \u2013 again. \"What happens now?\"\n\n\"Now?\" Maya smiled wickedly, and her features shifted again as she leaned forwards and crawled on all fours towards Dan. \"Now, I take my borrowed form and enjoy myself with a petit Japanese girl who really, really likes it in the ass,\" she whispered in Dan's ear, and when Maya pulled away, she wore Karen's face and body again. She winked and picked up the glass dildo still resting on the bed. Running a finger along its length, the dildo split fluidly into two, almost equally sized phalluses, and when she held the base of it to her crotch sinewy black straps crept outwards and locked around her hips.\n\n\"So if you'll excuse me, Daniel, I have a wonderful girl to satisfy \u2013 and you have another fantasy to fulfil. Tick tock.\"\n\nWith that she was gone, closing the bathroom door behind her, and leaving Dan spent, alone and more sexually satisfied than he could ever have believed."
    ],
    "authorname": "Occult_philosopher",
    "tags": [
        "japanese",
        "snowball",
        "succubus",
        "cum on tits",
        "threesome",
        "doggystyle",
        "cumshot",
        "lesbian",
        "facial",
        "voyeur"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-succubus-ch-02"
}