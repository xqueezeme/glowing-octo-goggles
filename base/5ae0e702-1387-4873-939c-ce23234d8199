{
    "title": "The Bra Salesman Ch. 03",
    "pages": [
        "***The thank-you I had included in my previous story didn't make it (probably user error), so I just wanted to say thank you to everyone who commented and emailed me. I appreciate the support, and I hope you all enjoy the continued stories! :)***\n\nChapter 3: Practice Makes Perfect\n\n\"Hey there, Albert! Come on in!\" Tasha greets me at the door with one of the loveliest, most friendly smiles I've ever seen. It's the kind of smile that seems to have its own source of light, glowing with the warmth of such pure generosity that it changes the entire dynamic of.... \n\nOk, truth be known, I am only assuming that's what her smile looks like. I have no fucking idea what she is doing with her face right now because I am too mesmerized by what she's wearing. And what is covering her naked, perfectly-curved busty body is a barely-clasped translucent robe that just touches the tops of her thighs and nothing else. \n\nShe's still talking about something or other, I think about how her day at work was, but I'm not really listening right now. I'm lost in thought about how I've been able to convince this na\u00efve, beautiful, busty woman that I'm a bra salesman who can demonstrate exercises that will help her fit into her lingerie, which involve my thrusting my dick into her mouth. Did I mention she was... what's a nice way of saying stupid? Obtuse? Simpleton? Dullardly? *Is* there a nice way of saying someone is dumber than a sack of bricks? Hrmm, I guess not. \n\nSome might judge me as a heartless beast preying upon the kindness, if not slow-wittedness, of a sweet innocent woman. All I can say in my defense is two things: first, you're abso-fucking-luetly right, I am a horrible, despicable person with no soul or any sense of decency or morality, you'll get no argument from me on that point whatsoever. And secondly, if you had seen her breasts and pussy, you would have done the exact same thing. At least that's what I like to tell myself.\n\nSo today I spent the morning at work figuring out exactly how I wanted this evening to play out, and I even bought something online for a future scheme. But for tonight, I think I have it all planned. I am so nervous now, I can't even see straight. And by that, I mean I can't focus on anything other than her thinly-veiled breasts jiggling in front of me right now. God, my hands are all wet and slimy now. Ugh, it's like I shook hands with a slug. \n\nIt must be the pressure of pulling off this plan of mine. Look, let's be honest. I am no Casanova, ok? I know that. I am not awash with ladies throwing themselves at me. I am not particularly handsome, I don't have the kind of a job that would make anyone more advanced than \"Fry Cook\" swoon, and I wouldn't even claim to be all that smart. And one look at the pitiful chasm I refer to as my \"bank account\" will convince you I'm not rich just as soon as you stop your gut-wrenching laughter. \n\nOther than being able to shovel unbelievable amounts of bullshit, I don't have a lot going on for me. I know that, ok? So I really, really need this to work. I have been unbelievably lucky up to this point, and I really, really want this plan to succeed. Part of it is to prove to myself I'm capable of pulling off something like this, but mostly it's because I really, really want to fuck her. Hey, I never claimed to be a complex man.\n\nI called her a few hours ago and told her to go ahead and get undressed by the time I came over so we could get started. No sense in wasting time, right? As I enter her apartment, seeing her standing naked under that transparent robe, clearly she had done exactly what I asked her to do. I hear her say, \"You know what I mean, right? So thank you for coming over again, I really appreciate it!\" Wait, had she been talking this whole time? Shit, I have no idea what she said or what ridiculous smile I had frozen on my awestruck face. \n\n\"No problem, I'm happy to do it!\" I quickly answer, hoping that makes sense after whatever it was she was talking about.\n\nI watched her slip off her robe and say, \"So what exercise do you want to do first?\" Now she's standing in front of me, utterly naked, and I am transfixed by her huge 48-inch udders. I feel my jaw hit the ground as my tongue unrolls across her apartment carpet like some stupid cartoonish hounddog from the 50s. Pull yourself together, man, if you're going to make this work. \"I have some ideas, do you mind if I get naked as well?\"\n\n\"Uh, I guess. Why do you have to get naked?\" So glad you asked, since I had spent time that I should have spent working on budgets and proposals at work thinking about how to answer questions like that. Take a deep breath and dive in, buddy boy.\n\n\"We're doing more than stretching muscles, remember. We're also doing some therapeutic work on your inner energy, and that requires a deep level of trust and sharing. Now our bodies will be able to communicate more effectively and help keep us in balance and harmony.\" I had been practicing that pile of crap all day, and now that I'm hearing out loud, it sounds more outrageously idiotic than it did when it was still roaming around my perverted brain.\n\n\"That sounds great!\" Oh right, outrageously idiotic is the theme I'm working with here.\n\nI stare at her gorgeous figure while I take off my clothes. Don't be too eager, just slowly take off your shirt and pants. That's right, unbutton your shirt and deftly drop it to the carpet. Now for the pants, slowly, slowly... goddamnit, I hate when my ankle gets stuck in my pants. Now I look like a dork hopping around in my underwear and black socks trying to get these pants off. So much for being Mr. Smooth. Ugh, finally got them off.\n\nAnd now for... oh man, there's no way I can hide this stiffie I have now. I'm supposed to be a professional, not some horny schmuck. \"I'm... uh... I apologize for my... arousal.\" God, I hate the sound of my voice sometimes.\n\nShe laughed, \"That's ok, I confess I get a little turned on by these exercises too!\" She covered her mouth and giggled. Her cheeks became red again, and I could tell she was afraid I was going to think of her as a slut for being aroused by my completely non-sexual professionally-certified exercises. And the truth is, after yesterday I did think of her as a slut, but slutty in a good way. And by that I mean a slut I wanted to fuck. \n\n\"I was thinking we should start with the Buhjay.\" I was going to remind her what that entailed, but she thought for a moment and then smiled with recognition. Then she immediately got down on her knees in front of me. She grabbed my stiffening cock and instantly wrapped her gorgeous lips around it. \n\nAs she bobbed her head back and forth, I groaned as I spoke, \"Remember to... oh yeah... to focus on letting your... oh yeah... your inner chi expunge... oh yeah... all negative energeeeeesus Christ!\" She was moving faster and faster and I thought I was going to cum already. Good lord, but she gives an amazing blowjob. \n\nShe stopped and removed my penis from her mouth, \"Am I doing this right?\" She looked up at me looking for my approval. I'm thinking that she could be on the fast track to being a millionaire if she ever took up prostitution, but that somehow seemed inappropriate to say out loud.\n\nI smiled, \"You're doing great. One variation of the technique involves you grabbing my hips and opening your throat as much as possible, pushing your face forward as much as possible and holding still.\" When she deep-throated me yesterday, I swore to myself I would figure out a way to convince her to do that again. And by golly I am not going to give up until I shove myself into her so deep that my cock manages to tickle her liver.\n\n\"I'll give it a try,\" she said eagerly and again devoured my cock. Sure enough, she pushed her face forward so much that my pubic hairs were pressed against her cheeks. I could feel the pressure building in her mouth, and my cock must have swollen to the size of a small daschund. Or at least that's how it felt. She held me there for about five seconds before she relented. \"Like that?\"\n\n\"Yes, keep trying, see how long you can hold still.\" And I'll see how long I can go without ejaculating jism all over your face. Which at the current rate is going to be approximately three seconds.\n\nWith a look of determination, she opened her mouth wide and swallowed as much of my cock down her throat as she could. She managed to hold still for eleven seconds this time as she forcefully sucked on my very grateful dick. Wow, I can't believe I held back and didn't cum yet. Instead of three seconds, I lasted eleven seconds, a 366% increase in time that I... why the fuck am I doing statistical analysis right now? \n\nShe released me, took a deep breath, and then shoved my cock into her throat even further and held it there for twelve seconds. I could feel every throb of my cock beating against the muscles of her throat, and I didn't think I could prevent myself from cumming, but she pulled off of me at the very last second. \"Am I doing this correctly?\" she asks as she gasps for air.\n\nI had to take a deep breath and relax my body so that I wouldn't ruin this tender moment by shooting wads of cum into her eyes. \"Yes, you're doing great. Now try moving back and forth as fast as you can.\" I took another deep breath and drove my cock into her wonderfully hospitable mouth again. \n\nHer head was thrusting back and forth so fast that her entire body was shaking, and I was transfixed watching her huge tits sway wildly. Each time her face slammed against my pelvis, her breasts would tremor and jiggle from the force. I know happiness is a subjective concept that changes from person to person, but I am more convinced than ever that an absolute, universal scale of joy exists in the universe, and at the very top of that scale is this woman's massive tits jiggling and shaking as she swallows your cock deep down inside her warm, wet mouth and her tongue lapping around your stiff shaft. \n\nShe did this for about two minutes before I couldn't hold myself back anymore. I stifled a groan, but I couldn't stifle the giant eruption of cum that filled her entire mouth and was seeping out of the corners of her gorgeous lips. \n\nI squeezed every drop of cum I could out of my dick before I realized that she probably didn't appreciate me unloading my load in her. But when I looked down at her, I don't think she realized what had happened, because she didn't stop. She kept right on crashing her head into my body as her lips sucked tremendously on my now-jismless cock. \n\nHow could she not have felt what just happened? Maybe she was actually in a meditative state. Could it be that I actually stumbled onto a truly relaxing series of exercise that could put people in a blissful state that helps them surpass the tumultuous chains that, in essence, is human existence? Have I found a path for inner peace that could help transform the world into a more perfect state of being? Oh God, this must the delusional thinking of my post-coitus brain. There is no fucking way that the path to eternal bliss involves someone sucking my cock. Duh. Get over yourself.\n\nAfter a minute or so, my cock started getting limp, and that's when she noticed what had happened. She released my dick from her mouth and looked up at me with sadness, \"Damnit! It happened again!\" she said as trickles of cum spilled out of her mouth and onto her colossal tits. \"I am so sorry!\"\n\n\"It's ok, you're really doing well.\" I said sympathetically. When I was planning my day, I thought about avoiding this scenario. I mean, why set it up so that I would cum into her mouth after only arriving at her place ten minutes ago? But as I kept thinking about it all day, I realized this is just the opening act. And my fiendish brain came up with all sorts of ideas. Y'know, if I put half this much thought and energy into doing good deeds, I'd probably have cured cancer or brought peace to the Middle East by now. But truthfully, having this woman with incredibly large breasts suck my cock is so much better. \"We can practice some more later. How about we move on to another exercise?\"\n\n\"Ok,\" she said, still disappointed with herself that she let this happen again. \"Just let me clean myself off.\" And this is where my forward thinking is going to be helpful.\n\nI clear my throat, \"Actually, I have another idea. You know that water is a natural cleansing agent, right?\"\n\n\"Oh yes, I use it for cleaning all the time.\" Don't you fucking roll your eyes right now, cum-for-brains. You look interested as she tells you obvious tidbits of information.\n\n\"Exactly. Well,\" I continued, \"studies have shown that doing these exercises in water have an equally cleansing effect. Water amplifies the benefits to your muscle, it cleanses your entire system of toxic elements, and it dramatically increases the purification of your energies.\" Amazing what a little Google research can add to your repertoire of lying bullshit.\n\n\"Wow, that sounds great!\" Boy, she really does seem excited. And by that, I mean her quivering breasts with the erect nipples seem excited because that's all I'm really paying attention to.\n\n\"Some clinics up in the northwest have found greater benefits when doing these exercises in the shower. So I was thinking we should go there and you can clean yourself while I demonstrate how to do these exercises using the natural abilities of water.\" If my boss knew how little work I did today coming up with these nuggets of inspirational crap, he would never stop burying his foot in my ass. Or hell, maybe he'd see what she looked like and then promote me for my ingeniousness.\n\n\"That would be amazing!\" and I think she actually trotted to the bathroom. Or maybe she skipped. I don't know, I was just watching her gorgeous figure jiggle with every step as we made our way to the bathroom.\n\nWe smiled at each other as we both stepped into the shower stall. It didn't take long to start the water and get it nice and steamy. I was standing behind her, as the water splashed onto her front. I found some shampoo nearby and rubbed my hands together to lather up some suds. Then I reached around her and began kneading her enormous breasts with my sudsy hands.\n\nAs I dug my fingers into her soft, wet flesh, I tried to remember exactly how I did this particular exercise yesterday, but for the life of me I can't recall. So I just tugged on her nipples, lifted her breasts up off her torso a little, and then kept rubbing my palms against her tits as I burrowed my fingers deeper into her fleshy mounds. \n\nOoooh, this is even better than I remembered. Whatever erotic images I had in my head about how this plan would go, actually having her wet, slick breasts in my soap-slippery hands is infinitely superior.\n\nShe threw her head back, and wet strands of golden hair were sticking to my chest. I looked down at her, and her eyes were closed and she had a big grin on her face. I continued massaging her damp chest, glistening with soap, and she softly moaned several times. Oof, watch the elbow against the shower stall.\n\n\"Try putting your hands behind me.\" I whispered to her. \"That should really help with the stretching.\" She did so obediently and her huge tits jutted out even further. I grasped her erect nipples between my fingers and rubbed them. Every so often I would squeeze a little hard, and she would open her mouth and gasp, but she didn't protest. \n\nOuch, I keep hitting my elbows against the shower tiles. I didn't realize how cramped it would be in here. Not that I'm complaining, mind you, it's just hard to ooof maneuver around her immense torso in this tiny place. Ow! I should have worn fucking elbow pads in here.\n\nAfter a while, I had rubbed soap all over her massive chest and my hands were now sliding all over her breasts. Damn, it's difficult to grab a hold of her tits. Goddamnit, her nipples keep sliding through my fingers every time I grab them. Fuck, they're too soapy. I'm going to have to pinch them really hard in order to keep those erect nipples in my fingers. Hey, she's actually moaning a little louder now. \n\nI decide to pull her tits apart and then plunge both of my hands deep into her cleavage and rub the tender skin on her inner breasts. Ooh, I think she likes this. She was gasping as I dug my fingers into her skin, and I felt her fingers dig into my back. Ouch, watch it with the nails. Ouch! I'm going to have OW scratch marks etched OW into my spine for weeks OUCH! But I keep reminding myself that having these mammoth tits in my fingers will make the many jars of aloe I'll need for my back all worthwhile.\n\nI have to tuck my elbows in a little to keep them from rubbing against the sides of the shower stall, since it's a little tight in here. Which reminds me, I think it's about time to move on to the next exercise. I put my mouth next to her ear and said, \"And now, let's do the Pumpmaclit Drill. I think you'll find the results to be particularly vitalizing in here.\" And then we'll see how tight it is there as well.\n\n\"You can do anything you like.\" She said in an almost trance-like manner. As the shower continued shooting water all over her chest and running down the front of her body, I kept my left hand kneading her nipples as I slid my right hand between her massive cleavage, down her flat stomach, and inserted two fingers into her drenching wet pussy.\n\nI pushed my fingers in and out of her five times, and then thrust inside her as deep as I could and pushed my fingers apart. I did that again, and she spread her legs apart as far as she could in the cramped space. The more I thrust myself inside her, the more she gyrated her hips to welcome me in. The water from the shower was making her cunt completely soaked, but even so I could tell how wet she was inside with pleasure.\n\nMy once-limp cock was now starting to tingle back to life, which was what I had hoped. I wanted to give my dick a little rest as I got her as hot and stimulated as I could and ready to fuck. By the time this shower would end, she'll be screaming my name and begging me for some holistic exercise that involves me shoving my cock into her holistically. \n\n\"You're doing so well with this exercise, I'm going to push a little harder now.\" She moaned in approval, and I began plunging my fingers inside her more forcefully. She gasped and clenched her pelvic muscles around my fingers. I figured she was so turned on by now, I could probably fuck her in the ass right here and now and she'd thank me profusely for doing so. But I'll save that until oops, my ankle just slid a little and hit her foot.\n\nI squeezed her breast as hard as I could as I slammed my fingers inside her again and again and again, and she yelped with appreciation. \"Yeeeees,\" she softly muttered, so I shoved myself inside her even harder. \"Yeeees!!!\" she said a little louder. \"Yes! Yes! YES!\" By now I was slamming my hand against her pelvis so hard, I was afraid I might bruise her, but she was loving everything I was doing.\n\nWhoa, my whole foot slid there. Crap there's so much soap around here it's getting harder to stand up. Her hands were still behind me, but now her fingers were digging into my hips and buttocks. She arched her back a little, and now I had a better angle to go even deeper inside her, which I did. Jesus, both of my feet are now sliding. I'm trying not to slide around like some goofy nitwit, but it's really getting hard to stand up here. \n\nBut I don't want to stop now, so I slammed into her again and again and again, each time she grunted loudly and proclaimed, \"\"YES!\" Maybe I should spread my feet and brace them against the sides of the stall. That seems to be helpinHOLY FUCK I just about fell down. \n\nHer entire body was shaking now, and her tits were shaking back and forth. Her hips shook with pleasure and she ferociously moved her pelvis with every thrust, allowing me to go harder and deeper inside her. Christ, I'm shoving with such force that it's impossible for me to stand here without slipping every which way. I wish my fucking feet would work with me here by allowing me to stand upright like a normal hominid.",
        "Maybe I should bail on this. I'm not sure if I can keep my footing, and I don't want to hurt her. I put my mouth close to ear so she could hear me in the steamy shower and asked, \"Do you want me to continue, or should we...\"\n\n\"Don't stop!\" she said a little louder than I think she wanted. She instantly grabbed my wrist and kept my hand in place, so I figure she must be really enjoying this. And I certainly wasn't going to disappoint her, as long as my ability to stand up vertically remained intact, so I started going in and out as fast as I could. \n\nI could feel the muscles in my forearm start to overheat, but I kept at it. I am such a fucking trooper, preserving against the odds. I can imagine a movie being made of my triumphant ordeal that will inspire others, one of those \"based on true events\" kind of films, only I don't think they make porn movies like that. Ok, quit messing around and focus.\n\nHer breasts were flailing around with wild abandon now, and her hips were thrusting into my hands so that the impact had even more force. Whoa, feet stop sliding around! Her bouncing tits were mesmerizing and my eyes followed the random movements of her nipples as I continued slamming my fingers inside her repeatedly as fast as I could. Goddamnit man! Stand up like a WHOA will you please stop moving your fucking feet?\n\nHer open mouth had a wide smile, but no sound was coming out. I could hear her breathing with quick, shallow gasps like the panting of an animal in heat. An animal with huge tits. And a wet pussy. And the SHIT I nearly fell over that time! I need to find some way to stabilize myself before I fall on my ass and ruin my plan to get her aroused and ready for more action.\n\n\"Put your arms over your head and see if that helps increase the...\" she didn't even wait for me to finish the sentence. She moved her hands up and pressed her head with her biceps and grabbed huge clumps of hair in her hands with a grip that made the veins on the back of her hands become visible. \n\nBy now my arm was exhausted, so I shifted to her other side and used my other hand to pump my fingers in her, and gave my other hand a much needed rest as I gently grabbed the nipple jutting out of her chest and held on for dear life, trying to steady myself and stop my constantly sliding feet from lurching out from underneath me. Each squeeze I made on her immense tit to hold myself up made her pant \"yes\" and I had to keep squeezing over and over. \n\nSuddenly her body began shaking again as she kept screaming \"YES! YES!\", and as I tried to wedge one of my feet into the drain to keep it still, I kept thrusting my fingers harder and harder, \"YES! YES! YES!\" until she threw her head back into her arms and sighed with satisfaction. \"UNNNNGH!!\"\n\nI figured at this point I had gotten her to orgasm at least once, if not more, so I had done what I wanted. Besides, I didn't think my feet were going to keep me upright much longer anyways. I slowed the movement of my hand and she relaxed even more. Her body calmed down, so I figured whatever orgasm she had had now passed. I lightly moved my thumb over her clitoris as my fingers moved in and out of her more gently.\n\nI had let go of her nipple and was now sinking my hand deep into her breast. The air was steamy and the shower continued to drench her entire body. God, she is hot. My cock is now fully erect again, and I'm thinking maybe I should fuck her right here and now. No, no, stick to the plan. Do not start thinking with your dick and blow this whole thing.\n\nShe turned off the shower and I handed her a towel hanging on a nearby rack which she wrapped around her own lovely rack. I grabbed another towel as she stepped out and I quickly dried myself off. \"That was very intense,\" she looked at me with appreciation.\n\n\"I told you the purifying nature of water would lead to more intense reaction.\" And now that you're good and horny, I'm hoping to have an intense reaction of my own soon.\n\n\"Thank you, those were some great exercises.\" She was still breathing heavy and her massive chest rose up and down hypnotically. Just going up and down and up and down and up... oh yeah, need to engage in conversation.\n\n\"I think you're doing very well. Would you like to try some more difficult exercises?\" Oh please say yes, oh please oh please. \n\n\"Do you think I'm ready?\" Not exactly a yes, but close enough.\n\n\"You are one of the most skilled students I've ever had, and I think you can handle some more advanced drills.\" Now she was really beaming and she looked eager to do some drills. And I was definitely eager to do some drilling.\n\n\"Of course! I want to learn!\" she says eagerly. I don't know where the term \"eager beaver\" comes from, but it certainly seems crass to use it in this situation. But nevertheless I can't help but think about it. Ok, so I'm a crass guy. Just add it to my ever-increasing list of faults.\n\nDeep breath, big guy, it's time to move on to the next phase of the plan. You lucked out maintaining your ability to stand upright before, but you're going to need all your bullshitting powers at top efficiency from here on out. \"I think we'll be more comfortable if we do these next few exercises on the bed.\"\n\n\"Okie dokie,\" and she led me into her bedroom, both of us completely naked. Huh, I guess I was expecting a little more resistance to that idea. I'm actually a little disappointed that I'm not going to use my brilliant speech about the necessity of mattresses as a way to support the comingling of our energies and wowie wow wow all of a sudden I am really glad that I didn't have to use that after all because that is just painfully god awful. \n\nI jump up on the bed first and put my legs out straight in front of me. \"Come sit on my lap here and face me.\" She climbs on top of me and faces me so that her chest is a few inches from my face, kneeling over me and straddling my body. \"This,\" Holy Jesus, could my voice sound any more like a little girl? I cleared my throat and continued, \"This is an exercise called Sitenmakok, first developed by Native Americans that works both your chest and your... hoochie.\" I really need to practice saying \"hoochie\" without grimacing my teeth. If that's what she wants to call her pussy, then you fucking call it the same thing. \n\n\"Now,\" I continued, \"I'm going to lean back a little and stretch you... down there. As we're doing that, you push your shoulders forward and I'm going to use my tongue and teeth to work on your chest. Ok?\"\n\n\"Ok,\" she sounded hesitant about this. \"But this seems kind of like... y'know... sex. You know I'm taking a few months off from sex after breaking up with Jack, so..\" Yeah yeah, I don't want to hear about your ex-boyfriend now. I just want to... Oh, the way she's biting her lower lip makes her seem so innocent, so gentle, so pure. God I want to fuck her! \n\n\"No, I know. Remember this isn't sex, these are merely holistic exercises that make people feel better. I know the nakedness and touching all seems similar to sex, but that's just due to the intimate nature of these exercises that demand a certain... closeness in order to reestablish balance and work the proper muscles. That's all, no sex.\" She's still biting her lip, I'm not sure she's buying it. Damn, maybe I've gone too far and she's catching on.\n\n\"I just don't see... y'know, how this is all that different from... y'know.\" And then she starts whispering, \"s... e... k... s\" Don't you dare laugh, do not fucking laugh, you prick! My dick is throbbing so hard I think it's banging against my pelvis like it's yelling at me to not fucking screw this up. So you do not laugh, you do not smile, got it?\n\nSometimes it's best to pull back and see if someone will follow, so I give her a warm smile and say, \"Maybe we should go back to the more basic exercises.\" That's right, act as if you couldn't care less if you do this exercise. Because goddamnit I so fucking want to do this fucking exercise. \n\n\"No, no, I want to try it. I do.\" She looked down at me, \"I mean, you're professionally certified!\" And just like that, she wraps her arms around my neck and pulls herself close to me. \n\nI can feel her warm breath on my forehead as I encourage her, \"I think you'll notice a vast improvement afterwards and your lingerie will feel even better than before.\" Oh my sweet Jesus, she's burying my head in her massive bosoms. She's actually going to trust me as a professional lingerie salesman to let me do what I want to her. All I want to do now is be the kind of person that is completely worthy of such immense trust. And by that I mean keep feeding her convincing lies so I can fuck the shit out of her.\n\nI put my hands behind my back and lean back a little. She obediently pushes her chest into my face as she slides her still wet pussy over my hard cock. Oh my god, I forgot how wonderful he pussy feels. She lifts her body up and down over my throbbing dick as I slid my tongue between her two beautiful breasts and licked the sweat out of her cleavage.\n\n\"Am I doing this right?\" she asked as I opened my mouth wide and gnawed on one of her nipples, and she shuddered. \n\n\"You're doing great! Just let yourself go and you'll mrmmf mnnm rmmfmm.\" I couldn't finish my sentence because she grabbed my head and pressed my face so far into her flesh so that I couldn't speak. Now she's humping me faster and faster. She's actually gasping every time my cock drives into her damp cunt. I don't think there's any sweeter sound than the sound of her thighs slapping hard against my thighs every time she comes down on top of me. \n\nNow that she's leaning forward even more, I can put even more of her breast flesh into my mouth. Shit, my arms are starting to cramp up and with her leaning forward, they're the only things keeping both of us up. If I thought I had to stretch and warm up before fucking her, I never would have started this... oh, who am I kidding? Of course I would have. But I would have worked out for a few days before... oh, who am I kidding? There's no way I would ever have seen the inside of a gym. \n\nOh my god, now she's slamming her soaking wet pussy down on my cock as hard as she can. Her free breasts are bouncing uncontrollably, so I use my teeth to clamp down on the nipple of her other breast. Jesus, I wish my arms were stronger. My pencil-like biceps are trembling like jello pencils. Ok, so I can't come up with good metaphors when I'm in the middle of fucking someone with enormous tits, excuse the fuck out of me.\n\nI was close to cumming, so I told her, \"Tasha, try this, instead of going up and down, move yourself side to side.\" She gasped in pleasure as she rocked her pelvis back and forth, grinding her hips over my cock. I thought this position might help me hold on longer and prevent me from shooting jism into her, but Sweet Lord Almighty her pussy feels just as incredible gyrating as it did humping.\n\nHer tits were pressing harder into my face and I could barely breathe under the gigantic orbs of delight that were bouncing around my head. I managed to get her nipple into my mouth and I sucked as hard as I could. I just wish I could get my arms to stop shaking like I drank too much coffee. Make that coffee spiked with Mountain Dew. The cherry kind. With Red Bull mixed in. Jesus, forget the drink order and focus.\n\nI heard her moan in approval, so I used my teeth to bite her aureole. She screamed out, \"Yes!\" and pushed forward on me. My quivering arms now completely gave way and I landed flat on my back with her falling on top of me, and her massive tits bury my head.\n\n\"Oh my god! I am so sorry! Are you ok?\" Of all the ways I could ever be injured, having my head shoved around by a pair of enormous tits is about the best way I could ever be wounded. I would love explaining that to any paramedics that would have to show up.\n\n\"Mmm fmmm,\" I say, my mouth still obscured under a mountain of boobs. She put her hands on the bed and lifted her torso off of me just a little, so I answered again, \"Yeah, I'm fine!\" Her erect nipples are now dangling mere inches in front of my tongue, and I can't tell you how much I want to grab her tits and stuff them into my mouth again.\n\n\"I guess I'm not ready for the more advanced exercises after all!\" she moped. \n\n\"\"Really, I'm fine!\" I was about to recommend she fall on top of me again just to prove that I was ok, but she didn't seem in the mood and frankly, I was hoping to do one more exercise.\n\nShe looked at me sadly, \"I am so sorry, I wasn't very good at that exercise either. I got lost in thought and I was thinking about my boyfriend and I just... I just... I didn't mean to put you in so far!\" I can almost feel this little tingle in my heart, as though some vestige of goodness was trying to emerge from within me again. But of course, I metaphorically stomped that feeling out pretty quickly.\n\n\"Actually you did very well,\" I said reassuringly. \"The deeper I can go in, the better the relaxing effect is for you.\" She seemed pleased with herself. I sure found her body incredibly pleasing.\n\nI knew my dick wasn't going to last much longer before spewing cum everywhere, so I decided to go for my final exercise. I wasn't sure I'd be able to pull this off, but now that I had a taste of fucking her, I was so ready to go for broke. \"Let's try one more exercise for today,\" I said, \"This one is going to be more physically demanding, but I think it will really help you.\" \n\n\"I feel so much better already! Thank you! I'll do whatever you want!\" Oh, I reeeeally hope you mean that.\n\n\"Good! This time, get on all fours in front of me. In this Poundinass Exercise, you need to rock back and forth as fast as you can while stabilize you with my... y'know, my groin.\" Crap, no matter how authoritative I say that, it still sounds like complete horse hockey.\n\n\"But,\" she paused and stood up on her knees looking at me really concerned now. \"I used to do something like this for my boyfriend when we...\" she trailed off and started to think. \n\nNo no no, stop thinking! Don't think... shit! Last thing I need is for her to remember how he complained about her being gullible for having sex with people. \"Sometimes,\" I tell her, \"exercises like this can illicit powerful memories, especially negative ones like your boyfriend.\" Yeah, blame that asshole, that's good.\n\n\"Oh no, I really liked doing it doggie style, as he called it. I used to beg him to take me like that and...\" Why is she looking at me that way? God, I think I'm smiling like a perverted freak. That is so not the look of a professional. Stop thinking about how she loves fucking people doggie style, being mounted from behind, having those huge breasts sway beneath her, rocking... no, stop smiling. Great, now she has that look in her eye, wondering if this wasn't all a big con. Shit, don't drop the ball now.\n\nI need to do some triage, and fast. \"Remember, sex is only about physical pleasure. What we're doing here is very different. This is about muscle adjustment and purifying your inner chi.\" She's biting that stupid lip of hers again, I'm not sure she's going to go along with this.\n\n\"But this kind of seems like sex. I don't know...\" Goddamnit, she's definitely starting to doubt all this, so keep shoveling like your cum-engorged cock depends on it.\n\n\"I understand, people often confuse this technique with sex, it's a common misconception. But this is a tantric exercise from the Middle East, one that is designed to make your muscles more firm.\" She's still biting her lip, but at least she's listening. \"Think of it submersing our bodies in a shallow pool. It may look like taking a bath, or look like we're swimming, but what we're really doing is relaxing and meditating.\" I don't know if her eyes could be any larger, but they're looking at me intently. \"This is meant to both strengthen your muscles as well as your inner core, but also find a way to release pent up tension and stress.\" She's still looking at me and not moving.\n\n\"I... I don't know,\" she looks down. Crap, I can tell she's lost it. She's not going for this after all. Shit.\n\nI look at her and say, \"If you're not comfortable with this, I understand.\" but she's still staring down at the bed. Or maybe she's looking at her huge tits. No, that'd be me.\n\nShe is still staring down as she whispers, \"Yeah, I don't think I can do this one.\" I cannot believe how badly I screwed this up. \n\n\"Ok. That's ok.\" I tell her. \"It's been a long day and we could probably both use a rest.\" Great. Just great. You blew it, dickhead. You had all day to come up with your brilliant plan and you fucked it all up. Here's this drop-dead gorgeous woman sitting naked on her bed, who let you stick your cock in her mouth, squeeze her tits, finger fuck her, and sit on your cock, but you couldn't leave well enough alone, could you? You had to try to fuck her doggie style, and now she's realizing what a shithead you really are. At some level, she's coming to terms with the fact that you've been lying your ass off to her, and now she is never ever going to let you anywhere near her again. That's just great. You are a fucking genius, bonehead. Good job. Way to go. Fuck! \n\n\"Yeah,\" and she starts getting off the bed. Her legs are dangling off the edge, so I reach down and grab her knee and give her a light massage. Damn she's got some nice legs. But the moment is gone, so I just gently rub her knee, knowing this isn't going anywhere. She says, \"I'm sorry, I let you down, didn't I?\"\n\n\"No no no, I want you to be comfortable,\" I say with some sincerity, I just had hoped you'd be comfortable with my cock in your cunt.\n\n\"I am, I appreciate all you do...\" she puts her hand on top of mine. \"You've really been good to me.\" Oh lady, I have been horrible to you. I am an absolute schmuck who doesn't deserve you. If I had the chance to do it all over now, I'd do things differently. I'd be more honest, I'd tell you who I was. I'd reveal my true self to you. Who knows? Maybe you would have accepted me the way I am. Maybe shoveling bullshit isn't the only thing I have going for me after all. Maybe it's the lack of honesty that's the problem. That's it, I need to come clean and be upfront. No more lies, no more cons, just be honest. That's the only real way to connect with someone, right? \"You know what, let's do this.\"\n\nWhat? \"What?\" Huh? \"Huh?\"\n\nShe suddenly flashed me the biggest smile and said, \"Yeah, your exercises make me feel so good. So yeah, let's work on my muscles a little more!\" and with that, she hopped back into the middle of the bed and got on all fours in front of me. \n\nOh thank you, sweet Jesus! My bullshit plan worked after all! Fuck honesty, jump up on that bed and pound this big-titted slut as hard you can! I put my hands on her amazingly round ass and held her hips steady while I inserted throbbing cock into her dripping wet pussy. \n\nI pushed her forward just a few inches, and then quickly pulled her towards me. My cock had been ready to cum for minutes, and now it was aching for release. I pushed her forward again and jerked her backwards hard onto my cock, and it felt wonderful.\n\nI gently moved into her, and I could feel her pussy opening wider to let me in as her tight cunt squeezed my weary cock. She groaned with pleasure as my cock throbbed inside her, and I could feel the inner walls of her vagina swelling with pleasure. My dick was now coated in a mix of her pussy juices and sweat and it glistened as it happily thrust in and out of her wetness.\n\nAs she moved back and forth over my unbelievably appreciative cock, I told her, \"Now go as fast as you can and no matter what, don't stop!\"\n\nHoly shit, I have never seen anything like it. She went wild and began rocking forward and backwards so fast. My cock was driving into her tight pussy over and over again, and she felt amazing. Her gigantic breasts were rocking uncontrollably, and I could see the sides of her enormous tits shudder every time the flesh of her ass slapped hard against my torso. She threw her head back and her blonde hair was thrashing wildly.",
        "I was grunting, but I couldn't hear myself over her screaming high-pitched yelps of pleasure. I could feel my cock ready to explode and suddenly it did, shooting streams of warm jism into her cunt.\n\nBut I had told her not to stop and, by God, she didn't. She kept driving her pelvis on top of my cock harder and faster. Now she was screaming, \"YES!\" with every thrust. My dick was exhausted, but her pussy was clenching me so tightly that I couldn't escape even if I wanted to. \n\nI could feel her skin getting sweaty, so it had to dig my fingers into her hips even tighter to make sure I didn't lose my grip. She kept hammering herself against me, and as tired as my dick was I managed to stay hard for her. Once again, I hope the movie that summarizes my inspiring ability to persevere includes this wonderful moment of incessantly ramming her pussy.\n\nShe pounded me with another \"YES!\" She slammed against me again with a \"YES!\" Another pound, \"YES!\" Again, \"YES! YES! YES! YES! YES! YES!\" I didn't know how much more my cock could take. Drops of cum were splooging out of her pussy and onto her legs. And still she kept going, \"YES! YES! YES! YES! YES!\" Holy fuck, this crazy bitch is going to rip the skin right off my raw cock. \"YES! YES! YES! YES!\"\n\nFinally she slowed down, and I could feel the muscles around her pussy loosen and let my cock go free. She collapsed onto the floor, sweaty and breathing heavy. I think my dick is in shock, and I'm not sure if it's ever going to work again. But after tonight, who cares?\n\nShe was gasping for breath and she rolled over onto her back, her sweaty, naked body now facing up, and looked at me with a huge smile, \"Wow, these are the best exercises ever.\" And then she bit her lower lip and looked at me as if she were asking a parent for candy, \"Can I ask you a favor?\"\n\n\"Sure,\" I said. I was breathing hard myself, so I hope I have enough oxygen getting to my brain to handle wherever this was going.\n\nShe looked to the side, as if she wasn't sure whether she should say anything, but then she softly asked, \"Can you come over and do these exercises with me every night for a while?\" She keeps avoiding eye contact as she keeps talking, \"I... this is embarrassing. Y'know, since I'm not having sex right now, these exercises would kind of be a really good substitute. And it will help me fit into my clothes better, right? So, could you? I mean, if you don't mind?\"\n\nI reached down with my hands towards her beautiful, naked body and squeezed both of her enormous breasts, glistening with sweat, and said, \"It would be my pleasure.\" And you know what? At long last, I could finally say something to her with complete, one-hundred percent honesty."
    ],
    "authorname": "bobrobertson",
    "tags": [
        "bra",
        "lingerie",
        "busty",
        "breast",
        "tits"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman-ch-03"
}