{
    "title": "Twice as Nice",
    "pages": [
        "<p align=\"center\">Twice as Nice</p>\n\n*****\n\n<p align=\"center\">Chapter 1 -- Desperate for Some Good Dick</p>\n\n<p align=\"center\">Wednesday. April 14<sup>th</sup>. 7:15 PM.</p>\n\n\"All I want is some good dick.\"\n\nJoy placed her head in her hands, stunned from what she'd just heard. It was outrageous even by Annie's typically brash standards.\n\n\"Is that really so much to ask for?\" Annie went on from her spot on Joy's backyard patio.\n\n\"It sure sounds like it,\" Joy chuckled, seated across the rustic wooden table from her longtime best friend.\n\n\"Don't get me wrong, dick is everywhere, but good dick is literally impossible to find.\"\n\nJoy didn't necessarily agree with that. \"There are plenty of men out there who want to date us. Create a profile on a few of those dating websites like I did. I had a ton of guys message me.\"\n\n\"And how did those dates turn out again?\" Annie asked, eyebrows raised.\n\nJoy gazed at the many flowers planted around her house while she reflected on her recent dating failures. Sadly, the past ten years as a single woman came along with plenty of loneliness, and she didn't consider herself to be picky either. She'd just never found the right guy after her divorce.\n\nBut she knew that Annie would have a much different opinion regarding both of their situations.\n\nThe two first met through their jobs in the real estate industry after college, and they'd remained besties over the last sixteen years. Now as a pair of thirty-nine-year-old women, they both found themselves single--Joy divorced with a son, while Annie never married or had children--but they took drastically different approaches when it came to their sex lives.\n\nJoy wanted love. She desired to return home at the end of her day to a great husband who would take an active role in her eighteen-year-old son's life as he finished his final few months of high school. She needed a man who respected her, took her out on fun dates, and truly saw her as an equal.\n\nAnnie, on the other hand, wanted some good sex.\n\nPhysically, the two could pass for sisters. Both of the girls were five-foot-four, curvy, and the fortunate recipients of big busts and plump backsides. In fact, the only major difference could be found facially, where Joy was brunette with brown eyes, while Annie was a natural blonde with deep blue eyes. They'd both opted to keep their hair long--despite watching their peers opt for short haircuts--and their triweekly routine of working out at the gym together helped them to stay active despite their age.\n\n\"Maybe I should say something to that hottie we always see at the gym?\" Annie proposed, taking a sip of the red wine that she'd brought over to share with her girlfriend.\n\n\"That kid can't be older than twenty,\" Joy reminded her.\n\nThat wasn't a problem in Annie's world. \"Good, because I would literally kill for a young stud who can go all night.\"\n\nJoy decided to propose a rather wild suggestion. She'd spent years trying to get Annie to see things her way, but she started to consider the alternative. Perhaps Annie really didn't want a stable man? Maybe she truly desired something different?\n\n\"Why don't you try Tinder?\"\n\n\"I did, remember?\" Annie said, electing to finish the rest of her glass before pouring herself a refill. \"I hardly got any matches. I'm too old to be on there.\"\n\n\"No, you aren't.\" Thirty-nine or not, they were both attractive women.\n\n\"Yes, I am,\" Annie argued. \"Do you think some college hunk wants a woman approaching forty? Hell, forty-year-old men don't even want forty-year-old women. You remember Greg.\"\n\nEven hearing that jerk's name got under Joy's skin. \"Greg was an asshole.\"\n\n\"You can say that again,\" Annie agreed with a laugh. \"Do you have any idea how embarrassing it was to be dumped in the middle of dinner? And because he had a sudden epiphany that I was too old for him? He's forty-three!\"\n\nJoy shook her head, annoyed as he reflected on the handful of times that she'd met Greg in person. He may have been handsome, successful, and a smooth-talker, but he ended up being quite a bastard.\n\n\"The audacity to dump me after I put up with his shit for months...\" Annie groaned under her breath. \"He was below-average in bed, and came equipped with a below-average dick as well.\"\n\nJoy was very familiar with Greg's shortcomings. She must've heard Annie complain about him a million times since her breakup earlier in the year, but she always laughed at how overjoyed her smitten girlfriend acted while things were good. It wasn't until she got dumped that she bitched about Greg's ability between the sheets.\n\n\"Truthfully, I don't even want a relationship,\" Annie confessed, topping off her girlfriend's wine glass. \"I mean, I wouldn't turn one down if it came my way, but I really just want a guy who can rock my world in bed. Be honest with me, Joy. When's the last time that you had great sex?\"\n\nJoy wasn't proud of what she was about to admit. \"It had to be back before Scott cheated on me. We actually had a great sex life while we were married.\"\n\n\"So, at least ten years?\"\n\nJoy didn't want to, but she nodded.\n\n\"Ten years,\" Annie echoed the absurdity of their situations. \"You haven't had great sex in a decade, and I haven't had great sex since college.\"\n\nJoy shot her friend a skeptical look.\n\n\"I'm being serious, Joy!\"\n\n\"You were head over heels in love with Greg for a while,\" Joy pointed out.\n\n\"Yeah, because I actually liked him,\" Annie said. \"Not because of the sex we had. Trust me, he was a total dud in bed. Do you have any idea what I would do for a decent guy with a big dick?\"\n\nJoy shook her head in disbelief.\n\n\"Just give me a big, thick, hard cock to play with a few times a week, and I would literally be the best girlfriend ever,\" Annie verbalized her dream scenario. \"I mean, isn't that what every guy wants? I wouldn't nag or bring any stress to his life. I just want a stud who I can spoil with attention!\"\n\n\"Well, good men don't grow on trees,\" Joy said after taking a long swig of wine. She needed it after Annie's latest declaration.\n\nAnnie thought to herself while she looked off into the distance. She encountered good men almost daily, but they were unfortunately almost always house-hunting with their wives and children. Maybe she'd missed the boat? Perhaps all the good men were taken? And the occasional single man worth his salt sure seemed to prefer girls half her age.\n\nWas she destined for a life of solitude? She seriously had to rely on her vibrator in order to find sexual happiness? She was almost forty! And her sex drive was higher than ever! There should be a line of guys fighting to fuck her brains out!\n\n\"What if we kill all the women under twenty-five?\"\n\nWine almost came out of Joy's nose.\n\n\"I'm serious,\" Annie chuckled, obviously joking. \"We would have our pick of the litter then.\"\n\n\"You ain't lying,\" Joy agreed, yet to stop laughing. \"How nice would that be?\"\n\nBoth of the girls lost themselves in an imaginary world where they were still treated like nineteen-year-old cuties. Who knew that time would pass so fast? No one told them that the men their own age wouldn't want anything to do with them once they were older. It didn't seem fair that neither were able to snag a great man during their youth, because it was awfully slim pickings out there now.\n\n\"Hey, Mom. Oh, hey, Ms. P.\"\n\nJoy was anything but happy when she turned to observe her son's sudden arrival. \"Oh my God, Sean!\"\n\nAnnie placed her hand over her mouth to cover her smile.\n\n\"What the hell!?\" Joy continued to scold him. \"You walked through the house like this!?\"\n\nSean looked down at himself, quickly realizing that his decision to leave his shoes outside wasn't enough. Truthfully, he wasn't completely sure what color his basketball shorts were, because he was covered in his fair share of mud. Everything from his arms to his shins was brown.\n\n\"How did this happen?\" Joy asked, dreading the trail of mud that he'd undoubtedly left while making his way through the house.\n\n\"Pickup football,\" he answered. \"It started as a game of touch, but quickly turned into tackle.\"\n\nOn one hand, Joy loved that she was the mother of an active boy. Her son was fit, athletic, and always seemed to be out and about, doing one thing or another. On the other hand, it was during times like these when she wished that she had a daughter instead. Lord knows that a girl wouldn't make half the mess that Sean routinely did.\n\n\"Did you win?\" inquired Annie.\n\nSean turned his attention to his mom's friend. \"What do you think?\"\n\nThis time, Annie made no attempt to hide her smile. What was it about eighteen-year-old confidence that she loved so much? She'd watched Sean grow from a toddler, to a gangly teenager, to the hunk she stared at currently, and she definitely preferred the latter to another of his other phases. He was so handsome!\n\n\"I'll take that as a yes then,\" Annie tittered, wishing that guys her own age could be as fit and personable as her girlfriend's son.\n\n\"Take your clothes off and I'll wash them in a bit,\" Joy told him.\n\nHe turned to head back inside.\n\n\"No!\" Joy shouted, stopping him just in the nick of time. \"Don't go back in the house!\"\n\nHe looked back at his mother, confused. \"Um...where do you want me to change then?\"\n\n\"Just take your clothes off here,\" Joy said, not about to trash her home further. She could only imagine how dirty it already was.\n\nHe took a quick peek at Annie before turning his attention back to his mom. \"In front of Ms. P?\"\n\n\"Believe it or not, but I've seen a man or two in his underwear over the years,\" Annie giggled, settling in for the show after taking another sip of wine.\n\n\"You've known her your entire life. She's basically family,\" Joy dismissed his concerns.\n\nSean wasn't so sure about that. Yes, he'd known Ms. P for as long as he could remember, but he didn't exactly view her the same way that he had back when he was a little kid. In fact, things had changed quite a bit over the past few years.\n\nHow sexy was Mom's best friend? Right or wrong, it wouldn't be honest to ignore his own mother's looks, but Ms. P had the honor of being his biggest crush for at least the last five years. Big tits, a fat ass, and blonde hair with sexy blue eyes. Not to mention that she gave off a vibe of being wild in bed. What wasn't there to like?\n\nThings only got tougher for him after Mom and Annie started going to the gym together as well. Suddenly, he found himself constantly tormented. Why did he have to love voluptuous women so much? Why couldn't he just prefer skinny girls? But no matter how hard he tried to fancy petite women, he always returned to his biggest weakness.\n\nHe was a sucker for girls with curves.\n\nThe two perfect tens seated at the table on his backyard patio were essentially flawless in his opinion. How much fun would it be to bounce around Mom's big tits before smacking Annie's fat ass? But he knew better. They were both beautiful, sexy, and equally off-limits to him, and he really needed to grow up and act his age. He should worry about eighteen-year-old girls like his friends did.\n\nAnnie may have enjoyed wine, she certainly loved to gossip, and she cherished every minute spent with her girlfriend, but she couldn't recall ever being happier than when Sean lifted his shirt over his head. So, this is what her best friend's son had grown into? Where didn't he have muscles? And what about his abs? He was ripped!\n\nHis awkward body of yesteryear was certainly behind him now, because she couldn't get enough of his chiseled physique. Where were the forty-year-old men who were built like this hunk? Why couldn't she find a guy who lived in the gym? It was exactly what she wanted!\n\nAnnie enjoyed every second of her surroundings after Sean slipped out of his athletic shorts. Good wine, great company, and a hunky jock in only his boxers: where could she sign up for this paradise every Wednesday evening? Other single women could opt for expensive sex toys and steamy romance novels, because she was significantly more interested in the real thing.\n\n\"Try not to get the entire shower dirty either,\" Joy said, rolling her eyes at how muddy her son still was.\n\nHe nodded to acknowledge that he would do his best before heading back inside to take a much-needed shower.\n\n\"Good God.\"\n\nJoy immediately turned back to her BFF. \"What?\"\n\n\"How in the world do you live with that stud?\" Annie asked, visibly smitten. \"I would be drooling every time he walked by me shirtless.\"\n\n\"Jesus, that's my son!\"\n\nAnnie didn't see the problem. \"Who cares? He's a total hunk.\"\n\nJoy glared across the table, disgusted.\n\n\"What?\" Annie asked, getting a kick out of her friend's dramatic reaction.\n\n\"Please don't fawn over my son,\" Joy said. She couldn't believe that it needed to be said at all.\n\n\"Is Sean a stud?\"\n\nJoy shook her head while looking off to the side.\n\n\"Is he?\" Annie inquired once more.\n\n\"And what's your definition of a stud?\"\n\n\"Let's see here...\" Annie started, loving the unexpected direction of their conversation. \"Sexy hair, a handsome face, and muscles everywhere you look.\"\n\nJoy couldn't pretend that Annie's description didn't fit Sean.\n\n\"There is literally nothing I love more than a fit guy,\" Annie admitted, not much to the surprise of her bestie. She had a long history of ogling the college hunks at the gym. \"Hey, don't get mad at me because you have a stud for a son.\"\n\nOnly in Annie's bizarre world could Joy be a downer because she didn't engage in inappropriate talk about her own son. Was it her fault that Sean had inherited most of his father's traits--disloyal personality excluded? So what if her son qualified as an attractive young man? It shouldn't concern any of her friends!\n\nJoy did her best to steer the conversation in a more civilized direction. She didn't need to discuss her son--regardless if it was in a positive manner or not--and she really needed to move past the idea of Annie being attracted to him on any kind of sexual level. She was twenty-one years older than him! And she was her best friend, for God's sake! It was ludicrous to picture them together!\n\n<p align=\"center\">Chapter 2 -- Getting With the Times</p>\n\n<p align=\"center\">Forty-Five Minutes Later.</p>\n\n\"You seriously need to call an Uber.\"\n\nAnnie shrugged off Joy's suggestion as she made her way to her feet. \"I'm fine.\"\n\nThe empty wine bottle on the patio table said otherwise. \"Annie, seriously, call an Uber.\"\n\n\"I'm fine,\" Annie promised. \"I live ten minutes away. It's an easy drive.\"\n\nJoy couldn't possibly disagree more. The last thing she wanted was for her bestie to get a DWI after splitting a bottle of wine with her. She would feel so guilty!\n\nShe had to do something. She couldn't allow her girlfriend to leave her house and drive home in her current state. Unfortunately, Annie seemed determined to do exactly that as she opened the sliding glass door and stepped foot in the house, and Joy dashed after her in order to put a stop to things. She needed to come up with a solution fast!\n\nAnd then the perfect idea came to mind.\n\nShould Joy have been more cautious about such a plan after their conversation earlier? Perhaps? But she credited Annie's rather crude comments to the three glasses of wine she'd indulged in. Under no circumstances did she actually have anything to worry about.\n\n\"Let Sean drive you home!\"\n\nAnnie came to a sudden stop while collecting her purse. \"Sean?\"\n\n\"Sean!\" Joy yelled upstairs, eager for her son to put an end to her worries. She couldn't live with herself if something happened to Annie.\n\nThe sound of light rumbling from above soon gave way to heavy footsteps coming down the stairs, and it wasn't long before Sean stood in front of his mother and her BFF in a clean pair of basketball shorts and a tank top. Mom had yet to change out of her cute black dress which hugged her many curves, while Annie's black skirt and white sleeveless top had a similar effect on him as the majority of her outfits. He felt rather lovestruck at the moment.\n\n\"What's up?\" he inquired.\n\n\"Can you drive Annie home please?\" Joy asked him for a big favor.\n\n\"One too many glasses of wine?\" he teased.\n\nBoth of the girls rolled their eyes, but it was Annie who felt the need to defend herself. \"I'm fine to drive. I really am. I'm not even tipsy!\"\n\nHe was happy to help his mother. Besides, he'd always had a soft spot for Ms. P. He couldn't think of much that he wouldn't agree to if she needed him.\n\n\"Sure, I'll drive her home,\" he said with a smile.\n\n\"That's really not necessary,\" Annie reiterated, embarrassed by the fact that she may have overindulged slightly. She hadn't planned to drink three entire glasses of wine!\n\nJoy looked at her son. \"Can you take her home in your car? I'll drive to her house before work tomorrow and bring her back here to get her car.\"\n\nSean saw a much simpler solution. \"We'll take Ms. P's car.\"\n\n\"How will you get home then?\" Joy questioned, not particularly confident in her own ability to drive after an evening of drinking. She was ready to take a bath and call it a night.\n\n\"I'll jog home.\"\n\nNeither girl expected to hear that.\n\n\"I could use the workout,\" he added. \"Let me grab my headphones real quick.\"\n\nJoy could only laugh at the nonstop energy of eighteen-year-old jocks, while Annie wondered how one guy could be so perfect. Generous, handsome, and full of life: it was exactly what Annie desired so badly in a man. Unfortunately, all of those incredible traits belonged to her friend's son, and he just so happened to be twenty-one years her junior.\n\nHe swiftly returned with his wireless headphones in hand as he accepted Annie's car keys and led the way to the front door. It wasn't long before he backed out of his driveway with Ms. P in the passenger seat, and the noticeable smell of wine on her breath reinforced that he made the right decision. She wasn't in any condition to drive.\n\n\"I really appreciate you doing this,\" she told him.\n\n\"You're lucky that I like you so much,\" he joked, shifting into drive to start their journey.\n\nShe observed the brown-haired hunk's muscular arm before helping herself to a long look at his chiseled face. Light stubble reminded her that he wasn't a little boy, while his lean body didn't resemble the majority of men her own age whatsoever. Not to mention that he didn't appear flustered to be in the same car as her either. It was enough to make her wet her lips instinctively.\n\n\"Can I ask you something?\"\n\nHe took a quick peek at her before looking back at the road. \"Sure.\"\n\nMaybe she really was drunk? Otherwise, why would she ever ask such a question? \"Do you have a girlfriend?\"\n\nSean tensed up for a moment. \"What?\"\n\n\"Do you have a girlfriend?\" she repeated, unable to turn away from his captivating bicep definition. He looked just like the hunks at her gym!\n\n\"Um...no,\" he said, unsure of why he suddenly felt nervous in her presence.\n\n\"Really? How is that possible?\"\n\n\"How is what possible?\" he asked. \"That I don't have a girlfriend?\"\n\nShe placed her hand on his bicep and helped herself to a squeeze. \"Yeah, how can a handsome, funny, athletic guy like yourself be single? I think you're lying to me.\"\n\nHe gulped deeply as his cock moved ever so slightly under his shorts. \"Lying?\"\n\n\"You probably have twenty different girlfriends,\" she giggled, feeling his muscular arm one last time before regaining her composure. She had to remember that she sat next to her best friend's son!\n\n\"I definitely don't have twenty girlfriends,\" he chuckled. Fortunately, he felt more like himself after she withdrew her touch from his arm, and his dick settled right along with his formerly racing heart.\n\nThose three big glasses of wine fully kicked in for Annie, and she counted her blessings that she had a best friend who always looked out for her best interest. She would be in a world of trouble if she was the one behind the wheel at the moment. The biggest negative was her urge to further prod into Sean's personal life. For reasons she couldn't explain--other than overindulging in alcohol--she wanted to be one of those twenty girls who were unquestionably in this hunk's life. Why couldn't she demand his attention the same way as an eighteen-year-old cutie?",
        "\"Do you have Snapchat?\"\n\nHe did a double take to make sure he'd heard her correctly. Did a woman approaching forty seriously just ask him about Snapchat? \"I do. Why?\"\n\n\"One of the younger girls that I work with told me to download it, but she's my only friend on there,\" she confessed, more open than ever. Wine typically kicked down the last of her resistance.\n\nHe couldn't pass up this opportunity. Drunk or not, his mother's sexy friend appeared to be flirting with him, and he loved the idea of playing a bigger part in her life than simply seeing her occasionally. Plus, she was his crush for a reason. Who knew what treasures awaited him if he became Snapchat friends with her?\n\nHe unlocked his phone after they stopped at a red light, and opened his Snapchat app before handing it to her. \"Add me.\"\n\nShe accepted his phone with a big smile. How sexy did she feel? She was about to become internet friends with a cute guy in high school! And Snapchat was totally designed to send sexy pictures to people! Well, at least that's what her co-worker told her.\n\nShe added herself and immediately listened to her phone notify her of a new friend request. She unlocked it and did something truly unimaginable only hours ago. While most single women her age did their best to find a worthwhile guy to pursue a meaningful relationship with, she was busy seducing someone young enough to be her son, and she'd never felt more alive as a result. It was so exciting!\n\nShe officially added Sean as a Snapchat friend.\n\n\"You know what this means now, right?\" he asked, accepting his phone back.\n\nAnnie slipped her phone into her purse. \"What does it mean?\"\n\n\"You have to send me pictures daily. You see, Ms. P, being Snapchat friends is a very big deal. It's the strongest bond that two people can possibly share.\"\n\nShe didn't even bother to hide her smile. Twenty girlfriends? This charismatic stud most likely had hundreds of women vying for his attention, and she wanted to outdo all of them.\n\n\"I believe that means you have to send me pictures too,\" she said, feeling particularly flirtatious from her spot in the passenger seat. Pulling onto her street intensified her desire to gain his approval as quickly as possible. \"Since we're officially best friends now.\"\n\n\"My mom won't be happy to learn that I stole her BFF from her.\"\n\n\"Well, maybe some things are best kept secret from your mother?\" she suggested, grinning devilishly.\n\nHe struggled to control his furor. This wasn't one of his many dreams about his ultimate fantasy woman. It wasn't a fictional scenario where he got to play with her endless curves for no reason whatsoever either. On a random Wednesday evening in April, as he pulled in front of Ms. P's ranch-style house, she couldn't possibly make it more obvious that she had naughty intentions on her mind.\n\n\"Yeah, maybe some things are best kept secret?\" he agreed with a grin.\n\nHe pulled into her driveway and shifted her car into park before handing her the keys. He decided to walk her to her front door--partially to make sure that she didn't fall in her mildly intoxicated state, but mostly to enjoy his final few seconds in her presence--and he couldn't deny that his view was anything other than spectacular. Why did she have to be so sexy? Why did her plump backside and big boobs have to cast him under such an intoxicating spell? Life would be so much easier if he didn't want to fuck Mom's best friend!\n\nShe unlocked her front door, giddy to know that chivalry still existed. \"Thanks again for the ride.\"\n\nHe reached into his pocket to retrieve his headphones. \"Always happy to help, Ms. P.\"\n\nWas she officially a bad girl? Or some kind of seductress? Or maybe even a cougar? Society could label her as it pleased, because she possessed no desire to act appropriately while she helped herself to one last look at the handsome guy standing on her front porch. As badly as she wanted to pull him into her house and have a little fun, she would settle for a more reserved--but still somewhat wild--way to show her appreciation.\n\n\"You promise that you won't tell your mother about adding me on Snapchat, right?\" she checked.\n\n\"I'm very good at keeping secrets,\" he said, popping his wireless headphones into his ears. \"It may be my strongest quality. See you later, Ms. P.\"\n\n\"Hey!\"\n\nHe froze after stepping off her concrete porch and down onto the walkway. Ms. P's loud shout caused him to turn around, but he never could've imagined what happened next. It was enough to send his insides into a tizzy.\n\nAnnie stepped forward, now face-to-face with him thanks to her eight-inch elevation boost. \"Don't tell your mother about this either.\"\n\nShe leaned forward, placed her hand under his chiseled chin, and planted a big kiss on his cheek.\n\nWatching him float away with a smitten smile brought nothing but happiness to her life. For once, she had someone in her life other than lackluster men and fictional characters from steamy romance novels. Monumentally inappropriate or not, she enjoyed bringing Sean into her world, and she didn't plan to release him back into the wild just yet. She had some fun to indulge in first.\n\n<p align=\"center\">Chapter 3 -- Shoot Your Shot</p>\n\n<p align=\"center\">The Following Morning. Thursday. 6:47 AM.</p>\n\nSean rolled out of bed with an unfamiliar excitement after he turned off his alarm. By no means did he qualify as a morning person, but things were far from routine as he made his way into the upstairs hallway and to the bathroom to take a much-needed piss. Bizarrely, Ms. P's kiss still lingered.\n\nHe knew the reason why he'd jogged home faster than ever yesterday. He also knew why he could barely sleep last night. Big tits, a bigger ass, and long blonde hair with striking blue eyes: he couldn't think about anything else.\n\nWhat was his next move? Somehow, against all logic, he was Snapchat friends with Ms. P, but he wasn't sure of what to do with that privilege. It was unventured territory for the young man.\n\nHe also wasn't naive enough to pretend that she wasn't tipsy during their car ride home yesterday. Was that his biggest fear? For her to reject him if he attempted to initiate something? Or her admitting that she'd made a mistake? He couldn't help but feel like he got his hopes up for nothing.\n\nAnd then he heard the unmistakable chirp of a Snapchat alert.\n\nHe hustled down the hallway and collected his phone from his nightstand. There, he found two Snapchat notifications waiting for him on his home screen.\n\nfrom Annie\n\nAnnie is typing...\n\nHe almost screamed with excitement. It wasn't a Snapchat from one of his friends, a girl at school, or even an invitation to a pickup game from a basketball player from a rival school. No, it was Mom's bestie, and she clearly wanted to resume yesterday's activities.\n\nOr did she?\n\nWhat if it was an apology for her uncharacteristic behavior? Or what if she scolded him for taking advantage of her when she was drunk? Anything and everything could go wrong, but he couldn't do much other than cross his fingers and hope for the best. The one thing he knew for sure was that he would be in serious trouble with Mom if Annie was mad at him, though.\n\nHe opened their conversation and immediately smiled.\n\nI need feedback on my outfit.\n\nSo, this was heaven? He seriously got to voice his two cents on his favorite woman's attire? Who knew that life could be so good?\n\nHe sent her a reply. I'm always here to help you out.\n\nHer emoji character swiftly appeared at the bottom of the screen, showing that she'd entered the chat. Moments later, her character began typing.\n\nOk. Hold on a minute and I'll send you a pic. You're my first snap!\n\nMaybe he wasn't in heaven? What if he was just the luckiest guy alive? His mind reeled with potential possibilities of what she had in store for him, and her long history of sexy outfits caused his building frenzy to grow. She was a real estate agent, after all. She had to look attractive! It was part of her appeal!\n\nAnd then he received her very first picture snap.\n\nStanding in front of her tall bedroom closet mirror, dressed in a black pencil skirt with white diamond designs that hugged her curvy figure, a long-sleeve v-neck top that dipped down into her cleavage, and stylish black high heels, was the single sexiest woman alive.\n\nShe had it all. Long wavy blonde hair that flowed down to her breasts, perfect makeup, a gold necklace and cute earrings, voluptuous hips, and a sly smile that reflected a girl who'd recently discovered her wild side. He never expected to be the recipient of a bedroom mirror selfie courtesy of his mother's bestie, but he was happy to be proven wrong. He also knew exactly how to respond.\n\n10/10.\n\nShe responded with a laughing emoji before her avatar started to type once more. The back might be a little too tight though. Lmk what you think.\n\nAnother picture snap came through and he nearly fainted after he opened it. This time, her back faced the mirror while she held her phone over her shoulder to capture the reflection of her backside, and he shook his head in disbelief after realizing that she'd somehow managed to outdo her original photo. Now, this was heaven.\n\nWhat would he do with an afternoon all alone with her? How about bringing her out to the pool deck in his backyard, instructing her to get down on her hands and knees, and spraying her with the hose while she twerked for him? Or what about a lap dance? Or even drenching her with oil from afar? He wasn't picky! He would settle for almost anything!\n\nBut he knew what he wanted more than life itself.\n\nHe would give anything to bend her over and fuck her unlike any of her potential suitors could. He wasn't some overweight forty-five-year-old dud. He was young! And an athlete! Only a small sector of men possessed the capability to properly take care of a girl as thick as Ms. P, and he was confident in his ability to do exactly that.\n\nHe also decided to stop holding back. Why not take a chance and make a move? What was the worst that she could say? No? It wasn't like she would tell Mom after flirting with him either.\n\nHe responded with a drooling emoji before adding 15/10.\n\nHer avatar quickly popped back into the chat before disappearing. Uh-oh. Had he overstepped his bounds? What if she found his comment distasteful? Or what if she was disgusted by the way he openly drooled over her? He couldn't help it, though! She was so fucking hot!\n\nHow could he salvage things? His mother's thirty-nine-year-old friend--who sat at the top of his list of girls he wanted to fuck--showed off her sexy outfit to him. That happened. He couldn't have misinterpreted their interaction. If Ms. P didn't actually want to be fawned over, then she wouldn't have sent him a picture showing her cleavage, let alone a photo that focused almost exclusively on her incredible ass!\n\nWhat if he treated her like any other girl? Yes, she was twenty-one years his senior, but she was still a woman at the end of the day. They all basically like the same stuff, right? He didn't know for sure, but he was about to find out.\n\nI have an extra ticket to the hockey game tonight. I'll pick you up at 6:30.\n\nIt was a move that came along with an undeniable amount of risk. First, he had no idea if she liked hockey or not. Second, he didn't have any tickets to the game tonight. Third, and most importantly, he steered their conversation in a very serious direction. There was no distorting his offer. He'd just asked her out.\n\nHe waited anxiously as the passing seconds felt like hours. Honestly, he would settle for being heartbroken sooner than later. At least he would never regret not asking her out on a date, but he hated the idea of feeling his vast amount of nerves for however long it took her to finally get around to replying. Plus, things would definitely be awkward the next couple times they saw each other if she said no.\n\nHer avatar reappeared in their conversation, and two simple sentences made him the happiest guy in the world.\n\nI can't wait! Cya then!\n\nNow, he just needed to buy some hockey tickets.\n\n<p align=\"center\">Chapter 4 -- So, It's That Kind of Date?</p>\n\n<p align=\"center\">Later That Same Day. 6:28 PM.</p>\n\nSean pulled into Ms. P's driveway before heading for the front door with a bounce in his step. When was the last time he felt so energetic? His previous girlfriends lacked the excitement of a first date with a sexy older woman, important high school sporting events didn't come along with any type of sexual element, and the midnight release of a highly anticipated video game never lived up to the hype. Tonight was different from any prior moment in his life. Tonight was special.\n\nHe bounced up and down on his toes after he rang the doorbell. He still struggled to comprehend what awaited him. In only moments, Ms. P--the same woman who he'd jerked-off to hundreds of times--would answer the door with a smile. He was only seconds away from taking his dream girl out on a date!\n\nHe would never be able to properly describe what happened after the front door opened. It almost seemed like something out of a dream. If God himself granted him the ability to script tonight exactly to his liking, even he wouldn't have summoned something so spectacular. It was a sight he would never forget.\n\nHer long-sleeve black v-neck didn't just show a hint of cleavage. It didn't even display a tad more than usual either. No, her top revealed a very, very, very healthy amount of her impressive bust, and her push-up bra reaffirmed that they were indeed on a real date. It wasn't the wardrobe choice of a girl on a casual night out with a guy who she viewed as only her friend's son.\n\nHer tight jeans hugged her thick hips to a tee. Her long blonde hair flowed, her makeup was flawless, her pouty lips popped thanks to her sexy red lipstick, and even her eyelashes were curled. Somehow, she managed to blow away all of his exceptions. He'd left for school this morning with the intention of taking her on a semi-real date, but he now completely understood just how seriously she interpreted his invitation.\n\n\"Hey, Sean!\" she greeted him with an enthusiastic smile.\n\n\"Wow,\" he remarked, blown away.\n\nShe hadn't planned to be addressed in such a strange manner. \"Wow?\"\n\nHe needed to get his act together. He made the move, asked her out, and now had the responsibility to show her a good time. The one thing he couldn't do was drool over her incredible body.\n\n\"You look amazing,\" he said, lustful yet complimentary. He was a man, after all. He couldn't pretend to not be in love with what he saw.\n\nAnnie smiled sheepishly, unable to conceal her blushing cheeks. It was nice to hear that he appreciated all of the time she'd put into getting ready tonight. Inappropriate or not, she went above and beyond to shatter his expectations, and his smitten stare made her feel like a million bucks. He kept checking out her cleavage!\n\n\"Ready to go?\" he asked, having regained his composure. He could do this. She was just a woman.\n\nShe stepped out onto her porch with a smile and turned to lock her front door.\n\n\"Holy shit.\"\n\nShe immediately spun around to face him after pulling her key out of the lock. \"What?\"\n\nHe gulped deeply. Oh boy. He'd actually grunted 'holy shit' under his breath? His chances of keeping himself together appeared to deteriorate by the second, because he'd just made the biggest mistake of his life.\n\nHow could he be expected to maintain his composure, though? Ms. P's jeans were ridiculous!\n\nHer big, fat, round ass was held back by the tightest pair of jeans he'd ever seen. How did she even manage to slip inside something so snug? That gorgeous denim hugged her butt gloriously!\n\nNow, he faced the ultimate challenge. Somehow, against his most pressing urges, he was supposed to resist the greatest temptation of his young life. But he was an ass guy! And Ms. P had the exact type of butt that he loved more than anything in the world! How could he be expected to control himself?\n\nHe just needed to look elsewhere. She faced him at the moment, for fuck's sake! He couldn't even see her ass if he wanted to!\n\nHer big tits didn't provide much relief as he quickly made his way to her beautiful face. What if he'd bitten off way more than he could chew? What if he'd seriously overestimated his own abilities? Could he even handle her provided the opportunity?\n\nOkay, he seriously needed to slow down. First, nothing would happen between the two of them. Ms. P was Mom's best friend. It wasn't like she planned to bang him! Second, he was a civilized guy. He could take a perfect ten out on a date without foaming at the mouth each and every time he looked at her voluptuous body. It was part of behaving like a normal human being!\n\n\"I asked if you have everything you need,\" he lied with a polite smile.\n\nShe raised her purse in the air to confirm that she was ready to go.\n\nSean may have been dressed casually in blue jeans and a white t-shirt, but he was anything other than composed at the moment. Despite his best efforts, he wasn't sure if he would ever grasp the fact that he walked side by side with his longtime crush. It was all so surreal.\n\n\"Well, aren't you quite the gentleman,\" Annie commented after he opened his passenger side door for her.\n\nHe could only laugh to himself as he reflected on his inner struggle. Chances were that Ms. P wouldn't find him so sweet if she knew what went through his mind after she answered her front door moments ago, but he didn't plan to ever reveal his true thoughts. He simply needed to focus on what awaited him. He had an angel all to himself for at least the next three hours, and he planned to enjoy every single minute of it.\n\n<p align=\"center\">Chapter 5 -- Too Young for Late-Night Drinks</p>\n\n<p align=\"center\">A Little Over Three Hours Later. 9:45 PM.</p>\n\n\"That was seriously the most fun I've had in forever! It was awesome!\"\n\nHe couldn't agree more. Surprisingly, he found himself enjoying her company throughout the evening more than anything. Did he love her incredible body? Absolutely. He helped himself to his fair share of glances at her plentiful cleavage while he sat next to her for those amazing two and a half hours, but he smiled equally with as much joy when he made her laugh. And she was really fun to talk to as well.\n\nIt certainly didn't hurt that they attended perhaps the game of the year either. An action-packed sixty minutes eventually ended in an exciting overtime period. Plenty of goals were scored, their team won, and everyone left the arena happy. Well, happy and maybe a little smitten. It wouldn't be entirely truthful to pretend that he was anything other than in love.\n\nHe pulled into her driveway and shifted his car into park. \"It really was fun, wasn't it?\"\n\n\"So much fun,\" she reiterated. \"I haven't been to a hockey game in years!\"\n\nHe wasn't entirely sure what to do next. Was this it? Was their date over? Or was it up to him to make a move? He wasn't positive how she would interpret his following decision, but he decided to take a chance regardless. Yes, he could end up looking like a fool, but the potential--although highly unlikely--rewards could be magnificent.\n\nHe turned off the ignition and exited his car, walking around to Annie's side to let her out. That was one detail that she made extremely clear early on. She didn't want to be called Ms. P. She requested to be referred to as Annie, so he did exactly that.\n\nHe opened her door for her.\n\n\"A gentleman through and through,\" she said, smiling as she collected her purse and left the vehicle. \"Who taught you all these manners?\"",
        "\"They've always come naturally,\" he joked with a smirk.\n\nShe found herself even more impressed after he walked her to her front door. This eighteen-year-old hunk could definitely teach men her own age a thing or two about chivalry. Sadly, it'd been an awfully long time since a man last properly treated her like a lady, and she didn't hate the idea of experiencing his flattering attitude on a regular basis. Her only problem involved his mother. Joy would kill her if she ever found out about tonight!\n\n\"Thanks again for the great time,\" she told him. She couldn't believe it, but she felt like a teenager. A cute boy stood on her front porch while an undeniable sense of awkwardness swirled around them!\n\nHe felt himself regress. His confidence faded. His usual poise encountered an unexpected speed bump, causing him to re-experience his nervous demeanor from years ago. He hadn't always been good with women, and it'd been an awful long time since he felt anything like this.\n\nUp until this very moment, his only complaint about tonight involved Annie's choice of footwear. He would've preferred a sexy pair of high heels instead of her basic black shoes, but he wasn't picky. He simply enjoyed spending time with her.\n\nThings had changed in a hurry, however. The entire night would be ruined if left her with a less-than-stellar final impression of himself. He needed to show her that he was more than just an eighteen-year-old kid, but he wasn't sure how to go about accomplishing such a feat. The last thing he desired was to make her uncomfortable.\n\n\"Well, good night,\" she smiled his way before turning back to her door to let herself in.\n\nHe needed to think. His little remaining time passed in a hurry, and he would soon be looking at an empty hourglass if he didn't come up with a plan fast. Why did he keep coming up blank?\n\n\"Can I use your bathroom?\"\n\nHis stomach churned as he reflected on his not-so smooth choice of words. That was his plan? Really? To extend the night by inviting himself inside to use the bathroom? It was the least seductive route possible, but it was what he spit out before his mind could catch up to his dumb mouth.\n\n\"Sure,\" she said, pushing the door open and heading inside.\n\nIt wasn't his first time inside Annie's house. He'd been over here before for parties, holidays, and even occasionally when his mother needed a babysitter during his younger years. This, however, was different. He'd never stepped foot inside Ms. P's home after taking her out on a date, and his mind spun while he made his way to her bathroom. He didn't have any chances left. Either he did something now, or he would live to regret his idleness for the rest of his life.\n\nHe did his best to regroup after relieving his bladder. He was nervous, slightly embarrassed, and unquestionably in over his head, but he wasn't left for dead quite yet. Miracles happened. Maybe God would show him a sign and everything would come together perfectly? Or perhaps he would never be more to Annie than her friend's son?\n\nAnd then a sliver of hope presented itself to him.\n\nHe found Annie sitting on her family room sofa with a glass of red wine in hand. It was the exact opportunity he needed. It provided him with a chance to wiggle his way back into her life, and he didn't plan to allow his charisma to go to waste. It was time to show Mom's bestie that tonight shouldn't be a one-time thing.\n\n\"I don't see my glass.\"\n\n\"Excuse me?\" she asked.\n\n\"I don't see my glass of wine,\" he clarified himself, taking a seat next to her on the couch. He was ready to turn his charm all the way up. \"Believe it or not, but I consider myself to be a bit of a wine connoisseur.\"\n\nHer eyebrows couldn't be any higher. \"You're not having anything to drink.\"\n\n\"And why's that?\"\n\n\"Um...because you're driving home,\" she said, surprised that she needed to explain the situation. \"Do you have any idea what your mother would do to me if something happened to you?\"\n\nHe observed her naked feet before turning his attention back to her alcoholic beverage. \"Is that anyway to talk to your boyfriend?\"\n\nShe giggled, rolling her eyes in the process. \"Is that what you are now? My boyfriend?\"\n\nHe definitely liked the sound of his new title.\n\nAnnie, however, wasn't so quick to jump on board. \"Do you make a habit of dating older women?\"\n\n\"Older women?\"\n\n\"I'm certainly an older woman based on your age,\" she said, taking a long sip from her glass. She dreaded turning forty next year!\n\n\"What are you? Like, twenty-five?\"\n\nShe almost spit her wine out. \"Oh my God, will you stop!?\"\n\n\"Actually, you're right. I'm off, aren't I? You're probably more like twenty-two,\" he proposed, sarcastic yet somewhat honest. She could absolutely pass for a college girl. She was that sexy.\n\nShe set her glass down on the coffee table in front of them before turning back to him. \"Forget about being my boyfriend. You're gonna be my husband if you keep this up.\"\n\nNow, that was his dream. How incredible would it be to wake up next to her in bed every morning? And to greet her in the kitchen with a crack on the ass before he started his day? Where could he sign up for that heaven?\n\nHe observed her half-empty wineglass while he debated his next move. What was on her mind? Did she always have a drink before bed, or was her decision made tonight for a specific reason? He just wished that she was something other than his mother's best friend! That way he wouldn't feel so cautious around her!\n\nShe retrieved her drink, downed the rest of it, and then left the room momentarily. She quickly returned with a full glass in hand.\n\nHe was sharp enough to know that chugging a glass of wine before bed didn't qualify as anyone's nightly routine--let alone someone as put together as Ms. P. What if he wasn't alone? What if she felt tense too? What if she couldn't believe that he sat on her sofa while she treated herself to a second glass of wine either?\n\n\"Can I tell you something?\"\n\nHe prepared himself for anything after noting the long swig that she took from her glass. \"Sure.\"\n\n\"You have to promise to keep it secret,\" she told him, placing her drink on the table. \"You can't tell a soul.\"\n\n\"I promise,\" he said.\n\n\"I'm extremely serious. I'll kill you if you ever say a word,\" she stressed the importance of his secrecy.\n\nHad she loosened up right in front of his eyes? Did he have the power of red wine to thank? Somehow, against all reason, she almost seemed flirty.\n\n\"You see, Annie, I may not be great at a lot of things, but keeping secrets is something I excel at.\"\n\nNothing boosted his confidence like making her laugh. What if she viewed him as a step up from her usual dating options? Could her impending secret actually be something that wasn't typically reserved for a thirty-nine-year-old woman and her best friend's son? He was about to find out.\n\n\"You've turned into quite the handsome young man.\"\n\nHe did his best to maintain his composure as he watched her wiggle closer ever so slightly. There was no misinterpreting her words. She'd just called him handsome. Handsome! Ms. P!\n\n\"Um...thanks,\" he said nervously.\n\n\"I remember when you were a little boy,\" she reflected on their lengthy relationship. \"You've certainly come a long way since those days. I mean, just look at all these muscles!\"\n\nFeeling her squeeze his bicep sent shivers down his spine. Why did he still lack the proper courage to treat her like a potential girlfriend? All the signs were there! Uninterested women don't agree to dates before letting guys into their house while treating themselves to two glasses of wine. He needed to wake up! Otherwise, he would miss his chance.\n\nBut she spoke up before he had an opportunity to scheme a plan.\n\n\"Can I tell you another secret?\"\n\nHe gulped but his throat was dry. He couldn't continue to fool himself. This woman terrified him.\n\n\"You have to promise to keep this to yourself too,\" she said.\n\nHe nodded, struggling to look in her direction for fear of staring at her cleavage. She appeared even sexier now that he shared the sofa with her. He couldn't even begin to guess what she had in store for him.\n\n\"I'm lonely.\"\n\nHe knew that he shouldn't be happy to hear that. His mother's friend--who he'd always loved--just admitted to being lonely. Truthfully, it was sad. A woman as incredible as her should never experience anything other than the best.\n\nBut the man in him saw an opportunity.\n\nShe was lonesome, upbeat from their date, and maybe even a little tipsy? While part of him was concerned about taking advantage of her, another part of him realized that he didn't deal with one of his classmates. Thirty-nine-year-old women weren't anything like eighteen-year-old girls, right? They had to be significantly less likely to play games. He'd always assumed that women his mother's age went after what they wanted--unlike girls his own age--but he didn't know for sure. He didn't have a history with Annie's demographic, after all.\n\n\"Do you think you can change that?\" she asked, placing her hand on his knee.\n\nWhy could he barely breathe? What happened to his swagger? All he wanted was the ability to treat Annie exactly like any other girl, but over a decade of lust prevented him from doing that. It was almost as if she was too much for him to handle.\n\nHer hand moved higher, coming to rest on his thigh. \"So, do you?\"\n\nHis pounding heart settled. His churning stomach calmed. In a moment of complete clarity, he managed to regain his poise. He could hold his own. He just needed to relax and act like himself.\n\n\"I'd love to keep you company,\" he said, gazing into her sparkling blue eyes. \"How about this? I'll come over every Friday night starting tomorrow. You can pour yourself a glass of wine, we'll play some music, and then we'll settle in for a three-hour long game of Monopoly.\"\n\nHer laughter provided him with the fortitude to act like himself. How many other guys could make her smile like he did? Would she massage anyone else's thigh on a Thursday night after a big glass of wine? He liked the idea of holding a special key to her heart, and her reaction further motivated him to see if he could make his fantasy a reality.\n\nAnd while Annie loved his playful personality, she wasn't in the mood to drag things along for days or even weeks. She wasn't in college anymore. Her days of smiling at a man and hoping that he picked up on her interest were behind her. If she wanted something, then she took it.\n\nHer hand slithered higher until it settled just inches from his bulge. She leaned in and whispered into his ear, \"I don't want to play Monopoly.\"\n\nHe told himself to relax. Why did his insides resemble a roller coaster? One moment he was calm, and the next he was rattled. Ms. P's hand was right next to his dick! His fuckin' dick! How couldn't he lose his mind?\n\n\"What...do you...um...want to do then?\" he asked tensely, not finding any relief from the way she continued to breathe into his ear.\n\n\"Your mother wouldn't want me to tell you this.\"\n\nHe'd never wanted to hear something so badly.\n\n\"Maybe I shouldn't say it?\" she purred, refusing to shift her hand.\n\n\"No, you-you can say-say it,\" he stammered, his mouth barren as he stared straight-ahead at the wall.\n\n\"Are you sure?\" she questioned with her mouth still pressed against his ear. She leaned against him, allowing her chest to rest against his broad shoulder. \"You would really have to keep this secret.\"\n\n\"I swear,\" he gave his word.\n\nHer breath disappeared. His ample chest vanished. Everything changed before he could fully process his surroundings, and he soon found his line of sight shifted in her direction abruptly. It was a whirlwind of activity in such a short time.\n\nAnd then he realized what happened.\n\nHer free hand had taken control of the situation. She turned his head in her direction by his chin, causing him to stare into her blue eyes for the first time in what felt like forever. He experienced a cavalcade of emotions while he waited in suspense, but any hope to assert his dominance fell to the wayside. He was simply along for the ride. She was out of his league whether he admitted it or not.\n\nHer pouty lips parted to reveal her true intentions. \"I don't want to play a board game. I don't even want to go to a hockey game. You see, sweetheart, there's something I need that isn't exactly easy to find. Your mother would agree with me on that as well.\"\n\nHe waited as her hand fell from his chin after she captured his attention, but he never would've imagined her reveal. The most surprising part was her decision to take the physical route instead of expressing herself verbally. It also showed him just how different life could be with an older woman, because eighteen-year-old girls definitely didn't behave in such an aggressive manner.\n\nThe hand on his thigh moved to his bulge.\n\nHe gulped. Five fingers squeezed his cock through his jeans, but it didn't come courtesy of one of his cute classmates. No, the stunner sitting next to him was more than twice his age, and she just so happened to be his mother's best friend.\n\n\"I need a real man,\" she revealed candidly. She didn't see any reason to pull her punches. She was so close to what she desperately needed. \"So, can I play with your cock?\"\n\nHe seriously debated her inquiry? What was he so scared of? Well, one, he could fail to live up to her expectations. What if he was too nervous to get hard? Or what if he wasn't big enough? Anything and everything could go wrong, and he dreaded the possibility of letting her down.\n\nBut the upside looked pretty spectacular as she squeezed his cock more firmly.\n\nAn incredibly sexy older woman just asked for permission to play with his dick. Wasn't that his dream? Wasn't it exactly what he'd fantasized about thousands of times? Besides, he was doing her a favor, right? She was lonely! He could help solve her problems!\n\nPlus, selfishly, he could enjoy himself at the same time.\n\nHis cock began to grow as she rubbed his bulge. Her blue eyes encouraged him to answer her, but he still struggled to speak. Unfortunately, he wouldn't be able to play it cool for the foreseeable future. His temporary lack of charisma made him a mere passenger from whatever she had planned, but he had little doubt that he would enjoy every moment of the fun.\n\nHe nodded to grant her permission, still unable to speak.\n\n\"Are you sure it's okay?\" she giggled, running her soft touch along the length of his hardening manhood. \"I'm in the mood to be a little bad tonight.\"\n\nHis breaths turned labored. He was on the verge of passing out as his dick grew to its full potential under his jeans. At least he didn't have to worry about his immense nerves preventing him from acting like a man physically, because he'd never been harder.\n\nShe was just getting started. \"Your mother rolled her eyes at me yesterday when I told her that I need some good dick in my life.\"\n\nHe did his best to calm himself. The last thing he wanted was to cum before ever enjoying her advances.\n\n\"And, sweetheart, I think you have exactly what I need,\" she said, using her fingers to trace along the outline of his hard meat.\n\nWhy couldn't he step up and take charge of the situation? Why did he feel so timid? It pained him to admit it, but his doubt involving his ability to satisfy someone like her increased by the moment, and her juicy amount of creamy cleavage memorizing his eyes didn't help to boost his confidence.\n\n\"Relax.\"\n\nHis focus instantly shifted to her dazzling blue eyes.\n\n\"Relax,\" she repeated after capturing his attention. She could sense his anxiety. It was just one of the many benefits of being an experienced woman. \"Why don't you just let me take care of you?\"\n\nShe slid off the sofa and down to her knees on the hardwood floor after pushing the coffee table back to give her room. Her hands journeyed along his thighs, having the opposite effect on him from the one she claimed to desire. The truth was that she adored his excitement. She craved his energy. Men her own age didn't appreciate her in the same manner that Sean did, and she was determined to live up to his expectations.\n\nHow was he expected to relax when his mother's best friend knelt on the floor between his feet? Somehow, he needed to curtail his excitement. He had to last in order to fully enjoy being the beneficiary of a sexy older woman's pent-up sexual frustration. The girl looking up at him wouldn't be a happy camper if he blew his load before allowing her to have her fun.\n\nShe encouraged him to help her out while her hands rubbed his thighs. \"Why don't you take your belt off for me?\"\n\nHe unbuckled his belt with a purpose. Suddenly, he found himself focused solely on the upside of what awaited him. A gorgeous woman wanted to play with his dick! What did he possibly have to worry about?\n\nHis belt was snatched from his hands before he managed to utter a single word. Unexpectedly, his idea of kink was completely rewritten right before his eyes. If he thought that he possessed a perverted side, then he was gravely mistaken as he looked on in disbelief. Even he couldn't compete with this.\n\nShe slid the end of his belt through the buckle to create a loop. In a moment of complete insanity to his eighteen-year-old brain, he watched her place it around her neck, allowing the remainder of the leather to dangle below while she gazed up into his eyes. It caused him to once again doubt if he could handle her.\n\n\"Are you going to keep me waiting?\" she asked.\n\nHe unzipped his jeans nervously. His belt remained around her neck, but he didn't know why. Was it a fetish of hers? Or a way to show her submission? Regardless of the reason for her decision, he was fairly certain that high school girls wouldn't be able to replicate what she had planned for him.\n\nHe noticed the way that her eyes followed his every move like a hawk. He wiggled out of his jeans, only for her to pull them off of his legs in a hurry. Maybe she really was desperate? Perhaps she needed this more than him? And if that was the case, then he could only imagine how incredible things would get. He'd never been with a woman before who truly craved dick.\n\nHis hard cock didn't shy away from his company after he slipped out of his boxers. So, now what? He merely sat on the sofa, anxiously waiting for his date to do something. Was it up to him to make a move? Or what if she wasn't impressed by what she saw? It would crush him to be sent home because he didn't meet her requirements, and her complete lack of reaction didn't help to provide him with any answers. He felt rather out-of-the-loop at the moment.\n\n\"You're my boyfriend now.\"\n\nCommon sense told him that his belt around her neck should take the cake in regard to the most bizarre reveal tonight. The sight of her down on her knees qualified as fairly unfathomable too. Plenty of moments would linger with him for the rest of his life, but her latest declaration caused his eyes to squint in confusion.\n\n\"What?\" he questioned.\n\n\"You're my boyfriend now,\" she repeated, using her finger to point at his towering erection. \"I want that in my life.\"\n\nHe finally knew what it felt like to be worry-free. It was difficult to be troubled after his crush just demanded his sexual loyalty, after all.\n\n\"Now I know why your mother still speaks so highly of your dad,\" Annie remarked. His thick meat put her into a trance. She couldn't look away from every delicious inch of him. \"You had to get that beautiful dick from him.\"\n\nForget about feeling worry-free. Was he a king now? Or a god? Ms. P just called his dick beautiful! And she'd yet to stop staring at it! It was incredible!\n\nShe finally turned her attention to his smitten eyes. \"That cock is mine, understood?\"\n\nHis confidence returned. His ego received a desperately-needed boost. Her reaction provided him with the incentive to treat her like one of his classmates, and he knew that he needed to stop behaving like a little boy. She could get a nervous teenager to mess around with anywhere. A man on the other hand? They were hard to find.",
        "\"Let's see if you pass the test.\"\n\nHer eyebrows swiftly perked up. \"Excuse me?\"\n\n\"Let's see if you pass the test,\" he said once more with a sly smirk. He didn't believe a single word he was about to say, but he loved the idea of motivating her anyway. \"I'm not some old-timer, you know? My expectations are probably a little higher than you think.\"\n\nHer surprised reaction quickly turned to one of laughter. \"Kiddo, I could make you cum in thirty seconds if I wanted to.\"\n\nHe matched her grin with one of his own. \"Is that what you think?\"\n\n\"No, that's what I know,\" she corrected him. \"Big dick or not, you've never gotten a real blowjob before. I'm not some high school girl.\"\n\n\"You never really seemed like the wild type to me.\"\n\nWatching bewilderment sweep across her face was exactly what he wanted. The truth was that Mom's bestie always came off like a party girl. He had little doubt that she'd enjoyed her fair share of fun back in her college days, and he also expected her to blow his mind in her family room. He didn't want her to think that, though.\n\n\"Other than getting drunk at seven-thirty on a Wednesday,\" he added nonchalantly.\n\nShe collected his jeans off the floor and dug through his pockets, finding his phone and handing it to him. \"Open it.\"\n\nHe used his thumb to unlock it.\n\n\"Go to the stopwatch app,\" she instructed.\n\n\"Are you serious?\"\n\n\"Yeah, we're timing this,\" she nodded, yet to touch his cock.\n\nHe opened the stopwatch app, but looked back down at her before proceeding any further. He needed to slow everything down for a minute. Did he anticipate that Ms. P would be incredible in bed? Yes. Did he expect the best blowjob of his life? For sure. Now, did he honestly think that she could make him cum in less than thirty seconds? Absolutely not.\n\nHe wasn't a virgin. He'd also jerked-off to her Snapchat pictures before leaving for school this morning, and again when he returned home. Hell, he'd spent the past seven years beating his dick to a wide variety of porn on the internet, so he wasn't exactly a rookie when it came to the world of sex.\n\n\"How about we make a bet?\"\n\nShe was always up for a challenge. \"What do you have in mind, big guy?\"\n\nHe couldn't get enough of how she constantly referenced his impressive size. \"I'll cut your grass for the next month if you can make me cum in less than thirty seconds.\"\n\n\"How about you cut my grass for the rest of the year?\" she proposed, liking the idea of not having to hire a lawn service at all.\n\nHe needed to think long and hard about her offer. Her lawn was huge! \"The entire year?\"\n\n\"Yep, and if you can actually last thirty seconds, then I'll let you cum on my face.\"\n\nSo much for actually pondering her proposal. Holding out for thirty seconds would result in a facial. A fucking facial! How did everything keep getting better? It almost didn't seem possible!\n\n\"Deal,\" he accepted immediately.\n\n\"That's what I thought,\" she giggled, shifting her eyes back to her prize. \"Get that timer ready.\"\n\nHe looked on in awe after she jammed her middle and index fingers down her throat, gagging herself from her spot on the hardwood floor. She needed to find plenty of spit in order to handle someone his size.\n\nShe wiggled closer while his thumb hovered over the start button on his phone. Her arms slithered under his thighs as she positioned her mouth over his stiff erection. What was she doing? Why did she use his legs for leverage?\n\n\"Oh, one more thing,\" she said, fighting the urge to skip their game and dive head-first into the fun. \"I'm not even going to use my hands.\"\n\nHe'd never felt better about anything in his life. She seriously thought that she could make him cum in less than half a minute with only her mouth? Was she crazy? The bad news was that she would most likely be disappointed in her futile efforts shortly, but the good news was that tonight would end with him blowing his nut all over her beautiful face. It was a trade-off that he was happy to make.\n\n\"And...go!\" he said, starting the timer.\n\nThe following fifteen seconds qualified as the most surreal experience of his life. Nothing about it made sense. Logic pointed to him being lost in a dream, but what he saw, heard, and felt said otherwise. It was unbelievable.\n\nShe swallowed his entire cock repeatedly, effortless in her movements. No hands, no struggle, and no sense of modesty: he started to wonder if she was built solely for pleasure. How could a woman be so sexy, but also so nasty? Weren't hot girls supposed to be reserved? He quickly discovered just how wrong his previous mindset was as he held on for dear life.\n\nHis dick glided down her tight throat thanks to the layer of slimy spit surrounding his meat. Up and down she went, causing him to writhe in pleasure from the manner in which she showered him with affection. His cock would be exposed to the family room air one moment, only to be completely engulfed inside her throat the next, and he didn't want to move a muscle. He could spend the rest of his days on this very sofa.\n\nAnd then he panicked.\n\nThe gradual build bubbled to the surface abruptly. Any minor concerns involving potentially cumming too soon went to the wayside when he realized that he was about to explode like never before. But he didn't want it to be over already! He didn't even care about losing the bet. Honestly! He just wanted more of his current heaven!\n\n\"Stop!\"\n\nAnnie continued to suck his dick like it was her job.\n\n\"STOP!!!\" he shouted urgently.\n\nReluctantly, she granted his demand. It was nice to know that she still had it. Obviously, she didn't have much competition. High school girls weren't exactly blowjob queens, but it still brought her joy to see him squirm after less than thirty seconds in her mouth. Plus, she wouldn't complain about having free lawn care for the rest of the year.\n\nShe looked up at the flustered stud in front of her, his belt wrapped around her neck. \"So, how's it feel to get your dick sucked by a real woman?\"\n\nHe didn't know what to say. He could barely think straight. His longtime crush knelt on the floor in front of him, and she gave head like a porn star. She blew away his wildest expectations.\n\n\"You're cute, you know that?\" she laughed.\n\nHe did his best to collect himself. He had to admit it whether he wanted to or not. \"You won.\"\n\n\"What was that?\" she asked, encouraging him to repeat himself louder. She got a kick out of the way that he still hung onto his pride. It was exactly what she loved so much about younger guys!\n\n\"You won,\" he said once again. Losing didn't hurt as much when it resulted in a blowjob.\n\n\"Sweetheart, I always win,\" she tittered, turning her attention back to his glistening pole. \"Now, how about a long, sloppy, fun blowjob? Because I can make you last as long as I want.\"\n\nThat sounded like heaven to him.\n\nShe wrapped her hand around his cock, stroking every inch of him with ease from the heavy amount of saliva covering him. \"God, you're so hard.\"\n\nHe grunted under his breath. Could she really control how long he lasted? Because he didn't like his chances of holding out much longer.\n\nShe positioned her face next to his groin and slapped his stiff cock against her cheek. She lived for his hardness. She salivated from his size. It's been an awful long time since she last had a dick like his to play with, and her desperation to please served as a reminder of how much she missed her youth. She was surrounded by cute hunks twenty years ago, for God's sake!\n\nBut she no longer needed to concern herself with guys her own age. Girls like Joy could continue to try to make things work with mediocre men in their forties, because she had an eighteen-year-old stud all to herself. A big, young, rock-hard dick would be ready whenever she wanted. She also didn't need to worry about being in a relationship with a guy who played head games. Young guys simply wanted to fuck, and she prepared herself for a future of fun as she slammed his hard meat against her cheek once more.\n\nHe smiled as he noticed a wad of her spit tangled in her long blonde hair as she continued to absorb the strength of his rigid erection with her face. This was his new girlfriend? Really? She was a freak! And in a good way! Honestly, he would cut her grass for the rest of his life if it guaranteed him a similar treatment.\n\n\"Let's get some of these clothes off.\"\n\nShe pushed him back against the sofa when he attempted to lean forward and tug at her shirt. \"Not happening.\"\n\nHis eyes squinted in confusion. She was fine sucking his cock, but she didn't like the idea of losing her shirt? That didn't make any sense to him.\n\n\"We'll save that for our second date,\" she told him with a grin before wrapping her lips around his manhood. She promptly made it disappear down her throat.\n\nWell, if he couldn't get her out of any of her clothes, then he would help himself to the next best thing, and that involved enjoying the endless benefits of dating a sexually deprived older woman.\n\nHis hands clamped on top of her blonde head and held her in place. The seconds ticked by while her tight throat pulsated around every inch of his girthy cock, thoroughly worshiping his member. Oddly, he may have treasured discovering her submissive tendencies even more than her incredible blowjob skills. Girls his own age were so scared to be seen as sluts. Annie, on the other hand, clearly didn't care. It almost seemed like she wanted to be a whore for him.\n\nHe pushed down when she tried to lift herself off of him. He was ready to assert his role in their relationship, because he definitely didn't want to be a mere spectator while she fulfilled all of her fantasies. For a moment at least, he called the shots. It was a risk that he wasn't entirely sure would prove successful, but one he was willing to take regardless.\n\n\"Stay right there,\" he demanded as he watched her squirm under his hold.\n\nHe controlled a woman twenty-one years his senior! And she was Mom's best friend above all else! He felt confident, dominant, and on top of the world as his dick bathed in the heavenly bliss that was her throat, and he knew that he would never date a younger girl again. He was officially hooked.\n\nHe finally released his hold to allow her to breathe.\n\nShe gasped for breath after pulling off his cock, but she didn't scold him for crossing the line. Instead, she had a few choice words for him. \"Someone's a fast learner.\"\n\nHe could only laugh. In Annie's world--or more like his new girlfriend's world--a true gentleman made her gag on his cock until she ran out of air. It was a drastic change from the girls he was used to.\n\n\"Why don't you stand up for me, handsome?\" she said, wiggling backward to allow him room.\n\nHe jumped to his feet, surprised to find the end of his belt placed in his hand. Her wicked grin told him everything he needed to know. Why was he surprised? She was a bundle of sexual energy, after all.\n\n\"Open up,\" he ordered.\n\nShe parted her lips without hesitation. Moments later, she found her happy place. It took almost four decades, but she finally discovered her soulmate.\n\nHe pulled her to his cock by his belt, but as fun as it was to control her with a leash, the leather lacked a personal touch that he so badly desired. He needed to feel her. He craved to touch her hair. Truthfully, he desired a deeper connection.\n\nHe dropped his belt from his hold and placed both of his hands on her head, and it didn't take long before he held her in place while he fucked her throat.\n\n\"GUH-GUH-GUH-GUH.\"\n\nIf only his friends could see him now. How many lunches were spent teasing each other over who had the hottest mom? Or what about the endless conversations regarding the MILF's from the gym? He couldn't even imagine their jealousy if they saw him now, and the perfect idea suddenly came to mind after he pulled her into his stomach. He couldn't believe it, but he discovered complete clarity with his cock buried down her throat.\n\n\"We're going on a date tomorrow.\"\n\nHis words provided her fading blue eyes with new life. Maybe she didn't just want a young stud to fuck? Perhaps a budding social life would be fun as well? She didn't do much with anyone other than Joy, to be honest.\n\nBut more importantly, she loved how eager he was for another date. Did he seriously want to see her naked that badly? His lust made her feel so sexy! And he wanted to spend time with her! It was so flattering!\n\n\"And then I'm going to get you out of your clothes and fuck the shit out of you,\" he remarked intensely, giving her throat a few final pumps before releasing his grip on her head.\n\nHer hands dashed for the belt around her neck after she pulled off his cock. Screw her rules. So what if she made no effort to play it cool? She was horny, and she couldn't get enough of how he made her feel. She simply wanted more of it.\n\nShe loosened his belt and tossed it onto the sofa, and immediately raised her shirt over her head before throwing it behind her. She could provide him with a preview of what was to come. It only seemed fair when she considered that he stood in front of her in only a white t-shirt.\n\nHer black push-up bra turned his already hard cock into a diamond. Her cleavage spilled out of her brassiere, adding to the already stifling intensity surrounding them. They each knew what was on the other's mind. He wanted to fuck her into a coma, while she wanted to get thrown around in bed for the first time since college. They were a perfect match.\n\n\"Take your shirt off. I want to see all those big muscles.\"\n\nHe removed his shirt in a blur. He was too enthralled by the girl in front of him to mess around. His hand wrapped around his cock, stroking his meat while he observed the way that her hungry eyes explored his naked body. No one could debate the fact that he'd hit the jackpot.\n\nShe finally settled on his handsome face after meticulously journeying the length of his chiseled physique. Every impressive inch of him made her want to be bad. \"Do you want your balls sucked?\"\n\nHe nodded.\n\n\"That's strange,\" she commented, gazing up at him. \"It seems like a little boy just showed up, because I could've swore I spent the past five minutes sucking a man's cock.\"\n\nHe stepped forward. Once again, her remark served as a reminder that he had a real woman in his life now. It was a new reality that he still needed to adjust to.\n\nHis cock hovered above her face as he stared down at her. \"Suck my balls, slut.\"\n\nShe lunged at his nuts, drenching them in spit and affection. It was her job to properly reward him. If her new boyfriend acted like a man, then he deserved to be treated like a man. It was as simple as that.\n\nHe had no idea that life as a man could be so good. Apparently, boyhood consisted of chasing uptight girls and disappointing sexual encounters, while manhood entitled him to a perfect ten who loved being put in her place. Just look at his situation! He received exactly what he wanted after stroking his cock and ordering her to suck his balls. It was that easy!\n\nThe following ninety seconds didn't even qualify as the wildest part of the evening. He would wager that he could find a few other girls to suck, lick, and stuff his balls in her mouth like Annie just had, but he struggled to envision too many women who would be sent into overdrive after being called a slut. She loved dirty talk! She really was perfect!\n\n\"I'll pick you up at nine tomorrow night,\" he said, stroking his dick slowly to prevent himself from exploding. Her mouth was magical. \"We're going to my friend's party.\"\n\nHis announcement snapped her out of her craze. It also knocked some much-needed sense into her stupid head. She just had an eighteen-year-old kid's balls in her mouth for close to two minutes! And she deepthroated his cock earlier! What was she doing?\n\nThis was who she decided to seduce? A high school senior who planned to take her to a party full of teenagers? She was almost forty! Dates at her age were supposed to consist of disappointing movies, fancy dinners, and overpriced wine. She was a grown woman!\n\nBut maybe that's why she loved his plan so much?\n\nHe made her feel young. He pushed away her responsibilities, and instead brought out her long-forgotten playful side. No man had ever taken her to a hockey game before tonight. She was used to guys who never thought outside the box, but Sean was anything other than ordinary.\n\n\"It won't be weird if you bring me to a high school party?\" she checked, taking a break from treating his heavy sack like royalty to address her concerns.\n\n\"Why would it be weird?\"\n\n\"Um...because I'm way older than you,\" she reminded him.\n\nHe didn't see a problem at all. \"So what? You'll be the hottest girl there by a mile.\"\n\nAnd just like that, she exclusively focused on praising his balls with her mouth.\n\n\"I want you to wear an outfit like you did tonight too,\" he moaned as his knees grew weak. He couldn't hold out for much longer.\n\nHis compliment caused her to take control of his manhood. He honestly thought that she would be the sexiest girl at a party full of eighteen-year-old knockouts? What if she just married him? It wouldn't make sense to only be his girlfriend, because some other girl could eventually come along and steal him from her. She wanted him all to herself!\n\nHer wish for a casual boyfriend ceased to exist as she used her hands and mouth in unison. The truth was that she desired Joy's dream. She wanted a kind, thoughtful, generous guy, but she craved a little more than her girlfriend as well. She needed a perfect gentleman in the streets, and an aggressive stud in the sheets, but such an exclusive unicorn had evaded her for the entirety of her life.\n\nUntil now.\n\nHow nice was it to spend time with a man who wasn't a jerk? Sean's confidence never came off as arrogant, but rather attractive. Thirty-nine years provided her with ample time to discover herself and find what she wanted. She also refused to let that man out of her grasp when he entered her life. Tonight, she planned to show him there was no need to look anywhere else. She could give him exactly what he craved.\n\nShe pulled her mouth off his cock, continuing to glide her hands along his perfect manhood. \"You still want to cum on my face, don't you?\"\n\nHis grin more than answered her question.\n\nShe was ready to turn his world upside down. \"We're going to do something so much better than that. I promise you'll love it.\"\n\nHe was all ears.\n\n\"Right before you're about to explode, grab my head and make me deepthroat your cock, and cum straight down my throat. Don't hold back either. Let it all out. I guarantee you'll see stars.\"\n\nHe pulled her back to his cock to allow her to work her magic. He still struggled to comprehend his new circumstances. His last girlfriend hated the taste of cum, but his new one encouraged him to unload directly down her throat while she deepthroated him. It was an unreal turn of events.\n\nThe glorious combination of her mouth and hands brought him to the brink of victory. Glory awaited him. Heaven remained just out of reach. Something about claiming Mom's best friend made everything so much hotter, and remembering what he had in store for him tomorrow proved too much excitement for him to handle. He couldn't last another second.\n\nHer hands bolted down to her sides after he pulled her into her stomach, causing her nose to press against his pubic bone. Burst after burst of cum exploded from the tip of his dick, but the visual joy of covering her face would have to wait for another night, because he immediately realized just how right she was. It was the defining proof that he would never go near a younger girl again.\n\nHer throat acted like a pussy, humming and massaging his steel pole as he fired his orgasm down her esophagus and into her stomach. It was an overwhelming sensation that caused him to question his own existence. Would he ever be able to masturbate again? How could he when he knew that something so toe-curling good lingered in the universe? In an odd way, he wondered if she'd ruined him.",
        "But the trade-off was well worth it.\n\nHe didn't see stars. In fact, he saw nothing but darkness while he held her head in place and sent his last few bursts of cum down her welcoming throat. His body turned weak as he felt his essence sucked out of him, but he wouldn't dream to put an end to things. He never wanted to leave her throat.\n\nSuch pleasures weren't a realistic possibility, however. Annie's one disappointing quality involved her need for oxygen, so he allowed her that requirement after freeing her head from his grasp. She was still human.\n\nShe gazed up into her new man's lovestruck eyes. She rather enjoyed kneeling before him. \"So, was I right?\"\n\n\"I'm starting to think that you're always right,\" he chuckled while collapsing back onto the sofa. It wouldn't be honest to admit that cumming down her throat qualified as anything other than the greatest experience of his life.\n\n\"Remember that and we won't have any problems,\" she joked. \"You have more belts at home, right?\"\n\nHe nodded.\n\n\"Good, because I'm keeping that one,\" she said, pointing to the belt on the cushion next to him.\n\nHis confused look showed that he didn't understand.\n\nShe didn't feel the need to be coy around him. They were in a relationship now. \"I'm going to use it when I play with myself tonight.\"\n\n\"I can help!\"\n\nShe smiled at his enthusiasm. \"Oh, is that right?\"\n\n\"Totally,\" he said, calming his energetic tone to not sound so eager. \"I mean, I owe you.\"\n\n\"Let's save that for tomorrow night.\"\n\n\"Ms. P, I would love--\"\n\n\"What did I tell you earlier?\" she interrupted. \"First, call me Annie, not Ms. P. Second, you got your dick sucked on the first date. Don't get greedy now.\"\n\nHe knew that she was right, but his desire to return the favor remained despite her decision to call it a night. It wasn't his fault that he was a giver. He wanted nothing more than to make her feel a fraction of what she'd brought to his life, but he couldn't push his luck. He couldn't ruin the best thing to ever happen to him.\n\n\"Besides, you have school tomorrow. So, time to go,\" she said, collecting his clothes and handing them to him.\n\nShe giggled while escorting an undeniably devastated young man to her front door. How long would he go down on her if she granted him the opportunity? Hours? Days? His willingness to take care of her all but guaranteed that they would enjoy a lengthy relationship, but she couldn't break her promise this time. Taking her shirt off was one thing, but a lengthy list of problems could arise from dragging him up to her bedroom tonight. The last thing she wanted was for Joy to get suspicious!\n\n\"Nine o'clock tomorrow, right?\" she said, opening her front door.\n\nHe helped himself to one last look at her incredible bust. Why did he have to go already? They could do stuff other than oral. He would play with her amazing tits for hours if she wanted! He would suck her toes and give her the best oil massage ever! He just wanted to be around her!\n\n\"Nine o'clock,\" he verified, finding it particularly difficult to play it cool. They would have a long night ahead of them if it was his decision. \"Dress to impress. Although, that's never really a problem for you.\"\n\nShe smiled, grabbed a handful of his t-shirt to pull him down to her level, and planted a big kiss on his lips. This poor kid wouldn't know what hit him tomorrow night. She would officially take his virginity in twenty-four hours, because those innocent high school girls had certainly never fucked him for real.\n\n\"Good night, Ms. P,\" he said, completely lovestruck before hurrying to correct himself. \"I mean, Annie.\"\n\n\"Good night, handsome,\" she told him, shutting the door behind him. \"Drive safely!\"\n\nSean floated down the driveway until he reached his car. Yep, he was in love, alright. That blonde-haired, blue-eyed goddess stole his heart, and his dick already started to grow when he envisioned tomorrow night. He was ready to finally be with a real woman.\n\n<p align=\"center\">Chapter 6 -- Lonely</p>\n\n<p align=\"center\">The Following Night. 10:17 PM.</p>\n\nJoy pulled out of the supermarket parking lot and started her trip home. Maybe it was time to start finding some new friends? Perhaps hanging out with only Annie for the past sixteen years had backfired in a major way? It didn't happen often, but nights like tonight reinforced how lonely she truly was.\n\nSean told her that he was going out with his friends, Annie declined her invitation to get together--due to visiting her parents for the weekend--and she didn't have any other real friends in her life. Did she have plenty of people who she would label as cordial acquiescences? Sure. Did she have anyone who she could call and hang out with, though? Not really.\n\nShe didn't exactly spend her Friday night in the most sociable way either. Did grocery shopping qualify as a place to meet people? Not in her world. The sparsely occupied store provided her with a friendly reminder that the majority of society was busy socializing tonight, but she didn't have anything to look forward to other than finding a new book to read.\n\nAfter she dropped off a new bottle of wine at Annie's house, of course.\n\nHer girlfriend would be so happy when she returned home on Sunday night, only to find a nice bottle of wine sitting on her front step. She really was a great best friend, wasn't she? In fact, she didn't need any other friends, and neither did Annie. She could keep herself occupied until her BFF returned from her parents.\n\nThe truth was that enjoying a good book wasn't all that she had planned for the rest of her evening.\n\nShe still couldn't believe she'd spent ninety dollars on a vibrator. Ninety freakin' dollars! She barely owned anything worth that much, but she decided to spoil herself while shopping on Amazon earlier in the week. The good news was that she had a very special package waiting for her in the mail after work, and she couldn't wait to test it out. The reviews were incredible!\n\nOkay, drop the wine off at Annie's, go home and take a hot shower, enjoy her expensive vibrator, and find a new book to start before getting some shuteye. That didn't sound like such a bad Friday night, after all, did it?\n\nBut something brought nothing but bewilderment to her life ten minutes later.\n\nNot only was Annie's car in her driveway after she arrived at her best friend's house, but so was Sean's.\n\nOh my God, did they have a surprise for her? How incredible would that be? Her fortieth birthday was still three weeks away, but an early party would be the best gift ever. Who would she rather spend her time with than her girlfriend and her son? No one that she could think of.\n\nBut wouldn't they have invited her over if that was the case?\n\nMaybe it was something else? Perhaps Sean and Annie got together tonight in order to organize her birthday party? Yeah, that made significantly more sense. She would have to be invited to her own birthday bash--obviously.\n\nShe debated whether or not to give them a surprise of their own. As fun as it would be to allow them to operate in secret, busting their plans would be equally as hilarious. Besides, it's the thought that counts. She didn't actually need to be surprised. Simply being on the receiving end of such an event would be the greatest gift that she could ever wish for.\n\nShe parked in front of Annie's house and retrieved the bottle of wine from the groceries in her back seat.\n\nJoy was ready to catch the two most important people in her life red-handed. Maybe she would allow Sean to enjoy a glass of wine while she learned all the details about her birthday party as well? She was in a rather festive mood at the moment.\n\nShe was surprised to find the front door unlocked after she made her way up the driveway. She slipped inside, careful to stay as quiet as possible. It wouldn't be any fun if they heard her coming.\n\n\"OH MY GOD, I LOVE YOU!\"\n\nJoy came to an abrupt stop in the kitchen. While Annie's one-story ranch home wasn't tiny, it also wasn't overly-spacious, so she couldn't mistake hearing her BFF's voice from what sounded like her bedroom. What exactly was going on? She couldn't have just spoken to Sean, could she? And why in the world would she tell her son that she loved him?\n\nShe set the bottle of wine on the table and headed down the hallway.\n\n\"JESUS CHRIST, PLEASE DON'T STOP!\"\n\nConfusion scrunched her face as she made her way closer to Annie's bedroom. It almost sounded like her girlfriend howled her latest declaration. And what didn't she want to stop? And where the hell was Sean? Nothing made sense!\n\nWhat if this was part of an elaborate prank? Maybe they had an entire game planned for her birthday? She couldn't explain what happened for sure, but she was eager to find out as she placed her hand on Annie's bedroom door handle and turned it to let herself in.\n\nAnd then her jaw dropped.\n\nShe wouldn't believe it unless she saw it with her own two eyes, and she wouldn't even consider it to be her worst nightmare either since it had never previously crossed her mind. She couldn't say the same now that she looked on in disbelief, however. It was shocking, sickening, and equally as mystifying, but she couldn't react for some reason. It was a horrific car crash that she couldn't look away from.\n\nHer eyes locked onto her son's pale butt before exploring the length of his muscular back as he laid on his stomach. Seeing him naked would be a big enough surprise, but the realization of where his face was resulted in her struggling to breathe. This wasn't a birthday present! It was a betrayal!\n\nAnnie rested on her back in bed--naked--as Sean preformed oral sex on her! She couldn't see the action to verify for sure, but she wasn't dumb. What else would her son be doing with his head between her legs? And Annie continued to moan and squirm like a woman on the brink of orgasmic bliss. How could this happen right in front of her? They were her son and her bestie, for God's sake!\n\nWhy couldn't she find the courage to speak up? She just felt so deceived. Was this the result of sixteen years of friendship? Was this what she got for being a great mother? How could these two stab her in the back this way?\n\n\"Joy!?\"\n\nSean's head immediately snapped back to the bedroom door after hearing Annie scream, his face glistening with her juices. \"Holy fuck, Mom!?\"\n\nJoy watched Annie rush to cover herself with her blankets, while Sean hurried to place a pillow over his groin. The three of them all waited in silence. Who would make the first move? Who would take the fall? It was a situation that none of them ever expected to find themselves in.\n\nAnd then Joy finally found her voice, and boy, was she furious. \"What the hell is wrong with you!?\"\n\nAnnie didn't know how to respond to her best friend's question.\n\n\"That's my son, you fuckin' bitch!\" Joy scolded her, irate.\n\nAnnie couldn't pretend to be anything other than stunned. Joy rarely cursed, and she certainly never shouted. Her intense reaction told her how badly she'd messed up. There was only one thing in the world that she could do to enrage Joy at such a level, and she'd done exactly that.\n\n\"Let me explain,\" Annie attempted to speak up.\n\n\"Let you explain?\" Joy asked, stunned. \"Let you explain? No, let me explain! How dare you do this to me after all we've been through together! Sean is my son! And he's eighteen! What's wrong with you!?\"\n\nAnnie decided to be as straightforward as possible. She didn't see any other way out of her awful predicament. \"I really like him.\"\n\nIt took every ounce of self-control that Joy had, but she managed to not run across the room and attack the girl who she once viewed as her only real friend.\n\n\"And he really likes me too,\" she told Joy. \"Isn't that right, Sean?\"\n\nSean had opted for the quiet route while his mom and girlfriend argued in front of him. It still felt strange to refer to Annie as his girlfriend, but it's definitely what she was when he reflected on his past twenty-eight hours. To be honest, he'd never been so in love.\n\nHe nodded.\n\n\"This is so goddamn unbelievable,\" Joy groaned, running her hand through her long brown hair. \"How long has this been going on?\"\n\n\"Since yesterday,\" Annie answered.\n\nWednesday evening's events immediately flooded Joy's mind. How didn't she pick up on the signs sooner? Of course, something like this could happen! Annie had openly fawned over Sean in the backyard after he stepped out of his muddy clothes! And he drove her home too!\n\nAnd what did Annie always tell her? That she wanted a young hunk in her life to rock her world in the bedroom. Sean definitely qualified as young, and it wouldn't be truthful to label him as anything other than a hunk. She just never imagined that Annie would pick him instead of one of the studs at their gym.\n\n\"Will you please give me a minute to explain?\"\n\nReluctantly, Joy nodded. She was extremely interested to hear Annie's side of the story.\n\n\"Sean is incredibly sweet to me,\" Annie revealed. \"He's nice, polite, and acts like a perfect gentleman. He even took me to a hockey game last night!\"\n\n\"A hockey game?\" Joy asked, turning her attention to her son. \"I thought you were at Kyle's house?\"\n\n\"I kind of lied,\" he said, looking down at the floor.\n\nAnnie was just getting started. \"And we went to a party tonight. A party, Joy! I haven't been to a party in forever! We danced for like an hour too! It was soooooo much fun!\"\n\n\"You're almost forty,\" Joy reminded her, pointing out the absurdity of someone attending a high school party at her age.\n\n\"What do I always complain about?\" Annie asked her. \"About how lame older guys are, right? Well, guess what? I would rather go to a hockey game and a high school party than some boring dinner at an expensive restaurant.\"\n\nJoy reflected on all of the absurdity surrounding her. Here she was, in her bestie's bedroom, staring at two people who continued to cover their naked bodies with blankets and pillows. Apparently, it'd only taken a little over a day for Annie to become fairly smitten, and something told her that Sean was head over heels in love as well. How could everything happen so fast? How could she be so far out-of-the-loop? Everything changed seemingly overnight!\n\nDid a tiny part of her actually feel happy for Annie? She knew that she should hate every single little piece of information that she'd recently uncovered, but she also knew how badly Annie wanted exactly what Sean could give her. Not only was her son a perfect gentleman, but he was a hunk as well. Logistically, he was Annie's dream guy.\n\nBut her girlfriend's happiness wasn't enough for Joy to look past tonight's insanity. Annie seriously couldn't date one of the other four billion men on the planet? Why did she have to pick Sean? It would never feel right no matter how hard she focused on the positives, because she still looked at Sean as her innocent little angel. He was her everything!\n\n\"This can't happen.\"\n\n\"Why not?\" Annie asked, desperate to change Joy's mind.\n\n\"Because it just can't,\" Joy said the honest truth. \"I'm sorry, but this ends now.\"\n\nAnnie didn't have many options left. If she couldn't convince Joy to see things her way emotionally, then perhaps she could lure her physically? One of the benefits of being best friends for sixteen years involved hours upon hours of gossip and secrets. She knew what Joy truly wanted--whether she always pretended otherwise or not--and she planned to tempt her with it.\n\nAnnie dropped her blankets and moved behind Sean--who sat on the bed, facing his mother with a pillow over his groin--and pressed her chest against his bare back. She placed her chin on his shoulder as she looked at Joy. It was time to get real. Joy could continue to play games, but no woman could resist the stud seated on her bed.\n\n\"Look at his handsome face,\" Annie said, giving Sean a quick peck on the cheek before turning her attention back to Joy. \"Let's not pretend that your son isn't a cutie.\"\n\nJoy didn't want to discuss anything involving her son's looks.\n\n\"Just take a moment to appreciate his body,\" Annie told her as she ran her hands along his arms before treating her touch to his sexy chest and chiseled abs. \"I've known you for a long time, Joy. You've never been with a guy like this.\"\n\nJoy couldn't call Annie a liar. While Sean's exceptional body certainly put her typical suitors to shame, he was still her son, and she refused to look at him in a sexual manner. As wrong as it was for her BFF to drool over her one and only child's body, it would be completely egregious for her to do the same. She was a responsible mother!\n\n\"Do you want to know the wildest part about him, though?\"\n\nJoy could take a guess where Annie was headed, and she didn't like it one bit. It was also something she'd always assumed, to be honest. Her ex-husband had the good fortune of being rather hung, and she had little doubt of Sean inheriting his father's best physical trait. It only made sense when she really thought about it. They had so much else in common physically.\n\n\"He has a huge cock,\" Annie giggled, not beating around the bush whatsoever.\n\nSean gulped as the most surreal moment of his life somehow took a turn for even choppier waters. Annie continued to grope him, Mom looked on from just in front of the bedroom door, and his dick remained harder than ever beneath his new girlfriend's white pillow. Was it Annie's touch that fueled him? Or maybe it was Mom's black yoga pants and cute green t-shirt? Regardless of the exact cause, Mom's presence played a major role in his excitement. Inappropriate or not, he loved her involvement in tonight's festivities.\n\nHe couldn't believe that things went as smoothly as they had when he pulled into Annie's driveway ninety minutes ago. A sizable amount of risk accompanied his decision to take a thirty-nine-year-old woman to a party full of eighteen-year-old guys and girls, and the stakes were raised further when she met him at her front door in a pair of tight blue jeans and a pink v-neck that showed plenty of cleavage--per his request.\n\nHis female classmates sent plenty of dirty looks his way throughout the night, but his buddies gave him nothing but high-fives and fist-bumps. And what about when the music took a hip-hop turn? It was all Annie needed to spend the next half-hour grinding on him while having the time of her life, and he finally comprehended exactly what he'd gotten himself into. Yesterday wasn't a mirage. He officially had a real woman in his life.\n\nAnd his intuition was proven correct when Annie told him that she was ready to leave.\n\nIt wasn't for a lack of fun. Nor had any of his classmates made her uncomfortable. No, Annie had more pressing matters to attend to. Specifically, her insatiable sex drive.\n\nHe received roadhead during the entirety of their ride back to her house. She was an expert with her mouth. Her ability to keep his orgasm at bay fascinated him, and her desire to please made him feel like the luckiest guy alive. He seriously dated a woman who loved to suck cock? It was a dream come true.\n\nBut even her blowjob skills paled in compared to when he finally got her out of her clothes.\n\nHer bedroom striptease paralyzed him as she undressed painstakingly slowly. He knew what she was up to. She fully understood what her body did to him, and she enjoyed every second of his building lust. Sometimes, the hunt was more enjoyable than the catch, but this absolutely wasn't one of those occasions.\n\nHer fat ass shattered his expectations. Her big tits caused him to question if he was a saint in his past life. Everything about her was perky, large, and begging for his attention, but he decided to return the favor before treating himself to any of her tempting goodies. He could bounce her ass before making her deepthroat his cock later, because he had a girlfriend to take care of first.",
        "And he was in the middle of doing exactly that when Mom barged into the room.\n\n\"He made me cum twice from oral,\" Annie admitted to a clearly taken aback Joy. \"Twice! I haven't cum twice with a man in decades!\"\n\nJoy knew that feeling all too well. When was the last time that she even received oral? It hurt her to admit that she may have approached a decade without a man properly taking care of her with his mouth, and she could barely fathom cumming twice in only one session. That sounded like heaven!\n\nShe quickly caught herself.\n\nDid she actually just slip and feel a sense of jealousy for Annie's situation? Honestly, she would be incredibly envious of Annie if Sean wasn't her son. Her bestie had a man who was smart, funny, caring, and allegedly very generous in the bedroom. Wasn't that every girl's dream? How many women went to bed every night with hopes of finding such a man? Millions, and Annie was lucky enough to join that exclusive group.\n\nBut it still didn't make any of this right. As happy as Joy was for her girlfriend, she simply couldn't allow their relationship to proceed. She just wouldn't stand for it.\n\n\"You need to find another guy,\" she said to Annie, officially putting her foot down.\n\nAnnie reached for her pillow, only to find intense resistance awaiting her.\n\n\"What are you doing?\" Sean asked, refusing to concede his only source of dignity. Otherwise, he would be naked in front of his mother!\n\n\"Show your mom your dick.\"\n\nHe almost fainted. \"What!?\"\n\n\"Show her your dick,\" Annie encouraged him again. \"She'll completely change her mind after she sees it. Come on, give me my pillow.\"\n\n\"Holy shit, I'm not showing her my dick!\" he shouted, attempting to push her away while maintaining his hold on her pillow. \"Are you crazy!?\"\n\nJoy was too stunned to react. This really happened? Her girlfriend fought her son in an effort to reveal his most personal possession; meanwhile, Sean resisted with every ounce of his being. She couldn't believe what unfolded in front of her.\n\nAnnie moved her mouth to his ear, keeping her voice hidden from Joy. \"I'm not someone who makes threats. I mean that too. However, I'll literally never suck your dick again if you don't give me my pillow.\"\n\nHe froze.\n\nYears of impending fun hung in the balance. Fantasies of endless nights consisting of wild sex would slip from his grasp before he ever properly enjoyed himself. He didn't want to mess around with Annie for a few weeks or even a few months. He yearned for years of her undivided attention and sexual lust, but he would be back at square one if he didn't grant her request. Tomorrow, he would be looking for an eighteen-year-old girlfriend again.\n\nAnd he refused to do that after getting a taste of the good life.\n\nHe knew that he would severely regret his decision, but he conceded control of her pillow.\n\nAnnie wasted little time exposing his towering erection to the third member of the party, and watching his mother's eyes bulge caught him by surprise. Shouldn't she be horrified? Why didn't she scream? He couldn't believe it, but Mom almost looked impressed. It was the absolute last response that he ever expected.\n\n\"I'm right, aren't I?\" Annie asked, tossing her pillow to the floor. \"Good family genetics?\"\n\nJoy shook her head in a state of shock, unable to tear her eyes away from the stunning sight at the end of the bed. \"Um...Scott didn't have that.\"\n\nThings kept getting better for Annie. \"So, he's bigger than his father?\"\n\nJoy was trapped in a simultaneous dream and nightmare while she nodded to answer Annie's inquiry. Was Sean bigger than his father? How about way bigger than his father! No wonder why Annie refused to change her mind. Sean's dick was huge!\n\nShe hated herself for being wet. Why were her nipples erect while an unmistakable warmth consumed her flustered body? He wasn't some stud from the gym. He wasn't a character from one of her romance novels either. Sean was her son, and she couldn't believe how good he looked as she admired every spectacular inch of him!\n\nAnnie's mouth returned to Sean's ear.\n\n\"Holy shit, really?\" Sean asked.\n\n\"Mm-hmm,\" Annie giggled before giving him another kiss on the cheek. Joy may be hesitant, but Annie knew exactly what she wanted, and she refused to torture herself for another second.\n\nShe moved next to Sean--on her knees--and wrapped her lips around his cock after diving down into his lap.\n\nHis heaven returned. He crossed his fingers that Annie wasn't the vindictive type, because he would do pretty much anything to experience her mouth on a consistent basis. His sense of dread was replaced by a world of wet warmth. He helped himself to a handful of one of her big boobs before giving her a smack on the ass, but his priorities soon returned to her heavenly mouth. He belonged between her lips. It was where he felt at peace.\n\nAnd then he remembered who else was in the room with them.\n\nMom watched as her best friend sucked his dick like a dog in heat. Did he just catch her bite her lip for a brief moment? He couldn't shake the feeling that Mom wasn't actually as upset as she portrayed herself as, but something prevented him from pondering his hunch further.\n\nHis eyes rolled back as Annie took him all the way down to the base. His cock fit perfectly in her tight throat, swarming every pulsating inch of his member in her slick saliva. He wasn't tasked with a single burden other than moving her hair out of her face. Annie knew exactly what he loved, and nothing stopped her from making him happy--his own mother included.\n\nMom took a step in his direction.\n\nHe did his best to maintain his composure as Annie continued to work her magic. Her neck bobbed up and down, worshiping his manhood with ease. It was amazing that he no longer focused on what may as well have been his porn star girlfriend, though. Annie could make a dead man cum with something as innocent as a blowjob, but his eyes were on a different prize.\n\nHis mother.\n\nMom's second step toward the bed sent chills down his spine. She watched curiously, not shying away from observing the manner in which Annie showered his throbbing cock in affection. It was the most unforeseen event in an evening full of improbable moments, but he wouldn't dare put a stop to it. In fact, it stiffened his cock like nothing ever had.\n\nAnnie took a break from her blowjob to smile at her bestie. \"Looks fun, doesn't it?\"\n\nJoy didn't respond, but her eyes never left the scene on the bed as she took another step closer.\n\n\"It looks fun because it is fun,\" Annie said while stroking his erection. \"It's so big and thick. You want to wrap your lips around, don't you?\"\n\nHe watched his mother fail to answer Annie's question as his feet remained on the hardwood floor while Annie's soft hands massaged his slick pole. Was he a bad person for wanting her to say yes? Why did he desire her approval so badly? He knew it was wrong, but he wished nothing more than for Mom to be equally as hungry for his cock as Annie.\n\n\"Come on, admit it. You want some dick,\" Annie tittered playfully.\n\nMom took another step toward his spot on the end of the bed. Her lips remained sealed, but her actions spoke a million words. It was obvious what she wanted--whether she was ready to confess it or not.\n\nAnnie looked at him with a wicked grin. \"Why don't you show your mother what a gentleman you are? Maybe she needs to see that you know exactly how to treat a lady?\"\n\nA quick glance in Mom's directions revealed that she clearly didn't understand Annie's words. The possibility of Mom truly being innocent crossed his mind, and that thought seemed even funnier to him when he considered who her best friend was. They may have been alike in plenty of ways--looks included--but he wasn't so sure about their tendencies in bed.\n\nHe was ready to find out, though.\n\nHe secured two handfuls of Annie's blonde hair, locked eyes with his mother, and slammed his girlfriend's mouth down on his cock.\n\nIt was all the proof he needed. Mom gasped as his hips rocketed off the bed repeatedly, allowing his meat to probe every inch of Annie's tight throat. Watching her bestie be dominated orally from only a few feet away unarguably served as quite a shock to his virtuous mother. She'd obviously never experienced anything of the sort, and her naivety sent him into overdrive. He yearned to watch her act as dirty as the blonde goddess in his grasp.\n\n\"GUH-GUH-GUH-GUH-GUH.\"\n\nJoy placed her hand over her mouth to hide her stunned expression. What in the world was she watching? While no one would argue the fact that Annie was kinkier than her, it shocked her to witness her best friend of sixteen years completely submit to her son. Sean was roughing Annie up! And her bestie loved it!\n\n\"Fuck yeah, bitch,\" he grunted, holding her head down to make her swallow the length of his girthy manhood.\n\nJoy's hands dropped to her sides as her eyes bulged. \"Sean!\"\n\nEverything stopped. His hands ceased their hold on Annie's head, Annie's mouth retreated from his cock, and Mom looked like she'd just seen a ghost. It quickly brought all three of them back to reality.\n\n\"Oh my God, don't call her that!\" Joy chastised him. \"Apologize!\"\n\nAnnie rushed to speak up. \"He can call me whatever he wants.\"\n\n\"No, Annie, he can't call you--\"\n\n\"But that's what I am,\" Annie interrupted Joy. \"I'm my boyfriend's bitch in bed.\"\n\nJoy didn't even know where to start. She had so many problems with everything happening around her. Sean shouldn't disrespect her best friend, he definitely shouldn't be so aggressive with her, and by no means should he treat her like a piece of meat. However, it was Annie's latest proclamation that gave Joy the greatest trouble. It was also the most outlandish claim of the entire evening.\n\n\"Boyfriend?\"\n\n\"Yeah, I forgot to tell you that we're dating,\" Annie answered her question. \"Isn't that right, Sean?\"\n\n\"Yep,\" he verified confidently. He didn't hesitate for a moment either. This was the life for him.\n\nAs ridiculous as it was for these two to fool around, Joy was absolutely dumbfounded by the idea of them pursuing a real relationship. \"You're dating my son?\"\n\n\"Sorry if you don't like it, but I'm not changing my mind,\" Annie told her.\n\nWhat happened next caused Joy to take a step back. Her methodical path closer to the bed encountered a roadblock when she watched Annie pull Sean off the bed with her. She dropped to her knees to resume her blowjob, but everything appeared different from her new perspective. Surprisingly, the moment seemed more real.\n\n\"I want you to get the full picture,\" Annie said, turning back to Joy as she stroked the big dick that had been between her lips moments ago. \"He looks even better when he stands, doesn't he? Just look at all of his big muscles. And his huge cock! Stop playing dumb!\"\n\n\"I'm not playing dumb,\" Joy argued while she struggled to not admire her son's impressive physique. He really did look more spectacular when he towered above Annie--not that she was proud to admit it. Unfortunately, it was the truth.\n\n\"You're soooooo playing dumb. I know that you want to play with this cock. Every girl does,\" Annie said before focusing on her main priority.\n\nSean rested his hand on top of Annie's head, allowing her to display her greatest talent for his unexpected audience. He knew better than to push his luck. Somehow, the hottest thirty-nine-year-old blonde on the planet seemed fairly infatuated with his dick, and he dreaded the possibility of jeopardizing his good fortune. There was only one problem.\n\nHe loved the idea of bringing the hottest thirty-nine-year-old brunette in the world into the fun.\n\nWas he greedy? For sure. Every guy would be happy to settle for only Annie, but Mom's incredible body easily rivaled all of his girlfriend's best physical traits. What was better than one fat ass? How about two? And why should he accept two big tits when he could potentially play with four? Annie may have been the one to sail the ship out of the harbor, but it was his turn to play captain.\n\nWith both of his hands on Annie's head, he took control of the moment and pumped her mouth slowly.\n\nHis eyes never ventured from Mom as he watched her immediately bite her lower lip, and the way that her hand played with the sensitive spot behind her ear reinforced his notion. Mom was turned on from this! Even she wouldn't be able to argue that fact. His sexually deprived mother stood only five feet from what she secretly craved to have in her own life, but he knew that he couldn't outright invite her to join them. She was still his mother.\n\nHis thrusts turned more vigorous.\n\nMom stepped closer as the intense sounds increased from the manner in which he fucked Annie's throat. It was his special invitation. While he lacked the courage to come right out and ask Mom to join them, he could seduce her through his actions. He was on a mission to show her exactly what she could have in her own life.\n\nAnnie had different plans, however.\n\nShe pushed Sean's hands away and pulled off his cock, turning to look back at Joy in the process. \"Why don't you drop the act?\"\n\nJoy's eyebrows perked up curiously. \"What?\"\n\n\"You know what I'm talking about,\" Annie cut to the chase. \"I know you want to suck this dick.\"\n\nEven if she did, Joy couldn't actually admit to anything of the sort. Sean was her son! It was outrageous that she was even in the same room as him while he was naked!\n\nAnnie looked up at her boyfriend. \"You've never had two girls suck your cock at the same time, have you?\"\n\nHe shook his head, unable to process how much his life had changed in only a few days.\n\n\"Is that something you want?\" Annie asked.\n\nHe nodded excitedly, making no effort to hide his growing lust. Frankly, it was his dream.\n\n\"Well, I got some good news for you then, handsome,\" Annie giggled as she admired his recently shaven cock and balls. \"You have the best girlfriend ever.\"\n\nHe wouldn't argue that.\n\nShe turned back to Joy. \"Get your butt over here.\"\n\nJoy wasn't so quick to jump on board.\n\nAnnie's hands went to work while her eyes never strayed from her bestie, bouncing his nuts in her palm. \"His balls are so big and heavy, and his cock is so long and thick. He isn't a little boy anymore, Joy. He's a man.\"\n\nJoy could see that.\n\n\"Look at how sexy his muscles are,\" Annie encouraged Joy to help herself to another look at the impressive specimen in their presence. \"And that handsome face? God, he turns me on. But I know what you want more than anything. I know what you crave.\"\n\nJoy's eyes settled on exactly what her girlfriend referred to.\n\n\"Come down here and help me play with this big thing,\" Annie said as her hand left his balls and stroked his throbbing manhood. She'd never felt anything so hard in her life. \"He'll let you do anything you want. Isn't that right, sweetheart?\"\n\n\"Absolutely,\" he answered.\n\n\"Did you hear that?\" Annie questioned with a deviant smile. \"You can kiss his thick cock, or lick his heavy balls, or see how far you can take this monster down your throat. You can have as much fun as you want with him.\"\n\nHer indecision caused Annie to speak up again. \"Trust me, it's way better than wine.\"\n\nJoy stepped forward before freezing. The honest truth was that she wholeheartedly missed the touch of a man in her life, and as terrible as it sounded, she may have craved a hard cock more than anything. She was well-aware that her new vibrator couldn't replicate a fraction of the fun that Sean's remarkable manhood could, but she stumbled each and every time she remembered that he was her son. This would be so much easier if she'd caught Annie with a hot college guy from the gym!\n\nShe was a woman with needs who unfortunately approached a decade without sexual fulfillment. Why couldn't she treat herself for just one night? Maybe a little taste was all she needed? What if a quick blowjob satisfied all of her cravings, and kept her happy for years to come?\n\nJoy took those four daunting steps until she stood directly next to her kneeling friend. Looking up at her tall son didn't help to settle her nerves. Common sense told her it was wrong. Every fiber of her being screamed at her to get back in her car and drive home, but an expensive vibrator and a good book faded from her list of desires. Instead, she wanted to spoil herself.\n\n\"No one can ever find out about this, understand?\" Joy said, staring into Sean's eyes.\n\nHe nodded, doing his best to prevent himself from passing out. Holy shit, that was actually happening!\n\nHer attention shifted away from her son's face and returned to the one part of him that she still struggled to comprehend. \"God, that thing looks big.\"\n\n\"It is big,\" Annie giggled, yet to stop massaging his member with her hands. \"Wait until you get down here, though. It looks huge then.\"\n\nThe greatest moment of Sean's life occurred when he watched his mother sink to her knees next to her bestie. Now, two knockouts knelt before him, gazing in awe at his stiff erection. How powerful did he feel? How confident did his new reality make him? He was moments away from not only experiencing his first threesome, but from messing around with his own mother! It was unreal!\n\n\"Open up, bitch,\" Annie joked as she placed her hand on the back of Joy's head. She guided the mother of one to her own son's cock.\n\nMom's mouth felt different. It wasn't her texture or even her noticeably more reserved style--which he couldn't fault her for when Annie's spectacular ability served as the gold standard--but more so her appetite to please that stood out the most. Her steady pace reflected a woman who surely missed having a man in her life. The way that her hands stroked him in unison with her mouth reinforced her motherly instinct to always put him first. He no longer only had one angel in his life, because one perfect ten verbally encouraged another perfect ten to keep him happy.\n\n\"What a good girl,\" Annie praised her girlfriend. \"I told you that he was yummy, didn't I?\"\n\nJoy was in too deep of a trance to respond. She didn't even bother to acknowledge Annie's attempt to spice up their evening with a little risque dirty talk. She was far too preoccupied with the big piece of meat in her mouth to break from her fun, and hearing her son moan discouraged her from holding back. She wouldn't stop until he squirmed.\n\nAnnie was right: Sean definitely qualified as a stud. Joy never would've argued against such a declaration when she considered his handsome face, muscular body, and masculine personality, but the proof was certainly in the pudding now that she was exposed to every beautiful inch of him. Was this her dream cock? She liked to think so, because it absolutely felt like it. She hadn't experienced such an urgency to please in quite some time.\n\n\"Let's see how deep you can take him,\" Annie said, placing her hand on the back of her head once again. She pushed forward as Joy's arms willingly dropped to her sides to allow herself to be controlled.\n\nInch after inch of his steel rod pushed into Mom's throat. The stunning realization that she shared Annie's incredible oral abilities brought a smile to his smitten face, and noting the fashion in which Annie continued to push her forward caused him to question if any other man had ever experienced anything like this. His new hot girlfriend--who was twenty-one years older than him and armed with a sky-high sex drive--forced his mother to the base of his cock! It was surreal!\n\n\"Look at me, Mom,\" he demanded.\n\n\"Oh my God, that's so fuckin' hot,\" Annie remarked as she watched her girlfriend's big brown eyes open exclusively for her son.\n\nOne final push cemented his status as the ruler of the universe. Mom's pretty brown eyes gazed up at him, his cock remained comfortably down her throat, and Annie did her best to bring all of his fantasies to life. He wouldn't trade places with anyone else. He was king.",
        "Annie released her hold, causing Joy to pull back urgently for air. \"You never told me that you could do that!\"\n\nJoy's frantic gasps soon turned to giggles. \"I keep some things secret.\"\n\n\"I mean, you're not on my level or anything, but that was fairly impressive nonetheless,\" the ever-competitive Annie noted.\n\nJoy was always up for a challenge. \"You think you can do better than me?\"\n\nAnnie rolled her eyes and pointed at the floor in front of her, causing Sean to immediately shift his placement. His hard, saliva-covered cock aimed directly at Annie's mouth.\n\n\"Do I think I can do better than you?\" Annie chuckled under her breath. \"Joy, I love your spirit, but let me show you how it's done.\"\n\nThe following thirty seconds consisted of Joy attempting to control her jealousy as she watched her best friend give the type of blowjob that she could only dream of; meanwhile, Sean struggled to prevent himself from blowing his load already. Annie truly was a magician. Her unparalleled and completely effortless gift to make his cock repeatedly disappear made his toes curl and his body tingle. Mom had barely managed to take all of him after receiving a helpful push from her bestie, but Annie didn't need similar aid. She was well-equipped to handle the job all on her own.\n\nAnnie pulled off his cock and smiled at her BFF, a healthy dose of slime dangling from her chin. The unexpected competition playing out in front of him set off alarm bells. Best friends or not, both Mom and Annie were women, and he was experienced enough to know how cutthroat girls could be with each other. He needed to do something before his current paradise potentially devolved into chaos.\n\nBut Mom had other plans.\n\nMom pointed down at the floor in front of her, causing him to step to his left to fulfill her demand. She was still his mother at the end of the day. If she wanted something, then she got it.\n\nDetermination swept across Joy's face. Who cared if her girlfriend was apparently a deepthroat queen? She could suck dick with the best of them, and she refused to treat her perfect angel to anything but the best. If he liked having his cock swallowed whole, then she would be a good little slut for him and make his manhood vanish right before his eyes.\n\nJoy locked her hands around the back of his legs, took a deep breath, and wrapped her lips around his shiny meat.\n\nThe room had severely misread Annie's intention. She wasn't an overly-competitive woman full of jealousy and contempt. On the contrary, to be honest. In fact, she was the definition of a dream girlfriend, and she planned to show Sean and Joy how fun she could be.\n\n\"Good girl,\" she encouraged Joy to take all of Sean's big cock.\n\nAnnie planted a loving kiss on Joy's cheek after she reached the base, and her helping hand clenched onto the back of her friend's head to keep her in place. As fun as it was to be submissive, it was equally as exciting to dominate someone, and she got a rush from bossing Joy around. It allowed her to embrace her alter ego.\n\nWith Sean's cock lodged down Joy's throat for the foreseeable future thanks to her aggressive decision, Annie used her free hand to cup her boyfriend's balls and lift them toward Joy's bottom lip. What was the first step to being a fantasy girlfriend? To do fantasy stuff, of course!\n\n\"Lick his balls,\" Annie ordered.\n\nJoy's tongue slipped out and slithered along her son's heavy nutsack while she enjoyed her final few moments of complete submission. Fantasies of being able to let loose and act as some cute hunk's plaything had become all too familiar over the years, but she never expected to find fulfillment courtesy of her son and best friend. She didn't plan to complain, though. How many other women had a pair of playmates as sexy as hers?\n\n\"Your mother is such a good little slut.\"\n\n\"Fuck yeah, she is,\" he agreed with Annie, moaning from how Mom's tongue continued to slide along his balls. Maybe she could give Annie a run for her money, after all?\n\nJoy slapped her son's naked thigh urgently, causing Annie to release her hold on the back of her head.\n\n\"I have some good news for you, handsome,\" Annie spoke up while Joy inhaled wildly in an attempt to catch her breath.\n\nHis mother had just licked his nuts while deepthroating his cock at his girlfriend's insistence. What could possibly be better than that?\n\nAnnie looked up at him with a wicked grin. \"I like girls.\"\n\nHe was wrong. Very, very, very wrong. Sloppy blowjobs, dirty talk, and even fat asses couldn't compare to her latest reveal, and he smiled as the perfect idea came to mind. Forget about having his cock sucked. Now, this was what he really needed.\n\n\"I want to see you two kiss.\"\n\nAnnie instantly turned her attention to a surprised Joy. The man of the hour had made a request, and she wouldn't dream of turning down any of her boyfriend's demands. Besides, what she said moments ago was true. She really did like girls.\n\n\"Um...I'm not so sure about that,\" Joy hesitated after fully regaining her bearings. \"I mean, we--\"\n\nHer indecision was cut short when Annie decided to take matters into her own hands. She lunged at her girlfriend, kissing her on the lips before she thoroughly assessed the situation. Did Joy like girls? Had she ever experimented in college? Annie didn't have the answers to any of those questions, and she honestly didn't care either. Her primary concern involved making Sean happy.\n\nAnd if watching Annie kiss his mother didn't surprise him enough, then he almost screamed when Mom kissed her back.\n\nHow did life continue to keep getting better? His two favorite women in the world made out in front of him like a horny high school couple, and he was allowed to stroke his cock while he watched the show. Actually, Annie would probably be mad at him if he didn't play with himself!\n\nBut what if he fully immersed himself in his new celebrity lifestyle? Having a threesome with two voluptuous angels pretty much made him a rock star, didn't it? And if he was truly a rock star, then he was entitled to anything and everything that he wanted.\n\nWith one hand on the back of Annie's blonde head and another on the back of Mom's brunette head, he pushed his cock between their pouty lips, breaking apart their kiss in a moment of total self-centered pleasure. It was a selfish act aimed to not only bring him joy, but to primarily send his confidence into the heavens. This was it. He'd officially reached the pinnacle of life. Nothing would ever compete with what he looked down upon.\n\nMom and Annie's plump lips dragged along the sides of his manhood as he gradually pushed forward, and his smile grew as he pulled back, allowing them to meet at the tip of his cock. What would they say? Hell, what would they do? One of them would have to speak up. He'd obviously crossed the line, and he expected to be reprimanded for his decision.\n\nBut instead of negativity, the girls decided to resume their kiss.\n\nTheir tongues tangled over his cockhead as playful titter flowed through the air. They were both giddy from what had unfolded! Anger or even disbelief was nowhere to be found as he tightened his handfuls of their hair and prepared himself for his next move.\n\nHe pumped between their mouths once more, separating their kiss yet again as their soft lips massaged the sides of his dick like pillows. This time, he didn't provide them the opportunity to rekindle their affection. Instead, he used their mouths to his liking.\n\n\"This is so fuckin' hottttt...\" Annie moaned while his moving dick dragged her parted lips with it, momentarily slurring her speech.\n\nMom opted to giggle cutely as he continued to treat her like one of his eighteen-year-old girlfriends.\n\nThe intensity of their smooch increased tenfold when he finally pulled back far enough to allow their lips to meet. Screw a simple kiss. Having these two make out over the head of his throbbing cock cemented his status as a god. There was control, authority, and even kingship, but they all paled in comparison to his unmatchable power.\n\nAnnie chose to end their kiss earlier than either Sean or Joy expected, but for a very good reason. She pushed her girlfriend's head under Sean's cock and right into his testicles. She didn't have to, but she decided to verbalize herself anyway.\n\n\"Suck his fuckin' balls.\"\n\nJoy licked and lapped at her son's heavy nuts without second thought regarding what fueled her actions. She was motivated by pure sexual lust, but she knew better than to think that she would behave the same way for some random hunk. Her baby was special, and he deserved to be treated as such.\n\nAnnie took him inside her mouth and bobbed on half of his dick, unable to go deeper due to Joy's placement. It wasn't the end of the world, though. She would gladly deepthroat her man later. After all, she wouldn't be able to suck his cock and properly lick his balls by herself, so she needed to capitalize on having a partner to help her out.\n\n\"Let me see your eyes.\"\n\nHis question wasn't directed at anyone in particular, but both of his girls granted his wish anyway. Innocent brown eyes and striking blue eyes gazed up at him as his dick and balls were groped by two loving mouths. It almost felt comical to complain about anything, but he just couldn't move past a certain detail. It drove him absolutely crazy.\n\n\"You're way overdressed,\" he told his mother.\n\n\"You can say that again,\" Annie commented, already pulling at Joy's shirt.\n\nJoy gave her baby's big balls one last kiss before raising her arms in the air to allow Annie to lift her shirt over her head. Meanwhile, Sean was already busy unhooking her black bra. Once again, the new couple showed how well they worked together as a team.\n\nSeeing Mom's big tits for the first time in his adult life wasn't enough after everything he'd experienced. He needed more. His expectations had been raised. Annie caused him to dream higher, so he took the reins and established his place in their new relationship.\n\n\"Stand up.\"\n\nHe quickly turned Mom so that she faced away from both himself and Annie. Her tight black yoga pants had teased him for years. Fantasies involving what hid behind them were responsible for thousands of inappropriate thoughts over the past decade, but he didn't have to wonder any longer. He finally had access to the crown jewel.\n\nAnd one glorious tug answered his question.\n\nHer big ass bounced out after he knelt on the floor and pulled her yoga pants down to her thighs. A black thong? Really? While Annie's thong didn't catch him off guard earlier, he never expected to see Mom in something so scandalous. How was her butt so perky as well? It was almost as if these two angels were figments of his imagination.\n\n\"Her butt is great, isn't it?\"\n\nIt wasn't easy, but his eyes left Mom's backside to look over at Annie. \"What?\"\n\n\"She has an amazing ass,\" Annie reinforced her stance concisely.\n\nIt took a moment, but he suddenly realized that these two had seen each other naked countless number of times over the years in the gym locker room. An endless amount of curves dominated his attention as he turned his focus back to Mom's rump. It was round, plump, and oh-so big, and he salivated at the idea of playing with it. There was so much that he could do with her fat ass.\n\nAnnie jiggled one of Mom's perky cheeks before giving it a kiss.\n\nHe couldn't take another second of torture. Eagerly, he lowered her thong as he braced himself for the most anticipated moment of his young life. He was man enough to handle two women. Well, at least he liked to think he could. The honest truth was that he'd never experienced anything remotely close to his current reality.\n\nBut even he didn't expect what awaited him.\n\n\"Oh my God, you little slut!\" Annie noted, grinning from ear-to-ear.\n\nHe didn't know what he liked more. As incredible as it was to have a bisexual girlfriend who loved to get dirty, he was downright smitten from the several sticky strings of natural juices that formed a bridge between Mom's pussy and thong. She was so turned on that he could see it!\n\nAnnie may have loved what she saw even more than he did. \"That big dick got you all wet, didn't it?\"\n\n\"Mm-hmm,\" Joy giggled, facing away from the pair of deviants on their knees behind her.\n\n\"Whose dick got you all wet?\" Annie urged her to get nasty.\n\nJoy took a big step into her friend's perverted world. Sometimes, it was fun to be bad. \"My son's big cock got me all wet and messy.\"\n\n\"Let me taste her.\"\n\nHe didn't need to ask Annie to repeat herself. He tugged Mom's thong down to her ankles and slipped it through her little feet after she stepped up for him. The mixture of black nylon and spandex in his hands represented his dreams, but the girl next to him was the key to all his fantasies. She was the spark that lit his fire.\n\nHe raised Mom's underwear to Annie's face and watched her lick it clean.\n\nHis girlfriend raised the bar yet again after she opened her mouth. He could see Mom's pussy juices on her extended tongue. Everything he craved so badly could be found only feet away, and he was done waiting his turn. It was time to take what he wanted.\n\nHe reached out and grabbed the back of Annie's blonde head, pulled her to him, and kissed her passionately.\n\nMom's sweet juices acted as the ideal complement to Annie's exquisite mouth. Their tongues tangled, swapping fluids with each other as they lost themselves in their own little world. The moment proved too intense for either of them to remember that they were no longer alone, but neither particularly cared. They were too caught up in one another.\n\n\"Am I no longer part of the fun?\"\n\nHe broke off his kiss at the sound of Mom's blissful voice, and he quickly realized that he may have gotten carried away when he observed her face for the first time in recent memory. Mom had turned around to question his intentions. It wasn't an irrational decision by any stretch of the imagination, but he had other plans than answering her question.\n\nHis eyes drifted south along her big tits, journeyed her cute tummy, and settled on her neat landing strip.\n\nIt was a nice change of pace from Annie's hairless pussy. It served as a reminder that his girls had plenty of differences to counter their many similarities. Staring directly at his own mother's pussy should have rattled him, but rather it was something else that snapped him out of his trance--something that he was extremely familiar with.\n\nAnnie stroked his cock frantically. \"I want you inside me.\"\n\nJoy cleared her throat, causing both of them to immediately look up at her from their knees. \"Mom outranks girlfriend.\"\n\n\"You're kidding me, right?\" Annie asked, tightening her grip on his thick meat.\n\n\"Nope, me first,\" Joy said with glee, breezing past them on her way to her bestie's bed. \"Sweetheart, I need to get fucked.\"\n\nHe was behind his mother before she knew it. A rough push sent her sprawling over the end of the bed, but her feet remained on the hardwood floor below as he admired his spectacular view. How good did Mom look bent over for him? Her yummy stomach, big tits, and gorgeous face could remain buried in the sheets until next year for all he cared, because his primary target presented itself without a hint of obstruction.\n\nHer fat ass.\n\nAnd as quickly as he made his way behind Mom, Angie joined his side with even more speed. She refused to miss the moment when her new boyfriend claimed her longtime BFF. She was such an awesome girlfriend, wasn't she? By no means would this be her last threesome with Sean, but nothing compared to the first time, and she deserved to witness every incredible second of their fun.\n\n\"Beg for it,\" Annie announced.\n\nWith the side of her face resting in her girlfriend's comfortable bed sheets, Joy dropped her voice to a childlike titter. \"Baby, I need that big cock.\"\n\nHe rubbed the head of his manhood against her inviting pussy lips.\n\n\"Make me cum hard and I'll be your girlfriend too,\" Joy whined, fully ready to spoil her son regardless of his capabilities, but desperate to experience his best performance nonetheless.\n\n\"That's up to me,\" Annie reminded her.\n\n\"Mom outranks girlfriend,\" Joy pointed out for the second time. \"You better pray that I don't start sending him over here completely worn out.\"\n\nAnnie seriously doubted the likelihood of that ever happening. Could an eighteen-year-old boy even be overwhelmed sexually? Especially an eighteen-year-old stud? Looking past Joy's obvious sarcasm, the notion that Sean would stroll into her house too tired to fuck caused her to roll her eyes and smile. He would be hard as a rock after thirty seconds inside her mouth!\n\nAnnie looked up at the hunk next to her with a wicked twinkle in her eyes. \"I want to hear her scream.\"\n\nHe rubbed his cock along her pussy more aggressively.\n\n\"Show her how much better you are than your father,\" Annie encouraged him, kissing his chiseled bicep. \"Make her take that big cock like a good little slut.\"\n\nHe pushed inside his mother for the very first time.\n\nTight, wet, and warm: it was exactly what he'd always imagined. One simple pump destroyed any potential comparisons to wild and sloppy blowjobs. A constricting throat couldn't compete with the way that Mom's snug walls hugged his dick from all sides, and her beautiful face didn't rival her big backside. It was his own personal paradise.\n\nHe listened to the godly sounds of her high-pitched moans as he escalated his pace. Both of his hands sank into her fat ass as he exposed her to every inch of his throbbing rod. Nothing compared to making her writhe in pleasure. Little boys showed their love with thoughtful hugs and spectacular report cards, but real men took care of their mothers in ways that other guys simply couldn't.\n\n\"Jesus, she's so wet,\" Annie said, staring down at the action. If the unmistakable sounds of a hard dick stretching a wet pussy didn't prove it, then the shiny glisten that coated his cock served as the final verdict.\n\nBut he didn't enjoy exposing his manhood to the mild bedroom air often. Life was okay when only his cockhead bathed in Mom's warm embrace, but he saw stars when he filled her snug hole. There wouldn't be anymore boyfriends or potential dating prospects. It didn't even matter if he continued his relationship with Annie, to be honest. Regardless of his status, Mom belonged to him and only him. It was his promise.\n\nAnnie egged him on, enjoying the preview of what she had to come. \"Harder.\"\n\nHe slammed into his mother, causing her big ass to ripple as his fingers sank deeper into her plump backside. She was built for a pounding. The skinny girls at school would beg him to stop if he attempted something even half as intense, but Mom took it all like a good girl. She really was an angel.\n\nAnnie wasn't satisfied. \"Harder. Make this bitch take it.\"\n\nHer obscene wish resulted in him fucking Mom harder than he ever imagined. His hips operated at a stunning pace, a lifetime of sports and training paying major dividends. His heavy balls slammed into her clit while his pelvis hammered against her butt, but he knew better than to think that he was solely responsible for his actions, because the girl squeezing his bicep brought out the best in him.\n\n\"Break her in half.\"\n\nMom's intense whimpers turned to screams when he granted Annie her latest request. Her shaky hands flailed in front of her, desperate for something to hold onto. It was the type of pounding that Mom had spent a decade fantasizing about and a lifetime hoping for, but she didn't have to dream any longer. Now, she had a real man to turn to.\n\n\"Je-Je-Je fuck-fucking Ch-Christ, swe-swe-sweeeeeeeeeetheart!\" Joy cried, unable to control her sloppy stammer. She never knew that sex could feel so intense and personal. This wasn't some guy going through the motions. Her son was trying to reach her stomach with his cock! \"I'm gon-gon-gon-gonna cum!\"",
        "Things took a strange turn after his most recent brutal thrust into the woman he loved more than life itself. Just how wet was she? She was so soaked that he calmed his frantic pace for fear of sliding out of her, but even his reduced thrusts didn't solve his dilemma. It was a problem he'd never encountered before.\n\nHe attempted to pull back slightly but mistakenly exited his mother altogether, and it wasn't until that very moment when he realized just how crazy tonight could get.\n\nFluids gushed from Mom's pussy, covering his groin and thighs in juices as she convulsed on the bed in front of him. It single-handedly qualified as the most insane moment of his life. As outrageous as it was to ever imagine making Mom cum, it filled him with accomplishment to watch her squirt. He'd pummeled her into complete submission!\n\nHis perfect mother remained sprawled over the end of the bed, his handprints indented on her buttcheeks while liquids dripped from her little pussy. It was the greatest reward a son could have. He needed to claim her. He had to give her what no other man could. He desperately sought her unwavering sexual loyalty.\n\nA stunned Annie finally managed to find her voice. \"I need that. Now!\"\n\nHe pushed back inside Mom, causing her to screech after he helped himself to another trip inside his favorite place in the world.\n\nAnnie tugged on his arm passionately. \"I need you to fuck me!\"\n\nAnother slow and methodical pump inside Mom permanently marked his territory. She wouldn't dream of seeking satisfaction elsewhere. He showed her what he could do, and she would come to him whenever she craved another taste. He was certain of it.\n\nBut that didn't prevent him from teasing Annie.\n\n\"Oh my God, I need you inside of me!\" Annie whined like a girl half her age. The way that she repeatedly tugged on his arm made him laugh. \"It's not faaaaaaair!\"\n\nHe couldn't torment her any longer. She was too cute and sexy to resist. \"You know what I want.\"\n\nWhile no one could deny that he shared a special connection with his mother, it was extremely obvious that he had something unique with Annie as well. She bent over the bed--inches from Mom--just like he wanted. In fact, her turned head allowed her to stare directly into Mom's exhausted and lovestruck eyes. She'd yet to recover from the most overwhelming orgasm of her life.\n\nWhat was better than one big ass bent over a bed for him? Two, of course! It was paradise.\n\nHe took one step to his left, grabbed his cock, and pushed inside Annie's little hole.\n\nMom's juices--which coated every inch of his steel pole--acted as the ideal addition to Annie's immense wetness. For the second time in only a matter of moments, he was treated to a big ass, tight pussy, and sexually frustrated older woman. Annie had so much in common with his mother. Even the way that she gripped his cock reminded him of Mom, but there was one major difference.\n\nWhile he'd assumed that Mom wanted to be fucked hard, he was absolutely positive that Annie desired nothing more than to be broken in half.\n\nThe bar had been set rather high. He'd just made Mom squirt, for fuck's sake! He couldn't drop the ball now. Annie wouldn't let him stop until he gave her an earth-shattering orgasm, and he locked his hands on her hips to prepare himself. It was time to see if he could actually handle a wild older woman.\n\nHe briskly found a familiar rhythm. The truth was that Annie intimidated him. She wasn't like Mom. She was more confident and direct. She would be more likely to speak her mind and voice her disappointment if he didn't live up to his end of the bargain, but he didn't allow the added pressure to hinder his performance.\n\nInstead, it motivated him.\n\nHe fucked Annie harder than he'd fucked Mom. Her plump ass bounced with every rough pump forward, and his aggression rose each time she begged for more. She was relentless. His girlfriend possessed the innocent appeal of a blonde-haired, blue-eyes angel; the dangerous curves of a woman with a history of making men bust in seconds; and the sex drive of a vixen who stole souls. He knew that he would never meet anyone else like her--Mom included--and his confidence grew as her moans became increasingly more jumbled. It was the recognizable sounds of a woman on the cusp of an orgasm.\n\n\"God, you're so much better than your father.\"\n\nHis eyes darted to where he'd last left her mother, happy to find her finally regaining her bearings. Her compliment warmed his heart as well. Actually, he may have enjoyed her words even more than her inability to move a muscle. He'd fucked her so hard that she was stuck in mud!\n\n\"I-I-I love him,\" Annie sputtered, staring at her girlfriend while the pummeling continued. \"He-he's moving in.\"\n\nJoy burst into laughter. \"No, he isn't!\"\n\n\"Yes-yes-yes, he-he is,\" Annie argued despite her stupefied state. No one had ever made her feel anything like this before.\n\nJoy allowed her bestie to lose herself in the fantasy of living with Sean, but such insanity would never happen under her watch. Sean was her son! And he was the only man in her life! He would live at home for at least the duration of college, and she started to open up to the idea of inviting him into her bedroom a few nights a week as well. Why should Annie be the only one who got to enjoy him?\n\nAnd then Joy's mindset changed completely.\n\nShe could worry about the future later. There was so much time in daily life to dwell about impending plans and outlandish declarations, but moments like these were few and far between. For the first time in her life, she watched orgasmic bliss overcome Annie's joyous face, and she couldn't possibly be happier for her girlfriend. She deserved it!\n\nAnnie's gripping pussy clamped around him like a glove while she quivered with delight. There was a power in making a woman cum. It boosted his ego and increased his libido, but more importantly, it guaranteed their return. Mom and Annie would both knock down his door for more after what he'd brought to their lives. He was certain of it.\n\nHis strong hand had little effect on his ecstatic girlfriend after he pulled out and cracked her on the ass. All was right in the world as he stepped back to admire his work. Two big asses stared back at him, attached to a pair of satisfied women who could barely move as a result of his impressive performance. It was more approval than he would ever need.\n\nBut as happy as Annie was, something still rubbed her the wrong way. \"Why didn't I squirt?\"\n\n\"What did I tell you earlier?\" Joy chuckled, gazing into Annie's blue eyes while neither of them had yet to find the energy to move an inch. \"Mom outranks girlfriend. I have a connection with him.\"\n\nIt hurt Annie to admit it, but Joy was most likely right. Sean and Joy shared a bond that she could never replicate. It was a unique part of being a mother that she couldn't understand.\n\nSean jumped up onto the bed and laid flat on his back. \"Who's next?\"\n\nThe girls grinned at each other. They still struggled to believe they had access to a young hunk who could pass for the Energizer Bunny. How did they end up so lucky?\n\n\"You can go first,\" Joy told Annie. \"Besides, I have something else in mind.\"\n\nThe girls climbed up onto the bed, Annie wasting little time taking a seat on his towering erection, while Joy opted for a different approach. Dick was a dime a dozen, and she could find sex easier than a reliable morning coffee. There was something that was in short supply, however.\n\nShe sat on her son's face.\n\nThe girls faced each other as the fun resumed after only a brief break. Annie bounced on Sean's cock while treating herself to the show in front of her, and Joy admired her girlfriend's curves as her son ate her pussy like his life depended on it. It was the Holy Grail for the curvy friends. Annie got some good dick, while Joy finally found a loving tongue.\n\nHe would gladly die in a similar position. The God's honest truth was that he didn't even need Annie to ride him at the moment. Actually, he didn't need to eat Mom's pussy either. Just one or the other would be fine, but he didn't have to settle. Instead, he was spoiled with the best of both worlds!\n\nHe was on a mission that few men had ever embarked on. It was tough enough to handle one woman, but he was hellbent on simultaneously pleasing two. Who deserved it more than Mom and Annie? He would give Mom the world if he had the opportunity, and he felt equally as passionate when it came to Annie's situation.\n\nAnnie's velvet pussy engulfed his cock while he enjoyed Mom's distinctively pleasant pussy juices. His impending orgasm taunted him at every turn. He wasn't Superman. The clock ticked on how much longer he could hold out, but he was determined to make both of his girls cum again before he eventually conceded to nature.\n\n\"You definitely didn't inherit this from your father either,\" Joy noted, jubilant to discover his enthusiasm for oral sex.\n\nAnnie was a happy girl in her own right. She'd yet to stop bouncing on his stiff pole. \"He's a natural.\"\n\nHe still couldn't believe how sexually impoverished these two were. There should be a line of guys waiting to eat his mother's pussy! And why didn't every man on the planet jump at the opportunity to allow Annie to ride them? He wanted this twenty-four seven!\n\nHe reached out blindly and found both of Annie's curvy hips as Mom grinded on his mouth. What could be better than this? Fifty million dollars? Or maybe forty Playboy bunnies? Who was he kidding? He wouldn't trade his place for anything in the world!\n\nAnnie had some very important information to relay to her girlfriend, and she was far too giddy to joke around. \"You're crazy if you don't think he's moving in with me.\"\n\n\"I might let him sleep over once a week, but he absolutely isn't moving in,\" Joy said for the second time tonight. She wouldn't entertain the possibility of losing him after discovering his talented tongue. She needed his mouth in her life!\n\nAnnie would be the decider of that. Best friend or not, she didn't really need Joy's approval, did she? Sean was eighteen. That made him a man the last time she checked. He decided where he wanted to spend his nights, and she made it her mission to provide him with a tempting alternative.\n\nAnnie swirled her hips, causing him to let out a deep moan while his mouth remained buried in his mother's pussy. What was the best and easiest way to a man's heart? Through his cock, of course!\n\nShe grinded her boyfriend into submission. It was a change of pace from her typical style of being on the receiving end of Sean's aggression, but most importantly, it helped to prove her status as his number one girl. A mother could only do so much. It took a girlfriend to truly satisfy a man in all aspects of his life, and his deepening grunts provided adequate feedback for her naughty deeds.\n\n\"Sllloooo donnnn!\"\n\nJoy lifted herself slightly with a smile. \"What's that, honey?\"\n\n\"Slow down!\" he repeated, clearly this time. It was a hell of a lot easier to speak without Mom's pussy in his mouth. Although, he preferred tasting her to anything else.\n\nJoy sat back down on his face, but horror promptly replaced her carefree attitude. \"Hey, he said to slow down!\"\n\nAnnie continued to grind away with nothing but mischief on her mind.\n\n\"Annie!\" Joy shouted.\n\nEven Sean's strong hands couldn't halt Annie. Sure, she could bribe him to move in with delicious dinners, zero responsibilities, and an onslaught of oral sex, but she decided to take the simpler approach. It was a tried-and-true method, after all.\n\n\"Annie, stop!\" Joy yelled once more, flustered after she picked up on her BFF's plan. Their night couldn't end already! She needed to cum again!\n\nAnnie paused her moving hips. \"Sean stays with me three nights a week.\"\n\nJoy's indecision showed that she wasn't so quick to hop on board. \"I don't know...\"\n\nIt was all the motivation Annie needed to finish off her stud. Sometimes, she could be a bitch, and Joy unfortunately got to experience her bad side firsthand in her bedroom. So what if she felt possessive of Sean? He was her boyfriend! She was entitled to his time!\n\nAbsolutely nothing could slow Annie down. She wasn't a little girl. She was a grown woman, and she knew exactly what she desired at the ripe age of thirty-nine. She also refused to take no for an answer.\n\nJoy knew that she watched her orgasm slip away. Even eighteen-year-old jocks needed time to recover after cumming, and she had no idea how long it would take to return to the brink of orgasm if she didn't cave to Annie's demands. While she wanted Sean safely in his bed seven nights a week, it looked like she wasn't afforded the opportunity to get her way. She would have to make some concessions in order to find happiness.\n\n\"Two nights a week,\" Joy countered Annie's offer.\n\nAnnie wasn't picky. Plus, she felt extra easygoing with a big cock inside her. It was a win-win for everyone involved.\n\n\"Deal,\" Annie accepted, carefully grinding on his thick dick. She knew exactly how to get what she wanted without making him cum early. \"Well, under one agreement. I want a kiss.\"\n\nSean brought his mother to orgasm as he listened to the tantalizing sound of his dream girls making out above him. His senses operated like never before. He could see without using his eyes. He could feel without needing his hands. Everything around him was enhanced thanks to the two angels in bed, and he warmed-up to the idea of Mom joining his sleepovers at Annie's. Her bed was plenty big enough for all three of them.\n\n\"Jesus, he's gonna me cum again!\" Annie grunted, breaking off her kiss as a wave of warmth overtook her body.\n\nMaybe he really was a god? What else could explain his innate ability to make Mom and Annie orgasm over and over without any real effort? He didn't even do anything to make Annie cum on his dick just moments ago! She erupted all on her own!\n\nBut he had something particularly deviant on his mind.\n\nWas he ready to officially make Annie his girlfriend? For sure. Did a different girl still outrank his favorite blonde in the world? Without a doubt. It wasn't Annie's fault. She was sexy, funny, and phenomenal in bed, but she just couldn't compete with his mother.\n\nHe slipped out of Annie and gently pushed Mom off of him. In an instant, he flipped Mom over onto her hands and knees and knelt behind her. He didn't see the need for flash and style when the basics got the job done. He also didn't want his mother in any other position. She was built specifically for doggy style.\n\nEverything felt right when he returned home. He belonged in Mom's pristine pussy. A decade without much of a love life kept her nice and tight for when a real man finally came along, and he knew that he would never allow her back on the dating scene after tonight. She was his girlfriend now too.\n\nAnnie made her way to his side, admiring the view while she massaged his shoulders. \"Have I mentioned that I like to share?\"\n\n\"I kind of figured that out,\" he laughed while enjoying the way that Mom's big ass rippled with every thrust forward.\n\n\"I'll be bringing you home girls from the gym, ones who I meet through work, and even a few off Tinder,\" Annie told him, kissing his bicep. \"We'll have to invite your mother over too. Not too many guys ever get to experience a foursome, you know?\"\n\nWould the addition of some cute blonde from the gym be too much for him to handle? While he loved to tell himself that he could satisfy three women at the same time, he knew better than to think it would be easy. Fortunately, he was always up for a challenge, and something told him that Annie loved that about him.\n\nSuddenly, a mouth pressed against his ear. \"I like it when you fuck her hard.\"\n\nHe pumped his mother more aggressively.\n\n\"I like hearing her moan,\" Annie whispered, her big tits pressed against his shoulder while he hammered into Mom with even more force than before.\n\nHis hands locked onto Mom's hips to make her feel every inch of his love. Annie was the fuel for his engine, but Mom was the spark. She was the girl who sent him into overdrive, and she was the woman who made him lose control. She was simply too much.\n\nWith his left hand comfortably on Mom's thick hip, his right hand grabbed Annie by her blonde hair and moved her face directly to the side of Mom's big ass. He had a fantasy that didn't involve romantic dates and long walks on the beach. Selfishly, the moment became all about him. His desire to please his two fantasy girls took a back seat to his primal urges.\n\nOne last electric stroke inside Mom was more than he needed. He pulled out and pointed his cock at Annie's pretty face, not surprised in the least to find her wagging her tongue at him. Her naughtiness was well-established.\n\nCum rocketed from the tip of his dick and sailed directly down Annie's throat, causing her to gag for a brief moment before she quickly collected herself. A woman like her wasn't deterred by unexpected surprises. The stronger the cumshot, the better the job. She'd worked hard for his load, so she would enjoy every sweet drop of it.\n\nHis next blast slammed into her upper lip as she refamiliarized herself with everything that accompanied dating a real man. Poor excuses for cumshots were part of her past life. Now, she had a hunk who shot ropes, and she couldn't get enough of it. She wanted to be filthy for him.\n\nBut a never-ending facial shower evaded Annie on this Friday night. Thick white streaks of yummy seed didn't cover her hair, eyes, or even her nose like she so desperately craved. She simply wanted to feel like a slut. To be used by a man worth submitting to. It was an unforeseen twist in a night already full of wild surprises, but what she saw after opening her eyes made everything worth it. She couldn't even hold a grudge.\n\nSean had pushed back inside his mother and emptied every remaining drop of cum inside her.\n\nThe eruptions were endless. Every prior orgasm throughout the course of his life cumulated in one intense period of euphoria, and his shaky legs felt the incredible effects. He could barely keep himself upright as Mom's tight pussy continued to suck the cum out of his cock.\n\nAnnie didn't have time to dwell over the past. She was already on to bigger and better things. \"Joy, you know that I've always wanted a child of my own,\" she said in her most polite voice.\n\nJoy could barely comprehend the past hour of her life, let alone whatever Annie had on her mind. Her own son just came inside her! How could she possibly think about anything else?\n\n\"Sooooo, what if Sean gets me pregnant?\"\n\nAnd just like that, Joy snapped back to reality.\n\nJoy no longer thought about the big cock that had yet to leave her pussy. She didn't even feel his warm load inside her. Instead, she focused solely on her bestie's outlandish words.\n\n\"What did you just say?\"\n\n\"I'm thirty-nine,\" Annie said despite her desire to make Sean think she was younger. \"I don't have a lot of time left.\"\n\nJoy couldn't wrap her head around what she was hearing.\n\nAnnie decided to lay it all out in the open. \"Let's say that I find a guy. It'll take years before we have a kid. I can't wait that long! My biological clock is ticking!\"\n\n\"You want my...son...to get you pregnant?\" Joy asked, dumbfounded.\n\n\"Mm-hmm,\" Annie verified without a moment of hesitation. \"I want him to give me a baby.\"\n\nSean didn't need to be convinced further. In fact, he never needed to be convinced at all. There were two women who he wouldn't balk at the idea of impregnating, and they were both in bed with him. Like usual, Mom sat on top of his list, but Annie came in at a close second, and she wasn't too bad of a consolation prize.\n\nHe withdrew from his mother to allow his cum to leak slowly from her warm hole. His plan was simple yet wild. It was the type of thing that he would only see in porn--and never experience in real life--but that didn't appear to be the case at the moment, because Annie didn't even allow him to set the wheels in motion. Instead, she took complete control of the situation.",
        "Annie clamped her mouth against Mom's little hole and sucked his cum from her pussy. It was his ultimate fantasy come to life. He lived something that no other man would ever experience, but greedily, he wanted more. He needed something special.\n\nHe wouldn't be happy until Mom tasted him too.\n\nAnnie collected the rest of his cum from Mom's pussy, looked up at him, and swallowed.\n\nThis wasn't how things played out in his fantasies. Mom and Annie would swap his cum, kissing while they took turns treasuring the taste of his seed. They would giggle as they explored each other's bodies for his enjoyment. They would smile at plans of future threesomes and occasional foursomes.\n\nBut they didn't do any of that.\n\n\"Whoops,\" Annie remarked sarcastically as her smile turned to a grin. \"Darn it, I forgot to share with your mother. It looks like you'll just have to give us another load.\"\n\nHe envisioned the rest of his night as he watched Mom and Annie kiss. Another load? How about five more? He had a mom to take care of, a girlfriend to impregnate, and a life of sexual bliss to look forward to. He had plenty on his plate, but hey, someone had to keep these angels happy."
    ],
    "authorname": "mt44",
    "tags": [
        "moms friend",
        "threesome",
        "taboo",
        "incest",
        "mom incest",
        "threesome incest",
        "moms best friend",
        "older woman younger man",
        "thick",
        "moms friend incest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/twice-as-nice-5"
}