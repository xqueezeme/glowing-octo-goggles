{
    "title": "My Little Ventrue Pt. 02 Ch. 05",
    "pages": [
        "Author's Note: Second edit pass complete! Check out my bio for details.\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Damien~~\n\nThere is much you can see from above.\n\nDamien sat there, sullen, in the dark, until the image of it made him shake his head. If anyone had the right to be emo, angst, edgy, dark and brooding, it was him, but things were different now and every action had purpose and goals. He sat atop one of the tallest towers of South Side, and he peered through his telescope. Not some child's toy either, but a genuine, expensive, heavy machine he'd carried with him up the tower.\n\nThere were several such towers, and he knew which ones were safe to perch from and observe the city in peace. The Carthians, the Invictus, even the occasional witch from the Crone, he knew their faces and he knew their patterns. For fifty long years he watched, waited, analyzed, stalked, and it was all starting to come together, now that Lucas was awake once more.\n\nHe hoped.\n\nThis tower he chose because it allowed him to see into Jack Terry's room. The boy was standing by his large window, and he was... practicing poses of intimidation. He had a glass of blood in one hand, his other hand in the small of his back behind him, and he was trying to stand up straight with good posture. It did not suit the small vampire.\n\nHe could kill Jack, of that there was no question. He could have killed Natasha and Jessy too, if he hadn't let his guard down and suffered a bullet to the face to start their fight, and hadn't been trying to subdue them instead of kill them. That defeat still ate at him. Jack, he could kill in his sleep, but the boy deserved no such fate.\n\nHis lover did, and that was why he watched him. Information was deadly, and any he could gleam from Jack about Antoinette would be worth it. If the worse came to pass, he could kill Jack to make sure she suffered, but it would be a hollow victory. And it would doom him. The Prince would burn the city to the ground looking for him, and even he could not avoid that.\n\nHe could kidnap Jack, hold him hostage, but then the Invictus and the two Dragons would rain death upon him and the Lancea et Sanctum. The Carthians would probably join in just to watch the fire.\n\nEvery fiber of his being, every shred of dust and ash in his withered insides wanted that Prince dead. He wanted to see her crucified and left for the sun. He wanted to collect her ashes and throw them into the the sewers.\n\nBut he couldn't do it. Not for any ethical, moral, or even political reason. He simply did not have the strength. Lucas was only just awoken from fifty years torpor; it would take him months, even years to fully recover the strength he once had in his prime. All Damien could do was believe in his sire. He had a plan.\n\nMovement. Jack was turning from the window to answer the door.\n\n~~~~~~~~~~~~\n\n~~~~~~~~~~~~\n\n~~Antoinette~~\n\nHow long had it been, since she had walked the streets of her city so openly?\n\nShe had to be careful, for more reasons than most. As Prince she was a target, her second death would cause a power vacuum many hoped for. But there were other, more subtle reasons, such as her distinguished features. It meant that older humans could recognize her quite easily, even if they hadn't seen her in half a century. Kindred faces did not appear on camera or film easily, the beast was a sly creature capable of avoiding such things, but a human's eyes had no such issue.\n\nStill, it had been a long time since she'd let her face be openly known to the public, and that meant she could walk the streets if she wished. And now in the modern times, her white hair, her red eyes, they were just expressions of the latest fashion with hair dye and contact lenses. Naturally.\n\n\"What do you want to do about Lucas?\" her sheriff said.\n\nDaniel was next to her. The tall, quiet man with his monotone voice kept pace with her as if he was inanimate, like some sword in its sheathe. Something about the way he moved, trench coat and unassuming face behind those boring glasses, was enough to make any approaching kine step aside and give them both a wide berth. \n\n\"I am not sure. No doubt it was Tony's death that sparked his return, but Viktor's death would only harm his inevitable attempts to reestablish the Sanctified.\" She gave a small shrug and kept walking. Even for a midnight stroll through her city, she would not be caught wearing something as drab as a trench coat. Instead she wore a black night coat with fur for cuffs and neck lining, with the straps of a corset along the coat's back.\n\nDaniel adjusted his glasses. \"He hides in Tony's complex, but has managed to convert many. His approach is the opposite of what I expected.\"\n\n\"What he did last time is why we killed them, Daniel.\" Antoinette gave him a quick glance, but kept walking. The topic of conversation was very sensitive, but meaningless to any kine who overheard. \"Now he attempts passivity, as if he were Ghandi. I suspect I will have to deal with him and that childe of his before their veil of deceit succeeds over their new congregation.\"\n\nDaniel made the tiniest flinch. \"Of course Voivode.\"\n\n\"Daniel, I know you spared the boy for a reason, but if he wastes your generosity, I expect you to have the will to deal with him.\" Her voice grew cold, ice, and she reached out to take her sheriff by the arm. She squeezed the wrist just hard enough to force him to look at her.\n\nHis eyes, as monotone as his voice, managed to hold her gaze until he adjusted his glasses again. \"Yes Voivode.\" The slight twitch in his lip was enough to let her know he was listening.\n\n\"Good.\" She let go, and they resumed their stroll. She did not enjoy being harsh on her sheriff, but circumstances had changed. Things were simpler when it was simply the two of them holding the city through sheer force, and keeping the other covenants under her control. Now she maintained an unsteady peace with two covenants, while one hid in the dark and the other seemed content to rise as Jesus.\n\nShe let out a quiet groan and brought a hand to her face. \"Once that fool Lucas is dealt with, as well as that sneaky childe of his, I will have to deal with Jacob.\"\n\n\"You don't trust him?\"\n\n\"Of course not. He plays his games for chaos and carnage. If I let him, he would have the entire city sectioned off, and he would let survival of the fittest rein within.\" Her voice turned to bile. \"No respect for the Masquerade, for the Danse Macabre, or anything that would last the tide of a revolution by the kine.\" She gritted her teeth and shook her head. How could the fools not understand? Lucas and his idiot religion would not survive technological growth, and neither would Jacob's Circle of the Crone. At least the Invictus understood that, and the Carthians.\n\nIn a hundred years, space travel could very well be commercial, and each decade brought with it new ways to expose Kindred everywhere. Could they not see the future? Were they so blind as to the dangers? Idiot children. Worse yet, idiot old men incapable of adapting.\n\nShe bit down on her fangs. Now she was angry. Things had been going so well, but Lucas's return and Jacob's games had ruined her delightful mood. \"Daniel, return to the tower and have my assistant cancel my three o'clock. I will be spending the remainder of my time with Mister Terry.\"\n\nWith only the smallest nod, he turned and started to walk, but he only managed a foot before she took his arm again.\n\n\"Daniel, your childe is already involved in this. You should warn them.\"\n\n\"... yes, Voivode.\"\n\n~~~~~~~~~~~~~~~\n\nShe knocked.\n\nOh, how long had it been since she knocked on someone's door? It seemed like such a simple thing, but now she realized it was a rarity in her life. It made her chuckle. She made sure to step aside so Jack would not be able to see her clearly through the peephole.\n\nHe opened the door with barely a check. \"Hello?\"\n\nShe reached out, grabbed him, and pinned him against the wall of the hallway. It was one of the more modern apartment buildings, where each floor contained only one apartment, all connected by a single elevator, each with a single small entrance lobby. It also meant no one could knock unless Jack had buzzed them in. She had her ways, of course, and had bypassed it. And still Jack had opened the door as if nothing was unusual.\n\n\"My dear boy, you are much too trusting.\" She leaned down to put her forehead against his, and met his gaze with a wicked grin.\n\n\"My Prince! I... um....\" Aha, she had caught him with his guard down. He even looked ashamed. \"You're right, sorry. Just habit.\"\n\n\"I am glad you are home though. Please forgive my unannounced visit, but I could do with a distraction.\" Too forward? Nonsense. She didn't let go of his wrists though, and kept them pinned to the wall.\n\nHe looked so confused, like a deer in headlights. \"Um, I... you're... alone.\"\n\n\"I am alone. Is that surprising?\"\n\n\"You're the Prince! I expected bodyguards, the sheriff, sniper sights tracing me right now!\"\n\nShe laughed. \"Were it but fifty years ago. The elders would hide in their homes and let their ancillae wolves handle the fighting between covenants. There is peace now, and I can once again walk my streets without fear of such mindlessness.\" She lowered her face further, until her lips were grazing the boy's and her nose was nudging against his. \"But even in such times, I took care of myself, little Ventrue.\"\n\n\"Wow. Just... it's like, royalty knocking on my door, ya know?\"\n\n\"Like? Prince is a Kindred title of politics.\" She pressed her lips against his, and drank in his green, wide eyes as she did so. \"You, my dear lover, have been fucking the Queen.\"\n\nOh the look in his eyes lifted her spirits immediately. He was so delightful, the way they opened wide with her words, realization and exhilaration and shock and fear mixing in only a split moment of awareness. She let go of him then, and took a step back to give him way. Once he realized why, he gave a small 'ooh' and stepped inside to hold the door open for her.\n\nShe recognized the apartment's style. \"You truly are Julias's childe. But I admit there is a certain elegance to the simplicity.\" The apartment took up the whole floor of the building, and every room with interconnected with few walls. Minimalist, with cool colors. Of course, there was the huge window that overlooked a huge chunk of South Side. Its sister building across the way had the same. People often stood in the windows and looked at each other. No one waved, but some managed smiles. Some did a little more than smile.\n\n\"Sorry, sorry! And, uh, I didn't know you were coming. So I....\" Jack looked around, scratched at his buzzed hair, and gave her a quirky smile. There was no mess, but there wasn't much of anything.\n\n\"Most Kindred your age would be hanging any memento they could of the time of their death. Something that would mark the time period they passed. Do you not have any idols?\"\n\n\"It's never been my thing, I guess.\" He put his hands out for her coat, and she obliged. Underneath she wore her business suit, though it was closer to a dress than a suit, and its ample cleavage and exposed knee was more than enough to pull the boy's gaze. \"I can sit, and listen to a virtuoso for hours, and focus on the depth and technique and complexity of the composition, but it just never occurred to me to put their picture up on my wall.\"\n\nThe boy was skilled in active music listening then. A rare talent. \"It sounds to me that you prefer to focus on the art, and not the artist, yes?\" She sat down on his couch, a lovely thing of black softness, and folded a leg over the other. \"To truly let yourself be captured in the moment of art is a skill rarely found in kine, Jack. It is something many Daeva look for in a potential childe.\"\n\n\"Really?\" He plopped down next to her on the couch. He too was in a suit, something far more casual, and she could smell the after-scents of kine on him. From the smile and the smell, he must have returned from a successful hunt.\n\n\"Indeed. That level of focus, and awareness? It is impressive, and it brings me joy to know that you have it.\" She curled a finger at him, and he slid closer along the couch. \"It is why you have an innate talent for the Ventrue discipline dominate. To focus so purely and completely?\" She pointed at her eyes, and then his own. \"It is the same focus a conductor uses to weave together a massive tapestry of dozens of instruments across movements.\"\n\nAnd he went deer in headlights again. She rolled her eyes, and laughed. Such talk could be saved for between Julias and his childe, but it was nice to know there was more depth to Jack than what was obvious. Even as he stirred uncomfortably while she watched him, the hints of self-awareness dripped from his movements. The way his eyes flickered for a second when he looked between her and an object, the way his fingers tapped subtle rhythms, it all left small droplets of thinking, processing, and being trapped in his thoughts.\n\nShe would pull him out of those thoughts into the moment, and enjoy doing so.\n\nShe blushed life. It was enough to bring the boys eyes up, and a smile. That expectant, nervous, excited smile. \"Blush for me,\" she said, in a way she'd grown accustomed to. And like a well-trained husband, he broke into a big smile and did as told. Warmth returned to their skin, as did color, and the heat of fake life.\n\n\"I still feel horribly unprepared, this place is just an apartment. You're royalty!\"\n\n\"And that is why I walk the streets alone instead of with an army of ghouls and ancillae, like Viktor would.\" She chuckled all the more. \"Ruling, for Kindred, is in the action, not the presentation. But,\" she waggled a finger, \"a little presentation never hurt. Have you decided on what to wear to the ball?\"\n\n\"The ball... er....\" He shuffled, squirmed, refused to look at her, and even dragged his feet along the hardwood floor. \"I haven't. Julias purchased me some things, cause... you know, never going to change size-wise.\"\n\n\"Mon cheri, you must fetch them! The ball is in only a few days, and while Julias has a good eye, he does not have mine.\" Her French accent erupted into full bloom. Hazy, distant memories of trying on dresses back in Europe crept into her mind, and faded away just as quickly, like dreams. But the emotion was there, and it touched on her and made her giggle.\n\nJack blinked a few times at her, then was up with a bounce and running down the hall. Nervous, as always, but excited too. In a few minutes, he had several garment bags thrown onto the counter of his kitchen.\n\n\"Heh, this could be fun. I never thought about doing this with you. Always seemed like the kind of thing to do before you meet the girl.\" He moved to the window and reached for the curtains. They were only open a couple feet, and now that he was aiming to close them, a thought dawned on her.\n\n\"Leave them open.\"\n\n\"Antoinette?\"\n\n\"The curtains, leave them.\" She brought her fingers to her chin and rested her index upon her lip, complete with a wicked smile. \"And try on some clothes for me, s'il vous pla\u00eet.\"\n\nConflicted. What would he do? He would obey, of course, after debating it in his mind as he always did. He would consider his options and realize she was presenting him the opportunity for both growth, and exhilaration. And after a moment he did as requested, with the occasional glance toward the window as he started to undress.\n\n\"A few windows across the street can see into here.\"\n\n\"Let them see, then. They are just kine, and no Kindred of age would care.\" She took her own glance at the window, and then back to the young man stripping in front of her. \"And any who see you would only grow hungry for you, as I do.\" She pulled her skirt up a few inches on one leg, and let the fingers of her other hand drift up her thigh.\n\n\"I... uh... should I\u2014\"\n\n\"Do not stop, little Ventrue. I would like to see the clothes.\"\n\nThe way he squirmed and struggled with the mixture of so many avenues of stimulation was like a tasty dessert. He'd glance out the window as he stripped off a piece of clothes, then back to her, and she'd entice him with her wandering fingers while she sat on the couch. Before long, he was down to simple undergarments, and trying on a suit.\n\n\"Hmm. It is lovely, but too business imposing. The ball will be formal, but not business related. It is a black tie event.\"\n\nJack scratched his head and looked down at his suit. \"The tie is black.\"\n\nLaughter just poured out of her. \"Oh Jack. Silly boy, I mean a tuxedo.\"\n\n\"Oh!\" He started to undress again, and once down to his boxers, he unzipped the bag containing the tuxedo. \"But... it doesn't have a tie. It has a bow tie, but \u2014 why are you laughing?\"\n\nIt was too much. The utterly perplexed expression on his face had her in fits of laughter. Her voice grew to a volume she'd not used in ages, and it was all joy. When she managed to recompose herself long enough to look at Jack, he was torn between smiling and looking offended, and it only made her laugh harder.\n\nShe got up, and with a swiftness that took her lover by surprise, she scooped him up into her arms and hugged him. \"Never you mind the insanity of it all. Just show me your choice of tuxedos... later.\" She set him down on the couch, and replaced him as the one on display.\n\n\"Later? I... oh.\"\n\nWith slow teasing, she started to undo the buttons of her suit jacket. \"I love to indulge in great displays of wealth, power, presence, such as a tuxedo or dress, when it is not a question of politics. I can faintly remember, when I was but a young ancilla hundreds of years ago, walking down grand stairways with silk dress twenty-feet long following behind me, tied to my naked body at the wrists. Musicians would be there, playing gentle music on strings, and before me a host of kine, men and woman alike, waited and bathed in a pool of warm waters. I would drink of them all, and the moans of sex would fill the corridors.\"\n\nJack's eyes were wide and glued to her fingers.\n\n\"But,\" she said, and slid out of her suit jacket to begin undoing the buttons of her shirt, \"it was all, as you once said, hollow. Right now, to simply enter my lover's abode, not to feed on kine, but to talk and touch? You may think this simple, or obvious, but to an elder such as I, this is... unique. Precious.\" She slid out of the white shirt and tossed it aside. As expected, the boy's eyes immediately fell to her bra, and how it fit snug against her large bosom. A delicate, white thing made more for looks than function.\n\n\"I... well... I mean... heh.\" He managed to break eye contact with her breasts and lift his gaze to her before scratching his buzzed hair. \"That does sound pretty amazing though.\"\n\n\"Oh? Then perhaps some day, I will gather a dozen girls for you? A slave to a Daeva discipline for the night, they would gladly do anything you wanted.\" She reached behind her, and undid the clasp of her bra with just the right amount of angle and twist that it came off with almost elastic force. And when it fell, Jack's eyes were again fixed to her breasts, helpless to them. \"But I think you will find I can satisfy any desire you have personally.\"\n\nHe gulped, something Kindred did not do, but her topless body was enough to regress him so. She chuckled, stepped forward, and put her hands on his shoulders. Her long white mane was behind her, spread over her back, and her breasts dangled with their size and weight in front of the boy's face.\n\n\"Undress me.\"\n\n\"... ok.\" His hands found her hips, and fumbled behind her to look for the zipper of her skirt. His face was almost touching her breasts, but he knew better than to disobey. It took some time for him to find the zipper and undo it, but time only made everything sweeter for her. She shifted her hips as he pulled down, and with tiny chuckles, worked her way out of the skirt. A kine or two were probably watching the two of them through the apartment window. Good.",
        "\"Continue.\"\n\nHe was practically melting, and arousal was pouring out of him. Her panties were, of course, of something both elegant and soft on the skin. Even a vampire disliked coarse fabrics. \n\nHe slipped his fingers into them, and let out a groan. \"God... so... beautiful....\" His tongue got twisted in his mouth, but his green eyes were locked to her hips, and lower. When he finally exposed her smooth privates, he groaned even louder. Then he glanced to the window. \"Um, some people might be able to see you.\"\n\n\"Then let them watch.\" She kicked off her heels, and raised a leg to place the foot upon the couch, next to the young man. She was completely naked, and her great height put her sex at the perfect height to Jack's face, as he was still sitting on the couch. With a quiet sigh, she stood up straight, and leaned her crotch in towards his lips, with one hand on her hip and the other on his fuzzy head.\n\nWith a little guidance, she brought the boy's head to her pussy's lips. He responded with another moan and wrapped her lips around most of her, devouring her, burying her slit in the warmth of his lips. He started softly though, like she taught him, and gave her clitoris slow, loving licks. More quiet mewls escaped her. She put her other hand on his head to balance herself, and pin him there.\n\n\"Slowly at first, like that. You can... taste me... growing more wet.\" She slid a hand off his head, found his arm, and guided his hand up between her legs. \"And when you can taste me, then you can enter me.\"\n\nJack looked up at her, though she had to lean forward to see past her breasts, and the look of intoxication in his green eyes had her growing more wet just for it. He was so enraptured, so compelled, she sometimes wondered if she had accidentally fed him some of her blood to bind him, or perhaps used a Daeva discipline on him to seduce him. But she had done neither, and it made it all the more sweet when he finally did slip a finger into her wet, dripping insides.\n\n\"Yes. There, a little deeper... there. Curl your finger toward yourself, like... that.\" It wasn't that Jack was a poor lover; indeed, he was a quick learner, but she knew what she liked, and every man could use a little guidance now and then. Jack didn't mind, and even thrived on the advice. He curled his finger toward her g-spot, and continued to lick her clit until her juices were almost dripping. When he started to suckle on her clit, pulling it between his lips and burying with his tongue, she did start to drip. Her juices trickled down her thighs, and it only spurred Jack to finger her faster. Sparks of pleasure filled her center, and rose into her into and down into her thighs.\n\nHer muscles clenched down. The orgasm was building, but it wasn't there yet. She would milk it though, suppress it and rebuild it until she was ready. \"Two fingers... harder.\" He withdrew his finger, and then spread her open with two, before resuming with curling pressure toward her g-spot that only grew harder, and harder. She started to move her hips with him, and put both her hands on his head again to steady herself as at last the waves of pleasure started to creep up and down her legs.\n\nHer toes curled, her voice grew quiet, and her eyes rolled upward. Her nipples swelled, and juices leaked out of her onto the boy's palm. \n\n\"Slower... gently....\" she said, a difficult thing to do in the middle of orgasm. But it was worth it. It would have been painful for him to keep going during orgasm, but to be gentle and milk her pleasure during climax was wonderful. Her pussy started to spasm on its own, and those blissful waves worked their way up into her chest and down to her toes. The gentle, continued touch of her lover kept those waves going, until her eyes closed and she basked in the long-coming afterglow.\n\nAt last, she stepped away. Her legs were quivering with orgasm aftershocks, and she let out a long sigh with contentment at how the sparks worked up her thighs. She sat down next to Jack, and leaned her head down to rest it atop his while she focused on those final pleasure tremors.\n\nThe young man was smiling giddy.\n\n\"Proud of yourself?\"\n\n\"No! Well... yes, but it's you, you know? The look on your face, and the way you move and... arg, it's all so damn amazing, and hot.\"\n\n\"Thank you.\" She took a moment to look around. His couch was quite large, with flat cushions. Horrendously dull, but efficient, and it also worked as a small bed. So with a chuckle, she leaned to the side and rolled onto her back, and laid down upon the couch. With a little adjusting of her long hair, and wriggling of her hips, she successfully got comfortable with her head up on the arm of the couch, and one leg behind Jack while the other rested on his lap.\n\n\"Umm...\"\n\n\"Come here, little Ventrue.\" She opened her arms for him, palms up, and motioned for him to come to her. She had vague images of a siren or mermaid, seducing a naive sailor from the safety of his vessel.\n\nBut only softness awaited her Jack. He smiled, green eyes wide at the valley of flesh she had laid before him, and he wriggled around to face her between her legs. She let one of her legs dangle off to the side of the couch to give him room, and he crawled up and over her with patience despite the ravenous look in his eyes. \n\nHe nearly fell off the couch getting out of his boxers, complete with looks of shame, but it only made her laugh. She reached out and slipped her hands down his back, felt the lean muscles of his smaller body, how his hard muscles lined his shoulder blades and down his spine, and how his abs rested against her stomach as he laid down on her.\n\nHer hands drifted back up to his neck, and without even thinking about it, she guided his lips to her breasts. Their large size and heavy weight made them fall to the sides of her ribs, but that did not stop Jack from closing his eyes as if in glorious rapture when he wrapped his lips around one of her nipples. He was laying on top of her, his weight but a feather, and the feel of his body and cock along her pelvis and stomach was warm, comforting, erotic. But it was the feel of his tongue, saliva, and lips enveloping her engorged areola and hard, swollen nipple that had her cooing.\n\nThe earlier orgasm had readied her body, and now everything the boy did, every lick of his tongue along her breasts, the way he shifted slightly with his cock resting on her lower stomach, the way his gentle groans vibrated on her skin, it all made her tingle with pleasure. Pleasure sparks worked through her, from her breasts into her core and down between her legs, and all she had to do was lay there and let Jack do what came naturally to him.\n\nThen he raised his head, tilted it to the side and looked at her, puzzled. \"You ever think... I dunno, just sometimes I think this is a little childish of me.\"\n\n\"Oh?\"\n\n\"Your breasts! They're... huge, and soft and so heavy, and... your nipples get all swollen and big....\" As if addicted, he cupped the weight of her other breast to push it up onto the center of her chest so he could nudge his nose into its soft underside. \"And I have to suck on them. Not exactly manly.\"\n\n\"We can do something manly later, my little lover. Perhaps a blowjob? And then you can take me hard from behind?\" He blinked with raised eyebrows, and she laughed. She would do it, of course, and enjoy every moment if only because of how fun it would be to take Jack through such exhilaration. But... \"But for now, I would like to lay down on my lover's couch, and feel his kisses on my breasts. Many women would love for nothing more than this.\n\n\"If only one change....\" She reached down underneath him, between where their stomachs grazed each other, and took his cock into her hand. He backed up a little, looked down at how she held him, and melted into her grip like butter as she guided him in. The feel of his member opening her soaked flesh was always the most euphoric moment. Each separate inch of his cock spreading her and making her cunt spasm in random spurts of delight. And when she squeezed, Jack had to work to push himself in further, which made her weak in the knees and had him almost whimpering as her soaked, hot flesh gripped him.\n\nBut eventually he was in, and she put her hand back on his head while the other rested on his lower back. She helped him of course, raised her hips into him and guided his motion with her hand, but it was not a new position for them -- except for the couch part. He leaned down into her, balls deep inside her, and rocked back and forth in a slow, subtle motion while he used his hands to keep himself over her. No matter the position, the boy really loved to gorge on her breasts with his lips, and continued to do so. The warmth of her earlier orgasm made her breasts sensitive, her nipples hard and loving the attention, so each of his kisses sent more slow tingles down her core until it reached her thighs and toes.\n\nHis kisses drifted up higher, and she even found herself a little stunned when his lips found her neck. He pressed his chest down against her, just a little, and nudged his nose up underneath her jaw before taking a few more kisses along her naked collar. Despite being surprised, she leaned into it, and stroked his head's crown with encouragement. It was a little thing, but something Jack would not have done without her forcing it in the past.\n\n\"You know, every time we have sex... I really do feel like I'm in the arms of a goddess.\" His kisses drifted further down, and before long he started to do the same to one of her breasts again. \"A scary, deadly, beautiful undead goddess.\" He used his hand this time, and squeezed the soft mound so that it overwhelmed his hand and fingers. Without a care for time or need to cum anytime soon, he massaged her breast, ran his thumb over and around her swollen nipple, and again wrapped it within his mouth to suckle on it.\n\nAll she had to do was lay there and enjoy every moment of his touch and his words.\n\nIt was a slow, gentle bout of sex. She would entice more of his hidden, aggressive nature eventually, but there was no harm in reveling in the soft and loving pace of their style right now. It made sex last. For twenty minutes she laid there, caressed the man's back with her fingers, letting out quiet encouraging mewls whenever he suckled on her breasts, and squeezed his cock in a milking rhythm. So slow, the build up to an orgasm was like a relaxing massage, and eventually she succumbed to it.\n\nShe hugged the boy and went quiet when she came, as was her way. She focused on the pleasure, on the bliss of how tingling muscle spasms fired outward from between her legs and squeezed on that warm cock inside her. And he knew to ease his breast play, but he still sneaked in gentle suckles while she came on him, and more of her juices leaked from her.\n\nAnd then she squeezed, hard. Jack pushed himself up straighter, but he was trapped between her legs and unable to pull away. She saw that look on his face, the mix of pleasure and over-stimulation as she gripped his cock hard enough to hurt and force her juices to drip out of her. She dipped her hips left and right, squeezed in rhythm with the dance, and gave a joyous sigh at the look on Jack's face when the first gush of his cum flowed into her. He'd spent so long building up his own orgasm, every gush of cum was met with a shack of his body and a thrust of his hips despite his almost painful expression.\n\n\"God... damn....\" He collapsed onto her. If he were still alive, he would have been panting. His cum started to leak out of her, warm and wet, and eventually his cock softened and fell out of her as well.\n\n\"From royal orgies with a dozen slaves, to a simple fuck on a couch. How unbecoming a Prince,\" she said. Jack lifted his head and pouted, but she put her hand back his head and pushed it back down to her chest. \"Fret not. I am much happier here.\" She stroked his buzzed head, grinned at the fuzzy texture, and massaged his back with her other hand.\n\n\"Yeah?\"\n\n\"Truly. It has been centuries since I have been able to enjoy something so delightfully simple and intimate. In the past, the Lancea et Sanctum would have publicly insulted me for such behavior. The Invictus too, but Viktor is gone, thanks to you,\" she said, and touched his nose with a finger. \"I owe you much.\"\n\n\"You owe me....\" He sat up then, and got up from the couch to walk around. That stern jaw made her think of Julias, complete with pacing back and forth. The boy completely forgot the window curtain was open. \"Then, I... don't suppose I\u2014\"\n\n\"You are going to the ball, Mister Jack Terry.\" She got up and followed after him. He backed up against the counter and looked down, broken; the guilt was obvious. \"Why would you not want to go?\"\n\n\"Besides not being able to dance? I... don't do well with crowds.\"\n\n\"I seem to remember the first time we met was at a similar event held by the Invictus.\" The fool boy, still prey to social anxieties. So she put her hands on his shoulders, and when he looked up at her, she leaned down to put her forehead to his as before. \"And you may not have heard during that ball, but I heard the whispers of many speaking your name. Apparently, you had quite the way with words with Viktor, yes? And others wondered what sort of creature Julias had sired. Who was this boy who stood among vipers, they whispered.\"\n\n\"... really?\"\n\n\"Indeed. And now your sire is a part of the Invictus Triumvirate, and you are publicly known to be the lover of the Prince.\" Men. All it took was a little stroking of the ego, and men were as malleable as clay. But it did not change that it was all true. \"You have the social skill, and you have the status to empower it. Do not be afraid of the other Kindred. Most will be more afraid of you.\"\n\n\"... me?\"\n\nAha, the boy smiled with that subtle glee of a Ventrue validated. Good. He would have to leave his human habits to die, just as his human life did.\n\n\"Oui.\" She gave him a kiss, and reached for the tuxedo still within its garment bag. \"And just as Julias has tried to teach you, I am sure, you can say much with how you dress.\"\n\n ~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~\n\n~~Damien~~\n\nHe had not expected that.\n\nSure, he'd expected Antoinette and her little bitch boy to fuck, but that wasn't fucking. That was making love. He frowned until his cheek dug into the telescope. It hurt to watch.\n\nHe was envious.\n\n\"I'm a monster of God. A damned creature. Know peace in that.\" Still, Kindred could fuck Kindred. God didn't care whether two of his damned fucked, only that they did not lay with the kine. And it would be nice to have someone to hold.\n\nMaybe... Natasha? He reached up and touched where she'd shot him. Why was he thinking about her? Same age embraced, same bloodline. Maybe that was why, but something else nagged at him. Something about her seemed so familiar.\n\n~~~~~~~~~~~~~~\n\nTower #8, used for monitoring Natasha and Jessy. They had apartments near each other in South Side, and often looked out their windows. It was a Kindred quirk, to gaze out at the city from the window, like wolves gazing over a herd of sheep. Their curtains were closed this time, but Damien had quality sight. Mehket sight. He knew where to look, and he let the telescope roam over the street near the apartment building until he found the tiny girl.\n\nShe was standing still in the middle of the large sidewalks, surrounded by moving kine walking past her. In front of her, standing like a rock against water, was the sheriff. "
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "drama",
        "seduction",
        "non-human",
        "vampire romance",
        "vampire sex",
        "vampire novella",
        "vampire drama",
        "vampire",
        "sex"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-02-ch-05"
}