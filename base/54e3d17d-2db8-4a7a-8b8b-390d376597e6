{
    "title": "A Proper Scottish Wife Ch. 33",
    "pages": [
        "This is the final chapter of A Proper Scottish Wife and I have to say goodbye to them now. It's very hard. They're like my children now and I have grown to appreciate their individual quirks and sense of humor. My wife is a lover of so called \"Bodice Ripper\" romances and Outlander and originally conceived of this story, of a woman and three brothers, though she'd only thought through approximately the first two chapters and it had died there. I thought the idea had merit and began to work off her original idea. I just couldn't leave one woman forced to deal with three men, so the others had to meet their own women, but who and why and what would they be like. I can't really say I wrote these characters, they wrote themselves. I was merely the pen they used to come alive. I'd like to say I entered this with a plan and had it all plotted out before setting fingers to keys, but I did not. They wrote their own story. Something would happen, and I suddenly knew what the response would be. It many ways, it's unrecognizable from how I first envisioned it. I would like to thank all of you who followed the Cameron's story and appreciate them, me, their author, and the effort it takes to write it. As they exist in the past and I mostly write about the present, I don't foresee following them any longer, which is sad, but I've thought I might be able to construct a story containing an ancestor of these remarkable people, to remember them just a little. I'm thinking of developing it as an actual novel after toning down some of the racier parts of the story. A little historical tidbit. Elizabeth B\u00e1thory is a real person and one of the possible sources of the Dracula/vampire legend along with Vlad Tepes. Enjoy.\n\n*\n\n\"Thorburn, I assume it's Thorburn and Stuart,\" Blackthorne said. \"I'm sure he wouldn't miss the chance to rescue his lovely wife. How many others do you have in the tunnel, Thorburn? Ten, fifteen, or did you think just you and a couple others would be enough. Your other brother, perhaps. I would certainly like to know how you get into my tunnel without my sentries seeing you.\"\n\n\"Why should I tell you?\" Thorburn growled.\n\n\"Because I'm about to remove Lady Aileen's garments and since you won't be joining us, I thought you might exchange some information for a description of what I'm doing to her. I assume you would want to know, but perhaps you don't.\"\n\nBlackthorne stepped behind Ailene and grabbed her legs so she couldn't kick her and using the knife he held, cut the clothes from her body. She tried kicking and struggling as he did so, but he was strong enough to hold her while she was suspended and her clothes dropped to the floor. Blackthorne released her legs and stepped back. Ailene was hanging like a side of beef, though much prettier. She was turning and twisting in her bonds, kicking out with her legs, the epitome of feminine perfection.\n\n\"I must commend you on the beauty and grace of your wife, Stuart. She's simply superb. I've never seen a lovelier lass.\" He reached out and and caressed her ass and Ailene screamed. \"Her ass is perfect. I'm going to enjoy pushing my cock in it. And those breasts - ideal.\" Blackthorne grabbed one in each hand, causing Ailene to shriek again and increase her struggling. \"I wonder if they shouldn't look even better after I've marked them with my whip.\"\n\n\"We came in through the roof on the opposite side of the house,\" Thorburn said. \"We've the magistrate with us. You cannot torture Ailene. She's a lady of noble birth and the King would deal harshly with any who harmed one of his innocent subjects. You might have been able to get away with torturing a maid, but you'd never get away with torturing a Lady. The King's emissary is here to witness it.\"\n\nBlackthorne laughed. \"The magistrate; that corrupt, venal little man. If I thought for a moment I couldn't buy his silence, he would soon learn the roads around here are filled with the worst kind of brigands and thieves. You heard what happened to poor Abner McTavish; robbed and killed on the public road, disgraceful. It's so dangerous to travel these days. I would hate for anything to happen to our beloved magistrate.\"\n\nLancaster gasped in shock. \"You'd threaten the King's representative? Are you mad?\" He sputtered.\n\n\"I do not threaten you, your Lordship. I merely point out how unsafe the roads are and advise you to be careful. How can that be construed as a threat? Stuart, your wife's cunt is so tight,\" Blackthorne said, thrusting two fingers up the dry sheath, causing Ailene to scream and thrash again. \"I wonder how tight she'll be after fifty of my soldiers rape her every day for a month. Would you even feel it when you shoved your prick up her? Perhaps you'd not care to have her back. By the way, are you aware of how frequently whores who service soldiers become syphilitic. I understand it's a horrible way to die. So frequently, there's dementia involved, and the sores which pop up would horribly mar this flawless skin, though I admit she'd probably be a babbling idiot before I was done with her anyway. M\u00e1iri was just short of that level of pain. A shame she escaped. I wasn't quite done experimenting with all the things I planned doing to Lady Ailene.\"\n\n\"Touch a hair on her head, and I'll kill you,\" Stuart yelled. \"I'll strip the skin off you and feed you to the rats.\"\n\n\"Well, that's very graphic. I'm sure you'd like to, but I've got some much more interesting torments planned for Lady Ailene which shall occur with much greater predictability than a mere hope on your part you'll ever lay your hands on me. No, I'm afraid I'm unconcerned for your threats. They mean very little to me, while I'm afraid mine for your wife carry much more weight than the worried ravings of a little boy.\"\n\n\"And how would you explain the condition of her body?\" Thorburn asked, increasingly terrified. \"It would be clear to everyone she was tortured. You couldn't hide it.\"\n\nStuart was frantic. He was pounding on the door with his fists. Frang was attempting to calm his brother with little affect.\n\n\"Well, if her body was found at the bottom of a cliff by the sea, the victim of a tragic fall while walking, the condition of her body could be easily explained by the rocks and all the fishes and crabs feeding off her corpse. Unfortunate really. You've yet to comprehend how easily wealth affords a reasonable explanation to an unseemly death. How many bodies would you suppose I've disposed of this way? Or the people disappear, never to be seen again. Inexplicable disappearances, very tragic.\"\n\n\"You don't want to harm her, Blackthorne. Else you wouldn't have anything to trade,\" Thorburn said.\n\n\"That's the crux of the matter, isn't it? Are you willing to trade your lands for the lovely Lady Ailene or will you listen to me despoiling her while you sit impotently in my tunnel, unable to act. I'm sure her screams will be clearly heard while I tell you what I'm doing to her, although your imaginations won't begin to comprehend what she's actually undergoing. Oh, look; Te\u00e1rlag is waking up. She was so shocked to see the ton of dirt I'd piled up before the door. Alas, she fainted, poor lass. The disappointment was too much for her. Wake up, dear lady.\" Blackthorne pinched her nipples and Te\u00e1rlag screeched in pain.\n\nAilene, while happy Blackthorne was no longer paying attention to her, wondered why he was mistreating Te\u00e1rlag. Was this how he always treated her? Would he continue to do so, despite Te\u00e1rlag arranging for her capture? She thought rapidly.\n\n\"Let me go and I'll twist her nipples for you; twist them right off, if you'd like, the treasonous bitch,\" Ailene said.\n\n\"Drop the pretense, Lady Ailene. I know this cunt's been working with you. I don't know how long, but I know. I've had my doubts about her ever since M\u00e0iri escaped. Then her maid brings me what looks like a map of Achnadrish and the location of my tunnel entrance. The damn thing's practically unreadable, but I can see what it is. I suspect Thorburn's spied on me, as I've spied on him and perhaps he's learned of it without her help, but her maid thought it was her handwriting. Even if he knows the significance of the house, the tunnel entrance isn't easy to find and the catch into here even harder. Practically impossible I would say. Still, I was ready to give her the benefit of the doubt, though I warned her in the severest possible terms what would happen to her if she betrayed me.\"\n\n\"Thorburn and Stuart saw her entering the house and she was inside for a long time. It didn't take an abundance of imagination to know she was entering a deserted house for a reason. All they had to do was look for the reason for her disappearance,\" Ailene said.\n\n\"You would have me believe she didn't betray me, but you were aware of her spying and act all surprised and angry now as if you just now discovered her perfidy. I'm sorry, Lady Ailene, but the logic of your tale does not agree with the known facts. After my warning, I put a line on the door attached to a bell in my room. Nothing happens for several weeks and I believe my secret remains undiscovered and perhaps Te\u00e1rlag was loyal to me. Imagine my surprise when my bell rings two nights ago. Not much, a brief testing of the door perhaps. Then I learn you will be relatively unguarded and available to capture. What is the significance of these two events both occurring at the same time? An ingenious plan, Thorburn. Give me a reason to be here with a woman I've ached to lay my hands on at the same time as my tunnel is tested. It would have worked if you'd not tested the door before coming here.\n\n\"I couldn't believe my luck. The Camerons offering you to me on a platter at the same time I've learned Te\u00e1rlag's betrayed me. All I have to do is block this door without you being the wiser and I'll have you without any effort. On top of which, you're giving me the false whore who's betrayed me. We're going to have so much fun. Not you perhaps, but I will. Tell me, Lady. Were you forced into this plan by the Camerons?\"\n\n\"It was my plan. I volunteered. You're an evil bastard who stains the very earth you walk on,\" Ailene steamed. \"You needed to be ended before more people were killed.\"\n\n\"You feel guilty you fired the maid and allowed me to get my hands on her, don't you?\"\n\n\"Of course I feel guilt, not for what you did to her; that's entirely your doing, but because it was unnecessary. We had methods of dealing with theft, and I didn't follow them. But I vowed no more would suffer because of you.\"\n\n\"But of course you're wrong. More will suffer because of you; your plan. You'll suffer and Te\u00e1rlag will suffer, and your family will suffer. Not physical pain, but the mental anguish will be horrific,\" Blackthorne said. \"How they'll suffer. Nevertheless, you intrigue me. It makes sense Thorburn would not conceive of a plan which involved dangling you as bait in front of me. It would violate his delicate sensibilities, but that you would, is quite interesting. As is the fact you killed fifteen of my men while you were taken and Thorburn is using you to train his men. I shall greatly enjoy questioning you about all of it as we play. What is there about you would lead to these things happening?\"\n\n\"A vile man like you happened,\" Ailene said. \"I'd be perfectly willing to be a wife and mother if you didn't exist. You forced it on me. I do not wish to raise a child in a world where you live. I'd be afraid every minute for my child's safety. How many people have you tortured and killed, I wonder?\"\n\nBlackthorne laughed. \"I lost track years ago. As you can see, I've had a lot of practice learning how to administer pain and no problem getting rid of any inconvenient bodies.\"\n\n\"How did you become the inhuman monster you are?\"\n\n\"While I was in Europe as a young man I heard the tale of Elizabeth B\u00e1thory of Hungary and the tale fascinated me. Are you familiar with the story?\"\n\n\"Nay.\"\n\n\"It is said she killed and tortured up to 650 young women, bathing in their blood to stay young. She was known as the Blood Countess. She was caught, but due to her families influence and power, never went to trial though they kept her locked in a windowless room until her death. The true number was never known, but even if it was that high, I've surpassed it. Young women disappear all the time and their fates are never known. It's assumed they've run away, become prostitutes or otherwise fallen on hard times. I perfected my skills in the slums of Paris. It's harder to find young women in these sparsely populated areas, but I have agents working on my behalf in Edinburgh, London, Manchester and Dublin. M\u00e0iri just walked up to my door. No one knew where she was or where she'd been. No one thought to look for her here.\"\n\n\"You're mad! You can't get away with this.\"\n\n\"I've done well so far. There's no evidence linking anyone to me. Even with the evidence of M\u00e0iri's body, did anyone bother to investigate me.\"\n\n\"You're telling me now.\"\n\n\"You're a woman and even if you get out of here alive, it will be because you've lost your property to me. You have reason to cast false aspersions on me. Power and influence saved Elizabeth B\u00e1thory and they will protect me.\"\n\nWhile Ailene and Blackthorne talked, Thorburn was conferring with his brothers to see if there was anything they might do, from joining their soldiers, investing the Manor in a siege, and sending for help from the King's armies. Everything imagined would take too long and allow too much harm to come to Ailene and Te\u00e1rlag. Frang asked the magistrate, \"If we sign over our lands to Blackthorne, could we get it reversed because it was coerced?\"\n\n\"Possibly, but it would take years and in the meanwhile, Blackthorne will hold your property and you'd be bereft of funds. With the wealth he held and your lack of funds to fight it, I suspect you'd lose.\"\n\n\"We have to do something,\" Stuart said. \"We can't let him have the women.\"\n\n\"And we won't,\" Thorburn replied. \"We knew this was a possibility when we undertook the plan. We'll sign them over. I won't let him harm them.\"\n\n\"I'm sorry I did not investigate the maid's death when you brought her to me,\" Lancaster said. \"I did not realize what a monster Blackthorne was and only thought of the trouble to me of looking into the matter.\"\n\n\"It doesn't help us now,\" Thorburn said. \"Blackthorne,\" he yelled, \"we'll do it. We'll surrender our lands and estates to you in return for both Ailene and Te\u00e1rlag. Leave them alone. You've won.\"\n\n\"Of course I've won,\" Blackthorne said, \"but you misunderstand my offer. My offer is for Lady Ailene only. I promised Te\u00e1rlag what would happen to her if she betrayed me. I'm a man of my word, Thorburn. She remains here and if there's any part of her remains alive in a year, you can have what's left. It's Lady Ailene only or nothing. I have plenty of time while you make up your mind. I think I shall introduce Lady Ailene to a certain little whip Te\u00e1rlag appreciates. Her breasts are such a tempting target.\"\n\nThey heard a crack and Ailene screamed piteously. \"Have the papers drawn up and delivered to me here at the Manor and I shall release Lady Ailene to you relatively unharmed. It will only be five soldiers a day fucking her until the papers are in my hand. My captain, Ian is particularly anxious to make her acquaintance since she killed fifteen of his men and wounded him. He believes she needs a little taming. I'm certain he's right.\" Another crack and Ailene screamed sharply. \"That one landed on her cunt. Perhaps we can leave a little bastard in her belly. Something to remember us by.\"\n\n\"You're a fucking demon from hell,\" Ailene gasped, having recovered the breath lost expelling it during her scream.\n\n\"Perhaps,\" Blackthorne said, whipping her breasts once more, causing her to scream again.\n\n\"Agree, fucking agree,\" Stuart said. \"I can't let Ailene suffer anymore. Agree to anything.\"\n\n\"You'd leave Te\u00e1rlag here to suffer that bastard's torments?\"\n\n\"I don't want to,\" Stuart exclaimed, \"but it's my wife he's whipping. I can't leave her there, I can't!\"\n\nThorburn and Frang looked helplessly at one another.\n\nSuddenly, Te\u00e1rlag started yelling at Blackthorne. \"Of course I betrayed you, you fucking monster! You want to know why? Because you're a piteous excuse for a man. No wonder Beatrix chose Jamison. You've a pathetic prick. Even my elderly husbands could fuck better than you.\" The Cameron's heard a crack again, but it was Te\u00e1rlag who screamed, not Ailene.\n\n\"Thorburn's a real man,\" she said, fighting her pain. \"Fucking him was wonderful. God, he was wonderful. He made me feel like a woman. I would have been his whore if he asked.\" The whip struck again, and she screamed, but continued to speak through her pain. \"I would have fucked him on the streets of Dervaig if he wanted me. I almost sucked his cock in front of the Bishop and Magistrate at his brother's wedding.\" Another crack. \"Don't worry, Ailene; if he tries to rape you, you won't feel a thing after fucking Stuart. I doubt if you'd felt a thing if he took your virginity.\" Crack, a scream. \"Though can he actually take your virginity if he doesn't break your maidenhood, his prick is that small.\" Crack, scream. \"Any time Thorburn wanted me,\" crack, scream, \"he could have me. He fucked my cunt so often,\" crack, scream, \"and I let him cum in my cunt, Blackthorne. He poured his seed into me. I'm carrying his child. Two months now, his baby's been growing in me.\" Crack, crack, crack. Te\u00e1rlag was hoarse now, her screaming ragged and rough. \"You thought you were fucking something Thorburn thought was his. I was fucking Thorburn because I was his. He owned me, body and soul.\" Crack, crack, crack. Her screams were weaker now. Still they heard her. \"He treated me better knowing I'd spied on him than you treated me as your future wife. I'd die for him before I'd ever become your wife.\"\n\n\"What the hell is she doing?\" Thorburn said. \"He's going to kill her.\"\n\n\"It's what she hopes for,\" Frang said, \"she's taking Blackthorne's attention off Ailene and onto herself and if he kills her, our decision is made easier. We don't have to hope to save her. We can accept his offer and save Ailene.\"\n\nBlackthorne was panting in front of Te\u00e1rlag, tired from hitting her. At least she wasn't speaking anymore, merely whimpering.\n\n\"Do you hear that, Thorburn?\" Blackthorne said, \"this whore is carrying your bastard. When I start carving her up, the first thing I'll do is rip it from her womb, though I might let it grow a little longer to see if it's a boy or a girl.\"\n\nThorburn screamed and pushed against the door. In a prodigious feat of strength against the pile of dirt, he got the door to open an inch. Frantically, the others started heaving against the door as well, but despite all their efforts, it wouldn't open more than another half inch. They desisted, breathing hard from their efforts.\n\n\"Stuart,\" Frang whispered frantically, \"I can see Ailene.\"\n\n\"Where?\" Stuart asked, desperate to see her.\n\n\"There, through the crack in the door.\"\n\nStuart looked and saw her hanging naked from the ceiling. It was light enough he could see two stripes on her breasts from where Blackthorne whipped her. They could hear Blackthorne continue to whip Te\u00e1rlag, her cries more piteous and barely heard.\n\n\"She's only being held by ropes,\" Frang said. \"Can you shoot an arrow through this gap and release her?\"\n\nIn answer, Stuart dumped his arrows on the ground and began going through them. He looked at one after the other, rejecting most, but setting a few aside.\n\n\"Where? What?\" Thorburn said, looking to see what Frang had seen. \"Hurry, Stuart.\"\n\n\"Shut up. I must find my best arrows. I have maybe two chances to free her before he ensures the door is closed again.\" He kept sorting, picking the two arrows with the broadest heads, the straightest shafts, and the best fletching.\n\n\"Back away from the door,\" he whispered.",
        "Everyone stood back and Stuart drew back the first arrow, the second ready in his hand. It was not a great distance, but it was a small target. The bowstring went back to his ear and his focus shifted to the rope, only the rope, all else faded away, the sounds, the jumble of thoughts in his head. He drew a breath, let out half, and released. As soon as the first arrow left his hand, he was putting the second to the string. The first arrow flew true and severed half the rope. The second took out the remainder and suddenly Ailene was on the ground and scrambling for the rapier Te\u00e1rlag had brought in.\n\nBlackthorne heard both arrows strike the walls and turned to see Ailene on her feet and grabbing her sword. He pulled his own sword out, also a rapier.\n\n\"Die, bastard,\" Ailene screamed, going toward Blackthorne like some goddess of old, Diana or Artemis, perhaps Freyja, naked and fierce.\n\nShe quickly realized she'd made a mistake. Blackthorne was an expert with his rapier, even better than Frang. She altered her tactics, starting to throw things at him; some manacles she found lying on a table, the knife he'd used to cut off her clothes. It's too bad she'd never learned to throw knives so the points stuck. He managed to dodge, being cautious because of Ailene's reputation, but he realized he was better than she was. She surprised him by throwing things at him. It completely went against all his training. As his confidence grew, he started to press her a little. She tipped a candle stand in front of him, but he went backward instead of forward so she couldn't take advantage. Ailene was beginning to run out of things to throw or trip him with; much of it too heavy for her to handle. She tried retreating far enough Stuart could shoot him with another arrow, but he refused to be drawn into range.\n\nHe stopped, smiled at her, and waggled his finger. \"Clever, Lady Ailene, but I refuse to follow where Stuart can shoot his arrows into me. You may stand over there as long as you want while I carve my monogram into Te\u00e1rlag.\"\n\nAilene called to Frang, \"I'm sorry, teacher, but Blackthorne's better than me. He's better than you. He's simply the better swordsman. I'm afraid this isn't going to end well.\"\n\nBlackthorne shouted, \"After your father beat me, Frang, I went to Europe and studied under French and Italian Master's for five years. I assumed I'd be able to kill him with the sword. It's unfortunate I had to poison him instead.\"\n\n\"Remember your battlefield training, Ailene,\" Frang called out.\n\n\"I remember, Frang. I've tried everything I could think of. I've got nothing left.\"\n\n\"Remember Bjark\u00eb,\" Frang said, \"anything you have to do to survive.\"\n\nAnything to survive. Ailene knew what he meant. Sacrifice some part of her body to get a killing blow in. Blackthorne had never been in battle. Would he take the bait as she had? She started advancing, looking for anything.\n\n\"It's too bad you released her Stuart,\" Blackthorne shouted. \"She's too good to disarm. I shall have to kill her. Instead of getting her back a little soiled, you won't get her back at all.\"\n\nWe'll see about that, you prick, Ailene thought. She engaged him in an extended attack, trying to get him to trip over the candle stand she'd thrown down before, but he shifted sideways so he didn't have to step over it. She paused, showing her disappointment at failing to trick him and he saw a small opening as she stopped, panting, aware she was beaten. He lunged, aiming for her left breast, a most tempting target. Suddenly her arm was there and instead of penetrating her lung, his rapier went into her arm. Before he could withdraw his sword, hers went into his throat.\n\n\"Bite on that, you fucking monster.\"\n\n\"You cheated,\" he gasped, blood flowing into his mouth.\n\n\"No, I survived. You didn't.\" She stabbed him through the eye to be sure, then again through the heart to be really sure. If he wasn't already three times dead, and she didn't desperately need medical attention, she would have cut off his bollocks. She turned and went to Te\u00e1rlag. She was hanging in her chains, alive, barely conscious, her body striped by his whip.\n\n\"My poor Te\u00e1rlag, he's dead now. Our tribulations are over. I'm sorry to ask you this, dear Te\u00e1rlag, but you have to bandage my arm before I bleed to death. It requires you to move, no matter how painful. Where's the key to your manacles?\"\n\n\"Probably in his waistcoat pocket. It's where he normally kept it when he chained me.\"\n\nAilene looked and found a key. She couldn't resist kicking his body again as she stood up. Ailene went to the manacles and released Tearlag's legs first so she'd be able to stand when her arms were freed. Te\u00e1rlag nearly crumpled to the ground when her first arm was released, clinging to Ailene's neck to keep from falling. Ailene released the other arm and lowered her to the floor. She picked up her ruined dress and handed it to Te\u00e1rlag.\n\n\"Tear off a couple long strips about four inches wide. You'll need to tie them around my wound. Tie it tight. We need to slow the bleeding.\"\n\nShe waited patiently for Te\u00e1rlag to comply, slow to move, suffering a great deal of pain. When her arm was bandaged, she went to the crack in the door and put the fingers of her hand through.\n\n\"Hello, Stuart. Wonderful shot, my love. I love you. I love all of you.\"\n\nStuart was crying and kissing her fingers. \"I thought I'd lost you, dear heart. I was dying inside.\"\n\n\"You saved me though. I knew you'd find some way to do it.\"\n\n\"Ailene,\" Thorburn said, \"I'm in awe of you.\"\n\n\"As I am of you. If you could see the pile of dirt on this side of the door, you'd know how amazing it was you moved it even so much as an inch. Speaking of the dirt. It's going to take awhile to remove it. I've only got one wing and Te\u00e1rlag can barely move.\"\n\n\"Make sure the dungeon door is locked so no one can enter and just move the dirt next to the door so Frang can slip through. He's the thinnest and he won't need much room to get in. He can take over moving the dirt as soon as he gets in.\"\n\n\"Aye.\"\n\nAilene found a way to bar the door on the inside. Apparently Blackthorne liked his privacy when he was here. She found a shovel next to the pile and struggled to move enough of the pile for Frang. It was mostly with her right hand, with the left unable to do more than guide the shovel. She couldn't lift with it at all. After about a half hour, Te\u00e1rlag was able to stand and came to help. The work went faster, though it was still an hour before Frang squeezed through. When he got hold of the shovel, he quickly cleared enough for Stuart and Thorburn to get through.\n\n\"Excuse us, your Lordship, but our women are naked and we'd appreciate it if you remained in the tunnel for now,\" Thorburn said.\n\n\"Aye, I understand.\"\n\n\"Are you okay, Te\u00e1rlag?\" Thorburn said.\n\n\"Better now he's dead. It's the last time he'll ever hurt me.\"\n\n\"It was a brave thing you did, lass. I can't say how much I appreciate what you did to save Ailene,\" Thorburn said. \"I'm in your debt.\"\n\n\"We're in your debt,\" Stuart said. \"I'll give you anything you desire except for my wife.\"\n\nTe\u00e1rlag put her hand on his cheek. \"You're welcome.\"\n\n\"Can you put on your dress, Ailene?\" Stuart asked.\n\n\"Blackthorne cut it off, dear. The remnants are holding my arm together.\"\n\n\"Te\u00e1rlag, can you wear yours?\" Thorburn said.\n\n\"If anything were to touch my skin now, I'd scream. Let Ailene wear it if she can. Enough people have seen me naked lately, I've learned not to be much embarrassed by it. Can we set fire to this place? I never want to see it again.\"\n\n\"Some stuff might burn, but we'd need oil. It might help our men outside if we could start a fire here,\" Frang said, \"but I don't see lamp oil, only candles.\"\n\n\"Put the rest of Ailene's clothes on the wooden rack, set fire to them, maybe the fire will grow,\" Stuart said.\n\nWhile Frang worked on the fire, Ailene put on Te\u00e1rlag's dress. Given their relative sizes, it was tight and because she left off the under shift, leaving it for Te\u00e1rlag to wear later as her pain lessened, she felt improperly exposed. She knew the Magistrate was in the tunnel, but at least she had something on; Te\u00e1rlag had nothing. She handed the shift to Thorburn, letting him carry it for when Te\u00e1rlag might abide something touching her skin.\n\n\"Stuart, we'll kill anyone tries to stop us. We no longer have to hide our presence. Be ready to let fly should any oppose us. God help them if they try. We'll go out the front door so watch the house across the street.\"\n\n\"Aye, dead it is.\"\n\n\"When we leave the house, Frang, look left and protect our flank, Ailene, watch the right,\" Thorburn ordered. \"If you would assist Te\u00e1rlag, your Lordship, I'd be in your debt.\"\n\nThey traveled down the tunnel, and up the stairs. They came out, but didn't bother replacing the cabinet and hiding the tunnel. Before he opened the door to the street, Thorburn said, \"Weapons ready.\"\n\nThey went out the door, Thorburn and Stuart looking ahead to where the sentinels were stationed, Frang left and Ailene right. The magistrate helped Te\u00e1rlag as much as he could, mostly by supporting her on his arm. An alarm bell rang and a man came out the door. Stuart launched an arrow and drew again. The man collapsed in the doorway. A second backed away, holding his hand up and away from his sword.\n\n\"Your Master is dead. Unless you want to follow,\" Stuart said, \"you'd best head for distant parts. The King's Magistrate has seen what Blackthorne's done here and I expect most of you will find your way to a noose if you remain.\"\n\nHe nodded, backed slowly away, headed for the Manor. There didn't seem to be any response to the alarm bell. Perhaps the responders were too busy, still under attack by Bjark\u00eb and the men of the Keep.\n\n\"Frang, keep your eye on that copse of trees to the south. Guards were stationed there during the day. Stuart keep your eye out for the men watching from the ridge to the north of where we hid.\"\n\n\"Aye.\"\n\n\"Your Lordship. I'd appreciate it if you could keep your eyes off my future wife's nakedness. I know it's hard, but try to resist a little.\"\n\nLancaster guiltily looked at the ground.\n\n\"Thorburn! Your wife?\" Te\u00e1rlag exclaimed.\n\n\"I can't let a courageous lass like you get away. It would be foolish and my father didn't raise foolish children. Why didn't you tell me you carried my child?\"\n\n\"I didn't want you obligated, my Lord. If I carried even a wee piece of you away, I'd be happy. I do not want you marrying me for sake of the child. It was my choice to risk it. I'll only marry you if you love me.\"\n\n\"I didn't realize how much I loved you until I thought I was losing you. It's how I had the strength to move the door.\"\n\n\"You can forgive my sins, Thorburn?\"\n\n\"You nearly sacrificed your life for us, Te\u00e1rlag. What kind of man would I be if I couldn't.\"\n\n\"Oh, Thorburn, my love. I'd hug you if I could,\" Te\u00e1rlag said, crying.\n\nNo one bothered them as they went up the ridge. When they reached the top, Te\u00e1rlag asked for her shift. \"I think I can tolerate something this light. It's better than leaves and branches rubbing my bare skin.\"\n\nIt was a little easier for the men to keep their eyes off her once she put it on.\n\nIt was a long walk to where they left the horses hobbled, forced to travel slow due to the women lacking shoes and Te\u00e1rlag still moving with difficulty. When they reached the horses, Thorburn told Frang to find Bjark\u00eb and withdraw their men and bring them back to the Keep. Stuart helped Ailene onto his horse and climbed up behind her. Lancaster got on his horse.\n\nTe\u00e1rlag looked up at the big gelding Thorburn rode. \"I'm not sure I can sit on a horse, Thorburn. My sitting parts are very sore still.\"\n\n\"I can't let you walk back to the Keep, Te\u00e1rlag. You can hardly move. I could carry you.\"\n\n\"Even my carrying parts are sore.\"\n\n\"Stuart, do you still carry the salve I gave you in your saddle pouch?\" Ailene asked.\n\n\"Certainly. I never go anywhere without it. It's right here.\" He pulled it out.\n\n\"Thorburn, why don't you go behind those bushes with Te\u00e1rlag and put this salve on. It will ease her pain. I could do it, but I'm sure she'd enjoy your touch more than mine.\" She handed him the vial. \"We'll wait for you.\"\n\nThorburn nodded and led Te\u00e1rlag behind some shrubs. He carefully lifted the shift from her, exposing her skin once more. In the sunlight, it looked even worse than in the dim light of the dungeon.\n\n\"Aahh, lassie. I'd kill the man all over again seeing you now.\" Her skin was viciously striped from the whip Blackthorne favored, much of it concentrated on her breasts, thighs and bottom. \"I'm so sorry. I know what you did. You were trying to force him to kill you so we could take the deal with Blackthorne. You were afraid we might not accept his bargain it if it left you in his hands.\" Thorburn started to apply the cream, being as gentle as he could.\n\n\"I knew you wouldn't want to. You're not that kind of man. It wouldn't make any difference who it was, you wouldn't want to leave them there. I couldn't do it to Ailene and Stuart. She's pregnant too, you know. I promised not to tell before, but we're all okay now, so I shall, though she should tell Stuart.\"\n\n\"Pregnant! When did you learn this?\"\n\n\"While you and Stuart made the additional check on the tunnel. When you found me sleeping in her bed. We told each other. She asked me to look after Stuart if she died. Maybe he could love me if you didn't. I said I wouldn't. Too hard to remain close to you and unfair to Stuart if I didn't love him. After you left last night, we told Isobel too in case neither of us survived.\"\n\n\"I can't believe you both went into Blackthorne's hole with child. How bloody stupid!\"\n\n\"Ailene made the point that if she were raped, she couldn't carry a bastard child. Already carrying one. It was the most likely thing might happen to her. Makes it a little less stupid than you think. How much worse would it be for her if they forced a child on her? Women have to think of things like that. It's what makes rape such a brutal weapon against women. You know I'm right. Blackthorne was crowing about forcing a child on her. It took that weapon out of his hands.\"\n\n\"Bloody hell, Ailene's devious!\"\n\n\"Lucky for us.\"\n\nThorburn finished spreading the salve on her skin and helped her into the shift.\n\n\"Is it feeling any better?\" Thorburn asked.\n\n\"Aye, quite a bit better. Perhaps you could hold me now. I wouldn't mind a kiss if you've a mind for one.\"\n\n\"Aye, a kiss for a brave lady. I'm honored.\"\n\nThey kissed and Te\u00e1rlag pressed against him, testing the limits of her pain.\n\n\"Not too bad, sir. I still may not be able to sit on the horse, but I should be able to ride it in your arms.\"\n\nThey came out from behind the bushes and walked over to the others. Thorburn handed Lancaster his reins.\n\n\"Your Lordship, I'd appreciate if you would lead my horse. My hands will be otherwise occupied.\"\n\nThorburn climbed on and holding Te\u00e1rlag's arms, lifted her up. She laid back in his arms and snuggled against his chest. \"Let's go home, my Lord.\"\n\nAbout halfway home, Thorburn said, \"Ailene, don't you have something to tell Stuart?\"\n\nAilene looked at Te\u00e1rlag and Te\u00e1rlag nodded and said, \"I think it's time.\"\n\nStuart asked, \"Time for what? What do you have to tell me?\"\n\n\"Can there ever be a better time?\" Te\u00e1rlag said. \"Blackthorne's gone. We're whole and together.\"\n\n\"I suppose you're right,\" Ailene said. \"Stuart, you're going to be a father. Congratulations.\"\n\nStuart sat there in stunned silence. After about a minute, he said, \"You volunteered for this mission while you were pregnant?\"\n\n\"I'm sorry, but I admit I did.\"\n\nHe thought some more. \"You're going back to the strapping room for this one.\"\n\n\"Aye, husband. As you wish. I suppose I deserve it, but not until my arm is healed and the bairn born. I want to be able to raise a proper fuss.\"\n\nAnother few minutes passed. \"How far along are you?\"\n\n\"I told you the Midsummer was awash with magic.\"\n\n******\n\nEpilogue:\n\n\"I'm surprised you still like to come here, Ailene,\" Isobel said, \"I would think it held a lot of bad memories for you.\"\n\nAilene looked around the glade where she often came to gather medicinal plants and herbs. She and Te\u00e1rlag were nursing their babies. Isobel's little boy was starting to crawl and every so often, she'd have to gather him up before he got into trouble, smother his face in kisses, then set him down further from the trouble. Many women were practicing their sword work nearby, including Meghan, and Isobel or Ailene would make some comment, good or bad, on what someone had done. She glanced down at M\u00e1iri, pulling hard on her nipple.\n\n\"Aye, it's got some bad memories I suppose. But it was the place I first decided I must become a stronger woman, and the day I became a stronger woman, so it's got good with the bad. Speaking of good, how do you like the house Frang built for you?\"\n\n\"I love it,\" Isobel said. \"It's big, spacious, and I can scream almost as loud as I want without waking the baby. I needn't worry our guests can hear Frang and I having sex anymore. I'm sure you'd appreciate it.\"\n\nAilene laughed. \"Aye, I'm sure you're right. Do you still couple often?\"\n\n\"Maybe not twice a day anymore,\" Isobel said, blushing, \"but to greater effect. I'm going to have another bairn. I just found out. This one is definitely Frang's.\"\n\n\"Congratulations, Isobel, I'm so happy for you,\" Ailene said.\n\n\"I'm happy as well. How does Frang do with your son?\" Te\u00e1rlag asked.\n\n\"He dotes on him. He's already made him a tiny sword and I suspect he'll be learning to fence as soon as he stands up. He's a wonderful father.\"\n\n\"Frang said he would be, and I'd expect nothing less,\" Ailene said. \"He's a good man, your husband.\"\n\nM\u00e1iri had stopped suckling though her tiny mouth still moved. Ailene glanced down and she was nearly asleep. Ailene pulled her dress over her breast, laid M\u00e0iri on her shoulder to burp her, but leaned back on her other arm, soaking in the sun.\n\n\"I want to know about your meeting with the King,\" Tearlag said. \"I'm dying to know how it went.\"\n\n\"Aye, me too,\" Isobel added.\n\n\"Well it was all quite ceremonial; a lot of pomp and circumstance. Stuart bought me a new dress. I'll show it to you later. It turns out, the Magistrate wrote a lengthy report on our behalf after Blackthorne was killed. He told the King all Blackthorne admitted to while we were trapped, the many women he'd killed and how he did it. As a result, Blackthorne's wealth and property was all confiscated and returned to the crown but for some land set aside for Stuart and Bjark\u00eb, and his title vacated. Through papers found at Blackthorne Manor, the agents who aided Blackthorne find women in some of the larger cities were found, arrested and hanged. Those who knew about his activities were also arrested and sent to prison, including the butler. They captured Ian, though he was hanged as well. As expected, the King rewarded Lancaster for bringing the matter to his attention, but Lancaster did a very strange and unexpected thing. He asked that his reward be set aside for the families of the victims Blackthorne murdered. Quite a few had been identified through the records of the agents Blackthorne used. He apologized to the King and said he'd been derelict in his duties for not investigating the matter thoroughly when we first brought M\u00e1iri's body to his attention. He said he'd learned a valuable lesson and would do better in the future if the King allowed him to maintain his position, but he deserved no reward for failing to do it in the first place. The King granted his request and Rupert, Bess and Rob all receive an income from the fund in M\u00e1iri's name.\n\n\"Of course the King wanted to meet the woman who'd killed Blackthorne and sent for us. There was a great deal of bowing and scraping, proclamations being read, a bunch of nonsense really, but after, the King asked to see the wound in my arm. I think he wanted to see if I still had whip marks on my breasts, too. He hinted at seeing all the injuries I'd suffered at Blackthorne's hand, but had the grace not to ask. All men are the same really; dogs who'd do most anything to look at a woman's breasts. He offered to engage in a bit of sword practice with me, but Stuart warned him I was an unconventional swordswoman, and would likely throw things at his head, so His Majesty was thankful I didn't take him up on the offer.\"",
        "Isobel and Te\u00e1rlag laughed. \"Unconventional indeed,\" Isobel giggled, \"as are we all. How is your wound by the way?\"\n\nAilene glanced down at the puckered scar on her left arm. \"It looks better than it should after you sewed it up for me, for which I thank you. It twinged a bit in the cold months, but I don't feel it at all now.\" She grew pensive. \"It's beautiful out here and I've had so much fun with both of you. We need to get together more frequently, especially as we all live closer together now. I wouldn't mind making this a weekly thing.\"\n\n\"That's a splendid idea,\" Tearlag said. \"We'll arrange our next visit when we go back to the Keep. Perhaps we can hold it at Isobel's and test the sound qualities of her new home, to see if it's as quiet as she says it is.\"\n\n\"We'll have to bring our husbands then,\" Ailene said, \"if it's to be thoroughly tested.\"\n\n\"I have no problem with that,\" Te\u00e1rlag said, \"do you?\"\n\n\"Nay,\" Ailene said, \"no problem at all. Good. We'll spend the night and have a contest to see who moans the loudest.\"\n\n\"No fair,\" Isobel said. \"Te\u00e1rlag wins that contest, hands down.\"\n\n\"Maybe not,\" Te\u00e1rlag responded, \"I don't have to squeal so loud to convince my husband I'm enjoying myself. He's well aware I am. He makes certain I do.\"\n\n\"I know neither of you likes to talk about what happened in the dungeon,\" Isobel said. \"Frang's told me most of what I know. I need to know if it's true you told Blackthorne you'd have agreed to be Thorburn's whore if he asked you. Did you really say that and did you mean it?\"\n\n\"Thorburn asked me the very same question that night. I told him I would be his personal whore only and not give myself to anyone else. 'My own personal whore,' he said. 'How nice would that be. Then I'll ask you; will you be my whore?' I told him I most certainly would and I've done my best to ensure he'd never need to seek another.\"\n\nIsobel and Ailene laughed. \"Much better than being his wife, I expect,\" Isobel said.\n\n\"Oh, much better, except he forgets sometimes when he introduces me to people and instead of calling me his wife, calls me his personal whore instead.\"\n\n\"What do you say,\" Ailene asked, \"when he says it.\"\n\n\"What can I say. I just smile up at him and say 'every night'.\"\n\n\"Speaking of husbands and wives,\" Isobel said, raising her voice, \"Meghan can you come her for a minute.\"\n\nMeghan excused herself from her sparring partner and came over.\n\n\"Can I help you, Lady Isobel.\"\n\n\"We were wondering if you and Bjark\u00eb have set a date for your wedding?\"\n\n\"Aye, ma'am. We're to be wed during the Midsummer Festival. It seemed to be a good day to celebrate.\"\n\n\"Wonderful, Meghan, but I have to know,\" Isobel asked, lowering her voice, \"have you let Bjark\u00eb mount you yet?\"\n\nMeghan colored, blushing beautifully. \"I did. He's a most persuasive man.\"\n\n\"Tell me if it's true. Is he any good between the sheets?\"\n\n\"I've not been disappointed, Lady. He was most gentle the first time and he does this thing with his mouth. I don't know if I should be telling you this.\"\n\n\"Oh, we're well aware of the things men do with their mouths,\" Ailene said, \"aren't we ladies?\"\n\n\"Very much so,\" Isobel admitted, \"but I'm curious how he talked you into sharing your treasures before the wedding.\"\n\n\"As I said, he's most eloquent. It was after he proposed, but he convinced me he had to know if I could be a proper Scottish wife. I had to show him, didn't I?\"\n\nThe meadow rang with laughter.\n\n***************"
    ],
    "authorname": "Thors_Fist",
    "tags": [
        "whipped",
        "stripped",
        "avenged",
        "dungeon",
        "trapped",
        "saved",
        "loved",
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/a-proper-scottish-wife-ch-33"
}