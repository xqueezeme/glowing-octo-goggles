{
    "title": "A Visit to the North Ch. 05",
    "pages": [
        "This is a mystery story of Annabelle's life and the changes she encounters. The characters are all fictional. Please read the earlier parts. Please leave your comments.\n\n\n\n\nFlorence was a beauty that had left Indiana at the age of seventeen. She had met an interesting older woman and they became lovers. This mentor taught her the languages and the character of a lady during those three years. At twenty-seven she had joined Mastress. She was 173cm tall with dark hair and skin of a warm tone that implying a southern European origin. \n\nMastress was in her study have a simple poached egg and her cup of London Fog, Earl Grey with a little vanilla and steamed milk. \n\n\"So did Annabelle enjoy your attention last night Florence?\" \n\nFlorence was wearing only her robe and heels since she had just left me.\n\n\"She couldn't ejaculate the last time I fucked her. She climaxed but the sheets weren't soiled. I made love to her bottom four times Mastress. Anna should sleep until afternoon.\"\n\nFlorence continued as she came to stand beside Mastress, \"She did dream though, talking of her woman Barbara. On another point though, I wonder if we should adjust her hormone dose lower this week?\"\n\nMastress asked, \"How quickly did her clit rise on the second stimulation?\"\n\n\"Ha, immediately! But by the third she didn't stiffen. Who was the first to penetrate her while under sedation?\"\n\nMastress considered the question, \"I think I recall asking Margrette. Does it matter? I agree we'll lower the hormones a bit. She's been talking during her sleep for weeks. She seems to think her wife will want her back. In eight weeks Annabelle will be comfortable with her new couple.\"\n\nMastress was still looking out to the City, \"What size cock did she have in her bum last evening?\"\n\nFlorence was specfic, \"15cm long, medium realskin attached to my 300 harness with the vacu attachment. She may be ready next for a large dildo but I suggest we increase her opening.\"\n\n\n\nIn Georgetown Michel was also early for she too wanted to understand her prey. She watched as Barbara entered the Bar but did not wave. The submissive had suggested her appearance while speaking via the phone so Michel was pretty certain. She watched as her potential new playmate removed her coat and moved to an empty stool about 10 meters from her. She thought the ivory and soft pastel pink skirt pairing quite lovely and most important this woman was beautiful with a full bosom and a great bottom.\n\nMichel sat studying the woman for a few minutes. The opportunity to have this lovely woman for the weekend was a surprise. Their on-line chat didn't provide enough background on this Barbara. That name wouldn't do. She would call her Pia. Her submissive character was stronger than her chat had implied. This Barbara looked uneasy, maybe a little afraid. Michel would settled her down. She stood to approach her. \n\n\"Are you waiting for me Barbara?\" she said quietly to prevent the barkeep from hearing and causing a stir.\n\nBarb was slightly surprised since she'd not seen anyone enter. \"Oh, why yes, I am Barbara. You must be Mich, I mean to say Mistress?\"\n\n\"Very good my beauty. Yes dear, it shall be Mistress. Come join me at my table. I only arrived a moment before. Let's seat here and talk. I will get you some wine.\"\n\n\"Yes please,\" Barbara quietly said. \n\nMichel sat very close to her and just looked carefully at Barbara for a minute.\n\n\"You are remarkable for the opening you've offered Barbara and I love your outfit. It makes me want to help you all the more. Do you find me equally interesting?\" \n\nBarbara paused for a bit to consider the situation, looking into Michel's eyes, then to her breasts. She was studying the woman's character and poise as well as her dress, and the need to be a little submissive. She had a goal. Barb was excited by the woman but thought to herself quickly. \n\n'Stay focused Barbara, you need this woman for information.'\n\nShe looked downward and squeezed her hands tightly. She did find Michel quite intriguing. Michel was a little older than Barb, also a little taller and she looked like a size ten while Barb was still an eight. \n\n\"Yes Mistress, you're quite beautiful. I love your satin black dress and your pearl choker.\" \n\nShe hoped her compliment had come off correctly. Was she crazy or was finding me more essential then all else? The two quietly surveyed each other before a waiter had arrived. \n\nMichel slowly lower her hand to her lap and extended to touch Barbara's thigh near the left knee, just out of sight. Barbara jumped slightly and a soft gasp escaped her lips. The waiter was busy at the bar and still hadn't come to the table. \n\nMichel spoke as she slowly moved her fingers along the sub's leg. \n\n\"I too love these true nylons. Mine are French and they tend to hang a bit loose at the ankles when we sit. It's an unmistakable detail.\" \n\nMichel's long middle finger moved over the suspender clasp and continued higher reaching Barbara's flesh above the welt. \n\nMichel left her fingers on Barbara's naked thigh as she spoke, \"You've gone to a great deal of trouble to be here. I wonder exactly how you're handling being this close to the one you want to lead you away?\"\n\nHer finger had reached the fabric of Barb's thong. Michel couldn't miss the moisture and lightly rubbed Barb's slit through the panel. \n\nMichel was looking deeply into Barbara's eyes, \"I know how to bring you along but there will be many changes dear.\"\n\nThe barkeep came near and Michel ordered a bottle of Chardonnay. Michel's fingers paused as she spoke to the barkeep. The woman left them to get the wine.\n\nMichel's fingers moved slowly, \"I love how you're showing your appreciation of our arrangements.\"\n\nMichel then slipped her finger beneath the fabric of the thong and into Barb's labia folds. Barbara's breathing was sharp and she realized how wet she'd become. She was losing control of the situation.\n\nMichel spoke slowly while her finger reached the moist opening, than she pressed her digit into Barb's pussy. \n\n\"My slut, may we retire to my car, then home? I live quite near on the hill. Less then two blocks.\" \n\nMistress withdrew her fingers and licked each while Barb continued to look into her eyes. \"Humm, you do taste lovely Barbara.\" \n\nBarb considered that she knew nothing of the area let alone this Mistress. Her friends were away for the weekend so she couldn't call for any true help. Maybe she had to let this pass. Just drop the thought and return to Julie & Liz's apartment by herself. That was her intent when Michel lifted her fingers to Barb's mouth. Barb slightly opened her lips to taste her arousal. She could smell Michel's as well. \n\n\"I think you're about to change your plans Barbara. Please be with me this evening. I won't bite.\" \n\nMichel stood having released the clasp of her necklace. She moved behind Barb and lifting Barb's hair placed the choker about her new sub's neck.\n\n\"This is mine just as you will be Pia.\"\n\nBarb was conflicted and then she realized she was completely without the discipline to leave. To this woman she was giving free rein. She watched as Mistress sat down shifting her chair a little further away.\n\nBarbara looked across the small table and said, \"A moth to a flame I guess.\"\n\nBarb had initiated this contact to resolve a plan. An investigation of how and why was her intent. But here she was without the ability to resist this slightly older beauty. Was it Michel's scent or was it her focus? She'd penetrated Barb in a public space without her resistance. Barb's thong was soaked and there was a bead of her juice slowly gliding down her thigh. She knew the arousal was apparent on her face. \n\nMichel reached for her purse, left some money, stood and helped Barb up. She was a bit wobbly due to the interlude and they passed the barkeep. \n\n\"Don't you want that wine ladies?\" They smiled but left and headed to the waiting limousine. \n\n\n\nLiz had a plan when she'd press to keep the Montreal hotel and flights. As a couple they had been to several sex clubs in DC but the ones in Quebec' were on a different level. She had researched two near to the St. James. Both were wide open meaning all type of people and fetishes would be on hand. She had Julie select their attire for the weekend and therefore Julie was game. The two sexy lovers were on an adventure in a foreign city with no responsibilities. Though Barb was a dear friend she did interfere with the girl's monthly sex charged escapades while she was living with them. A night of great sex would do them a wonder of good. \n\nThe club's party scene didn't get underway until late evening and typically closed near dawn. The two women returned to the hotel after a quick dinner. To further invoke mystery they dressed in their selected lingerie and put on their simple wrap dresses. Liz suggested they wear the delicate black lace masks she'd found on their afternoon shopping walk. \n\nThe revealing outfits caused some stir on the local streets, but the neighborhood was home to at least the two sex clubs so the crowd was accustom to the occasional troupe of mavericks. They arrive with another small group, which enhanced their anonymity, and they were quickly befriended, masks, long legs and sexy smiles. \n\nOnce inside they moved about holding hands to imply a union. They're past visits to similar spaces were better when there was no ambiguity that they came as a pair. They were parading the club in only their lingerie; sheer dresses without brasseries. Each was dressed a little differently yet both wore black, except for nude high fashion hose. Julie had on a pair of Christian Louboutin 130mm black heels and her hose had a triple band welt with a keyhole at the rear seam. Liz wore full fashion hose with a silky soft lace welt held by a eight strap suspender. \n\nAfter twenty minutes they were sure their walk was complete. Any interested parties would soon approach them. They didn't try to guess who or what might happen. They allowed for only a special encounter. \n\nThe first was an older couple that just didn't bring their blood pressure up at all. They were polite but clear. Minutes later a second couple approached and the four spoke for a moment but the woman was too submissive for this evening. Then a beautiful woman walked in, with a nearly naked man aside, him tugged along but without a leash. She might have witnessed their parade but no matter, she immediately walked toward them and spoke. \n\n\"Hello, I'm Donna and this beauty is Douglas. We'd like to take you home for the night. It's our common practice so you can see the manager Richard if you need some kind of assurance. We hope we'll all have a grand time. My home is minutes away aside the Parc.\"\n\nThey both looked to each other, nodded assent and followed hand in hand back to the entrance. For this evening Liz and Julie would be this dome's subs. \n\nDonna had beautiful skin and bright hazel eyes, dark brown hair just passed her shoulders. Her large breasts barely held within the long black sequin gown she wore, opening with a slit to her upper thigh where Julie observed her dark hose with a welt of silver. Julie assumed Donna to be about 45 years old and a bit taller then her 173cm. \n\nDouglas had retrieved the women's outerwear and the manager Richard was standing near. He tipped his chin to them, while Donna climbed into her black German sedan. In the car they exchanged names and vitals, but also some cooled champagne. Good to Donna's word in five minutes the vehicle stopped and they entered an older stone house built into the side of the west slope of the Parc. There was a small cab elevator and the three women use it to arrive at the Living Room some three levels above. Douglas was there at nearly the same time having used the stairs.\n\n\n\nMargrette stood over me when I opened my eyes the next morning. Florence was gone. I was a sticky mess and was still wearing the red lingerie from last night. I wanted to remain in the bed, and Margrette seemed to be patient with me. I did need a break, but after 30 minutes I slowly did rise and begin my toilette. She watched me and started to arrange an outfit. \n\n\"You're to continue your catwalk exercised, then later we'll focus on social settings. Please get on the scale here.\"\n\nI was now naked, my clit nearly invisible.\n\n\"Oh Anna, you've reached 60kg. Mastress will be so pleased. Here, put on your bra and panty, and these stay-ups. I'd like you wear this white hoop neck blouse and black and red pleated tartan skirt. Now slip on the Mary Jane heels. Let's sit here for a simple breakfast then we'll get started.\"\n\n\"But Margrette, this school outfit doesn't seem right. We were to \" She cut me off.\n\n\"Manners young lady. Before we eat Annabelle lean here so that I can place my plug. Your cunny is still a little too tight and you need a little convincing.\" \n\nShe slipped her lubed thumb in just a moment before pushing in her nearly 2\" wide jeweled plug.\n\nI whined a little really without reason. I simply wanted her to play with me. \"Please Margrette, be gentle.\" \n\nAfter the small meal she produced a wide rhinestone choker with an attached leash. She placed it about my narrow neck and led me to the hall. \n\n\"We are to move in unison Annabelle, hence the leash. Try to keep with me, about half a meter apart please. Your best strut is what I want to see.\" \n\nI looked directly at her, down her torso, and saw the clear bulge beneath her skirt. She was planning to get me to fail at this task so I worked hard to keep just so. After 20 minutes of the exercise I slipped slightly and the leash became taut.\n\n\"I told you to take care young lady.\" She scolded me.\n\n\"One more failure and I'll have you punished is that clear? We will practice rising up the stairway now.\"\n\n\"Yes my Lady,\" I quietly said. \n\nThis was the first real harshness I been exposed to since becoming alert at the Estate several weeks ago. I had become accomplished walking in heels, even pairs as high as 130mm, but I hadn't used a stairway. The Mary Jane's were the easiest to wear but the leash would make this task difficult. During the third descent it happen, a slight misstep near the bottom cause me to fall slightly toward her. Margrette pulled me up while she fell against the banister. Neither of us was hurt.\n\n\"STOP now! Come off the stair and follow me.\" \n\nWe entered a small room new to me with a small daybed and a cupboard in the corner just beneath a high window. \n\nTurning to me she said, \"You could have been badly hurt.\" as she rubbed my shoulders. \n\nThe feel of her hands was nice but not necessary. Then with firm pressure she pushed me to my knees, she leaning against the wall.\n\n\"This will be more fun my dear, open your mouth, take this smooth meaty cock.\"\n\nI found I wanted this more than I can explain. The harnessed penis was black in color, and my lips felt the raised veils along its length. I could only take a small portion into my mouth, as it was quite thick. \n\nShe stopped me, pulling me upward, and kissed my mouth while pulling my blouse open, and my breasts loose. Her cock brushed against my partially exposed tummy. \n\n\"More young lady, suck me some more,\" she said while pulling my hair gently with one hand. I returned to one knee and the fat cock back in my mouth.\n\nMargrette then spun me around pulling me up and leaned me over the daybed pushed the thong panel over my cheek and removed the large plug. Then she licked my opening. She didn't paused but quickly entered my un-lubed anus. The saliva coating had done enough for she entered me with one push. The head of her cock moving up within my body brought an increase of my heart. My lust was surprising. We fuck each other like this for several moments, once she slipped out and I had to reinsert the member. \n\nShe smacked my bum playfully while holding my skirt, and then Margrette rotated to sit on the bed, her cock still deep within me. She was fucking me reverse cowgirl. More correctly I was fucking us. Her hand came around and though I was still tucked she patted my mound as we continued. In this position our passion seemed to rise quickly and her panting reached a peak as she climaxed, still within me and I released too.\n\n\"That's what happens to my bad girl when she fails to follow instructions. Down on your knees young lady. Clean my cock of your juice. We'll leave your soaked panty until later.\" \n\nI licked the fat shaft and head while also rimming her vagina. \"That's a good girl but back to work. Up the stair you go.\"\n\nSometime later I heard a woman walking toward us in high heels. It was Catherine coming down the hall with a small lunch. We sat on a wood bench while Margrette shared the day's events, not sparing the sex, nor the fall. Rine got down and checked my foot, then went off to the suite. \n\nWe heard another girl further down the hall but she was not known to me. \n\nMargrette simply smiled. \"That one has nearly completed her preparations. You'll meet her soon.\"\n\nCatherine returned with a pair of 150mm club heels with an ankle straps and a medium platform. \"Your foot isn't hurt therefore we'll try a new pair. These will affect your movement and raise that tush. Walking in super high heels will challenge our lady. The sole of the platform tends to not bend which requires a different walking style. I'll put mine on as well to demonstrate the difference.\" \n\nIt was the first time I seen any of the girls wearing any true high heels. They commonly wore medium chucky heels. Only 80 to 90mm. Catherine's 175cm height together with her very tall heels brought her almost to my eye level. She held my arm while Margrette reattached the leash and handed it to her. She wasn't dressed as I but still she attracted my attention. With a slow step she started our parade. The sound of heels resonated about the hall. The platform did require a change to my step and therefore my posture.\n\n\n\nLate that night Catherine visited me as I slept. She stirred me, \"Madeleine you must be prepared now. Ms. Rachel has demand that you be prepared. Get up and quickly use the toilette.\"\n\nI returned in a moment. \"Why at this hour are you making me so anxious?\"\n\n\"Please just focus and get dressed in these.\" She handed me a pair of black silk stockings and a suspender, a special thong panty, and heels.\n\n\"And this negligee, oh you've not tucked correctly with that thong. Let me brush your hair,\" \n\nMy hair was always their concern. They spent hours keeping my long blonde hair beautiful. I still can't imagine it. Then she moved me to the makeup desk and focused on my face, the deep tones made me look sexy and wanton. \n\nShe quietly reviewed her work then said, \"Come sit in the hall.\" \n\nWe moved from my suite into the darken hall. \"Here Anna, please sit on the chair.\"\n\nIt was quite dark as she settled me with my face toward the backrest of the chair.\n\n\"No Anna, you bum here.\"\n\nShe strapped my ankles to the chair's legs loosely. \"Let me move the pad at your bottom.\" \n\nI was restrained from moving from the seat. She reviewed the cuffs on my wrists, my arms partially crossed.\n\n\"Miss Catherine why can't I sleep?\"\n\nShe was satisfied, \"Quiet or I'll have to gag you.\"\n\nFinally she placed a black cloth over my eyes. The chair's pad slightly lifted my bottom off the chair's seat. \n\n\"Stay very still and speak to no one, please Annabelle.\" \n\nDue to the cloth over my eyes the sound of Catherine's heels as she left the hall was how I knew I was alone. \n\nI sat for some time and due to the cuffs it was difficult to be comfortable but with the cloth in place my mind became blank and I slept. \n\nI didn't hear anyone approach me but I felt a subtle brush on my stocking clad right leg. A soft tongue touched the fabric covering my opening. I was now awake but remained very still. The mouth was very moist and insistent. Someone's hands moved the thong aside exposing my hole. A moist finger entered me, then a second. After a brief moment the fingers were replaced by the head of a large semi-erect penis. ",
        "I felt it trying to enter but it was too large. I was penetrated again by the fingers. This time they entered me easily. The second time the head of the cock found my ring and defeated it. But the invasion stopped there. Now something entered my mouth, possibly a small phallus. No, it was a thumb, a thumb with a shaped nail. A woman's thumb started to fuck my mouth as the cock slipped from my back opening.\n\nThere was no doubt what entered my mouth next was not a female. I was open to what the thumb could do but this was an uncut cock. I tasted my juice on the very stiff penis. Again I seemed unable to resist, to cease the womanly love for cock. I was consumed with lust for this growing cock. Quickly my mouth moistened the tip and allowed it slow access to my throat. It was not thick but long enough to easily reach my gag point. \n\nI felt a second phallus re-enter my bum but this time it wasn't warm. It slid easily in and out of my opening. I was being fucked by two.\n\nI coughed with the large cock in my throat but then licked it back in, inviting it to rest atop my tongue. I heard a soft feminine groan. The cock was fucking my mouth and my bottom was being penetrated by another. \n\nI was being controlled by two lovers who seemed to adjusted the pace and rhythm of our bodies. They paused for a moment with the member deep in my throat. The cock had swelled and my mouth was full. The tempo started to peak, and then I had a mouth full of semen, not mine. I had become a cocksucker! \n\nThe cum was still pouring in and I couldn't shallow fast enough and the rest ran down my chin to my chest and dripped to my right breast.\n\nThere was no sound except a pair of heels receding and what may have been the pad of bare feet on the stone.\n\nI awoke near dawn still strapped to the chair and blindfold. I was covered with crusty seed and the phallus was still in my bum. I had no control of my violation. My mouth still tasted of the semen. I was not pleasured by either the woman nor the man. I wondered why this was done. The Sisterhood chose to further shift my sense of change. Women are violated and I was now aware that I could be at will. \n\nto be continued, \n\nEnd of Part Five"
    ],
    "authorname": "MadQuill",
    "tags": [
        "lesbians",
        "transitioning"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-visit-to-the-north-ch-05"
}