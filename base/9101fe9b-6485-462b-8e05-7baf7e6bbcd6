{
    "title": "How to Tame a Brat Pt. 02",
    "pages": [
        "<p align=\"center\">Chapter 5</p>\n\n<p align=\"center\">Reuben</p>\n\nThe dreams about Alice didn't stop. They actually got worse. While before I just saw her face, now I saw her standing before me in a black leather mini-dress, fishnet stockings, and her studded doc martens. She would stare at me with her supernova eyes all dark and big and mysterious, a look of deep gratitude painting her face. The collar I had made for her years ago glinted around her neck.\n\nEvery time I saw her, the urge to dominate her, to take her, grab her, make her mine and make sure she knew it, got worse and worse. Even though I knew taming her would be deeply satisfying, I was fighting it with everything I had.\n\nI do not have time for a brat. But my body wasn't getting that memo.\n\nFor the first time in years, I was waking up aroused. I was shocked at first, because I was pretty sure the thing had shut down on me permanently. Hardly anything affected me anymore. Maybe I was just so jaded, so over-exposed, that nothing seemed to hold my interest. When I'd given up sex, I'd barely missed it. But the look of serenity and pleasure on Alice's face in my vision, her eyes glowing with hope, anticipation, and relief was enough to get my blood pumping again.\n\nWhen I saw her around the clubhouse, she was always dressed with her gothic style, leather, fishnets, crop tops showing off the tiniest hint of that jewelry in her belly, and perfect eye makeup that I was desperate to see ruined and running down her cheeks.\n\nDamnit. This is not good. \n\nI thought back to her comments and her scoffing at my discussion with Cat. Her attitude was the exact reason I couldn't stand brats; they didn't follow the rules, they had no respect for tradition or authority, and they held middle fingers up to what the lifestyle was all about; respect, communication, and what submission really meant.\n\nNo, I was not going to cave to that. Alice could keep on being a little bitch, I wasn't interested. At least, that's what I told myself, while I tried to block out the visual of my collar around her neck and her big eyes looking up at me while I put her on her knees.\n\nI resumed my regular schedule, refusing to let Alice's presence affect my visits with my friends. Unfortunately, her new favorite hobby seemed to be finding ways to annoy me. That's fine, I told myself. She can try. If I don't respond, and if I ignore her long enough, she'll stop. \n\nShe did not stop.\n\nIt was little things, mostly. On top of the verbal back and forth, the arguing, and the whining, she liked to do little things to mess with me. She sat a few seats down from me during lunch one day, and blew the paper from her straw directly into my face, giggling and smiling like a maniac when I jumped and swatted it away. Another day, she sat beside me, occasionally reaching over and moving my glass of water just slightly, for no particular reason. An inch to the right... then a few minutes later, an inch to the left. Back and forth, reaching over and moving my cup, and then resuming her meal. She never spoke, never looked at me, just kept moving my cup. When I moved it to the other side of my plate, she repeated her antics with my napkin until I just gathered my things and moved to a new seat.\n\nAnd she always had a lollipop in her mouth. The girl seemed to live on candy. And she only ate the red ones, staining her lips and tongue an even darker color than they naturally were, and making her breath smell like cherries. Sometimes while sucking on one, she'd glance up at me, make eye contact, and flick her tongue, running the piercing in her tongue against the hard candy.\n\nI did my best to ignore her, but it was making my blood pressure rise. She knew she was getting to me, and the only option I had was to ignore her, or engage with her. And I knew that engaging with her would just make it worse.\n\nI was actually looking forward to the week of meetings I had scheduled in DC, because it meant I could get a break from her. Although that mood soured quickly when some unexpected issues came up and I had to throw almost twenty grand into one of the restaurants because of water damage that we hadn't known about when we'd bought the building.\n\nThen there was a situation in the steakhouse with someone not changing their gloves while cooking shellfish, and a customer had an allergic reaction.\n\nThen there was a fire in the Atlanta branch of Reuben's, because someone had put a wet fry basket in the fry cooker.\n\nAnd then there was a girl at the Weston House who tried to jump out of a window. \n\nThe week ended with me arriving home on Saturday night, exhausted and pissed off. I fell asleep in my clothes and once again seriously considered finding myself a service sub or a live-in slave and PA who wanted a non-sexual relationship, regardless of my future reationship with Alice Benson.\n\nThe next morning, I debated skipping church, but elected to go and try to relax with my friends. Sophie was rumored to be making her famous chicken-fried steak, and I needed some decent soul food to ease my suffering. Though my waistline lately was demanding a protein shake and a salad.\n\nThat Sunday afternoon during our weekly church potluck, Alice plopped down across from me with two Hawaiian sweet rolls, some chocolate spread, and a blended chocolate coffee drink topped with whipped cream. She ignored me, smiling down at her treats, and began dipping pieces of the rolls into the chocolate spread. She sighed and closed her eyes, then sucked on her fingers and licked the chocolate off, smacking her lips obnoxiously.\n\nShe's messing with you. You're a forty-year-old professional Dom, and you have the willpower to ignore a snotty little girl. \n\nHaving finished her rolls, she dipped her finger into the jar of chocolate spread, sucking that off too, exhibiting the most sexual consumption of dessert I'd ever witnessed.\n\nYou want some chocolate, Alice? How about I tie your hands behind your back and feed you that shit off my-- \n\nNope. Cut it out.\n\nThen came the frappuccino. She adjusted the straw so that she could sip the whipped cream off the top, making an obnoxious slurping noise with every pull.\n\n\"Alice,\" I snapped, my voice harsher than I'd intended it to be. She looked up at me, straw still in her mouth, cheeks still hollow from sucking.\n\nOh, don't you dare look at me like that. I snatched the mocha away from her, pulling the straw out of her mouth. Her mouth popped open in shock.\n\n\"Genuine question, and I want a serious answer.\"\n\n\"Sure, boss.\"\n\n\"Are you going out of your way to annoy me, or are you always this obnoxious?\"\n\nShe studied me, blinked, licked the chocolate off her lips, and said, \"I'm trying to annoy you.\"\n\n\"Well, stop,\" I said, lowering my voice. \"Because I've had a really long week and I'd like just two hours of you not being a little asshole.\"\n\n\"Two hours is a long time,\" she said. \"I can do one, take it or leave it.\"\n\n\"One, and eat some real food.\"\n\nShe made a face, pretending to gag, but only for a moment. \"Okay, fine, but give me back my coffee.\"\n\n\"After you've had a vegetable.\"\n\nShe glared at me for a moment, but rolled her eyes dramatically and stood to go through the buffet line. Honestly I was surprised she did it, and a little trickle of satisfaction went through me as I watched her angrily pile lettuce onto her plate.\n\nSophie was making her rounds, gathering up trash and refilling napkins on the table, even though we all told her to sit down and eat with us. But it was just who she was to run around and try to serve people. She giggled at me holding Alice's drink.\n\n\"I think she likes you,\" she whispered as she took my plate.\n\n\"Oh you got that, did you?\"\n\nShe laughed again, and I shook my head at the idea of Alice and I being anything close to a couple.\n\n\"You should ask her out,\" Sophie said.\n\n\"Sophie... Can you really see me with a brat?\"\n\n\"Not really,\" she shrugged, \"but I think she really needs a Daddy.\" She smiled shyly and walked off, gathering more plates as she went, greeting everyone by name.\n\nShe really needs a Daddy. \n\nA pair of sky-blue eyes and a head of golden waves intruded on my mind, but I pushed it away.\n\nWell, that's not me, I thought. If that's what she needs, she won't find it here. There were some roles I just couldn't fill. Not anymore.\n\nI held Alice's coffee while I checked my phone. After the situation with the girl at the Weston House, it was very possible I was going to have to go down there today or tomorrow, but I was hoping everything was under control.\n\nThere was a text from Becca. We're handling it. \n\nReuben: I can come down if I need to.\n\nBecca: No. We'll discuss it at our weekly meeting on Monday. \n\nI put my phone away and looked up to see Alice sitting across from me with a remarkably healthy looking salad on her plate. Granted it was completely smothered in dressing and croutons, but at least there was some fiber to speak of.\n\n\"I'm impressed, Benson.\"\n\nShe shrugged. \"I can act like an adult if I need to... I don't like it. But I can.\"\n\nI chose not to respond to that comment, waiting until she'd eaten half of her salad before sliding her coffee back over. She wiped the dressing off her lips and took a sip. \"Wow, chocolate and blue cheese go amazingly well together.\" I chose to ignore that statement in hopes that she didn't speak to me again, but no such luck.\n\nShe finished her salad and smiled up at me. \"Satisfied?\"\n\nWhy did her eyes have to be that stunning? And her makeup was done in a way that made her eyes look even bigger, a dark sharp cateye, long lashes, and bright blue and gold eyeshadow decorating her skin and bringing out the colors in her eyes.\n\nShe'd look beautiful with those eyes filled with tears.\n\n\"Temporarily appeased?\" she asked again. But she distracted me from answering by biting her lip and raising a perfectly shaped eyebrow.\n\n\"Come on, Reuben, I'm trying really hard here.\" She took another sip of her mocha, and then handed her cup back to me. \"Want a sip?\"\n\n\"No.\"\n\n\"It's really good.\"\n\n\"I bet.\"\n\n\"Do you ever smile?\" she asked. A tootsie pop appeared from nowhere, and she ran her tongue piercing along it, making a strange hollow sound against the candy.\n\n\"Not if I can help it. Do you ever eat real food?\"\n\n\"Not if I can help it.\"\n\nI shook my head in mock disgust. \"Who hurt you?\"\n\nThat was clearly the wrong thing to say, and I got my wish for her to cut the crap, though I regretted it immediately. Her eyes flashed with hurt, then welled with tears. She clenched her jaw as a single tear escaped, rolling down her flushed cheek.\n\n\"Who hasn't?\" She tossed her candy onto the paper plate in front of her, and practically ran up out of the room towards the elevator to the dorm rooms upstairs.\n\nHer behavior was so unexpected that I sat there for a moment, trying to figure out what had just happened. Someone sat beside me. Cat looked up at me expectantly.\n\n\"I'm getting whiplash,\" I whispered.\n\nShe pursed her lips. \"Tell me about it. She's even worse when you're not here to entertain her.\"\n\n\"What do you mean?\"\n\n\"Last week, she taught the first-graders a new version of the \"clean up\" song that went something like \"I don't wanna do my chores!'\" she sang the last line, rolling her eyes as she did so. \"I had to give them all a lecture on respecting their elders while trying not to laugh at their antics.\n\n\"Before that, she bet Scott and Brian that she could out-drink them; which was dumb, considering those boys could out-drink an alcoholic at sixteen and still walk a straight line.\" She shook her head. \"If she's not off-the-wall excited and happy, she's so depressed I think she's going to slit her wrists. She pulls it together in public, but barely. I'm worried she's going to say something stupid next Wednesday at the meeting with Social Services. I've talked to her about it but I'm nervous.\"\n\n\"What's the meeting about?\"\n\n\"Getting us approved to keep the orphans,\" she said. \"We would be able to find local families if we thought it was in their best interest, or keep them here, depending on what was best for them. We're an approved location for temporary housing, but the kids could be pulled and re-homed at any time. Right now, they're only here because Charlotte owed Sophie a favor, and Sophie warned she'd make a stink if they took them away. We're hoping that if we can get approval to keep them full-time, we can give them stability.\"\n\n\"And you worry Alice's bratting is going to get in the way of that?\"\n\n\"Not her bratting, just her... general chaos. Then again, she can be super professional when she wants to be. Alex said not to worry about it, and she's seen her in action. I mean, she used to work for some big corporate office as a PA I think.\"\n\nI felt my eyes widen. \"Really?\"\n\n\"Yeah. Kicked ass, apparently. So far she's fine here except for the occasional bullshit, like singing \"baby shark\" nonstop, trying to flog herself, and painting her fingernails with white-out.\"\n\n\"Do you want me to be here for the meeting?\"\n\nCat looked like she really wanted to ask me, but was embarrassed. \"It's just me, Sophie, and Brad. Jake has to work and can't get coverage, and Alex is on a job. I'm worried that with us two women, and Brad being the kind-hearted gentleman that he is, they'll walk all over us.\"\n\n\"Date, time, and place.\"\n\n\"I'll text you the details.\"\n\n\"I'll speak with Alice.\"\n\nI went upstairs to go find Alice's room, assuming it would be fairly easy to locate, and I wasn't wrong. I found her on the third floor, her door decorated with a poster of the Andromeda galaxy, glittery cutouts of stars and asteroids, and glow-in-the-dark plastic stars stuck on. Random glitter stickers adorned her name, which was cut out of black glitter paper.\n\nFor fuck's sake. On top of being a brat, she's also a glitter slut. \n\nShe was playing music fairly loudly, and didn't hear me knock. The door wasn't closed all the way, so I nudged it open and peeked inside.\n\nAlice was sitting at her armoire, dabbing at her eyes and trying to redo her eye makeup while listening to \"Make Me Wanna Die\" by The Pretty Reckless, mouthing the words to herself.\n\nI watched as she closed her eyes, another tear escaping her lids. She carefully set her eye pencil down and clutched at the edge of the desk, her knuckles turning white with the effort. Her lip quivered. She bit down harder and harder until I saw the smallest trickle of blood run down her chin.\n\nShe folded her arms over on her desk and dropped her head into her arms. Her whole body shook with the effort of keeping in her sobs, and she eventually took a deep breath, wiped her makeup off, and started over.\n\nMy heart squeezed painfully in my chest. What the hell had I said to make her hurt that badly? Or remind her of her hurt? I was about to open the door all the way and talk to her, but the song switched to \"Raise Hell\" by Dorothy, and she raised her head and plastered a smile on her face. After a minute or two, it looked genuine, and she laughed once. She checked her phone, her mouth settling into a smirk, and resumed her makeup, singing along with the song loudly.\n\nWhiplash, I swear. This girl experiences more emotions in fifteen minutes than I do in a week. \n\nI didn't want to make it worse, so I decided to confront her another time. Backing away from her door and closing it almost all the way like it was before, I turned around to walk back downstairs, but almost tripped when I turned around.\n\nSophie was standing right behind me, staring at me quietly. She studied me for a moment, then looked down at her hands, and snuck past me and into Alice's room, letting the door click shut behind her.\n\nFrom inside, I heard Alice say, \"Sophie, Oh my god I have the best idea ever!\"\n\nI went downstairs, thinking about what I'd seen, trying to decide what I was going to do. Alice was clearly mentally unstable. Her reaction earlier, as well as her emotional mood swings, had to be a trauma response, or a sign of mental illness. Maybe her bratting wasn't about her being a bitch; maybe there was more to it.\n\nStill; today wasn't the day to talk to her about it. I would arrive a few hours early and speak with her personally before the meeting, and apologize for upsetting her. Maybe I was triggering her unknowingly, or maybe she saw me as a threat or a challenge. Either way, it was time to have an actual conversation. And unfortunately, I was going to have to be the one to initiate it.\n\n<p align=\"center\">***</p>\n\nI arrived three hours early to the meeting on Wednesday, expecting to see Alice at the reception desk, but she wasn't around. Double-checking my phone to make sure I had the right day and time, I looked around and headed for the conference room Cat said we would use. When I entered, I was surprised to see three men and a woman, all dressed in suits, talking quietly and looking through file folders.\n\nSophie sat awkwardly one seat away from the woman, and I recognized her as her former social worker. Sophie sat up tall and looked at Charlotte straight on, but I could tell she was uncomfortable.\n\nAlice stood at the end of one table, talking with one of the men. She wore a tightly fitting black pencil skirt, a pair of modest black pumps, and a simple high-collared white blouse edged with lace. Her makeup was conservative and her hair was pulled up in an elegant french twist. She looked like a completely different person, and smiled and nodded at whatever the man was saying as if she were completely engrossed in the conversation.\n\nWhen she saw me, her face lit up. \"Mr. Weston,\" she smiled politely. \"I'm so glad you were able to come in early. Please, have a seat,\" she gestured to the empty seat at the head of the table.\n\nI tried to hide my surprise as best I could, and took my seat as directed. I set my briefcase down and she leaned over beside me, setting a notepad and a pen in front of my spot. As she did, she whispered in my ear quietly. \"They arrived three hours early. I know it was on purpose.\"\n\nI turned to look at her straight on, putting our faces remarkably close together and getting a closeup look at her eyes. \"Really?\"\n\n\"Yes sir.\"\n\nFinally, something besides bullshit coming out of your mouth. Hearing her say that was disarming enough that I didn't immediately answer.\n\nAlice straightened and looked at me with a polite smile on her face and a sparkle in her eye, and I knew she'd thrown me that bone just to get on my nerves. Before I could do anything, she asked, \"Would you like a coffee?\"\n\n\"Black.\"\n\n\"Just a moment.\" She disappeared, gliding out of the room like a swan on a lake, with the exception of her perfect ass that rocked just subtly enough to be distracting.\n\nOne of the men beside me stared at her, glanced at me, gave a suggestive eyebrow raise, and continued listening to his colleagues' discussion.\n\nAlice returned not a half a minute later with a cup of coffee for me. She set it by my elbow. \"Cat is just finishing up, and should be in soon. Unfortunately, Brad is in a counseling session and is unavailable until two o'clock.\"\n\nI gestured for her to come closer. She approached me, and I swiveled in my chair so I could speak to her without being overheard. She stood close enough to touch and leaned forward slightly so I wouldn't have to stand up.\n\n\"It was on purpose?\" I clarified.\n\n\"An attempt at a blindside.\"\n\n\"Tell Cat to wait by the door for twelve minutes.\"\n\n\"You got it, boss.\" Before she left, she handed me a copy of the same folder the others had.\n\n\"Let's get this done quickly,\" I said loudly, interrupting the other conversations. \"I wasn't expecting to have to come in this early, and I'm missing a phone call to be here, but we try to be accommodating to other people's time here at Mountain Valley Baptist Church.\"",
        "I gave them a smile that was more of an insult than a nicety, and opened the folder. \"Can you four please give me a rundown of what you need in order to make this happen?\" I said, flipping through the folder and finding copies of the church's financials, summaries of the children's programs, and bios and credentials of the people who worked with them.\n\nI was surprised to see Alice's profile on the list as well, and had to work to hide my surprise when I saw she was listed as a former executive and personal assistant to the regional director of the Central Intelligence Agency.\n\nShe wasn't kidding, I thought. She can act like an adult when she needs to. \n\n\"Oh, yes, of course,\" one man started. \"I thought we were waiting for Catherine--\"\n\n\"Her name is Cat, not Catherine, and I'm sure she'll be here soon. Her priority is the children who are currently suffering trauma from being unwanted by their families, not bureaucratic meetings that are happening three hours earlier than they were supposed to.\"\n\nI could feel the power in the room shift right into the palm of my hands. We were no longer trying to convince them that we were good enough. They were trying to convince us they were competent.\n\nTwo of the older gentlemen in the room went back and forth with me on some of the finer details, and the younger man attempted to take notes. I checked my watch twice, flipped my pen in my hands, crossed out a meaningless note on my notepad, and refused to let my face fluctuate at the bullshit they were spouting about \"normal family units.\"\n\nI cut one of them off. \"Sophie, would you like to elaborate on your experience with 'normal family units,' since you were placed with one each time you were moved around?\"\n\nSophie and I had talked about this, and I knew today was the day of that vision I had seen. Sophie didn't like to talk about her experiences, but she'd decided to try to be open and honest today.\n\n\"Actually, I would, thank you.\" She sat up straighter, and told a few stories of her own experience, all of which were awful. \"The exceptions were the Cormons, who adopted me, and the single woman who ran the temporary house where I stayed through my Junior and Senior year of high school after my adopted parents passed away. Both of those homes, out of the fifteen I remember, were the best experiences I had. Here at our facility, they'll have access to observe and be a part of both normal family units, but also a larger community and individuals.\"\n\n\"Our families are very carefully vetted--\"\n\n\"So was Mr. Dunley. And he sodomized me and five other children.\"\n\nThat shut them up for about three seconds, and Cat took that as her cue to enter. \"Sorry, guys,\" she said, looking a little frazzled. \"I had a scraped knee and a botched craft project to rescue, and nap time isn't for another few hours.\"\n\nDespite her having dressed nicely, her hair was a bit of a mess, which really just added to her overall appeal. She looked like the epitome of a soccer mom; as put together as possible for her situation, but she'd be damned if her lipstick wasn't on.\n\n\"This is all to say,\" I redirected the conversation, pulling out a chair for Cat, \"we aren't here to debate whether this is the right place for the children. We are asking you what we need to make it happen. We have solid programming, educational opportunities, finances, space, mentors, extracurricular activities, and three excellent schools in the area. If you'd like my personal references, I can give you information on my rehabilitation center as well. I'm sure you've heard of The Weston House?\"\n\nFour pairs of eyes widened slightly. My name finally clicked into place for them.\n\n\"I'd like the paperwork necessary to finish this conversation by the end of the week so we can all get back to doing our jobs in the most timely manner possible.\"\n\nThe oldest man stammered for a moment, and then nodded. \"Where should we have it faxed over?\"\n\nI hadn't even noticed when Alice had snuck back in, but she spoke up from the corner of the room where she was sitting on a small stool, ankles crossed, back straight, a laptop in her lap. \"The fax, email address, and mailing address are all on the front page of your dossiers, sir,\" she said.\n\n\"Ah,\" he said, looking down at the page with the information right under his nose. \"Yes, thank you, miss.\"\n\n\"Benson,\" she smiled, knowing he hadn't asked, but offering it anyway.\n\n\"Miss Benson. Thank you.\" The man stood, gestured to his team, and they awkwardly slunk out. Sophie got the door for them, and escorted them out.\n\nCat practically melted back into the chair behind her. \"God, that was stressful to listen to.\"\n\n\"Thank you for trusting me.\"\n\n\"Thank you for killing it!\"\n\nSophie skipped back into the room, a huge grin on her face. \"So, we did it, right?\"\n\n\"I have very little doubt.\"\n\n\"Oh my gosh, you're the best!\"\n\n\"Glad someone thinks so,\" I murmured. Sophie gave me a side hug before skipping off to whatever it was she did all day. Cat patted me on the back twice, threw me a rare genuine smile, and went back to the nursery to take back over her job of rearing the children.\n\nAlice had risen and began clearing up the room, her heels snapping smartly on the ground as she collected the coffee cups and barely-used notepads.\n\n\"Alice,\" I said.\n\nShe didn't say anything, she just turned to me and raised an eyebrow. I could already see the attitude seeping back into her face.\n\n\"I'm impressed.\"\n\nShe worked to hide her smirk. \"I told you I could behave if I needed to.\"\n\n\"Was that a skill you learned from the CIA?\"\n\n\"No. It was a skill I learned from working for a defense attorney for almost ten years. He got me the job at the CIA.\" She clicked a pen closed and smiled at me. \"No, the skills I picked up at the CIA were... much more interesting.\" \n\nShe trashed the paper coffee cups and was about to leave the room when I spoke again. \"I'd like to apologize.\"\n\nShe spun back around slowly, studying me like she didn't quite believe the words that had come out of my mouth. Staring at me like I was a lion about to pounce on her, she slowly took one step at a time until she was right in front of me, gripping the notepads firmly in her hands.\n\n\"Why?\"\n\nI measured my words before I spoke them. \"First, because I said something to you on Sunday that was clearly very upsetting, and that was not the intended effect. I meant it sarcastically, but I'm afraid that is an art form I have yet to master, and I missed the mark spectacularly.\"\n\nShe rolled her lips into her mouth like she was holding something back. I took her silence as an allowance to continue.\n\n\"Second, because I misjudged you as a childish, unprofessional, self-centered brat, and I can see now that there is significantly more to your personality than what I initially assumed.\"\n\nShe blew out the breath she was holding. \"Well, you weren't wrong about your initial reaction, but you aren't wrong about your epiphany either. So... apology accepted. Thanks for putting those four corporate assholes in their place and letting me watch. Also... your hour is up.\" She resisted a smile, but her jaw moved to the side slightly. \"And I've had a really long day of dealing with a lot  of bullshit, and I fully intend to take it out on you. Fair warning.\"\n\n\"Why me,\" I asked, knowing I'd probably regret it.\n\n\"Because you're so sexy when you're pissed off.\" She winked and sauntered out of the room, rocking her hips far more seductively than she'd done earlier in the meeting.\n\nI shook my head as I watched her go, wondering what exactly was in store for me next, and wondering if I was really dreading it as much as I had before. I had assumed Alice was annoying me because I was the last one yet to win over, or because she found it entertaining... not because she had any kind of attraction to me.\n\nAs they usually did, my thoughts jumped to what I wanted to do to wipe that snarky smile off her face, and I had to shove those thoughts down before I lost my mind and my self control. There was something so exciting about the idea of being the one to get her under control that I almost went after her.\n\nI didn't exactly like Alice... but she certainly wasn't boring. And if I wasn't careful, I was going to start acting out my fantasies of taming her. She may be a clever scheming brat... but I was a lonely, frustrated, understimulated sadist, and she wanted my affection.\n\nBad combination.\n\n<p align=\"center\">Chapter 6</p>\n\n<p align=\"center\">Alice</p>\n\nMr. Weston came out a few minutes later, his face rearranged into his typical brooding stone-cold expression. But I could tell he was less stressed than normal, because the lines between his eyebrows had softened.\n\nThat was one thing I noticed. He was so stressed all the time, but when I distracted him, he stopped thinking about his problems long enough to give those frown lines a break. And his eyes always lit up, like he was working really hard not to brat me right the hell back. While initially I'd started annoying him because I thought it would be entertaining, I now saw him as a challenge. Would the super-old-school, rule-following, contract-loving Master break his rules to put little ol' me in my place? I was keeping track of my actions and his reactions in my notebook and using stickers to track my progress.\n\nToday, though, this would be a piece de resistance. I'd either win my streak by a longshot, or I'd get my ass handed to me. Either result was ideal.\n\nI stood by the coffee machine, pretending to write in my notebook while he fixed himself another cup. \"Have any more meetings for the rest of the day?\" I asked.\n\n\"Three, all at home.\"\n\n\"Skype?\"\n\n\"Microsoft Teams,\" he sighed.\n\n\"Eww.\"\n\n\"Tell me about it.\"\n\n\"Well... that's perfect then,\" I smiled conspiratorially. I turned and walked quickly away, looking over my shoulder once to see him staring after me in concern.\n\n\"Why?\" he shouted after me. I didn't answer, just walked faster, almost breaking into a slow run. Which was hard in heels, but hey, I'd picked up a lot of skills at the CIA.\n\n\"Why, Alice?\" I shouted after me, and began to walk briskly my way.\n\nPerfect. I knew after that whole conversation he wouldn't be able to resist following me to see what I had planned.\n\nI ducked into the stairwell where I'd hid my weapon of mass destruction, slipping out of my heels and sliding on my tennis shoes, and grabbing the device. Mr. Weston appeared just a few moments later, running into the stairwell. He froze for a split second when he saw what I was holding. A lock of shock, horror, and disgust settled on his face.\n\nBefore he got a chance to say anything, I'd soaked his t-shirt with a high-powered squirt gun. Of course I was feeling extra violent today, so I'd mixed fine-powdered glitter into the water.\n\nHey. I never said I was a good person.\n\nAs soon as I'd gotten a few good squirts in, I dropped the gun and raced up the stairs, making it to the next landing before he had a chance to chase after me. He followed me up the stairs, shocking me by the speed at which he pursued me. I managed to escape by the skin of my teeth, locking my door on my third floor moments before he caught me.\n\nI slid down my door and collapsed on the floor, grinning wildly and panting from my run. My whole body buzzed with excitement and adrenaline, and I felt euphoric and high from the excitement and the look of shock on his face.\n\nHe banged on the door of my room. \"Alice Benson, you little snot! Open this door right now!\"\n\n\"Uh-oh, whatcha gonna do, big scary man? You gonna punish me?\"\n\n\"I just might...\" he muttered.\n\nOh, my God, that would be amazing, I thought. The thought of Reuben pulling me over his knee and spanking my ass had me blushing and squirming. And yes, I'll admit, it wasn't the first time the thought had popped into my mind. Actually it may have been about forty percent of my motivation for all this nonsense.\n\nIt's not like I set out to pick on him in the beginning. It's just, he was so big, and mean looking. He wouldn't hold back. He'd beat me until I cried, and laugh at me for it, that was for damn sure. And I hated myself for practically begging for his attention, because I'd already sworn off Doms. Yet here I was, making a fool of myself for a man's hands around my throat.\n\nMy brain and body were still buzzing from the excitement and I knew I'd have a hell of a crash later, but the look on his face of horror at my glitter-water-bomb would hopefully be enough to get me through the worst of it.\n\n\"Give me a good reason to let you in,\" I laughed.\n\n\"Alice...\" he groaned. He sounded tired.\n\nWell that wasn't at all what I wanted. I wanted him mad enough to slap me in the face, not upset. I stood up and unlocked the door, and cracked it open, leaving the deadbolt on so it wouldn't open more than two inches.\n\nHe leaned against the door frame, his eyes closed, panting from his sprint up the stairs. He opened his eyes and looked at me.\n\nThere was a monster in there, just begging to be let out.\n\nCome and get me, big boy. \n\n\"You're making me want to break the rules, little girl,\" he growled quietly under his breath. At his tone, goosebumps rose on my flesh.\n\n\"You'd better make it worth it,\" I whispered back.\n\nHe closed his eyes and let his head drop into his arm. \"You...\" he laughed once, but it was more like a choking cough. \"You really are destroying me, you know that?\"\n\n\"Maybe you should get me back for it.\"\n\n\"Maybe you should ask for what you want,\" he snapped back, straightening and scowling down at me. \"Maybe you'll actually get it.\"\n\n\"Bor-ring!\" I sang. And, in my experience, completely moot. Doms did what they wanted, not what you asked for. The hack? Trick them into it.\n\nHe unbuttoned his shirt quickly, his large fingers flying nimbly over the tiny buttons. He yanked the shirt off, leaving just a thin tank top and his blazer hung over his arm. I could see the thick dark curly hair on his chest through the soaked tank top and I bit my lip at the sight.\n\nHe bundled up the glitter-soaked button-down and shoved it through the crack in my door. \"I expect that clean by next Thursday's party, or there will be consequences you won't enjoy suffering through.\" Then he buttoned his blazer all the way up and walked briskly down the hallway.\n\n\"What kind of consequences?\" I yelled back.\n\nHe shouted back over his shoulder. \"Destruction of property, assault, harassment, and a restraining order.\"\n\nI doubted very seriously that Reuben Weston would go to the police about a glitter-bombed shirt, but then again... he seemed to have connections and a name that meant something.\n\nI slammed the door shut, put the shirt in my bathtub, and got to work.\n\n<p align=\"center\">***</p>\n\nI didn't see Reuben on Sunday, but I knew I'd see him on Thursday for our Holiday party. The church celebrated Thanksgiving and Christmas at the same time, because everyone left during Christmas with the exception of the permanent residents. So on Thanksgiving, the team and I had decorated the downstairs with white and green painted pumpkins, Christmas trees and wreaths, lights, and glittery ribbons all throughout the public areas. The fellowship hall and dining area were opened up to be one large room with a huge buffet of turkey, ham, roasted lamb, every side imaginable, and enough dessert to put a small army into diabetic shock.\n\nIt was nine in the morning when Mr. Weston arrived with his four girls. They were all about my age, maybe a little older, and looked a little intimidated to be here. They were all dressed classy and fancy, their hair done nicely and their makeup conservative.\n\nSophie had warned me they were coming.\n\n\"I don't think they're his submissives,\" she'd told me, \"but he's bringing some girls from DC to help with the party. They want to work on service training.\"\n\n\"I thought he let all his subs go,\" I said.\n\nShe practically danced around the kitchen, checking temperatures, switching pots from one burner to another, and shuffling casseroles in and out of the oven in a perfectly-choreographed routine, talking while she did so. \"He did, about six, maybe seven years ago. It was before I met him. He won't talk about what happened... but he still works with submissives in DC, and I think he works with battered women too. Some of the girls he's bringing today are rescued from yucky situations.\"\n\n\"Hey,\" I said softly, coming up beside her. \"I heard what you said in that meeting with the social workers... I didn't know that about you.\"\n\n\"It's okay,\" she said. \"I'm in a much better place now. And Mark and I are both seeing a woman who specializes in sexual trauma, so it's helped me a lot. It's really sweet of you to say.\" She smiled at me.\n\nSo I'd been mentally prepared to see his four \"girls\" when they arrived. I was glad Sophie warned me, because they didn't look like what I'd expected battered women from \"yucky situations\" to look like. They looked hopeful, excited, shy but confident, and had beautiful perfect smiles, flawless posture, and elegant body language. They looked like princesses.\n\nI greeted them and memorized their names, and brought them back to Sophie. The two with cooking experience were going to help with desserts, and the two without would help with dishes. Then I ran off to help Alex and Mrs. Greenwood make sure everybody got something nice from the gift exchange.\n\nI passed Mark and Reuben as I jogged back out to the Christmas tree. Reuben was wearing his normal attire; black dress pants, a white shirt, and a blazer. Did the man live in a suit?\n\nMark and Reuben were looking at the diagram of the tables and the buffet line I'd drawn up. Jake was fiddling with the giant TV in the fellowship hall, trying to get the Macy's parade playing, since Noami, Brian, Scott, and their family band were singing. And of course, the local university's marching band was once again leading the parade. So it was kind of a big deal for the locals.\n\nI loved a good party, and I loved hosting and coordinating one. As exhausting as it was, I was totally in my element making sure the food was set up, the music was playing, and the whole thing ran smoothly. And the past week of planning had been enough to keep me busy to the point where I hadn't completely lost my mind at every mood swing that came my way. So that was nice.\n\nThe tables were full. People ate and laughed and watched the parade. Brad spent five minutes giving a very short, encouraging mini-sermon on friendship and community, Jake explained how the gifts would work, and then Alex surprised everyone by coming in dressed in her old Sugar Plum Fairy tutu and pointe shoes, bringing a rolling cart by each table with sparkling cider, hot cocoa, and a variety of alcoholic drinks for those inclined to partake.\n\nWhile Alex was serving drinks, I caught Reuben sneaking away from his table. I knew where he was going, and was looking forward to messing with him.\n\nI'd purposefully worn a kind-of naughty elf costume today. It was a little short, but hey, I wore leather shorts underneath just in case! I had curled my hair, done up my makeup, and put on a pair of red and green high-heels to match my eye makeup. I looked like a Christmas snack. And Mr. Weston was Santa Clause.\n\nSophie had talked him into it when our other Santa had bailed last minute. I'd learned that Reuben was physically incapable of saying \"no\" to Sophie, and I'd asked her to tell me her secret. Her answer? \"You have to be a good girl.\"\n\nBor-ring!\n\nAfter putting on his costume, Reuben made his way to the nursery where the kids would come to see him and get their gifts from the big red gift bag we already had hidden and stuffed full. The perks to having a clairvoyant mind-reader on site was we knew what each kid wanted, and could orchestrate getting them close to what they wanted. It was a fun trick, and I couldn't wait to watch the shock on their faces.",
        "Reuben sighed and settled down in the big red and gold chair that Mr. Greenwood had made and painted, waiting for Cat and Sophie to lead the kids in to come see Santa, and I snuck in the side door with my own gift for him.\n\nHe was sitting in the chair and rifling through the giant red bag when I slid onto his lap, putting my legs over his. \"I've been a really bad girl, Santa,\" I purred, giving him my naughtiest bad-girl look.\n\nHe stared down at me with the most unimpressed expression I'd ever seen.\n\nI shifted my hips a little, hoping that would do the trick. No dice.\n\n\"Can I tell you what I want for Christmas?\"\n\n\"Did you finish cleaning my shirt?\"\n\n\"Patience, grasshopper,\" I said, raising a finger and putting on a bad accent.\n\n\"Alice.\"\n\n\"Santa.\"\n\n\"Alice.\"\n\nI held up the gift-wrapped shirt. He snatched it out of my hands, tore it open to make sure I hadn't sabotaged it worse, and nodded in satisfaction before setting it aside.\n\n\"Now, about my present.\"\n\n\"No presents for bad girls,\" he said, completely deadpan. \"Just coal. Now please get off me.\"\n\n\"It's not even a want at this point,\" I said. \"It's more like a need.\" \n\nGod this man's face never changed, did it? How was I ever going to get him to laugh?\n\n\"I think... I really need a spanking.\" I bit my lip in anticipation.\n\nHis eyes darkened. \"Yes, I think I'd agree with you on that point.\"\n\nI blushed at the idea. \"A good smack in the face... or, you know... wherever...\" \n\nHe continued, dashing my hopes. \"Unfortunately, you're probably a masochist, so that would be a reward, not a punishment.\"\n\n\"Oh come on!\" I shouted. \"You said I had to ask! What more do you want from me! You're tearing me apart!\" \n\n\"I respect that reference, but refuse to cave to your manipulation.\"\n\n\"Don't you ever get tired of being boring?\" I was so tired after the past three days of keeping myself under control, I needed just a little splash of chaos to mix things up, and he was my drug of choice. Shifting my hips again in hopes of getting any kind of reaction, and low and behold, I struck gold. He resisted reacting when I pushed up against him, but he closed his eyes for just a minute, as if to steady himself.\n\n\"I'm not boring.\"\n\n\"No, but you're numb.\"\n\nHe froze, holding his breath and staring at me.\n\n\"Don't you ever get tired of feeling nothing? Of being so damn in control of yourself that you don't feel anything? Doesn't it make you want to slam your head against a wall?\" Or your big meaty hand against my ass cheeks?\n\n\"I think you feel enough for the both of us, Alice. Don't you?\"\n\nBefore I could say anything, he pushed me out of his lap, dumping me on the floor, right as the door opened up and the kids came scampering in.\n\nI scrambled to my feet and glared back at him, only to see a subtle glint of humor in his eyes.\n\nNot the reaction I was going for, but... hey. I'd take it. And that little bit of a hard-on was enough evidence to renew my motivation.\n\nThe kids lined up to see Santa, some sitting on his knee, some too shy so they stood nearby. The parents stood nearby taking photos, and I stood by the door, collecting the scraps of wrapping paper torn off of the gifts and handing out lollipops to the children before they left.\n\nMr. Weston was a surprisingly good Santa Clause, and it kinda made my heart melt a little. He never made any of them sit on his lap unless they wanted to, and he could tell if they were uncomfortable. There was one little girl who was very anxious, and Cat was trying really hard to get her to go up to him, but she shied away, hugging her leg and refusing to get any closer to him.\n\nInstead of trying to get her any closer, he withdrew the gift from the red bag with her name on it, and handed it to me, nodding to her for me to bring it over. I did so, and the girl clutched the gift and ran away. Cat sighed, letting the next child go up.\n\nI watched the little girl out of the corner of my eye. For the next twenty minutes, she stared at the wrapped box, unsure if she was willing to open it. She had to be five or six years old, and I knew she was one of the kids who had been abandoned on the doorstep of the church. She was very shy, and I hadn't heard her ever speak to any of the other kids. Cat was the only one she would let touch her.\n\nFinally, she began opening the paper, tearing it off bit by bit. I watched her eyes grow wider and her bottom lip start to tremble as she gazed down at the stuffed puppy, holding it tightly in her little hands. She looked back up at Reuben, sitting on the red throne.\n\nMost of the other children had received their gift and left the room, and only a few kids and their parents remained. Reuben was talking with Cat quietly. I watched the little girl drag herself to her feet and tip-toe closer to him, an anxious look on her face. I cleared my throat pointedly, and Reuben stopped talking and looked over at the little girl.\n\nShe stood awkwardly, her toes pointed in, clutching the stuffed dog. He motioned with a finger for her to come closer, and she did so, just a few steps at a time. He was patient, watching her, his mouth hidden by his fake beard, but I could see a softness around his eyes.\n\nFinally she stood just a few feet away from him.\n\n\"Do you like it,\" he asked quietly. His voice was different from the low rough sound I'd grown used to hearing. He sounded gentle and kind.\n\nThe little girl nodded, and her lip shook again, eyes welling with tears. They began to spill over and she hiccupped. She made a fist and scrubbed at her face, then dropped her head and covered her face with her hand.\n\nReuben stood up and took a single large step towards her, and knelt on the ground in front of her, placing a single gloved finger under her chin, making her look at him.\n\n\"Brave, pretty girl. Never be ashamed of your tears, little one. Never be embarrassed for being honest about how you feel.\"\n\nAt his words, she opened her eyes and met his gaze, her ragged breathing evening out. He didn't wipe away her tears, he didn't try to get her to stop. He just watched her until she finished crying, and she wiped away her own tears.\n\nFrom behind his back, he withdrew a lollipop. \"Merry Christmas, Rosa.\"\n\nA soft smile twitched on her lips. She took the sucker, held her stuffie against her chest, and ran off.\n\nI didn't know my eyes were burning until he looked over at me. My throat felt thick and my whole body was hot. Was it anger? Was it shame? Jealousy over a little kid? I had no idea, but I knew one thing for sure. Reuben Weston would never tell me I was too emotional about something. Reuben Weston would never tell me not to cry.\n\nI felt the tears slipping down my cheeks as he took slow steps my way. It was impossible to keep his gaze as he neared me, and yet I had to. I couldn't look away.\n\nNever be embarrassed for being honest about how you feel.\n\nAs he had with the child, he tilted my chin up with a finger, and then he whispered softly, \"You are far too beautiful when you cry.\"\n\nI wanted to smack him. I wanted to scream. I wanted to fall on my knees and wrap my arms around his legs. I wanted to crawl into his lap and lay my head on his chest. And I wanted to kick him in the balls.\n\nDamn my fucked up brain. None of this is fair. None of this is valid. It's all fake. None of it is real. But telling myself that shit never helped. It just made me angrier because it added 'useless piece of emotional garbage' to the list of reasons why I hated myself.\n\nI bit my lip, knowing exactly how hard I needed to bite to draw blood. That little bit of pain, the clarifying release I needed was so far away, and biting my lip wasn't enough, but it might help me be able to walk upstairs to my room without making a scene.\n\nHe fished another tootsie pop out of his pocket. The cherry ones, just like I preferred.\n\nMy emotions clarified, refocusing slightly, enough for me to take the lollipop and smile. \"I knew you liked me,\" I whispered, and stretched up on my tip toes, planting a quick kiss on his cheek.\n\nThen I ran upstairs for a shower and a cry before I did something really, really stupid. Like fall in love.\n\n<p align=\"center\">Chapter 7</p>\n\n<p align=\"center\">Reuben</p>\n\nI didn't see Alice for several weeks. Right after Thanksgiving, I brought the girls back up to DC and dropped them back off at the Weston House. I had a Christmas eve party planned for the Lounge, and was excited to see my friends again, but that afternoon I got a text from an unknown number.\n\nUnknown number: Mario Kart. \n\nReuben: Who is this?\n\nReuben: Rachel?\n\nReuben: Are you okay?\n\nNo response.\n\nMario Kart was a safeword that one of my girls used, because it was a videogame her and her father used to play together. It was one of her only good memories, and I'd never heard anyone else use it before. If it was Rachel, that meant she was with Pete. I gave him a call.\n\n\"Reuben, hey!\" he answered on the third ring. He sounded a little tipsy. \"Merry Christmas.\"\n\nPete was a longtime friend of mine and a long-standing member of The Underground and of the Lounge, though he'd gotten in a fight with another good friend of mine, and I'd told them both to stay away for the time being until things settled down and we got the stories straight. I'd called him later to figure out what happened. Apparently, his long-time slave had ghosted him, and losing her had really messed him up.\n\nI'd sent Rachel to his place for the holiday, because she was excellent at running parties and entertaining. I hadn't found her a permanent master yet, and she was getting stir crazy sitting around the Weston House. I knew Pete needed company after his slave had ghosted him, and I thought it would be a good distraction for him, and an exercise in service for her.\n\n\"Hey Pete, how are you?\"\n\n\"Not bad. We're having a little get-together here.\"\n\n\"How's Rachel doing?\"\n\n\"Oh, she's doing great,\" he laughed. There was something in his voice I didn't like that made my skin grow cold.\n\n\"Good, very good. Can I talk to her?\"\n\n\"Uh, she's... a little tied up at the moment.\"\n\n\"I'm hoping you mean figuratively, since bondage is a hard limit for her.\"\n\n\"Of course,\" he laughed. But he sounded nervous.\n\nI grabbed my wallet and my travel kit, and got in my car. \"What's she tied up with, then?\"\n\n\"Oh, she's entertaining for my party. Like I said, I have some friends over.\"\n\n\"Well, I'll stay on the line until she's free.\"\n\nA hesitation, and then he said, \"Oh, of course. Uh, let me just see if she's... done. Hold on.\"\n\nThis is not good, I thought. This could be devastating. I climbed into my car as fast as I could. Please let me be wrong about this. Please let this be a false alarm, or a prank. \n\nI couldn't hear anything on the line; either he muted himself, or he left the phone in the other room. I was in my car and speeding over to Pete's house as fast as I could. Finally, Rachel's breathless voice came on the line.\n\n\"H-hello?\"\n\n\"Hi Rachel. How are you?\"\n\nShe cleared her throat. \"Oh, hi Mr. Weston. I'm okay,\" she said. Either I was on speaker phone, or someone was there with her. Or I was reading too much into this whole situation, and someone was fucking with me.\n\n\"Pete told me you were helping with the party.\"\n\n\"Yes,\" she said. \"Uh, he has some people over. And I'm... um, taking care of whatever they need. I mean, food and snacks, and drinks, and stuff. They're playing some games...\"\n\nI could hear her safeword on the tip of her tongue. But she couldn't say it, because someone was standing beside her, and she was afraid.\n\n\"What does he have you doing? Cleaning the kitchen?\"\n\n\"Yeah. Dishes, laundry... trash and garbage...\"\n\nShe'd told me about how her former owner had called her garbage.\n\n\"Well,\" I said, \"I'm making my rounds, and I'm only in DC for the rest of the evening, and I have your Christmas gift. I'd like to touch base with you and get it to you.\"\n\n\"I'd love that,\" she said a little too desperately.\n\n\"I'll be over in about twenty minutes, okay?\"\n\n\"Yes sir. Thank you.\"\n\nI did everything I could to keep her on the line, start up another conversation, but Pete grabbed the phone and told me he'd see me soon and hung up. I accelerated faster.\n\nI'd lied to Pete and Rachel; I was only five minutes away.\n\n<p align=\"center\">***</p>\n\nI'd been to Pete's house plenty of times, especially recently, since I tried to get a good feel for the current mindset of a Dom I was placing a sub with. The living room was well kept and modern, and a hallway and a stairwell lead to a basement downstairs. Today, those rooms were disheveled and covered with plates, spilled food, and bottles.\n\nI entered his house without knocking and went straight down the stairs, holding my club in one hand and my closed knife in the other. The door to his playroom was cracked open, and I peeked inside... and I saw red.\n\nRachel was naked and on her knees, her ankles buckled into a spreader bar, her arms cuffed behind her back. She had red marks on her skin and her hair was matted. They were hosing her off, as if to hide whatever evidence left on her skin. She was shaking, her eyes squinted closed against the cold water.\n\nThere were three other men besides Pete who I didn't know, and they were wiping down equipment. One of them was buttoning his pants and griping about how he never got his turn.\n\nI kicked the door open and barely resisted killing Pete. The other guys scrambled away from the room and ran up the stairs, knowing that as soon as I got Rachel out, they would be in huge trouble.\n\nLet them go, I thought. It doesn't matter. I'll get their names. \n\nPeter was saying something about how she'd consented, signed a contract, and all kinds of other bullshit, but I whirled around and hit him in the side of his ribs with my club. He clutched at his side and shouted at me.\n\nI knelt down to see Rachel, who was shivering, her teeth chattering and her eyes dilated.\n\n\"You came for me.\"\n\n\"Always. Hold still.\" I cut the cuffs and the collar off with my knife, and then the cuffs around her ankles from the spreader bar. Holding her under her arms, I guided her onto her feet, wrapped my jacket around her shoulders, and escorted her out as quickly as I could.\n\nPete was jabbing about something, but I blocked him out until I got Rachel safely in my car. After shutting the door, I turned around and strode back into the house, shoving him out of my way. There were some advantages to being a big man; Pete had nothing on my size.\n\nPete was extremely defensive, shouting about calling the cops for assault and trespassing, but I could tell he was drunk and I wasn't even sure how much of this he would remember. I ignored him as I stalked through the house, looking for Rachel's belongings. There wasn't much she'd brought with her, but I knew she had some clothes and some possessions of hers that mattered to her. In the bedroom that had clearly been hers, I gathered up her things and shoved them in her bag. But I also noticed something I didn't expect.\n\nOn the wall were posters of planets and galaxies. The closet door was decorated with foam cut-out letters that said \"Brat Stash.'' And in the corner of the room, a medium-sized telescope sat pointed at the open window. On the side were glittery letter stickers that spelled out \"Bratscope.\"\n\n\"What is that?\" I asked, pointing at it.\n\n\"That was my slave's. She left all her shit here when she ghosted me.\"\n\n\"Did you break her hard limits, too?\" I shouted. After seeing what he'd done to Rachel, I knew I'd never trust a word that came out of his mouth again.\n\n\"I didn't do anything she didn't beg me for! She asked me, Reuben, I swear!\"\n\n\"Peter Woodrow I swear on my mother's grave, if I find out you're lying, I will destroy you.\"\n\nThe words seemed to practically jump out of my mouth. Before I could think too much about what I was doing, or what it meant, I snatched up Rachel's bag and slung it over my shoulder. Grabbing the telescope, I cradled it in my arms as I walked out the door.\n\n<p align=\"center\">***</p>\n\nI called Becca on my way home and told her why I wasn't coming to the party, and asked her to keep it to herself. When I mentioned I was going to take Rachel back to the Weston house, Rachel stopped me.\n\n\"Please don't,\" she spoke up, her voice borderline panic. \"Not like this. I... I don't want the others to see me like this.\"\n\n\"What do you mean?\"\n\n\"If they find out you sent me somewhere, and I come back looking like this, they'll never trust you. Especially the new girls. Please, sir, take me somewhere else.\"\n\n\"Becca... I'll call you back,\" I said, and hung up. I was on the highway and was nearing the exit for my own home. \"Rachel, I can take you to my place for a few days, if you'd prefer that. But I'm leaving in a few days, so you'd be on your own. I don't think that would be good for you.\"\n\nShe hung her head and wrung her hands. \"Okay, just tonight let me stay with you? Please?\"\n\n\"Alright.\" I nodded, and took the exit. \"I'm so sorry, Rachel. I had no idea... He's never... I've known him for years. I didn't think--\"\n\n\"It's okay, sir. I just need some time. Thank you for rescuing me.\"\n\n\"I don't deserve your thanks... or your trust.\"\n\n\"Well,\" she pulled my blazer tighter around her and sat up straight. \"You still have it. You've never broken my confidence, and you rescued me. Twice.\"\n\nBack at my house, I let her take a bath in the master bathroom, which was a bit more luxurious than the ones in the guest rooms. She came out a while later looking refreshed, but still shaken. I tucked her into the guest bed and knelt on the floor by the side of the bed and held her hand while she spoke, as we used to while she was still in therapy.\n\nShe slowly spoke through the different scenarios he'd put her through; first when he'd pushed her on bondage, saying handcuffs didn't really count, and how she felt pressured to agree because he seemed so nice. \"It wasn't bad at all,\" she said. \"I liked it. It was just fun. It actually made me less afraid of what I've been through... but then it was like he snapped.\"\n\nShe recounted how after he'd broken their agreement on cuffs, he'd added ropes, then restrained her and told her he wanted to do an impact scene. When she'd refused, he had gagged her and told her that he would change her mind.\n\n\"He punished me for nothing,\" she said, her voice weak, a tearful smile on her face. \"Like my old owners used to. He'd punish me just because he felt like it.\"\n\n\"Rachel. I'm so sorry.\"\n\n\"He kept talking about her,\" she said. \"He called her 'the little ghost.' But sir, I think she ran away because he hurt her.\"\n\n\"I think you're probably right.\"\n\n\"Should we try to find her?\"\n\nI didn't want to think too hard about the sticker-covered telescope in my car. \"Rachel... I think I already have.\"\n\n<p align=\"center\">***</p>\n\nA few days later, back in North Carolina, I sat outside on the porch with a large serving of Woodford Reserve, and made a phone call.\n\n\"Simon Pierce. Merry Christmas.\"\n\n\"You're two days late, Weston. How are you?\"\n\n\"Becca fill you in on Woodrow?\"\n\n\"Yeah.\"\n\n\"Do you know anything about his former slave? The one who ghosted him?\"\n\n\"Yeah. I know her. I used to do suspension scenes with her, and I did all her piercings.\" I heard him settle into a chair of some kind and crack open a beer. \"She's a hardcore masochist. Five-foot-nothing, if that, and hotter than sin. Fiery, bratty, mouthy little thing. She played with Woodrow casually for a few months after a bad dynamic ended, and then they became exclusive.\"\n\n\"What happened?\"\n\n\"You remember when he took her to the lounge for the grand opening? And Lindsay Murray punched him in the face? And they both got kicked out?\"",
        "\"Well... they didn't both get kicked out, but yes, I remember the situation. I wasn't there to witness it, though. I only know what Jack told me.\"\n\n\"From what I understand, they had been playing at The Underground and she'd verbally safeworded and he hadn't stopped their scene. But I didn't witness that, and she's famous for topping from the bottom, so it's hard to say if anything really happened.\n\n\"Then a few weeks later, I watched her safeword out of a scene, and he did stop, but he gave her a lot of shit for it. It made me really worry about their relationship. Mike and Leanne and I said something to Anthony, and he asked Pete not to come back if he was going to play like that.\n\n\"After that, Pete took her home and nobody saw either of them again for a while. I tried calling her after that, but she wouldn't answer her phone. Saw her again at the Lounge that night and I think my alarm was what set Lindsay off. She didn't look like herself.\"\n\n\"What happened after the fight?\"\n\n\"Nobody knows. Apparently, she ran out of the bar, and nobody's seen her since. I'm worried about her, Reuben. I've been looking around, even tried calling her old boss, but I couldn't get in touch.\"\n\nI closed my eyes, dreading hearing his answer to my next question. \"You remember her name?\"\n\n\"Of course. She's one of my best friends. I'll never forget Alice Benson.\"\n\n\"Thanks, Pierce.\" I hung up the phone and stared at the telescope sitting in my living room, swallowing my nausea.\n\nI remembered the short conversation Alice had participated in with Cat and I on the porch outside the church. Isn't that the point of owning a slave? To have someone to break? And the way she'd scoffed when I'd brought up contracts. And the way she constantly bratted for attention... and the way she'd jumped and thrown her arms up in fear when Cat had nudged her foot... That was a trauma response.\n\nAlice wasn't just a brat, I realized. If Peter Woodrow had hurt her, that would explain a lot of her behavior. She was hurt, terrified, and didn't know how else to get what she wanted. She manipulated people into giving her what she needed, because the alternative was to not have her needs met.\n\nBecause she'd trusted someone to meet them, and they'd broken that confidence.\n\nAnger churned in my gut, and the Beast reared its head. I was furious at the idea of someone hurting her, or even upsetting her. She could cry all she wanted at my hand, but someone else upsetting her?\n\nAgainst my will, the scene I'd witnessed earlier morphed into something different. Instead of many people in the room, it was just Pete. Instead of Rachel on her knees, it was Alice. Mystical blue eyes filled with tears, mascara running down her cheeks, dark hair setting off the red marks that would be covering her breasts and stomach and back.\n\nNobody hurts my girl. \n\nI dug my fingers into my bad knee, sending a quick shot of pain through my whole leg. Stop thinking that way, Reuben. She's not your girl. Not yet. Maybe not ever. \n\nI needed to get Alice's side of the story, and figure out what had happened. It didn't matter if she was my submissive or not - a Dominant friend of mine had hurt a sub in my territory, and that was a fucking problem.\n\n***************************\n\nThanks for reading! Please don't forget to rate (and you know I love reading your comments!)"
    ],
    "authorname": "LindsayMurray",
    "tags": [
        "brat",
        "brat tamer",
        "bratting",
        "slow burn",
        "novel",
        "sadist",
        "masochist",
        "mental health",
        "secrets"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/how-to-tame-a-brat-pt-02"
}