{
    "title": "The Cursed Tattoo Pt. 11",
    "pages": [
        "Women Are Magical\n\nRyan was angry at Eleftheria -- for the lies and the manipulation, but most of all for secretly wanting him to take more girls. Believing that Ellie had been there to protect the world from him had been a cornerstone of their relationship. Now, Ryan remembered everything. He knew Ellie wanted to turn him into some kind of a tyrant. Maybe nothing nearly as bad as what Claus had been, granted, but why even start down that road at all?\n\nMore than anything, Ellie's duplicity felt like a betrayal of the girls. And Ryan was nothing if not protective of them. He was also committed to them so the idea of growing his harem further felt like cheating. It didn't have to make sense. That's just how he felt.\n\nDeep down, Ryan was angry at himself, too. He had to admit Ellie was right about a lot of things. Having his harem did make him feel powerful. Ryan didn't know how to approach the subject so he chose not to, for now. He had time. Without even realizing it at first, he started giving Eleftheria the silent treatment.\n\nErica the librarian and Ellie spent days in deep communication with the newest girl in Ryan's harem: the witch who had given him his curse. Ryan was relieved to have Erica there. His trust for the witch and the angel was low but he knew Erica was completely loyal to him.\n\nRyan exchanged a few tentative glances with the witch over the next few days. She was unreadable -- intense, but unreadable. Ryan was already afraid she would turn out to be as alien as Ellie was. Nothing about the dark, petite beauty's demeanor gave Ryan any hope she would come equipped with normal modern-world social skills.\n\nHe knew he would have to put some of his magic cum into the new girl soon, but he was glad he didn't have to deal with her right away.\n\nRyan wanted to escape his confusion, this blur in his head of everything he had suddenly remembered, and sex was the obvious answer. These days, he could easily waste a day or two without ever leaving the bedroom. Instead, he went for a walk.\n\nHe was a few blocks down the street when he realized he'd not been this alone, this far away from his girls, in a long time. Even when he used to visit the library he'd always had the sense that Ellie might be watching, but now, Ellie didn't want to protect the world from him anymore. Being more than an arm's reach from some tits and ass was almost disorienting.\n\nRyan let his thoughts settle. He became sure he was completely unsupervised. He could do whatever he wanted. The heady sense of freedom was like a brick in his stomach, but the feeling passed. He'd known for a while now that Ellie had given up the fight, that he was in charge. He could do whatever he wanted, but would that really change anything? He sat down on a park bench and lost himself in his thoughts.\n\nAll he'd ever wanted was just a little slice of peace and happiness. Now, with these powers, could he still settle for a quiet life or would circumstance force him into becoming more ambitious?\n\n\"Trouble in paradise?\" a familiar voice said.\n\nA shot of adrenaline rushed up Ryan's spine. He looked up at Candice Emerson, the beautiful police officer who had some kind of a personal agenda against him. He said nothing.\n\n\"Where's your goon? She's here somewhere, right? She's scary good at hiding when she wants to. Sometimes I feel like I only see her when she wants me to know she's there,\" Candice said.\n\nRyan dropped his gaze back to the ground.\n\n\"You know, for someone who isn't doing anything untoward, you sure need an awfully competent bodyguard,\" Candice continued.\n\nShe's not for my protection, she's for yours, Ryan thought. He realized how easy it would be for him to just touch her beautiful, dark skin, right now. It almost felt like Candice was taunting him on purpose, daring him to submit her. Hells. Even if Ellie was here, she'd be rooting for me to do it.\n\n\"I'm sure harassment is some kind of a crime,\" Ryan said.\n\n\"So is whatever you're up to,\" Candice said. \"I'm sure the jury will see it my way.\"\n\nRyan got up. He lifted his arm but Candice took a step back. Thank the heavens for that, Ryan thought.\n\nHe turned around, walked away, and didn't look back.\n\nRyan considered going somewhere but all the options were bad. He'd lost touch with all his old friends. Then there was Claudia, Hannah, and even Andy. Ryan could have used someone to talk to right about then but he and Andy had never really been friends.\n\nAfter some hours of pointless wandering, Ryan understood there was only one place for him anymore. It wasn't the only place he could go, but it was the only place he wanted to go. He headed back home, back to his girls.\n\nRyan spent the next twenty hours in bed. His cock never went soft so the girls didn't even notice his thoughts were elsewhere. It was already dark outside when Ryan found himself alone again. He took a deep breath and decided to take a shower.\n\nHe was halfway across the bedroom when the witch appeared in the doorway. She was still wearing that flimsy harem costume. Her eyes were burning with a mix of emotions. The intensity looked good on her. Ryan took a moment to re-appreciate her tiny, slim body. The way she moved told Ryan this witch was not a book nerd. Wherever she came from, they had taught her to fight, too. Ryan remembered the force the small woman had used when she had first tackled him into Lizzy's fruit stand.\n\nThe witch took a few steps into the bedroom and someone closed the door behind her. They stood in silence for a moment.\n\n\"I guess it's about time, isn't it?\" Ryan said. \"I have to be honest. I still have mixed feelings about what you did to me.\"\n\nThe witch answered something in that strange language of hers.\n\nRyan extended his hand toward her but the girl did not respond to his gesture. He took a step but she backed away. Ryan took two more steps and she slipped away again.\n\n\"What's this?\" Ryan said, but the witch just stared at him with those eyes of hers. Fucking magical weirdos, Ryan thought.\n\nRyan lunged at her, and eventually managed to corner her. He grabbed her wrists and she fought him off. She didn't try to run away anymore but she blocked his hands with practiced movements. There was no fear or anger in her eyes.\n\nRyan grabbed one of her pert, round tits. Size-wise, the firm breast was flirting with being even big, for her body. The dark witch was definitely bustier than Erica. With his other hand, Ryan engulfed the entirety of a juicy, firm little buttock.\n\nThe witch turned her head away from a kiss so Ryan just licked her neck and cheek. She tried to push him off but it didn't feel like a full force effort. Ryan lifted her off her feet and slammed her down on the bed. He looked her in the eye and bared her, her flimsy garments offering even less token resistance than she did.\n\nShe said something again but he shut her up by kissing her. He kissed her lips and her face and then her neck. He kissed her lovely, dark skin and then her lovely, dark breasts and nipples. As luck would have it, the only fat on her beautiful body was in her ass and her boobs.\n\nRyan let the energy flow and rubbed his thumb on her clit. The girl's eyes bulged and she started to moan. She became wet in an instant. She said something again when Ryan started to push into her, but he had no idea what she wanted. Ryan pushed deeper and the girl started to gasp and shudder.\n\nThe witch still squirmed under him, and made a move as if she wanted to escape every now and then, but Ryan could see the lust in her eyes. She was panting and rolling her head back. Ryan had kept the energy low, to not knock the new girl out, but now, he started slowly bringing the heat up.\n\nShe was clearly tighter than any of the other girls. Ryan worked his way in slowly. He could swear her pussy was tighter than some assholes he had fucked. This tight hole, though, was of course self lubricating. He worked up his speed. Soon, he felt that familiar sense of satisfaction he always got from making a completely new girl climax around his cock for the first time.\n\nHe fucked her faster and the witch started to black out from the onrush of the magical energy. Something made Ryan hold back, though, and he didn't quite slam full force into her tiny snatch.\n\nTurning a woman into a shivering mess of constant orgasms didn't get old. Or hadn't, so far. Ryan still marveled at the effect he had on his unfortunate victims. This one, though, can pretty much blame herself for causing all of this.\n\nRyan wasn't even all that angry at the witch anymore, but he didn't feel guilty either. As a political move, submitting her was a wonderful coup. There was no doubt she could do all kinds of wonderful magic things to further his agenda, whatever his agenda might turn out to be. Ryan had to admit a witch could be quite useful when they inevitably ran into some kind of trouble again.\n\nWhen he pulled out, Ryan finally realized the girl had probably been a virgin, but it was way too late to worry about that now. At least with the energy, he had been able to circumvent most of the awkward pitfalls that usually surrounded a woman's first time.\n\nRyan wasn't done yet so he pushed back in. He kept his pace sweet and gentle, however. He could see the witch was still struggling with his size so he decided to let her down easy. He came a lot sooner than he normally would, letting his newest slave have her first load of submission.\n\nRyan pushed as deep as he could go, maybe even a bit deeper. The cum gushed inside the hot little witch's hot little pussy, brimming out of her once she was completely filled. It occurred to Ryan that such a deep deposit would have left the poor girl completely pregnant if the former curse, now commonly seen as more of a blessing, did not protect Ryan from such unintended side effects. Maybe one day, he thought.\n\nThe witch would not be Ryan's first choice for a baby mama but a few of the other girls would be good at it, if it ever came to that. Melinda, for sure, had a proven track record as a great mom.\n\nRyan took his shower. The witch was still out when he got back. Or, at least she was pretending. Ryan headed for the living room. He glared at Ellie, standing at her spot. The other girls kept their distance out of deference but Ryan saw in their eyes they all wanted to hug him and congratulate him on his newest conquest.\n\n\"You didn't think to mention she was a virgin?\" Ryan said, to Erica.\n\n\"Why? I mean, given her background, it's kind of obvious,\" she said.\n\n\"Cute. But since I don't know anything about this background of hers, telling me about it would still have helped.\"\n\n\"It's not a big deal, is it?\" Erica said.\n\n\"A woman's first time is a big deal in our culture, isn't it? And it's a good thing it is. Women should be in charge of their own sexuality, so it shouldn't count for nothing,\" Ryan said.\n\nErica was nonplussed.\n\n\"What?\" Ryan said.\n\n\"She's going to be yours forever. Who the heck else would have taken cherry? I mean, you're going to keep her, right?\" Erica said.\n\nRyan looked around the room. His girls all stared at him with a complete lack of judgment. It was as if they were talking about rescuing a stray kitten. There was a lot of love and sympathy, but the perspective was all warped.\n\nSimple Fun\n\nA hard electronic beat was pounding, way too loud for Ryan's taste. Stacy, Remy's ever positive friend, was not even the new girl in the harem anymore. Even so, she looked amazing in one of her skimpy party dresses. Even with all the sex Ryan was having with all of his slaves, moments like these still turned him on. The way Stacy moved on the dance floor was captivating. Even when locked to the driving beat, the way her body flowed was limber and sensual.\n\nEleftheria was keeping her distance, observing them from the sidelines once again. In a club, and also wearing one of Stacy's dresses, she had a hard time staying anonymous, though. She fended off her many suitors with just a glare but whenever she looked at Ryan he could see a slight melancholy tinge in her cool eyes.\n\nRyan motioned for Stacy to head somewhere more private and quieter with him. Ryan himself had hit the dance floor too, and had even done more than just stand around, so he considered his obligations as a boyfriend fulfilled for the night. Stacy took his hand. Ellie followed them.\n\nStacy eyed Ellie as they sat down at a table. \"Not that she isn't hot, but do we really need a babysitter?\" Stacy said.\n\n\"You, of all people, should know,\" Ryan said.\n\n\"Are you still mad at Remy? Because I know you're not mad at me,\" Stacy said. Her smile was completely disarming.\n\n\"Yes. Definitely...\" Ryan said. He moved next to her and allowed her to slip under his arm. Ryan had a bunch of blondes now but Stacy was still different. She had that beach vibe with her tan and all.\n\n\"... but you're right. I'm still happy you're with us now. Tell me something about yourself,\" he said.\n\n\"I'm from the west coast. I came here to study.\"\n\nRyan was surprised.\n\n\"What?\" Stacy said. \"Too blond for higher education?\"\n\n\"No. Of course not. Well, yes. Sorry,\" Ryan said. \"So. Super hot, always positive, and smart now, too? You must have some good genes, then.\"\n\n\"Thanks. My mom was a surfer. She was almost a full time pro at one point. There were lots hippies and beach bums around when I was young, so I guess I learned the value of a positive attitude.\"\n\n\"Learned?\" Ryan said.\n\n\"I strive to be positive, but it's not always easy.\"\n\n\"You're really good at it,\" Ryan said.\n\nStacy smiled.\n\n\"So? All the hippies the reason you don't mind blindly jumping into any random, free-love messes you happen to run by?\" Ryan said.\n\n\"Maybe. I've only ever been hurt by jealousy. It's never done any good for me, or anyone I know. Again, not always easy, but I do my best,\" Stacy said.\n\n\"You really believe in free love, even beyond our situation?\" Ryan said.\n\n\"I believe it's a good idea, but I'm not sure if I've ever met anyone who could really pull it off before. I do my best to be open, but I don't do it blindly.\"\n\nRyan kissed her. \"I'm not so sure about that. I still think you took an unnecessary risk with me, even if it's turned out okay, so far,\" he said.\n\nStacy kissed him back. \"You're not a bad choice. I don't mind if it takes a while to change your mind about that. Patience is also one of my many virtues. How about you? Are you into free love?\" she said.\n\n\"No,\" Ryan said, a bit too fast. \"I mean, because of my thing, and everything. I need to be careful.\"\n\nA beautiful man had approached them but Ellie stepped into his path. The man got startled. He smiled at Stacy.\n\n\"Hi, Damon!\" Stacy shouted at him. Her smile was as radiant as ever.\n\nEllie looked at Ryan and he waved at her to let the man through. Ryan was somewhat confident he'd already met the guy somewhere, one of the few times he'd been out with Remy, so he didn't bother introducing himself.\n\nStacy and the friend had a quick hug and then caught up. When he asked her to dance, Stacy looked at Ryan. Ryan only then realized he probably came off as a huge douche. He'd never even considered one day becoming the kind of man who had the power to grant or deny permission for a cadre of beautiful women to just do normal stuff, and live their normal lives.\n\nHe remembered a few times, back when he was younger, when he'd seen some of his female friends get a bit too smitten with some guy who was an obvious jerk. This Damon guy was right to appear concerned about the ease with which Stacy deferred to Ryan.\n\nRyan leaned in to whisper to Stacy privately. \"I was only talking about me. You are free to do whatever you want. I don't want you to ever feel like I'm holding you back or bossing you around. Please, have fun. I'd love nothing more than to see you hold on to your old life, despite all of this,\" he said.\n\nRyan leaned back and smiled. \"Go ahead and dance, babe,\" he said.\n\nDamon was still nervous, stealing glances at Ellie, Stacy, and Ryan.\n\nStacy smiled and gave Ryan a kiss, and then skipped off with Damon. Ryan was mesmerized by her ass but Damon didn't stare. Ryan wasn't sure if he was gay, or straight, or bi, and he didn't care. His confidence in himself had become absolute. The curse made jealousy a moot point.\n\nOnce Stacy was off, Eleftheria sat down on the corner of the table. She looked at Ryan but he ignored her.\n\n\"She wants to move in,\" Ellie said. \"I'm sure. You'll need more space soon. Do you want me to look into that for you?\"\n\n\"As an apology? You want to bribe me with a house, to take you back?\" Ryan said.\n\n\"I'm yours, whether you want me or not. You know that. And I need you. But I can still hold. The apartment across the hall might be opening up soon, regardless.\"\n\nRyan had every right to be angry. He had every right not to trust his angel. By human standards, she was still a flamboyant, self-confessed sociopath.\n\n\"Me and the girls can talk about that together, as a group. I will never treat them as anything less than equals,\" Ryan said.\n\nEllie smiled. \"They don't mind,\" she said.\n\n\"Mind what?\"\n\n\"Your girls, they don't mind sharing a bed. The way they pile up on you, they do the same even when you're not there.\"\n\nThe smile on Ellie's face made Ryan consider softening his stance on her, but then he remembered how good she was at acting. The only thing Ryan was almost sure about was that the angel would need his cum, sooner or later.\n\nStacy came back. She hugged Ryan like she hadn't seen him in a month.\n\n\"You didn't want to spend more time with your friends?\" Ryan said.\n\n\"You told me to do what I want, so, here I am. And shame on you, by the way, for thinking I needed your permission,\" Stacy said.\n\nRyan considered a reply, but let it go. He was almost ready to stop arguing with the girls, just in general.\n\nThey locked eyes and there was a moment. Stacy shot to his lap and kissed him, hard. Ryan let the power flow. Stacy's hands roamed his body, and then his crotch, and soon the tip of his cock was teasing her pussy lips. Ryan was sure Stacy didn't care about doing it in public and he realized he didn't, either. She was his and he was allowed to fuck her wherever he wanted. It was a cosmic law of some kind, he was sure.\n\nRyan let his willing slave sit down on his big cock and take it all the way in. He found her breasts and sucked one of the big, firm pillows into his mouth. Stacy was about to go crazy but Ryan held her until she calmed down. A proper, healing Stacy-fuck was what he needed now. She got the message and kept her pace gentler.\n\nTheir deep, grinding penetration felt impossibly intimate, and they shared a beautiful moment at the back of that random nightclub.\n\nRyan caught Ellie staring. Stacy was about the same general size as Ellie and Annie. It would be easy for Eleftheria to see herself in Stacy's place, if her mind even worked like a human's would. It looked to Ryan as if it did. He could see the lust in Ellie's eyes, and maybe even a bit of desperation.\n\nThe miracle that was Stacy, and her soft touch, washed away all of Ryan's worries once again. He let go of Ellie, Claudia, and all his other worries. It was all right. It was alright for him not to solve every problem in the world, or even in his own life, right now.\n\nStacy held on to Ryan's head as he sucked on her tit. She rode herself to a series of slow, deep orgasms. Once the magic energy, and the constant cumming, had almost driven her into delirium, she felt a big load fill her. She was so happy she could cry. That was the way she liked it, right on the limit, when it was almost too much.\n\n\"I love you. I really really do,\" she said, and felt absolutely no shame about it.\n\nRyan did not let a simple confession like that faze him anymore. He knew how the girls felt. He felt some of it, too. With the aid of this blessing they shared, the sex alone was more than enough to form bonds much deeper and more meaningful than most forms of normal human interaction. When the sex was this good, it was more than love. It was an extreme experience and it bound Ryan to his girls. It made them comrades, like winning the championship or going to war.",
        "It made perfect sense, in this moment, for Stacy to honestly love him, even though they were still getting to know each other. Ryan wondered how much he would love the girls, too, in time. Annie would probably be the first. His first true love.\n\n\"How about the other girls?\" Ryan said.\n\nStacy blushed and Ryan could feel her pussy twitch around his softening dick. She smiled.\n\n\"You're a real bisexual? Even without the... my influence?\"\n\n\"Flaming,\" Stacy said.\n\n\"So, what? You're just using me to get to Remy? I thought you two would have hooked up ages ago, on your own, if that's what you both wanted,\" Ryan said.\n\n\"Trust me, I wanted to, but no. She's scary. I didn't know how to approach her. Even I have my limits. Remy is my white whale,\" Stacy said.\n\nRyan didn't say anything.\n\n\"What? You think, just because we're both hot, we bang all the time?\" Stacy said.\n\n\"Why not?\" Ryan said.\n\n\"I'm not... I love sex, but I'm not good at chasing. As old-fashioned as it may sound, I prefer to wait and hope,\" Stacy said.\n\n\"Except with me,\" Ryan said.\n\nStacy laughed. \"Except with you. You were way too good to pass up. I had to take action, no matter what.\"\n\n\"Would you have hooked up with Remy, eventually?\"\n\n\"I hope so. But now that I've seen her with you, I'm not sure if I'd been able to handle her. She really is as wild as she seems. For some people it's just an act, but not for her.\"\n\n\"Just tell me when you want her and I'll be there to keep her in line for you,\" Ryan said.\n\nStacy's eyes popped. \"Really? Thank you. You are so good to me,\" she said, way too seriously for the lighthearted banter.\n\nRyan let it be what it was. \"How about the other girls?\" he said, instead.\n\n\"You are ridiculously lucky.\"\n\n\"But I asked about your opinion,\" Ryan said.\n\n\"I think I have a lifetime supply there. I'm in no hurry. I'll take it slow and make it last. Don't worry, I want you to mix and match to your heart's content when I'm with you. But for me, personally? I want to fall in love with each of them, for real, over time, one after the other.\"\n\n\"With you, I don't mind sharing,\" Ryan said.\n\n\"How about Hannah?\" Stacy said.\n\n\"What about her?\"\n\n\"You know we don't mind, right? It's all up to you. It's not my place to say so, but even Melinda would want you to make the choice,\" Stacy said.\n\n\"Is that your hippie free love estimation?\"\n\n\"No. It's the honest, inescapable fact of You. You know it, in your heart. You are the best thing that can happen to a woman, any woman. You have to make the choice: for Hannah, for Melinda, for all of us. There is no choice in it for us. Any sane woman would always choose you, no matter what,\" Stacy said.\n\nRyan glanced at Ellie. The angel was outrageously sincere in how much she agreed what she had overheard. Her facade was cracking more than ever, whether it was real or just an act. The sheer force of Stacy's absolute stance also returned someone else to Ryan's mind. If Stacy was right about Hannah, then what about Claudia?\n\nRyan didn't fault Stacy for breaking the serenity she had given him, but he decided he wanted more of her brand of distraction. \"Let's go home and fuck more, unless you want to go somewhere else?\" he said, his cock still quite hard inside her.\n\n\"No. Nowhere else,\" she said.\n\nYouthful Exuberance\n\nErica and Ellie had been teaching English to the witch. Someone had called her Jasmine because she really did look like a pocket-sized version of the storybook princess. The name had stuck.\n\nJasmine had been afraid of everyone at first, not the least Ellie. It took her a week or two to get comfortable.\n\nErica and Ellie recruited Jasmine into their research group but it did not help with their biggest problem: None of them actually wanted to break the curse, not even Jasmine. They acquired lots of knowledge and were nearing the cusp of some major revelations, but they chose to slow down, on purpose, and give themselves time to figure things out before stirring the pot unnecessarily.\n\nEleftheria also abandoned her statue routine. Ever since Jasmine had shown up, Ellie had taken to her role as a teacher. She spent time with Jasmine and Erica, and walked around like a normal person. She even started to lie down and pretend to sleep, like a human, but she did it on the couch. She wasn't ready to try her luck with sleeping in the girls' room.\n\nRyan was sure the show was all for him, and it was working. Ellie did seem more human now, more approachable and more relatable, and Ryan often stared at her angelic body as she moved around the apartment, and her radiant smile as she interacted with the others.\n\nJasmine had mellowed out, too, and Ryan was comfortable with having her around now. Not that he trusted her fully, either. But Jasmine had a youthful energy to her. She took well to being a student. Jasmine had to be somewhere close to Lizzy's age. Ryan preferred Jasmine's new happy look, but the intense one had been hot, too.\n\n\"You are master. I am slave,\" she said to him one day, in broken English.\n\nRyan laughed. Jasmine reminded him of Fukumi, Lizzy's one-time alter ego. Jasmine wasn't quite from a cyber-monastery but the reality was maybe not that far off. As Ryan had guessed, Jasmine's previous life experience was more like that of a ninja assassin than a normal person. Her witch clan was like a cult, and Ryan would have to deal with them, eventually.\n\nErica had assured him the clan would allow Jasmine to stay, though, because in their world view, fate had given Jasmine to him.\n\nJasmine was a bad-ass sorceress, too, and not just a ninja cultist. Sometimes, when talking to Ellie, Jasmine would pull some kind of glowing orbs of energy out of nowhere, or draw glowing, arcane runes into thin air.\n\nIt told a lot about how strange Ryan's life had gotten that he wasn't even that shocked. Impressed, definitely, but not surprised.\n\nEllie had revealed the purpose of Ryan's second spell to Erica. The second spell was the one on Ryan's scalp, the one most of the girls had not even known about. It was a spell that could temporarily kill any other magic around it. Jasmine knew how to trigger it and Eleftheria was teaching Erica to do it, too.\n\nAs luck would have it, the anti-magic did little or nothing against the curse itself. Technically, the other spell did turn off the curse but it would take a long time for the girls to come down from their highs, way too long. The psychological and physiological effects carried on even when the original power source cut out for a moment.\n\n\"Okay, that's enough. You can go now,\" Ellie said to Jasmine, to end their lesson.\n\nJasmine smiled and ran to Ryan. She jumped into his arms and gave him a deep kiss, causing him to grunt from the impact. She was downright athletic in her enthusiasm.\n\nJasmine's first time had been unusually amazing, thanks to the curse, so it was no wonder the young lady had developed a more than healthy appetite for sex. And since she was new, the other girls gave her a tacit permission to cut in line.\n\nShe was bubbly and bouncy, and acted like a teenager in love, a far cry from the almost animalistic way she had tested Ryan that first time. He was not about to tell her to slow down. One day he might, but not any time soon. If everything went well, their honeymoon was just starting. Ryan really hoped the cute little weirdo would not end up trying to kill him, or anything.\n\nBecause Jasmine was still new, Ryan carried her into the bedroom for some privacy, before he tore her clothes off. He wasn't sure if Jasmine cared, but he didn't mind. It wasn't just about privacy, it was also about paying attention to her as an individual. It was a titillating change of pace for Ryan, too, to be with someone so strange and exotic.\n\nJasmine moaned lewdly as she licked his balls and then all the way up his cock. Ryan wondered if someone had shown her porn but then he realized she had probably just seen him do all kinds of things with his other slaves.\n\n---\n\nThe bell rang and an instant cacophony filled the lecture room.\n\n\"Don't forget to read the next chapter before next week's lesson,\" the professor shouted, over the noise.\n\nHannah swept her stuff into her backpack and headed out.\n\nShe'd been able to keep up with her studies, just about, even with all the bullshit going on with her mom's stupid magic sex harem thing.\n\nIt was a little bit strange how easy it had been for Hannah to accept everything that was going on, including the magical aspects of it, but it somehow just made sense. Ryan had a curse and mom was addicted to him now.\n\nRyan wasn't even a jerk. He was awkward, and kind of bland, but maybe not that bad for mom. For Hannah herself, though, he was scary. Not him, but the curse, and what it meant that mom was so casual about it. Hannah was scared of how little her mother feared letting Hannah be near Ryan.\n\nAcross the park-like courtyard, she saw Ellie leaning on a tree. She was wearing sunglasses and looked so fucking cool and bad-ass. Being seen meant Ellie wanted to talk. Hannah considered it, sighed, and headed over.\n\n\"How come campus security doesn't throw you out? It's because you're a woman, right?\" Hannah said.\n\nEllie just smiled.\n\n\"Or are you? You're not really a normal person, are you? Something is up with you. Where are you from?\" Hannah said.\n\n\"Walk with me,\" Ellie said, and extended her hand. Hannah took it, as if Ellie was a friend, or an auntie, or something.\n\n\"You're right. I'm very well equipped to protect Ryan, and the girls, all of us,\" Ellie said.\n\n\"Us?\" Hannah said.\n\n\"You're literally family. Your mother is one of us so I will protect you with my life, too,\" Ellie said.\n\nHannah's stomach turned. There was an honesty to the casual way Ellie had brought up the topic of potentially mortal danger. \"Protect me from what, exactly?\" Hannah said.\n\n\"Anything and everything: Creepy boys who can't take no for an answer, or, something worse. I promise you everything is fine, for now, but I can't guarantee that forever. I'm afraid, at some point, people will come after Ryan, and all of us. Including you,\" Ellie said.\n\n\"So, what? You're here to ask me to join the fold?\" Hannah said.\n\n\"No. Yes, but no. You don't need to join us, not in the same way your mother has. I would never ask you for that. I hope you believe me when I say no one has the right to force you into it. But you should still consider keeping close. I know you're friends with the girls and I know you love your mother, and that's good. You don't need to hide that,\" Ellie said.\n\n\"I... What if there's an accident? What if he just touches me, without even meaning it?\"\n\n\"Wear long sleeves and keep your distance. Just hang back. It's a big enough apartment. I'm very observant and strong, and I'll have your back if you want me to,\" Ellie said.\n\nHannah looked at the magnificent, strong blonde. She wanted to believe her. \"I don't know,\" Hannah said. \"I think I'm safer like this, for now.\"\n\n\"That's good. Like I said, there's no trouble right now, as far as I can tell. Has Andy or that police officer harassed you again?\"\n\n\"No. I saw the cop one day but she didn't speak to me. Haven't heard anything from Andy.\"\n\n\"Good. But like I said, I want you to know it's completely up to you if you want to come over some time. You shouldn't be afraid.\"\n\nThe two hot blondes walked in the sunshine, still hand in hand.\n\n\"Are you afraid of the sex?\" Ellie said.\n\nHannah blushed.\n\n\"If you were to visit, are you afraid you might see something you don't want to see?\"\n\n\"I don't know. I don't care that much, I don't want to be a prude. But I definitely would not want to see my mom like that. But other than that, I'm not sure. Remy likes to tease me about it, though. I think she likes to tease everybody,\" Hannah said.\n\n\"Maybe she's just trying to be inclusive. Maybe she's trying to make it less scary for you by joking about it,\" Eleftheria said.\n\n\"Yeah, you're probably right. I think she's gotten to me. I do sometimes think about what it would be like to have sex like that. You know, magical. How could I not? But you know that for yourself, right? That's why you're with him, even though you're really a superhero or something.\"\n\nBefore she could even consider it, \"yes,\" Ellie's mouth said. A shiver of shame and arousal ran up her spine. \"I'm his. Forever. And being with him is... everything. I'm sorry. I don't mean to scare you. It's a very hard commitment to walk away from, that's why it's a curse. So, it's smart of you to be mindful of that. But the rest of us -- your friends -- you shouldn't be afraid of us.\"\n\n\"What if I did want it? I mean, not now, but let's just say that if one day I would want to know how it feels. Could I join you, for real?\" Hannah said, wincing in embarrassment.\n\n\"It's a big choice but I would let you make it. I would help you talk to Ryan about it. He really is a good person, deep down, and he wouldn't do it if he wasn't sure you and your mom were really okay with it,\" Ellie said.\n\n\"I don't think I can. It's too weird. I just can't. I'm trying to deal with all the crazy magic shit, but beyond that, I don't want to see him as anything more than just my mom's boyfriend, and that doesn't involve, you know...\" Hannah said.\n\n\"That's good. You know where you stand,\" Ellie said.\n\n\"This would all be so much easier if you weren't all so nice to me. Are you sure you're not here just to manipulate me into falling deeper into your web of intrigue?\" Hannah said.\n\n\"I promise you, if I was manipulating you, you would not know it. I sincerely hope you will make up your own mind. Just, if you ever need a friend, don't let the fear of seeing something scare you off from coming over.\"\n\nAs it just so happened, Ellie wasn't even lying all that much. She happened to know there was already some natural turmoil boiling up in Hannah's circle of friends, so Ellie wouldn't have to even manufacture any drama to generate some distance between Hannah and them. Eleftheria was confident Hannah would have a need to turn to Remy and Lizzy, soon enough.\n\nAll in all, things were headed in the right direction, on many fronts. As soon as Ryan would choose to take action, girls new and old would be there, just waiting for him to pluck them.\n\n---\n\nRyan jack-hammered into Jasmine from below, lifting her completely off the bed with every thrust. There was a raw, animal power to the petite witch's howls and groans, and Ryan was sure she wasn't affecting any of it. Her firm tits bounced in hard, snappy motions as he slammed into her.\n\nIt was amazing how far she'd come, from virgin -- Ryan's first virgin -- in such a short time. She was still tight as all hell but she was completely into all of it now. Some of her enthusiasm must have still been from relief, too, now that she knew her accursed enslavement was to be a pleasurable one.\n\nNew was still new, though, and Ryan's energy was more potent than ever, so it was still easy for him to knock her out, even by accident. Her body would keep responding to him so Ryan couldn't always even tell if there was anyone home anymore.\n\nHe flipped Jasmine face down on the bed and pushed his thumb in her ass. The tightness was not that far off from her pussy. It was better than Ryan had feared. If the tightness of her ass had matched her pussy in proportion, it could have been unfuckable, but now, Ryan had hope. One day soon, he might get that delicious little rosebud to open up wide for him.\n\nThat day was not today, though. Ryan worked her asshole anyway, and eventually squeezed the tip of his cock part way through her sphincter, just to lay his seed into yet another new hole. The curse was magical so it didn't really matter how deep he put his cum inside his slaves, as long as it was in. Even skin pores probably counted.\n\nRyan headed for the shower, happier than ever to have the little Oriental enchantress in his harem.\n\n---\n\nWhen Eleftheria got back to the apartment, Ryan was already on the sofa, chilling, his usual assortment of cum-addicted sex slaves all over him. Or under his feet, as was the case for Erica. Whenever she got tired of being a footstool, she would just flip over and become more of a doormat.\n\nLizzy wasn't playing on the waste-of-time machine with Ryan, though. This time it was Stacy. Most of the girls sometimes took part in the activity, but not too often. Stacy was still new so she was still showing extra interest in Ryan's hobbies.\n\nEveryone was having fun, uniting in marveling at how bad Stacy was at the strange, electronic games. It hit Ellie in a particular way, seeing everyone so happy about someone's weakness and incompetency. There was a great joy, for humans, in baring their weakness to people they trusted.\n\nLizzy was distracted. She forgot herself, staring into the distance, and then smiled again when someone caught her. She saw Ellie from the corner of her eye. No one else had paid much attention to her arrival. Ellie could hear Lizzy's pulse rise and she could see anxiety cast a faint hue on her cheeks. Her pupils flexed, just a tiny bit. It was all involuntary.\n\nEllie turned away. It took a moment, but she could hear Lizzy get up and approach her, as she had known she would. The thing was, though: Ellie had no idea what Lizzy was going to say.\n\nShe said nothing, to begin with. Lizzy just put her hand on Ellie's shoulder. It was a gentle gesture and it affected her, but more than that, she felt a rush of excitement. There was a possibility someone else might notice the gesture and start drawing conclusions. Erica was the obvious candidate for noticing too much, but Ellie would not put it past Remy, either.\n\nEllie and Lizzy leaned on the kitchen counter, side by side, and watched the other women fawn over their Master.\n\n\"I agree,\" Lizzy finally said.\n\n\"With what?\" Ellie said.\n\n\"With you,\" Lizzy said.\n\nIt was the kind of human nonsense Ellie used to hate, but now that she had some genuine affection for some of the human women, she was not so insensitive to levity anymore. She knew Lizzy did it on purpose. Ellie decided not to answer, and she let the other woman continue in her own time.\n\n\"I agree he should be great. But I don't want him to be a god of war, I want him to be a god of love, as much as possible. What can I do to help?\" Lizzy said.\n\nEllie wanted to hug the other woman. Some of this emotionality was because Ryan was holding out on her but some of it was because of a genuine change happening deep in her soul, too.\n\n\"I agree. We will take it slow. We might even have a few years before we need to take any real action,\" Ellie said.\n\nLizzy had no scruples about hugging her. She gave Ellie a hard, two-handed squeeze and Ellie responded with a pat on Lizzy's shoulder. Ellie saw Remy notice and she made sure she knew she'd noticed her noticing, too.\n\nA few days later, Hannah showed up. Everyone got over their surprise fast and proceeded to pretend they were more casual about it than they really were. Everyone had reasons for wanting Hannah there, except for Ryan. He was the only one who was honestly worried, deep down.\n\nHannah was horrified to meet Jasmine, yet another new girl, but she couldn't back down now. She got over it, and for some reason, it helped her when she learned Jasmine was not just a random normal person off the street, but some weird witch girl who had already been involved in this crazy nonsense to begin with.\n\nPool Party\n\nIt was someone's birthday again, or something, so the girls rented a house with a pool for the evening. There was some catering included in the price, too, but the pool was the main thing, and it was all theirs, all the way until the next morning.\n\nEveryone was there, even Jasmine. In a more crowded setting Ryan would have been worried about her stabbing someone, or doing something equally inappropriate for modern sensibilities, but here, with just them, he wasn't worried.",
        "The sun was shining and the girls were all in their bikinis. Even Jasmine wore one, and there was a certain cheekiness to the way she carried herself in it. After all, she was used to wearing skimpy outfits. The music was some new electronic dance pop, but Ryan didn't mind. It fit the sunny mood. There was champagne and laughter.\n\nWhile the sun was still up, the girls limited themselves to hugs and kisses, which was nice. It made Ryan feel more normal.\n\nHannah was there, too. Her bikini was way too sexy. She had a translucent little wrap around her hips but that did not help, it just made her look even more feminine and ripe for the plucking.\n\n\"Do you like it? I helped her pick it,\" Remy said, to Ryan. He felt a little surge of adrenaline but he knew Remy was teasing him on purpose. Luckily there was much to look at so Ryan didn't have to just stare at Hannah, his girlfriend's daughter, the whole afternoon.\n\nRemy herself was, of course, in quite a tiny bikini, too. The shape and cut was meticulous, and seemed tailor-made for her uncanny, tall and thin body shape. All the girls looked good.\n\nEllie was there, too. She looked as unearthly as ever, bikini or not, but Ryan still didn't know what to do with her. She was acting almost human now, smiling and interacting with everyone in her new, unassuming manner.\n\nThe girls got tipsy and soon after sunset it was easy for Remy to coax them all to go topless. Hannah and Ellie were the only holdouts. Ryan was happy for both of them. Tits out, and under the seeming cover of darkness, the other girls got friskier.\n\nThe cursed energy was anathema to any alcohol in Ryan's body but he was feeling happy so he caved once the girls started to seduce him. Ryan had his fingers in a few pussies and there was a sly mouth around his cock before what little drunken buzz he'd had had burned off. By then, he was too horny to care about any bystanders. These were his girls and this was his party, even though it wasn't his birthday.\n\nIt turned into one of those nights where the girls just treated Ryan like a buffet table. Ryan had his cock, his hands, and his mouth, and all of him got constant use. His balls and his feet got lots of love, too, but he was not much of an active participant in that.\n\nAll of his beautiful slaves took turns riding him, caressing him, and kissing him, while kissing and caressing each other, too. Some of them still did it partly just for his viewing pleasure, but most of them just liked it. A strong bond made them close, and that closeness lent itself to intimacy.\n\nHannah had been stealing peeks the whole night. She was wet and couldn't help touching herself a little. The whole thing had started out cute, with all the women pampering Ryan, but the sex soon got quite vigorous. Hannah slipped into the house, hid, and spied some more. There was something overwhelming about how Ryan could just keep going and going.\n\nShe could not help but to imagine what it would feel like to come like them. She had been watching more porn recently, the kind aimed at men. She'd not seen the point of that stuff before, but now, watching Ryan, those ridiculous power dynamics were starting to make a scary kind of sense.\n\nWhen it came to her mother, Hannah had to look away. They talked about sex openly, but seeing what a slut her mother was, for real, still chafed something deep inside Hannah. Both of them had a healthy appetite and appreciation for sex but Hannah had been in no hurry with the few boyfriends she'd had. But she could feel those genes inside her now. She could feel how she could one day become a freaky perv, like her mother. Somewhere deep down, she shared her appetites.\n\nRemy and Lizzy were Hannah's best friends there. I wonder why they just happen to also be the two dirtiest freaks here, along with... Hannah thought. Eventually, she had to leave, she had to escape the tension.\n\nSomehow, as if by magic, her mother caught up to her before she could slip away. Melinda had her bottoms back on but she was holding someone else's bikini top against her chest with one arm, as she apologized for things being so weird for the millionth time. Hannah told her it was okay and they hugged. Melinda let go of the top she'd been holding.\n\nRyan saw them through a glass door. The sight was truly beautiful -- a genuine moment between mother and daughter -- but he could not help feel like Melinda's arms were an extension of him now, and he wondered what it would feel like if he was the one holding Hannah's young, bikini-clad body.\n\nHis attention soon returned to the orgy he was starring in, and Hannah was off.\n\nThe more dirty-minded girls knew to let everyone else have their fun first, well into the night. Then, when everyone else was all fat and happy, they would indulge in the butt stuff. Remy was the leader. She still wore her custom buttplug and her leather collar every day. Lizzy was her natural number two. She had started out just curious, but was completely into it now. Melinda was just as bad, but pretended to be more coy. She would inevitably join them.\n\nEvery girl was more than willing to accommodate him anally if Ryan was the one to initiate but those three were the ones who openly craved for it.\n\nLate in the night, Remy finally let Ryan's huge cock sink into her ass. She moved like a dancer and took the big, solid dick all the way inside her lean body. The girls took turns and even the ones not interested in participating right then never strayed that far.\n\nFor a moment, Ryan let his desires run uninhibited. He went freely from girl to girl and from any hole to any hole. Then, he focused on their asses again, keeping the other two primed and ready with his fingers while he fucked one.\n\nLuckily, Ryan had the presence of mind to appreciate the magical night to it's fullest extent. He would return to the memory later, too, but even when it was all happening, he often caught himself grinning at his own good luck. It truly was a gift and a blessing to live the life he had now.\n\nThe house itself was gorgeous, too, and Ryan felt surprisingly optimistic he could one day move into a house something like this, and live there together with all his girls.\n\nRyan came inside Lizzy's ass and then grabbed Remy and Melinda by their hair, guiding them into drinking it from there. Not that they weren't eager. It was more like he had to hold the back, rather than push them in. Lizzy was thrust into one more small orgasm when she felt the ferocity of her sister slaves' mouths and tongues on her ass and pussy. Then, she turned around and the girls shared their reward in a three way kiss.\n\nThere were showers by the poolside and eventually they turned on. The sex, however, continued, and the other girls joined back in.\n\nHannah was long gone but Ellie was still there, still watching. She sensed the time for a resolution was near. The time was almost right, for Hannah. It might be almost right for a few others. More than anything, she hoped it would soon be right for her, too.\n\nHard Candy\n\nVery early in the morning, Ryan was completely refreshed, after a quick power-meditation. He was completely sober, too. He wanted to let the girls sleep so he sneaked away from the rented house.\n\nHe had his bike and he decided to take the scenic route home. He headed for the back roads. After about an hour of enjoying the crisp night air, he headed back to the city. He might have been speeding, though, he realized, when he saw the flashing of red and blue lights in his mirrors. He pulled his bike over and saw a familiar face.\n\n\"Hi, Candice. How come this feels like more than just a coincidence?\" Ryan said.\n\n\"Ryan Dobbs, you are under arrest. Please put your hands behind your head,\" Candice Emerson said.\n\n\"Arrested? For what?\" Ryan laughed.\n\nCandice put a hand on the handle of her holstered gun. Ryan put his hands on his head, slowly. \"For real. What are you arresting me for? Speeding?\" Ryan said.\n\n\"No. For human trafficking,\" Candice said, as she cuffed him.\n\n\"What? This has gone too far. You can't just come up with bullshit like that and expect to get away with it,\" Ryan said.\n\n\"You have the right to remain silent. Anything you say or do can be used against you in a court of law. You have the right to a lawyer. If you can't afford one, one will be assigned to you,\" Candice said.\n\n\"Absolute bullshit. How can you arrest me without any evidence?\" Ryan said.\n\n\"What makes you think there's no evidence?\" Candice said.\n\n\"Because there's no crime! I've never done anything wrong so therefore I know there can be no evidence of something that never happened,\" Ryan shouted, as Candice pushed him into the back of the police cruiser.\n\nCandice glanced at her partner but she didn't get the support she was looking for. Ryan was sure the other officer was not as confident in the case as she was.\n\nRyan found it slightly odd Candice was wearing rubber gloves, however, or did the police just always do that? Or could it be someone was actually helping Candice concoct some kind of a pantomime case against him? Could some as-of-yet-unseen enemy be backing her?\n\n\"Whatever. Let's just see what we get with the warrant,\" Candice said.\n\n\"What warrant?\" Ryan said.\n\n\"We have a warrant to search your home. I'll head there next, but I wanted to be the one to cuff you myself, first,\" Candice said.\n\n\"You're searching my home? On what grounds? What about my girls? If you do anything to them, I swear...\" Ryan said, but he was still calm enough to stop there. Only a small part of him feared there was actually some kind of a conspiracy going on here, for now.\n\n\"Your girls? Hopefully, you will never see them again,\" Candice said.\n\nThe ride was long and silent.\n\nCandice didn't quite get her wish. The girls were all at the station, waiting for them when they arrived. They were sitting on some benches lining a hallway as Candice walked the cuffed Ryan past them. The women still had their bikinis under their casual wear and their hairs were still damp.\n\nEllie had taken charge as soon as she had heard all the cop cars approaching the rented villa, which had been from quite far off. She had made sure all of Ryan's girls had kept calm, and had kept their mouths shut.\n\nThey all gave Candice a deathly glare and it shook her faith in her case. She could not understand how they could be so dead set against her helping them. She was sure that, with time, she could turn them against their captor.\n\nCandice dumped Ryan into an interrogation room and left him to stew. That did not do much to faze Ryan because he could pass an inordinate amount of time in meditation, communing with his blessing and it's energies. It was hypnotic, almost alluring. Sometimes it was tougher for Ryan to get back out than it was to fall in.\n\nWhere was Hannah? Whose idea had it been to rent a place so that they would be out of the apartment that night? Or could it have been Andy? Should I have done something about him sooner? Or maybe even Claudia? Was there anyone else who could have been guiding this? Ryan thought, as he fell deeper into his trance.\n\nHe cast his doubts to the side. If anyone was helping officer Emerson, it would come to light eventually.\n\nCandice headed for the apartment. Most of it had already been turned upside down by the time she got there. There was nothing there. It pained Candice to come up with absolutely nothing. She'd put her whole career on the line, pulling in huge favors to get such a dubious search warrant approved.\n\nThe guys were all laughing at the big chest of sex toys but Candice was having none of it. She saw the room where the girls slept. It was so small. Just about big enough to fit two double beds and an extra big wardrobe, full of clothes and shoes. Some of it was practical but most of it was just slutty. No one would choose to live like this.\n\nCandice was back at the station less than two hours later. The sun was already up. She tried to interview the women, one by one, but none of them said absolutely anything, not one, not even a hello. Ellie was the only one to slip. She gave in to her weakness and grinned at the police woman's frustration. She didn't actually say anything, though, it was just the condescending grin she couldn't hold down.\n\nCandice had hit zero with everything. She'd put it all on the line in the hopes of finding something with the search, or by talking to the girls. Nothing. The most she could get from any of this was Ryan speeding, and the amazon woman possibly driving without a license.\n\nMost of the women didn't have their IDs with them but they had a legal right to produce them later, so Candice had no grounds to suspect any of them of being illegal immigrants or missing persons, or anything like that, either, at least not yet. And she didn't even want any dirt on them, she just wanted to nail Ryan.\n\nHer only option was to go in and see if she could, by some miracle, crack the arrogant asshole. She projected confidence as she stormed into the interrogation room, and slammed a thick folder of papers on the table. Her facade almost cracked when she saw how serene Ryan looked as he opened his eyes. It was as if he'd been sleeping like a baby while she had been out, fumbling her case.\n\n\"You're going down. We found everything,\" Candice said.\n\nRyan seemed more confused than scared, but he didn't say anything. This was the moment of truth for him. If Candice had someone helping or manipulating her it would come to light, right now.\n\n\"The girls all talked. You might as well confess,\" Candice said.\n\nRyan smiled. \"Well, now I just know you're lying. You didn't find anything, did you? Like I said, that's because there was nothing to find.\"\n\n\"What the hell did you do to those women?\" Candice shouted.\n\n\"I don't think we need to justify our lifestyle. Not to you,\" Ryan said. He held his mouth shut from then on, tuning out the frenzied cop almost completely. He was certain she was just on a misguided personal vendetta now.\n\nCandice went on a tirade of accusations. She could see Ryan was nowhere near cracking. She was just venting now, purely for her own benefit. She went on for quite a while.\n\nOut in the hall, the girls had held up well. Now, though, their lack of sleep was starting to show. Ellie could smell everyone's blood sugar levels falling. She asked the officer at the desk if they could get some food or water but the man ignored her. Ellie wasn't even sure if they were still under arrest, or if they ever had been. It was possible they could just get up and leave.\n\nThere was zero chance of that ever happening, though. Knowing the kinds of dangers she would have to face one day with her Master, this kind of mortal nonsense made Eleftheria the Rogue laugh out loud. One desperate, jealous little cop was nothing to her. Ellie could hear Candice's ranting through the walls.\n\nEllie wanted to save her fellow ladies from the indignity of this situation, and, to be fair, she was getting a bit impatient, too. She started to hatch a little plot with their new sorceress. Jasmine and Eleftheria had the added benefit of sharing a language that no outsider could possibly understand.\n\n\"Fear not. We will solve this situation imminently. Then, we can all go eat and rest,\" Ellie said, to the others.\n\nInside the interrogation room, Ryan perked up. He could sense magic in the air. He tensed, but then he remembered Ellie and Jasmine were just outside.\n\nCandice started screaming. \"Oh shit, what the fuck? What's happening,\" she shouted, between her yelps.\n\nRyan opened his eyes and saw the officer floating in the air, upside down. She was struggling against some kind of an unseen force, just dangling her there by her ankles.\n\nEllie and Jasmine walked in, casually, as if they owned the place. Ryan was sure the door had been locked but the two women acted as if such things were of no consequence to the likes of them. Ryan could not help but to smile at Ellie, and he didn't even feel bad about it. This was definitely scoring Ellie some big points in her quest to win back his favor.\n\nIt took a moment but Candice calmed down, accepting her impossible situation. Ryan raised his eyebrow at Ellie and nodded toward the one way mirror.\n\n\"Everything is under control, Master. This room now is isolated inside a bubble of magic. We are completely hidden from the outside world.\"\n\n\"Good. You have done well,\" Ryan said, imitating Ellie's inflections. He was suddenly having fun, playing a fake evil mastermind. He realized his perspective had shifted. With creatures like Ellie and Jasmine, and even Claus, in the world, mortal laws were starting to seem more frivolous to him, too.\n\n\"With all due respect, I believe we've wasted enough time here. The girls deserve to go home now,\" Eleftheria said.\n\nRyan got up. Jasmine did a little gesture with her fingers and Ryan's cuffs fell off. Ryan rubbed his wrists and walked to Candice. He crouched down to meet her upside-down face. He could see the fear and confusion in her big, beautiful eyes.\n\n\"What should we do with this one?\" Ryan said.\n\n\"That is completely up to you, Master. You may take her if you wish, but one way or another, we should turn her into an ally,\" Ellie said.\n\n\"What?\" Candice said. \"The fuck it's up to him. I say let me go. What the fuck is going on here? Who the hell are you people? Don't you...\"\n\nCandice's eyes grew even larger when a tendril of invisible energy filled her mouth to the brim. It prevented her from talking. She moaned in protest, but soon gave up, realizing what she must look like with her tongue and lips working the shaft of the translucent invader.\n\nJasmine aimed her hands at Candice and slowly rotated her back upright just by wiggling her fingers at her. Jasmine also had a wide grin on her face. She was the only one who knew the shape and diameter of the magical tendril in Candice's mouth was a perfect match for Ryan's hard cock.\n\nRyan sighed. He caressed the cop's body. He ran his hands over her ass and her breasts, but only over her clothes. He felt her muscular, tantalizingly tight stomach. Her unusually narrow waist was one of her most distinguishing features. Candice wailed in protest and tried to fight the magic that held her. She remained completely immobilized.\n\nRyan could see the fear and the anger in her eyes. \"I don't know if I can,\" Ryan said.\n\n\"It's not about her, it's about you. The only question is: do you want her?\" Eleftheria said. \"You know what a gift you are. You know how much happiness you would bring her. The question is, do you think she's worthy? Do you think she deserves so much?\" Ellie said.\n\nRyan tried to convince himself he disagreed about the curse being a blessing, but he sure as hell agreed with Ellie about one thing: the practical choice was all his. He had all the power. In his mind, though, it was not a choice of whether Candice Emerson deserved a blessing, it was about whether or not she was hot enough for Ryan to want to fuck her for the rest of their lives. The rest of it would sort itself out.\n\n\"Show me her tits,\" Ryan said, casting all questions of right and wrong aside for the moment.\n\nEllie said something to Jasmine and tendrils of energy slipped under Candice's shirt. Her buttons gave way. Candice fought furiously, but on the outside it was impossible to even tell. The magic held her completely immobile, other than her wildly heaving chest and panicking eyes.\n\nThe tendrils made a few sharp and clinical cuts and Candice's bra fell off in pieces. Despite her panic, she was gorgeous, magnificent. Ryan had his answer. She was someone who deserved to be his. He wanted to fuck her, sure, but he also wanted to have her. Ellie might have been right, after all. Ryan was definitely measuring the cop's worthiness now.\n\nHe took his glove off and reached for her breast with his bare hand. Candice gave one last, furious moan against her invisible gag before the energy hit her. It was something she'd never felt before, but from then on, she would become intimately familiar with the sensation.",
        "Ryan zapped her quite hard right away, on purpose, as a kind of a retaliation. He knew it was petty of him and he didn't want to hurt her. He understood she had to have her motives, but he was still angry at the cop for going after his girls.\n\nThe pleasure seared Candice and her whole body shuddered. It wasn't an orgasm, exactly, but in a way, it was better. The tidal wave of pure, buzzing, tingling sexual pleasure that was surging through her was mixed in with pure, mental rapture.\n\n\"Give her to me,\" Ryan said, and Jasmine made the tendrils disappear. No translation was needed. She was advancing in her language studies.\n\nCandice fell into Ryan's arms. She was molten putty.\n\nRyan bent her over the table and pulled her pants to her mid thigh. Her cunt was dripping. Ryan considered taking her ass but decided there would be time for that later. Soon, but later. He pushed his big cock inside her pussy, all the way in, and fucked her. The monster filled Candice's mind and soul, too.\n\nEllie put her hand on Ryan's shoulder and he let her keep it there. She marveled at how female it made her feel, to see her Master take yet another woman for his slave. This was a big step for him. It was the first time he'd taken someone completely on purpose, and of his own will.\n\nCandice was sweet. In Ryan's mind, she was already Candy, and would always be.\n\nIt pained Ryan to do so, but he knew he had to cut this short. He had to get the other girls home. He did still dedicate about ten minutes to Candy, to make sure her sexy body would never forget who her new Master was. He would leave a lasting buzz inside his newly captured slave's cunt.\n\nCandy's shirt fell away and she revealed her tantalizing waist to him. Ryan grabbed it with two hands. It felt like he could almost make his fingers touch around her midsection. Her sexy back was comprised of lean, long strands of elegant, sensuous muscle under her beautiful, dark skin.\n\nTaking a vigorous ramming from her new Master, Candy was so delirious with lust and joy she was making out with the table while he took her. Ellie and Jasmine watched on, their eyes wide and their cheeks rosy with lust of their own.\n\nCandy came. Ryan wanted to just steamroll her, but he needed her conscious. He shot his load deep inside her.\n\n\"Go get the girls ready to leave,\" Ryan said. Ellie and Jasmine left the room.\n\nIt took a few minutes, but Candy managed to overcome the rush that had threatened to vanish her. \"What the...\" she said, still bent over the interrogation table, oozing thick globs of cum to the floor from her tingling pussy.\n\n\"You're mine now, body and soul, as you will soon realize,\" Ryan said.\n\n\"No,\" Candy sighed, but it sounded more like an exclamation than a refutation.\n\n\"Can you hear me?\" Ryan said.\n\n\"Yeah,\" she said.\n\n\"I need to go now. You've caused enough misery for my girls. I'll take them home now, to eat and rest. You will make all of this go away, you hear me: All of this. Drive down this investigation and clean up all the messes you have made. Fix it all, and then come see me in a few days,\" Ryan said.\n\n\"You... What did you do to me?\" Candy whispered.\n\n\"I helped solve your case for you.\"\n\nRyan pulled up his pants and headed out. His girls joined him in a v-formation, and they all walked out, not looking back. Ryan could almost hear the rock music and feel the slow motion. Too bad there wasn't an explosion they could all not look at.\n\nOnce they were all back at the apartment, they saw the destruction the police search had left behind. Before anyone could even sigh, Jasmine whirled her hands and chanted a few syllables, and most of the upturned home rearranged itself. Shelves rose back up and books flew back into them. There would be time to sort out the rest of the stuff later.\n\n---\n\nThe next day, Ryan ran into granny Johnson, from 3B, in the elevator. He half expected the old lady to interrogate him about the cops, or who knows what kinds of noise complaints she might have, but the nice old lady just smiled at him. Halfway down, she said \"I really like how you keep all of those girls of yours in line.\"\n\nRyan snorted.\n\n\"They are always so polite to me, and even help me with my groceries. The purple one, especially. She must be the nicest one. It takes a strong hand to keep such young, energetic girls like that on their best behavior, so good on you.\"\n\n\"Um... Uh, thanks, I guess,\" Ryan said. They were in the lobby now.\n\n\"Say, whatever happened to the one with the glasses? The really uptight one? Will she be coming back?\" granny Johnson said.\n\n\"I'm not sure. Probably not,\" Ryan said.\n\n\"Shame. You were good for her, too. I can tell.\"\n\nRyan was speechless.\n\n\"Let me tell you, you show those girls you can take charge and they will love you for it, young man. You must be really good to have such a lot of them. All the best, to all of you.\""
    ],
    "authorname": "FacetiousTales",
    "tags": [
        "anal sex",
        "harem",
        "magic",
        "male dominant",
        "group sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-cursed-tattoo-pt-11"
}