{
    "title": "Home Sweet Home Ch. 10",
    "pages": [
        "I apologize for the delay on this chapter. I had commitments with work that took all my available time. Work will likely get in the way again soon. Starting a new job and I need to gauge my time management to find the best times to continue projects for the site.\n\nThis is the last chapter for this story. If anyone is curious, I do have plans to possibly write the Order of the Shattered Cross for real.\n\n* * * * *\n\nSummer came, and Diana Jackson was absolutely engrossed on one task. After retiring, it felt good to find something else to occupy her attention and energies. During the day, Diana, Riley, and Whitney spent their time fixing the Cadillac. At night, they watched videos on auto repair, and searched for parts on the internet. William Hartman helped here or there, but he understood this was something they wanted to do together with as little help as possible.\n\nRiley and Diana took many long drives to salvage yards across the state, and even across state lines. During those trips they managed to salvage new seats, roughly half of what they needed to replace the engine, and various other parts they weren't sure they needed but took just in case. Some of those trips they stayed in a hotel overnight, and sex in a hotel was basically a requirement.\n\nWhile not helping her mother with the car, Whitney spent no small part of the summer with her father in Chicago. Diana wanted to know that part of Whitney's life, so took one of those trips with her. Meeting Whitney's stepmother Mary and her sisters wasn't as horrible as she expected. Diana was welcomed warmly into the family, and she couldn't help but feel worse about holding that part of Whitney's life away from her for so long. She had let her own fears and insecurities affect Whitney.\n\nWhen the month of July was nearing its end, Riley needed to return to LA for another round of script rewrites. This was prompted when the executive producer Kyle Payne got a copy of the manuscript for the third book and realized several key plot points in that story had its foundations laid in the first book, thus, the first season. Parts he had glossed over or completely ignored when adapting it to a show. Now that these moments were critical for later events, they needed to rewrite to incorporate those story elements. It became clear after a month of conference calls between the producers the only way to alleviate this problem was increasing the episode count from ten to twelve episodes.\n\nMore episodes meant they needed more money. Riley finally buckling on filming locations had given them a comfy buffer for finances, but it likely wasn't enough anymore. After the last meeting, they all concluded they needed to secure another two million. The first step to that problem, was auditing the entire production to see where money could be reallocated. Redrafting the contracts with the actors to lower the initial salary but add merchandise percentages in the long run was the first thing they did, but that only secured four hundred thousand.\n\nWith a new headache to worry about, Riley flew to LA, leaving Diana to fix the car on her own for a few days. Those few days became a full week, and Riley didn't return until early August. When he came home, he was stunned at how much progress Diana had made on the car. The entire engine had been rebuilt.\n\n\"I wanted you here for this,\" Diana said, nearly giddy at the idea of what might happen. Riley hadn't even entered his home yet and placed his luggage next to the garage door. Diana was wearing a grease-stained white shirt with black jeans, her hair pulled up out her face. She smelled like oil with dirty fingernails. She sat in the driver's seat, and took a moment before putting the key in.\n\n\"Please work,\" Diana said, and turned the key. The engine hummed, then sputtered as she put the peddle down a little. \"Come on, come on,\" Diana chanted as the car cleared its throat. It roared to life, and she put the peddle down to wake up the neighbors. \"Yes!\"\n\nThree months of work, and the car turned over. It was breathing. There was still work to do. Brakes and tire realignment for starters, but the car was alive.\n\n\"Yes! Yes! Yes!\" Diana cheered, drumming her fingers on the steering wheel in triumph. She left the driver's seat and jumped into Riley's arms. \"We actually did it.\"\n\nDiana kissed him with joy, and made it known to him she had a means of celebration in mind. He quickly pulled her shirt up and off her body, discovering she wasn't wearing a bra, and started to suckle her breasts immediately. He walked her backwards to the car and lowered the hood to place her on top of it.\n\nClothes were strewn around the garage, and they made love on the hood of the car while the engine purred. The vibration from the car tickled Diana, but she ignored it as Riley held her legs open and lowered himself inside of her.\n\nThe elation of a task nearly complete, coupled with a long absence, made the session short and sweet. After they finished on the hood of the car, they sat in the back seat, Riley remaining shirtless while Diana worse his. He leaned his back against the inside wall, and Diana rested her body his.\n\n\"That was fun,\" Diana said, the brevity not bothering her in any way.\n\n\"Yeah it was,\" Riley said, and kissed the top of her head. \"You did a lot without me.\"\n\n\"I was bored,\" she admitted. She was proud of herself regardless.\n\n\"Filming starts next month,\" he said.\n\n\"I know,\" she said. That meant Riley would be away in Georgia for the five-month filming schedule. \"I'm retired. I can visit whenever I want.\"\n\n\"Why don't you just come with me?\" he asked, and Diana exhaled while shaking her head. He was asking her to live with him in Georgia. \"Come with me.\"\n\n\"I have a sixteen-year-old daughter starting school in two weeks,\" she said. \"I'd love to go, but that's not what's good for Whitney.\" They sat quietly for so long, the silence began to innerve them both. \"Is this the build up for a fight?\"\n\n\"Doesn't have to be,\" he replied.\n\n\"We have conflicting responsibilities that puts us in different places. It's either we make it work or it doesn't,\" she said, and tilted her head to watch him blink in thought. \"I want it to work.\"\n\n\"Me too,\" he said. \"I'm already looking for a house in Georgia,\" he said. Diana understood his reasons, but it felt like he was laying down roots away from her.\n\n\"What're you going to do with this one?\" she asked.\n\n\"For now, keep it. I still have a tenant.\"\n\nThey got dressed and walked across the yard to the house. Tilly was in the living room, having splayed out several outfits on the couch. Tomorrow was the day, and she was nervous about wearing the right outfit for court. The judge was going to decide on family reunification.\n\n\"You're over thinking it,\" Diana said. Tilly looked over her shoulder, and picked up a simple blue dress, Diana nodding in approval.\n\n\"I'm done, no second guessing,\" Tilly said, placing the dress on a hanger and then onto the back of a chair. \"It actually might happen.\"\n\n\"It will,\" Diana said with a smile. \"Howie is coming home tomorrow.\"\n\n\"Home,\" Tilly said, letting that word hang in the air like it had wings. \"Home.\"\n\nTilly sat on the couch, and Riley watched her expression change from hope to unease. She looked at Riley, and gave him a half smile, then stood up to tell him something she had determined she needed to do.\n\n\"You okay?\" Riley asked.\n\n\"Thanks for everything. I couldn't have done any of this without you. Both of you,\" Tilly said, turning to look at Diana as well. \"But I need to move out.\"\n\n\"You don't have to...\"\n\n\"...I do. I need to do this on my own from here out. You gave me a hell of a starting line, but I need to cross it myself. Howie needs to see me cross it myself. I need to do something on my own, for once,\" Tilly explained. \"I'll find a place and move out as soon as I can.\"\n\nRiley knew Tilly was a prideful person, and much of the last several months had been her swallowing that pride. Accepting the lease agreement. Asking Mr. Hartman for a job. Allowing Riley to help her find lawyers. That support helped her land on her feet, but she needed to start walking at some point. Tilly was ready to walk.\n\nDiana felt uneasy over Tilly moving out. Not because she didn't think she was ready, because she did. Tilly staying was a reason for Riley keeping the house. It was his roots in Ferry Grove being pulled up. She didn't express that concern for the rest of night. Not while the three talked in the living room, or after her and Riley made love again before going to bed. She kept that quiet fear to herself. The fear that when Riley went to work in Georgia, he'd have little reason to come back.\n\n* * * * *\n\n\"All rise,\" the bailiff said to the courtroom.\n\nTilly sat at the table with her lawyer, while her support group sat behind her. Riley, Diana, Whitney and Alice in the first row. Behind them was Jason and William Hartman with his wife Chloe and the gaggle of kids, ages eleven to three. Boy, girl, boy, girl, in perfect sequence. Across the aisle was Howie's foster parents, who while saddened to lose Howie, understood their role in his story if the ending was happy. Tabitha Sweetwater sat on the table opposite of Tilly.\n\n\"Please be seated,\" the honorable Judge Whittle said as he positioned himself in his seat. The room did as instructed and Judge Whittle nodded to Tabitha who left her table for a door to the side. She walked hand in hand with Howie into the courtroom and sat him at her table.\n\n\"I don't always have a good day in court,\" the Judge began. \"Not in family court. Often, it's the worst day of my life on repeat. Days like this, make it all worth it. I'm not going to extend this out needlessly, so let's begin.\n\n\"Ms. Aberdeen, you've completed community service. Parenting classes. Have had sustained employment and living accommodation since our last hearing. Is that all correct?\"\n\n\"Yes, your honor,\" Tilly said, her voice distorted from emotion.\n\n\"Ms. Clearwater, is there anything that concerns you regarding reunification?\"\n\n\"Ms. Aberdeen has recently informed me she will be relocating to a residence closer to her place of employment. I plan on evaluating that in my one month follow up session, but at this time, my official recommendation is that Matilda Aberdeen is a fit parent and that she have custody of Howard Aberdeen reinstated,\" Tabitha said, winking at Tilly. Tabitha loved when the situation turned out to be a miracle.\n\n\"Recommendation noted,\" Judge Whittle said, and then turned his gaze to Howie himself. \"Children, even young children, have a voice of their own. Which is why, Howard, I'm going to talk to you like a grown up. Do you understand?\"\n\n\"Yes sir,\" Howie said, looking at his mother, then at the Judge again. He was dressed in a suit his foster father helped him pick out and looked very dapper. Tilly was amazed at how much he had grown. Physically and in his overall maturity. He was a remarkably resilient child.\n\n\"Would you like to live with your mother?\" Judge Whittle asked.\n\nHowie looked at Tilly again, smiled widely at her, then turned back to the Judge one last time. \"Yes sir.\"\n\n\"Let the courts show that Matilda Aberdeen is once again, the legal guardian and parent of Howard Aberdeen.\"\n\nTilly was able to hug her son without a social worker there for the first time in nearly half a year. Tabitha was there, but no longer in that capacity. Howie was momentarily overwhelmed by how many people were there, but quickly began to enjoy the attention. He reached out to Riley who happily held him.\n\nThe entire group went to the house and celebrated the return of the last member of their weird little family.\n\nAt the end of the night before everyone started to go home, Alice put a camera on a tripod for a group picture. She started the timer and joined the group next to Whitney. She promised everyone she'd get them a copy of the photograph.\n\nShortly afterwards, everyone went home, soon leaving Riley downstairs with Diana while Whitney went to stay with Alice for the night. The night had exhausted Howie who tried to claim he wasn't tired, but still fell asleep in his mother's arms as she carried him upstairs. Jason walked with her and watched her tuck Howie in and softly shut the door behind her.\n\n\"What's it feel like to put him to bed?\" Jason asked Tilly.\n\n\"Like he never left,\" she replied. She leaned the frame of the bedroom door while Jason leaned on his arm against the railing of the stairs.\n\n\"See you tomorrow?\" Jason asked, and she shook her head.\n\n\"I'm taking a few days. Need to find a new place,\" she explained.\n\n\"What's wrong with here?\" he asked.\n\n\"It's not like I don't appreciate what's Riley's done, but this place is a tomb. It's like I'm in Groundhog's day. I walk downstairs, and nothing has changed, and I expect to see my dad making breakfast while my mom chastises my grades. Only, they're still dead and I feel more alone the longer I stay here.\"\n\nTilly took Riley's offer on nothing more than necessity. She needed a place to live, and Riley was the best choice when she felt the most vulnerable. Never did she imagine Riley would turn out to be one of her best friends. Part of him reminded her of her brother Howard. That same goofy charm who in many ways didn't know how to take care of himself either. The man was nearly forty and still survived on microwave meals and made coffee by blindly dumping grounds in the filter. He even reused those grounds, a habit he carried over from his humble beginnings when he pinched pennies. His shirts were wrinkled, and his colored clothing was faded from improperly laundering them. He was barely an adult, but then again, so was Tilly.\n\n\"I'm glad it was a good night. I have to get home,\" Jason said, looking at his watch. It was just after ten at night.\n\n\"It's late, you can stay over,\" she said, and he looked down the stairs.\n\n\"Couch any good?\" Jason asked, willing to take her up on the offer. And also having a feeling what the offer really was.\n\n\"Never said anything about a couch,\" Tilly said. She took his hand and led him to her bedroom.\n\nSince the night Tilly kissed him months ago, she knew their relationship had changed. She wanted it to change, and she sensed he did as well. DK had happened during an emotionally charged period of her life, and she didn't want to meet a man under similar circumstances. She wanted everything to return to normal before she would pursue anything. Howie was home, DK was in jail, everything in her life seemed to be in place again. When the dust settled, her feelings for Jason hadn't dissipated; they had only grown.\n\nThe awkwardness of making love on her childhood twin bed was palpable. It temporarily made her feel like a teenager trying to be quiet so her parents wouldn't catch her. They were quiet because their kissing left little air for words. Slow rhythmic thrusting, followed by a slow ride where Jason held her breasts and she held his hands.\n\nAfter completion, they knew there wouldn't be much sleep tonight. The raw emotion was stripped away, and it teased out a desire to simply have fun with each other. They played with each other until she knew he was ready for another round. What a round it was, until they forgot they were on a twin bed and rolled off.\n\nJason landed on his back, grunting from both the impact with the ground and Tilly's impact on him. It was either luck or unluck that he remained inside of her as they fell. Tilly released a restrained squeak, the cause of which she would freely admit she rather enjoyed. They took a moment to assess injury, before laughing together on her bedroom floor.\n\n* * * * *\n\nTilly had been looking at rentals for weeks, so was ready to move three days after Howie came home. She didn't have much to move, and Riley offered to move some of her parent's furniture to her new home, but she didn't want it. She told him she wanted to start as fresh as she could. Riley didn't know she had never sold the items in the storage unit he gave her when she first came to live with him. She gave it back to him, only keeping her brother's guitar. Riley donated the remaining instruments to the local junior high school, and the furniture to the Salvation Army.\n\nWith Tilly moving out, Riley set out on selling the house while he closed on the one in Georgia. He assured Diana he would simply stay with her when he came to visit, but it still distressed her. It was the first time he realized how much him leaving bothered her. Neither knew how to articulate that into a productive conversation.\n\nWith little exception, the house was now empty. Riley walked through it, the first time he had ever seen it this way. When he stepped, he could his footsteps echo like the inside of a drum.\n\n\"House seems so much bigger now,\" Riley heard his realtor say. He was so lost in thought he had almost forgotten she was there.\n\n\"It feels smaller though,\" Riley said, more to himself than to her. Tilly was a week gone, but still in contact and just a ten-minute drive. It was too quiet. No one was cooking in his kitchen, and Howie wasn't running up the stairs or playing impromptu games of hide and go seek.\n\n\"Are you sure that's the price you want to put it on the market for?\" the realtor asked. Her commission would suffer because he was putting it back on the market at a stupidly low price. It was cheaper than he paid for it, meaning he'd be losing a good amount of money.\n\n\"I just want it off my hands,\" Riley said to justify her curiosity. In truth, there was only one person he wanted to sell it to. Riley heard a car coming up his driveway and walked to the open front door. He had asked Officer Joey Ballard to stop by. Joey was confused by the invitation, but still came.\n\n\"You wanted to talk Mr. Blake?\" Joey asked as he walked up the stairs. Riley insisted on his first name only.\n\n\"Make me an offer,\" Riley said, and Joey didn't know what he was talking about.\n\n\"Offer? For what?\" Joey asked. Riley gestured around him with wide arms, and Joey noticed he was in a process of moving out. \"I don't think I can afford that.\"\n\n\"You just got promoted to Sergeant, didn't you?\" Riley asked.\n\n\"I did. Don't get me wrong, I appreciate the meager pay jump, but I still can't afford what you paid for it,\" Joey said. Riley smiled at his obliviousness.\n\n\"Play along for a moment. Make me an offer,\" Riley said. The market value of the house was $375,000 before the probate auction which started at $250,000. Riley pushed Joey out with an offer of $330,000. Joey's last offer was $275,000 before it was out of his price range.\n\n\"$250,\" Joey said sarcastically, and wasn't sure what to do when Riley extended his hand out to shake on it. \"What's this?\"\n\n\"Deal. $250,\" Riley said. Joey looked at the realtor who bit her tongue.\n\n\"You serious?\" Joey asked, and Riley nodded. \"What's wrong with it?\"\n\n\"A family of five doesn't live it in yet,\" Riley said, making Joey slowly smile and return the shake.\n\n\"Doesn't have a fence for my dog though,\" Joey jested.\n\n\"Ask your new neighbor, he's good with that kind of stuff.\"\n\n* * * * *\n\nRiley spent one last night with Diana in early September. When it feels like it's the last time you'll have sex with someone, it mirrors the first time. The eagerness to please the other person comes with a belief this one needs to count because it might be the only one you get.\n\nThe ecstasy of the sex was overshadowing by the dread of Riley leaving with no concrete date of return. What if he never came back? What if Diana was only someone to play with until he went somewhere else and met another woman? Part of her worry felt silly to ever herself, considering Riley had offered for her to live with him. When she needed to say no, she felt Riley could take it the wrong way and begin looking at other options. Riley certainly wouldn't be lacking opportunities considering his celebrity status. Riley promised he'd try to visit next month during a break in filming, but she could only half-heartedly accept his promise.",
        "Whitney found her mother's reaction to Riley's departure almost comical. Her mother had never had a relationship worth mentioning. She knew her mother had a few dates, and some of those ended with sex, but the absence of those men hadn't put her mother into a depression. She did her best to keep her mother occupied.\n\n\"Let's go work on the car mom.\"\n\nJoey Ballard had let them keep the car in his garage after Riley left. They promised they'd move it soon, but Joey didn't hold them to a hard timeline. He was too busy building a fence for his dog. Either way, he was happy to help his old Deputy Chief who gave him more slack than he ever deserved.\n\nEarly October was the first time they crossed their fingers and drove the car around the block. It ran like a dream. They pulled the convertible down and took it to the highway for a proper test drive. The car held together and roared down the road twenty over the speed limit. Diana had never exceeded the speed limit that much in her entire life, making Whitney clinch the seat in quiet panic.\n\nThey pulled into the first drive through they saw off the exit and stopped behind the cars in line. Whitney was overjoyed they had finished the car. It was road ready. When she looked at her mother, her forehead was on the steering wheel and her lap was slowly becoming a puddle.\n\n\"Mom?\" Whitney asked.\n\n\"Sorry. Marcus...*hiccup*...Marcus would have loved this,\" Diana said. Whitney placed her hand on her mother's shoulder and rubbed.\n\n\"You should call Aunt Crystal,\" Whitney recommended, and Diana agreed she should. \"Maybe stop crying first.\"\n\n\"It's not just Marcus,\" Diana admitted, and Whitney already knew.\n\n\"You fell pretty hard. Didn't you?\"\n\n\"I love him,\" she said. \"I haven't said that to him yet. Seems rather desperate to say it now.\"\n\n\"Then what the hell are you waiting for?\" Whitney asked. \"Take your pimp ass car and go get him.\"\n\n\"It's not that easy. You still have school,\" Diana said.\n\n\"Gee mom, if only I had another parent who lived nearby,\" Whitney said. \"Please, I take care of you. I need the break more than you do.\"\n\n\"You go to school here.\"\n\n\"Yeah, no I don't. Not next semester anyway,\" Whitney said, and Diana slowly turned her face to her. \"I didn't drop out, relax. I just, forged your signature on a transfer to Chicago.\"\n\n\"You did what!?\" Diana exploded. She felt the car lunge forward from letting her foot off the brake, but quickly reapplied pressure and put it in park. \"Ferry Grove is a nationally ranked high school.\"\n\n\"I've already been accepted by a prep school in the city. Also nationally ranked. Actually it's number two in the entire state,\" Whitney said to alleviate her mother's fears of her academic future. Her mother had strong, and negative, opinions of public schools in Chicago.\n\n\"You forged my signature?\" Diana asked, still trying to wrap her head around that part of Whitney's behavior.\n\n\"And you've never wondered why you haven't had to sign a permission slip in six years?\" That certainly explained a lot.\n\n\"You still need to finish the semester...\"\n\n\"...Aunt Crystal said she'll stay with me until the semester is done,\" Whitney said, and Diana leaned into her seat with her arms crossed. Now her sister was colluding behind her back too. She raised them both, so she only had herself to blame. \"Mom, I'll be fine. I'm worried about you.\"\n\n\"Why?\" Diana asked.\n\n\"You don't take care of yourself.\"\n\n\"What is that supposed to mean?\"\n\n\"I mean, you've done enough mom. You protected your sisters. Saved Crystal from that life and got me this far. It's time for you to live for yourself. Do what you want to do.\"\n\nDiana exhaled and uncrossed her arms. She put the car in drive to move forward, then put it back into park.\n\n\"I don't like how you did this without telling me,\" Diana said.\n\n\"You have to let me make my own decisions. Even bad ones. Even the ones that scare the shit out of you. Language, I know,\" Whitney said to preempt her mother. \"I'll be fine. Crystal is a badass lawyer. Ferry Grove isn't going to explode. The training wheels are off and now you need to let me ride. Even if I crash into a mailbox.\"\n\n\"You did crash into a mailbox,\" Diana said with a giggle. When Whitney was learning to ride a bike, the training wheels came off and after the initial push off, she swerved straight into a mailbox.\n\n\"I did, but then what happened next?\" Whitney asked.\n\n\"You dusted yourself off, and jumped back onto the bike, and then crashed into a parked car.\"\n\n\"Can I just have my metaphor, please?\" Whitney said with a laugh. \"I crashed a lot. I even got frustrated and stopped riding for a while. But did I learn how to ride a bike?\"\n\n\"You did,\" Diana admitted.\n\nDiana decided Whitney was right, and that her daughter could be trusted to make her own decisions. Whitney grew up before she could blink. Crystal would always be her baby sister, so it was hard to imagine she went out on her own ten years ago. Her girls were women now, and she needed to accept it.\n\n\"Your GPA drops below 3.7 and I'm coming back,\" she said, just to remind her she would never stop being her mother.\n\n* * * * *\n\nJo Zielinski didn't know why she answered the phone after someone called her twice. It was a number she didn't recognize, and she normally would ignore it. Unless it was clearly cloning her area code, then she'd answer and tell the scammer she'd hunt them down and gauge their eyes out.\n\nOn the first call she rejected before it rang twice. Her curiosity was piqued, so she quickly searched the area code. Alabama. The phone rang again. Same number. She answered.\n\n\"Who's this?\" Jo asked.\n\n\"Odette O'Hara,\" a thick southern accent replied.\n\n\"Who?\"\n\n\"The PI who kicked David Titsgerald in the dick.\" Jo paused, wondering why this woman was calling her. \"You there?\"\n\n\"Yeah. Umm...what do you want?\"\n\n\"What does a former detective do on a Friday night?\" Odette asked.\n\nJo lifted her beer bottle to her lips. \"Drink alone in my living room watching the game show network.\"\n\n\"No one should drink alone. You ever go to McCoy's? Irish Pub right off the Metra in Parrington?\"\n\n\"What?\"\n\n\"You got a smartphone? Google it. Next train leaves in thirty minutes. See you there.\"\n\n\"What? I never said I was...\" Jo said, then heard the call disconnect. \"The fuck?\"\n\nJo didn't know what possessed her, but she caught the next train and stepped off in Parrington. She followed her phone to the pub which was lively with it being a Friday night. She called back the number as she walked in, then immediately stepped out just to hear because of the music and the conversation within.\n\n\"Right side of the bar. Saved you a seat.\"\n\nJo walked back inside and pushed her way through to the bar. Odette sat at the right most seat, her purse saving the seat next to her. She placed her purse on the bar to make room for Jo. Jo ordered a bottle of Heineken and Odette had her whiskey topped off.\n\nTaking her first drink, Jo shook her head while laughing. \"Why the fuck am I here?\"\n\n\"Are you asking me or yourself?\"\n\n\"Yes.\"\n\n\"I don't like drinking alone, and I figured if anyone needed a drink it'd be you,\" Odette said, and playfully tapped her glass against Jo's bottle.\n\n\"How'd you get my number?\"\n\n\"The same way I got that asshole's stock portfolio; I'm really good at my job. Part of why I wanted to talk. You need a job?\"\n\n\"I fucked any credibility I had. No police force in this state will ever hire me, and no one will ever hire a PI with my track record. Unless your job is outside of Illinois, thanks for the beer,\" Jo said. They hadn't spoken at all regarding who was paying for drinks, but Jo decided to slip it in there.\n\n\"You ever been to Ohio?\" Odette asked with a grin.\n\n\"Just passing through. Your job is in Ohio?\"\n\n\"When I was still Army CID, I ran a case with an out of state Internal Affairs investigator. We became friends and still talk from time to time. Her and her husband have started their own firm and are looking for an investigator. She asked me, but I like Chicago too much. If you want to start over, this is as good as anything else you'd find. She sent me this.\"\n\nOdette reached into her purse and found an open white enveloped address to her with the information. Inside was a letter and a business card. She handed the card to Jo who read it aloud.\n\n\"C &amp; H Investigations?\" She flipped the card over and saw a salary estimation. \"I was making more as a cop.\"\n\n\"It's more than you're making now,\" Odette poked back. \"They live out in the boonies too. Cost of living is pretty cheap.\"\n\n\"I'll think about it,\" Jo said, placing the card into her pocket and continuing her beer.\n\n* * * * *\n\nDiana put her house on the market with a note to the realtor not to close until January. Whitney had already moved a majority of her belongings to her father's and was planning to live with him in Chicago when the semester was complete. In the meantime, Crystal was in charge at her house until Whitney could transfer.\n\nCrystal was prepping for a big case to the Wisconsin Supreme Court, so liked the isolation. It made it easier to focus on it away from home. Diana hadn't seen Crystal since last Christmas, the only occasion they never missed a reunion. They talked regularly, but their careers prevented in person gatherings.\n\nTogether they helped Diana pack her bags into the Cadillac. She hadn't told Riley she was coming. Maybe she got there and he had already forgotten her. It was a risk she would take.\n\n\"Be safe on the road. Call if you need anything,\" Crystal said once the last bag was loaded into the car. \"I've never seen you so spontaneous.\"\n\n\"You've never seen her in love,\" Whitney teased from the other side of the car as she arranged the luggage with Alice.\n\n\"It's a fifteen-hour drive. You sure you want to do it in one leg?\" Crystal asked.\n\n\"I'm sure,\" Diana said, and debated if she put the top down. The forecast was clear, so she decided she would. How else do you road trip in a convertible?\n\n\"We'll get to work on finding him. I'm sure the other fangirls are trying to find the set for the show. We'll get you a good guess by the time you get there,\" Whitney said, Alice confirming a forum already had a good lead. The power of fangirls.\n\n\"Speaking of,\" Diana said and reached into the car for two packages. \"These came from Riley this morning. Addressed to you two.\"\n\n\"Really?\" Whitney asked and took the white package that felt like something firm protected by bubble wrap. \"What is it?\" Whitney opened the package and screamed. \"No fucking way!\"\n\n\"Language,\" Crystal said.\n\nAlice reacted the same way moments later.\n\nRiley had sent the girls an advance copy of the third book. Hardcover, first print, autographed. There was a picture of him taking the first two books off the press. They literally had the first two books. He intentionally didn't label which one was which to avoid a potential fight.\n\n\"It's not even coming out until February,\" Whitney said in awe, holding it above her head like it was the holy grail. There was also a note saying he'd be in trouble if the plot leaked. He asked them kindly not to do that.\n\n\"Something for you as well. I made it with my dad for your new house,\" Alice said. She handed her a gift wrapped box and told Diana not to open it until she got there.\n\n\"I gotta go before traffic builds up. Take care of each other,\" Diana said, and wrapped her girls in a hug.\n\n\"Love you mom,\" they both said at the same time.\n\n\"I'm not your mother,\" Diana said to Crystal.\n\n\"Yes you are,\" Crystal said with a grin.\n\nThe hug took over a full minute to disengage, but Diana did finally get onto the road with her dream car. Whitney waved goodbye and watched her mother speed away like she never would have mere months ago.\n\n* * * * *\n\nRiley had turned the third floor of his townhouse into his office space. The home was in the heart of Savannah's Historic District. He stepped out of his house and onto the brick sidewalk. It was nearly the opposite of his last house where his neighbors wouldn't even be seen. Now he shared walls with them.\n\nUnlike the last house which he walked into fully furnished, this house was empty. The showrunner Alvin Sinclair gave him the number for his decorator, but Riley wasn't that accustomed to his lifestyle. Part of the fun was doing it himself. Even if he had never done it before. The only thing he brought with him was his bed, television, clothes, and books. The show started filming days after he arrived, so he didn't have much time to furnish his home. When he came home, it was still a shell with only a television on the floor.\n\nGrace Weatherby was a sight to behold in full costume. Aaron Westland and been rehearsing his character to a mirror shine, perfectly capturing a seasoned agent of the Shattered Cross. The other performers fit into their roles nicely, and filming began with relative ease. They planned on filming the first two episodes essentially at the same time. A small warehouse was used to build a set for the interior of an abandoned mental hospital in Florida. Exteriors were filmed months ago.\n\nRiley was on set every day, and every morning the writers sat down with the day's scenes to confirm or make changes to the script. This line didn't work. Netflix wanted this line gone. Timothy Augustine is too quiet in this scene. Michelle Frost should say something regarding this. Regardless of the changes, they filmed the original draft as well, and would worry about which flowed better in the editing process. The director was unfortunately a perfectionist, and nearly every seen had twenty to thirty takes.\n\nAll scenes with Grace Weatherby were filmed at each set, regardless of which episode they were working on. Three other girls with similar profiles were hired to be her stand in. Child labor laws prevented her from working more than eight hours, so they'd film her speaking parts as much as they could with the other actors but had her stand ins when needed. Thankfully, parts of her role were only a voice in Timothy's head, so she could record her lines whenever they needed to.\n\nOn the first day of the filming of episode seven, which was the third in production order, Riley sat in his designated chair watching the actors work. The scenes took place in several of the same locations from episode one, so they filmed episode seven when the set was still available.\n\nA production assistant tapped Riley on the shoulder between takes.\n\n\"Sir, there's someone here to see you. I'm thinking another fan who found the location,\" the assistant said. Riley had been accommodating. Taking pictures, signing books, but it was started to get annoying.\n\n\"You get a name?\" Riley asked.\n\n\"She said her name was, um...she said her name was Nobody.\" Riley laughed.\n\n\"Thank you,\" Riley said, and left his seat immediately, excusing himself from the set to go to the front of the warehouse. Diana was on the other side of the security line with a large grin just from seeing him. Riley walked past the security line and wrapped her in a hug, spinning her around for good measure.\n\n\"You fly out?\" Riley asked.\n\n\"Nope,\" Diana said, pointing over her shoulder. Riley leaned around her and saw the tail of the fully restored Cadillac in the row of cars.\n\n\"No way,\" Riley said, jogging over to the car. \"It made the drive?\"\n\n\"Like a champ.\"\n\nRiley noticed how much she had packed and smiled as he turned to her.\n\n\"Plan on staying for a while?\"\n\nDiana had run this conversation in her head for the last fifteen hours. Sometimes it went well. Sometimes it didn't. She took a deep breath and started the conversation with the person she planned it for.\n\n\"I love you,\" Diana said, and Riley kissed her.\n\n\"I love you too,\" Riley said without hesitation. \"What's the plan?\"\n\n\"I put my house on the market. Whitney forged my signature to go to school in Chicago and live with her dad, and I'm oddly okay with that,\" Diana said with laugh. \"And I drove halfway across the country in a car that could have exploded just to say I love you in person.\"\n\nRiley knew what her plan was. Diana said it without saying it. She wanted to be with him. Riley wanted to be with her.\n\n\"Riley,\" a voice from behind the line said. It was Alvin Sinclair with large over ear headphones pulled down to his shoulders. \"Director called action, you're missing it. We're running the rewrites from this morning.\"\n\n\"I'll see you tomorrow. Going home early. You mind covering for me?\" Riley asked. Alvin identified Diana as his girlfriend, and simply nodded.\n\n\"I gotcha. Have fun,\" Alvin said, and then returned to set.\n\nRiley left his car at the set and drove back in the Cadillac with Diana. Traffic was backed up, but the convertible made it a comfortable wait. He directed her to his townhouse, instructing her on the parking. Together, they carried her belongings into the living room.\n\n\"Little empty in here,\" Diana said, clapping her hands to hear the echo.\n\n\"Haven't had time to fill it in,\" Riley said. \"I do have coffee though.\"\n\n\"Of course you do,\" Diana said.\n\n\"You mind helping me make the place feel like home?\" Riley asked, walking toward the kitchen to his coffeepot. He had finally purchased a Keurig that made both individual cups or pots.\n\n\"It can stay empty, and it'll still feel like home,\" Diana said. Riley started the coffee, and Diana wrapped her arms around his back, resting her face on his shoulder. Riley turned around and she placed her head into the pocket of his shoulder. At that moment, she remembered Alice's gift and left to go find it.\n\n\"What's up?\" Riley asked.\n\n\"Alice gave me something. Told me not to open it until I got here,\" she said, digging through her pile of stuff until she found the box.\n\nDiana returned to the kitchen and placed the box on the counter. Riley opened it, and slide out a picture frame protected with a towel because she couldn't find bubble wrap.\n\nAlice had kept her promise of giving everyone else the picture she took of everyone when Howie came home. Their weird little family together one last time before everyone had to go their separate ways. The frame was custom made with an engraving below and above the picture.\n\nHome is not a place. Home is a Feeling.\n\nHome Sweet Home.\n\nThe family would see each other again. They knew they would.\n\n\"Home Sweet Home?\" Riley asked. Diana nodded and lifted her face to his, gave him a small kiss, and a large smile.\n\n\"Home Sweet Home.\"\n\n* * * * *\n\nThe End"
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "ending",
        "interracial",
        "home sweet home",
        "straight",
        "tit sucking"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/home-sweet-home-ch-10"
}