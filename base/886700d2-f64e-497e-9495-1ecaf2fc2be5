{
    "title": "Lost Empire Ch. 25",
    "pages": [
        "Deep in the underground safe hold of the Taiolan, the leader had yet to make a sound, still blocking all the excruciating pain that was trying to rack his body. Even as good as he was the many years of training, still some of it was leaking through. Enough to the point that he'd already passed out a number of times. Motioning the second in command he asked for an update. An hour later the leader though not happy was none the less pleased that they still had as many ships and people that they did. Laying there a plan started to form, a plan the leader hoped would eliminate the last of the royal line. Then and only then the leader felt would all be free.\n\nThe second in command left to begin carrying out the leaders orders; this was a most perilous mission to say the least. Since their mind implanted agents were of no further use he guessed they would have to go with the old way of actual agents infiltrating the ranks. This was harder, but with the skills of many here it shouldn't be all that hard.\n\nDerrick looked hard at all the data he'd received, the recyclers had detected something and gone to investigate. They had found the abandoned pod with a fair amount of blood all over the inside. Upon further analysis Mary could find no one in the data base that matched the blood though she had expanded her search to other systems that might hold the answers that she required. Mary herself was worried she hadn't detected any movement or anything getting close to the pod. She felt that she had failed the Emperor even though he was not upset with her.\n\nShe had done extensive scans of the pod after the recyclers had found it. Then she started to replay all of her records for the last few hours, sighing she was worried. There had obviously been someone in it even though she hadn't detected a single life reading. The more she scanned the pod the more she was worried, through with the new energy detection system the emperor had her install she was starting to get disturbing readings.\n\n\"Sire,\" she called him a few minutes later when she started to get something.\n\n\"Yes Mary, anything,\" Derrick asked, he was hoping the information they had gotten from the first agent was staring to help Mary's scans.\n\n\"Yes Sire, with the new readings I am starting to get readings of a ship that was cloaked. It appears to be a variation of the light screen that the EIG'S use but it is attuned with a huge difference.\" Mary finally advised Derrick.\n\n\"Still no way to actually determine just who was in the escape pod?\" Derrick asked of her.\n\n\"Not as of yet Sire, it is obvious that we are dealing with someone who was either removed from the system or has never been scanned into the system. I find that hard to believe Sire, everyone is scanned no matter where they are. There are systems set up all over the empire I should be getting a reading of at least once or twice of him being scanned. It is almost as if the man does not exist.\" A frustrated Mary finally told him.\n\nDerrick nodded he'd heard of something like this before back when he was still in the military but didn't think it had actually been a reality. Thinking harder a few minutes he thought that he'd heard of a store house of personal information on the old Republic world, hmmm he thought the answer might lie there. That bastard might have been a really bad leader and a real shit head of a human being but Derrick had to admit the man had something on a lot of people to wield the power he had.\n\n\"Mary I need Hartwell.\" Derrick said. Mary nodded then a moment later Hartwell appeared. After Derrick had told the man of his suspicions Hartwell nodded his agreement, the president might have been the crud of the galaxy but the man had to have something on a lot of people like Derrick thought to have the authority that he'd had. \"Mary we are going to the Republic planet I want you to keep a lock on them at all times. If you see a problem notify me at once we'll transmit all we find as fast as we can. If the sects find out what we are up to they might try to interfere.\"\n\n\"Yes Sire, you shouldn't be disturbed. I will keep all away as long as I can.\" Mary said a smile on her face finally she might get a chance to pay that cess pool of a planet back for the slights they had made and done to the emperor all those years ago. Actually she had been prepared to blast the shit out of the planet as long as she could maintain power. Good thing the Emperor had stopped her!\n\nDerrick was about to call Shelby when an idea hit him, \"Mary I need Thomas, please connect me.\"\n\n\"Yes Sire,\" Mary replied a faint smile on her features. \"I have him Sire.\"\n\n\"Yes your lordship,\" Thomas said as soon as he saw Derrick.\n\n\"I've a few suspicions about these rumors of a vast store house of information on the republic world. What is your present position?\" Derrick questioned.\n\n\"At present we are manning a presence near the Taiolan's new safe haven planet. Conner, Celeste and newly active duty Ace are all scanning as deep into the planet as we can, as of yet we haven't detected anything new Sire.\" Thomas reported proud of how efficient all three ships had been so far.\n\n\"Alright maintain a safe distance, we are still unsure of just how advanced their tech is. The energy dampening field was proof enough that we need to be more cautious. Still though, I am taking some of the fleet to the republic world, the plan is...\" Derrick told Thomas.\n\nIt was a few hours later when Derrick and Hartwell appeared near a large building on the Republic world. Looking around both Hartwell and Derrick pulled strange looking devices and began to pass them over the buildings door. Nodding Hartwell pulled another device that made a warbling sound before the door popped open.\n\n\"Ok it's disarmed, should be safe but knowing how much of a bastard the man was, I expect at least a dozen more personnel explosive devices.\" Hartwell warned Derrick.\n\nNodding Derrick started to scan with more and more frequency, stopping every few minutes to point out another device to Hartwell. Derrick and Hartwell were more and more convinced that there was something here, especially after they had already removed more than 50 devices that they were on to something big.\n\nA sudden beeping alerted Derrick, \"Yes Shelby?\"\n\n\"Derrick I have several ships approaching, they are of the same configuration as those that left the first Taiolan planet.\" Shelby informed him.\n\nSighing Derrick had expected this but by far not this soon, \"Give me Thomas.\" A moment later Thomas's voice could be heard,\n\n\"Yes Sire we are tracking them now. The new upgrade you gave us has worked wonders. I'd estimate that you have about one hour, if none of them got past us.\"\n\n\"Alright Thomas keep close, we may have to take action to protect what we find, if we find anything.\" Derrick advised the man.\n\nSwitching off Derrick looked at Hartwell who was smiling, \"Just like old times my friend.\"\n\nDerrick had to smile it was like old times both of them at the end of a long mission with barely any time to complete it. Looking back they were finally past the final barrier to the interior, nodding Hartwell started to set up the recording and transmitting equipment.\n\nMoments later Derrick got a call from Thomas, \"Sire we've managed to stop or send most of them back but I am afraid that one may have gotten by. The ship has a strange configuration of a light shield, I had it for a moment, and then it was gone. Reminded me of the rotating shield harmonics when we faced the Occlusions.\"\n\nDerrick's eyes opened wide and he alerted Shelby to the possibility she might have borders. \"Do you have any specifics you can give me Derrick?\" Shelby asked.\n\n\"All we have so far is that they may have a way to rotate their shield frequencies I suggest you start a multi- level scan to detect anything of that nature.\" Derrick instructed her.\n\n\"I have started already Derrick as of y... , I have something bearing forty five degrees off starboard side. All ships have made adjustments based on the data you have supplied. It appears that the object has turned and is beginning descent.\" Shelby advised Derrick and Hartwell.\n\nMary's voice came on a second later, \"I have a constant lock on yours and Hartwell's position. Ready to evacuate within 1 second, Sire.\"\n\n\"Thank you Mary, please be advised we need to gain as much of this information as possible. If possible Shelby, extend your shield around this building. Try and hold them off as long as possible.\" Derrick told her.\n\n\"I will do my best to not fail you Derrick,\" a proud sounding Shelby replied.\n\n\"Zan, Sherry I want you both to be ready to trans-warp if we need you.\" Derrick told the duo in orbit of the Imperial world.\n\n\"Yes Sire we are ready to assist as quickly as possible.\" Both Zan and Sherry responded. 'Good, ' Derrick thought 'now if we can actually get the transfer started, then we'd have good luck.'\n\nKimison looked at Rayburn to make sure he was asleep, good the ass wouldn't interfere once he got it going. Punching in more commands and instructions Kimison took a deep breath. Well Kimison thought as important as this was he had no choice. Rayburn was the real good brain they both knew it, no big deal if he fried his brain.\n\nDonning the head set device Kimison was reaching for the manual switch, Tempro appeared before he was able to touch the switch. \"Sir, I advise against using the device until a full battery of tests has been done.\"\n\nSighing Kimison withdrew his hand a second, \"Tempro we really don't have the time, I've run all scenarios, it should be safe now.\"\n\n\"Sir I still advise against this action, I am afraid that...\" Tempro stopped a moment as Kimison reached for and activated the system. \"You deactivated my control and emergency shutdown procedures! Mother! I need you quickly!\"\n\nKimison was smiling he could already feel the rush of information as it started to flood his mind. Mary appeared a moment later just before Kimison started to scream.\n\nShaking her head Mary dived into the program. Looking around she could see that Kimison had almost absorbed Tempro's entire library. The only problem was there was no link for his mind to another library to go to. Then she heard Rayburn, \"Mary, please hold that idiot still as I withdraw the both of you and do a gradual shut down.\"\n\nRayburn had been awakened with a start when Kimison had started to scream. Idiot Rayburn thought almost as rash as the emperor! Running through all the systems, Rayburn finally gained control and started the shut down drawing both Kimison and Mary out as he did.\n\nRipping the head set off as soon as he was back, Rayburn watched as Kimison's body started going into shock the whole body twitching. \"We need to get him to... ,\" Rayburn was saying as Kimison disappeared. A moment later he too disappeared and was standing over the man on a medical table. \"Stupid, stupid idiot!\" Rayburn was muttering to his self as he tried to stabilize Kimison. An hour later Rayburn breathed a sigh of relief, it appeared that Kimison was going to be alright, at least 'til he woke up and Rayburn kicked his ass.\n\n\"I am reading stabilization of all his systems, though I am unsure if irreparable damage has been done to his cerebral cortex or his memory centers. Neither Mary nor myself can determine this until he has awoken.\" Tempro informed Rayburn.\n\nRayburn nodded, as pissed as he was he couldn't really blame Kimison. They all owed the commander many times over he'd have done it had Kimison hadn't though, he would set up a few more safeties.\n\n\"The harmonic memory cells have to be adjusted to a finer point of .0001,\" Kimison was muttering in his sleep. Rayburn was writing everything down as it came out of the man's mouth. Shaking his head he turned and looked at the device, he needed to have a go his self but he was going to add more safe guards.\n\nMary could only nod she had to commend both men for their fierce loyalty for the emperor, but if they kept this up they were going to seriously destroy what was left of their brains! She estimated that Kimison had absorbed 90% of Tempro's library. Though no where as much as the emperor had taken it should be sufficient to up his intelligence. Sighing she just hoped that they didn't keep taking unnecessary chances like this.\n\nThe Captain of the Betrayal cursed when he saw the three ships give chase then disable half of those with him. With a sigh he ordered the others back, his ship would continue on. Nearing after exiting the trans-warp the Captain smiled, he should take the ships then ... Cursing he saw that the emperor was on to their trick and was already rotating the ship shield frequencies. Descending they had to complete the mission, the knowledge the emperor could gain would seriously hamper their operations.\n\nBrought out of his ruminations by a shrill tone emitted by the console he smiled, at least this was going to be interesting he thought. Landing the Captain started a fine thin blast of energy to disrupt the shield, smiling when at first it was working. Suddenly the frequency changed and almost sent a back surge to the ship. Cursing, the Captain smacked the shit out of the first officer, \"Get on it you miserable ass! I want us in there NOW!\" The first officer nodded as he picked himself off the floor across the room where he had landed.\n\nCrap Derrick thought, it was taking way too long to get in, \"Mary I am transferring control to you, I want as much as you can get.\"\n\n\"Yes Sire, I have already broken through all the security. I am initiating copy and transfer now. I estimate I need at least twenty minutes.\" Mary advised Derrick.\n\nAw shit Derrick thought, they would be through in ten to fifteen minutes damn it! \"Shelby \n\ndo all you can to keep them out including shooting them full of holes if possible!\" Derrick advised her.\n\n\"Yes Derrick loading a charge now!\" With that there was a concussive blast outside the building, several yells then nothing.\n\n\"Download at fifteen percent sire,\" Mary told them.\n\n\"Can you increase your speed in acquiring the information?\" Derrick asked her.\n\n\"Yes Sire, but I warn you such an increase could destroy the data banks they are stored in. I...\" Mary was about to comment further but then smiled it was a good thing she thought it didn't afford the opportunity for the sects to have the information either. \"Now increasing to twice download speed. I estimate it will be another eleven minutes.\"\n\nA lot better Derrick thought but they'd be two minutes short for full download. Looking over at Hartwell an idea started to form, making several motions to Hartwell he called Shelby and had all he needed in a moment. Hartwell nodded as Derrick took one bag and he the other and walked around the entrance to the building. They both stopped every few seconds to touch several spots then retreated back repeating the process at each subsequent door. Looking at his chronometer Derrick said, \"we'll know in another three minutes.\"\n\n\"Download at eighty five percent am now accessing more modern information. I see now how the president stayed in power.\" Mary had been watching the whole time; she knew that Shelby was afraid of loosening another salvo, afraid she might hit Derrick. It appeared that the sect was using a device that Mary had only seen once 950 years ago. As she recalled it was called a shield slicer, a most effective demonstration had been shown to the emperor who had rejected the idea.\n\nA moment later Derrick and Hartwell heard a hissing then the first door exploded, as did several shaped charges. Smiling Hartwell held a thumbs up, Derrick nodded hoping it delayed them long enough to get what they came for. \"Now at ninety two percent one more minute, ninety three percent.\" Mary reported.\n\nDamn it Derrick thought as he watched several of those entering take to the ceiling, activating a switch several charges blew the hell out of most of those on the roof. Near the second door they stopped a moment then advanced as Derrick blew a second set of charges. \"ninety eight percent Initiating IMT,\" Mary said.\n\nA group of the sect entered the room looking around. They were about to rush forward when the device Derrick had attached to the data banks dinged, \"Too late ass holes!\" They heard Derrick's voice say then the entire room exploded.\n\nCursing the Captain recalled all of the men and made orbit as fast as he could. The leader cursed under his breath as he chopped his second aide, effectively breaking his neck. \"Get out of there now! I want your shields at full push them higher if possible!\" The leader was screaming fearing that they would lose this ship also.\n\nThe Captain did as he was told, and was already going to trans-warp when three ships appeared in front of him. Thomas smiled a wicked smile as he launched a full out attack upon the smaller ship. The cursed pissed off when the ship avoided the blasts! As a trans-warp portal opened Conner again released a full charge blast, the ship barely avoided it and entered the portal. Thomas made to give chase when the portal collapsed in front of him!\n\n\"Conner, Sherry, Ace track it!\" Thomas was almost growling into the com. \"I want trans-warp! GO, go, go!\" As the three ships entered the space they began to hunt and track the ship, closing in within thirty seconds. At least they were 'til the ship hit all three of the EIG's with a nullifier beam. Ace had managed to hit an astral fin just before he shut down.\n\nCeleste called Shelby hers being the only radio that was functioning, she had been further back and to the side when it hit. Shelby appeared a few moments later, bathing all three ships in a mysterious blue beam. Thomas's mouth dropped open; when had he developed that?\n\nThomas appeared a moment later as a hologram, \"I apologize Sire, I had forgotten about the nullifier beam. I will not again rest assured!\"\n\n\"I know Thomas; you always were quicker to react than most. I see that you hit their astral fin possibly two. I don't think they will be able to use that ship for a bit. It might actually give us a little time. Besides,\" here Derrick smirked as he thought of all the files that they had gotten from the store house. \"I have a bit of heavy reading to do.\"\n\nThomas smiled; he wished he could be there when the commander pulled the information out about all the dandies. Laughing he could see several of the higher Nobles crapping their pants when the commander told them.\n\nThe Captain breathed a sigh of relief when all three of the ships were hit by the yellow beam. Then again there was going to be hell to pay when they got back. Stealing himself up he'd have to be at the top of his game when he got there the leader was far better than he was. Shuttering he knew if he didn't he'd be dead before the day was out that was for sure.\n\nRayburn was still worried about Kimison the man had been babbling about the strangest things for the last half hour. Rayburn had already been through the device three times, each time finding a fault that was as deadly as it was stupid to use the device before all was tested. Finally on the fourth time through he found nothing but ran it a fifth time to confirm. Satisfied he went over the rest of the safety protocols finding three missing that they agreed needed to be there. Shaking his head he looked at Kimison again he really was lucky to be alive.\n\nTaking a deep breath Rayburn was about to don the device when he thought to check one more thing. Sure enough he found another dangerous snag that might have killed him. This time he donned the device and flipped the switch. At first it was almost exhilarating then a slight pain started.\n\nAfraid that that he might also fry his brain Tempro immediately called Mary. \"How long has he been in?\"\n\n\"He donned the device twenty minutes ago at first it was going well. It was then I noticed that his pain receptors were reacting at twice their capacity. I am afraid that this one might have a higher pain... ,\" Tempro was explaining. Suddenly Rayburn let out a shrill scream as the information began to invade his mind at an even faster rate.",
        "Sighing Mary shook her head, these men were too much of risk takers, yes the project was of extreme importance but it would not matter if they both were dead. Delving in, she saw that Rayburn had finished Tempro's library and was not here. Then she felt him in hers! Quickly she started to push him back towards his body explaining she was shutting down, nodding Mary breathed a sigh of relief then shut it down.\n\n\"I do believe I know why the transfer and the organic experiments have failed,\" Rayburn said when he opened his eyes. \"Mary take me into Kimison's mind I believe I can help him.\" Nodding, she, and Rayburn delved briefly into the man's mind then were out as Kimison opened his eyes.\n\n\"Damn it! I forgot three safety protocols. No wonder I was hurting! Thank you Rayburn, I also have had time to think about the transfer. I believe we can do it with a device not unlike the download one.\" Kimison said.\n\nRayburn was nodding he could almost see what Kimison was thinking about then suddenly he could! What in the hell was going on? Were they now linked? Great, all he needed to be linked to an ass hole!\n\n\"You know it goes both ways shit head!\" Kimison spit out at Rayburn.\n\nOK Rayburn thought that was really weird!\n\n\"You aren't lying there,\" Kimison told him.\n\nDerrick and Hartwell had just arrived back at the palace; Shelby was running checks on all three of their ships to make sure no systems were damaged. \"Sire I have finished analyzing all the information that you and Rear admiral Hartwell retrieved. It was as you suspected Sire the president did have information on almost all of the Nobles some of it is very damning evidence.\"\n\n\"Bring up all if any information on Baron John Talbert I want to see if what I thought about him is true or not.\" Derrick instructed Mary.\n\n\"Yes Sire,\" a moment later a few sheets of paper appeared on the desk in front of Derrick. Reading as quickly as he could Derrick was shaking his head yes.\n\nDropping the papers he looked at Hartwell. \"It was as I thought, the Baron really is an honest man. I'm glad I was right about him, Mary, have you received any word from him since we sent him home?\"\n\n\"No Sire, not as yet though he isn't due for a few more hours with the report.\" Mary informed Derrick.\n\n\"Alright,\" Derrick replied then thought a few more moments. \"You know Hartwell, I think it's about time we visited the Nobles. I did after all promise them I was going to make inspections of their respective holdings. I think it's about time the people saw that their emperor cares more about them than their money.\"\n\nHartwell got a very huge smile on his face, 'oh boy' he thought, 'this ought to really be good!'"
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-25"
}