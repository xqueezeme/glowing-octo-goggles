{
    "title": "Succubus Summoning 205",
    "pages": [
        "Phil awoke to the smell of lavender and spring. Verd\u00e9's soft lips were pressed against his in a kiss. She exhaled and warm, fragrant air flowed back into him like a fresh spring breeze. He felt the embers of his spirit rekindle and spark back into life. Verd\u00e9 looked down at him with her bright green eyes and smiled. Her long silky green hair flowed down over her shoulders.\n\n\"I don't think it's going to hold, Verd\u00e9.\"\n\nRosa leant against a wall, a frown on her cheerleader-cute face. Phil knew this room. He recognised the velvet canopy above him. The two succubi had taken him back to his room in the castle. Pink-tinged light poured in through the narrow window and the air was filled with fragrant perfumes and other musky scents.\n\n\"I think he's broken,\" Rosa continued. \"It's only your energy keeping him going. His is all gone.\"\n\nWith a sinking feeling, Phil realised Rosa was right. The spark was already fading. The warmth from Verd\u00e9's kiss was leaking out of him, leaving behind cold grey ash.\n\n\"I can keep him alive until C\u03adr\u03bcl\u0259a brings Nurse Honey here,\" Verd\u00e9 said.\n\n\"What can she do though?\" Rosa said. \"The warlock has reached his limit. Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n's rules are inviolable.\"\n\nPhil heard clicking sounds, like iron spikes striking hard stone. They drew closer until the door was pushed open and N\u00ffte walked into the room. She was dressed in her usual dominatrix-wear\u2014the tight black leather contrasting with her pale, almost white, skin. Her face was colder than Phil had ever seen it. Expressionless. A mask, perfect in its beauty, carved from ivory.\n\nShe looked at Phil, then from Verd\u00e9 to Rosa. \"Who did this?\"\n\nPhil detected no emotion in her voice, it was as flat and as expressionless as the mask of her face, and yet her words felt like ice condensing on the inside of his ears.\n\n\"An arachne, we think,\" Verd\u00e9 said. \"We found him hanging in a web cocoon in the showers of that silly school.\"\n\n\"Someone sent an arachne to kill a novice?\"\n\nN\u00ffte looked at Verd\u00e9 then Rosa. Her face remained a perfect mask. No emotion escaped its finally drawn lines.\n\nApart from her eyes. They blazed like black holes.\n\n\"Yeah, that's what I thought too,\" Rosa said. \"Not very fair or sporting, is it.\"\n\n\"No, it isn't.\"\n\nPhil ached all over. His hands and feet felt like they'd been welded to weights and he felt as cold as if he'd spent the night lying naked on frozen tundra. That was nothing compared to the coldness he saw in N\u00ffte's black eyes right then. It was the coldness of deep space, of universes collapsing into entropy, of lightless places that had never once felt a sun's caress.\n\nN\u00ffte turned around and walked out of the room. Her heels clicked on the stone floor like coffin nails being driven into fresh wood.\n\n\"Hmm, I was going to have some fun with her later in the Nightshade suite,\" Verd\u00e9 said. \"I think I'll pass today.\"\n\n\"Sensible,\" Rosa agreed.\n\nVerd\u00e9 placed her soft lips against Phil's and blew more warm air into him. The warmth brought succour to his aching limbs, but he knew it was only a temporary relief. He felt like a sack of cold ash.\n\n\"I found her!\" A high-pitched girlish voice came from the doorway as C\u03adr\u03bcl\u0259a, in her usual form of a young girl in a cornflower-blue dress, rushed in.\n\nShe took one look at Phil and her eyes widened and she put a hand to her mouth.\n\nIf a daemon is shocked at how you look then that must mean you're really fucked up, Phil thought. He tried to speak and failed. His tongue felt like a piece of dried-up meat.\n\n\"Poor warlock,\" she said.\n\nNurse Honey walked in behind her, calm and collected in her latex fetish nurse's outfit.\n\n\"Tsk,\" she said on seeing Phil's emaciated form.\n\n\"Is there anything you can do?\" Verd\u00e9 asked.\n\nNurse Honey walked to the side of the bed. She placed one white-gloved hand on his chin and the other around his temples. She turned his head and peered intently into each eye. The bottom hand moved down and lightly stroked Phil's flaccid penis. There was no response. Not even a twitch. A gorgeous blonde was leaning over him, her large round breasts straining beneath tight white rubber, and he felt no arousal at all. He must be dead.\n\nNurse Honey tsked again. She leant over and wrapped her mouth over Phil's in a kiss. Unlike Verd\u00e9, she inhaled and for a brief moment Phil felt like every particle of his being was caught in the grip of some kind of irresistible attraction. Then she released him and he sank back on the bed.\n\nNurse Honey frowned. \"The daemon has left him alive but beyond the reach of most restorative arts. It has been carried out with such precision it must have been a condition of the contract.\"\n\n\"So that's it, he's toast?\" Rosa queried.\n\n\"I can't replenish him,\" Nurse Honey said. \"He's already saturated with my energies. My body would simply absorb him.\"\n\nPhil supposed he'd escaped that fate. L'mactia, the arachne, had got to him first and left him so empty his cock was stone-dead. No erection meant no sex and no sex meant Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n couldn't suck out his soul. Dying terrified him, but he knew it could be worse.\n\n\"Toast,\" Rosa said. \"Shame. He was one of the better ones.\"\n\n\"There's only one thing I can do for him,\" Nurse Honey said.\n\nShe climbed up on the bed and her rubber nurse's outfit squeaked as she straddled him. Phil looked up at the underside of mountainous round peaks covered in clinging white latex and still didn't feel a single twitch. She couldn't do anything to him without sex, could she?\n\n\"There's no need to be afraid, little warlock,\" Nurse Honey said. \"You don't have to die. I'll give you life everlasting...in my body.\"\n\nThe white rubber around her flat stomach started to ripple like waves on a lake. The flesh beneath started to liquefy. Still with the same beatific smile, Nurse Honey started to lower her heavy-breasted body down on him. Where her body touched his withered flesh he felt luxurious warmth and a strange sensation, as if he was sinking into her. It felt pleasant...until he heard the screams of the perpetually damned souls within her, welcoming another to their endless torment.\n\nPhil's eyes widened. \"No...no,\" he said weakly, trying ineffectually to push her off him with even weaker arms.\n\nNurse Honey closed her eyes and gave an orgasmic sigh as she lay on top of him and started to absorb him into her body. Wings that looked as though they'd been painted with glossy white latex unfurled from her back. Her soft breasts pressed against Phil's wasted chest and seemed to melt against him like fresh scoops of ice cream on a summer's day. He felt more warmth and that strange sinking sensation as she drew him up into her suddenly soft body. As comfortable as it felt, he knew the roiling pandemonium that awaited him beneath. He stared at the other succubi in fearful panic.\n\n\"No,\" Verd\u00e9 said. She leant over Phil's head, her pretty face set.\n\n\"You'd rather leave him to die?\" Nurse Honey said. She closed her eyes and her mouth formed an o of pleasure as more of her molten chest covered Phil.\n\n\"It's not about what I want,\" Verd\u00e9 said. \"It's what our warlock wants. Look at him. He doesn't want this.\"\n\n\"Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n,\" C\u03adr\u03bcl\u0259a said, her voice calm and authoritative beyond her girlish appearance. \"We agreed. Verd\u00e9 was his first. She has final say.\"\n\n\"Yes, forgive me, you are correct.\" Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n nodded. She smiled down at Phil. Her molten flesh drew back and reformed into her large, latex-covered breasts. Her wings folded back up and vanished into her back. She sat up and dismounted, releasing Phil from the sticky clutch of her body. Unfortunately she took the warmth away with her, leaving Phil feeling even colder than before.\n\n\"What will you do?\" she asked. \"He doesn't have long.\"\n\n\"I'll take him to my garden,\" Verd\u00e9 said. \"I'll claim him there, if he wishes. If he gets frightened by the prospect of death and changes his mind, I can give him to one of the plants. They'll keep his soul intact in perpetuity. His choice. As it should be.\"\n\n\"Nothing about this is as it should be,\" C\u03adr\u03bcl\u0259a said, again sounding far older and wise than her girlish appearance would suggest.\n\n\"That's the world for you,\" Rosa said. She span a ball of fire on her finger like a basketball. \"Never pans out like it should. Another warlock will come along.\"\n\n\"I wanted to go to Earth,\" C\u03adr\u03bcl\u0259a said, pulling a young girl pout much more in keeping with her young girl appearance.\n\n\"You will,\" Rosa said. She put an arm around her and they walked out of the room.\n\n\"Your garden?\" Nurse Honey asked.\n\nVerd\u00e9 nodded. A look passed between the two succubi and Nurse Honey gave a little nod to signify her comprehension.\n\nNurse Honey leant down close enough for her soft lips to brush against Phil's ear. He felt her warm breath. \"Don't lose what you are,\" she whispered.\n\nShe blew lightly into Phil's ear and it felt like the warm air was diffusing all the way through his body. He felt like a crumpled up paper bag being inflated. Feeling returned to his extremities. A few of the ashes within him sparked back into life. They wouldn't burn for long, he knew, but he felt as though he'd taken a few steps back from Death's Door. It still loomed before him, but he was no longer at the point of toppling over the threshold.\n\nWhy?\n\nNurse Honey planted a moist kiss on Phil's cheek and then stepped back. Verd\u00e9 scooped his emaciated form up off the bed and carried him to the window. In his present state he must weigh about as much as a dry bundle of sticks. She hopped up onto the ledge.\n\n\"Foolish girl,\" Nurse Honey said behind them as Verd\u00e9 launched off into the swirling pink sky.\n\nPhil felt scented wind rush through his hair as Verd\u00e9's wings carried them both over the castle grounds and then above the lush, verdant growth of her garden. Phil glanced down into a tangled riot of brilliant greens. Near the castle the plants formed an exotic, but seemingly well-tended garden. Further away and the ordered hedgerows and beds blurred into a knotted jungle as the grounds became wilder and darker, until they'd left the garden behind and were now flying over an ancient and wilder place.\n\n\"I haven't given up,\" Verd\u00e9 said. Her face was cryptic, impossible to read. \"I don't think you have either.\"\n\nPhil wished his body had picked up the same memo.\n\nVerd\u00e9 flew over a primordial section of the forest. The foliage was so dense here it formed an impenetrable green carpet. Phil couldn't even see how far the lightless depths of the forest floor lay beneath them. The ground rose ahead of them. Phil couldn't tell whether he was looking at a mountain covered in trees or a section of forest so ancient the trees themselves had attained the form of living mountains.\n\nVerd\u00e9 descended right into the primeval heart of the forest. The canopy parted for her as if she was an irresistible gale. Once through the dense tangle of foliage her wings opened out behind her, slowing their descent until they landed gently on the forest floor.\n\nThis wasn't a garden, Phil thought, it was a jungle. Giant twisted trunks loomed over them. Untamed and unmanaged growth sprouted all around them in verdant profusion. Some of these trees looked as though they'd been around to witness the birth of creation. Despite the oppressive weight of countless centuries, the air was filled with a thick stew of fecund odours, as though the plants at heart were still as sprightly as spring saplings.\n\nVerd\u00e9 stood before a massive clump of tangled trunks thicker around then the width of a car. Phil watched in awe as thick dark wood parted with creaking sounds. Thick boughs that previously seemed as immovable as mountains untangled and pulled aside. Shafts of sunlight pierced the canopy beyond and revealed a clearing as silent and solemn as an empty cathedral.\n\nWhat Phil saw took his breath away. In the centre of the clearing a gigantic white statue rose up out of the forest floor and towered up to the green canopy far above them. Verd\u00e9's wings unfurled and\u2014still carrying Phil\u2014she took to the air again. She spiralled up around the statue with languid flaps. \n\nPhil saw the statue was of a woman, naked if it hadn't been for the thick vegetation that crawled over the ancient stone like ivy. The verdant growth clothed the statue in a living dress, as if the forest extending as far as the eye could see in all directions was the train to a bridal gown worn by a god. \n\nThey flew higher and Phil saw the vast hemispheres of exposed stone breasts. The statue stood with arms outstretched and palms turned upwards toward the sun. Phil was struck by how much the tranquil face of the statue resembled Verd\u00e9. Not her exactly, but maybe one of her ancestors. Did succubi have ancestors?\n\nVerd\u00e9 looped around the statue and then swooped down towards the space between the stone curves of the statue's naked breasts. Vegetation had climbed up the cleavage and grown outwards to form a natural throne positioned between the great stone breasts like a pendent. Verd\u00e9 sat him in that seat. Then she straddled his lap and held him close for a long kiss.\n\nPhil felt more embers flicker back to life within him. They would not burn long, but they would burn bright. Was that Verd\u00e9's plan, to claim him with one final moment of passion beneath the stone gaze of one of her hallowed ancestors?\n\nVerd\u00e9 broke off the kiss. Gracefully, she dived backwards and swooped back into the air with a few beats of her leathery wings. Phil watched as she landed on the outstretched palm of the statue's left hand. There she crouched, her head bowed, almost as though she was praying or making supplication to an ancient deity.\n\nPhil was starting to get the unwelcome suspicion he'd been left here as an offering when the living chair beneath him suddenly unravelled. With nothing left to support him he plunged down into the stone channel of the statue's cleavage. The dizzying terror of his fall was quickly replaced with more sinister concerns as he realised his descent was being guided. Vines and creepers clutched at him, preventing him from falling too quickly. He fell flat onto a giant green leaf that folded around him like a hammock and broke his fall. The leaf sagged downwards and spilled him out onto another leaf below it. Beneath the living dress of the statue Phil tumbled from leaf to leaf until he was deposited in a long, curved blade that spiralled down like a chute.\n\nPhil saw what waited for him at the bottom. It was a green-skinned girl with boobs the size of ripe watermelons. Long green ivy formed her hair and she sat on the rim of a bulbous green pot with a lurid pink interior.\n\nOne of Verd\u00e9's plant girls. With the last of his dwindling strength he scrabbled at the green chute, trying desperately to check his descent. The surface of the leaf was waxy smooth. Phil couldn't grasp hold of anything. He tumbled out of the chute and was deposited on another flat leaf that began to tilt downwards like a trapdoor.\n\nThe girl beneath him wasn't sitting on the rim of a pot, the bulbous structure was the lower half of her body. Some kind of pitcher plant hybrid, Phil realised, although the entrance to her pot was lined with a thick cushion of moist pink flesh. It contracted and dilated hungrily as Phil slid inexorably towards the waiting pit.\n\nNo Verd\u00e9, Phil thought. He knew what she intended for him now. Verd\u00e9's garden was filled with carnivorous plant girls. One had nearly captured him when he'd tried to escape the castle. Verd\u00e9's plants caught wayward souls...and held them for eternity.\n\nThat was no better than being left to Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n.\n\nHe dropped. One foot landed on the cushion of flesh lining the entrance to the pot, the other fell right inside. Phil felt a thick syrupy liquid squish between his toes.\n\nDigestive juices? he thought with a chill.\n\nHe tried to tilt far enough he'd overbalance and tip over the edge. The plant girl was positioned right at the crotch of the statue. Phil doubted he'd survive the fall to the ground below, but death was probably preferable than what the plant girl had planned for him.\n\nHe didn't succeed. The girl already had her arms around him in an embrace. The entrance to her pot gaped wider and now his other foot was inside.\n\n\"Mmm, what piece of meat has fallen into \u00dbm\u016bn \u0160ag's lap?\"\n\nPhil's toes scrabbled against the walls of the pot. The lining was soft, spongy and dripping with slippery fluids. He sank deeper. His feet, ankles and then his calves were submerged in the warm, gloopy liquid pooled at the bottom of her pitcher. More fluids, sickly sweet-smelling, were exuded from the soft meat lining the walls and dribbled down to join the rising level of in the pot.\n\nNo!\n\nPhil's panic found an extra reserve of energy. He clamped his hands against the rim of the pot. He was inside up to just above his waist, but with his arms braced was unlikely to fall further.\n\n\"Ooh, a live one,\" \u00dbm\u016bn \u0160ag said. \"It's so rare they give me a live one.\"\n\nThe soft meat lining the entrance pressed around him as the maw contracted. The stretchy bag beneath him expanded as \u00dbm\u016bn \u0160ag tried to suck him all the way in. Phil gritted his teeth and held on even though his stick-thin arms trembled from the exertion. His feet kicked out inside her.\n\n\"And a wriggler,\" \u00dbm\u016bn \u0160ag said with an amused smile. \"I know just how to deal with wrigglers.\"\n\nThe cushioned entrance closed around his waist. Phil's cock and crotch rubbed against moist pads of flesh as the pitcher plant girl turned and manipulated his body into a more comfortable position for her.\n\nAnd him.\n\nHis jaw dropped open as an opening opened up in the plush lining and sucked his cock into a tight tunnel packed with soft undulating flesh.\n\n\"I fuck the fear right out of them.\"\n\n\u00dbm\u016bn \u0160ag wrapped her arms around him and hugged him tight enough for the round swells of her breasts to press against his naked chest. She controlled his movements with squeezes of her pot. His hips moved back and forth and his hardening cock plunged in and out of the dripping opening just beneath the lip of her pitcher. Every so often she would give his cock a teasing little squeeze, provoking another surge of blood to race to his crotch as his erection expanded.\n\nA spell. It had saved him before.\n\nPhil whispered the start, but was unable to finish as \u00dbm\u016bn \u0160ag grabbed the back of his head and smothered his words in a soft, sticky kiss. He tasted sugar\u2014a sweetness like the ripest fruit from the finest orchard. \u00dbm\u016bn \u0160ag's throat moved and Phil's mouth was flooded with delectable nectar. It slid down his throat and spread a pleasant warmth that left Phil's muscles feeling all floppy and relaxed.\n\nNo, no. Fight it.\n\n\u00dbm\u016bn \u0160ag pressed him up against her inner lining. His hard-on plunged deep inside her and she squeezed it with slow, gentle undulations. Phil would have come if L'mactia had left him anything within the dried-up remnants of his balls.\n\n\u00dbm\u016bn \u0160ag broke off her nectar-filled kiss and looked at him with concern on her face. \"Why meat, you're barely more than dried-up sticks. This will not do.\"\n\nPhil sank deeper into the pot and she pushed his head down until his face was sliding against the smooth skin of a her bulging breasts. She placed hands on either side of his head and moved him until the rubbery tip of one of her nipples slipped between his lips. He tasted the sweetness of the liquid her nipple exuded between his parched lips.\n\nNot again, Phil thought. Couldn't they just kill him in a way that at least preserved some of his dignity.\n\nOne of \u00dbm\u016bn \u0160ag's arms formed a bar behind his neck. Her other hand was placed on the back of his head and kept him pressed up against the soft curve of her breast. Her nipple squirted a stream of liquid into his mouth. Phil drank. It was that or drown. Then his lips were moving of their own accord, sucking on her teat. It was the taste\u2014delicious like a blend of fresh, exotic tropical fruits. He had to have more.",
        "The cool liquid trickled through his body, rehydrating his tissues and restoring his energy. It flowed through him like a bracing waterfall.\n\nAnd like a waterfall it eroded the substance of his spirit, dissolved it and washed it down to collect in his balls.\n\n\"Yes, I knew there was still some left inside you,\" \u00dbm\u016bn \u0160ag said.\n\nHer hands roamed over and caressed his back while he suckled at her breast. The fleshy pot swelled and pulsed with slow, obscene throbs. A dense cloud of sweet perfume welled up around him. Phil inhaled and was lost. His fear melted away and the last remaining tension left his muscles.\n\n\"Relax, there's no escape now, meat,\" the plant girl said, her voice gentle. \"Relax and enjoy the pleasure of these last moments.\"\n\nHer soft hand glided up and down his spine. The thick liquid sloshed around inside the pot as it pulsed like the slow throbs of a heart. The warm currents tickled pleasantly around Phil's legs, rising up past his knees now as more fluid was exuded out of the fleshy walls. Another cloud of perfume welled up to surround him. The heady fragrance filled his nose. There was another odour beneath it, one the sickly sweet scent couldn't mask\u2014unpleasant, like rotting meat. He continued to suckle at her breast, craving more of the sweet juice even as it hollowed him out from the inside.\n\n\"Oh yes, meat,\" \u00dbm\u016bn \u0160ag said.\n\nShe guided his erection back into the fleshy opening in the wall of her pot and moved him back and forth. Sticky nectar was welling up from within her. Every time Phil plunged inside, a thick syrup bubbled out with a squelching sound that was both disgusting and arousing in equal measure. An itch had started up in his cock and could only be assuaged by plunging it deep into her moist depths.\n\nThe entrance to her pot, lined with cushions of soft flesh, closed tightly around his waist. The pot was filled with warm fluid now. He felt currents flowing between his legs and tickling through the hairs on his scrotum as the pot swelled and ebbed. She squeezed the entrance closed tighter. Phil was pressed up against her moist inner wall, his cock buried in her soft flesh right up to the root. The sticky tunnel gripped his erection and gently sucked.\n\nPhil's mouth left her teat. His head and arms fell back and he let out a groan as he came inside her.\n\n\"Yes, let it out inside me, let it all out.\"\n\n\u00dbm\u016bn \u0160ag hugged him tight to her considerable chest. The ivy she had as hair cascaded over Phil's shoulders. The fleshy walls of her sex squeezed his gushing erection with gentle pulses. The fluids she'd loaned him, the ones that had dissolved the bedrock of his spirit before pooling in his balls, flowed from him, taking pieces of his soul with them.\n\n\"That's it. Let me flush it all out of you. You don't have to be tethered to this husk of flesh anymore.\"\n\nPhil's buttocks quivered back and forth. He poured semen out of his throbbing penis. She drank it as easily as he'd drank the sweet juice from her swollen breast.\n\nPhil heard the leathery flap of wings. Something landed on a branch behind and above them. A shadow fell over them.\n\n\u00dbm\u016bn \u0160ag relaxed her embrace. Phil lolled weakly in her arms. He felt weird and woozy, all sloshy inside. His knees felt as wobbly as overdone pasta and his feet...they felt sort of diffused. He saw Verd\u00e9 perched above them on one of the branches. \u00dbm\u016bn \u0160ag looked up at her and a moment passed between them. Surprise flickered in the plant girl's eyes. She nodded.\n\nShe looked down and gently ran a hand through Phil's hair. \"I thought you were meat, but the Er\u00e9\u0161 N\u016bkric thinks you might be more.\"\n\nHer vagina relaxed and released his cock. A last few spurts dribbled from him and the ejaculation came to a halt. He fell back and rested against her cushioned walls. The flexible green pot expanded and Phil felt himself being drawn down into it. The moist cushions of flesh brushed up his sides.\n\nOh no. Phil started to squirm and wriggle, to no avail. The last of the energy gifted to him by Verd\u00e9 and Nurse Honey was spent. He had nothing left. The soft pads lining the inside of the pot, still exuding warm fluids, brushed up over his nipples. Her pitcher was completely filled with her juices. It was like sliding into a warm sticky bath.\n\n\"Maybe. We'll see,\" \u00dbm\u016bn \u0160ag said.\n\nHer eyes closed and she gave a little moan as the elastic walls of her pitcher expanded and dragged the last of Phil inside her. He looked up and saw \u00dbm\u016bn \u0160ag smiling down at him in a circular view of the world that shrank and shrank until the pot closed shut above him.\n\nDarkness.\n\nPhil floated. Gentle currents ebbed and flowed around him. The world pulsed as if contained within a vast, slow-beating heart. This was his universe. His body was...he wasn't sure he even had a body anymore, just unravelling strands of consciousness suspended in a soup of warm liquid.\n\nIt was peaceful. None of the stress or pain of the world could reach him inside here.\n\nWas this it? Were these his last thoughts as the giant pitcher plant digested him?\n\nMaybe.\n\nThe thought wasn't his.\n\nMaybe not.\n\nHe sensed the presence of \u00dbm\u016bn \u0160ag. His mind visualised her face, but it was more abstract, as though the strands of her being were growing through and tangling with his.\n\nI can escape?\n\nHe would have to do it soon, before her juices digested him fully.\n\nWhy would you want to? Isn't it comfortable in here? Aren't you at peace? I will keep you safe from all the pain and suffering out there. You can know bliss within me forever.\n\nThat sounds an awful lot like death.\n\nAll things die. That is the cycle of life. Flesh, energy, thought, spirit; all come apart to be reassembled anew. It is nothing to fear.\n\nEasy for you to say. You're not the one having their flesh reassembled into someone else's.\n\nYour flesh is already mine.\n\nHer thought chilled him. He knew it was true. He would have thrown up had he still a stomach to vomit with. He was gone. Just disembodied thoughts within a carnivorous plant. How long before they faded away.\n\nSo this is it?\n\nMaybe.\n\nMaybe?\n\nI am \u00dbm\u016bn \u0160ag, verdant womb of the D\u0101r\u00fb Qi\u0161tu. Through me the cycle turns. That which reaches the end can be returned to the beginning. If that is what you truly desire.\n\nYes! Phil thought. I'm eighteen. There is so much for me to still experience. To achieve.\n\nAs you wish. I will return your flesh and resculpt your body.\n\nThe liquid pulses around him grew faster and stronger. A clay figure rose up and formed from the soup. Its features were rough, undifferentiated. \u00dbm\u016bn \u0160ag stood behind it. Her hands clutched the shoulders and her pale green face smiled out from next to a blank clay face. Phil looked on both as though he was a mirror.\n\nYou don't have to take the same form as before. I can sculpt your flesh anyway you desire.\n\n\u00dbm\u016bn \u0160ag brought her hands up and began to work the rough clay of the figure's face.\n\nI can make you handsome...\n\nShe ran her hands over the featureless face. Revealed beneath was a face that looked like a combination of the best features of Brad Pitt and Ryan Gosling\u2014a movie-star face to set millions of teenage hearts aflutter. A face to talk any woman into bed.\n\nOr rugged...\n\nThe chin expanded. Bones thickened. Determined eyes stared out of a craggy face capable of staring down mountains. An intimidating face. One most people would know better than to antagonise.\n\nOr why not something completely different. You don't need to return as a man...\n\nHair erupted from the top of the clay figure in long silky tresses. Features softened, shifted, became the elegant features of a fairytale princess. He/She was beautiful. A face for men to fall in love with.\n\nThe face stuck for only a brief moment before \u00dbm\u016bn \u0160ag's hands were active again.\n\nLips thickened into an insouciant pout. Cheekbones sharpened. Eyes smouldered. He/She radiated the sultry glamour of a sex siren. A face that filled men's dreams in the dark, sticky hours before dawn.\n\nYou can be anyone you desire.\n\n\u00dbm\u016bn \u0160ag's hands were a blur over the formless clay. Reshaping. Reforming. The clay was in a constant state of flux. He/She watched in confusion, paralysed by an infinite array of choice. Thousands of faces, millions, flickered by, all of them he/she and none of them he/she. \u00dbm\u016bn \u0160ag's hands moved faster than the eye could follow. Ripples flowed across the clay figure like waves across a channel, shaping, sculpting the face as if it was fresh muck.\n\nSo many to choose. He/She couldn't pick. And now the head was starting to come apart, the clay becoming molten, liquid, unable to hold any form. The face was subsiding. Clumps were sloughing off in chunks. The figure was collapsing back into the soup.\n\nNo!\n\nI'm Phil Rowling.\n\nThe dissolution stopped, began to flow in reverse. \u00dbm\u016bn \u0160ag took her hands away. They were no longer needed. The clay moved of its own accord. It flowed and accreted into clearly differentiated features. The face that stared back at Phil was the same one he saw every morning in the mirror. It wasn't a particularly notable face, but it was his. He owned it and no one else did.\n\nThe face was gone. Phil realised he was staring out of its eyes.\n\nHe heard \u00dbm\u016bn \u0160ag giggle. A hole opened up in the darkness and verdant-tinged sunlight shone in Phil's eyes. The fleshy walls squeezed around him and he was propelled up and out, ejected from a womb of flesh and still covered in glistening strands of sticky juices. His world flipped as he was spat out into the bright sunlight and earthy humidity of the forest. He tumbled down through the branches, part falling and part sliding, until he crashed into some supple green branches and was bounced out into open space.\n\nA shadow fell across him. Verd\u00e9 plucked him out of the air. She wrapped her arms around him and rained hot kisses down on his lips, brow, cheeks and neck. They glided to the floor and came to rest in a soft mossy hollow. Verd\u00e9 wrapped her wings around him and continued to kiss him with wild abandon. She hugged him tightly and rubbed her cheek against his.\n\n\"Euw!\" she said, rubbing a hand over his naked chest and coming away covered in thick mucus. \"You're all icky. Let's take you back to the castle and get you cleaned up.\"\n\nto be continued..."
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "warlock",
        "magic",
        "vore",
        "pitcher plant",
        "plant girl",
        "absorption",
        "monster girl",
        "plant"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-205"
}