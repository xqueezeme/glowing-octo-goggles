{
    "title": "Duplicity Ch. 05",
    "pages": [
        "Philip rushed to his bedchamber and shut himself in. He held the door closed with both hands for a moment and leaned his whole body against the sturdy carved door to push out the snarling, whirling demons sniping at his heels. For a brief moment, it as quiet in his room, except for the thundering of his own heartbeat in his chest. Philip dragged a shaky hand over his face and felt just how damp clammy and stubbled his skin felt. His eyes burned feverishly with madness and fear. \n\nSuddenly he thought he heard a ghostly hiss in the darkness: \"You bastard! You fucking bastard!\" \n\nHe was going mad! The voice seemed so real he could almost feel the chill of a spectral breath against his face! But he knew the voice was merely in his head. It was manifestation of his own fear, guilt, borne of his dastardly misdeed! \n\n\"My God, what have I done?\" he cried out. With a shaky grasp, Philip slumped against the door and slid down the length of it till he dropped down on the floor with a thud. He drew his legs towards him and dropped his head between his extended arms propped on his knees. \n\nHe emitted a long, deep, audible sigh along with a name: \"Evelyn!\" Then he uttered a small, strangled cry that caught in his burning lungs and made him gasp for air. It was the sound a condemned man, full of guilt, might utter. For that was what he was. Guilty. And condemned. The demons in his conscious snickered cruelly at his anguish.\n\nWhy did he do it? Oh God, why?!\n\nPhilip rolled his head to one side against the door and thought he caught a hint of her musky sweet scent still lingering on his lips, on his stubbled chin. It was followed by a stronger, familiar, smell: clean, strong and masculine. It was the smell of Lord Davenport!\n\nPhilip gave a small shriek and crawled on his hands and feet away from the door, fully expecting his cousin to come dashing in demanding Philip's blood!!! But his door remained firmly shut. There was no one there! Then, Philip realized with a pain in his chest that he was still wearing Lord Davenport's clothes! \n\nHe rose to his feet and quickly tore off the jacket as if it was suddenly crawling with ants and flung violently across the room. The cravat and vestment soon followed. For a moment Philip could breath again as he stood in his own shirt and trousers looking at the discarded clothing, crumpled into a heap, like a man who had sudden awoken from a horrible dream. \n\n\"I'm a pitiful, disgusting creature,\" he muttered to himself. \"I have cursed myself in God's eyes, I know it. I have betrayed my conscious. Violated a blameless woman and proved myself unworthy of friendship and anyone's good opinion of me. \"\n\n\"You are every bit of the man as Lord Davenport,\" a lyrical feminine voice said in his head. Some lady had said those words to him earlier in the evening, for Philip couldn't recall who it might have been. Could it have been that very night? It all seemed so long ago. \n\n\"You're a scoundrel!\" another, more malevolent voice taunted him. \n\nPhilip grounded the heels of his palms against his shut eyes to shut off the images flashing before him. He could not force out the vivid memories of what took place only moments ago.\n\nAn image of a sleeping Evelyn, lying so vulnerable in her bed, flashed before him. He had entered her room somehow and stood at the foot of her bed as she slept. Even in the darkness her skin seemed to glow. Her dark brows formed perfect arches over the dark ovals of her eyelids, her long, thick black lashes were two dark fans resting on her cheeks. \n\nHe felt he knew every line, every curve of her face as he had studied that face everyday in all these weeks she's been at Davenport House. Even chance he had he spent it with her. They shared an occasional meal together, or read together. Once, they even spent several hours deep in conversation together as only the truest of friends would. Philip had to keep reminding himself that she was meant for his cousin, Lord Davenport. Yet those moments he spent with her were some of the best moments of his life! She wanted to know all about her future lord and Philip was only too happy to answer all her questions just to watch her delightful expressions. She may be asking after her betrothed, but Philip felt as though her blushes and lurid smiles were for him. Philip brought her books and sheet music and anything else he thought might amuse her. And she was always so pleased... so pleased with his gifts... so pleased with his attention. There were times he felt certain she returned his feelings too.... Then he would quickly chastise himself and remind himself she was to marry his cousin.\n\nYet, he really couldn't recall how he came to be there, hugging a bed poster at the foot of the bed, watching her chest rise and fall with every breath.\n\nThe voices of his conscious cried out for him to leave! At once! He should not be there, lurking in the darkness like some fiend over his kinsman's fiance. \n\n\"But was there ever a creature created more perfect than she?\" he argued back to his conscience. \"Wasn't she created to be admired? To be loved? Not to languish in drudgery, like some fairy princess waiting on her inattentive betrothed.\"\n\nThat voice of reason grew more and more muted by the sounds of his own blood pumping and rushing through his veins as he watched her sleep. His alcohol-fueled desires took over and he placed a knee on the bed! What if she wakes up and screams down the house? Just look at her thought, so utterly helpless and his for the taking... No one would ever know if he was careful.... \n\nPhilip's limbs moved of their own accord. He was a mere observer in his own body when he climbed into her bed and crawled over the sleeping Evelyn. He touched her body, felt her heat and kissed her exquisite lips. He kissed her soft, generous curves, down to her tangy, intoxicating womanly thighs he had only dreamt of till that moment. He wasn't hurting her. He would never hurt her. He merely wanted to bring her pleasure. \n\nShe cried out in pleasure and flooded his mouth with her exquisite taste! He, Philip Mallory, brought her pleasure!\n\nThen she uttered a name!\n\n\"My lord,\" she had moaned with Philip's tongue lapping at her silky, hot little cunny. \"My lord....Davenport!\"\n\nThat had the effect of a bucket of ice water to rouse Philip. She called out for her lord and master, not Philip! She called out for Lord Davenport because that was who occupied her thoughts and dreams!\n\nReason and shame returned like a cannonball shot right into his chest and knocked him back off the bed and sent him scrambling away as fast as he could. \n\n\"Like a thief in the night,\" that ghostly voice hissed in his head. \"You stole in her chambers! She's not yours to have and you nearly spoiled her innocence and forever! They trusted you! They all trusted you! You worthless scoundrel! Knave! Cursed!\"\n\nPhilip bit back a regretful moan as he sat in his dark bedroom, recalling how fast he had fled her rooms. He felt as though his own guilt and shame had taken the form of demons to chase him to the very gates of hell! When Philip finally stopped, to clear his head and calm himself he realized he had gone the length of the house and had somehow ended up on the stairway landing. It was apt that he had ended up there, caught between stairs that led back up to bedchambers, and stairs that disappeared into the darkness below. \n\nHe ought to descend those stairs and make his escape in the middle of the night, never to be tempted again by his weakness for Evelyn. Perhaps, in time, he may even salvage what was left of his honor. He should simply walk out the front door into a certain exile and never return. But, Philip knew he was too cowardly to face an uncertain future all alone in the world without his cousin's love and protection. Yet... how could he face his family, his own image in the mirror knowing what he had just done? How could he ever face Evelyn again, live under the same roof as her, after he had violated her so... And forever remember the shape of her naked thighs, her hot, silky sex? \n\n\"What are you doing up there, Philip?\" a deep, smooth, velvety baritone asked.\n\nPhilip felt every hairs stand up, and goosebumps cover his body in utter terror! \"J-John! Cousin!\" Philip croaked in response at the tall looming figure of his cousin who suddenly materialized at the foot of the stairs below him. \"Y-you're home? I didn't expect-- that is, what---?\"\n\nThe silhouette of Lord Davenport's tall, imposing physique emerged from the shadows cast by some flickering candles behind him. As he moved closer to the bottom of the stairs, his steely pale eyes glittering under the pale moonlight cascading down from the skylight above. He had changed out of his evening wear into a white shirt, dark trousers and riding boots that displayed his muscular physique. The Marquess was terrifying to behold, so full of restrained animalistic intensity that might unleash at any moment. Or was that just Philip's own imagination running wild? For the first time in his life Philip was frightened of his cousin. So deathly afraid!\n\nHow long had Lord Davenport been standing there so eerily calm? Did he know what Philip was up to? Did his lordship suspect anything was amiss? Philip could almost imagine how he must look to the other man, disheveled and out of breath, still wearing the clothes he had borrowed from Lord Davenport. What must his cousin think of Philip at that moment? Could he see the sweat running down Philip's forehead or how Philip's lips trembled? Was there a trace of Evelyn's scent still clinging to him? Philip felt almost certain his guilt must be written all over him. \n\n\"I had some documents here,\" Lord Davenport replied evenly, starting up at him from beneath his heavy dark brows with his inscrutable gaze. \"Will you join me? The trading posts have sent back their reports and I'd like to compare it to your surveying notes.\"\n\n\"I'd rather not,\" Philip said as steadily as he could. He attempted a smile that was more of a grimace. \"Rather tired, you see. Long day. I think I'll go to bed.\"\n\nLord Davenport's expression didn't change as he studied Philip. Philip felt certain those icy-blue eyes saw straight into his guilt-riddled soul and saw everything. Was that pain and betrayal he sees or was Philip's mind playing tricks on him again?\n\n\"Yeees....\" Lord Davenport drew out the word in a slow hiss after a long, tense, moment. \"You do look rather peaked ol'man. I'd say you haven't been well at all lately. Get a good night's sleep then. I'll see you in the morning.\"\n\nSo Philip escape to his chambers with a feeling of dread and foreboding. That's how he came to slumped against the door, till his legs gave way under him. At any moment now he half expected Lord Davenport to come crashing through that door and pummel him roundedly as he well deserved.\n\nA wave of nausea took ahold of him and Philip barely made it to a nearby chamberpot before he emptied the entire content of his stomach into it. He heaved and retched till there was nothing left but an excruciating pain in his head, his throat and all his limbs. What brought him to this state? How did he, always so temperate, end up on his knees over a sick-filled chamber pot? He wiped his lips and fell back on the floor as he tried to piece together the events of that day. \n\nNo! \n\nHis hell had been brewing for some time now! \n\nStill unable to get up off his knees, P slumped down to the floor as he struggled but failed to recall how or when exactly he heard of his cousin's betrothal to Lady Evelyn. \n\nMore memories came whirling back. There were vivid images, but others were murkier and imperfect. He recalled having just returned to the city on an errand for his cousin. It was as though, during the short time he was away, the whole world changed. He remembered feeling a numbness spread over his body and moving about like a man lost at sea that was only broken up a bit after he reached the bottom of a bottle of wine or Scotch. He recall offering his congratulations and saying all the right words. \n\nWhat did he feel, though? Was it injustice, as he had been the first to see her, to set eyes on her and called her to the attention of his cousin? No! It couldn't be, as Philip knew that his uncle, the Duke, and the King had made this match for reasons that had little to do with either parties involved, and even less to do with Philip. Yet he couldn't shake the feeling that had Lord Davenport wanted to he could have said no without too much fuss, if for no other reason than to respect Philip's feelings. But Lord Davenport did want Evelyn, didn't he? At least in the most carnal way as Philip had witnessed with his own eyes at the Earl of Warwick's tea. \n\nSo when his sister, Charlotte asked him: \"Why haven't Cousin John been to see Lady Evelyn or properly introduced us?\" Philip didn't have an answer because he truly didn't know. Or more to the point, he didn't care to know. \n\n\"Our cousin does things his own way,\" was Philip's excuse to his sister.\n\n\"But at least you know his thoughts on how he wants things done.\"\n\n\"Not me!\" Philip protested. \"You know him as well as I. He's hates to be forced into anything and he wants to exercise some semblance of control I'm sure. Allow him this bit of self-indulgence. He'll go to her when he's good and ready. We ought to respect his wishes...as we do in all things...\"\n\n\"But she's to be his wife!\" Charlotte argued. \"This isn't some silly game! We're to be family!\"\n\nWhat Philip didn't tell his sister was that he suspected his cousin had other dalliances. It wouldn't do to say such things to a gentle woman like Charlotte. Besides, Philip had no proof. He never had any sign that there might be a mistress aside from his lordship's occasional unexplained disappearances for a few hours. After which he would re emerge smelling faintly of perfume and powder. Unlike most men, his Lordship never boasted and would never give a lady away. Philip hoped to God he was right. Perhaps.... Just perhaps his cousin had a secret love stashed away somewhere that he would be willing to cast Lady Evelyn aside over! \n\nThen came the evening when they happened on a Evelyn's attack! ... It was the worst moment of Philip's life. To hear her blood curdling screams and to see that vile creature on top of her...! Philip never felt more rage or helplessness than when they brought her, listless form back to Davenport House. Then he suffered a lifetime of agony as he stood silently behind his cousin as they both anxiously held vigil over her when a fever took hold of her poor unconscious body. \n\nThe physicians came and went. \n\nThere was little for either of them to do but watch over her lying so still and frail, her little face ashen in the great big canopied bed in the best room in Lord Davenport's house. It nearly broke Philip's spirit to watch Lord Davenport, seated by her bed, with Evelyn's limp little hand pressed again his grim, sunken cheek, whisper softly to her; a right Philip desperately wished was his.\n\n\"I never thought I'd see the day,\" Charlotte confided to Philip, when they were alone, her chest swelling with happiness. \"He's shown such care! Such care! I do believe he loves her. At last!\"\n\n\"He barely knows her!\" Philip retorted more sharply than he intended and he was immediately sorry for it. \"I just think it's premature to say how he feels about her one way or the other. Just a day ago, he couldn't bring himself to call on her. Clearly he's had a shock. We all have.\"\n\nHis older sister gave him a pitying look. \"A wife can make or break a friendship depending on how she feels towards that friend, my dear brother. Life won't be the same between you once he's married. My advice is to make friends with her and things won't have to be too different for you.\"\n\n\"I just think John would show the same kind of concern for any female in distress, let alone one who will be his,\" Philip sputtered out. \"He's no romantic you know but he does have some old fashioned notion of chivalry after all.\"\n\nJust when Evelyn's fever broke and she started to regain consciousness again, Lord Davenport had a few thing packed and moved to the bachelor quarters at his club. \n\n\"It's easier to conduct my businesses there without all the distractions,\" he had explained to Philip tersely. \"I leave everything to you and Charlotte.Whatever Evelyn wants... see that she gets it.\"\n\nPhilip merely nodded. He was of two minds when it came to his cousin's request. He relished the moments he spent with her, when he pretended that Davenport House was their home and they were man and wife. But he found it harder and harder to face her without taking at least two fingers of whiskey least he should tremble and foolishly give himself away. Whiskey and wine became his constant companion when he went to bed, miserable and alone each night. \n\n\"You ought to see her,\" Philip finally said to Lord Davenport earlier that evening.\n\nThey were on their way to join their friends for supper then for a long evening of cards. Several lords with favors to ask of the Marquess were anxiously awaiting the cousins to join them. \n\nLord Davenport arched a brow quizzically at him as they marched down the long glittering corridors. \"At the moment I've neither the time nor the capacity to indulge her. I'm suddenly very important to men I've never heard of a week ago. I think many of them expects me to have have the king's ear now.\"\n\nIt was true that some new crisis or utter matter arose with each new day. More ministers from America were arriving each day to put forth their case for more support to their causes. France, Spain and the Prussian territories were still in constant turmoil. More and more loans were put to the aristocracy to support some scheme or speculation either in the northern manufacturing cities or in trade abroad. All the while the streets of London appear even more crowded with new arrivals from the country looking for work. There were mini-riots in the streets from the previous by-election results and from the defeat of several reform measures. Somehow ever matter was put to the Marquess of Davenport. At every moment someone was bending his ear to this cause or that scheme. \n\n\"I don't see how things are different now from what it was before. They've always valued your opinion and needed your money. You've always managed quite well.\"\n\nLord Davenport nodded his head to a few gentlemen they passed, never once breaking his stride. \"Quite,\" he said over his shoulder to Philip. \"There's just so much more to it all. So much more of everything. I can't fully explain it.... I'll be glad to be back in the country, though I suspect I won't have much rest there either. We may even have to keep Davenport House open.\"\n\n\"You could miss a few hands tonight to spend an hour with her,\" Philip reasoned. \"You ought to see her before your wedding day.\"\n\n\"I will see her soon enough,\" \n\nHenry Wilkes chose that moment to join them. \"Soon enough indeed! No need to tie on those apron strings just yet. \"\n\nLord Davenport inclined his head slightly to acknowledge the smaller, auburn-haired man's bow even as he wondered where Henry found the courage to speak to him with such familiarity. \"I hear you've recently taken the plunge yourself. To an heiress? My congratulations, Henry. I know how much you needed that.\"\n\nHenry Wilkes wasn't put off by the slight dig as he looked pleasantly from Philip to Lord Davenport. \"Thank you my lord! Not married yet so I'm savoring every last moment of freedom I can. My bride to be was raised in a convent you see. Plain little thing with a most nervous disposition. Her momma has already made it clear that I'm expected to curb all my worldly appetites once we're married, so that I don't frighten the poor lamb. So I say you are right to do all you can before matrimony binds you up!\"",
        "Lord Davenport cast his glance at Philip and rolled eyes in annoyance. Neither men thought much of Henry Wilkes. Henry bore the title of Honorable and came from a distinguished old family, but he had a cunningness about him.\n\n\"Well, good luck to you Henry. Take care you don't loose all your bride's fortune before it's truly yours,\" Lord Davenport said dismissively.\n\n\"Well, I shan't stay long, sadly\" Henry replied with a broad grin, not at all put off. \"Shame how marriage, even an impending one, takes all the fun out of life. \"\n\n\"I think it's a fine thing,\" Philip interjected passionately. He was annoyed by Henry Wilkes's interruption and was glance to. \"Marriage is a fine thing for every man to endeavor.\"\n\nHenry Wilkes chuckled as he picked up his pace to keep up with the cousins' long stride. \"Well, it's a necessary thing at the very least. I assure you you'll feel differently when the yolk of inevitability is weighing down upon your shoulders, Philip. It's a lot of responsibility on a man, especially when straddled with a bride who knows nothing useful of the world. There is such a thing as being too chaste in my opinion. But one must do what one must do!\"\n\n\"Too chaste!\" Philip declared, somewhat bemused. \"What a thought! A lady can never be too chaste before or after marriage. It's her father's, then her husband's sacred duty that she remains so--!\" \n\nPhilip saw the quick, knowing glance that Lord Davenport and Henry Wilkes exchanged, as though some secret knowledge passed between them. Lord Davenport coughed into his fist but Henry smirked openly. Suddenly Philip felt like the intruder. They were mocking him! Philip felt quite hot and foolish even if he couldn't completely understand why. \n\nHenry shrugged as he glanced up at Lord Davenport's noble visage, scanning the Marquess' profile. \"Well I would certainly agree that it's a husband's duty to teach her many things. And the task wouldn't be quite as onerous if my lady were to be a great beauty -- like Lady Evelyn, say!\"\n\nBoth cousins' stopped in their tracks and whirled around on Henry, in sudden mutual outrage. \n\n\"What a prized filly, she!\" Henry Wilkes exclaimed with a chuckle as he continued to walk on. He seemed completely unaware that he was dancing on the line of decency. \"Now instructing HER in her wifely duties would be a most enjoyable task--\"\n\nBefore Lord Davenport could react Philip launched himself at Henry Wilkes's back! With a cry that echoed through the marbled gallery Philip had taken ahold of Henry's shoulders, dragged him back and had landed a punch to the other man's jaw. Henry blocked the next assault and threw his weight into Philip's gut. The two men, with hands at each other's throats fell to polished floor and slide into a crowd of men who had gathered to watch the commotion. Just as Henry had rolled on top of Philip Lord Davenport stepped in to drag Henry Wilkes back and away.\n\n\"Enough! Go home, Henry!\" the Marquess said, his deep voice low with barely contained anger as he tossed Henry away from him. \n\n\"He attacked me!\" a breathless and red-faced Henry protested jabbing a finger towards Philip. \n\nLord Davenport instructed Philip. \"Go back to my rooms,\" he said before returning to Henry again.\n\nThere was a murmur through the gallery as Philip took off down the long corridor, leaving behind his cousin to speak to Henry Wilkes. Philip felt himself flush hotly in rage and embarrassment as he could just imagine the scandal he had just created. No doubt anyone who caught wind of what had happened would wonder why he had chosen to defend Lady Evelyn's honor, especially with Lord Davenport standing beside him and perfectly capable of the task. Especially when the gentle and sensibly Philip had never been known to act so impulsively. Others may very well describe Philip's action as that of a jealous lover, defending his lady's honour. They will wonder and they will gossip and arrive at all sorts of wild conclusions Philip would much rather that they didn't. Oh yes! Very soon they will all be watching the cousins closely for signs of fracture.\n\n\"I don't know what came over me,\" Philip tried to explain when Lord Davenport joined him later. \"I simply loathe that man! He's a stain on his family name!\"\n\nPhilip was nursing a tumbler of whiskey, still heaving and trembling in shame and anger at having been so impulsive. Lord Davenport went silently to an armour and pull out a spare set of evening wear. That's when Philip noticed that his own sleeve and lapel had been torn beyond repair. Philip tried to read his cousin's face as he accepted the jacket with a feeling of dread and defeat. Lord Davenport didn't speak, nor did his expression change from one of complete calm. Only the throbbing dark vein growing ever pronounced down the side of Lord Davenport's temple told Philip that his cousin felt anything at all.\n\n\"Lord and Lady Chamberlain is having the American minister to dinner,\" Lord Davenport said finally, before Philip could utter another word to explain himself. \"We'll go there tonight instead. I mean to speak to him anyway.\"\n\nAt dinner Philip found himself seated at the far end of a long table, almost completely hidden behind a fruit arrangement. Not many paid him much attention as the table was full of men of far more important than the Marquess of Davenport's cousin. That was until Evelyn's friend Lady Ann sat down beside him and seemed intent on engaging him. Her cat-like eyes were. sharp and observant. \"What will you do once your cousin marries?\" she asked.\n\nPhilip wasn't feeling particularly sociable. He was still reliving his fight with Henry Wilkes. \"I will do as I have always done, of course,\" he replied glumly as he took a big gulp of his dinner wine.\n\nLady Ann smiled a thin enigmatic smile despite Philip's sad, listlessness. She motioned for a footman to top off Philip's wine glass. \"Lord Davenport must trust you completely to allow his young bride in the constant company of one as young and handsome as yourself. Why I know many men who would be quite jealous! Perhaps Lord Davenport is just more permissive than most?\"\n\nHer calling him handsome raised the color to Philip's already flushed cheeks. Lady Ann was no Lady Evelyn but she was still quite beautiful. Philip tried his best to control the spinning in his head and speak without slurring. \"My cousin has nothing to worry about from me,\" he said. \"I wish him every happiness... should this marriage actually take place--\"\n\nLady Ann's smile broaden. \"Oh it will! I see what you mean though. Many a man have felt a moment of panic before marriage. He thinks he'll never again have an opportunity to come and go as he pleases. Of course, he'll soon discover that marriage has never stopped any man from pursuing life's many pleasures. Especially not amongst our lot.\"\n\n\"I suppose I'm not one of you then,\" Philip replied. \"I cannot imagine such a thing. When I marry, I will commit to my wife completely and gladly.\"\n\n\"Lady Evelyn's right! If only more men are like you, who thinks as you do. So noble, and virtuous!\"\n\n\"She said that?\" he asked, with his heart in his blood-shot eyes. \n\n\"Not in so many words but she does admire you so very much! She constantly laments that her future husband couldn't be more like you. The same blood flows through your veins. Both equally handsome, but you are far more amiable.... I believe if she had a choice in the matter, her choice would be quite different....\"\n\nPhilip drained his wine glass in a single gulp to calm the thundering in his chest. He couldn't recall how many glasses of wine he's had. His wine goblets never seem to be emptied. He must stop drinking or Lady Ann will think him borish, he told himself. \n\n\"The contract has been drawn up,\" he slurred glumly. \"The bans read. There's no point in wondering what might have been, could have been.\"\n\nLady Ann tilted her head to one side as she daintily dabbed her lips. \"Whatever do you mean?\" she asked coyly. \n\n\"Aren't you implying--?\" Philip spurted in confusion. \n\n\"I've had too much to drink!\" Ann laughed a husky seductive laugh and a flirty wink. She selected a deep burgundy plum from the fruit arrangement before them and broke it in half. \"You mustn't pay attention to anything I say or I'd think you were taking advantage!\"\n\nPhilip watched, complete enraptured, as the plum broke apart to reveal the blood red flesh. A burst of nectar ran down Lady Ann's bare hands, and she quickly lapped it up . He wondered drunkenly why she wasn't wearing gloves. Her arms were so naked....\n\n\"Wedding always make me think of when I was a young bride,\" Ann said. Her fingers dipped into her pink mouth one at a time. Philip's felt his own mouth start to water as he watched her methodically suck every droplet of juice from her fingers. \"It can be such a difficult time for a young lady. For me, all I wanted was for my husband to notice me. But he was far too important for that. I was so lonely. So utterly friendless. Then, one year we had a young Italian noble come stay with us. Oh how he opened my eyes! Oh my--!\" She held up two fingers to her lips and cast a guilty glance at Philip. \" I'm rambling!\"\n\n\"Do go on!\" Philip urged. \n\nShe darted her eyes around to be sure no one else was listening. \" Of course I'm only speaking to you as a friend in the strictest confidence! I do feel you and I have become friends have we not? You are an intimate of my dear friend Lady Evelyn so I know I can trust you not to repeat my silliness.\"\n\n\"I won't repeat a word!\" He promised eagerly. \"Do go on!\" \n\n\"To put it mildly-- he stole my heart! You swear you won't repeat this?\"\n\n\"I swear!\" Philip assured her eagerly as his pulse quickened to a dangerous level.\n\n\"I was young and foolish you see. I never knew men -- did that to women--\" She leaned towards him and brought the pitless half of the plum towards her mouth and gave the hallowed center a gentle lick. \"If ever a man wanted to put a woman in his spell-- well! \"\n\nIn that moment, the rest of the room seem to recede in the background. All the chattering faded away till Philip could only hear his own heart beating loudly as he watch, spellbound, Lady Ann's pink tongue quivered at it teased the deep red fruit. He followed every lick, every stroke as she dragged her wet, quivering tongue around the hollow of the glistening fruit. When she closed her mouth over the top flesh to gently suck, Philip moaned deeply.\n\n\"Well!\" she said dropping the rest of the fruit down on her plate. \"All in the past now!\"\n\n\"But what happened then?\" he asked in desperation. \"You were in love with him surely!\"\n\n\"Deeply,\" she agreed. \"And I would have given up everything for him too if he had asked. My honor, all my friends and family. But sadly he was lost at sea before we ever had a chance.\"\n\n\"How terribly sad!\" he said with genuine sorrow. \n\nLady Ann waved a hand in front of her face. It was nearly time for the ladies to go through to the parlor. \"You are so good to indulge my little trip down memory lane. And do please never repeat what I've said. It's so shameful! To think that I had once nearly thrown everything away for-- well, to be worshiped like that!\"\n\n\"But you would have given it all away had the Italian gentleman lived?\" he asked eagerly. \n\n\"Absolutely! He gave me the one thing every young lady ought to have but few will ever experience!\" Lady Ann said.\n\nPhilip felt his stomach lurch and he quickly scrambled to his knees for the chamber pot. There was nothing left in him but still he retched into the foul pot. \n\nHe was once more in his dark chamber. It has been several hours since his dinner chat with Lady Ann. He really couldn't recall what took place between then and when he had somehow made his way to Evelyn's chamber.\n\n\"Blimey! What have I done?\" \n\nWhat if Evelyn had woken up when he had fled her room? What if she was seen? What if one of the servants had awoken by some strange sounds and saw him leave her room? What if his cousin had heard, seen--! The what ifs whirled around Philip, driving him to curl into himself with his arms tightly clasped around his body. \n\n\"I must confess all,\" he whispered into the empty room. \"I must own up to my sins and confess all to John and beg his forgiveness. Should he be merciful, or not, I swear I will never look at her. I will never covet anything that isn't mine ever again!\"\n\nPhilip fought back his terror and another wave of nausea when he rose to his feet. He must face his cousin right then and there before he lost his nerve.\n\nThe study door stood slightly ajar and an orange glowing light streamed from the gap. He could hear muffled voices from within. \n\nOne was a deep, rich, baritone that could only belong to one man. The other, much softer and lyrical was Evelyn's.\n\nWith sweat pouring down his forehead, Philip almost lost his nerve! He knew he ought to leave then. She must awoken and sensed something amiss, then brought her nighttime visit to Lord Davenport's attention. They must be putting together the pieces now and will soon discover that the visitor had been Philip! From the anger in their voices, that had to be it, Philip thought. He may has well face them and let the chips fall where they may!\n\nPhilip had only intended to pause for a moment to steady his nerve, but he couldn't help glance through the opening in the door first. \n\nIt took a moment for his eyes to adjust to the light and see the pair, in silhouette, standing before a roaring fire. Lord Davenport, dressed as he was earlier in the evening, had Evelyn's by her forearms. The force of his grip on her caused her large woven shawl to drop away and pool at her feet. Evelyn stood there in just a bellowing white nightgown with her long dark tresses hanging in cascading waved down her back. \n\n\"--You'll come to regret the day you ever laid eyes on me!\" Lord Davenport said, his deep voice rumbling in an angry growl. \"Do not test me, madam with your games and manipulations!\"\n\nEvelyn tried to wrestle away from him. \"You lout! Must you always see the worst in me?\"\n\n\"What are you doing down here in the middle of the night if you didn't have some clandestine purpose? In nothing more than your nightgown no less?\" he retorted with his face looming dangerously close over hers.\n\nHer mouth dropped open then snapped shut again as she visibly started to tremble. \n\n\"What Evelyn?\" he asked sardonically with a sneer. \"What were you about to say?\"\n\n\"I don't know why I came down here. Perhaps it was a dream-- it must all have been a dream!\" Evelyn replied miserably as she stared off into the distance. \n\n\"Then let's have some understanding between us,\" Lord Davenport said. \"You will not put yourself or my house in danger to satisfy your whims. I won't have you traipsing about the city alone anymore, or doing whatever you damn well please with no regards for the consequences. I can be a fair husband but I won't be an indulgent one!\" \n\n\"You'll just be a bullying one!\" she shot back with seething hurt and anger .\n\nLord Davenport grabbed her by the chin to turned her face towards the fire light. He scowled darkly at the bruised mark still evident on her forehead. \n\n\"A bully am I? What do you suppose would have happened to you if Philip and I had taken a different path that night? Christ, Evelyn! I don't care who your father is, when I'm your master you tame your childish willfulness and you follow my instructions without argument! Do you understand?\"\n\nEvelyn glared up at him despite the firm pressure of his fingers squeezing her cheeks. \"I thank you for no longer accusing me of staging my own attack then,\" she said with an haughty lift of her chin. \"In what form will these instructions come, pray? Be sure to enumerate them all at once, for I'd hate to accidentally flouting your authority, my lord. My lists of crimes are long enough in your eyes.\"\n\nLord Davenport's eyes narrowed at her words. He could have accused her of being facetious if she hadn't looked so stoic. He cursed, sighed heavily instead, when he released his hold on her. Fuming, he stood back with one fist on his hip, while he rubbed his forehead wearily with his free hand. \"I've not had a moment of peace since that night I met you. What a fool I've been to want you-- Well, I have you now don't I?\" \n\n\"I--!\" Evelyn hugged her arms to her chest as she swallowed back whatever she began to say. \"Take care what you wish for I suppose,\" she said softly, half to herself.\n\nLord Davenport lifted his head to study her beneath his dark scowl. He no longer looked angry, merely thoughtful, admiring and sad all at once when his gaze traveled down the length of her. The thin nightgown bellowed around her but did little to conceal the outline of hourglass curves. He swallowed hard and tore his gaze her from. \"I freely admit I misjudged you from the first.... It's my own fault, really. But here we are, you and I. We must do our duty. I will try my best to be a good husband, if you will respect your position as Lady Davenport.\"\n\nEvelyn continued to hold herself tightly as she bowed her head to let her long wavy hair draped over her face. \"I await your instructions, my lord,\" she replied tightly.\n\nSeveral more emotions passed over Lord Davenport's noble mien as he studied her. He displayed none of his usual confidence as he stood there deep in thought as though he bore the world on his shoulders. Finally he turned back to the large table that served as his desk. He shuffled through some documents, absently, before tossed them aside again before planting his fists on the table and leaning forward on his arms. \n\n\"You do have the willfulness of princes in your veins don't you? Very well I want to know why I find you out of bed at this hour, dressed, or undressed, as you are--\" he said, his voice low and slightly shaky. \"However, I won't press the matter if you don't want to tell me. But-- from here on forth, I expect you never to give me reason to question your movements, never to doubt you. I realize you are very young and this season has been very exciting for you--\" \n\nHe held up a hand when she opened her lips and were about to speak. \"I know!\" he continued. \"--I know this is all very new and exciting for a young lady in her debut season, to be such a success... to have so many admirers.... I also know those admirers won't simply go away once we're married--\"\n\nLord Davenport paused a moment to think on his next words. He pushed back from the table and walked over to the fireplace. He had his back to Evelyn but Philip could see clearly, from his hiding place, by the light of the glowing fire just what it cost Lord Davenport to make his speech. \"I simply ask that you don't encourage any unnecessary attention, or invite gossip. I ask that if you are to find me unsatisfactory... well then if you would please, do not bring chaos into my house. Do not flaunt it in my face, if... if you chose to have a life of your own.\"\n\nOut in the corridor, Philip felt almost light headed. So many thoughts and emotions rose up in him. It was as though Lord Davenport knew Philip was listening and was speaking directly to him! Philip did not have time to mull over this jumbling thought when Evelyn's clear voice, strong and forceful, cut through the air.\n\nEvelyn's eyes sparkled in the dim light, face was flushed, her bosoms heaving in outrage. \"What sort of man are you that you could talk about marriage and obedience and then tell me not to invite gossip?\"\n\n\"Evelyn--!\"\n\n\"How exactly? When everyone looks at me, I know you see my illegitimacy even as you weigh my influence. You've been wondering who my mother was... what sort of lineage she's passed on to me. Isn't that so? Isn't that when you had in mind when you tell me not to invite gossip? B-because someone like me could not possibly be honorable? \" \n\n\"I'm not accusing you -- I merely want us to understand each--\" ",
        "\"Then I beg of you, sir, if you despise me so much, tear up that marriage contract and set me free! I will tell his Majesty that you found me wanting. I don't care. Don't subject both of us to a lifetime of misery. Please--!\" A sharp hiccup caught Evelyn's throat cut her off in mid-rant and she covered her face, unable to continue. She won't cry in front of him! She simply mustn't! Yet hot, angry, frustrated tears welled up in her eyes and leaked through her fingers. \n\nPhilip clenched his fists at the tightness in his chest to see her misery. No gentleman could remain cold and impervious to a woman's tears, and it certainly had it's affects on Lord Davenport. \n\n\"I--I don't despise you,\" he objected softly as he came around the table and took several, measured strides towards her. When she shrank away and refused to look at him, he took her hands from her face and tilted her chin up to brush away her tears with his finger tips. \"Forgive me, Evelyn. It's late and I'm ill tempered. This has been a most trying day--- . It's not my intention to make you unhappy. It's just... you wouldn't understand...\"\n\n\"But I think I do!\" she said with trembling lips. \n\nEvelyn tried to hold onto her hurt and anger with everything she had. One look at his handsome face though, she felt it all melt away. Lord Davenport loomed protectively over her as he cupped her face in both hands. His expression was kind and compassionate for once, without a trace of his usual arrogance. With one hand brushing back her hair, the other still cupped around her face, he splayed his long fingers over her left cheek and he slowly rubbed her chin and lips with his thumb so very gently and seductively. His eyes, so hypnotically light suddenly grew darker as he followed the movement of his thumb over the curve of her lips. \n\n\"You confound me sir,\" she murmured in a raspy, dreamy voice against the caress of his thumb. \"I suppose I'm only starting to come understand your lot. The aristocracy is exacted to be an example of righteousness and virtue, or so I was taught, but instead I sense hypocrisy everywhere! Perhaps if I were stronger, wiser, if I have any reason left in me at all, I would leave this place and go far, far....\"\n\nOut in the hall, Philip felt himself die inside as he watched Evelyn close her eyes and ever so slightly turn her face into Lord Davenport's caress and rubbed her cheek against his palm. It was a gesture that told Philip all he needed to know. Whatever hope Philip for Lady Evelyn just a moment ago, he saw on her face, in the way her whole body seemed electrified at Lord Davenport's touch, that he might well long for the moon instead. There was nothing more for Philip to see, to hear. He retreated from the door and silently, sadly went back down the corridor to his bedchamber once more.\n\nNeither Lord Davenport nor Lady Evelyn noticed they had an audience, so lost they were in each other. \n\n\"Go back to bed!\" Lord Davenport croaked in a thick and husky voice, even as he dropped his forehead down against hers, while still caressing her face. He squeezed his eyes shut and gritted his teeth like a man in pain. \"Do as I say-- for your own sake!\"\n\nEvelyn's breath grew ragged to hear the strain in his voice. She knew what it meant now and her heart suddenly skip a beat. A familiar chill ran deliciously down her spine even as her core burst into a hot, liquid flame. \n\n\"God forgive me, but I can't! I shan't!\" she cried from deep within her heart. Before the last words left her lips, he pulled her roughly to him and pressed an urgent kiss against her lips. \n\nThe world melted away. There was no sound. There was no floor beneath her feet. All that existed were his lips... his tongue, hot and fervent, seeking out hers. Evelyn clung to his broad, muscular shoulders forcing him closer in her youthful greedy lust. She yelped a little when he suddenly picked her up. Her legs instinctively wrap around him waist. He walked the short distance to the enormous table and laid her gently down on top of it. Documents crinkles beneath them and a pot of ink fell and shattered on the floor. Neither of them noticed.\n\nThis was quite different from her dream, Evelyn thought wildly as his hands made their discovery of her body again. There was no gentleness, no teasing! He didn't hesitate to untie the ribbon of her nightdress and drew back the fabric to reveal her neck, shoulder and breasts. Hungerly he grabbed handfuls of her milky white, supple breasts and fed them to his eager mouth. Evelyn's eyes rolled back in her head and barely noticed when he climbed up on the table over her. He didn't simply kiss her, he devoured her! \n\n\"Do you remember that night in the carriage?\" he murmured hotly against her burning skin as his hands pulled up the hem of her gown to reveal her naked thighs. \"Do you remember how I touched you down here?\" \n\nEvelyn gasped out loud and jackknifed against him when he found her sex! \"I cannot forget that evening, my lord,\" she moaned as she did her best to swallow her suddenly watering mouth. \"I couldn't forget as hard as I tried... every moment... of every day!\"\n\nHis fingers combed through her coarse and wiry pelt to make its way towards her slick, hot center. He slipped two fingers into her narrow, tight passage while kneading her with the heel of his palm so expertly that soon Evelyn was writhing and bucking against him. Her head rolled back and banged against the desk, but she was beyond caring. Nothing could soothe the ache in her save for his hand!\n\n\"I was wrong again,\" he said with a twitch of his lips. \"I see I am to be the first, my lady.\" \n\n\"This isn't proper!\" she gasped, regaining her senses momentarily. She lost herself again when he bent over her to lick, and suck a little pert pink nipple into his mouth. \"W-we're not married yet!\" \n\n\"What does it matter if it happens now or in a few days?\" he replied absently while he twirled and pumped his fingers in and out of her till they could both hear the wet, suction her body made. \n\nShe moaned when he took his hand away and then felt her heart pound loudly in anticipation and trepidation when he straddled her hips and rose upon his knees to deftly unfastened his trousers. The pain of first penetration shocked Evelyn from her stupor! \n\nHe was seated deep inside of her with one swift upward stroke of his hips! Tears flooded her eyes and blinded her! Oh the tearing, the burning! It was unbearable!.... for several agonizing minutes before it turned into a dull, throbbing ache. This was it then! she thought wildly. He had conquered her, but then again she had all but thrown herself at him. Where was her pride? Where was her honor? a shrill voice in her head demanded.\n\n\"Oh no!\" she cried helpless as he pushed her knees back against her chest and hiked her legs higher around his torso. She suddenly had a clear vision of how she must appear, spread wantonly across the top of the table, naked except for her nightgown bunched uselessly around her waist, while Lord Davenport, still fully clothed, was buried deep within her. Fresh tears sprang to her eyes as much from her own shame as from each deep, battering stroke of his ramming rod.\n\n\"My lord!\" Evelyn squeaked as she bit her swollen lips as she gripped his thickly muscled arms. He scooped his arms around her slender and held her in place as he continued to drive up into her mercilessly... over and over. She squeezed her eyes shut to the pain and tried to turned her face away.\n\n\"Look at me, Evelyn,\" he panted as he captured her face to turn her back to him. \"Look up at me!\"\n\nEvelyn turned her enormous eyes, filled with fresh tears, to look fearfully up at him. His handsome face was barely recognizable so intense he appeared, with his upper lip pulling back from his teeth in a snarl with each upward thrust. Each time he exhaled, his breath blew hotly down on her face.\n\n\"Stop! I don't want this!\" she suddenly cried out. \"STOP!\"\n\nWith a sudden force that caught him by surprise, she pushed and pounded her little fists against his solid shoulders and chest. Her blows fell harmlessly against him, but he rolled off of her nevertheless. Evelyn winced at his withdrawal and the fury on his face as she quickly closed her aching legs, smoothed her skirt down with one hand and pulled up the neckline of her gown over her bare breasts with the other. \n\n\"I didn't want this!\" she said in a half whisper as she hugged her knees towards her chest.\n\nHe cursed angrily as he rose to his feet to glare down at her. \n\n\"Don't you?\" he shot back angrily, as he impatiently tucked his still achingly hard member back into his trousers again. \"You came down here flaunting your little body at me. Then you won't leave when I asked you to--! I can smell just how much you want me. So don't tell me you don't want this!\"\n\n\"I wasn't thinking,\" she mumbled humbly as she hide her face behind the veil of her hair in shame. \"But this isn't---\"\n\nHe dragged a hand over his face with a frustrated growl. It took several moment for him to compose himself as Evelyn waited, still hugging her knees on the table. When he turned his scowl back to her however, his gaze softened at how small and helpless she looked. \n\n\"You little fool,\" he said, though not unkindly. \"I suppose some part of me still thought of you as more a woman than you are. But you're not, are you? All this is all new to you. I didn't mean to frighten you-- it's all perfectly natural. I'll be more gentle, if only you'd tell me--\" He bent down to kiss her cheek even as he reached for the neckline of her gown again. \n\n\"Please-- wait!\" Evelyn moaned when he peeled back her gown to cupped her milk white breasts. He uttered a small moan as he kissed his way down the curve of her neck. His touch, his kisses were simply intoxicating, but still Evelyn resisted. She had a nagging thought that simply couldn't be put aside, no matter how much he drove her to distraction. \"Can we please talk!\"\n\n\"Why?\" \n\n\"There are things I need to say to you,\" she replied with a frantic little sob when his hands roved over her thighs again. \"Please listen! I-- I need you to understand my intentions--\"\n\nHe raised his head to peer at her from beneath his heavy brows. \"I'm getting to know you now,\" he retorted with barely restrained impatience as he pried her thighs apart again. \n\nHe wetted two fingers in his mouth and eased his digits into her tender and sore passage. So tight! So hot! So unbelievably wet! At Evelyn's throaty and lustful moan when his long fingers worked in and out, in then out of her sore pussy, a corner of his lips pulled back in a knowing grin. His stroking grew faster and faster till nothing else matter but what his fingers were doing to her. \n\n\"Stop,\" she whimpered again, barely conscious of anything else but the delicious feeling he was coaxing out of her. \"Please my lord. I must say my peace.\"\n\n\"Tell me you don't like what I'm doing to you,\" he murmured, into her ear with an arrogant smirk. \"Tell me you don't want me to stop... and I will!\" \n\nShe uttered a small strangled sob against his chest and clung helplessly to his powerful, muscled body. \"How can I possibly make you understand? You control me so utterly wherever you happen to be. You're in my dreams. You're in my every waking thought! It hurts me more than it ought to know that you constantly think the worst of me. That it is only lust you feel when you see me! Oh what does it matter?\"\n\nHe gathered her tighter against him, and kissed and nuzzled against the curve of her neck. \n\n\"My lord, I'm desperate! In spite of it all... ev--even if I haven't been betrothed to you, could you ever-- look at me, and, and think well of me?\"\n\nHe chuckled lightly. \"I will if you'll be a good girl and part these thighs again!\"\n\nEvelyn bit back another sob. \"'I'll do everything you ask of me. I'll obey you as my lord and master, willingly! And maybe one day, you'll think better of me, even if you can never love me... the way you loved Clara!\"\n\nNo sooner than she had uttered that name than Lord Davenport released her-- No! He practically flung her away from him as he stepped away from the table! \n\n\"What did you say?\" he asked in a low voice. \n\nWithin an instant his expression hardened. Gone was the man who only a moment ago looked at her like a hungry man before a feast. Now his icy blue eyes were clear and dangerous. A thick vein running down the side of his temple throbbed and grew more pronounced. He was as imperious and cold as she had ever seen him.\n\nEvelyn nervously bit her lower lip. She shuddered at how cold the room suddenly felt as the fire have long since burned itself into just a few glowing embers.. \n\n\"Who told you about... Clara? \" he asked in a low voice that echoed through the valued chamber.\n\nEvelyn swallowed hard, suddenly more terrified of him than she had ever been before.\n\n\"Was it Charlotte or Philip?\" he asked through clenched teeth. \n\nShe couldn't bear to meet his cold, hard glare. \"I'm sorry! I -I didn't realize she was a secret.\"\n\n\"Hardly,\" he said, taking a breath to draw himself to his full height as he continued to glare down at her. \"BUt why was she brought up?\"\n\n\"Do you really want to know?\"\n\n\"Oh, I'm riveted!\"\n\nEvelyn swallowed hard. She frankly couldn't recall who spoke of that name first to her. It must have been Charlotte or even her friend, Lady Ann in some off-handed way. \"I suppose I may have heard her name mentioned in passing. The way she was spoken of made me want to know more. I thought perhaps she might have been the reason that you stayed away all this time. I remember asking Charlotte to tell me who she is, or was. I gathered that you loved her very much---\"\n\nAfter a brief silence he upper lip curled into a humorless smirk. \n\n\"What stupid romantic notions you women have!\" he intoned archly. \"Charlotte drudged up some ancient history so you would live out some silly romance you women like to read? You need to find some reason from my past to make yourself the heroine in this story? After awhile you'll melt my cold heart and make a new man of me? Is that it?\"\n\nEvelyn winced slightly at his scorn. \"Do you still love her then?\"\n\n\"Who, Clara? I suppose... once. Promises were made at least. What did Charlotte tell you exactly?\"\n\nEvelyn drop her eyes to her nervous hands wringing in her lap. \"Just that she was your greatest love. \n\nLord Davenport crossed over to the fireplace and selected a cigar from an ornate silver box. With slow, deliberate movements he set about lighting the thing. Evelyn waited with baited breath as he first bit off one end of the cigar, spat the bit into the fireplace, before he pursed his lips around the fresh cigar. There was a sharp hiss when he struck a match and the air was instantly filled with the sharp smell of burning sulfur. She watched him hunch his shoulders as he cupped the lit match in his hands to light his cigar. Every follicle of her hair tingled with impatient when he took his time to shake out the match, take a deep drag from the cigar, tilted back his head before blowing several silvery blue rings towards the ceiling. \n\n\"I was very young when I met Clara.\" He finally flicked his gaze back down to her with ribbons of silvery smoke curling up around him. Neither his tone or expression betrayed any emotion as he spoke. \"Her father was my tutor. There was just the two of them and they lived on our estate for the better part of my childhood. Everyone felt I was foolish and set my sights too low with her. I couldn't be dissuaded. First love and all. I would have married her if her father was a butcher. So we made our promises to each other.\"\n\nHe took another drag from the cigar and blew a column of smoke upwards. \"One winter the Fever took my mother's life. By that spring Clara had married my father.\" \n\nHe leveled his hard, penetrating stare upon her again and she felt her stomach flip. He may have been speaking of the weather, so impassive was his expression. Yet to hear him speak so stoically, almost casually, broke Evelyn's heart and she felt her eyes well up with tears. \"Oh my lord!\"\n\n\"I suppose she couldn't help herself. Had she married me she'd still be waiting to be a duchess as the old bastard refuses to die,\" he quipped with a slight shrug of his shoulders. He drew deeply on the cigar again. \"So much for all her promises to love me.\"\n\n\"Clara... she... she is your step-mother?!\"\n\n\"Was. She lasted only three years. The unpredictable factors in life and all. So Charlotte decided to relay that bit of family history?\" His upper lip curled once more into a disdainful smirk as he studied her with his penetrating glare, as she crawled off the table to stand beside it. \"It's not great secret I'm afraid. Sorry. And many have forgotten it by now as it's really not that interesting. There aristocracy is full of salacious scandals after all. Throw the bait of money, land and title and all sorts of interesting dramas will play out. Then again, you ought to know.\"\n\n\"I wish I never asked.\"\n\n\"I'm sure you are full of curiosity, my darling girl. Hopefully next time you'll uncover some truly juicy family secrets from my cousins. Something more relevant and salacious to entice your imagination!\"\n\n\"They would never say anything that isn't in praise of you!\" she said defensively.\n\n\"I'm sure,\" he muttered with some bitterness.\n\n\"Please!\" she plead, holding up her palms as he stalked towards her. \n\nHis hypnotic eyes bore into her as he cradled her in one arm and walked her back till she was trapped between him and the edge of the large, ornately table. He sucked in his lower lip as he dragged his gaze, deliberately up and down the curves of her body. It was a heated, lustful examination, with none of the tenderness from before.\n\nEven so, he overpowered her and made her head spin with the sheer force of his presence. Every hair on her body seemed to tingle and a thin layer of sweat formed on her skin. Evelyn breathed in his clean masculine scent so close to her that she could have easily reached out to his muscular chest beneath his linen shirt. \n\nHe hadn't moved.\n\nLord Davenport took another deep drag from his cigar and blew a column of smoke down her cleavage and watched, amused, as the thick smoke broke apart into ribbons over her supple mounds. A torrent of hot fluids pouring down her legs that made her feel light headed and faint. \n\n\"What else have you been doing with your day?\" he asked, his velvety baritone husky and low. \"Tell me what delightful moments you and Philip shared. He's quite taken by you.\" \n\nEvelyn's long, thick, curled lashes fluttered. Her mouth was dry and her mind turned to mush. \"He tells me stories from your childhood together... how happy you all were.\"\n\n\"I'm sure Philip spun quite the beautiful tale for you.\" \n\nAbruptly he tossed his cigar into the fireplace and spun her around till she nearly fell forward if he hadn't caught her around her waist! She felt him grab a fistful of her silk tresses and pull her back against his chest. \n\n\"Please!\" she begged.\n\n\"Did you like his stories?\" he purred into her ear. \"He's got quite a flair for poetry.\" \n\nEvelyn swallowed hard and ran her tongue over her dry lips. \"I care little for poetry.\"\n\n\"No, you'd rather hear about Clara.\" He buried his face in her fragrant silky hair and inhaled deeply but his voice lost none of it's edge. \n\n\"I want to know you,\" she confessed. \"I want to know everything about you.\" \n\n\"Well then, my lady, I'll tell you about me. Clara marrying my father was just the vehicle that drove me to the Continental wars. Do you want to hear what I did there? Do you want the full numbers of men killed and maimed or would you rather I tell you about the times I nearly forfeited my own life? You want a vivid description of the sights and the smell? Or would you care to know the failed battle strategies devised by your father's best generals. Do you know how many men were sacrificed for your father's need for glory? Too complicated for your womanly sensibilities? How about if I described all the times I ate rats, tree barks and lived like an animal to survive? All the while I lived with the stink of death caked on me. These hands that caress your milky, unstained skin? They use to crack with dried blood. Should I go on? Have I shocked yoru delicate sensibilities yet? No, I think not!. I think you want to hear about the blood and gore. You want to know all my darkness and be a miserable creature for you to mend. Isn't that so?\"",
        "Evelyn gave a little surprised yelp when he abruptly bumped his hips against her, sending her falling forward over the table. Several sheets of paper fluttered to the floor. She tried to push up on her elbows but he had her trapped there.\n\n\"Where are you going? Don't you want to hear more?\" he taunted her as he grounded his hips harshly against her buttocks. \n\n\"Please stop,\" she plead with a terrified sob. \n\nHe bent over her till he sank his heavy body every so slightly down on hers again. \"You don't want me to stop. You don't want me to be kind even, do you?\"\n\n\"What does it matter what I want?\" she nearly shouted. \n\n\"No it doesn't, my dearest girl. To put it bluntly, you were given to me as a reward for my years of loyal service. A consolation for all my suffering!\"\n\n\"I'm thinking it's less about rewarding you and more about punishing me,\" she heard herself retort.\n\nThat remark brought a genuine smile to Lord Davenport's face. He leaned over her and caressed her silky hair from the back of her neck. \"What have you done then, that deserves punishment? Have you been naughty my darling? Asking Charlotte to tell you things about me? Batting your lashes at Philip to do your bidding? I do believe my cousin has lost his heart to you\"\n\nShe offered no resistance at all when he pulled up her gown once more to expose her hips and almost didn't notice when he ran his hands over her smooth rounded buttocks. He picked up a part of her gown and thoughtfully rubbed a dark stain of her virginal blood between his fingers. A ghost of a smile passed over his lips.\n\n\"What? Nothing to say, Evelyn? You were full of words before. You had a purpose in mentioning Clara, didn't you? Come! Show me how you're like no other woman on earth and you'll make me forget all crimes committed against me. You see, I've heard it before, but don't worry, I don't mind it at all. Especially with what follows. Show me just how tenderly you can make me forget Clara! Let me back inside!\" \n\nShe felt him reach down to unfasten his trousers, and free his manhood, hard and swollen, once more. \n\n\"P-please!\" she finally gasped somewhere between pain and pleasure. \"Please-- my lord--have pity on me!\"\n\nHe merely sighed... deeply.\n\nWhite hot pain shot through her core. His turgent member was thrusted up into her tight and swollen canal again and send her back arching and writhing in pain! It seemed so improbable but it hurt more than the first time. He was thrusting himself brutally into her, deeper and deeper, stretching her in a sharp, searing pain! Evelyn's lips opened in a silent scream but no sound came out. She couldn't breathe from the sheer thickness and length he was forcing into her little body. \n\nLord Davenport had to retrain himself when he kissed his way up the swell of her generous white orbs, to the hollow of her neck, till he tasted her salty tears on her cheeks. He raised his head a moment and narrowed his eyes at her face, contorted in anguish. He gripped her hips, then rotated his own pelvis against her in a swift downward stroke. \n\nEvelyn's eyes flew open, then rolled to the back of her head and her lips formed an \"O\" when she shrieked at the new sensation! What new torment was this? But it was not pain she felt. It was... something akin to... nothing else she's ever felt before! He did it again! Then again! And again! Suddenly her hips buck up to meet his thrusts of their own accord and she flung herself over his neck and bite his shoulder. When he smoothed back her silky curls from her tear-streaked face, he recognize her conflicted look of agony and pleasure. \n\nThe force of his thrusts sent Evelyn's body writhing and arching on the hardwood surface till the heavy table itself started to rock and tap out a rhythmic pattern. \n\nEvelyn moaned out loud as she clawed his shirt front and tore at it. He tightened his hold on her hips with both hands and pulled her back to meet his thrusts, deeper and deeper. Sweat trickled down his forehead, down the strained muscles of his neck to disappear into his already damp and matted dark, wiry chest hair.\n\n\"My GOD!\" she moaned deep and low as her passion poured from her body and drown him in it's slick, wet heat. \n\nHe knew exactly when she reached her peak. Years of experience made him particularly sensitive to the signs of a woman in the throes of a soul-shattering orgasm. What he didn't anticipate was the force with which her liquid heat scorched him and grab hold of him. He always came when he was good and ready, but sweet little Evelyn made fast work of his self control. He was caught off guard and completely unprepared when a white-hot bolt tore through him and he broke loose in a torrential roar! Waves after waves of pleasure ripped from him and he cried out from deep within his chest with the sheer force of his own release!\n\nEvelyn gasped slightly when he slumped over her in exhaustion. She inhaled deeply, his clean masculine scent and the aroma of their lovemaking and released a shaky sigh. \n\n\"Peace!\" she urged her troubled heart. \"Let us have a moment of peace between us. Even if it's short and fleeting. Let me not think on how cruel it is for him to make me love him so hopelessly and desperately! He may abandon me tomorrow and leave me utterly ruined and I know I will still love him! Tomorrow! I won't think about tomorrow but live in this moment... with him still buried so deep inside of me... and I'll pretend, for a moment longer, that he is mine. Entirely mine!\" \n\nTo be continued... "
    ],
    "authorname": "wws_wws",
    "tags": [
        "historical",
        "oral",
        "disguised",
        "reluctance",
        "forced",
        "desperation",
        "betrayal",
        "lord",
        "lady",
        "drama"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/duplicity-ch-05-1"
}