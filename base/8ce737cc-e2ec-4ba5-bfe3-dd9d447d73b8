{
    "title": "A Father's Justice Pt. 04",
    "pages": [
        "A Father's Justice, Pt. 04\n\n \n\nMany thanks to those who offered comments and constructive criticism on my previous stories. For those who want to say this or that would never happen, remember this is my universe, a place where nearly anything can, and often does, happen. At least on paper... \n\n \n\nTo understand the full context of what is taking place here, I suggest you first read, \"A Father's Justice Pt. 01,\"\"A Father's Justice Pt. 02\" and \"A Father's Justice Pt.03.\"\n\n \n\nPlease refer to my profile for more on my personal policy regarding comments, feedback, follows, etc. (Yes, I moderate comments) And please remember, this is a work of fiction, not a docu-drama...\n\n \n\n...\n\n \n\nEnd of \"A Father's Justice, Pt. 03\":\n\nThe plane landed and Ryan got off. After grabbing his duffel bag, he walked to his truck and headed home. Home, sweet home, he thought. He was almost there, when he saw a lone figure walking alongside the road, carrying a suitcase.\n\nAs he got closer, he could tell it was a woman. Then he recognized who it was -- Beverly Simons, the 45-year-old widow who lived just down the road from him. He wondered what she was doing out here on the hot road like this, so he pulled up and stopped next to her.\n\n\"Ms. Simons,\" he asked. She turned a tear-streaked face to him. \"Are you okay, ma'am?\" She shook her head as tears flooded down her face. \"Come on, get inside. It's too hot to be out there like that.\"\n\n\"Are you sure, Mr. Caldwell?\" she asked. \"I don't want to impose.\"\n\n\"I'm sure,\" he said. He got out, put her suitcase in the back seat and opened the front door for her. He closed the door after she got in. He climbed back into the driver's seat and looked at her.\n\n\"What's wrong?\" he asked. As if on cue, she began sobbing uncontrollably. He held her in his arms as she cried.\n\n\"I've lost it all,\" she cried. \"Everything.\" He held her as she wailed. Wonderful, he thought. Another crisis...\n\n...\n\nAnd now, A Father's Justice, Pt. 04:\n\n\"What do you mean, you've lost everything?\" he asked the woman crying in his front seat.\n\n\"The house, my car, all my furniture, everything,\" she wailed through her tears. \"Even my chickens.\" She started crying even harder, her face turning beet red. \"My defenseless chickens. They'll die if I'm not there to feed them.\" He knew she kept chickens and sold eggs to families in town to supplement what she got from her husband's Social Security and he knew they meant a lot to her.\n\n\"How did this happen?\" he asked. \"Did someone come and take your property?\"\n\n\"The sheriff was out this morning and said if I didn't have the money I owed the bank I had to leave,\" she said as she sobbed.\n\n\"So where were you going?\" he asked.\n\n\"Down to the creek,\" she said. \"I have no where else to go, so I thought everything would be better if I just went there and died,\" she said. That brought on another crying jag. Saddened by her plight, he held her for a few minutes.\n\n\"Why didn't you say something?\" he asked.\n\n\"I don't want to be a burden,\" she said. \"My poor Wallace would be so ashamed of me if he knew about this.\" He knew Wallace was her deceased husband. He had never met the man, but heard good things about him from folks in town.\n\n\"It's no burden,\" he said. \"How much do you owe?\"\n\n\"Too much,\" she said. \"About $170,000. I had all my bills consolidated through the bank and I've done everything I could to make ends meet. I've even stopped eating every other day to save money, but it's not enough. Every time I think things are gonna work out, they turn to shit. I'd be better off dead.\"\n\n\"Nonsense,\" Ryan said. \"Where do you bank?\"\n\n\"First National Bank in town,\" she said. \"There's nothing you can do. All they want is their money.\"\n\n\"That's where I bank as well,\" Ryan said. \"Let me make a call.\" He pulled out his wallet and found the business card he was looking for, then grabbed his phone.\n\n\"First National Bank,\" a receptionist said when she answered the phone.\n\n\"I'd like to speak with Jay Goldsmith, please,\" Ryan said.\n\n\"Let me see if Mr. Goldsmith is available,\" the receptionist said. \"May I ask who's calling?\"\n\n\"Tell him it's Ryan Caldwell, and if wants to keep my business, he'll become available,\" Ryan said.\n\n\"Oh, yes sir, Mr. Caldwell. Just one moment, please,\" she said. A few seconds later, Jay was on the phone.\n\n\"Mr. Caldwell,\" he said, sounding excited. \"Good to hear from you, sir. What can I do for you today?\"\n\n\"You can tell me what's going on with Beverly Simons,\" Ryan said.\n\n\"I'm sorry, Mr. Caldwell, privacy regulations prohibit me from divulging that kind of information,\" he said.\n\n\"You'll be a lot sorrier when I pull my account from your bank,\" Ryan said.\n\n\"I'm sorry, Mr. Caldwell, but those are the rules, and I have to follow them,\" Jay said. \"Besides, why are you involved?\"\n\n\"She's sitting in my truck right now, crying her eyes out, telling me she's going to commit suicide because you had the sheriff come and evict her from her home,\" Ryan said. \"Tell me, Mr. Goldsmith, what kind of a piece of shit kicks a widow out of her own house with nothing but the clothes on her back just because she's down on her luck?\"\n\n\"Mr. Caldwell, please understand,\" Jay began. \"I don't like it any more than you do. We've done everything we legally can to help her out, but this has been coming for quite some time. My hands are tied. Her account needs to be cleared.\"\n\n\"So if her bill gets paid, you'll release her house back to her?\" Ryan asked.\n\n\"Well, yes,\" Jay said. \"But there's other issues. Her debt to income ratio is very high. I'm afraid this will only happen again later on.\"\n\n\"You let me worry about that, Jay,\" Ryan said. \"Tell you what. I'm coming into town and we're gonna get this mess straightened out. Get her paperwork ready and make sure that piece of crap sheriff is there to return her keys. What's the deadline?\"\n\n\"Well, five o'clock today, closing time,\" Jay said. Ryan looked at his watch.\n\n\"It's 11:30 right now,\" Ryan said. \"I'm turning around and I'll be there in just a little bit. And you'd better be there. Got it?\"\n\n\"Why, yes sir, Mr. Caldwell,\" Jay said. \"I'll be right here. And thank you, Mr. Caldwell. From the bottom of my heart.\"\n\n\"You're welcome,\" Ryan said. He ended the call and looked at Beverly. Her eyes were wide and she looked shocked. \"Come on, Ms. Simons, let's go get your house back.\" She broke into a wide smile and threw her arms around his neck.\n\n\"Thank you, Mr. Caldwell,\" she said. \"That's the kindest thing anyone's ever done for me.\"\n\n\"It's my pleasure,\" he said. \"And please, call me Ryan. Mr. Caldwell was my father.\" She laughed for the first time in a very long time.\n\n\"Please call me Beverly. Or Bev. That's what all my friends call me,\" she said, wiping tears from her eyes. Ryan whipped his truck around, spraying gravel, and headed back to town.\n\n\"So, Bev,\" he said. \"What happened, if you don't mind my asking?\"\n\n\"The last several years haven't been easy on us,\" she said. \"Wallace was a hard worker and always took care of things. But he started having medical problems. He got diabetes, but he wouldn't adjust his diet like the doctor said. I tried to get him to eat right, but he wouldn't hear it. It got so bad they ended up amputating his feet. After that, he started having problems with his kidneys and had to go through dialysis. It got so he couldn't take care of the crops, so he sold the fields and the equipment.\n\n\"That helped some, but then he started having other medical problems. It was one thing after another after another. We took a loan on the house to help pay for everything. He went on Social Security and had a major heart attack about seven or eight months later. He never survived,\" he said.\n\n\"It took up pretty much everything we had to pay for his final expenses and his funeral,\" she said. \"I got some of his Social Security, and sold eggs to make ends meet. It wasn't easy, but I managed. I still had the mortgage and everything to pay for, and my monthly expenses took up pretty much everything coming in. Then this damn coronavirus hit. Half the town's out of work now and my egg sales have nearly dried up. Jay did everything he could, extending credit and all, but it just wasn't enough. Then my car broke down and I had to get it fixed. That took up nearly a month's income. Now this.\"\n\n\"You say your husband was on Social Security?\" Ryan asked. \"He must've been about what, 25 years older than you?\"\n\n\"Yeah,\" she said. \"I've known him all my life. He was a friend of my parents. They died in a car crash and he took me in. They were dirt poor all their lives and didn't have anything, really. They didn't even own the trailer we lived in. Wallace let me stay with him after they died. I didn't want to be a freeloader, so I helped him on the farm. I cooked, took care of the house and all the animals while he tended the fields. He offered to send me to school, but I told him no.\"\n\n\"Why?\" Ryan asked.\n\n\"All I ever wanted to be was a wife and a mother,\" she said. \"Don't need no college education for that.\"\n\n\"Reckon not,\" Ryan said.\n\n\"Anyway, Wallace and I fell in love,\" she said. \"I always had a bit of a crush on him, so it was pretty easy for me. We got married, had a boy and I thought we'd be together forever. Then he died.\"\n\n\"I've heard good things about him,\" Ryan said.\n\n\"He was a good man,\" she said. \"He worked hard, helped his neighbors when they needed it, took good care of me and our boy, Jason. He never got drunk, was never abusive and was always there for us.\"\n\n\"Sounds like you two were very happy,\" he said.\n\n\"We were,\" she said. \"We were crazy in love with each other.\" She started crying again. \"Now I've lost everything we worked so hard for.\"\n\n\"You haven't lost it yet,\" Ryan said. \"We're here,\" he added as he pulled into the bank parking lot. \"Might want to clean up a bit,\" he said, handing her a clean handkerchief. She wiped her face and checked her makeup in the mirror on the passenger side visor.\n\n\"You ready?\" he asked. She looked at him and nodded her head. \"Good,\" he said, smiling. \"Let's git 'er done.\" She chuckled and got out of the truck. They walked into the bank and Ryan headed straight for the elevator. They got in and Ryan punched the button for the fourth floor where Jay's office was located. An attractive receptionist met them as they got off the elevator.\n\n\"Mr. Goldsmith is expecting you, Mr. Caldwell,\" she said. \"Please, go right in.\" Beverly looked at Ryan and wondered who this man was and how did he command so much deference. She didn't know anything about the man who bought the old Winters place, and thought he was just a lonely drifter, living in that old, run-down house. He certainly didn't look like anyone special in that battered old hat, jeans and plain western shirt. And what happened to his face, she asked herself.\n\n\"Thank you,\" Ryan said, walking to a set of double doors. He opened the door and motioned for Beverly to go in first, then closed the door after walking through. Jay stood up from behind his desk and extended a hand. Ryan shook it and nodded at Sheriff Coltrane, who also stood up to shake his hand.\n\n\"Let's get this done, shall we?\" Ryan asked. Jay nodded his head. \"What does Ms. Simons owe, total?\" Jay wrote a number on a piece of paper and handed it to him -- $175,253.84. Ryan looked at Jay.\n\n\"And if this is paid, you'll release everything back to her?\" he asked.\n\n\"Yes,\" Jay said. \"But like I said before,\" he began before Ryan cut him off.\n\n\"Yeah, I know,\" Ryan said. \"Income to debt ratio. But if her debts are paid, that shouldn't be a problem, should it? I was led to understand this is the sum total of what she owes for everything.\"\n\n\"That's true,\" Jay said. \"But she still has monthly expenses to consider. Bills, utilities, gas, food, what have you. What she has coming in now barely covers that.\"\n\n\"Okay,\" Ryan said. \"Let me worry about that. What do we have to do?\" Jay positioned a card reader on his desk.\n\n\"Just insert your debit card and punch in your code,\" he said. After Ryan did that, he continued. \"Now punch in the amount you want to transfer,\" Jay added. Ryan did some quick math in his head and punched in $1,750,000.84. It was just under one percent of what he had deposited in Jay's bank, but he felt Beverly deserved a break.\n\n\"Are you absolutely sure about this?\" Jay asked, his eyes wide.\n\n\"Absolutely,\" Ryan said. \"That should mitigate any concerns over income to debt ratios, don't you think? Even after whatever taxes she might have to pay, that should last her a good long time.\"\n\n\"Yes, it will,\" Jay said. He turned to Beverly. \"Ms. Simons, if you could, please, insert your ATM card so we can complete this?\" Beverly nodded her head, pulled out her card and inserted it in the reader. As they watched, Jay clicked a few buttons on his computer and watched.\n\n\"The transfer has been made,\" he said. \"Let me just make one more transfer. Hang on.\" They watched as he typed something on his computer. He hit enter and watched for a few moments more. Then he punched a button on his phone and his receptionist answered.\n\n\"Yes?\" the receptionist answered.\n\n\"Mrs. Barber, would you please come into my office?\" he asked. \"And bring your notary stamp, if you would please.\"\n\n\"Right away, sir,\" she said. A few moments later, she came into the office. Jay looked at Sheriff Coltrane.\n\n\"Sheriff, would you please witness my signature on this?\" he asked.\n\n\"I'd be honored to,\" the sheriff said, standing up. They signed all the papers and Mrs. Barber notarized them when they were done. She made copies and brought them back to Jay, who handed a copy of the paperwork to Beverly.\n\n\"Ms. Simons, here's paperwork showing all your debts to this bank are paid in full,\" he said. \"You'll get the deed to your property and the title on your car in the next few days.\" He turned to the sheriff and handed him another set of paperwork. \"Sheriff, if you would please, run this over to the courthouse and get it filed, effective immediately.\"\n\n\"It'll be my pleasure,\" the big man said, taking the paperwork. \"While I'm at it, I'll get the paper to drop that public notice. Don't want folks to get the wrong idea.\"\n\n\"Do that,\" Jay said. It was common for the local paper to publish public notices on legal matters like foreclosures, divorces and auctions. Sheriff Coltrane stood before Jake, the papers in his hands.\n\n\"Mr. Caldwell,\" he said. \"I want you to know that it plum broke my heart to do what I did earlier. I take no pleasure out of that. Please accept my apologies.\"\n\n\"Accepted,\" Ryan said. \"But I think she's the one you need to apologize to.\"\n\n\"You're right,\" the sheriff said. He considered Ryan a bit before continuing. \"I don't know if you're a church-going man or not, Mr. Caldwell, but I get the feeling it was God's will for you two to meet out there like you did.\" He glanced at Beverly before continuing. \"You do know he's single, like you, right, Ms. Simons?\" She shook her head.\n\n\"I didn't know,\" she said. Sheriff Coltrane smiled as he nodded his head. He fished a set of keys out of his pocket and handed them to her.\n\n\"I'll get a deputy over to your place and have him take off all the locks,\" he said. \"You take good care of this man now, you hear me?\" She smiled as she took the keys.\n\n\"Thank you, sheriff,\" she said. \"I will.\" He turned back to Ryan.\n\n\"That was the damndest thing I ever did see,\" he told Ryan. \"You're a good man, Mr. Caldwell, and I thank you from the bottom of my heart.\"\n\n\"I appreciate that sheriff,\" Ryan said.\n\n\"You let me know if there's anything I can ever do for ya, okay?\" the sheriff said.\n\n\"Well, there is one thing,\" Ryan said.\n\n\"What's that?\" Sheriff Coltrane asked.\n\n\"No publicity,\" Ryan said. \"I know how something like this can get out in a small town, and I don't want any publicity.\"\n\n\"You got it,\" the sheriff said. \"Y'all have a nice day now, y'hear?\" he asked, touching his gray Stetson before he left.\n\n\"Here's your new balance, Ms. Simons,\" Jay said, handing Beverly a small slip of paper. Her eyes grew wide as she looked at the balance. She turned to Ryan.\n\n\"I can't accept all this,\" she said. \"I'll never be able to repay you.\" Ryan smiled.\n\n\"Don't even think about it,\" Ryan said. \"And yes, you can accept it.\" He turned to Jay. \"I trust you'll have one of your financial advisers work with her to create a budget and manage this so it lasts her for a while.\"\n\n\"I'll take care of it myself,\" Jay said. \"Just curious, why did you do this?\"\n\n\"I don't mind helping someone who's making an honest effort,\" Ryan said. \"Besides, I know what it's like to lose everything that means anything to you. A wise old man gave me a second chance once, so I figured I'd pay it forward.\"\n\n\"I understand,\" Jay said. He turned to Beverly. \"Give me a call this week and we'll set up an appointment, okay Ms. Simons?\" he asked. She nodded her head.\n\n\"I will,\" she said. \"Thank you so much.\" They said their goodbyes and walked out of the bank. Beverly was stunned by what Ryan had done and wondered what he wanted in return. He opened the door of his truck and helped her inside, then climbed in behind the wheel.\n\n\"When was the last time you had a decent meal?\" he asked.\n\n\"It's been quite a while,\" she said. \"Why?\"\n\n\"I don't know about you, but I could eat something,\" he said. \"Why don't you let me treat you to a nice lunch?\"\n\n\"Are you sure?\" she asked. \"After everything you've already done?\"\n\n\"It's only lunch,\" he said. \"Besides, it'll take a while for the deputy to get out to your place.\"\n\n\"Okay,\" she said. \"It's just been a while since a handsome man asked me out.\"\n\n\"Maybe we should see about getting your eyes checked while we're at it,\" Ryan said, indicating his scar. Beverly smiled.\n\n\"Call it a woman's intuition,\" she said. \"But I suspect under that rough exterior is a kind, handsome man.\" Ryan chuckled as he started truck. They left the bank and pulled into a steak house along the main drag. They went inside and was escorted to a booth in the back.\n\n\"This is the first time I've ever been here,\" she said. \"Looks expensive.\"\n\n\"I've eaten here a time or two,\" he said. \"They make real nice sirloin. You should try it.\"\n\n\"Maybe I will,\" she said. \"It's been a long time since I've had a steak.\" They placed their order and waited for the food to arrive.\n\n\"So,\" Beverly said. \"I've told you my story. What's yours? What did you mean about knowing what it's like to lose everything?\"\n\n\"I was married once as well,\" he said. \"A long time ago. Thought I had a good life. Then it all went down the toilet.\"\n\n\"What did you do?\" she asked.\n\n\"I was a mechanic,\" he said. \"A certified ASE Master Mechanic. Had dreams of opening my own shop one day.\"\n\n\"A mechanic?\" she asked. \"Do you still work on cars?\"\n\n\"Not for a long time,\" he said.\n\n\"What happened, if you don't mind my asking,\" she said.\n\n\"I don't mind,\" he said. \"Was married for about 17 years to my high school sweetheart. Had a good job, a nice home, a family. Wife came home one day and announced she was divorcing me. Said she didn't want to be married to a grease monkey who wasn't going anywhere. Seems she found greener pastures with a rich oil tycoon.\"\n\n\"Oh my God,\" Beverly said. \"That must've been horrible.\"\n\n\"It was,\" he said. \"And to add insult to injury, my daughter announced she was going with my wife.\"\n\n\"I'm so sorry,\" she said.\n\n\"Not your fault,\" he said. \"That day, they both died to me. So did my dreams.\"\n\n\"That had to have hurt so much,\" she said. \"I can't even begin to imagine what that felt like.\"\n\n\"Sure you can,\" Ryan said. \"I felt pretty much the same way you did when I picked you up this morning.\"\n\n\"But you still had your house, right?\" she asked. \"You still had your job and your dream of opening your own shop.\"",
        "\"Without Lisa and Sarah, none of that meant anything anymore,\" he said.\n\n\"So what did you do?\" she asked.\n\n\"Cried in my beer. Even thought about killing myself a time or two,\" he said. \"I even put a gun in my mouth once. I couldn't pull the trigger, though.\"\n\n\"Oh my God,\" she said.\n\n\"Ran into an old friend of mine at a bar one night after the divorce went through,\" Ryan said. \"He offered me a job and I took it. Traveled a lot outside the country for the next nine years.\"\n\n\"What were you doing?\" she asked. \"Where did you go?\"\n\n\"I was what you might call a private security consultant,\" he said. \"Wherever there were bad guys with attitude screwing with good guys just trying to make an honest living, that's where I went. Africa, South and Central America, Middle East. You name it.\"\n\n\"So, you were kinda like an equalizer,\" she said.\n\n\"I never thought of it that way,\" he said. \"But, yeah, I guess you could say that's what I did.\"\n\n\"And I take it you got paid good money to do this,\" she said.\n\n\"I did,\" he said. \"A whole lot more than I ever made as a mechanic. And I had a friend who helped me make even more money off the money I earned.\"\n\n\"Is that how this happened?\" she asked, indicating the eye patch and the scar on Ryan's face. He nodded his head.\n\n\"Yeah,\" he said. \"It was my last job. The sheikh I worked for made it possible for me to retire from the business.\"\n\n\"That's the wise old man you talked about earlier?\" she asked.\n\n\"It was,\" Ryan said. \"He suggested I go someplace quiet and find peace.\"\n\n\"So you came here,\" she said. Ryan nodded his head.\n\n\"Yep,\" he said. \"And it's been home to me ever since.\"\n\n\"I always wondered why someone would buy that old run-down house,\" she said. \"I remember playing with the kids who used to live there a long time ago. The place was pretty run down even then. So what are you doing now?\"\n\n\"Right now, I'm just dealing with family issues,\" he said.\n\n\"I thought you said your family was dead to you,\" she said.\n\n\"They were,\" Ryan said. \"Turns out my daughter married some analyst who somehow managed to track me down. She had a rare blood disease and needed a bone marrow transplant. So I helped her out. And of course, I ran into her mother.\"\n\n\"Let me guess,\" Beverly said. \"They want you and your ex-wife to be friends or something, right?\" Ryan chuckled.\n\n\"Something like that,\" he said.\n\n\"Are you?\" she asked.\n\n\"What, reconcile with her?\" he asked. He shook his head. \"No,\" he finally said. \"It's a bit complicated.\"\n\n\"No it's not, Ryan,\" she said. \"She ripped your heart out with her betrayal. I can understand you'd want to help your daughter. She's your flesh and blood. But I could never imagine being friends with the person who destroyed you like that.\"\n\n\"You're very wise, Beverly Simons,\" he said. \"Besides, I've just learned a few things about my ex.\"\n\n\"Oh?\" she asked.\n\n\"I just got back from seeing the family,\" he said. \"She was shot in the head.\"\n\n\"I'm sorry to hear that,\" she said. \"DO they know who did it?\"\n\n\"We know,\" he said. \"We also have an idea about why.\"\n\n\"Wait a minute,\" she said. \"I saw something on the news about a female oil company CEO who was gunned down. Was that her?\"\n\n\"Yeah it was,\" he said.\n\n\"Wow,\" she said. \"So what happens now?\"\n\n\"I don't know,\" he said.\n\n\"If there's anything I can do, please let me know,\" she said. He smiled.\n\n\"I don't know what you can do, but thanks anyway,\" he said. They finished their meal and headed out.\n\n\"I hate to impose after everything you've already done,\" she said. \"But would you mind if we stop at the Piggly Wiggly? I have to pick up a few things.\"\n\n\"Not at all,\" he said. \"I need to grab a few things myself.\" They stopped at the store and he walked with her, pushing the cart as she filled it up with groceries. Her eyes popped out when she saw him grab a packet of hot dogs and some TV dinners.\n\n\"You eat those things?\" she asked.\n\n\"Yeah, why?\" he asked.\n\n\"You'd be better off eating the cardboard that crap comes in,\" she said.\n\n\"So I've heard,\" he said. They paid for their food and Ryan loaded it in the truck. They got back in and headed out. By the time they got to her place, the gate was unlocked and open. He pulled in the driveway and parked in front of her two-story ranch house, then helped her carry everything inside.\n\n\"Well, I'd better get on home,\" he said. She stopped him at the door and wrapped her arms around him before giving him a kiss on the cheek.\n\n\"Thank you for everything,\" she said. \"I don't know what I would've done if you hadn't picked me up.\" He smiled as he looked into her pretty face.\n\n\"It was my pleasure,\" he said. \"If there's anything else you need, please let me know.\"\n\n\"I will, thanks,\" she said. \"Would it be alright if I come by every so often?\"\n\n\"Any time,\" he said. \"Let me give you my number.\" He wrote his cell number on a slip of paper she gave him and handed it back to her. \"It's been a long time since I've taken a woman out, but maybe we can go catch a movie or something if that's all right with you.\"\n\n\"It would be more than alright with me,\" she said with a smile. He left her house feeling like a teenager who had just arranged his first date. When he got home, he put the few groceries he had away and took his duffel bag upstairs. His phone began buzzing, so he took it out of his pocket, and noticed it was Sarah. That's when he realized he forgot to call when his plane landed. He answered the phone.\n\n\"Hello,\" he said.\n\n\"Thank God you're alright,\" Sarah said. \"I've been worried sick. What happened?\"\n\n\"Oh, I ran into a widow on my way home and helped her for a bit,\" he said. \"I'm sorry I didn't call, I just got home. Any news?\"\n\n\"No, not really,\" she said. \"We were just worried that something happened to you.\"\n\n\"I just had lunch with an attractive widow, then took her to the store,\" Ryan said.\n\n\"You mean, you actually took a woman out to lunch?\" she asked. \"What about all this stuff about no more relationships and living like a miserable hermit for the rest of your life?\"\n\n\"Well, maybe I spoke too soon about that,\" he said.\n\n\"Someday, you're going to have to tell me about this attractive widow,\" she said.\n\n\"I just might do that,\" he said. \"The FBI guys still there with you?\"\n\n\"Yeah,\" she said. \"Gillespie is playing cops and robbers with little Ryan if you can believe that.\"\n\n\"Now that's something I'd like to see,\" Ryan said. \"Listen, you guys be very careful, you hear me?\"\n\n\"We will, Dad,\" she said. \"Anyway, I have to go make dinner now. I'll call if I hear anything.\"\n\n\"Do that,\" Ryan said. The call ended, Ryan went downstairs and made a fresh pitcher of sweet tea, then went on the front porch. He sat down in his rocking chair, lit a cigarette and pulled out Lisa's phone.\n\nThe first thing he did was check to see if there was tracking software on it, the way Greg showed him earlier. He didn't see anything, but turned off the GPS anyway just in case. He didn't think anyone would be monitoring it in any case, since she was in a coma, but he thought he'd rather be safe than sorry.\n\nHe spent the next couple hours going through her emails and texts trying to find something that would give him a clue about what was going on. Most of it was dry, business-oriented stuff that didn't mean a lot to him. There were emails about things like audits and profit-and-loss sheets, and a few emails about minimizing the damage from Jake's pending trials, but not much of anything that helped him out in any real meaningful way.\n\nThen he came across an email that mentioned a retreat.\n\n\"I bet you can't wait for this year's retreat,\" Elmer had written. He looked through the thread, and read her reply.\n\n\"It'll be the first retreat I've been on without Jake,\" she said. \"I can't wait to get out of town for a bit to recharge.\"\n\nRyan thought about that exchange and remembered Elmer mentioning a retreat to him. What was it he had said? He thought hard and remembered Elmer telling him how Lisa had gone wild at their annual summer retreats. He figured out how to do a search on her email and started one using the word, \"retreat.\" He watched as the app searched on his keyword, the arrow continually spinning. He set the phone down and pulled his out, dialing Jorge's number.\n\n\"Hey, Ryan,\" Jorge said when he answered. \"You made it home, I see.\"\n\n\"Yes, I did,\" Ryan said. \"Look, I need you to see if you can find something for me.\"\n\n\"What's that?\" Jorge asked.\n\n\"It seems the executives of Knight hold an annual retreat somewhere out of town,\" Ryan said. \"Can you do some digging and see if you can find out where that might be? I'm thinking they own some property somewhere rural where they can go without being spied on by nosy neighbors.\"\n\n\"I'll do some searches and see what I can come up with,\" he said. \"It'll take me some time.\"\n\n\"No problem,\" Ryan said. \"Let me know as soon as you find something.\" They ended the call and Ryan had another idea. He called Bob's cell phone. His son-in-law answered on the first ring.\n\n\"What's up, Ryan?\" he asked.\n\n\"Tell me something, Bob,\" Ryan said. \"I'm curious to know how you found me out here.\"\n\n\"Well, it took some work,\" Bob said. He went on to talk about county records and macros and downloading spreadsheets, causing Ryan's eyes to glaze over.\n\n\"Bottom line, you found me by digging through county tax and property records, right?\" Ryan asked.\n\n\"Yeah, you could say that,\" Bob said. \"Why?\"\n\n\"You think you could do the same thing, only this time search for property owned by Jacob Knight or Knight Petroleum?\" Ryan asked.\n\n\"Yeah, I don't see why not,\" Bob said. \"I already have the macros programmed, I'd just have to change the search parameters.\"\n\n\"How long do you think that could take?\" Ryan asked.\n\n\"I don't know,\" Bob said. \"A couple days, maybe a bit more. I've already done the really hard work looking for you.\"\n\n\"Do it,\" Ryan said. \"Coordinate with Jorge Trujillo if you would, please.\"\n\n\"Yeah, sure,\" Bob said. \"When do you need this?\"\n\n\"Immediately, if not sooner,\" Ryan said.\n\n\"Alright, I'll get right on it,\" Bob said. Ryan gave him Jorge's number, then ended the call. He looked at Lisa's phone and saw the search had finally completed, and had displayed all emails mentioning the word, \"retreat.\" He began to read through them and realized the retreats were nothing more than three or four-day long parties filled with alcohol, illicit sex and drugs. A plan began to form in his mind as he read the emails.\n\nAfter reading the emails, he turned her phone off and yanked the battery. After smoking one last cigarette, he went inside, consumed a microwaved TV dinner, then went to bed.\n\nHe was out back at his homemade pistol range the next afternoon, shooting targets with his .45 caliber pistol when he heard someone call from behind him. He cleared his pistol and turned to see Beverly in a t-shirt and a pair of short shorts, holding a basket.\n\n\"Well, hello, neighbor,\" he said, taking in the lovely sight before him. Beverly looked at least ten years younger in those shorts, which exposed a lot of well-toned leg.\n\n\"Hello yourself,\" she said. \"Target practicing, I see.\"\n\n\"Yeah, I like to keep in practice,\" he said.\n\n\"You seem to do quite well, given you only have one good eye,\" she said. \"Mind if I try?\"\n\n\"Not at all,\" he said, handing her his ear protection. She put it on, then loaded a magazine and slid it into the handle. He was impressed that she knew how to handle the pistol. She took her stance and holding the pistol with both hands, fired nine rounds into the paper target he had placed up. She cleared the pistol and they looked at the target. One round went high and to the right, but the rest formed an impressive group in the middle of the target.\n\n\"Nice shooting,\" he said. \"Where'd you learn to do that?\"\n\n\"Wallace taught me to shoot when I was old enough to hold a gun,\" she said.\n\n\"He kept guns in the house?\" Ryan asked.\n\n\"Of course,\" she said. \"We had to sell them though. All except for my old .410 shotgun. I use that to keep the coyotes away from the chickens.\"\n\n\"I'm impressed,\" he said.\n\n\"I take it you have a few guns as well,\" she said.\n\n\"Yeah, one or two,\" he said. \"What's in the basket, if you don't mind my asking.\"\n\n\"Not at all,\" she said. \"I made up some lasagna and thought maybe we could have dinner tonight. Unless you have something else planned.\"\n\n\"I could go for some lasagna,\" he said. \"C'mon up to the house, it's about supper time anyway.\" He grabbed the basket and they walked to the house.\n\n\"I really like what you've done to the place,\" she said. \"It doesn't look quite as sad as it used to.\"\n\n\"Thanks. It's been good to me, so I figured I'd fix it up a bit,\" he said. He opened the back door and motioned for her to enter, checking out her legs as she went ahead of him. He noticed there was maybe a quarter inch of denim between her legs as she climbed the stairs into the house. Wallace was a lucky man to have this, he thought to himself.\n\n\"I see you remodeled the inside as well,\" she said. \"Very nice, but it seems a bit... spartan,\" she added, taking in the bare walls.\n\n\"Well, I didn't see any need to clutter the walls,\" he said.\n\n\"Maybe you need to make some new memories in here,\" she said. \"Some happy memories.\"\n\n\"Maybe,\" he said wistfully. He put the basket on the kitchen counter and she began emptying it, placing the dish of lasagna on a potholder he had next to the microwave. He pulled out a couple plates and some silverware, placing them on the table. Then he grabbed a couple glasses.\n\n\"I hope you don't mind sweet tea,\" he said. \"It's either that or Coke.\"\n\n\"Sweet tea is perfect,\" she said. He put ice in the glasses from the refrigerator door and poured them each a glass of tea. He grabbed a couple potholders from a drawer and carried the lasagna to the table. Beverly took the potholder it sat on and placed it on the table for him. He grabbed a spatula and dished them out a helping of lasagna.\n\n\"I hope you like it,\" she said. \"It's been a while since I cooked anything like this. I like to use a lot of mushrooms and cheese.\"\n\n\"I love lasagna,\" he said. \"Especially when it's full of mushrooms and dripping with cheese.\" He took a bite and savored the flavor. \"My God, Beverly, this is the absolute best lasagna I've ever had.\" She smiled as her face turned red from embarrassment.\n\n\"Thank you, you're too kind,\" she said.\n\n\"Not at all,\" he said. \"I could eat like this every day. You cook like this for Wallace?\"\n\n\"Yes,\" she said. \"I loved cooking for him. I also enjoyed making this for you.\" He looked at her and took in her features, her soft eyes, her dimples, her blonde hair arranged in a ponytail.\n\n\"Thank you very much,\" he said. \"This sure beats the hell outta TV dinners, let me tell you.\" She chuckled.\n\n\"I'm glad you like it,\" she said.\n\n\"So, how was your day?\" he asked.\n\n\"Well, I went into town and got some feed for the chickens,\" she said. \"The good stuff this time. It sure felt good. I felt, I don't know, alive, for the first time in a very long time. I can't tell you how long it's been since I felt this good.\"\n\n\"You shoulda called, I would've helped you,\" Ryan said. \"Those bags of feed had to have been heavy.\"\n\n\"Nonsense,\" she said. \"I'm a farm girl. I've been slinging bags of feed since I was little girl.\"\n\n\"I can believe that,\" he said. They ate their meals and engaged in small talk. Ryan found himself getting more comfortable with this woman, and he felt really good for the first time in ages. After they ate, he cleared the dishes, rinsing them off in the sink and placing them in the dishwasher. Beverly covered the lasagna and placed it on the stove as it was still too warm to put in the refrigerator. He refreshed their glasses with tea and began heading for the front porch.\n\n\"I'm sorry,\" he said. \"Old habit. I generally like to enjoy a smoke on the porch after I eat.\"\n\n\"Wallace and I did that too,\" she said. \"Would you mind if I joined you?\"\n\n\"Not at all,\" he said. They went on the porch and Ryan handed her a cigarette, holding the lighter for her. He pulled out another and lit up, taking his usual seat. She sat down with him.\n\n\"I really enjoy this time of the day,\" he said. \"Not too hot, not too cold.\"\n\n\"Me too,\" she said. \"It's been a long time since I've been able to just relax and take it all in.\"\n\n\"I understand that,\" he said. \"So tell me, how long were you married?\"\n\n\"I guess about 23 years,\" she said. \"I was 19 and he was 44. We were so in love.\"\n\n\"You said you two had a son,\" Ryan said. \"Where is he now?\"\n\n\"He's in the Naval Academy at Annapolis,\" she said. \"Got a congressional appointment. He's in his second year. Wants to be a Marine pilot.\"\n\n\"I'll bet you're proud of him,\" Ryan said.\n\n\"I am,\" she said. \"Very proud. He's the first one in our family to ever make it to college, let alone the Naval Academy.\"\n\n\"I've seen those Marine pilots in action before,\" Ryan said. \"They know their stuff.\"\n\n\"Were you ever in the service?\" she asked.\n\n\"Army,\" he said. \"Infantry. Served in Iraq and Afghanistan.\"\n\n\"Wow,\" she said. \"That's impressive.\" He shrugged his shoulders. \"Can I ask you a personal question?\"\n\n\"Please,\" he said.\n\n\"Are you in a relationship now? Is there someone special in your life? I mean, besides your daughter and grandson,\" she said. He shook his head.\n\n\"No,\" he said. \"I swore off relationships after Lisa and Sarah dumped me.\"\n\n\"That was over ten years ago,\" she said, shocked.\n\n\"Well, I haven't exactly been an angel,\" he said. \"I've been with a few women, but not for more than a couple hours at most.\"\n\n\"I see,\" she said.\n\n\"What about you?\" he asked.\n\n\"No, there hasn't been anyone in my life either,\" she said. \"To everyone here, I'm Wallace Simons' widow. The egg lady.\"\n\n\"I'm surprised,\" he said.\n\n\"Why do you say that?\" she asked.\n\n\"Well, you're beautiful, still relatively young, and you sure can rock a pair of shorts, if you don't mind me saying so,\" he said. She smiled.\n\n\"You think so?\" she said. \"Wallace loved it when I wore these. Said it reminded him of those girls in the Lil Abner cartoons.\"\n\n\"I can understand that,\" he said.\n\n\"Truth is, I haven't been able to relax or think of anything besides bills for the last few years,\" she said. She got out of her chair and stood before him. \"You know, it's been nearly six years since I've been with a man. And I've only been with one other man my whole life.\" She unbuttoned her cutoffs. \"I know we just met, but I feel a connection to you. I hope you don't think I'm being too forward, but I need you inside me. Please.\"\n\nAs he watched, she lifted her t-shirt over her head and tossed it on her chair, revealing a perky set of breasts. She unzipped her shorts and let them fall to her feet. She stepped out of them and placed them on the chair with her t-shirt. She stood before him, naked except for a pair of tennis shoes. He felt his manhood come alive as he took in her smooth body and shaved pussy.\n\n\"Make love to me, Ryan Caldwell,\" she said. \"Please. I need you so bad.\" He stood up, picked her up in his arms and carried her inside. He was surprised as how little she weighed. He carried her upstairs, her arms around his neck, and gently placed her on his king-sized bed. She smiled and got on her knees in front of him and helped him disrobe.\n\nOnce he was naked, she took his hard cock in her hands and enveloped him in her mouth, causing him to gasp. As he watched, she sucked his entire penis in her mouth, moaning as she did so. Before long, he exploded in her mouth. She swallowed everything he had to offer, then laid back on the bed with a smile.\n\nOne good turn deserves another, he thought, so he went down on her smooth, sweet pussy, kissing and licking her creamy center. Soon, she wrapped her legs around him and coated his face with her juice.\n\n\"I'm sorry,\" she said. \"I should've warned you. Sometimes I get a little juicy when I climax.\" He smiled and kissed his way up her lithe body.",
        "\"That's okay,\" he said. \"You can do that to me any time you want.\" He positioned himself between her outstretched legs and positioned himself to enter her.\n\n\"Do it,\" she moaned. \"Please, baby, do it. Make me your woman. Fuck me.\" They both gasped as he entered her. He couldn't remember feeling anything so good before. Soon, he was all the way inside her. He began stroking in and out and she matched his thrusts. He felt as if he could do this all night long and he never wanted it to end.\n\n\"Yes,\" she moaned. \"Oh God, yes. You feel so damn good inside me. Fuck me. Don't ever stop fucking me,\" she whispered in his ear.\n\n\"You feel so warm, so tight,\" he said back. \"I could do this all night.\"\n\n\"Me too, baby,\" she said. \"Oh God, I need this. Fuck me, lover. Fuck me. Cum inside my pussy. Please. Fill me up.\" He couldn't help but respond to her and soon, he exploded inside her. She ground herself into him, raking his back with her nails as her orgasm hit. They both growled as they climaxed together, and held each other tight, enjoying the moment. For Ryan, this was much better than anything he had ever experienced before, even with Lisa.\n\nAfter they calmed down, they stared into each other's faces for a few minutes. They kissed each other deeply, their tongues wrestling for control.\n\n\"My God, that was wonderful,\" she said when they finally broke their kiss.\n\n\"It was better than that,\" he told her.\n\n\"Your ex was one stupid bitch to cheat on this,\" she said. \"I'll never do that to you.\" He smiled as he considered the possibilities.\n\n\"Yeah, she was,\" he said. \"And I'd never do that to you, either.\"\n\n\"I know,\" she said. They spent the next couple hours making love to each other, in as many positions as they could think of. Drained, they lay in each other's arms, each lost in their own thoughts.\n\n\"I know you said you've given up on relationships, but do you think we can at least be partners?\" she asked. \"Maybe friends with benefits?\"\n\n\"Maybe I was a bit too hasty about giving up relationships,\" he said. \"But yeah, we can certainly be partners.\" She got up on one knee and wrapped a finger around his.\n\n\"Then it's a deal,\" she said. \"An exclusive partnership?\"\n\n\"Sure,\" he said. \"Exclusive. Who knows where this can lead.\" She smiled and kissed him deeply. She got off the bed when they broke their kiss.\n\n\"I've got to get back home,\" she said. \"I'm usually up very early to feed the chickens and gather the eggs.\"\n\n\"Need any help?\" he asked.\n\n\"I got it,\" she said. \"Maybe next time you can spend the night at my place and then you can get up at 5:00 in the morning with me.\" He laughed at that. \"You think I'm kidding, don't you?\" she asked.\n\n\"You really get up that early?\" he asked.\n\n\"Yep,\" she said. \"Been doing that since I was a little girl. That's what it's like on a farm, you know.\"\n\n\"Damn,\" he said. \"You're one impressive lady, you know that?\"\n\n\"I'm glad you think so, cowboy,\" she said, giving him a kiss. \"You're pretty impressive yourself.\" They dressed, then headed downstairs. \"You might as well hang onto that lasagna, maybe you can finish it off tomorrow or something,\" she said, making her way to the door. \"I'll get the dish later. Don't worry, I know where you live, remember?\"\n\nThey held each other for several minutes at the door.\n\n\"I never thought I'd feel this way again,\" he told her. \"Thank you. You're a wonderful woman, Beverly Simons.\"\n\n\"And you're a damn good man, Ryan Caldwell,\" she said. \"My man. Remember that, partner.\" He smiled and they kissed each other good night. He watched as she went to her car and drove off. He smoked a cigarette on the porch, thinking about what had just happened. Was Sheriff Coltrane right? Was Beverly be the woman he was meant to be with? For the first time in ages, he felt content -- happy, even. He finished his cigarette and went back to bed.\n\nThe next two weeks flew by for Ryan. After that first night with Beverly, he began spending every other night at her house, waking up at 5:00 after a rousing night of lovemaking. He even helped her with her chickens, and his respect for her grew with each passing day.\n\nHe realized just how hard she worked. And it turned out those bags of feed could get pretty heavy. How did she lug those around all these years by herself, he wondered. Not only did she tend to her chickens, she kept her house neat as a pin, cooked meals fit for a king and still had enough energy left over to make him feel like a new man at night.\n\nOn top of all that, she found that her egg business was starting to take off again. So most of her days were spent delivering eggs and taking orders for more.\n\nOn the nights he stayed home, he found himself waking up at 5:00 anyway, so he would start his days with a workout and a run. The rest of the time, he spent going through years of Lisa's emails, trying to glean what he could from them.\n\nHe also stayed in touch with Jorge, Bob and Sarah. Bob and Jorge were pretty sure they had the location of the Knight retreat nailed down.\n\n\"It looks like it's only a couple hours or so north of where you are, in New Mexico,\" Jorge said.\n\n\"Seriously?\" Ryan asked.\n\n\"Yep,\" he said. \"I'll send you a Google Map link and you can check it out for yourself.\" He did, and Ryan printed out a large map of the area so he could study it closer.\n\nSarah informed him that Lisa was finally brought out of her medically-induced coma. As the doctor feared, the damage to her brain was fairly extensive. She had lost a lot of her motor control and could barely speak.\n\nShe was now confined to a wheelchair most of the day, and was undergoing physical therapy. But, the doctor said, it was highly unlikely she would ever be able to walk more than a few steps at a time. She was also going through speech therapy, and, they said, it was possible she might be able to fully communicate on her own -- some day.\n\nThe FBI agents were still watching over Bob, Sarah and his parents, but the higher-ups were beginning to think the danger had probably passed and were considering the possibility of pulling the protection details.\n\nThe court case against Jake was proceeding slowly, and from what he could glean from his FBI contacts, the investigations against Knight and Elmer Jenkins were bogged down in minutiae and legal motions.\n\nA couple weeks later, Ryan decided it was time to let Beverly know what was going on, so he explained the entire situation to her one night over dinner. He even told her about the nine years he spent as a mercenary. She sat silently as he laid it all out for her. When he finished, she nodded her head and thought for a moment before responding.\n\n\"Thank you, Ryan,\" she said. \"I appreciate that you trust me enough to tell me the whole truth. I can understand why you held back before. I would probably have done the same. The truth is, I suspected something like this before.\"\n\n\"Really?\" he asked.\n\n\"Yes,\" she said. \"You may dress the part, but it's obvious you're not just some dumb redneck. I see the way you carry yourself, the way you handle yourself and the way you take everything in -- almost as if you're planning some kind of defense. Almost as if you're expecting an attack. I've seen that faraway look you get in your eye sometimes, almost as if you're a thousand miles away. And I've heard you cry out in your sleep.\" He looked at her, shocked.\n\n\"Who's Dawson, by the way? I've heard you call out, saying something like, 'Dawson! No!' What's that all about?\"\n\n\"He was a comrade of mine,\" Ryan said. \"We were in Africa. A grenade was tossed into our camp. The rest of us scattered for cover, but not Dawson. He threw himself on the grenade just as it went off. He saved us all.\"\n\n\"But he didn't make it, did he?\" Beverly asked. Ryan shook his head, remembering that night.\n\n\"No,\" he said, a tear falling down his cheek. \"We were surrounded and weren't able to get him out of there. We used his body to give the rest of us cover. He had a wife and three kids. I'm the one who had to tell her that he wasn't coming back.\"\n\n\"Oh my God,\" she said. \"That must've been terrible.\"\n\n\"I've lived with the guilt of that ever since,\" he said quietly. \"I keep thinking that should've been me. He had a family to live for. I had nothing.\" She came to him and held him in her arms as he wept bitter tears.\n\n\"It's okay,\" she said. \"That's all in the past. It's over. I'm here with you now. I am curious, though. Why tell me all this now?\"\n\n\"Because I'm falling for you, Beverly,\" he said. \"I don't want there to be any secrets between us.\"\n\n\"Guess what, cowboy?\" she asked. \"I'm falling for you, too. I'm your partner in all this, remember?\" He nodded his head. \"And where you go, I go. That's just the way it is. You hear me, soldier?\" He smiled as he nodded his head.\n\n\"I hear you,\" he said. \"Loud and clear.\"\n\n\"Good,\" she said. \"So, what are you planning to do about this retreat? Are you thinking about going after it?\"\n\n\"I don't know,\" he said. \"I'm tempted. I have a lot to work out yet.\"\n\n\"Just don't do anything stupid,\" she said. \"I've just found you and I don't think I could stand to lose you, too.\" He smiled.\n\n\"No problem,\" he said.\n\nA week later, he got the call he feared might come. He had just finished dinner at Beverly's house when his phone rang.\n\n\"Ryan?\" Bob said when he called. Ryan could tell Bob was upset.\n\n\"What's going on, son?\" Ryan asked.\n\n\"They took Sarah and little Ryan,\" Bob said, hysterical.\n\n\"Who took them?\" Ryan asked.\n\n\"Elmer's boys,\" Bob said. \"I came home from work and the two FBI agents were dead in our living room and Sarah and Ryan were gone. They left a note saying to call off the authorities or Sarah would be the center of their next retreat. I've called the FBI, but I don't know if they're doing anything. They won't tell me anything.\"\n\n\"Okay, son,\" Ryan said. \"I'll take it from here.\"\n\n...\n\nTo be continued.\n\n \n"
    ],
    "authorname": "saddletramp1956",
    "tags": [
        "cheating",
        "father",
        "outdoors",
        "retreat",
        "wife"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/a-fathers-justice-pt-04"
}