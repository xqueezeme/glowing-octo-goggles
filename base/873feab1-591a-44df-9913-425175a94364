{
    "title": "Binoculation Ch. 06",
    "pages": [
        "Sex Before Christmas\n\nHello again, readers. Glad to see you're back, Happy Holidays.\n\nThanksgiving was fun, and I received a couple of key takeaways from that gathering.\n\nMainly, the organic growth of a network of binoculated allies, from the inner circle of Mother, Rosie, and Julia, who all knew about the process enough to assist. Mother and Rosie started scouting for converts on their own, Mother especially. Julia's help with Father was pleasantly unexpected.\n\nThen there was the outer circle, folks like the Estradas and Roquefords. Conditioned to be allies instead of servants, the upside to expanding and strengthening this layer was obvious. I was at the point with Kenneth Estrada, where I could have sex with both his wife and Rosie in front of him and he wouldn't bat an eye. I don't think James was to that point yet where I could tit-fuck his wife in front of him. Although Maverlene had sent a photo of her bare breasts with a makeshift phallus between them that said, \"Missed you.\" I love my life.\n\nOver Thanksgiving, I added to my social circle with both my father and Autumn Jensen. In fact, before Thanksgiving weekend was over, she had unceremoniously ended her relationship with her fianc\u00e9 and texted me more every day. I set up a \"coffee\" date with her.\n\nTime had pacified my need for vengeance. I reasoned that trying to change Father's mental conditioning might cause him to lose his empire, so I decided instead to endear myself to him, inheriting his assets to expand my own power base. If I was lucky, he would consider his wife one of those assets, and willingly give her to me. It just made more sense to me.\n\nI explained this to my mother as she sucked me off. Julia munched on her cunt as well. It was fun telling her how things were going to be while she worshiped my cock. Having Julia's tongue crammed into her buttery snatch lessened any negative emotions and I think delivering the information that way was something I preferred. Rewarding her with a load of semen down her throat was a son's responsibility.\n\nShe agreed, but I knew she had some reservations. I promised her I'd be careful as I fucked her asshole, pushing her lush back down to Julia's waiting cunt, hungrily waiting for mother's tongue to fill it up.\n\nRosie was at the Estrada household. In an act of trust, I borrowed the binoculars to Rosie to use on her family. I had explained to her what images to go with and how to switch them out. Mother had been present for this as well. It was strange to see how willing they were to learn. Rosie became my lieutenant in charge of the Estrada household. In the future, any binoculations on her family would go through her. Given both her bisexuality and her incest fetish, Rosie wouldn't need to be told to bring her younger sister Abigail into the fold when the time arrived. I looked forward to what surprises she had in store.\n\nMother was supposed to be recruiting, but given current events, she simply hadn't had the time. However, she had the bright idea of inviting both Autumn and Summer to a book discussion; mainly trashy romance novels.\n\nI wanted to share an event that happened over Black Friday. We were at an outlet mall getting our exercise in and adding to lingerie collections. all positive things. We ate at one of the local restaurants. Julia went to the restroom to clean herself up after we had a messy bout of sex in one of the dressing rooms.\n\nI was high on Julia, due to how instrumental she was with both father and Summer over Thanksgiving. It was nice to see her come into her own. Today I let her do whatever she wanted and for the first time, I felt like there was something intimate between us.\n\n\"I want you both the use the binoculars on yourselves.\"\n\nRosie looked wary, but mother took her hand affectionately; she knew.\n\n\"Casper's going to add something to us. I'm assuming it has something to do with Autumn?\"\n\nRosie rolled her eyes before saying, \"Casper, she's got a hot bod. I don't need the binoculars to know that.\"\n\nI smiled. \"Then it'll be like nothing happened. I want you to use them for 30 minutes. I don't care when or how, but within the next couple of days.\"\n\nMother nodded. \"Okay.\"\n\nShe mouthed the word \"Master,\" with a playful look. I cocked my head to the side inquisitively.\n\nRosie caught the same thing. She didn't mouth the word, but her rebellious demeanor changed.\n\n\"I want you both to know I'll be spending time with Autumn away from the house. On the subject of dating, I was thinking if you two wanted to go out on a date, I approve.\"\n\nRosie flushed but exchanged a meaningful glance with Mother. She's so cute when she tries to downplay something that's important to her.\n\n\"I think that would be a wonderful idea. What do you think, Rosie?\" she said, her eyebrow raised in inquiry.\n\nSometimes Rosie is an open book. Her obvious feelings were on full display, and I could see a measure of reciprocation, as Mother was clearly attracted to the young woman, wanting to explore those feelings.\n\n\"O-Okay Sha-Shari, if you think so,\" Rosie stammered. She was so adorable.\n\n\"I don't fuck on the first date, Rosie,\" Mother said, and I nearly did a spit take.\n\nAfter being shocked by Mother's trash talking, the young woman grinned. \"That's okay, Shari, I'd settle for eating your pretty pussy.\"\n\nWe were having a good laugh when Julia came back.\n\n\"What did I miss?\" she asked.\n\n\"Shari asked me out on a date,\" Rosie said, her voice hopeful.\n\n\"I thought Rosie asked me out on a date,\" Mother said teasingly.\n\nJulia sat beside Rosie and offered her a fist bump, which Rosie took.\n\nThat simple maneuver was the highlight of my day. It signified the moment where Julia became one of the girls. It went unsaid, but their acceptance was undeniable. It was a significant moment.\n\nThat wasn't the only eventful incident in the next month. Dating Autumn in winter might be an odd statement, but it was true and for the week after Thanksgiving, we dated twice; once during the week where we met at a coffee shop called \"Bean There, Done That,\" and once at my home.\n\nIt became clear we would have to go with a long, once-a-week binoculation session for Autumn. We began spending more and more time together as we got to know each other.\n\nOf course, I wanted the imagery to be special, so I would take pictures of us dating and use those pics to reinforce the idea of us in her mind. I realized a couple of things about Autumn. One, she loved animals, which meant our house was going to be full of pets. Two, she had a soft spot for the needy; she enjoyed not just giving to charities, but in getting her hands dirty. Our second date was helping prepare meals for homeless families. I have to tell you, that was actually a fun time. Some of you may think it was an obvious act, but I'm here to say that, at least so far, Autumn was the real deal. Her sister was another story.\n\nFirst week imagery for Autumn was standard; it started out centered on obedience, transitioning to photos of us on our dates. The results played out in the second week, as her affection for me increased. There were obvious physical cues, but she was a combination of strong-willed and ethical. I could tell she wanted me, but she was playing it cool, and she had her reasons. She also was on the lookout for any cracks in the armor, much the same as me.\n\nYou might think the discovery of Autumn's kind nature and her genuine predilection towards helping the poor would cause some sort of soul-searching guilt on my end, but one look at her body shattered any such regard. I had, however, elected to date her while slowly indoctrinating her instead of the usual strategy. I wanted things to appear organic. It bears repeating it was my goal to convert this ethical, generous woman into a wanton slut who would eventually eat her own sister out while my cock plunged into whatever hole I felt like filling.\n\nHowever, I saw no reason to change her kind-hearted nature. In fact, if we could keep it outstanding. Looking at my father's darker nature, having women like her around kept me honest to an extent. Autumn was worth the prospect of a few dogs and cats in the house.\n\nThe next sequence of imagery was more experimental. It was a Thanksgiving photo of me at the head of the table, slicing the turkey. I was trying to convey two things; first, that I was an authority figure, second the important of family. I also ended up using that image on my father; more on that later.\n\nThe other piece of imagery was of me, Julia, Mother, and Rosie all together. It was a picture suggestive of family with me as the authority figure instead of Mother again. I felt this image got Autumn used to the odd dynamic we had going on within the household. I could explain Mother, Julia, and Rosie to a point, but it didn't take Father long to find out the truth of it, and I could tell from Autumn's morality it would be a major sticking point.\n\nAnd it worked wonders. Autumn seemed to accept the other women in my life as normal. The question came up on our dates, though. While I explained Julia and Rosie as close friends, it was clear I was in a race to indoctrinate Autumn before she realized I was a proud owner of my very own harem.\n\nDecember 15 Julia announced she was \"late.\" It was almost a given that she was pregnant, and we were in high spirits. That night, we had entirely too much fun and in the morning, I got a surprise visit from Autumn that almost blew our cover.\n\nThat was the day I got my first dog. I became the happy owner of a purebred pointer named Rollie. I was pretty psyched about it, as it was a gift from Autumn.\n\nI binoculated her that weekend with explicit imagery of Mother and me engaging in sex, and not just any kind of sex. The particular image was of me entering her from behind while she wore a collar and I held the chain. It was at the peak of her orgasm while I came inside her sodden pussy. It was a beautiful picture, quite lewd. Her nipple piercings and chains were as visible as her pleasure.\n\nFor the next couple of days, communication was sparse as her mind worked to incorporate the new programming. I'll admit to being a little eager to see how she incorporated the imagery. If I was going to have both sisters, getting her to accept incest was a key element. I knew she was hesitant about the imagery, but it was my hope by the end of the week she had accepted it.\n\nOn Friday the 17<sup>th</sup>, we found out what we already knew; Julia was pregnant. I texted Autumn I would be busy for the rest of the night and let it go at that to celebrate in harem-esque fashion. I took pictures that night that I intended to use on Autumn. I wanted her to accept my harem and imagery of me having sex with my sexy collared slave sluts might be useful to her continuing indoctrination.\n\nRosie and Mother started dating, but I'll let her fill you in on specifics as she has taken up blogging.\n\nFather was coming along, and my change of strategy seemed a more intelligent choice. Indoctrinating him into believing I was the authority figure in the family gave me a chance to take over as his heir. Until then, I could learn the ropes and perhaps even convince him to be more constructive with his time.\n\nI also sent him imagery of my harem, fully clothed and tasteful, but all with collars and myself holding the chains. It was a fun picture, because when I attached their collars, each woman had to deal with an orgasm. Let's just say when I was done those clothes came off quick. My reasoning behind the images was to communicate they were my women. I had Mother in the forefront, so Father knew beyond the shadow of a doubt that Mother was my property. It seemed to work.\n\nI discovered some things about my current sexual conquest. Autumn Jensen didn't just shy away from the limelight; she was horrified by it. I think it had to do with a dysfunctional relationship with her older sisters, Summer and Gretta, who currently was married to a professional golfer named Silas Martin. They had the sort of relationship where they went through the paces of talking, but never actually communicating about things that mattered. Autumn resented Summer for what I assumed to be obvious reasons, but the key word is \"assume.\" That word always makes me want to learn more.\n\nSaturday the 18<sup>th</sup>, Autumn sent me a morning picture of herself lying in bed with not much on. It was clearly meant to titillate, and it did. I showed the picture to Rosie, and she responded with an \"Oh my.\"\n\nI sent her a picture of me almost naked in the bathroom. It was quite cute, as our communication throughout the day turned out to be a series of inappropriate texts.\n\n\"Come over,\" I finally texted her.\n\n\"You come over to my home,\" she texted me back. Now this represented a major shift in etiquette, as she had never invited me to her place before. The significance wasn't lost on me, all a part of the plan. It would seem tonight was going to be the night.\n\nI came over with a bouquet of roses and a bottle of superb red wine. She greeted me at the door dressed in black yoga pants and a comfortable powder blue satin shirt with a plunging neckline, showing off her ample cleavage. Autumn had put a lot of time into looking alluring tonight, successfully so.\n\n\"Nice place,\" I said, meaning every word. Tastefully decorated, you could tell her favorite color was aqua blue. It was easily the smallest apartment I had ever been inside, but Autumn made the most out of her space.\n\n\"Thank you, Cas,\" she said, flashing that wholesome smile.\n\nShe took me on a tour that took less than five minutes. The apartment basically had three rooms. One room was a living room, kitchen, foyer, and dining room, another was a bedroom and closet, and another was a bathroom.\n\n\"Autumn, you don't have to live like this, you know,\" I teased.\n\nShe got a thoughtful look on her face. \"I know, but I like the idea of living with as few possessions as possible.\"\n\nI laughed good-naturedly. \"Living humbly also makes one value the things they have.\"\n\nI gave her a look, causing her to blush.\n\n\"Did you work on that on your way over?\"\n\n\"Yeah, it sounded good,\" I said, smiling. \"Was it okay? Did I come across too creepy?\"\n\nShe nodded. \"You did alright, Cas.\"\n\nI took her into my arms, giving her a light kiss on the lips. She responded, hugging me.\n\n\"Ooh, you feel so good, Cas,\" she said, pressing her body against mine. I felt her body relax as I held her in my arms.\n\n\"Missed you this week,\" I spoke. Her blond hair smelled freshly washed, with a hint of sweet-smelling perfume.\n\n\"I know, I know. I was going to offer you something to eat, but now I just wanna stay in this hug.\"\n\nShe wasn't the only one.\n\n\"Thanks again for inviting me over,\" I said.\n\nStill in the hug, she pulled back to look me in the eye before answering. \"You don't need to thank me. How many times have I been over at your place?\"\n\n\"More than one,\" I spoke. \"I know inviting me into your place was a special thing, and I wanted you to know I appreciate it.\"\n\nShe smiled, her pretty face flushed a bit, then she kissed me hard on the mouth. It wasn't unexpected, but it was nice.\n\n\"Cas, I want you to know I really like you. I know I probably seem flighty and unfocused, but I'm just reassessing my options right now.\"\n\n\"Flighty and unfocused?\" I asked, curious.\n\n\"Breaking up with my fianc\u00e9 suddenly, along with how much time I spend outside and at the animal shelters. I would forgive you if you told me to take a hike.\"\n\nI smiled at her. We were still hugging, but I sensed she wanted to talk first.\n\n\"Do you have anything to eat or some glasses for our wine?\" I asked.\n\nShe liked the wine better than the flowers, which was typical of Autumn. We adjourned to her living room-dining room, where her media setup was a laptop. It was a cozy affair, which was fine with me. We had wine and cheese, and a conversation.\n\n\"I know you're close to your mom. Has she gotten back into the dating pool?\"\n\n\"She's currently dating someone,\" I said.\n\n\"Oh? Anyone I know?\"\n\n\"She was there at Thanksgiving.\"\n\nAutumn thought about it for a bit before her eyes widened. \"Julia?\"\n\nI shook my head no. \"Rosita Estrada,\" I said.\n\nAutumn gasped. \"The little girl?\"\n\n\"She's nice, Autumn. I like her and she treats Mother like a queen.\"\n\n\"That's sweet. I thought maybe you and her...\"\n\n\"Rosie and me?\"\n\nAutumn chuckled, amused by the mix-up.\n\n\"No silly. You and your mother. I thought maybe there might be something there.\"\n\nI laughed. \"Mother and I?\"\n\nShe nodded, blushing. \"I think you'd be great together. Isn't that weird? I don't know why. I hope you don't think I'm a complete perv.\"\n\n\"Before you get too embarrassed, I think it's hot that you think mom and I could be an item. I guess that makes me a total perv, too.\"\n\n\"Are you serious?\" she asked.\n\nI nodded, shrugging. \"Incest isn't one of my hangups. If Mom was interested, I'd tell her I was taken already by a beautiful blond who likes animals.\"\n\nShe blushed. \"Flatterer.\"\n\nAutumn was honest to a fault. This was interesting. \"Hey, if you're attracted to Mother, I wouldn't hold that against you.\"\n\nHer eyes glittered. \"Cas, your mom is hot. I'm shocked she's still single.\"\n\nYou could have knocked me over with a toothpick. It was clear she was turned on by the thought.\n\n\"Maybe I could arrange a threesome,\" I teased, but I watched the stunning blond, and it was clear she was into it.\n\n\"You must think I'm so bad,\" she said.\n\n\"Come over here so I can punish you,\" I said, putting as much authority into my tone as I could muster.\n\nAutumn crawled over to me seductively.\n\n\"I deserve to be punished,\" she said, her voice husky with lust.\n\nShe crawled up my body as I lay on her sofa.\n\nThat night was special. Autumn was tentative at first, but once my tongue found her pussy, it set her off and she gave herself to me. She offered protection, and I refused; I just didn't enter her. Instead, it was oral sex all the way. I was fine with it, because a part of me wanted to tease her. I knew she ached for me.\n\nI woke up before she did. Both of us were naked, and I decided the best way to wake her was with my tongue inside her pussy. Autumn approved, with both hands and her thighs locking my head in place when she finally came herself, and loudly.\n\n\"You went down on me,\" she said afterwards. She sounded amazed for some reason.\n\n\"Yes, that's what boyfriends do,\" I said. \"And by the way, you taste amazing. I'll show you.\"\n\nWe kissed, and she unabashedly sucked on my tongue.\n\n\"I don't taste half bad,\" she purred.\n\n\"You taste incredible. Why wouldn't I go down on you?\"\n\n\"My ex never did.\"\n\nI couldn't hide my surprise. Some people do not know what they're missing.\n\n\"So, you like it when I go down on you?\" I asked.\n\nShe turned to me. \"I love it.\"\n\n\"Show me. Suck my cock, Autumn,\" I said.\n\nShe hesitated for an instant before kissing her way down my body.\n\n\"It's a sturdy cock,\" she said. \"I like it.\"\n\n\"It likes you too,\" I spoke.\n\nShe giggled before engulfing my cock in her mouth. Autumn needed practice in the blowjob category, but she was enthusiastic. That was okay. Cock sucking was a learnable skill.\n\n\"Grade me,\" she said, afterwards.\n\n\"As a host? A plus, milady,\" I said.\n\nShe giggled. \"No Cas, grade me on what I just did.\"\n\n\"What did you just do?\" I asked.\n\nShe looked at me, flushing with embarrassment. \"Sucked your dick.\" Her mouth turned up into a slight grin.\n\nI returned her gaze. \"You sucked my cock, and I ate your pussy. It's called oral sex, see, and when a man and woman...\"\n\nShe laughed, and we tussled for a bit, which degenerated into foreplay, which degenerated into me eating her pussy again. She was quite appreciative, and I avoided telling her how bad she was. I thought I was out of the woods until I finally left her abode.\n\n\"Come over, spend the night,\" I said, eager to binoculate her again. This time, I was going to use more sexual imagery. Being in a harem was something that was going to turn her on before I let her know she was part of one.",
        "\"If it's like tonight, count me in,\" she said. We kissed at her door.\n\n\"Was I that bad?\" she asked suddenly.\n\nI did a double take. \"What?\"\n\n\"Was I that bad at sucking cock? I noticed you changed the subject when I asked for a grade.\"\n\nI looked at her. \"How many blowjobs have you given?\"\n\n\"A few,\" she said, with an almost resigned tone. \"My ex didn't like me giving them.\"\n\n\"It's something you get better at with repetition,\" I offered.\n\nShe looked at me. \"So you've eaten a lot of pussy, then?\"\n\nI looked at her quizzically.\n\n\"You're so good at it. Must have been all the repetition.\"\n\nI grinned, trying to gauge her emotional state.\n\n\"I enjoy eating pussy, Autumn. You'll just have to find a way to get used to it,\" I said teasingly.\n\nWe kissed once more, making a date for that night at my house. The day couldn't pass fast enough. I let my women know and I had a bedroom prepared for Autumn and myself. Julia could stay with Rosie and Mother in the main bedroom. The bedrooms themselves weren't far from each other, so I hoped that with a combination of tonight's binoculation and her realization the other women were having sex down the hall, eventually she'd just want to become a part of it. I knew she was fantasizing about mother and me already. Tonight, I was adding Rosie and Julia to the mix.\n\nI gave instructions to Mother to be more affectionate in her interactions with Autumn as well. I told Rosie I was adding her to my girlfriend's imagery, and she was excited.\n\n\"When are you adding her sister?\" she asked, practically salivating.\n\n\"Soon, Rosie,\" I responded. Since being binoculated with a photo of Autumn, Rosie was more receptive sexually towards her.\n\nSunday night, Autumn came over, looking incredible. She even brought an overnight bag. I bet she thought she was ready for anything.\n\nHow wrong she was.\n\nIt was interesting to see Autumn react to Mother's attention. I think something happened and I'm going to say it was on account of Rosie and Mother's budding romance. Both women were happier and more confident, especially Mother. It was nice seeing both of them happy, but especially Mother. Given the recent situation, she deserved nothing less, and I'm thinking she saw her time with Rosie as special. I'm wondering if Rosie isn't working up the nerve to ask Mother to marry her. I wonder what Mother's answer would be. Things to ponder, yes?\n\nBack to Autumn, who received somewhere close to an hour's worth of binoculated imagery of the harem. An overhead photo of me lying on my back, with mother on one side, Julia on the other, and Rosie with my cock in her mouth, all looking at the camera, complete with me holding their leashes.\n\nThat night, Autumn and I retired to what was Rosie's bedroom. She used that about as much as I used my bedroom in the basement.\n\n\"Guess what?\" she asked, taking in the room as we entered.\n\n\"What?\"\n\nShe continued looking, walking over to the closet, looking at the walls. She wore a look of playful suspicion.\n\n\"This isn't your room, is it?\"\n\nI shrugged. \"My room is downstairs. I can show you, if you want.\"\n\nShe wore her usual sunny grin, but there was lust there as well. The binoculation had ramped up her desire.\n\n\"Why did you bring me here, Cas?\"\n\n\"Because my downstairs bedroom is far away from the other bedrooms. I want Mother to get used to the idea of you being around, so if she heard noises, it would drive home how serious we are,\" I said, which was mostly true.\n\nAutumn watched me closely. Her attentiveness made her tough to lie to. She would have made an excellent detective.\n\n\"You want your Mom to hear us having sex?\" she asked.\n\nI nodded. She walked over to me, desire rising in her eyes. I could see her nipples stand out as her excitement grew.\n\n\"Maybe we should get started, then?\" she asked huskily. Her hand found the button of my shorts, unfastening it.\n\n\"Are you okay with Mother hearing us?\" I asked, caressing her cheek, pulling her close.\n\nShe melted into me as our lips found each other. It was like she was on fire.\n\n\"Do you think if we're loud enough, she'll come over to check on us?\" she asked, putting up her arms while I took her shirt off. Her magnificent tits looked like they were aching to be freed from the lacey white bra.\n\nMy eyes didn't leave hers. \"If she did, what would you do?\"\n\n\"Oh my God,\" she said, flushing with arousal. \"I think I would do whatever she wanted.\"\n\nI worshiped her breasts with hands and tongue, getting her to breathe heavily before I looked her in the eye again.\n\n\"I'd tell her to join us.\"\n\n\"You'd tell her?\" she asked. It was clear the fantasy was turning her on.\n\n\"Autumn, I would order her to join us.\"\n\nMy girlfriend pushed me onto the bed, then followed. She ravished me in an almost feral manner, her mouth and hands inexperienced but so very enthusiastic.\n\n\"Suck my cock,\" I ordered, and she fell into it right away. She was more intense tonight than last night. She wanted to please, and it was a great place to start from. I was excited to teach her.\n\n\"Use your tongue,\" I said, running my hands through her silky blond hair. Her technique was enthusiastic, but left a lot to be desired. I was far from bored, but eating her out would be more exciting.\n\n\"How does that feel?\" she asked at one point, looking at me with fervent desire.\n\n\"It feels great. If you keep going, I'm going to cum.\"\n\nI got through it, thanks to two things; first, I pictured Mother giving me a blowjob instead of my girlfriend. Second, I saw the knob on the door slowly turning. I knew who it was.\n\nMother peeked her head in like a sexy, angelic ninja. Casting an appreciative eye to Autumn's sleek, sexy body, she finally made eye contact with me. Autumn's head was bobbing up and down, her hair impeding eye contact, plus she was focused on the blowjob, jacking me off frantically. Autumn neither slurped nor applied extra saliva. It was like her clinical nature had taken over.\n\nMother crept inside, gently closing the door behind her.\n\n\"I'm close, Autumn,\" I said, breathing hard myself. She felt my impending orgasm, but she couldn't see why as Mother wore panties and nothing else. Her nipples, along with her piercings, were visible, and she wore the slender filament of chain connecting both nipple studs. She languidly fingered her own sex, transfixed by my impending orgasm.\n\n\"Here it comes,\" I said, putting both hands on her head, before shooting my load into her mouth.\n\n\"That's it, Autumn. Take it, swallow as much as you can. Taste it,\" I said, coaxing her through the lewd act, the first time she had swallowed semen. It was the first of many.\n\nAfter swallowing it all, she looked at me, her hair a beautiful mess. \"That felt like I did better than last night.\"\n\nI nodded at her, chuckling. \"I'll say. Come here.\"\n\nShe crawled up to lie beside me on the bed, and when she did, I looked at Mother.\n\n\"How do you think she did, Mother?\" I asked.\n\nAutumn saw her and gasped, but didn't make a move to cover herself. Being this close, I could see the transition from surprise and shock to desire as her mind accepted the programming of the imagery. My hand traveled down over her well-manicured but thick landing strip to insert a finger into her oily crevice.\n\n\"Mrs. Thomas,\" Autumn said. She moved a hand to mine to remove it from her crotch, but I was insistent and her hand wasn't forceful when I began sawing in and out.\n\nMother smiled. \"I think you did alright, Autumn, but would it be okay if I showed you what Casper likes? I'd like to help by demonstrating.\"\n\nAutumn ran the gamut of emotions, looking from me to Mother and back again. Her legs parted a bit as desire and passion overcame any logical judgement.\n\n\"Please do,\" she said politely, her breath catching as my fingers scooped out her ambrosia. I put it in my mouth.\n\n\"You taste so fucking good, Autumn,\" I said. I dipped two fingers into her pussy again, eliciting a needful moan as she watched Mother settle in to take her son's cock into her mouth; a cock with a mixture of cum, spittle, and the lip gloss of another woman.\n\nMother just didn't take my cock into her mouth. She licked it invitingly, seductively. During this, I took two fingers full of Autumn's cunt-cream, offering it to mother as she licked my cock. Without missing a beat, she used her hand to bring my fingers into her mouth, eagerly sucking on them with wanton abandon.\n\n\"Fuck, you taste so good,\" Mother cooed, drawing an appreciative moan from my girlfriend.\n\n\"Thank you, Mrs. Thomas,\" she said, her voice a whisper as she witnessed how great a cocksucker she was.\n\n\"Never forget the importance of the balls,\" Mother said, going into sexy teacher mode, as she took the time to introduce a fantastic demonstration of cocksucking 101. The only thing missing from the demo was a PowerPoint presentation.\n\nThe lesson ended with two orgasms; mine as I came into mother's mouth and face, and Autumn's. Getting fingered by her boyfriend while his mother sucked him off was enough to send her off into the stratosphere into a massive orgasm. Her body writhed erotically around my hand.\n\n\"Oh my god, that was...\" she said, her voice a mixture of emotions. What I saw most was joy.\n\nMother crawled up the bed towards Autumn. Her mouth full of my cum.\n\n\"Mother has a gift for you, Autumn,\" I said. \"It's only polite to accept it.\"\n\nTrembling in both the aftershock of her orgasm and sexual need, my girlfriend took Mother by the back of the neck and brought her in for a deep soul kiss.\n\nI watched, my cock stirring yet again as a line of my cum oozed from the corner of Autumn's mouth as they kissed each other hungrily. Their mouths made delicious sounding wet smacking noises. Mother's piercings and her chain pressed into my girlfriend's tits, causing her to gasp, increasing her level of passion as Mother ravished the beautiful creature beneath her. It was incredibly sexy watching Autumn give in.\n\nHer lovely eyes had been closed since the kiss, but she opened them to find Mother staring lovingly back. In response, the younger blond put her other arm around her new harem-sister. The two, still dueling tongues and smacking lips, looked over at me, hardening cock in my hand.\n\n\"You both look lovely,\" I said.\n\n\"Lesson over,\" Mother said. \"I'll leave you to it.\" she had no intention of leaving. It was a brazen attempt to make sure my girlfriend wanted this.\n\nIn response, Autumn tightened her embrace around the older blond.\n\n\"Stay, Mrs. Thomas. Stay with us tonight.\" She didn't even have to look over at me.\n\n\"You can call me Shari, Autumn,\" she said, smiling. She licked cum off Autumn's upper lip.\n\nMy girlfriend responded by slurping cum off Mother's cheek.\n\n\"Shari,\" she said. \"Teach me everything.\"\n\nI grinned.\n\nTo Be Continued\n\nSeason's Greetings!"
    ],
    "authorname": "A_Gavin_MaCross29",
    "tags": [
        "male dominant",
        "blowjob",
        "incest",
        "mother-son",
        "harem",
        "group sex",
        "mother-daughter",
        "lesbian",
        "strap-on",
        "oral sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/binoculation-ch-06"
}