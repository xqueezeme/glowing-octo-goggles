{
    "title": "Different Circles",
    "pages": [
        "\"Please retain all bold and italics text as shown\"\n\nI hit a writer's block just before I completed my last submission, Full Circle, which I'd intended to be the final outing for Sarah and her family. I was also struggling with a new story idea, but when I got around to finalising Full Circle, an idea hit me. This story is about Kirstie Hunter who first appeared briefly in Cricket Match, as a very minor character. No need to read that (although I'd like you to at some point), this stands alone and anything you need to know will be here. There is a bit of tragedy at the start, which is detailed in previous stories and it's only setting the scene.\n\nThere will be a long lead-in before there is any sexual activity, so if that is what you're after, look elsewhere.\n\nAll characters are fictitious and over eighteen when involved in anything sexual, which is all consensual. Any resemblance to other persons is accidental, it is set in a fictional city in the East Midlands of England.\n\nFlight home and reflection\n\nI awoke confused, there was a strange humming and this wasn't a proper bed, then I realised that I was on a plane. I stretched and one of the cabin crew offered me coffee, which I accepted. I sat up, stretched again and headed for the bathroom. When I got back to my seat the bedding had been tidied up and my coffee was waiting.\n\nI sat down grateful that I was travelling home from Australia in business class. It had been expensive, but it was worth the money on such a long flight, and I'd still been angry when I took my seat.\n\nMy mother had refused to take me to the airport, even I didn't realise how much she hated me. I shouldn't have been surprised, but I had been. I'd been invited to a conference about genetic research, I thought that it was a good idea and that I might learn something, which I had. I'd warned my parents that I was in the country, but hadn't had a response, so I turned up on their doorstep. It had been the most uncomfortable three days of my life and I'd avoided them as much as possible.\n\n*****\n\nA long time ago now, when I was only eleven, I'd arrived home from school only to be told, by my parents that we were leaving. I'd smiled assuming that we were going on holiday, but that idea was dashed when my mother said that we were going to Australia. \"How long for?\" I'd asked.\n\n\"For good, your father has a new job and there are lots of opportunities for us there.\"\n\n\"But my friends?\" I'd asked.\n\n\"You'll make new ones.\" The reply was terse and simple.\n\n\"What about Grandad?\"\n\n\"What about him? He'll cope, I'm sure.\" She made it clear that the conversation was over.\n\nI never understood how my grandfather could have any connection to my mother. They shared similar features but that was it. My mother had always been cold towards me, it was as if I was an inconvenience, but her father was the polar opposite. I'd never doubted that he loved me, he cuddled me, nurtured me, spent time with me and made me laugh. The idea of leaving him behind and not seeing him again made me cry.\n\nIt made him cry as well when he learned of the plans. He held me so tight I thought that he might squash me. I'd had an hour with him between being told the news and leaving for the other side of the world. I cried for most of the flight, much to my mother's annoyance.\n\nI hated Australia at first, they had strange accents, different names for things, they called me a 'pommy' and I had no friends. It didn't change for a long time; I kept to myself, kept my head down and studied hard, of course, that further alienated me. I wrote emails to grandad twice a week and he replied to every second one. Those emails kept me sane, or at least they helped.\n\nMy parents had never shown me much affection and they preferred me out of the way. It was during a biology lesson one day that the teacher talked about genetics and inheriting DNA from our parents. That fascinated me, how could a mother be so different from her father and in turn from me? I read every word that I could about the subject and that was probably what made me choose it as a career.\n\nMy mother was happy for me to go back to England during the holidays, despite having to travel halfway around the world, unaccompanied. I was used to being on my own so it didn't bother me at the time, but now I still find it hard to believe they thought that it was okay. I did it twice and loved every second that I was with my grandad. He later told me, when I'd grown up a lot that, he'd tried to keep me there with him, but my mother had refused.\n\nI was eighteen and selecting which university to attend when I told my mother that I was interested in girls and not boys. That did not go down well, not at all. She was horrible and called me all sorts of names, my father, never one to waste words on me anyway just stopped talking to me altogether. Suddenly, she changed her mind about me studying at Oxford, something she'd point blank refused a couple of months earlier. Now, it seemed that she was happy to be rid of me.\n\nI was elated and set off as soon as I could and grandad was delighted. I lived at the university during the term but travelled to what I treated as home every couple of weeks and in between terms. I worked during the vacation times and kept house. I cooked meals for us, did the laundry and cleaned. In return grandad spent time with me, we had fun together and he showed me his love. He was the head groundsman for the county cricket club and I'd been to the ground with him many, many times and because of that I'd come to love cricket, I'd even managed to attend games in Australia, despite my parents' hatred of the sport. So, when I was back living with him, I watched many games, it was something that we enjoyed doing together. I'd tried playing, but I lacked the skills needed, I was a boffin, not a sportswoman. And the hard ball scared me silly.\n\nWhen I graduated, with honours, I decided to go on to study for a master's degree, specialising in genetics and was able to do that at the university in my home city, so I stayed with grandad. He was proud of me, supported me financially and encouraged me to go on to do a doctorate. That lead me to the company that I still work for, researching various aspects of genetics and developing new techniques.\n\nMy parents never came to visit, they never attended any of my graduations and contact with them was minimal. Just before I started working full time, I travelled back to Australia to visit them. After ten days I traded in my ticket and came home three weeks early. The reception I got on my return was one I should have got from my parents. To this day I have no idea why they are like that.\n\n*****\n\nNow I was on my way back. It would be good to return to my home, where I'd lived for the past fourteen years, initially with grandad and since his passing, alone. I missed him; I spoke to him often, to tell him about my work, my life, my thoughts, anything and everything. He never answered, but I felt his presence, he'd shaped me, loved me and because of him, I was who I was today. I suppose that I was lucky that I didn't turn out like my mother.\n\nTears and sorrow\n\nI'd wrestled my suitcase into the luggage rack, found my seat and closed my eyes for a moment. When the train pulled away, I sipped my coffee as the urban sprawl of London passed by. I moved the newspaper I'd bought and, as it was face down, I flicked it open from the back until two pages in I spotted a headline, 'England women's cricket coach killed in tragic accident.' Being a cricket fan, I pulled the article closer and as I read, tears started to fall.\n\nHayley Sharp, recently appointed as the new coach for the England Women's cricket team, was tragically killed on Wednesday in a road accident. Hayley was travelling with a family friend who also suffered fatal injuries.\n\nMy first thought was that Sarah Hardy had also died, but then I realised that she would have been referred to as Hayley's wife or partner and probably made the headlines. Sarah had also been a noted cricketer and personality in her own right. I read the rest of the report which detailed Hayley's achievements on the cricket field and which concluded that Hayley was survived by her partner and daughter. I was sobbing by the time I reached the end. I closed my eyes, leaned back against the headrest and travelled back over twenty-three years.\n\nHayley and Sarah had grown up in my home city and started their careers at the cricket ground where my grandfather was the head groundsman and he knew them both. I was ten years old when I first read about them. They were local heroes, both tall, beautiful, athletic, blonde girls and they'd appeared in a photo shoot for a glossy gossip mag. The photos were stunning and in the final shot, they looked like princesses, or at least what I imagined princesses to look like. I'd seen them play and they were good to my ten-year-old eyes.\n\nGrandad had told me that they were getting married at the ground in the autumn. He carefully explained that two women could get married and I thought nothing of it, I'm sure that helped me in later life when I realised that I wasn't interested in guys, at least not as partners. I pestered him to take me to the ground to see the wedding, but he was reluctant. I didn't give up and he conceded that he'd take me with him on condition that I'd have to stay in the distance because we weren't invited.\n\nI'd spent a couple of hours making a horseshoe and attached a ribbon to it. In photos, I'd seen my gran holding one at her wedding and although grandad told me that it was old fashioned, nothing would dissuade me. On the day of the wedding, he slipped me into the ground wearing my best pink dress and I saw Hayley and Sarah as they arrived and through the windows of the function room. After the ceremony, they came outside to have pictures taken and I stood in awe; they looked beautiful and so did the three bridesmaids, I wanted to be like them. Grandad had set up some stumps that were being used in some of the pictures and I'd edged closer with him. Suddenly one of them spotted grandad and me, she beckoned us over.\n\nI'd realised that it was Sarah Hardy and grandad said, \"Congratulations to both of you, I'm proud to know you. This is Kirstie, my granddaughter, she wanted to come, she has something for you.\"\n\nWith that, I'd stepped forward and handed Sarah the horseshoe with 'Good luck' on it. \"I think that you two are amazing. I'd like to play like you and I made this for you.\"\n\nShe thanked me, spoke to Hayley and they both bent down to hug me, I was crying with joy and then somehow Grandad and I were being photographed with them. A few minutes later grandad and another man, Graham, were talking and drinking beer. Graham lifted me onto his shoulders so I could see what was happening as more photos of the wedding party were taken. It was later that grandad explained who 'Graham' was.\n\nThe events of that day stayed with me for a long time, they were still with me, I'd watched their cricket careers and more recently I'd seen Sarah on various TV shows, for some reason I felt close to them both.\n\nNow Hayley was dead, a freak accident and I felt as if a part of me had been stolen. I was a scientist, a well-respected scientist and yet I felt all sorts of emotion; loss, anger and sadness.\n\nFuneral\n\nI had to go, so I dressed smartly in black. No matter how much people may have wanted to celebrate a person's life, I wanted to mourn the loss of a woman who had been one of my heroes and in some ways a role model. I arrived early and parked before heading into the crematorium. It would be a double service for Karen Churchill and then Hayley. I knew that Karen had been a bridesmaid on that magical day and I wanted to pay my respects to her as well; she was a teacher and it was obvious from the number of school pupils that were arriving she was or at least had been, popular.\n\nI was staggered when I saw just how many mourners there were; pupils and teachers from Karen's school, some, obviously, family members and lots of other men and women of all ages, some of whom I recognised. It seemed that cricketers had come from a long way away to pay their respects and mourn their teammate, opponent or inspiration. The services were wonderful and I sobbed through both.\n\nThere was to be a gathering at a local hotel to allow mourners to meet and for some reason, I felt compelled to go. It seemed that my rational, scientific brain was asleep as regards this event. I stood alone and watched, clutching a mug of tea. It was clear that the two families were grief-stricken, but they seemed to be hanging together. I kept my distance until there was a brief moment when Sarah was standing alone and I stepped forward feeling an urge to speak to her.\n\n\"Ms Hardy, I wanted to say how sorry I was about Hayley. I guess that you don't remember me, I was at your wedding.\"\n\nShe looked puzzled, clearly not sure who I was, \"I'm Bill Hunter's granddaughter, the Groundsman? I gave you a horseshoe at your wedding. I've followed the two of you since then and I'm really sorry about Hayley.\" My eyes were moist yet again as I spoke.\n\nIt was obvious she recalled the event and she smiled, the first I'd seen from her that day. \"I do remember you and we were touched by your gift; I still have it. Didn't your parents emigrate? I'm sure your grandfather told me that.\"\n\n\"Yes, we did, but I'm back and that's a story for another day. Today is not about me. Once again I'm sorry.\" I couldn't manage anything else and turned away in tears. I felt stupid and headed for my car. When I got home, I thought about Hayley and Sarah, the wedding day, the games I'd seen them play, then I opened a bottle of wine and settled down to watch the wildlife documentary series that Sarah had starred in and laughed out loud at the part where Sarah discussed giraffes with her daughter Chloe. I felt yet another connection to that family.\n\nThree years later - Lecture\n\nI walked over to the lecture hall taking the chance to enjoy fifteen minutes of lovely, warm summer weather. At least the weather was good I thought, last night's date had been a disaster. She was a divorced teacher and mother of one who was a year older than me and, according to her profile and photo on the dating app very attractive. When she arrived at the bar, I didn't immediately recognise her she was so different from the picture. She was nice enough, but after about thirty minutes of conversation, she admitted that she wasn't sure that she was gay, but was fed up with men and wanted to try something different. That set off alarm bells, I didn't want to be a part of anyone's experiment outside of my laboratory and I called things to a halt. Maybe one day I'd find that someone.\n\nThe hall was filling with students as I set up my laptop and checked that the images I needed were displayed properly on the huge screen. I set out my notes on the lectern, just in case I lost my train of thought midway through and then I looked over the audience. It didn't seem that long since I'd been one of them.\n\nPartway through my lecture, I saw a girl sitting in the second row who looked familiar, but I couldn't place her.\n\nWhen I concluded there were quite a few questions, a few showed that they hadn't been paying attention and a few more raised very valid points. I dealt with them and as they started to leave, I gathered my things. I heard someone call and looked up, the call was repeated, \"Hey Sharp, I'll meet you outside and we'll grab a coffee.\" The girl I'd spotted earlier and who looked familiar raised hand in acknowledgement and suddenly I realised who she reminded me of.\n\nI walked over to where the girl and two of her fellow students were packing away laptops. \"Excuse me, this sounds crazy, but I heard that other young lady call you Sharp and you look very familiar.\"\n\nThe girl, actually she was a gorgeous young woman, tall, slim with long blonde hair and a face that I knew from years ago. \"Yes Doctor, I'm Chloe Sharp, but I'm afraid I don't think we've met.\"\n\nThere was a catch in my throat, but here goes, \"Are you, by any chance related to Sarah Hardy?\"\n\nThe look on her face was one of complete confusion. I'd been going to ask if she was related to Hayley Sharp, but I wimped out.\n\nStill confused she answered, \"That's my Mum. Do you know her?\"\n\nI took another deep breath, \"Then, are you Hayley Sharp's daughter?\" Tears were filling the corners of my eyes, I knew the answer and followed it up with, \"I'm sorry I don't want to upset you.\"\n\nThere were tears in her eyes as she looked down and I knew that I was correct. Her friends asked if she was okay.\n\n\"Yes, I'm fine. Catch up with Shirley, I'll call you and maybe find you later. I need to speak to Doctor Hunter.\"\n\n\"Look I'm sorry, I don't mean to...\" I trailed off.\n\nShe looked at me squarely, \"Yes, Sarah Hardy and Hayley Sharp are my mum's, but Hayley...\" her response tailed off as well.\n\n\"I know about Hayley. You look just like her when she was your age.\"\n\n\"How did you know her? You're too young to have been at school or university with her.\"\n\n\"I was at their wedding. I'd like to buy you a coffee and I can explain.\"\n\nMeeting\n\nI took a taxi to the cricket ground and when I cleared security, headed to the rear of the main grandstand. I'd been here so many times it was all very familiar. The receptionist escorted me to the lift and told me to turn right on the second floor and look for Room 23. I wasn't sure what to do when I reached the door so I knocked and someone shouted, \"Come in.\"\n\nThere were five people in the box, all female, they were on the terrace beyond the open sliding glass door. The private box was at the opposite end of the ground from the Pavilion and to the right of the wicket, so wide mid-on or third man for those of you who understand cricket.\n\nChloe waved and raised a finger which I assumed meant one minute. She said something to the others, before heading over. \"Doctor Hunter, welcome. I'm glad you were able to come.\"\n\nI laughed, \"I think maybe Kirstie would be more appropriate today, don't you?\" She laughed as well and took my arm to lead me over to the others.\n\n\"I'd like you to meet Doctor Hunter, but call her Kirstie. She's a genetic researcher and was at my Mum's wedding. This is Olivia, Sarah's partner, my sister Constance, her friend Grace and a family friend, Faith.\"\n\nThey all nodded, smiled and muttered their welcomes. I hoped to be able to remember their names and muttered, \"Hello, nice to meet you all.\" Olivia suggested a coffee and we went over to the buffet.\n\n\"We have tea, coffee or something stronger if you'd prefer and there will be some hot food, some breakfast soon.\" There were several bottles of alcohol on the counter, wine and beer in the glass-fronted fridge.\n\n\"I think just coffee for now.\" I took a mug and tasted it. If the rest of the food and drink was as good as the coffee, it was going to be a good day.\n\n\"So, you're the young girl with the horseshoe?\" I nodded. \"Then we've met before, I was one of the bridesmaids.\" I must have gone pale as I suddenly realised who Olivia was and felt ashamed that I hadn't made the connection.\n\n\"Oh no. You're Karen's partner?\" She nodded, \"I'm sorry, I'm....\"\n\nOlivia put her hand on my arm. \"It's okay. Karen and I were two of Sarah and Hayley's bridesmaids. You were at the funeral, Sarah told me. It was kind of you to go.\"\n\n\"No, it wasn't kind, I had to go, I felt compelled. I was a little girl and those two were heroes, like princesses. I remember being in awe of how beautiful you all looked that day. Hearing about that accident left me feeling broken, I have no idea how the rest of you must have felt. I'm sorry.\"",
        "She smiled. \"It's in the past now and we're all pleased that you're here today. Sarah will be delighted, but she's a little busy right now and will no doubt see you later, after the game. Now, this is a happy day, Charlotte is playing her fourth game today, although it's her debut one-day game for the first team.\"\n\nI chatted with Chloe, Constance and Grace before they went to meet others and I sat alongside the woman who I'd not yet spoken to. She turned to me. She looked familiar, beautiful, had light make-up, lovely warm eyes and was about my age. \"Hello, are you a friend of the family?\"\n\n\"Sort of. I met Hayley and Sarah a couple of years ago and I've stayed in touch with Sarah ever since, but this is the first time we've met up again and when she heard that I was in town, invited me to join her family today.\"\n\n\"That's nice. So, what brings you to town?\"\n\n\"I have a thing here in the city, tomorrow.\"\n\nI started my reply, \"I'm going to a gig tomorrow...\" I didn't get any further before the penny dropped. My hand went to my mouth, \"Bloody hell, you're Faith....\" I trailed off.\n\nShe smiled, actually started to laugh, \"It's okay. Yes, I'm that Faith and it's nice that you're a fan.\"\n\n\"I'm sorry about the swearing, but I honestly didn't think that I'd ever find myself speaking to Faith Shadow.\"\n\n\"Well, I assume that you're also a cricket fan. So am I, but not usually actually at a game in person. My Dad's also here today, but he's down there somewhere watching the warm up's. He's cricket-mad.\" The two teams were on the field going through their pre-match exercises. \"Are you a big fan? Do you see many games?\"\n\nIt was my turn to smile. \"I've been here, at this ground many times, although not for a couple of years. I saw Hayley and Sarah play here and in Australia, long story.\"\n\n\"Were your parents' fans?\"\n\n\"No, they hate cricket.\" I sighed. \"My Grandad was the head groundsman here for many years and I used to come with him. That's how I met them, Hayley and Sarah, he knew them.\"\n\n\"How long ago was that?\"\n\n\"On their wedding day, I gave them a horseshoe that I'd made. They were my heroes, princesses. I wanted to be like them.\"\n\n\"You couldn't have been very old.\"\n\n\"I was ten. I hadn't seen them in person to speak to again until I spoke to Sarah at the funeral.\" I paused and there was silence for a minute or so. \"Chloe was at a lecture I gave recently. She looked familiar and when I found out that her name was Sharp, I realised that she was related to Hayley and that she'd been on a television programme with Sarah. She's Hayley's double at that age.\"\n\nI went to fetch a coffee refill for us both. Faith Shadow, I could hardly believe it. \"Thanks, Kirstie. You said that you gave a lecture, is that what you do?\"\n\n\"No, well... no. I'm a biologist and do genetic research for a company on the University campus. I give the occasional lecture, two or three a year.\"\n\n\"So, what was your subject?\"\n\n\"The lecture that Chloe attended was about giraffes.\"\n\n\"Giraffe and genetics, how does that work?\" She looked puzzled and laughed at the same time.\n\n\"There are several different types of giraffes in Africa and it was always assumed that they were subspecies, related if you like. Then they discovered that there are four separate, genetically isolated species. I was asked to help with some of that genetic work. Don't get me started though, once I warm up, I could talk about it all day.\" We both laughed.\n\n\"What do you usually research then, if it's not giraffe?\"\n\n\"My team look at a few things, but the main one is amplifying DNA. I can't tell you any more though.\"\n\n\"Don't tell me it's top secret and you'd have to kill me?\" She smiled; she was quite beautiful in person.\n\n\"No, it's not that secret, but it's complex and I would probably kill you with boredom.\"\n\nThere was a whoop from behind and we both turned to see Olivia wrapping her arms around the neck of an older, very distinguished-looking man. I gasped when I recognised him and so did Faith. I turned to her, \"You are a fan if you know Graham Dowling. Can there be any more celebrities here today?\"\n\n\"My Dad will die when he gets here. Have you met him before?\"\n\n\"Yes, but I doubt if he'll remember me.\" He came over with Olivia and she made introductions.\n\n\"Faith, nice to meet you. I'm not a huge music fan, but even a dinosaur like me has heard of you.\"\n\nShe smiled as she replied, \"Well, I've certainly heard of you. Nice to meet you.\"\n\nHe turned to me and took both of my hands, smiling affectionately, as he did so. \"You've grown up Kirstie. I doubt if I could get you onto my shoulders again, I'm too old and you're a little bigger now.\" I blushed and he turned to Faith. \"I knew her grandfather, spoke to him here many times and we've shared a beer or two.\" He turned back to me. \"Sorry about his passing. I was in Australia at the time and wasn't able to be there.\"\n\nI was stunned, both about grandad and him remembering me. \"I understand and it's okay. I'm surprised that you remember me though.\"\n\n\"Hayley and Sarah's wedding was an amazing event, not just for them, but also for women's cricket, it raised the profile of the game. I remember you from that day and your grandfather also told me how proud he was of you the day you received your doctorate. Maybe later we'll get the chance to reminisce.\"\n\n\"Thanks, I'd like that.\" I blushed and sat down again as he went to speak to someone else.\n\n\"On his shoulders? That has to be a story?\" Faith grinned at me.\n\n\"When the wedding photos were being taken, Graham was speaking to my grandad and having a beer. He lifted me onto his shoulders so that I could see better. He also teased me. I didn't know who he was until later and I was shocked when I found out he was the England captain and a national hero.\"\n\n\"Have you really got a ticket for my gig?\" I nodded. \"Who are you going with, boyfriend, husband, partner?\"\n\nI looked down into my mug. \"Just me and there isn't anyone significant. I split with my girlfriend three years ago and there isn't anyone.\"\n\n\"Sorry, that wasn't meant to be personal, but I'm surprised that someone so gorgeous doesn't have a queue of people chasing you.\"\n\n\"Sitting next to you, I'm positively plain.\"\n\nShe didn't get the chance to respond as her father arrived and he'd only said a few words before his eyes opened wide. \"Sorry, Kirstie, nice to meet you, but that's Graham Dowling.\"\n\nFaith and I both laughed, it caused Graham to look over to us, so I waved at him and he came over.\n\n\"Mr Dowling, this is Faith's father and he seems to be a bit of a fan of yours.\"\n\n\"It's Graham, Kirstie,\" he turned and stuck out a hand. \"Graham Dowling, nice to meet you. Why don't we get a coffee and leave these two to gossip?\"\n\n*****\n\nThe game started slowly, Charlotte's team had won the toss and asked the opposition to bat first. The two sides seemed to be evenly matched and there wasn't much excitement until Charlotte came on to bowl and then the tension in our box ratcheted up. She bowled well, took three wickets and later a catch on the boundary. Faith and I had sat together watching and chatting about the cricket, my work and her music. I was impressed with her, she was great company.\n\nIn between innings, we sat down to a delightful lunch with some nice Chardonnay and there was a great chat between the guests. Graham Dowling talked about cricket, told funny stories and kept us well entertained. I got the chance to speak to Chloe who asked me more about the wedding day, my work and my time in Australia.\n\nWhen the cricket got underway again, I sat with Graham and we talked about my grandfather. He told me that he loved playing at this ground because the wicket was always true, had a consistent bounce, and gave both teams a chance rather than some pitches at other grounds that were set to favour the home side. He knew about my parents, the difficulties I'd encountered and although I knew that grandad loved me and was proud of me, he'd confided in Graham and told him just how proud he was. \"He loved you very, very much and said that he thought that you'd turned out pretty well and hoped that he'd contributed to that.\"\n\nI sat quietly for a moment before I replied, \"He was a rock and I adored him. My success is entirely down to his influence. I miss him, but I'm thankful that I had him in my life. Thank you, Graham, meeting you today has meant a lot to me.\" I leaned over and kissed his cheek.\n\nJust at that point, Olivia came over. She looked at me with a stern face, \"I hope that you're not putting a move on this man, if anyone is having him it's me.\" With that, she smiled at me, put her arm around his waist and led him away to meet someone else.\n\nI sat beside Faith again. \"That was a long chat, did you get the chance to reminisce?\"\n\n\"Yes, what a lovely man and I enjoyed talking about my grandad.\"\n\n\"What was Olivia talking about, if anyone was having him...?\"\n\n\"Oh, he told me that he'd fallen in love with Sarah years ago when she was in her teens and then after the funeral whenever he meets Olivia, she flirts with him. It's just a thing that winds Sarah up, the two of them are tight.\"\n\nWe kept up a non-stop conversation all afternoon as the game progressed. Charlotte's team were playing well and it looked as though they would triumph, being able to score runs freely and they didn't lose many wickets. \"Looks like a victory is close and I'm so pleased that I was able to be here today, maybe when I stop so much touring, I'll be able to see more games.\"\n\n\"Is that part of your plan? To tour less?\" I asked.\n\n\"Yes, this will be my last actual tour, I'll still do gigs, but they will be one off's and a little less of the lights, dancers, a smaller band, less razzmatazz. I want to concentrate on writing and producing other people's music.\"\n\n\"Will you miss the glitz?\"\n\n\"No, I loved it to start with, but it gets tiring after a while. I love performing, but it becomes a job more than fun.\"\n\n\"I don't get much fun at work, but I do get a great deal of satisfaction when we achieve something. I love my team; I can't imagine not doing what I'm doing,\" I paused, \"and I never wanted to be a rock star.\"\n\nFaith laughed, \"But what you do is important, it could change things, affect people's lives, that makes you far more of a rock star than me.\"\n\nAt that point, the winning runs were scored and we all stood up to cheer and applaud.\n\nTwenty minutes and a glass of champagne later, Sarah appeared at the door. She was hugged by her girls, then Olivia who was elbowed aside by Graham Dowling. They were all laughing. Eventually, Sarah got free and came over to Faith and me.\n\n\"It's nice to see you both and you seem to have got to know each other.\"\n\nFaith took Sarah's hand, \"Congratulations, you did well and so did Charlotte.\"\n\n\"Thanks, she's busy right now and you'll see her back at the house if you can come.\" She turned to me, \"Kirstie, thanks for coming. Can you come back with us; I'd love to chat with you?\"\n\n\"That's kind, I loved being here today and meeting everyone but I'm an outsider and....\"\n\n\"No,\" she was emphatic, \"you're family now and that's an end to that discussion, please come.\"\n\nI nodded, \"Okay thank you.\" I wasn't sure how I'd become family, but I wasn't going to argue.\n\n*****\n\nEventually, we all left to go to Sarah and Olivia's home and for the first time, I met Charlotte. She came over to me and smiling said, \"So, you were at the 'wedding'? Chloe was excited to meet you and told us all about how you shocked her after the lecture. You realise that all her pals are impressed that she knows you?\"\n\n\"I didn't know that and I still feel a bit guilty about approaching her. I upset her a bit.\"\n\n\"She said that you were upset as well.\"\n\n\"I was. I was in awe of Hayley and Sarah, probably had a crush on them, but I was young and foolish. I followed their careers, saw them play several times as I grew up. When I heard about the accident it affected me, I don't mean in the same way it affected you, but I felt as if a part of me was....\"\n\n\"Well, it's good that you've reconnected with us now.\"\n\nSarah and I chatted for about twenty minutes. She was even nicer in person than I'd ever imagined and was still a stunning woman with a lovely smile.\n\n\"It looks as if Faith's nose is bothering her, she's finally heading for the music room.\" I turned around to see Faith halfway across the lawn to a large glass-fronted garden room where the three girls and Constance's friend were playing.\n\n\"I was stunned to meet her. I've got a ticket for tomorrow. She's lovely and I've had a great day. I think I may have annoyed Olivia,\" Sarah looked puzzled, \"I think I've fallen for Graham too.\"\n\nSarah laughed loudly, \"He says he's been in love with me for about thirty years and now Olivia flirts with him.\"\n\n\"I saw that, she accused me of making a move on him.\"\n\n\"He's a wonderful guy; great company and I'd never have achieved what I have without his advice. He's madly in love with his wife and sadly, she's now in a nursing home. He visits every day unless he's away like now.\"\n\n\"I chatted with him about my grandad, that was lovely.\"\n\n\"I liked him as well, I think he had a soft spot for Hayley. Okay, must circulate and you have to stay in touch.\"\n\nI was left alone and when I glanced out of the windows saw Faith pick up a guitar. I stood and wandered over to the music room.\n\n*****\n\nFaith sat on the edge of the couch and positioned an acoustic guitar on her knee. She strummed a couple of times as if get the feel of it and then took a breath before she started to play. I'd never heard this song before; it was soft, it expressed love for someone who was not yet in her life and who didn't know how she felt. It left me holding my breath until she finished, then there was a pause and I realised everyone was also doing the same, then we applauded.\n\nConstance broke the silence that followed, \"That's beautiful, is that new?\"\n\n\"I wrote it recently; I have no idea who it refers to and only half a dozen people have heard it. In fact, you are the first 'members of the public' to hear it.\" She made finger gestures around members of the public. \"It's the type of music I want to write and perform in the future, I have another couple that are in that same style but...\"\n\n\"It's wonderful,\" I muttered.\n\nFaith stood up, \"Now, I heard some interesting playing as I came over and I'd like to play with you. That okay?\"\n\nThe four girls stood with open mouths, but eventually, they nodded in agreement. Faith kept hold of the guitar she was holding, Constance was still sitting at her drums, Grace went over to the keyboard, Charlotte and Chloe had electric guitars. Faith suggested one of her own songs and they started. It wasn't polished, but they played with enthusiasm and some skill, more than I expected, although that seems cruel, I didn't know how accomplished they were. By the time they'd finished the girls were beaming and Faith suggested another two songs which they played. I sat on the sofa and listened. I looked at the girls, they were all attractive and I could see that they all shared some of their mother's features. Grace was also attractive and I realised that these four were going to break some hearts. I studied Faith and saw something different from when I'd seen her performances on screen, she was more relaxed and smiled a lot. She encouraged the girls and gave them pointers in a kind, almost maternal way. She was enjoying this session and so was I. She is gorgeous, possibly there was something else about her that I couldn't put my finger on.\n\n*****\n\nIt was almost 2 am when I finally climbed into my bed. I'd been drinking all day so I knew that I was, at best tipsy and at worst drunk. It had been an amazing day; the cricket was great; Charlotte had played well and her team had won. Meeting Sarah again was good, knowing that she and Olivia had managed to move on made me happy. Meeting Faith Shadow and Graham Dowling was the icing on an already delightful cake. Faith was gorgeous, good fun and terrific company. I dreamed about her that night.\n\nThe gig\n\nWhen I arrived at the venue for the concert, I noticed a lady standing with a sign that had my name on it. \"Hello, that's my name, is something wrong?\"\n\n\"Doctor Hunter?\" I nodded. \"Follow me please.\" I tried to ask where we were going and what this was about, but there were too many people and if the lady had heard me, she'd chosen not to answer. She opened a door for me and we were backstage beyond the public areas. When she showed me into a decent-sized room that was about half full, I spotted Constance, Chloe, Charlotte and Grace.\n\n\"Hello, I hadn't expected to meet you again so soon. What's all this?\"\n\n\"Faith arranged tickets for us, we hadn't been able to get them. You mentioned having a ticket. There's a bar, so join us for a drink.\" Chloe was grinning and raised her wine glass. I was handed a drink and the door opened to allow Faith to enter. She was in full make-up and dressed in her stage outfit, which covered most of her body, but left lots of suggestive flesh visible.\n\n\"Hello ladies, glad you all made it and I'm pleased they managed to catch you, Kirstie. I've arranged for you to watch from a small VIP section and then back here for a few drinks afterwards. Now, love you all, but must fly and get wired for sound.\" She said 'hi' to a few others in the room and disappeared.\n\nHalf an hour later we were shown to the VIP area and the concert started. Faith was on form and her performance was amazing. She introduced each of her band and then said, \"I like this city,\" which got a cheer from the crowd before she continued, \"I got to meet up with some old friends and met some new ones. Thanks for coming.\"\n\nThere were two encores and by the time Faith left the stage we were all exhausted from dancing and having fun. It was back to the green room and more wine. I didn't get much chance to speak to Faith for long as quite a few people wanted her attention. I managed to thank her for the evening and for her company before I headed home leaving the girls enjoying themselves and chatting with Faith's band.\n\nFor the second night, I lay in bed with a big grin on my face. Meeting Faith had been wonderful and I'd love to have her as a friend, but we moved in different circles and she, I guessed, lived elsewhere in the country.\n\nInvitation\n\nI was busy studying a computer printout when Yvonne, my secretary, told me that I had a phone call. I flopped down into my office chair as I lifted the handset. \"Hi, Kirstie Hunter.\"\n\n\"Doctor Hunter, I'm Abigail Farmer and I work for Shadow Music Productions as a PA to Faith Shadow.\"\n\n\"Oh, okay and how can I help you?\"\n\n\"I understand that you're a friend, someone she met recently.\"\n\nI was puzzled to be described as a friend, \"Well, we did meet recently, that's correct.\"\n\n\"Faith is playing the final gig of her tour at the O2 in London next Saturday and she would like you to attend as her guest.\"\n\nI was stunned now, \"That's nice but...\"\n\nAbigail interrupted me, \"If you can make it, I'll send you all the details and arrange a hotel for you, for after the gig. Would that be, okay?\"\n\nI was in a daze but simply said yes before she rang off, promising to be in touch.\n\n*****\n\nTwo days later Yvonne brought me a padded envelope. \"A courier just delivered this for you. Looks important, so I brought it straight over.\"\n\nI looked at the envelope and saw Shadow Music Productions' return address. \"I think this is a ticket for a gig.\" I used a knife to slice open the envelope and the contents slipped onto the lab bench I was using. A letter, a train ticket and a lanyard with a pass.\n\nYvonne gasped when she saw the pass, \"Kirstie, what? Faith Shadow, VIP guest - How the hell did you get this?\"\n\nI looked at the pass. It was a fancy-looking thing, like a credit card and a fancy lanyard that wasn't anything like the cheap ones that we used. \"I met her through a friend recently and went to her gig here a couple of weeks ago. I didn't expect to hear from her again.\"",
        "I read the letter; they had provided me with first-class rail tickets and suggested that I make my way to the Four Seasons Hotel in Park Lane for 3 pm, where they'd arranged a room and refreshments. I would be collected by car at 5.30 pm and taken to the venue where Abigail would meet me.\n\nI showed the letter to Yvonne, \"Oh wow.\" She took a step back and curtsied, \"Doctor Kirstie Hunter, biologist and friend of royalty.\"\n\nI slapped her gently, \"Faith is not royalty and I barely know her.\"\n\n\"Well, she likes you.\" She grinned as she walked away, \"If you need a companion, I'm free.\"\n\nOnly one concern now, what was I going to wear? Maybe I needed to phone Abigail for some hints.\n\nAnother gig\n\nIt was just after 2 pm when took a taxi from the station to the hotel where the doorman rescued my holdall, almost offended that I should try to carry it myself, and he escorted me to the reception desk. I gave my name and without fuss, a key card was handed to a porter who showed me my room. The room was large and luxurious. Before leaving the man pointed out the bottle of champagne chilling in an ice bucket and offered to pour me a glass, which I accepted.\n\nThere was an envelope next to the ice bucket, it contained a note from Abigail and advised me that a spa treatment had been arranged for me at 3 pm. After chilling for a while, I headed to the spa where I was offered a variety of services. I settled for a hot stone treatment, which I loved. That was followed by my hair and nails being done. By the time I got back to my room, I was feeling chilled and gorgeous. I'd lashed out on a lovely blue, knee-length figure-hugging dress. It looked worth every penny I'd paid for it, quite a few pennies. It was smart, but not overly dressy, just as Abigail had suggested.\n\nMy glass of bubbly was disturbed by the phone to tell me that my car was ready. I slipped on a jacket, checked my clutch bag and took the last swallow of champagne. I was surprised to find that the driver was a female, I shouldn't have been surprised, why shouldn't the driver be female, but I was and she was rather gorgeous, smartly dressed in a trouser suit, shirt and tie. \"I'm Nicole, Ma'am. There's some champagne in the chiller box under the armrest, the bottle is open, help yourself. It should take us forty-five minutes if the traffic is kind to us. Sit back and enjoy.\"\n\n\"Thank you.\" I poured another drink before remarking that this was all new to me.\n\n\"So, you don't usually travel by limo?\" Nicole asked.\n\n\"No, this is a first, but I like it.\"\n\n\"I don't want to be nosey, but as Faith Shadow is playing the O2 tonight, they are paying for this ride and she's staying at your hotel, I assume that you're a friend of hers?\"\n\n\"I've met her twice, the first time through a mutual friend a couple of weeks ago and the following day at her gig in my home town. I already had a ticket before I knew her and she invited me backstage after the gig. I never expected to hear from her again.\"\n\n\"I've driven her a couple of times, and may well be doing so again later tonight. She's nice, down to earth and not full of herself like some of the people I drive for.\"\n\n\"How long have you been doing this? Driving, I mean?\"\n\n\"It's paying my way through university; I'm doing a masters in biology.\"\n\nI burst out laughing and almost spilt my wine. I saw Nicole looking at me in the mirror. She was clearly puzzled and raised an eyebrow. \"I'm a biologist too, genetic research.\"\n\n\"Wow...\" her brows knitted together, \"Wait, Doctor Kirstie Hunter by any chance?\"\n\n\"Yes, you've heard of me?\" I was surprised.\n\n\"I read one of your papers, genetic markers in giraffe. Fascinating stuff.\"\n\nThe conversation flowed and I was sad that I wasn't sitting upfront to make the conversation easier. Time had flown by so I was surprised when we pulled up at the stage door of the O2 arena. Nicole got out and opened the door. \"Nice to meet you, enjoy your evening, Ma'am.\"\n\n\"It's Kirstie, and thank you for the ride and conversation.\"\n\n*****\n\nI was shown into a large room where there were already a few people gathered and most had glasses of something in hand. I took another glass of champagne and a couple of people spoke to me, but I was standing alone when an attractive woman in her twenties approached. \"Hi, you have to be Kirstie, I'm Abigail, very nice to meet you.\"\n\n\"Hello, nice to meet you as well. How did you know me?\"\n\n\"Well, I was expecting you, Faith has described you and I Googled you, so it wasn't hard. Faith will be doing a soundcheck in a few minutes and we're all going to watch, then back here for some food before she goes on stage. I doubt if she'll have much chance to chat until after the gig.\"\n\nAbigail introduced me to a few people and I chatted away. It was a very mixed bag of people and the conversation was mostly about Faith's music. The soundcheck was interesting, lots of fiddling with volume, musicians checking that they could hear and then they made a few lighting changes. Faith was dressed casually, without makeup and despite that, she looked wonderful. At one point during a lull in the activity, she smiled and gave me a little wave.\n\nFaith appeared when we were eating and eventually, she came over to me. \"Faith, thank you for this, it's a real treat and I feel very privileged. I'm looking forward to the gig.\"\n\n\"Kirstie, you're really kind. I loved the day we spent together and thought you might like this. Please enjoy this evening and I hope that we get the chance to chat later.\" She disappeared, obviously lots of her guests wanted her attention. I just felt lucky to be there.\n\nWe watched the gig from some seats near the stage which also had plenty of room for standing and dancing. I danced a lot next to a couple of other women guests who were in their mid-twenties. I clapped sang and cheered like a maniac. Not only did Faith perform her own music but she included a selection of other peoples, Elton John, Adele, Whitney and Taylor Swift, which made for a wide range.\n\nI sank a cold bottle of water to replace all the fluid I'd lost and chatted with the girls I'd danced with. They were related to one of the promoters and impressed that I was a guest of Faith herself.\n\nFaith spent time with every one of her guests and it took time before she reached me. \"Sorry, I've neglected you and we need to leave soon but we can head back to the hotel together and chat when we get there.\"\n\nAfter saying many goodbyes, Faith was eventually able to get away and we jumped into the limo being driven by Nicole, with Abigail. We chatted about the gig and sipped even more bubbly before we reached the hotel.\n\nI expected to head to my own room but as Abigail said goodnight, Faith escorted me to her suite and ordered a pot of tea from room service. \"Is tea okay or would you like something else?\"\n\n\"Tea would be nice, I've never had so much champagne in one day and a clear head would be good. Thanks for inviting me, it's been an incredible experience and everything you organised has been wonderful.\"\n\n\"As I said, I loved spending the day with you and all of this is just how it is. After a while, it all gets a bit normal and that's not me. Now that tour is done, I want to change things going forward, lower tempo, fewer lights, much more chilled. I want to write more as well.\"\n\nWe talked for another hour until I started yawning, I kissed Faith's cheek, thanked her and headed to my room. I lay in bed thinking about her. She was so nice, quite beautiful and I'd enjoyed every minute that I'd spent with her. I'd love to be friends; I'd love to spend time kissing her but I was a fool to even imagine that was possible because it wasn't. I did fall asleep with a smile.\n\nA surprise visit\n\nI was in my office late on Friday afternoon after a long, frustrating week and I was looking forward to going home and putting my feet up when the phone rang. \"Hi, Kirstie Hunter.\"\n\n\"Hello there, what are you up to?\"\n\n\"What? Who is this?\" I didn't recognise the caller.\n\n\"I knew that you'd have forgotten me, it's Faith.\"\n\nI was stunned surprised to be speaking to her again. \"Faith, what's up? I'm surprised to hear from you.\"\n\n\"Do you have plans for this evening?\"\n\n\"Putting my feet up and drinking wine. Why?\"\n\n\"I'd like to take you for dinner. I could pick you up at, say six-thirty, but I'd need your home address or I could meet you somewhere.\"\n\n\"What?\"\n\n\"Didn't you understand me?\"\n\n\"Yes, I don't know.\" I was confused and a little shocked.\n\n\"Dinner this evening?\"\n\n\"Okay.\"\n\n\"Text me your address and I'll see you then; smart casual, okay?\" She hung up and I sent her my address, totally baffled.\n\n*****\n\nI heard a car pull up and left the house. Faith was standing by the door of a taxi. \"Hi, Kirstie.\" She kissed my cheek and we got in the back seat.\n\n\"What's this all about? I'm in shock.\"\n\n\"Hey, I can't take my newest friend out to dinner?\"\n\n\"I didn't expect to...\"\n\n\"Hear from me again. I know, you said that, but here I am. I like you and thought this might be fun.\" I was stunned into silence. Faith talked about her week and I let her. The car pulled up outside a place I'd never heard of, set into a cavern near to the castle. The sign showed that it had two Michelin stars, which impressed me.\n\nA few minutes later we were sitting opposite each other in a secluded booth and a waiter brought a bottle of wine that must have been pre-ordered. I ignored the menu, sipped the rather lovely white wine and said, \"Faith, it is nice to see you, very nice, but why all the element of surprise, what are you doing here? This all seems odd, weird?\"\n\n\"I happened to be up here, decided that I wanted to see you again and treat you to a meal, I like you I thought we might be friends.\"\n\nI smiled, it seemed odd, but maybe more would come out as the evening progressed and the prospect of a nice meal with a woman I liked, well, who was I to refuse. \"I like you as well and have enjoyed your company, but we have different lives and you don't live anywhere near here, do you? Where do you live?\"\n\n\"I live near Henley on Thames, to the west of London. I have a house that looks onto the river, it has a small studio where I can practice, write and do some basic recording. A couple of my staff work from there during the day and I have a housekeeper who lives in a small cottage, which used to be a gatehouse. It is a little bit larger than your place.\"\n\n\"You see we don't have much in common, except maybe cricket. My cottage was where my grandparents lived and when I came back here to study after I left Australia. I lived with grandad and he left it to me when he died. That caused all sorts of bad blood, my mother thought it should be hers and demanded that I sell it.\"\n\n\"That's not good. How did you sort that out?\"\n\n\"She was horrible, but grandad had foreseen that possibility and so he did things to negate it. It was all done through his solicitor and she didn't have a leg to stand on. He left me some money as well and a nice letter, telling me how much he loved me, how he was pleased that I'd chosen to live with him during the last years of his life. He suggested that I use the money to modernise the place, something that he didn't feel he could do. That's what I did, it's clean and very modern inside, but cute and traditional outside. I love it and know that I'd be happy there for the rest of my life.\"\n\n\"I know that you said you had a strained relationship with your parents. How are things?\"\n\nI sighed, but I'd kept all of this buttoned up for a long time and now it felt like the right time to let some of it out. \"I haven't spoken to my father for seven years and my mother only once since grandad went five years ago. That last conversation was unpleasant, she called me a pervert.\"\n\n\"Why did she call you a pervert?\"\n\n\"In my last year at school I told her that I liked girls, she went.... Well, she didn't approve, neither did my father and that's when I decided to come back to England and study at Oxford. I stayed with grandad when I wasn't at university. Then lived with him when I studied for my Masters and Doctorate here and through that got my present job, well I was deputy until my boss left and I took over a couple of years ago, as Research Director.\"\n\n\"That seems tough, they ought to be very proud of you. You've published papers and all sorts.\"\n\n\"I don't know, they've never acknowledged that, only my preferences, of which they disapprove. Have you been stalking me or Googling me?\"\n\n\"I confess that I have looked you up but....\" She paused, \"do you remember the driver, Nicole?\"\n\n\"Yes, she's studying biology as well.\"\n\n\"She told me a lot about you, more than Google did. Obviously, she knows your work. She said Hi.\"\n\n\"Funny, I looked her up as well and I know her supervisor, we studied together. I haven't spoken to Alison, but I do know that Nicole is working in an area that has links with most of my work.\"\n\n\"We really should order some food.\" For the next few minutes, all conversation was about the fare, before we placed our orders.\n\nFaith talked about her latest project, a new album and producing some work for a singer I'd never heard of. I talked about something that I was working on and struggled to explain it in simple terms so she'd understand.\n\nThe food was some of the best I'd ever eaten and the chef/patron stopped by to speak to us.\n\n\"He does know who you are, but he's too polite to say so. You do know that don't you?\"\n\n\"Yes, but at some point, before we leave, he'll ask for a photo for his celebrity wall, wait and see.\"\n\nDuring a lull in the conversation and whilst Faith was in the bathroom, I wondered why she was here, what was this about. She was straight, she must be or she would have said otherwise and I'd seen photos of her out and about with lots of guys. I admitted to myself that I fancied her but....\"\n\nFaith got back just as our coffees arrived. I could stand this no longer, \"Faith why are you here, in the city, here with me? What's going on?\"\n\nShe looked down and muttered, \"You are direct, aren't you?\"\n\n\"Well?\"\n\n\"I like you, okay. Actually, it's more than that, I like you, you're gorgeous, smart and I fancy you. How's that?\"\n\nI took another sip of coffee and realised that my hand was shaking and I knew that my brain had paused. Gorgeous? Fancy me? \"Why are you in the city, what for?\"\n\n\"I don't have any reason to be here, except to see you.\"\n\nI was stunned now, but that didn't stop me from spitting out my reply, \"You came here just to see me? Please explain, this is...\" I didn't have the words to finish so there was a silence for half a cup of coffee and during that time she stared at the tablecloth looking bashful.\n\n\"I think you're wonderful Faith. But we move in different worlds, different circles, I'd love to be your friend, even at a distance but... you're straight, aren't you?\" I blurted out the last bit, far harder than I meant to.\n\nThe silence that followed was only broken when she waved the waiter over to order more coffee and a brandy, which I declined.\n\n\"No, I'm not, not straight. I'm a lesbian and you're one of about a dozen people who know that fact. Almost half of those are former lovers or partners and my fame etc was part of the problem. My father and brother know, my manager, an executive at the record label and Abigail, maybe my former PA. That's it.\"\n\n\"Wow.\" Lame, but I was stunned and had nothing else to say. Faith filled in the silence.\n\n\"I decided a long time ago, after much soul searching that it might affect my popularity and it seemed better not to say anything, so I didn't, but I've been living a lie and I suppose that I've been lucky it hasn't come out. I made the decision a year ago that after the tour that's just finished, I wanted to do different things, a fresh direction musically and play smaller venues only when I felt like it. I knew that it wouldn't matter that much if things came out, if my being gay came out, I'd adapt if need be and cope.\"\n\n\"Okay.\" I didn't have anything else to say, but I was sure that she did and what that might be scared me.\n\n\"Then I went to watch a cricket match and my world changed, I met you. I didn't say anything because I was scared, but when you came to the gig in London, I was sure that I was right. I came here tonight to test the waters. It was always possible that I wouldn't tell you any of this but...\"\n\nI was convinced she was about to cry. I reached across the table to touch her hand and felt a charge as we connected. 'Damn' I thought.\n\n\"Kirstie, I like you, no I fancy you. That's not right, if I'm being totally honest and I am, I think that I may be in love with you.\"\n\n\"What?\" I exclaimed.\n\n\"You're beautiful, smart, funny, good company and independent. All of the people I've had a relationship with have all wanted something from me, fame, money, a leg up. I was always suspicious that it wasn't just me. I've had lots of guys interested, some who you'd know if I named them, but I wasn't interested and I suspected some of their motives too. If you were interested in me, it would be for me, Faith Shadlow, not a pop star.\"\n\n\"Shadlow, is that your real surname?\" She nodded. \"You dropped the L and became Shadow. I see how that worked.\"\n\n\"So...\" she looked up in expectation. I sat there deep in thought.\n\n\"The truth is, Faith, I think you are amazing, talented, very beautiful and good company. I'd love to be your friend, but we move in different...., we live a couple of hours apart. I do fancy you; I have since we met but your revelations have taken the wind from my sails. I don't know how this is going to work and I'm not jumping into bed with you, as much as that appeals to me, I think we need to 'date' and see where it goes.\"\n\nShe smiled at me, she looked happy for the first time since we'd finished eating. \"Hi, I'm Faith Shadlow, a humble songwriter, nice to meet you.\"\n\nI laughed. \"Hi, nice to meet you too.\"\n\nAt that, the patron came over and as predicted asked for a photo which Faith agreed to provide with a smile.\n\nWe caught a taxi back to my home and when we pulled up, I turned to her, \"You can come in for a drink, coffee, whatever but that's all and you're not staying. Is that okay?\"\n\n\"More than okay. Lead the way.\"\n\nI went to get some drinks and left Faith standing in the lounge. She was staring at my photographs when I returned and handed her another brandy. \"You haven't spoken to them for years, but you have their photo?\" She pointed to one of them\n\n\"They are my parents,\" I shrugged and pointed at another picture, \"That's my grandparents.\"\n\n\"There are a few of your grandad.\"\n\n\"Yes, I was closer to him than anyone else and I was the apple of his eye.\"\n\n\"And here at the back is the photo of the wedding. They were a striking couple and you look so cute.\" I blushed and went to sit down. \"I love this place, you've done a great job in here, I love it.\"\n\n\"I'm guessing it's a little smaller than your home.\"\n\n\"Just a little.\" She wrinkled her nose which was just precious. She joined me on the sofa.\n\nWhen she left, half an hour later, I suddenly felt alone and missed her already. I climbed into bed and stared upwards. Faith was gorgeous, it now seemed that she wasn't straight and she fancied me, wanted to date me. I struggled to believe that it was all true but it excited me, I liked her, no she turned me on and it had been a while since anyone had done that. I half regretted not asking her to stay, but it had been a sensible decision. Damn, sometimes being sensible isn't such a good thing. I fell asleep with a smile on my face.\n\n*****\n\nWe spoke on the phone every night, she said that she'd be there on Friday evening and that she'd booked a room. Sure enough, six-thirty arrived and so did Faith, in her car to take me to dinner. We kissed and it affected me, turned me on, then the engine throbbed as well when we drove off. \"I like your car and the engine sounds powerful, what is it?\"",
        "\"A Maserati, I waited for a while for one of these. Maybe one day I'll let you have a go.\"\n\n\"Judging by the grin on your face I suspect that day might be a long way off.\" We both laughed.\n\nWe had dinner again and managed to avoid any attention, but she thought she was pushing her luck so we headed back to my place. On the way, I debated asking her to stay, but part of my brain told me to take things slowly. I listened.\n\nIt was almost 2 am when Faith left. We'd reached the door thirty minutes earlier and kissed. The first morphed into the second and then they just all rolled into one. They were wonderful, perhaps so good Faith could write a song about them. I didn't know that kisses could ever be so satisfying, so sexual and convey a deep desire for more.\n\nFaith was at the door again at 10 am carrying croissants. I'd just stepped out of the shower and left her to make coffee whilst I pulled on some clothes. We went for a walk around the large estate near where I lived and held hands as we watched golfers, ducks and the resident herd of deer.\n\nLunch was taken late in a small village pub. The conversation flowed and we covered every topic imaginable. I'd never opened up as much as I did that afternoon, not to anyone except my grandad.\n\nWe cooked dinner in my kitchen, simple pasta, but there were lots of hip bumps and casual touches, most weren't due to the size of the kitchen either. We'd drank a lot of wine so Faith stayed but in the spare room. I lay awake for some time considering whether or not I should go to her room but I resisted and eventually fell asleep.\n\nI took Faith a mug of tea and she woke as I opened the door. I sat on the edge of the bed and looked at her. I gave her a quick kiss and left her. My resistance was slipping but I smiled at the thought of seeing her regularly in the morning all tousled and sleepy looking.\n\nFaith left in the late afternoon, with my agreement that I'd visit her the following weekend.\n\nBy the river\n\nI worked hard all week, mainly to try and stop my thoughts from drifting into the gutter. Once I got into bed I gave up the pretence and let them run free. I'd never been that turned on by another person, even someone I'd lived with for a couple of years. Here I was alone with thoughts and feelings that were filthy.\n\nI knew that my willpower was weakening and decided that some new underwear was in order, just in case. I smiled when I got back in the car to return to the lab, I'd just spent a fortune on frilly things. Who was I trying to fool, I wanted to wear them for her?\n\nWe spoke every day and she sent me silly texts.\n\n*****\n\nI decided to finish early, so just after lunchtime, I headed home to change, collect the bag I'd packed the night before and the half dozen bottles of wine I'd selected with the help of the man in the wine merchants. My satnav was programmed and I set off with a Faith Shadow album playing, rather loudly.\n\nFaith's home was well hidden and I drove past the gates twice. It wasn't as large as I'd expected, but there was a lot of glass and a smaller building off to one side that I guessed was her studio. An older woman answered the door, she was in her mid-fifties and had a lovely smile, \"You must be Kirstie. Faith was right you are rather gorgeous. I'm Annie.\"\n\nI stepped through the door and she told me where the bedrooms were. \"Faith has been excited about your visit, but I think you might be earlier than she expected, she's still in the studio. I'm about to leave, there's food on the cooker. I suggest you get your bearings and head over to see her. I'm off, enjoy your weekend.\"\n\nI stood for a moment until I collected my thoughts. I put the wine in the kitchen and had a brief look around. The place was neat, modern and very tasteful. I decided to avoid looking for a bedroom and wandered outside. The lawn, beyond a patio, sloped down to the river where there were a couple of chairs on a small wooden platform under the shade of a tree.\n\nThe studio was very much a box shape partly hidden by hedging. I tapped on the door, but there was no answer so I tried the handle and found that it was unlocked. I could hear singing but no one else appeared to be about. I stepped into the room where Faith was sitting on a stool, singing but wearing headphones which I'd guess was why she hadn't been aware of me. It sounded odd to hear just her voice and I stood quietly. Faith wore a short skirt and therefore her long legs were visible along with her bare feet. I smiled to see that she wore pink polish on her toenails. I have no idea why that made me smile, but I thought it was cute. She wore her hair down and it flowed across the shoulders of her sweatshirt which was faded, baggy and concealed her figure. She suddenly seemed to sense my presence and turned, she wore very little make-up, the smile spread across her face, she stood, dropped the headphones and walked over fluffing her hair. Without heels, she was an inch or two smaller than me, but then I was the one wearing heels.\n\n\"Hello, I wasn't expecting you this early, but I'm delighted you're here.\" She wrapped me in her arms and I melted. It was just a hug and a small, fleeting kiss on the cheek. When she stepped back, she was grinning. \"Did Annie let you in?\"\n\n\"Yes, she told me you were over here, that she'd left dinner and you were excited about my visit.\" Now I was the one grinning.\n\n\"She's right, I'm so happy. Come on let's go and get a glass of wine and we can talk.\"\n\n\"That sounds good, but you have to promise that you'll let me hear any new music you've written.\"\n\n\"Okay, maybe tomorrow. Just one more thing...\" She grabbed and kissed me, this was a proper kiss and my toes curled. I joined in and it left me breathless when we moved apart.\n\n\"Wow, now I need some wine.\"\n\nI didn't get my wine right away, Faith showed me where things were, including the bedroom that I was to use. The whole house was nice. We took the bottle of cold white wine and two glasses down to the chairs by the river. This was a lovely spot, ducks, birds, rowers and people walking dogs on the opposite bank. We talked about our week and I felt incredibly relaxed by the time we headed back to the house for dinner.\n\nDinner was a chilli which we ate with pitta bread pockets. I'd overfilled one of mine and the bread burst open a little to allow some chilli to run out and down my chin. I was about to dab it away when Faith moved quick as a flash, she pushed my hand away and got close. It puzzled me for a few seconds until I saw her tongue flick out and she licked the chilli from my chin. For an instant I was horrified, then I saw her smile and changed my mind, thinking that it was quite sexy. It could be wrong but I didn't care, to me, it conveyed something that words couldn't. Then she kissed me and it went on for a few days, made my toes curl yet again and the rest of me feel loved. Okay, it wasn't a few days, but my chilli was a lot cooler by the time I got back to it. Still good though.\n\nAfter we'd eaten, we sat on a huge very comfy sofa and listened to music from someone I'd never heard of. We didn't speak, just listened, our bodies were close, Faith had her hand resting on my shoulder as I lay against her. She wasn't moving her finger consciously, but there were tiny little movements and I felt every one of them, totally aware of her proximity and the warmth of her body against mine.\n\nWhen the music finished, we moved and refreshed our glasses, talking from opposite ends of the sofa. Faith talked about her family and I told her more about my time in Australia, my grandfather and the girlfriends I'd had in the past.\n\n\"Were any of them serious?\" she asked.\n\n\"I hoped two of them would be. The first one didn't last long, she wanted different things from me. She was an out loud and proud girl, waving her rainbow flag at every chance. She didn't like guys. I was comfortable with who I was and I suspect she wasn't as secure.\"\n\n\"How do you feel about guys?\"\n\n\"I like guys, nothing against them, you get good and bad same as everything else. I just never really felt a great attraction to any and those I'd got intimate with, well, let's just say it wasn't happening for me.\"\n\n\"What about the other girl?\"\n\n\"Jane, she worked at the university. We got along famously; grandad liked her. The thing is she wanted to travel, to tour the world, working at basic wage jobs to earn enough for the next leg of her trip.\"\n\n\"That wasn't you though?\"\n\nI sat sipping wine before I answered. \"No, I worked hard to achieve what I have; I love my work and I want stability, I don't want to do those types of jobs. If I'm going somewhere I want to do it in a bit of comfort. I realised that my feelings for her weren't as strong as I thought, so I ended it.\"\n\n\"Did she go and travel?\"\n\n\"Yes, but it didn't last long, she had a few poor experiences and came back, although she's in London. I wish her well but she's not right for me.\"\n\n*****\n\nI kissed Faith, said \"Goodnight\" and closed the bedroom door. I used the bathroom and slipped into a camisole and French cut panties; they were sexy, but they felt appropriate, even though I had no plans. Then I climbed into bed and thought about the day. I started having lewd thoughts and then stopped myself. I'd promised that I wouldn't leap into bed without taking the time to address my feelings. It was then that I admitted to myself that I was bonkers about Faith and was pretty certain that she felt the same about me. I was going to have sex with her and that wasn't far away. Then I asked myself the thousand-dollar question, 'what had to change before I'd do it?'\n\nAnd the answer was, nothing, it was time.\n\nI slipped her bedroom door open as quietly as I could and tiptoed towards the bed. I froze when I heard the quiet, almost whispered words, \"Thank you, Lord, my wish has come good.\" Her arm came out from under the pillow and she simply raised the duvet for me as she remained facing away from me and muttered, \"Hi, a cuddle would be nice, no obligations from either of us.\"\n\nI got into bed and pulled on her shoulder until she turned towards me, I could just see her smile in the darkness, \"I didn't come all this way for just a cuddle. I came because, well things have changed, I want you.\" I leaned in and kissed her; it was brief but conveyed my feelings.\n\n\"I've prayed for this, not because I thought it might help. I've also tried throwing pennies in a wishing well, throwing salt over my shoulder and giving money to a street collector.\"\n\nI laughed, \"Have you really done all of those things?\"\n\n\"Some of them, but I reserve my right to privacy.\"\n\nI giggled, \"I've dreamed about you and I learned something else about the two of us, which I hope is true.\"\n\n\"And what's that?\" She asked.\n\n\"I'm a dirty bitch.\"\n\n\"And me?\"\n\n\"Oh, you make me look virginal by comparison.\"\n\n\"And you hope that it's true?\"\n\n\"Counting on it and here to find out.\"\n\nI kissed the corner of her mouth softly and traced a line down from her chin over a shoulder blade and the side of her torso until I reached the hem of the T-shirt that she wore. She simply watched me in the dim light, smiling, I think. My hand went under the hem and for the first time, I touched her naked hip. She jumped a tiny little bit and I grinned, then I touched her more firmly and moved my hand upwards until I reached the bottom of her right breast, she gasped softly and muttered something unintelligible. I moved slightly until my fingers reached a nipple which caused a louder gasp. I squeezed very gently and that drew a moan. I stroked a little, squeezed a little as she wriggled and softly muttered, \"for goodness' sake, stop teasing. I want you, this, everything, please.\"\n\nI palmed the entire breast and moved so that I could use my other hand to raise the hem of the T-shirt. That enabled me to slip my head down and take her other nipple between my lips. It was amazing, it was something that I'd done before, but now I realised that this meant more and it was arousing me almost as much as Faith. It did get a little less than romantic when the T-shirt came down and covered my head trapping me against her breasts, but neither of us was complaining.\n\nFaith kept making little noises of pleasure and arousal, which I thought was cute. I felt a shudder and she grabbed my neck. I paused and tried to ask if she was okay. Before she could reply I kept going and then she yelled, \"Jesus, I'm going to come, oh bloody hell.\" And come she did, first going rigid and then relaxing, making 'oh my' sounds.\n\nI paused and pulled my head up, \"Are you okay?\" I asked.\n\n\"No, yes, maybe, I don't know. I've never come just from having my breasts and nipples played with.\"\n\n\"Hmm, I didn't know that was possible either, but we do now.\"\n\n\"I want to touch you.\"\n\n\"Oh no, this is my turn and I have some research to do.\"\n\n\"Research?\" She asked.\n\n\"I'm a researcher and I need to find out how many ways I can make you come. I'm glad I waited for this moment but also mad at myself. It's way, way better than I'd dreamed.\"\n\nI got up so that we were face to face and I kissed her. I kissed her with everything that I had. She tried to stop me as I pulled away but I jerked back, looked at her, smiled and then moved down the bed. She opened her legs and I lay down between them. \"Are you going to kiss me?\"\n\n\"Oh, yes and more besides.\" My face was so close to her as I stroked the inside of her thighs, my hand travelling up across her belly before reversing course. As I did that, I looked at her in the dim light, there was enough to see that she was bald, her lips stuck out, swollen and very wet. One touch of my tongue on her lips caused her to shudder and she stroked my hair making sounds that I assumed were sounds of pleasure.\n\nI kept up some very light licks and touches with my tongue as I brought my hand up to touch her as well. I slid a finger inside, then a second and she groaned. I added a third and licked more forcibly. I licked upwards to her clit and teased it until I could feel it and then closed my lips around it. Faith got more vocal telling me that what I was doing was good. \"Fuck me Kirstie I'm going to come, yes please.\"\n\nI kept up gentle pressure with fingers and lips as she rose and relaxed, rose and relaxed again. I pulled back slightly and rested the side of my face on her belly, stroking her side as I lay there. I closed my eyes, it was great, it felt as if I belonged here with her.\n\nAfter a few minutes of silence, I moved up the bed beside her and slid an arm under the pillow until I touched something hard. Faith realised what I'd found and tried to stop me but I knew what it was and pulled out the pink vibrator. It wasn't anything fancy, just eight inches of solid plastic. \"Oh, crap,\" she muttered.\n\n\"It's okay I've seen one before, I have one of my own.\"\n\n\"You do?\"\n\n\"Yes, but it's not been used recently. This one however has been close at hand and maybe...\"\n\nFaith squirmed, \"It has been used recently. I've used it thinking about you. You have no idea how sexy I think you are; I've had some great dreams but none of them was as good as this.\"\n\nThe very idea of her using that and thinking about me made me very horny. \"I see.\" I lowered the hand holding it and managed to turn it on with the same hand. I ran it over her thigh.\n\n\"No, Kirstie, you don't....\"\n\n\"No, I don't but I'm going to unless you tell me to stop. If you ever tell me to stop, I will so don't say it if you don't mean it.\" She remained silent so I kept stroking working slowly across her belly until I reached the junction of her legs. She squirmed as it touched her clit, but I moved lower and she eased her legs. She wanted this and she was still very wet. I moved it along her lips, over her clit moving slowly never remaining in one place until I got it right between her lips and moved it inwards. It went in easily and she reacted. I pushed it as far as it would go and pulled it out before going back again. I kept repeating that and occasionally I'd take it out to tease her clit for a few moments.\n\nHer orgasm took me by surprise and I lost the vibrator. She muttered a breathy, \"No,\" but I found it and reinserted it using it with more force until she came again. Eventually, I stopped and she slumped limply. When I saw her face, it was covered with a sheen of sweat. She looked at me and said, \"I need to make sure that we keep a supply of batteries on hand.\"\n\n\"What makes you think there will be another time or even if there was, that we'd do that again?\"\n\nShe flinched for just a second before saying, \"Tell me that was meant as a joke.\"\n\n\"Of course, it was. This has been the best night of sex I've ever had.\"\n\n\"But,...\"\n\n\"But you haven't touched me? No, you haven't but I'm sure you will and I have come, just a little one but I have, just not sure how.\" I kissed her and said, \"I need a drink, thirsty work.\"\n\nI got out of bed, pulled on a robe that was lying on a chair and went downstairs to find a bottle of water. Faith was sitting up when I got back. I leaned over to kiss her before letting her have a drink. \"I'm glad I waited for this because I wanted to be sure, but I'm also annoyed at myself and, well, I'm very happy to be here sharing your bed and sharing what we've just done.\"\n\nFaith stayed silent and handed me back the bottle. I took a swig and put it on the bedside table. As I turned, she knocked me backwards and sat astride me. \"So, in your dreams, I'm a dirty bitch?\"\n\n\"No, I'm a dirty birch you're much worse... or better.\" I grinned.\n\nShe kissed me then held my hands near to my shoulders as she sucked on my nipples. I closed my eyes, this felt heavenly. I lost track of things until I felt her move and very quickly, she was between my thighs and I felt her tongue on me. It took only a few seconds before I came. Faith paused, \"That was quick\"\n\nI managed to get out a whispered \"I needed it so badly.\" She got back to work and I felt her fingers part my lips as she inserted the vibrator which she turned on. She pushed it in and out gently as she kissed my clit. I came and came again. She didn't let up and I think that I may have lost my mind temporarily.\n\nI didn't realise that she'd moved and was now holding me as we were face to face. She kissed me, \"That seemed to be pretty good?\"\n\n\"Amazing. I should be able to find the right words, I'm a doctor, an academic but may have to stick with amazing.\"\n\n\"Let's go to sleep, I'm exhausted.\" I don't even remember her finishing the sentence.\n\n*****\n\nWhen I woke the next morning there was lots of kissing but we refrained from more sex. I for one was a little tender.\n\nFaith tried to teach me some piano but that was a failure, so we went for a walk and had lunch at a pub, chatting non-stop.\n\nWe reached the house and I was removing my coat when Faith grabbed me, pushing me onto the floor, in seconds my skirt was up, knickers down and she had her tongue inside me. I came quickly and began to think that I had a hair-trigger.\n\nWhen she moved away, I slapped her, \"On the hall floor?\" I asked.\n\nShe laughed as she replied, \"Really, you came pretty quickly so don't tell me you didn't enjoy it.\"\n\nI stood up grabbed her hand and dragged her to the bedroom. I pushed her back onto the bed, yanked down her trousers leaving them around her ankles. I knelt on them, effectively trapping her and went to work with my tongue.\n\nWe had a light dinner and went back to bed. We changed the batteries in the vibrator and decided that we should have one each.\n\n*****\n\nGoing home that Sunday evening was emotional. I was in Iove; wildly, madly, deeply and very happy about it. I wasn't happy that I was now on my own, I was missing Faith after only an hour apart and tempted to turn around and go back for another night in her arms. I could get up early to make work on time, but my sensible head took over and I kept driving. Having time to myself would allow for some reflection.",
        "There was another good reason to be heading home alone, I was sore. My nipples, breasts, clit and all the other sexual bits were sore. They'd seen more action in forty-eight hours than they had in the last three years. I'd loved everything but I needed some recovery time until they adapted and I hoped that they would, quickly.\n\nI pulled the duvet up and closed my eyes. Faith was wonderful and having a life together, the two of us would be a dream, but I wasn't convinced that it would be possible. Still, I was going to enjoy it. My mind darted off without permission and suddenly I found myself back to earlier that morning, waking as the sun was breaking and finding Faith nursing on my nipples. It had been glorious, amazing sensations and my body responded like that of a needy woman and in truth, I was that woman. I was getting turned on at the memory and realised with a start that my hand was between my legs and I was frigging myself with determination. I came hard and seemed to float before settling back on the bed. It wasn't as good as the sex that hard sparked it, but way better than any time I'd played with myself before.\n\nAlternate weekends\n\nWe spoke on the phone almost every day and there was a steady stream of text messages between us. I'd drive down to Faith's home on a Friday or she would be waiting for me at my place. Mostly we stayed in whichever house we were in. We cooked, watched movies, listened to music and talked.\n\nWe did go out for meals, but Faith was always a bit nervous. We walked a lot during the day, held hands, kissed in discreet places and enjoyed the countryside.\n\nSex was never far away. It became a normal way to wake up each morning and almost every evening before we went to sleep. I'd never really been one for sex during the daytime and never had sex in the shower before. Faith had a huge shower with multiple jets and a large supply of hot water. I'd never been so clean and I don't recall anyone ever washing me until then. It must have happened when I was very small but now Faith relished soaping me, rinsing me and stroking me. That almost always resulted in me with my face and hands pressed against the wall of the shower and her fingers deep inside me from behind, thrusting until my legs gave way. I loved the water pouring on me whilst I was on my knees between her legs as she sat on the shower seat.\n\nShe caught me in the kitchen one day and pressed up behind me making all sorts of wonderful suggestions until she slid her hand up my legs only to find that I wasn't wearing any underwear. Sadly, that made her laugh and disturbed the moment for a few minutes until I was taken on the countertop. I seldom wore knickers when we were together, something I'd never have dreamed of before.\n\nOne evening I watched one of Faith's concerts on DVD, a 90-minute concert, she was on the floor between my legs eating and touching me. I came so many times and didn't see much of the concert. By the time of the encore, I was pleading with her to stop.\n\nAs good as the sex was and it was truly great, I loved being held and kissed. I loved the feelings we shared and simply being with her. I had my doubts because sooner or later things would change and I had no idea how that would impact our relationship.\n\nSarah and the birthday\n\nI got a call from Sarah Hardy one evening and after the usual pleasantries, she invited me to join her family the following weekend to celebrate Chloe's birthday. \"That would be very kind, but I have a visitor staying with me.\"\n\n\"A visitor or a person of romantic interest?\" Sarah laughed as she asked.\n\n\"That was very well put and yes, the latter, so I'd feel a bit awkward about ditching her.\"\n\n\"Okay, that's fine.\"\n\nThen an idea hit me. \"However, I could bring her with me as she knows Chloe, you and the girls anyway.\"\n\n\"Now you need to spill the beans, who is this mystery woman?\"\n\n\"Actually, it's a singer called Faith.\" I giggled and there was a pause before Sarah spoke again.\n\n\"Faith, as in the same Faith you met at the cricket?\"\n\n\"Hmmm, that's the one.\"\n\n\"And you two are friends now?\"\n\n\"Maybe a bit more than just friends...\"\n\n\"That solves that, you're both coming and I'm not telling anyone else, except Olivia. This will be cool.\"\n\n*****\n\nFaith loved the idea; I'd hesitated when I told her the plan, but she was keen to go. \"It will be good for me, they're people I know and for the first time I'll be stepping out and admitting things.\"\n\n\"Are you sure?\"\n\n\"It's time. I love you and I need to stop hiding.\"\n\n\"You don't, you know that I don't want to be splashed over the press either, but it's good, they are friends.\"\n\n*****\n\nWe got dressed up and Faith collected the box she'd brought with her. It was wrapped, but she wouldn't tell me what was in it, except to say that she had checked her gift idea with Sarah.\n\nThe three girls were all standing by the window, they looked stunning as did the four other girls they were chatting with and who I assumed were their friends. Chloe turned to wave as I walked into the room and then her hand flew to her mouth when she saw who was with me. Suddenly we were surrounded and Chloe demanded to know how I'd managed to get Faith to come with me.\n\nI was about to answer, but I was beaten to it, \"The two of us are together, we have been for a couple of months. I decided to stop hiding and this is the first occasion where I've told anyone outside of my closest work colleagues or family. Happy birthday.\"\n\nOlivia smiled and took my hand, \"This is wonderful and I'm so pleased for you both.\"\n\n\"And it might mean that we get to play some more music with you Faith.\" Constance was grinning and I realised that they all were.\n\n\"We have another first tonight. The first birthday gift we've given as a couple. I hear that you're off to Africa for a few months as part of your studies, so we thought these might be useful.\"\n\nChloe accepted the gift and pulled the paper off. She gaped when she saw the box. It was a set of binoculars and I was a bit puzzled at the look on her face.\n\n\"Faith, Doctor Hunter, I mean Kirstie, this is too much these are...\"\n\n\"The best you can get, or so I'm told. It marks the first gift that Kirstie and I have given as a couple, my change to being honest about myself, your birthday and most of all, it was down to you that we met. So, thank you, accept the gift, use them to do your work and become the best that you can be.\" I'm sure that several people had tears in their eyes as Faith spoke, but I couldn't see them because of my own.\n\nAs we sipped wine I asked Faith about the gift, \"I assume that they cost several hundred pounds, that was generous.\"\n\n\"I meant everything I said about them and they cost a couple of grand.\"\n\n\"What?\" My mouth and eyes were open in shock.\n\n\"There are even more expensive ones, but those are the best for what she's going to do. They were worth every single penny. Every word I said was true. I love you and now all these people here know it and I'm smiling.\"\n\nSarah castigated Faith, who shrugged it off and later Chloe came over and, in a private moment, said her thanks. \"But I have another request, would you please sing that song you did for us again?\"\n\nFaith smiled, \"Get the guitars, all of them, let's have a bit of fun if you're up for it?\"\n\n\"It's nice outside, we could open the doors to the music room.\" Faith nodded. Chloe, Constance and another girl dashed over to open the doors. Faith and I followed with Charlotte racing ahead of us. The other guests realised something was happening and also headed into the garden.\n\nI stood aside as Faith spoke to five of the girls before picking up a guitar and turning to face the other guests. \"Hi, I've had a request to play something that this family were the first people to ever hear and it will be on my new album sometime soon. So, ladies and gents, I'm Faith Shadow and this is my new band; The Silhouettes.\n\nThe girls gasped, then grinned and as Faith started to strum, they played some simple chords, Constance kept a rhythm on drums and another girl played gentle piano to back her up. They looked concerned to start with, but their confidence grew and smiles crept further across their faces.\n\nBy the time it was done the girls were bouncing with glee and the guests applauded. Faith held up her hand, \"The Silhouettes may have a future. Thank you for that. Now I have another new song and no one has ever heard this until now. It was inspired by a special person,\" She turned to the girls and said, \"Stay there, but I don't need a backing for this one.\" Faith turned back and looked at me, \"It's called, 'I've found her'.\"\n\nIt was just her gentle voice and quiet guitar. Faith never took her eyes from mine and you'd need to be dense not to know who she was singing about. She sang about wanting to find someone special, then finding them and falling in love. It was lovely and brought me to tears. What's more, she'd just stated her feelings publicly and had to realise that there was a chance this would leak out. I worried about how this would change our lives, but my feelings for her were very strong and growing. I'd known for a while that I'd found the one, but there were still hurdles to jump.\n\nSeveral more songs followed and the 'band' were excited and quite good. It had made the party even more special. When they finished playing Chloe managed to get me alone, \"Thanks for bringing Faith, that was a real treat for all of us. I hope that you two are together for a while, you're both quite special.\"\n\n\"Who's special?\" Faith had appeared behind us.\n\n\"You two. I thought Kirstie was amazing when I heard her lecture and the things she does. I'd always liked your music and was chuffed years ago when Mum met you. It seems odd that a 'rock star' would play and fool around with some part-time musicians like us and I thank you for that. Now you're together, well that's great, you're very special to me and this family and my pals.\" Chloe kissed us both and headed back to her friends.\n\n\"You made their night.\"\n\n\"Actually, they made mine. I loved that, I want to do more of it and maybe my fame will allow it. Now, I love you and I'd like to get you alone.\" I grinned and she leaned close to whisper, \"and naked.\" That made me laugh and we said our goodbyes.\n\nThere was a little kissing on the way to my home in the taxi and some giggling at the thought of what we were going to do once we arrived.\n\nIt was straight to the bedroom where I stripped and used the bathroom. Faith kissed me as I exited and she entered. I got under the duvet, naked and lay back staring upwards anticipating that in a few minutes she'd be in my arms.\n\nShe took me by surprise and pinned me to the bed sitting on my waist. \"Oh, you made me jump.\"\n\n\"I think you may have started to doze off, so I assume it's a cuddle and sleep.\"\n\nI was horrified, \"No, no, I.... Please.\"\n\n\"Please, what?\"\n\nI whined as I replied, \"I love cuddles but I hoped for more.\"\n\n\"More, you mean tickling?\"\n\n\"No, not that, more loving.\"\n\nFaith held my arms over my head and pushed the duvet away, then she lowered her head to kiss my breasts before letting my wrists go and taking me with her tongue. Something had changed in me, all it needed was a slight touch from Faith and I was so close to orgasm and yet again it happened quickly. Then it happened again.\n\nI grabbed the cheeks of her ass and pulled her up the bed, she knee-walked towards me. Her sex was so close to my chin that I could smell her arousal, something I loved. I stuck my tongue and she inched closer until I could get inside her. Her orgasm came quickly too and so did the next two.\n\nWhen we recovered, I wrapped my arms around her and whispered how much I loved her. I was very happy\n\nRelationship\n\nIt was inevitable that news of our relationship would get out and it did. There were a few items in tabloid papers and the music press, together with some social media stuff. They included a few vile comments, mostly from people who felt that Faith had been dishonest, but the great majority of people were supportive and the gay community, in particular, applauded. Faith did a chat show and explained how she hadn't lied, just not been as open as she now chose to be.\n\nWe were photographed together a few times and I didn't enjoy the attention, but I'd known that it was coming so I bit my lip, kept my head down and smiled when necessary.\n\nThe people I worked with were great, but they demanded to know the whole story, so I decided to take them out for a drink one evening after work. It was great fun and we were having a few laughs, when Faith appeared, which stunned them. She bought several more rounds of drinks to help them get over their surprise and they loved her. They also enjoyed that she was interested in their work, although she didn't understand half of it.\n\nThe following day several of them made comments about how 'normal' she was. That had surprised me as well, at the beginning, we somehow seem to expect stars or celebrities to be different from the rest of us. In a quiet moment when we were alone, Yvonne said, \"Faith is quite beautiful, far more than she appears when she's on stage.\"\n\n\"I agree with you, but I suspect it's a stage persona she adopts.\"\n\n\"She's so different from you, but it's obvious that she loves you a great deal.\"\n\n\"Everything she's done so far tells me that. I find it hard to believe sometimes. I worry that we have such different lives...\" I didn't finish and swallowed hard, if this thing between us ended I was going to take it badly, I was nuts about her.\n\nFaith's Dad\n\nI arrived at Faith's earlier than I'd expected thanks to the light traffic. There was a car parked in front of the house that I didn't recognise. After closing the door and announcing my arrival a man appeared at the kitchen door, it made me jump, until I recognised Faith's dad.\n\n\"Hi, Kirstie, sorry I scared you. Faith's still in the studio.\"\n\n\"Sorry, I didn't expect to see you. I didn't know you'd be here. It's nice to meet you once again.\"\n\n\"Come on let's get a drink.\"\n\nWe went into the kitchen and both chose bottles of beer. I sat on the stool at the counter and John leaned against the sink facing me. \"So, you two seem to be a serious thing, how do you feel about her?\"\n\n\"I'm still trying to adjust, I guess. I love Faith, but the distance between our homes, her fame, the impact of our relationship scares me. She is wonderful and I hope that somehow we can make a go of it.\"\n\nHe considered his response before saying, \"She's hidden her feelings for a long time, I understand that but it can't go on as it has done forever. She's spoken about you. Faith thinks that you're wonderful, although her actual description went on in a good deal more detail.\" He laughed as he spoke. \"She's strong-willed and says that she'll do whatever it takes to make a go of things with you.\"\n\n\"That bothers me a bit, I wouldn't want to change things too much.\"\n\n\"I'm afraid that's already happened. She's lighter, happier and she loves you. If the fame and the interest in her music all stopped right now, she'd be okay with it, I think. She'd carry on writing for other artists and move into production. She's invested her earnings wisely so that's not an issue. It's always worried her that someone might be after her for her money, but you're successful in your own field and from what she tells me you live a fairly simple lifestyle.\"\n\nI smiled before replying, \"I don't consider my lifestyle that simple, but, indeed, I don't want for much and I earn a really good salary, more than I need anyway.\"\n\nThe door opened and Faith burst through, she smiled at her dad and scooped me up into her arms before planting a sloppy kiss on my cheek. \"Hello, my love. Have you two been talking about me?\"\n\n\"Nice to see you and yes your dad and I are getting to know each other.\"\n\nThe three of us cooked dinner talking non-stop as we did so. That continued as we ate and afterwards as we sat around the table until quite late. I learned a good deal more about Faith, her relatives and her dad told me lots of things about Faith growing up that she seemed to have omitted previously.\n\n\"Okay, I'm off up to bed and I'm leaving sharp in the morning, I'm off to Scotland for a few days. You two be good and take care of each other.\" John stood and kissed both of us before he headed upstairs.\n\n\"Sorry Kirstie, I didn't realise that he was staying until earlier.\"\n\n\"Hey, it's okay, we'll just need to behave, as he told us.\"\n\n\"I do not plan to behave this weekend, not when I have a sexy girl in my bed.\"\n\nThere was a good deal of kissing before we reached the bedroom and that carried on as we undressed each other standing at the end of the bed. Faith excused herself to go to the bathroom and I picked up the clothes and sorted out the things I'd brought in my holdall. I didn't realise that she'd sneaked up on me until she grabbed my waist and threw me back onto the bed. I squealed loudly and she said \"Shush, noisy woman.\"\n\nMy reply was to gasp as she buried her tongue in my slit. I'd been turned on all evening and that had built by the time we reached the bedroom. Now I surrendered to the feelings and came almost immediately. I didn't have a hair-trigger, but with Faith, it didn't take very much. She didn't let up working with her tongue and fingers to maintain my arousal almost to the level of climax before she slowed, then building again. It was torture, but after the time we'd been together I knew that when the explosion happened it would be gigantic, so I let it happen.\n\nFaith didn't climax as easily as I did and I didn't like to edge her in the same way. However, she could come over and again many times. I'd always enjoyed pleasing my partners but with her it was different, I could happily stay between her thighs for a very long time, sometimes being forceful and others very gentle. By the time we called a halt that night we were exhausted and lay in each other's arms giggling about the noise we'd made and what her dad would think. Fortunately, he'd be been gone early in the morning and I wouldn't have to face him for a while.\n\nThe following morning, I made tea and toast but we were fooling as we ate. I slid my hand inside Faith's robe and inserted a finger. She groaned, \"That is so good, I could tolerate a lot of that.\"\n\n\"We could head back to bed.\" She laughed, pulled away from my grasp, took my hand and thirty seconds later we were on the bed sixty-nining for a while and then we found our vibrators and used them on each other.\n\n*****\n\nOur alternate weekend arrangements carried on for several months. The one weekend, when Faith had to go away, was awful, I missed her badly and realised that somehow, we needed to be together most of the time, I just didn't know how that was going to happen.\n\nWhen Faith was coming to me, she'd often arrive in midweek. That gave us the chance to go out for dinner or to the theatre. She managed to get us great seats for a couple of concerts. We were lucky that we were able to dodge public attention most of the time and the owner of our favourite restaurant always made sure that we had the most private seats.\n\nHoliday\n\nI was stretched out on the couch watching television and Faith was lying behind me holding me in her arms.\n\n\"I have some time off coming up, a couple of weeks. I could come here and spend it with you but it would be good if you'd let me know the best time, to fit around your schedule.\"\n\nShe raised her head to ask, \"How long have you got?\"\n\n\"A couple of weeks, one project is concluding soon and that would be a good time.\"\n\n\"It would be good to go away, the two of us, somewhere new, that we've never been to.\"\n\n\"Do you mean sun, sea, sand and other things?\"\n\n\"We could, but we could also tour somewhere.\"",
        "Faith fetched wine and a world map which we spread on the floor. It got a bit silly for a while and kissing distracted us more than once. We agreed that we weren't fussy about a beach holiday and settled on the far east, but we didn't know much about the area so agreed to do some research.\n\nFaith used a travel company when she'd been touring and they were more than happy to help. Neither of us had been to Vietnam before and we arranged a multi-centre tour that excited us both.\n\nWe'd decided on the itinerary together, but I didn't have much input on the actual arrangements. So, I was delighted when we checked in to see that we were in business class, what I didn't know until we got on the aircraft was that our seats were in first class and that was something I could barely believe.\n\nAfter collecting our bags, a guide and driver were waiting for us. They took us to our hotel in Hanoi where the room was luxurious. After the door was closed and we were alone I turned to Faith, \"First class was incredible and this room is, well the same. Is the whole thing like this?\"\n\n\"I made sure that we have good hotels and we have a guide wherever we go. We'll have plenty of time on our own, plenty of time for kissing.\"\n\nShe was right, there was a lot of kissing. The hotels were fabulous and I learned a great deal about Vietnamese history, culture, people and food.\n\nAfter three weeks, during which the two of us had never been out of touching distance for more than a few minutes, getting back to work was difficult, but it paid the bills and my work was exciting. Several of the staff wanted details of the trip, so over lunch, I gave them a few of the highlights and shared some photographs.\n\nWhen I was alone that night, I thought about how good it had been with Faith and was puzzled about how we could be together but didn't find a solution.\n\nNicole\n\nI fetched a coffee from the machine, then scowled as I looked at the pile of paperwork on my desk. It was a necessary evil but my least favourite task, still things had gone well during the last few days and I was in a good mood.\n\nThere were plenty of emails to peruse as I enjoyed my coffee and one caught my eye, from my old friend Alison who was now at University College London. There was the usual, we haven't spoken for a while, how are you doing before she got to the purpose of the email. One of her Masters' students was interested in a junior research position we had vacant. Her student had asked for her advice and was considering applying. She didn't want Alison to speak to me, but after much soul-searching, Alison had decided to do so anyway and not tell the student. Alison thought that the lady would be a good fit for my organisation and was one of her two best students. That sounded good, such a recommendation was welcome, but then I read the last paragraph, 'you met Nicole last year when she drove you to a concert.' I remembered Nicole immediately, she'd impressed me and I hoped that she would apply.\n\nThe following week Nicole's application arrived and I was very surprised at how good it was. It was the most promising of all those that I'd seen, that coupled with Allison's recommendation meant she stood a great chance of getting the post.\n\n*****\n\nNicole was the final person we were about to interview. \"Now, the next candidate is Nicole Carter, she looks like a great applicant. I have to declare in advance that I met her once, about a year ago when she was working evenings as a limo driver. She took me to a concert, that's our only interaction, although she knew who I was.\"\n\nDavid the CEO and Elaine our HR director were with me on the panel. I heard a gasp as the door opened and looked up. Nicole strode in looking positive and stunning. She was tall, even more so with the heels. She wore a pale grey suit with a knee-length, close-fitting skirt and a neat white blouse, her hair was loose, shoulder-length, probably mid brown with highlights that were done by an expert and her make-up was simple but striking.\n\nIt was clear that she knew who we all were and had an impressive knowledge of our organisation. She answered questions with very well-thought-out answers, asked smart questions and thanked us for our time and the opportunity to meet us.\n\nOnce the door was closed as Nicole left, David sighed, \"Well, I think that makes our decision fairly easy. That is one very impressive young lady and by far the best candidate we've seen. Elaine, what do you think?\"\n\n\"You're right, but for just a few seconds I was stunned when she walked in. That girl could be on a catwalk, but she's by far the best.\"\n\n\"I didn't mention this before, I know her tutor, we were at Oxford together. She mentioned Nicole to me in an email and said that we couldn't find a better candidate.\"\n\nWe discussed all the candidates and sorted out the feedback we'd supply. I was left with the happy task of offering Nicole the job.\n\nTrouble\n\n\"Faith, I can't move here, I have a job, one that I like and I'm doing good work. Some of it could be scientifically important. I'm sorry, but we'll just have to accept that there are two hours between us.\"\n\n\"I know, I don't like it, but there isn't much else we can do.\"\n\nI set off that Sunday evening in a sour mood and I was annoyed, maybe angry that she'd asked me to give up my job and home. She was right, I could find another position, certainly in teaching, but that wasn't what I wanted to do, needed to do. I'd sacrificed a lot to carry out research in the field I was working in and there was nowhere else in the UK that was doing the same type of work.\n\nI loved Faith, but I'd always known that we moved in different circles and that it could damage us. I hoped that we'd be able to find a solution.\n\n*****\n\nI was looking forward to Friday evening, Faith would be at the house when I got home and she'd promised to cook. She wasn't wonderful in the kitchen but seemed to enjoy trying.\n\nShe greeted me by taking me into her arms for some very serious kissing. I took a step back and looked at her, she was beautiful and my heart melted yet again.\n\nShe'd made a lasagne and the evidence was all across the worktop, cooker and the floor. However, it tasted great and so did the wine which she'd brought and which did not come from the bottom shelves of a supermarket.\n\nWe sat on the couch and she played some songs from another artist she was working with. Then she paused the music, \"Kirstie, I know that I pissed you off last weekend, but I have a solution and you need to hear me out.\" I nodded.\n\n\"How would you feel if I moved in here with you?\" I burst out laughing and she looked cross.\n\n\"That's funny. I cannot picture you living here, this place is tiny compared with yours. You use yours for your work, you have a music room, it would never work.\"\n\n\"This place is perfect for two people; the problem is my work and, you're right that could never work in this house.\"\n\n\"I'd love it, but it's not possible.\"\n\n\"The house next door is up for sale.\"\n\n\"Yes, they moved out a week ago and it's bigger than this place, but still too small.\"\n\n\"I agree, but there is a solution.\"\n\n\"And what is that?\" I wouldn't want to live next door and I had no clue as to what she'd been thinking.\n\n\"I could create a studio using almost all of the ground floor and turn the upper floor into offices. It would give me more room than I have now and it could be state of the art.\"\n\nI opened my eyes wide and my mouth operated like a goldfish, opening and closing slowly. Words failed me until I regained some equilibrium. \"What about Abigail and the other people you work with?\"\n\n\"That's all stuff that I'll need to work through, the musicians have to travel anyway. Most importantly, what do you think?\"\n\nWe spent two hours talking about the idea and what would have to be done. I made hot drinks and it gave me a few minutes to consolidate my thoughts. I didn't doubt that Faith loved me, that had been apparent from very early on, it had been me that was sceptical about it succeeding, but now she was offering to up sticks and move everything here. I found it hard to believe.\n\nI delivered the mugs and sat down. \"Faith, would you be happy living in this little place? You've been used to that large house by the river.\"\n\nShe smiled looking down at her mug, cradling it in both hands. \"I grew up with my parents and brother in a small semi and for a while gran also lived with us until she went into a home. My folks both worked, we didn't have much, but we had a good life.\" She took a sip before continuing, \"When I started, I lived from hand to mouth in a small bedsit that I'd rather not be reminded of. It took a while before I was noticed and started to make money. This house is smaller than I've been used to but it's plenty big enough. I rattle around in my house and I was lonely. I won't be like that here; we'll have each other. I love you Kirstie, I knew a few minutes after meeting you that you were special.\"\n\nThe sex that night was pretty great. Even if her plans didn't come to anything the thought and offer had been worth a great deal to me.\n\n*****\n\nTo my surprise, she managed to buy the house fairly quickly and get permission to change it from residential to commercial, mainly because some other houses in the area were also used as offices. I suspect that her name and fame might have helped as well.\n\nWork on creating the studio and installing some very complex recording equipment was underway almost immediately.\n\nFaith didn't sell the riverside house; she'd managed to make a long-term deal to rent it out. Our last weekend there was a bit sad for me and as we walked around for the final time I took Faith's hand, \"You're giving up a great deal to come and live with me. Thank you for that.\"\n\n\"I always knew that you were special, from the first moment I met you. I'd give up a great deal to be with you and share your life. I'm an entertainer, my work is good, I enjoy it, I can do it from anywhere, but your work can change the world or maybe affect people's lives in a good way. I want to be with you, always, so that's why I'm doing this. Besides I'm not selling it, maybe we can make use of it at some point in the future.\" She took me in her arms and kissed me, long and luxurious, wonderful.\n\n*****\n\nInitially, it was a bit odd for me. I'd lived alone for a few years, but Faith had been there so often I'd adjusted gradually rather than it being a dramatic change. It took us a little while to find a rhythm and there was plenty of room next door to store all of her equipment and stage outfits of which there was quite a lot.\n\nIt had been three weeks since Faith had moved in full time and sleeping knowing that she was close by was great and made me happy. The sunlight woke me to find her arms around my waist and her face buried in my hair. I moved slightly to roll over and she opened her eyes as I did so. \"Sorry I woke you.\"\n\n\"You didn't I was lying there sensing you, absorbing the feeling of being entwined with the woman that I love. Good morning, love you.\"\n\nI tittered like a young girl; I was doing that quite a bit these days. \"I wanted to look at you, you're so beautiful and I cannot believe that you and I are together, a couple, lovers.\" I stretched my neck and kissed her. That stopped when I pulled back with a jerk, she'd just squeezed my left nipple. It was gentle but made me jump and giggle again.\n\nSorry, did I hurt you?\" She asked.\n\n\"No, it took me by surprise and it was involuntary, I liked it, please don't' stop.\" This time I just relaxed and let a lovely warm feeling wash over me. It wasn't stopping with this, it couldn't, I'd turned into a demanding maniac, something I never thought I'd be but hell, it was great.\n\nIn addition to the mating of our lips, hands stroking and fondling breasts, thighs were manoeuvring so that we could find that very intimate contact. I could feel my arousal starting deep inside, my lips were swelling and I was getting wetter. I could stand this no longer, I needed real contact with her most intimate parts. \"I need more, I'm moving.\" I swivelled in the bed until we were in a sixty-nine position. Concentrating on pleasing your partner when she was distracting you, in the same way, was a challenge and one at which we had several failures, not that it stopped our pleasure, it just meant that sometimes you had to yield for a while.\n\nI came several times and lay back, naked and exhausted. Faith was lying on her stomach with a sheen of sweat across her back, suddenly she said, \"Kirstie, did you say that you had an early meeting?\"\n\n\"Yes, 8.30 with a client.\"\n\nShe jerked up, \"Then you need to move your sexy ass, it's five minutes to eight.\"\n\nI ran for the shower and she tried to follow me, but I held the door closed. If she'd got in I doubt if I'd make a noon meeting.\n\nI must have looked a sight when I ran from my car, hair still wet, shirt untucked and no make-up. I laughed as I raced up the stairs to my office, I wouldn't change a thing.\n\nNew studio\n\nAbigail had agreed to move as she had relatives near the city and she got stuck into organising things right away, much to Faith's relief.\n\nOn the evening of the day the new studio was officially opened, we held a party, for lots of friends and people who worked with both Faith and me. The place was full, there was music and singing. Lots of the people there were musicians and something that I'd discovered, although it shouldn't have been a surprise, was that they couldn't help making music. It was amazing how well they gelled together and it was lots of fun.\n\nThere wasn't a drummer amongst the musicians and when Faith looked for Constance, who normally jumped at the chance to play, found that she wasn't about. It was later that I learned she'd left with Nicole.\n\nBy about 11 pm everyone had left, we were alone and it was then that Faith went down on one knee and popped the question. I was stunned for a moment, maybe for half a second before I jumped into her arms and screamed \"Yes.\"\n\n*****\n\nTwo days later I decided that I needed to test some waters and speak to my mother. The conversation didn't take very long. I told her that I'd met someone who had proposed to me. Her response was simply, \"Is this person male?\"\n\nI replied, \"No, she's not, she's a very special, talented and beautiful woman.\" All I heard was a ring tone, she'd gone. I stood for a few seconds, maybe minutes I'm not sure, but then I burst into tears and went to the bedroom. Faith found me sobbing sometime later.\n\nShe held me for a long time as the tears turned to anger. I told her what had happened and she simply repeated that she loved me several times and I knew that she meant every word.\n\nI mopped up some more tears, \"You know, I wonder if I'll ever speak to her again. I don't understand her and never have, it's weird, her father was the polar opposite. The truth is I'd rather speak to him again than either of my parents. Sadly, when I do speak to him, I know that I'll never get an answer, but that doesn't bother me at all, I feel him here with me.\"\n\nEpilogue\n\nIt was almost time, hair and make-up were done, underwear and shoes on, just the dress to go. Chloe took it from the hanger and held it as I hung onto Sarah for balance as I stepped into the yards of fabric. When I'd gone to their house to talk about the wedding, Chloe immediately joked about Sarah being my bridesmaid, suggesting that it was almost returning a favour. A lump had appeared in my throat because I thought that it would be hard for Sarah, given that Hayley wasn't here anymore. She smiled and simply said, \"I think that would be appropriate if you'd want me and I'm sure that Hayley would approve.\"\n\nI laughed and had to explain. \"Thank you, that would be great. I'd actually come to ask Chloe to do it, if it wasn't for her being at my lecture, I wouldn't have met Faith and found my soul mate. I'd also thought that it would close that circle, from your wedding. Having you doing it as well, with her, would be magical. Thank you.\"\n\nFifteen minutes later I entered the room and saw Faith standing at the end of the aisle, I was about to be married and very happy. As I started to walk forward, I looked up and muttered, \"thanks Grandad, for everything, it feels as if you're up there watching, love you.\"\n\nThe end\n\nAs I was nearing the end of this story, I realised I had an idea for a follow-up. It will feature Nicole as one of the main characters and many of those featured in this one will have supporting roles. Comments and votes are welcome."
    ],
    "authorname": "sandy_paris",
    "tags": [
        "lesbian",
        "romance",
        "lesbian romance",
        "love story",
        "chance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/different-circles"
}