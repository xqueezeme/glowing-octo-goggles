{
    "title": "The True Master Ch. 12",
    "pages": [
        "February 30 2016: \n\n*The True Master* \n\nAs I strode into the office I let a vicious smile creep onto my face. \n\nAdams and the scientist she had been walking around with were both on the ground, each with three of the security Dolls on top of them holding them down. \n\n\"Comfortable?\" I asked leaning down so she could look me in the eyes. \n\nAdam's eyes comically bugged out as she tried to look up at me. \n\n\"You!\" She said, \"How the hell did you do this!?\" \n\n\"Take him to one of those cells,\" I said to the three dolls holding the scientist. In a smooth motion they lifted the man to his feet and dragged him out of the room back down to the cells I had just gotten Kate and the others out of. \n\nStill smiling as the doors closed behind the security dolls I stepped up to the main computer console on the desk in the rather ornately overdone office, it had large glass windows overlooking the city with nothing else obstructing the view. From up here you felt like a god looking down on the world of man. \n\n\"Do you believe in reincarnation Adams?\" I asked still looking out at the city my back to her. \n\n\"What?\" \n\nTurning around I looked at the three security Dolls. \n\n\"Let her up but keep her restrained.\" \n\nThe three Dolls hauled the Director to her feet and I turned her to face her. \n\n\"Do you believe in reincarnation? It's a simple question,\" I said iterating all of my words as clearly as possible \n\n\"No,\" she spat. \n\n\"Shame, because you're looking at the closest example.\" \n\nI sat down at the desk and pulling the keyboard towards me quickly typed in the override command. The system in front of me hung for a moment, and then granted me access to everything in the building and far beyond. I wasn't in control of the Company, but I was in control of this particular branch of operations. \n\n\"I'm what Belial worked on for the last five years. An amalgamation of a thousand different people and personalities, and I've got all the memories Belial could pull from his own head,\" I tapped my skull, \"I'm what the technology the Company squanders can actually do. Belial gave me everything I would need to take over here, I could have just walked in and taken over months ago.\" \n\nI held my hand out to Kate, she looked confused and apprehensive but quickly stepped over to me. \n\n\"But Belial didn't want another Company megalomaniac in control of this technology,\" I tapped the Interface on the back of Kate's neck. \n\n\"It's got the power to change the world, and all you could manage to do with it in a decade was earn some money. It's pathetic. He made me to run the Company and ensure that the technology he created is put to proper use. Call it an extreme form of nepotism.\" \n\nAdams' face was red and she looked like she was going to burst a vein. She was certainly not happy, that much was obvious. \n\n\"Where is that bastard?\" she growled. \n\nI shrugged, \"He told me he was dead, I'm not sure I believed him. Belial's not going to interfere here in any case. I'm the end game that he was working towards for this particular venture.\" \n\n\"You don't think you can just waltz in here and take control do you? I don't care what Belial stuck in your head, you can't run this branch without the other Directors finding out!\" \n\nI nodded, \"That's true, but you already know what I'm going to do. One little bit of surgery and you'll do anything I say.\" \n\nShe paled, \"The dolls can't run anything! They're too stupid! You do that and the Board will know!\" she said. \n\nI rolled my eyes, \"That's an ineptitude on your part. Hiring inferior and unimaginative programmers will yield poor results. Belial left me with quite a bit of work to finish but I'm certain you'll make an excellent test subject for the most lifelike doll the world has ever seen.\" \n\nShe stared at me for a moment, \"You're just as insane as he is! You're acting like you can this technology to take over the world!\" \n\nI smiled, \"I hope I'm not that much of a clich\u00e9, besides running the world sounds like far too much work. I could help fix it though, get the politicians to do the right thing instead of obsessing over reelection, either with the blackmail the Company has on them, bribes, or by sticking chips in their heads. I can use the money you get from the greedy pampered bastards of the world to actually fix things. Within a decade the world will be far better off than the shithole it is now.\" \n\n\"You're crazy, how the hell can't any of you see that he's crazy! All I did was run a business! Slavery has been around since the dawn of time, it's only gotten more secretive but it's more prevalent today than ever! That's just the way the world works!\" Shouted Adams as she tried to look at Kate and everyone else. \n\nI leveled my gaze at her and nodded, \"You're right, slavery has always been around. Unfortunately it's not going away any time soon either.\" \n\nTracy stepped forward at that, frowning. \n\n\"What do you mean?\" asked Tracy, \"You got access to the Company! You can free all of the Dolls!\" \n\nI swallowed and looked over at her, \"I could, but that would only make things worse. Think about the chaos that would result from every doll in the world being freed, half of them would die when their masters kill them, and the other half will be scarred for life. Governments and society will collapse when it's revealed that even a few of the worlds more influential people have mind controlled dolls tucked away. Not to mention the fact the technology would be fully unleashed and beyond my ability to control.\" \n\nTracy looked at me for a moment her mouth agape, \"So you're going to do nothing?!\" she shouted. \n\n\"I did not say that, but neither am I going to discuss what I'm planning in front of Adams here.\" \n\nI turned to Dr. Song, \"Do you think you could implant her with an Interface chip?\" \n\nDr. Song blinked, \"sure, it's a fairly simple procedure. I might cross a few wires though, I haven't done brain surgery in a long time.\" \n\n\"Good.\" \n\nI turned to the nearest security doll, one of the few male ones. \n\n\"I need one of the latest implants like the ones you have. As well as the medical equipment that the Doctor will need.\" \n\nThe man nodded and marched out of the room. \n\n\"Why are you doing this? You want money? I can give you money, or more Dolls! You don't have to do this!\" said Adams now begging. \n\n\"Did you not just hear me, I've been programmed to not want any of those things. Sure my programming is a little more complex than what the Dolls have but I'm not a person that can be bought or corrupted that was the whole point!\" \n\n\"Fight the programming then! Why even do this for the bastard, fight the programming off remember who you were!\" said Adams. \n\nI rolled my eyes, \"What believe in myself and I can break the programming? If that were the case Adams more than one of your dolls would have escaped by now. This body,\" I motioned at myself, \"used to house some idiot who went and got in a motorcycle accident or something else as idiotically reckless. He scrambled his brain, he's dead.\" \n\nAdams glared at me for a moment, formulating her next argument. I turned back to the computer and started hurriedly going through the security for the building, making sure that no knew what was going on. \n\n\"Master,\" said Kate her voice quite. \n\nI turned to look at her, and she jumped into my lap. \n\n\"Kate, what's wrong?\" I asked. \n\n\"I just spent three days in a cell thinking I was never going to see you again.\" \n\nI nodded, \"Sorry, that won't happen again.\" \n\n\"So you're a fucking hypocrite too! You fucked all of them too! So much for being all high and mighty!\" \n\nKate frowned and got off of my lap slowly turning to look at Adams. \n\n\"You know you're right, Marcus is a complete hypocrite.\" \n\nI didn't say anything about her sudden ability to use my proper name. Belial had messed around with the code that would select her from the pool of the Companies candidates, perhaps he had messed around with her programming as well so she could say my name when she really needed to? Or maybe she hadn't even realized what she said. \n\n\"Marcus has a strange woman appear on his doorstep, a woman with a metal jack stuck in her neck and a creepy fucking manual about how she's a slave for him to use. Marcus wasn't the one who had sex with me I had to practically drag the idiot to bed!\" \n\nKate hesitated but quickly continued, \"Marcus was always working towards freeing us, and I never once doubted that. He barely gives orders, he's afraid of what he could order us to do! He modified the chips so we had our personalities and some semblance of free will but he still had complete control over us because of your stupid chips!\" \n\n\"How do you know he hasn't programmed you to think that?\" asked Adams. \n\nKate froze for a half second, and Adams took advantage of the opening. \n\n\"Your entire brain is at the mercy of a few keystrokes, if anyone could make you think something else wouldn't it be this man?\" she asked pointing at me. \n\nKate looked between me and Adams and laughed. \n\n\"Still not much of an option, he's better running the Company than you would be.\" \n\nAdams growled something under her breath and her eyes started darting around as she looked for something else to chip away at. \n\n\"You! Jeremy something!\" \n\nJeremy looked up at Adams, \"What?\" he asked. \n\n\"Why are you here? I can offer you enough money to get rid of those problems in California, and more! I looked into your history!\" said Adams. \n\n\"Just help me out here!\" she shouted. \n\nJeremy snorted, \"Yeah, whatever the fuck is going on here I'd rather Marcus be in control than another suit. Besides, if I'm understanding everything he's gonna have access to all the money here right?\" asked Jeremy turning to look at me. \n\n\"Yeah, what do you need it for?\" \n\n\"I gotta pay off some debts.\" \n\n\"You've earned however much you need, it's coming from the Companies wallet.\" \n\nJeremy nodded, \"See, I like him better. Plus he's not the one kidnapping people and sticking computers in their heads.\" \n\nAdams turned to Dr. Song, \"You as blindly faithful?\" she asked. \n\nDr. Song shrugged, \"I want to be a Doll, experience that ecstasy. I'd rather you weren't the one in control when I did that. Besides, Marcus just said I get to play with some experimental implants. That sounds like fun.\" \n\nSitting at the desk I shook my head, Dr. Song was an odd cookie when you got her going. \n\nAdams looked one last time around the room, \"You're all fucking mental!\" \n\nThe security drone came back into the room a cart of medical supplies in front of him. \n\nDr. Song smiled and went over to it, looking everything over. \n\n\"So can you do it?\" I asked. \n\nAdams was now struggling with the Dolls holding her in place. \n\nDr. Song looked over everything in front of her, \"Yes, and judging by the implant type it should be a much shorter recovery time than what the others have. A much smaller implant.\" \n\n\"So not three days like mine?\" I asked. \n\nDr. Song glanced up looking at me and shook her head, \"No, a few hours at most.\" \n\n\"Let's do that then. I need to start writing the program that she's going to have. She needs to continue running this branch like normal.\" \n\n\"Alright,\" Dr. Song picked up a needle from the cart, \"Should I do this without anesthetic?\" \n\nAdams froze for a half second and then started struggling harder against the security dolls holding her. \n\n\"No, we need her alive.\" \n\nDr. Song sighed, \"Fine.\" \n\nWalking forward she stuck the needle in Adam's arm. The woman fought for a moment, and then slumped unconscious, an anticlimactic end to her rule of the Company's Doll production facility, and the first of many Company leaders I would have to overshadow or otherwise control. \n\nI took a breath and sat back down in Adams' chair. \n\n\"Please tell me you were acting?\" I asked Dr. Song. \n\nThe woman smiled, \"Maybe.\" \n\nI rolled my eyes and looked back at everyone else in the room. \n\n\"Uh, you know I don't really know what to say.\" \n\n\"You're insane!\" said Helen awestruck. \n\nTracy shook her head, \"Your next thing after sorting that woman out had better be fixing Beth.\" She said. Pointing at the security Doll standing stock still at attention next to her, gun held at the ready not showing any fatigue despite the heavy armor she was in. \n\n\"You did it Master!\" said Kate. \n\nI nodded, \"I did it. Although things were a little rigged.\" \n\n\"Could you guys help me take her to the couch, I need to get to the back of her head,\" said Dr. Song gesturing at the unconscious Adams. \n\nTracy and Jeremy moved to help drag the unconscious woman to the sofa for the impromptu brain surgery, although judging by the size of the implant it was probably being done by a very large needle. They had used the cheaper V1 on me not knowing I had the V2 upgrade chip already installed. \n\nSitting down at the computer I turned to Beth, \"My laptop and everything else the Company confiscated bring it here, and if you're in there this is going to take at least a few hours. Sorry!\" \n\nThe Doll nodded and marched smartly out of the room. \n\n\"I think she's going to kill me when I free her,\" I said turning to look at Kate. \n\nKate scoffed, \"Maybe.\" \n\nCracking my knuckles I started going through the programs and code on the computer grabbing what I needed and deleting what I didn't from the program I would load into Adams. \n\nKate moved and sat down on the desk next to me, I ignored her for a minute as I worked through a larger block of the code that Belial had left in the mainframe, I knew what most of it did already. It seemed that he had given me memories of himself creating them so even without having written all of the code myself I knew how to modify it. \n\n\"I'll get your interface turned off as well. You should get your memories and everything back.\" \n\n\"What if I don't want them back?\" asked Kate keeping her voice low. \n\nI paused for a moment to look up at her, \"What?\" \n\n\"What if I don't want my memories back, what if I don't want to go back to who I was?\" \n\nI paused and took my hands off of the keyboard, \"what?\" \n\n\"I want to stay like I am, with you as my Master.\" \n\nI was shaking my head before she even finished speaking, \"I can't I won't do that to you. The whole point of all of this was to free you from the Interface, from the chip!\" \n\nKate fidgeting nodded, \"It was, but now that we're here I don't want to!\" \n\n\"Kate, we'll talk about this later. I have to get this program done before Adams wakes up.\" \n\nKate opened her mouth as if to argue, but there was enough of an implied command so she slipped off of the desk and slunk away to sit in another chair off to the side of the desk. \n\nThe mood inside the office was for the next two hours a kind of stunned bemused silence, Tracy and Helen were continuing to help Dr. Song with the implant, Jeremy was paging through the coffee table books while he lounged in another of the couches. Kate was alternatively looking at me and out at the city through the large windows behind the desk I was at. \n\nI worked as quickly as I could to put the program together, it was a crude effort but once it was in place and Adams continued to operate this branch of the Company I would have time to optimize it. \n\nThe security drones had brought my stuff up and I loaded my new modified program into it, and unwound the connection wire. \n\n\"She ready?\" I asked. \n\n\"Should be, the anesthetics worn off by now so she just sleeping,\" said Dr. Song. \n\n\"Good, let's see how this works.\" \n\nGoing over to the woman I moved her hair to the side and plugged the small jack into her Interface which was in turn now connected to her brain. The thing moved a little bit, her skin hadn't healed to hold the implant in place and programming her this early probably wasn't healthy but we didn't have many options. \n\n\"Alright, I'm getting a sold link.\" \n\nI uploaded the program into her implant, and the tablet dinged. \n\n\"Done.\" \n\n\"That's it?\" asked Jeremy leaning over to watch. \n\n\"What did you expect?\" \n\n\"I don't know, her acting like a robot or something, maybe someone else being plugged into her brain to beat her?\" \n\nI rolled my eyes and unplugged the tablet. \n\n\"The human brain is simply another computer, granted it's difficult to interface with but there's nothing inherent that makes it difficult to reprogram us. Besides all I did to her was suppress any memories about us and implant commands so that she'll do what I want when I tell her to.\" \n\nLeaning down I poked Adams in the stomach. \n\n\"Ow!\" \n\nShe sat up startled and looked around the office. \n\nI remained still but most everyone else moved towards her to try and restrain her again. Instead of saying anything though Adams' eyes glided right over everyone unable to see them. To her it would actually feel like she was waking up from a nap.  \n\nThe last few days would be kind of blurry but otherwise everything would be normal for her. \n\nGetting up from the Couch Adams moved to her desk and looking around the room looking slightly dazed she started typing away at the keyboard again. Walking around to her and looking over her shoulder I watched as she composed some mundane email. \n\n\"She can't notice any of us, unless you say the guys' name who started all of this. I figured that was as good a trigger as anything.\" \n\n\"So now what?\" asked Kate. \n\n\"First I need some painkillers, brain surgery is not fun. Then I free Beth and work on deactivating the rest of the Interfaces.\" \n\n-- \n\n-- \n\nTracy was anxious now, all of us had moved up into the apartment loft that was attached to the office downstairs where Adams worked. Something that the Director of a company where they made sex Dolls might frequent was absent of any actual Dolls.  \n\nIf the memories I had from Belial were correct it had probably been the first director who had used the loft. Adams struck me more as the get business done type of woman, and I doubted she would allow herself to be distracted by her \"product\". \n\n\"Alright, let's get this sorted. Sit down.\" I said to the security drone that Beth was acting as. \n\nShe sat down in the chair. \n\n\"Tracy, plug her in.\" \n\nTracy took the plug and snapped it onto Beth's neck. \n\nShe came online and with the codes that Belial gave me I didn't even have to do much hacking, I simply disengaged the Interface, turning it into an inert piece of metal in her skull. \n\nBeth gasped, and jerked up from the chair. The cable attaching her to the computer snapped off and she whipped around to me. \n\n\"You bastard!\" she shouted, and lunging forward she hit me squarely in the jaw sending me sprawling backwards onto the ground. \n\n\"Ow! What the fuck!\" \n\n\"Beth!\" shouted Tracy completely unconcerned with me instead throwing her arms around the woman and bursting into tears. \n\nBeth looked over at her for a moment and wrapped an arm around her. For a moment the two hugged and I picked myself up off the ground. \n\n\"What was that for?\" \n\nShe turned to me, \"That was for taking so fucking long!\" \n\nI rolled my eyes, \"Well I'm sorry it took a few days to plan the most aggressive corporate takeover in history. We only got this far because of the planning that Belial did.\" \n\n\"Yeah, you're going to have to explain that a little more,\" said Dr. Song, \"I followed you're lead in front of Adams but fill in the blanks will you?\" \n\nI sighed and glanced over at Kate, \"I'm the most artificial person here. Belial made me out of the amalgamation of a hundred or so people's minds and personalities, gave me some of his memories, and an annoyingly persistent conscience. I've got an experimental hippocampus Interface,\" I tapped my forehead, \"Which can easily override the function of the one that Adams had installed. While I was out I had a sort of conversation with the guy. A recorded memory or playback something like that.\" \n\nI motioned for Kate to come over to me, and she did immediately pressing herself to my chest. ",
        "\"I was the first part of the plan, Kate the second. She was programmed to escape the Company and find me. From their my programmed sense of morality doesn't let me rest until she's free of the chip. Eventually I slip up and the Company grabs us and the events that just took place play out. Belial's work is now under the control of the one person who he at least thinks will use it correctly, he didn't even trust himself with it.\" \n\n\"So the guy was insane,\" said Jeremy as he opened a bag of chips he had found in the kitchen. \n\nI shrugged, \"It worked.\" \n\n\"Genius and crazy are two very similar things,\" said Dr. Song musing. \n\n\"Still took you way to long! That grubby bastard!\" Beth shuddered not finishing her sentence. \n\nI didn't say anything. \n\n\"You said you wouldn't be able to free the rest of the dolls, were you just saying that or did you mean it?\" asked Tracy. \n\nI winced, \"I meant it. I'd have to get control of the entire Company before I could free them, and even then it would be too much of a scandal, governments would fall corporations would crumble. It's a horrible kind of math but the suffering of less than point one percent of the population to keep the rest of the eight billion well off?\" \n\nI trailed off. \n\nTracy looked at me for a moment, \"You can't mean that.\" \n\n\"I want to free them, don't doubt that!\" I took a step towards her, Beth still in her body armor stepped in front of Tracy and glared at me. \n\nI sighed and put my hands up, \"Look I get that this isn't perfect, how you think I feel? I just found out I'm not even a real boy! I'm a puppet some bastard made to clean up his mess, and despite knowing that I'm still going to do it because letting anyone else even try would be an even bigger disaster! The memories of my family, of my childhood, of my entire life up until a few months ago are fake!\" \n\nI looked over at Kate, \"And I'm going to lose the one thing that has kept me anchored throughout all of this as well.\" \n\nKate shook her head, \"I don't want you to take the chip out Master.\" \n\n\"I have to Kate. You have a life to go back to if I can manage it.\" \n\nShe shook her head, \"I don't want that life back!\" \n\n\"That's the chip talking, and the woman you were before the chip needs to come back. I promised I would free you, so that's what I'm going to do.\" \n\n-- \n\n-- \n\nMarch 1 2016: \n\nKate and I were alone inside one of the many medical labs on the upper floor of the building she had been apprehensive to follow me fearing what was coming. \n\n\"Master what are we doing?\" asked Kate her voice trembling slightly. \n\n\"I'm going to deactivate your chip.\" \n\nKate was already shaking her head, \"No Master please don't!\" \n\nI sighed and pointed at the single chair in the room, \"I have to Kate please sit down.\" \n\n\"No!\" \n\n\"I order you to sit down!\" I shouted. \n\nTears streaming down her face Kate mechanically sat herself down in the chair, her arms were shaking and her entire body was covered in sweat as she fought the commands. \n\nI hated forcing her to do anything, save for those instances where she wanted me to utilize that control. Which she most certainly did not want me to do right now. \n\n\"Master please!\" said Kate. \n\n\"I don't know what the hell that bastard stuck in your head Kate! He took your memories, your life! All of it just to make sure I had the right motivations! Don't you want everything back?\" \n\nKate shook her head, \"Am I not good enough for you Master? Did I fail you in some way!?\" she was begging with me now, the tears continuing to fall. \n\nI felt my own eyes beginning to tear up and tore my gaze away from Kate. \n\n\"You and I both know that not why I'm doing this.\" \n\n\"Why can't you just keep me!? For once be selfish and take what you want Master!\" \n\nI didn't say anything we both knew she was telling the truth. \n\n\"I can't keep something that was never mine to take Kate.\" \n\nShe continued to cry and looking back at the computer I closed my eyes. \n\n\"I'm sorry Kate. The woman you once were is still in there and she needs to go on living her life. She deserves to have her life back!\" \n\nKate was now sobbing in the chair slowly shaking her head back and forth. \n\n\"No Master please!\" \n\nLeaning over her chair I placed a kiss on her lips and hit enter on the tablet in my hands. \n\nKate's head lolled to the side as she quickly went to sleep. \n\n\"Fuck!\" \n\nI grabbed the nearest thing, which happened to be a wheeled cart and picking it up I threw it. The plastic cart hit the wall and shattered. \n\n\"Fuck!\" I grabbed a chair and I threw it as well, it hit the wall and dented it not breaking. \n\nFor several moments I breathed hard and tried to clear my head. \n\nI was doing the right thing, as wrong as it felt now, and as much as neither of us wanted to do it this was the right thing. \n\nSlowly I moved over to the computer, ready to give the woman I owned, the woman I loved her life back. With any luck all of this would just feel like a nightmare, the result of some accident. She would wake up in a hospital bed, believing she had been in come sort of coma. \n\nWith the coding segments that Belial had left me to work with I was able to easily get into the root access controls for the Interface. From their it was easy, almost frighteningly so to remove the memory blocks that Belial had put in place. Her memories weren't even gone, the interface acted almost like a computer would, redirecting any requests for her memories to a blank portion of her brain. \n\nIt was easy enough to do the process in reverse, and place memory blocks on what she had experience over the past few months, going all the way back to when the Company had first snatched her. She wouldn't remember me or anyone else, at most she might dream, and given time dreams fade. \n\n-- \n\n-- \n\nMarch 12, 2016 \n\n*The True Master* \n\nI walked into the main office where Adams was working and I smiled. She continued to ignore me, her mind incapable of recognizing me. \n\n\"Belial,\" I said. \n\nShe froze, and slowly turned to look at me. \n\nRecognition flashed across her face and she gasped, she paled and her hands flew to the back of her neck feeling the Interface. \n\n\"What the hell did you do?\" she asked. \n\nI walked forward and sat down in the chair across from her desk, \"I put directives in your chip to trigger memory separation. Up until this moment you had no idea I was running this branch, that I had escaped and taken over, that Belial's plan had worked. I'm quite proud of the program actually. I have no idea how the Companies inner sanctum operates, but you do so for now I'm just going to have you continue running things while I figure out what to do next.\" \n\nAdams hand darted towards her desk reaching underneath it, only to find an empty holster. Beth had already removed quite a few of the security measures the woman had in place, not that she noticed the absence. \n\n\"You bastard!\" she growled. \n\nI looked up at her, \"You sure that's the tone you want to use here? For now you're useful. When we're done though I could just turn you into another brain dead bimbo like you did to thousands of other people.\" \n\n\"Just kill me then!\" \n\nI stood up and smiled, \"that's far too easy and you know it. I've been looking into some of the other projects the Companies been researching, you heard of Ambrosia?\" \n\nAdams said nothing. \n\n\"I could perfect the procedure, give it to you and then program your Interface to torture you. Hook you up to an IV and you'd live for a very long time in constant pain. Never able to die, never able to escape. I'm fairly certain you'd go insane after a short time, anyone would but it would be an interesting experiment.\" \n\n\"You don't have the guts to do that, you're not a killer, much less a torturer.\" \n\n\"Do you want to put that to the test?\" \n\nAdams smiled, I could sense a certain amount of trepidation behind her poker face but that hardly mattered. \n\n\"Stand still, don't move.\" \n\nAdams froze. \n\nI took my phone from my pocket and unwound the cord from it. Walking around Adams I plugged it into her Interface. She couldn't move but I could feel the anger rolling off of her in waves. \n\nThe program took no time at all to integrate and I quickly unplugged the woman and stepped around to stand in front of her desk again. \n\n\"You know, this is your fault somewhat. You got me used to the idea of ordering women around, using them however I want. My mother would be aghast, and I'm not sure I can really call myself a liberal anymore but what the hell. You can move now.\" \n\nAdams took a step back and whimpering fell to the floor. \n\n\"What the hell did you do?\" she asked. \n\n\"It's simple, I could just program you to be a perfect little slave and use you like that. But we both know it wouldn't be you at that point, it would be some other person wearing your body that's doing everything. So I'm going for a more old fashioned approach, sure it might take longer but I'm sure the results will be more impressive. It's simple reward and punishment conditioning.\" \n\nI leaned forwards, \"stand up Adams.\" \n\nShe gasped and her hands flew to her pants, as if holding something in even as she obeyed the commands and quickly stood. \n\nHer face was red and she looked slightly dazed, like a woman who had just had an orgasm so amazing that without the aid of technology it would not have been possible. \n\n\"Pavlov!\" She breathed. \n\nI nodded, \"Do something right and you get a very satisfying result. Do something wrong and you will be severely punished. The Interface will help give you the pleasure or pain, and keep you from spilling the beans to the rest of the Company but otherwise it will be your own brain that learns to obey. I'm going to break you down until there's nothing left but a quivering little slave whose only goal in life is to please her Master.\" \n\n\"Good luck with that!\" spat Adams. \n\nThen she groaned and leaned on the desk in front of her. \n\n\"We have plenty of time, if I get that Ambrosia working we might even have an eternity.\" \n\n\"Fuck you!\" she growled and again she let out a gasp as the pain coursed through her limbs. \n\n\"I'm being nice right now, both the pleasure and pain are set at around 10% of their final values. We're going to ease you into this nice and slow. I'm willing to be patient. Now get back to work.\" \n\nAdams glared at me but she twitched again and fell back into her office chair. \n\nTurning around I went back out into the lobby in front of the main office, Beth was leaning against the wall a grin on her face. \n\n\"That was brutal,\" said Beth as she walked next to me. \n\n\"No less than what she deserves,\" I growled. \n\n\"I agree.\" \n\nI sighed and the two of us continued on down the hall to the elevator and stepped inside. As far as the rest of the branch was concerned I was a new technical advisor to Adam's one who was working on improving the Doll and who came with the highest recommendations. Within the branch hierarchy I was below only her, despite the actual relationship being the other way around. \n\n\"How's the program going?\" \n\nBeth shrugged, \"Good, still working the kinks out. The Interfaces take some getting used to.\" \n\n\"You're telling me,\" I rubbed at the metal port in the back of my neck, the thing itched. \n\n\"You coming down today?\" asked Beth. \n\nI pulled out my phone and glanced at the time, \"Sure.\" \n\nStepping into the elevator Beth hit the button for the 55<sup>th</sup> floor and the two of us descended and stepped out onto the floor. \n\nOriginally it had been an office space, but Adams had shuffled some people around and fired a few of the more inept compute programs opening up the floor for the first of many little side projects I had planned. \n\nWith the office cubicles removed and everything soundproofed and padded the room was now the training ground for the security forces, or all of the people who had the V2 implants like Beth. \n\nMost of them had already come from military or police backgrounds, and I had removed the block the Company had put in place, and offered them an opportunity to take down the rest of the Company. \n\nThe three who had refused had their memories wiped for the past few months and had woken up in hotel rooms with splitting headaches and a briefcase full of money next to them, legal \"lottery\" winnings. \n\nThe rest were her of their own volition, utilizing the interfaces in a way that that the Company had never conceptualized but had taken me only an afternoon to put together. \n\n\"We're still working out the kinks, and it's interesting being in one another's heads. Still there are advantages.\" \n\nIn nodded, \"That's to be expected. Still impressive.\" \n\nI looked over at the two people training in some form of judo on the mat in the corner of the room. A large burly man and a woman smaller than Beth, who was managing to hold her own against him. It probably helped that she was inside his head, listening to his thoughts just as he was inside her through the aid of the small wireless interfaces on their necks. \n\n\"Another month or two and you'll have your own black ops team,\" said Beth. \n\nI rolled my eyes, \"Don't call it that.\" \n\nBeth laughed, \"Why not?\" \n\n\"It sound cheesy.\" \n\n\"To bad macho types like cheesy,\" she emphasized her point by flexing her muscles, another benefit of the Interface being able to control metabolism. \n\n\"We're going after the bio-tech division of the Company first. They've experimented with the Interface before, so I want to make sure that we have all of their data.\" \n\nBeth nodded, \"Alright, after that?\" \n\n\"We go for the weapons and military division. After that all of the smaller guys.\" \n\n\"The military branch of the Company is one of the largest weapons contractors to the United States. You're going to have to be extremely careful same for the bio-tech, they house smallpox and stuff like that right?\" said Beth. \n\nI looked over at her and she shrugged, \"I've been doing homework.\" \n\n\"We're all going to have to do a lot more homework, mess up at one step and we're dead or worse.\" \n\n\"That's what you said last time.\" \n\nI chuckled, \"Yeah and we only won because I was supposed to lose. We won't be that lucky again.\" \n\n-- \n\n-- \n\nMarch 20, 2016 \n\n*Katherine* \n\nSitting down at my desk I stared at the screen. I had started work up again only a week ago, the company I had been working for nice enough to give it back to me after the coma. \n\n\"How are you doing Katherine?\" asked my boss, Dan. \n\n\"Fine, I'm doing fine,\" I said, even though it was the opposite of what I felt. Inside I felt dead, like something was missing. Like someone had taken a knife to me while I had been asleep and carved out my heart. \n\n\"Getting back into the groove of things?\" asked Dan. \n\n\"Yeah, I am.\" \n\n\"Alright, well just remember if you need help with anything come and ask me.\" \n\n\"I will.\" \n\nDan nodded and retreated back to his office. I turned back to my computer, and continued working through the data entry that was my job. \n\nI knew that even before the coma I had found this boring, but it was the only job I had been able to get coming out of college with a business degree. I even felt lucky with it, so many of my peers had worked to get their degrees thinking they would be important, when in the grand scheme they meant nothing. Most of them were no doubt still working dead end minimum wage jobs trying to pay off their student debts. \n\nI continued through the rest of the work day in my fugue state, my job didn't take much concentration so board as I was the hours crawled by. \n\nAt the end of the day I got into my car and drove back to my new apartment. I had lost my old one, being in that coma. Thankfully most of my stuff had gone into storage so I had that, although I had barely unpacked any of it. \n\nUnlocking my door I stepped into the apartment, I couldn't even must the will to turn the lights on. Slipping my shoes off I quickly stripped down to just my underwear and went to the bedroom. I wasn't even hungry. \n\nI collapsed onto my bed. \n\nI had no energy to do anything else. I had no idea what was missing, or why the hole in my chest only felt like it was getting bigger. \n\nI cried. \n\nI had no idea why, but in the darkness of my room I cried desperate for whatever had been torn away to be returned. \n\nTurning over in my bed I cried myself to sleep, just like every other night since I had returned from the Hospital, unsure what I was even desperate to find. \n\nMarch 25, 2016 \n\n*The True Master* \n\n\"You need to take a break.\" \n\nTaking my eyes away from the computer screen in front of me I turned to Dr. Song. \n\n\"I'm fine.\" \n\nShe rolled her eyes, \"You are not fine by any definition of the word.\" \n\n\"The Interface is keeping me in perfect physical condition Doctor. Hell, just sitting here I'm developing a fucking six pack!\" \n\n\"That's not what I mean.\" \n\nStanding up I turned to glare at Dr. Song. \n\n\"I'm running an operating to enslave innocent people, and I'm working to take control of a company that among many questionable practices has ties to political blackmail, money laundering, illegal drug sales, the funding of terrorists, and straight up political corruption. I have no reason to not be depressed!\" \n\nDr. Song remained impassive, judging me. \n\n\"You haven't left this room in nearly a week.\" \n\nI groaned, \"I'm healthier than when I stepped inside, now will you let me work!\" \n\n\"No.\" \n\n\"What?\" \n\n\"No, I won't let you work. What are you going to do about it?\" she asked. \n\nI paused, considering her for a moment. \n\n\"What do you want me to do then?\" I asked. \n\n\"Get some sunshine, and decide what you are going to do about Kate.\" \n\n\"I already did. She has her life back.\" \n\nDr. Song shook her head, \"Sure she does, but you're still tracking everything she does. We're way past anything you or I do being wrong, but it's not helping you to just be constantly watching her. What are you going to do if starts seeing someone?\" \n\nI winced, I knew it was possible for Kate to do that. She was the woman she had been six months ago, I had no doubt been a sensual woman to begin with something the Company had only improved on. \n\nI couldn't blame anyone for wanting to take her into their bed. \n\nOr her for taking someone into her own. \n\nShe wasn't mine anymore. \n\n\"Fine I'll leave the lab, happy?\" I asked. \n\nWalking forward I swept past her and down the short corridor. I stabbed at the elevator call button and stepped inside, closing the door before the infuriating Doctor could catch up with me. I looked at the buttons for a moment and even though I knew it was a bad idea I hit the button for the penthouse. \n\nThe top floor of the office building was a private suite for the director, probably so they could enjoy the fruits of their unholy labor without leaving company premises. Adams hadn't started living in it until recently. She had maintained an apartment elsewhere in the city but with a few keystrokes I had implanted in her mind the command to sell it off and pack everything up and live at the top of the tower. \n\nShe didn't even know why, to her it had felt like a random spur of the moment idea she has simply gone along with. \n\nI had her under my control and she didn't even know it until I told her. Whenever she saw me the memories of what I was doing to her came flooding back. The terrified resentment, and trepidation. She didn't want to admit it but she could not doubt feel her mind slowly beginning to change. \n\nThe elevator came to a halt, and stepping out onto the floor I locked the elevator out. Dr. Song would no doubt follow me to try and convince me to talk about my feelings. \n\nI didn't want to talk about them. Kate had been tailored to fit my psychological profile, the profile that Belial had constructed. Without her the only thing I had left to do was take control of the Company somehow and ensure that the Interface was not misused any further. Stopping all of the other things the Company was doing would only be a fringe benefit. A ",
        "Belial was twisted enough to think that despite how perfect Kate had been for me, that I couldn't give her life back to her. It was a flaw in his grand scheme, I couldn't keep something that wasn't mine in the first place. \n\nThe hypocrisy of my attitude towards Kate and the other Dolls was not lost on me. But as horrible as it sounded everyone else whom had been converted just a nameless face in the background of my life. Kate was special, I couldn't keep her as much as I wanted too. \n\nShaking my head I walked through the suite, hearing the shower running I smiled and walked back to the bedroom. Opening the door and looking through the steam I watched as Adams drew back the curtain her eyes wide in first surprise, then recognition, and finally fear as the memories came flooding back to her. \n\n\"Leave me alone you bastard!\" She shouted. \n\n\"Oh no slave, you don't get to tell me what to do. Now, get out here!\" I shouted. \n\n\"Fuck you!\" \n\nI waited. \n\nIt took only a moment but I could hear her grunting in pain. It started as a light tingling but it would within moments escalate into the feeling of being roasted alive. \n\nBoth of us knew she would follow the order, after all compliance was rewarded with orgasmic levels of pleasure. No creature could resist moving from one extreme to the other for very long. Humans in general are simply more stubborn about it, but once broken very much deliciously compliant. \n\nThe shower shut off and she stepped out of it grabbing a towel off of the rack she quickly rapped herself up and glaring at me walked past me into her bedroom. \n\n\"Go away!\" \n\n\"Adams have you ever been in love?\" I asked. \n\nThe woman looked stunned for a moment, she probably wasn't expecting me to ask that. \n\n\"Why?\" \n\n\"Because I was. I was and I let her go. I was the one who forced her to leave.\" \n\n\"What that Doll? Are you so pathetic that all you could get to love you was some programed mindless fuck doll?\" asked Adams sneering. \n\nSomething snapped, Adams had insulted me a hundred times over and I had thrown it off I was after all the one who had all of the power. \n\nShe had insulted Kate, and hit to close to home on why Kate had loved me back. \n\n\"So exactly what you are now?\" I asked letting my tone edge towards menacing. \"After all you have an Interface now.\" \n\nAdams paled slightly but stood firm despite her state of dress. \n\n\"Drop the towel.\" \n\nAdams winced and for a moment she fought but her hands were already moving to unfasten the thing. The towel fell away and I let my eyes rake over her body in a clinical way, Adams was in her early thirties by this point only a little older than me, or at least my body. \n\nShe was attractive, and had I assumed was the body of a working woman who worked to keep herself in the dating pool. She would not grace any magazine cover, but she was in no way something any man would reject. \n\n\"Happy?\" she growled. \n\n\"No, follow me.\" \n\nI stepped out of the bedroom and walked out to the living room and sat down in one of the chairs. \n\nTentatively Adams followed me, her bare feet padding on the floor as she walked, breasts swaying slightly as she moved. \n\n\"You know, my apartment wasn't nearly as nice as this one but I think I liked it more. The place just feels so impersonal,\" I said looking around at the clean contemporary d\u00e9cor of the place. \n\n\"I just moved in,\" growled Adams. \n\n\"No more talking.\" \n\nAdams looked like she was going to say something to argue, but apparently thinking better of it closed her mouth her teeth clicking as she did so. \n\n\"You've always been on top of the food chain. I looked at your Company record and everything else I could get my hands on. You came from a rich family, didn't you Adams?\" \n\nShe opened her mouth to speak but bit her tongue and nodded. I smiled, already she was modifying behavior to try and avoid punishment on an unconscious level. Soon enough the active resistance would stop as well. \n\n\"You didn't let that money define you though, you still had to work hard and go to school, the money just made it all easier. After school the Company offered you a position and within five years you were at the top, you're ruthless. You don't have an issue turning people into slaves because you've never seen other people as anything but tools to use. Hell you killed the last Director when he ceased being useful!\" \n\nShe didn't say anything. \n\n\"Is that right Adams? I want the truth here.\" \n\nSlowly and mechanically she nodded, her glare was now on the level of murderous. Were it not for the fact that she was naked she would have been frightening. \n\n\"See, we got that off of our chests. Now though you don't have to worry about apologizing. You're going to spend the rest of your life making up for it.\" \n\nI pointed at the floor in front of me, \"I need a foot rest. You'll enjoy doing it.\" \n\nAdams resisted the command for a moment and I watched mildly interested as she fought the pain again. Like any creature the instinct for survival and a lessening of the pain prompted her to move, and once she moved a fraction of an inch towards the correct action the lessening pain and growing pleasure prompted her to continue. \n\nShe was on her knees and then crawling forward she was at my feet. \n\nSlowly I lifted them. Adams hesitated for another moment and then slowly moved to place herself under them. Carefully I lowered my feet onto her back. \n\nAdams shuddered, gagged by my order she didn't say anything. \n\nFor several minutes I tried to sort out my own feelings, and figure out why the hell I was doing this. I didn't like Adams, but I was going to enjoy breaking her down. She was no replacement for Kate, even once she was completely broken. I could have my pick of any woman downstairs being processed by the Company for sale somewhere else in the world, but I didn't want any of them. \n\nThe one slave I did want was free, and I couldn't bring myself to take that freedom from her. \n\nSo I would have to be content with Adams. \n\nI looked down at my foot rest, Adams was staring resolutely at the floor. Some sadistic part of me was enjoying her humiliation, and pondering how long I would be able to keep her on the edge, where she was eager to please me yet still trying to resist. \n\n\"You can talk.\" \n\nShe turned slightly to look at me but didn't say anything. \n\n\"What do you think of the changes I've made to the branch? The ones you've made for me.\" \n\nAdams didn't say anything. \n\n\"I order you to answer truthfully,\" I growled. \n\n\"The board won't be happy, profits have dipped by two percent in the projections.\" \n\nI smiled, and leaning down turned the woman's head so she was looking at me, Adams shuddered when I touched her. \n\n\"So? I'm getting rid of the board first chance I get. I want to know what you think of my ideas about improving the Interface. The solider program for example?\" \n\n\"It's interesting. Something I never considered. If they really can share memories and act as a single entity they will be unbeatable.\" \n\nI nodded in agreement, \"They will be. You're a project as well. A more holistic type of training, something that could be sold at a premium. A true harem slave like something out of an old Middle Eastern fantasy, do you think the little experiment with you will be successful?\" I asked. \n\nAdams was silent. \n\n\"Answer.\" \n\n\"No.\" \n\n\"Oh? Why not? It seems to be working from up here.\" I wiggled my feet on top of her back. \n\nAdams eyes' hardened, \"You're burning out, I can feel your legs shaking right now. You're thin and you've got more lines in your face than a man twice your age ought to have. Belial messed up his programming. You're self-righteous enough to free the woman you had as your slave, but you're messed up enough to actually need her. Those two parts are conflicting, and now without her you're falling apart, you'll crack long before I do,\" spat Adams. \n\nThe room was silent for a moment, the two of us continued to glare at one another. \n\nSlowly I took my legs off of her back. \n\n\"Stand up Adams.\" \n\nThe woman slowly got to her feet. I stood up as well towering over her small frame. \n\n\"You don't seem to understand the position you're in. I have access to your entire brain, I could make you crack tonight. I could make you beg for me to use you tonight, in just five minutes or so if I wanted too.\" \n\nI pulled out my phone and a cable, just holding them in my hand I threatened her with them. \n\n\"You need me!\" \n\n\"I do, but I could just have someone else play the puppet Master and control you from a distance, Beth should be able to do it and I doubt she would be that sad with me scrambling your brain. She's still a little angry about how you treated her.\"  \n\n\"So where did that morality you have go?\" \n\nI gave her a thin smile, \"I'm not a saint Adams. Some people deserve what is dealt to them. You certainly do, I have no conniptions about what you deserve. I'm already going to hell, and so are you. So I'm going to make sure that I get my fill of vengeance on you for starting all of this and if I ever get my hands on Belial? I'm going to kill him.\" \n\nI sat back down on the couch, and pointed back at the floor. \n\nAdams understanding the order slowly sank back down to her hands and knees. \n\nI put my feet up on her back again. \n\n\"The two of you thought that you were gods, that you were better than everyone else because you had money or power or just because you were smarter. Belial wised up and made me, that doesn't excuse what he did and I'm going to have to spend the rest of my life alone cleaning up his mess because he made damn sure I can't stomach walking away.\" \n\nI ground my feet into her back and Adams whimpered. \n\n\"So the only form of stress relief I'm going to have is you Adams. This is going to be fun!\" \n\nA vicious and stress laced laugh escaped my chest and I leaned back into the couch. I had more power, more money than most people ever dreamed of. But it was worthless without her. \n\n-- \n\n-- \n\nMarch 26, 2016 \n\n*Katherine* \n\nI was naked, but I was not vulnerable or afraid. The fact that the man in the room was staring at me wasn't a source of embarrassment but rather excitement. \n\nIt was after all him, the same man who had been inside every dream since the coma. \n\nI had never seen his face, it was always in shadow. Despite that I could still see the kindness in his eyes, and sense his overwhelming desire. \n\nThe man feared he would make a request I would refuse, which was impossible. He was in control, the one who had all of the power and yet none of it. He feared every small amount of it he wielded, but still he did not shirk the responsibilities inherent to it. \n\nHe was an incorruptible man, or at least when it came to me. \n\nI was incomplete without his control, he was incomplete without my submission. \n\nTwo ugly creatures, thrown away and detested by the world for their weakness and absolute dependence on one another together formed a flower more beautiful than any other. \n\nLanguidly I moved in front of him, teasing and at the same time inviting him forward. I was his to use and take, crush and dominate, love and control. \n\nThe man remained still, hidden in the darkness. I dropped to my knees in front of him my head down and waited desperate for even the brush of his fingers over my skin. \n\nSlowly the darkness of the world slipped away blinking I opened my eyes to the light of day. \n\nRolling over in bed I hit the alarm silencing it and stared up at the pale chipped ceiling of my home. I didn't even want to get out of bed, I didn't want to eat. Nothing felt important, all I wanted to do was go back to sleep. I wanted to go back to sleep and wait in front of the faceless man until my subconscious let him actually take and use me. I had dreamed of him every night now, and he hadn't done so much as touch me. \n\nRolling out of bed I tried to get rid of the thoughts. I hadn't been like this before the coma. \n\nI had tried to remember anything from the time when I had been in it, I'd read about how people sometimes lived out entire separate lives inside of comas. Maybe that had been what had happened to me? I'd been some sort of alternate life I could barely remember? \n\nWas the man my lover from that other life, nothing more than a figment of my imagination? \n\nWhatever had happened in the coma, I wanted to experience it just one more time. \n\n-- \n\n-- \n\nI stared at the papers in front of me. \n\nHuge reams of data and statistics. Important to the company but meaningless to anyone else. \n\nWas this my life? \n\nWas this what I was going to do the rest of my life? Sit at a desk and plug numbers into a computer, then go home eat something and repeat? \n\nWith a sigh I continued to work through it, the hours blurred as I purposefully blanked them from my memory just wanting the day to end. I wanted to go home and sleep, have one of the dreams with the man again. \n\n\"You have any plans for after work?\" asked Dan. \n\nIt took me a moment to re-engage my brain and I looked up at Dan, \"what?\" \n\nHe laughed as if I had told some sort of joke, \"You want to go out for drinks after work? Loosen up for the weekend?\" \n\nI really wanted to go back home and just lie on my bed in the dark cry for whatever the reason was and retreat into my dreams. That wasn't healthy though, I knew it wasn't healthy to do that. \n\n\"Sure.\" \n\nDan smiled, \"Alright then! That little bar down the road good? They actually have decent food to so we can grab a bite to eat.\" \n\n\"Sounds good Dan.\" \n\nHe smiled and walked off. \n\nI turned back to my computer and continued chugging through the mindless dull work. \n\nWhy had I done that? Dan was nice enough, but I had never really considered going out with him. He'd asked me out a few times before the coma and I had always just turned him down as nicely as I could. Now though I had said yes. \n\nThe rest of the day I spent in a panic unsure if I should ask him to reschedule or not, I didn't have an actual excuse and I knew it was better for me to go but still, I was apprehensive. \n\nAt the end of the day I was still at my desk, trying to look like I was still busy maybe Dan would cancel for some reason. \n\n\"You ready?\" asked Dan. \n\nI jumped, I hadn't noticed him approaching too deep in my thoughts. \n\n\"Uh, sure yeah!\" \n\nCollecting my purse I took the hand that Dan offered and the two of us exited the office, I was already regretting this. Dan was nothing like the man in my dreams, except he was real and in front of me. \n\nOblivious to my inner conflict Dan and I walked down the street to the bar and along with the rest of the crowd leaving work we piled into the place. \n\n\"I need a table Jon!\" shouted Dan as we stepped inside. \n\nThe hassled looking bartender behind the counter pointed at a table with the ridiculously long legs and high up from the ground in a corner of the bar. \n\n\"Great!\" said Dan and taking my hand led me over to the table and sat down. \n\n\"What do you want to drink?\" he asked. \n\n\"uh,\" \n\n\"I'm having a beer, you want one or something like a margarita?\" asked Dan cutting me off. \n\n\"Sure.\" \n\nDan nodded and waving the waiter over placed the order. I was more in the mood for food, but looking around I could see that what food was mostly cheese and salt based the usual bar food. I wasn't in the mood for any of that and now I was really regretting agreeing to go on this date with Dan. \n\nOur drinks came and Dan took a large swig from the beer, looking at my own I took a small sip of it and put it back down on the table. \n\nDan was staring vapidly up at one of the large TV's behind me watching whatever sports game was on. \n\n\"Good game!\" said Dan, tearing his eyes from the display for a moment to look at me. \n\n\"Uh, yeah!\" I said mustering as much false enthusiasm as I could. \n\nDan nodded, apparently satisfied that I was enjoying myself, which was the opposite of what really felt. The bar was loud and hot, the food grimy and the alcohol as good as it was at removing me from the world was only a stopgap. I just wanted to go home and lay down in bed and dream about the man hoping that he might finally decide to step out from the shadows. \n\nThat wouldn't happen though, and the best I might get was sitting in front of me. \n\nI looked him over with a critical eye. \n\nHe was nice enough, if inattentive. He was aging, a little paunch around his stomach and a few lines on his face. In short he was the average male specimen, nothing impressive or special, nothing bad or wrong either. \n\nThe spark wasn't in his eyes like the man in my dream, the spark that told me that I was the most important thing, the most prized possession in the world. \n\nThe man in the dream had that spark, the light in his eyes even from the shadows where he sat watching. That spark told me what I was his undeniably and inexorably his, to contest the fact was to argue that the sky was green or that one could jump into the air and fly. The domination, it was something man in the dream wanted as much as I. The pleasures of sex had little to do with it, the domination was more important than that. \n\nFor him to control me meant everything was right in the world. \n\nThe man sitting across the table from me in the seedy bar staring vapidly up at the television was hardly that. All a relationship with him promised was bad sex, poor communication and an unhappy workplace. He would bluster and put up a macho front, afraid to display any real emotion. He would never take what he wanted, content to simply go along with the flow of life never fighting for what he wanted. \n\n\"I need to use the bathroom.\" \n\nDan looked over at me, \"Alright, the food should be here in a minute.\" \n\nSlipping out of the barstool of a seat I went back to the bathroom, and finding it mercifully empty I closed and locked the door behind me. \n\nGoing over to the faucet I looked into my own eyes. I stared at my reflection, looking for something. All I saw was my own face staring back, but something was missing. \n\nSomething was missing, like it had been carved out and taken away. \n\n\"What is wrong with me?\" I asked my own reflection. \n\nThere was no response, and I felt tears beginning to well up. \n\nSomething had been taken from me, and I wanted it back. \n\nI slammed my fist down onto the porcelain sink, there was a small squeal and glancing down I winced. A spidering web of cracks was now emanating from where I had hit the hardened clay. \n\nLooking at my hand sighed, I had cut it slightly and I was bleeding. \n\nI just wanted to go home. \n\nWalking out of the bathroom at a brusque pace ignoring the blood dripping form my hand I went to the table. \n\n\"I'm leaving Dan. I don't feel too good.\" \n\nDan blinked and looked over at me, \"You sure? we just got here. I'll walk you back to your car,\" he said as he started to get up from his seat. \n\n\"I'm fine,\" I hesitated, \"Thanks though.\" \n\nTurning away I bolted running through the streets, tears in my eyes and blood on my hands I tried to remember what was lost, and why the man in my dreams was so important. \n\n-- \n\n-- \n\nI stared at the wall across from me and let the tears continue to stream down my face. I didn't know why I was crying, but it felt as if my heart was being pulled from my chest. \n\nThe doorbell rang. \n\nFor a moment I ignored it, and it rang again. \n\nDragging myself up from my kitchen chair I went over to the door and opened it. \n\nFor a moment I was stunned, and unbidden word fell from my mouth, \"Master?\" \n\nThe man winced. \n\n\"Not anymore.\" \n\nThe memories came flooding back, and I gasped. Showing up on his doorstep, the cabin, the Company. I threw my hands back to my neck searching for the Interface but I felt only bare smooth skin. \n\nI took several steps backwards and collapsed into my armchair as the memories came flooding back, melding with who I had been before the Company snatched me. The slave Kate, and the woman Katherine became one. If I thought I had a headache before it was nothing compared to now. I groaned and closed my eyes enduring it. ",
        "\"I removed the external Interface. The rest of the chip is still in their though I can interface via NFC with it. Obviously the thing needs some adjustment though you were supposed to be happier by this point,\" mumbled the Master. \n\n\"No!\" my eyes snapped open and I looked up at him. \n\nThe Master paused for a moment, \"What?\" \n\n\"Don't! Don't change me again. I can't go back to being who I was before all of this, and I don't want too! You might have suppressed my memories of being yours but my body, my subconscious remembers it. I dream of you every night Master, I want you to take me back!\" \n\nThe Master slowly lowered his head, \"It seems I didn't deactivate the chip after all.\" \n\nIgnoring the headache I stormed to my feet, and doing something I would never have been able to do with the chip active I knocked the Master back into my couch, tearing the tablet computer from his hands as I did so. \n\nThe Master let out a surprised yelp as he collapsed. \n\n\"It's not the chip you idiot! I'm in love with you! You had complete control over me, and instead of ordering me to serve your every desire all you did was fulfill my own! You felt guilty ordering me to do anything, but I enjoyed it! You seem to be under the impression that I hated your having control, I didn't!\" \n\nYelling now I continued, \"You were my Master! I fell in love with you! You can't just erase those memories and expect me to be happy about it. I know you want to do the right thing, but I don't even know what that would be at this point! I can tell you what I want though, I want you to turn the chip back on and let me come back to you.\" \n\nSlowly I knelt down on the floor in front of him, tears threatening to fall from my eyes \"Please!\" \n\nThe Master groaned. \n\n\"Kate.\" \n\n\"You feel the same way about me, I know you do,\" I said interrupting him. \n\nThe Master looked at me for a moment, \"I do.\" \n\n\"Then stop thinking about it. I don't want to go back to what my life was, filing paperwork day after day, feeling alone. I always figured I would at some point just settle with a guy, I don't want to do that. I know who I am supposed to be with, and only he seems to be taking issue with it.\" \n\nThe Master closed his eyes, and took in a breath. \n\n\"Kate I promised to free you.\" \n\n\"I know that. But you want to know something funny? I've never felt more free than I did under your control. When you had control all I had to worry about was what you said, and I liked it. So be a Master, take what you want. Take me back!\" \n\nThe Master opened his eyes. \n\n\"You know if I do this I'm not going to be able to let you go again. I have self-control but I'm not going to be able to stand this a second time.\" \n\nI nodded, \"I know that. I don't want you to let me go.\" \n\n\"I don't want to either.\" \n\nThe Master stood and leaning forward took me into his arms crushing me to him. \n\n\"I won't be able to let you go.\" \n\n\"Good,\" I whispered back. \n\nSlowly the Master let go of me, and stepped back slightly. \n\n\"We don't have to turn the chip back on, we can be together without it.\" \n\nI shook my head, \"We could, but it wouldn't be the same. I don't want to follow your orders because we both like it, I don't want any option but to follow your orders. Understand?\" \n\n\"I think so.\" \n\n\"I need to do something first,\" I said. \n\n\"Anything, what do you need?\" \n\nI smiled, \"I need to make sure my subconscious will stop torturing me.\" \n\n-- \n\n-- \n\n*The True Master* \n\nKate led me back to the bedroom of her small house and pushed me down into a chair that she had in the corner of the room. \n\nShe looked nervous, more so than I had ever seen her. It was understandable, the chip wasn't in her head guiding or encouraging her. This was purely Kate as she had been before this had all started. The concept of her being some blushing shy woman was a cute one. \n\n\"Can you close your eyes for a minute?\" she asked. \n\n\"Sure.\" \n\nI closed my eyes and I heard Kate moving around the room, first the blinds over the window and then the sound of clothes rustling. I was tempted to peek and see what she was doing but I remained still my eye closed. \n\n\"You can open them now.\" \n\nSlowly adjusting my eyes to the room I looked over at Kate. She was standing directly in front of me clad only in her underwear. \n\n\"I don't have any lingerie here,\" said Kate trailing off. \n\nI shook my head, \"You're beautiful Kate.\" \n\nA deep blush went across her face and she nodded. Slowly Kate began to move, there was no music in the background but still she moved to some unheard beat. \n\nThere was a nervousness and certain amount of trepidation to her movements without the chip eliminating her fear or embarrassment she was doing this all on her own, she wanted to prove to herself and to me that she could do it on her own. \n\nI swallowed, I had to prove I could do it without the Interface as well. What if I really was a horrible lover, and the only reason she fawned over me was because of it? \n\nSuch complicated thoughts were quickly eliminated however as Kate reached up and unfastened her bra. For a moment she held the cloth to her skin, either intentionally teasing me or working up the courage herself I wasn't sure but the effect was the same, my eyes immediately locked onto her chest. \n\nKate dropped her hand and the cloth fell away, exposing her hard nipples to the cold air of the room. She remained still for only a moment, before once again dancing to the unheard and sensuous beat. \n\nShe moved and danced, accentuating and emphasizing every curve of her body. \n\nSlowly she advanced towards me, still moving as languidly as possible. She was teasing me, inviting me to take her. The amount of effort she was putting into it though was having almost an opposite effect. I was stunned into inaction unable to tear my eyes from her as she continued to move. \n\nThe dance continued for several minutes, and she only continued to draw me in, she would take a step towards me and then a step back, towards me and then away again. She was teasing, but ultimately getting ever closer. \n\nUnbidden I raised my hands as she approached, and fingertips touching her waist she shuddered. Keeping my touch on her she slowly slid down to her knees in front of me and my hands trailed up her body, settling on her face. \n\n\"You don't even have the Interface turned on, what's with this?\" I asked as she continued to shiver. \n\nKate smiled slightly, \"I got used to feeling like this around you, and I've been dreaming of doing this since I woke up.\" \n\n\"What happens next in those dreams you've been having?\" \n\n\"Nothing, I wait for you to move to take me and use me. You never did though.\" \n\nI waited a moment, and then leaning down grabbed Kate by her shoulders and lifted her to her feet. \n\n\"You've convinced me. Although I want you to do something now,\" \n\n\"What?\" \n\n\"Beg me to let you go.\" \n\nKate looked shocked for a moment, \"Why?\" \n\n\"So I don't.\" \n\nKate met my eyes for a moment, and inside her I saw what I had always wanted, what I had thought maybe I didn't deserve. That wasn't the point now though, I was going to take what I wanted. \n\n\"Let me go Master.\" \n\nI tightened my grip on her shoulders. \n\n\"No.\" \n\nShe didn't struggle from my grip nor did she help me as I pushed her towards the bed behind her. \n\n\"Master please, let me go,\" she said even as a wide smile crept across her face and the back of her legs hit the bed. \n\n\"No!\" \n\nI pushed her back onto the bed, she collapsed and I was on top of her. \n\n\"You're mine, and I'm not letting you go again. Understand?\" \n\nShe nodded. \n\n\"Good,\" I put my hands on her breasts and teased at the nipples, which already hard in the cool air tightened even more. \n\nKate gasped and pressed herself up against my hands moaning as she did so. \n\nI stared at her, unable to believe that she was really giving herself to me like this. The Interface was off, and she had her old life back, yet she was giving up her freedom to be my slave again. \n\nLeaning down put my lips to her throat, and bit at her skin reveling in the feeling of having her so close to me again. \n\nKate moaned and her hands flew to my shirt working to remove it. Buttons flew in every direction in her haste and within moments I was naked. Kate's eyes widened and a mischievous grin spread across her features. \n\n\"You seem excited Master,\" she said almost purring with satisfaction. \n\nI rolled my eyes, \"A particular slave has decided to push me to my limits, what do you think should happen?\" \n\n\"She should be punished Master.\" \n\n\"I think so too,\" I moved hand down to Kate's panties, and pushing them aside I quickly began to tease her. \n\nKate gasped and threw her arms up around my neck trying to pull me closer to her. \n\nFor a minute I played with her, she went from wet to drenched. Her body quivered and shook as I slowly teased her, and like some magnificent instrument she moaned with every stroke of my fingers. \n\n\"Master!\" Kate gasped. \n\n\"Yes?\" \n\n\"I need you!\" \n\nI paused and she moaned, \"Oh? You don't get to choice when I take you.\" \n\n\"Please Master!\" begged Kate. \n\n\"If you are so eager,\" \n\nI rolled over so that I was on my back with her on top of me. \n\nKate disoriented for a moment quickly realized what I meant, and peeling her panties off she pressed herself to me. She rubbed her wet pussy over my erection teasing me for a moment as I had teased her. \n\nI grunted and putting my hands on her hips guided her down. \n\nKate sat up so that she had more control, and lifting herself up onto her knees she slowly slid down onto me going as slowly as possibly pushing both of us to our limit. \n\nBoth of us gasped as she sank down completely on top of me. \n\nI was never going to let her go, she was mine. \n\nWith a grunt I put my hands on her hips and held her in place reveling in the warm feeling engulfing me. This was more than love, I owned her, yet in her own way she held just as much dominion over me. It was a carnal ownership, love was only a small part of the relationship between the two of us. \n\nKate worked herself up and then down, moving slowly at first the both of us getting used to one another again. Soon though she was unable to control herself and began to thrust herself on me more quickly, I had to admit I was at my limit as well.  \n\nI grabbed her and held her still, moaning as I came. \n\nKate groaned as well and for several seconds the two of us remained still reveling. Leaning forward Kate slowly collapsed onto my chest, and I wrapped my arms around her. \n\n\"Master,\" she moaned. \n\n\"Yes Kate?\" \n\n\"Can you turn the chip back on now?\" \n\n\"Right now?\" \n\nShe nodded, \"It feels like something is missing,\" \n\n\"Are you sure?\" \n\n\"Yes Master.\" \n\nLeaning over the bed I retrieved my phone. \n\n\"This is going to take a minute considering we removed your external interface.\" \n\nI held the phone up to Kate's neck and watched the progress bas slowly creep across the screen. When it reached 100% Kate shuddered and fell back onto the bed. \n\n\"You alright?\" \n\nSlowly Kate opened her eyes, \"Yes Master, everything is perfect.\" \n\nI wrapped my arms around her and crushed her to my chest. She was mine, and everything was right in the world. \n\n-- \n\n-- \n\nMarch 28, 2016 \n\n*The True Master* \n\nKate looked around the loft and at the city below. \n\n\"A different kind of view compared to the cabin.\" \n\n\"Yes, well I'm running a different kind of game now.\" \n\nKate nodded and glanced over at Adams. The former director was robotically preparing our dinner, \"Do we really need her here?\" \n\n\"The old phrase keep your enemies close applies I think. Besides as far as the rest of the Company is concerned she's still the one in control so we need to keep up appearances, besides even amongst my slaves there should be a hierarchy.\" \n\nKate frowned. \n\n\"You don't think what I'm doing to her is wrong?\" I asked. \n\nKate shook her head, \"No, but if you ever get your hands on Belial.\" \n\nShe trailed off and I nodded, \"He's got more blame than anyone else. He's knows exactly how I think though, if he wants to hide I will never be able to find him.\" \n\n\"You don't think he will interfere?\" \n\nI sighed, \"I have some of his memories, but they're probably edited. I doubt it though. As much evil as he's done Belial understood he wasn't the one to control this technology. So he's at least pragmatic rather than megalomaniac.\" \n\n\"That's supposed to be reassuring?\" \n\n\"No, realistic.\" \n\nI turned away from the window and sat on the couch, I beckoned Kate over and she nestled in next to me. \n\n\"Jeremy and Helen are off in California, Dr. Song is playing mad scientist, Beth's in command of your military guys and Tracy is learning to take over Adams' job. You don't have anything for me to do?\" \n\nI smiled, \"You're doing it.\" \n\nI pulled her closer to me and Kate let out a small giggle. \n\n\"We're a pair, all you need to do is keep me grounded,\" \n\nKate leaned up against my shoulder and smiled. \n\n\"I think I can do that Master.\" \n\n\"Good, because we have a lot of work to do.\" \n\nI pulled out my phone and showed it to Kate, she looked at the text on the display for a moment, \"What's this?\" she asked. \n\n\"Ambrosia, it's something the Company has been working on for nearly two decades. Immortality.\" \n\nKate's eyes widened. \n\n\"As in live forever?\" \n\n\"So long as nothing kills you. Yes.\" \n\nKate considered that for a moment, \"So you mean I would get to spend more time with you?\" \n\nI nodded, \"Yes, but my big fear is that the Company figures it out before me and they sell it off to the highest bidders. The rich get to live forever and the poor get to die. It's just another thing I'm going to have to deal with.\" \n\n\"I'm sure you'll figure something out Master.\" \n\n\"I hope so.\" \n\n\"I know you will, after all you're my Master. You can do anything.\" \n\nI chuckled and pulled her closer to me, \"And I think someone's a little eager.\" \n\nKate blushed, \"I didn't have you for a whole month Master, can you blame me?\" \n\nI pulled Kate up onto my lap and planted a kiss on her lips. She melted against me and I reveled in her warmth as well as the mere fact that I had her in my life. \n\nI don't know if I'm real or If I'm just some hack's means to world domination, I don't know if I'm a program or a person. I don't know if I'll be able to take down the rest of the Company, or stop the technologies they've abused. I don't know if I can save the world from the corrupt and the deceitful, from the ones who have taken and never given back. \n\nI do know that with the Kate in my arms and by my side I'm willing to try. \n\n-- \n\nEnd the True Master Arc \n\n-- \n\nThe story will continue, with The True Slave. Where we see how the True Master begins his takeover of the rest of the Company and Adams slow transformation continues. \n\n-- \n\nYou know, I'd like to think I've improved quite a bit since I started this story which I admit was something I did only because I was annoyed at how the majority of tales that toe anywhere close to Mind control hardly delve into it in any amount of depth besides just having sex. I hadn't though this through completely when I started, which might be fairly obvious in some parts. \n\nI would like to go back and fix this up, clean up and condense the story at some point. Most of all though I want to say thank you to you the readers for your comments and encouragement."
    ],
    "authorname": "Weerdo",
    "tags": [
        "slow",
        "doll",
        "slave"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-true-master-ch-12"
}