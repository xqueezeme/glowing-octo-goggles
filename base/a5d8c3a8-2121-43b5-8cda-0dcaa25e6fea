{
    "title": "Possessing Bella Ch. 13",
    "pages": [
        "Authors Note: This is a chapter in this series primarily based in BDSM practices. If that is not to your tastes please stop reading and find one of the other wonderful stories on this site more suited to your kink. Thank you once again to everyone who leaves comments and feedback on my writing, it is much appreciated. Happy holidays, and my sincere apologies for the delay in this month's chapter, real life is crazy busy. ~ellie\n\n*****\n\nBella had been in a helicopter before, but she had not been in the frame of mind to enjoy it for the pure joy of flying. Stephen held her hand in a gesture that was both caring and romantic. She knew now that he could and would take her every bit as completely as Mel had once. It was different though. Where Mel's tender aftercare was born of love and concern for her state of body and mind, Stephens gestures of tenderness and care seemed to be tinged with a sense of romance as well. It was hard, she thought, to put into words the subtle differences between them. Where Mel had claimed her body and soul as his, it seemed that Stephen was trying to win her heart. \n\nSqueezing his hand nervously, Bella looked down on the picturesque lawn and traditional walled garden as they made their descent into a wide space of lush green grass. Helping her from the helicopter Stephen fixed a sturdy chain to her collar attaching the other end to his belt loop.\n\n\"Remember your training and all will be well,\" he murmured as he handed her the small chest that held the few possessions he had given her. He began to walk toward the large sandstone house, with Bella two steps behind him the chain hanging slackly between them.\n\n\"Tal, Steelheart. I had heard you were returning, but I did not believe it until this moment,\" a muscular man greeted Stephen loudly. Then he embraced him in an awkward looking off centre way in which their opposite shoulders bumped, and they clasped hands in a strong grip. \"Come we'll put your girl in the kennels and grab a tankard together.\"\n\n\"She stays,\" Stephen said flatly. \"You may greet, Honey,\" Stephen commanded rather than asked.\n\n\"Greetings, Master,\" she flashed her big green eyes momentarily in the direction of the other master before lowering them again.\n\n\"Business or pleasure?\" The man ignored Bella's greeting and continued to talk to Stephen, who just inclined his head and gave a half smile.\n\n\"Get out of my way, Arek,\" he said in his deep baritone. \"You know Kolton and Mik-Hail are awaiting my arrival. Stop posturing and move or be moved,\" his voice had a dangerous undertone. \n\nArek seemed to consider Stephen for a few moments. Both men were tall and broad, but the well-muscled physique of Arek made him look formidable at that moment, and Bella sucked her lip between her teeth. Then suddenly he roared with laughter and slapped Stephen on the back. \n\n\"It is good to have you back brother,\" he said as they entered the walled garden. \"I'm pleased the past few years have not made you soft. Bella saw two young women tending the garden as she walked through, both wearing ragged house camisks. A third woman swathed in copious scarfs and drops of material supervised them from a distant chair. \n\n\"I see you still pretend to be a free woman, Nalani,\" Stephen nodded in her direction.\n\n\"How unpleasant it is to see you again, Steelheart,\" Nalani responded with a cool look and a cold voice.\n\n\"She still hasn't forgiven you,\" Arak laughed loudly. \"I don't like your girl's chances of surviving the week without feeling the sting of her tongue if not her brother's whip.\"\n\n\"Honey is no stranger to the barbs of jealous women,\" Stephen said offhandedly, \"Nor is she a stranger to the whipping post.\" Arek raised an eyebrow and turned his head to look at the small slave as they walked into the cool dark foyer.\n\n\"I doesn't surprise me considering she is serving an evil bastard like you,\" Arak chuckled. He guided them through to the main hall where two fire pits were stacked with fresh wood but remained unlit in the centre of each side wall. Mats and roman style stools and chairs were spread out around the room, and a large sand circle with a tall post placed upright in the middle of it sat in the very centre. The room was not overly large, and Bella imagined that any girl brave enough to dance there would be on display to everyone in attendance. \n\n\"Kolton is in his office with Mik-Hail,\" Arek opened the door to a slightly smaller room to the side of the feasting hall and ushered them inside. \"Well, he's here at last,\" Arek announced as they entered the room. \n\n\"Tal, Kolton,\" Stephen greeted the old man at the large desk, then nodded to Mike, \"Mik-Hail.\" He acknowledged his long-time friend.\n\n\"You can leave your things over there,\" Kolton waved at a mat in the corner that sat below large steel rings that dotted the wall. Stephen unhooked the chain from his belt and walked over attaching it to a ring in the wall and dropping the rucksack he carried beside where Bella had dutifully knelt. She had known she would be treated as just part of Stephen's luggage when they arrived but being totally ignored was not an experience she liked. She would have liked to greet Master Mike and thank him for all the time he had allowed Nyx to train her.\n\nShe had been told this was the way it was. She tried not to let it bother her. It did though, and she made her face a plain mask and tried not to bite her lips as she knelt in a tower position before the men who would judge her worthiness to stay here without Stephen. She kept her eyes on the floor listening to the men talk about her as they would about a working animal, like a cow or a horse.\n\n\"I understand the circumstances, and I had great respect for Marinos, but we don't pander here, Steelheart. She works like everyone else. She lives in the kennels, and she will answer to the Kennel Master and the First Girl,\" Kolton was saying. None of this was news to Bella except the name Marinos which must have been Mel's name here in this world.\n\n\"That's as it should be. She doesn't ask for any special attention when I am not in attendance, and I think you will be pleasantly surprised by how hard the girl works,\" Stephen said flatly.\n\n\"Your girl did some of the initial training with her?\" Kolton had turned his attention on Mike.\n\n\"Not enough but be that as it is, Nyx said she was a quick study and could cope with the basics of living in the stronghold during an enclave gathering,\" Mike muttered. \"She is small but interesting to look at and watch. It should not be a hardship to have her serve in your stronghold.\"\n\n\"We will have to see about that,\" Kolton grunted. \"What do you call her?\"\n\n\"I call her Honey,\" Stephen answered. Kolton grunted and shook his head. \"As this is her first entry into Gor, and it is your home in which we seek shelter, you, of course, have the right give her a name of your choosing.\" Stephen was weighing up the mood of the taciturn old man sitting across the large desk from him. If there was power in this lifestyle, Kolton held it. Mel could have matched him once, and Stephen knew that was one of the reasons Bella had been allowed in without being collared to a Master who lived the Gorean lifestyle on a daily basis.\n\n\"I would call her Panda to remind her with each calling of her name that we do not pander to a girl's wants or needs. Nor do we want any pandemonium in regards to her being here. That name is however not available to her at this time. I was given to understand her name was Bella but that it has been requested that she not use that name here?\" Kolton paused in his thoughts to see Mike nod in confirmation. \"She may keep the name Honey or a variation of it.\" His voice became hard again, \"That is possibly the last boon I will afford you, Steelheart. From this point on, she obeys the rules of this home or is punished accordingly, agreed?\" Kolton said with force making sure Stephen knew he was serious.\n\n\"That is as it should be,\" Stephen said easily. He was confident in her abilities as well as her endearing qualities. The men of Gor were mostly bluster, and this was a definite flexing of muscle from the old man to make sure Stephen knew his place in being allowed to return. He had no doubt Mike had already been given the same warnings despite the close relationship between the two men. Mike was in line to succeed the old man as ruler of this enclave. While Kolton may have agreed to this arrangement for Mike and the memory of Mel, Stephen knew he wasn't happy with the idea of a girl just playing at being a slave in his home. Stephen had no doubt he would test her thoroughly over the coming days. \n\n\"Alright bring the slave forward, and I will begin the testing and make my final decision,\" Kolton said suddenly banging his fist on the table in a show of his prodigious strength despite his advancing years. Both Stephen and Mike knew this was now only a formality but as Stephen took the chain from the ring from the wall and led her forward Mike hoped Nyx had been right in her assessment of the girl.\n\n\"The slave will provide the names of six cities of Gor, two mountain ranges and two rivers,\" Kolton said staring at her as if to see inside her mind. If she had truly done the essential reading this would be no problem, if not he may have to reconsider his agreement.\n\n\"Ar, Thentis, Koraba,\" Bella licked her lips nervously, \"Lara, Treve, Port Kar.\" She paused briefly her mind searching for what she needed. \"Sadar and Voltai Mountain ranges,\" She took a deep breath, \"The Vosk and the Thassa Rivers.\" She fell silent and kept her eyes downcast.\n\n\"Explain what Ka-la-na, blackwine and mead are and the best way to serve them,\" his voice was flat showing no emotion.\n\n\"Ka-la-na is a sweet wine and would be best served in a goblet or as the Master has requested. Meade is a sweet Ale made from honey and is best served in a tankard or horn once again depending on the Master's wishes. Black wine is like coffee and can be served in first serve or second serve in which a tray of milk, cream sugar and honey are made available. This is so the master may please himself with the taste of the brew,\" Bella said confidently. She enjoyed the service training and knew most drinks within reason and the majority of the food.\n\nKolton said nothing. He stood from behind the great desk and walked out to the middle of the floor sitting on an uncomfortable looking, wide stool with a high flat back on it. \"Bara,\" he barked the command at her. She moved swiftly to lay face down before him her wrists crossed in the small of her back and her ankles crossed. At the last minute, she moved her head to the side resting her cheek on the cold stone floor.\n\n\"Belly,\" he barked again. Bella relaxed her hands to her sides and spread her legs widely while remaining on her stomach. \"Karta,\" Kolton barked again and Bella moved slowly and awkwardly forward until her lips could touch his boots. Then she laid her head beside his boot in an act of complete submission.\n\nStephen could see the hint of a smile on the old man's face as he watched Bella move and obey his every command quickly and with ease. \"Submission,\" the bark was not as harsh but she moved just as quickly to take up a new position. With as much grace as she could muster she knelt up before him and raised her arms above her head crossing them at the wrists. Then she dropped her head low between her arms and brought them down slightly toward him. \n\n\"She knows the basics at least. Nyx has done her job as your first girl,\" Kolton spoke above her head to the other men. Realising she would be required to hold this position until told otherwise, Bella relaxed her shoulders slightly and concentrated on their voices closing her eyes and breathing rhythmically. \"Does she dance as well?\"\n\n\"She does,\" Stephen's voice held pleasure or something like it that Bella couldn't quite put her finger on.\n\n\"I will give her a day to become fully acquainted with our kitchen and the chores she will be given by the first girl. Tonight, however, she will dance for us,\" Kolton decreed. \"A dance to show her submission to the men of my home,\" he added indicating which of the multitude of dances would be required.\n\n\"Mike, take them to the Kennels and find, Greyhawk and Thalia,\" Kolton issued orders. \"You may keep her with you tonight but in the morning she will join the house properly,\" he instructed Stephen. \"Stand slave and go with your Master.\"\n\n\"Thank you, Master,\" Bella said quietly and flowed gracefully to her feet turning to face Stephen. He took the chain that now hung down between her breasts and led her to the chest and his bag before taking her from the room with her arms full. \n\nBella realised quickly that because of the enormity of the rooms the house would be reasonably easy to navigate. She was taken through the main hall and back to the large foyer then through the door on the same side of the house again. The large antechamber had a desk, but nobody was present. They continued through the next door, and Mike spoke to Stephen.\n\n\"I have already spoken with Greyhawk and seen to it that Bella will share with Nyx. I will be here for the two-week duration of this gathering. During that time, Nyx will mostly stay with me. Should something arise at work that Mark can't handle, and I have to return to the city I will leave Nyx here to beg her case should she find herself in trouble.\"\n\n\"It won't come to that my friend,\" Stephen said mildly.\n\n\"Things have changed a bit around here over the last few years. Some new faces with big egos have entered the ranks. Trouble may find her whether she likes it or not,\" Mike made it clear that he did not like some of the new faces that had joined their enclave. \"Computer geeks looking for easy sex for the most part as far as I can see; most are taking the mentoring offered. \"Your guy Andrew seems to be alright but he wouldn't come with Bella here.\" He gave a dry chuckle, \"Poor guy. It's just not natural having to work for a woman.\" His voice held his disgust over the situation.\n\nBella said nothing she knew this was how it would be here. She was surprised that Mike was showing her compassion and ensuring her safety by organising her kennel as he had. Perhaps he had done it in deference to the other Masters who made up the stake holders of the club and were all friends to Mel but she appreciated it regardless.\n\n\"Leave your chest here. Take only what you will need to dance tonight and give it to me,\" Stephen's tone was more abrupt than it had been lately. She knew then that the stern authoritarian Stephen would be the man she would have to defer to here. She took a swathe of silk and several stings of bina and bells passing them to Stephen before closing the chest and putting it near the small pillow that rested on the sleeping mat.\n\nStephen looked at the handful of items and nodded before pushing them into his vest. He then turned with Mike and walked from the kennels, Bella trail behind him staying close enough so that the chain remained bowed between them with some slackness.\n\n\"Thalia will be in the kitchen,\" Mike said as they walked, \"Best take her there first then you can keep her as close as you wish.\" Stephen grunted his acknowledgement with a nod.\n\nThey walked back through the foyer and the door on the far side. Bella found herself turning abruptly and following the men down a long corridor that ran the length of the building. She imagined the foyer and feasting hall on the other side of the left wall as she walked. She peered curiously at the large open doors they passed on the right to see roman style sunken baths surrounded by biers filled with steaming and sizzling rocks. Several girls lounged about the space.\n\nContinuing down the corridor, she found herself standing at the entrance to the largest kitchen she had ever seen. It was bustling with activity and obviously ruled by a stern looking woman who stood surveying all that happened around her. As soon as she saw the two Masters standing with Bella at the door to the kitchen, her demeanour changed noticeably, and she sashayed toward them.\n\n\"Greetings Masters,\" she said with a small smile. \"How may I serve you this evening?\"\n\n\"Nyx will show Steelheart's new slave the kitchen then they will serve us on the deck,\" Mike stated.\n\n\"As you wish, Master,\" Thalia said without any emotion still holding the small smile on her face.\n\n\"Honey, this is Mistress Thalia, First Girl of this home. You will obey her as you obey any Master here,\" Stephen said seriously and unhooked the chain from her collar and his belt loop.\n\n\"Yes, Master,\" Bella said softly.\n\n\"Better come with me then,\" Thalia said, \"Thank you, Masters, I will send the girls to you shortly.\" The men walked away, and Thalia took Bella by the arm and led her into the vast kitchen space. To Bella's surprise the kitchen seemed to be missing one complete wall, opening out onto the deck as if it were all one space. She could see the Masters as they sat talking and joking with each other a small distance away. Girls moved between the two spaces as others remained at the benches and open wood fire ovens. Bella walked to the rear of the room guided by Thalia.\n\n\"You must always look busy when you are in the kitchen,\" Thalia said in a soft voice. \"Take this cloth and polish these goblets,\" she indicated the bench before her and stack them up into the shelf above as you do each one. While you're doing that you can begin to memorise the kitchen floor plan,\" she smiled then as if letting Bella in on a secret. \"It's a cheat sheet for the new girls and strictly women's business,\" then she surreptitiously slid a wooden board across the bench revealing a well laid out floor plan. \"I'll find Nyx for you,\" she turned and left Bella to the chore.\n\nMinutes later Nyx appeared beside her taking up a second cloth and helping with the chore of polishing goblets. \"I am so glad you are here,\" Nyx said in her usual subdued way. \"The place is buzzing with rumours about Steelheart's slave,\" she grinned. Only Master Kolton knows your true identity, aside of Master of course, so expect that the other Masters will test you to see your worth.\"\n\n\"Oh, gosh, really?\" Bella suddenly felt the butterflies in her tummy turn into rabid flesh-eating moths. \"Master Kolton said I must dance tonight but I can barely think straight I am so nervous. I don't want to let you down. All that training you gave me,\" she shook her head, \"What if I mess it up really badly.\" Her voice had become high pitched with anxiety.\n\n\"Sweet girl,\" Nyx laughed lightly. \"You knew more in your first few days with me than some of these girls have learned over months. You could go out there waddling like a duck, and you would have more grace than some of the girls here for the gathering. Don't look so worried, I will be on hand and Thalia is like a little mother with girls like you who show such promise. Everyone will love you; I promise.\"\n\n\"What if I forget my dance?\" Bella whispered.\n\n\"Which one did he ask for?\" Nyx became concerned it was one of the most obscure dances they hadn't had time to touch on yet.\n\n\"Submission, I think,\" Bella chewed her lip remembering the conversation.\n\n\"You practised that so much even I know it by heart now,\" Nyx grinned. \"Now have you looked at this long enough to remember most of it?\" She indicated the floor plan. \n\n\"I am so nervous I am not sure any of it is sinking in,\" Bella said sadly.\n\n\"Well, here is how we cover and reveal it,\" she slid the board into place and uncovered it again twice to show Bella how to see it. \"The first thing is to come to these shelves for the right vessel, tankards, horns, goblets. She pointed down the rows of shelving against the wall indicating the platters for various foods. \"Then you clean it with one of these cloths while you check where the food or drink you need is kept. It's going to be fine sweet girl.\"",
        "\"I am so lucky to have you here with me,\" Bella summoned a smile to her features.\n\n\"Just remember it's all about the attitude here, we are demure and submissive but we are sex on legs, and it's our job to make everyone out there envious our Master. Now the kitchen is set up simply with ease of movement in mind. Thalia worked in a restaurant for years as a chef and is an organisational whiz,\" she spoke softly. She took Bella on a brief tour of the vast room making sure she knew the basics and introduced her to several girls who were friends.\n\nBella smiled politely as she greeted with nods and a few embraces, but she knew she would be hard pressed to remember names. \n\n\"It's time girls,\" Thalia approached them, \"Go serve your Masters. Have fun tonight, Honey. We will talk in the morning about your chores and abilities.\"\n\n\"Thank you, Mistress Thalia. I am looking forward to it,\" Bella raised her smile to the woman.\n\n\"Now it's all about attitude. Remember you are the slave of one of the most power men in Gor, you need to own that and live up to it, make all of the other want to own you. For the benefit of all the Master's watching the new girl, start with the southern serve style for your Master. Then watch and listen for the men who Identify themselves as Jarl's, they will expect the northern style of service. Most importantly don't forget to relax and have some fun,\" Nyx grinned and gave her a small push toward the deck.\n\nBella took a deep breath and pulled her shoulders back. She glided out onto the deck with perfect posture. She blotted out the noise around her and made her way unhurriedly to Stephen, who sat with a group of four men. Melting to the wide kneel of the nadu before him, she waited to be acknowledged before speaking.\n\n\"Ah, here she is,\" Stephen's deep voice seemed loud to her ears and she looked up momentarily. \n\n\"May your girl be of service, Master?\" Bella said softly.\n\n\"You may,\" he lifted her chin to look into her face seeing her nervousness being held at bay. He placed his free hand down into the bag that sat on the ground beside his chair and brought out an ornate goblet of steel and glass. \"Take care of my goblet and bring me a bottle of Ka-la-na to share with my friends.\"\n\n\"You're not still carrying hat old thing around with you are you? Where is your trust among fellow warriors,\" The man who had met them when they arrive mocked Stephen, Bella recalled his name was Arek.\n\n\"As you wish, Master,\" Bella delicately took the goblet from his hand and held it to her chest as she gracefully stood and sashayed back toward the kitchen. Standing at the bench, she knew where the wine racks were, so she quickly dipped the goblet into the steaming soapy water to clean it. As she began to dry it carefully, she noted the etching in the glass of the sun setting on some unknown lake. It was a truly beautiful piece. Finally, happy with its shine she rolled the rim of the goblet around the soft flesh of her neckline to ensure no miniscule chips were there and found only perfection.\n\nSmiling she turned toward the wine racks and saw to her delight that Nyx hovered close by watching in case she needed help but not interfering. Smoothing on hand down over her hip, she glided swiftly to where the wines were stored away from the heat of the ovens. She inspected the racks seeking out a brand that she knew. \"Penfold's Kalimna,\" came a whisper from Nyx. Smiling as if discovering the perfect bottle herself Bella picked up the Kalimna with a small nod to the woman who had helped her and tucked it under her arm. Once again holding his goblet with two hands she turned in a dainty pirouette.\n\nReturning to the bench, she worked the mechanical corkscrew to remove the cork then took it and placed it firmly back in at a distance where she could reopen it with only a little force. Taking up the bottle and tucking under her arm making sure there was no leakage, she grasped the goblet and spun on the balls of her feet to look back out over the deck. She could now not only feel the eyes on her but also see them and she swallowed noisily stilling her nerves and summoning a small, she hoped sexy smile.\n\nWalking carefully, placing one foot after another directly in the centre of her being she rolled her hips wantonly as she made her way back to her Master. She tossed her head once sending her curls back to bounce over her shoulders and cascade down her back as concentrated on Stephen and not the attention she was receiving from the other men on the deck. She knew she was a novelty being new here and that it shouldn't bother her, so she did her best to block it out.\n\nSinking into the now familiar wide kneel, she rocked back on her heels and settled the goblet between her thighs feeling her heat and arousal with the look he gave her. Lifting the bottle carefully from the arm where she had tucked it, she licked her lips making them glisten. Lowering her eyes to his boots, she lifted the bottle parting her lips and placing the cork between her sharp white teeth. Pulling her hands downward, the bottle gave a loud pop as it was uncorked. She inhaled the rich aroma of the wine before lowering the bottle to pour it into his goblet filling it to the last ring.\n\nShe could feel her thighs trembling as she lifted the bottle back to her mouth to cork it again, with some difficulty. Her tongue tingled with the taste of the wine as she slowly placed the bottle back on the ground to the side of his chair.\n\nLifting the goblet and almost caressing her body with it as she raised it up over her belly and chest once more, she brought it to her lips kissing the side just below the rim. Turning it in her hands, she lifted it to him raising both arms slightly and lifting her eyes to him briefly. \n\n\"Master, your girl offers the fruitfully delicious wine of the Ka-la-na and hope that this service was pleasing for you to watch,\" she said sweetly keep her voice even and clear.\n\n\"As always you are beautiful to behold,\" Stephen said taking the glass from her hands and taking a deep swallow. \"Come kneel beside me,\" he indicated the left side of his chair and Bella hastened to comply.\n\n\"A lot of fuss about nothing. There's not much heat to the tiny thing,\" Another of the Masters close by muttered, \"Perhaps she has been spoilt and no longer feels the heat of her slavery.\"\n\n\"You Jarl's just don't appreciate grace and poise. If you're looking for someone to bump and grind all over you call Mariposa over. She has no finesse at all,\" Arek laughingly came to Bella's defence surprising her. Feeling like she had let her Master down and wanting to prove herself worthy Bella almost forgot her place and considered offering the man service. She felt Stephens fingers slowly twine in her hair softly and slide through the curls as if petting her.\n\n\"It's a shame you feel that way, Celeron, old boy,\" Stephen said laconically. \"I was going to have her offer to bring you some of that god awful mead you insist on drinking at these gatherings.\"\n\n\"Fuck, I'll be a Jarl if it means getting some of Honey's sexy service,\" Arek guffawed. \n\n\"Honey offer, Jarl Arek service,\" Stephen smirked. He knew Bella would take this as a challenge, and he was looking forward to wiping the smug expression from Celeron's face. \n\nBella took a moment to think and rose steadily to her feet. She gave Arek a smouldering look and moving closer slid between his open legs as he sat staring at her bemused by the change in attitude. Leaning one hand on the back of his chair, she snaked her way up his body brushing her breasts over his bare chest with a small smile touching her lips as she held his eyes. Lowering her head she let her lips lightly travel over his shoulder and neck before grasping his earlobe gently and purring, \"May this girl be of service to you Jarl Arek?\"\n\n\"Hell yes!\" He slid his hands up her thighs to her hips holding her gently. \"I'll have Paga.\"\n\n\"How would you like that served Jarl,\" she murmured softly into his ear as she continued to nibble at the ear lobe. \n\n\"Over ice in a heavy-bottomed glass,\" his voice held an edge to it. Stephen smirked at Celeron and shrugged shaking his head.\n\n\"As you wish Jarl,\" Bella let her hands glide down over Arek's neck and chest as she slowly stood and took two steps back from him while maintaining eye contact. She then spun and swishing her hands behind her flipped up the bottom of her camisk up revealing the cheeks of her ass.\n\n\"Scotch on the rocks,\" she told herself lightly as she stood before the shelves seeking out a suitable glass. Stretching to her tiptoes she reached up to tease a tumbler from a too high shelf remembering what Nyx had told her about the way silhouettes were highlighted by the wood fire stoves. She hurriedly went through the process of cleaning the glass and walked toward the cold room.\n\nShe wasn't prepared for the chill of the floor on her bare feet and she shivered as the cold wrapped around her. It seemed to sink into her making her nipples pucker to arrow points beneath the sheer silk of her dress. Dropping three pieces of ice into the glass with a loud clink, she hurried from the room bumping the door closed with a swing of her hip. She shivered again and tossed her hair back to cover the movement. \n\nPouring a generous two fingers of scotch from the crystal decanter she took a deep breath to regain her poise and heat. Then moving with the hip swaying, rolling gait of a wanton slut who could be any mans she made her way back toward Master Arek. Holding his gaze as she drew closer to him, she climbed deftly into his lap straddling his thighs. Lifting the glass to her chest and then to her lips, she pressed a soft lingering kiss the rim. Turning it and pressing it to his lips so that he might both receive the imagined kiss and taste the liquor she purred softly holding his gaze.\n\n\"Jarl, your paga, may it warm you like the embrace of a heated slave,\" she purred in a low voice.\n\n\"Your service was most pleasing. I would keep you right here except that your Master does not seem to appreciate the merits of the idea,\" he laughed. Arek picked her up from his lap placing her between the chairs of himself and Stephen. \"A man could get quite carried away with that one.\"\n\n\"I'll admit that was unexpected,\" Celeron said. \n\nArek laughed loudly, \"Now he will spend the rest of the night trying to find fault. Tell me she is dancing tonight that will make it all the better.\"\n\n\"She is too small to be a dancer,\" Celeron huffed. \"Now Nyx, there's a dancer.\" He smiled obsequiously at the silent Mike.\n\n\"Kolton has requested she dance tonight so we shall see if she can dance despite her height impediment,\" Mike said dryly without a trace of a smile, making Arek laugh even more. \n\nThe night wore on, and Bella was grateful that Stephen had seen to it that she had eaten earlier during their journey to this place. He gave her small sips of his wine and allowed her a small bathroom break in which she got herself a glass of water.\n\nFinally, Master Kolton called her to him. With great anxiety, she approached and knelt before him. \n\n\"Dance to show me your pleasure at joining my home and submission to the Masters of Gor,\" he commanded and sat back in the chair.\n\n\"Yes Master,\" Bella said, and keeping to the role of a demure slave of Gor, she peeked up through her long lashes. Taking a deep breath, her heart pounding with nervousness she rose up onto tiny feet, gracefully weaving her way back across the room to the pit of sand.\n\nShe stepped carefully flicking the sand with her toes as her eyes sought out Stephens in the gathering, and a small, soft smile played on her lips. She lifted her slender arms high in the air intertwining them and picked up a beat and melody in her mind which she hummed softly as the dance began. To her surprise a drum began to accompany her, and a lone acoustic guitar picked up the melody that she hummed helping her to mark the timing of her dance.\n\nBella swayed her hips to the beat, and her hands slowly lowered twisting gracefully like retreating serpents until her hands touched the new steel around her throat, and she lowered into a wide kneel. Releasing the collar she placed her hands on the floor and moved with grace, sensuous hips swaying from side to side like a cat on the prowl she moved towards Master Kolton slowly. Then halted as if by an unseen barrier and fell to the floor just out of his reach.\n\nShe rolled to her back still lightly humming along with the melody in her mind and let her fingers begin to trail along her tummy, lightly, teasingly. She swung her head to the side brushing her hair over her shoulder so that the ends of her curls grazed her budding aroused nipples. Breathing in slowly, she felt herself yearning once again for Stephen's touch, not just acting out the need in the dance, but wanting it so badly. She dared to peek in his direction and found his face a mask showing no emotion except in the heat of his eyes which did not waver in their gaze upon her. \n\nAs if those eyes commanded her, she raised her small hands cupping her breasts as they rose and fell in time with her increasingly rapid breath. Her emerald eyes closed for a moment as visions of him danced through her mind. She replayed their afternoon together over in her mind, not knowing at the time that she could ever feel this desire for someone other than Mel again and letting it settle into its own place within her being. Rolling back to her belly, she looked up at him directly showing her heat and need within the dance and slowly knelt, her hands trailing up her ribs to cup her breasts momentarily once again.\n\nBella let her gaze roam around to the other Masters watching her before settling on Master Kolton. After all, Stephen had been an audience of one for this exact dance earlier that day. Her hands continued their upward motion combing through her curls and letting them fall back over her shoulders. Her hands lifted skyward, and her body followed until she stood, the rope belt of her camisk coming undone and falling to the sand at her feet. With the belt gone the silk hung from one shoulder exposing her nakedness beneath to all. She twirled on the balls of her feet letting the remaining silk flutter and swirl around her.\n\nAs her spin slowed her hands reached for the collar she now wore, and the memory caused her to look up into Stephen's dark gaze again. Concern clouded the heat in his eyes momentarily, and she realised he knew her well. She felt the love he had for her in that look, and she smiled softly once again swinging her hips to the beat and beginning to humming aloud again to show her pleasure at wearing his collar. Even if it was only for her time here with these people.\n\nHer graceful swaying dance moved further toward Master Kolton for whom she danced this time, and then around him. Her long fingernails trailed up and down his bare arms on over his neck as she swayed and spun around him pressing against him and making physical contact with him so that he could feel her heat. She saw the dark expression on Stephen's face and with a small whispered whimper interrupting her soft humming; she spun away from Kolton again dancing back across the room.\n\nShe stopped abruptly and turned to scan the faces of the men her green eyes flashing as she delicately fingered the collar about her neck. She began to rotate her hips in a newly learned move as once again her hands travelled down her body slowly, her breath catching as they playfully danced over her nipples before moving on. Her deep green eyes were aflame with desire as she danced sensuously with an instinct she had only discovered she possessed earlier that day.\n\nBella's rounded hips gyrated in slow, insistent circles. It was an uncontrollable reaction as if she was a wanton slut begging for attention. She let out a soft sigh feeling the slick wetness of her excitement growing with each passing moment. Concerned for the temporary tattoo, she spread her creamy thighs wider, displaying more of what she was feeling. Her eyes were constantly seeking out Stephen as she gazed over the watching faces, and she extended a small pink tongue to lick out over her dry lips.\n\nAllowing her knees to buckle, she knelt back down on the sand and leaned forward to crawl sensuously toward Master Kolton again, her hips swinging. She knew this could end badly. She remembered that Nyx had warned her of the moodiness of the old man who ruled this enclave. She wanted to please him and in turn make Stephen proud of her.\n\nShe sat up before him grinding her hips to press her cunt against her feet below her. All of the uncontrollable sexual need she felt for Stephen could be seen in her eyes even as she looked up at the old leader. Her movements caused the long strands of her hair to bounce and cascade across the slender line of her shoulders as she brought the dance to its conclusion.\n\nBella gazed up into his eyes and was greeted by a hard look she didn't understand making her falter in the dance thinking she had perhaps gone too far. Her lip caught between her teeth as anxiety enveloped her. Still she brought herself back to the dance and drawing her hands up her body she entwined them over her head before bending forward in a position of submission to him and whispered, \"La Kajira.\"\n\n\"You have my protection while you are in my home and lands,\" Kolton said loudly. The men around her stomped their foot or slapped their thigh by way of some applause, and the noise startled her as they cheered. \"Return to your Master,\" he finally said after long minutes in which she did not dare move from her position at his feet.\n\nBella rose slowly her breathing remaining slightly ragged and glided to Stephen's side. She did n't interrupt the conversation he was having with the four men he sat with, but rather knelt at his side quietly. Almost immediately she felt his large fingers begin to twine and pull through her curls, and she smiled. \n\n\"Alright, Arek,\" Celeron's voice reeked of frustration, \"I will admit she was mildly entertaining, but she is not the quality of Nyx or Elena.\" He nodded at Mike in acknowledgment of his coveted slave.\n\n\"Maybe not, but the girl can dance, and she can serve better than most,\" Arek gave a wide smile. \"And if I am not mistaken about the smug look on Stephen's face, I would hazard a guess that she has some skill as a pleasure slave as well.\" Arek laughed his enjoyment at the look of chagrin on the other man's face. \"So pay up, a bet is a bet.\" Celeron stood and walked away with Arek still laughing. \"That was a shrewd move there brother; Nalani will not be happy about the outcome.\"\n\nBella could see Celeron talking to an animated woman on the other side of the room and remembered the conversation from when they had arrived about Nalani and her brother. She glanced up at Stephen wondering exactly what had gone on and noted the small smile curling his lips as the pair looked over toward him before resuming their conversation.\n\n\"Well Brothers, it's been a long day,\" Stephen stood and stretched. \"I will be glad to catch up with you again tomorrow.\"\n\n\"Sure, I'll bring up a couple of carts of gold just in case you change your mind about selling her,\" Arek grinned and took his wrist in an odd clasping handing shake. \n\n\"Not much chance of that my friend, but the offer is appreciated,\" Stephen chuckled I his low bass.\n\nBella walked behind hind Stephen as he made his way across the room and stood close to Celeron and Nalani. \"Do we all understand each other,\" he said in a dangerous tone.\n\n\"We do,\" Celeron nodded but the eyes of Nalani, the only part of her visible from beneath the swathes of material, looked at him coldly as she said nothing. They went to Kolton, and bade him good night thanking him again for his hospitality and left the large deck heading back inside the grand house. Stephen lead her through the long corridor and up a flight of stairs saying nothing and not looking back at her at all. His symbol, the same one that hung around her neck was on the door that he eventually opened on the upper floor, and she followed him into the room.",
        "Bella had barely taken in the fur strewn bed and floor lit by an open fireplace when Stephen pinned her to the wall. Taking both her hands and pulling them up above her head in one large fist he ran his other hand down her body and lowered his head to kiss her. He had not planned to move their relationship to a sexual level so soon, but after the afternoon's events he saw no reason to deny himself now. He would find a way to deal with having to share her until she was truly his and his alone, but for now he would take her as and when he could.\n\nHis free hand found her breast and nipple pinching a twisting to hear the delightful squeals of pleasure and pain she made into his kisses and groaned in response. He lowered his zipper and undid the button pulling his cock free and roughly entered her as he picked her up and pushed her back into the wall with force. It was hard and fast and passionate as he lost himself in the feel and sound of the woman he had begun to fall in love with. The moment was all about him, and he pounded into her needing her and wanting more with every thrust.\n\nHe came hard after only a short time releasing the pent up emotions he had held at bay all night as he had struggled to treat her as a slave of Gor. He growled loudly as he reached his climax, throwing back his head and feeling her thighs shake as they wrapped around his hips knowing she had come mere seconds before him. She panted heavily her breath warm on his neck as they both came down from their endorphin fuelled high. \n\nAfter long moments, he settled her back to her shaky legs and stepped back from her, \"You may undress me now,\" he said in a husky voice. \n\nBella stepped forward quickly, her nimble fingers working over the leather vest revelling in the feel and smell not only of the material but the man within it. Her mouth followed her fingers as she kissed licked and nibbled at each newly revealed inch of skin as she slowly and carefully undressed him. She folded each garment as it came loose from his body and once naked she knelt before him and began to clean his cock of their mutual come.\n\nStephen groaned low and deep as her fluttering tongue teased him back into full rigidity, and he picked her up practically throwing her onto the fur covered bed. \n\n*****\n\nBella woke slowly the following morning sore but not bruised or welt ridden like she had woken in the past. Stephen had dominated her purely with his formidable size and strength, moving and bending her to his wants and needs as he wished. She smiled, she had never imagined it could be this good without all the props that came along with the lifestyle she had chosen to remain in. She rolled to look at him finding him awake and watching her.\n\n\"Good morning, Master,\" she said softly and smiled. \n\n\"I have never particularly liked being addressed as Master until this particular moment,\" he took her in his arms and kissed her pulling her up to straddle his hips and lay over his superior form. His hand support her hips as she sat up impaling herself on his large cock. He helped her set a pace he was content with before he lifted his hands to her breasts slapping and teasing the soft flesh with his fingers.\n\nCompared to the night before the morning was very subdued and could wear the term love making rather than fucking. Each admitting to themselves that what they felt for each other was deepening with each passing moment. Stephen knew he shouldn't get carried away. She was still committed to this training regime, and he would not interfere with it as it was. He knew it would be difficult to bear giving her over to another even for a short time, but he was becoming more confident that she was finding room within her heart for himself alongside the memory of Mel.\n\nDespite spending a significant amount of time in bed and then in the heated sunken baths with Stephen before he took her to dress for the day, Bella felt a pang of loss as he left her with Thalia at the kitchen doorway to learn more about her role in this household over the coming weeks.\n\n\"Now,\" Thalia smiled, as she took a seat at the small table in a small room just off the kitchen. There were three women in the room beside her and Bella chewed her lip nervously as she looked up at Thalia. \"Last night was a success for you my dear, congratulations.\" Bella was startled to speechlessness. Luckily Thalia continued to talk. \"That sort of success on your first night here comes with some pitfalls though, mainly that you will have to work hard to live up to expectations the men now have of you.\" Bella furrowed her brow in confusion.\n\n\"You did well, Honey,\" Nyx smiled, \"Even my Master had to admit grudgingly that you seemed to have taken this lifestyle seriously. He was very generous to me last night in his praise of my hand in your training.\" She grinned happily.\n\n\"What this means is now you will have to work doubly hard,\" Thalia said in a matronly way. \"Nyx says that you don't have the amount of dances you will need if called on most nights. We will have to factor some training in with your schedule as a priority,\" she looked down at a piece of paper she held before her. \"Now, Master Steelheart leaves us tomorrow morning, so that will give you more time for study,\" she said as if to herself. \"So today will not be easy but tomorrow we will begin in earnest.\" \n\n\"Sorry, sorry. That silly duck caught her camisk on the stove again,\" another woman rushed into the room. She held a tray of toasted sandwiches and jugs of juice hefting it to one arm as she quickly placed the items on the table and took a seat. \"She's in the infirmary again.\" She rolled her eyes.\n\n\"Heaven's above that girl is a walking disaster,\" Thalia clucked. \"Eat, Honey, it's a long time until you will get a chance at lunch.\" Bella took up a sandwich as the other woman pushed a glass of juice in front of her.\n\n\"I am Talibah,\" she smiled. \"It's so good to have you here. You served beautifully last night.\"\n\n\"Thank you,\" Bella said covering her mouth while she spoke with a mouth full of food.\n\n\"And I am Elena,\" the woman Bella had not met before said quietly from the other side of the table. She had heard that name referred to last night when the men were talking about dancers.\n\n\"It very nice to meet you both,\" Bella swallowed and returned their smiles.\n\n\"Now,\" Thalia began again, \"You will spend the mornings in the kitchen preparing food with Talibah and me. We will show you the correct way to serve whatever is being cooked that day and any of the less widely known beverages. The afternoons will be spent with Nyx or Elena or both working on the dances you will need to perfect.\" She considered the page before her. \"Maybe take her out into the grounds down by the stream. There is always someone in the feasting hall or the deck at the moment.\"\n\n\"They'll need an escort if they go that far,\" Talibah said thoughtfully.\n\n\"I'll talk to Arek and GreyHawk, and see if we can work something out,\" Thalia nodded. \"In between all this you must study each Master and learn their preferences. Not only food and drink but the service and positions of the girls that attend them, I do not want to see you punished unduly like most of the new girls here. You have started well, and now the expectation will be high and some will be watching your performance just to see you fail.\"\n\nBella knew that Greyhawk was the kennel Master and that Arek held a position of authority here at the house. She was sill coming down from the endorphins of spending the night with Stephen, but she took as much as she could in of what they were saying. Mornings spent in the kitchen and afternoons dancing practise. The evenings would be spent where she wondered? Serving the Masters out on the deck? She wasn't sure how to go about that without Stephen there to guide her actions.\n\n\"Now, I will go and speak to Arek and Greyhawk about taking you out to the river starting tomorrow, do you have a dance for tonight, just in case?\" Thalia asked.\n\n\"Yes, Mistress,\" Bella said quietly using the formal title of the First Girl. In fact, she had three or four she felt confident enough with to at least be able to get up if summoned. \n\n\"Good, then take you time here and eat with the girls while the men have breakfast. Arek will be keeping them entertained I am sure,\" she gave a half laugh and rolled her eyes, \"That man could drive a woman to drink,\" she laughed and rolled her eyes heavenward but it was obvious that she adored him in a maternal way, like one would a cheeky but good-hearted rascal.\n\n\"You must have some questions now you have seen and served the men here. My descriptions can't have been that good,\" Nyx said as Thalia left the room.\n\n\"It's all so much to take in,\" Bella said softly. \"The only thing I can think of to ask or at least confirm is that with my day being organised as it is, am I to assume that I will be serving out on the deck during the evening and if so where do I sit when I am not required, I mean once Master Steelheart leaves tomorrow.\" \n\n\"I don't think you will have to worry about that. I am sure there will be more than a few men who would have you kneel close to them but just in case there is a slave mat near the left side of the entrance to the kitchen where you can kneel if you were not required,\" Nyx said lightly.\n\n\"I love the food here,\" Elena broke into the conversation. \"I could get fat if we stayed here longer than a two-week period. I would have to take up real exercise or something,\" she pulled a face and bit into another bacon sandwich.\n\nThey talked about life in the household for maybe another half an hour before returning to the kitchen. Both Nyx and Elena went to find their respective Masters and Talibah began some instruction on the food they generally served during the evening meals. Bella felt as if she had barely done much in the way of her chores when Stephen appeared to collect her.\n\nAfter accepting a bag from Thalia, which he slung over his shoulder, he led Bella out through the foyer to the front gardens. Stephen picked her up and placed her in the saddle of a horse he had draped with a quilted blanket and stepped up into place behind her. Taking the reins in one hand, he wrapped the other arm around her and urged the horse forward. They remained silent as the horse walked across the vast expanse of well-manicured lawn that they had arrived on the evening before.\n\nStephen knew he was in danger of being hurt by the young woman he held. He had not wanted to be the rebound guy, the first man she opened her heart to after Mel, he had been content at the beginning to watch over her and protect her. He had not realised that in accepting the position the shareholders had offered that he would get to know her so intimately and fall in love with her even more deeply than he had suspected he might when given the time and opportunity once this training regime was over.\n\nHe had cared about other girls and even considered more than one possible candidate for his collar, but they paled in comparison to how he now felt for Bella. The last two days had taken away any self-delusions that he would willingly give her up to another if she found a lifestyle she wanted during her journey. There had not been time before they left his home nor the opportunity once they were here to show her the darkness of his true sexual nature, but today he would remedy that. Gorean men used the whip and other such devices as punishment for wayward slaves. To have her screaming in pain albeit tempered by pleasure while in the house would not have gone down well with the majority of Masters and not at all with the women.\n\nHe smiled and kicked the horse into a trot and then a gallop as he headed toward the surrounding forest lands. He had formulated this plan last night as he had watched her sleep and had discussed taking her out with him to tour the grounds with Kolton over breakfast. Kolton had grumbled but agreed because, for all intents and purposes, the girl did belong to him, but she would be expected to serve and dance on the deck again tonight.\n\nStephen moved the horse deeper into the forest carefully picking his way between trees and undergrowth as he followed the line of the stream that ran through the property. Stephen found a suitable spot a small distance from the stream, and any thoroughfare so as to be reasonably discreet and stopped. Stepping from the horse he tethered it to a tree and lifted Bella from the saddle. \n\nHe bent his head to kiss her deeply while holding her off the ground then spun her and lay her over the saddle. Using a generous amount of lube Stephen took his time filling her with a butt plug until the dark star of her anus was covered with a flat glittering gem. He smiled at the sight and slapped her ass leaving a pink handprint. Taking an egg he eased it inside her already wet cunt and clicked the remote to ensure it was working leaving it on a low hum.\n\nTaking a length of soft nylon rope from his saddle bag he threaded it beneath her and wrapped it around her waist leaving the long end between her and the saddle. He took a butterfly and parting the moist folds of her cunt placed it over her clit setting it at a low hum to mirror the egg. He then pulled the length of rope between her legs tying it off at the back. The considerable remaining length was then used to secure her hands to the small of her back.\n\nStephen took her from the saddle, the small young woman so light in his arms he kissed her relishing her breathlessness and obvious heat. Placing her on her feet gently, he took the remaining rope and pulled it over her shoulder and began to bind her breasts. While not overly large they were still sizable enough to bind tightly and he stood back once he had completed the rope work and secured the end back over the opposite shoulder to her waist and surveyed his handiwork. He felt his cock jump in excitement as she gazed back at him with eyes full of need and desire. She panted open mouthed and let out whimpering mewls that were music to his ears.\n\nBella could feel the tell-tale butterflies building in her tummy. He had totally overwhelmed her with his need the evening before and now she could feel all of his dominance and control rising to the surface in a way she hadn't known before. It was as if he had held back a core part of himself from her. She could see the pleasure in his eyes and face and it made her excited that she could cause the usually stoic Sir Stephen to drop the veneer of control he held tightly over his own emotions at work and home. The only person she had seen him drop the fa\u00e7ade for previously had been Pete but that moment had only been brief glimpses before the fa\u00e7ade was firmly put back into place.\n\nStephen would have enjoyed using a flogger or a crop on the gorgeously bound girl who stood before him and once again cursed the timing of their deepening relationship. He could not leave her with welts to explain to a group of men who would see them as marks of a wicked slave who required punishment. The soft rope was tied loosely enough so as not to mark her badly, and he had brought the aloe to ease her skin once he had sated his need. It was only after her words in his home the previous day that he had quickly packed these few toys in case he found the time and opportunity to use her as he desired. After last night, he had determined to make it happen.\n\nReturning to the horse he took the quilted rug and placed it on the ground uttering the first words he had spoken to her since they had left the house, \"Kneel, little one.\"\n\nCaught between calling him Master or Sir Bella panted as she knelt before him and looked up as the toys began to vibrate harder making her body tremble in need before he had even touched her. Stephen squatted down before her and took her rapid swelling nipples between his thumbs and forefingers.\n\n\"I want you under no illusions about what becoming mine will mean for you,\" his voice was low and husky. She grimaced keening in a high pitched squeal as he twisted the pinched nipples making her eyes water and her body quiver. \"I will not share you as openly as this training regime you have undertaken permits. Nor will I hold back in my use of the tools you became accustomed to with Mel. I am required to here in this place, because they have laws and rules within this enclave that I will not break,\" he leaned forward kissing her open mouth swallowing the cry she emitted as once again he twisted her nipples cruelly. \"Nor will I give another man the idea that you require punishment.\"\n\nBella blinked tears away from her eyes. Her body betrayed how aroused his sadistic side had made her as he released one of her nipples to slap her stuffed and buzzing cunt a smile playing at his lips when he lifted the evidence of her arousal to his nose and breathed in her scent. Bella took a deep breath trying to slow down the building need she felt to cum then and there. \n\n\"You may cum as you need,\" Stephen gave her a rare grin hearing her sucking in deep breaths. \"I have never been one to deny a girl pleasure when she receives all that I give her so happily.\" Once again he slapped her cunt, and she arched up thrusting her hips out toward his hand as if welcoming the contact. Preparing to stand back up he took bother her nipples between his fingers pinching hard before twisting them again causing her to cry out and more tears to flow. He leaned forward and licked a tear from her cheek then stood before her freeing his cock from the confines of his pants.\n\nHe didn't even have to ask, as she watched him avidly while he kicked off his pants, she eagerly held her mouth open, wanting and even needing to taste him on her tongue. Stephen stepped forward, he tried to hold back his own desires letting her taste and tease him with a fluttering tongue. He stood still letting her set the pace and get used to the size of his cock in her mouth, but she was beyond thinking and drove her head forward swallowing as muchof him as she could with each movement. His hands twined roughly into her hair pulling it away from her face, and when she tilted her head up to him looking up at him with teary eyes, he let his need take over.\n\nHer jaw hung slackly as he sawed in and out of her willing mouth and throat. He felt her arch up against his legs and the vibrations of her throat as she howled around his cock, her climax slamming into her as he took his own pleasure. She continued to shake and squeal around his cock as he gritted his teeth and continued the fuck her mouth. \n\nUnable to hold back more than a few minutes longer he pulled back slightly and came all over her lips and tongue revelling in the sight of her wet tear stained face as the spittle and cum dripped down her chin to her swollen breasts. Bella swayed unsteadily held up only by the grip Stephen had on her hair. Her eyes fluttered and he slowly lowered her down onto the quilted rug coming to sit beside her and pull her into his arms. Kissing her forehead, he held her while she shook and came down from her high, turning of the buzzing toys to give her some small respite.\n\nA noise behind them made him turn around as he enjoyed the feeling of Bella's relaxed body against his own. He was startled to see Arek riding away from where he had obviously witnessed Stephen's use of his slave. Arek was a lot of things, but he would not judge them harshly after witnessing this. He would need to speak to him later but for now he was unconcerned. He looked down at the beautiful girl who rested with her eyes closed in his arms and gently began to untie her bindings. He had chosen a secluded space close to the stream so they could refresh in the cool clean water. Once they were both sufficiently recovered he carried her to the stream to ease away the marks left by the rope.\n\nThey ate the lunch that Stephen had picked up from the kitchen when they had departed that morning and lay contentedly together on the rug in the solitude of the forest. They spoke of his departure in the morning and what that would mean for her within the household but mostly they were comfortable with the long silences that had begun from the time they left the house.",
        "Eventually, after inspecting her skin one last time Stephen stood and pulled on his clothes. He held his hand out to her to help her to her feet and pulled the camisk over her head. Placing her in the saddle, he climbed up behind her and turned the horse back toward the home of Kolton. Neither of them had spoken of love or commitment to each other out loud since leaving Stephen's home, and it seemed to hang in the air around them unsettling Bella.\n\n\"Thank you, Sir Stephen. For not pressuring me to give up on this training while we are getting to know each other in a deeper sense of the words,\" Bella said quietly and feeling him stiffen as he rode behind her she continued. \"I will miss you greatly when you are not here but rest assured that my focus will be on the service, and day to day living of this lifestyle over the coming weeks.\" It was as close as she could come to declaring her commitment to wanting to belong to him while still maintaining the small freedoms she had to explore the world Mel had tried to give her.\n\n\"I am possessive of what is mine, as you will find out in time,\" Stephen said in his deep rumbling bass. \"But know that I would not interfere with your choices in this training or your career back in our own world. Though I would expect you to discuss decisions influencing your whereabouts and safety with me. Nor would I seek to sway you from commitments you have made to others who have made arangements to welcome you into their homes and lifestyles. I would be disappointed in you if you were such a girl that would break commitments or promises so lightly.\" \n\nIt pained him to say the words because there was nothing he wanted more than to take her home and make her his alone. He knew though, after spending the last few months with her, that she would feel trapped by such a move. She needed to come to him on her own. He had faith now that she would at some point in the not too distant future, and he looked forward to the day when she knelt before him and begged for his collar. Stephen's arms tightened around her, and she purred happily as he took her back to the Masters of Gor.\n\n*****\n\n\"Quite the contrary,\" Arek said in his loud laugh to Stephen. \"I am prepared to double my offer for the girl and if she dances the whip dance tonight as I have so graciously suggested to Kolton my offer my triple.\" He continued to laugh at the stunned look on Stephen's face. \"Don't look so stunned my friend. We all have our joys in life. It just happens that yours and mine take a similar path.\"\n\n\"I am unsure if her training, thus far, has included the dance of the whip,\" Stephen said showing where his concern lay. Bella had disappeared into the kennels when they had arrived back, and as he looked toward the kitchen once again, she had still not reappeared. It was still early, and she would not be required for some time, yet Arek's disclosure had caused him some concern.\n\nWithin Kolton's study Bella knelt beside Nyx and chewed on her lip. As far as she could tell she wasn't in any trouble, but she had difficulty hearing the hushed conversation of Kolton and Mike as they continued to look at the girls. \n\n\"I was surprised last night with her abilities, especially for one so new to Gor,\" Kolton said. \"Steelheart appears to spoil her though. She will have a better opportunity to embrace our lifestyle when he leaves her with the men who know how to treat a spoiled girl like that.\"\n\n\"Her time here is only temporary,\" Mike reminded the older man cautiously. \"She is not a girl you can claim, steal or buy from Steelheart.\"\n\n\"I am aware, but should she come to know her place and embrace it, she will stay and accept a true Gorean collar,\" Kolton said unmoved by Mike words. \"I have no need of another slave. Personally I blieve her to be a small and weak slave but there are some interested men who could invest the time needed to show her the true value of a good slave in our world.\" \n\nMike said nothing letting the old man speak what was in his mind. Someone the old man liked and respected had asked for the girl no doubt but this girl was too well protected by powerful men to make keeping her here longer than the two weeks even an option. Perhaps they had been wrong to hid her identity from the gathering. Kolton sometimes forgot that he did not rule all men as he ruled here in this home enclave. \n\nConsidering what he knew of the men gathered thus far he could think of three possibilities as aggressive suitors for a slave with the burgeoning service and dance skills Bella had shown last night. Of those three, only one would fully respect the collar she now wore and the protection it should give to her. \n\nHe may not approve of the lifestyle and choices Bella enjoyed at present, but he felt an obligation to Mel and the men of his inner circle to protect her while she was in his care. Mike determined to manoeuvre things to make it difficult for the two less than ideal candidates who may be behind Kolton's musings to monopolise all of her time here.\n\n\"She will perform the dance of the whip tonight. I will give your girl some time to prepare with her while I meet with Thalia to discuss preparations for the evening,\" Kolton stood from where he had been leaning against the desk and exited the room.\n\n\"I need to speak with Stephen,\" Mike said abruptly, \"Stay and go through your dance here until I return for you.\" He too left the room, and Bella turned to Nyx with a worried look on hr face.\n\n\"Don't worry you can do this, we did it for fun remember, the whip with the five short tails?\" Nyx tried to jog Bella's memory.\n\n\"Yes, the soft leather one, stings without cutting into the skin,\" Bella smiled, \"Makes a loud crack too.\"\n\n\"Now the key is to love the leather enjoy it in the beginning, stroke it then let the tails slide over you like a lover's hand. About halfway through or a little less turn the dance into a story of being dominated by it and when you crack it really crack it. Be afraid of it as a punishment. If you can take it let the marks show on your skin and even cry, they love that type of commitment in the dances. They will see that as a display of your desire to be submissive to any and all of them. In Gor all men have the right to wield the whip if you are not pleasing, not just your Master,\" Nyx explained. \n\n\"When you start tap your heel so the drummer can pick up the beat for you. Keep the story you are dancing in your head and you won't be wrong no matter how you dance it,\" she smiled. \"The best thing about Gorean Dance is there is no truly wrong way as long as you stick to the story of the dance. This dance is about being submissive not only to one man but that any of them could be your Master if they are strong enough to subdue you.\"\n\nNyx continued to coach as Bella pulled a few moves together. By the time Kolton arrived Bella was both anxious and excited, buoyed up by Nyx's constant praise of her talents. Out on the deck Stephen waited impatiently for her arrival considering carefully what Mike had told him. Mike had suggested it may be easier and safer to publically hand over her safe keeping to one of the men who did not own a slave at present before he left. Stephen could see the merit of the idea but was loathe to leave her at all, let alone hand her directly to someone and give them his blessing in his absence. He had forced himself to recognise, that with this additional information that if he did not he could make the stay here infinitely more difficult for Bella.\n\nHe felt relief when she finally appeared on the deck to serve him. And as he sent her to fetch him ale he found Arek appeared in the seat beside him. \"I see your girl had finally appeared for the evening, I was about to check the infirmary for her,\" he laughed quietly reminding Stephen of what he had witnessed earlier. \"We can dispense with the formalities if you like and I can offer triple my original offer without seeing her dance with the whip a I already have a fair idea how that will go,\" he grinned.\n\n\"So good of you my brother, but as you made no formal offer, triple nothing still amounts to nothing,\" Stephen laughed good-naturedly. He liked Arek and had been close to him during his time as part of the enclave.\n\n\"Ah, but therein lies the rub. We don't have many new girls come to us these days and if rumour can be believed this one is just passing through briefly. Surely you wouldn't expect me to pay more than I have offered for such a fleeting affair,\" he smirked as Stephen eyed him. \"You were never much of a sharer brother, but with the vultures circling, I could be the best choice. Let's call it a short term lease and I think you will find my offer quite reasonable.\"\n\n\"Mik-Hail has spoken with you I assume,\" Stephen finally made sense of the conversation.\n\n\"He has,\" Arek nodded. \"I had guessed as much though. It is no secret among the club members, who she is. I may not venture into town much but I keep abreast of current news. That's a well-connected girl you you have in your collar. I doubt I could afford her even were I to make a serious offer. Still there is more than one way to win a slave.\" He laughed heartily as Stephen stiffened at his words.\n\nThe night was busy for Bella as men came and went from their small circle, and she offered each of them service most of them taking advantage of being served by Steelheart's new girl. She had seen snatches of another girl dancing but had been unable to stop long enough with a clear view of the sand circle to truly take it in. The girl had a tall, willowy frame much like Elena and Bella wished she could have watched the whole performance. It was late when Stephen was called to speak with Kolton, and she had followed him and settled beside his chair.\n\n\"No girl,\" Kolton had snapped. \"Here,\" he pointed to a spot on the floor in front of him. He waited somewhat impatiently until she settled to the spot where he had pointed. \"I want you to perform the dance of the whip,\" he said without preamble.\n\n\"Might I be permitted the use of your slave whip to perform for you, Master?\" Bella asked softly\n\n\"You may use my whip, slave,\" GreyHawk, the kennel master stepped forward releasing the whip from his belt. Bella crawled toward him and gingerly took the handle of the proffered whip from the man. Not daring to look up at Master Kolton she retreated before standing and making her way to the circle of sand that was the dance pit.\n\nStanding with her legs parted and her hands held before her. She ran them over the blades of the five tailed whip, enjoying the feel and soft scent of the leather. She relaxed taking a breath and letting her hands drop to her sides feeling the supple leather caress her thigh. Tapping a slow beat with her heel almost silently in the sand she heard the drummer pickup the beat for her and let a soft smile lighten her face.\n\nPulling the whip up along her thigh she swayed to the beat and an unheard melody that played in her head. She let the tails caress over her hip and across her belly twice pulling the camisk to gather in the middle of her belly and be held tightly by the belt. She followed the same swaying motion of the whip behind her to expose the flesh of her thighs and hips and a generous portion of her ass along with the sides of her now only partially concealed breasts.\n\nContinuing to caress the exposed flesh with the leather of the whip she drew herself up to her toes and began to spin. Tilting her head back and allowing her long curls to fly around her shoulders and face as the whip swished through the air almost whistling as she spun opening her arms wide. Slowing the dizzying spin she withdrew her arms forward as if in an embrace and the whip wrapped it's length around her body with its first loud crack against her pale skin.\n\nShe gasped in feigned surprise as if just discovering the whips true purpose. Drawing the whip to caress her belly and breasts she lowered her head to kiss the handle drawing the long hard surface across her lips as her hips continued to sway to the beat of the drum. As if caught in a forbidden act her arm quickly flashed out and moving again in a pirouette the whistle of the leather sounded as it wrapped her in its embrace again.\n\nFollowing a similar pattern, she let the whip caress her as it fell from her body and she danced with it, softly holding the tails and letting them fall through her fingers. She pulled it to her cheek in an act of affection and drew it down over her throat, breast and belly. Drawing the blades through her fingers she let them fall to caress her inner thigh allowing the movement to disturb the narrow placement of the camisk and give any Master close enough a sneak peak at her true slave heat. She let out a soft purr and began to pirouette again the whip alternately caressing and whipping her body as several cracks reverberated around the deck as she spun first one way and then the next. She stopped near the post that stood in the middle of the pit her chest heaving as she panted with her exertions.\n\nBella's hips began the gentle sway to the beat again as her hand reached out to caress the pole, her fingers trailing up and down the pale wood. She stepped forward until she was pressed up against it and with a quick deft movement embraced the pole, the whip singing through the air to crack against her ass leaving the mark of its bite and her own small whimper in the air.\n\nLifting her leg to encircle the post, Bella leaned back as if away from her own embrace tangling her hands within the blades of the whip and trapping herself there in an arched position. To further enhance this position she leaned her head back making her hair cascade toward the sand catching the firelight giving it red hues. Her hips continued to sway making her gyrate as if writhing against the post. Her hand slipped and holding the post with her leg only the blades of the whip cracked loudly against the post as they sailed past it to her body softening the blow she might have otherwise received. Bella cried out in a gasp as if she had been stung hard by the loud crack of the whip.\n\nShe bit her lip and thinking of Stephen leaving andbeing left alone with these strangers her eyes becoming glassy with unshed tears as she reached up to right herself. She moved to embrace the pole in such a way that sent the whip flying once again through the air around the post to contact with her ass. Spinning Bella freed herself from the post pirouetting and moving back towards the edge of the circle dancing to the beat of the drum and the crack of the whip until she fell to her knees at the edge of the circle.\n\nShe reached forward the whip in her outstretched hands and her eyes lowered as she whispered breathlessly, \"La Kajira.\"\n\nGreyhawk stepped forward and took the whip from her hands nodding and patting his leg in appreciation of her efforts as the foot stomping salute she had encountered the night before occurred again.\n\n\"You may return to your Master girl, you have danced well and I am pleased,\" Kolton intoned.\n\nBella moved to Stephens left side and felt his hand immediately tangle into her hair, petting her as if to calm a skittish animal. \"You make me proud, little one,\" he murmured in a low tone and she peeked up at him noting the smile on his face.\n\n\"I would make your move before another does,\" Mike nodded his head toward Greyhawk who was in conversation with Kolton. Stephen had seen the danger as the whip had been passed at the beginning of the dance and had to agree that the less time Bella spent under Greyhawk's personal care, the better. He was loyal to Kolton and ran the kennels with a practised ease but otherwise he was a self-serving bastard that revelled in having all of the house slaves beholden to him.\n\nObviously the name Steelheart did not carry the weight it once had with the men here and Stephen could see that Mike was right to have concerns about Bella's welfare over the coming week. It was rare to have a collar removed by anyone other than the Master and in those few cases he knew about it was generally due to a death, metaphorical or otherwise. Greyhawk though could be unscrupulous and as Stephen was no longer viewed as a permanent part of this lifestyle, the law could get blurry and Greyhawk would be one to take advantage of that.\n\nStephen wasn't sure that he liked the idea of handing her well-being over to Arek either and scanned to room for an alternate choice. Knowing he would never find anyone he would willingly hand her over to he reasoned that with Arek's knowledge of who she was and what that meant for her future, that he was the lesser of two evils."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "gor",
        "slave",
        "serve",
        "dance",
        "master",
        "whip",
        "submission"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/possessing-bella-ch-13"
}