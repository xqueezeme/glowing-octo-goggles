{
    "title": "Nick's Favorite Summer Vacation",
    "pages": [
        "Author's note: This is my submission for the Summer Lovin 2021 contest. If you enjoy it, please take a second to vote and comment. I greatly appreciate it. A friend that is accident-prone inspired this story. He claims the events are mostly true. The people and places were renamed for that reason.\n\n...\n\nIt was finally my summer to get away from my family, be my own man, and try solo camping. Don't get me wrong. I love my parents. They're just boring as hell and insist I go camping with them every summer. I love camping in July and swimming in the lake. We've been taking family vacations since I was five. Now that I'm twenty-one, I plan to take myself, a bottle of Jack, some meager supplies, a compass, and a map into the woods for a week and do whatever the fuck I want. To me, that sounded like the best summer vacation ever. I needed to rediscover life after a failed attempt at college life and a failed attempt to keep a college girlfriend. Joining the Marines was looking lucrative to me at that point, but I've never been good with commitment. The only sport I excelled at was swimming, but my poor grades got me booted from the swim team. I decided I would take some time to get to know myself before officially abandoning school and entering the daily grind. I told my buddy George the area I would be hiking in. If I didn't return after a week, it was his job to recover my tattered, bear-eaten carcass and return it to my family.\n\nMy first goal was to hike deep into the woods to get far away from every camper within a ten-mile radius. There was a secluded lake that took a day and a half of brutal hiking to reach. I parked my pickup in the lot beside the ranger station and retrieved a parking permit from a helpful ranger inside. The rangers warned me to be careful in the High Lake region. They claimed to lose three or more hikers there a year. They didn't all die. Most of them got lost and had to be rescued when they never returned to retrieve their vehicles. I was determined not to embarrass myself and get completely lost, but I was no stranger to humiliating mistakes. So, if I did get lost or injured, I would take my lumps and a helicopter ride back to civilization.\n\nI was psyched and daydreaming about skinny dipping in the lake as I left the main trail and headed north. I pushed myself hard all day, only taking short breaks to hydrate and snack on granola. The temperature was in the nineties, and I was working up a sweat. The woods smelled heady and brought back many happy summer memories of camping with my parents and my high school buddy, George. George and I spent a lot of time ogling cute girls by the lake more than anything else. Then dad would call us to the campfire for some delicious burgers and hot dogs. I suddenly missed my parents. I stopped to think about them as night began to fall. We hadn't seen each other in four months. After leaving campus, I drifted about looking for a job. I still planned to go camping with them again later in the summer. That would be my opportunity to tell them about my plans to drop out of college. So, I had that family drama to look forward to if I survived my solo trip. I was considering faking an injury for sympathy as I searched my backpack for a can of beef stew. Upon finding it, I realized I forgot to pack my can opener.\n\n\"Shit... good going, Nicholas. Always ruining my awesome plans,\" I grumbled at myself. \"Fuck. What do I do now?\"\n\nHad I been thinking more about survival than skinny dipping, I would have brought pull-tab cans. It was too early to bust open the dehydrated noodles. My mom was the brilliant one that always remembered the important camping shit. I suddenly missed her even more. That's when I remembered my dad using his pocket knife to open a can when he couldn't find the can opener while mom was visiting grandma. I quickly dug mine out of my pocket and proceeded to stab my soup. I managed to get the soup open enough to eat it. I even sliced my palm open in the process.\n\n\"Fuck!\" I yelled and dug in my bag for the first-aid kit.\n\nI quickly discovered I had failed to pack that too.\n\n\"Well shit. At the rate I'm going, I'll be dead by tomorrow afternoon,\" I grumbled as I pulled a sock out of my pack and used it as a makeshift bandage.\n\nAfter more cursing and grumbling, I settled down and ate my tepid stew. The food and rest lifted my spirits and brought my wits back. I opened my bottle of whiskey early and used it to sanitize my cut before I wrapped it tighter with the sock. I had planned to save the whiskey as a reward to myself for reaching High Lake, but avoiding infection was more important. I also enjoyed a little whiskey to help me sleep after an exhausting day of hiking.\n\nThe next morning was cool and misty. Sudden ravenous hunger kept me from enjoying it. My break-neck pace the previous day was taking its toll. I scarfed down more granola bars and water before I packed up and headed north. My damaged hand was burning like mad three hours into the hike. I sat down for an early lunch and doused the bloody cut with a little more whiskey. I also took a few sips to raise morale. I could tell by the steep terrain that I was about three hours away from High Lake. If I kept up a hard pace, I could reach the gentle slope on the east side of the lake a little past midday. I was more than ready to set up a permanent camp and rest, but the Widow Maker Ravine was resting between me and my destination. The rangers had clearly warned me about that area. The smooth rocks often sent people sliding fifty feet into the shallow stream below where they would break a foot or an ankle. It was the first place the rangers searched when hikers went missing. So, if I fell, I would be there for five days before anyone came looking for me.\n\nAn extra twenty minutes of rest was in order before I went any further. When I finally stepped out of the trees and peered down into the ravine, I was startled and impressed by it. The sheer granite walls were sparkling in the midday sun as they rushed down to a frothy white stream below. That perilous view would be on my left for the next two hours as I made my way north. The map pointed out a few areas where the ravine walls came together enough for a person to jump across it.\n\nThe temperature soared as I carefully crept along the edge of the ravine, keeping a close watch on my footing. The mountain to my right was blocking the breeze and collecting heat with its exposed stone. I would be hiking in the sun until I reached a crossing point. I suddenly wished I had brought a hat to keep the sweat out of my eyes as I scaled boulder after boulder. My hand was hurting worse than it did since I sliced it open thanks to my profuse sweating. Blood was dripping off the sock-bandage and onto the boulders where I touched them, leaving a tasty trail for a bear to follow. I was shaking with fatigue when I finally found the first crossing point. I hadn't felt that spent since the torturous endurance swimming trials of my freshman year. I was proud of myself for busting my butt for the past two days, but I also regretted it as my head ached and spun. The blazing sun wasn't helping my disoriented state as I stared at the six-and-a-half-foot gap between the walls of the ravine. An inviting, shady forest lay beyond the fifty-foot drop, but a watery grave full of jagged rocks lay below it. I sat on a sun-scorched boulder to rest and look at the map. It recommended skipping the first gap and hiking another half hour to a smaller one.\n\n\"Fuck that,\" I grumbled and shoved the map back into my pack.\n\nI begrudgingly stared at the gap for many minutes. Under normal circumstances, I would have jumped it already. It wasn't that big, and I was a tall dude, but I was dead tired after climbing rocks in burning heat for the last two hours. The cliff I was perched on had no room for a running jump. Besides, I was a swimmer, not a jumper. After many minutes of deliberation, I decided to throw my backpack across first, relieving myself of forty pounds. That made a world of difference. It also committed me to jumping the gap or abandoning my supplies for a few hours. I took a deep breath and shook out my arms, like that would help in any way, and threw myself body and soul into the jump. To my surprise, I cleared the gap with a few inches to spare. My momentum got me into trouble at that point. I hit some loose dirt, and my foot slid out from under me. I stumbled down the slope into the woods, barely missing a large rock with my head before I skidded to a stop.\n\nI lay in the cool shade of the trees for a moment, thankful that I didn't die or severely injure myself. A branch scraped my side through my shirt. I could feel it bleeding, but it didn't hurt much. So, I climbed to my feet, dusted myself off, and retrieved my pack. I discovered the true casualty of my crossing at that point. The whiskey bottle had broken against the rocks when I tossed my pack. The most expensive golden alcohol I had ever purchased was now dripping down my leg.\n\n\"Fuck!\" I yelled and opened my pack to see the severity of the damage.\n\nTo my relief, only the top of the bottle broke. It was a clean break into two pieces. The remaining whiskey was salvageable. I finished off my first water bottle and used it to rescue what was left of the whiskey. I should have put the alcohol in a plastic bottle before the journey. It would have eliminated some weight and risk, but I wasn't clever enough for that, apparently. I had to continue my journey down the slope, smelling and feeling like the end of a wild Friday night.\n\nAn easy twenty-minute hike was all that was keeping me from a refreshing dip in the secluded mountain lake. Then I would set up a proper camp and relax for the remainder of the week. As I walked, I noticed the heat wasn't letting up, and a throbbing headache was making me extra dizzy. I wasn't feeling well at all. My arms and legs felt like they wanted to cramp. I figured the two hours of boulder climbing in the sun had taken its toll. Then I felt something dripping on my leg again. I cursed and looked down, expecting more whiskey, but I saw blood instead.\n\n\"What the fuck?\" I grumbled as I felt the side of my shorts and shirt.\n\nMy clothes were sticky with blood. The scrape was obviously worse than it felt, and that sudden realization made my stomach turn sick.\n\n\"Oh fuck,\" I breathed.\n\nMy head was spinning as I removed my pack and dropped it on the ground. Then I leaned forward and rested my hands on my thighs, hoping the sudden wave of nausea would pass. My new goal was not to vomit. I needed to check my side, but my head was spinning too badly to even move. I closed my eyes, took a few deep breaths, and started counting. By the time I reached fifteen, my stomach had settled, and I could breathe easier. I straightened up and opened my eyes, and to my astonishment, I met the gaze of a beautiful dark-haired woman. She was standing twenty feet in front of me, and she was mostly naked. Her gorgeous breasts stole my attention for a moment. They were plump, round, and perfect in every way. Her skin was olive in tone, and all she had on were frayed denim shorts. They sat low on her slender waist and hips. Her long dark hair was draped over her right shoulder, and she was staring at me with the biggest dark eyes I had ever seen. It was like someone cloned a young Elizabeth Taylor and added a little bit of Megan Fox into the mix to create a seductive masterpiece.\n\n\"Are you alright?\" she asked as she observed the blood dripping down my leg.\n\n\"I... um... I'm not sure,\" I breathed as my vision went a little blurry.\n\nThe world suddenly decided it wanted to spin at that point, making me stagger backward. A painful thump later, everything went black. I'm not sure what happened after that. I woke when something cool and wet was laid over my forehead. My eyes eased open to observe blurry figures leaning over me. Another cool, wet cloth was laid over my neck and chest, and I moaned in relief. My skin was painfully hot.\n\n\"Thank God, he's awake,\" whispered an anxious female voice.\n\n\"Seriously. Hey, can you hear me?\" asked a second female voice as a soft hand patted my right cheek.\n\n\"Huh? Yeah... what happened?\" I groaned as I reached up and rubbed my eyes, hoping to dispel the blurriness.\n\n\"Heat stroke, probably. Have you been drinking anything besides alcohol, dumb ass?\" scolded one of the women.\n\n\"Tiff, be nice. He's injured. Besides, the smell is coming from his backpack, not his breath,\" explained the woman closest to my head.\n\nSpeaking of smells, she smelled rather heavenly. I stared at her blurry figure for a few seconds, and her beautiful dark hair and big brown eyes came into focus. I was disappointed to discover her perfect tits hidden under a faded white t-shirt. I could still see her nipples through it, at least.\n\n\"I don't have to be nice. He invaded our campsite and forced us to put on shirts,\" Tiff grumbled as she pressed something against my injured side that burned like hellfire.\n\nI gasped and cringed away from it, but hands grabbed me and held me still.\n\n\"Don't squirm away. It's just rubbing alcohol,\" Tiff sighed.\n\n\"Fuuuck,\" I whimpered as it burned for many agonizing seconds.\n\n\"Damn, dude. You should have stayed home. Solo hiking is obviously not your thing,\" Tiff chuckled.\n\nI couldn't disagree with her at that point. I took a few breaths as the pain in my side began to ease. Then I looked down to observe the young woman that was torturing me. She was a cute blonde with big blue eyes and short hair cropped just below her chin. She wasn't as slender as her dark-haired friend, but she was still hot. Her breasts were exceptionally robust under her faded t-shirt. In spite of my agony, I couldn't complain about the unexpected company.\n\n\"You're right,\" I whispered through parched lips. \"I'm at home in the water. Swimming and kayaking are more my thing. What's your name?\" I asked as I met the dark-haired woman's gaze.\n\n\"I'm Katerina. Kat, for short, and this is my best friend, Tiffany. What's your name?\"\n\n\"I'm Nicholas or Nick. Sorry I invaded your campsite. I wasn't expecting anyone to be out here.\"\n\n\"Neither were we,\" Kat grinned as she searched my eyes.\n\nI was getting a flirty vibe from her, and I liked it.\n\n\"I heard cursing and yelling earlier,\" she continued, \"so I strolled over to see if anyone had fallen into the ravine. Did you fall in and climb back out?\" she asked as she picked up my hand and showed me the fresh bandage she had applied.\n\n\"I jumped over it and fell down the slope. I broke my whiskey bottle when I tossed my pack over. That's where the smell is coming from. Thanks for helping me. You two are good at this,\" I noted as I examined their work. The wrapping on my hand was perfect.\n\n\"We should be. We're senior nursing students,\" Tiffany grinned.\n\n\"Damn, that's really lucky for me. Thank you,\" I sighed and started to push myself into a sitting position.\n\nKat helped me sit up and offered me a water bottle. I took a gulp and was pleased to discover it was a fruity sports drink.\n\n\"Don't get up yet, or you'll probably fall down again. Get some electrolytes back into your system before you stand. Drink all of that,\" Kat ordered.\n\nI happily obeyed as Tiffany patched up my side. The wound wasn't deep. It looked worse than it was and bled enough to scare me. I felt better after my unexpected nap.\n\n\"I guess you two were doing what I was planning to do, camp in a secluded area and go skinny dipping every day,\" I smirked as I glanced between them.\n\nThey both grinned and exchanged amused smiles.\n\n\"We were, then you interrupted us,\" Tiffany sighed.\n\n\"Sorry. I'll hike to the other side of the lake and leave you two alone.\"\n\n\"You don't have to rush off. I want to keep an eye on you today, at least. Heat exhaustion and heat stroke are pretty fucking serious,\" Tiffany scolded as she took the wet towel off my neck and pour fresh water on it.\n\n\"Thank you,\" I sighed as she wrapped it around my neck again. It felt cold enough to make me shiver. \"How did you get cold water out here?\" I asked in confusion.\n\n\"It's not cold. You're burning up. That's lake water.\"\n\n\"Holy shit... no wonder I passed out.\"\n\nTiffany and Kat continued to scold me about my poor hiking practices as they tended my injuries. I was really enjoying the attention from the beautiful women. After an hour of resting and re-hydrating, they helped me off the ground and walked me to their campsite. Kat smiled more often than she spoke. Tiffany scowled as often as she spoke. Their personalities were as different as their looks, and I really liked both of them. They were older and smarter than me, that was for certain, and they truly saved my life. I grew up in the south and never experienced a heat injury before, but I was usually around smarter people when I was overexerting, and they would remind me to rest and drink. I was beginning to think I needed a life coach, or maybe a really clever smartwatch to keep me out of trouble.\n\nKat ordered me to strip down to my underwear before she parked me in a folding chair in front of their green tent. Then the ladies brought me a big bowl of lake water and three small towels. Tiffany instructed me to continuously re-wet the towels and lay them on my head, neck, and chest until they no longer felt cool. If I didn't cool down more, they planned to take me to the lake and soak me in it. I sleepily watched them as they collected some simple fishing gear.\n\n\"We're having fish and potatoes for supper. You're welcome to the food if you can keep it down. Rest, stay cool, and drink. We'll check on you in an hour,\" Kat explained as she shook some powder mix and water together to make me another fruity drink.\n\nI noticed her eyes checking me out as she stuck the bottle in the left cup holder of my chair. Then she turned and sauntered towards the lake with Tiffany. I was glad I wore my black underwear. The color hid the sweaty bloodstains and helped me seem presentable. I smiled as I admired their tempting bodies from behind. The heat stroke was almost worth the new view. Solo camping was seriously overrated.\n\nI was half asleep when they returned to camp with a bucket of fish. Tiffany refilled my water bottle and pressed her hand to my neck to check my temperature.\n\n\"Good. You feel normal now. You'll likely survive the night,\" she grinned before she walked off to collect some firewood.\n\nKat was busy gutting the fish and marinating the meat. I was smiling as I watched her slender fingers work. She was kneeling on the ground with her long dark hair tucked behind her small ears. I really wished I could see her perfect breasts again. It felt like a crime to hide something so beautiful.\n\n\"How are you feeling?\" she asked when she noticed me staring.\n\n\"A lot better. Thanks to you and Tiff. Uh, did you two hike in from the south, too?\"\n\n\"We did. We took our time and did the hardest parts of the trail early in the day, so we wouldn't get heat stroke. How did you hurt your hand?\" she asked as she continued working.\n\n\"I cut it with my pocket knife while opening a can of stew. I forgot to pack my can opener,\" I confessed.\n\n\"Wow, Nick, I'm impressed you made it as far as you did,\" she chuckled.\n\n\"I'm not a complete screwup. I swear. I just don't think stuff through sometimes.\"\n\n\"I can tell. You look fit. What sport do you play?\"\n\n\"None at the moment. My grades got me kicked off the swim team. My dad's going to freak when I tell him.\"\n\n\"Oh, I see what's going on. You're on a soul-searching journey before you confront your parents about dropping out of college. Am I right?\" she grinned.\n\n\"How the hell did you guess that?\" I laughed in disbelief.\n\n\"I was in your shoes three years ago. Well, I didn't get heat stroke, and I didn't forget my can opener, but I wanted some time to think before I dropped all my courses. I left Tiff a note about my plans. She packed up and came out here to find me. She's a great friend. We sorta found each other on that first trip. Now we have a wonderful summer tradition.\"",
        "\"Wow, I'm glad everything worked out for you. It gives me hope for my situation. What did you mean when you said you two 'found' each other?\"\n\n\"Tiff is more than just a friend. That's what I meant,\" she said and looked at me like I was an idiot.\n\nI'm sure my mouth dropped open a little at that point while my eyes went wide. Then my thoughts were hijacked by images of Kat and Tiffany, pressing their beautiful tits together, kissing, and groping soft flesh in a fit of ecstasy as they shared a double dong in their tent. Then I got an erection. I was thankful Kat had turned her attention back to supper at that point. I nonchalantly held the water bottle in front of my crotch for the rest of the conversation.\n\n\"That's... really wonderful,\" I stammered while trying to pull my mind out of the gutter.\n\n\"I'm sure you think it is,\" she sighed.\n\n\"What do you mean by that?\"\n\n\"Your eyes almost bugged out of your head when I told you. Why is that?\" she asked as she looked at me with an eyebrow raised.\n\n\"Oh... right. Well, I think you and Tiff are absolutely gorgeous. I also thought you were checking me out earlier, and I have an impressionable mind. It jumps to the wrong conclusions really fast and gets me into trouble. I'm easily distracted,\" I rambled.\n\nI wasn't used to being called out on my perverted thoughts. Kat burst out laughing at that point.\n\n\"How old are you, Nick?\"\n\n\"I'm twenty-one as of last month.\"\n\n\"If you say so. I would have guessed eighteen. Do you have a girlfriend or boyfriend?\"\n\n\"I had a girlfriend for two years, but I let her down way too many times. So she dumped me.\"\n\n\"I'm sorry to hear that. You obviously have trouble remembering important things. Did that cause the breakup?\"\n\n\"Yep. I forgot her birthday... twice,\" I groaned in humiliation.\n\n\"Damn, dude. That's harsh,\" Kat sighed in pity for me and the people that knew me.\n\n\"Yep. I'm not proud of it. I seriously plan to change this summer, but it's getting off to a rough start,\" I sighed as I looked at the bandage on my hand.\n\n\"It's a learning process. Maybe you need a few rough starts to help you grow. Keep at it, Nick. You're cute and charming. There are plenty of women out there that will give you a chance.\"\n\nI smiled big after that compliment. I couldn't remember getting a compliment that good from someone that wasn't related to me. Kat looked at me and chuckled at my embarrassed grin. I was stoked to be making her smile so much.\n\n\"Thanks. Um... so, do you and Tiff live together back in the real world?\"\n\n\"Absolutely not,\" she said, shaking her head.\n\n\"Oh... why not?\"\n\n\"It's complicated.\"\n\n\"Complicated? You must be talking about our lives,\" Tiffany interrupted as she strolled back into camp with her arms full of sticks.\n\n\"A little. You don't mind, do you?\" Kat asked with a guilty smile as she met Tiffany's gaze.\n\n\"I don't mind as long as Nick doesn't tell anyone.\"\n\n\"I don't gossip,\" I declared. \"I usually can't remember things long enough to talk about them anyway. I swear,\" I said and held my hand over my heart.\n\n\"Don't worry. I believe you,\" Tiffany chuckled as she dumped the firewood into a circle of stones.\n\nShe sat down close to Kat and gave her an innocent, fast kiss on the mouth before she started working on the fire. It was really fucking hot and left me tingling. My heat stroke landed me in a situation I had often fantasized about. I found two gorgeous lesbians camping alone, then they brought me into their camp. I wasn't naive enough to think it would play out like my fantasies. They selflessly saved my stupid life. I would be damned before I disrespected them by ogling their every move. I took a deep breath and concentrated on a boring math problem. It was a great way to get rid of an annoying erection.\n\n\"Are you feeling alright, Nick?\" Tiffany asked when she noticed my extreme concentration.\n\n\"Yes. Thank you. I'm just spent.\"\n\n\"Some food will help. Can you keep the fire going while I work on the potatoes?\"\n\n\"Sure,\" I said and climbed out of my seat and sat in the grass between the girls.\n\nTiffany handed me a stick, and I used it to push fresh fuel into the small fire she had started, slowly heating up the bigger logs at the center. It was a familiar and easy task that brought back more fond summer memories.\n\n\"Would you ladies happen to have marshmallows for dessert?\"\n\n\"Of course. That was the first thing I packed,\" Kat chuckled.\n\n\"Excellent,\" I grinned. \"So, uh... going back to our earlier conversation, why don't you two live together in the real world? You don't have to talk about it if you don't want to.\"\n\n\"It's okay. I don't mind,\" Tiffany sighed. \"My parents are super religious and super strict. If they knew Kat and I were together in a nontraditional way, they would disown me and forbid me to associate with my younger siblings. My little sisters mean the world to me, and I want to help them leave my parents in the near future so they can live with me. Thus Kat and I are keeping things on the down-low for a while. Besides, Kat still loves cock. I don't want to force her into an unsatisfying commitment.\"\n\n\"Tiff!\" Kat snapped as she looked at her friend in mortification.\n\nTiffany burst out laughing at that point. I bit my lip to keep from doing the same.\n\n\"I'm just being honest, and I've seen you admiring Nick already,\" Tiffany grinned as she began slicing potatoes into a pot.\n\n\"God, Tiff, you have to make everything awkward, don't you?\" Kat grumbled as she aggressively decapitated the fish she was holding with her paring knife.\n\n\"Sorry, Kat,\" Tiffany chuckled, \"you're way more awkward around men than me.\"\n\n\"Yeah, because you're butch and don't give a damn what they think about you,\" Kat huffed.\n\n\"Whoa now,\" I interrupted, \"please don't start fighting on my account. I'll leave you two alone as soon as I can stand without the ground shifting. Kat, you are not awkward. Tiffany, you are not butch. I think you're both gorgeous and wonderful, so please don't fight because I'm here.\"\n\nThey looked at me in astonishment for a moment, then they both burst out laughing. I was beyond confused and embarrassed by their reactions. At least they weren't angry with me.\n\n\"I like you, Nick,\" Tiffany smiled, \"I'm glad we found you. Don't be alarmed by our bickering. We do it all the time. It's just something we do. I bicker with my sisters too. You don't have any siblings, do you?\"\n\n\"No. I was a lonely, spoiled brat most of my life.\"\n\n\"That explains a lot,\" Kat nodded as she began hanging the fish skewers close to the fire.\n\n\"Do you have siblings, Kat?\" I asked.\n\n\"I do. I have an older sister and a little brother. We fight like cats and dogs, but I love them to death.\"\n\n\"Oh... damn. I'm glad I at least have my high school buddy. His name is Yuritov, but he likes to be called George. We rarely fight. He's the closest thing I have to a brother. He's a computer nerd. He also has a happy girlfriend, unlike me,\" I sighed as I poked at the fire.\n\nThe pleasant conversation continued as I helped prepare supper. Kat and Tiffany offered good advice on how I could improve my sloppy existence. They also recommended a fancy smartwatch to help me remember things and monitor my vital signs in hot weather. Once the fish and potatoes were devoured, Kat brought out the giant marshmallows. I contributed to dessert by offering the ladies some of my salvaged whiskey. Tiffany protested against me drinking a significant amount of alcohol after my heat injury, so I let her decide how much I should have. She poured about three shots each for herself and Kat, then she gave me a single shot. I didn't complain. I owed them my life.\n\nWe drank, laughed, toasted marshmallows, and told stories about our favorite summer memories. I enjoyed watching the girls get tipsy. They flirted more with me and each other as their drinks disappeared. I was really glad I saved some of the whiskey at that point.\n\n\"Ugh, I'm sweaty after eating. This thing is coming off,\" Kat mumbled as she pulled her shirt over her head and tossed it aside, revealing her gorgeous breasts again.\n\nHer skin looked ten times more arousing in the glow of the fire. I bit my tongue and looked at the dark woods around us, attempting to discourage another erection, but it was too late. I was feeling all kinds of good after a hearty meal and resting in their attractive company.\n\n\"Kat, you ho! Good thing I'm here to balance out your sluttiness,\" Tiffany sighed and proceeded to pull her shirt over her head as well.\n\nI couldn't stop my eyes from stealing a quick glance at the topless women to my right. After I caught an arousing glimpse, I couldn't stop myself from staring. They were both fucking hot in every way. Tiffany's tits were heavier and paler than Kat's perky breasts. Tiff's areolas were wide and pink, and the plump flesh around them helped them sway and jiggle when she moved. She carried a little more weight around her midsection than Kat, but it didn't look unhealthy. It was just enough to playfully squeeze if we were spooning, and that thought made me ridiculously horny. I looked at the fire and bit my tongue again. I seriously should have taken better care of myself and rubbed one out that morning. But, no, I had to almost kill myself trying to reach the lake as fast as possible for no fucking reason.\n\n\"Nick, are we making you uncomfortable?\" Kat asked when she noticed me scowling at the fire.\n\n\"No. Well... a little... but not in a bad way,\" I stammered. I was nonchalantly using my arms to hide the raging erection pressing against my underwear.\n\n\"Oh, we're making you uncomfortable in a good way?\" she grinned.\n\n\"Yes,\" I smiled.\n\n\"Really?\" Tiffany asked with an exaggerated drawl as she narrowed her eyes at me. \"Now I'm curious. Can dudes get so aroused that it becomes extremely uncomfortable? I definitely can. Kat helped me discover that.\"\n\n\"I would assume so. I haven't experienced it yet. But it's something I would definitely like to experience one day,\" I shrugged.\n\n\"Obviously,\" Tiffany scoffed. \"Cocks are so different from pussies. I just don't understand what male pleasure is like. In spite of being a lesbian, I did fuck a man a few years ago. It was pure curiosity on my part. I can understand why Kat enjoys a cock in her cunt, but it just wasn't that great for me. The guy didn't really turn me on like Kat can,\" she sighed as she reached over and grabbed Kat's small chin.\n\nI watched in admiration as Tiffany pulled Kat forward and kissed her luscious mouth. My insides tingled when her hand cupped Kat's left breast and squeezed it. I was beginning to think Tiffany intended to make me extremely uncomfortable with arousal.\n\n\"Uh, would you ladies like some privacy? I hate being the odd man out,\" I noted, hoping they would and wouldn't send me away.\n\n\"I don't mind an audience. Do you, Kat?\" Tiffany asked as she drew away from her friend.\n\n\"I guess not. Besides, I like Nick. I don't care if he watches us,\" she grinned as her big dark eyes settled on me.\n\nI thought my ears had failed me at that point. I needed to be sure I was hearing them correctly.\n\n\"You two want me to watch you make out?\"\n\n\"Wait a minute, slow down, dude,\" Tiffany chuckled. \"We're not offering to put on a show for your personal enjoyment. We like to openly display our affection when we're on OUR summer vacation. We don't mind you watching when we kiss and stuff, but don't assume we're doing it for you,\" she said and rolled her eyes.\n\n\"Oh, I knew that. I was just... trying to understand your expectations,\" I stammered, fearing I had offended Tiffany.\n\n\"Way to go, Tiff. You made it awkward again,\" Kat sighed, shaking her head.\n\n\"I know. I don't like vacation-crashers enjoying our vacation at our expense. Nick is a freeloader with nothing to offer, remember?\"\n\n\"That's not entirely true. He brought some good whiskey, and he...\" Kat trailed off into a whisper, finishing her statement close to Tiffany's ear.\n\nA few seconds later, Tiffany burst out laughing at whatever Kat had told her. I was watching the exchange with an eyebrow raised. Even in the firelight, I could tell Kat was blushing and irritated by Tiffany's reaction.\n\n\"Oh boy, would you like to know what Kat really wants, Nick?\" Tiffany announced as she looked at me and grinned.\n\n\"Don't you dare!\" Kat snapped and clamped her hand over her friend's mouth.\n\nTiffany jerked Kat's arm down and took a deep breath, preparing to yell out Kat's secret. Kat acted fast and clamped her other hand over her drunk friend's mouth before she could speak, then she pushed her backward in the grass. Tiffany was seized with laughter again as Kat climbed on top of her and held both of her hands over her mouth. Their breasts were heaving from the excitement of the wrestling as their bodies squirmed against each other. It was the most immature, funny, and outright-erotic thing I had ever witness. I wished I could join them. I chewed my lip and hid my erection as I watched their half-naked catfight. I could tell it was something they often did, and it was a bonding experience as much as it was a fight. Kat played dirty and started tickling Tiffany's side. Tiffany gasped and yelled with laughter as she attempted to squirm away. She eventually retaliated with her own tickle attack, sending Kat diving to the left to get away from her.\n\nTiffany quickly gained the upper hand and grabbed Kat's leg, keeping her from crawling away. Then she climbed on top of her and used her weight to pin Kat face down against the grass. They were both laughing themselves breathless as they fought. They had me laughing in spite of my eye-blurring arousal.\n\n\"How do you like that, bitch? Is the grass tasty?\" Tiffany yelled as she used her breasts to hold Kat's head down.\n\n\"Get off me, HO!\" Kat yelled. She was shaking with laughter as she used her feet to repeatedly kick Tiffany in the ass.\n\nI was laughing so hard at that point my side started hurting.\n\n\"Ladies! Please stop! I think my side is bleeding again,\" I laughed as I clutched my bandaged ribs.\n\nThey laughed even harder after my plea. Tiffany eventually relented, rolled off of Kat, and lay in the grass beside her to catch her breath. Kat spat grass out of her mouth as she pushed herself into a sitting position. She was still chuckling as she attempted to straighten her long messy hair.\n\n\"Thanks for saving me, Nick. I owe you,\" she sighed as she knocked bits of grass and dirt off of her cute face.\n\n\"We're even then. I haven't laughed that hard in years,\" I grinned as I leaned back on my elbows and relaxed my aching side.\n\nKat smiled as she looked me over. I watched her eyes settle on my erection. It was still pressing happily against my underwear. I quickly sat up and crossed my legs to hide it. Our eyes met a second later, and the intensity of her gaze aroused me to the core. Her eyes were naturally seductive and alluring. She had \"fuck me\" eyes if I ever saw them, and the effect was compounded by the firelight, her naked breasts, the whiskey, and the excitement of her battle with Tiffany. I would happily do it if she wanted me to. I quickly averted my gaze from Kat when Tiffany sat up and ran her fingers through her messy blond hair.\n\n\"I think I won that fight,\" she yawned.\n\n\"I agree, but that doesn't mean you can say what you were going to say earlier,\" Kat warned as she pointed her finger at her friend.\n\n\"I won't,\" Tiffany grinned and gave me a mischievous glance.\n\n\"Thank you. I want another marshmallow. Anyone else?\"\n\nWe all enjoyed another toasted marshmallow over the campfire and some friendly conversation. The topic eventually came around to where I would sleep that night. I had a small tent in my pack, but I didn't feel well enough to set it up in the dark. Kat and Tiffany offered to set it up for me if I could hold the flashlight for them. They cleared a small area of rocks and sticks on the opposite side of the campfire for my tent. They were sure to put enough room between their tent and mine to prevent me from eavesdropping. They set it up in less than five minutes and even spread out my sleeping bag inside it for me. I thanked them profusely for everything they did for me that day. Then I crawled into my tent and crashed. I was asleep within seconds of hitting my pillow.\n\nI woke a few hours later, needing to pee something fierce. My body was finally hydrated and ready to be rid of the extra fluids I drank. My muscles protested as I climbed out of my tent, but I finally felt steady. The moon was high enough to light my way over to a tree. I gazed at the stars through the leaves as I relieved myself. The cool night air smelled heavenly. The smell of the lake brought back wonderful memories of night swimming with George and our high school girlfriends. I suddenly wished George could meet Kat and Tiffany, but I was glad he wasn't there. He would have kept me from getting heat stroke in the first place. I chuckled at that realization as I headed back to my tent, but an arousing groan from the girls' tent stopped me in my tracks.\n\nI chewed my lip as I stared at their tent in the moonlight. The intense arousal I felt earlier reared its horny head again. I was extremely tempted to creep a little closer and listen, but the guilt that hit me after that thought ruined my excitement. I wasn't going to be a creep and eavesdrop on the women that saved my life, fed me, and nursed me back to health after I party crashed their vacation. I was a screwup for sure, but not a creepy pervert. So, I did what a gentleman would do. I marched back to my tent and masturbated to the memory of them wrestling topless by the campfire. Then I fell fast asleep.\n\nThe sound of my tent zipper sliding open startled me awake the next morning. My eyes flew open and met Kat's as she stuck her beautiful head in.\n\n\"Good morning. How are you feeling?\" she asked.\n\n\"Uh, great. Thanks to you ladies,\" I smiled.\n\n\"I'm glad. Um, Tiffany went to the lake to wash her hair and sterilize our morning drinking water. It will probably take her about thirty minutes. Then we'll make breakfast,\" she explained.\n\nShe seemed nervous as she spoke.\n\n\"That's great, but you don't have to make me breakfast. I was planning to leave you ladies alone this morning and hike to the other side of the lake.\"\n\n\"Yeah, about that... um, would you mind staying another day?\" she asked with a blush on her cheeks.\n\nMy brow creased as my heart rate ebbed upward.\n\n\"Why?\" I asked. My mind had already jumped to many arousing conclusions.\n\nKat's blush deepened as she searched my eyes. Then, to my astonishment, she climbed into my tent and zipped it up behind her. She turned to me and pulled her t-shirt off, revealing her beautiful breasts again. Then she stood on her knees and shimmied out of her shorts and underwear, revealing her neatly shaved mound and perfect thighs. My skin felt hot with arousal as she slowly climbed over me and pressed her lips to mine. An ache of pure want tingled through my insides as I tasted her sweet mouth and smelled her delicious breath. We collectively knocked my sleeping bag out of the way so we could embrace. Her skin felt ridiculously soft against mine. Her tits were warm as they pressed against my chest, and the heat of her crotch against my cock was the most arousing thing I had felt in months. I quickly shoved my underwear off my hips and kicked them off my legs. Kat got up on her knees and grabbed my cock. She guided it against her swollen wet lips, and I shuddered with tingles. She chewed her bottom lip and watched my eyes as she massaged her pussy with my tip. I could feel her moisture dripping down my shaft.\n\n\"I want you inside me. Is that okay?\" she whispered.\n\n\"Yes, do whatever you want,\" I whispered and gently thrust upward, parting her tight lips and making her gasp.\n\n\"Wait, go slow. I haven't fuck a man in two years. I'm out of practice,\" she smiled and slowly worked her pussy down on my shaft.",
        "I relaxed and let her go at her own pace. The heat and slippery wetness of her tight cunt were heavenly. My cock flexed happily as I watched it completely disappear into her body. She closed her eyes and made a cute o-face as she rocked herself on my meat. I reached up and squeezed her inviting breasts as she panted on top of me. Her nipples were hard and erect as I ran my fingertips over them. She moaned and placed her hands on my chest so she could ride me a little harder. I groaned as her ass bounced against my thighs, forcing my cock to hit deep inside her.\n\n\"Do you want me to thrust?\" I asked.\n\nI wasn't sure how much longer I could take her aggressive riding.\n\n\"Not yet. I'll be gentler if you need a break.\"\n\n\"I do.\"\n\nShe smiled and laid down on my chest so we could kiss more. After a minute, I gently thrust into her, making her groan. I fucked her slow and easy, getting us closer to climax. I was concentrating with all my might to keep from exploding too soon. I wanted to see her gorgeous body shaking with orgasm first.\n\n\"Mmm, fuck me a little harder. I'm almost there,\" Kat whispered as she rocked her hips against my pelvis, taking me deeper. It was maddening.\n\nI groaned and chewed my lip as I watched the pleasure on her beautiful face. She felt too good. Orgasm raced through my cock a second later. I grunted and thrust hard into her as pleasure tensed my muscles. My rhythm went shaky, but I kept it up. Her eyelids drooped as I filled her with cum, then she gasped with orgasm. She whimpered and twitched as her pussy tightened on my cock again and again. She kissed me as we rode the pleasure together. Then she smiled and relaxed on top of me. Our hearts were happily pounding against each other.\n\n\"Thank you, Nick. I seriously needed that,\" she whispered.\n\n\"You're more than welcome. Thank you, too. That was incredible,\" I smiled as I gently thrust into the slippery mess we made together.\n\n\"It was. Please don't tell, Tiff.\"\n\n\"I won't. What's going on with you two? Do you not love her anymore?\"\n\n\"It's not like that. I absolutely adore Tiff, but she doesn't have a cock,\" she shrugged.\n\n\"Oh... so you're NOT a lesbian after all?\" I asked in confusion.\n\n\"That's not what I meant. I love having sex with Tiff, but I also enjoy having sex with men. You were constantly making me horny yesterday, and you smell amazing. Like I said, I haven't fuck a guy in two years because I'm trying to stay loyal to Tiff. But I'm not horny for Tiff when I'm being aroused by a man. It's so unfair. Tiff would be a perfect lover if she had a real cock. Strap-ons don't do it for me. I always want to be close to her, but she can't satisfy me half of the time.\"\n\n\"Yikes... that really sucks for both of you... now I feel bad about what we did.\"\n\n\"You don't have to feel bad. Tiff told me three times already that I should fuck you if I wanted to. She knows I'm conflicted. So, I did, and now I feel guilty about it, but I also really enjoyed it,\" she sighed as she ran her fingers through my hair and squeezed my cock with her inner muscles, perking him up again.\n\nI moaned and gently thrust into her, making her moan too.\n\n\"Please fuck me again,\" she whispered against my ear.\n\n\"Gladly. How do you want it?\"\n\n\"Missionary,\" she said as she slid to the side and tugged at my arms, encouraging me to roll over on top of her.\n\n\"Classy,\" I smiled as I settled down between her legs.\n\nI guided my cock back into her cunt and thrust hard inside her, making her gasp. I loved the look of surprise and pleasure on her face. It made me feel very appreciated and extremely aroused.\n\n\"God, that's good,\" she groaned. \"Hold my shoulders and fuck me hard. I like it rough,\" she panted.\n\n\"Me too,\" I whispered as I wrapped my arms around her and held her tight.\n\nShe cried out in ecstasy as I pounded inside her while holding her tight against the ground so she couldn't move. The sound of her cries and the feel of her tight cunt were taking me to new heights.\n\n\"Do it slow and deep. I'm about to cum,\" she panted as she sank her nails into my arms.\n\nI groaned and pushed hard inside her, putting more pressure on the bottom of her cunt while using my tip to massage her bladder. My old girlfriend loved it, and Kat did too.\n\n\"Oh fuck!\" she cried and tensed with orgasm again.\n\nHer hips were jerking against mine as I steadily plowed inside her. Her cries and squirming were wildly arousing. I groaned a second later as an orgasm raced through my groin. I pushed deep and kissed her hard, working our tongues together as I filled her with more cum. She chuckled and moaned as she relaxed under me, enjoying the wet mess between her legs. After the last tickle of pleasure worked through my cock, I relaxed against her soft tits and smiled.\n\n\"Best camping trip ever,\" I groaned. I could easily fall asleep on top of her.\n\n\"Yep,\" she agreed and squeezed me tight. \"Thanks, Nick. This is nice, but you're really sweaty... and heavy.\"\n\n\"I know. I'm sorry,\" I sighed and rolled off of her.\n\nWe lay next to each other for a few minutes, watching the morning light grow brighter through the blue fabric of my tent.\n\n\"Kat, what did you whisper to Tiff last night before the fight?\"\n\n\"I told her you were making me horny,\" she sighed in defeat.\n\n\"Ah, well, you two were having the same effect on me,\" I grinned.\n\n\"I could tell,\" she chuckled.\n\nKat eventually sighed and sat up to find her clothes. I admired her beautiful body as she pulled her shirt and shorts back on.\n\n\"So... you want me to keep my mouth shut about this?\" I asked.\n\n\"Yes, please. I will tell Tiff what happened when I'm ready. Thank you again,\" she said and quickly crawled over to me for another kiss.\n\nI moaned softly as her tongue went into my mouth. By the time she pulled away, I was horny again. She escaped the tent without a word, zipping the flap closed behind her. I collapsed on my sleeping bag with a big grin on my face, unsure how an idiot like me caught Kat's attention. Maybe she was simply attracted to self-destructive men, or she felt sorry for me after watching me stagger into their campsite on the brink of death. I hated the thought of leaving after what happened. Especially since Kat requested that I stay another day. Tiffany worried me, though. She was a force to be reckoned with, and she had every right to hate me at that point. I figured if I needed an excuse to stay, I could always give myself heat stroke again. I really hoped it wouldn't come to that, but that's how determined I was to stay close to Kat.\n\nI pulled on some shorts and crawled out of my tent to observe the sunrise. It was already sparkling on the lake to the east. I greeted Tiffany and Kat again with a hearty good morning. They were an attractive sight in their faded t-shirts and cut-off shorts. They were both sitting around a little butane burner, frying up pancakes and hash browns. They had already brewed a small pot of coffee. It all smelled heavenly in the morning air.\n\n\"Good morning, Nick,\" Tiffany smiled as she looked me over. \"You look better. I see sunburn on your cheeks and arms, but nothing too serious. How do you feel?\"\n\n\"Achy, but steady. I won't be doing any prolonged hiking today. Can I help with anything?\" I asked as I sat down close to them, playing up my pain with a groan and a wince.\n\nTiffany shook her head in disappointment. Then she crawled over to me and stuck her hand to my neck to check my temperature. I gave Kat a guilty look over her shoulder. She smiled and rolled her eyes at me.\n\n\"You don't feel feverish,\" Tiffany mumbled. \"Do you feel short of breath or have any sharp pains anywhere?\" she asked as she began feeling around my upper neck and armpits until she tickled me.\n\n\"No, what are you doing?\"\n\n\"Feeling for swollen lymph nodes. You have small cuts everywhere and two big ones. Also, severe dehydration can cause urinary tract infections. You don't want that painful mess while out in the middle of the woods. Can I check your groin?\"\n\n\"Why?\" I asked with an eyebrow raised.\n\n\"You have important lymph nodes there that will swell if you have an infection,\" she sighed as if I were an idiot.\n\n\"Sure,\" I stammered as I met Kat's smiling face over her shoulder again. I was suddenly regretting playing up my pain.\n\n\"Spread your legs and lean back, and be happy I'm not charging you for all this personal care.\"\n\nI gulped and did as she ordered. Then I shuddered when Tiffany's soft hands slid into my shorts between my thighs and began feeling around my crotch and the bend of my legs. The back of her hands and fingers were brushing my sack. I had a wonderful view down the front of her t-shirt. Her thick breasts were gracefully swinging just below her pretty face. Her blond hair was still wet and smelled absolutely delicious. I had to concentrate something fierce to not have an embarrassing reaction while her hands were in my shorts.\n\n\"Hmm, I don't like the feel of that,\" she mumbled as she pressed a tender spot on the right side of my groin.\n\n\"What is it?\" I asked.\n\n\"Your right lymph nodes are swollen. Infection is setting in somewhere. It might be small and nothing to worry about, but after what happened to you, it could be something unpleasant. Definitely take it easy today. I'll get the first-aid kit and treat your bigger scrapes again so I can check them for infection. Solo hiking is seriously not your thing, Nick,\" she sighed before she left to retrieve the kit from her tent.\n\nKat was chuckling as I looked at her in embarrassment.\n\n\"Sorry about that,\" she grinned. \"Tiff was born to take care of people. Her mom is a GP. I figured she would go that way too, but she stuck with nursing.\"\n\n\"She probably did it to stay close to you. I would have,\" I said with a shrug.\n\nKat gave me a bashful smile and nodded. Tiffany returned a few minutes later and began changing the bandages on my side. She grimaced at what she discovered.\n\n\"There is a lot of puss at the bottom of the scrape. There may be debris in it where the branch stabbed you. Does it hurt more here?\" she asked as she gently pressed on my lower back where I couldn't see it.\n\n\"Yeah. My whole side hurts, but it feels extra raw in that area. Can you see anything in it?\"\n\n\"Not at first glance. I hate to do this, but you need to let me deep clean it, and it's likely going to hurt.\"\n\n\"What do you need to do exactly?\" I asked nervously.\n\n\"Irrigate it with peroxide and alcohol while Kat shines our brightest flashlight on it. If I find something, I'll use tweezers to dig it out.\"\n\n\"That sounds awfully unpleasant. What will happen if I let it fester?\"\n\n\"Blood poisoning, gangrene, sepsis, cellulitis, necrotizing fasciitis, and a few other nasty things. They all can lead to a lot of suffering and death.\"\n\n\"Shit. Go for it. Do you recommend eating breakfast before or after?\"\n\n\"After. A lot of pain on a full stomach is a bad combination. Sorry,\" Tiffany said with genuine pity on her face.\n\nI nodded in defeat. I knew Tiffany wasn't torturing me on purpose. I had brought the pain on myself, and the girls were trying to repair the damage. I laid down on my good side, grit my teeth, and whimpered as they began cleaning and digging in the wound. I'll spare the excruciating details of having someone dig in an open wound without any pain reliever and while pouring stuff into it that burned like hellfire. I was sweating and wanting to vomit through most of it, but the results were good. Tiffany pulled a half-inch junk of tree bark out of my flesh and irrigated the wound. Then Kat reapplied bandages and helped me sit up again.\n\n\"Fuck, that hurt. I'm going to lie down for a little bit. I'm not feeling great,\" I mumbled and retreated to my tent to recover.\n\nThe nausea eased after ten minutes of lying completely motionless on my good side. I was considering an early morning nap, but Kat stuck her head into the tent and aroused me, I mean, roused me. She brought me a paper plate full of tepid hash browns and pancakes. It tasted heavenly. She informed me that she and Tiffany planned to swim and fish most of the morning, and I was welcome to join them. She gave me a wonderful kiss before she escaped my tent. I finished my breakfast and rested. Then I decided I felt well enough to join the girls by the lake.\n\nHigh Lake looked pristine, nestled in the small valley between pine-covered mountains. The girls were reclining on a smooth boulder with their fishing lines in the water when I arrived. I stepped out on the warm rock and sat next to Kat on the edge of her beach towel. No one said a word as we basked in the warmth and beauty of the morning. A light breeze stirred over the lake, adding shimmering ripples from one side to the other. The sound of water lapping against the rocks was all around us. The air smelled cleaned and a little wet, and it suddenly felt like my vacation had officially begun. Lakes had that effect on me. It didn't feel like summer until I could relax by a large body of water.\n\nThe fish weren't biting, so Tiffany and Kat stood and began removing what little clothes they were wearing. I watched their gorgeous bodies in admiration as they ran to the edge of the boulder and dived into the lake. I wished I could join them as they swam to the middle and back, but I was too banged up to enjoy it. Tiffany claimed I would likely be well enough to swim in two days if my infection cleared up, so I had that to look forward to. I honestly didn't mind. Watching them swimming naked was an arousing treat. The girls eventually returned to the boulder and helped me move the fishing gear and the beach towels to a shaded rock close by. The sun was getting too hot to enjoy as noon approached. We relaxed on the towels and chatted. The fish kept away, so we wrapped up our lake visit and began discussing lunch.\n\n\"I brought a variety of dehydrated noodles. I have beef flavored, chicken flavored, shrimp flavored, and pepper flavored noodles. Take your pick,\" I offered as we strolled back towards camp.\n\n\"Thanks. Beef flavored sounds splendid,\" Kat grinned.\n\n\"I have an onion we can chop into it for more flavor,\" Tiffany offered.\n\n\"Great! Bringing fresh veggies was a great idea,\" I noted.\n\n\"Yeah, it helps keep scurvy away,\" Kat chuckled.\n\nUpon arriving back at the campsite, we realized something wasn't right.\n\n\"Where the fuck is my tent?\" I demanded as I stared at the empty spot where it had been sitting two hours earlier.\n\n\"Oh fuck. Nick, did you leave a maple syrup covered plate in your fucking tent instead of tying it up with the trash away from the campsite?\" Tiffany demanded.\n\n\"Yes. My pack was in there too,\" I confessed.\n\nBoth girls sighed and shook their heads at me. A few seconds later, we heard the dramatic sound of fabric tearing. It was coming from the south. I paced in that direction for a few seconds. I stopped when I saw movement in the distance. The trees were mostly blocking my view, but every now and then, I saw sunlight reflecting on blue fabric as it was thrashed around. The rage that seized me at that point made me see red. A stupid bear was taking what little comfort and pride I had left and eating it for lunch. Without extra supplies, I would have to bum food from the girls, and that would force all of us to cut our vacations short. I was not going to let that happen without a fight. I grabbed the spit rod Kat used to hang the fish over the fire and turned to look at them.\n\n\"Ladies, stay quiet and do not follow me. Give me ten minutes to deal with that son of a bitch. I may or may not return. Do not follow me!\" I ordered before I dashed into the woods.\n\nI stayed in the grass to soften my footsteps as I approached the edge of the ravine. My rage didn't settle at the sight of a five-hundred-pound black bear sitting on my destroyed tent with its head buried in my backpack. The tiny metal spit I brought was useless against a beast that size. I tossed it aside, picked up a big-ass rock, and hurled it at the bear. I bashed the damn thing in the head with it, knocking it backward, and freeing its snout from my pack. The big plastic bottle that held what was left of my whiskey was stuck between its teeth.\n\n\"You drunk motherfucker!\" I yelled.\n\nI picked up an even bigger rock and rushed forward. The bear was still lying on its back, reeling from the blow to its head or the effects of the whiskey. I couldn't tell. It left its nuts on display for me to aim at. I didn't know bears could squeak, but that one did when I bashed it in the testicles with a forty-pound boulder. It swatted the whiskey bottle out of its mouth with its massive paw before it scrambled away in pain and terror. I watched as it tumbled backward over the rocky cliff and into the ravine. Picking up my leaking whiskey bottle, I stepped over to the cliff's edge and looked down. Forty feet below, the bear was clumsily crawling out of the stream, shaking its head like its ears were full of bees. I laughed and sat on the ledge to watch it turn in circles. It eventually realized it had no way to climb out.\n\n\"That's right, bitch! Get to walking! The exit is two miles downstream!\" I yelled as I opened my whiskey.\n\nTwo meager shots were left for my victory celebration. Tiffany and Kat stepped up beside me a minute later and looked into the ravine.\n\n\"Holy fuck,\" Tiffany gasped at the sight of the bear.\n\n\"No fucking way.... are you alright?\" Kat breathed as she sat down beside me and touched my arm.\n\n\"I'm pissed, but I'm fine,\" I said and offered her a sip of 'bear drool' whiskey.\n\nShe took it without a word and examined the mangled bottle. She shook her head and took a small sip before passing it back to me. I offered the bottle to Tiffany as she sat down with us to watch the confused bear.\n\n\"Thanks,\" she said and took a sip before handing it back.\n\n\"Sorry about the plate. I obviously won't be doing that again. Especially since my tent is destroyed,\" I sighed and finished off the whiskey.\n\nI tossed the empty bottle over my shoulder to join the rest of my destroyed stuff.\n\n\"Don't sound so gloomy, Nick,\" Kat said and gently rubbed my back. \"That was fucking awesome.\"\n\n\"You saw what happened?\" I asked as I looked at her with an eyebrow raised.\n\n\"We did,\" Tiffany answered. \"You looked like a psycho caveman beating up a bear with rocks because he stole your whiskey. It was hot, and that's a huge compliment coming from me,\" Tiffany chuckled.\n\nKat and I laughed at her comment. I was relieved they didn't hate me for endangering their lives.\n\n\"Thanks, Tiff. That means a lot to me. So much for our beef-flavored-noodle lunch,\" I sighed as I watched the bear start its journey downstream.\n\n\"Uh, a lot of the food is scattered but not torn open,\" Kat observed as she stood to look at the disaster behind us.\n\nWe followed her and began sorting through the wreckage. A pack of cookies and a box of brownies were missing, but the rest of my dried stuff was intact. My backpack was almost torn in two, but Kat claimed she could fix it with fishing string. The girls helped me gather up my stuff and the tattered bits of my tent so we could carry it back to camp. My sleeping bag was still in one piece. We discovered it and my pillow discarded in the woods. Kat went to work fixing my pack as Tiffany and I worked on lunch. Once our bellies were full of noodles, we examined my tent and decided it was too trashed to repair. The poles were busted, and the zippers were stripped. I was impressed with Kat's handy work on my pack. The new seams were almost invisible.\n\n\"Damn, it looks waterproof! Thank you, Kat.\"\n\n\"You're welcome. Please don't put it in the lake.\"\n\nWe spent a good chunk of the afternoon cleaning up the campsite and taking extra precautions with the food, supplies, and trash. I never camped deep enough in the woods to encounter bears. My parents frequented noisy, over-populated campsites that had parking lots close by. Kat and Tiffany gave me a crash course on how to avoid bear visits. They kept bear spray, air horns, and hunting knives in their tent just in case one did show up anyway. Storing anything fragrant, even toothpaste, in your tent could turn deadly in bear country.",
        "\"A bear's sense of smell is better than a dog's. So anything that smells needs to be taken far away from the campsite, so bears don't come into the campsite. Got it?\" Kat asked as she looked at me sternly.\n\n\"Got it. Poop and pee deep in the woods,\" I nodded.\n\n\"Bury it, too,\" Tiffany added.\n\nOnce my crash course was complete, it was time to fish for supper. Fried fish tacos were the main course if we could catch the ingredients. Tiffany revealed that she and Kat had put a bottle of their favorite champagne in the lake with a rock tied to it, and on taco night, one of them would swim down to retrieve it for supper. After we caught a bucket full of fish, Kat dived down and retrieved the bubbly. I was surprised to see it was a 1.5-liter bottle. We could all get spirited with that. The sun was getting low as we popped it open and passed it around. I was sure it cost three times more than my whiskey. After a few delicious swigs of the slightly chilled champagne, we went back to camp to make tacos.\n\nWe enjoyed chips and spicy salsa as Kat prepared the tacos with chopped onions, cilantro, and lime. I groaned with every bite. They were better than anything I ever had at a restaurant. Also, fish tacos and champagne were amazing together. Once the food was gone, we studiously cleaned up and moved smelly things away from the campsite. Then we sat on beach towels around the campfire to relax and finish off the champagne. The girls were looking hot as ever with their exposed breasts and neon pink bikini bottoms. Going shirtless looked better on them than me. They weren't sporting large bandages.\n\n\"Today has been wild and wonderful, thanks to you ladies, and dangerous thanks to me,\" I declared as I passed the champagne to Kat. She took a few gulps and passed it along to Tiffany.\n\n\"I'm not mad at you for any of it, Nick,\" Tiffany declared. \"Thanks to you, I've practiced wilderness first-aid, learned what kind of people I will be dealing with in the ER, and witnessed a handsome caveman defeat a bear with rocks. You have made this vacation memorable.\"\n\n\"I agree. Cheers to Nick, the Bear Nut Crusher!\" Kat declared and turned up the champagne.\n\n\"Thanks. You ladies have saved my life and made this the most arousing vacation I have ever experienced. I mean that as a huge compliment. I really hope I haven't disrespected you two with my horny ogling.\"\n\n\"Nick,\" Tiffany began, \"In spite of your mistakes, you're a great guy. You have been respectful and kind. Even when you were ogling our breasts, I could tell you were fighting your urge to stare so you wouldn't make us uncomfortable. You didn't make any derogatory comments about us. You owned up to your mistakes. You respectfully took our advice when we gave it. Then you fought a bear and won. It wasn't the smartest thing to run off and do, but you handled it well in the heat of the moment. I was literally turned on by it, and that confused me. Be proud of that,\" she grinned.\n\n\"Damn, thank you, Tiff. That was the best compliment of my life,\" I chuckled.\n\n\"I agree with everything Tiff said,\" Kat began. \"I also want to add my point of view. You helped me with something important, Nick. I've been scared for three years about this. You helped me realize that I can handle being an ER nurse. The instant I saw you in the woods, I liked you. I thought you were cute and sexy. Then I saw you bleeding. That made my heart drop. Then you passed out right in front of me, and that scared me half to death. But, I didn't panic like I feared I would. Instead, I rushed over and started helping you. My training kicked in. I determined you were overheated, so I pulled your water bottle from your pack and started pouring it on your head, chest, and neck. Then I made sure you were breathing and not bleeding to death before I ran off to get Tiff and the first-aid kit. I performed well in an emergency. I didn't know I could do that until you came along. I know what I'm praising wasn't intentional on your part, but thank you for being you,\" she said with a thoughtful smile.\n\nMy heart felt strange as I listened to her explanation and admired her beautiful face in the firelight. I had unknowingly helped her in a huge way just by being my normal idiot self. She made me feel good about my flaws. Without even thinking, I leaned over and kissed her soft lips. She wrapped her arms around my neck and held me tight as she worked her tongue into my mouth. Kat aroused me body and soul. I had never felt that way about anyone before. We pulled away a few seconds later, and our eyes jumped to Tiffany. She didn't look surprised or upset to see us kissing.\n\n\"Don't look at me like that. I'm not mad. I wanted to see you two kiss. It was hot,\" she grinned.\n\nI liked Tiffany more every time she opened her mouth.\n\n\"It was really hot. You should try it sometime, Tiff,\" Kat suggested.\n\n\"I think I will. May I?\" she asked as she looked at me.\n\nMy mouth dropped open a little at that point.\n\n\"I... uh... sure,\" I stammered while glancing nervously between her and Kat.\n\nThey chuckled at my reaction.\n\n\"Nick, if you don't feel comfortable with our suggestions, you can tell us no. We won't be mad at you or anything,\" Kat said as she stroked my hair.\n\n\"I'm plenty comfortable if you two are,\" I insisted.\n\n\"Good,\" Tiffany smiled.\n\nMy heart rate ebbed upward as she set the champagne bottle down and crawled over to me. She knew how to use her pretty face and busty tits to tighten my shorts. She kissed me slowly at first, tasting my lips and smelling my breath. Then she gently pushed me backward in the grass and climbed over me. She straddled the bulge in my shorts and rocked her cunt against it as she worked her tongue into my mouth. My skin felt hot and tingly as she enjoyed me. I could tell by her breathing that she was enjoying me too.\n\n\"Damn, Tiff. This is fun to watch,\" Kat whispered.\n\n\"It feels really good,\" Tiffany moaned as she raised up and looked into my eyes. \"Can I feel you inside me, Nick?\"\n\nMy heart did a funny thump, and my cock flexed against her cunt when she asked that. She smiled when she felt it. I looked at Kat for her approval before I said anything. She smiled and nodded.\n\n\"Sure,\" I gulped.\n\nI watched as Tiffany got up on her knees and reached for my shorts. She unzipped them and pulled my underwear down off my erection. I shuddered when her soft hand went around it. She admired me for a moment and stroked me a little, feeling my hard length. Then she untied the little bows on her hips that held on her bikini bottom. She tossed it aside and straddled my cock. Her mound was as smooth as Kat's. I watched as she guided my tip against her swollen pussy lips and worked it into her growing moisture. The view was breathtaking. Tiffany's cute face, large breasts, and pale skin looked amazing in the firelight as she straddled my dick, and right next to us was Kat, being just as gorgeous.\n\nI watched Tiffany's face as she lowered herself down on my aching shaft. Her mouth opened with a gasp as she sat down on me. Her pussy was tight, hot, and slippery. I groaned softly as I flexed my cock inside her.\n\n\"Oh, that's nice,\" she smiled as she rocked a little. \"Can you thrust like this?\"\n\n\"I can,\" I breathed.\n\nI reached up and greedily squeezed her amazing tits. They were as soft as they looked. Her nipples were hard and erect as I pinched them between my fingers. I began working my ass and hip muscles, forcing my cock deeper inside her. She gasped and held my arms as she enjoyed the gentle fucking. I was extremely turned on by her reactions. I'm sure Kat was too. She was smiling as she watched Tiffany panting on top of me. I had to close my eyes and concentrate to avoid exploding too soon. Tiffany moaned and leaned over me so she could prop herself on her arms. I reached behind her and squeezed her ass as I pumped faster inside her, shaking her tits in my face.\n\n\"Oh God, I can't believe how good that feels,\" she groaned as she looked at Kat with half-lidded eyes.\n\nKat leaned in at that point and kissed her blushing mouth. Tiffany propped on one arm so she could massage her clit as I fucked her. I loved the gorgeous collection of tits dangling over my face as I pumped my cock into Tiffany's dripping cunt.\n\n\"Can I cum in you, Tiff?\"\n\n\"Mmhmm,\" she groaned.\n\nHer pussy was twitching and tightening on my cock. I knew she was close. I slowed my pace and thrust deep and steady, making her whimper and twitch more. A second later, she gasped against Kat's mouth as her body tensed with orgasm. She cried out as I fucked her through it. I grunted with pleasure a few seconds later. Tingles raced through my cock in waves as I filled Tiffany with cum.\n\n\"Fuck, that's hot,\" she breathed as she worked her pussy against my twitching meat.\n\nI groaned in ecstasy as I thrust into her a few more times, reveling in the incredible release. I looked up and met Kat's aroused eyes as the last shock of pleasure tingled through my cock. I wanted to cum in her at that moment too. If only I had two cocks.\n\n\"Wow, thanks, Nick. That was new for me,\" Tiffany smiled.\n\n\"You're more than welcome. Thank you too.\"\n\n\"How soon can you do that again?\"\n\nKat and I laughed at her question.\n\n\"Uh, I need a few minutes at least. Being extra horny speeds up my recovery.\"\n\n\"I get his cock next, you greedy ho,\" Kat warned with a smirk.\n\n\"No problem. I'm patient,\" she grinned and pulled Kat closer for another kiss.\n\nI relaxed and enjoyed the rare view of two gorgeous women kissing over me as one sat on my spent cock. I feared I would suddenly wake up and realize it was all a dream, but until that happened, I planned to enjoy myself to the fullest.\n\n\"God, I'm horny. Are you ready yet, Nick?\" Kat asked as she aggressively squeezed Tiffany's breasts.\n\n\"I'm getting there. You two are definitely helping.\"\n\n\"I have an idea,\" Tiffany grinned. \"Kat, get on your hands and knees and point that pussy at me,\" she ordered.\n\nKat chuckled and obeyed. Tiffany climbed off my cock and crawled over to Kat's backside. She pulled Kat's pink bikini down to her knees, exposing her swollen, wet pussy to the firelight. My cock perked right up at the sight. Then it tingled when Tiffany plunged her tongue between Kat's swollen labia, making her groan. Kat gathered grass in her fists as Tiffany aggressively tongue fucked her cunt.\n\n\"Holy fuck,\" I breathed as I stroked my cock to the enthralling display.\n\nI would have happily pleasured myself while watching them pleasure each other, but Kat looked at me with sleepy eyes and beckoned me closer with her index finger. I quickly kicked off my shorts and underwear before I crawled over to join them. I kindly pushed Tiffany to the side so I could get my tongue into Kat's moist pussy. She tasted and smelled really fucking good. She groaned as I hungrily buried my tongue in her cunt, lapping up every sweet drop I could find.\n\n\"Fuck me, Nick, please,\" she begged.\n\nI quickly stood on my knees behind her and guided my tip into her swollen red lips. She gasped when I pushed hard into her, opening her up deep inside. I held her hips and pulled her into my thrusts, jarring her body in my excitement. I loved how her ass cheeks jiggled when they bounced off my hips.\n\n\"Fuck yes,\" she groaned and pulled handfuls of grass out of the ground.\n\n\"God, that's hot,\" Tiffany breathed.\n\nI glanced to the left to observe her sitting in the grass with her legs spread wide. She was sliding her long fingers into her dripping cunt as she watched my cock disappearing into Kat's body. I wished again that I had two cocks so I could pleasure them at the same time. Kat reached between her legs and worked her clit as her pussy tightened on my cock. A few seconds later, she cried out with orgasm. I watched the pleasure tense her body as I pounded her birth canal. I gasped a second later and groaned in ecstasy as my semen spilled inside her. My groin and abs tensed again and again, wrecking my rhythm, but I worked us both through the delicious spasms until we were spent. My injured side started aching at that point. It was a testament to my vigorous fucking.\n\n\"Holy cow, Nick, you had me drooling,\" Kat chuckled as she squeezed my cock with her inner muscles, sending semen dripping out of her.\n\n\"How gentlemanly of me,\" I grinned and squeezed her soft hips. \"Okay, I'm going to rest for a bit. My side hurts,\" I sighed and pulled out of her.\n\n\"Aw, too bad. I was hoping to go next. I'll have to drink my horniness away,\" Tiffany smiled as she watched me slump onto the beach towel close to the fire.\n\nKat sat up, threw her dark hair back, and proceeded to comb it out with her fingers. Tiffany retrieved the champagne and took a long drink. After a few hearty gulps, she passed it to me. Two-thirds of it had been drained. We wouldn't have any trouble finishing it before bed. That thought reminded me of my destroyed tent.\n\n\"Hey, by the way, can I sleep with you ladies tonight?\" I chuckled, causing them to chuckle as well.\n\n\"I don't know,\" Tiffany sighed. \"What do you think, Kat? Should we let some strange man we barely know sleep in our tent?\"\n\n\"Hmm, that could be risky. What if he molests us while we're sleeping?\" Kat asked in mock horror.\n\n\"That sounds like fun! I mean, that would be terrible. Or worse, what if we molest him? I would never trust us again, Kat!\"\n\nI burst out laughing at the ridiculous conversation. It made my side hurt worse.\n\n\"Damn, I think I overdid it today,\" I groaned and touched my bandaged ribs.\n\n\"No shit,\" Tiffany snorted. \"You fought a bear and fucked two horny lesbians. You're going to need another vacation during your vacation.\"\n\n\"Hmm, I can't argue with that drunk logic,\" I sighed.\n\nWe rested, chatted, and laughed as we finished off the champagne. Kat and I managed not to get completely plastered, but Tiffany drank the lion's share and got blitzed. We assisted her into the tent to sleep it off, then Kat and I used the last bit of our clarity to douse the campfire.\n\n\"Shit, I need more water. I need to wash the bottle and trash it,\" Kat groaned as she picked it up and grabbed a flashlight.\n\n\"I'll assist. I'm the least drunk among us. You manage the flashlight,\" I sighed and took the bottle from her.\n\nWe carefully made our way through the trees to the lake. The moon was rising, making the evening mist glow over the water. We stopped and stared at the beautiful view for a moment.\n\n\"A perfect end to an amazing night,\" I sighed as I examined the rocky bank for a place to wash the bottle.\n\n\"Here, let me do it. I know the safest path. I don't want you falling on the bottle and cutting yourself more,\" Kat said as she took it from me and handed me the flashlight.\n\nI lit the way for her from behind as she carefully climbed closer to the water, maneuvering around big and small boulders. She was definitely drunk, but it was impossible to tell by watching her move. It was also a treat to watch her bend over to dip the bottle in the water. Her cute ass and red cunt were exposed to me again. I was sure to spotlight them. I could even see her breasts jiggling between her arms as she shook water inside the bottle. She had me hard in an instant.\n\n\"There, all clean,\" she announced and carefully made her way back over to me. \"Damn, I see you really enjoyed the view,\" she chuckled when she observed my erection in the moonlight.\n\n\"Guilty as charged,\" I grinned.\n\n\"I thought being drunk disabled erections,\" she whispered as she grabbed it and stroked it, making me extra hot.\n\n\"I'm not that drunk. Champagne doesn't hit me as hard as whiskey. Tiff drank most of it anyway.\"\n\n\"True,\" she nodded as she stepped forward and kissed me.\n\nI moaned in delight as she pulled my cock against her crotch. She moaned as she used my tip to massage her clit.\n\n\"I love how soft your skin is,\" she whispered before she lowered herself to her knees.\n\nI watched with my heart pounding as she took my cock into her mouth. I shuddered with tingles as she sucked me and licked along my shaft. She was being overly gentle. I wondered if she had ever sucked a cock before. I was enjoying it too much to say anything, but she apparently wasn't satisfied with my reaction. She released my cock and looked at me for a moment.\n\n\"What?\" I grinned.\n\n\"I'm not good at sucking, am I?\" she asked.\n\n\"I didn't say that,\" I chuckled.\n\n\"I'm obviously doing a poor job,\" she sighed.\n\n\"Don't feel bad. I love what you're doing, but a drunk and recently satisfied cock doesn't excitedly respond to gentle sucking.\"\n\n\"Oh, so you like it rough? I was afraid I would hurt you if I sucked too hard.\"\n\n\"It takes a lot more than that to hurt a horny cock. Be as rough as you like.\"\n\n\"Okay,\" she shrugged and pulled my cock back into her mouth.\n\nShe attempted to suck the life out of me after that. It didn't feel bad, but I suddenly felt like a straw in a thick milkshake.\n\n\"That's better, but not exactly what I meant,\" I chuckled.\n\nShe backed off after that.\n\n\"Okay, I give up. I'm too horny and too drunk to learn this tonight. Will you pound my cunt before we go back to camp?\" she asked as she stood to face me again.\n\n\"Gladly,\" I breathed and pushed her over to the nearest boulder and bent her over it.\n\nShe gasped when I plunged my cock inside her again, then I fucked her like a wild man. She whimpered and panted as I held her down against the rock. I could tell she was enjoying it.\n\n\"Fuuuck, that's good. Do it harder,\" she begged as she reached between her legs to rub her clit.\n\nI slid my hand to the back of her neck and held her firmly against the boulder as I plowed into her pussy. My left hand was squeezing her hip to keep her steady. I watched the side of her cute face as she panted against the rock with her mouth open.\n\n\"Oh God, yes,\" she whimpered as her body began to twitch.\n\nI chewed my lip as I worked her and myself to orgasm. She cried out as I pushed deep inside her, knocking her harder against the rock.\n\n\"Fuck!\" she gasped as I did it again and again, spilling cum inside her as orgasm worked through my cock.\n\nI groaned as wonderful spasms shook my muscles, but I kept up the hard fucking until Kat's body relaxed. Then I breathed out and slowed my pace. I could feel little aftershocks of pleasure tightening her cunt. My cock was twitching too. Exhaustion hit me a few seconds later. I leaned against Kat's soft back and sighed in satisfaction.\n\n\"That was wild,\" she smiled and licked her lips to re-wet them.\n\n\"You are wild. Does Tiff know how wild you are?\"\n\n\"Mmhmm, she encourages it.\"\n\n\"I really like Tiff.\"\n\n\"I'm glad. She really likes you too. Let's get back and crash,\" she yawned.\n\nI moved so Kat could straighten up. We decided to leave the bottle on the rocks so we could find it in the morning. Tiffany was snoring loudly as we climbed into the tent. She was curled up on a pink sleeping bag on the left. The space felt tight with three people but not uncomfortable. We all had enough room on the floor to sleep however we liked. Kat gave me a goodnight kiss before she rolled over and dropped off. I carefully sprawled out on my sleeping bag and did the same.\n\nI groggily awoke the next morning when I heard the tent zipper sliding closed. The sun wasn't up yet, but the light was growing. The ladies were settling back in after a morning pee break. I smiled at their tired faces as they returned to their pillows. I pulled myself up for a pee break too. Then I returned to the tent and crawled in between them. Kat chuckled as I wrapped my arms around her and kissed her cheek. Tiffany grumbled something unintelligible as she scooted away from us. I couldn't blame her. Three bodies in the tent made it extra warm. I drifted off to sleep again, listening to Kat's soft breathing.\n\nMy next awakening was exceptionally pleasant. A hot mouth encased my morning wood and gave it a gentle suck. I groaned and looked down to see Kat's beautiful mouth massaging my shaft. I smiled and let my head fall back as I enjoyed the stimulation. She chuckled at my reaction. The next thing I knew, a hot pussy appeared over my face as Kat straddled my head. I grabbed her hips and pulled her cunt down on my tongue. She groaned as I explored inside her. She took my cock deep into her throat and bobbed her head a little. She seemed to be developing a technique. She surprised me when she grabbed my base and began pumping it while massaging my tip with her lips and tongue.",
        "\"Mmm, that's really good,\" I groaned against her pussy.\n\nShe chuckled again and took my cock out of her mouth so she could speak.\n\n\"I told Tiff I was terrible at sucking, and she told me how to do it right. She watches a lot of porn. She said it's very educational.\"\n\n\"I agree,\" I smiled before burying my tongue in her pussy again.\n\nShe groaned in delight and rocked her delicious cunt against my mouth, using my chin to stimulate her clit. I was impressed and aroused by her technique. I licked against her rhythm, helping put more pressure on her inner muscles.\n\n\"I love that. Do it harder,\" she ordered before she pulled my cock into her mouth again.\n\nShe squeezed and pumped my base while feverishly working my tip with her lips and tongue. She had me squirming with tingles and ready to explode. I squeezed her ass and pulled her pussy tight against my mouth so I could lick her cunt and suck on her swollen lips. That did the trick for her. She groaned and tensed with orgasm a second later. I could feel her inner muscles flexing against my tongue as more of her sweet juices hit my taste buds. Her pleasure made me extremely hot. An orgasm hit me a second later. I thrust into her mouth as she squeezed and sucked me through it. She moaned and swallowed the warm semen that burst on her tongue. I shuddered as she aggressively sucked me clean.\n\n\"Cool it, Kat. I'm really sensitive now,\" I breathed.\n\n\"Oh, sorry,\" she chuckled.\n\n\"No problem, that was amazing.\"\n\n\"It was. Thank you,\" she said and carefully climbed off of me.\n\nShe rotated and curled up next to me with her head on my chest. I kissed her fragrant hair and squeezed her shoulders. A few seconds later, Tiffany sat up and groggily rubbed her face. She looked at us cuddling and quickly crawled over to join. She wrapped her arm around Kat and me before she laid her cheek against Kat's back.\n\n\"Good morning, Tiff. How do you feel?\" Kat asked.\n\n\"A little hungover, but not bad,\" she yawned.\n\n\"Do you remember what we did last night?\" I asked.\n\n\"Of course,\" she snorted.\n\n\"Do you regret any of it?\"\n\n\"Nope.\"\n\n\"I'm glad,\" I sighed.\n\n\"By the way, how many times have you and Kat fucked now? I'm sure I gave you plenty of opportunities,\" she chuckled.\n\n\"Um... four or five, I think,\" I confessed.\n\n\"Damn, I knew Kat was craving cock, but I didn't know she was addicted.\"\n\n\"Hey, you indulged too, Tiff. That was really weird of you. I liked it,\" Kat chuckled.\n\n\"I did too,\" Tiffany grinned.\n\n\"I'm here for you if you need more cock, Tiff,\" I offered.\n\n\"Thanks, I might take you up on that offer, but I'm not feeling it right now. Last night was rare for me. Kat's horniness towards you had me craving something different. The alcohol helped too.\"\n\n\"I see. Thanks for sharing the love,\" I said and stroked Tiffany's soft hair. \"You ladies are amazing. When do you start your hike back to civilization?\"\n\n\"Shit, to be honest, we should start this afternoon. The food is getting low, and it takes us about two and a half days to get back. We like to take our time and enjoy the journey.\"\n\n\"Damn,\" I sighed. \"I was hoping to stay by the lake for two more days before starting back, but I don't want to stay here without you two. I would probably die.\"\n\n\"That's exactly why you should come with us,\" Kat noted. \"Not to mention that bear is still out there somewhere. I bet he remembers your scent and all the yummy food he found in your pack.\"\n\n\"Yeah, at least I made more friends than enemies while here. Will you two give me your numbers so we can stay in touch? I would love to do this with you again next summer if you'll have me. Does that sound fun?\"\n\n\"I would love that,\" Kat admitted.\n\n\"How about you, Tiff?\" I asked.\n\n\"I would enjoy it too, as long as I get Kat to myself for the first two days. Then you can grace us with your heat-exhausted self.\"\n\n\"Excellent. It's a date,\" I grinned.\n\nAnd that, my friends, was the best summer vacation of my life.\n\nWe spent the next two days hiking back to civilization. We shared food, conversation, and bodily pleasure along the way. I honestly felt depressed when we reached the ranger station and spotted our vehicles. I didn't want to say goodbye to the ladies or mother nature even after she tried to kill me. My throat tightened when I saw tears in Kat's eyes. I was touched that she felt the same way about me. Tiffany was keeping herself composed better than us, but Kat's tears caused her eyes to go misty as well. We exchanged numbers and email addresses, then we stood in a tight group hug for many minutes. I smelled their hair and kissed their beautiful faces. I didn't want to forget any details about them. I retrieved my phone from my glove compartment and powered it on so we could take a group photo. Tiffany made me promise not to post it on social media, but I was allowed to show it to George. After a few more kisses goodbye, we went our separate ways.\n\nIt was after midnight when I arrived at my apartment. I was exhausted and feeling a bit lonely. As I stuck my key in the door, my cell phone rang. It startled me after a week in the wilderness. I pulled it out of my pocket and said hello, then Kat's sweet voice announced \"Hey Nick!\" into my ear. It instantly chased my gloom away. Tiffany was with her. They were calling to make sure I made it home safely. We talked for thirty minutes after that, making plans to visit each other again. We eventually let each other go. We couldn't stop yawning into our phones. I laid in bed a few minutes after saying goodbye, reflecting on everything that happened. When I finally fell asleep, I had a nightmare about a bear breaking into my apartment and eating all the food in my kitchen. Then we sat together on the sofa in the living room to watch a nature documentary. The bear had brought a plastic bottle full of whiskey for us to share. I told Kat and Tiffany about it the next day, and they almost pissed themselves with laughter.\n\nThe end!"
    ],
    "authorname": "chloehunt",
    "tags": [
        "ffm",
        "blowjob",
        "straight sex",
        "lesbian sex",
        "cunnilingus",
        "pussy licking",
        "threesome",
        "outdoor sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/nicks-favorite-summer-vacation"
}