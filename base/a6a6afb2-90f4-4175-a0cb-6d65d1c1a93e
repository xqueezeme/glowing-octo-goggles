{
    "title": "Fourth Vector Ch. 43",
    "pages": [
        "Chapter 43: Another War\n\n*****\n\nEven the passage of time did little to heal the wounds of the heart.\n\nIt had been three weeks since the arrival of the Javan envoy and Jack was still having nightmares about it. He would awake from a dead sleep full of sweat, bolting upright as if there was still some way he could save them. \n\nTry as he might, he couldn't picture Jocelyn's face. Even though he had a thousand memories of all the time spent with her while growing up, the only thing he could picture was the gruesome sight within that box.\n\nIt made for many restless nights. Quite often, Jack would find himself leaving the bedroom and finding an empty balcony. He would watch over the city of Kalmar, listening to the sounds of the city below. The lack of rest was preferable to the nightmares that visited him when he tried to sleep.\n\nThe hardest thing for him to accept was the failure to rescue them, despite his efforts. If there was one thing he understood lately, it was failure. This was the kind that stung more than the temporary failures he had on Swabia. Even when he lost the battles of Sepolz and Murgullah, there was still hope that the situation could be turned around, and it was eventually. \n\nThis was a type of failure that was permanent. He would never see Jocelyn again. He would always have to live with the fact that he couldn't save her in time, and there was nothing that could console him about that fact.\n\nDespite the tragedies of their deaths, Jocelyn and her family deserved proper burials. Jack knew just the place where he could intern them. The small grove cemetery where Art and his family were now buried was the perfect spot. It was peaceful and lush, and it had a perfect view of the city in the distance.\n\nEven though Jack couldn't have Jocelyn spend the rest of her days in Kalmar, she would at least get to spend eternity buried on friendly soil under the careful watch of her brother. If there could be any silver lining to the situation, that was it.\n\nOn the day that Jocelyn's family was buried, Jack had ample company with him. Evelyn, Vera, Kat, Abigail, and John were there by his side as they were lowered into the ground. The Calland family was there as well, all four of them, to show solidarity with their king. The service was solemn but brief, and as they were buried, he couldn't help but shed tears at the thought of never seeing any of them again.\n\nOver the next few weeks, he was a frequent visitor to the site of their graves. Usually, Jack made that trip alone, but today, he had a special visitor with him.\n\nVera held his hand as Jack stopped in front of the headstone that proudly displayed the name \"Hutton\" across the front. He knelt before it and used his fingers to brush across the names of all five of them.\n\n\"It will get easier someday, Jack.\"\n\nVera's soft voice from just behind him caused him to let out a deep breath. \n\n\"When will that be, Vera? Because it's certainly not right now.\"\n\nVera helped him to his feet. \"It's still going to take time. Nobody expects you to get over this quickly but it will continue to get easier. Every day, little by little.\"\n\n\"Even when I feel responsible for their deaths?\"\n\nJack centered his eyes on his sister. Vera gave him a sympathetic look.\n\n\"It wasn't your fault, Jack. You did everything you could to save them. You're the one that sent the ship to pick them up.\"\n\n\"And in the process, I alerted Bancroft to their importance to me,\" whispered Jack hollowly. \"If I hadn't done that, would they still be alive today?\"\n\nVera shook his head. \"With how vindictive and evil this Bancroft person is, I don't believe they would have ever escaped his notice. I don't believe there was anything that could've been done.\"\n\nThose were tough words for him to swallow. In Jack's mind, there was always something that could have been done to alleviate the situation. Part of him wondered if he should have smuggled Jocelyn out of Java over a year ago, right after the Battle of Aberdeen. By that point, tension had already started with Bancroft, and it seemed to have been, in retrospect, the best time to extract them.\n\n\"Jack, no one could have predicted things would have turned out this way,\" said Vera, likely reading his emotions by the expression on his face. \"You can play the what-if game all day, but it doesn't change anything. You can't keep blaming yourself for their deaths. There is one person, and one person only, who is responsible for this. That person is Bancroft.\"\n\n\"And he will pay for this,\" vowed Jack. \"If it's the last thing I do, I'll make him pay for this. He couldn't have just left it alone. There was no reason to bring the hatred to this level. We're separated by a large ocean and he could have stayed in his half without interfering in ours. But his lust for power, his madness, have made it impossible for us to think that we can keep the peace. We have to take the war to him.\"\n\nVera said nothing but nodded as he finished speaking. Despite the seeming righteousness of his cause, no one was thrilled about the prospect of another war so soon on the heels of another one. Dagobern had just about finished smoking, and now the Galician armed forces would soon be asked to answer another threat when they should be enjoying a measure of peace.\n\nIt was going to be hard for Jack to ask them to be the guardians of the state once more but they had no choice in the matter. Bancroft had shown his hand. There was going to be no chance of any possibility of living in peace as long as he was still alive.\n\n\"Is that why I saw the flurry of dispatches go out this morning?\" asked Vera. \"One to each head of state of every member of our Western alliance?\"\n\nJack nodded. \"That's right. I need to have the backing of everyone in the West for another conflict. That's going to be our toughest battle. There's no way we can face Bancroft alone. Not with the resources of Java, especially with having recently conquered Occitania and Ruthenia. The only way we'll stand a chance is if we do so united together.\"\n\nVera raised an eyebrow. \"And does that include Swabia?\"\n\nThat was an excellent question. A dispatch had been sent to Dagobern for the eyes of Greg and Ferberg alone. The pair had done an excellent job in keeping the peace in Swabia so far, and there had been no reports of any uprisings or disgruntled lords looking to take power for themselves. But Vera had touched on a subject that would be hard to ignore.\n\nIn order for Jack to confront Javan power, he would need the help of all the major powers in the West. That would include Swabia.\n\nHow that would look was still to be determined. Jack hadn't decided yet what kind of commitment the Swabians would be asked to make. At this point in time, he only had a vague idea of leadership for the Swabians, and even that would be a tough pill to swallow for the rest of the Allied leadership.\n\nIn short order, Jack had his work cut out for him. The first step on that long road was gathering everyone together to discuss the matter.\n\n\"Swabia will be included but I don't know the role they will play just yet,\" replied Jack finally. \"But the first thing we must do is have a council of all the leadership in the West. I've asked Aedan, Santino, Hendrick, Reina, Gaius, Nikias and Elektra, as well as Masud of Andalucia to sail to Kalmar to discuss the issue. And I'd like to ask them to go to war with us.\"\n\nVera cringed visibly. \"Half of those countries are still recovering from the last war. What makes you think they're going to sign up for a new one against a greater opponent?\"\n\n\"Honestly, that's what worries me the most,\" admitted Jack. \"I grew up calling this area of the world the Fourth Vector. We've managed to unite most of it under our leadership but we would still be going up against a power that has united the other three vectors of the world. It's not going to be easy and I fear getting their involvement is going to be the hardest part.\"\n\n\"Not to mention, where would you fight the Javans?\" asked Vera. \"Over here? Would you wait for them to invade the West or take the war to them?\"\n\nJack shrugged. \"It depends on how fast the Javans move but my personal philosophy on the matter is that no war is won by playing defense. Wars are won by attacking. Sooner or later, we're going to have to defeat the Javans on their own turf. That involves sending an invasion fleet and an army across the great ocean.\"\n\nVera shuddered. \"And I thought the Swabian War was bad. This conflict sounds like it's going to be a lot worse.\"\n\nJack wrapped his arm around his sister's shoulder. \"I think you're right. Which is why it's crucial we have the support of our allies. We can't go at this alone. We'll need help.\"\n\n\"I don't envy the task in front of you, Jack,\" admitted Vera as they started walking back to Kalmar. \"Do you think this might have been the task you were meant to do? The one prophesied about?\"\n\nJack didn't answer that question right away. The thought had occurred to him, and he had to think that Vera had it right. Even though the Swabians had been a long distraction, Bancroft had always hovered in the distance\u2014a future foe who hadn't shown his cards just yet. Now that Jack's bluff was called, would Bancroft prove to be his toughest enemy?\n\nAnd what exactly were his chances of survival if he managed to cross the ocean? Even with a large army, could he hope to go toe-to-toe with the rest of the Javan Navy and win? Some of those men on the other side he would have commanded at one time. Could he really hope to fight them to the death?\n\nSuch questions were on his mind as they made their way back to the Castle that afternoon. Jack wasn't able to settle in for very long when Twitch found him and announced that an Apulian cruiser was on its way into the harbor.\n\n\"Onboard the cruiser will be King Aedan of Picardy, Hendrick Tysen of Samara, as well as Director Santino Altieri of Apulia,\" informed Twitch. \"It sounds like Hendrick and Aedan met up with Santino in Marmora and the three traveled together.\"\n\n\"Excellent, Twitch, thank you,\" replied Jack. \"Please let me know when they are docked so we can go down to greet them. And let Kat know to be ready too. I believe Abigail is already down at the harbor but send a message to her as well.\"\n\nAs such, it was about a half hour later that Jack and Kat made their way down to the harbor to greet their allies. Jack had requested that Kat bring John, knowing that Queen Ciara of Picardy (and likely Giana Altieri as well) would love to see how much he'd grown. John wiggled in Kat's arms all the way down to the harbor, a sign of his newfound independence now that he was able to walk.\n\n\"He just won't stay still,\" said Kat as she attempted to hold John against her. \"He just wants to run the whole way. He doesn't want to be held anymore.\"\n\nJack gave her an amused look. \"Our son isn't a baby anymore, love. He's a little boy, and he wants to walk on his own two feet.\"\n\nKat's face assumed a look of deep melancholy. \"What happened to my baby, Jack? He's all grown up!\"\n\nJack couldn't help but chuckle. It was a conversation for another time, but Kat was right about one thing\u2014John was decidedly more toddler-like now than ever before. The baby that they'd left in Kalmar had turned into a little boy. Jack was already seeing signs of his genes in the boy. John had his father's nose and his strong chin. He had his mother's soft blue eyes though, not nearly as stark as Jack's. Of course, John's penchant for wanting to get into everything reeked of his father's influence as well.\n\nJack remembered all too well the mischief that he'd caused his adoptive parents at a young age. It only seemed fitting that some of that trouble now revisited him in the form of his own son.\n\n\"All children grow up,\" said Jack, putting his arm around his wife's waist. \"Someday soon, he'll be his own man. Then what will you do?\"\n\nKat pursed her lips. \"I'll remember the days when I used to hold him in my arms.\"\n\nJack started to laugh. \"I guess there's that.\"\n\nKat pushed into his side. \"Or we could always get cracking on a second one. I wouldn't mind having another child with you, Jack. In fact, I'd like that quite a bit.\"\n\nJack gave her a knowing look that contained his answer. With war on the horizon, he didn't want to think about two of his wives being pregnant.\n\nThe fact was that Abigail might already be pregnant. She'd stopped taking her pills right after the fall of Dagobern (and before Bancroft essentially declared war) with the hopes of getting pregnant as well. Since Jack felt already committed to seeing that through to fruition, it had already been agreed to let Abigail have her baby, and then when the next war was over, to let Kat try for another.\n\n\"I know, Jack, I know,\" said Kat with a teasing sigh. \"It's Abigail's turn. But don't think the thought is never far from my mind. I loved every second of knowing that I was carrying your child inside me.\"\n\nJack leaned in and kissed her. \"As did I, love. As did I.\"\n\nThey reached the harbor minutes later to find their friends already in the middle of disembarking from the Apulian cruiser. Naturally, the first one off was Aedan. The Picard King, his wife, Ciara, and their son, Davin, were waiting at the end of the gangplank.\n\n\"Davin, what are they feeding you?\" asked Jack as he looked at the young two-year-old prince. \"My goodness, you're almost as tall as me!\"\n\nThe little prince let out a smile but he wasn't confident enough to let go of his mother's leg.\n\n\"This one eats everything in front of him,\" said Ciara with a laugh. \"I'm convinced he's going to be a big man when he's older by the way he eats. Would you believe that he devoured nearly as much meat for dinner last night as his father?\"\n\n\"I'd only believe that if Aedan didn't like his supper,\" joked Jack as he clasped hands with the redheaded royal. \"How are you, Aedan? Are you well?\"\n\nAedan gave him a knowing look. \"I'm a bit perplexed at the reason for this meeting in Kalmar, Jack. You haven't exactly been forthcoming with the reason for us being here.\"\n\nJack nodded solemnly. \"That will be revealed at the council. Just know that I wouldn't have called everyone here if the matter wasn't of the utmost urgency and danger.\"\n\n\"Danger?\" asked Aedan as he raised an eyebrow. \"What could be so dangerous? The Swabians are defeated. We're at peace now.\"\n\nJack opened his mouth to say something but another voice soon yelled out from further up the gangplank.\n\nDirector Santino Altieri and his wife, Giana, were next to exit the ship. Just behind them were their two daughters, Emilia and Pia. Giana hadn't aged a day since the last time Jack saw her but the girls seemed somewhat older from the last time they met back in Samara.\n\n\"How are you, my friend?\" yelled Santino as his eyes centered on Jack. He wore a beaming grin as he strolled down the plank and embraced Jack.\n\nJack nodded. \"I've been better, Santino. How are you? The family is well? Apulia is well?\"\n\nSantino patted Jack's shoulder. \"We are doing just fine. I've always wanted my wife to see Galicia too so this is just wonderful.\"\n\n\"I already love it here,\" gushed Giana to Kat as the two women embraced. \"I'd love to be able to see the city in more detail.\"\n\nKat smiled. \"I'm sure that can be arranged.\"\n\nSantino focused on Jack. \"Although we have to wonder why we're suddenly taking a Galician vacation in the middle of summer. I certainly wasn't expecting your dispatch so soon after the end of the war.\"\n\n\"A most apt question,\" added Aedan. \"Something I was trying to get to the bottom of myself.\"\n\n\"And like I told Aedan, it will be explained more thoroughly later,\" said Jack while giving the Picard King a firm look. \"For now, I'd like you all to make yourselves comfortable at the Castle. We'll go over more details at the council.\"\n\nAedan turned to look at Kat. \"Are you going to give us any details then? If he won't, surely you'll tell us what's going on.\"\n\nKat shook her head. \"Sorry, Aedan. This is Jack's fight. You won't hear a word from me until he's ready to give it.\"\n\nAedan threw his hands up. \"I thought we were supposed to be allies!\"\n\nJack patted the Picard King's shoulder. \"We're the best of allies, Aedan. The very best.\"\n\nSantino shrugged. \"You would fit right into Apulian politics, Jack. Not showing your hand under pressure takes guts. I have to wonder what kind of request you're going to make of us. But I will do as you say. I will wait until you're ready.\"\n\nJack nodded and saw to it that both men and their families had cars to take them to the Castle. Aedan went first while Santino followed in a distant second.\n\nThat last head of state to leave the ship was Hendrick Tysen of Samara, and the boyish-looking Tribune hadn't changed at all from the last time Jack saw him.\n\n\"Why do I get the feeling you're about to make another big request of me?\" asked a wry Hendrick as he descended from the cruiser. He grinned broadly and embraced Jack. \"I'm still taking heat from the last time I let Samaran troops outside our borders.\"\n\n\"Hard times call for hard measures,\" said Jack cryptically. \"And we are most definitely in hard times right now.\"\n\nHendrick studied his face for a moment before he replied. \"Trouble across the ocean? I remember you telling me about your former countrymen. Is that what this is about?\"\n\nJack leaned in closer. \"Yes, but that's all I'm going to say. And don't breathe a word of this to Santino or Aedan. They don't know anything yet and if they found out from you, I'd never hear the end of it.\"\n\nHendrick grinned. \"No, that would drive Aedan positively nuts. And I've seen the man when he loses his wits. It's not a pretty sight.\"\n\n\"No, it definitely isn't,\" said Jack, chuckling. He then turned solemn a moment later. \"But this is serious, Hendrick. I will have another request for you but I won't make it until I argue my point. More will be learned at the council.\"\n\nHendrick nodded. \"Then I will await this council and find out what this latest threat is to us. Until then, I'd like to get settled into your Castle.\"\n\nJack pointed to the nearest car. \"That one will take you right there. Any luggage that doesn't fit will be brought up behind you. We'll take good care of you here, Hendrick. I guarantee it.\"\n\nThat was enough for the Samaran Tribune, and soon enough his car was moving toward the Castle as well. \n\n\"So it begins,\" said Jack to Kat after they were gone. \"And all of them seem suspicious of our intentions so far. This is going to be harder than I thought.\"\n\nKat placed a loving touch on his back. \"It still needs to be done. Bancroft can't get away with what he did. If anyone can make them see the danger that he poses, it's you. Yes, it might be tough, but I'm certain you can make them come around.\"\n\n\"I'd just so much as go at it alone with Galician forces if I thought we could win,\" said Jack. \"This is my fight, not theirs.\"\n\nShe shook her head. \"That's not true, Jack. You remember the viceroys, don't you? Sooner or later, Bancroft is going to come for all of them. You were their shield back then, and even now you've shielded some of Bancroft's worst excesses. It's now time for us to stop being the shield and start being the sword. What other choice do we have?\"\n\nKat brought up an excellent point. War or not, Bancroft wasn't going to stop until he brought the entirety of the Fourth Vector under his thumb. It was a goal of the Javan government long before Bancroft came to power, and now it remained the only part of the world not under his direct control. \n\nBancroft was determined to take the islands of the West with or without Jack.\n\nAnd that's what made it so important that he organized them into something resembling a defense. Without him, they would be disunited and easy pickings after such a terrible war.\n\nNo, they would need to work together to have a chance at survival.",
        "Jack accepted Kat's words as they turned to go back to the Castle but a runner came to find him before they'd even left the harbor.\n\n\"Your Majesty, your presence is requested by Admiral Russell Taylor and Queen Abigail at once,\" informed the runner, still out of breath from his trek across the harbor.\n\nJack gave the runner an alarmed look. \"Is everything all right? What's the meaning of the summons?\"\n\n\"No danger, Your Majesty, but there's something they wanted to bring to your attention. It's in regards to your ship, Destiny.\"\n\nThat got Jack's attention immediately. He wanted to know any news, good or bad, about his flagship as soon as possible. He kissed Kat and John goodbye and flagged a car to take them back to the Castle while he walked with the runner across the harbor. Kalmar harbor was divided into two main sections\u2014one divided exclusively for commercial vessels while the other was for the use of the Galician Navy.\n\nOn the naval side were various facilities designed to maintain and support his warships. Right in front of him were several dry docks, and most of them contained warships that were being repaired for damage sustained during the war. \n\nOne such dry dock contained the old battleship Centurion as she was being refitted toward her new purpose. Jack watched as part of the old island on the ship was removed from the center of the ship and moved to the edge, allowing room on her main deck to allow it to launch and retrieve aircraft\u2014a brainchild of Russ and Dustin from back in Dagobern.\n\nJust past the Centurion was the Destiny, and it was here that he found Russ as well as his other queen. Abigail wasn't wearing any royal robes today. Instead, she was fitted in the uniform of a Galician commodore, and it was her authority that saw responsibility for the Destiny. Both of them were inspecting the Destiny's hull but they stopped to greet Jack when he arrived.\n\n\"You both made it sound like something serious was going on,\" said Jack after he kissed Abigail. \"Is there some kind of problem?\"\n\nRuss was the first to speak. \"It would appear so. The Destiny here needs some serious repair work. She has multiple issues that need to be seen to urgently, and I can't recommend that she set sail until those issues are fixed.\"\n\nJack turned his attention to look at his flagship. \"I knew there were some issues that we've run into over the years but I didn't think it was that bad. What did you find?\"\n\n\"What didn't we find?\" asked Russ. \"You can tell this ship has been in near constant action for that entire time. I have exterior damage on the starboard aft hull as well as the port side too. I have evidence of mild flooding and there is equipment that will need repaired.\"\n\n\"From that action the first time we arrived in Daban,\" added Abigail, more for Jack's benefit.\n\nRuss continued. \"I'd recommend replacing the gun turrets on the forward section of the ship. I see these have been repaired once already but the work was, and no offense to anyone, shoddy.\"\n\n\"That would be from our time in Sorella,\" muttered Jack.\n\n\"In all, those are the major items. The rest of what I've found is cosmetic but it will take some time to repair her,\" said Russ.\n\n\"How much time do you need?\" asked Jack, already thinking about the next campaign. He couldn't very well set out to confront his foe without his flagship.\n\nRuss pursed his lips as his eyes rolled upwards. \"Perhaps three months. That should about do it. The problem isn't so much the time needed to do the jobs but more so the labor to do them. Most of the ships in the fleet need some kind of repair work after the war and there's just not enough labor to go around to do all of it at once.\"\n\nThree months without his flagship was a tough pill to swallow. Jack never considered going anywhere without the Destiny close by, and with the prospect of war on the horizon, there was no way he could leave it behind in Kalmar.\n\nOn the other hand though, it was unlikely that anything major would happen in the first three months anyway. As far as he knew, Bancroft's fleet was still on their side of the world. It would take them time to cross the ocean and even more time to traverse the West until they reached Galicia (if that was even their intent).\n\nJack could sacrifice three months to get a better Destiny in the long run.\n\n\"I'll give you three months, Russ,\" said Jack. \"But make sure she's a priority amongst the other ships. If that means work has to stop on another cruiser just to get the Destiny out quicker, so be it. I can't go to war without my trusty flagship.\"\n\nRuss nodded his head. \"We can make that happen, Jack. I'll keep you well-informed on the progress.\"\n\nThat was enough for Jack and they parted ways from the Galician admiral soon after. Abigail hooked her arm through his as they looked at the stern of the Destiny.\n\n\"I think we've been a little too hard on her,\" said Abigail. \"You would think we didn't care about the Destiny from the damage she's sustained over the years.\"\n\n\"The Destiny has had an active career ever since we arrived here,\" said Jack. \"If you think about it, she's been in every engagement we've had. How many Swabian ships has she sunk? How many Occitanian? I've seen other ships scrapped after lesser careers.\"\n\nAbigail gave him an alarmed look. \"You're not seriously considering scrapping the Destiny, are you?\"\n\nJack shook his head. \"No way. If we can spend a few months repairing her, she'll be ready to sail again soon. Besides, we're going to need all the help we can get against Bancroft.\"\n\n\"I saw the arriving Apulian cruiser earlier,\" she noted. \"How was their reaction about another war? I can already see the vein throbbing on Aedan's neck at just such a suggestion.\"\n\n\"I haven't told them yet,\" admitted Jack.\n\n\"You haven't?\"\n\nHe shook his head. \"I'd rather let them get settled into Kalmar before I break the news. They already suspect something, and I don't want to give them any reason to just say no and turn around to go back home.\"\n\n\"Do you really think they would do that?\"\n\nJack snorted. \"Aedan might. The other two would hear me out but I fear the Samaran deal we struck with Hendrick was a one-time deal. It was easier to convince them when the Swabians were right across the Slot from them but now? When the Javans are across the ocean, they just might bury their heads in the sand again.\"\n\n\"At least Santino would be with you,\" said Abigail. \"After what you did for him in Apulia, I think he would fight his way to the end of the world with you.\"\n\nJack tilted his head. \"I'm not so sure. His ardor seems to have cooled a little since we took Dagobern. And I'm not surprised by that in the slightest. No one wants another war, least of all me. But one has been forced on us and it's my job to make sure that the West can defend itself.\"\n\nAbigail's hold on his arm grew tighter. She let out a long sigh a moment later. \"Someday, we'll look back on all of this and wonder how our lives were so complicated. It's my sincere hope that we get a long life of peace after all this is over.\"\n\nJack leaned over and kissed her forehead. \"Mine too,\" he said briefly, not daring to tell her his thoughts on that matter. With another war brewing and the prophecy still unfulfilled, his chances of surviving to see such a peace were slim to none.\n\nHe didn't need to worry Abigail about that though. Not now.\n\nEspecially not with what she had to say next.\n\nAbigail placed his hand against her stomach. \"Do you think it was a wrong idea to try to get pregnant after all? I know that we can't exactly tell the future but maybe our decision to start trying for a baby was premature.\"\n\nJack wanted to tell her they needed to put a hold on it. He wanted to say that having a baby at the beginning of another conflict was going to be bad news. Jack wanted to ask her to wait until the end of that war but the words just couldn't leave his mouth.\n\nHe knew how badly she wanted this. He wanted it too but Abigail's desire to be pregnant dwarfed anything else. She'd been made to watch Kat's entire pregnancy and the first year of John's life, all the while knowing that her turn would be next.\n\nNow that it was finally here, it would break his heart (and hers) to rob Abigail of that experience.\n\nThe least he could hope for was a delayed pregnancy, especially if her pills were still affecting her hormonal levels as was common with Javan birth control. It wasn't unusual for it to take half a year or more for a woman's body to go back to normal after a lengthy period of taking those pills.\n\n\"No, I'm not changing my mind,\" replied Jack finally. \"I've already told you once that we can do it. I won't go back on my word.\"\n\nAbigail studied his face for a moment. \"You're lying to me,\" she accused.\n\n\"How do you figure?\"\n\nShe smiled and touched the corner of his mouth. \"You have a little nervous tick right here,\" she said, tracing her finger against his skin. \"I can always tell when you're not giving the whole truth by watching your mouth. You know, Jack, just say the word and we can postpone having this baby. You won't upset me.\"\n\n\"Now who's the one that's lying?\" asked Jack with a knowing look.\n\nShe might know his every tick but he knew hers as well. And Abigail would have been crushed to postpone her pregnancy.\n\nShe put on a brave face anyway. \"I can take it, Jack. I won't like it but I can continue to wait.\"\n\nHe kissed her tenderly. \"I won't do that to you. There will be no more waiting. We'll keep trying and we'll get pregnant when your body is ready. Not a moment later.\"\n\nShe couldn't help the excitement in her eyes. She returned his kiss with even more passion. \"I love you, Jack.\"\n\n\"I love you too.\"\n\n\"Thank you,\" she whispered silently. \"I want this more than anything.\"\n\n\"I know you do,\" he replied. \"That's why we're going to do it. I want you to be happy.\"\n\nAbigail sighed happily and placed her head against his shoulder. She looked over at the Destiny. \"Did you ever imagine we would be married and talking about children the first time we were on the Destiny together?\"\n\nJack started to chuckle. \"No, I didn't. If I remember right, the first time we were on the ship you seduced me after convincing me there was a male Lt. Commander Wainwright.\"\n\n\"And our lives have changed so much since that day,\" said Abigail as she looked at him. \"But I wouldn't change a thing about it if I could. I love the life I share with you. Whether that's being your lover, your friend, your wife, your commodore, or your queen, I love every bit of what we've lived together.\"\n\n\"Soon, we're going to add a new role to that,\" promised Jack. \"Mother of my children.\"\n\nAbigail visibly shuddered. She let out a toothy grin. \"That sounds incredible to me.\" Abigail soon turned to look at the Destiny again. \"Do you think the Destiny will still be around to see all of our children, Jack?\"\n\n\"I certainly hope so. I hope we don't have to see an end to the Destiny anytime soon.\"\n\n\"Me too, Jack. Me too.\"\n\n*****\n\nMichael Bainbridge was drunk again.\n\nIt was the fourth time in as many days that he was drunk, and by this point in time, his body seemed to develop a tolerance for alcohol that he never possessed before. When he first left the palace three weeks ago, it only took a few drinks to get him stumbling and nearly falling out of his chair. But since he'd drank enough alcohol in that time to float a small battleship, he found that it now took nearly a dozen to get him thoroughly drunk.\n\nMichael wished he could say that it made him feel better to drown his sorrows with cheap booze but it didn't. No matter how much he drank, he still couldn't outrun the pain. It was always the worst when he was close to passing out. The previous night, Michael had fallen asleep on the ground in a dirty alley after tripping over some garbage. He never attempted to get back up and spent the night on the cold ground. Just as he was about to pass out, he saw her.\n\nIt was Jade's beautiful face. She smiled at him before she leaned in for a kiss. Michael knew it wasn't real because she was smiling. In the last two weeks of her life, she didn't do that anymore. \n\nHe also knew it was fake because Jade's face wasn't marred with the signs of Bancroft's brutality. In his dream, it was still unblemished, smooth, and how it should be. \n\nHe still saw Jade as he wanted to see her\u2014as the girl that had his heart and always would. Even if she was taken way too soon, there was no one that could replace Jade for Michael.\n\nIt was the reason why the pain of living was almost all he could bear. Michael fled the palace rather than continue to work for the tyrant responsible for Jade's death. At the time, he thought about raising some kind of resistance to Bancroft's rule. He saw himself leading the charge to overthrow Bancroft, with Michael being the one to wield the knife to avenge his true beloved.\n\nAlas, those dreams stayed just that\u2014dreams. In the three weeks that he'd been gone, all he'd done was hide and drink. He knew that it was likely that Bancroft had people looking for him. He also figured that Bancroft had put together that he was Jade's lover, and no doubt he would want him dead for that fact alone. \n\nIt was the reason why Michael changed his appearance as the first thing he did. He shaved off all his hair above the eyebrows, going bald for the sake of confusing any tailing agents. He grew a long beard that now was quite wild and scraggy across his face. He exchanged the livery of the palace for something he purchased from a homeless man.\n\nIn short, the Michael of today looked nothing like the Michael of three weeks ago. In quiet moments, Michael wondered what Jade would think if she could see him now. Would she admonish him for the depths to which he'd sunk? Or would she tell him to get on with his life?\n\nNo, if Michael knew Jade, she would be asking him to avenge her. As long as he lived, he would pursue an end to Bancroft no matter what the cost.\n\nEven if that path wasn't as straightforward as he initially thought.\n\nMichael ordered another beer and flopped a coin on the bar. The barmaid scowled at him, not having liked him since he wouldn't purchase anything more expensive and he always took up space at the most lucrative part of her bar. She took the coin and deposited the beer on the bar in front of him hard enough to spill some of the contents. Michael growled at her.\n\n\"Watch it, I'm not paying you to spill the beer!\"\n\nShe planted both hands on her oversized hips. \"Maybe you should go to another bar and bother them then!\"\n\n\"Maybe I will,\" growled Michael as he drank heavily from his cup. Beer spilled out the sides of his mouth, wetting his already stained shirt. The man beside him turned his head to look at Michael, a gesture that Michael neither acknowledged nor repeated.\n\n\"Rough day, friend?\" asked the man.\n\nMichael still didn't turn his head. \"Rough life you could say.\"\n\nThe man beside him chuckled in a rather annoying fashion. \"Most people in here could say the same thing. What makes yours so different?\"\n\nMichael didn't respond to that. He took another swig of his drink and then tried to work at the dirt that had accumulated under his finger nail.\n\n\"Ah, the silent type, I see,\" said the man as he then drank his own cup. \"Well, I won't ask about it again.\"\n\nMichael finished his drink and placed another coin on the bar. \"One more,\" he yelled out to the barmaid, who responded by giving him an obscene gesture.\n\n\"You might want to treat the help around here a little better,\" said the man next to him. \"I've seen Bancroft's men take away other men for lesser offenses.\"\n\n\"Fuck Bancroft's men,\" said Michael, taking a chance to look at the man for the first time. \"And fuck Bancroft himself. I'll kill him with my bare hands.\"\n\nMichael's first look at the man wasn't an unpleasant one. The man beside him would be considered good-looking to most women in Java with his short curly hair and his smooth jaw. He appeared to be only a few years older than Michael but his eyes had a depth to them that Michael had a hard time placing.\n\nThe man's dark eyes went wide. He put his hands up. \"I'd keep my voice down if I were you,\" advised the man. \"Or else you just might get carted away tonight. Bancroft has people everywhere.\"\n\n\"I don't care,\" ranted Michael. \"He can take me if he wants. I have nothing left now because of that fucker, and I'll kill him myself if it's the last thing I do.\"\n\nThe man was shocked. Even the barmaid was now putting some distance between her and Michael, knowing he was likely to be a dead man walking. Excited whispers were now going through the bar. Quite a few men were openly staring at Michael.\n\nThe man next to him placed a coin on the counter for Michael's last drink and quickly shuffled him away, out the side entrance. \n\n\"What are you doing?\" roared Michael. \"I'm not done drinking yet!\"\n\n\"Saving your life is what I'm doing,\" replied the man as he quickly led Michael down another darkened alley. They darted to one cross street before hiding behind a fence. The man waited for a minute and then double-backed the way they came before sneaking into another alley, where he placed himself flat against the wall and gestured for Michael to do the same.\n\n\"What is the meaning of this?\" asked Michael angrily. He felt the man cover his mouth instantly though. \n\nMichael saw why a moment later. Two of the bar patrons were moving through the main street no more than a few feet from their hidden location. Both of them were obviously on someone's trail, and Michael knew that it was his.\n\n\"Your outbursts caused the attention of two of Bancroft's men,\" explained the man after the coast was clear. \"You really should learn to control your alcohol better. If we hadn't moved when we did, you'd be a dead man.\"\n\nMichael's body slumped against the wall. \"Why shouldn't I let them take me? I have nothing to live for anymore.\"\n\n\"There's a story somewhere in that statement, my young friend. Perhaps you should tell it.\"\n\nMichael stiffened at hearing the words of the man. Being called a young friend was something that reminded him of Artemis. He silently wondered how the man was faring back in the palace.\n\n\"What does it matter to you?\" asked Michael. \"For all I know, you're one of them.\"\n\nThe man started to chuckle. \"No, I can assure you that those men would want me more than they'd want you.\"\n\n\"I doubt that,\" quipped Michael. \"Not with who I am.\"\n\n\"Then who are you?\" asked the man. \n\n\"You first,\" growled Michael.\n\nThe man studied him for a moment as if to determine if he was trustworthy. Michael got the impression this man was more dangerous than he appeared.\n\n\"Seeing as your hatred for Bancroft seems to match mine, I'll decide to trust you for the moment,\" said the man. \"My name is Victor Nichols. Before the war, I used to work on my family's farm outside of Belfort.\"\n\n\"And after the war?\" asked Michael. \"What do you do now?\"\n\nVictor scowled. \"I dedicate my existence to the destruction of this regime that holds our country hostage. Bancroft is responsible for the death of my sister and mother due to his labor laws that impressed them to work against their will. They were the only people I had left in this world. Since then, I've gone underground to fight against his rulership of Java.\"\n\nMichael's eyes widened. \"You mean you're a . . .\"\n\n\"Rebel? Troublemaker? Yes to all the above,\" replied Victor. \"Which is why I think those men would have been happier to catch me instead of you. I couldn't continue to take that chance by staying in that bar.\"\n\n\"Like I said, I doubt they would be too interested in you if they got your hands on me,\" replied Michael. \"My name is Michael Bainbridge. I've spent my entire life in Belfort, and now that you've heard my last name, you'll understand why.\"",
        "\"Bainbridge. Michael Bainbridge. As in Charles Bainbridge?\" asked Victor.\n\nMichael nodded. \"He was my great uncle.\"\n\nVictor's mouth dropped open. \"Well, color me shocked. You would be more important than me. I'm surprised Bancroft left you alive when he deposed your great uncle.\"\n\n\"Something he regrets by now, no doubt,\" added Michael. \"Or he soon will, I can assure you.\"\n\n\"So you must be burning pretty hot with vengeance because of the death of your great uncle,\" assumed Victor.\n\nMichael shook his head fiercely. \"I could give two shits about his death. My great uncle treated me little better than Bancroft did. My problem with Bancroft is that he raped and then killed the only woman I've ever loved.\"\n\nIt took another ten minutes for Michael to tell him the full story but by the time he was done, Victor could only nod his head in approval.\n\n\"I can see now why you were drowning in alcohol,\" replied Victor. \"I did much the same after my sister died. She was younger than me by four years. I was supposed to be her protector. I failed in that measure.\"\n\n\"Failure is a good word for how I feel these days,\" agreed Michael. \"I feel like I don't have any reason to exist beyond making sure that Bancroft gets the punishment that he's owed.\"\n\nVictor gave him a look that was equal parts shrewd and curious. \"How would you feel if I introduced you to some people that could make that happen?\"\n\nNow it was Michael's curiosity that was piqued. \"How would you do that?\"\n\nVictor's answer shocked him.\n\n*****\n\nNick Reynolds was very much enjoying his time as the Viceroy of Ruthenia. \n\nIt was hard not to enjoy the moments spent with near total power over all Ruthenians. Ever since the surrender of the country months ago, Javan forces had taken over complete control of all major cities and ports.\n\nThere was no such thing as a Ruthenian Army any more. It had been disbanded.\n\nThere was no such thing as a Ruthenian congress anymore (what they called the Vort). It had been disbanded and most of its leaders had been arrested and executed for being the architects of the war against Java.\n\nEven the former emperor was nothing more than a docile, housebroken puppy that Nick paraded around when he wanted an air of legitimacy to his acts. \n\nNo one was fooled by the display. Even the children on the streets knew who was really in power. And it certainly wasn't the young fool wearing the crown jewels.\n\nNo, life in Ruthenia had settled into a near comfortable malaise that Nick found hard to leave. He knew that it was likely he'd have to return to Java someday, although he hated the thought. For one, that would mean an end to the steady stream of Ruthenian whores that he'd become accustomed to, and Nick was in no hurry to get back into the bed of his wife.\n\nHe was also not in a hurry to go back to Java, where he wouldn't have anywhere near the levels of power that he wielded in Ruthenia. The moment he stepped onto Javan soil, he would have to be a loyal subject of the Emperor once more, a thought he didn't relish.\n\nEven still, not everything was roses with his rule over Ruthenia. In fact, the situation seemed to be growing more unstable by the day, despite his total power over the country. At first, Nick had seen random acts of violence in the aftermath of the signing of the treaty. Those acts had included petty vandalism and senseless killings of Javan soldiers.\n\nAfter a couple weeks of this, there were reports of ambushes of larger groups of Javan soldiers as they moved about the interior. Curiously enough, those ambushes never occurred in larger towns or cities, but always when the Javans were moving throughout the countryside or through small villages.\n\nNext came the bombs. Several went off at major sites in the city of Merv. Two of them exploded at the imperial palace, while others went off at the Vort as well as the post office. Those responsible for the carnage proclaimed themselves members of the Ruthenian resistance movement, brought together by the need to take back their country from their Javan foes.\n\nNick laughed at such a goal. His power over the country was absolute. While these attacks might be nothing more than minor annoyances, these members of the Ruthenian resistance were no closer to overthrowing Javan power than a bumblebee was in taking down a rhino. \n\nIt still made for interesting reports though. Not a day went by that some unit wasn't attacked. There was a steady flow of deceased Javan service members being shipped back home, and it was now at its highest levels since the actual fighting.\n\nWith the situation growing unstable, Bancroft had ordered that Nick do everything in his power to bring these bandits to justice. \n\nThat was what he was just doing now. Nick had left a meeting with the senior leadership of the Merv garrison as they looked for ways to strike back against the rebels. It was agreed that no quarter would be shown to any hostile Ruthenian citizens as a means of combating those with ill intent toward the Javans. It was also agreed that any patrols into the countryside would be doubled to give them strength in numbers.\n\nFor now, Nick hoped that this would be enough to start punching back against the rebels.\n\nHow very wrong he was about to be. \n\nAs Nick reentered the imperial palace that evening, he made a beeline for his living quarters, which were off a quiet wing of the palace, far from where the previous bomb strikes had taken place. Nick had been cautioned about staying in the palace but he simply doubled his guard as a means for protection and decided to stay, thinking it was all that was needed for his safety.\n\nHe arrived at his personal quarters and shut the door, but not before tipping his head to the Javan soldiers that stood outside the room. Once he was inside, Nick shrugged off the robes of the viceroy and moved closer to his bed.\n\nIt was already occupied but that was nothing new. Arina was already sleeping, and the sheet that covered her was only draped over half her body. Her breasts were completely within sight, capped by the most lovely light brown nipples. \n\nIf there was any whore in Ruthenia that could be said to be his favorite, it was Arina. She wasn't the common type that could be found on any darkened street corner. Instead, Arina was a high society type of girl, the type that was often seen in the company of important men. As she told it, she'd entertained several members of the Ruthenian Vort before the war, and she had a reputation as a sexual fiend of the highest order.\n\nIt wasn't unlike Arina to fuck him with an intensity unmatched by just about any other woman that Nick had ever been with. Just when he thought it couldn't get any better, Arina would swiftly yank him out of her pussy and reinsert him into her ass, letting him shoot his load in her bowels. \n\nIn terms of whores, Arina was extremely talented, and he ensured that she never left his personal quarters much these days.\n\nEven though she was already sleeping, Nick thought to awake her with the sudden protrusion of his cock against her backdoor. That would certainly awaken the wildcat within and set the tone for the evening. He'd just slipped into bed and turned off the light when his world exploded into chaos.\n\nThe sound of the explosion was deafening. The stillness of the night ended abruptly as a flash of light and two great booms destroyed what was left of Nick's quarters. His ears rung with a steady beat of high frequency tuning, the result of the damage done by the closeness of the explosion. \n\nNick could only blink as he attempted to take stock of what had happened. In the next moment, his soldiers were swarming into his room. Several others were already dead, as evidenced by their bloodstained cheeks as they laid prone on the floor.\n\n\"What . . . what happened?\" murmured Nick as he tried to clear his foggy mind. \n\n\"A bomb, sir!\" said one of the soldiers, his voice sounding incredibly distorted due to the damage of Nick's ears. \"Are you hurt?\"\n\nIt was an excellent question. Nick didn't feel hurt. \n\nBut why was he covered in blood?\n\nHe soon figured out why. A casual glance to his left revealed that part of the ceiling had collapsed in the explosion. Nick looked up to see the night stars over Merv and nothing else to block them. That part of the ceiling had landed squarely on Arina, crushing her body. Nick had found the source of the blood. Judging by the look on her face, Arina had died instantly.\n\n\"Come on, sir, we have to get you out of here!\" yelled the soldier as he started to yank on Nick's arm.\n\nNick let himself be dragged from the room but he couldn't help but hazard a glance when he reached the door. The room was totally destroyed. That it had once been a bedroom was completely irreverent now. \n\nIt was now nothing more than shattered wood and dust.\n\nNick was moved out of the palace under heavy guard. Despite the late hours, a full regiment was assigned to protect him, making sure that no one else could get anywhere close to him. That regiment escorted him back to Javan military headquarters on the outskirts of Belfort where he was greeted by General Cole Ortman, nominally in command of Merv and the surrounding countryside.\n\n\"Sir, we're going to get you into secure quarters immediately,\" informed Cole, already having been briefed on the episode.\n\nThat was all well and good for Nick but his head was still spinning from the explosion. \"What happened out there? My quarters are gone.\"\n\n\"A bomb, sir,\" replied Cole. \"Actually, two bombs. My men are searching the palace grounds now but so far, we've only found the remains of two. Someone wanted to take you out and they damn near succeeded.\"\n\n\"Arina,\" muttered Nick. \"They got Arina, not me.\"\n\nThe name meant nothing to Cole. \"You'll be fine now, sir. I have my men preparing a living space for you right now. You'll be safe for the rest of the night.\"\n\n\"Who did this?\" asked Nick. \n\nUnfortunately, he already knew the answer.\n\n\"No doubt it was the rebel groups,\" replied Cole. \"They're getting braver. Trying to kill the Viceroy of Ruthenia? We haven't seen the end of this rebellion.\"\n\nNick clenched his hand into a fist. \"I will kill them all. There is no way I'll let this slight go unanswered.\"\n\n*****\n\n\"Gaius! Welcome to Kalmar!\"\n\nIt was already the next day, and the next batch of arrivals had arrived at the Galician capital city. Today, Jack, Kat, Abigail, and John were amongst the group that awaited the next head of state to arrive, which happened to be the King of Naxos.\n\nGaius arrived on a Sorellan trading ship, one of the largest non-military vessels in the entire West. Jack was reminded of his time on such a vessel, or rather when he'd been trying to search for Kat and Vera before they were captured and taken to Andalucia. That particular vessel had been sinking, and Jack was very glad to see this one was not.\n\nThe Nax King descended from the ship with little difficulty but that wasn't to say that all was right with the man. He still assumed that same shell-shocked expression on his face that he'd worn when Jack last left Naxos. Gaius' imprisonment had left a brutal mark on the man's psyche, and it was obvious to Jack that it would last him for the rest of his life.\n\n\"It is good to see you, Jack,\" said Gaius as they shook hands. \"And your queens are just as lovely as the last time I saw them, if not lovelier.\"\n\n\"I knew I liked Gaius the best,\" said Abigail with a grin. The two women greeted the king before he focused his eyes on Jack.\n\n\"No offense, Jack, but I didn't think I'd be seeing you again so soon. I was pleased to hear about the surrender of Dagobern but my curiosity is going wild trying to figure out why I'm here. Your message didn't give me much to go on.\"\n\nJack shook his head. \"No, it didn't, and that was by design. More will be revealed tomorrow when we kick off the council. This matter is of utmost importance, which is why I asked everyone to be here but rest assured, you will learn more tomorrow.\"\n\nGaius could only shrug, and after some tepid small talk, he departed in his own car to make for the Castle, which was great timing because the next group of arrivals soon descended down the gangplank.\n\nOf course, it was only right that the Sorellan royal couple caught a ride on their trading vessel, and Nikias and Elektra were the next to greet Jack and his family. This greeting was warmer than the one that was exchanged with Gaius, and Jack found himself happy to see his old friends once more.\n\nNotably, there was a small difference that was instantly noticeable.\n\n\"You're pregnant,\" blurted out Abigail as she appraised the bump in Elektra's stomach.\n\n\"Abigail,\" hissed Kat. \"You're not supposed to ask that before they're ready to tell you!\"\n\nAbigail waved her hand. \"That rule is only for men, and I know a pregnancy bump when I see one.\" She turned her head to look at Elektra. \"How far along are you?\"\n\nElektra beamed with a radiant smile. \"About five months, give or take. We only found out shortly after you left Sorella this last time.\"\n\n\"A hearty congratulations are in order then,\" exclaimed Jack as he shook Nikias' hand fiercely. \"Welcome to fatherhood, Nikias.\"\n\nNikias looked slightly apprehensive about the thought of becoming a father. \"You'll have to give me all the tips you've learned with your child. I don't feel well-suited to becoming a father.\"\n\n\"You'll be just fine,\" promised Jack. \"And trust me, it's a learning experience. You'll feel intense frustration while raising the child but also a love that you can't explain with words. Most days, you'll feel both emotions within minutes of each other. But if you truly want to get a jump on it, I can tell you all about what it's like. And I can introduce you to someone who can give you the same perspective,\" said Jack, making a mental note to introduce Nikias to Bill, who helped Jack so much during his early days of fatherhood.\n\nJack accompanied them back to the palace, which was now beginning to look like a large family reunion with all the heads of state mostly present. It was slightly after noon when he was informed of the next arrival, and this time, it was just him that was present in the harbor when an Andalucian slaving trawler made its way to the docks.\n\nRather, it was a former slaving trawler. Ever since Jack banned the unsavory practice in Andalucia after taking over the kingship, most of the trawlers had been converted to commercial fishing uses. \n\nFrom the trawler stepped the current Andalucian Regent, Masud, formerly of the Burlada clan. Masud's beard was no grayer than the last time Jack saw him, but he looked somehow more energized, as if there was a spark inside him that had been awakened. \n\n\"My King, it's a pleasure to see you again,\" said Masud with a heavy bow in front of Jack. \"It's been too long.\"\n\n\"Look at you, Masud, you look like a man twenty years younger,\" marveled Jack as he embraced the other man. \"What's your secret? Have you found some kind of elixir of life?\"\n\nMasud tilted his head back and forth before letting out a toothy grin. \"It might be a new woman, Sire. In fact, it definitely is.\"\n\nJack was relieved to hear that. Masud's wife had passed away in the past year after a long illness. He knew that it affected Masud more than he would let on (and that was just judging by his dispatches), but seeing that the man had a new flame already returned that spark to his eyes.\n\n\"That's wonderful, Masud. What's her name?\"\n\n\"Yadira, Sire,\" he replied. \"She's fifteen years younger than me and she has the energy to boot. I'm afraid it's all I can do to keep up with her sometimes.\"\n\nJack chuckled. \"Well, if you are late to the council meeting in the morning, I suppose we will know why.\"\n\nMasud shook his head. \"No, unfortunately, I left her back in Andalucia. This trip was needed. I needed the days of rest before she killed me.\"\n\nJack listened to one raunchy tale before he could redirect Masud back to the palace. He was glad to see that the man had feminine companionship again, even if it sounded like the girl was more than he could handle.\n\nThe last arrival for that day didn't come until close to nightfall. It was a Carinthian cruiser that brought over the reigning queen, Reina, and she disembarked from the ship with all the aplomb that could be managed for a woman of her station.\n\n\"Jack, my dear, it's lovely to see you again,\" gushed Reina as she squeezed him tightly. \"I trust you've been well? You look like you're a little thin.\"\n\nJack smiled. \"As well as can be, Reina. How are you? How are things in Carinthia?\"\n\nReina made a distressed face. \"As good as can be but they're not perfect. Of course, I'm on the lookout for a new husband already.\" She placed her hand on Jack's arm. \"Know anyone who might be interested?\"\n\nJack politely pulled his arm away. \"I think my two wives have it covered pretty well unfortunately. But don't think that I didn't give it serious thought!\"\n\nReina purred with happiness and her cheeks even turned a shade of red. It was a total lie of course but a degree of flattery was needed with the Carinthian Queen to get anywhere.\n\n\"Well, keep an eye open for any eligible bachelors, will you please?\" she asked. \"I don't care where they're from as long as they're young, virile, and have a penchant for giving pleasure.\"\n\nJack tried to keep a straight face. \"I'll keep my eyes open.\"\n\n\"So is everyone here then I take it?\" she asked as she looked around the harbor. \"I see an Apulian cruiser, a Sorellan trading ship, and even an Andalucian trawler. Have we all arrived?\"\n\n\"For the most part,\" answered Jack. \"But there's one more coming tomorrow morning. I figured I'd kick off the council in the afternoon.\"\n\nReina gave him a confused look. \"One more coming? Just who might that be? I know Hendrick and Aedan came with Santino so that doesn't leave anyone else out. Who else did you get to come? Are the Kishians coming?\"\n\n\"More will be revealed in the morning,\" answered Jack, already tired of giving the same non-answers. \"We all have a lot to discuss. There's a few things on the agenda tomorrow that might be shocking for all involved but it's only with good reason that I bring everyone together.\"\n\nReina shrugged and made for the waiting car. \"I guess it can't be too bad. It's not like the Swabians are coming or anything, right?\" She didn't wait for his answer as she already started to laugh. Reina was still laughing as she got into the car and closed the door.\n\nShe didn't look back at Jack's face and that was probably a good thing since he was already cringing.\n\n*****\n\n\"Ambros Ferberg, welcome to Kalmar.\"\n\nThe last visitor to Jack's capital city was perhaps the most unlikely. Of course, there had been nothing out of sorts when the Galician destroyer arrived in the city that following morning. The official purpose had been to bring back General Greg Vaughn from Swabia to attend the war council but it was at Jack's request that a second person was brought along as well.\n\nAmbros Ferberg looked uneasy as he stepped foot on Galicia soil. He tentatively approached Jack and offered his hand. \"Are you sure this is a good idea, Your Majesty?\"\n\n\"Ambros, the war is over now. Call me Jack, will you? We agreed that I could call you by your first name so why not extend me the same courtesy?\"\n\n\"Even still,\" said Ambros as he looked around the harbor. \"It makes me uneasy to be here. No offense, of course. It's just that I'm assuming I'm the first Swabian on Galician soil in a long time.\"\n\n\"No doubt, but you're here on my invitation,\" said Jack. \"And everyone else will respect my intent if nothing else.\"\n\nThat answer didn't seem to totally appease Ambros but his eyes settled in on the person at Jack's side next. \"Excuse my rudeness, I'm General Ambros Ferberg of Swabia.\"",
        "Vera managed to look shocked. She took his hand and shook it cautiously before shooting a glance at her brother. \"You're right about him, Jack. He definitely doesn't seem fully Swabian at all.\"\n\nJack grinned but didn't answer the charge. He knew that Ambros was still particular about those that learned about his Apulian heritage. For that reason alone, he didn't enlighten his sister about the general's dissimilarities with his people.\n\n\"So you're Jack's sister?\" asked Ambros after Vera introduced herself. \"Does that mean that\u2014\" \n\n\"Vera!\"\n\nAll three of them looked back to the ship as Greg raced down the gangplank. Vera met him halfway and the two collided into a passionate embrace. It became so much that both Jack and Ambros averted their eyes rather than continue to watch.\n\n\"I believe you were about to ask if that is Greg's Vera,\" said Jack with a noticeable chuckle. \"And the answer would be yes.\"\n\nOnce the two lovers separated, Greg made his way toward Jack and Ambros. He embraced Jack fully and gave a subtle nod of approval to Ambros.\n\n\"How are you, my old friend?\" asked Jack once they separated. \"How's occupation been treating you?\"\n\nGreg puffed out his cheeks. \"It's boring. It's incredibly boring. I think I've been spoiled with so much fighting. Now, I wake up every morning in an empty bed and listen to the sounds of birds chirping. It's hard for the psyche of a general.\"\n\n\"We can at least fix the empty bed part,\" said Vera quietly, and she quickly turned red when she realized she hadn't said that as silently as she thought.\n\n\"There's no hard going then in Swabia?\" pressed Jack. \"All is calm?\"\n\n\"As calm as can be,\" said Greg as he looked at Ambros. \"Thanks in part to him. I thought keeping a firm grasp on the Swabian lords would require more time and effort. Thankfully, Ambros here makes it easy to do. I left General Cartier in charge over there and I'm certain none of the lords will make a fuss for him.\"\n\n\"They're like tiny dogs or so I've always thought,\" added Ambros. \"They like to bark a lot but the second you show any sort of aggression towards them, most will cower and piss themselves. Remarkably, we haven't had many issues in Swabia.\"\n\n\"And the city is rebuilding?\" asked Jack. \"Dagobern, I mean?\"\n\n\"It looks like it did before you arrived, Jack,\" promised Ambros.\n\nJack grinned. \"That's hardly a ringing endorsement, Ambros.\"\n\nThe Swabian general laughed. \"No, it really isn't, is it? Either way, most of the wounds of war will heal over time. I look forward to seeing what's to come for my country.\"\n\n\"As do I,\" said Jack. \"And I look forward to the partnership that we've established. It's because of that partnership that I wanted to ensure that you were here in Galicia for this council.\"\n\n\"Yeah, about that, Jack. Are you sure this was a good idea?\" asked Greg as he gestured toward the Swabian general. \"I think a lot of people here are going to have a fit if a Swabian enters their midst.\"\n\n\"Then they can have a fit then,\" replied Jack as he looked over at Ambros. \"You've been a big help to me ever since fate brought you into my circle. It wasn't the best of circumstances that it happened but I think we've made the best of it. The challenge in front of us is something that will affect everyone here in the West. It's only right that the Swabians are brought into the discussions on how to deal with it.\"\n\n\"So quick on the heels of the other war though, Jack?\" asked Greg. \"I can see maybe a few years down the line but it's only been a few months since Dagobern fell. Tensions between both sides are still going to be hot. You're going to have an uphill battle in front of you.\"\n\nJack shrugged. \"When do we not have an uphill battle? Just about everything we've faced since we came to the West has been a long shot. It's the only odds that we know how to deal with.\"\n\n\"Even still, it makes me uneasy,\" said Greg.\n\n\"I need you to put it aside then,\" asked Jack. \"I'm going to be relying on you to make the case for your partnership with Ambros in Swabia. Our allies need to know that we can work with them, and you're going to help me paint that picture.\"\n\nGreg let out a deep breath. \"I'll do my best, Jack.\"\n\nJack put his hand on the other man's shoulder. \"I know you will, my old friend. I'm glad to have you back. Why don't you give me some time to talk with Ambros here and then stop by my study an hour before noon?\" Jack's eyes flickered to his sister and back to Greg. \"That should give you some time for you two to get reacquainted.\"\n\nGreg managed to turn red at the insinuation but Vera firmly took his hand and started to drag him away. \"Thank you, Jack! We'll see you soon!\"\n\nJack stood next to Ambros and watched as Vera and Greg left for the palace.\n\n\"That woman has some serious designs on your general, Jack,\" he noted.\n\nJack chuckled. \"That she does. She might not look the part, but she usually gets what she wants. I guess that's the reason she's my sister.\"\n\n\"It appears that you get what you want most of the time as well,\" replied Ambros. \"I never would have pictured the day that I would step foot in Galicia. It kind of makes my skin crawl a little.\"\n\nJack patted the other man's back. \"Come on, let's get another first out of the way. First Swabian in the Galician Castle.\"\n\nThe two men climbed into a car that brought them to the summit of the city where the main entrance to the Castle was found. Jack brought Ambros inside and led him to his study. Along the way, just about every servant that they passed managed to stare at Ambros' distinctive Swabian features. A few of them even gawked. Jack saw it as a preview of what awaited him later that day when the council began.\n\nWhen they arrived at Jack's main study, there was already someone there waiting for them. Santino was sitting opposite the main desk and looking out the window at the city. When he saw Jack arrive, he scurried to his feet.\n\n\"Jack, there you are,\" said Santino. \"I was hoping to meet with you before the council.\"\n\nImmediately, Santino's eyes fell on Ambros. His expression darkened.\n\n\"What is he doing here?\" asked Santino with a hint of hostility. \"Why are the Swabians in Kalmar?\"\n\n\"He's here at my invitation,\" said Jack. \"Ambros will be attending the council as my delegate from Swabia. The threat that we're facing should have a response from all the major powers in the West. I'd be remiss if we didn't include the Swabians in that council.\"\n\nSantino sniffed and crossed his arms in front of his chest. \"They are still our enemies, are they not? Any potential threat to the rest of us probably comes from Swabia to begin with.\"\n\n\"It does not, not this time,\" said Jack. \"But more will be talked about at the council.\"\n\nSantino's eyes burned. \"I don't like this, Jack. I don't like this one bit.\"\n\n\"Perhaps I should go,\" said Ambros quietly. \"I don't want to get started off on the wrong foot here.\"\n\nSantino snorted. \"It's a little late for that. I still have thousands of destroyed families in Apulia because of the Swabian invasion. I'd say we'll never have the chance to start off on the right foot at all.\"\n\n\"Peace, Santino,\" said Jack, raising his hands. \"He's my guest here and I won't start off this council with hostility.\"\n\n\"Council for what? You still haven't given me any details about what this council is for,\" said a dismissive Santino. \"Why are we even here, Jack? What insignificant little reason has caused you to gather us here against yet another threat?\"\n\nIt was clear that the Apulian Director was losing his patience. So was Jack, who felt ready to unload on Santino for dismissing the very purpose of the council.\n\nThankfully, Ambros was the one to reply to that, and he did it much more tactfully than Jack had in mind.\n\n\"Jack's adoptive family was brutally murdered by a dictator across the ocean who's determined to conquer the West and subjugate it totally,\" said Ambros quietly. \"If we don't band together, we'll never have a chance at defending ourselves.\"\n\nSilence greeted the room. Santino didn't seem to know how to respond to that. The expressions on his face flickered from annoyance to interest to curiosity in a matter of seconds. Even Jack stood looking at Ambros, wondering how he knew the full story. Only a few had known the truth.\n\n\"Greg shared it with me,\" said Ambros, answering the mystery. \"I hope you don't mind, but I think it's a sign of the partnership that I've developed with him.\"\n\n\"Well, it appears that you two are getting along rather well,\" noted Jack. He then turned to look at Santino. \"Ambros has it correct. There is a grave threat to all of us and unless we work together, we'll never defeat it. That's the reason for the council. I hope that meets your criteria for what I consider to be urgent.\"\n\nSantino didn't have the courage to speak. He nodded his head, no doubt feeling like a child that had just been scolded.\n\n\"Excellent,\" replied Jack dryly. \"Before you leave, Santino, you should stick around for this next part. It'll be good for me to have a witness for what's about to come.\"\n\n\"Witness?\" asked the Apulian Director. \"Witness for what?\"\n\n\"For what I'm about to do,\" said Jack as he turned to look at Ambros. \"Something I've been meaning to do for a while after Ambros has proven himself to me.\"\n\n\"Proven myself?\" asked Ambros. \"In what regard?\"\n\n\"In your ability to lead,\" replied Jack. \"I know you can lead men on a battlefield. That point has already been made crystal clear to me. What I refer to now is how to lead men in the ultimate arena. I'm talking about the leadership of Swabia.\"\n\nAmbros' eyes went wide. \"Of Swabia? You want me?\"\n\n\"You're a lord, aren't you?\" asked Jack with a wry smile. \"I know that Avila made you one at one point in time. Shouldn't a lord lead in Swabia?\"\n\n\"But I'm a general, not a politician,\" he protested. \"I don't know the first thing about ruling.\"\n\n\"You'll find that ruling is a lot like leading men in battle,\" replied Jack. \"There's about the same margin for error and being able to delegate your tasks is half the battle. You're also well-respected within Swabia so it's my expectation that you will make a great king of Swabia.\"\n\n\"King, Jack?\" asked Santino, confused. \"There aren't any kings in Swabia. Just emperors.\"\n\n\"Not anymore,\" said Jack. \"The Swabian Empire has been abolished, remember? There will be no more Swabian emperors per the terms of our peace treaty. From now on, I will only allow a king to rule over the new Swabian Kingdom. It's my hope that taking away the emperor will help to temper some of the more aggressive characteristics of the Swabians.\"\n\nWith those words, he motioned for Ambros to get on his knees. The man did so with only a tiny amount of confusion.\n\n\"As the King of Galicia and the Overlord of all the West, I place the office of King of Swabia on your shoulders, Ambros Ferberg,\" said Jack with a booming voice. \"May the office stay within your family in perpetuity until the day comes that you or your heirs can no longer fulfill it.\"\n\nThough it was a far cry from an official ceremony, the words were simple enough to convey the true power of Jack's position in the West. It was also his prerogative to name the next leader of Swabia, as evidenced by the peace treaty that had been signed to end the Fifth Swabian War.\n\nFerberg looked like something the birds had picked over. His face was a mixture of shock and apprehension. Even worse, Santino was openly gawking now, and Jack had a feeling he couldn't wait to share this with the other heads of state so that they could collectively come down on this.\n\n\"Rise to your feet, King Ambros of Swabia,\" beckoned Jack. \n\nAmbros did so uneasily. \"I don't know what to say, Jack. This is beyond anything that I ever could have imagined.\"\n\n\"You don't have to say anything right now,\" replied Jack. \"Just take it all in. In time, it'll come to you. Maybe not today, maybe not tomorrow, but at some moment, the weight of the office you now fill will fall on your shoulders. When that day comes, we should have a talk. But you are now the leader of Swabia. All the lords in Swabia are answerable to you, as if they weren't already.\"\n\n\"Jack, can we please talk about this?\" asked a quiet Santino. \"Before we get too far into this charade?\"\n\nJack shook his head. \"My mind is made up. This is no charade, Santino. Besides, I can't very well have a council here without all the heads of state of our alliance.\"\n\n\"So the Swabians are in our alliance now as well,\" spat Santino. \"Where does it end, Jack? Are we to host Swabian garrisons now too?\"\n\nJack let out a sigh. He would have to deal with Santino before this developed any further. He turned to look at Ambros. \"Why don't you get some rest? The council will begin this afternoon. I'm sure you're hungry and in need of some rest before that happens. Speak to the servant outside my door once you leave. He'll take you to your official quarters and attend to anything you need. Your luggage has already been sent there.\"\n\n\"Thank you, Jack,\" replied a still shocked Ambros. \"I don't know what to say.\"\n\n\"Just know that I still have my eye on you, Ambros,\" said Jack sternly. \"You've done well to prove yourself to me, but I'm still going to be watching to make sure my faith in you isn't misplaced. Don't disappoint me.\"\n\nAmbros nodded his head and left without any further words.\n\nThat gave Santino all the courage he needed to go off.\n\n\"Really, Jack, promoting him to the kingship? Of Swabia? Are you kidding me? What are you thinking? We just destroyed the Swabians and now you want to make them strong again?\"\n\n\"The Swabians are going to be strong whether we like it or not,\" replied Jack calmly. \"And they need new leadership and Ambros is the best candidate.\"\n\n\"How can we possibly hope to trust them again though?\" asked Santino. \"You know how they are. Aggressive, hopeless, unimaginative\u2014those are all the qualities of your typical Swabian. They'll cause rifts in our alliance, Jack. I can't believe they can be trusted.\"\n\n\"I believe that Ambros can be trusted,\" said Jack. \"And the respect that the other Swabians have for him is enough to keep them in line. As long as he's around, he'll keep the rest of them in line.\"\n\n\"What makes you believe that? Surely you don't trust him blindly.\"\n\nJack gave him a hollow look. \"I trust no one blindly. He's shown me that he can be trusted though.\"\n\n\"But he's Swabian!\"\n\n\"He's half Swabian,\" whispered Jack. \"The other half is Apulian, ironically. His father from what I've learned.\"\n\nSantino's mouth gaped open. \"What?\"\n\n\"It's true but keep that between ourselves,\" said Jack. \"Ambros is only half Swabian which makes me more inclined to work with him. The aggressiveness of the Swabian people is tempered in him by the good-natured and hardy people of Apulia. That gives me reason to hope that he'll be different.\"\n\n\"But the lords. The lord won't like this!\"\n\n\"Enough, Santino,\" said Jack firmly. \"What's done is done. You need to trust my judgment about this and leave it alone. The threat that faces all of us is grave enough. We cannot hope to stand alone, even with just our alliance minus the Swabians. They are strong in their own right. It's only with their help can we hope to stand together.\n\n\"I still don't like it,\" replied Santino with firmly crossed arms.\n\n\"You don't have to like it for now,\" said Jack with a shrug. \"And if I get proven wrong, you get to be the one that says I told you so.\"\n\nSantino scoffed. \"Let's just hope on that day that I'm still around to do it. With the Swabians, I'm not sure I'll get that chance.\"\n\nSantino didn't stay long after that. In fact, he beat a hasty retreat to leave Jack's study immediately after. Jack figured that he was off to find the other heads of state, no doubt to tell them what Jack had done. \n\nAt this point, Jack hardly cared. He knew he already had an uphill battle. He supposed that the sooner that the rest of them found out about Ambros, the better off they all might be.\n\nJack wasn't by himself for much more than an hour when Greg reappeared at his door. The general looked remarkably bright-eyed and he couldn't stop grinning. It wasn't hard to guess why.\n\n\"I take it you and Vera had some time together?\" asked Jack.\n\nGreg turned a shade of red. \"Yes, we did. Some really good time together.\"\n\nJack put his hands up. \"Stop right there,\" he joked. \"I don't need any more details. I'm sure she's glad to have you home.\"\n\n\"As I am to be home,\" replied Greg. \"There might be peace in Swabia but the country is still not my cup of tea. It's just too . . . bland. Working with the Swabians all this time has gotten tiresome. You have to tell them something two or three times before they get it. It's not that they're being rebellious or anything like that. It just takes a long time for an original idea to penetrate their thick skulls.\"\n\nJack chuckled. \"Hopefully it wasn't the same working with Ambros?\"\n\nGreg shook his head. \"Not at all. He's a good man, that one. That he's not fully Swabian shows in his actions. He's been a good help to me during my time in the country. And I think he'll continue to be helpful.\"\n\n\"That's good, because I should tell you what I just did,\" said Jack as he sat down in his chair. \"I just made Ambros the next ruler of Swabia.\"\n\nGreg stuck out his bottom lip as he appraised the idea silently. Eventually, he started to nod. \"I don't hate the idea.\"\n\n\"Truly? You would tell me if you did?\"\n\n\"Of course. We've known each other long enough for total honesty, right?\"\n\nJack smiled. \"I hoped so which is why I wanted your opinion about it. Do you think it's a good move?\"\n\n\"There's no one else that's better qualified to run Swabia than he is. Your only other options would be to either split the country up and make every lord his own head of state, but there would be no Swabia after that.\"\n\n\"A poor idea,\" interrupted Jack. \"Especially if we are going to stand together against Bancroft.\"\n\n\"Or you could have promoted another lord to the kingship,\" said Greg. \"But I find the other lords to not be possessing the right qualities of leadership. Their chances of doing something stupid are great, and they need a strong hand to keep them in line.\"\n\n\"Something that King Ambros can manage on his own,\" replied Jack.\n\n\"In that case, I'm in full agreement with you,\" said Greg. \"Let's hope that this next head of state is a lot easier to work with than the old one.\"\n\nJack chuckled. \"I doubt anyone will shed a tear for the memory of Avila. I'm looking forward to the day when the Swabians can be full partners of ours. Not just because it would represent a total reconciliation between Galicia and Swabia but because of the power that could be wielded if the two states banded together, joined by their allies of course.\"\n\nGreg let out a sigh as he sat down opposite of Jack. \"It's about the only way we stand a chance in this next fight. You and I know the threat that Bancroft poses. He has the world's most powerful navy and army at his disposal, and now he has the full resources of Occitania and Ruthenia to count on. He's not going to be easy to take down.\"\n\n\"No, no, he's not,\" agreed Jack. \"But we have to do it anyway. He'll never leave us in peace if we don't.\"\n\n\"Peace,\" scoffed Greg. \"What is it? I haven't seen it in so long that I don't even know what peace is. We had a little taste of it for about a month and then it was gone. It's almost like the universe doesn't want us to die as old men.\"\n\nJack gave him a sad look. \"I fear that it was always going to be fated so, Greg.\"\n\nGreg let out a sigh. \"In any case, there's something I wanted to talk to you about. It's about Vera.\"\n\nJack raised an eyebrow. \"You already had my permission to marry her. You're not backing out, are you? If so, I hate to break it to you but you're going to have to be the one to tell her. I'm not doing your dirty work for you.\"",
        "Greg chuckled. \"Spoken like a true brother. No, I still wish to marry her. In fact, that's what I wanted to discuss more.\"\n\n\"Oh?\" asked Jack. \"In what regard?\"\n\nGreg swallowed heavily. \"We're going to have to leave Kalmar soon to confront Bancroft. It might not be tomorrow or next week or next month, but it is coming. You know it as well as I do. I don't want to leave Kalmar again without Vera being my wife. With your permission, I'd like to marry Vera as soon as we can do so.\"\n\nJack let out a wry smile. \"What has you in such a hurry?\"\n\n\"I think you can tie it back to your previous statement about perpetual war,\" said Greg. \"It's very likely many are going to die in this next war. Personally, I don't want to die without making her my wife. I don't want to regret that I didn't do it sooner, especially if the end does find me sooner than expected.\"\n\nThat was a heavy sentiment and it gave Jack a lot to think about. In a weird way, it was also why he was still onboard with the idea of getting Abigail pregnant. If he were to die in this next war, at least Abigail would have their child to remember him by. With Greg's reasoning, it sounded like he was also on the same wavelength.\n\n\"I can understand that feeling well,\" said Jack finally. \"And I'm in full agreement. You have my blessing. You can get married as quickly as you'd like.\"\n\nGreg had barely let out a smile when the door to the study crashed open. Vera rushed in with the world's largest smile and embraced her brother with all the enthusiasm she could muster.\n\n\"Oh, thank you, Jack,\" she gushed. \"Thank you, thank you, thank you.\"\n\nJack started to laugh. \"What in the world, Vera? Were you listening at the door?\"\n\nShe nodded her head. \"I hope you don't mind but we've been meaning to talk to you about this for sometime. It just so happened to be on the day that Greg got back that we decided to move forward with it.\"\n\n\"You've been talking about this for some time then?\" asked Jack.\n\nVera nodded. \"For a long time,\" she answered as her eyes met Greg's. \"I want to marry him, Jack. I want him to be mine forever.\"\n\nGreg's ears went red at that statement, and it gave Jack a good chuckle.\n\n\"No reason for me to stand in the way of true love then,\" said Jack. \"You can marry as soon as you like.\"\n\nVera hugged him again. \"I owe you one, Jack. Seriously, I do. When you say soon, do you mean like . . . tomorrow?\"\n\nJack laughed even harder. \"You two really are in a hurry, aren't you?\"\n\n\"We've just put it off for so long because of the war,\" replied Greg. \"Now that we're both here, it seems like a good idea to finally get it out of the way.\"\n\n\"That's entirely fine, and we can help you plan a ceremony,\" promised Jack. \"But let's just wait until after the council, all right? Let's let that have our full focus, and then once it's over, we'll attend to your wedding. Deal?\"\n\nVera couldn't stop smiling. \"You have yourself a deal, Jack.\"\n\n*****\n\n\"Fire the main guns again. I want to experience it one more time.\"\n\nBancroft was grinning like a young officer for the first time in decades. The captain of the ship obeyed the order without a second thought, giving the order to his division head. Within a matter of minutes, the ship buckled as another thunderous salvo erupted from her guns and shot over the horizon. \n\nOf all the ships in the Javan Navy, this one had the most firepower. She combined the two critical aspects that defined how useful a ship could be in battle\u2014firepower and speed. That she was able to send such ordnance while cruising at near full speed\u2014a speed that put her on par with his lighter cruisers\u2014was nothing short of remarkable.\n\n\"This is just excellent,\" gushed Bancroft as he clasped his hands together. \"These ships are a marvel. I can't wait to see them in battle.\"\n\nThe captain bowed his head. \"I'm so glad you were pleased with the demonstration, Your Imperial Majesty. It's an honor to show off my new ship to you.\"\n\n\"It's my hope that you use this ship to destroy those Fourthie savages,\" said Bancroft with a stern look. \"This ship is deadlier than any other ship afloat. With the three other battlecruisers in this class, you'll destroy what remains of the traitor, Jack Easterbrook, and his rebel fleet.\"\n\nThe captain nodded his head but said nothing else. It took another hour before they arrived back at Belfort harbor, and Bancroft descended from the mighty battlecruiser to the main harbor, where he was met with his imperial guard as well as Clark. Bancroft stood back and marveled at the ship, which was now ready to take on its first mission. His eyes were attracted to the side of the hull, where the ship's name was proudly displayed.\n\nThe Revenge was the first of the four ships in her class. And she was aptly named for the revenge that Bancroft was going to take against his former protege. There was nothing else like her afloat, and Bancroft was sure that with the Revenge-class leading the charge, he would quickly bring Easterbrook to heel.\n\nBancroft walked over to Clark with the smile still displayed prominently on his face. Clark's face was the same neutral that it always was, and Bancroft couldn't resist the urge to poke fun at him.\n\n\"Why the long face, Clark?\" asked Bancroft as he gestured to the ship behind him. \"How can you not be in a good mood after seeing such a vessel? This ship is going to make our enemies tremble!\"\n\nClark's eyes briefly flickered to the Revenge but they soon came back to Bancroft. There was just no interest in the ship there. Bancroft suspected it was the reason why Clark was always a desk officer and not a field one. He just didn't have that sheer appreciation for a good piece of machinery. \n\n\"I'm glad you're satisfied with the latest addition to the fleet,\" replied Clark quietly.\n\nBancroft rolled his eyes. He raised his hand and slapped the back of Clark's head. It was a move of total disrespect but it was one that he'd visited on Clark several times in recent memory. Clark gritted his teeth at the public insult but said nothing.\n\n\"Honestly, Clark, there are times when I think you're losing your marbles,\" said Bancroft with a shake of the head. \"You can manage a little more enthusiasm than that, can't you?\"\n\nClark said nothing except he continued to rub the back of his head where he'd been struck. Bancroft almost wished that Clark had the stones to stand up to him. He almost wished the man would strike back, or at very least, issue a public rebuke.\n\nYet, Clark would do no such thing. Ever the loyal number two, Clark held his tongue. It was the same reason why Clark was always behind a desk. Clark could only shine brightly if he had a more public figure standing in front of him to take the credit. \n\nWithout Bancroft, Clark was nothing.\n\n\"Come on, let's go back to the palace,\" said Bancroft. \"Or else I'm going to stand here all day and marvel at this incredible piece of weaponry.\" \n\nClark followed silently, keeping only a few paces behind Bancroft as they exited the harbor. It was exactly where the man was supposed to be. \n\nNo matter how badly he treated Clark, his loyal deputy would always remain in his footsteps.\n\nWhat a comforting thought that was.\n\n*****\n\nAs pleasant as it was to listen to Vera and Greg talk about their upcoming nuptials, there was still a shadow cast on the rest of the day about the council with all the heads of state. Jack set the start of the meeting for three o'clock in one of the grand meeting halls of the Castle. This particular hall was shrouded in natural light. Tall windows that reached all the way to the ceiling on either side of the long main table gave the room an outdoor feeling. Jack hoped that the clear skies and perfect weather in Kalmar that day would help to put his allies in a cooperative mood.\n\nAs Jack settled into his seat at the middle of the table, his people were the first to arrive. Galicia would have six occupants on the council (without counting Jack as the natural leader of the West). Those occupants would be Abigail and Kat in their role as queens and Greg and Russ as the respective leaders of the Galician armed forces. The two others would be Vera, as she was technically still second in line for the throne after John, and lastly, Bill, as Jack's preeminent advisor.\n\nJack's wives flanked him on either side, while Greg and Vera sat next to Abigail and Russ and Bill sat next to Kat. Jack was pleased to see Kat giggle at a joke that Bill made as he sat down, knowing that their working relationship had come full circle since that time when Kat was once Regent.\n\n\"Are we ready for this?\" asked Jack to the rest of the group before the others arrived. \"Are we ready to make our argument? Can we convince them to go back to war?\"\n\nNo one wanted to answer the question willingly, but it was Vera who spoke first. \"We have to, Jack. We don't have any other options.\"\n\nJack couldn't have agreed more. The task in front of them was enormous and that became ever more apparent as their respective allies began to filter into the room. The first to enter was Nikias and Elektra, and they took their seats near the far end of the table. After them went Gaius of Naxos, Masud of Andalucia, and then Hendrick of Samara. While the first four entrants seemed to be in good (if not curious) spirits, it was the next arrivals that told Jack something was immediately off.\n\nAedan and Ciara took their seats next, and the King of Picardy looked far from pleased. He settled his gaze on Jack while crossing his arms, and Jack suspected already that Aedan had a bone to pick. His behavior seemed to be matched when Reina entered the room, followed by Santino. It became clear to Jack that Santino had let some of the other allies know about the news regarding Swabia.\n\nThis was most illustrated when Ambros entered the room as the last official guest. There was a gasp from several of those near the end of the table, and Jack suspected that they were the only ones not in the know.\n\nSince Aedan, Reina, and Santino gave no reaction to Ambros' presence, his suspicion seemed to be confirmed.\n\n\"Welcome to Kalmar,\" said Jack once the door was closed. \"And welcome to my council. I appreciate that all of you were willing to come to Galicia at once to discuss this most serious task in front of us. I'm thankful that I can count on the support and brotherhood of such a diverse array of allies and partners.\"\n\nJack's first statement was meant to truly kick off the council and disarm those who might want to start off on the wrong foot. Unfortunately, it didn't quite do that.\n\n\"Jack, I'd like to know how we can have a council today,\" said Aedan as he pointed over to Ambros on the far side of the table. \"Especially with our enemy sharing the same space as us. What kind of joke is this?\"\n\nJack shook his head. \"It's no joke. I've asked King Ambros here to be present on this council since this threat affects all of us, Swabia included.\"\n\nYou would have thought Jack had just insulted all of their mothers. Aedan leapt to his feet while Santino looked around the room, nodding his head as if to say 'I told you so.'\n\n\"King Ambros?\" asked a heated Aedan as his nostrils flared. \"Jack, I'd like to know what the hell you're doing. This cannot be allowed to stand!\"\n\nAedan's move and sudden outburst peeved Jack. At one time, all the people in this room acknowledged that Jack, as the Galician King, was the overlord of all the Western countries. That Aedan was now challenging his authority in front of the rest of the allies was unacceptable.\n\n\"Have a seat, Aedan,\" said Jack coolly. \"I've extended you the courtesy of an invitation to my home. You can at least do the same by giving me the chance to explain my rationale without jumping down my throat.\"\n\nAny other man would have stormed out of the room. Jack could tell that Aedan was fuming about the public rebuke but the Picard King had left him no other option. The rest of the council watched Aedan silently as if to determine what he was going to do.\n\nJack watched as the vein on the side of Aedan's neck throbbed. He truly seemed on the verge of another outburst when Jack saw Ciara's hand reach up and yank Aedan back to the table.\n\n\"Please proceed, Jack,\" said Ciara calmly. \"We can at least permit you the courtesy of an explanation for this most unusual event.\"\n\nEven Ciara, acting in her usual role as peacemaker, had serious doubts about Ambros at the table. Yet, it was her coolness that allowed Jack to regain control.\n\n\"Thank you, Ciara,\" replied Jack in a more measured tone. \"As I look around the room, I see there are no surprises today. You already know the words that I'm about to speak so I won't sugarcoat them. Just this morning, I promoted Ambros into a new position as the King of Swabia. The empire has been abolished per the terms of our peace agreement. However, Ambros has shown me that he has not only the capacity to lead men but the intelligence to lead them well. For that reason, he has my confidence as the next Swabian head of state.\"\n\n\"I can understand that, Jack,\" said Nikias from the side of the room. \"Nobody here expected the Swabians to be leaderless. Someone was always going to fill the void that Avila left. But I think most of us here are wondering why he's here. Why can't he go off on his own and rule Swabia as he wants? As long as they keep to themselves and abide by the peace agreement, why do they need to be a party to this alliance?\"\n\n\"An excellent question,\" chirped Reina. \"One that I'd like to hear an answer to.\"\n\n\"The simple answer is because there is a threat that's far greater than Swabia could ever be. And it's a threat that's been made to everyone in this room, not just me and certainly not just Galicia,\" explained Jack. \"And if we're going to have a chance of standing up to this threat, we're going to have to work together.\"\n\n\"You're talking about Java, aren't you?\" asked Ciara, still keeping a hold on her husband's emotions. \"The place where you were raised?\"\n\n\"What does Java have to do with all of us?\" asked Gaius.\n\n\"You may not have much of an interest in Java or the nations across the great ocean,\" said Jack. \"But I can assure you that they have an interest in you. It was only a recent event that saw the three traditional eastern nations united under one power structure. What used to be the nations of Java, Ruthenia, and Occitania now is just the Javan Empire. It's ruled by a man that I know well\u2014a man that has let ultimate power go to his head and twist away what was left of his humanity. He won't stop until he has complete subjugation of the entire world. Those of us here in the West are the only peoples that he hasn't conquered under his banner. Do not think that we will escape his threat. He is coming for us.\"\n\n\"Is he coming for us or is he coming for you?\" asked Aedan, no longer able to hold his tongue. \"That's a big difference, Jack. From what I've heard, this is something that's your trouble, not the trouble of the entire alliance.\"\n\n\"Is that not what an alliance is?\" asked Jack. \"Do we not come to each other's aid, especially when one member is attacked? I can certainly remember spending time in all of your countries over the last couple years. Was I not there for you in your time of need? Will you not be there in mine?\"\n\nSilence greeted that statement, to which Jack was secretly pleased. Aedan's question irked him for the simple reason that Jack had shed blood in all of their countries. Now that the shoe was on the other foot, would they not do the same for him?\n\n\"What Jack says is true but it goes deeper than that,\" said Kat from Jack's side. \"This isn't just a threat against Galicia. The Javan Emperor Bancroft has made his intentions known from the start. He regards the West as little more than a breeding ground for future colonies. His forces want to come here to disrupt your way of life and take your resources for his war machine. Do not think he would stop at just Galicia. He won't be satisfied until Picardy, Apulia, and even Swabia are under his dominion.\"\n\n\"Why don't we give him Swabia first?\" asked Aedan ironically as he cast a glare in Ambros' direction. \"That way, he can break his teeth on the island and remove that particular problem for us forever.\"\n\n\"He'll find considerable resistance to that idea if he did,\" challenged Ambros. \"At least more resistance than he might find in Picardy.\"\n\nAedan leapt out of his chair. \"Now see here, you Swabian dog, I won't be insulted by the likes of you!\"\n\n\"Silence!\" yelled Jack as he stood up from his chair. \"Aedan, sit down! Ambros, return to your seat! This type of behavior helps no one but our enemies! They would like nothing more than to find us here squabbling like petty children! If we don't unite together, we will all perish. It's as sure as the sun rising in the east. There's not one country that can hope to stand against the likes of Java.\"\n\nAedan suddenly flinched as he resumed his seat, and it wasn't hard to see why. Apparently, Ciara pinched him hard enough to cause a reaction. On the other side of the table, Ambros crossed his arms, glaring at anyone who would meet his gaze.\n\n\"Jack, might I bring up something?\" asked Hendrick, who had previously been quiet. \n\n\"Go ahead, Hendrick,\" said Jack.\n\n\"What proof do you have of this Javan threat?\" asked Hendrick. \"Have they made an attack on our forces? Have they declared war? What sign is there of their aggression?\"\n\nJack didn't have to answer that because Kat did it for him.\n\n\"They've tried to kill Jack,\" she said quietly. \"And they've succeeded in killing his adoptive sister and her family in the most gruesome way imaginable. Not only do we have a dispatch of their emperor declaring war on Jack, but they have also attacked one of our destroyers, putting the entire crew to death. Their intentions are quite clear.\"\n\nA round of grumbling and whispers erupted at the news of the death of Jack's family, especially from those that didn't know the details beforehand.\n\n\"That's also missing the fact that they've sent viceroys to every country that started off in our alliance,\" said Jack as he gestured first to Nikias and then to Aedan. \"When I fought for Java, they didn't regard the members of our alliance as natural partners. They saw every Western nation as another place they could exploit. It's one of the reasons why I've severed my ties with Java but don't fool yourselves into thinking this is just about me. Even if I weren't here, you'd all still be in danger.\"\n\n\"You bring up a good point though, Jack,\" said Santino. \"You used to fight for Java. In fact, two of the people at your side are Javan themselves, are they not? This to me sounds like more of a civil conflict than something that involves all of us. This Bancroft person killed your sister, and you have my condolences about that, but he struck against your sister and your ship, not ours. I'm not convinced that this threat is against all of us.\"\n\n\"He struck me because I was the first one he could reach,\" said Jack simply. \"Don't ignore the fact that most of you have had no dealings with Java besides myself when I still fought for her. Aedan and Nikias can testify to the fact that I tried to shield them from the wicked things Java tried to do even back then.\"\n\n\"Jack speaks the truth,\" added Elektra. \"I remember when the Javan viceroy showed up in our city. It was nasty business and it was only settled with Jack's intervention. If I remember right, he disobeyed direct orders to punish Sorella.\"\n\nJack nodded his head. \"That's right. I would never punish an ally like that. That's where I'm different from Bancroft. For him, the ends justify the means. He has let power twist and corrupt his soul to the point where nothing else remains but a miserable, hollow shell. That's the kind of power you'd be going up against. A man obsessed with ultimate power, with the army and navy to take whatever land he wants by force. Is that someone you want to stand up against alone?\"",
        "When no one was willing to answer the question directly, Jack thought he just might have started to get through to all of them. They all seemed to be seriously thinking over the request, and maybe, just maybe, they would vote his way.\n\nThat line of thinking was crushed though with the next statement.\n\n\"My country is in no position to go back to war,\" said Aedan with a firm tone. \"We haven't yet recovered from the last one, and who knows when that will be. I see no evidence that this threat truly exists, and that this isn't just a squabble between Jack and his former boss. I remain unconvinced and for that reason, I choose to stay out of this mess.\"\n\nJack opened his mouth to say something but Gaius stole the floor next. \"What about us? What about Naxos? Jack, you know the devastation that my land has suffered. Would you ask us to go back to war again? I have nothing with which to make war except for a few Apulian regiments on loan.\"\n\nJack shook his head. \"Consideration is being given for the size of our allies and their contributions for this next fight. I only ask that you give what you're able to give. In your case, Gaius, I understand that Naxos is still recovering. I would not ask for any aid from you until you thought to be in the position to give it.\"\n\n\"So why does Naxos get to contribute nothing when Picardy, which has suffered just as greatly, would be asked to contribute men towards the fight?\" asked Aedan.\n\n\"He asks a fair question, Jack,\" added Santino. \"Apulia was nearly conquered as well and saw just about our entire army destroyed in the first few weeks of fighting. Would there be consideration given for Apulia and her contributions already?\"\n\nJack glared at both men. \"You both know there is a difference between Apulia and Picardy, and then little Naxos. Santino, your army has largely recovered. A good portion of your men fought with us in Swabia. I know you have resources to contribute. Aedan, I'd lump you in the same category. You can't use that excuse with me.\"\n\n\"It's not an excuse if it's the truth,\" spat Aedan. He finally stood up from the table. \"Are we done here? I've lost my appetite for further discussions. I'm no longer physically able to be party to this warmongering.\"\n\nJack looked around to see if anyone else might rebuke Aedan for yet another outburst, but to his surprise, Reina and Santino stood up with him. The three of them approached the door.\n\n\"Tomorrow, we will have a vote,\" said Jack before they could exit. \"We'll put it to a vote. Every country gets one vote, and the winner will take all. I don't ask anyone to stick their neck out without having a voice. Although today's conversation was more heated than I would have liked, this is a threat to all of us. Our way of life is at stake. Our friends, our families, and our homes will be at risk. I wouldn't want to be the one that looks back after all of this is over and know that I did nothing.\"\n\nAedan raised his chin. \"Tomorrow then, we'll meet back here and give our vote. And you shall see all the good this conference has done for your cause.\"\n\nWith those final words, the King of Picardy, the Queen of Carinthia, and the Director of Apulia left the room, leaving an awkward tension for those that were left. Jack looked around the room to see the faces of Nikias, Elektra, Masud, Hendrick, Ambros and Gaius. Most of them were still looking at him to see some kind of reaction.\n\n\"Well, tomorrow we shall have our vote then,\" said Jack, letting out some of the tension. \"Do any of you have any serious concerns?\"\n\n\"Several, Jack,\" answered Hendrick as he shook his head. \"I don't believe this is something that I can give my support to. I'm sorry to let you down but my thoughts are with them.\"\n\nWith that statement, the Samaran Tribune bowed his head and left the room, following in the footsteps of the others.\n\nJack let out a sigh. The numbers were dwindling by the second. At this point in time, there were four confirmed no votes but there were still five countries represented in the room.\n\n\"We still have the vote,\" whispered Abigail from beside him. \"Five to four. As long as we still get everyone left in the room, we still have enough to carry the tide.\"\n\nShe spoke just a little too soon.\n\n\"I'm afraid not, Abigail,\" said Gaius as he shook his head. \"Naxos is still rebuilding. We don't have anything to contribute to the cause, and I won't vote yes just to shed the blood of someone else. I will vote no.\"\n\nGaius' words were perhaps the most disheartening of the day. With his statement went the vote. If Apulia, Samara, Picardy, Carinthia and Naxos voted for no war, there was hardly a way that Galicia, Andalucia, and Sorella could stand alone, and that was even with the Swabians.\n\n\"What about you, Ambros?\" asked Jack. \"This is a threat to Swabia as well. Would you be with me? Would you give aid to our cause?\"\n\nIn a sign that not all was lost, Ambros nodded his head a moment later. \"I'm very much in your debt, Jack Kincardine. Not only for my life but for my throne as well. I will go to war with you if you require it. Although, you know as well as I do that Swabia is in no position to go back to war.\"\n\nJack nodded. \"I appreciate that, Ambros. We all need time to rebuild. Even if we all voted yes to this, we would still need a period of time to prepare ourselves for war. Six months is what I was thinking. That will give us enough time to stockpile supplies, munitions, and food. Do you think you could get a force equipped and ready to move in six months?\"\n\nAmbros thought about it for a moment. \"It would be a challenge but I believe it could be done.\"\n\n\"That's all well and good but I'm still not enthusiastic about sending any Sorellan forces to fight side by side with the Swabians,\" said Nikias, casting a wary eye toward Ambros. \"Even if you got your vote, Jack, how would you expect any of us to work with them? They've shown they can't be trusted.\"\n\n\"That's the part that I need you to leave to me,\" said Jack. \"I need you to trust that I know what I'm doing.\"\n\nNikias pursed his lips. \"That's a hard thing to ask of any man, especially on a matter as grave as this.\"\n\n\"What about if an ally asked it of you?\" countered Jack. \"What say you then?\"\n\nNikias let out a deep sigh. A small smile formed on his lips. \"I would try,\" he relented. \"But it wouldn't be easy.\"\n\n\"No, it wouldn't,\" agreed Jack. \"But we would find a way together.\"\n\n\"It still seems like you have your work cut out for you, Jack,\" said Elektra. \"The four of us can't be expected to meet Java alone, especially with what you've told us.\"\n\n\"No, we can't,\" replied Jack. \"We will need all of us to contribute. I will have to figure something out about the others. I can't let them bury their heads in the sand.\"\n\n\"Unfortunately, it seems like that's exactly what they want to do,\" muttered Vera.\n\nJack didn't disagree with her. It was the first time he was disappointed by his allies.\n\nDid it have to come at the hour of his most dire need?\n\n*****\n\nThe evening after the council was a somber one. Jack didn't have much of an appetite and instead of getting dinner with the rest of the heads of state, he preferred to sit on the balcony outside his bedroom and gaze upon the city of Kalmar. \n\nIt really was a beautiful city. Enough time had passed that she didn't show the scars of the last fight, when he had taken over the capital from Eric Rosdahl. Below him, he could hear the usual noises of the city\u2014the sound of people, children, the clanging of tools, and the cries of birds. On one hand, it was like every other city in the world but on the other, it was a special place that truly deserved his protection.\n\nAnd as the guardian of Galicia, it was his job to make sure that his enemies never tried to take his city away from him. If Bancroft showed up outside of Kalmar with the entire Javan fleet, Jack would fight to the death to protect the city of his ancestors.\n\nThere was no end to the depths of his resolve in fighting Bancroft. The problem was how could he make the others feel the same passion? How could he get Aedan to see the same threat before the Javan fleet showed up outside of Daban?\n\nIt was a question that Jack continued to ponder into the night. That is, until he received visitors around ten o'clock.\n\nWhen he first saw the outlines of two people, he assumed it was Kat and Abigail, but Jack was surprised to see Evelyn and Vera joining him on the balcony.\n\n\"I bet you didn't expect us,\" said Vera with a smug smile as she sat next to him.\n\n\"Like usual, you know what I'm thinking,\" replied Jack. \"Where are my wives?\"\n\n\"Entertaining still,\" answered Evelyn. \"They are being gracious hosts for all of our guests but it begs the question why you're not also playing host this evening?\"\n\nJack scoffed. \"After what happened at the council, I needed some time away. I needed time to think.\"\n\n\"And have you? What have you thought about, Jack?\"\n\nJack let out a deep sigh. \"So many things. You would think with all this time that I would have figured out what to do about my allies but I have no such better options. I have half a mind to just beat Aedan into submission but that would hardly suit my purposes with the other allies.\"\n\nEvelyn chuckled. \"Nor with Aedan when he came to either. I think he would be most upset.\"\n\n\"In any event, I don't know how to make them see sense,\" continued Jack. \"I get why they think this is some kind of civil conflict due to my personal history but I'm at a loss for what I can say to them to change their minds.\"\n\n\"It was pretty bad,\" echoed Vera as she looked over at Evelyn. \"I was there. For the record, Jack, I thought you did well in telling them about the threat in front of us. Although, you did lose your cool a few times.\"\n\nJack scowled. \"I had to keep a firm hand on where that meeting was going. If I let Aedan or Santino derail it, we would have been further from our goal, not closer.\"\n\n\"Vera tells me that even the Swabians have agreed to be part of this alliance against the Javans,\" said Evelyn. \"That's quite the feat, Jack. I don't think that's ever been done in the history of the West.\"\n\n\"I suppose it's the one thing that Eric Rosdahl did right,\" said Jack with a wry smile. \"He sowed the seeds of that cooperation. Now, it might have been for the wrong purpose at the time but I can't say that the idea didn't start with him. And Ambros has been remarkably adept at every task I've given him. He's not your typical Swabian.\"\n\n\"So I hear,\" replied Evelyn. \"And it seems that's part of the reason why your allies don't want to stick their necks out again for you. They're afraid the Swabians are going to stab them in the back while they're overextended.\"\n\n\"Which I also understand,\" said Jack. \"It's only because of Ambros that I believe he can keep the rest of his people in line. I mean, enough for us to work with them during a war. I believe that he can do that but I'm at a loss for how to convey the sense of trust that I have for him to the others.\"\n\n\"It seems you're in a pickle, Jack,\" noted Evelyn. \"Is there no way you can go about this with just Galicia and Swabia? After all, those are the two biggest powers in the West. Couldn't you make due on your own?\"\n\n\"I've been down this line of thinking before,\" said Jack while shaking his head. \"It's not enough. Let's look at battleships just for the sake of looking at something. We know that any fight with Java is going to come down to at least one major naval battle. As of today, Galicia has seventeen battleships. Swabia has eleven that are serviceable after the losses in the last war. Between the two of us, that makes for twenty-eight battleships. Java has at least twenty in her possession but she also commands the fleets of the other two subjugated nations. The Occitanians have at least ten more and the Ruthenians a similar number. That makes for more than forty battleships against our twenty-eight. Not great odds.\"\n\n\"That is a large gap,\" noted Vera. \"But that's just in terms of actual ships. Could Java provide crews to man them?\"\n\n\"Knowing Bancroft and his affinity for the navy, he'll find a way to bring all that firepower against us,\" replied Jack. \"And that's just battleships. All the other ship classes will outnumber us as well as men to fight. If we thought it was bad enough how the Swabians could manifest men to put in our way, the Javans would be much tougher. They have a larger population and Java is a much bigger place. It's not feasible with just Galicia and Swabia fighting alone.\"\n\n\"Just for the sake of the argument, Jack, how many extra battleships would you net by adding in the others?\" asked Evelyn. \"If you could get all you needed?\"\n\nJack's head tilted from side to side. \"You'd have to leave some behind for defense and there are some that wouldn't be seaworthy so that will impact the numbers a little. But at most, you'd probably get another eight to ten battleships between the rest of the allies.\"\n\n\"That practically makes up the gap,\" replied Vera. \"So I can see why you really need them.\"\n\n\"Precisely,\" said Jack as he put his head in his hands. \"This doesn't work without all of us united together. And even then, we're still going to be outnumbered.\"\n\n\"What about tanks and airplanes, Jack?\" asked Evelyn. \"Surely having those would give you an advantage over the Javans, right?\"\n\nJack shook his head. \"Bancroft has airplanes,\" he groaned. \"He has one of my prototypes from back before the Battle of Aberdeen. No doubt he's smart enough to realize its potential and make more of them. He also has blueprints for tanks. No, we can't rely on any serious advantage here. He's going to match us in terms of sheer firepower at best, and at worst, we're going to be seriously outnumbered.\"\n\nEvelyn pursed her lips together. \"It appears then that you have to find a way to pull together your unruly allies, Jack. And I had to be the bearer of bad news but you're running out of time to do it.\"\n\n\"Don't I know it,\" muttered Jack. \"If I thought it would help, I'd parade them around the cemetery outside the city and show them Jocelyn's grave but knowing Aedan, he'd probably suggest that she died of natural causes on the journey across the ocean.\"\n\n\"You've got to think of something, Jack,\" echoed Evelyn. \"This is too important to leave it to a chance of luck at the vote tomorrow. You need to figure out a way to make them understand.\"\n\nJack put his head back in his hands. Surely there had to be a way to make this work.\n\nBut how?\n\n*****\n\n\"Sir, the city is now secure. Our forces are in total control of all entry points and we've just taken over the granaries. Control is ours.\"\n\nTrevor couldn't help but smile as he heard the statement. What a difference a few weeks had made. Nearly a month ago, they were facing their last stand in the Wilds, a desolate area that was claimed by neither Thessaly nor Tyrol. The army in front of them was quite a bit larger and poised to destroy what was left of Tyrolean resistance.\n\nAnd now? Trevor's army had finally arrived in Worchester.\n\n\"Excellent news, captain,\" replied Trevor as he pointed to the grand town hall that dominated the center of the city. \"I'd like to place my headquarters here. Please grab what you can from my baggage train and see it done.\"\n\nThe captain saluted and started to execute the orders immediately. Trevor only watched briefly before he turned to look at Nina, who was watching him with a curious smile.\n\n\"You're enjoying this change of events, aren't you?\" she accused.\n\nTrevor nodded. \"What can I say? It's good not to be dead.\"\n\nNina chuckled while her hand crept into his. They moved along the broad streets of the city, watching as gawking Thessalians noted their every move.\n\nIt had only been a day since they arrived in the city, and already their world had turned upside down. It first started the day after the battle, when Trevor realized how complete the victory had been. With the leftovers of the Javan Army leaving the battlefield as fast as their feet could carry them, Trevor's men took over their camps and their leftover supplies.\n\nFor the first time in weeks, the Tyrolean Army had food. Men who'd been walking wraiths suddenly showed the first signs of life. It continued as they moved out of the Wilds and back toward the border with Thessaly. With no Javan force in their path, Trevor's men kept moving until they spotted the city on the horizon the day before. Of course, there was no separate Thessalian Army to defend their capital city. No, the Thessalian Army had long ago been folded into the Javan Army as part of a unified command.\n\nThat meant the only thing the Thessalians could do was watch as the ragtag army paraded down their streets, putting the city under foreign occupation for the first time in centuries (that is, if one discounts the Javans as foreigners).\n\nThere remained only one source of government left in Thessaly and that was the Thessalian governor, Franklin Morris.\n\nTrevor was familiar with Morris but he'd never met the man. All he knew was that Morris was nominally in charge of Thessaly, and he reported directly to Bancroft. He also knew that Morris could be hard to work with, but that was only based on rumors. Until today, no one that he knew had ever met the man.\n\nHowever, Morris was due to make a call on his new headquarters that very afternoon. Trevor found it curious that Morris would acknowledge the Tyrolean takeover of his city and not flee with the other officials.\n\nTrevor suspected Morris had a trick up his sleeve and he would find out what that was this afternoon.\n\nWhile Gavin and Nina made sure they were situated in Worchester, Trevor headed inside his new headquarters to await the meeting.\n\nGovernor Morris arrived promptly at the time he said he would. Just based on appearances alone, Trevor found himself instantly disliking the man. \n\nFirst off, he was dressed in a ridiculous set of robes that were too ostentatious and silky. His hair was long and tied back in a traditional Thessalian ponytail. What bothered Trevor the most was his arrogance. Morris appeared to be the kind of man who thought his shit didn't stink.\n\n\"My lord, I have to congratulate you on the taking of the city,\" said Morris with a hint of a bow. It was clear though from the way he stressed \"my lord\" that it was more ironic in nature than giving any respect for Trevor's position. \n\nHe gave a very flourishing introduction for himself next, making sure to list all of his accomplishments since becoming the Governor of Thessaly.\n\nTrevor raised an eyebrow. \"You have me a little confused, Governor.\"\n\nThe smile dropped from Morris' face only to be replaced with something resembling annoyance. \"What confusion do you have, my lord?\"\n\n\"It stems from the fact that you're still here in my presence,\" said Trevor. \"All the other officials in this city fled when my army took the city, except you. Not even the postmaster stayed. So why did you? You knew my army was coming, didn't you?\"\n\n\"But of course,\" replied Morris. \"I knew before anyone else. I knew the exact moment the Javan Army was defeated and it was only natural that you'd come back to Worchester. But your question was based around why I stayed here to greet you.\"\n\nTrevor waited for him to answer it. There was a moment of silence before Trevor finally spoke up again. \"Well?\"\n\nMorris produced a dramatic sigh. \"My poor Thessaly,\" he lamented. \"She's a conquered power now, much like Occitania or Ruthenia. Her capital lies under foreign occupation and she has no defenders to speak of. Poor, poor Thessaly.\"\n\nTrevor sighed and rolled his eyes. Morris' flare for drama was already annoying him, and if it was going to take the governor this long to state his real reasons for being here, he was in for a long afternoon.\n\nTrevor chose not to challenge any of the governor's statements, specifically the absurdity of comparing Thessaly to Occitania or Ruthenia for that matter, and he pressed on.",
        "\"Yet I see no bloodshed in your streets,\" said Trevor. \"My army's takeover of your city has been entirely peaceful and without fighting. It will stay that way as long as you don't work against us. There will be no battles in Worchester. The Javan Army is too mangled right now to consider a fight to reclaim it.\"\n\nSurprisingly, Morris started to nod. \"You are precisely right, my lord, precisely right. And I appreciate the lack of bloodshed. I would like to remind you now more than ever that Thessaly, while owing its sovereignty to the Javan Empire, is not your enemy. Thessalians prefer to live in peace on our side of the continent, and we leave the machinations of politics and war to the Javan emperors.\"\n\nTrevor raised an eyebrow. \"Is Worchester not the supply depot for the Javan force operation in Ruthenia? For someone claiming non-involvement in Javan affairs, that's a pretty large area of cooperation.\"\n\nMorris couldn't shake his head fast enough. \"Forced on us, I tell you. By the emperor, it was. And I didn't have a say in the matter. It was an order that came through that mandated our participation in supplying that army. I had to follow the order lest I lose my governorship. But that is beside the point. I do believe that you and I want the same thing, my lord.\"\n\n\"What would that be?\" asked Trevor.\n\n\"We both want peace,\" replied Morris, saying the first sensible thing that Trevor had heard from him. \"We want a peace between Java and Tyrol that has favorable terms for everyone. Java gets to save face from the loss of the war and Tyrol gets . . .\"\n\n\"Independence,\" answered Trevor. \"Tyrol will get her independence if we win. We will no longer be answerable to an emperor in Belfort. We will be free once more just like our ancestors used to be.\"\n\n\"An admirable goal,\" said a smug Morris. \"I think there's a way we can both get what we want.\"\n\n\"And how would that work exactly?\"\n\nMorris put his hands together and clicked each finger against the other. \"I think that the winds are changing, my lord. At the beginning of your little rebellion, no one gave the Tyroleans much hope that they would survive before the season changed. It would be like every Tyrolean rebellion in the past and defeated by the time the Javans assembled an army. What they didn't count on was you.\"\n\nTrevor pursed his lips together and nodded. \"Go on.\"\n\n\"You see, my lord, they didn't count on someone who could bring men together and strategize like you can,\" said Morris. \"You've defeated how many Javan forces now? Have you kept count? Your last victory was the crowning achievement of your rebellion, and now it looks likely that Belfort could lose this struggle.\"\n\n\"I'm missing the point here,\" said Trevor. \"Get on with it.\"\n\n\"You see, my lord, just because Thessaly is a part of the Javan Empire, it doesn't mean that we need to be enemies,\" explained Morris. \"Sure, I supplied the Javans with resources for their armies because I had to, because a proverbial sword was at my neck. Now, I find myself in much the same situation. At this moment, your men are raiding my granaries for food and another sword is at my neck. Why would I not choose to help you now?\"\n\nAt that moment, Trevor understood exactly what Morris was getting at. Ever the politician, Morris was looking at this conflict as one where the Javan star was starting to fade, while the Tyrolean one was on the ascendance. Not wanting to back the losing horse, Morris was offering his support in exchange for not devastating Thessaly and treating it like it was Java proper.\n\nIt was a shrewd move and an incredible gamble, especially if the Javans managed to turn around the war.\n\n\"How can I trust a man who so willingly betrays the Javans?\" asked Trevor. \"You haven't declared a rebellion in Thessaly nor have you supported our cause up until now. This move of yours reeks of self-serving behavior designed to keep you at the pinnacle of Thessalian politics. How can I trust you?\"\n\nMorris actually grinned. \"Trust? What is trust? This is politics, my lord. We all do what benefits us the most. Today, that means supporting Tyrol against those imperial lechers in Belfort. Now, tomorrow, if your army just so happened to be destroyed by the Javans, then I will condemn your rebellion and offer my resources back to the Javans. I will do what benefits Thessaly the most. It's how the game is played. Now you're the one on top right now so I offer you this bargain\u2014the support of Thessaly is at your fingertips. As long as you continue to fight and win, I will continue to support your army. That's the only caveat though, my lord\u2014you must continue to win.\"\n\nTrevor didn't respond to Morris' offer right away. He started to mull around his options, wondering if Thessalian support, even if given on a more covert level, would be beneficial to him. For now, there appeared to be no Javan threat, and it would be great to have the army fully supplied once more.\n\nOn the other hand, he didn't trust Morris as far as he could throw him. There was something too slimy about him, and he knew that any agreement between them would be null and void the second Tyrolean fortunes took a nosedive.\n\n\"Think about it, my lord,\" said Morris as he quickly turned around, sending his ponytail flying. \"You don't have to give me an answer today. Judging by your last victory, we have all the time in the world to make a decision. I think you should heed my offer though. Thessaly can be a great partner to you as long as you continue to win.\"\n\nWith those final words, Morris made his exit, which was just as flamboyant as his entrance. Trevor tapped his finger against his chin as he thought about it, and he was still sitting there thinking a half hour later when Nina arrived in his office.\n\n\"You're still here?\" she asked. \"What happened with your meeting with the governor? Did anything interesting come up?\"\n\nTrevor nodded and gestured for her to sit. \"Come closer. I need to tell you about his offer.\"\n\n*****\n\nThe next morning didn't exactly find Jack in the best of moods. For one, he slept terribly, and at one point in the night, he left the bed so that he would stop keeping his wives awake. From about three o'clock onward, he was awake, sitting in his study and catching up on the mountain of work that always finds its way to a king's desk.\n\nIn retrospect, getting up at that hour was a good idea. Try as he might, the brief periods of sleep he did get were interrupted by nightmarish memories of his sister, Jocelyn, and her requests to avenge her death.\n\nToday, he would find out if that was even possible, and all the signs seemed to point to the fact that he was probably going to come away unsuccessful at that. \n\nBy the time the sun was finally coming up on the horizon, Jack was irritable, tired, and ready for just about anything but confronting the other heads of state for a vote.\n\n\"You look awful,\" said Vera, perfectly capturing his state when she stopped by that morning. \"Goodness, Jack, did you sleep at all last night?\"\n\nJack rubbed his chin where several stubbly hairs pricked his fingers. \"Not much sleep to be honest. I'm running on coffee alone right now.\"\n\n\"You can't keep doing this to yourself,\" she advised, rubbing his back in the process. \"Jack, last night is not the only night that you haven't been sleeping. I know things are tough right now but we need you. And if you're not taking care of yourself, it's not going to turn out well, for anyone.\"\n\n\"I know, I know,\" said Jack, rubbing the sleep out of his eyes. \"I'm just stressed about this vote. It's not like the other votes I've had in the past. When Bill and I were in Samara, it came down to a final vote but I had the trump card in my back pocket. This time? I feel like I have nothing. They've already heard my arguments on the matter and they still don't want to go to war. What else can I do?\"\n\n\"We always have hope, Jack. Don't forget that no matter how bleak it looks, we always have the hope that the right thing will happen.\"\n\nJack let out a sigh and nodded his head. He was glad that Vera was optimistic, even if he wasn't. There was nothing to fear if Vera turned out to be right, but what would happen if she was wrong?\n\nThe vote was scheduled to begin at ten o'clock sharp. About ten minutes before, Jack entered the room with the other Galician delegates\u2014Abigail, Kat, Bill, Greg, Russ, and Vera\u2014and took their seats.\n\nKat leaned in closer to him. \"I spoke with Ciara last night. She's putting a lot of pressure on Aedan but she says he's been adamant about his opposition. I don't know if she'll be able to overcome it but I did put in the work to try.\"\n\nJack smiled weakly. \"Thank you. We need all the help we can get. I know Aedan is stubborn and hardheaded but I can only hope his wife can get through to him of all people.\"\n\nThat hope turned out to be a little misplaced. When ten o'clock came and the other heads of state walked into the room and resumed their places, Aedan looked just as combative as he did before. By his side, Ciara looked exhausted, almost as if she'd spent most of the night trying to argue with her husband.\n\nJack got the impression that nothing had truly changed. When he looked over to Santino, Reina, and Hendrick, none of them seemed eager to meet his gaze.\n\n\"Good morning,\" said Jack, opening the council (although the morning felt anything but good). \"Thank you all for returning today. I know we didn't have the easiest round of discussions yesterday. I think tensions were high around the room, and I can definitely speak for myself when I say I would have liked for the discussion to go differently. However, here we are. We're back this morning to vote on this matter in front of us.\"\n\n\"And hopefully, this final vote will settle the matter,\" said Aedan. \"And everyone will abide by the wishes of the majority.\" The way that Aedan added emphasis to his statement showed that he was mostly referring to Jack.\n\nJack nodded his head. \"I will respect the wishes of the majority. This wouldn't be much of an alliance if we didn't honor the decision that was jointly made. In the spirit of that, I will leave things down to the vote.\"\n\nAedan appeared satisfied as he crossed his arms. \"Excellent.\"\n\n\"I will say this though,\" added Jack as an afterthought. \"The threat in front of all of us is too great to ignore. Just because the wolf isn't growling at your doorstep today doesn't mean it won't be in your backyard tomorrow. Bancroft will come for all of us. It's as sure as the sun will rise tomorrow morning. Our only hope is banding together to make our stand against them as one united force. One last stand against tyranny, as we did against Avila.\"\n\nThe words came out more as a warning than they did any invitation for serious discussion. It caused a few noticeable reactions amongst the rest of the heads of state. Reina muttered something into the ear of Hendrick while Aedan started strumming his fingers along the desk. After a few moments, most of the heads of state seemed to look at Aedan, who was no doubt elected to give their collective rebuttal.\n\n\"It falls to me to give our response,\" said Aedan after clearing his throat, which only served to confirm Jack's suspicions. \"Our original alliance against Swabia was meant as a preservation of our independence and way of life against an aggressive power that threatened both. Swabia invaded many of our lands and took away our independence but in every such case, Swabia was the aggressor. This conflict that you're envisioning, Jack, has no basis for Picard involvement, let alone any of the other states next to me. This is a civil argument between you and your former people across the ocean, and it's not my opinion that this will come down to an actual war. Even so, Picardy cherishes her independence and she will exercise the right not to enlist in a conflict not of her choosing. For that reason, we vote no to any upcoming conflict with the Javan Empire.\"\n\nWith those hollow words, Aedan took his seat. A smug smile appeared on his face, almost as if he thought he was getting one over on Jack. With a quick glance around the room, it wasn't hard to see that many of the other heads, including Reina, Hendrick, and Santino, were nodding in approval.\n\nWith no changes from yesterday, the vote was shattered. There would be no grand alliance to confront the Javans.\n\nJack would have to face Bancroft alone.\n\nKnowing when he was defeated, Jack bowed his head. The words wouldn't come out easily, but just before he was about to start speaking, an excitable outburst shocked the room.\n\n\"What is wrong with you people?\"\n\nJack's head pivoted to his right only to find that Vera had stood up from the table and planted her palms on the surface. For the first time ever, he saw a glowering expression on her face as she stared down every individual head of state.\n\n\"Vera, it's okay,\" whispered Jack but she shook him off instantly as she straightened her back into a proud stance.\n\n\"No, it's not okay, Jack. This is truly not okay,\" said a passionate Vera as she pointed her finger at Aedan. \"Aedan, how many times has Jack led forces to Picardy to keep your country from ruin? Was it three times? Four? I've lost count! One time led to his capture and imprisonment while the last time, he was nearly killed!\"\n\nShe then whipped her finger around to Santino. \"And you! When there was only one city left standing in Apulia and all appeared to be lost, who stepped in to make sure that Apulia didn't fall? Who led the countercharge that pushed the Swabians out of Apulia?\"\n\nSantino turned red in the face. \"Jack did,\" he muttered.\n\n\"You're right, my brother did,\" said Vera proudly. \"Everyone in this room owes something to him, myself included. If it weren't for my brother, I'd still be within the bonds of slavery to some Sorellan despot. Everyone, including you, Reina, and you, Gaius, owe my brother for what he's done to keep you free. He's been wounded more times than I can count. He's lost his ships, his men, his time, and now he's even lost his family in this conflict that has been thrust on our doorstep. And what do you do in his time of greatest need? You're going to abandon him!\"\n\n\"Is that truly the spirit of our alliance?\" she continued. \"Aedan, you said it best yourself. We all banded together to preserve our independence and our way of life in the face of a great threat. Today, when an even greater threat arises, does that mean we throw it all away? Are our ideals and shared values so hollow that they can be discarded at the first signs of trouble?\"\n\nReina looked rightfully uncomfortable. \"Vera, it's not like that\u2014\" \n\n\"It is like that,\" interrupted Vera. \"When a larger threat emerges, is it not natural to work together again? Have you ever doubted Jack's leadership when he was in all of your individual countries working to preserve your freedom? So why do you do it now when it's Jack that needs your help? Is that the limits of your bonds of brotherhood?\"\n\nNo one wanted to answer that question head-on. Santino bowed his head, looking truly ashamed, as did several others.\n\nAn impassioned tear fell down Vera's cheek. \"My brother has sacrificed everything for you. In the past two and a half years, he's sacrificed his body, his men, his ships, and now even his home country. What more does he have to give to make you understand that this isn't about some petty argument between two men? That this is a conflict that is about the total destruction of our way of life. Those leaders here who saw the Javan viceroys know that they are only interested in consuming what resources we have to offer. They won't stop until we have nothing left to give, or we are all slaves. Is that our way of life? Is that the freedom and the independence that we so value?\"\n\n\"No, no, it's not,\" muttered Nikias, shaking his head.\n\n\"Is this the kind of leaders you are?\" asked Vera, making several others shake their heads. \"Jack is right. The wolf may not be at your doorstep but it will be here soon. We will have time to prepare but the threat will find all of us eventually. Our ideals are what separates us from our enemies across the ocean. I only ask you that in this time of our greatest need that you act on those ideals that you so value and so strongly cherish before it's too late.\"\n\nWhen Vera resumed her seat, you could have heard a pin drop in the room.\n\nThe effect on the heads of state was electrifying. Aedan actually had tears in his eyes. Santino looked rightfully embarrassed, and even Hendrick looked to be reconsidering. \n\nEventually, it was Gaius that was the first to speak. He looked at Vera first and then to Jack. \"Your sister certainly has a way with words, Jack.\"\n\n\"She's full of surprises,\" said Jack as he glanced at Vera. \"But I couldn't be happier to call her family.\"\n\n\"In that case, are we not all a family in this room?\" asked Gaius. \"Hasn't our alliance established the bonds of family between us? When one member of our family is threatened, shouldn't we all respond?\" Gaius looked at Jack directly. \"Jack, you have my apologies. You have given much to ensure that Naxos is free today. You have my support. Though I do not like having to go to war again, you will have the support of the Nax people.\"\n\nGaius' words were the breakthrough that he needed. Though technically speaking, Gaius' vote was the change that Jack needed to have a majority, it would have been a hollow win without the rest of the countries signing on.\n\nTo that end, Aedan actually leapt out of his chair. His movements were theatrical but the tears on his cheeks were real.\n\n\"Forgive me, my brother,\" said Aedan as he looked at Jack. \"Forgive my stubbornness. Gaius said it best in that no one is eager to go to war, but if a war is thrust upon us, you can count on Picardy to stand beside you. We will face down this tyrant across the ocean if it's the last thing we do.\"\n\n\"You have my support as well, Jack,\" added Reina. \"We are all indebted to you. It's only natural that we support you in your time of need.\"\n\nThe tension in the room was dissipating. Everywhere that Jack looked, feelings of goodwill were prominently displayed on everyone's face.\n\n\"Well, you'll have to make do without Apulia,\" said Santino abruptly. \"I'm not convinced!\"\n\nEveryone gave a shocked look at Santino, who eventually let out a toothy grin. \"Did you really think I'd be able to get away with that here? If I didn't change my vote, I feel like Vera would have strangled me before I left the room!\"\n\nThat earned a round of laughter and even Vera turned red at the mention. As all the objections melted away, Jack addressed all of them together.\n\n\"I truly thank you for your assistance today,\" he said, looking each of them in the eyes. \"I am humbled by your response, and there's no one that desires peace more than I. We will fight together one more time and vanquish this threat in front of us. And then, we can return to the peace that we so rightfully deserve.\"\n\nThat earned a round of cheers, and thankfully for all, the entire alliance was together for one more fight. It was determined that a period of six months would be given to all countries to prepare for action against the Javans. In that time, supplies would be set aside, troops would be trained, and a mustering point for all forces would be established for the war against Java.\n\nAs the council was adjourned, it truly seemed like a crisis had been averted. Jack had entered the room prepared for the worst, and it was all thanks to his sister that they got the outcome they wanted.\n\nIt wasn't surprising that she didn't leave the room until it was only the two of them left.\n\n\"You saved my butt,\" said Jack with a smile. \"I owe you so much, Vera.\"\n\nWithout words, Vera pushed up from her seat and embraced her brother. \"I love you, Jack. I'd do anything for you. There was nothing that I said that wasn't true. They just needed a little help seeing it.\"",
        "\"Well, I wasn't kidding when I said you surprised me,\" said Jack. \"I didn't know you had it in you.\"\n\nVera smiled. \"We share the same blood, don't we? I guess I wanted to show them that I'm a Kincardine too.\"\n\n\"That you did, that you did,\" echoed Jack. \"Thank you, Vera. I love you too.\"\n\nShe gave him a curious look. \"Consider us even, okay? Do you remember?\"\n\nJack started to chuckle, remembering how she \"owed\" him one for giving his blessing for them to marry.\n\n\"That's not really the same thing. My blessing can't be equated to what you just did to me. You just likely saved all of our skins in this next war. Having my blessing for your wedding to Greg isn't as big as that.\"\n\nVera shook her head. \"In my mind, it's just about the same thing.\"\n\n\"Well, I'm glad then,\" said Jack with a soft laugh.\n\n\"And you did mention we could take care of it after the council was over,\" said Vera, giving him her best smile. \"And since the council is now over, I was thinking it was time.\"\n\nJack gave her an incredulous look. \"Vera, how can we set up a wedding in such little time? It took weeks to do mine and mine was relatively small by the standard. You still want to get married today?\"\n\nShe nodded, but the smile never left her face. \"I've been busier than I let on. Greg and I have everything we need. We've been talking about this forever and all we really wanted was your blessing to do it now.\"\n\n\"But what about the actual ceremony?\" asked Jack.\n\nVera shook her head. \"We don't want much. In fact, we were hoping that it would just be the seven of us, including the officiant of course.\"\n\n\"Six of us? So me, Kat, and Abigail? Who's the seventh?\"\n\nVera smiled. \"Evelyn, of course. And I figured both Kat and Abigail could be my maid of honors. And Greg wants you to stand up there as his best man. Would that be okay with you? Something so simple won't need much time to prepare.\"\n\nJack couldn't contain his grin. \"Vera, that sounds like a great idea. Let's do it.\"\n\n*****\n\n\"There's no going back now. You still have time to run if you want to.\"\n\nGreg started to chuckle as he elbowed Jack in the side. \"You know this is your sister we're talking about, right? If I ran, who's to say you wouldn't be the one to hunt me down?\"\n\nJack laughed with him. \"You know, you do have a point.\"\n\nIt was early evening on the same day, and at this very moment, Vera was walking toward them on one of the highest balconies of the Castle. Greg stood there waiting for her, with Jack at his side and an officiant on his other. The only audience they had was Evelyn, openly weeping in happiness at what was about to take place. Just behind them, the sun was setting over Kalmar.\n\nAt the time, Jack had asked if Vera truly wanted a wedding so late but she shook her head vehemently.\n\n\"Are you kidding? Greg and I wanted to have a sunset wedding,\" she said. \"This will be just perfect.\"\n\nAnd so Vera, in her simple white dress, came walking toward her future husband. Just behind her were Kat and Abigail, fulfilling their roles as maids of honor and looking entirely thrilled at participating in a wedding for their dear friend.\n\nIf Jack thought his own wedding ceremony was short and sweet, this one beat it by a mile. Greg and Vera only exchanged simple vows to each other, pledging their eternal love and commitment and sealing it with rings and a kiss. The ceremony was over not ten minutes after it began. \n\n\"Jack, I just want to say thank you,\" said Vera just after the officiant had left. \"For making my dream come true. We've wanted this for so long and now it's finally here. I only have you to thank.\"\n\nJack embraced his sister warmly. \"I can thank you too for everything you've done today. I don't know what I would have done without you.\"\n\nVera smiled. \"You'll never have to find out, right?\"\n\nJack nodded as he felt himself get a little choked up. At that moment, he couldn't help but think of Jocelyn. He remembered her wedding day well, and no doubt a similar promise had been made. \n\nJack just hoped that he could keep it for this sister.\n\nVera seemed to sense where his mind had gone. She squeezed him tighter. \"She was proud of you, Jack. She still loves you too.\"\n\n\"How do you know?\"\n\nVera smiled. \"Because I'm proud of you. And I know she would be too.\"\n\nThe words were thick in his mouth, so thick that he couldn't quite get them out. Jack managed a nod as Greg soon joined them.\n\nJack placed Vera's hand in Greg's. \"She's all yours now. Take care of her, will you?\"\n\n\"You know I will, Jack,\" promised Greg.\n\nJust like that, the newlyweds left the balcony for their own room, followed by Evelyn not far behind them. At that moment, Jack was left alone with both his wives. They each took a side, wrapping their arms around his body.\n\n\"How does it feel to get a new brother today, Jack?\" asked Kat. \n\nIt was a question he hadn't yet considered. With their marriage, Greg was now technically his brother-in-law. Jack couldn't have chosen a better man for the job. In a weird way, it also reminded him of Art's passing. With Greg the leading general in Galicia now, there was much on his shoulders. And in this war to come, he would be tested in a way that he'd never been tested before.\n\nIf anyone could handle it, it was Greg. \n\nJack put an arm around each of his wives. \"It couldn't have happened to a better man.\""
    ],
    "authorname": "CJMcCormick",
    "tags": [
        "sci-fi",
        "fantasy",
        "naval",
        "council",
        "action",
        "adventure",
        "king",
        "prophecy"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/fourth-vector-ch-43"
}