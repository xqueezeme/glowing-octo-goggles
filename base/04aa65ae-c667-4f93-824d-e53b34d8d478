{
    "title": "Life's Changes Ch. 08",
    "pages": [
        "I awoke to the sense that something was different. I realized I wasn't in my own bedroom. The only light was coming from somewhere behind the wall. Then I smelled the scent of fresh brewed coffee close by. I felt a warm body next to mine that held me in its grasp. It was female. I could feel the swell of her warm breasts against my back. And the faint smell of her perfume filled my nostrils. The smell was that of my Jenny. Her sexy smooth leg was resting on mine, and her hand rested on my tummy. It felt good to have her hold me. I could stay there for hours if it wasn't for the smell of the coffee.\n\nLooking at the clock on the nightstand I could see it was ten thirty. Time to get up for the drive to Atlanta. I gently moved Jen's hand, which caused her to roll on to her back. I noticed movement in the room by a chair.\n\nIt was Pam. She came to me and knelt by the bed and whispered. \"Good morning Mistress. I hope I didn't wake you.\" Kissing her forehead I said\n\n\"No you didn't the coffee did. But I have to be getting up anyway. Are you the only one up?\"\n\n\"No Glenda, Cheryl and Ginger are also up. Miss Sandy is still asleep I believe.\" She told me as she handed me a cup of coffee.\n\n\"Why don't you lick Miss Jenny awake for me?\" I told her pointing to where I wanted her to lick. I watched as Pam went to Jenny's side of the bed. Holding her hair back she leaned over and slid her pink tongue into Jenny's slit and slid it in and out. She had Jenny moaning in no time.\n\n\"Oh Sheri you sure know how to wake someone.\" Jenny said with her eyes still closed. Then I giggled shocking Jen. Her eyes popped open and looked at me then she looked down to see who was pleasuring her. \"Oh Pam that's a sweet girl. Go head and lick away.\"\n\nJenny opened her legs and Pam moved between them for to get more comfortable. Pam now started to really go to work on Jenny's pussy. As she started to use her mouth and her tongue on Jenny's slit\n\nI got out of bed to use the potty and to leave the other two to their pleasure. After a quick shower and some light make up I returned to the bedroom. To find Jenny kissing Pam as they laid on the bed. Taking my cup I sat back on the bed and kissed both girls and said\n\n\"It's already eleven o'clock why don't you two get a shower, then we can go find something to eat.\" Once the other two when for their shower I turned on the light. On the dresser I saw that Pam had bought me some cloths to wear.\n\nAfter getting dressed I waited for Jenny and Pam to finish their shower. When they were done and dressed we went in search of something to eat.\n\nFinding Glenda Cheryl and Ginny in the kitchen. We sat at the kitchen table as Ginny prepared breakfast for us I asked\n\n\"Is Sandy still in bed? Some one should go wake her so we can leave at noon.\" Cheryl went to wake her.\n\nAfter we finished our breakfast Sandy came in freshly showered and dressed to meet the day and said \"Thank you Sheri I really enjoyed Pam last night. She was very attentive to my needs.\"\n\n\"I'm glad.\" Then to Pam I asked. \"Pam did you enjoy yourself?\" \n\n\"Yes Mistress it was a very enjoyable evening. And Miss Sandy is a very considerate lover.\" I could see she said this without reservation. So I gathered nothing happened I should worry about.\n\nOnce breakfast was over Pam helped me pack while Glenda changed back to Bill for the ride up. Bill Pam and I drove up in our car. While Jenny Ginger Sandy and Cheryl drove up in Jim's car. On the way I asked Bill\n\n\"Did you enjoy yourself last night too?\"\n\n\"Yes it was great.\" I took Bills hand in mine and said \n\n\"I told Jenny I loved her. I know we said that what ever we did with other people was just sex. But I really think I lover her, not like the love you and I have or that I have for Pam. But I do love her.\" Bill kissed my hand and said\n\n\"I know what you mean. I love Pam too not like I love you. I could never love anyone like the way I love you.\" I kissed Bill on the cheek and rested my head on his shoulder. Then I reached between his legs and gave his cock a squeeze I saw him wince in pain.\n\n\"What's the matter?\" I asked I was concerned he was hurt\n\n\"Oh nothing I guess I over did it last night.\" \n\n\"Oh poor baby did those girls take advantage of you last night?\" I asked teasingly\n\n\"I guess they couldn't get enough of it.\" He said with a chuckle \n\n\"Should I kiss it and make it better.\" I asked \n\n\"I don't know if that would help, but you could try it and see.\" He said with a gleam in his eye.\n\nI opened his pants and pulled his pink panties down to just below his balls. I lay down on the seat and took his soft cock in my mouth. I wasn't trying to get him to cum. I knew that could be dangerous I was just doing it for our enjoyment.\n\nIt's been along time since I did this. When I was first learning to deep throat Bill I use to do this a lot. Anytime we drove any distance my head was usually in his lap most of the way. He would warn me when he was getting close and I'd back off till he'd calm down then I'd go back at it for awhile more.\n\nThis time was no different. Bill enjoyed my mouth and I enjoyed giving him pleasure. Once while I was waiting for him to calm down. Jenny pulled up along side us and wagged her finger at me. I gave her the finger and went back to sucking Bill's cock. When we got close to Atlanta Bill let me know. I zipped him back up and touched up my make up before we had to stop\n\nWe arrived at Sam's Tattoo shop at two o'clock. When I got out of the car Jenny came over to me and asked\n\n\"What was that a midday snack?\" I laughed and said \n\n\"I was just soothing him from the work out those two sluts put him thru last night.\" Pointing to Cheryl and Ginger.\n\n\"I'm sure he had nothing to do with it. They must have forced him.\" We both laughed then walked arm in arm into Sam's shop.\n\n\"Well Sam you don't look to busy?\" Jenny said. After she greeted everyone with hugs and kisses she said\n\n\"No. It's too early in the day. The crowd I get in here usually doesn't show up till the sun is down. What can I do for you all?\"\n\nTurning to Bill I said in whisper. \"I'm thinking of having both Pam's nipples done. Do you want your other one done?\" Bill nodded his head excitedly. Then to Pam I asked if she wanted both done she said she did. I told Sam\n\n\"We need three nipples pierced.\" Sam nodded her head and Bill sat in the chair first. Once Sam checked his other piercing she pierced the other nipple and connected them with a chain. Then Pam removed her shirt and bra and sat in the chair while I held her hand. When hers were pierced and the chain was attached Sam told her to leave the bra off for a couple of hours. Then to me she said\n\n\"How about you? I'll give you the fourth piercing free.\" I thought to my self what the hell. If I don't like it I can just take it out. I took off my shirt and bra and had my left one pierced. That hurt how Pam had both done was beyond me. Then Jim had his other done and Jenny had her left one done. Cheryl had both hers done but Sandy begged off. While I paid for my three piercing Sam handed me four small silver weights and said\n\n\"After they heel try hanging these from their nipples they may like it if not you could use it as a form of punishment.\" I couldn't see how Bill and Pam could enjoy it but you never know. I couldn't see the paddling but they did like that.\n\nWhen we left Sam's she said the oddest thing she said \" I'll see you tomorrow.\" when Jenny asked what she meant she said \"you'll see I sure you'll be back tomorrow.\"\n\nAfter that we when to Jackie's when we walked in, there didn't seem to be anyone there. Walking back by the toy section I held Bill's hand while Pam held his other. Jenny and Ginny made a beeline straight for the strap-on dildos while the rest of us just looked around. Jackie came out of the back room, wiping herself off with a towel.\n\n\"Well I see I gained some popularity.\" Then seeing Sandy she ran to her and threw her arms around her. \"Sandy so good to see you again.\" They kissed; I could tell they knew each other well. They Jackie came over to Pam and said.\n\n\"I see your still with your mistress. Have you earned your ring yet?\" Pam lifted her shirt and proudly showed off her new nipple rings and said\n\n\"Yes Miss Jackie. Mistress gave me two today.\" \n\n\"I can see there still a little sore. You have a good Mistress be good for her.\" Then she turned her attention to me and said\n\n\"To bad you decided to keep her. I would mind having her for myself. This must be Bill your husband.\" Jackie gave Bill the once over and then said. \"I wouldn't mind him either. You are one lucky lady to have two fine looking slaves to serve you.\"\n\nJenny and Ginger came over to us. Jenny was carrying two double-headed strap-on dildos, one bigger then the other. One was about the same size as the one I had and the other was at lease twelve inches long and two and a half inches thick. The smaller end was eight inches long and two inches thick with a barbed nub that would ride on the clit area. I was shocked she would even try something that big. Looking at me she asked\n\n\"Do you think this one's too big? Ginny says no but I'm not sure.\" \n\n\"Well it all depends. If Ginny thinks she can handle it then I'd say get it. But I'd be careful.\" Jenny nodded her head and then said to Jackie.\n\n\"I'll take both and Ginny need's something to wear tonight to Dominators.\" Jackie took Ginny back to the leather area. Jenny then asked Bill\n\n\"What do you think? Can she handle something that big?\" Bill though for a second and said\n\n\"She can handle me and I'm thicker than that one is, but I'm not that long. You'll have to go slowly so she can get use to it.\" Then with a blush of embarrassment he said \"Cheryl went in deeper but I like the way Ginny did me better. The shorter jabs where much more pleasurable. You don't have to go all the way in either.\" I kissed Bill's hand to let him know it was ok with me. Then I notice he still had on his nails and nail polish. I asked him about this he said.\n\n\"I thought it would be okay then I wouldn't have to put them back on tonight.\" Looking at his hand again I noticed his wedding band. It was a large white gold band about three eights of an inch thick. It was a man's band and on his fingers with the long nails and nail polish it looked out of place. Remembering that there was a jewelry store just down the street from Jackie's I said to Bill\n\n\"I'll be right back. Pam, come with me.\" Pam and I walk down to the jewelry store. Once inside I looked at the wedding rings and spotted a set that looked almost like the one I was wearing. I asked the jeweler if he had three female rings in Pam's Bill's and my sizes. Bill's fingers being long and thin were not a problem. The jeweler had what I was looking for. Then I asked for a diamond ring in Bill's size. Finding a marquee cut diamond the same weight, as mine was not a problem. After paying for the rings Pam and I walked back up to Jackie's on the way I took Pam's hand in mine and asked\n\n\"Pam would you be my wife.\" I asked as seriously as I could. I didn't want her to think I was joking. I could see Pam was stun by this she said\n\n\"Mistress I'll always be yours. I don't need a ring from you.\" \n\n\"I know. I want you to wear it so no one will think you're available.\" I saw a tear come to Pam's eyes the she said.\n\n\"I'd be honored to wear your ring.\" She threw her arms around me and started crying. I held her close to me as her emotions over took her. Once Pam got herself under control I place the band on her left ring finger. Then we walked back to Jackie's. Looking back towards the jewelry shop I saw the man that waited on us shake his head and turn to go back in the store. I knew he thought I was a lesbian but I really didn't care.\n\nBack at Jackie's everyone was waiting for Pam and I. We said good-bye to Jackie and then we when to the hotel. We stopped at the portico to drop off our bags. A porter came up to us and asked.\n\n\"Are you with the Marsh party?\" We said we were \"Your room is ready if you'll give me your keys I'll park your car and someone will bring you bags up to your room.\" We walked up to the others and Jenny said\n\n\"Lets go to the bar while they bring up the bags. Then we won't be tripping over anyone while they bring in the bags.\"\n\nWhile we were sitting at a large table in the bar Bill saw the ring I gave Pam. Bill asked me in a low whisper.\n\n\"What's with the ring?\"\n\n\"I don't want her to be hassled by men trying to pick her up she's way to pretty to be available. So I bought her a ring that looks like ours. Is that ok? I kind of think of her as my wife anyway.\"\n\n\"Your right I think of her as another part of our marriage. I just can put a name to it yet.\" Bill agreed\n\nAfter we had two drinks. We went up to our room. We took a private elevator to the top floor. Which open to a foray to the presidential suite. I was stunned I knew they rented this type of rooms and all the good hotels had them but I never knew any one that actually rented one.\n\nThere was a large living room with a dinning room table off to the side and there were three bedrooms off of the living room. There was a large sliding glass door that over looked the countryside. Jenny then said\n\n\"I took the liberty of ordering dinner. Sheri you Pam and Bill will be in that room.\" She told us pointing to the center bedroom. \"And Sandy you and Cheryl will be in that room. This is only for changing not sleeping.\" Pam Bill and I went to our room. There was a king size bed with a large bathroom. Our suit cases where already there. Jenny followed us in and closed the door behind her.\n\n\"I need to talk to the three of you. When we get to Dominator's. The two of you\" She said pointing to Bill and Pam \"Must do exactly as Sheri tells you no matter what. I doubt she'll tell you to do anything you don't want to, But you must do exactly as she say's. If you don't the Master Domi will take you and punish you. And Sheri will be punished too. Do you two understand?\" Bill and Pam nodded their heads.\n\n\"Sheri you must remain in control at all times. You can't tell some one else's slave what to do. And you can't punish someone else slave with out their permission. It's better if you let them deal out the punishment. If some slave becomes rude to you, you can exert your authority on them but don't hit them with out permission. If you don't think you can handle it tell me now and the three of you can go as my slaves.\" I assured her I could handle myself then she continued\n\n\"Chairs are for Mistress and Masters only. Slaves either stands behind of kneel at the feet of their Mistress. Sheri never forgive someone else's slave for being rude. That's the privilege of their master. Your slaves will get you what ever you want never get a drink for yourself. We're eating here because slaves can only eat out of dog food bowls at the club and I refuse to have Ginny eat that way. If you have any question don't be afraid to ask Sandy or me. It's better to ask then make a mistake. I know I'm making it sound dreadful but it isn't. I just want you to be careful.\"\n\nI assured her I would be. Ginny open the door and said that dinner was here. We went in to the living room. On the dinning room table was a large array of food. There was shrimp and baby lobster. Buffalo wings and Chicken fingers there was so much food I didn't know where it was all going to go. I knew we couldn't eat it all. During dinner we chatted and joked. At eight thirty we decided to get ready for the club.\n\nBill Pam and I went to the bedroom and started putting on our make up. When we were dressed I tuned to Glenda and said \"Glenda give me your wedding band.\"\n\nBill wasn't sure what I want it for so was reluctant to take it off. I knew how he felt I didn't take mine off ever. I said \"its ok love give it to me.\" Bill gave it to me then I took the two rings I bought earlier and placed the band on his ring finger I asked,\n\n\"Will you be my she male husband to do as I say when I say?\" He said he would then I slipped on the diamond wedding ring and said. \"These rings you'll wear when you're Glenda. The other one you can wear when you're Bill. These are more feminine and they fit your female side.\" I slid the third new ring on to my finger along with the other two I already had on. \"I'll wear this one along with the other two to show my commitment to Bill, Glenda and Pam.\" I looked up at Glenda and I could see her eyes watering. \"Are you ok with that?\" Bill took my hand in his and said\n\n\"You are the best wife a man or women could have. I've known you would always love me but you seem to show it more each day.\" We hugged each other and then pulled Pam into the hug with us.\n\nWe walked in to the living room. I was worried that we had on too much make up till I saw Sandy and Cheryl. If they where any indication we had on too little. Their faces where heavily made up. Sandy was wearing a blood red bustier with red fish net stockings and thigh high red leather boots with five inch spiked heels. Cheryl was wearing a red leather corset with red stockings and six inch heeled red leather boots; around her neck she wore a red leather collar with a gold tag. Attached to the collar was a red leash. On her wrist and ankles were cuffs. Both had left their breasts exposed Cheryl had a gold chain attached to her nipple rings.\n\nWhen Ginny came into the room she was wearing a pink satin corset, with a matching collar. On her legs she was wearing pink stockings and six inch spiked heels. She also had on wrist and ankle cuffs. Ginny's breast where also exposed. Jenny followed wearing a black leather bustier with black fish net stockings thigh high laced up boots with a five-inch heel. I asked\n\n\"Does everyone go with their breast exposed?\" \n\n\"No not everyone but the ones that can usually do. And while I'm young and mine still stand on their own I want to show them off\" Jenny said then pointed to Cheryl and Ginny. \"They like to show off the fact that they have some.\" I turned to Pam and said\n\n\"If you want to show yours off go ahead.\" Pam hesitated only briefly then pulled off her breast covers. And hooked her chain to each ring. I asked, \"Do your nipples hurt from the rings?\"\n\n\"They did with the covers but now their ok.\" I knew what she was saying mine was hurting a little if I had brought my other bustier with me I'd would be changing too.\n\nGinger brought us all glasses of champagne. At ten thirty we left for the club. While we were putting on our raincoats I said, \"This must look ridiculous. Here it is the end of May not a rain cloud in sight and we're all wearing rain coats.\" Jenny then said\n\n\"Don't worry love the only person that will see us is the valet in the parking garage in the basement. And everyone in this hotel knows where most of the guests go on the weekend. Now just relax and enjoy yourself.\" Taking my credit card and my driver's license. I stuck them down my breasts the only place I had to put anything.\n\nWe rode down in the elevator and just as Jenny said our cars were waiting when we got off. The valet handed the keys to Jen and I then turned back to the TV he was watching. I followed Jenny out of the garage and down the Highway for about a mile or so then pulled into a large stone gate way. The sign on the gate said that this was a private club for members only. We pulled into the front of what I could only describe as a southern plantation mansion. A short man dressed in old colonial livery complete with powdered white wig helped me out of my car. We ascended the white marble steps to the front entrance.\n\nOnce inside we handed our coats to another man in butlers costume and proceeded to the reception desk. Every one of the men I had seen so far wore a collar with the nametag stating \"Property of the Master Domi.\"\n\nThe receptionist was wearing a French maids uniform. He looked at all of us giving everyone the once over. His eyes passed right over me as if I wasn't there. Then he said \"Mistress I need to see ID's.\" I pulled my driver licenses out to which he said. \"Not you, you stupid bitch I was speaking to your Mistress.\" I moved faster then he realized. I grabbed him by the collar and pulled his head down to the desk with a loud thunk. He realized his mistake once he saw my necklace though it was too late.",
        "\"Please Mistress forgive me I didn't see you neck lace.\" He said in an almost girlish tone. I was just about to release him when behind me I heard a very deep voice ask.\n\n\"Is there a problem Mistress?\" I turned still holding on to the collar of my captive. I looked up into face of a very tall very broad black man. He had to be six ten if he was a foot. He had to be five foot wide at the shoulders. He had a gold earring in one ear and was bald as a bowling ball. He had a smile on his face that said, \"Yea I'm huge and I know It.\" then he asked again as he looked at my necklace\n\n\"Is there a problem Mistress Sheri?\" I knew I had to be tough and try and take control of the situation. So I said\n\n\"Is this piece of shit your property?\" The Master Domi said \n\n\"Yes Mistress it is.\" \n\n\"Then you should teach it better manners.\" \n\n\"I will, you can be assured of that. Do you wish to punish him?\" I knew I wasn't supposed to say yes.\n\n\"It's your responsibility you take care of it.\" I could hear the sissy behind me say\n\n\"Oh god no.\" I almost felt sorry for him but it was out of my hands. \n\nThe Master Domi replace my hand with his, his hand was the size of five of mine. Then he pulled the sissy across the desk. Scattering everything with it. He brought the sissy down to kneel at his side. The sissy was finding it hard to breath due to the lack of space between the collar and the Masters hand. The Master waved over one of the other French maids and said\n\n\"See that Mistress Sheri receives a bottle of champagne for the in convince and give her and her party one of our best tables.\" Then he turned to Jenny and said \"Mistress Jennifer, Mistress Sandra so good of you to come tonight I'm sorry for the intrusion. Please enjoy the rest of this evening.\" Then turning to the new maid he said, \"See that Mistress Sheri receives a membership application.\" Then to me he said, \"There will be no application fee.\" He turned and walked away dragging the sissy with him.\n\nThe new maid took my driver licenses and wrote my name in a book. Then pulled out another sheet of paper. I assumed was the application form. Then she filled in the blanks. She had me sign the application and then put it back in the draw. Then asked\n\n\"Would you like to give me a credit card for any purchase you would care to make tonight?\" I handed her my card then after she wrote down the number she turned to Jenny and Sandy and said. \"Does Mistress have a membership?\" Jenny and Sandy gave over their cards and credit cards. When she was done with them she turned to another maid and said.\n\n\"Please take Mistress Sheri and party to table three.\" Then to me she said \"Mistress this is our best table if you would like something else. Tell Sissy Steven what you would like and he'll make every effort to please you.\" I thank her and followed Sissy Steven to our table. Once we where seated Jenny said to Ginny\n\n\"Why don't you show Glenda and Pam around and see what's going on in the rooms.\" When the slaves left. Jenny turned to me and said, \"I can't believe you. Do you know what just happened?\" I thought I did something wrong\n\n\"You said I could exert my authority if a slave was rude to me. I can't see what I did wrong.\" Jenny started to laugh she was joined by Sandy. Then she said to me\n\n\"You didn't do any thing wrong you where perfect.\" then to Sandy she said. \"Can you believe she got a membership on the first night and for free no less?\" Jenny saw that I was confused. \"Sheri Ginny and I had to wait two years before we where allowed to join. How about you Sandy?\"\n\n\"Eighteen months and only because I sat through three movie signings that he sold of four times the price. And which I got nothing for. And I still had to pay the membership fee.\" Jenny continued\n\n\"The membership fee is twenty thousand a piece. That's sixty grand for the three of you.\" My jaw must have became unhinged Jenny closed my mouth then said. \"Now is not the time to show your innocents.\" She nodded her head so I would look behind me. The Master Domi was coming our way. He came to our table and said\n\n\"May I sit?\" I indicated he could then he said. \"So you're the infamous Sheri that Max was telling me about.\"\n\n\"You know Max?\" I asked \n\n\"Max and I have an arrangement. He helps me find sissies to work around here. And I help him with keeping his place running. Most of the politicians don't like Max's clientele but a few of them are members here. So I let it be known that Max's place is ok with me, the politicians leave him alone and he gets me the talent I need to run this place. Their not all my slaves, most just work here. They get paid well. So they but up with a lot of abuse. If there not my slaves I can't punish them but I can make them miss a week or two of work, which hurts them, even more. You happen to run into one of my slaves. He will be punished and you'll be able to watch.\" I was about to say I didn't want to watch but he stopped me and said. \"Don't worry he's been asking for it for some time, tonight was the last straw. I like that you didn't back down to him and you didn't back down to me. I tend to scare most Domie's. You didn't bat an eye.\" He stood and said \"his punishment will be on stage tonight for all to see. You'll be given one more chance to forgive him or give the punishment yourself. Until then enjoy yourself.\" He turned and walked away After he left I could see all the tables around us, people where whispering and pointing at our table. I asked Jenny why\n\n\"The Master Domi never comes out and sits with other people. You have become a celebrity.\"\n\nJust then our four slaves came back to the table, all but Cheryl looked scared. Jenny could see there was something wrong too when she looked up she went ashen as well I followed her gaze. Coming to our table was a Mistress leading three other women by their leashes. She was a woman of average height Five seven or so. She was what some would call Reuben like in build. Not fat but not slim either. She walked up to our table. I looked at Jenny and I could see fear in her eyes. Which surprised me, I never know Jenny to fear anything. Looking at me the women said\n\n\"I was wondering who was holding Pamela's leash.\" Then to Jenny she said \"Jenny so good to see you again and who is that lovely thing kneeling at your side.\" Jenny's said\n\n\"Well Sharon fancy meeting you here. Is that Bethany, Debbie and Mary with you.\"\n\n\"Yes, Julian's on call this weekend. He couldn't come.\" I didn't know who she was but Jenny did and I could see she didn't like the fact that this Sharon knew she was here. To me Jenny said \"Sheri, Sandy this is Sharon Krause the firms accountant.\" I realized why Jenny looked scared blackmail was one of her worse fears. I asked Sharon to sit which she did her three slaves kneeling behind her. Then I asked\n\n\"What's this all about?\" Sharon looked at me and said \n\n\"What's it about? It's about nothing Sheri. I saw Pam and that lovely thing on the other side of you coming out of one of the rooms. When Pam saw me she whispered something to her. They both made a beeline back here picking up the other two on the way. I had my eye on Pam since she came to work at the firm. I just wanted to see who beat me to her. Then I found Jenny here with you so I came over to introduce myself. I never thought Jenny would be so defensive.\" Then to Jenny she said\n\n\"Look Jen we're all adults here. I don't like your messing around on Jim but I won't tell him I saw you here. If that's what you're worried about.\" I realized that she didn't know that Ginny was Jim and Glenda was Bill. I asked\n\n\"If you don't like it how come you won't tell him?\"\n\n\"Look if I told him, he might get mad and shut down the firm just for spite. I know he loves Jenny with all his heart. If he found out she was cheating on him with another girl it may kill him. No I won't be the one to do that to him. I love him too much for that.\"\n\n\"What if you found out that he was cheating on her too?\" She shot me a look that scared me then she said.\n\n\"Look I don't know who you are, but don't ever say anything like that to me again. Jim is devoted to his wife. He would never do anything to hurt her.\" I could see she meant what she was saying.\n\n\"You never know what two people are capable of.\" I said \n\n\"The only way Jim would fool around on Jenny was if she knew about it and she said it was ok.\" I could see a light come on in her head then she said \"That's it isn't it you have your little sweetie there and Jim has his thing. And you all live happily. That's it isn't it Jenny?\n\n\"Well, it's something like that.\" Jenny said cautiously. \n\n\"Does that mean I have a chance with him. I'll tell you I would mind a tumble with him once in a while. And that new guy, what's his name, Bill, he looks like someone that could really make a women forget herself.\"\n\n\"What makes you say that?\" Jenny asked\n\n\"I don't know there's something about him that says he'd give you a ride you won't forget. But there's not much chance in that. Pam said that he's married to a gorgeous women that he's devoted to.\" I stroked the top of Pam's head. The champagne finally arrived. The maid curtsied and said\n\n\"Sorry for the delay Mistress Sheri but the Master insisted that it was chilled before we served it.\" She showed me the label it was a Rothschild 53. Even my novice knowledge of wines knew this was a very rare and valuable wine. I said to the sissy\n\n\"I couldn't possible except this. It's too valuable.\" I could see fear in the sissy's eyes as I said this.\n\n\"Mistress Please I couldn't possible tell the Master that you did want it. I would be next on the block and I wouldn't want that.\" I felt sorry for her\n\n\"Very well then. Please pour and tell the Master I appreciate his generosity.\" The sissy seemed happier I accepted then I was to receive it. Sharon took this all in. When the sissy was finished pouring and departed Sharon asked.\n\n\"I don't want to be rude but who are you. I saw the Master sit with you then he sends a bottle of champagne to your table. The sissy just about begged you to except it. Are you someone special?\" I knew this was no time to tell her who I really was so I said\n\n\"If I was someone special I wouldn't tell you. Let's just say I'm a friend of Jenny's and leave it at that.\" I could see Jenny was having a hard time holding back her laughter. But Ginny couldn't, she started giggling and then started laughing. Once Ginny started Jenny followed along. I could see Sharon took offense to this. I sat back to see how this was going to work out. Having had enough Sharon asked\n\n\"What's so funny\" Jenny calmed down and whispered something in Ginny's ear and she nodded her head then Jenny said\n\n\"Sharon, Sheri is just my friend and she is also the wife of Jim's new partner.\" Jenny was going to continue when Sharon stopped her\n\n\"Wait Sheri your Bill's wife and Pam's Mistress. I take it Bill knows about this?\" I nodded my head. I leaned down and whispered to Bill\n\n\"Do you want her to know who you are if it comes up?\" Bill nodded his head\n\n\"Does Bill know about your little boy toy there too?\" I looked down to Glenda and said.\n\n\"Yes he does and he approves. Do you have a problem with that?\"\n\n\"No, no problem to each his own. I do have one question is Bill as good as I think he is.\" she asked\n\n\"Probably better, because I couldn't begin to describe how good he is. It's beyond words. And before you ask. If he wants you, you have my blessing.\" This shocked her more than she cared to admit. Then I could see the light of understanding in her eyes\n\n\"That's Bill isn't it?\" She asked pointing to Glenda \n\n\"No this is Glenda.\" I said putting my arm around Glenda. \n\n\"Ok but when Glenda goes to work she becomes Bill right?\" I looked at Glenda and she nodded her head. Then Sharon said \"Dam I would have never known.\"\n\nJenny was just about to say something when the lights started to go down in the room. The lights on the stage came up at the same time. When the curtain was raised, on the stage was the sissy maid that was rude to me. He was strapped to a padded pommel horse. He was naked from the waist down except for the six inched spiked heels on his feet. On his upper body he still wore the uniform he had on in the reception area except the front was open and his breasts were showing.\n\nThe Master walked out on stage and came over to my table. And said \"Mistress Sheri would you come up to the stage?\" I knew I couldn't refuse. I walked up to him I knew every eye in the place was on me. Then he said pointing to the sissy\n\n\"Masters and Mistresses you have before you a worthless excuse for a women not to mention his pitiful performance as a slave to me. He had the nerve to question the honor and supremacy of this fine Mistress,\" he said pointing to me. I heard murmurs of sympathy. The Master walked over to the sissy and grabbed him by the hair and asked as he pulled his head back. \"What did you call her?\"\n\n\"A stupid bitch Master.\" Which earned a gasp from the crowd. Then the Master asked.\n\n\"Did she have on a anything denoting her station?\" The master was playing to the crowd\n\n\"Yes Master but I failed to see it.\" Another gasp from the audience then to the audience The Master said\n\n\"As most of you know I always allow the accused a chance to explain themselves and ask forgiveness.\" the sissy looked to me and said\n\n\"Mistress I was inattentive and I didn't see your necklace. Please forgive me it will never happen again.\" I heard jeering from the audience then the Master asked\n\n\"\"Well Mistress do you forgive him.\" after the shouting died down I said.\n\n\"That was the poorest excuse I'd ever heard. It didn't even sound like he was sorry. So no I don't forgive him after his punishment he may be more sincere.\" Cheers erupted from the audience. Once they died down The Master picked up a paddle from the table next to the victim and asked.\n\n\"Would you care to administer the punishment?\" Dead silence fills the room all waiting to hear my words.\n\n\"Master Domi this low some slave is your property. As I would expect all punishment of my slaves to be my responsibility, I'm sure you feel the same do with him as you will.\" A large bright smile filled the Masters face as cheers and applause filled the room. Then he asked so only I could hear\n\n\"Do you wish to watch from up here or from your seat?\" I told him my seat. He took me to my seat and then walked back onto the stage waving the paddle in the air to more cheers.\n\nThe Master then put the paddle back on the table. He then picked up two large round silver balls and walked in front of the sissy. Pulling up each breast he attached one of the balls to the slave ring. Then let it drop. Watching this cause my own nipple to become hard. Looking between the slave legs I saw that he was becoming hard too. The Master also saw this. He picked up a braded stainless steel sleeve. The master fitted it onto the sissy's penis; when one end was pulled it tighten around the slave's shaft. The Master then added a large ball to the sleeve the size of a grapefruit. And this too he let drop, jerking the penis down with it.\n\nThe Master then pickup the paddle and swung it with all his might landing squarely on the sissy's ass. To which the sissy thanked his Master before receiving another. The crowd counted each one off and the sissy thank his Master between wails and tears. When he reached fifty the Master stopped.\n\nThe Master then moved to the front of the sissy. He opened the leather pants he was wearing and pulled out the largest cock I ever seen. It had to be twelve to thirteen inches long, three to four inches thick. The head was size of my fist. The Master then jerked it off some before saying to the slave.\n\n\"I'm going to fuck your mouth. If you can make me cum before the audience counts to fifty, your punishment will stop. If not I will continue.\"\n\nThe Master pushed his cock into the slave's mouth. And the counting started. It was a slow count, almost as if the audience timed it to each second. The slave looked like he was having problems. I was sure it wasn't the first time he had that cock in his mouth. By the time the audience hit twenty the slave was swallowing the whole shaft. The Master seemed to be enjoying himself as he pumped his rod in and out of the slave's mouth. To tell you the truth I wished I could feel it pump in and out of my pussy. When the audience counted fifty the Master pulled his cock from the sissy mouth and slapped him several times across the face with it, to the laughter of the audience. I looked around me I saw Mistresses and Masters with their slave between their legs performing orally on them. With no care who was watching.\n\nThe Master pick up a riding crop from the table and slapped the sissy's tender red ass. The crowd counted each slap but this time the slave didn't thank his Master he was screaming too much. When the count hit thirty the Master stopped.\n\nThe Master then greased up his cock and stepped behind the sissy. As he pressed his cock into the sissy's ass the crowd said one, then two on the withdrawal. Then the Master started fucking his slave in earnest to the count of the audience. When the count hit fifty the Master pulled out of the slaves ass and walked around him fisting his cock along the way. When he was standing in front of the sissy he fisted his cock twice and sprayed an ungodly a mouth of cum into the mouth of the sissy and onto his face. The crowd stood cheering and applauding. Then the Master walked over to where I was standing. His cock still semi-erect hung from him. The audience quieted down almost instantly as he asked\n\n\"Are you satisfied with the punishment?\" What could I say I was more that satisfied I was aroused beyond belief? I took my champagne glass and held it up to him and said\n\n\"You were magnificent. You are the Master dominator.\" The cheering started again. The Master bowed to me and mouthed a thank you. He stepped back and the curtain fell.\n\nWhen the lights came up I found my seat and drained the wine glass. Glenda was right there to refill it from the bottle. I saw his erect cock as he bent over to fill the glass. God I wanted that in me right now, I thought. After he finished filling the glasses he knelt back down. I leaned over to him and asked\n\n\"Did you enjoy watching that?\" \n\n\"Mistress I almost came it was so exciting.\" \n\nOne of the French maids took away the empty bottle and ice bucket as two other's brought two more bottles with six plastic glasses. Sissy Steven said\n\n\"Mistress, Master told me to inform you that he never enjoyed punishing a slave as much as he did for you. He thought you could use more champagne and the slaves at your table could use some as well.\" Sissy Steven filled all the glasses including the plastic ones and handed them to each slave starting with mine. Once she was gone Jenny said to me\n\n\"That's quite an honor. The Master never lets slave's drink from glasses, plastic or other wise. That's why Sissy Steven made sure to hand each glass to each slave. So that everyone knows it came from the Master. Again your a hit I don't know how you do it.\" I said to her\n\n\"It's just my girlish charm. I don't know either people just like me.\" Then Sharon said\n\n\"No its because you don't pull your punches. Ok getting back to the discussion we were having before the show. Jenny who is knelling next to you?\" Jenny put a protective arm around Ginny and said.\n\n\"This is Ginger. Why do you ask?\"\n\n\"And when Ginger goes to work who is she?\" Sharon asked. Jenny looked down at Ginny who nodded her head with a smile. Jenny said\n\n\"You know her as Jim.\" Sharon sat back in her chair in shock and said.\n\n\"You know I've been looking at her for almost two hours. I had a feeling that's who she was but I couldn't see it. There's nothing in her that says Jim nothing at all. Even now I still can't see it. With Glenda once you told me I could see the resemblance. But with Ginger I can't see it.\" Jenny then asked the question that played on both her and my mind",
        "\"Well now that you know for sure. How do you feel about it?\" Sharon thought for a moment then said\n\n\"What do you mean how do I feel about it. If you think this changes any thing it doesn't. Jim is still my boss. If you think I'll think less of him because he's has some different ways about him your wrong I told you before I love the guy. You may not know this put we're very protective of him at the office. At first it started because he's a great boss to work for. And we all know he doesn't need the firm. I swear he keeps it open so we have someplace to work. Later it was because he truly cares about us. So if you think I'll think less of him because he wears women's cloths or because he has tits like a teenager your dead wrong.\" I could see she was serious and hurt that Jenny could think that of her. Jenny must have seen it too she went over to Sharon and said\n\n\"Sharon I'm very protective of Ginny. She's my love and my life. I'd kill to protect her. We have been hiding this secret for a very long time. And for you to find out about it before we where ready for you put me on the defensive. Forgive me for sounding rude but you have to understand we don't want it getting out he would lose the firm.\"\n\n\"Look Jenny I don't want him to lose the firm either. And I know the rest of the girls don't. Where else can we go and make the money we make there. Not to mention the benefits. So If Jim wants to wear women's cloths then it's ok by us. He can even wear them to the office when he doesn't have any appointments. I only have one question.\" I was sure what that question was before Jen asked\n\n\"What's that love?\"\n\nDoes Jim like other girls besides you? I mean do I have a shot at him.\" Sharon asked. Jenny laughed and said.\n\n\"Honey Jim can sleep with who ever he wants. You'll have to ask him.\" Jenny looked at Ginny and then asked Sharon. \"Are the four of you staying in Atlanta tonight?\"\n\n\"Yes at the Hilton down the road.\" \n\n\"Good so are we. Lets go back to the hotel and make a party of this.\" Jenny told her then to Sandy and I she said \"Is that ok with everyone else?\" We all agreed it was time to go.\n\nWhen we arrived back at our hotel. Sharon and the girls went to their room to change while we went to ours. We all change into nighties Jenny then ordered food and several bottles of champagne. I walked over to Ginny who seemed beside herself with glee and said\n\n\"It looks like you have another pajama party. But this time we're not playing spin the bottle.\"\n\n\"No not tonight. First of all it's to late and second I'm too horny.\" \n\n\"Your not the only one. I've been trying to come up with a way to get Cheryl and Glenda in bed with me at the same time. Since I'm sure you'll be going with Sharon.\" I said\n\n\"Well actually Jenny and I will be with Sharon. Mary and Debbie are lovers and housemates. I think their life mates as well. Bethany is married to a doctor named Julian. You may get your wish you'll just have to see who pairs up with who.\"\n\nSharon and the girls arrived at the same time as the food and wine. Ginger passed out champagne. Everyone seemed to pair off. Mary and Debbie went straight for Pam. While Bethany seem to take a liking to Sandy. Jenny and Sharon paired up while I stood and talked with Cheryl and Glenda. When Ginger finished handing out the wine she said\n\n\"Lades and genital men.\" Then she looked around the room and said. \"Well I guess there's only ladies here.\" Which got a laugh from everyone. \"To the new firm of Marsh, Macon and Associates.\" Every one said here, here then drank up.\n\nI looked over to Pam and saw that the one I thought was Mary had her hand up Pam's nightie. Debbie was standing real close to her. Jenny was kissing Sharon. And Sandy had her hand down Bethany's panties. Leavening Cheryl and Glenda to talk I walked over to the bar for another glass of wine. Ginger came over and said\n\n\"Looks like you got your wish.\" I giggled and said \n\n\"Yea if I can keep their hands off each other till I can get them in the bedroom.\" Ginny said\n\n\"Why wait? Go for it.\" \n\n\"I better wait to see if everyone else is ok with their picks.\" Ginny laughed and said\n\n\"Sheri it's already four in the morning. If you wait much longer everyone will be asleep.\" Then she said \"Looks like Sandy didn't wait.\" I looked to wear she was standing and she was gone. Bethany was gone too. Pam came up to me and asked\n\n\"Mistress seeing that there's only three bedrooms up here Mary suggested that we go down to their room to sleep since Bethany and Miss Sharon will be up here.\"\n\n\"Go ahead and have fun. Make sure to take something to wear for when you come back up and get a key from Miss Jenny to get back in the room.\" I kissed her before she went\n\n\"Well that settles it. You got your wish now I suggest you go and get those two in your room before they get other ideas.\" Ginny told me\n\n\"Yea I think I will. You three have a pleasant night. I'll see you later.\" I kissed Ginny good night. Then went over to Glenda and Cheryl and asked.\n\n\"Well do you two have anything planed for tonight?\" Glenda scooped me up as Cheryl went for the door to the middle bedroom. Glenda said\n\n\"We have a few things planed and they all center around you. I just hope you didn't have anything planed.\"\n\n\"Oh I thought of a few things but I leave it up to you.\" I told him \n\nGlenda put me down as Cheryl closed the door. Glenda took me in her arms and kissed me. I felt her hard cock rub up against me. Then I felt another pair of hands rub up and down my sides. I felt another pair of lips on my neck and another hard cock rub up against my bottom. I reached up under Glenda's nightie and found the chain that was attached to her nipples and gave it a slight pull. She pulled her mouth from mine and gasped and I felt her cock twitch.\n\nI looked down just as Cheryl took position of Glenda's cock with her hand. I tugged on Glenda's chain again. This time her went up on her toes and moaned as pre-cum flowed out of her cock onto Cheryl's hand. Cheryl's other hand slid up under my top and pulled the ring attached to my left nipple. The sensation was like nothing I felt before. It went straight to my pussy. My head fell onto Glenda's chest as I gasped for air. When Cheryl released my nipple I looked up at Glenda and said\n\n\"Now I know why you where so eager to get the other one pierced.\" She said\n\n\"It's just a side benefit to my servitude to you. I couldn't explain it to you, you had to feel it to understand.\" I had to agree with him how do you explain what I just felt.\n\nGlenda took me back in to her arms and kissed me again. Cheryl's hand had snaked its way down into my panties and cupped my pussy. Her other hand the one that was covered in Glenda's pre-cum now went under my top and grabbed my right breast. I could feel the pre-cum being rubbed into my breast. Then she took my other breast and massaged it. When she pulled my nipple ring again her fingers pierced my pussy at the same time. My orgasm hit me with such force and with such power I collapsed only to be held up by Glenda and Cheryl. When my orgasm subsided I said\n\n\"Help me to the bed. Before I pass out.\" \n\nGlenda and Cheryl must have carried me to the bed because the next thing I remember was lying naked on my back with Glenda on my right and Cheryl on my left both of them naked as well. Cheryl was kissing my left breast and Glenda was kissing my right. I took Cheryl's head in my hands and kissed her. Her kisses where soft like a girls and her tongue was soft and tender like a girls. If I closed my eyes I would have swore I was kissing a girl.\n\nI released her head and then kissed Glenda. She kissed more like a man. There was more force behind Glenda's kiss. Her tongue was stiffer then Cheryl's. I had Cheryl kiss Glenda. I didn't see either of them as a man. They looked like two women kissing. I could see Glenda's kiss was more forceful than Cheryl's. When they separated Glenda look at me his look was seeking approval. I kissed him again this time his kiss was more like Cheryl's sweet and tender. I kissed Cheryl again then they kissed. We did this several times till while they were kissing I reached down between us and took their cocks in my hand. Glenda's was hard fat and long while Cheryl's was hard thin and long. I could feel the slight length different between them. What Cheryl had over Glenda in length she more that made up for in width.\n\nWhile I stroke their cocks they kissed their passion was evident by the tenderness I saw in their kiss. They held their kiss for as long as they could till finally they separated gasping for breath. When their foreheads came together I stop my stroking but held them in my grasp.\n\nWhen I saw they had settled down I pushed Glenda on to her back. I then straddled her waist with my legs. I planted one foot on the bed then rose up and guided her cock to my hole. Then I slowly, painfully slowly settled on to her cock till I was firmly seated on to her with her cock all the way in me. Turning to Cheryl and pointing to my toy bag I said\n\n\"In that bag you'll find a tube of lubricant.\" Cheryl jumped up and found the tube then I said \"I think you know what I want you to do now.\"\n\nShe nodded her head and started to lube up her cock. While I waited Glenda and I started kissing again. When Cheryl's finger entered my asshole my body shook. I willed myself to stop till She was in me. It worked but only just. Cheryl got on the bed behind me and asked\n\n\"Are you sure about this Glenda and I didn't plan this?\"\n\n\"Well I did now would you please get in side of me. I want both of you in me.\" I told her\n\nCheryl put the head of her cock to the entrance of my bottom. I used all my concentration to relax my sphincter muscle. The head of Cheryl's cock was just a little bigger then the size of a golf ball. When she started to enter me I groaned as I felt of my asshole being wedged open. Cheryl froze thinking she was hurting me.\n\n\"Cheryl please don't tease me\" I begged \"Get it in me please.\" \n\nCheryl started pushing more in me till I felt the head pop in. Then I felt her sink in inch by inch till I felt her thighs against my bottom. I felt like I was spread wide open and stuffed like a Christmas turkey. I never felt so full in all my life. My body shook again as my ring less nipple tighten up to the bursting point. Glenda then slid out of me. I groaned as I felt her slide out of me. When Glenda started back in Cheryl pulled out. That's how it started. I was just along for the ride.\n\nOnce they got a rhythm started they picked up speed. I stayed as still as I could not wanting to throw off their rhythm. They pumped their cocks in and out of me bring me closer and closer to orgasm. And when it hit it was like a storm at sea. I would ride up one orgasmic wave and just as that one receded another hit me. On and on it went. I lost all sense of time and place. My whole world consisted of those two cocks sliding in and out of me driving on the orgasmic storm inside me. Till I felt first one then other cock swell in me. Then I was struck by lighting. A bolt struck me in my left nipple. An electrical charge pass though me and in to my pussy searing my clit. I screamed out just before I died\n\nWhen my eye's open again sunlight was coming into the room from around the window curtains. My head rested on the shoulder of my Glenda and my arm rested on her flat tummy. I felt Cheryl's body next to me. I felt a stickiness between my legs that told me we didn't clean up before we went to sleep. Looking at my watch I saw it was three fifteen.\n\nThree in the afternoon I never sleep this late. What time did we get to sleep? I tried to remember. The last thing was the lighting bolt. And before I remembered getting fucked by two cocks. I snuggled up to Glenda and rubbed up against her. She lifted her head and smiled at me. Then she kissed me. I felt Cheryl move behind me before I felt her lips on my neck. I was hoping she would continue but I also knew I needed a shower. Glenda pulled me closer and kissed me hard on the mouth. I stopped her and said\n\n\"Before this goes any further I need a shower. Some one didn't do his job last night.\"\n\n\"Sorry I passed out right behind you. It won't happen again.\" Glenda said Then Cheryl said\n\n\"I cleaned up before I went to sleep.\" \n\n\"That's not the kind of clean up I was taking about. But I'm glad you did.\" I told her. Just then the door flew open Sandy was standing in the doorway She put her hands on her hips and said\n\n\"Look little miss cock piggy if you're done with these two I need some cock and Bethany would like some too.\" I laughed and said\n\n\"Ok but you might want them to shower first.\" \n\n\"Well Ok but make it snappy.\" Sandy said as she closed the door \n\n\"Well I guess that means duty calls.\" I said then I turned to Glenda and said \"I'm sure your going to have plenty of pussy today.\" Glenda looked to Cheryl and said\n\n\"I'm going to need help.\" \n\n\"I'll do what I can. But I sure they all heard about how big you are and they want to try you on for size.\" Cheryl said\n\n\"Hey your pretty big.\" Glenda informed her \n\n\"NO I'm long your big, real big.\" Cheryl said \n\n\"Ok that's enough I feel like I'm in a boy's locker room in high school. Lets get in the shower and if things get to much for you two I'll put a stop to it.\" After we got sort of dressed Glenda and Cheryl both put on panties and camisoles figuring they we're headed to somebody else's bed. I put on shorts and a tee. Then we went into the living room.\n\nI made a beeline for the coffee maker and Bethany and Sandy made a beeline for Cheryl and Glenda. Bethany latched on to Cheryl and Sandy took Glenda in hand. After allowing Cheryl and Glenda to get something to eat and drink both couples disappeared into different bedrooms. Jenny came over to sit down at the dinning table with me.\n\n\"Hey wild night last night?\" Jenny asked \n\n\"Yea from what I remember of it.\" \n\n\"Well from what I heard it must have been great.\" She said \n\n\"Oh god was I that loud?\" I asked with embarrassment\n\n\"Don't worry about it. Hey did any one pull on your nipple ring.\" Jenny asked\n\n\"Oh yea. It's the best. You too.\"\n\n\"Oh yea Ginny pulled mine just as I came. It was like.\" Then she stopped\n\n\"I know it's indescribable. I know why Sam said she'll see us again today.\" Then Jenny said\n\n\"You'd think that slut of mine would have told us about them. I should beat her for not telling me about it.\" I looked around the room then said\n\n\"Speaking about sluts where's Pam. I can't believe She wasn't here to get my coffee this morning. Well I guess it's afternoon.\"\n\n\"Sounds like someone's a little jealous.\" Jenny said teasingly\n\n\"Well maybe but she should be here. I mean ok so I miss her is there a crime in that.\" Jenny laughed\n\n\"No there's no crime in that. I'll call Mary's room and see if they're up yet.\" Jenny went to the phone when she came back she said. \"She just got up and she'll be right up. She seem very upset that I called so don't make a big deal over her not being here earlier.\"\n\n\"I won't. Dam a week ago I barely knew she existed now I'm up set because she wasn't there when I woke up.\" Jenny patted my hand as Ginny came and sat down on the other side of me. Jenny gave Ginny a scowl then said\n\n\"Tell that slut sitting next to you I'm still not talking to her.\" It was my turn to laugh\n\n\"Jen you know I tried to get you to get one. How many times did I try?\" Ginny pleaded with her\n\n\"If you had explained what happen I would have got one years ago. But no you didn't do that.\" I could see that she really wasn't mad at her.\n\n\"Ok if it's so easy you tell me what happens.\" Ginny said. This got to Jenny because she couldn't explain it either.\n\n\"Oh shut up and get me some more coffee.\" Ginny knew she got Jenny She giggled before getting up. \"Keep that up and I'll have you wearing a suit to night.\" That shut Ginny up\n\nPam came in looking worse for wear. Her hair wasn't combed in its usual neat appearance she hadn't put on any make up. And I could see she was still half a sleep. Mary and Debbie followed in behind her. Neither of them looked any better. Pam came over to me knelt down and said.\n\n\"Mistress I'm sorry for not being here when you awoke it won't happen again.\" I could see she was worried I was upset.\n\n\"It's ok sweetheart.\" Pam went and got me another cup of coffee. Then the one I believe was Mary said\n\n\"Sheri it was really our fault. We keep her up very late.\" \n\n\"Mary isn't it?\" She nodded her head \"Pam has always been there when I wake up. I was just worried that something happen to her when she wasn't there that's all. I'm not mad really.\" I invited them to join us, which they did. Then Bethany and Cheryl came out of the middle bedroom. Bethany sat down across from me and said to no one in particular\n\n\"Dam I needed that.\" We all laughed Sandy and Glenda came out of her bedroom. Sandy walked up to me and got down on her knees and bowed. I asked her what she was doing.\n\n\"Any one who can take that for eight years is a goddess in my book.\" Which got a laugh from Pam, Ginny Jenny and myself. Bethany asked\n\n\"Is he that good?\" Sandy turned to her and said\n\n\"Good oh yes and huge.\" \n\n\"You mean he's bigger than Cheryl?\" Sandy caught the he this time \n\n\"No She's not as long as Cheryl is she's close, but She is a lot wider.\" Bethany realized her mistake then said\n\n\"I have to try some of her.\" I held up my hand and said \n\n\"Give her some time to recover. I'm sure you won't regret it.\" \n\n\"Oh your right I'm sorry. When Julian isn't here I get a little wild.\" \n\n\"Why's that?\" Jenny asked \n\n\"Well he's kind of jealous when it comes to me and other dicks. He doesn't like watching me getting fuck by other cocks. It's ok when he's not around as long as I don't tell him.\"\n\n\"Does he do it with other women when your there.\" Jenny asked \n\n\"Of cause I mean what's he going to do other guys.\" \n\n\"He could or he could let you do what you want. It sounds like he's has all the say so and you just go along with what he wants.\" Jenny said\n\n\"Well he is the man you know.\" Jenny and Sandy both laughed. Then Sandy said\n\n\"It sounds to me like he just insecure with his masculinity. I'd bet I could have him in panties in an hour and sucking cock in three.\"\n\n\"I doubt that.\" Then Bethany though for a second then said. \"I'll tell you I wouldn't mind see him with a cock jabbing him in the mouth the way he does me. I use to really love sucking cock but not any more. With Julian I never seem to be doing it right.\"\n\n\"I'd say you two had some issues to work out.\" Jenny told her \n\n\"It sounds like he has his cake and eats it to me.\" I said \n\n\"What do you mean Sheri?\" Bethany asked \n\n\"Well he gets to watch you with another women. Which is a lot of men's fantasies. Then he gets to bag whatever chick he wants with your blessing. And he's lead to believe that he's the only dick you get. Sounds to me he has it all his way.\" I said\n\n\"He knows I go with other men when I'm not with him.\" \n\n\"Does he Beth, does he really? You yourself just said that he doesn't want to know what you do when you're apart.\" I asked\n\n\"Of cause he knows.\" You could tell she was trying to convince herself at this point. Then she asked \"Do you tell Bill about every guy you sleep with?\"\n\n\"Well first of all I wouldn't sleep with a guy with out Bill knowing it. And second why would I go out to get fast food when I have fillet minion at home.\" Which got a laugh from everyone except Bethany. I could see that Bethany was getting upset with the turn of the conversation so I said \"Do me a favor don't tell your husband about Bill or Glenda or Pam for that matter. I don't think I want him to know about them.\"\n\n\"I'd have to agree with Sheri on that. I don't think I want him to know about Jim either. Something tells me if you told him you had sex with another guy you'd be looking for a new place to live.\"",
        "\"What makes you say that? He sleeps with other women.\" Bethany said with a little anger in her tone.\n\n\"Yea but you know he does. He's not cheating on you. If he finds out that your sleeping around on him, he could say you where cheating on him and that's grounds for divorce.\" You could see that reality just slapped Bethany in the face.\n\n\"But he said I could. He said if you sleep with another man I don't want to know about it. Those were his words exactly.\" Bethany almost shouted. Everyone just sat back and stared at her. We all knew what was coming it was just a matter of time. You could see Bethany change as the realization of what we where saying sunk in. First her shoulders slumped down then I could almost see the hairs on her back stand up. She wasn't going to take this lying down. Then she turned to Sandy and asked\n\n\"What did you mean you could have him in panties in an hour and sucking dick in three.\"\n\n\"Now remember we're only speculating here Beth.\" Jenny told her\n\n\"Well I'm not. We where headed for divorce before we open up our marriage. Now he has pictures of me having sex with other women. If he thinks I'm going to lay down and not fight him he's got another guess coming.\" The look in her eyes made me almost feel sorry for her husband but not quite. Sandy and Bethany when over to the sofa and started talking\n\n\"I'm glad I'm not that guy.\" Jenny said to me \n\n\"You're telling me. Did you see the look in her eyes? Well if he is planning to dump her he's got it coming. Only because of the way he's going about it.\" I said then I asked Mary. \"Do you think he planning something?\"\n\n\"It's possible he sure took enough pictures of us. Now I'm scared where they may end up.\" I could see her shiver from the thought.\n\nPam came over to me with a bowl of fresh fruit and toast. I said to her \"Honey would you like to go back to sleep. You look exhausted.\"\n\n\"No Mistress I'm fine I could use a shower though.\" She said \n\n\"Then go ahead and take one. See if Mary and Debbie want to take one too.\" That's when I realized that Debbie was gone and so was Glenda. I turned to Mary and asked, \"Where's Debbie?\n\n\"She went to the bedroom with Glenda. After what Pam told us about Glenda she wanted to try her out.\" Then to clarify she said. \"I'm the lesbian. Debbie's bi she likes dick every once in a while. I can't stand the though of having a cock inside of me.\" I could see she didn't like Debbie being with one either but it was something she would live with. I asked\n\n\"Does it bother you that she in there with him?\" Mary came over and sat next to me and said\n\n\"A little. The main reason it bothers me is because she does it with out letting me know she's doing it. I know it's because she knows I don't like men that much. I mean as sex partners. I don't have a problem with men as people. The other reason is I'm afraid of losing her to man or to another women. Even though she tells me I won't. I know she likes the feel of a penis inside her and she only does it once every couple of months. But deep down I still worry about losing her. If I don't let her do it I may lose her anyway. So what do I do?\" I took her hand in mine and said\n\n\"You let her have Glenda and Ginger. I don't think they'll try and steal her away from you and they have what she's looking for. They also dress like women do, you may not see them as much of a threat.\"\n\n\"You know you may have something there. Ginger doesn't look like a guy. I mean look at her she's so feminine. I know women that are more masculine then she is. I was just wondering.\" Mary stopped talking. I was sure where her thoughts where going. She wanted to try Ginger in bed and try a real cock. So I asked '\n\n\"Have you ever tried a dildo or a vibrator?\"\n\n\"Sure lot's of times. I really like them.\" She said \n\n\"Well maybe you should have ago with Ginger. Since she's so feminine maybe you'll like it with her.\" I could see she was thinking it over then she said\n\n\"What if I can't do it? You know like we get to the part where she's just about to put it in me and I chicken out. Won't she get upset?\"\n\n\"No I don't think she'll get up set. I'm sure she'll understand. And I doubt she'll try and force you to do something you don't want to do.\" I think that was the part she was worried about the most that when they got down to the actual penetration she would chicken out and be force into doing it. Then she asked in a whisper so only I could hear\n\n\"Do you think you could ask her if she would be willing to do it with me?\"\n\n\"Sure I'll ask her.\" I told her then I went over to where Jenny Sharon and Ginny where talking. I pulled Ginny to the side and said\n\n\"Ginny I need you to be as feminine as possible could you do that for me.\" I could see the surprise in her face. Then she said\n\n\"Sure Sheri. I always try to be.\" I could see she was confused \n\n\"Mary wants you to take her to bed and make love to her.\" Then she asked\n\n\"Are you sure it's me she wants?\" \n\n\"Yes love she wants you. You need to be as gentile and loving and as feminine as possible. And if she chickens out or tries to make you stop you have to stop. No matter how close you are.\" I could see the understanding in her eyes.\n\n\"Of cause Sheri I would never force her to do anything she didn't want to\" Then she said \"Give me about ten minutes then send her into the bedroom.\" I agreed\n\nI walked over to Mary I could see she was very nervous and she looked like she was going to bolt any second. I sat and took her hand in mine and said. \"Ginger needs to freshen up a bit then you can go in.\"\n\n\"She's ok with it?\"\n\n\"Yes honey she's fine with it and if at any time you don't think you want to continue then just say stop and she will.\" We both stood and slowly walked over to the door to Ginger bedroom and just as we got their Ginny open the door. I placed Mary's hand in Ginger's and kissed her on the mouth and said, \"Take it slow and easy Mary and enjoy it.\" She smiled a very nervous smile and walked into the bedroom with Ginny.\n\nI when back to the dinning room table and sat down. Jenny and Sharon came over and asked\n\n\"What was that all about?\" \n\n\"Mary wanted to see what Debbie saw in getting a cock in her once in a while but she didn't want it to be a regular man, because she couldn't trust them to stop if she chickened out. I convinced her that Ginny would be the perfect person to try it with. Seeing she is as close as anyone is going to get to being a real girl and still have a cock to do the deed with.\"\n\n\"Well Ginny's going to get her self a virgin. That will be a first for her. And your right if she was going to do it with someone Ginny would probable be the best to start with.\"\n\nJenny and I we're munching on what food was available. Pam was asleep on one of the couches Bethany and Sandy we're still plotting on the other couch. Cheryl and Sharon went into one of the bedrooms. About an hour after Glenda and Debbie snuck into one of the bedrooms they emerged.\n\nDebbie was in love or at least in lust with Glenda. I knew that look on her face. I've worn it often myself. The look that said I been to heaven and I want to go back. I also saw the look on Glenda's face that said I'm done. I knew from past experience that she was out of commission for a couple of hours anyway. Glenda came over and sat down next to me and Debbie sat next to her. And poor Debbie couldn't keep her hands off Glenda. She kept touching her hand or her leg, some part of her body. Then Debbie realized that Mary wasn't in the room\n\n\"Where's Mary, did she go back to the room?\" This was the part I was waiting for.\n\n\"No she's in the bedroom with Ginger.\" I don't think Debbie considered Mary might be having sex with Ginny.\n\n\"I hope she's not crying because I went with Glenda?\" \n\n\"I don't think so. She's probable to busy making love to Ginny to even think about you.\" I knew I hurt Deb on that one. She was so use to Mary being there when she wanted her. She didn't even consider Mary could be doing something else.\n\n\"I don't think so. Mary doesn't like men. I'll go talk to her and get her to come out.\" Debbie went for the door and Jenny blocked her way.\n\n\"I think you should sit down and wait for her to come out.\" Jenny told her in a matter a fact tone. Debbie was visible upset that we were trying to keep Mary from her.\n\n\"I don't know why your keeping me from her I can talk to her and get her to understand.\" Jenny went over to the bedroom door and listen for a second. Then called Deb over to listen too. Deb's mouth dropped open and her eyes bugged out. Then Jenny guided her back over to the table and sat her down. Then said\n\n\"As you heard Mary's not thinking about you right know. So I think you should give her some privacy and wait till she comes out.\" Debbie just sat there stunned and waited for Mary to come out. Something she never had to do before.\n\nForty-five minutes later. Mary came out of the bedroom arm and arm with Ginny. The smile on her face was priceless. She went over to Jenny and kissed her and thanked her for sharing Ginny with her. Then she came over to me and said\n\n\"Thank you Sheri. You were right Ginny was the perfect one to do it. She was so gentile and loving.\" Then she turned to Debbie and said. \"Love I wish you could have been there. It was such a wonderful experience. Ginny did everything right. I use to be so afraid of cocks before. I never knew they felt so wonderful inside of you. Now I know why you want to have one once in a while.\" Debbie was not happy with the turn of events.\n\n\"Mar you hate cocks. How many times have you told me you hated them?\" \n\n\"Deb I was wrong it wasn't the cock I didn't like it was the men attached to them. Ginny explained it to. If I didn't like cocks I wouldn't want you to use dildos and vibrators on me. And you know I love it when you use them on me. And making love with Ginny was like making love to girl only she has something extra.\" Debbie was clearly upset now and Mary could see it.\n\n\"So now what, are you going to throw me away for some she male who can fuck you and still be a girl for you.\" Mary just looked at Debbie. Debbie's eyes where hot with anger, But I could also see something else there. Tears started to form. Then she looked down at the table. After a minute or so she stood and went over to Mary and said\n\n\"I'm being a spoiled brat again aren't I?\" \n\n\"Yes my love you are.\" Mary told her then took Debbie into her arms and hugged her.\n\n\"I felt like I was losing you.\" Debbie said as her tears started to flow.\n\n\" I know my love I feel that way every time you go off with some man. That someday you won't come back.\"\n\n\"I won't do it any more from now on it'll be just us and no more men.\" Debbie told her\n\n\"Well how about if we share Ginger and Glenda with Jenny and Sheri. I really like when Ginger made love to me. I'd like to do it again and I know you would like to do it to.\" Then I could see Debbie had an idea\n\n\"Maybe we could get our own she male. So we won't have to go to Ginger or Glenda all the time.\" I could see that Mary was giving this some thought. Then she said\n\n\"I'll have to do some research on that then we'll talk about it.\" Then to me she said \"Are you all going to do anything for dinner to night?\"\n\n\"We're going to Bender's for dinner and dancing. Would the two of you like to come?\" Mary looked at Debbie and Deb nodded her head.\n\n\"We'd love to come. What time are you all leaving?\" Mary asked. I looked at Jenny and said'\n\n\"Eight thirty?\" Jenny nodded her head. I looked at Mary and she said \n\n\"We'll go get ready and be back here around eight o'clock.\" Mary told us\n\nAfter Mary and Debbie left Sandy came over and said \"Jenny I need to get my video equipment from your house.\"\n\n\"You mean now? Can't it wait till we get back?\n\n\"No Jen it can't. From what Beth was telling me he may make his move any day now.\"\n\n\"Wait. Do you think he's going to leave her?\" Jenny asked a little perplexed at what to do.\n\n\"Not only do I think he's going to leave her, but I also think he's going to try and take the house and the cars that she's paid for. She's supported him though Med. school and his residency. Now he's going into a practice that brings in millions every year.\" If he wants to leave, she's fine with that as long as he doesn't try and take the house and their savings. She wants to stand on equal footing in any divorce hearings.\" Jenny got her keys from her purse and said.\n\n\"Get the bastard.\" Sandy took the keys and said \n\n\"Thanks. I'll see you tomorrow night before we go back to New York.\" When Cheryl came out moment's later Sandy pushed her back in the room. Ten minutes later they were gone. Sharon asked\n\n\"What was that all about?\" after we told her what happen she said, \"I knew that bastard was up to something.\"\n\n\"Well if we're going to Benders tonight I suggest we get ready\" I said \n\n\"Your right Sheri. Sharon why don't you Mary and Debbie move up here tonight since Sandy and Cheryl are gone.\" Sharon thought it was a good idea and would bring it up to Mary and Debbie.\n\nWhen Sharon left I went over to where Pam was still sleeping and started to kiss her very lightly on the lips. She began to stir then came awake\n\n\"Oh Mistress did I dose off?\" Then looking at her watch she said \"My god I've been asleep for thee hours.\"\n\n\"Yes my sweet you have. You obviously needed it. I wouldn't have woken you except we need to get ready for dinner. Unless you want to stay here and sleep some more?\"\n\n\"No Mistress I want to go to dinner with you.\" She said \n\n\"Ok then lets go take a shower and then we can get dressed.\" Pam followed me into the bedroom with Glenda right behind.\n\nThe shower wasn't as big as the one we had at home. So we all took separate showers. I went first since I'm the Mistress. Glenda went next while Pam helped me get dressed. When she was done putting on my stockings and garters, and a red leather thong. I sat to put on my make up while she went to take her shower.\n\nWhen I was finished with my make up I put on my dress. I was a white halter dress that was open in the back to my waist. The front was also open to my waist. Reveling my naval ring and the sides of my breasts. The skirt stopped three inches from my knees and was hugging tightly to my bottom and legs. After putting on my four inch white stiletto heels and some jewelry I looked at myselfin the full-length mirror and thought to myself. I'm still a foxy looking chick. I turned to find Glenda staring at me and Pam wasn't to far in her dressing either.\n\n\"Well what taking you so long?\" Glenda cleared her throat and shook her head and said\n\n\"I was mesmerized by your beauty. You are still the sexiest women I ever saw.\"\n\n\"Well you better get dressed or I leave you here and go out and find some one else who thinks I'm sexy.\" Glenda started getting dressed as quickly as she could. Pam was putting her hair in a French braid I went over to her and said\n\n\"Sweetie leave your hair loose. Like you did last Sunday.\" Pam took the curling iron and started working on her hair.\n\nI grabbed my clutch purse and put in my driver's license and credit card, some make up and perfume. I told Pam and Glenda I'd wait for them in the living room.\n\nMary and Debbie were already in the living room. They were both wearing black dresses. Debbie's had more sequins and was shorter than Mary's, but Mary's was tighter and showed off her body better. They both ooed and ahhed over my dress and I did the same for them. I poured us all glasses of wine. Then Mary asked\n\n\"Sheri how did you get a guy to dress up like a girl?\" \n\n\"You can't make a guy dress like a girl unless he wants too. Women's clothes intrigue most men. There softer, lighter and sometimes silkier then men's cloths. Take men's underwear there boxers or briefs there thicker and heavier then what women wear. Women's panties are almost a wisp of cloth compared to what men wear. You could get just about any man in a pair of panties or a nightie, But to get a man to dress like a girl, like Glenda or Ginger they have to want to do it.\"\n\n\"Well how could we find one that wants to dress like a girl?\" Debbie asked\n\n\"Well first you have to find one that's submissive. That would mean that one of you has to be dominating. And since I saw both of you with leashes on yesterday. I can't see how either of you could be a Mistress to him.\"\n\n\"Oh we only play at letting Sharon be our mistress. She has the membership to the club so for us to go she makes us be her slaves. It's only a game Debbie is the dominate one in our relationship. She makes all the decisions for the two of us. I know you haven't seen it but she is very strong willed. The only time I can get my way is when she's being a spoiled brat and I give her my look. She thinks about it then if she agrees with me, she apologizes and we go on. If she doesn't agree with me then I submit and she has her way.\"\n\n\"I do know on submissive male, that practically threw himself at me because I was the first women to stand up to him. But I don't know if he'll go for dressing up as a girl.\" I told them\n\n\"Can we meet him?\" Debbie asked. I could see a glint in her eye.\n\n\"I don't see why not. I'll have you all over to my house next Friday for a party. And you can meet him. There is one thing though I need him to stay as a male when he comes to work. He can't be wearing dresses to work. Women's underwear if fine, but to all out ward appearance he must look like a man.\" They both thanked me\n\nWhen Pam finally came out of the bedroom she looked radiant. Her make up was superbly done. Her silk dress was maroon in color; it stopped four inches above the knee and was quite tight on her. The neckline plunged to three inches below her breasts. Her hair was loose as I requested with lots of curls. She was gorgeous, and the best part, she was mine.\n\n\"Pam you look gorgeous. The men at the club that want real women will be all over you.\" She blushed from my praise\n\nGlenda was right behind her in an off the shoulder black dress. It was quite short. I had to get extra long stockings so that the tops wouldn't show. Skirt was layered crinoline, which made it puff out. She wore four-inch open toed heels that flexed her calf muscles just right to give her a great pair of legs. I knew she was wearing a corset to hold her breast forms in place. I asked her\n\n\"Is the corset to tight?\"\n\n\"No in fact now that I lost those few extra pounds it's almost too loose. I have to push out my stomach to keep it in place.\" She told me\n\n\"Well we'll have to get you a smaller size till your breast start to form. You look so pretty, your going to have your hands full fending off all the men who will want to take you home.\" A blush came to her face.\n\nGinger and Jenny were the next to come out of their bedroom. Jenny was wearing a black leather dress that was quite conservative compared to what Pam and I were wearing. The neckline only went down to just below her breasts. The hem stopped about mid thigh. But it was so tight I could see her nipple ring clearly as it pushed out the leather. I went over to her and ran my hand over her bottom and said\n\n\"Well you won't have to worry about anyone putting the hand up you skirt tonight. I doubt that they could get their hand up your skirt.\"\n\n\"That's ok I don't think I could spread my legs wide enough so they could get inside me.\" Then I asked\n\n\"Are we stopping at Sam's first or are we going to go there tomorrow?\"\n\n\"Maybe we should go tomorrow on the way home I don't think I want to get my nipple pierced then try and wear this dress. And I'd hate to see you get any blood on that dress it would ruin it.\"\n\n\"I agree so we'll stop on the way home tomorrow. Now we just need Sharon then we can leave.\" Ten minutes later Sharon came in caring her bags.\n\n\"Sorry I took so long Beth called they just got the cameras set up just before Julian came home. He couldn't be any happier that Beth brought home two beautiful women home with her to share.\"",
        "I took the application and asked jenny and Ginger to sign it which they did. Then I asked \"I'm going to pay for the cruise for the three of us tonight. Are you two still going?\"\n\n\"Oh yea. We wouldn't miss it. Sandy and Cheryl can't make it so it'll be just the five of us.\"\n\n\"Well let's get going. Oh by the way next Friday party at my house. I'm having a couple of people over from work so until I tell you don't tell them that Ginger and Glenda are our husbands. Not that I want to hide it I just want to make sure there cool with it.\" As we got on the elevator I asked Pam\n\n\"Do you think you can handle a party on Friday? I could get someone to cater it.\"\n\n\"No I can handle it. I may have to take off on Friday to get everything ready. If that's ok with Mr. Macon.\" I almost had to laugh the way she separated Bill Glenda and her boss Mr. Macon.\n\n\"Ok, come up with a menu by Tuesday and we'll go shopping Wednesday night for everything. Did I tell you how lovely you look?\"\n\n\"Yes you did but I wouldn't mind hearing it again\" Pam blush when she said that. I put my arms around both Pam and Glenda and said\n\n\"Both my girls look absolutely radiant. I feel sorry for any man tonight that see the two of you.\" Our cars where waiting. Sharon Mary and Debbie went with Jenny and Ginger. We arrived at Bender's twenty minutes later. We where greeted by Max\n\n\"Jenny Ginger back so soon and you brought my little friend with you. \" Max took my hand and kissed the back of it. Then he said \"Sheri I hear you were a big hit at Dominators last night. In fact the whole S&M community is wondering who you are.\" I could feel the heat of embarrassment on my ears. Max continued, \"In fact a few have offered to be your slave and one has even offered to pay you.\"\n\n\"Well you can tell them my slave quarters are full they'll have to find some else.\" I said in jest\n\n\"Just as I figured. Do you have your application?\" He asked \n\n\"Right here all fill out and signed.\" I told him showing him the form.\n\n\"Good hold on to it till after you dinner then you and Jenny come and see me. Now you all come this way and I'll take you to your table.\" Max put his arm around Jenny and also around me and showed us to our table. When Max had held the chair for every one and went back to the front Jenny said to me.\n\n\"I don't know if I'm jealous or I should feel honored to know you.\" \n\n\"Jen you know I don't do this on purpose. I don't know why everyone's making a big fuss over me. I'm no different the anyone else.\" I was worried she would take offence to the treatment I was getting.\n\n\"I know you don't. Let's just enjoy the ride it might be short lived. But some how I doubt it.\"\n\nDinner was terrific and this time we did get a bill. I insisted that I pay for it. Jenny and I went to find Max while everyone else went to the dance hall. Max took us into his office. The office was very masculine. There was lots of dark oak trim and soft comfortable chairs. Max took my app and handed me a membership card. Then asked\n\n\"Are ya'll thinking about going on the cruise?\"\n\n\"I would like a suite for two.\" Jenny told him \n\n\"I need one for three.\" I informed him\n\n\"Good I have two already picked out for you. There the very best available. I'm sure you'll be please with the accommodations.\" Jenny and I took out our checkbooks and asked how much. \"Oh no they'll be no charge.\"\n\n\"Max you can't do this we have to pay.\" I told him\n\n\"Sheri, I going to tell you the truth. I have to fill two thirds of the ship before I start making any money on this venture. Right now I have only about fifty percent of it filled. Once the rumor gets out that your going on the cruise. I'll have to beat them off. I'll be filled by the end of the week.\"\n\n\"How do you know that would happen?\" I asked\n\n\"Because everyone wants to know who you are. Because the master made such a big deal over you.\"\n\n\"Ok how do you know this rumor will get out?\"\n\n\"Because I'm the one that's going to start it.\" He told me\n\n\"So you're going to make a profit on me?\" Max look at me as if asking what kind of cut I wanted.\n\n\"Well yea I guess I am.\" \n\n\"Ok, Then we'll take the rooms and you can cover our bar bills. And Port charges.\" A smile came to Max's face. He knew he got me cheap but not as cheap as he had hoped.\n\n\"Great we have a deal. We sail on the twelfth of July from Port Canaveral.\" Jenny and I both stood and shook Max's hand and left the office. Once out of Max's hearing Jenny asked\n\n\"Why are you letting him do that, you know he's going to make one hell of a profit? You could have held out for more.\"\n\n\"I know but if he said no and told us we had to pay for the rooms then what. He would have still started the rumor. He would have made his profit and we would either have to pay for everything or stayed home. And I for one want to go on this cruise. I thought you did too.\"\n\n\"And even if we didn't go he'd still start the rumor that you where going. He'd make his profit and we'd be stuck at home.\"\n\n\"Right so we might as well play along and enjoy ourselves.\" Jenny agreed as we entered the dance hall.\n\nI looked around for our party. Ginger was on the dance floor. Mary and Debbie were dancing together. Pam was sitting at a table by herself. Sharon was nowhere to be seen. Glenda was standing in a corner talking to three men. She looked like a cornered cat looking to flee but not sure which way to run. I said to Jenny\n\n\"Looks like Glenda may have her hands full. Should we go rescue her?\" \n\n\"Let's give her a few minutes and see if she can get out of it on her own.\" Jenny said as we made our way to our table. I sat next to Pam and asked\n\n\"No one's asked you to dance yet.\"\n\n\"I've dance.\" Then looking around her she said \"Did you know that some of these men are really women?\" I laughed\n\n\"I know sweetie that's ok isn't it.\" \n\n\"Yes it is. I just wasn't expecting it.' Mary and Deb cam back and sat down. Mary said\n\n\"I really like this place. There's not many places that Debbie and I can go to and dance to slow music and not feel like freaks.\" Glenda made her way over to he table and sat down next to me I asked\n\n\"I see you're a hit. Three good looking men vying for your affection.\" \n\n\"Yea as long as I don't mind feeling like a piece of meat. Those three wanted me to go back to their hotel room and have an orgy with them.\" I could see he was upset over the way he was treated. \"Do I look that trashy?\" He asked\n\n\"No sweetheart some men are just pigs. They just figured you where a guy dressed in women cloths so you must be easy. Don't fret over it you set them right now they can go looking for other prey.\"\n\n\"Well I feel sorry for the one they do get.\" \n\nThe rest of the evening went pretty well. By the end of the evening everyone stopped asking us to dance since we all let it be now that we weren't leaving with anyone. Around three we called it an evening and made our way back to the hotel. Mary and Debbie when back to their room since it was paid for and they wanted to be alone tonight. Sharon moved to the third bedroom to give Mary and Debbie some privacy. We all changed into nightgowns and sat around chatting for about an hour. Jenny then asked\n\n\"Who's going to sleep with who?\" \n\n\"I think Sharon should chose first since she hasn't been with Pam or Glenda yet. Or me for that matter.\" I said\n\n\"I agree you show chose Sharon.\" Jenny said\n\n\"Well I don't want to hurt anyone's feeling, but if what I'm heard about Glenda is true I'd be a fool to pass up this opportunity. I may never get another chance.\"\n\n\"Some how I think we'll have a lot more company picnics. If you all get my meaning.\" Jenny said which got a laugh form everyone. She then said \"Well Sheri if you don't mind I'd like to have Pam for this evening. \"\n\n\"I don't mind as long as I can have Ginger.\" \n\nJenny took Pam and went to her bedroom and Sharon and Glenda went to the third room while Ginny and I went to the middle bedroom. Ginger and I started kissing as soon as we got in the bedroom. Once I got her nightgown off I went to my knees and took her cock in my mouth.\n\nI don't know what came over me but I had this urgent need to suck cock. My mouth flew up and down her shaft as my tongue swirled around the shaft. When it was all slimy with my saliva I plunged down on it, piercing my throat with the head. I swallowed once twice three times before backing off to breath though my nose.\n\nUp and down my head went as my mouth sucked on the backstroke. Every third or fourth time my mouth went down her shaft I would let it slid into my throat. I got so use to her being there I did it on every stroke. And I would swallow many times, more than three and as many as six.\n\nGinny was trying to tell me that she was close and wanted me to stop. I ignored her warnings. Till she tried to step back to which I threw my arms around her and pulled her to me. How she lasted as long as she did was a testament to her ability to control her orgasm. But my will power out did her control.\n\nWhen Ginger's cock swelled I plunged down on her. As she pierced my throat she fired. Her cum seared my throat with its heat. I swallowed as each load was sent straight to my tummy. With my ability to breath shut off I finally pulled back till just the head was my in my mouth. Her last few spurts of cum landed on my tongue. I tasted her creamy cum as I suck the remaining sperm from her cock.\n\nGinny's legs were vibrating as she rested her hands on my shoulders. I released my hold onto her legs. She took two steps back and fell onto the bed, with an audible moan. I checked my mouth for any cum that might have slipped out. Finding none I jumped on to the bed. Ginger was done I sucked out her last load for the day along with her strength. I coax her to lay down next to me on the pillows then covered us with the sheet. I felt strangely satisfied even though I didn't have an orgasm. I cuddled up to Ginger and fell asleep."
    ],
    "authorname": "Scribler",
    "tags": [
        "bedroom glenda",
        "glenda started",
        "made beeline",
        "membership fee",
        "property master",
        "told pointing",
        "glenda back",
        "ginny back",
        "pam helped",
        "pam bedroom"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lifes-changes-ch-08"
}