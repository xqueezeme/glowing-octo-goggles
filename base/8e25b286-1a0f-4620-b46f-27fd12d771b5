{
    "title": "Star Struck Ch. 03",
    "pages": [
        "A symphony of unfamiliar noises shocked Louis into wakefulness. He sprang up looking around the semi-darkened room. First, he noticed he was alone. Lonnie's side of the bed was vacant, and neither was she in her bathroom. The sounds emanating from below were way beyond anything he could possibly sleep through. A quick glance at the clock revealed that it was already eight a.m. He'd never slept this late.\n\nRising, still nude, he grabbed his underwear from a nearby chair and headed to his room for a shower. A young girl, maybe his age or slightly older, was sitting in a chair between Lonnie's bedroom and his. She stood when he approached, eyes wide, mouth slightly agape. It made Louis realize he was naked. He fumbled to slip his underpants on.\n\n\"No need for that,\" The girl said. \"We'll be seeing a lot more of each other. I'm Chrissy Lee. I'll be your assistant while you're shooting. And help fluff.\"\n\nStill groggy, a confused Louis asked, \"Assistant? Fluff?\"\n\nShe smiled and he noticed she was very pretty. There was also something familiar about her, but he couldn't imagine what. In short shorts and tank top, she was also quite attractive. \"As your assistant, anything you need, I'll get it for you. In this business, men sometimes have a difficult time maintaining an erection, so there are women who assist with that.\"\n\n\"How do they do that?\" Louis asked slowly. He must have missed that in his research of the porn industry.\n\n\"Hand, oral, whatever works.\"\n\n\"So, basically, you'll suck me to keep me hard?\"\n\n\"Only if you need me to.\"\n\nHe nodded and pointed to his room. \"I'm going to take a shower.\" He took a couple of steps, turned and asked, \"Who would do a job like that?\"\n\nAt that moment, Lonnie appeared. \"Oh, good, you two have met. Louis, Chrissy will be\u2014\"\n\n\"Yeah, she's already explained that.\"\n\n\"You okay with that?\"\n\n\"I guess. I was going to take a shower.\"\n\n\"Yeah, you should. We'll be ready for you when you're finished,\" Lonnie advised. \"Anything he needs, Chrissy.\"\n\n\"Right.\" \n\nLonnie returned downstairs and Chrissy followed Louis into his bedroom and bathroom.\n\n\"Anyway, to answer your question,\" Chrissy went on, turning on the shower for him, \"it's a way to break into porn.\"\n\n\"Why do you want to do that?\" Louis asked, stepping into the shower.\n\n\"I love sex. Love to fuck.\"\n\n\"I do too. But I'm not sure I want to do it in front of cameras.\"\n\n\"Then why are you here?\" Chrissy asked with a frown.\n\n\"Lonnie talked me into it.\"\n\n\"Did you fuck Lonnie?\"\n\nThat caught Louis off guard. \"I don't talk about who I've had sex with,\" he said for lack of anything better. Besides, he didn't know if Lonnie wanted that known.\n\n\"She says you're the best. How would she know that? Bet you've done Gwen and Diane also.\"\n\n\"Maybe.\"\n\n\"Doesn't matter. I have, too.\"\n\n\"Oh, you do girls also?\"\n\n\"You can't hardly be a woman in this business and not. And if you're as good as Lonnie says you are, I'd love to do it with you, too. You've certainly got the tool for it.\"\n\n\"Can I ask how old you are, Chrissy?\"\n\n\"Just turned twenty.\"\n\nLouis didn't know where else this conversation could go, so he said, \"I'm hungry.\"\n\n\"I'll get you something. What would you like?\"\n\n\"Are there any pastries? And a cup of coffee, cream and sugar.\"\n\n\"Be right back.\"\n\nLouis quickly finished showering, passed the razor over his face, brushed his teeth and was about to apply antiperspirant.\n\n\"No, no.\"\n\nLouis dropped the antiperspirant container, surprised the Chrissy's reappearance.\n\nTo his frown, she explained, \"Don't want any chemicals on your body that someone could ingest.\"\n\n\"Are you telling me someone is going to lick my underarm?\" Louis asked incredulously.\n\n\"Don't know what they've got planned.\" She handed him his coffee and a plate with three assorted Danish rolls.\n\nStepping into the bedroom, he noticed a robe laid out on the bed and slippers on the floor. \"What's this for?\"\n\n\"For you to wear.\"\n\n\"No regular clothes?\"\n\n\"Not today.\"\n\nHe knew that Chrissy was only doing her job so he didn't want to be aggravated with her. Lonnie should have told him all of this in advance. Right now, he was not approaching his \"screen test\" with a very positive attitude. He wolfed down a couple of Danish and the coffee, took a deep breath and asked, \"I guess I'm as ready as I'm going to get.\"\n\n\"Then follow me,\" she said with a big smile.\n\nLonnie met them halfway down the stairs. The static of chatter below hushed as Lonnie turned to the assembled crew and announced, &quot;Everyone, meet Louis.&quot;\n\nThere was a chorus of &quot;Hi, Louis,&quot; and then everyone went back to work.\n\nContinuing back downstairs with Louis and Chrissy, Lonnie explained the plan. &quot;We're just going to shoot some short scenes with three different aged women: a teen your age, a thirty year-old, and a mid-forties cougar. We want to see which one, if not all, you interact with best. We'll try a number of different positions and oral to see what looks and works best. Won't be much dialog, just enough to see how you handle lines. I'll be directing you.&quot;\n\n\"There'll be two cameras. They'll be moving around, so don't be distracted by them. Just ignore them as best you can. Now, from time to time, you'll hear me call cut. When you do, just stop where you are. Don't move unless I tell you to. If it's a camera repositioning, we'll want to resume from where we are. It might also be a position change. If the position you're in doesn't look good, we'll try something else. Let me know if you're having trouble staying hard and Chrissy will fluff you.\n\n\"I know you're not used to having sex with all these people watching, but that's the movie business. You do what you have to do and don't worry about them. Don't come if you can help it. When we're ready for a cum shot we'll let you know and we'll do whatever is necessary to help you. I know this is very intimidating, just do your best. Any questions? Are you okay? Nervous?\"\n\n\"No. I'm okay,\" Louis answered, fairly certain that he was.\n\n\"Good. Let me take you to meet the ladies you'll be working with.\"\n\nFollowing Lonnie, with Chrissy tagging behind, Louis was amused at her choice of words: \"ladies you'll be working with.\" He saw lights being set up in the huge living room aimed at the sofa, wires were being run, microphones laid out, cameras tested. They went through to a guest bedroom that Louis didn't know about. More lights and wires.\n\nA young woman with dark blonde hair was sitting in a chair with nothing more than a yellow bra and matching bikini panties on and an older woman was doing her make-up. Louis noted that she was quite attractive, her breasts filling their cups. Beyond that, he did not recognize her, although he assumed she would be one of his partners.\n\n\"Louis, this is Teri Russell,\" Lonnie introduced. \"She's about your age.\"\n\nLouis held out his hand and she took it with a single shake.\n\n\"Hi,\" Teri offered with a girlish smile.\n\n\"The two of you will do a bathroom scene,\" Lonnie explained. \"Louis, you'll spy on her while she is in there. You'll take out your cock and start jerking yourself. She'll catch you and want to watch you handle yourself. She'll play with herself and then you will play with each other, some kissing, nipple sucking, she'll suck you, you'll lick her, then you'll fuck in a couple of positions before coming on her.\"\n\nLouis merely nodded. It all sounded so clinical.\n\n\"How big is he?\" Teri asked.\n\n\"Show her your cock, Louis,\" Lonnie commanded.\n\nHe pulled aside the flaps of the robe. Teri's eyebrows bounced to show that she was impressed. He wasn't hard so she reached out, fisted it and jerked several times. He had most of an erection quickly. She eased out of her chair, stooped and took him into her mouth, sliding up and down a few times.\n\n\"I can handle him,\" Teri reported, letting go of him and returning to her chair. \"Nice cock, Louis.\"\n\nHe felt like a piece of meat. What did he say? \"Thanks.\" Should he compliment her back? \"Nice tits.\"\n\nTeri smiled and lifted her bra to expose her breasts for him.\n\nThey were nice, he noted.\n\n\"We'll be ready for you shortly,\" Lonnie told her, and then led Louis to the bathroom.\n\nAnother woman in green bra and panties was there applying make-up. She was a bit older with much larger breasts and long dirty blonde hair. \"Say hello to Trudy Jenkins, Louis.\"\n\n\"Hello.\"\n\n\"Hello,\" Trudy offered seductively. She could see that he was still hard so she reached out to fondle his dick.\n\nLonnie described their scene. \"Trudy will catch you lying on the bed with her panties wrapped around your cock. You'll be using them to jerk off. She'll tease you a little, scold you some, she'll unleash those monsters and jerk you off.\"\n\nThis is what Trudy was doing while Lonnie was talking. Like Teri, Trudy dropped to her knees and sucked on his cock like she meant it. \"Mmmm, good,\" she mouthed.\n\n\"Glad you like it,\" Lonnie remarked, \"but let's not get carried away just yet.\"\n\nAs they walked off, Louis facetiously remarked, \"Anyone else want a taste.\"\n\nLonnie snickered.\n\nChrissy eagerly said, \"I do.\"\n\n\"You'll probably get your chance,\" Lonnie pointed out, leading them outside to the patio where an older redhead was sitting in a lounge chair topless with blue panties on. \"This is your cougar, Louis. Carly Saunders.\"\n\nOf course, Louis immediately recognized her. He'd seen a bunch of her films. She was as famous as Vermeil Chaleur. In fact, he was certain the two had done a movie together about a couple of redheads. He noticed that she was starting to show some age, but he loved her well-rounded tits; neither big nor little. Just right. \"Nice to meet you, ma'am.\"\n\n\"Ma'am? Do I look that old?\"\n\n\"Uh, no, I, I was just being polite. I've seen many of your movies. I like watching you.\"\n\n\"Carly was chuckling. \"Good save, kid. Just messing with you. You can touch them, if you like.\"\n\nLouis was embarrassed that she'd caught him staring at her tits. \"I'm sorry. I didn't mean to\u2014\"\n\nShe hushed him by taking his hand and placing his palm on her right breast. Then she took a deep breath so he could feel the size.\n\nWell, at least, she hadn't grabbed his dick like the others\u2014yet. Enjoying the moment, he pointed his finger and rubbed the tip of her nipple.\n\n\"Now, you're talking. Sit.\"\n\nHe sat on the edge of the lounger and she took his other hand and put it on her other breast. As Lonnie depicted their scene, Carly moved his hands up and down on her breasts and he got the message to massage them.\n\n\"Carly is going to seduce you, Louis, which it seems she's already doing. She'll get you on your back in bed and rub those tits that you seem to like all over you, give you a blow job, you'll turn her over to suck her pussy, then you'll fuck her in a couple of positions and come.\"\n\n\"I can hardly wait,\" Carly commented.\n\n\"Rest up, old girl,\" Lonnie teased, \"you're up last later this afternoon.\"\n\n\"You better save me something, Louis.\"\n\nAs they stepped away from Carly, Lonnie said, &quot;Chrissy, tell them to get ready in the bathroom. Louis, come with me.&quot; She led him into her private office and closed the door. They sat in chairs facing each other. &quot;Are you sure you're ready for this, Louis?&quot;\n\nWith widened eyes, he nodded. \n\nShe wasn't certain how to take that response. &quot;I don't know what you're expecting, but this is not like you and I having sex in private.&quot;\n\n&quot;I think I figured that out.&quot;\n\n&quot;You're going to do well. The ladies all seem to like you. But I will give you one last chance to back out.&quot;\n\n&quot;I'm here, aren't I?&quot;\n\nShe smiled. &quot;That's the spirit. Any questions? Anything you want to talk about? Anything that I've described you don't think you can do?&quot;\n\n&quot;Nothing seems complicated. And I'm sure you'll be directing me as we go. So let's do it.&quot;\n\n&quot;Okay, let's go.&quot;\n\nWalking back through the living room, Lonnie announced, &quot;Alright, places everyone.&quot;\n\nThere was one camera outside the bathroom aimed inside at Teri who was sitting on the edge of the tub. Another camera was inside aimed outside at Louis.\n\n\"Everyone set?\" Lonnie asked. No one replied so she said, \"Action!\"\n\nTeri pretended to rub lotion on her legs, spreading her robe to show her pussy. Louis was peeking in, moving his head from side to side as though to avoid being caught.\n\n\"Good, Louis,\" Lonnie whispered. \"Now, take out your cock and stroke it.\"\n\nLouis did as directed. He was mostly hard already, and within a few strokes, completely erect. He heard some of the female crew in the background emit positive sounds.\n\n\"Cut!\" Lonnie shouted, and everyone froze. \"Use your other hand, Louis, so the camera can see you stroking. Remember to always play to the camera.\"\n\nWith a nod, Louis instantly switched hands and continued stroking.\n\n\"Action,\" Lonnie called.\n\nTeri stood, wrapped a towel she'd been holding around her neck and glanced toward the door as though she'd heard something. Louis ducked back.\n\n\"Good, Louis,\" Lonnie said.\n\nTeri approached the door. Louis looked up, suitably showed some surprise, but not too much. Teri smiled at him, and then reached out to fondle his cock. \"Like what you see?\" she asked. She then took the towel from around her neck and put it around his and used it to pull him into the bathroom. \"Now, let's see you do that.\"\n\nMindful of camera placement, Louis resumed jerking his cock with Teri watching. She smiled at him and he smiled back. She pulled her short robe apart slightly not exposing her breasts, but giving him a narrow view of her pussy. Now, she eased a flap aside to display one tit, which she played with.\n\nThe camera already in the bathroom eased nearer for a close-up. Teri lifted the bottom of her robe up to show off her ass. She dragged her hands across her cheeks, and then turned around to wiggle her bottom at Louis. In looking at her, he could see Lonnie gesturing with her hand for him to jerk faster, so he did. Teri slapped her ass a couple of times swaying her hips. She turned back to Louis, took his free hand and placed it on her exposed tit. He ran his hand around it and pulled on her nipple.\n\n\"Cut.\"\n\nWith his hand frozen on Teri's breast, Louis continued stroking, but slower. Lonnie moved the inside camera to the other side.\n\n\"These cuts are distracting,\" Louis whispered to Teri.\n\n\"Wait until we're fucking and she calls cut,\" Teri responded.\n\n\"Okay, action,\" Lonnie said.\n\nTeri reached down to play with Louis' balls. With her other hand, she moved his hand from her breast slowly down her side and hips to her rear as though she was encouraging him to play with her. She stepped closer and he rubbed the head of his cock on her leg.\n\nThe outside camera darted inside and took up position where the inside camera had originally been. \n\nTeri turned around and rubbed her ass against his cock. She spread her legs allowing him to drag his rod along her pussy lips. She reached down to separate her labia with her fingers and rocked her hips back and forth. She was beginning to enjoy this, allowing moans to escape her lips.\n\n\"Cut!\"\n\n\"Fuck,\" Louis said under his breath, his breathing quickening.\n\n\"We'll get to that,\" Teri whispered, leaning her head back on his shoulder so only he could hear.\n\n\"I want you guys to swap positions,\" Lonnie instructed. \"Teri, reach around and stroke Louis.\" When everyone was in place, she ordered, \"Action.\"\n\nWith her left hand, Teri pulled Louis' robe apart, and with her right she pressed his hard cock against his belly rubbing it lovingly up and down with the palm of her hand. She let her hands drift up to massage his chest and pinch his nipples. That elicited a moan from him as he hadn't expected it. It also made his dick bounce. She went back to his cock with one hand for a few strokes, and then dragged both palms across his ass. She turned him around to face her, grabbing his cheeks and spreading them.\n\nObviously, Lonnie had told Teri to improvise, Louis realized. It occurred to him that he should do the same, so he leaned in and kissed her hard on the lips. She responded in kind. He pawed both tits, and then bent his head to suck one nipple and then the other. He pushed her robe back off of her shoulders and let one hand drop to her pussy. She moaned her enjoyment. Out of the corner of his eye, he glimpsed a camera moving in for a close shot of his hand. Louis was waiting for a cut, and when it didn't come, Teri dropped to her knees and started sucking him.\n\nHe leaned back against the counter. Teri was good at fellatio, Louis decided. She played with his balls as she mouthed his cock. Just as he was enjoying it, the inevitable \"Cut,\" came.\n\n\"Change positions,\" Lonnie ordered. \"You lick Teri, Louis. Action.\"\n\nLouis complied by slowly kneeling as Teri stood. She spread her legs and Louis's tongue made contact. After a minute or so, she eased up onto the counter resting one foot on the edge while keeping the other firmly planted on the floor.\n\nAnd once again, \"Cut. Okay, Louis, now stand and fuck her just as she is. Action.\"\n\nOnce more, Louis did as he was told. It felt good to finally have his dick in a pussy. This one was nice and snug, but also wet and he had no trouble sliding in and thrusting. Teri's breathing matched his pace. This time, he knew better than to enjoy it, even though Teri was really moaning now. But she was probably just acting.\n\nIt didn't matter. \"Cut.\" \n\n\"No, wait, I'm gonna cum,\" Teri shouted.\n\n\"Keep rolling,\" Lonnie commanded.\n\nLouis could feel Teri's pussy tighten around his cock as she exploded in a shuddering orgasm. He continued pumping for what seemed like an unusually long climax. Finally, she reached out to halt his thrusts. Placing her other hand on his shoulder, she fought to control her heavy breathing. A few seconds later, she stammered, \"Wow, that was fantastic, Louis!\"\n\n\"Cut. Glad you enjoyed that. Now, off the counter, turn and bend over it. Louis, take her from behind and let yourself go. Pull out and shoot on her back. Okay?\"\n\n\"Got it,\" he responded, thankful it was his turn.\n\n\"Action.\"\n\nThe pair followed instructions and Louis felt her using her pussy muscles to milk his cock. She was good. Lonnie hadn't said how long he should take before coming so he decided to have some fun by pulling Teri's legs together to make her really tight. It worked better than he anticipated and he had to quickly pull out. After only a couple of strokes, his pearly white cum was rolling down her back between the crack on her ass. When he finished ejaculating, as an added gimmick, he took the head of his cock and smeared his semen around the dimple just above her buttocks.\n\n\"And cut. That was great, you two!\" Lonnie complimented to the applause of the crew.\n\nChrissy was there with towels for Louis and Teri to clean themselves off.\n\nTeri stood up straight and turned to Louis, \"Damn, boy, you really were good! Hope we get to work together again.\"\n\n\"She's right, Louis,\" Lonnie added, \"You were spectacular!\"\n\nOther crew members who passed by offered their kind words.\n\nForcing a smile, he thanked all of them.\n\n\"You have about forty-five minutes to an hour before we shoot the next scene, Louis, so go upstairs and relax,\" Lonnie informed him.\n\nChrissy held out his robe. As he put it on and followed her upstairs, he was reminded of a friend of his who was a couple of years older who had been the student photographer for the school newspaper and yearbook. He wanted to become a professional photographer, but after working part time for a local studio, he gave it up. His reasoning was that he had enjoyed it too much as a hobby and wanted to keep it that way. Doing it as an occupation turned it into just work. Louis wondered if having sex with all these different women could become just work.",
        "\". . . hope I get to do with you also,\" Chrissy was saying.\n\n\"Why, Chrissy? Because you think you'll get a good fuck or you just want to do it with me?\"\n\nHer awkward smile and silence was her answer.\n\n\"Won't it just get to be work at some point?\"\n\n\"Only if you let it.\"\n\nAfter another shower to not only freshen himself but also to try to maintain a positive attitude, Chrissy had laid out a button-up short-sleeve shirt and jeans on the bed, but no underwear. She was dutifully sitting in her chair.\n\n\"Can I get you anything? More coffee, soda?\"\n\nHe knew she was just doing her job and he felt bad for the question he'd asked earlier. \"Sorry about what I said before.\"\n\n\"No need to apologize. I know this is a weird business to be in.\"\n\n\"I guess I could use another cup of coffee,\" he said stepping over to his dresser to get some underwear.\n\n\"Uh, no underwear,\" Chrissy said. \"When Trudy undoes your pants, your penis has to spring free.\"\n\nShaking his head in stupefaction, Louis commented, \"You're right. Weird business.\"\n\nShe moved closer to him, put her arm on his back and rubbed her palm up and down a couple of times. \"You'll be okay. Be right back.\"\n\n* * *\n\nOnce again, Lonnie met them on the stairs and described the next scene. There was less for him to do than in the bathroom scene so, hopefully, there would be less cuts. If there was one element that Louis had to take comfort in it was that he was being treated as though he was a star. Considering how much he'd waited on his grandmother, it was nice to be the one pampered for a change.\n\n\"Places, everyone,\" Lonnie again called out as they walked through the living room. They stopped just before entering the bedroom. She turned to Louis and whispered, \"You ready to go again?\"\n\nHe nodded.\n\n\"You can get it up and come again?\"\n\n\"Yes.\"\n\n\"That's my boy.\" She stepped inside the bedroom. \"Quiet on set. Everyone in place? Okay. Action.\"\n\nFeeling that this was almost an out-of-body experience, Louis took a deep breath, entered the bedroom, walked a hamper basket, opened the lid, reached down and removed a pair of women's bikini panties. He lifted them to his nose and inhaled, and then he used them to rub his cock through his pants. He lay down on the bed and continued with the panties, undoing his pants and sticking the panties inside. He heard a woman's voice and quickly re-did his pants leaving the panties inside.\n\n\"Hello,\" Trudy said. \"What are you doing in my room?\"\n\n\"Just chillin',\" Louis responded, his thumbs hooked in the waistband of his pants, his fingers drumming on his crotch.\n\n\"Not in my room. What are you doing?\"\n\n\"Nothing.\"\n\nSeeing his fingers, she made a show of looking at his crotch. Out of the corner of his eye, he saw a camera move in for a close-up of the bulge in his pants.\n\n\"What's in your pants,\" Trudy asked.\n\n\"Nothing.\"\n\nShe asked again and he provided the same answer.\n\nFinally, she reached out and quickly undid his pants. The panties prevented his cock from springing up as Chrissy had described and he expected to hear cut.\n\nBut Trudy went on, yanking the panties out and holding them up. \"You panty thief. You pervert.\" She pretended to do a double take on Louis' cock. \"That's quite a tool you have there.\" She leaned over to run her finger tips over it, and then wrapped her hand around it.\n\n\"Cut! Okay, Trudy, get on the bed on your knees,\" Lonnie instructed. \"Louis, just keep lying there.\"\n\nTrudy complied, her hands never leaving Louis' cock, even slowly stroking him.\n\n\"Okay, everyone. Action.\"\n\n\"That's actually nice,\" Trudy said, holding Louis' rod straight up as though to examine it. She straddled his thighs, her free hand undoing several buttons on her shirt to just below her big tits, displaying a red, lacy bra. Finally, she let go of him, slid back pulling his pants down to his thighs, and then resumed her position. \"What should we do about this?\"\n\nLouis' cock pulsed, flapping up and down a couple of times.\n\n\"Be ashamed to waste this,\" Trudy said, taking hold again, stroking a couple of times. \"Think you could come for me?\" She let some saliva drop from her mouth onto his cock and pumped him some more. \"I had no idea you had such a big cock.\"\n\nLouis reached for the panties that she had dropped on the bed beside her.\n\nTrudy let go of him, reached up and pulled her breasts out of the cups of her bra. Grabbing him again, she slapped the tip of his penis against each of her boobs, stroking him in between. She dribbled more spit onto his rod. Seeing that he had latched onto the panties, she whispered huskily, \"So, what do you do with my panties? Do you sniff them?\"\n\nLouis knew the camera was not on his face so he didn't have to react to her question. Still, he nodded.\n\n\"Go ahead,\" she said. \"Let me see.\"\n\nPeripherally, Louis could see a camera move around slightly to capture him lifting the panties to his face and taking an exaggerated inhale.\n\nTrudy was now using both hands on him, one fisting his dick, the other cupping his balls. \"You like that? You like the way my pussy smells?\"\n\nInvoluntarily, his cock swelled in her hand and Trudy's eyes widened.\n\nAnd so it went for a couple of minutes. He continues to sniff the underwear; she gives him long strokes while occasionally adding saliva as lubrication. Then she used one hand to play with her nipples, pulling on one, twisting the other. For a change-up, she pressed his cock flat against his belly and rubbed it with the palm of her hand.\n\n\"You like my big tits?\" Trudy teased, bending down and dragging them over his cock. She then lifted his dick and slapped her tits with it.\n\nLouis reached up to fondle one of her breasts while still pretending to inhale the aroma of the panties. Of course, they were clean and all he smelled was the fragrance of whatever laundry soap they used. He covered his mouth with the panties to hide the smirk he felt from that thought.\n\nLonnie could tell it was time to move on so she said, \"Cut!\" and stepped over to the bed as Louis and Trudy held their positions, she continuing to stroke him to keep him hard. The director then gave them instructions for the next part of the scene, moved a camera slightly, and then called, \"Places. Action.\"\n\n\"Which do you like better sniffing my panties or playing with my big tits?\" Trudy asked.\n\nLouis did another amplified inhale of the underwear as his answer.\n\n\"I thought so.\" Seductively, she said, \"Wanna see what you've been smelling?\"\n\nShe eased off of him, stood on her knees and undid her short shorts, then sat to remove them. Moving up to a squatting position, she pulled her panties aside to expose her pussy. \"You like this?\" She rubbed her clit a few times, and then ran a finger up and down her crack.\n\nLouis had taken hold of his dick and was slowly stroking it. He could easily come right now, but knew the scene didn't call for that just yet.\n\n\"Want to smell some fresh panties?\" Trudy asked as she pulled those down and off. She tossed them at Louis' face.\n\nHe caught them and was taken aback by the actual musky scent of her pussy. That actually aroused him, his cock pulsed, and a drop of pre-cum oozed.\n\nWith more saliva, Trudy went back to jerking him, using her free hand to undo the remaining buttons on her shirt. She shoved his pants further down his legs before straddling his thighs again and he could feel her raw pussy on his skin. She took her panties back, wiped the pre-cum with them, wrapped them around the base of his cock, and then stroked him with them.\n\n\"Are you ready to come for me?\" she asked. Still stroking him, she put his cock between her big tits.\n\nLouis placed his hands on each of her thighs.\n\n\"Come on these panties,\" she ordered. \"Do it.\" She stroked him harder and faster and held the panties against the tip of his cock, continuing to utter verbal stimulation.\n\nFortunately, Trudy was using the clean panties on his dick. He pressed the set she'd had on back against his nostrils and the scent had him blowing his wad all over her hand and the clean panties. She seemed surprised by the amount he ejaculated. When he finished spurting, she used the panties to wipe her hands and clean his cock.\n\n\"I don't want to catch you in here again,\" Trudy said firmly. \"Now, get out of here.\"\n\n\"Cut,\" Lonnie said. \"That's a wrap.\"\n\n\"Aw, I don't get to fuck this monster?\" Trudy bemoaned.\n\n\"Not this time,\" Lonnie said. \"Okay, let's break for lunch.\"\n\nChrissy was there with wet and dry towels for Louis as he eased off of the bed. He quickly cleaned himself off.\n\nLonnie approached. \"Good job, Louis. You're a natural. Relax. Get some lunch. It'll be a couple of hours before we shoot the final scene. I haven't decided if we're going to do it here in the bedroom or outside on the patio.\"\n\n* * *\n\nLike a little lost kitten, Chrissy dutifully followed Louis upstairs to his room. He had been exposed\u2014literally\u2014to so many people today that he didn't care that she accompanied him into his bathroom where he took a leak, and then stripped down to take yet another shower.\n\n\"Can I get you anything?\" Chrissy asked. \"They brought in all kinds of food.\"\n\n\"Am I confined to my room?\"\n\n\"No,\" she responded with a frown. \"Why would you think that?\"\n\n\"Just wondering. I'll go back down after I shower. I don't want to stay cooped up in here. You don't have to wait.\"\n\n\"Yes, I do.\"\n\nLouis nodded, understanding that she had her orders. He also shook his head over the ridiculousness of it. As he washed himself, paying particular attention to his genitals that Trudy had slobbered all over, he noticed that Chrissy had pulled one leg of her short shots aside and was fingering herself. He knew if he had an ego he should be thrilled that she was trying to get herself off watching him. All he felt was demeaning. But he tried to put himself in her shoes. Here, she wanted to do what he was doing, and with that mindset, he tried to imagine having to stand around watching all the sex going on. It was probably a mistake, but when he stepped out of the shower, before even drying off, he stepped over to her, pulled her to stand, undid her pants, pushed them down, and sank to his knees and tongued her pussy. She was obviously so aroused she came almost instantly.\n\nAs he dried off and dressed, Chrissy, still breathing heavily, said, \"Thanks. I needed that. I'd love to reciprocate.\"\n\n\"If I didn't have to do another scene. But I better save myself. Let's get some lunch.\"\n\n* * *\n\nIt was awkward walking through the house downstairs with the film crew sitting in various places having lunch and greeting and complimenting Louis as if he was a big star. He wondered if the remarks were genuine or if Lonnie had put them up to it as a means of encouraging him. As a result, he fixed a plate of food and went outside to sit at a secluded patio table, Chrissy in tow.\n\nLonnie approached a few minutes later with her own plate and sat. \"Everyone thinks you're doing a great job, Louis. So, do I. Trudy and Teri are more than willing to work with you again, and I've never seen Carly so excited to fuck someone. How is it going for you?\"\n\nLouis knew he should be thrilled by the praise, but he wasn't quite feeling it. \"It's a world of illusion.\"\n\nShe detected the glum tone in his voice and glanced at Chrissy, who shrugged. \"As is all movie-making. Wait until you see the final product. You'll be impressed with yourself.\"\n\nHe merely nodded, forcing a smile.\n\n\"Carly asked if we could do the scene in the bedroom. Is that okay with you?\"\n\n\"Sure. Wherever.\"\n\n\"Okay. It'll be fairly straightforward.\" She then described the action to him. \"We should be ready in about an hour, so enjoy your lunch.\"\n\n* * *\n\nLouis and Chrissy remained at the patio table until he was called to report to the bedroom. He was wearing just a pair of shorts and a T-shirt.\n\nCarly, who was already there, appeared very happy to see him. She had on a mid-thigh length white flowered low-cut sun dress with spaghetti straps. Louis guessed her to be about Lonnie's age, perhaps a couple of years older\u2014mid-forties. He thought she looked great. Her rounded breasts filled out the dress revealing abundant cleavage, and she had very shapely legs. On top of that, she had positive, take charge demeanor that he liked. She approached him and gave him a big hug. She whispered in his ear. \"You just follow my lead. We're gonna fuck like there's no tomorrow.\"\n\nIt actually made Louis smirk.\n\nCarly turned toward the crew. \"Are we ready to roll?\" she asked impatiently.\n\n\"In a minute,\" Lonnie advised.\n\n\"You don't really look like you've been having a good time today,\" Carly whispered to Louis.\n\nHe shrugged. \"Guess it's just not what I thought it would be like . . . all the stopping and starting.\"\n\n\"Takes some getting used to. Don't worry. You're going to enjoy this scene.\"\n\nSomehow, he felt she was going to be right.\n\n\"Okay,\" Lonnie shouted. \"Places. And action.\"\n\nWith a big grin, Carly, still hugging Louis, turned him and pushed him down onto the bed on his back. She climbed up onto him, straddling his legs, her dress rising to her ass. She bent down slipping a strap off her shoulder, which caused her breast to spring free. Grinding her pussy against his crotch, she lowered her very pointed nipple to his mouth. Louis was actually eager to suck on it. While he did, she freed her other boob and then lifted herself to mash it against his face. With the nipple in his mouth, she rolled her tit around his face.\n\nAfter a minute of this, she slid off of him and pulled him back to his feet where she pulled off his T-shirt. She pushed him down again so she could suck his nipples. And she really knew how. Louis had never felt so much stimulation from that. He was certain Lonnie had sucked his nipples, but suddenly he couldn't remember.\n\nStanding again, she quickly and determinedly undid his pants and pulled them down and off. His cock sprang free just as Chrissy said it should. His legs spread and dangling over the edge of the bed, Carly zeroed in on his crotch, her mouth coming in contact with his scrotum. She mouthed each of his balls, and her jaw action made him think she might chew them and swallow them. Of course, she didn't, but the feeling was divine. She dragged her tongue up his shaft several times, and then dropped her cleavage over it. Pressing her tits together, she rubbed them up and down before grasping his hard cock, shoving it into her mouth and sliding it down her throat all in one motion. He felt it pulse involuntarily. She looked at him and gave him a big grin with a mouthful of dick. If she did that too many more times he would be hosing her esophagus.\n\nInstead, Carly removed her mouth, grabbed his cock with her hand and pumped it while moving up to kiss him. It was one of those wet, slobbering kisses. But just as he was enjoying it and wanted it to continue, she went back down to swallow his rod. This time she went up and down in regular blowjob fashion. She soaked him in saliva.\n\nBut again, before he got too comfortable with what she was doing, she sat up, slid her panty-covered pussy forward against his cock and rubbed it against the wet spot on her underwear. \"Take my dress off,\" she commanded.\n\nLouis obeyed and she allowed him to once again enjoy her nipples in his mouth as she ground her pussy against his cock. But as was becoming her modus operandi, it didn't last long, and he had to remind himself that they were making a movie.\n\nNow, it was back down to deep throat him a few times. He couldn't get over how easily she did that, how easily his cock just slid down her throat. She was amazing, and at this moment in time, he would be hard pressed to decide whether she was better than Lonnie.\n\nTo his bewilderment, she raised her ass in the air until her legs were straight and instructed him to remove her panties.\n\nThat done, he heard the command to cut.\n\n\"Don't you dare stop,\" Carly ordered as she rolled over onto her back and spread her legs.\n\nPreferring Carly's direction over Lonnie's, Louis allowed the cougar to grab his hair and guide his face between her legs. She had a gorgeous pussy and he attacked it with vigor. It tasted sweet and he lapped at it just as if he knew what he was doing. If her moans were any indication, she had no complaints. He could have continued this for a while, but after a minute, she rolled onto her side, and with a sweep of her hand, indicated for Louis to move behind her. He did. She lifted her upper leg high and spread her pussy lips with her fingers. \"Now, fuck me.\"\n\nHer pussy was very wet from the combination of his saliva and her own juices, so it didn't take much effort or guidance for his eager cock to find its own way in. Out of the corner of his eye he saw the camera moving around to the end of the bed to catch the between-the-legs action. He also glimpsed Lonnie gesturing with her arm for Louis to hold Carly's leg up. The camera had to see, he realized.\n\nLouis reached around to play with her tits as she urged him to fuck her harder. He did and he was actually working up a sweat. He was thrusting with long strokes all the way in and almost all the way out. He twisted her head to kiss her. In between, she uttered encouraging words to stimulate him even more. His hand left her tit and moved down to rub her clit as he pounded her pussy with his dick.\n\n\"Oh, yeah,\" she was urging. \"Oh, yeah!\"\n\nLouis' balls were now slapping against her skin. She reached down to cup them, rolling them around in her hand. He had to admit to himself that her pussy felt almost as good as Lonnie's and the way she was milking his balls . . .\n\n\"I'm gonna come!\" he shouted.\n\n\"Cut!\"\n\n\"Ignore her and come on,\" Carly whispered. She pulled his cock out and nestled it between her pussy lips pulling on his balls so he would get the message to rub his dick against her snatch. He easily caught on and she moved her hand to his shaft pressing it against her. \n\nLouis whimpered like a little girl as his orgasm built and seconds later, his balls exploded. She cupped her hand over the head of his penis to contain as much of his jism as she could, but not so much that the camera couldn't capture the stupendous load. Sperm splattered everywhere: her legs, belly, and her hand was drenched when he finally stopped. She smeared what she could on her abdomen then rolled over and pushed Louis on his back, grabbing his cock with her dry hand.\n\nOut of sight of the camera, Carly grabbed a wad of sheet and wiped off as much of the pearly liquid as she could. She licked and sucked all of the cum off of his cock and then deep-throated him several times to keep him hard. With this one, she wasn't surprised that he maintained his erection. Still, she continued to suck to make certain.\n\nTo his heavy breathing, Carly mounted him and inserted his cock into her very wet pussy. Facing him, she bounced up and down a few times and then rotated her hips to swirl his dick all around the inside of her vaginal canal.\n\nLouis grabbed her hips to keep her doing that. It felt incredible. She performed a number of other maneuvers by moving her hips and back in different directions. Eventually, she went back to bouncing. This woman really knew how to fuck. For the first time today, he was actually enjoying himself.\n\nBut it was a movie, so she stopped, moved to the side of him, deep-throated him a couple more times before mounting him again, this time facing away from him toward the camera. He pulled her back so that she was almost lying on top of him. He lifted his hips and pumped her hard. She spread her arms wide to hold herself up and he reached around to paw her tits.\n\n\"Fuck me,\" she yelled. \"Fuck me hard.\"\n\nLouis pounded her as hard as his weary legs would go until she started emitting a number of grunts to indicate that she was ready to climax. He didn't know how long he could keep up the pace, but he didn't want to disappoint her. As her groaning reached a crescendo, he had to issue his own teeth-clenching \"unghs\" to hold out. Carly was having a thrashing orgasm like he had never seen a woman have\u2014not even in movies\u2014and he nearly feared her hurting herself.",
        "But much to his surprise, her authentic, explosive climax brought him back to the edge and he felt an orgasm building in him again.\n\nSeeing that Carly was finished, Lonnie called, \"Cut!\"\n\nBut Louis shouted, \"I'm gonna come again!\"\n\n\"That's my boy,\" Carly encouraged. \"Come inside me.\"\n\nThat nearly caused Louis into losing his climax because he had been ready to pull out to finish. But as the thought of what she said rapidly gelled in his head, he uncontrollably started blasting away inside her vagina. It wasn't quite the magnitude of the orgasm he'd had several minutes ago, but he was pumping with such ferocity that all of the semen was being forced out of her pussy. He felt it dripping down his balls.\n\nTotally spent, Louis stopped abruptly.\n\nAnd a couple of seconds later when a stunned Lonnie uttered, \"Cut,\" all of the crew began clapping and cheering excitedly. Louis couldn't see that most of the guys had bulges in their pants and many of the women had a hand between their legs.\n\nExhausted, Louis threw his head back on the bed.\n\nCarly eased off of him, turned and lowered her head within inches of his. \"You Okay?\" she asked.\n\nAll he could do was nod while attempting to catch his breath. She then pressed her lips to his in a brief but passionate kiss.\n\nLonnie was beside him a second later. \"Wow, Louis, that was spectacular. Can't wait to see the rough cut.\"\n\nChrissy was also there with a bottle of cold water. Louis gratefully accepted it and turned it towards his mouth without lifting his head. Of course, a portion of it poured all over his face and neck, but it felt great. He then drank the rest down.\n\nFeeling slightly rejuvenated, he arose and walked slowly out of the bedroom to another round of applause. He simply nodded his thanks. He headed toward the stairs not caring that he was still naked and had dried pussy juice and semen on his wilting cock. Chrissy caught up with him and draped a robe over his shoulders, following him up the steps.\n\n\"Can I get you anything?\" she asked.\n\n\"No, thanks. You've been great all day. Gonna grab another shower and . . .\" He trailed off as he reached his bedroom door, opened it and entered. He turned to Chrissy and said, \"Thanks again,\" then closed the door.\n\n* * *\n\nDownstairs, as the crew started packing up, someone brought out an ice chest filled with beer and everyone stopped for a minute to grab one and toast their successful shoot.\n\n\"Is he alright?\" Lonnie asked Chrissy.\n\nShe nodded. \"Said he was going to take a shower.\"\n\n\"Okay. Give him some space. I'm sure he hasn't had this much activity in one day in a long time. You've got a class tonight, right? You can take off whenever you want to. I'll look in on him later.\"\n\nIt took a few hours to get the house back in order before everyone left. Lonnie realized Louis hadn't come back downstairs so she went up to his room to see if he wanted to watch what had been shot today.\n\nShe knocked on his door, but there was no answer. A second rap produced no reply either so she turned the door knob and walked in. Louis was sprawled across his bed, arms and legs spread wide. She was concerned for an instant until she saw the steady rise and fall of his chest. She chuckled, thinking to herself that the poor boy was worn out.\n\nAnd who wouldn't be considering the stellar performances he had given today.\n\nLonnie pulled down his covers and he barely budged and certainly didn't awaken. Then she covered him and returned to her office where Diane and Gwen were sorting through papers and doing other assorted chores. The three sat and watched the day's video.\n\n* * *\n\nAwakening with a start, Louis bolted up in his luxurious bed. It was dark and he stumbled to the bathroom noting that it was only four o'clock. Given the darkness, he presumed it was early morning. Obviously, he'd been so tired after showering yesterday evening that he just collapsed on his bed. Still tired, he left his room, walked down the hallway and entered Lonnie's room.\n\nWith the light seeping in from the hallway, Louis could see that Lonnie was sound asleep so he closed the door and carefully in the dark made his way to her bed. Very quietly, he slipped in bedside her.\n\nBut sleep did not come for him. Instead, his mind was swamped with thoughts about the day before and what that meant for his future. Unless the day had been one gigantic con game, he had done an impressive enough job to get more work. That meant attending a major university to further his computer studies, a real job in IT with Lonnie's company, and perhaps most important a place for his grandmother at the assisted living facility\u2014he realized he hadn't called her yesterday and would have to do so today; although it was too early now. The problem was, as good as he might have been yesterday, something just didn't feel right about it.\n\n\"Good morning, stud,\" Lonnie greeted, breaking his ruminations.\n\nLouis' head had been resting on a pillow facing her, but he had been so lost in thought he didn't notice her eyes open. He smiled. Her beauty always melted him. He also noticed that it was light outside.\n\n\"What's that pensive look all about?\" she asked.\n\n\"Just thinking about yesterday and tomorrow,\" he responded philosophically.\n\n\"Mmmm. And?\"\n\n\"I'm not sure it's for me.\"\n\n\"Why? You did a magnificent job yesterday. Everyone said so. The three women\u2014Carly especially\u2014are dying to work with you again. Chrissy is yours whenever you want her and\u2014\"\n\n\"I don't want any of them, Lonnie. I want you.\"\n\n\"Oh, don't worry. You and I will do some movies together,\" she reassured.\n\n\"I didn't mean that I want to do movies with you. I want to be with you. I . . . I . . . I love you,\" he blurted out.\n\nLonnie didn't see that one coming. \"Why do you think that?\" she asked, trying to make it sound as innocuous as possible.\n\n\"No one else makes me feel like you do.\"\n\n\"I don't know,\" she said lightheartedly, \"you seemed to feel something for Carly yesterday. You came twice. Don't see that very often unedited.\"\n\n\"That was just sex.\"\n\nLonnie sat up, her magnificent breasts springing free of the covers. They distracted Louis for a second. \"With all due respect for your feelings, in this business, we couldn't have a relationship like what I think you want. You would be branded my boy toy, and I would be accused of robbing the cradle. These May-December relationships just don't work. And to be perfectly honest, I don't want a serious relationship. You can stay here as long as you want, we can have each other whenever we want, but that's as far as it can go. And don't forget your education and your grandmother.\"\n\n&quot;You don't think you could love me?&quot;\n\n&quot;I do love you, Louis. But beyond what I've already offered you, I can't commit to anything more.&quot;\n\n&quot;I don't understand. You'll let me be what amounts to your live-in lover, but nothing more.&quot;\n\n&quot;Well, Louis, it's hard to explain.&quot;\n\n&quot;I have a very high IQ. I can understand quite a bit.&quot;\n\n&quot;But can you understand that this is just what I want?&quot;\n\n&quot;I guess,&quot; he said unhappily. \n\n&quot;Now, you have to decide what you want: a good life that can give you all of the things you want, a great education to become what you've always wanted to be, and the right kind of life for your grandmother; or do you want to go back to what you had? But don't decide right now. Wait until you see the edited version of what we filmed yesterday. You'll be quite surprised. In fact, one of the writers wrote some transitions that we'd like to shoot today that will turn the three scenes into a cohesive story. No sex involved, and it shouldn't take more than an hour or two. What do you say?&quot;\n\nLouis shrugged. &quot;More cuts and action? That was the thing I hated most about yesterday.&quot;\n\n&quot;I know as well as anyone that being in the middle of a passionate moment and have some director tell you to stop can be quite frustrating. But I promise, when you see the final product, it's all worth it.&quot;\n\n&quot;When will we see it?&quot;\n\n&quot;Tonight. We'll have a mini-premiere for some of the crew and some close friends I want to introduce you to.&quot;\n\n* * *\n\n\"Hi, granny. How are you?\"\n\n\"Well, I thought you had forgotten me, Louie.\"\n\n\"Sorry, granny, it was an all-day process yesterday and I was worn out when we finished. I actually fell asleep early.\"\n\n\"So, how did it go?\" She sounded chipper.\n\n\"It went well. How are doing at the facility?\"\n\n\"Very well, Louie. Lots to do. Haven't been so busy in years. Are they going to hire you?\"\n\n\"Probably. Just not sure this kind of life is for me, granny. Los Angeles is a whole different place.\"\n\n\"Well, Louie, you just have to do what's right for you,\" she counseled, disappointment obvious in her tone. \"We did just fine before Miss Lonnie came along. Don't you worry about me.\"\n\n\"Thanks, granny, but I haven't decided anything yet. It would just take some getting used to.\"\n\n\"Well, don't make any quick decision. Take your time and think about it. When will you be home?\"\n\n\"Couple of days probably.\"\n\n\"Okay. No rush. \"I can stay until the end of the week. In fact, I probably will.\"\n\n\"You do that, granny. Enjoy it yourself while you can.\"\n\nHe felt worse after he hung up with her than he did after his conversation with Lonnie when she awoke this morning. His grandmother obviously liked the assisted-living facility, and the only way she could stay was if he stayed here. How bad could it be? So what if it was stop and go sex? He could adjust; particularly if he got to fuck women like he did yesterday. And then there was always Lonnie. Since meeting her, he'd had more sex in a few days than he'd had in all of his life before. What guy couldn't adjust to that?\n\nBut then he was again reminded of his friend who wanted to be a photographer, went to college, earned a degree in photography, and now, he hated it is an occupation. When it was just a hobby, he could photograph anything he wanted to. Now he had to take pictures of the ridiculous things that people paid to have pictures taken of. He now joked that there were only so many ugly brides he could shoot. \n\nWith that in mind, Louis wondered if he could eventually lose interest in sex. It didn't seem likely but stranger things have happened.\n\nFor now, he would abide by his promise to Lonnie and wait until after the premiere tonight to decide. \n\nBy noon, they had finished shooting the transition scenes. The premise was he was visiting his next-door single neighbor, Carly, to perform some simple chores. In the course of doing the little jobs, he encountered her two daughters, Teri and Trudy. Their mother caught Louis, and while pretending to be angry and call his mother, she really wanted him for herself. Lonnie would have liked to film a foursome with Louis and the three women, but since the equipment had already been packed and moved, she didn't want to incur the expense of bringing it all back. If response was favorable after tonight's screening, she might do it at a later date. \n\nLonnie was scarce throughout most of the day, working on finishing the movie for the evening premiere. Caterers were busy in the kitchen preparing food and setting up bars for the party. Gwen and Diane were furiously moving between the two to make certain everyone had what they needed.\n\nChrissy was there to see to Louis' needs, but after the day of shopping and all the activity yesterday, he was content to just hang around. They went out for lunch, caught a movie and then lounged around the pool. She was a great girl. He could see being involved with her if he wasn't in love with Lonnie. There was still something familiar about her and he thought it might be that she reminded him a lot of Angela back home, except she was much nicer and kinder. Or was she merely being paid to be that way?\n\nIn the late afternoon, Chrissy told Louis it was time for them to get ready for the party.\n\n\"How should I dress?\" he wanted to know.\n\nWith a smirk, Chrissy explained, \"It's casual, but for tonight's crowd, that could be anywhere from anything goes to next-to-nothing. So, wear whatever you like.\"\n\n* * *\n\nBy the time all the guests arrived, Louis' head was spinning. He'd never been introduced to so many people at one time. The only names he could remember were those of the porn stars he already knew\u2014from movies, of course. Chrissy had been right about the attire. Some of the macho guys were wearing shorts and tank tops to show themselves off. Others wore just casual shirts and pants, as did Louis. \n\nBut of course, the women were the ones to watch. Most had short dresses on that concealed very little. It was probable that many were without underwear and some even wore see-through apparel that left nothing to the imagination. Well, this was the porn business. \n\nOf course, the most striking beauty of all was Lonnie, adorned in a low-cut, short sequined cocktail dress that breathtakingly showed off her magnificent breasts and perfectly sculpted legs.\n\nPromptly at eight PM Lonnie announced that everyone should get a drink and find a space in the den to watch the premiere. She had reserved the center seat for Louis on the sofa, and the spot on either side of him or for Carly and herself. There weren't enough seats so most had to either stand or sit on the carpeted floor. Those women who chose the latter had no concerns about the disposition of their clothes. Louis wondered whether the real show would be on the floor or on the screen.\n\nWith the additional scenes shot this morning, the final cut was just over an hour, but it seemed to fly by. Louis had never seen himself on video so he was somewhat enthralled. To some extent, and partly because of his make-over, he didn't think he was really watching himself. One thing was certain; Lonnie had produced a quality video that was quite stimulating. Louis found himself getting aroused, something he didn't think could happen looking at himself, and it escalated during the last scene with Carly. Without thinking, he adjusted his cock in his pants to allow it to grow to its considerable size.\n\nHe was startled when Carly casually reached over and rubbed the palm of her hand along his bulge, but it also felt good.\n\nShe leaned over and quipped, &quot;You better get a hard on watching us!&quot;\n\nAs the movie came to an end, Louis noticed that some of the guys had their cocks out and were stroking themselves or being pumped by women, and likewise, the pussies of many women were exposed fingered by themselves or their men. As he was eying this activity, Carly was unzipping his pants for better access to his hard dick\n\nFinally, when the screen went dark, there was a rousing round of applause, cat calls and whistles. No one bothered to cover up or replace any exposed body parts as Lonnie stood and moved in front of the screen.\n\n&quot;Thank you, everyone,&quot; Lonnie said. &quot;I'm glad you enjoyed it. May I present Louis Robbins.&quot; She held her arm out, hand and directed at him. With slight movement of her fingers, she coaxed him to stand. \n\nLouis had to hold his undone pants up with his hand to comply. He was up and down in seconds as the clapping continued.\n\nLonnie raised her arms to silence her guests. &quot;Thank you, thank you. So, what did you all think?&quot;\n\n&quot;It's great,&quot; some guy shouted. &quot;Finish it.&quot;\n\n&quot;I plan to.&quot;\n\n&quot;An AVN winner, for sure,&quot; someone else said.\n\n&quot;Best newcomer for Louis.&quot; This from a woman.\n\nThere were a dozen more comments in the same vein. None were negative. Apparently, Lonnie was too well respected for that.\n\nFinally, she thanked everyone again. &quot;Please enjoy yourselves, eat, drink and\u2014&quot; she swept her hand around the room where cocks were still being stroked and pussies rubbed &quot;\u2014be merry!&quot;\n\nAnother brief round of applause quickly dissolved as guests became more preoccupied with the orgy that was beginning. Before Lonnie even returned to her seat beside Louis, Carly's mouth was engulfing his cock. With no regard for what was transpiring in his lap, Lonnie sat and threw her arms around him, kissing him passionately.\n\nAfter a minute of that, she said, &quot;They loved you. And so do I. It all can be yours, Louis. The world is your oyster.&quot;\n\nAwkwardly, because of Carly's head in his lap, Louis tried to reciprocate the hug. He wanted the kiss to endure, but Lonnie pulled back. \n\n&quot;Anyone you want tonight is yours,&quot; Lonnie told him.\n\n&quot;I want you.&quot;\n\n&quot;We'll have our time. For now, I have to mingle.&quot; And that quick, she was gone.\n\nLouis watched her walk off and greet some of the few guests who weren't engaged in sexual activities on the floor. The vision of her sashay caused his penis to pulse, and Carly took that as a positive sign increasing the intensity of her expert oral ministrations. Watching Lonnie and imagining ravishing her luscious body caused him to involuntarily spurt into Carly's mouth. It wasn't a heavy load, but more than she could swallow.\n\nLooking up with sperm dripping from both corners of her mouth, she murmured, &quot;Damn, boy. No pun intended, but a little heads up would have been nice.&quot; Some other half-dressed milf hurried over to lick the dribble from Carly's face. That led to some heavy kissing and was an opportunity for Louis to pack himself up and slip away.\n\nLouis quietly and stealthily made his way to the dining room where the food was set up. Having poor social skills, he hoped not to encounter anyone. However, Chrissy caught up with him. She was still clothed, dressed in a sexy, short, low-cut revealing dress. He now noticed that she really had a great body, and thought she was showing it off somewhat, she was doing so in a classy manner. He was really beginning to like her.\n\n&quot;So, is this what happens at these parties?&quot; Louis questioned. &quot;Turns into an orgy?&quot;\n\n&quot;Frequently, not always.&quot;\n\n&quot;You going to get into it?&quot;\n\nShe shrugged. \"Maybe with the right person.\" But she was certain he didn't get her meaning. &quot;Looks like you did.&quot; She gestured to some wet spots on his crotch. &quot;Carly wasn't too careful.&quot;\n\n&quot;Obviously not. But I'm sure I'm not out of place.&quot; \n\nThere were massive amounts of food spread out on the dining room table, much of it too fancy for Louis' tastes. What he wouldn't give for a good hamburger right now. Instead, he just picked at some things. She did the same. \n\n&quot;So, with this now being an orgy, am I expected to participate?&quot; Louis wanted to know. \n\n&quot;No one is expected to do anything. But when these parties turn into orgies, everyone wants to. This is your big chance to fuck a lot of women, Louis. Even more than one at a time.&quot;\n\nLouis grimaced. &quot;Doesn't sound particularly safe.&quot;\n\n&quot;It is. Everyone is clean here. And it can be a lot of fun.&quot;\n\n&quot;So you've done it before?&quot;\n\nChrissy offered a guilty look that he could take however he wanted.\n\n&quot;And you like it.&quot; It wasn't a question, more a statement of fact. \n\n&quot;Sometimes. Not always. It can be a totally liberating sexual experience. But there are also times when you just want to be intimate with one person.&quot;\n\nLouis nodded his understanding. While chatting and munching, he had been watching the goings on in the living room. Suddenly, he saw something most unexpected. &quot;There is a guy fucking a girl and sucking another guy's dick!&quot; He noted in astonishment. \n\nWith a casual nod and smile, Chrissy pointed out, &quot;Yeah, there are some bisexual guys here. Just like guys like to see two girls together, some women like to watch two guys go at it. Did you not realize that there were bisexual guys?&quot;",
        "Louis shrugged. &quot;I did. Guess I just didn't expect to see any here.&quot;\n\n&quot;And of course, you realize that most of the women in this business are bisexual, or at least, don't mind having sex with another woman.&quot;\n\n&quot;Yeah, I guess I did. But when you only see these things in movies, you don't always realize that people really live like this.&quot;\n\n&quot;They do. You want to go find some action . . . or make our own?&quot; The last part of her statement was laced with hopefulness.\n\n&quot;Any idea where Lonnie is? Maybe we could do something with her.&quot;\n\n&quot;I'm sure she's mingling. Maybe outside. That's what a good hostess does. You really like her, don't you?&quot;\n\n&quot;Yes I do.&quot;\n\n&quot;Is there more to it than that?&quot; Chrissy wanted to know. \n\n&quot;There could be. But apparently she has an issue with the age difference.&quot;\n\nChrissy could hear the frustration in his voice. &quot;Then pick on someone your own age.&quot; Her implication was clear. \n\nLouis had no response for that, so he headed outside with her trailing behind. He spotted Lonnie in the cabana on the other side of the pool sitting on the sofa. All he could see was the back of her head above the back of the couch. There appeared to be other people with her. He didn't have a good feeling as he drew nearer and saw her dress draped on the arm of the sofa. One guy was licking her pussy while another guy sucked one nipple and a woman sucked the other. \n\n&quot;What the hell?&quot; Louis erupted. \n\nLonnie looked up unfazed. &quot;Oh, hey, Louis. Come join our little party. You too, Chrissy.&quot;\n\n&quot;What are you doing?&quot; Louis demanded to know. \n\n&quot;We're having fun, Louis. Try it, you might like it.&quot;\n\n&quot;What about us and enjoying each other whenever we wanted?&quot;\n\n&quot;Well, I did just invite you to join us. I didn't say we were exclusive.&quot;\n\nChrissy glanced at Lonnie without Louis noticing and shrugged helplessly. Lonnie nodded. \n\nA steaming Louis turned to Chrissy. &quot;You said something about picking on someone my age?&quot; He held out his hand for her to take. \n\nAgain without him seeing, Lonnie gestured with her head for Chrissy to go with him. Of course, Chrissy had no problem with that. \n\n&quot;So that's how it is in this business, is that right?&quot; Louis asked, finally breaking his silence when they entered his room. \n\nIn as objective a voice as she could muster, Chrissy explained, &quot;A lot of people get into this business because they just love sex and so they're not looking for serious relationships. There are others who are in relationships or married, but their spouses or significant others understand and accept what they do.&quot;\n\nLouis shook his head. &quot;I just don't think this business is for me.&quot;\n\n&quot;Just because a lot of people in this business live that way doesn't mean that you would have to. There are those who do it as a job. They go to work and then go home and live their lives. And no one knows what they do for a living. You can have it any way you want it.&quot;\n\n&quot;Why is everyone so dead set on talking me into being in this business?&quot;\n\n&quot;I'm not trying to talk you into it, Louis. But you have the rare ability to put something in people's lives that they can't put there themselves.&quot;\n\nIn desperation, Louis plopped down on his back on his bed. Chrissy did not know what she could do for him. Actually, she did know what she could do, she just didn't know if he really wanted her to. She'd had no illusions in the cabana when he'd made the statement about picking on someone his own age. There was no doubt that was to get back at Lonnie. But right now he really needed someone his own age. \n\nShe casually slipped the straps of her dress off her shoulders and let it fall to the floor. She eased onto the bed on her side and squirmed as close to him and she could get. She draped one breast and her arm on his chest and her leg over his, effectively molding herself to him. Thankfully, he offered no resistance. They laid there for a few minutes and she could feel his erection growing. She took great pride in that and reached over to caress it through his pants. Still not halting her, she boldly slid his zipper down. A whimper escaped her lips at the feel of his large cock. Touching it felt wonderful. Like nothing she had ever held. She stroked it slowly, tenderly. \n\nLouis wrangled his arm out to put it around Chrissy; a warm, victorious feeling pervaded her. The feeling heightened when he pulled her to him, as though she could get any closer. With his other hand he reached over and ran his fingers around her exposed breast. It caused her to shiver. \n\nChrissy undid his pants and smirked to herself because he was wearing no underwear. He was obviously becoming comfortable with commando style. As she re-engaged her hand with his cock, he twisted toward her coming face to face with her. He pressed his lips to hers and she marveled at his tender, romantic approach. Not what she expected. While still loving and passionate, the kiss escalated to intense. Louis needed affection, she deduced, and it wouldn't do her any harm, either. She wanted it to last and hoped he did also, not like they were making a movie.\n\nTaking a chance, Chrissy used a little tongue, and Louis responded, as though it was what he had been waiting for. But as though his tongue was now activated, he wanted to use it for more. He rolled her over onto her back and slid down, kissing his way between her breasts and down her abdomen, even rolling his tongue around in her belly button. She giggled at the tickle causing him to look up quickly and grin. When his lips returned to her body a second or so later, they were kissing her pussy lips. He was just as tender there.\n\nBut then his tongue stabbed at her vagina and he stuck it in as far as he could get it to go. Chrissy moaned her enjoyment. He went to licking and pulling on her labia, and then flicking the tip of his tongue against her clit. Either She was very susceptible and horny, or he was just very good, or probably a combination, because she found herself in the throes of a powerful orgasm. A mental tug-of-war raged, one side angry because she allowed herself to come so quick, the other side thrilled with the experience. He didn't stop until she did.\n\nHe moved back up, this time stopping to suck her nipples a bit before returning to her lips. His hand was on her pussy and he slid his middle finger in enjoying the warmth and gooey liquid produced by her climax. He loved the sticky feel on his finger and inserted a second. He further liked the unparalleled softness of her inner walls. Without realizing it, he was finger fucking her. Chrissy's heavier breathing indicated she liked it, so he kept it up. Now, she was moaning and groaning, and finding it hard to remain still. Much to his amazement, both of himself and her, she was coming again. She wrapped her arms around his neck and held his face tightly against hers until her post climactic convulsions subsided. When finished, she hugged him harder and whimpered, and then let him go.\n\nEasing between her legs, Louis' raging hard on sniffed out her soaked pussy and effortlessly slid in. A high-pitched moan vibrated in his throat. She felt wonderful; all the soft, warm, wetness. He pumped her slowly as she threw her arms around him.\n\n\"Oh, Louis,\" she murmured in a husky whisper, \"you've shown everyone that you can fuck. Show me that you can make love.\"\n\nHis face was inches from hers and they stared lovingly and deeply into each other's eyes. He buried his face in the nook of her neck and held her thighs. All concentration was focused on every single nerve ending in his cock as it moved in and out at a very meager pace. He'd heard the description many times before, but the experience really was like being in a velvety embrace.\n\nChrissy lifted Louis' head and brought his lips to hers in a kiss that was as wet as her pussy. After a couple of minutes, on one of his out strokes, she pushed him completely out, but only long enough to turn over onto her front. He barely missed a stroke, mounting her from behind and sliding in. He liked this position, particularly when he spread his legs to the outside of hers and she closed hers together. She moved her rear to urge him faster. Of course, he complied.\n\nBarely a minute passed before he had to quickly pull out and spray her back and ass with a massive amount of pearly cum. He grunted pleasurably with each stroke. When he finished, Chrissy lifted her head and twisted it to taste his lips again. He cupped her breast and fondled it while they kissed.\n\nShe took control again and turned him onto his back, thankful, but not surprised that he was still hard. With no regard for the sticky semen splattered all over her back and ass, Chrissy straddled him and quickly fed his solid rod into her pussy. She rode him hard.\n\nForgetting about the mess he had made on her, Louis reached up and latched onto her butt cheeks, his hands slipping on the gooey liquid. He rubbed it into her skin and held on. She continued to ride for several minutes until she unbelievably came a third time. She'd never done that. Even twice had been a rarity with the boys she'd fucked. Her head felt as though it would explode, but she rode the orgasm for as long as it lasted.\n\nWhen she was done, Louis rolled her onto her side and he did the same facing her. With her leg draped over his, he re-entered her. Knowing that he had brought her to orgasm three times was a huge stimulus for him. \n\nHearing his moaning and breathing escalate, and anticipating he would come again, she pulled him out and pulled on his cock until she felt the warm, slick liquid in her hand. It wasn't near the load of his first orgasm, but she was thrilled he came again.\n\nBoth rolled onto their backs beside one another, Chrissy rubbing his delicious semen all over her abdomen. It felt delightful for her trunk to be saturated with Louis' jism. Neither said anything until their breathing subsided.\n\n\"I know this is the kind of thing people say after having such spectacular sex, but that was the absolute best I've ever had, Louis. Thank you!\"\n\nLouis tilted his head slightly to her and smiled. He was pleased with himself. But it was also a revelation. \"I have to say, that's how I always envisioned sex; just like that. All that wild stuff like yesterday might be nice to watch if you need stimulation, but it's not how real people do it. It was also nice not having to stop and go, or have a couple of dozen people watching.\"\n\n\"I'm yours any time you want,\" Chrissy eagerly offered.\n\n\"Chrissy, this business is not for me. Even as much as I liked the porno quality sex I had with Lonnie, that's not who I am. I'm going to have to have a talk with her and tell her. I know my grandmother will be disappointed. She seems to really be enjoying the assisted-living home, but I can't in good judgment sell myself to keep her there. And as much as I want to go to college, I'll just have to find another\u2014\"\n\nLouis was distracted by her breathing, and when he turned toward her again, she was sound asleep. He wondered if she'd heard anything he'd said. Shaking his head, he got up and went into the bathroom.\n\n* * *\n\nThere was a gentle knock on the door. When no one invited Lonnie in, she entered and stepped over to the bed. In the darkness, she couldn't really see who was under the covers so she switched on the bedside lamp. A groggy, naked Chrissy looked up through sleep-filled squinted eyes.\n\n\"Where's Louis?\" Lonnie inquired.\n\nChrissy turned to the other side of the bed. \"I don't know.\"\n\nLonnie looked around the room. Louis' suitcase that had been sitting in a corner was gone. She went immediately to the closet as Chrissy sat up, shaking her head to wake up.\n\n\"What time is it?\" the nude teen asked.\n\n\"Three a.m.\"\n\n\"Is the party still going on?\"\n\n\"No. Everyone finally left.\" Opening the closet door, Lonnie saw that all of Louis' clothes except some of the things she had purchased for him were gone. \"Damn! He's gone. When did you last see him?\"\n\nChrissy sat up on the side of the bed, unconcerned that she was naked. \"We came up here after he saw you in the cabana. We . . . we\u2014\"\n\n\"It's okay, Chrissy,\" Lonnie spouted tersely. \"I can see by all of the dried cum on you that you fucked him.\"\n\n\"We did it for an hour or so and then I guess I fell asleep.\"\n\n\"Did he say anything before you nodded off?\"\n\n\"Just that the way we did it was the way he envisioned it being done; romantically, not pornographically.\"\n\n\"Shit!\" Lonnie exclaimed, storming out.\n\nEND of 3 "
    ],
    "authorname": "RonCabo",
    "tags": [],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/star-struck-ch-03-1"
}