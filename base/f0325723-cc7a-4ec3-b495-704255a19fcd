{
    "title": "Three Square Meals Ch. 033",
    "pages": [
        "The room was peaceful and still when John woke up, and a quick glance at the ship's chronometer told him it was nearly two in the morning. During the night he'd rolled on to his back, Calara and Jade rolling with him, and they now lay asleep in his arms. He glanced down at them with an affectionate smile on his face, and looked to both sides to check that Alyssa and Dana were asleep too. The blonde was sleeping contentedly behind Calara, but his mischievous redhead was currently missing, the rest of the bed looking cold and empty.\n\nHe listened carefully to see if he could hear Dana in the bathroom, but he just heard the rhythmic sound of the other girls breathing. The last time Dana hadn't come to bed was during their time on Ashana, when she'd got caught up in the ship's refit. It seemed unlikely that she would have stayed up tonight though, as she wasn't really preoccupied with any major projects at the moment.\n\nCarefully extricating himself from Calara and Jade's loving embrace, he moved stealthily off the bed, being careful not to wake anybody. He padded down the corridor to check on Dana's room, to see if she'd gone in there to sleep for some unknown reason. Finding her unused room to be as empty, just as he'd expected, he walked further along to the grav-tube, thinking he should head down to deck seven, and see if she was in her workshop.\n\nHe smiled to himself for a moment, thinking it would be much easier if he had simply woken up Alyssa, and asked her where the redhead was hiding, but where would the fun be in that?\n\nAll thoughts of fun and games disappeared instantly when he heard the faint sound of crying coming from the officer's lounge. He strode over to the double doors and pushed the button, the portal opening with a quiet swish. The lounge was cast in shadows, starlight from the passing systems providing the only illumination in the room. Now that the door was opened, the heartbreaking sound of a girl weeping reached his ears, and he followed the desolate lament over to the sofas. Dana was sitting on one of the seats with her feet up on the cushion, her head tilted forward, as she cried into her arms that were resting on her knees.\n\nJohn strode over to her purposefully and sat beside her, wrapping her up in his arms.\n\n\"Dana, what's wrong?\" he asked her, his voice echoing his concern.\n\n\"It's nothing,\" she mumbled between sobs.\n\n\"Come on now, you know you can tell me anything,\" he said soothingly.\n\nShe paused, her breathing ragged from the crying, and then leaned into his chest, her tear streaked face brushing against him. \"You'll think I'm a terrible person,\" she whispered hopelessly.\n\n\"You know I'd never think anything of the kind,\" he laughed, attempting to buoy her spirits. \"Tell me what's troubling you, and maybe I can help make you feel better.\"\n\nDana took a deep shuddering breath, and then chuckled helplessly. \"Okay, whatever you want,\" she said wryly. \"I'm feeling so jealous... of Calara,\" she whispered haltingly, looking chagrined.\n\n\"I'm sorry Dana, I spent so much time trying to impress her family, I pretty much ignored you while we were on Jericho.\" he apologised, feeling awful for making her so upset.\n\nThe redhead sniffled and laughed. \"No, it's not that, I was proud of the way you won them over,\" she said fondly.\n\n\"Then what is it?\" he asked her, feeling confused. \n\n\"She had such a perfect life growing up with a wonderful family, and I was abandoned; discarded like a piece of rubbish,\" she said, her face crumpling again at the overwhelming feelings of loss the visit had dredged up.\n\n\"What makes it worse, is her family were so caring; only wanting to keep her safe and happy, and it was like a hundred times better than I'd thought a loving family would be like. All those times I sat scared and alone, just wishing for someone to love me...\" she sobbed, and broke into a fresh round of tears. \n\n\"Shush now, everything's going to be okay, we all love you,\" he said comfortingly as he held her in his arms, and rocked her gently. She hugged him tightly, as though clinging to him for reassurance.\n\n\"I know it's not her fault, and it's stupid for me to feel this way, but I can't help it... I guess I'm just a horrible person,\" she whimpered, looking up at him dejectedly.\n\n\"It's only natural to want to belong to a loving family,\" he told her reassuringly. \"You and Alyssa had a terrible start, but everything's going to be so much better now, I promise!\"\n\n\"He's right,\" Alyssa said to them, as she walked gracefully across the darkened room to join them.\n\n\"About what?\" Dana sniffled, looking at her friend who came to sit beside her, and stroke her back gently.\n\n\"That we all love you, and that it's only natural to want to be a part of a family,\" she murmured comfortingly.\n\n\"But I feel so jealous of Calara, it's awful!\" Dana moaned, looking forlorn. \n\n\"I know how to make all that go away, and to give you what you've always craved,\" Alyssa said softly. \"You're part of a wonderful new family now.\"\n\n\"Sisters?\" Dana said with a hopeful smile.\n\n\"That's right. Sisters, who all love the same amazing man,\" Alyssa said with a smile, as she glanced at John.\n\nDana looked up at John lovingly, and nodded enthusiastically, but then her face shadowed in confusion. \"I already know all that, but I still feel this sense of loss,\" she sighed dejectedly.\n\n\"That's because you know it, but you haven't been able to truly feel it,\" Alyssa said soothingly. She opened her arms invitingly. \"Let me make everything feel so much better, Sparks.\"\n\nDana nodded willingly, and John released her from his embrace as she turned to face her oldest friend. Dana sat in Alyssa's lap, with her legs wrapped around her friend as they hugged each other tightly, while John stroked her back soothingly. Alyssa pulled back slightly so that they were staring into each other's eyes, only inches apart.\n\n\"Let me feel how much you want to be a part of our family, little sister,\" the blonde girl said, staring into the redhead's sky blue eyes.\n\n\"Oh, I want that so much,\" Dana sighed wistfully.\n\n*So do I,* Alyssa's thoughts carried through to her friend.\n\n*I can feel it!* Dana gasped, the golden coronas around her pupils flaring with excitement. \n\n*We all feel this way about you, Dana,* the blonde girl replied, as her thoughts and feelings swelled up, surrounding and embracing the redhead lovingly.\n\n*My family...* Dana murmured, as she stared into Alyssa's piercing cerulean eyes in awe.\n\nJohn watched as the girls seemed to fall into some kind of trance, staring unblinkingly into each other's eyes as their breathing deepened, and their chests rose and fell in an identical rhythm. He had seen this happen when Alyssa had bonded with Calara, and if Alyssa followed the same pattern with Dana, the girls would be unresponsive for a while. He walked quietly back to the bedroom, and returned with a couple of blankets, one of which he draped around the nude girls, the other he pulled over himself as he laid out on an adjacent sofa, settling down to keep an eye on them.\n\nHe half dozed, drifting in and out of sleep, but watching them both warily for any signs of change. After an hour or so, he noticed some movement from the young women, their blanket shifting, as they began to rouse from their hypnotic state. He threw off his own blanket, and darted over to their side, looking at both their faces with concern.\n\n\"It's okay, we're fine,\" Alyssa said to him lovingly, as she raised a slender hand and cupped his face tenderly.\n\n\"I feel wonderful, the emptiness is just gone...\" Dana signed happily, gazing across at the blonde girl with deep gratitude in her eyes. \n\n\"Let's get you two back to bed, and we can talk about this later,\" John said soothingly, and gently helped them up. They rose and then embraced him, and he led them both back to his room, a tired girl leaning against him on either side.\n\n***\n\nJohn awoke later that morning, to find Jade watching him with a happy smile on her face. He looked around at the other young women, but they were all slumbering serenely.\n\n\"Let's go make them breakfast for when they wake up,\" he whispered conspiratorially, and the nymph nodded eagerly, and grinned at him.\n\nJohn extricated himself from the tangle of lithe female arms, and then got dressed silently with Jade. He held out his hand for hers when they were ready, and she slipped her cool hand through his, intertwining her slender fingers with his own. She looked up at him adoringly, and he gave her a quiet peck on the lips that made her sigh contentedly.\n\nThey stole away quietly, being very careful not to wake the other girls, who were recovering, having just undergone a seismic shift in their relationships. They walked along the corridor into the officer's lounge, and remained quiet until they entered the kitchen.\n\n\"How are you this morning?\" John asked her curiously, as he reached over to collect some eggs from the fridge. \"Dana was quite upset last night after visiting Calara's parents. It made her realise just how much she'd missed out on, while she was growing up.\" \n\n\"Ah, that's what was bothering her,\" Jade said with a frown, as she leaned back against one of the counters. \"I wish she'd spoken to me. I could tell she was upset, but she wouldn't talk to me about it.\"\n\n\"It's okay, Alyssa did that mind sharing thing with Dana last night. I have a feeling she'll be fine now, but you haven't answered my question,\" he said with a smile, as he cracked an egg into a pan. \"Did spending time with a close family like that upset you?\"\n\n\"No, I've never felt happier!\" Jade replied, accentuating her statement with a beaming grin.\n\n\"Well that's always good to hear,\" he said with some relief.\n\nJade laughed merrily, and then glided over to his side, and ran her fingers through his hair affectionately as she looked up at him. \"You guys just see me as a green skinned Terran most of the time, which is sweet, and I love that you accept me so wholeheartedly. But like you, I'm different. I might well have had a family many centuries ago, but I just can't remember back that far. When you've lived that long, you gain a different... perspective on things.\" she said softly, suddenly looking far older and wiser than he'd ever seen her before.\n\n\"What do you mean?\" he asked her curiously.\n\n\"I don't really feel that same need that drives Terrans: to have roots, a history, and a sense of belonging to some kind of shared heritage. I just need...\" she paused and smiled wryly.\n\n\"Tell me, what do you need?\" he asked her, quite fascinated.\n\n\"A strong master...\" she sighed ecstatically. \"I know you don't like the idea of me being so dependent on you, but you're just so powerful, and kind, and loving. After all the sad little pathetic 'masters' I've experienced over the last three hundred years, you're the only one who genuinely deserves the title.\" \n\n\"When we were role-playing the other day, and the other girls pretended to be hopelessly devoted to me, you weren't pretending, were you?\" he asked her perceptively.\n\nJade's sparkling emerald eyes looked up at him adoringly, and she shook her head, confirming his suspicions. He turned towards her, pulling her into his arms and she sighed contentedly.\n\n\"I'm honoured, and I can't deny it doesn't turn me on more than a little,\" he said looking down at her beautiful dark green features. \"But I thought you'd changed when you stopped calling me 'master' all the time. I was happy for you, that you seemed to have grown beyond that.\"\n\nThe nymph leaned back from him a little so that she could study his face more easily. \"Oh, I have changed, very much so. You've given me a sense of self, and purpose, and... awakened me, in a way I hadn't thought possible,\" she answered him earnestly, her tone and expression uncharacteristically serious. \n\n\"But you still have an instinctive need to bind yourself to someone powerful, a 'master'?\" he asked her, beginning to understand more of her psyche.\n\n\"I love that you've welcomed me into your family, with you and the girls on this ship... But the simple thought that I belong to you, and that you're happy with me, is more fulfilling and rewarding than I can hope to describe,\" she confirmed as she stared back at him.\n\nJohn studied her lovely face as she gazed up at him with hope in her eyes, sensing her longing need to hear those very things. He cradled her head in his hand, and leaned her back slightly, so that her top rode up and exposed her slim midriff. He stroked her toned stomach possessively as he stared into her eyes.\n\n\"You do belong to me,\" he told her fiercely. \"I'm delighted with you, my gorgeous little nymph, and I fully intend to breed your perfect body many times.\"\n\nJade's cat-like eyes stared up at him wide as saucers, and she let out a little gasp as she shuddered in his arms, her entire body vibrating with desire. \"Oh, you understand me so well,\" she sighed reverently.\n\nShe flung her arms around his neck and kissed him passionately, her normally cool skin feeling warm to the touch as she burned with lust. John returned her kisses fervently, his lips firm and insistent against her full, lush mouth. \n\nSuddenly an alarm went off in the kitchen, a heat alarm having been triggered, and they stopped their passionate embrace looking up at it in surprise. John stared at the smouldering, lusty girl in his arms in wonder, before the smell of burning eggs reached his fevered brain.\n\n\"Oh shit!\" he exclaimed, and quickly moved the blackened charred ruin in the pan, that had once been a fried egg, off the heat of the oven.\n\n\"You thought I'd triggered the alarm for a moment there, didn't you?\" Jade laughed delightedly.\n\n\"Hey, you are smoking hot!\" John said in his own defence, as he laughed along with her.\n\nThey exchanged an affectionate glance, wide grins on both their faces, as he disposed of the incinerated egg. \n\n\"I think we better concentrate on breakfast properly this time,\" Jade said as she sidled up to him, and brushed up against him. \"I promise I won't distract you... too much.\"\n\n\"I don't think that's possible,\" he laughed, \"But thanks for being honest with me,\" he said, turning and holding both her hands. \"It's important I get to know everything about the women I love.\"\n\n\"Careful, you might set the fire alarm off again!\" Jade grinned, and then leaned in to kiss him gently. \n\nThey smiled at each other fondly, and then set about making breakfast.\n\n***\n\nAlyssa stretched and yawned, finally awakening from her deep slumber. She glanced to her left reflexively, her first instinct upon becoming conscious to look for John. Instead of his rugged male physique, she found the coffee skinned Latina curled up against her. When she looked to the other side, a mass of dark auburn hair filled her view. Both teenagers awoke a few moments later and after stretching themselves, gazed up at her contentedly.\n\n*Good morning ladies!* Alyssa thought to all the girls.\n\n*Good morning, Alyssa!* they all chorused back happily, including Jade who was currently keeping John company.\n\nEach of the girls began to chatter away to her, her mind filling with their excited, happy thoughts. Sighing contentedly, Alyssa snuggled back into the covers, and struck up three simultaneous conversations. Calara was walking on air after the successful visit to her family, overjoyed that they had approved of John. Dana's worries and sadness had completely evaporated, and she was revelling in the warm loving emotions that Alyssa was sending to her. Jade was also deliriously happy, having opened up to John, and was feeling more connected to him than ever before.\n\nAlyssa allowed herself a contented smile as she chatted with her friends, all the while listening in to John's ever present voice in her mind. She examined their ethereal presences that she had tucked away into little compartments of her consciousness, and was surprised to see that the nebulous swirls of emotions that had represented Calara and Dana had changed. They had coalesced into perfect crystal images of her friends faces, their expressions frozen in delight as thoughts and feelings poured from each of them. Her metaphysical introspection was interrupted however, when John and Jade returned to the bedroom, balancing a tray full of tasty smelling breakfast as they strolled over to the bed.\n\n\"Morning girls,\" John said to them happily as he placed the tray down in front of him. They all gathered around and began to serve themselves cooked bacon, sausages, and eggs.\n\n\"This looks amazing,\" Alyssa said as she speared a sausage on her fork, and took a big bite. \"And it tastes even better, thanks guys!\" she added appreciatively, once she'd swallowed the tasty morsel.\n\n\"How are you feeling this morning?\" John asked her with concern. \"You had a busy night.\"\n\n\"I feel amazing!\" she replied happily.\n\n\"No headaches, tiredness, anything like that?\" he asked her with a worried frown.\n\n\"None!\" she confirmed with a grin. \"I feel perfectly fine, well so much better than fine, honestly.\"\n\n\"What do you mean?\" he asked her curiously.\n\n\"I can hear all of you,\" Alyssa sighed rapturously as she looked around at them. \"I wish I could explain how wonderful it is to share this bond with everyone.\"\n\n\"We can hear your thoughts and emotions too, so I can imagine what it must feel like.\" John said with a smile, leaning over to give her a kiss on the cheek. The other girls all reached out too, and touched her folded legs affectionately as they smiled at her.\n\nNot having the heart to explain how exponentially more powerful the sensations and depth of connections had become for her, Alyssa returned their affectionate smiles, and continued to eat her breakfast.\n\n\"We should arrive at Port Medea in about six hours.\" John said, glancing at the ship's chronometer. \"If the Dragon march is as dangerous as Jack seems to think it is, we should stick close to the bridge,\" he said thoughtfully.\n\n\"I can continue working on my latest project from up at the engineering station anyway, so that's no problem,\" Dana said cheerfully.\n\n\"What are you looking into next?\" John asked her curiously.\n\n\"An automated series of responses for the ship's computer, so that it will automatically react to things like interdictions until we can get there to take over.\" The redhead said excitedly.\n\n\"You're not messing around with AI, are you Dana?\" he asked her sternly. \"I'm no computer expert, but even I know about the first law of robotics.\"\n\n\"No, nothing as sophisticated as an Artificial Intelligence. Don't worry, I know about the Ganymede incident,\" she replied, rolling her eyes.\n\n\"What do you mean?\" Jade asked curiously, having never heard of either before.\n\n\"The first law of robotics states that an AI will always turn homicidal.\" John said emphatically. \"Every time it's been tried, it turns into a horrific bloodbath...\"\n\n\"Ganymede is one of Jupiter's moons.\" Calara explained. \"There was a military research base there, which was looking into building AI flight computers for the Terran Federation Navy. The AIs formed a collective super-intelligence across the network, killed all the researchers, and then started building a robotic fleet to try and wipe out humanity. The Navy lost a lot of ships and men, before they were finally able to obliterate the moon with mass drivers.\"\n\n\"That happened nearly two hundred years ago, and every few decades some idiot tries it again with similar results.\" John said forebodingly.\n\n\"Hey! I'm not that reckless, honestly!\" Dana said indignantly. \"This will just be a series of automated responses. So if we get interdicted for example, it will raise the shields, power up the weapons, and set us on an escape vector, whilst attempting to dodge incoming attacks. It will give us some valuable time to react, and get up to the bridge, so we can take over.\"\n\n\"That sounds reasonable enough, but be careful, ok?\" he asked her cautiously.",
        "\"It'll be fine, trust me!\" she replied with a grin.\n\nThey laughed at her buoyant optimism, finished their breakfast and then showered and dressed for the day, before heading up to the bridge to keep themselves occupied until they arrived.\n\nIt hadn't been long before they immediately saw that John's caution had been well advised. Calara was helping Dana with the automated interdiction responses, while he was hanging out in the Commander's ready room with Alyssa and Jade. They were making some well researched and convincing arguments, about some interesting ways to keep themselves occupied for the rest of the trip, when the intercom buzzed on his desk. The two girls stopped kissing for a moment, looking down at John from where they sat on his desk, as he answered the call. \n\n\"We've got a high priority call coming in from Terran Federation Military.\" Calara said urgently.\n\n\"We'll be right there,\" John said and rose quickly from his chair. \"Sorry ladies, I'll have to hear closing arguments a bit later,\" he added with a wink.\n\nThey giggled happily, and then followed him out onto the bridge, as he strode up the steps to the Commander's chair.\n\n\"Thanks Calara, put me through please,\" he told the brunette, and she accepted the incoming transmission. The view-screen crackled to life on the bridge, and the face of a stern man in a Terran Federation Navy uniform filled the image. \n\n\"This is Captain Maddox on the Medusa,\" he said in a firm voice. \"You will soon be approaching the Dragon March. Please state your purpose and destination.\"\n\n\"This is Commander Blake on the Invictus,\" John replied. \"We're visiting Port Medea, to conduct a crew transfer.\"\n\nCaptain Maddox's eyes narrowed suspiciously. \"Our sensors show your vessel is heavily modified from the standard assault cruiser specifications. You may continue on your present course while we verify your story, but prepare to be boarded and searched if it doesn't check out.\" he said ominously before closing the comm channel.\n\n\"Things must be a lot worse than I thought if they've set up picket ships to keep everyone out,\" John said, looking concerned. He turned towards Alyssa who was seated beside him in the Executive Officer's chair. \"Put me through to Charles Harris please, honey.\"\n\nThe blonde girl nodded eagerly, and set up the call using her console, then waited while the powerful comm relay attempted to make a connection over the long distance to the Olympus Shipyard.\n\n\"We're picking up the Medusa on our long range sensors,\" Calara informed him eagerly. \"It's a Heavy Carrier!\"\n\n\"Any support ships?\" he asked her immediately.\n\n\"Three heavy cruisers, several light carriers and dozens of destroyers,\" she gasped, as the sensor data picked up the Terran Federation transponders.\n\n\"That's a big reserve force,\" John muttered grimly. \"Something big must be happening.\"\n\n\"John, I've got through to Charles,\" Alyssa told him urgently. \"Putting him on-screen.\"\n\nThe image of Vice Admiral Charles Harris filled the viewscreen, and the older man's face was lined with worry since they last spoke to him.\n\n\"It's great to hear from you John, but It's not a good time. What do you need?\" he asked bluntly.\n\n\"I'm looking to recruit a medical officer. She's fresh out of medical school, so not a huge loss to the Navy. I was hoping you could green-light a transfer under my command?\" he asked succinctly.\n\nAn amused grin formed on Charles' face and then he laughed good naturedly. \"Going by the rest of your crew, I can only imagine what she looks like. You're going to wreck fleet morale if you keep headhunting all the pretty girls from the Navy. What's her name? I'll authorise it immediately.\"\n\n\"Her name's Rachel Voss, based on Port Medea,\" Alyssa interjected helpfully. \"And hi, Charles!\" she added happily.\n\n\"Hello Alyssa,\" Charles replied to the beautiful girl, with a bemused smile on his face. \"I'll put the transfer through right now.\" \n\n\"Wait a minute!\" he gasped suddenly, looking at them in alarm. \"Port Medea! John, you're not heading into the Dragon March are you?\"\n\n\"Is that a problem?\" John asked archly. \n\nCharles was about to say something, and then clenched his jaw tightly shut. He turned and entered a few quick commands on his desk console before turning back to them. \"I've authorised a permanent transfer awaiting your confirmation, but you need to promise me you'll get in and out as fast as you can. Don't hang around, John...\" he warned his old friend soberly.\n\n\"Thanks Charles, I appreciate it, and the warning,\" John replied, and nodded to the older man respectfully.\n\n\"Be careful,\" Charles said, his worried face disappearing from the screen as he hit the button to end the call.\n\n\"Well, that didn't sound good,\" Alyssa said somberly.\n\n\"No, not good at all,\" John agreed, as the girls all looked up at him in concern.\n\n\"If they've pulled that large a force in as a reserve, they must be anticipating a breakout deeper into Terran Federation territory,\" Calara said speculatively.\n\n\"The Kintark must really be causing some damage,\" John said, nodding in agreement with her assessment.\n\n\"Didn't you say the two sides were pretty balanced?\" Alyssa asked him curiously. \"Why would it suddenly be going so badly for our side?\"\n\n\"It could be a whole host of reasons; an incompetent commander in a key position on our side, a strategic genius commanding their force, some kind of tech advantage, or the Kintark Empire throwing everything they've got at us. Without knowing more details, it could be anything,\" he replied with a helpless shrug.\n\n\"We've got Maddox on the Medusa hailing us again,\" Calara spoke up.\n\n\"Put him through,\" John ordered grimly, and the stern faced captain of the heavy carrier filled the viewscreen once more.\n\n\"You may proceed, Commander Blake,\" Captain Maddox said grudgingly. \"But we'll be keeping an eye on you.\"\n\nJohn didn't bother to respond to the impolite Captain and just ended the call, the other man's surprised face disappearing from the screen.\n\nAlyssa pressed a button displaying the sector map, which showed their current path in a green line. \"We've got five hours left until we get to Port Medea,\" she said, as the Invictus raced across the map at incredible speed using its Tachyon drive.\n\n\"I'm not seeing much on the long range scans,\" Dana offered. \"There's no civilian traffic to be seen anywhere!\"\n\n\"Any merchant shipping must have been warned off by the picket ships,\" Calara suggested while studying the map. \n\nThey stayed up on the bridge, and just chatted pensively while they kept a careful eye on the long range scanners. After a few hours, Dana announced that she'd finished the interdiction automated response, and when John gave her the go ahead, she activated the new computer subsystems. She laughed when she saw the rest of the crew glancing around the bridge warily.\n\n\"It's not much more complicated than the automation in the cleaning robots!\" she exclaimed, as she giggled at their paranoia. \"You aren't worried about them taking over the ship too, are you?\" she added teasingly.\n\nThey laughed along with her nervously, and she rolled her eyes at their wariness. She was about to make another joke when Calara suddenly spoke up.\n\n\"We're picking up a large flotilla of ships on the long range scans,\" the brunette said in alarm.\n\n\"Ours or theirs?\" John asked curtly.\n\n\"Just a few seconds longer,\" Calara said, waiting for the transponder information to be populated on the sector map. \"They're friendlies!\" she eventually sighed with relief, as information began to appear detailing their Terran Federation affiliation and configurations.\n\n\"It looks like they're leaving the Dragon March,\" Dana observed, noticing how quickly they were approaching the substantial convoy of vessels, which were clearly travelling to some location behind the Invictus. \"But if there's lots of fighting going on, why would that many ships be leaving?\"\n\n\"Alter our course slightly please Alyssa, bring us in for a close flyby,\" John requested, intending to confirm his suspicions.\n\nAlyssa dutifully made the course corrections, and the glistening black assault cruiser made a subtle directional shift, which would take them within a few dozen kilometres of the flotilla. They waited and watched the system map as they raced past the departing Terran Federation vessels, and detailed sensor information began to be displayed against each ship.\n\n\"Holy shit!\" Dana swore vehemently, saying what they were all feeling. \n\n\"I can see why they'd be retreating,\" Jade said quietly, as she gazed up at the battered ships.\n\nThe flotilla was made up of dozens of battle damaged Terran vessels, ranging in size from corvettes, all the way up to a lone battleship that had been brutally savaged by plasma fire. Each of the ships told a similar tale of woe, with damage ranging from moderate through to critical, and all showing the trademark scarring from plasma attacks, the weapon of choice for the Kintark Empire.\n\n\"They're getting hammered!\" Calara gasped in shock. \"That's nearly a quadrant fleet right there.\" \n\n\"And those are the survivors,\" John muttered grimly.\n\n\"Is there anything we can do to help out?\" Calara asked plaintively, as she turned in her chair and looked up at him where he sat on the command podium.\n\n\"We're just one assault cruiser,\" John replied to her helplessly. \"We pack a hell of a punch for a ship this size, but there's not much we can do in a straight fight against capital ships.\"\n\n\"Well, at least not yet,\" Dana corrected him, her eyes sparkling and her grin eager.\n\n\"I think upgrading the Invictus that much is beyond even your incredible skills,\" John said, smiling at her fondly.\n\n\"We'll just have to see, won't we?\" the redhead said archly.\n\nJohn shook his head in amusement, and focused his attention back on the sector map. They all watched the sad convoy of wounded ships limp away, as the Invictus raced further on towards the Dragon March. When they were approximately thirty minutes from Port Medea, Calara began to highlight sensor readings on the system maps as they tore through each system, passing the different stars along their route.\n\n\"Wreck sites,\" she said ominously.\n\n\"How can you tell?\" Jade asked her curiously.\n\n\"I've spent hours poring over sensor readings for sites of pirate attacks, and then there were the Ashanath victims of the Drakkar raiders. I recognise the debris patterning,\" she said soberly.\n\n\"Military ships?\" John asked her pensively.\n\n\"No, civilians I suspect, probably lone merchant vessels that were picked off by long range probing attacks,\" Calara said, studying the nearest solitary wreck and its sensor profile.\n\n\"Well that explains the complete lack of civilian ships around at least. It looks like everyone is giving this place a wide berth now,\" Alyssa concluded.\n\nThe sense of anticipation rose as they closed on their destination, and it came as a relief when the Invictus finally dropped out of hyper warp, arriving unscathed at the Iota-Leonis system, home of Port Medea. Alyssa displayed the system and tactical maps in the centre of the bridge, and the bright blue-white glow of the Class O star appeared, centred on the map. Iota-Leonis had no habitable planets, but there were several gas giants orbiting the star, and according to the tactical map, these were heavily utilised by numerous gas mining facilities and refineries. Port Medea was a substantial Terran Federation starport, and was in orbit around a volcanic planet in the fifth orbital path around the star.\n\nTheir sense of relief was immediately shattered, when the tactical map suddenly displayed an overwhelming riot of sensor data, as the sensor readings were processed and updated on the map.\n\n\"What is all that?\" Dana asked in amazement, as she gazed up at dozens upon dozens of active ships in the system.\n\n\"We've arrived right in the middle of a major attack!\" John said in alarm. \"Calara, I need a summary. Are we in any immediate danger?\"\n\nThe brunette stared up at the map, cataloguing and analysing the vast amounts of data being gleefully displayed by the computer from the sensor data. Target vectors and flight paths from the combatants became clear, and she began to ascertain the attack plans of the Kintark forces.\n\n\"It's a carrier led strike force,\" she began, looking at the distant sensor readings at the edge of the map. \"It looks like a heavy carrier, supported by a cruiser class vessel and a few dozen destroyers. They've been engaged by the garrison ships from Port Medea, but it looks like the Terran Federation forces are outnumbered.\"\n\n\"What are they targeting?\" John asked her, his eyes narrowing as he stared at the map.\n\n\"The carrier launched two wings of bombers: one is going for the refineries, the other is chasing a group of Terran Heavy transports,\" Calara replied, pointing at the Kintark bomber wings on the tactical map. \"There's also a wing of dropships heading for the starport!\" she added in alarm.\n\n\"Why aren't the Port Medea CAP fighters intercepting them?\" John asked with a concerned frown.\n\n\"They're overwhelmed by the Kintark fighter wings,\" Calara replied. \"There's too many for them to deal with. John, we have to help them!\" she pleaded.\n\n\"We won't be able to intercept all three groups in time,\" Alyssa said sombrely.\n\n\"I need cold analysis Calara, which targets have the most strategic value,\" John ordered her sternly.\n\nThe brunette's eyes darted up at the map, and she calculated the impact that losing each of the targets would make to the Terran Federation forces in the Dragon March.\n\n\"We can't lose Port Medea, it's the main medical station and staging site for the entire region. If we lose the refineries, refuelling our forces will be much harder, and will have almost the same impact,\" she said, before glancing at the fleeing heavy transports, her eyes filling with remorse. She then looked up at him and said in a clear voice, \"Only the transports have no significant strategic value.\"\n\nJohn met the brunette's gaze and nodded, before turning to look at the blonde on his right. \"Alyssa, bring us about on an intercept course against the bombers targeting the refineries. Once they're eliminated, we'll wipe out the dropships.\"\n\n\"What about the transports?\" Dana asked plaintively. \"Can we help them too?\"\n\nAs if on cue, a warning light began to flash on Alyssa's console, indicating an incoming hail from the transports. She glanced at John and he nodded. She pressed the button and the viewscreen flickered, a panicked naval officer appearing in front of them. \n\n\"Thank god you're here!\" the man gasped with relief. \"We're evacuating the wounded from Port Medea, there's hundreds of marines and naval personnel on board. You've got to protect us from those bombers!\" he said, his voice riven with fear.\n\nJohn darted a glance at Calara, who shook her head slightly, her face ashen. Despite the shocking news that there were hundreds of troops aboard the transports, it still didn't raise their strategic value above the other targets. His face took on a grim cast, and he was about to respond to the transport captain when Jade spoke up. \n\n\"I can take out that bomber wing with the gunship,\" the nymph said in a determined voice.\n\n\"If I make a slight course correction, Jade can make it in time to have a chance, but it's not going to leave us much time to intercept the dropships going for Port Medea,\" Alyssa cautioned him.\n\nJohn looked at Jade, his face showing a flicker of worry before he hid the emotion, and turned back to face the transport captain. \"I'm sending a gunship to escort you to the jump point, captain,\" he said in a firm voice.\n\n\"One gunship! You can't be serious?! There's six bombers on an intercept course, one gunship can't protect us from that many. You need to defend us with your cruiser too!\" he pleaded desperately.\n\nJohn's face turned into a steely mask as he replied, \"Sorry Captain, we've got other problems we need to deal with. You're in good hands though, I'm sending an ace pilot in the gunship.\"\n\nThe transport captain began to object again, but after a glance from John to Alyssa, the viewscreen went dark abruptly. Jade rose to her feet, and strode purposefully up the ramp towards the grav-tube, but John moved faster as he darted down the steps to intercept her, and pulled her into his arms.\n\n\"You better stay safe,\" he told her firmly. \"I'd be a very disappointed master if anything happens to you. I have plans for us, remember?\"\n\nJade stared up at him, her eyes flashing with excitement. \"I won't let you down, I promise,\" she answered him vehemently. They kissed fiercely for a brief moment before he let her go, and she dashed into the grav-tube, waving goodbye as she descended in the red glow.\n\nWith a heavy heart, John turned, and walked back up the steps to the Commander's chair. He could see on the tactical map that the Invictus had altered course slightly, and was now racing towards the bomber wing that were on an attack course for the heavy transports. Alyssa had powered up the massive engines to full power, and the sleek and deadly assault cruiser was closing the distance at an impressive speed. A warning light appeared on his console, that indicated the hangar door was opening, and a few seconds later, Jade contacted them on the intercom. \n\n\"Raptor clearing the Invictus hull in five seconds,\" she informed them in a calm voice.\n\n\"Take care, Jade!\" Alyssa said in a worried voice.\n\n\"Don't worry, I've got a promise to keep!\" she said in a cheerful voice, and then the gunship roared away, flying on a direct intercept course towards the incoming bombers.\n\nAlyssa pressed a button to close the hangar bay door, whilst swinging the Invictus around to intercept the second bomber wing. \"Two minutes until we're in range,\" she said after checking the distance on the map.\n\n***\n\nJade flipped up the safety switch on her flightstick and began cycling through the bombers, targeting each in turn with a glance, so that the optical-target-acquisition HUD could lock on and track them. The Raptor was much faster than the Invictus, and now that the nimble gunship was free of the huge assault cruiser, Jade was able to rapidly close the distance on her targets. The targeting system displayed a zoomed in view of the closest bomber, and the sharply angular attack craft was coloured an iridescent green, the armour plating shimmering with an odd pearlescence. \n\nThe targeting reticle flashed red as the Raptor closed within range, and she pressed the thumb button on the flightstick, and fired the laser cannons. Bright orange laser blasts fired out and tore into the bomber, blowing it apart in a single shot. She rolled the gunship and pulled up to avoid the debris from her kill, and the rest of the bomber wing flew past, doggedly pursuing the slow moving transports. Jade yanked back on the flightstick, making the Raptor execute an extremely tight turn, the retro-thrusters flaring to adjust her course. At the same time she pulled the trigger on the stick and the six turreted Gatling lasers opened up, streams of laser bolts cascading out to strike the passing bombers, as the turrets auto-tracked the next targets. \n\nThe bombers were too small to be equipped with shields, and the laser fire ripped into their shimmering armour, gouging steaming scars through the plating. The armour seemed to be mildly reflective, but the sheer volume of fire from the Gatling lasers took their toll, eventually melting through the plating and then scything through both bombers, causing each to explode.\n\nNow that she was in the rear arc of the remaining three ships, aft mounted plasma guns opened up from the bombers, sending glowing pulses of green plasma fire towards the Raptor. Plasma was highly effective against shields, and the shield strength on her gunship began to decline rapidly. Jade began to dodge and weave, making it much harder for the bomber gunners to hit her ship with the searing plasma bolts. Unfortunately the targeting computer that controlled automatic fire on her gatling lasers, seemed to be having trouble landing consistent hits, what with all the wild evasive manoeuvres she was performing. The laser bolts that did hit, were scattering impact craters all over the rear armour plating of the bombers, and therefore not cutting through to cause significant damage.",
        "Jade pressed a button, switching weapon fire to manual, and then stopped her dodging and let rip with all six gatling lasers on the leftmost bomber. Seconds later the bomber spiralled out of control as one of the wings was cut off cleanly and it yawed away to port. She began to duck and weave again, but her momentary pause had cost the shields dearly. A quick glance at the shield strength display, showed that they were now down to 37%. Even more alarming was that the bombers were rapidly approaching torpedo launching range, and there were still two left for her to eliminate.\n\nRepositioning her gunship to target the next one, she opened up with all her gatling lasers, firing the two shoulder mounted laser cannons as well. The bomber exploded in a bright orange explosion when the laser blasts hit, scattering shimmering green debris in a wide radius. Red warning lights began to flash, signifying that her shields were out, and she rolled the gunship to the side, completing two full rotations before she was lined up with the last bomber. She noticed the torpedo launching bay was now open on the enemy ship, and she opened fire with everything she had, gritting her teeth as plasma bolts lashed into the Raptor, melting long burning gouges through her armour. The gunship rocked with an explosion as the starboard Gatling laser was hit and blown apart, but her returning fire ploughed into the Kintark bomber and cored straight through, before blowing out the cockpit, and instantly killing the crew.\n\nJade slumped back in her chair, and blew out a sigh of relief, a happy grin on her face. She was sure Dana wouldn't be happy about the damage to the gunship, but she felt a surge of elation that the transports, and all those people onboard, were now safe. She was about to contact the transports to tell them they were clear, when a warning claxon sounded out, alerting her to an enemy ship gaining a missile lock on her. She instinctively cranked the Raptor up to full speed and began to dodge, before being able to spare a few seconds to glance at her tactical map to see what was happening. \n\nIn her haste to engage the bombers, Jade realised she hadn't noticed a wing of Kintark fighters that had raced to the bombers defence. The Raptor trembled from enemy weapon impacts, and she winced as damage control showed plasma hits to the rear of the gunship. These fighters might have got there too late to save the bombers, but she realised they now seemed eager to get their revenge on her!\n\n***\n\nThe Invictus bore down on the last bomber wing, intercepting the six Kintark attack craft that had targeted the gas mining stations and refineries. With the change of positioning to launch the Raptor, they were coming in at a much steeper attack angle against the bombers, and with much less time to take them down.\n\n\"We're only going to get one shot at this,\" Alyssa warned Calara. \"Once we overshoot, by the time I bring us around to follow them, they'll be in firing range on the refineries.\"\n\n\"I've got it, don't worry,\" Calara said confidently, looking through the holographic targeting matrix at the wing of bombers. Although the bombers were far too small a target for the targeting computer to be able to lock on with the massive beam lasers, the brunette lined them up manually, narrowed her eyes as she concentrated, and then unleashed their devastating firepower. Three of the bombers were instantly vaporised by the coruscating orange beams, and she immediately switched the fire selector to laser cannons while the beam lasers were cooling down.\n\n\"You shouldn't have been able to do that!\" Dana said in surprise, after watching the Latina using her incredible marksmanship to take out the relatively tiny bombers with the main laser batteries.\n\n\"We're in a hurry, and it's faster this way,\" Calara replied, shrugging nonchalantly.\n\nJohn chuckled in amazement, and Calara turned off the holographic targeting grid, deactivating the distracting \"No target\" warning message that kept flashing repeatedly. She then began to manually fire the twelve front facing laser cannons, and a cascade of laser bolts ripped apart the remaining bombers, long before the Invictus had even closed within range to use the Gatling lasers.\n\n\"So much for needing the defence grid for bombers!\" Alyssa laughed, as she brought the Invictus around to head off the dropships. Her laughter died as she looked at the dropships, and calculated how long it would take to intercept them.\n\n\"What's wrong?\" John asked her, sensing her disquiet.\n\n\"The dropships have sped up, we aren't going to be able to catch them in time!\" she replied in alarm.\n\n\"They must be burning out their engines to get there before we catch them,\" Dana nodded grimly. \"I'll divert more power to engines too, but we'll only be able to do that for ten seconds or we risk a burnout.\"\n\n\"We can't afford to get stranded here, this warzone is too hot. Give us increased thrust for ten seconds!\" John ordered the redhead.\n\n\"Done,\" she said as she flipped off the safeties on the energy distribution hologram, and pushed more power to the main engines. The Invictus charged forward, as though desperate to get to grips with the marauding dropships.\n\nThe Kintark dropships were sharply angular craft, covered in the same green iridescent plating as the Bombers had been. They raced towards Port Medea, flying recklessly fast as their engines glowed white hot with the strain. When the dropships got within range, the Port Medea defence grid opened up, showering the enemy ships in a curtain of laser fire. Unfortunately their armour plating was thick, and their shields strong, so only one of the incoming dropships was destroyed by the orange coloured laser fire. Another one of the dropships spontaneously exploded, the rippling detonation coming from the rear of the ship, as the overloaded engines finally ruptured under the strain. The rest of the dropships finally reached their target, and then split up, moving to board the space port from different entry points.\n\n\"We can't let that many land, the garrison troops will stand no chance. Calara can you take any out?\" John asked her urgently.\n\n\"I can't risk using beam lasers, the beams will punch through any dropship I destroy, and hit the station,\" the brunette explained. \"Head for the top of the spaceport Alyssa, we'll have to give up on the others, but I might be able to get those top two before they dock.\"\n\nAlyssa nodded, and made a course correction that would bring them in on a beeline for the hangars at the top of the station. The hangar bays were the type that had no outer doors, and were oxygen sealed by force fields. The Kintark dropships raced in on their final approach, travelling far too quickly for a safe landing, but desperate to escape from the incoming assault cruiser. Calara opened up with the laser cannons, causing one of the dropships to explode in a shower of green metallic debris, but just crippling the engines on the other one. The dropship barrelled into the hangar, carried forward by its initial momentum, before slamming into the far wall and shearing in half against a protruding bulkhead. The shattered ship fell to the floor in two pieces.\n\n\"What now?\" Alyssa asked John curiously.\n\n\"We suit up and go rescue our interviewee, we've got a vacancy to fill,\" John said with a smile.\n\n\"Jade's in trouble!\" Calara said in alarm, as she stared up at the tactical map. \"She's got fighters all over her!\"\n\nJohn's smile dropped immediately. \"Dana, drop us off anywhere big enough for the Invictus to dock. When we've disembarked, you two will have to go rescue Jade.\" \n\n\"You got it!\" Dana said fiercely, and took over flight control of the assault cruiser. \n\nHe rose to his feet and vaulted over his console, landing lightly before he ran to the debriefing room on the other side of the bridge. Alyssa was hot on his tail, and the two of them darted into the room to get geared up for combat.\n\n\"Dana, look over there!\" Calara exclaimed. \"There's a docking collar on that refuelling arm, we can easily fit the Invictus alongside that.\"\n\nThe redhead nodded eagerly, and brought the assault cruiser around to the middle of the spaceport. She nudged the ship closer with the careful use of retrothrusters, until the ship's airlock was positioned against the docking collar. She activated the docking clamps, securing them tightly in position, just as John and Alyssa strode out of the debriefing room, now clad from head to toe in glistening black Phalanx armour.\n\nJohn slammed a clip home in his railgun, then checked to make sure the ammo counter on the weapon read 250/50, indicating that the sabot magazine was securely in place as well. He activated external audio with the optical GUI, as he jogged over to the grav-tube. \n\n\"Put me through to Rachel please, then get clear as soon as we give the signal. It's up to you two to save Jade now, but stay safe!\" he ordered them sternly, but his concern filtered through regardless.\n\n\"The same to you guys!\" Calara exclaimed, as she watched them leave.\n\n\"Don't get hurt!\" Dana called out to them, and they nodded to her as they disappeared out of sight down the grav-tube.\n\nAn image of Calara's beautiful face appeared in the top left of John's graphical interface inside his helmet. \"Putting you through now, John,\" she warned him, before her face disappeared and was replaced by a panic stricken Rachel. \n\n\"Oh god, we're being boarded!\" Rachel cried out in alarm, as she stared at the viewscreen with wide eyes. Behind her, terrified junior medics could be seen running past her bunk as they tried to get to safety.\n\n\"Stay calm, we're coming to rescue you,\" John ordered her in a firm voice. \"Where is the medics dorm in the space station?\"\n\n\"Lower decks, near the centre.\" Rachel told him.\n\n\"It's not safe for you there, get up to the top of the space station right now and hide! We'll be with you as soon as we can,\" he told her curtly, as he and Alyssa jogged up to the airlock that separated the Invictus from Port Medea.\n\nRachel nodded, a determined look set on her pretty face, and she darted away, not bothering to turn off the comm channel. \n\nAlyssa had activated their airlock using the DNA reader, and once they had stepped inside, John attached his decryption device to the spaceport airlock, which spiralled open a few moments later. He retrieved the device and then closed the Invictus airlock behind him, while Alyssa hit the button that closed the spaceport airlock as well. \n\nJohn opened a channel to the Invictus bridge. \"We're clear Dana, remember what I told you!\" he said firmly as the image of the feisty redhead appeared in the GUI.\n\n\"Stay safe, we know,\" her amused chuckle came back to him over the comm channel, and she waved him goodbye. \"We love you both!\"\n\nJohn blew her a kiss, then ended the channel. \"Let's see if we can link up with station defences and help repel the boarding action,\" he said to Alyssa decisively.\n\n\"You got it,\" she replied confidently, before glancing at his back as he began to run down the corridor. \"No sword today?\" she added inquisitively, before following after him.\n\n\"I made a promise to a beautiful woman, that I wouldn't use it again until I knew what I was doing,\" he replied playfully.\n\n\"Well let's just hope the Kintark don't love melee combat as much as the Drakkar did,\" she said with a laugh.\n\n***\n\nJade jinked and weaved her gunship, but despite her phenomenal piloting skills, the Kintark fighters were just too nimble for her to shake. She glanced at the tactical map to make sure there was nothing else chasing the transports, and then turned the Raptor so that she was racing away in the opposite direction from the fleeing Terran ships, bringing the entire wing of Kintark fighters chasing after her.\n\nThe gunship shuddered again as it was hit once more by incoming plasma fire. The shots didn't punch through her armour thankfully, but she didn't know how much longer it would hold out. The nymph reactivated the auto-targeting on the turrets, and while she just concentrated on dodging, the port and spinal Gatling lasers opened fire, sending an unending stream of orange laser bolts at the pursuing fighters. The shots caught a Kintark fighter pilot by surprise, and his fighter was slashed by laser fire, melting through the canopy and killing the lizard pilot in an explosive decompression. Unfortunately his five wingmen were eager for blood, and Jade had to dodge frantically to avoid their returning fire.\n\nThe comm interface flashed, showing an incoming call from the Invictus.\n\n\"I'm kinda busy at the moment guys,\" she said through gritted teeth, as she executed a series of extremely high G turns.\n\n\"Come about on a heading of 040,\" Dana said urgently, \"We're on our way!\"\n\nJade nodded, too busy to speak in reply, and yanked the stick back to perform a course changing Immelmann. She cursed when the Raptor got hit again as she pulled up, the Kintark pilot's carefully aimed shot stitched deadly plasma fire across the top of the gunship, and disintegrated the upper spinal Gatling laser turret. Down to only two turrets that could still fire back, her reduced laser fire still managed to clip a chasing fighter in the engine, slashing through the thinner armour at this unusual firing angle, and punching deeper into vital components. There was a minor explosion, and the fighter began to fall behind, as black smoke began to gout from the heat exchangers. \n\nJade levelled out the gunship, and now headed directly for the Invictus, which was racing to her rescue. Sirens blared in the cockpit, warning of an incoming missile, and she savagely yanked the stick to the side, and activated flares. The missile slipped under the Raptor's hull, missing her by less than a metre as it rocketed past her, and then exploded with a bright green detonation, big enough to buffet the gunship.\n\n\"Let's just hope I can stay alive long enough for you to get here...\" Jade muttered under her breath, as she focused intently on staying out of the fighters' gunsights.\n\n***\n\nJohn sprinted through the wide corridors into the deserted shopping district of the spaceport, with Alyssa following close behind in his wake. He could hear the unsettling sounds of piercing screams from just up ahead, and staccato exchanges of gunfire echoed eerily down the corridor. He burst out into a much larger plaza, and found himself standing on the second level with broad gantries sweeping around and above the open area beneath them, shops built into the curving walls around the edge. The shooting was coming from down below, and it looked like one of the Kintark boarding parties had fought their way into this retail zone.\n\nHe approached the railing to get a better vantage point, and saw that he was overlooking a pitched battle between heavily armed and armoured Kintark marines, and a small group of station security. The Terran troops were equipped with standard issue assault rifles and light tactical armour, and were hunkered down in a coffee shop, huddled behind overturned tables and the pockmarked counter. \n\nAlyssa bounded up beside him, and ducked down at his side behind the railing as she got her first look at a Kintark warrior. *Hey! I thought you said they were only seven foot tall?* her surprised thoughts came to him, as she stared at the hulking lizardmen below, and in front of them. *They look a hell of a lot bigger than that!*\n\nJohn shrugged helplessly, as his eyes darted from one bulky Kintark warrior to another. They were fanning out now, looking to try and flank the desperate group of Terran troopers who were fast approaching a last stand. A couple of the Lizardmen were firing long bursts with plasma guns, keeping the beleaguered defenders pinned behind cover. The bright green pulses of high energy plasma blasted steaming gouges out of the coffee shop counter, forcing the Terrans to keep their heads down, and stopping them from firing back at the rest of the approaching Kintark.\n\n*They're dead unless we do something right now,* John thought to Alyssa, who simply nodded eagerly. *Start at the back and work forward, you take the left.*\n\nAs one, they leaned over the railing, and aimed at the two lizardmen at the back of the group, who were providing covering fire for their squadmates. John sighted the back of the Kintark warrior's mottled red head in his targeting reticle, the zoom on the scope allowing him to see the heavy armoured scales that protected its cranium. He pulled the trigger, and the railgun murmured \"Prrrkow,\" as his three round burst slammed into the creature's head, and splattered its brains all over the tree it was standing behind. He moved quickly on to the next Lizardman to the right, lining up his shot and then decapitating it with another well aimed burst. He could hear the quiet purr of Alyssa's railgun to his side, as she dispatched one hostile alien after another, and they swept up the lines of advancing Kintark forces, silently devastating their squad before they even knew they were under attack. \n\nAfter ten seconds with no supporting fire, one of the lizardmen on the right turned to look behind it to see what was happening, and was stunned to see his squad mate's head explode right in front of him. He spotted the telltale flash of weapon flares, noting that they came from a couple of sinister black armoured figures that lurked on the balcony above them, and he began to fire back wildly. \n\nThe carefully planned flanking manoeuvre turned into complete chaos as the pinned Terran forces were emboldened by the halt in suppressing fire. The bravest of the troopers poked his head above the counter and then shouted in alarm, causing the rest of his squad to rise up from cover, and open fire on the exposed Kintark warriors. A trooper who'd been huddled behind an overturned table, unloaded his auto-shotgun on a Lizardman at practically point blank range, hitting the alien with dozens of rounds at just over ten metres away, and sending it sprawling backwards from the gut wrenching impacts. \"Eat that, you cold blooded bastard!\" the man yelled victoriously, but his shotgun rounds were designed for unarmoured opponents, and although the Lizardman was knocked on his back, his lustrous green armour proved tough enough to protect him from injury. \n\nThe Kintark warriors darted for cover, hiding behind kiosks, hedgerows, and trees in the once pleasant plaza. They began to open fire on the Terran forces, not quite fully flanking them yet, but still exposing them to a deadly crossfire. Unfortunately for the Trooper with the shotgun, one of the Lizardmen from the other group took careful aim and shot him in the back. Bright green plasma fire seared through the man's torso, cutting off his scream as it burned out his lungs.\n\nJohn and Alyssa fanned out, moving rapidly along the balcony on opposing sides, and vanishing out of line of sight of the one Kintark warrior who had spotted them. The Lizardman shouted a warning to his squadmates in a loud sibilant voice, but when they looked back they could see nothing on the balcony above, and assumed their colleague had snapped under combat stress.\n\n*Let's finish this up,* John thought to Alyssa, and they reloaded their magazines in preparation. She responded instantly as soon as he acted, both leaning over the railings on opposite sides of the plaza, and raking the remaining Kintark forces with high velocity rounds, firing through the entire clip on full auto. Caught completely out of cover by fire coming directly above them, the lizardmen were ripped apart by their accurate shooting, and when the railgun magazines finally clicked as they ran dry, only a couple of Kintark soldiers still twitched and writhed below them. \n\nAfter a quick reload, John and Alyssa finished any wounded lizardmen with headshots, and then moved steadily around the balcony to the ramps that would take them to the level below. ",
        "\"Incoming friendlies,\" John shouted to the Terran forces, his voice amplified by the external speakers, so that it boomed across the site of the bloodbath.\n\nThe handful of Terran troopers poked their heads above cover, watching warily for any signs of the Kintark. They were astonished to see that the lizardmen forces had been annihilated, thick yellow blood splattering the corpses of their fallen enemies. Standing warily, they immediately noticed the two black armoured figures that approached them boldly from opposite ends of the plaza.\n\n\"Who are you?\" one of the men asked them warily, as John and Alyssa strode up purposefully.\n\n\"Commander Blake, Special Forces, I'm here to stop the Kintark boarding action. Who's in charge here?\" he asked the men, who turned to look at one another in confusion for a few moments before one of them raised his hand cautiously.\n\n\"My names Corporal Gibbons. We lost our lieutenant when we first engaged them, and Sergeant Deran ordered us to fall back here, but he just got killed,\" he said sadly, nodding at the dead shotgun wielder.\n\n\"Any reports on where the other boarding force is at the moment?\" John asked quickly.\n\nCorporal Gibbons shrugged helplessly. \"Things went to shit pretty fast. We moved to engage this lot, and got our asses handed to us. I haven't heard anything from Central Command for the last couple of minutes,\" he replied, tapping the headset he wore for emphasis.\n\n\"You men hang tight, we'll head to the upper levels,\" John said looking around the plaza, and spotting some elevators on the other side of the open area behind the devastated coffee shop.\n\nHe looked towards Alyssa who nodded, and fell in beside him as they jogged across the plaza. The Terran troops watched them leave in amazement, their mysterious saviours departing as quickly as they had arrived.\n\n***\n\nJade gasped as the rear end of the Raptor on the damage control hologram flashed a bright red. The gunship had shuddered violently as one of the relentless Kintark fighters managed to hit the starboard engine, blowing it out completely. She glanced at the approaching Invictus on the tactical map, but even though they were racing directly towards her, the Kintark ships were still out of range of the defence grid. Now down to only 50% engine power, Jade realised it was all over, and she braced herself for the final coup de grace.\n\n\"Pull up, now!!\" Dana suddenly yelled over the comm, and Jade did exactly that, jerking the flightstick back sharply so that the nose of the Raptor pulled straight back.\n\nThe beam lasers on the assault cruiser lanced out, fired at the extreme edge of their range, and just missed the Raptor as Jade pulled the gunship clear. The six throbbing beams of amber energy incinerated the pursuing fighters in an instant, and all that was left when the beams winked out again a few seconds later, was a tiny amount of glowing debris, the rest of the Kintark ships completely vaporised.\n\n\"Let's get you back on board,\" Dana said to Jade with relief, before the redhead let out a big sigh. \"But we better not let John see the Raptor till I've patched it up, he won't be happy how close that was.\"\n\nJade's answering laughter had a slightly hysterical edge to it, as she realised she'd been only seconds away from total disaster, and she revelled in the pleasure of simply still being alive. She brought the battered gunship around to face the slowing assault cruiser, and when the hangar bay door opened up, she landed the Raptor carefully in the centre of the big hangar. Finally safe and sound once more, the nymph slumped back in the pilot's chair, as her arms began to shake with the adrenalin. She took a big heaving breath, and then rose to go and rejoin the other girls, so that she could thank them properly.\n\n***\n\nThe elevator let out a jaunty chime as they arrived at the level that was helpfully marked as Administration, and the doors opened to reveal a scene of destruction. Lights flickered intermittently, briefly illuminating the devastated office area, before plunging them into darkness once more. There had been a pitched battle here, and the shattered windows, overturned desks and a crazed mosaic of impact craters on the walls, attested to the ferocity of the fighting. The defending forces looked like they had accounted for themselves well, with several Kintark corpses sprawled on the ground in big pools of yellow blood, their bodies riddled with dozens of small exit wounds from armour piercing rounds.\n\n*Switch to infra-red,* John thought to Alyssa, as he changed his scope settings himself. The room was then painted in shades of blue, with only the overhead lighting and plasma scarring on the walls showing any residual heat. \n\nThey pushed further into the admin complex, reaching the defensive line where the Terran troops had stood their ground. John's face set in stone when he saw the charred corpses of the slain Terran soldiers, the brave men horrifically burned by plasma fire. There were dozens of spent magazines discarded on the floor, telling their own tale of the valiant efforts to repel the invaders. He heard the distinctive sound of further gunfire from up ahead, and he broke into a loping run as he closed the distance, with Alyssa sticking right by his side.\n\nThe Terran forces had fallen back and were retreating up a broad staircase, whilst being relentlessly pursued by the Kintark warriors. The lights were almost completely out in this section, with only the sporadic bursts of assault rifles, or the green glow of plasma fire, offering any real illumination in the room. The light from the gunfire cast frightening shadows across the fiery hellscape, while the burning plasma lit a fel green hue over the desperate battle. One of the troopers sprinting up the stairs was hit by a couple of plasma bolts, and although miraculously the man was still alive, his clothing caught fire, and he staggered into the railings before toppling over them in a verdant blaze. His harrowing death screams echoed around the room, before they came to an abrupt and merciful end. \n\nJohn brought his railgun up to a firing position as they moved deeper into the administration area, and swept from left to right looking for targets. Despite the dead shotgun wielder's assertion, the Kintark seemed to be running very hot indeed, and they showed up in the scope as bright red silhouettes. As before, John and Alyssa started with the stragglers and worked forwards, silently executing one hulking Lizardman warrior after another with precise bursts, as they stalked invisibly through the blackness like vengeful wraiths. They scythed through the Kintark forces, wiping them out to a man without the lead warriors even realising they were under attack, right up until their heads were blown apart by hypervelocity railgun rounds.\n\nJohn reloaded his weapon as he ran up the stairs, seeing no more sign of Kintark forces as he reached the top, only the backs of fleeing troopers. \"Incoming friendlies!\" his voice boomed down the hallway, amplified by the external audio in the Phalanx armour. The running troopers ducked behind cover, be it a vending machine, or a series of Holo-net booths, and peered fearfully back down the corridor to see who was shouting. John and Alyssa ascended the tops of the staircase, and the glow from the plasma impact craters illuminated their glimmering black armour in an ethereal green aura.\n\nOne of the troopers who was terrified out of his mind, fired his assault rifle down the corridor at John, but the rounds were deflected harmlessly with an odd whumping sound. \n\n\"Cease fire, or we'll be forced to neutralise you,\" John warned him sternly, raising his weapon as he approached. One of the man's more coherent squadmates slugged the trooper, knocking him to the ground, preferring him not to be killed by their rescuers. \n\n\"Who are you?!\" one of the troopers stammered fearfully.\n\n\"Commander John Blake, Special Forces. We've eliminated both groups of Kintark warriors, and we're looking for one of the doctors who evacuated up here. Have you seen them?\" he asked firmly.\n\n\"Sure, they ran past us a few minutes before the Kintark attacked,\" another trooper volunteered, as he cautiously stepped out from behind a vending machine he'd been using for cover.\n\n\"Where did they go?\" John asked brusquely.\n\n\"Towards Central Command, but we lost contact with them a while ago,\" the man replied. \"Back down the steps, then take a right.\" he added helpfully.\n\nJohn nodded his thanks, then turned and sprinted back down the corridor, catching up with Alyssa who was leaping down the stairs three at a time.\n\n*We wiped out both of the squads from the dropships,* she thought to him as they darted to the right, and ran full tilt down the corridor. *What could have attacked Central Command?*\n\nBefore John could reply, they stumbled upon a slain trooper. It looked like he'd been dead for a while, as the fatal wound from the plasma gun that killed him was no longer glowing. The fallen soldier had been shot walking across an intersection, which was helpfully signposted with bold lettering on the walls, with arrows pointing to different destinations. Directly ahead was \"Hydroponics\", to their right the corridor was labelled \"Central Command\", while to the left, the signs read, \"Cargo Loading\" and \"Passenger Processing\". \n\n*Survivors from the crashed dropship,* John reasoned, as they took the right turn to find out what had happened to Central Command.\n\n*How could anything have survived that?* Alyssa asked dubiously, recalling how the critically damaged dropship had careened into the hangar before breaking in two.\n\n*I'm not sure, but any groups from below would have had to fight past those defending troopers, and we arrived just after they started running,* he answered her logically.\n\n*Makes sense,* she agreed, slotting in another full magazine.\n\nThey ran down the corridor until they reached a security checkpoint, and found that the guardsmen had been gunned down by plasma fire, while the heavily reinforced doors had been ripped off their hinges. \n\n*Uh-oh,* Alyssa's voice said in John's mind, as she noticed the crumpled and battered steel doors that had been cast aside.\n\n*Having second thoughts about not letting me bring the sword?* he asked her wryly.\n\n*Not at all! I wouldn't want you tempted to charge anything that could do... that,* she replied seriously.\n\nThey moved forward more cautiously now, checking warily around corners as they moved into Central Command. Dead Terran troopers and command staff lay slumped along their path, most of whom had been killed by plasma weaponry, their bodies badly burned. One unfortunate trooper had been ripped in half, savage claw marks apparent on the dismembered corpse, and they examined the body silently for a moment, wondering what could have caused such terrible injuries. \n\nThey moved onwards once again, and the sound of rhythmic thumping began to reach the audio pickups in their armour. The deep bass rumble of two heavy objects repeatedly colliding together reverberated down the corridor, making the hair on the back of John's neck stand on end.\n\n*What the hell is that?* Alyssa's muted voice sound warily in his mind.\n\n*I have a feeling we probably won't want to find out,* John replied, as he stepped over yet another deceased trooper.\n\nThey came to another intersection, and a dead Kintark Warrior was sprawled across the corridor, its body riddled with the small exit wounds of armour piercing rounds. The trooper who shot the Lizardman was slumped against the wall opposite, killed himself as he had tried to reload his weapon with a fresh clip of armour piercing caseless. The corridors were marked with more signs on the walls, indicating what lay in each direction. To the left was system flight control, to the right was the barracks and directly ahead was the armoury. The booming crashes were louder now, more angry somehow, and were coming from the corridor directly opposite them. \n\n*The armoury it is then,* John's sardonic thoughts reaching Alyssa clearly, and her nervous chuckle reached his ears.\n\nIt looked like the rest of the troops based up at Central Command had made their last stand here, using the reinforced security desk for cover. They had accounted for themselves admirably, having killed another four Kintark warriors, leaving the corridor beyond sprayed liberally with thick yellow blood. Sadly they had then been overwhelmed, and the six remaining soldiers had been ripped apart with a savagery that almost defied belief. Dismembered body parts were scattered with abandon around the room, the interior painted red with blood and ichor. There were two Gatling laser turrets here as well, but the power cuts that seemed to be affecting this whole level had rendered them inoperable, and their barrels hung low, as though mourning the slain troopers before them.\n\nThere was an upper level to this room, which overlooked the charnel house at ground level. Green armoured figures could just be seen moving around up there, with the hissing sibilant speech of the Kintark echoing down to John and Alyssa from the room above. There was an open-sided loading lift to the side of the room, but as John glanced that way, it wasn't the lift that held his attention. Huge rents had been gouged out of the metal walls; long deep furrows in sets of three, that made it look like something had clawed its way up, and then onto the floor above.\n\n*We can't activate the lift, we'll lose the element of surprise.* Alyssa cautioned John as he studied the wall. \n\n*I was thinking of something a little more unorthodox*, he replied, before moving over to the wall swiftly and silently. He lifted an armoured boot, and placed it on the wall speculatively, activating the magnetic field in the boots via a command in his optical HUD. He leaned into the raised leg and then moved awkwardly to place his other foot on the wall, the strong magnets holding him in place. John straightened himself up, and then began to slowly walk up the wall, the magnets in his boots keeping him secured against the wall. Alyssa darted over to join him and after a few tentative steps, she was standing by his side, looking like her feet were glued to the metal surface.\n\n*Well, this feels weird,* she laughed, before they cautiously walked up the wall to get a better vantage point. \n\nIt took a little getting used to, looking at the room sideways, but they could see five Kintark warriors waiting around idly, looking at a massive reinforced bulkhead. The cause of all the mighty crashes now came into view, and Alyssa gasped as they saw it for the first time. The creature was huge, at least fifteen feet long, with four muscular legs, a sturdy tail, and a body covered in thick red scales. It looked like a massive, heavily armoured prehistoric beast, and the creature was battering the heavy door by rearing up on its hind legs and then slamming its scaled, blocky head into the trembling portal. There was a long jagged scar across the creature's back, its scales splattered with dried yellow blood. It looked at a glance like the wound had sealed over however, and the armour plating was intact.\n\n*What the fuck is that?!* Alyssa swore in alarm.\n\n*I have no idea,* John replied. *We have to act quickly though, that door isn't going to last much longer.*\n\nThey raised their railguns and took careful aim at the Kintark warriors. The next time the huge lizard slammed into the door, causing an enormous deafening crash, they opened fire. Allocating targets instantly by telepathic communication, they efficiently dispatched the Lizardmen with rapid bursts from their weapons. The surprised Kintark didn't have time to even shout a warning before they were all gunned down in a matter of seconds. John and Alyssa swung their weapons onto the Lizard and then opened up, the high velocity rounds pounding unerringly into the hulking creature. To their shock, the storm of hollow point bullets deflected away harmlessly from the incredibly thick and resilient scales, until the ominous click of empty magazines reached their ears.\n\nThe Lizard swung around, and looked at them with furious eyes, the dark glimmer of otherworldly intelligence quite apparent in the way it studied them. It let out a ferocious roar and then charged towards the edge of the platform leaping out with scythe like claws outstretched. Alyssa released the magnets in her boots, and dropped the ten feet to land cat-like on the floor, narrowly avoiding the claw swipe in her direction. She landed with a loud clang, and then tumbled away in an acrobatic roll, before running back the way they had arrived. \n\nJohn was still secured to the wall, and the massive lizard clung to him, clawing and biting at his black armoured torso. He hung there for a moment until Alyssa was clear, and then released the magnetic fields in his own boots, so that he and the lizard fell to the floor in a deafening crash. The huge reptile clawed and gouged at him, but his armour was extremely durable after Alyssa's psychic manipulations, and the beast was unable to penetrate the Invictium plating.\n\nThe two combatants, man and beast, fought desperately as they thrashed around, locked in mortal combat. John was stronger than the enormous scaled creature, but he lacked the huge sharp claws that the Lizard was using to great effect. While he grabbed it by the scaly throat to stop being bitten, and restrained another fore-claw with his other hand, he was powerless to prevent the lizard from scratching and tearing at his armour with its free fore-claw and equally dangerous back legs. His armour was proving to be incredibly resilient, but even so, the razor-sharp blade like claws were taking their toll, rending huge furrows in his shoulder and leg plating.\n\nThe lizard rolled over, managing to pin John under its heavy bulk, and it's hideous reptilian visage sneered down at him contemptuously. \n\n\"Pitiful Terran! I'll dessstroy you jussst like I did all the other pathetic troopersss who dared to face me!\" the Lizard snarled in a deep sibilant voice. \"Witnesss the might of the Royal Guard!\"\n\nJohn was stunned that the creature was not only intelligent, but apparently sentient, and quite capable of speech. He wrestled with the creature trying to throw it off him, but it was difficult to get leverage against so big a foe. It reared back with its free foreclaw raised to deliver a killing strike, and it's huge reptilian eyes glinted with anticipation.\n\n*Stay down!* Alyssa ordered him as she charged back into the room. She was holding the magazine that she had retrieved from the dead trooper in the corridor, and she slammed the armour piercing clip into her railgun. \n\nThe monstrously large Kintark reptile looked up at her when she ran into the room, and let out a hissing, barking laugh. \"Take your bessst shot Terran!\" it goaded her, supremely confident in the impregnability of its scaled hide. \n\nAlyssa brought the railgun up to her shoulder, and fired on full auto, raking the huge beast with high-velocity rounds. The reptile stared down in shock as the armour piercing rounds slammed into its chest, punching straight through and drilling into the wall behind it. Thick yellow blood spurted out from the perforated creature, and it twitched and writhed as she emptied her entire clip into it.\n\n\"How was that, good enough?\" she asked the Kintark beast, as it toppled over on its side.\n\nThe creature tried to reply, but just gurgled instead, its eyes rolling up as it collapsed on the floor.\n\n\"Nice work, honey. Perfect timing in fact!\" John said with a grin, as he pushed the dead lizard's arm off his chest.\n\nAlyssa tipped an imaginary hat at him, and the pair of them began to laugh with relief as he clambered to his feet.\n\n\"Dana did warn us that AP rounds could stop a tank. I never thought I'd be using them to hunt overgrown lizards!\" she exclaimed, shaking her head. ",
        "\"These Kintark are nothing like the ones I met during my early trader days,\" John said, carefully lifting the felled beasts forearm which had covered its face, so that he could study it more clearly. \"The Kintark merchants I met were about seven foot tall, and had fairly slim builds. These guys must be some kind of elite troops.\"\n\n\"We seem to have an uncanny knack for finding hideous space monsters to fight with.\" Alyssa said wryly.\n\n\"That we do,\" John agreed, as he reloaded his weapon. \"Let's see if we can do some rescuing now, though.\"\n\nThey walked over to the loading lift and pressed the button that brought the platform down to the ground floor. They stepped onto the square lift, and then began to ascend steadily to the upper level, the battered reinforced bulkhead coming slowly into view. John walked up to the door, and examined the huge indentations in the steel that the enormous Kintark lizard had caved in with its head. \n\n\"The doors have been badly warped,\" he said, looking at the buckled doorframe. \"I don't think this will open normally any more.\"\n\n\"Have at it then, Hercules.\" Alyssa replied, using Dana's apt nickname for her lover.\n\nJohn put his railgun down to the side and then approached the reinforced armoury entrance, studying it carefully. He saw that the thick steel door had started to come away from the frame at the top right, so he took careful hold, and then began to pull back. He concentrated intently on the heavy steel portal, his muscles bulging as he tugged and strained. With a grinding tortured shriek, the metal door began to bend backwards, allowing him to readjust his grip, and apply more of his strength. When he savagely ripped the mangled, armoured steel away from the opening, terrified screams from inside the vault reached his ears. \n\n\"It's okay, we're here to rescue you!\" he called out to the people cowering within. \n\nNow that the door was out of the way, they could see that there were at least fifty people huddled inside the armoury vault for safety; an eclectic mix of civilians, a few starbase personnel and a handful of doctors, identifiable by their white coats. Alyssa took off her helmet, and walked over to stand at John's side. When the people in the room saw it was a beautiful woman in the sinister black armour, their faces began to light up with hope, the fear and worry falling away. John was just about to speak, when the survivors' faces suddenly twisted up in terror, and they began to scream once more.\n\n\"What's the ma-,\" Alyssa began to ask them, before the grating sound of scrabbling claws reached their ears, causing them to whirl around.\n\n\"Thanksss for opening up their bolthole, I'll deal with them later!\" The Kintark Royal Guard gloated as it clawed its way up onto the platform. It then looked at Alyssa and snarled, \"And to anssswer your quessstion, that wasssn't good enough! Not even clossse Terran!\"\n\nJohn looked on in amazement, as the dozens of yellow spattered impact wounds on the creature's torso finished closing up, the armoured scales reforming when they touched together.\n\n*No more AP rounds!* Alyssa thought to him in an instant.\n\nThe huge Kintark beast swayed for a moment, it's long tail balancing behind it, before it pulled itself completely over the ledge and back onto the upper level. Not wasting any time, John sprinted full tilt at the hideous reptile and barrelled straight into it, causing it to stagger backwards and scrabble for purchase as it tottered on the edge. John had landed in a crouch when he'd slammed into the creature's chest, and he wound up a huge uppercut that he launched straight into the beast's surprised face. It tipped over backwards, flailing wildly as it fell, and landed with a huge crash on its back, sprawled on the ground level once more. \n\nJohn leaped fearlessly off the ledge after it, and he dropped down onto the Kintark's torso, causing it to hiss in pain as his armoured body landed heavily on its chest, snapping ribs with a sharp crack. It reached up with its long claws, trying to flay him alive through his armour, but John brushed aside the bladed foreclaws and leaned in to grab the Lizards head. It thrashed around and tried to bite him, so he seized the opportunity to grab it's open jaws in his armoured hands. When he had a good grip he began to heave them apart, and the reptile's angry expression turned into one of fear, as it began to writhe desperately to escape his grasp. He wrenched the creature's mouth unnaturally wide, and with a final surge of strength, there was a sickening crunch as he broke its lower jaw in half, causing the creature to howl in agony.\n\n\"John! Catch!\" Alyssa called out to him, and tossed his railgun over the edge of the platform. Catching the weapon in his right hand, he brought it around, and shoved it unceremoniously into the Kintark's mouth. \n\n\"Try regenerating this...\" he said grimly, as the hulking lizard stared up at him with wild eyes. He pulled the trigger, and the hollow point caseless rounds smashed through the soft tissue in the roof of the creature's mouth, and blew a huge hole in the back of its head, splattering its reptilian brains all over the floor.\n\nJohn rose slowly, carefully watching the creature, but it's head lolled emptily and it looked utterly lifeless. He strode up the wall using his magnetic boots, and then hopped off to land lightly on the upper level next to Alyssa. \n\n\"Nice moves, handsome,\" she said with a sparkling smile.\n\nJohn removed his own helmet, and he grinned back at her. \"Couldn't have done it without you, beautiful!\"\n\nThey kissed briefly, before turning around to face the astonished crowd of Port Medea survivors. \n\n\"Is Rachel Voss here?\" John asked hopefully, and he was relieved when the shocked young brunette stepped forward. \n\n\"John, is that really you?\" Rachel asked in stunned disbelief.\n\n\"You said you were interested in an interview?\" he asked her with a grin.\n\n\"And a hug!\" Alyssa chipped in helpfully.\n\nThe incredulous young doctor began to laugh, not quite believing what she had just witnessed."
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "psychic",
        "spaceships",
        "violent",
        "rescue",
        "alien11111",
        "bisexual",
        "lizardman"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-33"
}