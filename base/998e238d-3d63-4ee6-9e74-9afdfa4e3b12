{
    "title": "Brother's Basketball Teammate Ch. 04",
    "pages": [
        "Chapter 4: Josiah Adler\n\nMy legs weakly quaked with every step as I trudged along the grassy pavement from the tennis court to the basketball gym to wait for Ashton. It's been a while since I last caught a ride home with him but I decided that I couldn't really avoid Joss altogether, so here I was, sitting quietly on a corner, stealthily sinking my butt into the chair to evade attention.\n\nI was scrolling through my phone, occupied with different faces and coffee on my timeline, when someone sat on the seat beside me. Tomas wore a boyish smile as his arms were covered in a thin gleaming layer of sweat.\n\n\"Hey.\" he said, his smile touching his eyes as he settled into his seat.\n\n\"Hey, Tomas. What are you doing here?\" I asked, frantically looking around the court and just noticing that there were a whole lot more people in here than usual.\n\n\"Missed ya too, bud.\" he chuckled. \"How was training?\" he asked, leaning his body towards mine slightly so that he was only sitting on the edge of his seat.\n\n\"It was tiring as usual, nothing interesting really happened.\" I said.\n\n\"Aww, that sucks.\" he said before his eyes flitted subtly to my lips. The familiar heat came rushing into my cheeks, and I bit my lip\n\n\"Listen... Sorry if I kissed you last week without asking first. Hope we're good.\" he said, not looking sorry at all as a wicked smile was etched on his lips.\n\n\"Don't worry about it, Tomas. I actually kinda liked it.\" I laughed to lighten the mood but instead of laughing along, he leaned in closer and stared at me, waking all the butterflies in my stomach.\n\n\"Yeah?\" he whispered before snaking his muscular arm along the topside of my backrest, coming into contact with my back in a ghostly touch. \"Do you want me to kiss you again, then?\" he teased. I chuckled nervously. He started leaning down further to reach my lips but he was ungraciously interrupted by the piercing sound of a whistle from the court, making him jump back to his seat.\n\nI thought we were about to be called out by the coach but the he looked like he was reprimanding one of the guys in the court. My eyes travelled to the culprit, Joss, whose eyes were almost permanently transfixed in our direction. His jaw visibly tensed from the distance and his gaze cut through the thick the air as he ignored the coach completely. I looked at my fiddled thumbs while my heart skipped a beat.\n\n\"What's the matter with you, Josiah? Keep your head in the game!\" the coach's voice boomed loudly across the gym before we heard the whistle screech once again, resuming the stretching practice match.\n\n\"I better go, Leo, I might get in trouble too.\" he chuckled. \"Catch you later.\" he patted my back before half-running towards the side bench beside the court. I watched quietly as the match progressed. Joss kept looking in my direction, and I felt very self-conscious.\n\nAfter the match finally ended, I saw Ashton approaching me. I was about to get up and take my stuff with me when he interrupted me and spoke.\n\n\"Hey. Something came up and I have to take Tina home today. Joss will give you a ride.\" he casually said before he swiftly ran towards the washroom before I even had any chance to complain.\n\nI was following Joss and Denise in the parking lot as we headed towards Joss's car, only now noticing how he subtly tried looking at me through his shoulders every now and then while Denise snuggled her arms against his. I climbed into the backseat quietly as he started the car and the engine roared to life. Our eyes connected in a split second in the rearview mirror before I turned away and looked through the window as if the pale blue sky was the most interesting thing in the world.\n\nMost of the ride was peacefully quiet with only Denise talking every now and then about the random stuff she was seeing on her phone. We were rounding into an unfamiliar street, parking on the road across a huge modern bungalow before Denise unbuckled her seatbelt and reached for Joss's face to give him a swift peck on the lips. Joss's eyes were hot on me. I looked away.\n\n\"Bye babe.\" Joss said before Denise hopped out and walked towards their house. A full half minute has passed while we were static on the side of the road and the uncomfortable dead air filled the car awkwardly. I decided to look at Joss to see if something was wrong and he caught my eyes yet again in the rearview mirror.\n\n\"Come here, Leo.\" he commanded. His voice was like a sharp jolt piercing through me and making the hairs on the back of my neck rise.\n\n\"Okay...\" I replied quietly.\n\nI hopped out and climbed into the passenger seat before buckling my seatbelt in place. He started driving away shortly, speeding through the road with only the weak roar of the engine accompanying us for a while. I fiddled with the radio in front of me, an unfamiliar song playing mellowly filling the stillness of the air. This will do.\n\nThere was definitely tension between the both of us because I couldn't just ignore the way he made me feel during our last encounter. Joss kept sighing subtly, cutting the awkward silence briefly while he stared straight ahead through his hooded eyes. The ride thankfully came to an end as we reached my street before he parked right in front of our house.\n\n\"Thanks for the ride, Joss.\" I said. I was about to pull the handle when the lock flicked on, making me look at the man beside me. His eyes were like lasers, hooded yet almost boring into mine for a heavy couple of seconds, and I had to swallow a huge lump in my throat. My heart started thudding wildly against its enclosure as he started unbuckling his seatbelt and slowly leaning his body towards mine until our faces were just a few inches away from each other. I closed my eyes and waited for his lips.\n\nOne... two... three... four... five seconds have passed and nothing. My lips parted on their own, frustrated from the lack of contact.\n\nWhen I opened my eyes, he was still staring at me just a couple of inches away as if he was trying to memorize the smallest details of my face.\n\n\"You told me you didn't like Tomas.\" he whispered. I opened my mouth but no words came out and I could only nod my head meekly. \"Then why didn't you stop him when he tried to kiss you today?\" he asked, his warm minty breath hitting my lips and making me bite it involuntarily. That seemed to have caught his attention as his eyes darted swiftly to it before looking back at me. \"Don't try to distract me, Leo. Answer the question.\" he commanded.\n\n\"I... I don't know.\" I answered. His eyebrows furrowed which was a tell that he wasn't satisfied with my answer.\n\n\"What do you mean you don't know?\" he asked, his demeanor giving a mix of genuine curiosity and frustration while his eyes shifted from one of mine to the other repeatedly as if trying to squeeze the answers out of them. My chest began to tighten from his proximity and I found it harder and harder to breathe. I placed a tentative hand on his chest to gently push him away but his breath hitched from the contact instead. \"Leo, I'm trying to talk to you.\"\n\n\"Tomas... is cute,\" I said, recoiling slightly from the way his eyes hardened and the way that his jaw tensed. \"but...\" I lingered. I honestly didn't know what I felt about Tomas but I was pretty sure that it was nowhere near how I felt about Joss. He has me wrapped around his finger because all I could think about every second of everyday is his lips, especially now.\n\nHe heaved a dragged out and heavy sigh. \"But what, Leo?\" He asked impatiently.\n\n\"I don't know... I'm sorry,\" I whispered in almost a squeak as his scrutinizing gaze took the air out of my lungs completely. \"Sir...\"\n\nHe closed his eyes shut before taking a deep and steadying breath which seemed to calm him down. \"I don't mind a little competition, Leo. I'll play along if that's what you want but...\" his hand caressed my cheek and slid forwards to cup the back of my neck before pulling me against his face and finally pressing his lips hard against mine. Oh fuck. His sweet taste whisked me out from the world, forcing me to relive the times when I was under him, and I felt like I was putty in his hands. The kiss sent sparks throughout my body, reaching the very tip of all my fingers and only stopping when he pulled away slowly.\n\n\"I'm not letting you go this time.\" he gruffly whispered into my mouth. I was in a trance, completely lost in his eyes as my body betrayed me. The butterflies in my stomach were now banging against the walls and all I could do was try to expel the air from my lungs through a deep sigh in hopes of alleviating the chains of the overwhelming emotions I was feeling.\n\n\"O-Okay. I'll -- I'll go ahead, Joss. Thanks again for the ride.\" I said with as much composure as I could muster before climbing off of his car and trying my best to walk normally towards the door despite my spiralling vision.\n\nI went through the door, leaning against it and sliding down right after I shut it close behind me to have a grip on what I was feeling. That jerk sure knew how to drive me crazy like this, and I hated the fact that my feelings only grew every single day.\n\nJoss's words replayed over and over in my mind. The thought honestly made me giddy the entire day but I knew better than to cling to a feeble hope that would most likely just lead me into another devastating heartbreak.\n\nA couple of days went by in a blur as I found myself sitting beside Joss and across from Ashton in the corner of the food court. His firm thigh was unabashedly pressed against me, making me uneasy and tense during the entire dinner.\n\n\"Washroom.\" Ashton simply said before standing up and walking away. The silence that came after was so unbearably awkward that I decided to fiddle with my unfinished food with my spoon, praying and willing Ashton to finish his business faster.\n\n\"I broke up with Denise today.\" Joss said out of the blue. My eyes widened as I looked at him in surprise.\n\n\"Oh, I'm so sorry...\" I lamely said, feigning sadness even with my heart practically jumping up and down from the great news. \"What happened?\"\n\n\"I like someone else.\" he said with a boyish grin that never failed to tug at my heartstrings.\n\n\"Oh...\" I said, unsure what to say. My heart thudded so loudly that I was sure he heard the erratic beats from where he sat.\n\n\"You don't seem too sorry, Leo.\" he said as a playful smile played in his lips. I bit my lip to suppress a betraying smile. \"Why are you biting your lip?\" he gruffly whispered, making me squirm against my seat to calm the stupid butterflies down before Ashton finally return. I was practically palpitating so I gulped the rest of my drink to calm myself down.\n\nJoss started getting really affectionate towards me when we're alone, way more than he already was before, and I found it harder and harder to stop myself from hoping. I guess you can't really teach your heart what to feel. He would try to act normal when we were in public but there are times when he would naughtily kiss me when no one was looking.\n\nHe would also act more touchy when Tomas was in the same room as us. Sometimes, he would even make sure that he was looking whenever he slung his arm around the back of my neck before pressing my cheek hard against the bare side of his chest. He was marking his territory and I found it kind of sweet. Tomas would usually just laugh it off, and it made me feel easier that he wasn't too affected by it.\n\nI was lining up with my friends from a common subject in the cafeteria during lunch when I felt a hand pat me on the shoulder. I looked behind and saw Joss smiling at me with some of the other guys lining up in different lanes. I nodded at them and muttered a weak hey at Joss before turning back to my friends.\n\nThey were kind of horsing around in front of me and I got pushed back roughly, accidentally bumping my butt against Joss's crotch firmly.\n\n\"Sorry.\" I whispered. After a few seconds, I felt his hard and rigid dick poking my butt and subtly sliding it across my cheeks. The fact that we're in public made me so horny that I couldn't stop myself from pushing my ass back against his crotch very subtly. Not too long into the lowkey humping, he leaned in closer and whispered into my ear.\n\n\"Follow me. Take responsibility.\"\n\nI looked at him and with that, he exited the cafeteria without looking back before I found myself being guided by my feet as I followed his tracks. I walked a few steps behind him, trying to avoid suspicion from the other people we came across with as we entered the basketball gym and headed up a flight of stairs. He walked to the end of the hallway, and no one else was on the floor with us, ultimately stopping in front of a door and pushing the key into its knob. He looked at me before pulling it open and gesturing for me to come inside.\n\nI went in and I was greeted by a fancy bathroom lined with white and gold adornments and furniture which I presumed was exclusive for the basketball players. He followed inside, closed the door and locked it before looking at me with such intensity that made my knees buckle.\n\nHe approached me in wide strides, unbuckling his belt on the way.\n\n\"On your knees.\" he almost growled in a low voice.\n\nI did as he ordered like a dog, looking up at him on my knees as he was lustfully looking back down at me. He finally fished his thick dick out of his boxer shorts as it proudly stood fully erect against my face, and I just indulged myself by staring in admiration for a few moments.\n\nHis face was completely taken over by lust as he started slapping me across the face with his heavy dong. He massaged the entirety of my face with his head, smearing his cum along its path and making me open my mouth in anticipation. The soft, firm, and slightly rubbery feel of his naughty head left trails of pulsing sensations on my face that lasted for a few seconds. He kept slapping his dick on one side of my cheek hard, smirking at the naughty popping sound it was making before he pushed it hard on the other side, momentarily sliding in my mouth before it flung back outside on the other side of my cheek where he continued his naughty slapping.\n\nHe was so consumed by what he was doing. He traced the outline of my parted lips with his dick and I tried to take him in my mouth but he backed away every time I attempted to take him in. I looked at him and he smirked smugly.\n\n\"Joss, please...\" I begged, looking up at him through my heavy lids.\n\n\"Hmm?\" he teased, his eyebrow rising slightly.\n\n\"Please let me suck your cock, sir...\" I shamelessly begged. He stepped forward and let me wrap my lips around the head of his dick until the entire head fit snugly in my mouth. I was about to reach for the base of his cock when he slapped my hands away.\n\n\"No hands allowed.\" he commanded.\n\nI was incredibly turned on. I planted both of my hands on the side of his muscular thighs before starting to take more of him in inch by inch without ever tearing my submissive eyes off of his dominating ones. I was expertly taking every inch his shaft in until I was halfway there and his dick started lodging itself down my throat. My lips were feeling the weak pulsing and beating of his dick.\n\nHis brows were scrunched up from pleasure as he grabbed a fistful of my hair on the back of my head, tilting my head slightly upwards so that he could see me better.\n\n\"Fucking hell, Leo...\" he muttered. \"Wish I could see this view everyday.\" he chuckled. I didn't know what came over me but I slowly fished my phone out of my pocket and handed it to Joss. A wide grin was etched on his face before he starting tapping on it and showing me the screen when the password was prompted. He started pointing it at me as his manhood throbbed in my mouth from excitement. I would look at him and then shift my eyes to the camera every now and then as I continued to take him deeper and deeper.\n\nI felt his dick slightly expand inside my throat before I finally had him balls deep inside me. I wiggled my face closer into him and pressed my nose hard against his lower stomach as his low moans filled the room. He bucked his hips forward and pulled my head impossibly harder into him.\n\n\"Fuck!\" he exclaimed. \"Where the fuck did you learn this, Leo?\"\n\nHe started pulling his dick halfway before ramming it back in and making me gag. I tried to focus on my breathing as I watched him mercilessly fuck my mouth. The friction of his dick against my lips was igniting my nerves from the inside out as my dick began to swell and my hole began to twitch and pucker.\n\n\"Holy shit, this is the best...\" he moaned.\n\nHe kept thrusting in and out of my mouth, controlling the pace as his dick disappeared into my mouth and resurfaced in front of the camera and his moans covered the room. He built speed gradually until he was forcing me to bob my head forward and back as fast as I could. He turned my phone off and placed it beside the sink as he lifted me by my armpits and held me against the wall on the ground. He supported himself against the wall by his hands as his dick penetrated my mouth and he was once again balls deep inside of my throat.\n\nOur eyes held each other and he just kept looking incredibly turned on as he fucked my mouth with unending vigor.\n\n\"You were born to suck my dick, aren't you?\" he asked as his entirety was buried deep within me. I nodded and mumbled against his dick, the soft vibrations from my throat making him wince.\n\n\"You love my big dick?\" he asked, still pumping in and out hard and mercilessly. I moaned. After a few seconds, his thighs began tensing and he would buck forwards harder as his moans became more and more uncontrollable.\n\n\"Haaahh... take my cum, Leo. Swallow it all...\" he groaned.\n\nHe panted heavily before pulling his cock away until only the head was in my mouth. He started jacking himself at an incredible pace before he erupted a powerful load in my mouth, almost completely filling my mouth in the first few batches as I tried my best to swallow every single drop. He came like a fucking horse but I kept swallowing and I was able to keep up. After about a minute, I slurped his dick and suckled hard on his head, extracting the last few drops of his cum.\n\n\"Wow...\" he whispered as he slightly retracted from his sensitivity.\n\nHe hoisted me up and held me up against the counter, forcing me to look at my naughty expression in the mirror as he was smugly smiling behind me. He expertly took off my shorts and boxers and knelt down before I felt his wet tongue swirling around my asshole. The sensation was so smooth and soft that I started feeling cold shudders travel through my torso.\n\nHe speared his tongue and penetrated my asshole, flicking it around in every direction and trying to warm me up for what he was about to do next. I couldn't contain my excitement any longer.\n\nHis hands found my ass cheeks and he started aggressively squeezing and slapping them, making me moan and whimper like a puppy. He was moaning into my ass as he continued profusely swirling his flexible tongue around me, stretching the walls of my rectum and making me roll my eyes backwards from the pleasure.\n\nHe pulled away, and for a moment I was just there staring into my naughty reflection and waiting for him to come back. I heard the opening and closing of a cabinet door before he came back behind me and started squirting a good amount of lube on the crevice of my ass. It started dripping down until it kissed my hole and he guided the liquid in with his finger. He started with one finger, coating it with lube completely before pushing in knuckles deep into my ass and pulling out repeatedly.\n\nHe then put two and eventually three fingers in, completely coating my ass with lube and giving me a good stretch as he flowered his fingers open inside me. I moaned helplessly as I stretched my arms backward and tried to reach for his face.\n\n\"You like this?\" he whispered. His voice was completely fueled with lust.",
        "\"Y-Yes, sir... Very much. Haah..\" I murmured. He kept fucking me with his fingers and I was getting hornier by the second.\n\n\"Sir, please...\" I begged.\n\n\"Hmm? What's the matter, Leo?\" he asked, trying to mask the smug look in his face. I blushed, feeling embarrassed about how naughty I might be sounding right now but all my inhibitions were starting to float away.\n\n\"Haahhh-- do it, Sir... Fuck me now...\" I asked in desperation.\n\nHe chuckled. He started coating his dick with lube and the wet sound it was making against his skin was making me shake in anticipation. He positioned himself better behind me before prodding his dick against my impatient hole.\n\nMy left foot was on the floor as he lifted my right leg and placed my right knee against the counter, spreading my ass and exposing my hole for him to take. He placed both his hands on my hips and started pushing in.\n\nMy sphincter was slowly swallowing his head until all of it slid in smoothly because of the lube. He stretched me out so well that it didn't hurt as much but there was still a faint discomfort because his dick was as thick as a beer can. His hands rubbed my sides affectionately, sliding my shirt upwards along with his hands until it pooled just under my pits.\n\n\"You look so fucking naughty right now, Leo...\" he whispered. I was incapable of speaking at the moment so I just moaned into the mirror and bucked my hips toward him, signalling him to start moving.\n\n\"This is what I think about every night.\" he admitted.\n\nHe thrusted in slowly and his length started to fill my insides, making me throw my head back as it seemed like he was pushing an unlimited rod inside my ass. I eventually felt his lower stomach hitting my bubble butt as he was now balls deep inside of me. I was whimpering uncontrollably when he hit my prostate.\n\n\"Haahh! Leo, you're tight...\" he grunted.\n\nHe bent down and hooked his chin on my shoulder before he started trailing kisses from the base of my neck up to my jaw. He captured my earlobe with his lips and lightly nibbled on it playfully.\n\nNot long after, he started pulling away almost all the way out before slowly filling me back up again with his fullness. His defined thrust would produce a naughty slapping sound as he kept on hitting my ass with his hips. My knees literally kept shaking in pleasure as he kept hitting my prostate over and over again every time he thrusted in.\n\nHe started building up speed and I was straining from the pleasure so I tried to grab my dick for the sweet release when he took my hands and pinned it on my lower back.\n\n\"No cumming until I say so.\" he cruelly commanded. I bit my lip and groaned in frustration as my hips spasmed in pleasure from his continuous thrusts.\n\nI was starting to lose grasp of everything because of the extreme pleasure I was feeling, and the way that his face scrunched up in pleasure from his reflection in the mirror didn't help me at all. Every time he rammed his entire length all the way in, he would aggressively hit my prostate, and I was actually afraid that I'd go insane from the intense feeling.\n\nHe flipped me over without taking his dick out of my ass until the back of my head was perched against the mirror and my back was sprawled on the cold marbled counter. My ass rested on the corner of the counter as my legs straddled Joss's waist.\n\nHe grabbed the back of my knees and stretched his hands forward, bending me and lifting my legs into the air before he continued with his ruthless fucking.\n\nOur eyes connected and both of us were consumed with an other-worldly lust.\n\n\"Say my name.\" he demanded as his eyes were slightly squinting and drooping.\n\n\"Haahh, gentler J-Joss!!\" I said. Funnily enough, he fucked me impossibly rougher than before, filling the air with loud and sharp slapping sounds from hitting my butt with his hips.\n\n\"Ahhh! Sir... Not so rough...\" he kept at it as if he didn't hear anything, fucking me like a well-oiled machine before he bent down and captured my lips with his. He moaned into my mouth before ramming his dick in me so hard that I couldn't stop getting sucked into the hooks of my climax as I erupted gobs of thick cum out of my dick without even touching it as it coated my entire stomach with probably the biggest climax I have ever had.\n\nHe pulled his mouth away slightly before his body tensed and he began moaning and grunting in his baritone voice louder and louder. He thrusted in balls deep for the last time before I felt the familiar warmth and thickness of his cum touch coat my insides completely. I felt the pressure of every batch of his cum as it shot through the deepest parts of my ass, making me spasm under him for a good while.\n\nHe slowly pulled his cock out and I felt some of his cum slide out along with it. He collapsed on top of me for a while, heavily panting from exhaustion as he stuck his forehead against mine. After we recovered from the intense physical activity, he sat me on the counter and kissed me. I was zoning out but his soft kisses were nonstop, bringing me back to reality.\n\n\"What's on your mind?\" he whispered.\n\n\"Nothing...\" our eyes connected and he kept showering me with his soft and fleeting kisses. His lips were so smooth and soft that I felt disappointed every time he pulled away. Every dip and contact, his lips lasted just a fraction of a second longer than the last one, until he would really linger as he moaned into my mouth. \"Stop that...\" I said without really meaning it as I placed my hands on his chest and I let him keep on kissing me.\n\n\"Why?\" he asked as he pulled away and looked at my eyes tenderly. \"Are you starting to fall in love with me?\" he teased with a sly smile. I felt the uncomfortable warmth on my cheeks and I was absolutely sure that my face was red as a tomato now. I was long past the falling in love phase, but I couldn't let him know that. He kept leaning in and pulling away, pecking and smacking my lips faintly before his expression turned sultry, almost serious.\n\n\"'Cause I think I am...\" he whispered. I looked at him and my heart felt like it was about to burst into a million pieces. I slung my arms around his neck and pulled him closer into my face.\n\nJoss was pretty cool with whatever was going on between us. Sure, he freaked out really bad at first but he's handling it fairly well now, but I can't shake off the feeling that he just didn't really put too much meaning into it. He liked who he liked and that's what it's all about at the end of the day.\n\nOne time, Joss, Ashton, and I were hanging in our living room, watching a movie as usual when he seemed to forget that Ashton was there with us sitting on the couch across us. He slung his arm around my neck and pressed my cheek with his fingers, forcing me to face him before he planted a wet, sloppy, and loud kiss on my mouth.\n\nMy eyes widened. My first instinct was to look at Ashton whose eyes were just as wide and his mouth was agape. I looked at Joss for help but he was just staring at Ashton with a blank and unfazed reaction.\n\n\"What's going on?\" Ashton asked, his voice riddled with confusion.\n\n\"I like your brother, Ash.\" he said casually, giving up all of my hopes to hide it from Ashton, and maybe consequently, to the rest of his team. Ashton nodded mechanically, trying to absorb what was happening before looking at me.\n\n\"Okay... Okay. That's cool...\" he said before opening his mouth and closing it back shut again.\n\n\"Just -- be careful. I mean, don't hurt my brother, Joss.\" he told Joss awkwardly. Joss nodded before kissing me again on the lips which made Ashton look away. Ashton seemed to have a difficult time absorbing what he just witnessed because he knew Joss to be the straightest person in the world just a couple days ago.\n\nHe was never really a fan of social media so he was seldom active, but when we were away from each other and he couldn't find a way to come over, we would talk for hours about random things and it would never feel forced. The conversations were always natural and I could really feel his interest to talk to me through the screen. He had to go to some place this weekend with his family so it was more than 2 days since we last saw each other which wasn't supposed to be a staggering length but it felt like forever.\n\nHe was so horny that he kept flashing me his bulge during one of our video calls.\n\nI took my time trudging along the paved path to the gym, my knees slightly quaking from anticipation and my heart full and excited to see Joss after the seemingly never-ending weekend.\n\nThe sound of sneakers squeaking against the shiny floor and the coach's booming voice filled the air as I made my way to the side bench, instantly catching Joss's attention as his hungry hooded eyes stalked me, making me excited and jittery at the same time.\n\nThis past week, Joss has been in a constant state of hyper arousal whenever he was with me. Not that I'm complaining, but a mere touch in the arm or a longer-than-usual eye contact would emancipate his inhibitions no matter where we were or what we were doing, and he would drag me to the nearest private spot to senselessly fuck me until I was screaming his name. The weekend away didn't exactly help him in that regard too.\n\nHis eyes were unchaste, almost brooding, as he stole glances at me every chance he got. I bit my lip and he furrowed his eyebrows before he clenched his eyes shut as if to restrain himself.\n\nThe game had finally finished and the other boys were collectively heading towards the washroom after they were dismissed by the coach but Joss went straight to me. He grabbed me by my wrist and tugged me to stand up before he practically dragged me to the parking lot in wide strides. His smooth and perfect skin glistened with his delicious sweat under the golden afternoon light before he opened the passenger door of his car and helped me up.\n\nHe climbed into the driver seat and stared at me briefly, hungrily, without saying a word.\n\n\"Hi.\" I said in a whisper. The amorous look in his eyes was too much for me to handle.\n\n\"Stop biting your lip Leo, or I swear I'll fuck you right here.\" he started the engine before he repositioned his thick member in his shorts. Holy shit, he's horny. My inner muscles clenched along with the fluttering of my heart. He drove out of the parking lot and we were eventually off into the road.\n\n\"Sorry about that... I just really missed you.\" he turned to me with an apologetic smile. He looked so irresistibly cute and hot at the same time, and I couldn't wait as much as he couldn't.\n\n\"I missed you too, Joss. You were in my dreams last night, and the night before.\" he grinned, showing his own version of an all American boyish smile.\n\n\"Really? What was I doing?\" he asked, amusement evident in his voice.\n\n\"You were...\" I trailed.\n\n\"Hmm?\" he urged.\n\n\"You were fucking me hard in the back of your car...\" I bit my lip and batted my eyes at him flirtatiously. The smile disappeared completely from his face before he forced himself to look back on the road, his fingers digging hard into the driving wheel. He muttered weak curses and I chuckled, feeling prideful of my effect on him.\n\nMy back brusquely landed on his bed as he swiftly took off his shirt and pants, revealing a skyscraper tent in his boxers. He crawled on top of me, breathing heavily until he was squarely staring at me.\n\n\"You drive me crazy, you know that?\" he groaned before pressing his lips hard against mine, clamping my lower lip before suckling and biting hungrily. He rested his body on top of mine, the heat emanating from his seeming like a hyper aphrodisiac which ignited all the nerve endings of mine.\n\nI moaned into his mouth as he fervently lapped at my lips, compelling me to open up before he twirled his tongue with mine, dancing in a joyous exchange. My hands aggressively caressed his sculptured smooth back as he deepened the kiss by the second, leaving me panting and out of breath.\n\nHoly shit, Joss.\n\nHe pulled away and impatiently pulled on the hem of my shirt, undressing me rapidly before roughly pulling my pants down along with my boxer shorts. He placed his hand on my hips, sensually gliding across my smooth stomach to my chest before cupping my cheek.\n\n\"This is all mine.\" he gruffly whispered before planting a ghostly kiss on my lips.\n\nWith all my strength, I flipped us over so that his back was now on the bed and he was completely supporting my frame atop his beautiful body. He smirked before placing both of his hands under his head and looking at me, watching keenly. I parted his legs and knelt in between them, bending down and cupping the base of his sheathed dick by the base with both of my hands.\n\n\"My mouth feels so empty without you, Joss... I've been craving this for so long.\" I kissed the tip and his eyes were suddenly shut from pleasure.\n\n\"No teasing this time.\" he said before peeling off his shorts himself and roughly grabbing the back of my neck and pulling harshly into his crotch. I sheathed my teeth with my wet lips as I started enveloping his thickness with my mouth. His dick tasted a bit salty from his exhaustive game and the musk melted my insides as I took him deeper and deeper into my throat until my chin was kissing his balls.\n\nHis breath hitched.\n\n\"Haaaahhh... Fuck!\" he moaned.\n\nHis slightly warmer shaft throbbed and pulsed weakly against my mouth. He took my hands and intertwined them with this, rubbing hypnotizing circles against my knuckles with his thumbs soothingly, as if showing appreciation.\n\nI wanted to drive the pace, slow and sensual just how I like it. I retracted my head, pulling him out slowly until only his head was in my mouth before gradually shoving him back balls deep in my throat. I continued slowly bobbing my head up and down in a wide range of motion as he threw his head back and clenched his eyes tightly shut, panting and grunting from the pleasure I was giving him.\n\nThe warm trickle of his pre-cum coated my tongue, palate, and throat as his arousal grew and grew every second. His legs started to flex and tense which I took as a cue to completely pull his dick out of my teasing mouth. He bucked his hips forward, his dick seeking and demanding the tightness of my mouth for the sweet release.\n\n\"Leo!\" he grunted in frustration as he tried to pull me back to him. I chuckled as I positioned myself above his hips, my ass directly hovering around his crotch. He grabbed my waist with his one hand and directed his angry meatstick against my puckering pink entrance with the other, as I started slowly descending and easing his member into my tightness.\n\nI kept on letting myself fall in controlled intervals, his hips seeming like it was miles away from my poor butt. Holy shit, it's deeper this way.\n\nAs my ass was finally able to connect to his upper thigh, he was unforgivingly stretching my insides and it almost felt like my organs were being reshuffled. He grabbed my hips just when I was about to pull out of him.\n\n\"Don't move. I don't want to cum yet.\" he commanded. His eyes were hooded and his chest was lightly heaving up and down as I felt his dick twitching wildly inside of me. He eventually recovered after a while, nudging me to move and fuck myself in my own pace. I lifted my hips and propelled it back down very slowly, trying to feel every single inch of his dick in me.\n\nI continued bobbing my hips up and down very sensually and Joss started moaning harder and harder before he pulled me towards him, forcing me to bend down and meet his hungry kisses.\n\nHe groped my ass and started grind-fucking me ruthlessly, poking and jabbing my prostate repeatedly and making me explode amply on his stomach as the build up quickly paved the way to my climax.\n\nAfter three more thrusts in quick succession, his dick throbbed and fattened inside me before he started spewing batch after batch of thick gobs of cum, covering my insides with his gleaming essence. His warmth felt so right and satisfying, like a cold glass of water after a 10-kilometer run. I collapsed atop of him, my face digging the crook of his neck like a perfect jigsaw puzzle.\n\n\"I love your cum, Joss... I can't get enough.\" I whispered sweetly. He kept trying to lift my face off of him, but I'm too comfortable in this position to acquiesce.\n\n\"Let me kiss you, baby...\" he whispered seductively. Entranced with his mellow, almost needy voice, I lifted my head and let my lips crash against his wet and supple ones, our tongues dancing together in a swirling rhythm.\n\nHe turned us over slowly without any intention of pulling away so that I was underneath him as his weight was now crushing my body against the soft mattress. He held both my cheeks with his manly hands before sensually attacking me with soft and hypnotizing kisses on my sensitized lips.\n\nHis kisses left me wanting more and more, making me feel hollow and empty whenever he pulled away. He kept his eyes on mine the entire time and each kiss he gave tugged painfully at my heartstrings, making me squirm subtly under him. His handsome face was then decorated with a mischievous grin.\n\n\"You like it when I do this, don't you?\" he smirked, relentlessly showering me with more of his gentle and fleeting kisses.\n\n\"Joss...\" I moaned, continuing to squirm under him because of the butterflies that I could no longer control.\n\n\"Hmm?\"\n\n\"Why me of all people?\" I asked innocently. He pulled away briefly, wearing a bemused expression.\n\n\"What do you mean?\"\n\n\"I mean --- you're very hot and handsome, and I mean out of my league handsome. You can easily take anyone, so... why me?\" I looked at him, insecurity bubbling up inside me even as he held me like I was the most precious person in the world. He smirked and fixed the stray hair on my forehead with his gentle fingers.\n\n\"You think I'm hot and handsome?\" he bit his lip, trying to suppress a smile.\n\n\"I wouldn't let you fuck me if I didn't.\" I rolled my eyes and chuckled. He laughed heartily before his expression turned serious.\n\n\"I don't know how you don't see it, Leo, but you're the most beautiful person I've ever met,\" he looked at me lovingly, making me feel like my insides were melting. \"I'm never able to control myself when you look at me like this... god I wish you had an idea how you make me feel sometimes,\" he added before pausing and connecting our lips once again. \"especially when you're under me like this, almost begging to be bred and dominated.\" he grinned.\n\n\"I've never felt anything with anyone remotely close to how I feel about you.\" he said sincerely, his eyes soft and tender as if he was looking at his most prized possession. I bit my lip hard, making him look at it. He was about to give me more kisses but I turned my head sideways, making his lips land on my cheek instead.\n\n\"Stop that, Joss. You're gonna give me a heart attack...\" I feebly protested. He cupped my cheek and gently forced me to face him.\n\n\"I like giving you heart attacks...\" he chuckled before pressing his lips hard back against mine. His lips glided across the side of my lip to my jaw, eventually making a trail of kisses to my neck where he nuzzled his face hard and breathed my scent in. \"Hey, Leo?\" he called.\n\n\"Yeah?\"\n\n\"I wanna fuck you.\"\n\n\"You just did, Joss.\"\n\n\"I know, baby... but harder this time. Okay?\" he asked with urgent need in his voice and just like that, he was pulling my knees upwards, bending me in half as he focused on easing himself back into me. This time, it was easier because his cum was like lube, killing the friction as he eased himself into me.\n\nMy muscles clenched tightly around his protruding member, driving me crazy from the familiar pleasure. My hands were clawing his sheets before I knew it as he started pumping in and out of me in full and defined motions.\n\n\"Look at me, Leo. I want you to look at me while I'm fucking you.\" he said as his hands easily grabbed my waist for leverage as he pummelled my insides with such fervor as I came closer and closer to my climax.",
        "\"Yes, sir...\" I submitted, making him build up more speed if at all possible as he was now fucking me ruthlessly faster than he's ever done. God, Joss is insatiable. \"Haahhh, Joss! Gentle....\" he kept abruptly ramming his dick in me, making my prostate sing in sweet agony each time he thrusted completely back in.\n\n\"You're so tight and naughty... Damn it!\" he exclaimed, religiously thrusting in and out with such energy as he pushed me closer and closer on the verge. \"Cum for me.\" he commanded, and as if on cue, I erupted ropes after ropes of cum on my stomach for the second time without even touching my cock. I never knew this was possible until I met this sex god right here.\n\nThe sight of my climax drove Joss to the edge as he jackhammered my insides a few more times before filling me up with his second climax. We were both panting heavily as he let himself collapse on top of me, his dick still hard and throbbing inside of me as some of his thick and still ample cum gushed out of my asshole.\n\n\"Leo...\" he called, his breath short and husky.\n\n\"Hmm?\"\n\n\"Spread your legs.\" he muttered.\n\n\"Seriously?\" I complained.\n\n-\n\nI was sitting on my usual spot at the basketball gym, waiting for my brother when I heard Troy call me over to the players' bench as the game was approaching its conclusion. I talked to the guys before the players on the court started approaching us. The coach was talking to a bunch of players including Joss but he kept playfully staring at me and puckering his soft pink lips at me.\n\nEventually, they all headed to the washroom to change and I could tell that Joss wanted to approach me but his teammates had their arms slung around his neck, practically dragging him to the restroom. I laughed at his protests. Ashton, Joss, and I were walking towards the parking lot when Joss spoke.\n\n\"Hey Ash, is it okay if I take Leo home tonight?\" he asked as he flashed a wide and toothy grin at Ashton and then to me. Ashton gave me a funny smile before he agreed.\n\n\"Okay, but use protection.\" he said while wearing a serious expression. Josh laughed hard and I blushed profusely. Ashton headed off first before Joss placed his hand on my lower back as we walked towards his car, making me feel the familiar butterflies over the fact that he didn't care that we were still in public. He opened the door for me. I couldn't hide my smile because I felt like a fucking girl, getting these mushy feelings from the small things that he did.\n\nHe started the engine and we stayed still and silent for a while before I looked at him and noticed that he was faintly blushing while staring ahead and taking deep breaths.\n\n\"What's wrong, Joss?\" I asked. Our eyes connected and he smiled warmly at me.\n\n\"I brought you something.\" he said before nervously reaching for something in the backseat. My eyes followed him as he then handed me a huge box of chocolates and a fluffy teddy bear wearing a black basketball jersey with his number in front and his surname \"ADLER\" in the back. My heart melted on the spot from the gesture and I fell impossibly harder in love with him. My heart felt so full that I couldn't stop myself from smiling from ear to ear as I looked at him. \"For you to hug when you're away from me.\"\n\n\"Oh my god, Joss...\" I whimpered, trying to compose myself from the overwhelming emotions he was making me feel. The teddy bear was so cute and fluffy and the jersey color perfectly matched the one they wore. He had it custom-made just for me.\n\n\"Too cheesy?\" he teased, giving me his killer smile that made me fall in love with him in the first place. At that particular moment, he was the most handsome I've seen him. His eyes were soft and full of emotions as he stared at me lovingly. My eyes started to water, and his expression changed before reaching out with his finger to wipe them off.\n\n\"Hey... what's wrong?\" he asked.\n\n\"Nothing. I'm just really happy, Joss.\" he grinned before leaning closer and planting a soft kiss on my lips.\n\n\"Good. I want to ask you something and I really need you to be in a good mood for it.\" he chuckled before he shifted nervously.\n\n\"Sure, Joss, what is it?\" I asked. He could ask me to die right now and I would honestly do it for him.\n\n\"Leo. Can I be your boyfriend?\" he said before looking at my eyes squarely. I bit my lip as I tried to suppress the warm tears from making their way to my cheeks.\n\n\"Of course, you big dummy!\"\n\n-\n\nThe End\n\n-\n\nThanks for sticking with me up to this point! I would love to hear your thoughts about Joss and Leo's story in the comments. I thoroughly enjoyed writing this one and I hope you guys loved reading it as much. Until next time!."
    ],
    "authorname": "bennettwritesx",
    "tags": [
        "college",
        "straight",
        "highschool",
        "athlete",
        "sports",
        "basketball",
        "romance",
        "submissive",
        "dominant"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/brothers-basketball-teammate-ch-04"
}