{
    "title": "The Telling of Our Lifetime",
    "pages": [
        "I realized when I wrote this that it looked like it could turn into a marathon read for you folks. Sorry about that, I wanted it to be a stand alone story. Don't go looking for any sex in this one.\n\n\n\nI had never closed the door to my den in all the time we have lived in this house so Jacqui must have known I had heard our daughter's question. \n\n\"Mom, how did you first meet Daddy?\" \n\nThe pause before she replied simply gave me time to close the file I had open on the computer and reminisce that day myself. What she said next nearly made me fall out of my seat, it was still true to this day but I'm still embarrassed that she didn't at least sugar coat it even slightly, so I could come out of this not looking like an idiot. \n\n\"Oh, that's simple honey; your dad wasn't looking where he was going when he was in the high school library. He tripped over his own feet and he fell into me.\" \n\nThe pause and then laugh from our daughter colored my cheeks a little. \n\n\"So, was it love at first sight?\" \n\n\"Hell no, I called him a dumb ass and told him he should look were he was going.\" \n\nI had already nodded my head, recalling that moment, when I had picked up my books and apologized before I had even stood up and seen the beauty I had stumbled into. \n\n\"Did he ask you for a date, now that he had your full attention?\" \n\n\"He didn't get a chance honey, I unloaded on him. Back then, face was everything. The girls watched as I ripped into him for even daring to get close to me.\" \n\nBy now, I was smiling, as those moments surfaced in my memory. I even knew what was coming next and my smile got just a little wider. \n\n\"Mom, please tell me you didn't insult Daddy?\" \n\nThe concern in our daughter's voice was heart warming and I confess to my heart beating just a little faster over that one sentence. \n\n\"Honey, I unloaded for a good two minutes on the man. I figured out much later that he has a thicker skin than a Rhino. Turns out every word I said, seemed to simply pass him by. The next thing I knew, he held out his hand and gave me a business card with his name on it telling me that if I ever needed anything, he owed me.\" \n\nNodding my head and blushing once again, Jacqui continued, as I knew she would. \n\n\"Now I ask you girl, what kind of man has business cards in high school? Well, he did. Even to this day I still can't figure out why I took it and even stuck it in my bag, but I did and the rest as they say, is history.\" \n\nCrossing my arms and waiting just like I knew Jacqui would be doing in the kitchen now, she had just baited our daughter. There is no way she was going to let this story come to that kind of ending. \n\n\"Hey, now wait a minute, you two got married immediately after college so I know for a fact that it didn't all stop there, you've left a chunk out and I want to know. I've never asked and you two have never told me, so I figured now is as good a time as any.\" \n\nI heard Jacqui sigh; I was already out of my chair and heading for the door when I heard her call me. \n\n\"Martin, I know your listening to this, get your cute butt out here and help me. If I crash and burn I'm going to take you with me.\" \n\nThe look on our daughters face was one of total bemusement. She simply didn't understand her mother's last statement. Sadly, I did and Jacqui was terrified her own daughter would hate her for what she was about to be told. \n\n\"I'm not going to like this am I?\" \n\nI squeezed Jacqui's hand before saying, \"Whether you like it or not, it happened. She is still your Mom, just as I'm your Dad.\" \n\nBy now, suspicion had started to creep into our daughter's eyes. Normally, Haley knew she could ask her Mom any question and instantly receive a reply. If on the rare occasion she didn't know the answer, the pair of them made an adventure of it and found the answer together. But Jacqui had called on me to help with this one question and the seeds of doubt had already been cast over that one innocent little question. \n\n\"What did you do to Daddy?\" \n\nJacqui stiffened, not expecting that question. \"Young lady, I didn't do anything to your father. If anything, he saved me and made me the person I am now.\" \n\nHaley didn't seem to hear her Mom's answer. Jacqui once again squeezed my hand and I turned to look at her. Our daughter's imagination seemed to be already working overtime, given the intense look she was giving her own Mom. \n\n\"So, I go back to my original question. How did you two meet?\" \n\nShe was going to make a great lawyer when she finished law school, just like her Mom. Even as I looked at Haley, I could almost see her mom, as she was when I bumped into her at the library. Her hair was just like Jacqui's but she had the bluest eyes when she was born and never lost them. Jacqui said I mudded up the gene pool when she married me and we had Haley, although she kept her African American looks, her nose was slightly more pronounced and her skin wasn't as dark as her mothers. \n\n\"You had better tell her. Anything I say now, she'll look on as tainted. Plus there are parts of this even I don't know, so it's time for you to be honest as well.\" \n\nShe was right of course. Therefore, with a shrug, I walked over to where I had placed my cell and as I walked back, I hit speed dial. It was already ringing before I had even sat down again, both the women in my life watching intently. \n\n\"Hello.\" \n\nThe recognition was instant in the room from both women. \n\n\"Jason. It's Martin. Haley has just asked her Mom about school and how we first met. Jacqui wants me to tell them everything. I need to pass this by you first.\" \n\nThere was a slow chuckle from the speaker as Jacqui's brother took in what I had said and the meaning behind it, as well. \n\n\"We thought as much, Marci has been telling me that Haley has been asking questions of all the girls in Jacqui's group. She does seem to have found something, but she can't get anything from the rest of the girls. Go ahead and tell her. Just make sure she knows that I loved that little girl like my own, from the day her Momma placed her in my hands three days after she was born. Good luck, and if you need me, you know where I am.\" \n\nIt was our turn to stare at our daughter. In defiance she crossed her arms and stared back. I thanked Jason and closed my cell. Knowing Jacqui as I did, I had little doubt that she was close to screaming at Haley. The resulting cat fight would achieve nothing. I needed to release the tension in the room before I continued. \n\n\"I would appreciate an explanation, before I tell you everything that happened. The fact that you have tried to circumvent your mother and go to her friends, tells me you know something but not enough to confront her about it.\" \n\nFor such a long moment, Haley just sat and stared at both of us and then said. \"Denny's.\" \n\nWe both looked at each other totally confused. Haley made herself comfortable in her seat and then continued, \"I was sitting in one of the booths near the back. I had been in town looking for Mom's birthday present. Aunt Mabel and Gloria came in and sat in the booth next to mine, I was about to stand and say 'hi' when they said something that made me keep quiet and listen.\" \n\nStill unsure where this was going, I waited. \n\n\"It was just one sentence Daddy. It seems they were in town looking for a present for Mom, too. But then Gloria said to Aunt Mabel that she was glad the marriage lasted after all the things that happened back in high school, and then Aunt Mabel said given Moms attitude at the time, it sure shocked the crap out of her when you two not only got together but stayed together.\" \n\nHaley looked at both of us for a moment before saying, \"That's all I heard, they changed topic after that.\" \n\nI had little doubt Jacqui would be going after her own sister with a blunt object in the foreseeable future and I may have to warn her to hide for a few days until she's cooled off. An angry Jacqui was not a pretty sight and part of the reason this conversation was about to start, I suppose. The library seemed to be the best place to start this story of how our relationship started so I simply set the scene. I also knew how to get Jacqui cooled down as well. \n\n\"The day I went head first into this woman was probably the start of my life.\" \n\nJacqui gripped my hand and smiled at me before I went on to tell our daughter everything. It was true of course, I simply wasn't looking where I was going, the book I had, held my attention right up to when I turned the corner of the bookshelf and walked straight into her. The abuse that followed would have made a sailor wince, I'm not even sure some of what she said to me was acceptable language for a sailor, let alone a lady. \n\n\"I had known Jacqui and her group, I even shared a couple of classes with them but everyone kept away from them. Argue with one and you have all three to deal with, it turns out Mrs. Bannerman had other ideas. On one of our class assignments, she split the class into pairs and chose the pairs herself. Two things happened that day. Your mother came the closest she ever had to getting herself expelled and she got partnered up with me.\" \n\nHaley's head spun around to look directly at her mother. \n\n\"You argued with the head of the English department?\" \n\nJacqui shook her head before replying. \"She was an assistant head back then. The damn woman put on airs and graces and she had the affront to say that's what I was doing.\" \n\nBoth Haley and I chose wisely not to comment on her answer. Thinking it best, I continued with what happened. It also helped that Haley herself had been to Mrs. Bannerman's classes so she also knew how she operated. \n\nIt was during that class that Jacqui was partnered with me and also had to sit next to me. She slid her chair as far away from me as possible yet also making it look like we sat together. The assignment was a pass or fail mark and at this time, none of us could afford to do that and keep clear of summer school to make our grades up. Jacqui had made it clear by her actions that she did not want to be here or want anything to do with me and that statement remained for a week. \n\nShe would turn up to class, say nothing and do nothing to help with the project and then leave. In a perverse way, I got a lot of enjoyment watching her and seeing which of those two women would blink first. It seemed that fate had other plans. They were in the shape of Jacqui being involved in a car accident. The guy she was with simply didn't have enough respect for Turner's dip. He took it too fast and lost the car when it crested the dip. It swerved sideways, which is easy to do when none of your wheels are touching the tarmac and plowed into the wall putting both driver and Jacqui into the hospital. \n\n\"Your scars down your leg. I thought... But.... It was a car accident?\" \n\nThe tension seemed to release from Jacqui's hand as Haley's question filtered into her brain. She nodded once. It was our daughter that refused to break off the stare aimed at her mother, Jacqui simply sat and stared at the kitchen table her daughters silence making her look towards her for a moment before she nodded ever so slowly. \n\n\"Duke Thompson had two failings in his life; the feeling that he was indestructible and his love of fast cars, a dangerous mix at the best of times. When you add into the mix of Turner's dip, it pretty much nailed it on the head; he was going to leave this world a lot sooner than most of us.\" \n\nI could see Jacqui nod her head out of the corner of my eye. She knew I was right and the fact our whole class attended his funeral a year later, only made her a little sadder. It was also now that I was about to bring light to a time that she knew little about. It also changed her life soon after. \n\n\"Your Uncle Jason went to see Duke and told him he wasn't pleased to have his sister in hospital and would be even less pleased if he 'EVER' saw her in his car again.\" \n\nHaley smiled, one of those all knowing smiles, it was plain to see she was letting her imagination run wild over how her Uncle would have actually worded that statement. \n\n\"The next day, I got a visit from your Uncle while I was in the library. He told me about your Mom being in the accident and he also knew Mrs. Bannerman's reputation. She took no prisoners and even with your Mom in hospital she had refused an extension, the deadline for the paper still stood.\" \n\nHaley leaned forward onto the table as she listened to everything I said before saying, \"So you put Mom's name on your paper.\" \n\nI shook my head. Healy's eyes were as wide as I had ever seen them before a totally confused look came to her. She even looked at Jacqui only to have her own Mom shake her head as well. I went on to explain that there are ways to ask people for things and the way her Uncle Jason asked, wasn't one of them. When I refused, he simply got up and left the library. He came to me a day later and asked once again. It was then, we got into a fight. \n\n\"You and Uncle Jason had a fight over a paper? \n\nEven before I looked at Jacqui, I knew what I would see, her eyes were half closed as images of those days came back to her. Haley seemed to be on the edge of her seat waiting for an answer to her question. Maybe in the back of both our minds, we knew this conversation would come back to haunt us both. The firm grip Jacqui had on my hand proved me right. \n\n\"Most people simply didn't understand Mrs. Bannerman. She didn't dislike anyone; she simply set out the work and expected you to do it on time and without excuses. But that rule was tilted against your Mom at that moment. Without that pass mark, she would have ended up in summer school and to someone like your Mom that was failure on a monumental scale. The loss of face amongst her friends would have been even worse, not to mention the summer job she had lined up that would have given her a foot up in her career later.\" \n\nJacqui clenched my hand even tighter, I was just thankful I got let off that lightly. \n\n\"But you still had a fight with Uncle Jason?\" \n\nNodding my head I added, \"You have to remember, I was an army brat. Getting shipped from base to base tends to harden you up some. I'd taken all the shit I was willing to take from your mother. When her brother got in on the act, my back was already up.\" \n\nConsidering the size of Jason, I knew the question Haley was going to ask next. What warmed my heart was the look on her face as she tried to figure out how to word it without hurting my feelings. \n\n\"Did he hurt you daddy?\" \n\nGod, I love my daughter so much. \n\n\"In answer to the question you really wanted to ask, Haley. We beat each other to a draw. Although, I will never tell him to his face, if he had managed to go on another few minutes, things may have been different. When we were both on our knees gasping for breath, he asked me what was it going to take for me to put your Mom's name on the paper?\" \n\nEven when I looked at Jacqui, it was plain to see that Jason had not told her any of this. The tingling feeling in my hand as she eased up on her grip was a blessed relief as well. \n\n\"I simply told him that his own sister had the answer to that question. I was sick of being caught in the middle of Mrs. Bannerman and his sister. I wanted my pound of flesh out of this; she had to say 'please'.\" \n\nThe tension in that room just burst like a balloon. Haley laughed so loud it startled her mom, who was just staring at me. \n\n\"That was it? And did Mom say 'please'?\" \n\n******* \n\nThe swelling had gone now. Dad had asked about the fight and simply shrugged his shoulders when I said it ended in a draw. The laugh he gave was when I mentioned the other guy was a mountain on legs. Dad knew I was holding back more than I was telling but he simply gave a smile and left it at that. Telling him Jason was the offensive guard of the high school football team would have put into perspective the competition I had in the fight. \n\nJason took a huge risk getting involved in a fight, regardless of how much he meant to the team, Coach would have instantly dropped him from the team for the rest of the season. \n\nYes, Jason may have loved his sister to have gone to those lengths, but Coach Hibbertson simply wouldn't have seen it that way and while we were beating on each other, I made sure I didn't either. My folks had taught me that when you want something from someone, you smile and ask nicely, don't stand over them and think your opinion will outweigh theirs. \n\nMom took one look at me and damn near cried, even when I had calmed her down and told her I was fine, it must have taken a good ten minutes to calm her down enough to get something remotely like a coherent sentence out of her. Eventually, telling me to soak in the bath it will take some of the swelling out of the bruises that were sure to follow. I was thankful, I also had the weekend to recover as well, and Mom took me to the base infirmary to get checked out, much to my protests. \n\nMy friends on base knew what had happened and with who, our code made us close ranks. I couldn't see a repeat of that Friday afternoon, but none of us were taking any chances, we brats stuck together and I now had my friends watching my back. I had just got off the bus Monday morning before the girls brushed past me and went hunting. The information they gave me when they caught up with me at the canteen later that day simply gave me more options. In return, each of them got a hug as a thank you. \n\nJason came to see me once more that week. He simply looked at me and asked if I had reconsidered. I'm sure not many people tell someone like Jason to 'kiss my ass' but I did. The fight that followed, ended up a repeat of the last one, only this time my friends made sure it stayed a fair fight. Learning from my last confrontation, I went directly to the base infirmary from the bus. Someone had tipped Dad off and he met me there. He waited until the doc had finished with me before he sat me down and wanted to know just what the hell was going on. \n\nMy Father may wear the rank of an officer, but that day in the infirmary, he was my father. He listened to everything I told him and asked me what I planned to do about it. The million and one thoughts that crossed my mind rapidly, seemed to narrow down to just one, do nothing. Jacqui was due out of the hospital the next day according to the girl's information and the paper was due in one week from that day. Dad just shrugged his shoulders and mumbled something about 'I hope you know what you're doing' before he helped me up and we headed home. \n\nMom kept me home the next day. She was torn between wanting to go to the school to lodge a complaint and letting me be. My dad had asked her not to lodge a complaint at school. This was something a mother has trouble with when seeing her son wince before sitting and trying to get up, while holding his ribs. For my part, I just smiled to myself and bet Jason had even more trouble dealing with the low blow my foot did to his groin area and the practice sessions he dare not miss, in case it raised coach Hibbertson's suspicions. \n\n******* \n\nIt was a few days later Jacqui caught up with me by my locker. Trina came and leaned against the lockers first, it was Trina that designated herself as Jacqui's shadow. \n\n\"It's just her; I have Beth and Macy watching the other two.\" \n\nOther than a nod of my head as an acknowledgment, I carried on getting books from my locker. Trina moved away from the lockers and went and stood the other side of the corridor. It was a few moments before I heard her voice. \n\n\"Can we talk?\" \n\n\"No.\" \n\nThe pause was longer now. \n\n\"We can't talk?\" \n\n\"Oh, we can talk, but I'm simply cutting to the chase and telling you 'no' to the question you're going to get around to asking me.\" \n\nWith a certain amount of finality, I slammed my locker door closed, locked it and walked over to Trina who hooked her arm into mine and we headed toward class. The silent treatment between us lasted a couple of days. Mrs. Bannerman seemed to just watch and wait. She knew that Jacqui had contributed nothing to the paper and knowing me as she did, fully expected to see just one name on the paper. ",
        "The locker scene played out twice more as the week came to a close. Both times, I refused to say much more to her than I already had, after all, up until the library incident and being paired for this paper, she hadn't even acknowledged my existence. By Friday, Jacqui got smart and handed me back the card I had given her. I realized then, I had trapped myself. \n\nIt wasn't the attitude Jacqui, which came to me that Friday. She held my card in her hand and even then, was uncertain if I would live up to my word that I owed her. She was calling in that debt and was unsure I would agree to talk to her, I was trapped and I knew it. \n\n\"Tomorrow is Saturday, come to the base and we'll talk about this.\" \n\nJacqui visibly stiffened. She shuffled between each foot for a moment and then looked at me. The defiance in her eyes was barely keeping her anxiety at bay, when she said, \"I don't date white boys.\" \n\nI suppose I should have been angry with her, instead I just shook my head. \n\n\"A date requires two people who want to be together. This clearly isn't one of those cases.\" \n\nLooking over Jacqui's shoulder, I watched Trina tap her watch and tilted her head towards the door, my bus was due and it wasn't going to wait. Nodding my head at Trina got me a smile and her pushing the door open ready for us to leave. Still smarting at her white boys comment, I simply couldn't resist my parting words as I brushed passed her. \n\n\"Enjoy summer school.\" \n\n******* \n\n\"Martin there is someone at the door for you.\" \n\nThe call from my mom got a groan of acknowledgment before I rolled out of bed. She knew I was up because she heard the thud as I fell out of bed and onto the floor. Pulling on a top and shorts and heading for the stairs only to find the front door closed, confused me a little. When I looked into the kitchen, mom just shrugged and said that she was sitting on the porch swing. Even more confused, I took a look outside. \n\nJacqui was gently swinging on the seat. Her head instantly snapped towards the door when she heard it open. My head popped out of the house to see who it was. Trying hard to suppress a laugh, I walked up to her and sat on the rail of the porch. It was clear to see, even to a blind man that she did not want to be here. \n\n\"Ok, two dates. Absolutely no kissing and one of those dates you get to take me out to dinner.\" \n\nI sighed and she picked up on it and looked at me. She caught me shaking my head, she watched in silence as I slid off the rail, telling her to wait there. When I returned from the house, I had trainers on and a couple of bottles of water with me, handing one to Jacqui telling her she was going to need that. Unsure of what I meant she took it anyway and I headed for the steps, stopping only to see if she was following. \n\nThe base was holding the inter-company basketball competition that day; Trina elbowed Beth and pointed as we approached. They watched us sit at one end of the seats. Jacqui just sat and watched the game, still not sure why I had brought her here. When the game finished I stood, Jacqui followed suit and we walked over to the fence line that over looked two thirds of the base assault course. One team was already on the course, another team ready, just waiting for the whistle to blow for them to start. We both stood and watched as both teams raced each other over the course. \n\nWhen both teams had finished and the teasing between the teams was over, they were marched away. When they were out of sight, I walked Jacqui back to the base bus stop. \n\n\"What did you see today?\" \n\n\"The skins beat the shirts thirty to twenty eight and the white and Chinese boys got beat by the black and Mexican boys on the swings and climbing frames.\" \n\nEven as I watched her, it was clear to me that she didn't see what mattered the most. The bus had arrived and hissed as the brakes were applied. \n\n\"You're beyond help. You can have your name on the paper, just keep away from me and that applies to all of your family.\" \n\nTurning, I simply left her standing there, I'm not even sure she got on the bus to be honest. I caught up with Trina at my house. She was sitting on the steps watching me walk up and sit next to her. \n\n\"What am I going to do with you?\" \n\nShrugging my shoulders didn't seem to be enough. \n\n\"Whatever it is, can you be gentle with me, I've had a shitty day.\" \n\nThat alone earned me a giggle and Trina shuffled closer to me before her head rested on my shoulder. I moved my arm around her back and rested my hand on her hip and we stayed like that for what felt like a lifetime. Mom opening the front door sure put a dent in our moment together. \n\n\"Trina honey, I've called your mom and she knows you're staying for dinner, so the both of you break up this love fest and go wash your hands.\" \n\n******* \n\nTrue to my word, the paper was handed in and Mrs. Bannerman raised an eyebrow when she read both names on it, but kept her own council. Summer break saw dad and his team disappear and mom and I amongst others, sat waiting for news. We saw on CNN some weeks later what they had been doing. We also watched as the base Commander and padre pulled up outside Trina's house, knock and go in. The scream and the rushing in of some of the base wives and that included my mom, left me in no doubt that the mission wasn't a complete success.\n\nEveryone was in a somber mood when the plane landed. Dad and his team refused to move more than a few feet from the casket the whole time they were on the tarmac. Mom and I watched as Dad sat Trina and her mom down and one by one the team knelt next to them and recounted what her husband had done so that the team could return. My father urged them to stay, on the base she was amongst family. Trina and I stood motionless as her mom rounded on my father and slapped him.\n\nHe saw it coming, yet did nothing to stop it. She pounded on his chest with both her fists cursing him and the army that took her husband away. Trina moved from me and pulled her mom away from the confrontation. I never saw Trina again after the funeral, the last I had heard, both of them had moved in with her sister's family in Colorado. We army brats did what we seem to do best. Once again, we closed ranks. Some treated us with respect, others simply didn't know what to do or say around us. We just waited for things to get back to normal.\n\n*******\n\nIt was now the final year of high school. I had already warned my folks that I needed to get my head down and get some work done and the extra hours I was putting in at the library simply reinforced that to my folks. With my eighteenth birthday now passed and my folks giving me a car I could afford to miss the bus while I put in the hours at the library. \n\nThe shadow that fell over my table made me look once again into the eyes of Jacqui. She had her books against her chest and seemed to shift nervously from one foot to the other.\n\n\"Mind if I sit down.\"\n\nInstinctively I looked around for her entourage.\n\n\"It's just me. Can I sit down?\"\n\nShrugging my shoulders, I pointed to a chair across from me and leaned back in mine. I watched her sit and place her books on the table.\n\n\"For close to three months now you have pissed me off. You take me on a tour of the base, feed me riddles and then tell me I'm beyond help. Then, you leave me standing at the bus stop without even an explanation of what you're talking about. Finally, to cap it all off, you stick my name on the paper so I don't have to go through summer school.\" \n\nIt was now Jacqui's turn to sit back in her chair, crossing her arms as she did.\n\nEven more baffled by all this, I said, \"If I hang around long enough, will I find a question in that statement of yours?\"\n\nJacqui's mouth opened and closed a couple of times before she found her voice, I was just grateful we were in the library; even Jacqui had to rein in the volume.\n\nLeaning onto the table glaring at me she hissed, \"Listen buster, I came here to thank you for putting my name on your paper even though we both know I didn't do anything to deserve it. I escaped summer school and that in itself was a wake up call. That's not going to happen again. My grades are up in all my classes and I'm back on course. What do you want from me?\" \n\nClosing my books held Jacqui's interest and standing just made her eyes wider, even more so when I leaned down to her and uttered, \"A little civility.\" \n\nFor the rest of the week, school was a slamming door competition between us; my locker had a dent in it that could be explained by my handprint as I slammed it shut as Jacqui and her friends passed by. Just as the English classroom door was slammed shut, as I approached behind Jacqui, one guy damn near got his head handed to him, when he called out to Jacqui that we should both just get a room and sort out who gets to go on top. \n\nI have never seen Jacqui move so quick and the speed the guy left the class as she covered the distance between them, made for a few impressive nodding of heads as well as tight lips on the topic once again. They were going to leave it to us, to sort out whatever was going on, from now on.\n\n*******\n\n\"Honey, that girl is at the door again.\"\n\nMom heard the thud as I hit the floor and nodded her head appreciatively. The small smile she had when she went back to the kitchen, she kept to herself. Still only half-awake, I pulled on some shorts and wandered down the stairs to be greeted by mom pointing toward the front door. \n\nOnce again, I found Jacqui swinging on the porch seat, her sunglasses were being pushed up her nose, and she stopped and watched me. I didn't even get to sit down before she rounded on me.\n\n\"You're driving me nuts. Just what is it with you? \n\nI ignored her and said, \"Does your mom know you're all the way out here?\"\n\nShe launched herself off of the seat and stood inches away from me, pulling her sunglasses of her face, she held them in her hand, her eyes blazed pure anger. \n\n\"Just listen to me asshole. I came here to get this, what ever 'this' is, sorted out between us and all I'm getting from you is static that I don't need.\"\n\nI sat on the porch rail across from her. Jacqui once again put her sunglasses back on and sat back down on the porch swing, for a moment her jaw dropped and she shook her head.\n\n\"And don't even bother thinking you're going to be sitting there all day. You're not even dressed, so go put something on. A lady don't need no reputation of being seen with a half naked white boy.\"\n\nJacqui was doing her level best to piss me off again. Nevertheless, she did have a point about what I was wearing, so nodding my head; I went inside and got dressed. Mom popped her head out the door and asked Jacqui if she wanted anything to drink while she waited. They were still deep in conversation by the time I had finished my shower and got dressed. Even dad came by and said hello to her as I came out the door, the wink he gave me as he passed, I ignored. \n\nI gave a quick twirl on the porch before saying, \"Do I pass inspection?\"\n\n\"You'll do.\" Was her only reply.\n\nWe walked the base once again, only the other brats recognized Jacqui and left us both alone. Once again, I sat us both down on the seats that overlooked the basketball court, neither one of us said anything. I'm sure Jacqui was waiting for some great words of wisdom. I didn't think it fair to destroy that idea by opening my mouth. Neither one of us said anything for the twenty minutes we sat there as both men and women would pass us by. \n\nSome walked, some were on PT and sang as they ran passed us in groups. I thought perhaps I would try again.\n\n\"What do you see?\"\n\n\"Oh, please don't do this shit again. Look if you're looking for a date, I'll fix you up with my sister.\"\n\nMore confused than ever, I simply looked at her.\n\n\"I'm not going to be some experiment for some white guy knee deep in hormones.\"\n\nShaking my head in bewilderment I said, \"Geez... Don't you have an over inflated opinion of yourself?\"\n\nI got up and Jacqui followed me back to the house, telling my father I was going to grab my keys and take Jacqui home. He waited at the bottom of the stairs and said something that not even I had figured out. With a smile, I nodded and went outside to a waiting Jacqui. We jumped in the car and I took her out the side gate of the base and into the graveyard and pulled over. \n\nJacqui gave me one of those looks before saying, \"Is this another one of those 'what do I see' tests, because my track record is pretty lousy so far.\"\n\nI tried hard to suppress a smile, failed miserably and then nodded my head; we both got out and stood at the front of the car. I gave her a moment to look over the graveyard. A family was already in the process of placing flowers onto a grave across from us and four rows down an old man was taking his hat off and once he had patted the headstone knelt in front of it. I could see his lips move and knew what he was doing. \n\n\"Just one question, tell me who is black, who is white, Chinese or even Mexican in this cemetery. Without even looking at any of the gravestones, I want you to tell me the color of every man's skin that's buried here.\" I hesitated before continuing, \"The answer to that is simple. You can't. Each and every one in this place had one color and that was green. When they stood next to their friends and died next to those same comrades, there was only one color that mattered to them and that was green.\"\n\nThe light of realization seemed to come to her eyes. For such a long time, her head slowly swept across that cemetery. Her shoulders seemed to slump slightly before she regrouped.\n\n\"You're so stuck on color, you simply don't see that we all bleed red, each and every one here, never gave a damn about what color skin the man next to him had. It was all about their friendship, loyalty and what was in his heart that counted. Moreover, at the moment Jacqui, you're coming up short because your mind is closed. I'm seriously having doubts that you even have a heart.\"\n\nIt was the closest I had ever seen Jacqui close to tears. She climbed back into the car and I took her home. The wheels only just stopped outside her house before she leapt out and ran inside. By Wednesday, I was back to putting in time at the library and my regime of spending time in the library and my track commitments meant I had little time for much else.\n\nNews filtered through the school that Jacqui's birthday party ended up with Jason having to strong arm Duke Thompson out of the hall she was holding her eighteenth. Seems he wanted to take her for a drive up to Glyndon heights so she could get reacquainted both with him and his new car, some guys never listen.\n\n******* \n\nI had only been in the library an hour before a shadow crossed the desk, books making a thudding sound when they hit the table and a scrapping sound as a chair was pulled out from under the table.\n\nThe glares Jacqui got by the staff, as she sat down, made me smile and I had to look closely at my books to hide it.\n\n\"Don't get your hopes up white boy. We're just studying together, that's all.\"\n\nIt was all I could do just to nod my head and hope she didn't see that 'I'm not going to say a word' look on my face. For the next two hours we passed books between us and I even ended up doing some fetching and carrying to and from some of the shelves when our work needed it. It was only the polite cough and gentle tapping of the chief librarian's watch that reminded us of the time. Even the drive back to her place had us both still deep in discussion over how best to complete the assignment we had been given.\n\nEven as I pulled up outside her house, she just couldn't help herself. \"Well, that's our first date out of the way.\" \n\nThe look on her face gave her away, so I didn't even comment on the date remark. \n\nHowever, I just couldn't resist saying, \"Don't even think I'm going to be doing the fetching and carrying again tomorrow. It's your turn.\"\n\nJacqui shook her head. \"Some gentleman you are. You just wait until I tell your momma. And anyway, how can I check out your ass if I'm doing all the fetching?\"\n\nMy cheeks flushed, and even I had to admit she caught me off balance with that remark.\n\n\"Well, if that's not the most sexist thing I've ever heard.\"\n\nJacqui actually looked at me like I was from Mars. Her brows knitted together and her head tilted slightly before she just shook her head.\n\n\"Sexist?\"\n\nShe seemed to think about that for a moment.\n\n\"I tend to look at it like this, I'm just curious to know what I'm getting for all this effort on your behalf.\"\n\nJacqui must have read my confusion because I frankly didn't have a clue as to what the hell she was talking about.\n\n\"Well, I've already seen you without a top on, and I must say you are toned up real well, considering you only do track. Plus, of course, you really aren't a morning person are you? Otherwise, you would have known that those shorts you had on are way too baggy and I got to check out your dick while you sat across from me.\"\n\nMy face was burning with embarrassment and for once, I really couldn't think of a thing to say. I just watched as Jacqui got out of the car and walked into her house. Even the drive home was done on auto pilot.\n\nThe next day I saw Jacqui around school and even in our English class. She ignored me and I returned the favor. I'm sure the class was waiting for part three of our war to start. Later that day, I waved the brats off and headed for the library. Jacqui was already sitting at our table. As I put my books down, she passed over a small list of books that we both needed. \n\nI slid it back across to her saying, \"Don't even think about it. If you want this to be a joint venture, then it's also a joint division of labor.\" \n\nThe fake pout didn't work either. \"Well, you're no fun. Get out of bed the wrong way this morning, did you? Please tell me you put on those lovely shorts when you did.\"\n\nAlthough I felt my cheeks warm slightly with the shorts comment, I went back to my books, needing the time to once again, collect my thoughts. Pulling books out of my bag, I put them on the table, in the order we needed to work on. It was the slight cough from across the table that made me pause and look towards her. Jacqui smiled when she knew she had my undivided attention and with the list in her hand, she stood up.\n\nThe whole damn library stopped to look as her skirt that can best be labeled as a belt, came into view and she walked towards the collection point. I had seen her a couple of times that day and knew for a fact, that she wasn't wearing that skirt to school. That damn woman changed before she got to the library. I'm not sure the guy even heard her, the view of those stocking legs walking towards him and the gentle sway of her hips meant the guy was toast in the brain department. \n\nI figure it switched off about three feet from our table and didn't return to him until he had deposited our books on our desk some twenty minutes later. Jacqui thanked him and looked over at me.\n\n\"That's cheating.\"\n\nSitting back in her chair, all she did was smile and wink at me. The next polite cough we heard was the head librarian once again reminding us that the library was going to soon close. I took Jacqui home once again.\n\n\"That's the second date out of the way. So when do you take me to dinner?\"\n\nAgain I ignored her comment.\n\n\"I have track practice tomorrow, so I won't be able to make the library.\" \n\nJacqui simply looked at me and smiled, she winked once again before she put her sunglasses back on and left the car. The urge to watch her walk up to her house was outweighed by the fact that I would only be feeding her ego if I did. Not to mention spending the drive home with a hard on.\n\n*******\n\n\"Martin honey, your young lady is here.\"\n\nMom and Jacqui were in the kitchen by the time I got downstairs. Both looked up and smiled. I'm sure it was the scratching of my head and the confused look I gave them both that made them smile.",
        "\"Jacqui tells me you're taking her out for dinner?\"\n\nI just shrugged my shoulders and headed back upstairs to grab some clothes. Somehow, my shorts and t-shirt didn't really fit the occasion. I made it about halfway up the stairs before I made my comment.\n\n\"The PX is open, do you like milkshake Jacqui?\"\n\nThe pause in the conversation between them was only momentary. Mom's voice carried the distance between us like a guided missile.\n\n\"Martin Joseph Anderson. You get your ass down here this instant and clarify that statement.\"\n\nThose seven steps back down to meet both the coordinator of my torment and her accomplice, reminded me of those last walks condemned men going to the gallows, take. The hands on hips gesture let me know ahead of time, this could get bloody.\n\n\"It's apparent you told this young lady that you would take her to dinner, she for whatever reason known only to herself, given the rudeness of your last remark, still wishes to go to dinner with you. Your father and I didn't raise a son who takes such little regard for another, so live up to your word young man.\"\n\nBeing railroaded, by my mom and watching miss goody two shoes sitting over at the kitchen table trying to hide a smirk, left me wondering if even at my young age temporary insanity would be a plea I could get away with if my dark thoughts became real. However, mom was right on one point; both my folks did raise a man who stood up to his responsibilities. So even though I never agreed to this stupid dinner date in the first place, I sucked it up and walked over to Jacqui and asked her to dinner later tonight and offered to take her to the PX to talk times and where she would like to go for dinner. \n\nWith the grace of a ballerina, she sure skipped around the trap I had set for her. \"Seven would be fine and you can pick me up from home. I get the feeling my folks will want to meet you anyway.\"\n\n*******\n\nShe was right of course; her brother met me at the door and grunted a greeting. Well, I think it was a greeting. Mabel of course, practically skipped over to the bottom of the stairs and I'm sure she had rehearsed what she said next.\n\n\"Oh Jacqui, the white boy is here.\"\n\nAlthough her mom rounded on her, it was clear that Mabel had already got her 'dig' into her sister and took the rebuke with a shrug of her shoulders. I suppose what followed would be along the lines of bitter sweet, as Jacqui came down the stairs and her father came out of the kitchen. She was dressed rather conservatively for her, a summer dress of cream and pastel colors that hugged in all the right places and flowed in others. \n\nIt was plain to all, as we watched her come down those stairs that her dress screamed 'I'm a woman in here' and that same woman came to the bottom of the stairs with the attitude of 'damn right I am'. Her dad however, then stood between us and sized me up and proceeded to give me his pre-prom night speech.\n\n\"Young man, that's my daughter standing right there. I want her, not only back here at ten on the dot, but also intact.\"\n\nJason just smirked, Mabel followed, but hers quickly turned into a smile. Jacque's jaw dropped, and I actually believed her eyes were going to fall out, they were so wide open. As for me, I didn't give a shit. Yes, she looked hot and that's probably the first time I had seen the woman more than the 'attitude baggage' she dragged around with her.\n\n\"Well sir, I suggest you take her out then, because it's now seven and if you believe that a lady like that can be fed, danced and brought back here in three hours, then I want to be sitting on your front porch to see it.\"\n\nI'm sure her dad said something; I was already heading back out the door and heading back to the car. I had done my bit; I turned up as agreed and fulfilled my part in this charade of two dates and dinner that I had never agreed to. The strange thing was the closer I got to my car the louder the shouting that came from the house.\n\n\"You had better have that passenger door open by the time I get to the car white boy, or so help me you're going to get comfortable with the sidewalk.\"\n\nYes, I was shocked that she was following, but I wasn't dumb enough not to have the door open for her when she got there. As she held onto the top of the door and turned to look at me, her face although neutral, held a glint of anger, she let me know why. \n\n\"You ever treat me less than a lady again Martin, and so help me you're going to wish you had never been born. I expect to be walked back to the house later tonight or me and your dad are going to talk about the manners you lack to be a gentleman.\"\n\nOk, I admit, she had a point and I did my best to make it up to her. The Italian Restaurant, over on Randolph Street was owned by one of the wives from the base. It was also staffed by some of the other wives as well, so Jacque and I got comfortable. That evening, I found out she had a sense of humor. That she could laugh at others and herself and once she learned to drop the attitude, the woman inside sure made the time we were at the restaurant go by far too quickly.\n\n\"You said to daddy, we were going dancing?\"\n\nAs if on cue, Rosie stepped up with the bill and we headed back onto the base for a dance hosted at the PX. She kept me out on the dance floor most of the evening and when I needed a bathroom break, she sat with mom and dad. She was asked to dance several times but was polite when she told them that I was her date. Every time I wanted to pull her up on that statement, Jacqui always seemed to be able to deflect me.\n\nI walked her back to her front door at five minutes to eleven. The porch light came on five seconds later. Two seconds after that, her dad opened the door and stood watching as his daughter pulled me to her and kissed me before thanking me for a great evening and looked forward to our next date, before she let go of my shirt and walked past her father. The glare I got was from a father protecting his daughter. I of course, wished him a good night and left happy that tomorrow was Sunday and I could sleep in.\n\n\"Martin honey, your young lady is here.\"\n\nI'm sure my mom had that on tape so she didn't have to keep repeating herself. The thud as I fell out of bed and the slow walk down the steps, gave me time to wake up. Both women were in a huddle at the table when I got to the kitchen to fix myself breakfast. I sat across from them, ready to tuck into my bowl of cold cereal when I picked up on the silent treatment from them both.\n\n\"Ok, what have I done this time?\"\n\n\"I'm pregnant and it's yours.\"\n\nIt seems I have now mastered the art of spitting milk clear across the kitchen floor and up against one of the doors by the sink.\n\n\"Ok, now that I have your full attention, what are we going to do today?\"\n\n\"That wasn't even funny.\"\n\nAs you can gather, my voice wasn't heard over the laughter from both women, even dad rested his hand on my shoulder to signify that I had no chance against two women in the same house, let alone one. He came and sat next to me, his coffee already in his hands.\n\n\"Mom read daddy the riot act last night after we left. I'm told she threw in words like racist and bigot as well and if you knew my daddy that didn't go down too well. He sat me down this morning and agreed that I could date whomever I wanted and since school is going to know about us by Monday, what are we going to do for today.\"\n\nShe had already picked up her orange juice and was taking a sip when I said, \"Divorce?\"\n\nJacqui spit back into her glass and then had to wipe the residue of her orange juice off her face and mom and dad laughed this time. I also picked up a look between them that I didn't recognize until much later, Jacqui and I were treating each other like mom and dad do, when they are alone.\n\n*******\n\nWe never left the base that day. I suggested it, but Jacqui declined. So we walked and talked. We sat in the PX and had something to eat and talked and then sat on the porch and talked. Damn, I thought, that was the cheapest date I had ever been on. But, I found out who Jacqui was. She still had the baggage of attitude, but when you got past that, I was truly surprised at her depth of knowledge on any given subject and her inherent hunger to always learn more. She would make a great hostess, that was a given.\n\nShe was right of course, the brats gave me crap all the way into school and since English was the only class we had together that day, the rest of the class thought it a good idea to move around and fill every seat, leaving two together in the front row. Mrs. Bannerman came in and noticed the change in the seating plan and how uncomfortable Jacqui was. It was perhaps the only time I knew Mrs Bannerman to let the seating plan slide and spent her class enjoying Jacqui's torment.\n\nOf course, I caught the back draft after school and decided to nip it in the bud. Jacqui ranted all the way to the library and I let her have her moment, but as her hand went to the door of the library, I stopped her.\n\n\"Look, given your past history and the biting at each other we had back then, you didn't expect to get off lightly did you? Take it all on the chin and learn from it.\"\n\n\"But you didn't.\"\n\nEven doing a quick recap in my head, I just didn't see where her last statement came into all this.\n\n\"Didn't do what?\"\n\nIt was then I knew, the smirk got bigger and I just knew.\n\n\"You didn't bite me.\"\n\nWith my last vestige of logic, I gave her the only excuse I could think of.\n\n\"You really don't want to do this in the middle of campus and in broad daylight, do you?\"\n\nThat damn smirk of hers just got bigger; she even placed her hand on her hips.\n\n\"What's the matter white boy, afraid to kiss the black girl?\"\n\nOur eyes locked on one another, I vaguely remember her shoulder dipped for a second and her bag hit the floor. I think mine was next to hers as my arm now rested on her hip, a year ago, hell even six months ago, this would never have happened. This wasn't a dare, Jacqui knew what today had been all about and she wanted the whole damn school to know, she didn't care anymore.\n\nAs my other hand rested on her hip both her arms came to rest on my shoulders and we kissed. Even then, I gave her the option of backing out as our kiss ended. She looked at me, both hurt and surprised.\n\n\"If you don't do better than that, I'm telling all my girlfriends you have a two inch dick and that's when it's erect.\"\n\n\"Do that and I'm telling those same girlfriends, that it fits in your ass quite nicely.\"\n\nHer forehead rested on mine, she couldn't hide the giggle from me either. \n\n\"Martin Joseph Anderson, what have you done to me?\"\n\nI kissed her again, this time we both put some effort into it. The thing is, both of our bodies gave away to what our voices refused to tell each other. She felt my erection grow in my pants and her own body pushed against it. Her nipples gave her away when we parted; we both looked down and smiled.\n\n\"What? It's cold out here.\" \n\n*******\n\nIt was official, we became an item. Mabel used the words 'I told you so' around her sister as often as she could, or rather until Jacqui took her to one side and 'politely' told her that was enough. I also got a visit from Jason; it wasn't the fact that I was a white boy dating his sister. It was the fact that I was a boy and prom night was looming. I swear he followed in his own fathers footsteps more each day.\n\nMy folks invited Jacqui's folks over for a barbeque to try to ease the tension of the forthcoming prom and as my mom put it.\n\n\"Honey, your girlfriend is over here most weekends and some evenings studying with you. It only seems fair that we get to know her folks.\"\n\nJacqui and I just looked at each other and clearly saw a train wreck approaching. We even turned up late hoping that any blood spilled would have been cleaned up by the time we got there. Not such luck, both families were actually having a good time, right up until dad admitted that he was being transferred a week after our graduation. Both families looked at us expectantly. I suppose I knew it was coming. Dad was getting older and had been offered another promotion. Soon he would be too old to lead his team and the thought they would have to carry a team member, didn't sit right with him.\n\nPlus, dad was a career officer; it's what people like him do and families simply up and went with them. I had already been offered a place at college, so our family was breaking up anyway. Jacqui sidestepped the glances our way and handed me a soda and then a burger.\n\n\"Eat. We will talk about this in our time, not theirs.\"\n\nThe party continued and true to her word, she told her parents that she was staying the night. Both our folks rounded on her and the Jacqui with attitude quickly emerged. If they wanted a fight, they got one. She told my dad that he was being inconsiderate to drop a bomb like that into a conversation without giving at least a heads up to those (us two) who should have been, forewarned. Then she let loose on her dad and brother and told them to back off or what was intact at the moment, won't be for much longer.\n\nHer father flustered and her mom just smiled that her own daughter actually admitted to still being a virgin. The air seemed to go out of the party soon after that. Jacqui still insisted she was staying and she was sleeping with me. She looked towards both moms for support and got it as well, much to the surprise of just about everybody standing there. \n\nJason came to me and shook my hand. \"If she bleeds you bleed.\"\n\nIt didn't take Einstein to figure out what he meant. Her folks left soon after and I noticed both fathers talking to each other just before they shook on something. Mom donated a t-shirt and some shorts for Jacqui's 'sleepover' and for the first time in a heck of a long time, I actually wore something to go to bed in.\n\nAs she sat crossed legged on the bed she said, \"You know why we are doing this, don't you? My folks know how I feel about you now. We need to discus if we have a future or if you're just happy to date the black girl.\" \n\nWe both knew we needed to talk and be more honest with each other than at any other time and we had to do it fast, since exams and prom night was speeding down our road. However, it's also the closest we had come to being in bed with each other, so neither of us was going to let that pass without our usual little digs.\n\n\"Show me your tits.\"\n\nJacqui smiled, this woman knew me too well, she had been expecting me not to pass up this chance, she may have come to my bed, but she also knew that even this horny guy would respect her and wait.\n\n\"Will not.\"\n\n\"Go on, you have seen my dick, you even admitted it some time back.\"\n\n\"So you must have seen the magnifying glass I had to use to see it, as well. Honestly, it's true what they say about white boys.\"\n\n\"Oh, you mean the bit about 'we all carry ten inch dicks'?\"\n\nJacque laughed and nodded towards my shorts.\n\n\"If you can pull a ten inch dick out of them shorts, you can see my tits.\"\n\nConversations like these were common with us now, the level of comfort we had around each other was at first gradual, on occasions our comfort level would increase when events like school and my dad dropping a bomb on our family life happened. We talked well into the night, we also hugged and kissed, neither of us went any further because we knew it wasn't time yet. The change in our relationship was plain to see. What started out as total dislike for each other had blossomed into this.\n\nI had Jacque in my bed and although we touched it was hands, although we kissed it was to seal a deal, although we wore minimal clothes we knew that those same clothes would be on each of us in the morning. Jacque simply wasn't ready and I had more than enough respect for her to wait. Yes, that was a night that both of us kept in a small part of our minds, that we hold those precious thoughts. That was the first night I slept with Jacqui.\n\nBy the time I woke the next morning, Jacqui was gone, the laughter coming from downstairs told me she hadn't gone far. They must have heard me get out of bed because there was a coffee on the table waiting for me when I got there.\n\n\"It was plain to hear from the talking coming from your room, that you two had a great deal to say to each other, although I will tell you, your father was awake waiting for the headboard to start knocking against the wall so he could come in and hose you two down.\"\n\nJacqui laughed, I blushed and that again set them both off. Over breakfast we talked to mom and told her what we had both decided, there was no arm twisting, no negotiations, and no deals. We had both been more honest with each other than even our relationship would deem acceptable. Jacqui told me what she wanted from this relationship and I told her what I wanted, the distance between both was so ridiculously small that even we could see it working.\n\nThe trouble we now had, was selling it to the families. Mom listened and then stood and picked the phone up to talk to Jacqui's mom, both of us wondered how she got the number and she must have had it for sometime, since it was on speed dial. An hour later both moms sat across from us and listened, it wasn't until we had finished that we both realized that we were now holding hands and still in our make shift pajamas. Jacqui watched her mom look at her and her t-shirt and shorts.\n\n\"Yes mom, they stayed on, although Martin did ask to see my tits.\"\n\nThe heat around my neck went directly to my cheeks and I just knew that statement deserved a reply, even as I watched Jacqui stand and sit on my lap. My answer was on my lips. The kiss that followed made me forget what I was going to say.\n\n\"Honey, your girlfriend is on your lap and has just given you a kiss to remember. Please tell me how you're going to get upstairs without showing both our moms your response.\"\n\nThe bitch had made me as hard as steel, she even helped it along a little by wriggling her ass on my lap. The look of innocence didn't fool anyone, it still didn't stop me picking her up and sitting her on the table, my hardness now in full view in my shorts and both moms trying hard not to laugh as I walk away from the table and up the stairs.\n\nMy back was to the shower door, the coolness of the air made me realize the door had been opened. Hands started to soap my back. My dark mood didn't ease when she said sorry. I rested my hand against the tiles and let her continue and I tried ever so hard to control my breathing.\n\n\"You embarrassed me in front of both our mom's, that doesn't happen again. You allowed the way we talk and act towards each other to be seen by others, you didn't give me a choice in the matter. From were I'm stood sorry doesn't cut it.\"\n\n\"Please Martin, turn around and talk to me.\"\n\nTaking a lung full of air I stood up straight and turned around, my hardness took on a whole new level, hell I was sure another pint of blood poured itself into it. \n\n\"I realized I did wrong when you dropped my ass onto the kitchen table, both the moms agreed with me, they know I'm here and like this. I needed you to know I was sorry, I left you with blue balls and I deeply regret that.\"\n\n\"You're naked.\" Even when I stated the obvious and felt like an idiot as I did. \n\nAt first Jacqui simply nodded her head, but it seemed to get stuck more times than seemed to be polite when she kept looking down at my erection. It still took Jacqui a moment to find her voice.\n\n\"Well... I... Ermm... Dammit Martin you need to turn around so I don't keep speaking to your cock.\n\n\"You have got to be kidding me, the first time I get to see your tits and you tell me to turn around, you came in here naked and I plan on making as much out of it as I can.\"\n\nInstantly her hands went to her hips.\n\n\"So you plan on taking advantage of the black girl.\"",
        "\"If by taking advantage you mean checking out all the fun bits with my eyes then your damn right I'm taking advantage. Hell Jacqui you are one hot woman.\"\n\nI'm sure she blushed before she smiled, her half step closer meant her tits now brushed against my chest. Finally she reached up and held my head in her hands the trembling of her body could be felt by the parts that touched me.\n\n\"Martin you know... I mean...\"\n\nIt was strange to see her like this and I don't mean naked. She was truly at a loss for words, our own comfort with each other meant I knew what she was saying yet she was fighting so desperately hard to put it into words so I helped her.\n\n\"You came here for a reason and I understand it took a great deal to come and join me in here. You want to wait, I understand that. You're even comfortable with me looking but knowing I can't touch, I understand that as well. How am I doing so far?\"\n\nShe smiled and that smile made me smile, more so when she forgot herself and hugged me, the realization of how close my hardness was to her made her jump back slightly and I laughed, she looked at me and smiled, shrugged her shoulder and laughed as well. Finally her hand came away from my face and one hand wrapped itself around my cock.\n\n\"That brings me back to why I'm in here with you. I gave you blue balls and I have to serve penance for that and embarrassing you in front of the moms.\"\n\nAt first I started to take a small step back, she held me tighter and stopped the movement of her hand around me. The shake of her head didn't go unnoticed either. \n\n\"I'm empting this and serving my penance Martin. If you want to scream rape then, be my guest.\"\n\nHell why fight it, so I didn't. Jacque waited until she realized I had agreed and went back to doing what she was doing with her hand. It was clear by her eyes she had never been around a naked guy before, she may never admit it but she spent just as much time checking me out as I was her. She jumped when I placed my hands on her shoulders the panic in her eyes gave her away yet she still kept going.\n\n\"Relax, I'm just about to cum and when I do I want you close enough to share it.\"\n\nI swear I have never seen that girl smile so much as she did just then, her hand got a little quicker and as I erupted I pulled her hand away and pushed our bodies together, my cum finding small gaps between our bodies to spread upwards. We kissed and our passion was added to when each of us felt the movement of my cock between us and our skin telling us that the wetness wasn't from the shower. \n\nIt still took a moment for our kiss to end, I'm not sure which one of us wanted it to end to be honest, as we parted and our foreheads touched she giggled.\n\n\"You really are a horny boy aren't you?\"\n\nAs we parted I just had to add.\n\n\"Full of hormones too, remember?\"\n\nJacque giggled once again as we parted and looked once again at each others bodies, before we set about washing ourselves. As I finished I opened the shower and pulled a towel around me before starting to close the door, Jacque looked on confused.\n\n\"You have been moving from one foot to the other ever since we did what we did. You're as horny as I was but I can't help you like you helped me and we both know why, so I'm going to give you some privacy to wrestle with your conscience and do what's needed to take the edge off.\"\n\nAt first she looked like a deer caught in headlights, I think the casual way I said it may have helped because her smile quickly came back. I'm just grateful I made it halfway down the stairs before her scream caught up with me, the moms pretended not to notice and for that I was extremely grateful.\n\n*******\n\nFamily and school settled down after that and both of us were grateful that it did. It helped that we had each other to study with since we both seemed to push each other along. Jacqui still came to mine and maybe once a week she stayed over the following day, of course Jason would end up looking for me and the animosity between us surfaced once again.\n\nHe really was his father's son. The fight was just as bitter as the others. I took myself to the infirmary this time. Jacqui was waiting for me when I was given the ok to leave. She acted as though nothing had happened; we walked all the way back to my place. Dad was on a weeks exercise and mom wasn't in when we got there.\n\nShe helped me up stairs stripped me down to boxers and bandages and stood me against my bedroom wall while she took a couple of pictures. She then took my boxers off before helping me into bed, kissed me and left, neither of us said a word and not a mention of how she found me in the first place. When I woke Jacqui was asleep next to me as naked as I was and a suitcase by the door. \n\nWhen I woke again Jacqui was gone, the suitcase was open by my own closet and her stuff was hanging in there along side mine. She came and woke me mid afternoon with a coffee.\n\n\"I won't ask how you feel but I do need you to get up now. Our bed is due in an hour or so and we have to make some adjustments to our room to make it fit.\"\n\n\"Do I get a say in this?\"\n\nShe helped me up and started to strip my old bed, she said just two words that were a clear warning shot that she didn't want to continue this conversation.\n\n\"Not really.\"\n\nMom and Jacqui got me downstairs and comfortable. The double bed arrived half an hour later and I left it to the girls to organize everything. No sooner had they gone than a pounding on the door announced Jacqui's father, since no one answered it fast enough for his liking he pounded the door harder and longer the next time.\n\nMom answered the door and waved at the Humvee now parked outside our house, she also made sure that Jacqui's father noticed. Two very large guys got out and leaned against the Humvee and waited.\n\n\"My daughter doesn't belong here with him. I'm taking her home.\"\n\nMom smiled and said. \"Good luck.\"\n\nJacqui came out of the kitchen the bottom sheet to my old bed in her hands, one of the bandages had slipped while I had slept and the blood had spread over the sheet. Jacque's father looked at her and the sheet in her hands as she walked over to him and handed him the sheet.\n\n\"When you get your own son to do your own dirty work you have to be prepared for the consequences. I'm his now, this is my blood, do you want me to tell you which part of me it came from?\"\n\nThe slap her father gave her turned her head but she stood her ground. Both the guys leaning against the Humvee were now on the front porch and had pulled Jacqui's father away from his own daughter as he screamed that she was a whore and he wanted nothing further to do with her. Hearing that seemed to relax Jacqui, she shrugged her shoulders and then swung her right foot into her father's groin. It took both the security team to hold him up after that, the struggle went out of him as well and they tossed him in the back of the Hummer and drove away.\n\nJacqui came and sat next to me ten minutes later with some white pills in one hand and orange juice in the other.\n\n\"I thought Viagra is blue?\"\n\nShe stifled a laugh. \"The state your in white boy you don't have the energy to get it up let alone aim it at anything.\"\n\n\"Why did you lie to your father?\"\n\n\"Because he needed to know the pain I was in when you came out of the infirmary looking like you did.\"\n\n\"And the blood on the sheet?\"\n\n\"It's yours. I'm still intact and you ain't getting in there until you put a ring on my finger.\"\n\n\"And here I was thinking you were a cheap date.\"\n\nThis time she looked at me as she handed me the pills one by one. \n\n\"I know you're in pain, but right about now I could do with a hug.\"\n\nThe bravado that was holding her together fell to pieces as her cheek connected with my chest. Mom looked in from the kitchen, nodded her head and went back to fix us all something to eat. \n\nIt was late in the evening when there was a more timid knock on the front door. Jacqui's mom asked to come in, she looked rather embarrassed to be here, mom stood to one side and she came in. Jacqui stood to meet her in the middle of the room.\n\n\"Your father is in jail.\"\n\nJacqui once again shrugged her shoulders.\n\n\"I guess I missed, I was aiming for him to spend some time in hospital.\"\n\n\"I have a bail bondsman there now but he says it's complicated because your father assaulted someone on base.\"\n\nAs confused as Jacqui's mother was she got even more confused when Jacqui went to her bag and pulled one of the pictures she took of me out and handed it to her mother.\n\n\"For a start off mother, your husband slapped me in front of witnesses. I also sent a copy of this picture to Coach Hibbertson. I'm sure he will piece the rest together when my brother shows up for practice on Monday.\"\n\nMom got between them both and told them both to sit down. Mom then sat next to me and told her what happened, how Jacqui had called her while she was at the Mall to tell her that I was once again in the infirmary and that she was taking me home. With the drugs already in me I slept most of the afternoon, Jacqui went home and confronted her brother and he admitted that he wasn't happy about his sister sleeping with a white boy.\n\nJacqui's mother winced when she said those words. The blood rushed to her head and she stood and hugged both women before she headed for the front door, before she opened it she looked at me and apologized for her family's treatment of me.\n\n\"I seem to be living with hypocrites and assholes. I will take care of my husband and also point out to my son that I find it odd that he finds it difficult to know that his sister is sleeping with a white boy yet he doesn't mind dating white girls from time to time.\"\n\nEven Jacqui's jaw dropped.\n\n\"Oh yes, and don't think for a moment that a mother doesn't know what her children are doing. Just like you and that blood on the sheet con you fed your father, I understand why you baited him and I will deal with him so drop the charges and let me sort this out.\"\n\nJacqui nodded her head, her mother walked to her and they hugged. Both moms said thier goodbyes and peace reigned for the evening.\n\n*******\n\nDad got back mid Sunday afternoon, I took Jacqui to the PX so mom and dad could have some alone time. Perhaps I was too connected to her, we both see the clouds gather and we were both so very grateful that my family where the calming force behind us. Jacqui's world fell apart when her father was released from jail and flat out refused to have her back in the house. \n\nHe ordered her sister and brother never to speak to her or even mention her name ever again in his company. The war of words between husband and wife took on a whole new level as well; the only real casualty was Jacqui. Her mom came by that evening with two black bags of clothes with her; she sat with Jacqui on the porch and said she would work on her father.\n\nIn retaliation Jacqui told her not to bother. The chasm that was now between them would never heal and he took his loathing for me and my family to an early grave courtesy of a drive by shooting at a gas station he was using to fill up on the way home two years later. Jacqui's mom sent her an invite to the funeral of course and my mom urged her to go so that she could somehow heal the rift between them.\n\nThe only thing that got returned was the invite after she tore it in two and placed both parts into another envelope and sent it back. The message was as clear to both as it could be. \n\nWith exams now all consuming we spent our time either at the library or out back on the porch, the only words that passed our lips were tests that we gave each other. Her relationship with my father took on a different turn when he asked her to walk with him for awhile. We both looked at mom and she just shrugged her shoulders, Jacqui got up and I went to follow. Mom coughed and told me to sit down, they drove away in the morning and I didn't see them again until late that afternoon. \n\nMy dad now looked on Jacqui as his daughter and set out to look out for her since her own father wasn't up to the job anymore. It also seems that the Army now own Jacqui once her exams are over, off the back of my father's reputation and assurances the Army was going to foot the bill for her law school education. In return she went to JAG and used her new found skills on behalf of the service.\n\n\"I should have sat with you and talked to you before I did this.\"\n\n\"Yes.\"\n\nShe knew I wanted to say more but to do so would have meant words said that couldn't be taken back. Our relationship was in trouble and neither one of us had the knowledge to pull it back. The brats simply assumed we were doing more than that and that was our business. They did look on Jacqui as one of us now, she gained as many friends as she lost that year.\n\nHer father was doing everything he could to bring her to her knees; he announced he had spent her college money in a weekend in Vegas. She laughed and said she didn't give a shit, she was still going to law school and that was in spite of him not because of him. \n\nPride made as many friends as it did enemies that year.\n\n*******\n\nFor nearly a week Mom and Jacqui had been spending time out shopping. The result of their shop was two black bags covering something on hangers, both of which went straight into mom and dads room, minutes later two giggling women emerged with triumphant smiles on there faces.\n\nJacqui caught me heading for the kitchen and with hands on hips I now had my love standing between me and the fridge.\n\n\"Leave it all were it is you and I are off to the PX, oh and bring money your buying.\"\n\n\"I thought you were a cheap date.\"\n\nShe giggled. As she grabbed my hand and waved goodbye to our folks and they had been our folks for close to three months. My father heard her call him dad a few days ago, that mans chest swelled with more pride than the medal the general stuck on his chest six months before that. Jacqui had taken to base life as if she was an army brat herself.\n\n\"Don't think for a moment I'm shutting you out of my life, you are my life. Your family had every right not to get involved in my fight yet you all took me in and treated me as their own. Martin I love your mom and dad, I'm in love with you, don't ever loose sight of that because I never will.\"\n\nThe pressure on my arm as she squeezed tight made me know there was going to be a big but coming down the pipe.\n\n\"Its prom night tomorrow and I have every intention of getting you naked and seeing if you can get as much of you in as much as me as you can after the party.\"\n\nThat's when I saw the fear in her eyes, the connection between us was working overtime that was for sure.\n\n\"No.\"\n\nHer brow creased and her grip on my arm lessened and for that my arm was eternally grateful although I'm sure the bruises may take a while to heal. \n\n\"Please Martin, I want to do this.\"\n\nWe had finished our meal, I grabbed my bottle of water and handed her hers as I stood. I had absolutely no intention of holding this conversation here and I suspect mom had something to do with Jacqui initiating it. Although she tried to get me to sit down and talk Jacqui finally figured she was plum out of luck, right up to when I got back to the house.\n\nI was hoping dad was in, I didn't see him right up until I stood across the kitchen table staring at mom and he came up from the basement. \n\n\"You got Jacqui to agree to this, what the hell were you thinking, if I can see she's not ready surely you must.\"\n\nDad leaned against the fridge watching mom and me, Jacqui waited by the door.\n\n\"Son, someday you will learn that us women are more practical than you men will ever be.\"\n\nI'm sure dad knew what she was talking about, it seems I was the only one in that room wearing a confused look. Mom glanced over my shoulder at Jacqui and I assume something passed between them since mom nodded her head slightly before our eyes locked on one another again.\n\n\"Jacqui is scared son, after summer holiday's we move. Before Jacqui that wasn't a problem since you're going to be full time at college, but Jacqui is in our lives now and the plans we made for you can't be changed. After summer she goes to a college five hundred miles away from you and she's scared the distance will break you two apart.\" \n\nThis time I spun round and looked at Jacqui, the defeated look in her eyes a give away that mom was speaking on her behalf. I told her to sit down, when she tried to sit next to where I was stood I told her to sit next to her accomplice.\n\n\"I can't believe that at eighteen I'm reading the riot act to my mom and girlfriend. But since you all want to be involved in our business in some shape or form then let's get to this.\"\n\nDad made us drinks as I talked. I told them both that I'm not agreeing to their scheme even if you all tied me to the bed. Long distance relationships are doomed and they have been because of what's going on around them, but I was an army brat and had seen a long distance relationships work in real life in the guise of my mom and dad. I had grown up in one, seen how to make it work like they had.\n\n\"I have one question and if you get up out of that chair when I'm done asking it we're finished. Through college do you want a 'don't ask won't tell' relationship.\"\n\nBy the look on both girls faces as they realized what I had asked, meant I may be sleeping on the couch tonight.\n\n\"You dare ask me something like that again and not even your dad standing between us with all his training will stop me from killing your lily white ass. When I give it up it will be to the man I intend to be with for the rest of my life and incase your still slow on the uptake that's you.\"\n\nThis time Jacqui stood and told me to sit down.\n\n\"Now you listen, between college and ROTC training I won't have time for much social life but that doesn't bother me Martin because I can see my end game sitting right at this table. I intend to drag your lily white ass down that aisle, look you in the eyes and mean the words 'I do and never did with anyone else but you' but the camp doctor knows I'm intact. \n\nMom actually blushed and I got the feeling that mom and dad knew each other way to well before I came along.\n\n\"Martin, with all the physical training I'm going to be doing there is a very good chance I'm going to lose my hymen along the way and my heart wont take the pain I will see in your eyes when you go looking for it and its not there anymore and deep in the recesses of your mind you hope that the thoughts your having are not true, even though I would be willing to take a lie detector test to prove the nasty thoughts your having about me are wrong.\"\n\nThe steam seemed to run out of her so quickly after that and she sat back down again. For the first time I understood what mom meant by being practical, although I really did think her solution to Jacqui's worries were at the extreme end of the practical scale and told them all that very thought.\n\n*******\n\nProm night was a jaw dropping event. The dress Jacqui had on was something else, I keep seeing that woman in different ways and tonight as she walked down the stairs of our house was no exception. Even dad was at a loss for words, instead busying himself with a camera, he must have taken twenty shots of us before mom got him to stop. The car was compliments of the base commander, one of dads unit acted as chauffeur for the evening.\n\nSome who had been bystanders while the Jacqui and Martin show was being screened in front of them got brave enough to stand in front of us and tell us they didn't expect us to last this long. Our friends hugged us and others stood to one side and made sure they let us know they didn't want to be 'infected'. We both understood and didn't let them spoil our night out, our friends danced with us and we danced with them.\n\nThe so called non alcoholic drinks flowed and I made a point of watching the in-breeds stood in the corner more often. We were invited to a couple of after Prom parties, we politely turned them down in favor of later dinner with my folks and the base commander and his wife. Yes Jacqui had been busy with her time on base; to the wives she was family by proxy and welcomed everywhere.",
        "It was as we left we both found that those same opinions weren't the same in school. The in-breeds now fueled with 'non-alcoholic' bravery took it upon themselves to right a wrong and teach us both a lesson in the process. My dad being a man of the world always seemed to plan for contingencies and the rest of his team stepped out of the Hummer parked in the shadows of a tree and met the in-breeds half way between the school doors and the base commander's car. \n\nJacqui truly understood the meaning that evening of looking after your own, she was one of theirs now. She had signed on the line. The in-breeds told dad's team they had got it all wrong, they had come outside to take a leak; we were pleasant and wished them well with their future careers as our chauffeur drove us to our late dinner.\n\nIt was strange, this was officially end of school and our break before heading off to college, yet we sat on base helping my folks pack. In between mom dragged Jacqui away for 'girl' talks and dad and I walked and talked more now than we ever had before. He was my best friend and father all rolled into one, we both knew my career was never going to be the military, it didn't stop me knowing what it had done for me all my young life and what it was about to do for Jacqui.\n\nJacqui also had a fan in the base commander's wife. Over our dinner they talked very frankly about many things and had even been invited back a couple of times for coffee mornings. It seems a plan was formed and the base commander got on board, ROTC got a recommendation from the base commander and ROTC took notice. When Jacqui turned up at college three weeks later they were waiting for her.\n\nWe were five hundred miles apart and my folks had moved a thousand. We all felt the loneliness for different reasons. I made sure my studies kept me busy and I had little time for college life, being placed in dorms for the first year wasn't my idea of fun and the stampede to get into fraternity houses the second year left me laughing at the stupidity of some and their need to be accepted. \n\nThe first year I found enough ex brats to hang out with and come the second year we pooled together and rented a house off college. We made sure the girls got the top floor and us guys got the rooms on the second even away from base we seemed to be looking out for our own. As a new piece of communication technology came into use I put Jacqui onto it. She was faring even worse, between studies and ROTC her time to herself was minimal at best but she said the days go faster so she took it in her stride. \n\nROTC also got a chunk of her holidays but we always made sure we headed home together and to us both my folks were our home regardless of where they were. By the end of year two we had every holiday down pat, the folks left us alone for the first day so we could play catch up on each others lives and when Mom shouted us to dinner, it was a reminder that there was more than us two in our lives. \n\n*******\n\nThe law takes time. Since my course finished two years before Jacqui's we decided with my folks help to go for my masters, it also meant we would finish two months from each other. My folks and Jacqui were there when I got that piece of paper and we all turned up to see Jacqui in robes and looking hot. That same day I got down on one knee and asked her to be mine.\n\nShe reminded me that the army got most of her but I was guaranteed the fun bits. My folks booked two rooms, it seems my mom gave Jacqui the nod ahead of time as to what I was planning and she change room reservation.\n\n\"You asked me once and I told you I wasn't giving it up until you put a ring on my finger. You had better have had your vitamins white boy.\"\n\nAlthough the first sign of condoms sent Jacqui into orbit.\n\n\"You wasted your money. I'm not having you in one of those, not now not ever. This is your body and nothing is going to be between us.\"\n\nEven as I looked at her, her eyes rolled.\n\n\"It's called the pill Martin. I've been on it to regulate my periods since high school. When we have children it will be when we want them.\"\n\nSo the condoms found room in the waste basket and both of us smiled like we had won the state lottery when I slid into her for the first time. We fumbled around, we connected and I was way too quick. Something changed in us after that. We explored and found out what being tender with each other can do to a body, we did again what made us enjoy it and added to it as the evening went along. \n\n\"I can't believe you packed a vibrator in my suitcase when I left. Boy was I pissed at you when the girls saw me unpack it, mind you by the end of the first month we all had them the electronic interference was sure fierce around our dorm that was for sure.\"\n\nHer pelvic gave a little wiggle.\n\n\"And don't think I didn't notice the specific size of mine. I've seen you hard before, hell I even had my hands wrapped around your dick a couple of times when I was serving penance. That damn thing was identical to your size.\"\n\n\"Where is it now?\"\n\nThe smile got even bigger, her eyes softened as I gently moved inside her.\n\n\"Never made it, it put up a valiant effort for the first year but died from exhaustion. I've had four since then and all have been the same size and shape. Whose idea was that anyway?\"\n\nThis time I flushed and it wasn't missed on Jacqui, I think she figured it out quickly enough; she was just waiting for me to admit it.\n\n\"Both of my folks.\"\n\nThe giggle caused me to erupt inside her, her legs locked around me and she wasn't letting me go until I had gone soft. I'm glad I had to be honest since it was actually mom who suggested it. Dad took me to one side and thought the same size thing would be a good idea.\n\n*******\n\nIt was a year into our married life that Jacqui started to get distracted, at first she passed it off as being busy, finally I couldn't take anymore and we ended up having a stand up drag out fight. Jacqui lasted a good ten minutes before she broke down and admitted that she liked her job. She wanted to be like dad and become a career officer in JAG.\n\n\"You have got to be shitting me. You have had this in your head for weeks now and it came to me standing over you and shouting at you to admit to this.\"\n\nJacqui just nodded her head, her shoulders slumped slightly and she looked at the carpet.\n\n\"Just what the hell am I going to do with you girl?\"\n\nI heard her whisper. \"Love me.\"\n\nKneeling down on the floor in front of her made her part her knees so I could get closer. I had assumed too much, perhaps it was now I needed to explain something to her.\n\n\"This is something you have had thrust at you. Law was something you wanted to do; dad saw to it that you got your chance albeit with the services backing. The services have never been for me, my folks knew that from a very early age. That doesn't mean I despise the service, my job means I can stay here and if you transfer then I'm perfectly well qualified to get a teaching job if we have to move.\"\n\nI almost got loved to death that evening, when I said I needed oxygen. Jacqui straddled my face and told me to 'breath from this' and with as much effort as I could and two orgasms later she needed oxygen. \n\nEighteen months later she was posted back to our old base, we even asked if our old house was available and got told it was being refurbished at the moment. She stalled on the posting until it was finished and asked again if our old house was available. Subtlety was never her strong point and the base commander told her to stop pissing with his family's officer. She said 'yes sir' and we moved into our old house within the week. We both felt like we had never left.\n\nA year later she walked out of the infirmary with the biggest smile she has ever had, it was also the day a familiar face walked into my classroom. Mabel took steps into the room like each one held a land mine beneath it, to me the past was just that but since Jacqui had never spoken of her family since being disowned I wasn't sure how she would feel about me looking directly at her sister at this moment.\n\n\"C... Can... Please Martin, can we talk?\"\n\n\"How did you know I was here?\"\n\n\"My son told me about a teacher who started here some months back called Mr. Anderson. He said his wife came and picked him up a week ago in an officer's uniform and she was black.\"\n\n\"What do you want Mabel?\"\n\n\"I want... We want our sister back. With dad dead the tyrant in the family has gone, we can all breathe now. Mom knows you're here, she won't come here so it's left to me, she knows she let Jacqui down Martin, we all did.\"\n\nShe tried so hard to hold my stare, it wasn't a competition. I simply didn't know what to do, neither of us have thought of contacting her family, for years now Jacqui looked on mine as hers, she went to mom for female advice and dad when it was military or a male perspective that she didn't want me to know about. \n\n\"Mabel, I will talk to her and tell her I've seen you. I can't talk for her, she's her own woman Mabel, if she refuses then I have no choice but to honor her request, Jacqui's my wife and I don't want the shit she went through with your family to happen again. I can't promise more than that.\"\n\nI got a nod of her head, for a moment she paused and looked towards the classroom door once again before facing me. Mabel was biting her bottom lip in clear indecision over what to do next; finally she put her hand into her bag and came out with an envelope. Holding her arm out towards me as far as it would go, almost as though she was ready to run for it as soon as I took the envelope. \n\nThe envelope sat on the edge of my desk for the next ten minutes. I don't even remember Mabel leaving. School had let out about the same time Mabel must have left.\n\n\"I've been waiting by the entrance for the last ten minutes. Are you ever going to get off your ass and come home, I have some news I have just got to share with you before I bust trying to hold it in.\"\n\nI loved that summer dress, she knew I did. Jacqui's sandals making that slapping noise as she walked towards me. As I looked up she slowed and then stopped. \n\n\"You look like someone's just shot your favorite dog and bought you a cat to make up for it.\"\n\nAs I eased myself up off the chair my hand scooped up the letter. Walking around my desk was easy handing her the letter was way harder. Jacqui leaned her ass onto the desk behind her and opened the envelope; the two page letter took almost five minutes to read the first time. It took twice as long when she read it the second time.\n\nI knew everything there was to know about my wife, the level of communication between us was uncanny. Yet as I stood in front of her that day, it was as though I didn't know her at all. When she put the letter away she started walking out the classroom.\n\n\"Don't forget to lock up behind you, your driving. I guess my news can wait until we sort this mess out.\"\n\nJacqui said nothing to me on the way home; she acted as though nothing had happened in my classroom. The silence between us was not of my making yet I felt I was being punished for something I hadn't done. When I asked her to talk about it, all she said was that it wasn't time yet, even when I asked her what the news was she was bursting to tell me she just shrugged and told me she would tell me later.\n\nThe swiftness with which she stood and took her plate into the kitchen shocked even me, Jacqui managed to get halfway to the sink before she tossed the plate into it, shattering the plate. Her knees buckled and my wife let out a pain wracked sob, burying her head into her hands, her shoulders sagged and she just knelt on the floor crying.\n\nI was out of my chair and holding her in my arms before her fork finished spinning on the kitchen floor. I could do nothing but hold her, even though I felt like the instigator of her torment. \n\n*******\n\nDarkness had enveloped the house; neither of us had said a word since the kitchen. I had got Jacqui onto the couch and tossed a blanket over both of us as I held onto my wife.\n\n\"You think I should at least talk to them?\"\n\nMy mind still pictured Mabel as she came into my classroom.\n\n\"There scared, all of them. Your father was a bully and you were the only one who stood up to him, they are reaching out. They want you back in there lives, like you they don't know how.\"\n\nIt seemed an age before Jacqui moved. The sigh was a forewarning of the blanket hitting the floor and Jacqui walking across the room and to the phone.\n\n\"I need you both. Can you come over this weekend? Thank you, I love you both so much.\"\n\nJacqui put the phone down and turned to face me. Even in the dark her posture seemed to improve since the phone call to my folks, she had called in reinforcements and my folks are the only ones who knew everything. I held her for most of the night, sometimes she cried mostly she lay there pretending to sleep in the hope that I would at least get some rest.\n\nMy folks arrived the next day. I was still at work so missed the meeting, when I arrived Jacqui was just making a phone call. I stood behind her and listened.\n\n\"Your all invited to a barbeque on Saturday. Leave the children with sitters because if any of you give me shit I'm liable to shoot you and go for a temporary insanity plea. If you don't turn up then keep away from me and my family. Your husband is dead and I mourned him the day I came back by squatting over his grave and pissing on it,\"\n\nShe had the presence of mind to look guilty when she turned and saw me standing behind her.\n\n\"They are reaching out to you Jacqui; don't cut them off at the knees before they even get a chance to talk, to explain.\"\n\n\"I lost my family because they never had the backbone to back me up. They can't wipe away the joy I heard in that mans voice when he said he lost my college money in a weekend at Vegas. My mom stood in this very room and told me to my face that she would take care of it, a lot of good her word was then.\"\n\nJacqui went upstairs and slammed the bedroom door. Mom and dad came out of the kitchen, it was clear they had heard everything. Mom and Jacqui went shopping most of Friday afternoon; dad and I were sent to retrieve the bags when they got back. We ran out of table space and some ended up on the floor.\n\nDad cornered mom. \"Just how many are coming to this barbeque on Saturday, it's starting to look like were feeding the base.\" \n\nMom shrugged and with a smile admitted that they were talking as they shopped and got a little carried away. Dad and I just looked at each other and thought that must have been some talk they had. As Friday evening wore on Jacqui started to get more nervous, in the end I dragged my wife and folks to the PX to dance. It was the first time I had seen her smile since the day she walked into my classroom.\n\nWe started the barbeque at ten so it was ready for eleven. The girls made the kitchen a no go zone and just left the cooler boxes by the door ready for us to take when we needed them. At eleven thirty a car pulled up in front of the house, Jacqui made a point of being there when her folks got out. We met them all in the day room. \n\nJason had aged well. I bet the suit he had on cost a buck or two as well. He was the first to walk up to me holding his hand out as he did. We shook hands, this wasn't the Jason I remembered from school.\n\n\"I... We need our sister back man, this isn't going to be easy but help us.\"\n\nJacqui rounded on her mother. \"You put him up to this?\"\n\n\"Jason opened the envelope you sent back; he carries those same two parts of the invite with him. He knows first hand now the true feelings your father evoked and swore to do all he could to make life better for us all.\" \n\nHer mom shook her head as she watched the connection between us.\n\n\"The day your dad died your brother locked himself in his room and wouldn't come out. The day we buried him your brother was never a boy again. He's been the man of this family ever since. He purged our house and lives of any connection we had with your father, the one thing we couldn't get back was you.\"\n\nHer mom moved to hug Jacqui before she once again looked at her daughter. Dad and I made ourselves useful and set about burning meat, mom passed things through the window and we also got the table ready. Tears and tissues were in abundance that day, me and my folks were on standby but we were never needed.\n\n*******\n\n\"So you see Haley, your mom had a checkered past, some of which drove her close to despair. We found each other that day in the library, when I looked up and into those eyes I was lost to her. It took a while for us to fit but the wait was worth it. I'm looking at the reason why the wait was worth it right now.\"\n\nOur daughter blushed, and handed her mom another tissue. Perhaps her emotions were playing catch up, I'm not really sure but it was clear to see she still had a question in her.\n\n\"Mom, what was the thing you wanted to tell daddy that day at the school?\"\n\nI think the look a mother gives a daughter is often enough; putting it into words can only be the icing on the cake really.\n\n\"The doctor at the infirmary had just told me I was carrying you. When we settled down to eat that day of the barbeque it reminded me that I hadn't told your father. That day I got my family back, it was also the day I gave your daddy and my husband a family.\"\n\nThe End"
    ],
    "authorname": "markelly",
    "tags": [
        "library",
        "college",
        "love",
        "family",
        "sadness",
        "hope",
        "retaliation",
        "reconciliation"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-telling-of-our-lifetime"
}