{
    "title": "Reboot Pt. 02",
    "pages": [
        "Author's note:\n\n Thanks to everyone who read and commented on part 1. This is the second and final chapter of Sumita and Jenna's story. As usual, it's quite long, though for once the sexy bits start near the beginning.\n\n ~~~\n\n Jenna woke slowly. She felt warm and light, drifting down a wide, lazy river into consciousness. When she opened her eyes, the room was swimming in morning sunshine reflected off the lake outside the window. She had not been so content in a very, very long time.\n\n There was a painting on the wall opposite the bed, a large canvas of angry reds and oranges. It was one of her own, called Argument, but she was almost as surprised to see it in the morning light as she had been last night. Marco's gallery sold it two months ago, and she didn't know who bought it until stumbling into the bedroom, hands and lips locked together with her new lover. Even in the grip of her desire, it caught her off guard. Of the many delights of the evening, seeing her own painting on the wall was the biggest surprise.\n\n Behind her, Jenna felt Sumita stirring. An arm was slung possessively over her side, the hand lost in a tangle of bed linen. Large, soft breasts pressed against her back, exhaled breath warmed her neck, and the long leg entangled with hers twitched ever so slightly. Sumita mumbled something, nuzzled closer into Jenna, and became still again.\n\n Jenna hadn't expected to stay the night. She had come over in the afternoon to cook with Sumita, to learn how to make a traditional Indian meal, and to get to know her a little better. She was planning to go slow, let Sumita get used to the idea of being with a woman, if that was even what she really wanted. Sumita was a widow, after all, married to a man for something like twenty years. Just a simple, casual afternoon together. No pressure and no expectation. That was the plan, anyway.\n\n Sumita blew Jenna's carefully considered plan to smithereens. Instead of a simple Indian meal, Sumita put together a feast, made entirely from scratch. The whole experience of cooking and eating was amazing, sensual and intimate in a way Jenna had never imagined possible. Afterward, they talked about nothing and everything late into the night, and when Sumita asked her to stay, there was only one answer Jenna could make. When Jenna thought about what they did in bed together, the mellow warmth in her body turned to moist heat, and she tingled all over.\n\n Jenna felt Sumita's body jerk, heard a sharp intake of breath, and suddenly Sumita was awake. Jenna rolled over to face her.\n\n \"Good morning,\" Jenna said, grinning like a kid opening her big birthday present.\n\n Sumita blinked a few times, trying to focus her eyes, and then returned Jenna's big grin. She kissed Jenna on the forehead, got up out of bed, and walked toward the bathroom. Her full, round ass jiggled as she walked, and the way her hips swayed back and forth told Jenna she knew she was being watched, and she didn't mind at all.\n\n When Sumita finished in the bathroom, Jenna took her turn. Sumita had assembled the electric toothbrush for her, with the brand new brush head Jenna had used last night. In the morning light, Jenna noticed the little blue identifying band around the base. The other brush head, sitting in its place on the stand, had a pink band. Jenna chuckled to herself.\n\n \"You're such a girl,\" she said to Sumita when she emerged from the bathroom, in a voice that made it clear that wasn't a complaint. \"Pink toothbrush, pink outfit, pink hairband.\"\n\n \"Well you, dear Jenna,\" Sumita replied, \"are all woman.\"\n\n Jenna fell back into bed next to Sumita, and Sumita pounced, kissing Jenna fiercely on the mouth and pulling her in close. Jenna's body responded instinctively, and Jenna was soon arching her back, pushing her tits into Sumita's willing mouth. One hand was on that wonderfully full, round ass, and the other was gripping a handful of bed linen, an anchor in the storm that was Sumita Desai.\n\n Jenna closed her eyes and let herself feel, just feel. Sumita was new at this - her very first time with a woman had been last night, with Jenna - but what she lacked in finesse, she made up for in pure, raw, burning desire. Sumita wanted Jenna, and Jenna wanted Sumita to want her.\n\n Sumita's hands were everywhere, trying to stroke and to hold and to possess every inch of Jenna's long athletic frame. Her mouth followed, gently nibbling Jenna's ear and nuzzling her neck, and then it was making a line of kisses down her arm, or across her belly, or up the inside of her thigh. Jenna laid her head back on the pillow that still smelled of Sumita and let it happen, all of it. She couldn't stop it, and she didn't want to.\n\n It had been a long time, much too long, since Jenna had felt anything like this. She'd had a few other lovers in recent years, but none of them made her feel like Sumita did.\n\n Jenna felt hands caressing her tits, fingers pinching her nipples. The movement was deliberate and confident, never tentative or hesitant. Jenna cried out when one hand pinched too hard, but the brief flash of pain only made the pleasure that much more intense.\n\n \"Sorry,\" Sumita said, but she didn't stop.\n\n Wet lips replaced fingers around the throbbing nipple, and Jenna moaned. She spread her legs, aching to feel a hand or a tongue between them, but Sumita made no move to satisfy her. Sumita was intent on exploring Jenna's body slowly, by the hidden overland routes that other lovers had neglected, and she discovered sensitive spots that Jenna didn't even know she had: the crook of her elbow, the crest of her ear, the bottom edge her ribcage. Whether this was a deliberate plan or simple inexperience, the effect was the same - it drove Jenna mad with desire.\n\n When Sumita's hand (accidentally?) brushed up against Jenna's pussy lips, already slick with arousal, Jenna actually screamed. Nobody had ever made her scream before during sex. Nobody had even come close. There was something about Sumita, something beyond simple physical desire, that connected her to Jenna in a way she hadn't experienced in years, or perhaps ever.\n\n After Jenna screamed, Sumita finally got the message, and her open mouth landed right between Jenna's legs, licking and sucking and slurping. Jenna closed her eyes and willed her body still, so that she could take in every swipe of Sumita's tongue, every caress of Sumita's fingers inside her. After what could have been twenty seconds or twenty minutes, she heard herself screaming again, her back arched, and the most amazing orgasm crashed over her.\n\n The physical sensation, centered in her clit, wasn't sharp and intense, like she was used to. It was bigger and heavier; it spread throughout her whole body, making her scalp tingle and her toes curl. It seemed to last forever, and Sumita just kept feeding it with her strong fingers and gentle tongue. After the long, tantalizing buildup, this was the release she desperately needed.\n\n \"Oh, wow,\" Jenna finally said when the tremors stopped. \"Where did you learn to do that?\"\n\n \"I don't know,\" Sumita replied. \"Years and years of fantasizing, I guess. I still don't really know what I'm doing, and everything is so wet and slippery...\"\n\n \"That's a good thing, you know,\" Jenna said, smiling down at Sumita.\n\n Sumita didn't reply. Instead, she snuggled in next to Jenna and kissed her soundly. Jenna could taste herself on Sumita's lips. Her smile grew wider, and she laughed in spite of herself, breaking the kiss.\n\n \"What?\" Sumita asked, laughing herself.\n\n \"You don't really know how amazing you are, do you?\" Jenna said, looking into her lover's dark brown eyes. \"You've been a lesbian for like ten hours, and you're totally shameless. You went down on me like it was the most natural thing in the world.\"\n\n \"I've been a lesbian my whole life,\" Sumita replied. \"I just didn't know what to about it until last night.\" \n\n \"Fair point,\" Jenna agreed. \"Still...\"\n\n \"I really did okay?\" Sumita asked, sounding a little insecure for the first time since they'd woken up together. \"I do want to make you feel good.\"\n\n \"Yes, Sumi, you did better than okay,\" Jenna replied. \"You definitely made me feel good. We can work on your technique a little, but you've got all the right instincts.\"\n\n \"Well, if there's something I can improve,\" Sumita said, \"I think you should demonstrate for me.\"\n\n Just in case Jenna didn't get the message, she grabbed Jenna's ass and added, \"Or, rather, on me.\"\n\n \"See what I mean?\" Jenna asked, shaking her head and laughing. \"Totally shameless.\"\n\n Sumita nodded her head up and down, with a big, excited smile on her face and mischief in her eyes. Jenna nuzzled her nose into Sumita's throat, kissing and nibbling, and Sumita's smile vanished. Her mouth opened, her eyes closed, and she let out a soft little moan.\n\n \"I think I can find some things to show you,\" Jenna said. This was going to be fun.\n\n \"Uh-huh,\" Sumita replied, in a voice that told Jenna to stop talking.\n\n Jenna began with gentle caresses up and down Sumita's body, as far as her long arms could reach, but those didn't last long. Sumita was already warmed up and very wet, and she needed to feel Jenna's hand between her legs. Jenna gave her what she needed.\n\n Her fingers slid easily over the warm, silky flesh around Sumita's opening, and Sumita responded to her touch with a gasp.\n\n \"Oh, Sumi,\" Jenna whispered into her ear, \"you are so fucking sexy.\"\n\n Sumita's hips bucked, grinding against Jenna's open hand. Jenna slipped a finger inside, and Sumita squealed with delight. It was almost too easy, as if Sumita were a hormone-addled teenager rather than a full-grown woman. I guess years of pent-up desire can do that to a person, Jenna thought.\n\n Jenna moved the finger in and out, enveloped in the warm softness of Sumita's pussy, and then ... right there. She found it. Sumita's back arched, and her moans became louder. Jenna rubbed her finger against that particular spot inside Sumita that drove her wild.\n\n Jenna's other hand slid down Sumita's belly, over her silky black bush, and eased into the gap between her lips. When the tip of Jenna's finger slid over Sumita's clit, her body thrashed about, entirely out of her control. Jenna pushed Sumita to the very limit of what she could endure, and then pulled back just enough to keep her from coming.\n\n She held Sumita right on the edge for a while, and then she leaned over and took a very hard nipple into her mouth, sucking, teasing with her tongue, and even nibbling lightly. Sumita thrashed again, wordlessly begging for release, but Jenna denied her, pulling her back from the brink once, then twice, and finally letting her go.\n\n Sumita came in a great shudder, and Jenna laid back in bed next to her to hold her as the wave crashed over her. Jenna's finger was still inside Sumita, though now only stroking gently, and Sumita clenched around it and relaxed again as the tremors came and went. Jenna fixed her eyes to Sumita's face as it melted from raw desire into serene bliss. She had never seen anything so beautiful.\n\n Sumita lay there a while panting, eyes closed, and Jenna held her.\n\n \"Learn anything?\" Jenna asked when Sumita opened her eyes.\n\n \"Oh, yeah,\" Sumita replied. \"You know exactly what to do with my nipples, and that thing you do with your fingers...\"\n\n Jenna soon found herself on her back, with Sumita ready for another round.\n\n ~~~\n\n \"If we keep this up, I'm not going to be able to move,\" Jenna said as she sat up in bed.\n\n \"I know what you mean,\" Sumita replied, stretching her arms and arching her back, causing her tits to bounce and sway. \"I'm not as young as I used to be. How about we go out for a hike to work out the kinks?\"\n\n \"That sounds great,\" Jenna said, \"but I have to eat something first. I'm starving.\"\n\n \"I think we can manage that,\" Sumita said, smiling happily. \"Why don't you get cleaned up while I start a fresh batch of chapattis.\"\n\n Jenna climbed out of bed and searched the room for her clothes and her boots, discarded last night in the heat of passion. Most of her stuff was in a pile by the foot of the bed, but she had to hunt for her sports bra and left boot. The bra turned out to be hanging from a drawer pull on Sumita's dresser, and the boot was far enough under the bed that she had to lie on the floor to reach it. Sumita watched the hunt with an indulgent grin, and she gently slapped Jenna's ass when Jenna bent down to retrieve her boot.\n\n Sumita's bathroom, like the rest of her house, seemed to Jenna more like a glossy magazine spread than a place someone actually lived. The walls were papered with a muted forest pattern, the floor was creamy stone, and the countertops were mirror-polished gray granite, set out with a tidy, precise array of bathroom stuff. Jenna took a long, hot shower and wrapped herself in a plush oversized towel.\n\n She wandered out into the kitchen to find Sumita finishing the chapatti dough and setting the bowl on the top of the fridge to rest. Sumita was wearing an oversized men's pajama top, with nothing underneath. Jenna slid in behind her, pulled her close, and buried her nose in the mess of curly hair that floated around Sumita's head like a cloud.\n\n \"Was this his?\" she asked, running her hand down Sumita's side over the pajama top.\n\n \"Yeah,\" Sumita replied. \"After Rajeev died, I wore this because it still smelled like him, and I needed something to hold onto. Now it's just habit, I guess.\"\n\n Sumita sighed. Rajeev's memory was heavy enough in the house that even Jenna could feel it. It wasn't anything or anywhere in particular; it was just there, as real as they air they were breathing. She couldn't even imagine how Sumita felt, still living in the home she used to share with her husband. Especially after what they'd done together last night...\n\n \"I can get lunch started while you take a shower,\" Jenna said, changing the subject. \"... if you want.\"\n\n Sumita shook her head no. \"Just relax, unless you're really hungry,\" she said, smiling and cheerful. \"Come talk to me while I take a bath.\"\n\n Jenna didn't need any convincing. She followed Sumita back to the bathroom. Sumita took her nightshirt off, hung it from a hook in the bathroom closet, and ran a bath. Jenna unwrapped herself and hung her towel on the bar next to the shower.\n\n \"You could join me,\" Sumita said with a grin as she climbed into the bath.\n\n \"Tempting,\" Jenna said, \"but no. I'm already a prune from the shower.\" With a glint in her eye, she added, \"Besides, I really like the view...\"\n\n Jenna sat naked on the corner of the bathtub, leaning back against the tiled wall, while Sumita had a relaxing soak. Jenna dipped a foot or a hand into the water from time to time for skin-to-skin contact, and they talked about random things until Sumita decided to wash her hair. Jenna held out a towel for Sumita after she climbed out of the tub and rubbed her dry, and then Sumita sat down and Jenna towel-dried her long, wet mass of brown curls.\n\n \"I do love long hair,\" Jenna told Sumita, running her fingers through Sumita's hair and fetching a hairbrush from the countertop. When Sumita didn't object, she started to brush.\n\n \"Oh, that feels lovely,\" Sumita said, melting into a puddle. \"I haven't had anybody brush my hair like that since I was a teenager.\"\n\n Jenna smiled, kissed the top of Sumita's head, and kept brushing. After a while, Sumita asked, \"If you like long hair so much...?\"\n\n \"I like long hair on other women,\" Jenna replied, letting out a low, throaty laugh. \"On me, not so much.\"\n\n Sumita returned the laugh and closed her eyes.\n\n Once Sumita's hair was dry and brushed, she reluctantly hauled herself to her feet and dressed. Jenna put on the clothes she wore yesterday. She hadn't brought anything to change into.\n\n They made chapattis together in the kitchen, a sensual echo of last night, and nuked a selection of leftovers. Instead of the elegant thali trays and the lakeside table, they spooned their food onto one big ceramic platter and sat together on the couch, scooping up bites for each other with the warm chapatti flatbread. When the platter was clean, they had just enough room in their bellies for a small bowl of rice pudding.\n\n They washed up together, put the leftovers back in the fridge, along with a few fresh chapattis, and walked out to Sumita's car in the garage.\n\n \"We'll have to drive before we can walk,\" Sumita said. \"The lake shore is beautiful, but it's all private property around here. Marymoor Park is reasonably close, though, and there are some nice walks there.\"\n\n \"That's fine,\" Jenna replied, \"just as long as I get outside for a while. I need some air and some sun.\"\n\n \"Me too,\" Sumita agreed, and they were on their way. The walk was pleasant, warm, and uneventful until the end, around the off-leash dog area, where half a dozen excited dogs yipped, pranced, and jumped at Jenna, who stopped to pet each one.\n\n Sumita drove home, still smiling at Jenna's way with the dogs. When she pulled into the garage, there was a small gray Audi parked behind Jenna's car. Her daughter Sangita was home early.\n\n ~~~\n\n \"Hey, Gita,\" Sumita called out as she and Jenna walked in the front door.\n\n For a moment there was no reply, and then the clink of silverware against a plate, the sound of a mouth full of food attempting to speak, and more silence. \"Hi, Mom,\" Sangita finally called. \"I'm in the kitchen.\"\n\n Jenna followed Sumita into the kitchen, where a pretty young woman was sitting at the counter with a plate of food from the fridge, mostly already eaten. Gita had her mother's voice and eyes, though her build was thin and her hair was straight.\n\n \"Gita!\" her mother scolded, \"I was saving those leftovers for Jenna to take home.\"\n\n \"Mmmmf,\" Gita replied, swallowing. \"Sorry. I didn't know.\"\n\n \"It's fine,\" Jenna said, smiling at Gita. \"I'm sure there's plenty. We made enough last night to feed a small army.\"\n\n Gita beamed back at Jenna, unrepentant. It wasn't like the containers were labeled or anything.\n\n Sumita opened the fridge and took stock of what remained. \"You should still have about three meals left, if you share with your sister,\" Sumita said to Jenna.\n\n \"There's also Brendan,\" Jenna replied, reminding Sumita of her twelve-year-old nephew.\n\n \"Probably just one large meal, then, or two small ones,\" Sumita said, glaring at Gita. \"I know how much kids eat, especially when they're still growing.\" \n\n The stern, motherly look lasted about two more seconds, and then dissolved into an indulgent smile. Jenna didn't know what to make of the exchange. She was very familiar with the stare of maternal disapproval, but she hadn't seen a smile like that on her mother's face since she was six.\n\n \"You must be the painter,\" Gita said to Jenna. \"Mom really loves the new painting hanging in her bedroom. I think it's ... I don't know. Cool. Not pretty, exactly, but cool.\"\n\n \"Cool is good,\" Jenna replied. \"I can live with cool.\"\n\n \"So you spent the night?\" Gita asked, leaving both Sumita and Jenna sputtering.\n\n \"You said, 'we made enough last night...',\" Gita explained.\n\n Sumita took a deep breath to recover her composure. \"Jenna came over yesterday afternoon to cook with me,\" she said to her daughter, slowly and deliberately, \"and it was very late when we finished dinner, so she stayed over.\"\n\n \"Whatever, Mom,\" Gita said, rolling her eyes. \"I'm totally fine with whatever you two did last night, or didn't do. It's none of my business...\" She let the words hang there a while, looking straight at her mother, who couldn't quite return her gaze. Jenna tried to make herself small.\n\n \"Anyway,\" Gita continued, scooping up the last bite of food on her plate with the remains of a chapatti, \"I'm going to go hang out in my room and let you two have some alone time. I had two days without a good cell signal, so I've got a lot to catch up on.\" She popped the bread in her hand into her mouth, and then she rinsed her dishes in the sink, put them in the dishwasher, refilled her iced tea glass, and disappeared.",
        "Sumita and Jenna were still for a while, trying to absorb what had just happened.\n\n \"Huh,\" Jenna finally said. \"That was ... weird.\"\n\n Sumita let out a long sigh that might have also been a laugh. \"I've known that girl literally her whole life,\" she said, \"and I still never know what's going to come out of her mouth.\"\n\n \"I should probably get going,\" Jenna said. \"Work tomorrow morning and all.\"\n\n \"Stay a while,\" Sumita replied, moving in close, \"at least until dinner.\"\n\n Jenna opened her mouth to decline, but the words stuck in her throat.\n\n Sumita wrapped her arms around Jenna's waist, looked into her eyes, and added, \"Please.\"\n\n It was less than a demand, more than a request. Jenna hesitated for a moment, feeling guilty about Rose having to do all the weekend cooking by herself, but not guilty enough to say no. \"Sure,\" she said. \"I just have to text my sister to tell her I'll be late.\"\n\n Jenna did just that and then followed Sumita into the living room. She wondered vaguely about what they would do for the next few hours, but Sumita had it covered. Jenna was buried under a small avalanche of Indian cookbooks when she sat down next to Sumita on the couch.\n\n \"You said you wanted to learn Indian cooking,\" Sumita said, \"and one day isn't nearly enough. We could try a biryani next time, and...\"\n\n \"Next time...?\" Jenna asked, cutting Sumita off. \"Are you inviting me back?\"\n\n Sumita got flustered and looked down at her knees. \"Yeah, I think so,\" she said. \"Last night was definitely worth doing again.\"\n\n Jenna leaned in and kissed Sumita on the lips, and they fell into a discussion of what to cook next, which broadened to include childhood memories of food and holidays and lazy summer weekends. Before they knew it, it was five o'clock.\n\n \"How about pizza for dinner?\" Sumita asked. \"I've done enough cooking for a while, and I know you have an early morning.\"\n\n \"Sounds good to me,\" Jenna said.\n\n \"Do you mind if Gita comes along?\" Sumita asked. \"It's okay if you want it to be just the two of us.\"\n\n \"It's fine,\" Jenna replied, though she was not at all sure that was true. She found Sumita's daughter intimidating.\n\n Sumita knocked on her daughter's bedroom door, and Gita emerged ready to go. She was never one to turn down free food.\n\n ~~~\n\n Jenna followed Sumita to dinner in her own car since she planned to drive straight home afterwards. They went south, skirting the eastern edge of Lake Sammamish, and then across I-90 into Issaquah, where the pizza place was right off the main drag.\n\n It wasn't quite dinnertime when they arrived, so the dining room was almost empty. They were seated at a corner table, with the afternoon sun brightening up the dark wood of the walls and floor. A pretty redhead about Gita's age showed up to take their order - an iced tea and a salad each, and a dinner-sized pizza to split - and then disappeared. Gita sat back in her chair, stretching legs stiff from a weekend of camping and hiking.\n\n \"Good trip?\" Sumita asked.\n\n \"Yeah, mostly,\" Gita replied, laughing at some memory or other. \"Dina and I had all our stuff ready to go, but the guys were pretty disorganized. Rex wound up borrowing Dina's sleeping bag, and we did all the cooking on my stove, since it was the only one that worked.\"\n\n \"Boys,\" Sumita said, shaking her head.\n\n Jenna snorted.\n\n \"I know, right?\" Gita said. \"It was warm out, so I unzipped my bag out flat and Dina and I shared. If it had been cold, I would have told Rex to go crawl into Sridhar's sleeping bag.\"\n\n Gita giggled to herself over the scene that would have created. Sumita raised an eyebrow at her daughter.\n\n \"What?\" Gita asked. \"So if two girls share a bed, that's completely fine, but if it's two dudes, even if absolutely nothing happens, they're suddenly the gayest gay guys who ever walked the planet. It's all so stupid. People should just be who they are.\"\n\n If only it everything were that simple, Jenna thought.\n\n The redheaded waitress appeared with their salads - a basic garden salad for Sumita, Mediterranean with fennel and orange for Jenna and Gita - along with refills for their iced tea. The table got quiet while they ate.\n\n After the salads were down to remnants, Sumita said to Gita, \"I'm surprised you can eat anything after you made such a dent in Jenna's leftovers.\"\n\n Gita shrugged, completely unapologetic. \"I was hungry,\" she said. \"We didn't have that much to eat since Sridhar also forgot like half of the food he was supposed to bring.\"\n\n \"It's fine,\" Jenna said. \"I really don't mind.\"\n\n Gita flashed Jenna a grateful smile. She didn't enjoy being on her mother's bad side, even for something trivial. \"You guys must have gone all out,\" she said. \"All the stuff you made was amazing.\"\n\n Sumita smiled. \"Well,\" she said, \"Jenna wanted to learn how to do traditional Indian cooking, so I showed her everything I could fit into one day, starting with the basics.\"\n\n \"You made homemade ghee, didn't you?\" Gita asked Jenna. \"And paneer too, probably. Mom can get really ... intense sometimes.\"\n\n \"Yup,\" Jenna replied. \"Everything was from scratch.\"\n\n A memory popped into her head, and her face scrunched up involuntarily. \"... except that mango pickle,\" she added. \"That came out of a jar, and it was really sour.\"\n\n \"Yeah,\" Gita replied with a giggle. \"I don't like those either.\"\n\n Gita picked up her glass of iced tea from the table and took a sip, smiling innocently over the rim. \"You know,\" she said, looking straight at Jenna, \"Baa would be shocked...\"\n\n Sumita went rigid. Jenna wondered what was going on.\n\n \"... you finally learned how to make round chapattis,\" Gita continued, turning to face her mother. \"She's been giving you hard time about them ever since I can remember. Me, too, when I go to visit, but I don't pay any attention.\" She sucked iced tea through her straw until it gurgled and set her glass down on the table.\n\n \"Um,\" Sumita said, and her mouth kept moving, but nothing else came out.\n\n \"I know it's a big deal for her, some sort of Indian ideal of womanhood,\" Gita said, \"but they don't taste any different if they're a little uneven. It's just weird that's what she gets so hung up on.\" \n\n Sumita took a deep breath. \"Your grandmother, both your grandmothers, have some very ... traditional ideas about marriage and motherhood,\" she said. \"They just wanted me to be the best I could be at taking care of you and your father.\"\n\n \"Oh, I know,\" Gita replied. \"I heard all about it on my summer trips. I think I'm going to be a bit of a disappointment in that department. But you've been an absolutely perfect wife and mother. I don't see why they have to criticize you.\"\n\n \"They don't always agree with your assessment,\" Sumita said drily. \"Your aunt Simran was always the perfect one. It was worse when I first got married, but after you turned out okay, I think they both finally decided I wasn't a total disaster.\"\n\n Gita broke into a big, beaming smile, and Jenna felt like she'd fallen into one of those private family moments, the kind you can't understand if you're not part of it. She was also aware of something under the surface, something dark and threatening that both mother and daughter were aware of but neither would acknowledge. Jenna's presence would eventually upend the quiet truce Sumita had with her family.\n\n Jenna felt like she needed to say something, but she had no idea what that should be. She was saved by the waitress, who came by to collect their salad bowls and drop off the pizza. Gita pulled a slice onto a plate for Jenna, another one for her mother, and then grabbed one for herself and took a bite.\n\n \"Yum,\" she said. \"I love those little peppers.\"\n\n Jenna took a bite of her own, almost burning her mouth. The crust was the perfect balance of crispy and chewy, and the sweetness and vinegar of the peppers cut through the thick, salty mozzarella. After a few seconds, the heat of the peppers kicked in, spreading a pleasantly numbing fire over her tongue. \"Mmmm,\" she sighed.\n\n Sumita and Jenna each had two pieces, and Gita polished off the other half of the pizza. When the waitress suggested dessert, Gita was tempted, but they passed. The dining room was still fairly empty, so they sat a while longer, drinking iced tea and talking. Gita caught her mother up on everything going on with her friends, mostly getting ready for college or already gone; Sumita talked about her coworkers, especially Sarah, who was also one of Jenna's close friends; and Jenna talked a bit about her day job at the catering company she ran with her sister Rose. After a while, the conversation came around to Jenna's art.\n\n \"Is everything you do so ... I don't know ... abstract?\" Gita asked.\n\n \"I do have a certain style,\" Jenna replied. \"I try to push myself, not let myself get stuck in a rut, but yeah, all my paintings do look a lot like the one your mom bought. All the good ones, anyway. I've done some other, more representational stuff, but it's mostly crap.\"\n\n Gita and Sumita both giggled.\n\n \"How do you do it?\" Gita asked. \"Make the figures work, I mean? It's like, you're just staring at a bunch of random stuff, and then suddenly it's a person, and you can tell exactly what they're feeling.\"\n\n \"Honestly, I don't know,\" Jenna said. \"I just see people a certain way in my head. I try to break them down to their elements, and then reassemble them on the canvas. Not always specific people, necessarily, sometimes just characteristics or archetypes.\"\n\n \"And they're mostly women?\" Gita asked.\n\n \"Mostly,\" Jenna said. \"I did one based on my nephew Brendan when he was a little kid, and a couple of grown men.\"\n\n \"Mom showed me the one in Sarah's office,\" Gita said. \"Was she real? It seemed like you were totally in love with her.\"\n\n \"Yes, she was real,\" Jenna said, and her voice dropped to a whisper. \"And I did love her, very much.\"\n\n Sumita took Jenna's hand under the table, and she glared at her daughter.\n\n \"Sorry,\" Gita said, averting her gaze, \"I didn't mean to ... you know. I'm sorry.\"\n\n \"It's alright,\" Jenna said, making sure to breathe. \"It was a long time ago. I wouldn't put stuff out there if I didn't want people to see it.\"\n\n Jenna got quiet after that, and it seemed to everyone like it was a good time to leave. Sumita paid the bill, and the three of them walked out to the parking lot together. Gita climbed into her mother's car to give Sumita and Jenna a moment to themselves.\n\n \"Thank you,\" Jenna said. \"For the cooking lesson yesterday, and for everything else. I had a really nice weekend.\"\n\n \"Me too,\" Sumita replied. \"You've made me happier than I could have imagined a few months ago.\"\n\n Jenna didn't know how to respond to that. She tried to get something out, even if it sounded dumb, but Sumita caught her off guard. She leaned in, wrapped her arms around Jenna's neck, and kissed her full on the lips, right there in the parking lot. Jenna reacted automatically, closing her eyes, wrapping her arms around Sumita's waist, and returning the kiss with as much passion as she felt from Sumita.\n\n When they broke apart and Jenna opened her eyes, she had a fleeting glimpse of Gita sitting in Sumita's car with a big grin on her face. It was gone in an instant, and Jenna worried that she might have imagined it.\n\n \"Can I call you tomorrow evening?\" Sumita asked, and there was no mistaking her smile.\n\n \"Um, yeah, sure,\" Jenna replied, trying to regain her bearings. \"I get done pretty early, so whenever you have time is fine.\"\n\n \"Okay,\" Sumita said, and gave Jenna a peck on the cheek. \"Talk to you tomorrow.\"\n\n \"Okay,\" Jenna replied. \"Talk to you tomorrow.\"\n\n Sumita got into her car and drove off, waving at Jenna on the way out of the parking lot. Jenna walked over to her car, got in, and sat unmoving in the driver's seat while Sumita drove off.\n\n ~~~\n\n \"Fuck! Fuck! Fuck! Fuck! Fuck!\" Jenna cried, pounding her steering wheel, when Sumita's car was out of sight. \"I am completely and totally screwed.\"\n\n For the past seven years, Jenna had played it safe. She had only dated women like her - tough, short-haired, out-and-proud dykes who'd sooner walk naked through the snow than wear a dress. The relationships were comfortable, predictable, and boring, and that was okay. It was better than all the drama and the tears that inevitably came with falling deeply in love. And the sex was always above average - when you've fully accepted your sexuality, it's easier to lean into it and enjoy it, without all the hang-ups and guilt. Jenna was rapidly approaching forty, and settling down with comfortable, predictable, and boring was starting to look a lot better than ending up alone.\n\n The one exception, three years ago, was Mandy, but she didn't really count. She was a pretty thirtyish dental hygienist who was questioning herself after a bad breakup. Three months later, Mandy finally realized what Jenna had known all along - even though she liked playing around with girls, she really needed a man. Jenna was a bridesmaid when Mandy married a chef named Ibrahim last year.\n\n Sumita, though. Sumita was the opposite of safe. She was the kind to fall in love, deeply and completely, and, even worse, she was the kind to make Jenna fall in love with her, just as deeply and just as completely. Sumita was successful, brilliant, and beautiful, and way out of Jenna's league. There would be tears with Sumita, lots of them. And when it ended, as it inevitably would, it would hurt like hell. It would hurt just as much as the last time Jenna let herself really fall in love.\n\n Everything was just like it was with Tess. The year they were together was the best of her life. The year after they broke up was the worst, even worse than when Jenna turned eighteen and her parents disowned her.\n\n The only question for Jenna was whether to run away now, before Sumita got her tendrils in so deep there would be no escape. And then Jenna realized that it was already too late. Sumita had only been gone five minutes, and Jenna was already thinking about that phone call tomorrow like a kid waiting for Christmas. Jenna knew she would ride the tiger as long as she could, waiting the whole time to be thrown off, knowing that when she was, she'd be torn to ribbons.\n\n \"What am I going to do?\" she asked herself. She did not have an answer.\n\n She sat up in her seat, shook her head sharply to reorient herself, and turned the key in the ignition. Forty minutes later, she was pulling into her driveway, with no memory of the drive home.\n\n \"Well,\" she told herself with a rueful smile, \"at least I didn't crash on the way.\"\n\n ~~~\n\n Jenna lived with her sister Rose and nephew Brendan in a split-level nineteen thirties house in the Ballard neighborhood of Seattle, a few blocks from the locks on the ship canal.\n\n Fourteen years ago, Rose married a talented, handsome architect named Sean O'Connor, and a little under two years later, they brought a healthy, happy baby boy into the world together. Sean made enough money that Rose didn't need to work, and she wanted nothing more than to take care of her husband and child. Things were great.\n\n After a while, though, things were not so great. They tried for another baby, but after three years of fertility treatments and a miscarriage, they gave up. Sean was a good provider and a good father, but he seemed less and less interested in being a good husband, and when his career took off, he spent more and more time at work. Rose started baking and cooking for friends and neighbors, mostly just to fill the time while Brendan was at school, and after a while it turned into an informal business, providing Rose with some spending money and some independence.\n\n It was no surprise to anyone when, two years ago, they split up. Sean was offered a big promotion - more exciting, innovative work and a lot more money. The catch was that it was in LA. Rose didn't want to move herself and her son to a new city, but she also didn't want to keep Sean from his dream job. They talked it out and realized that Brendan was the only thing keeping them together, so they got a divorce. No cheating, no fights, no drama, no tears; just a long, sad sigh.\n\n Rose and Brendan got the house, free and clear, along with most of the limited savings. Sean got Brendan for a month every summer, plus the occasional holiday, and a fresh start.\n\n When Sean left, Rose's hobby became her lifeline. She plowed a big chunk of her money into a used van and a collection of professional kitchen equipment, and she rented a share of a commercial kitchen to keep everything legal with the health department.\n\n Jenna and Rose had always been close, especially after their parents disowned Jenna when she turned eighteen. It was Rose's wedding that finally got them talking again - Rose wouldn't allow any of them to attend without making peace.\n\n When Sean moved out, Jenna moved in, turning Sean's cramped attic office into her bedroom and claiming a corner of the basement for her painting studio. Much better to use her rent money to support her family than to flush it into the black hole of her increasingly unaffordable dive on Cap Hill.\n\n And then a month ago, Jenna got laid off from her job and Rose's lifeline became hers as well. She joined the catering company, now called Ballard Bites, and knit her life even more tightly into her sister's. So when Jenna got out of her car and walked through the back door into the kitchen, she really was coming home, in a way she hadn't since she was eighteen.\n\n \"Hey, sis,\" Rose called out. She and Brendan were at the kitchen table eating dinner. Lasagna, judging by the wonderful aroma.\n\n \"Hey,\" Jenna replied, and walked around the table to tousle Brendan's strawberry blonde hair. Jenna sat down at the table. \"You guys have a good weekend?\"\n\n \"Yeah,\" Brendan replied. \"Mom and I went to the library this afternoon, and then to the Aquarium and the Market.\"\n\n \"Cool,\" Jenna said, smiling at her nephew, and then the table got quiet while Rose and Brendan finished eating. Brendan had one week left before school started back up, and Rose was obviously making a big effort to cheer him up. A trip downtown wasn't cheap, though the free Aquarium passes at the library helped a lot.\n\n Brendan stood, cleared the table, and washed the dishes, all without being asked. \"I'm going to go read for a while, Mom,\" he said. TV was limited on school nights, even in the summer, and anyway there wouldn't be anything good on until later.\n\n \"Okay,\" Rose replied. \"Have fun.\"\n\n Brendan disappeared into his room and closed the door. Jenna unloaded the canvas bag she had hauled in from the car, hanging her apron in the pantry and packing half a dozen glass containers of leftover Indian food into the fridge, the remains of the feast she and Sumita had cooked the night before.\n\n \"I take it your cooking lesson went well,\" Rose said, noting all the stuff going into the fridge.\n\n \"Yeah,\" Jenna replied. \"It wasn't anything elaborate or weird - mostly just basic stuff from Classic Indian Cooking - but it was all from scratch, and there's something powerful about learning from somebody who grew up in the culture. You get more out of one afternoon than you would from a week of practice on your own.\"\n\n \"I'm glad you learned a lot,\" Rose said, \"but that's not what I was talking about, and you know it.\"\n\n Jenna sighed. \"I know, Rose,\" she said. \"It was ...\" She let her voice drift off, not knowing how she wanted to finish that sentence.\n\n \"It was ...?\" Rose echoed, fixing a stare on Jenna that made it clear she wouldn't let it drop.\n\n \"It was amazing, okay,\" Jenna said. \"She's sweet, she's brilliant, and she's gorgeous, and when she got me into bed, forty five years of repressed desire poured out of her. My head's still spinning.\"\n\n \"But ...?\" Rose asked.\n\n \"But what?\" Jenna replied.",
        "\"But something,\" Rose said, \"I know you.\" \n\n And then she saw it in her sister's face. \"You're falling in love with her, aren't you?\" Rose asked. \"You're falling in love, and you're terrified. And don't you lie to me, Jenna Ibsen. You can't bullshit your baby sister.\"\n\n \"I'm not falling in love with her,\" Jenna replied with a sad little smile. \"I'm pretty sure I've already fallen, hard.\"\n\n \"So what's the problem?\" Rose asked.\n\n \"What's the problem?\" Jenna squeaked, her voice rising half an octave from its usual pitch. \"The problem is that she's sweet, she's brilliant, she's gorgeous, and she has more money than I will ever make in my life. Plus, she was married to a doctor for like twenty years, and she has a grown daughter who's going to be a doctor herself. How the fuck can I ever be enough for somebody like that?\"\n\n \"Breathe, sweetie,\" Rose said, and wrapped Jenna in a hug. \"Just breathe. It's going to be okay. I know why you're afraid, but it's not going to blow up on you like it did with Tess.\"\n\n \"You don't know that!\" Jenna cried, pulling away to look Rose in the face.\n\n \"Yes, I do,\" Rose replied, radiating calm into the storm of Jenna's panic. \"I'm not saying it will work out - there are all kinds of ways it could go wrong - but I do know for certain it won't be like it was with you and Tess. You're not the same person you were then, and Sumita is not Tess.\"\n\n Jenna took a deep breath, wiped the corner of her eye with her sleeve, and put her arm back around her sister. \"Thank you, Rose,\" she said. \"I don't really believe you, but it's nice to hear you say it anyway.\"\n\n Rose gave Jenna another reassuring squeeze and then let her go.\n\n Later that evening, Brendan emerged from his room and they watched something vaguely amusing on TV together. After Rose clicked off the remote, Jenna could not have said what it was they watched. She trudged up the stairs to her room, brushed her teeth, and climbed into bed. The last thing in her mind before she fell asleep was Sumita kneading chapatti dough.\n\n ~~~\n\n Jenna woke at four forty the next morning, Monday. Running a catering company meant the day started very early. After a quick shower, she slipped into her standard outfit - blue jeans, cowboy boots, and a white button-down shirt, this one embroidered with the grinning crocodile Ballard Bites logo - and joined Rose in the kitchen for a very strong cup of coffee. By a quarter after five, they were stumbling out the door. Rose drove her car and Jenna drove the delivery van behind her, south across the Ballard Bridge over the ship canal, down Fifteenth Avenue, and up a minor maze of narrow back streets to their destination.\n\n State law doesn't prohibit catering companies operating out of residential homes, but any actual cooking has to be done in a kitchen that meets commercial standards. Rose's kitchen was about fifteen thousand dollars short of those standards, so instead of using the big, bright, airy kitchen at the house, they rented a share of a commercial kitchen in lower Queen Anne, a dark, dingy space behind a restaurant supply store. It wasn't a nice place to work, but the price and location were right. They were one of only three current tenants, and the other two worked almost entirely on the weekends, so they had the place to themselves most of the time.\n\n Jenna opened the door, flicked on the light switch, and immediately shaded her eyes with her hand. The overhead fluorescents were obscenely bright, lighting the whole place up like a hospital operating room. They kept it scrubbed antiseptically clean, as required by law, but there was little they could do to make it homey or pleasant. Jenna let out a snort of displeasure, as she did every morning, while she lugged in the day's supplies and got organized. Upgrading Rose's home kitchen was priority two, after a second delivery van, and Jenna couldn't wait until they'd saved enough.\n\n The order of the day was sandwiches, lots of them. When Rose formalized the company and went full-time, box lunches, mostly sandwiches, were her first regular business. Rose differentiated herself by going for quality, using fresh, local, organic ingredients, but keeping prices in line with their up-market competitors. They had enough regular customers that their delivery schedule was full most weekdays, and they had to limit their delivery area to manage their workload. Jenna coming aboard roughly doubled their capacity, and they were able to fill it pretty regularly within her first few weeks. Margins were low, but with no employees and minimal overhead, the company provided Rose and then Jenna a reliable, steady income.\n\n For the next three hours, Jenna and Rose assembled hundreds of sandwiches, wraps, and salads, and then packaged them into boxes with compostable utensils; handmade pasta salad, chips, or the like; and a piece of fruit or a freshly baked cookie.\n\n When the lunch boxes were all ready to go, Jenna loaded up the van and Rose's car while Rose double-checked the order list and printed out the delivery schedule. Jenna covered the larger, more lucrative area, extending from the ship canal and Lake Union south through downtown and into Pioneer Square. Rose took the northern areas, from Ballard through the University district and up into Ravenna.\n\n Jenna heard Rose locking up behind her, walked over to give her a brief hug, and then climbed into the van and got moving. Her first delivery was scheduled for nine, and the schedule had her going until noon. There was plenty of padding, just in case, but things could still go wrong. Every extra minute helped.\n\n Jenna made it through most her delivery run on mental autopilot. Things perked up occasionally, like when Boyd, the androgynous receptionist at a South Lake Union tech startup, flirted with her, or when an overzealous security guard at a downtown high-rise stopped her and insisted on calling up to the law firm where she was delivering two dozen lunch boxes, despite the fact that she'd made the same delivery without a problem three days the previous week.\n\n By eleven thirty, she was done, and she didn't need to be back at the kitchen until a quarter to one. Her last stop was near the waterfront, so she took her lunch - a caprese sandwich and pasta salad, one of their more popular orders - down to pier sixty two and sat in the sun, watching the low, wispy clouds drifting across the horizon and the ferries crossing the Sound. After she finished, she still had nearly an hour to kill. Just enough time to go visit Meaghan.\n\n Meaghan was Jenna's best friend, aside from Rose, and her first art critic. Meaghan was married to Sarah, and they both worked on the east side with Sumita, though Meaghan was home with a new baby at present. A phone call and a five minute drive later, Jenna's van was wedged into one of the guest parking spaces in the garage of Meaghan and Sarah's building, and Jenna was on her way up the elevator. The front door was cracked open when she got there, so she walked in and shut it behind her.\n\n \"Back here, in the baby's room,\" she heard Meaghan call after the front door shut.\n\n Jenna followed Meaghan's voice down the hall and turned into the small bedroom that served as the baby's room, Sarah's office, library, and occasional guest room. As soon as she stepped through the doorway, she spun around and faced back into the hallway, her face burning.\n\n Meaghan giggled. She was sitting back in her favorite chair, nursing the baby, and her shirt was hanging over the back of the chair. \"Oh, come on, Jenna,\" she said, \"it's not like you've never seen boobs before.\"\n\n \"I haven't seen yours,\" Jenna replied.\n\n \"Baby's gotta eat,\" Meaghan said. \"Seriously, sweetie, it's fine. I'll cover up if it bothers you. Sit down for a bit so we can chat. She's almost finished nursing - it'll only be another few minutes.\"\n\n Jenna turned around, still not looking directly at Meaghan, and sat down in the chair across from her. Meaghan had pulled a blanket over herself, covering her right breast. The left one, where baby Jennifer was nursing, was still exposed. Jenna still felt rather uncomfortable about it, but Meaghan just smiled at her, without a care in the world, and then looked down and cooed at her child.\n\n \"She really is cute,\" Jenna said, making an effort to act normal.\n\n \"Isn't she, though?\" Meaghan replied, beaming, and then said to the baby, \"You're such a little cutie. Yes you are.\"\n\n \"How was your cooking session with Sumita?\" Meaghan asked when Jenna didn't pick up the conversation. \"That was this weekend, right?\"\n\n \"It was good,\" she replied, blushing and looking down at her knees.\n\n \"Good how?\" Meaghan asked. \"Good like 'I learned how to cook Indian food', or good like 'I kinda maybe like her'?\"\n\n \"Both, I guess,\" Jenna replied. After a long pause, she opened her mouth to elaborate, but the baby saved her.\n\n Little Jennifer had decided she'd had enough, and she wiggled and squirmed in Meaghan's arms. Meaghan held the baby to her chest, rocking her and patting her back. When she settled down, Meaghan stood up and handed her to Jenna, saying, \"Hold her while I get a shirt on.\"\n\n Jenna took the baby while Meaghan dressed herself and then handed her back. Jennifer wasn't very happy, but she didn't scream or cry while Jenna held her, and Jenna considered that a success. She wasn't good with babies.\n\n A little more fussing and the baby was ready for a post-meal nap. Meaghan put her down, and then she dragged Jenna to the den. \"I want to show you something,\" she said.\n\n \"I was supposed to be working my next Octavia book,\" Meaghan said, \"but I wasn't feeling it, so I decided to do a painting. Something city-ish, since I've been cooped up around here so much lately.\"\n\n She pulled a canvas out of a pile against the wall and set it on her easel. It was a street scene, done in Meaghan's usual quasi-impressionist style. Jenna frowned - it was not good. The technique was fine, but the scene itself was boring, and the colors were muted and dull. The whole thing felt limp, lifeless.\n\n Jenna and Meaghan had always been brutally honest with each other about their art. It was one of the cornerstones of their friendship. Jenna swallowed hard and braced herself to give Meaghan her opinion. \"It's ... not your best work,\" she said.\n\n \"I thought it was pretty good when I finished it last week,\" Meaghan said, pouting a little, and Jenna's heart sank. Meaghan really should have known better. But then, after a short pause while Jenna tried to think of a constructive way to tell Meaghan how she terribly wrong was, Meaghan's pout turned into a wide smile. Jenna smiled back, realizing she had been teased.\n\n \"Of course, I was very sleep-deprived at the time,\" Meaghan said. \"When I saw it the next day, I realized it was crap.\"\n\n Jenna breathed a sigh of relief.\n\n \"It got me thinking, though,\" Meaghan said. \"I felt like there was something there, some kernel of truth hiding under all that muddy gray.\"\n\n \"Okay,\" Jenna replied. \"I can maybe see that.\"\n\n Meaghan reached into the pile for another canvas. It was the same scene, but the result was vastly different. The buildings, just big static blocks in the original, seemed alive, and they leaned slightly inward, giving the piece a menacing, claustrophobic feel. The colors were darker and angrier, with vibrant splotches for contrast. A slash of lurid red neon cut through the center of the painting, and upper-story windows oozed light in bright primary colors. The sky, a dull blue-gray in the original, was a swirling purple.\n\n \"Wow,\" Jenna said. \"How the hell did you come up with that?\"\n\n \"Even more sleep deprivation,\" Meaghan replied, only half-joking. \"When your baby won't stop crying for what seems like two days, you see things from a new perspective.\"\n\n \"Was she okay?\" Jenna asked. \"That doesn't sound normal.\"\n\n \"She was fine,\" Meaghan replied. \"Just had a bad time for a while. It sucked, but at least I got a painting out of it.\"\n\n \"It's really good,\" Jenna said. \"I think it may be the best thing you've done yet.\"\n\n \"Thanks,\" Meaghan replied, smiling. \"That means a lot, coming from you.\"\n\n Jenna looked at her watch. \"I should get going,\" she said. \"Still on for dinner on Thursday?\"\n\n \"Wouldn't miss it,\" Meaghan replied. She walked Jenna to the door, with a friendly hug on the way out. \"I'm really glad you stopped by, sweetie. It can get lonely sometimes with Sarah at work all day.\"\n\n Jenna hugged Meaghan a little tighter and let her go.\n\n \"I do hope it works out for you with Sumita,\" Meaghan said as Jenna opened the door to leave. \"She's great, and you deserve to find someone who can make you happy.\"\n\n Jenna froze for a moment. \"Thanks,\" she said, hoping Meaghan hadn't noticed her hesitation. \"I hope so too.\"\n\n ~~~\n\n After lunch, Jenna drove back to the kitchen to pick up the goods for her second delivery run - afternoon cookie platters. Rose had baked the brownies the night before and the cookies that morning after her deliveries were done. Jenna headed back out while Rose cleaned up the kitchen. The afternoon run was shorter and easier - everybody's nice to you when you're bringing dessert. Margins were also better, and knowing that made the time go by faster.\n\n She got home a little after three, played FIFA on the Xbox with Brendan for half an hour, and then went down to her improvised studio to work until dinner. Her latest piece was challenging, larger and more complex than anything she'd done before. She had finished the lush green forest background, and she was sketching variations on angry, vengeful tree spirits to refine her ideas before committing the four figures to the canvas. Like all her paintings, the style was abstract, using primitive shapes and colors to hint at form and mood rather than rendering them explicitly.\n\n She put on the angry music playlist she'd been using for this piece, full of eighties punk, nineties grunge, and early hip-hop, and she dove into her sketch pad, but nothing was working for her. After skipping a dozen songs and throwing away as many partial sketches, she gave up and went back upstairs to hang out with Rose and Brendan.\n\n Dinner was the rest of the leftover Indian food Jenna had made with Sumita over the weekend. It was Brendan's turn to cook, and he didn't mind one bit. Jenna had picked up a bag of Indian whole wheat flour on the way home, and she showed Rose and Brendan how to make chapattis to go with dinner.\n\n She went back down to her studio after dinner, and she didn't even try to work on the forest piece. Instead, she found a Bollywood music channel on her phone and thought of Sumita. In her mind, she visualized each detail of her body, as she would a model for a painting.\n\n Sumita's fingers and toes were painted a red so dark it was almost black. Her skin was dark and smooth, the color caramel just before it burns. Her legs were solid and strong, topped by wide, round hips and the silky black triangle of her bush. Jenna had to pause for a moment to catch her breath when she thought about that. Her belly was slightly rounded and her waist unreasonably narrow. Her tits were spectacular, large and round and wonderful, even with the sag and stretch marks that came with motherhood and age.\n\n When she visualized Sumita's face, Jenna smiled to herself, and her objective artist's eye failed her. She could see every smile line around Sumita's eyes and mouth, every minor imperfection in her skin, but somehow they all combined into a timeless beauty, surrounded by a riotous cloud of dark brown curls, streaked here and there with a strand of gray.\n\n Jenna picked up her sketchbook and started drawing, more by instinct than any conscious design. Two hours later, she had five decent rough sketches, each capturing a different aspect of Sumita. It would be a long time, if ever, before she felt ready to paint Sumita. The sketches were mostly about needing to get something out of herself and onto paper.\n\n When she fell out of the flow of the sketches, she was suddenly exhausted. She grabbed her phone, stopped the music, and pushed the power button, but the display didn't go dark. Instead, Sumita's number popped up. Jenna's heart fluttered in her chest, and she tapped the answer button.\n\n \"Hey,\" she said.\n\n \"Hey to you,\" Sumita replied.\n\n \"It's good to hear your voice again,\" Jenna said. \"How was your day? Work okay?\"\n\n \"It was fine,\" Sumita said. \"Nothing exciting. I finished up a big project last week, so this week it's back to clearing out the backlog of bugs. At least my stupid boss hates me a little less now that I'm doing something to make the numbers on his stupid charts better.\"\n\n Jenna laughed. She had heard the whole story of Dave the Evil Lead Software Engineer from both Sarah and Sumita, and she could imagine him cackling with glee over declining bug counts. \"As long as you like it, I guess,\" Jenna said. \"My day wasn't any more exciting. I did stop by to see Meaghan, though, so that was good.\"\n\n \"Nice,\" Sumita replied. \"I know she and Sarah really appreciate when you can do that. I remember going stark raving mad during my maternity leave a zillion years ago, so any kind of distraction is good.\"\n\n Jenna smiled into the phone, even though she knew Sumita wouldn't see it.\n\n \"... especially from somebody like you,\" Sumita added, and Jenna blushed.\n\n \"Um, thanks,\" Jenna stammered, and then tried and failed to think of something else to say.\n\n \"When can I see you again?\" Sumita asked, her voice suddenly warmer and lower.\n\n Jenna had to take a breath. \"Let me think,\" she said, trying to make her brain work. \"How about dinner tomorrow?\"\n\n \"Can't,\" Sumita replied. \"I promised Gita I'd have dinner with her and some friends. I'm free the rest of the week, though.\"\n\n \"Ugh,\" Jenna said. \"Rose and I have a really big job coming up in a couple of weeks, and we're busy preparing Wednesday and Thursday. I guess it'll have to be Friday.\"\n\n \"Friday it is, then,\" Sumita replied. \"I can't wait.\"\n\n \"Me either,\" Jenna said, and she meant it far more than she was willing to admit.\n\n \"Sumita,\" she said, \"thanks again for this weekend. I really did have a great time.\"\n\n \"Good,\" Sumita replied, \"because I had a great time too, and I want to have more weekends with you.\"\n\n For a long while, Jenna didn't say anything; she just held the phone to her ear, her heart thudding in her chest, and listened to Sumita breathe on the other end of the line. Finally, she said, \"I would like that.\"\n\n \"See you Friday, Jenna,\" Sumita said.\n\n \"See you Friday, Sumita,\" Jenna replied, and hung up the phone.\n\n Jenna went to bed soon after that. Sketching had worn her out, and she had another obscenely early morning. The scent of Sumita's hair filled her memory as she fell asleep.\n\n ~~~\n\n Sumita didn't call again for the rest of the week, and Jenna didn't call her. There was never time during the day, and one or the other was always busy in the evenings. They did email and text back and forth, a \"thinking of you\" at lunchtime or a \"can't wait to see you\" before bed. Jenna even used a few emoji, something she had never done before.\n\n Work kept her distracted, and she had plenty to do. In addition to the regular daily grind, they had a job coming up in a couple of weeks that could really make a difference for Ballard Bites. Rose had catered a few events in the past, mostly for close friends, but they were usually more work than she could handle, even with Jenna pitching in here and there to help. Now that Jenna was full-time, they could manage the load, and they wanted to go after new business. The work would be irregular and demanding, but the money would be much better, and it would be a lot more fun.\n\n So when a wealthy Seattle power couple called to cater a Wednesday night dinner party for twelve, Rose immediately said yes. Her bid would only cover their costs, but that was fine. Success with this client could open up as much new business as they could possibly want.",
        "In order to make sure things went flawlessly for the actual event, they planned a trial run that week. Rose started work on Wednesday afternoon, and Jenna joined her after her delivery run. Dinner that night was pizza at home, something Rose tried hard to avoid, but sometimes you just have to. \n\n Thursday was easier, since most of the hard work was already done. After she finished her deliveries, Jenna stopped at their favorite fish market for a salmon filet, and Rose picked up the fresh produce. Another hour in the kitchen and they were ready to go. Jenna loaded the equipment into the van while Rose packed up the food. A few things, like the poached salmon, had to be done in the client's kitchen. For the trial run, the clients/guinea pigs would be Sarah and Meaghan.\n\n Jenna pulled into the garage, parked in one of the guest spaces, and opened the rear hatch to unload the van. Rose appeared beside her, wearing a faint smirk, and grabbed the big freezer bag that held the food.\n\n \"What?\" Jenna asked.\n\n \"What what?\" Rose replied, her face suddenly the picture of innocence.\n\n \"You had a look,\" Jenna said. \"Don't pretend you didn't.\"\n\n \"I don't know what you're talking about,\" Rose said. \"And I wouldn't tell you even if I did.\"\n\n Jenna rolled her eyes. She knew Rose would never give up her secret, and there was no point pushing it any further. They made their way to the elevator and from there into Meaghan and Sarah's place. Outside the living room window, the sun was low in the sky over the Olympic mountains across the Sound. In an hour or so, it would burn like molten gold on the horizon and paint the clouds in brilliant oranges and pinks.\n\n \"Thank you so much for doing this,\" Rose said to Meaghan as soon as they were through the door. \"We really appreciate it.\"\n\n \"Thank you?\" Meaghan asked. \"You're coming to my house and feeding me a gourmet dinner. I should be thanking you, sweetie.\"\n\n \"Fair enough,\" Rose replied. \"Just promise you'll be honest about everything. This job is really important, and we want to make sure everything's perfect.\"\n\n \"I promise,\" Meaghan replied. Jenna knew from experience that Meaghan's critiques could cut to the bone when they needed to.\n\n Jenna and Rose went into the kitchen to set up while Meaghan changed the baby and put her into a clean onesie. About ten minutes before everything was ready, the front door opened, and Jenna walked over to the kitchen door to see who it was. Sarah appeared, laptop bag over her shoulder, along with an unexpected guest. Jenna's jaw dropped open when she saw the person who accompanied Sarah - it was Sumita.\n\n \"Hey, Jenna,\" Sarah said, not noticing Jenna's expression. \"I wanted to be home a little earlier, but traffic...\"\n\n Sarah's head tilted to the side, her eyes narrowed, and her brow knit itself into a confused frown. \"Wait,\" she said. \"Rose didn't tell you, did she? I called her this morning and asked if I could bring Sumita along. I thought you might appreciate another taster, and everything's supposed to be vegetarian except the fish. I hope that's okay.\"\n\n \"Um, yeah,\" Jenna managed to stammer. \"It's great.\"\n\n And why the fuck didn't I think of that myself? she wanted to add, but kept it to herself.\n\n \"Cool,\" Sarah said. \"I'll just drop my stuff and check on Jennifer. I'm on mommy duty for a while after I get home since Meaghan's been at it all day.\"\n\n Sarah disappeared into the living room, but Sumita stayed. She set her purse down on the table next to the kitchen door, walked slowly into the kitchen, wrapped her arms around Jenna's shoulders, and kissed her on the mouth. Jenna kissed her back, forgetting everything for a moment except Sumita's lips.\n\n \"I'm glad you came,\" Jenna said, her mouth spreading into a broad grin.\n\n \"Me too,\" Sumita replied. Turning to Rose, she added, \"thanks for letting me tag along at the last minute.\"\n\n \"When Sarah called, I was thrilled,\" Rose replied. \"The client's husband is Indian and vegetarian, so I thought your perspective would be helpful.\"\n\n Rose blushed suddenly, realizing her mistake. \"Sorry,\" she said. \"I don't mean that all Indians are the same. I mean, I didn't ask you here just because you're Indian. I'm going to stop talking now.\"\n\n \"It's fine,\" Sumita replied, smiling reassuringly at Rose. \"It's totally fine. I'm happy to be here.\"\n\n \"You two go out into the living room,\" Rose told Jenna and Sumita, trying to recover her composure. \"The rest of the work is a one-person job. I'll be ready in like five minutes.\"\n\n Sarah and Meaghan were sitting on the couch when Jenna and Sumita emerged, and Jennifer was rocking back and forth on the coffee table in her car seat, which was her favorite place, even when she wasn't in the car. Her little arms were flailing about, not quite able to reach the bright plastic animals hanging above her.\n\n \"This is usually her favorite time of day,\" Meaghan said. \"She'll be nice and mellow through dinner if we're lucky.\"\n\n Sumita leaned down and made funny faces and baby talk to Jennifer, who giggled and cooed in response. Jenna stayed away, sitting at the far end of the couch.\n\n \"You know,\" Jenna said to Meaghan, \"we actually got this job because of you. The client's sister-in-law was at your baby shower. She must have been impressed.\"\n\n After thinking a second, she added, \"Lisa, I think her name was.\"\n\n \"Is this Lisa pregnant, by any chance, and about ready to pop?\" Sumita asked. Her eyes sparkled with mischief.\n\n \"Yeah, I think so,\" Jenna replied. \"Why?\"\n\n \"We sat at the same table at the shower,\" Sumita replied. \"Along with Kate. I thought poor Lisa was going to run away when Kate got going.\"\n\n Jenna's eyes went wide. Kate was one of her oldest friends, but she was an acquired taste. She would flirt compulsively with any pretty woman she ran across, even obviously straight, married, pregnant women. All four women dissolved into giggles.\n\n They only recovered when Rose appeared a few minutes later carrying two plates of hors d'oeuvres. Jenna wiped her eyes and went into the kitchen to fetch the other two. Sumita, Meaghan, and Sarah sampled one each of the six varieties of little bites they had prepared. They planned to cut the final list down to five, so they needed input on what worked well and what didn't.\n\n \"This is the best, definitely,\" Sarah said of the mini pitas spread with hummus and olive tapenade. \"I really like that the bread is still kinda soft.\"\n\n \"Thanks,\" Jenna replied. Getting the texture right, so they didn't collapse in people's fingers, was tricky.\n\n \"You should cross off the bruschetta,\" Meaghan said. \"The tomatoes are too ... I don't know. Acidic?\"\n\n Sumita nodded her agreement. \"Yup,\" she said. \"Plus, they can fall off and make a mess.\"\n\n Next up was the soup, a chilled cucumber and honeydew gazpacho. They moved to the dining room table, and all three tasters agreed that it was a hit. The salad followed, a fairly boring plate of mixed greens, summer vegetables, and blue cheese crumbles dressed in a simple vinaigrette.\n\n \"It's missing ... something,\" Sarah said. \"I don't know.\"\n\n \"I know it's not very exciting, but that's what she said she wanted,\" Rose replied. \"It needs some crunch, I think, but I don't know what. Normally I'd add walnuts or pecans, but one of the guests is allergic. Croutons are just blah.\"\n\n \"What about pumpkin seeds?\" Sumita suggested. \"They should be safe for any nut allergy.\"\n\n \"Oh, yeah,\" Jenna said. \"I think we can work with that. Just need to tweak the dressing. Maybe use pumpkin seed oil to complement the ...\"\n\n \"Focus, Jenna,\" Rose said, cutting her sister off. \"We can figure it out later.\"\n\n Jenna shook her head. \"Okay, sorry,\" she said. \"Sometimes when I get an idea into my head ...\"\n\n Rose disappeared into the kitchen to finish the entrees, and Jenna followed her. They were ready three minutes later, within ten seconds of each other. Jenna and Rose high-fived. Rose emerged from the kitchen carrying a poached salmon filet topped with a bright green stripe of herb butter, and Jenna followed with a roasted vegetable napoleon, thinly shaved summer vegetables wrapped in phyllo and covered in mozzarella.\n\n This was the moment of truth. If the clients liked these two dishes, they'd recommend Ballard Bites to their friends. If not, then nothing else would matter. Sarah and Meaghan each took a bite of the salmon. Sumita did not.\n\n \"Mmmmmm,\" Meaghan said. \"The salmon is perfect.\"\n\n It was good to know, but not the main point. Anybody could poach a salmon filet. Sarah took another bite, making sure to get a generous slather of the herb butter.\n\n \"Oh, wow. This is just right,\" she said, pointing her fork at the wide stripe across the middle of the filet. \"It's really bright and green. Not, like, overpowering or anything, but it tastes just like summer, and it complements the fish really well.\"\n\n Jenna let out a breath, but held the next one back. Sumita cut off a corner of the napoleon and raised the fork to her mouth. Her eyes closed, her nostrils flared, and she closed her lips around the fork. Her teeth moved inside her cheeks, and she let out a happy little sigh. Jenna had to sit on her hands to keep from doing anything inappropriate. Even in the simple act of eating, Sumita was the most sensuous creature she had ever seen.\n\n \"It tastes amazing,\" Sumita said. Jenna basked in the positive verdict, and at that moment it wasn't because she was particularly interested in making Lisa's sister-in-law happy. Sumita really liked what she had cooked, and that was the most important thing.\n\n \"However,\" Sumita continued, and the word hit Jenna like a splash of cold water, \"you really should consider cutting down on the cheese. You're going for elegant, and a string of mozzarella dangling from somebody's mouth kind of ruins the mood.\"\n\n Rose nudged Jenna in the ribs to bring her back to Earth. \"Yeah,\" she said. \"I think you're right. I don't want lose too much, but you do have a point. We can reduce the overall amount a little, and spread it out over more layers.\"\n\n Sarah and Meaghan took their turn, and the verdict was the same. The clients were going to be very happy. Dessert was a mini lemon ginger cheesecake, one of Rose's standards. She didn't need to bake it at all - Sarah and Meaghan had both had it before and loved it, and Sumita loved it too - but the trial run felt incomplete without it.\n\n Sumita followed Rose and Jenna into the kitchen to help wash up.\n\n \"You really don't have to,\" Rose said.\n\n \"It's fine,\" Sumita replied. \"Sarah is fussing over the baby, and Meaghan is kind of zoned out, so I'd rather be in here. Plus, it reminds me of the second time we met.\"\n\n Jenna blushed. Sumita had helped wash up after Meaghan's baby shower, and Jenna had walked Sumita to her car, where Sumita had asked Jenna to dinner. Their date did not go especially well - it was the day Jenna got laid off from her job - but they did agree to see each other again, and that turned into the weekend cooking lesson.\n\n \"I'll wash, you dry,\" Jenna said. \"Just like last time.\"\n\n When everything was clean and dry, Jenna and Sumita went out into the living room to find Rose rocking a smiling, giggling Jennifer in her arms. Rose passed the baby off to Sumita after a while, who rocked her and sang to her until she drifted off to sleep. Sumita motioned to Jenna to take the baby, but Jenna shook her head no.\n\n \"Jenna hates babies,\" Rose said, gently mocking, and Sumita handed Jennifer to Sarah instead.\n\n \"I do not,\" Jenna replied, indignant. \"I just don't know what to do with them.\"\n\n Sumita leaned over to kiss Jenna's rather warm cheek.\n\n Soon after, it was time to go home. The Friday schedule was the busiest of the week, as usual, which meant getting up twenty minutes earlier. Jenna was not looking forward to that. She and Rose gathered up the equipment and left after saying goodbye to Sarah and Meaghan.\n\n Sumita rode the elevator down to the garage with Rose and Jenna, and she laced her fingers into Jenna's free hand. Rose smiled but did not say anything. Down at the van, Rose and Jenna loaded their stuff into the back, and then Rose climbed into the passenger seat to give Jenna a moment alone with Sumita.\n\n \"So, tomorrow night?\" Sumita asked.\n\n \"Yeah,\" Jenna replied. \"Where should I meet you? I don't even know what we're doing.\"\n\n \"We have a dinner reservation for seven thirty,\" Sumita replied. \"I'll pick you up at your house at seven. Rose gave me directions. Does that work for you?\"\n\n \"Um, yeah, I guess,\" Jenna said, trying to sound enthusiastic and not confused. \"Where are we going?\"\n\n \"You'll find out tomorrow,\" Sumita replied with a wicked smile. She leaned in to kiss Jenna on the forehead, and then walked off and got into her car. Jenna stood there a while, and then climbed into the van.\n\n ~~~\n\n Jenna got home Friday afternoon with barely enough time to shower and change. She rushed like a madwoman to be ready by seven and almost made it. At three minutes after, she poked her head out the front door, hair still damp, to see if Sumita was waiting outside. When she wasn't, she sat on the couch in the living room to wait.\n\n Five minutes passed, then ten, then fifteen, and Jenna's stomach twisted itself into a pretzel. Had she got the time wrong? Had something happened to Sumita? Had Sumita wised up and realized she didn't want to date Jenna after all?\n\n The doorbell rang, shocking her out of her worries. She was up and at the door in an instant, and she opened it to find Sumita waiting. She was wearing an indigo sweater and matching knit skirt, the same outfit she wore when they first met. She looked exhausted.\n\n \"Traffic,\" Sumita said, sounding both apologetic and frustrated. \"The five twenty is awful.\"\n\n \"You okay?\" Jenna asked.\n\n \"I am now that I'm with you,\" Sumita replied, making an effort to smile. \"If we leave right away, we can still make our dinner reservation. It's not far.\"\n\n \"I'm ready whenever,\" Jenna said, and then stepped out the front door and closed it behind her. \"You sure you still want to go out?\"\n\n \"The worst part's behind me,\" Sumita said. \"Come on - I've been looking forward to this all week.\"\n\n Sumita spun around and walked back to her car, and Jenna followed. Sumita opened the passenger door for Jenna, waited until she got in, and closed it for her, which left Jenna speechless, and then she walked around the car and climbed into the driver's seat.\n\n A short drive later, they were pulling into the parking lot at Ray's Boathouse. Jenna knew the place - anyone who lived in Seattle had heard of it - but she'd never been there. The upstairs caf\u00e9 was not really in her price range, and the downstairs dining room was the kind of restaurant she couldn't even think about.\n\n \"Are you sure about this?\" she asked Sumita.\n\n \"Don't worry about it,\" Sumita replied. \"It's my treat. The view is amazing, and I know you like seafood.\"\n\n \"But you're a vegetarian,\" Jenna said.\n\n \"Yes,\" Sumita agreed, \"and I'll be fine. They have a salad and a pasta that sound good.\"\n\n Jenna took a breath and decided to stop talking. Sumita was being sweet to her, very sweet, and she decided to simply accept it and enjoy it. Sumita was taking her on a genuine, old-fashioned date, which was not a typical move in Jenna's relationship playbook.\n\n Jenna followed Sumita up the stairs to the host stand, and a chirpy blonde girl led them both through the restaurant and out to the deck, where they had a table in the corner. The boathouse was on the shore of Shilshole Bay in Ballard, right on the water, at the mouth of the ship canal that connects Lake Washington to Puget Sound. The sun was descending in the September sky toward the Olympic Mountains across the Sound, and the cool breeze coming off the water was delightful in the warm evening air.\n\n Jenna's nerves melted away in the beautiful setting, and she listened to Sumita tell her stories from work. There was one about how tiny Sarah cut a burly Indian guy down to size in a design review meeting. Another was about the absolutely ridiculous three-day process of moving a simple bug fix from one place in the build system to another. A third was about how Sumita turned the power of Dave the Evil Software Development Lead around to her own use, by convincing him to direct his yelling at another team. \"As soon as they saw him coming down the hall, they agreed to make the change I had been bugging them about all week,\" she said, laughing to herself.\n\n Jenna ordered crab cakes and clam chowder for dinner. She felt vaguely guilty about it, but Sumita insisted. Sumita ordered the vegetable pasta and a salad without even opening the menu. \"I have to plan in advance, since my options are limited,\" she explained.\n\n The wine and the food loosened Jenna up a little further, and she told Sumita about her latest painting project after the appetizers and into the entrees. She described the sketches she'd done, and the feeling she was trying to create with each of the four figures.\n\n \"Do you, um, want to come to the house after dinner and see it?\" she asked, and her nerves flooded back. What was it about Sumita that could drive her so crazy for no reason?\n\n \"I'd love to,\" Sumita replied. \"I think you're amazing, and I'd love to see what one of your paintings looks like while you're still working on it.\"\n\n Jenna felt her face getting hot. She had friends and colleagues in the art world who admired her work, people like Meaghan whose opinions she really trusted, and people bought her work, at prices that surprised her, so she knew she was a pretty good painter. Sumita's opinion, though, was something else entirely. She wasn't part of the insular, ironic art crowd; she was just a woman who saw a painting and got it, instantly and completely. It was as if Sumita had torn through her canvases and found a window into her soul.\n\n Sumita took Jenna's hand in hers and smiled a big, radiant smile. Jenna didn't know how to respond. Her head was awash in a flood of intense emotions, mostly very good ones. Fortunately, the waiter showed up and broke the spell before Jenna felt like a complete idiot. Sumita ordered a rich, dense chocolate cake for dessert, and they ate it together as the sun disappeared over the horizon.\n\n Jenna felt another little twinge of guilt when Sumita paid the bill, but she tried to put it out of her mind. Sumita just smiled at her and kissed her on the cheek, and then they left. Sumita drove back to the house and pulled into the driveway behind the Ballard Bites van, and Jenna led Sumita into the house through the garage.\n\n Rose and Brendan were both in the living room reading when Jenna and Sumita arrived, and Jenna introduced Brendan to Sumita. Brendan's eyes got very big when Sumita shook his hand. Rose gave him a stern maternal it's-not-polite-to-stare look and an 'ahem'.\n\n \"What?\" he asked, blushing, and Rose raised an eyebrow.\n\n \"I'm sorry,\" he said to Sumita, his blush deepening. \"Jenna doesn't usually date people like ... I mean ... it's just ... you're very pretty.\"\n\n Jenna let out a hearty laugh, and then she tousled Brendan's hair. \"My nephew,\" she said in a deeply serious voice, \"does not usually approve of the women I date. 'Pretty' isn't the typical style.\" Brendan's face went from red to crimson.\n\n \"Well, thank you, Brendan,\" Sumita said. \"That was nice of you to say.\"\n\n Brendan rolled his eyes and flounced back down on the couch, burying his nose in his book.\n\n \"We're going downstairs,\" Jenna said to Rose, and then took Sumita by the hand and led her to the door to the basement. When Jenna flicked the light switch on, Sumita's breath caught. The studio wasn't large - just enough space for a couple of easels and a stool, carved out from the accumulated boxes and bins - but it was sufficient for Jenna's needs. The canvas of Jenna's current project - a full six feet wide, perched on both easels and covered for protection from dust and drips - took up most of one wall, and sketches hung from every available space.",
        "Jenna talked Sumita through each sketch, explaining her thoughts and her goals. Sumita said nothing beyond the polite 'okays' and 'uh-huhs' that told Jenna she was listening. After the sketches, Jenna pulled the cover off the canvas, and Sumita took a step back to take the whole thing in. Jenna described her technique to Sumita, how she layered the different colors and textures to produce the dreamlike forest scene. Sumita stared at the canvas well after Jenna stopped speaking, delighting in every little detail she noticed.\n\n \"You know,\" Jenna said when the silence got uncomfortable, \"tonight was very nice. You really didn't have to do that for me.\"\n\n \"I wanted to,\" Sumita replied. \"And don't tell me you didn't have a good time.\"\n\n \"I did,\" Jenna agreed. \"It's just ... lesbians don't usually do the old-fashioned courtship thing, at least not the ones I know. It's a little too rooted in traditional gender roles, which we're not big on.\"\n\n \"Sarah did, with Meaghan,\" Sumita replied, \"I've heard the whole story a few times, and I think it's beautiful. Though I guess Sarah was new at this whole lesbian thing, just like I am with you. Anyway, I'm not interested what lesbians usually do. I'm interested in what works for us. Did you like it when I took you out for a nice dinner?\"\n\n \"Yes,\" Jenna admitted.\n\n \"And would you like me to do it again, when I have a mind to?\" Sumita asked.\n\n \"Yes,\" Jenna said.\n\n \"Good,\" Sumita replied. \"Then I don't see the problem.\"\n\n \"No problem,\" Jenna said, feeling like a six-year-old child. \"Do you want to go back upstairs and see the rest of the house?\"\n\n \"Sure,\" Sumita said, and they climbed back upstairs. Jenna gave Sumita a tour of the main floor of the house, and then they walked up to Jenna's attic bedroom. It was neat and tidy, especially compared to the chaos of the basement studio, with just one sketch and two small paintings on the walls, none of them by Jenna.\n\n Sumita wrapped her arms around Jenna's waist, pulled her in close, and kissed her deeply. Jenna let out a deep sigh and fell into the kiss. She had spent the whole week wanting Sumita, wanting to hold her and taste her and make love to her. Unfortunately, it wasn't going to happen.\n\n \"I'd really like to ask you to stay over,\" she said, \"but my bedroom is right above Brendan's, so ...\"\n\n Sumita giggled. \"No, it's okay,\" she said. \"I get it. I'd ask you to stay at my place, but I'm not sure I could handle facing Gita in the morning. Again.\"\n\n It was Jenna's turn to giggle. \"I thought you told me she worked the night shift at the hospital,\" she said.\n\n \"She did,\" Sumita replied, \"until this week. Now she's back on a regular day schedule until she starts at UW. Talk about bad timing.\"\n\n The two collapsed onto Jenna's bed and lay there together a while, periodically erupting back into giggles. After a while, Sumita took a deep breath and sat up.\n\n \"It's getting late,\" she said. \"Since I'm not staying, I should probably go.\"\n\n Jenna breathed an exaggerated sigh of disappointment, and then sat up next to Sumita. \"I'll walk you out,\" she said, and then leaned in for a kiss. Twenty minutes later, they finally made it downstairs, and Jenna walked Sumita to her car in the driveway.\n\n \"Can we do something tomorrow?\" Jenna asked. \"Go for a hike, see a movie?\"\n\n \"Sure,\" Sumita replied. \"Maybe meet for lunch tomorrow, and then go for a walk by the bay, in that park you took me to.\"\n\n \"Sounds good. Call me in the morning,\" Jenna said. \"I'll be up early. Occupational hazard.\"\n\n Sumita smiled a big, happy smile at Jenna, kissed her soundly, and then got into her car.\n\n \"Okay, I'll call you,\" she said, and then drove off.\n\n When Jenna walked back into the house, she found Rose waiting for her by the door with a curious look on her face.\n\n \"What?\" Jenna asked. Rose just smiled.\n\n Jenna punched her sister in the arm, said, \"Shut up,\" and went upstairs to bed.\n\n ~~~\n\n Jenna spent Saturday with Sumita, and then Sunday and the next weekend. They cooked together and they hiked together. They went to the Seattle Art Museum, where Jenna showed Sumita her favorite pieces and went on about why she loved them. Not for the first time, Sumita had a fantasy of dragging Jenna to London, to take her to the Tate Gallery as her own personal tour guide.\n\n Jenna and Rose did have to work on the big dinner party job, Wednesday of the next week, which kept Jenna busy Monday and Tuesday as well. The result was a smashing success, which would mean repeat business and, hopefully, referrals as well. Sumita took Jenna out for another expensive, romantic, date-night sort of dinner the next night to celebrate, at an Indian-American fusion restaurant on Capitol Hill, not far from Jenna's old apartment. The rest of the time, they squeezed in casual weeknight dinners around their busy, divergent schedules whenever they could, which wasn't often.\n\n What they didn't do was spend the night together. Jenna's bedroom was obviously out, and both Jenna and Sumita felt a little too weird about having Gita in the house if Jenna stayed over with Sumita. After two weeks of kissing and hugging and holding hands, and nothing else, they were both ready to burst. Jenna had to masturbate in her bedroom at night more in those two weeks than she had in the previous two months. She could only imagine what Sumita did when she got home at night, but then imagining it only got her own engine going again.\n\n It was a great relief to them both when Gita moved into her dorm room at UW on the last Sunday in September.\n\n ~~~\n\n Gita drove her little gray Audi, and Sumita and Jenna followed in Sumita's larger sedan. Gita wasn't taking much with her to school - there's not a lot of space in a dorm room - but, even so, her stuff didn't all fit in her car. The Audi had been Rajeev's, and practicality wasn't exactly his goal when he bought it. He just wanted something fun to drive. At the time, Sumita had called it his mid-life crisis, minus the crisis. That it also turned out to be far from mid-life was something she tried to ignore.\n\n After Gita registered at the dorm and picked up her key, the three of them hauled Gita's stuff up to the room, managing everything but the Ikea floor lamp and the large computer monitor on the first trip. Gita's roommate Dina was already there, unpacking her clothes. Dina and Gita had been friends since the seventh grade, and Sumita knew her well.\n\n \"You two look out for each other,\" Sumita told the girls once they'd gotten settled, gave them each a quick hug, and then walked out of the building, holding onto Jenna's hand like a life preserver in a storm.\n\n \"Wow,\" Jenna told Sumita when they got back to the car. \"You handled that amazingly well. I know it must have been tough for you - the blood hasn't flowed back into my hand yet.\" She put her other hand to Sumita's cheek.\n\n \"I didn't want it to be a big deal, and I didn't want to cry, you know?\" Sumita said. \"So I left before I could.\"\n\n With that, the dam burst and the tears flowed freely. \"My baby's all grown up,\" Sumita said.\n\n \"I know, babe,\" Jenna said, \"and you've done an amazing job raising her. She's a remarkable young woman.\"\n\n Jenna pulled Sumita to her and wrapped her arms around Sumita's shoulders. Sumita buried her face in Jenna's chest, letting the tears flow until they ran dry. \"It's okay, Sumi,\" Jenna whispered. \"You're a wonderful mom, and your daughter still needs you. She's going to for a while yet.\"\n\n Eventually, Sumita pulled back and looked Jenna in the face, wiping her cheek with the back of her wrist. Her eyes were puffy and her nose was stuffy, but her face cracked into a smile. \"Thank you,\" she said. \"Thank you for being here for me today.\" Jenna kissed her forehead.\n\n I called her 'babe', Jenna thought to herself in the car on the way back to Sumita's house. I've never called anybody 'babe' before.\n\n ~~~\n\n Alone at last.\n\n \"So, um, what do you want to do?\" Jenna asked after they got back to Sumita's house. Her heart was racing and her legs were a little wobbly. The thought of going to bed with Sumita was making her crazy. She hadn't felt so ... naughty since the last time she spent the night at Susie Parker's house in high school, when her parents were away for the weekend.\n\n But was she getting ahead of herself? She'd only slept with Sumita the one time, or maybe twice if you counted the next morning. Maybe Sumita wasn't interested. \"We could, you know, go for a walk or something,\" she said.\n\n \"I want to spend the afternoon in bed with you,\" Sumita replied, \"and I don't want to leave the house until you have to go home. It's been two weeks, and I've been dying to make love to you.\"\n\n \"Oh, good,\" Jenna replied, letting a little of her lust creep into her voice. \"I thought maybe it was just me.\"\n\n \"Nope,\" Sumita replied, and then she pulled Jenna into an embrace and kissed her on the lips. Jenna soon found her shirt untucked from her jeans and Sumita's hands running up her sides.\n\n Jenna broke their kiss long enough to lift Sumita's UW sweatshirt up over her head. This time she managed to unhook Sumita's bra, and Sumita's grin got wider as it slid off and dropped to the floor. She felt Sumita's fingers fumbling with the buttons on her shirt, and then it was off, flung over the back of the couch, and Sumita hardening nipples were pressing into Jenna's chest, just above the bottom of her sports bra. That came off soon too, and they were holding each other, skin to skin.\n\n \"Bedroom?\" Jenna asked.\n\n \"Yeah, that's probably better,\" Sumita replied. \"I'd let you take me right here, on the living room couch, but I'm not feeling much control right now, and I don't want to fall off.\"\n\n Jenna giggled, burying her nose in Sumita's hair and kissing the top of her ear. \"Bedroom,\" she whispered, and took Sumita by the hand and led her to the bedroom door.\n\n Once inside, they both took the time to pull off their shoes/boots and then peel down their jeans and panties. Jenna knew better than to repeat the mistake she made their first night together, when she got her jeans tangled up in her boots and Sumita had to undress her. Not that being undressed by Sumita was in any way a bad thing...\n\n A firm kiss on the lips brought Jenna out of her momentary distraction, and then Sumita pulled her into bed. They landed side by side, lips still locked together. Hands and bodies were everywhere, each trying to both gain and allow the best access to the other. Jenna's left hand ended up right between Sumita's legs, sliding against slick, wet skin. Sumita had somehow managed to reach around her lover, and Jenna felt two long, strong fingers stroking her pussy from behind.\n\n It was an awkward position, not the most comfortable, but it worked. Jenna rubbed and stroked as best she could, and when the tip of her finger found Sumita's clit, she heard a cry. Sumita's position allowed for a little more control, and Jenna felt a finger or two slide inside her from time to time. After what must have been only a few minutes, Jenna felt Sumita's body tensing, and her own orgasm was not far behind. They came one after the other, in short, sharp spasms of pleasure that overlapped each other. Jenna's first simultaneous orgasm, or close enough.\n\n They untangled themselves and lay side by side for a while to catch their breath, holding hands but not otherwise touching. Both bodies were coated with a thin layer of sweat.\n\n \"Wow,\" Sumita said. \"You must have needed that just as much as I did.\"\n\n \"Yeah, I guess I did,\" Jenna replied. \"I didn't realize how wound up I was until we got to the house and my knees were shaking.\"\n\n \"I've been desperate for this ever since our cooking weekend together,\" Sumita said. \"I keep having these thoughts about you at the most inappropriate times, like in my stupid status meeting at work. I get all flustered and I feel like everybody's staring at me, but of course they aren't.\"\n\n \"You've never had sexy daydreams before?\" Jenna asked.\n\n \"Never,\" Sumita replied. \"I guess having the first real, natural sex of your life changes something in you.\"\n\n \"Oh, Sumi,\" Jenna said, and she felt an ache in her chest for all the years Sumita missed out on.\n\n \"It's okay, Jenna,\" Sumita said. \"Really. I made a choice, and I don't regret it at all. But I don't want to talk about the past. I want to focus on those sexy thoughts you put in my head.\"\n\n \"And what do you do with those thoughts?\" Jenna asked, happy to change the subject.\n\n \"During the day, nothing,\" Sumita said, her voice growing husky, \"but in bed at night...\"\n\n \"What do you do in bed at night, Sumi?\" Jenna asked. She was looking straight at Sumita, ice blue eyes locked to dark brown, and her voice was a low purr.\n\n \"I think about you,\" Sumita replied, \"and I touch myself.\"\n\n Jenna nearly exploded. She had never heard anything so hot in her life. She didn't know what was more amazing, that Sumita was openly telling her about masturbating, or that she was the object of Sumita's fantasy.\n\n \"And what, exactly, do you think about?\" Jenna asked, her face burning. \"Be very specific.\"\n\n \"Well,\" Sumita said, closing her eyes and swallowing nervously, \"it usually starts with you kissing my fingers, or tickling my ear, or nuzzling my neck.\"\n\n Jenna did all those things, slowly and sensuously. Sumita responded with happy little sighs, and when Jenna kissed the hollow of her throat, the sighs turned into moans.\n\n \"What next?\" Jenna asked.\n\n \"My nipple,\" Sumita replied, her voice almost a whisper. \"I love what you do to my breasts.\"\n\n Jenna obliged, using every trick of mouth and tongue on Sumita's hard, sensitive nipples, first right then left then right again. Sumita wiggled and whimpered under Jenna's touch, and Jenna felt herself getting wetter between her legs. She was enjoying this game at least as much as Sumita, and Sumita was nearly delirious with pleasure.\n\n \"And then?\" Jenna purred into Sumita's ear.\n\n Sumita didn't answer, Jenna pulled back, leaving just one hand on Sumita's body.\n\n \"Tell me what you think of when you're about to come,\" Jenna said.\n\n Sumita's eyes opened with a brief look of panic. \"Your mouth,\" she said, barely able to speak coherently, \"I need your mouth, and your fingers.\"\n\n A broad grin spread across Jenna's face. \"You're amazing, Sumi,\" she whispered. \"So sexy.\"\n\n Then she scooted down in the bed and planted her face right between Sumita's legs, licking and kissing and sucking. Her fingers followed, sliding in and out while her tongue flicked across Sumita's very sensitive clit.\n\n Sumita came in a sudden, unexpected rush. Jenna didn't even feel it building; she just felt her head trapped between Sumita's thighs while Sumita's body went rigid. She waited it out, not touching anywhere sensitive until Sumita relaxed and let her go. Once free, Jenna snuggled up beside Sumita.\n\n \"You okay?\" Sumita asked after a while. \"Did I hurt you?\"\n\n \"No, I'm fine,\" Jenna replied. \"What about you? You look wiped out.\"\n\n \"I'll be okay in a minute,\" Sumita said, with some mischief slipping into her voice, \"and then it's my turn.\"\n\n \"Oh, no,\" Jenna said, laughing. \"That was my game. Get your own.\"\n\n \"Okay, then,\" Sumita said, and then laid back in the bed for a while gathering her strength. \"I don't just have fantasies about me, you know. Sometimes I think about what I can do for you, or to you. There's this one where I walk up behind you and put my arms around you, and then...\"\n\n Sumita continued to narrate the story, detail by little detail, and she demonstrated each and every one on Jenna's willing body. Jenna came twice before Sumita even finished her narration.\n\n ~~~\n\n The month of October flew by in a happy blur of fallen leaves and receding dawns. Jenna and Sumita were in that place where everything is still new and exciting, and the heavy decisions of the future still look far away.\n\n During the week, they lived their separate lives, meeting for dinner in the evenings when they could. Sumita always paid, whether it was Taco Time or fancy and expensive. Jenna felt bad about it for a while, letting it nag at her until she said something one night.\n\n \"You can pay, if it bothers you,\" Sumita replied with a shrug. \"I make enough money that I can take my girlfriend out to dinner whenever I want without having to think about it. That makes me happy. I don't think you can say the same thing.\"\n\n \"No, I guess not,\" Jenna said, and then she forgot all about it. \"Did you just call me your girlfriend?\"\n\n Sumita blushed. \"Yes,\" she said, leaning in to kiss Jenna's cheek. \"Yes, I believe I did.\"\n\n The weekends, though, were spent together. Jenna stayed over at Sumita's house every Friday and Saturday except Halloween, when she and Rose catered three different parties. They found plenty of things to do together - more hiking, more cooking (followed by more eating), the occasional trip to a museum or a movie - and they also spent plenty of time at home, reading or talking or just being. Thursdays at work were long and painful for Jenna, and Fridays were excruciating.\n\n Also, they had sex. Lots and lots of sex. They dove naked into bed at night and fucked each other until they got tired and fell asleep; they explored each other's bodies when they woke up together in the morning; they made love on the living room couch in the middle of a lazy afternoon just because they could. It was wild, joyful, unrestrained, sexy, silly, sloppy, and generally wonderful. Jenna was making up for eight years of infrequent, uninspiring sex, and Sumita was making up for a lifetime of suppressing who she really was.\n\n After their first weekend together, which ran entirely on raw passion, Sumita made a great effort to understand Jenna's body and to improve her own technique. She approached the project like an engineer, even doing A/B testing. \"Do you like this better?\" she would ask, \"or this?\" Jenna's response was usually measured by the volume of her moan.\n\n Even more than the effort, Jenna appreciated Sumita's willingness to try anything. Sumita had no hang-ups. She had likes and dislikes, same as anybody, but no shame. \"Being a lesbian married to a man,\" Sumita explained, \"you kind of have to learn to be okay with your body and your desires, or you'll go mad.\"\n\n The one thing Sumita would not do was let Jenna fuck her with a strap-on.\n\n \"No, unh-huh, no-way,\" she said when Jenna suggested it. \"I lived with Rajeev for almost twenty years, and every time he put his ... thing inside me, I had to make it okay. I could do that, enjoy it even, because I loved him, but it always felt wrong unless I worked at it, convinced myself it was right. I don't want to work at it with you, not when everything else is so natural.\"\n\n \"That's okay, babe,\" Jenna replied, with only a trace of disappointment. \"There are plenty of other things we can do together...\" She wanted to say something else, but she never got the chance. Sumita's lips closed around her nipple, and they were lying back in bed again, harness and fake cock forgotten on the floor.\n\n The weekends always ended, though, and Jenna went back home, to spend her weeknights in her tiny attic bedroom.\n\n ~~~\n\n Brrrrrrzzzzzaaaattttt!\n\n Jenna woke in the middle of the night to a loud wail.\n\n Brrrrrrzzzzzaaaattttt!\n\n As a joke, her friend Kate had set her ringtone to a ship's claxon. Usually, Jenna found it amusing. Now, she just wanted it to go away.\n\n Brrrrrrzzzzzaaaattttt!\n\n Jenna picked up the offending device and focused her eyes just enough make out the screen. Just a number, so not on her contact list. 425, maybe, although it was blurry. East side. Whoever this was, it had to be important to call at this hour.\n\n Brrrrrrzzzzzaaaattttt!\n\n Jenna pressed the answer button and held the phone to her face.\n\n \"Hello?\" she said, her voice hoarse with sleep.",
        "\"Jenna?\" the voice asked. It sounded distressed. \"Oh, thank you so much for picking up. It's Gita.\"\n\n \"Rita who?\" Jenna asked before fully processing what the voice had said.\n\n \"It's Sangita Desai,\" the voice said, making an obvious effort to speak slowly and clearly. \"You're, um, dating my mom.\"\n\n \"Yeah, sorry, Gita,\" Jenna said. \"Still waking up. What's wrong?\"\n\n \"I just ... I need your help,\" Gita said. \"Can you come get me?\"\n\n \"Okay,\" Jenna replied. \"Where are you?\"\n\n \"I'm at a house in the U district,\" Gita said. \"I'll text you the address.\"\n\n \"Okay,\" Jenna said. \"I'm on my way.\"\n\n Jenna pulled on the blue jeans and white shirt sitting on the chair next to her bed. She wore slippers instead of boots, and she didn't bother to tuck in her shirt or put on a bra. She was down the stairs and in the garage in two minutes, when Gita's text popped onto her screen. The house was a ways north and west of campus, in a very nice neighborhood. She tapped her screen for directions, just in case. The drive was under ten minutes.\n\n Gita was standing in front of the house when Jenna pulled up. The lights, the music, and the general disarray visible from the street all indicated a party going on inside. Jenna was a little surprised nobody had yet called the cops.\n\n Jenna got out of her car, and Gita rushed over to her. \"It's this guy, Mike,\" she said in a panic. She looked a little strange, but Jenna wasn't really paying attention. \"He's inside.\"\n\n \"Slow down,\" Jenna said. \"What's wrong?\"\n\n \"He puked, and then he had a seizure,\" Gita replied, trying to take deep breaths. \"We need to get him to a hospital.\"\n\n Jenna strode purposefully toward the house. \"You should have called the paramedics,\" she told Gita.\n\n \"I tried, but...\" Gita replied, unwilling to finish the sentence.\n\n \"You can tell me later,\" Jenna said.\n\n Once inside the house, the crowd parted for Jenna, with Gita trailing behind her. Jenna found Mike half-sitting, half-lying on the couch. She looked him over quickly, grabbed an arm, and hauled him to his feet. Gita grabbed the other arm. Together they dragged him out the front door and into Jenna's car, where he fell into a heap in the back seat. Jenna and Sumita got in the car and drove off.\n\n \"If he pukes again,\" Jenna said to Gita, \"you are cleaning it up.\" Gita nodded.\n\n Ten minutes later, Jenna pulled up in front of the emergency room door at University Medical Center, and Jenna ran inside to find somebody to get Mike out of her car. She came back out with big, burly nurse named Jesus pushing a gurney.\n\n \"His airway's clear and his pulse is okay,\" Jenna told Jesus as they hefted the kid onto the gurney, \"but he's totally nonresponsive. Vomited earlier and had a seizure.\"\n\n \"Do you know what he took?\" Jesus asked.\n\n \"Alcohol, definitely,\" Jenna replied. \"Probably something else. I wasn't there.\"\n\n \"Molly, maybe,\" Gita said. She was standing by the car, trying to stay out of the way. \"I didn't see him take any, but I know other people at the party did.\"\n\n \"Got it,\" Jesus said. \"We'll check it out.\"\n\n Turning to Jenna, he asked, \"You a medic or something?\"\n\n \"Nope,\" Jenna replied. \"Just know a lot of first aid. I tended bar in Belltown in the nineties, and the owner preferred that his patrons not die.\"\n\n Jesus laughed, a big bellow of sound, and clapped Jenna on the shoulder. \"You did good tonight,\" he said. \"Maybe even saved his life. We can take it from here.\"\n\n Jesus rolled the gurney inside, and Jenna and Gita got back in the car.\n\n \"Do you want to tell me about it?\" Jenna asked Gita.\n\n \"Fucking Halloween,\" Gita said, and Jenna finally noticed why Gita looked so odd. She was all in black, with a pair of cat ears poking out of her hair and the smudged remains of a feline design painted on her face.\n\n \"And...\" Jenna prompted when Gita didn't say anything more.\n\n \"I wasn't even going to go to the stupid party,\" Gita said, \"but Dina was going, and all my other friends, and I didn't want to spend the evening alone in my room like a loser.\"\n\n Jenna chuckled. \"Did you have anything to drink?\" she asked.\n\n \"No,\" Gita replied. \"Well, I did have a diet Coke, but I stayed away from the alcohol. It's not that I didn't want to, I just didn't feel ...\" Her voice trailed off.\n\n \"It's okay, Gita. You can tell me,\" Jenna said.\n\n Gita shifted in her seat, turning toward Jenna so she could look her in the face without craning her neck. \"I've never had more than like half a glass of wine,\" she said, \"and I didn't want to wake up in some strange guy's bed with no memory and no underwear.\"\n\n \"Smart girl,\" Jenna said. \"What happened with Mike?\"\n\n \"I don't know,\" Gita replied. \"One minute he was fine, and the next he was lying in his own vomit, thrashing around on the floor. It scared the crap out of me.\"\n\n \"I can imagine,\" Jenna said.\n\n \"I got my phone out and punched in 911,\" Gita said, \"but this big guy stopped me before I could dial. He told me no cops and no ambulance. Something about parents not finding out. I was going to call anyway, but he was so mean-looking. I honestly thought he was going to hit me, like really hurt me.\"\n\n Jenna let out a low growl. \"Stupid over-privileged fuck,\" she said, her voice thick with venom. \"He's going to let a kid die just to get out of a month of being grounded or whatever?\"\n\n \"I don't know,\" Gita said. \"I never saw him before tonight. Anyway, when he calmed down a little, I asked him if I could call a friend. No cops and no ambulance, just somebody I knew who was nearby. I thought you'd know what to do.\"\n\n \"Quick thinking, I guess,\" Jenna said with a sigh. \"Probably the best you could have done, under the circumstances.\"\n\n Gita smiled, a weary, sad expression that looked strangely lopsided on her painted cat-face. \"Look, Jenna,\" she said, \"please don't tell my mom about this, okay? I don't want her to worry about me.\"\n\n Jenna took Gita's hand in hers and looked her straight in the eye. \"I promise I won't tell your mother,\" she said, making sure Gita understood. \"But you need to tell her yourself. She may never find out if you don't, but what if she does? Do you want to take that chance?\"\n\n Gita swallowed hard.\n\n \"There were, what, fifty people at that party?\" Jenna asked. \"And some of them probably have parents who know your mom.\" \n\n \"Oh, wow,\" Gita said. \"I hadn't really thought about that. I guess I'll tell her, eventually. It's going to take me a little while to work up the courage.\"\n\n \"You didn't really do anything wrong,\" Jenna said. \"Except maybe going to the party in the first place. And if you hadn't been there, who knows what would have happened to Mike?\"\n\n \"Well ...\" Gita said. \"I don't know.\"\n\n \"Come on,\" Jenna said, buckling her seat belt. \"Let's get you home. You'll want a shower before bed.\"\n\n \"Yeah,\" Gita agreed, wrinkling her nose. \"My skirt still smells a little like puke.\"\n\n Jenna drove to campus, parked in front of the residence hall, and walked Gita upstairs to her room. Just as Jenna was turning to leave, Gita put a hand on her shoulder. \"Thank you, Jenna,\" she said. \"Thank you for tonight, and, well, ... everything.\"\n\n \"You're welcome, Gita,\" Jenna replied. The corners of her mouth turned up into the faintest smile as she walked away.\n\n The next morning, Jenna was supposed to meet Sumita around ten. They were planning to go for a hike somewhere east, off I-90, and then have lunch at a place near Snoqualmie Falls. Instead, Jenna called Sumita and told her she wasn't feeling well. It wasn't a lie, though it wasn't the whole truth. She would keep Gita's secret as long as she had to, but she wasn't quite up to facing Sumita with it that day.\n\n ~~~\n\n Jenna met Sumita Monday night for dinner on the east side, near her office, at a vegan Asian restaurant that Sumita liked. Jenna felt a bit awkward, but Sumita didn't seem to notice, though she did ask Jenna if she was feeling better at least four times. The warmth of Sumita's concern eased the knot in Jenna's stomach, but the secret she was keeping meant it didn't go away entirely.\n\n Sumita suggested an ice cream place in a nearby mall after dinner, and Jenna immediately agreed. She was fine with any excuse to spend more time with Sumita, and who doesn't like ice cream? They ordered a waffle bowl to share and found a quiet corner of the mall where they could sit and enjoy it.\n\n \"Well, it's not Molly Moon's,\" Sumita said, \"but it's not too bad.\"\n\n Jenna laughed at the reminder of their first sort-of-but-not-really date. \"Yeah,\" she agreed. \"This doesn't suck at all.\"\n\n Sumita giggled.\n\n After they finished their ice cream, they sat for a while people-watching. The mall was called Crossroads, for good reason. The clientele was a mix of well-off and barely-getting-by; of immigrants and locals; of high-powered tech workers and people with ordinary, everyday jobs. That was Jenna's take, anyway. She didn't know if Sumita saw the same divisions, and she didn't ask.\n\n \"So,\" Sumita said after a while. \"Diwali is coming up on the eleventh. I always do a big dinner at the house, and I'd really like you to come.\"\n\n \"Diwali...\" Jenna replied, testing the weight of it on her tongue. \"That's the big Hindu festival of light, right? I didn't think you were religious.\"\n\n \"I'm not, really,\" Sumita replied, \"but we celebrate it anyway. It's kind of like Indian Christmas. Not the spiritual story, of course, but it's an excuse to get everyone together for a big meal and indulge a little. Plus, there will be firecrackers.\"\n\n \"Sounds nice,\" Jenna said. \"Who all are you inviting?\"\n\n \"There's you, of course,\" Sumita said, kissing the tip of Jenna's nose. \"You should bring Rose and Brendan too, if that's okay.\"\n\n Jenna felt her chest tighten, but it was a good tightness. Sumita was starting to think of her sister and nephew as family. \"I'll ask,\" Jenna said. \"As long as it's not too late, I think Rose will be okay with it.\"\n\n \"Wonderful,\" Sumita said, beaming at Jenna. \"Apu will be there, with his wife Sapna, and Vivek, his wife Dee, and their two boys. Apu was one of Rajeev's oldest friends, and Vivek was a partner in his practice. They were both really good to Gita and me after Rajeev died.\"\n\n \"Wow,\" Jenna said. \"That's a pretty big group.\"\n\n \"I'm also inviting Sarah and Meaghan,\" Sumita said. \"I don't think I would have survived going back to work without Sarah.\"\n\n Jenna smiled.\n\n \"Plus,\" Sumita added, getting a dreamy look on her face, \"it's because of Meaghan that I met you.\"\n\n \"Is there anything I can do?\" Jenna asked, blushing. \"Maybe help you cook, or bring something?\"\n\n \"Nope,\" Sumita replied. \"Gita's coming over in the afternoon, and we've got it covered. Just bring yourself. I'd tell you to dress nicely, but I don't think I've ever seen you wear anything other than your blue jeans and white shirt, and I can't imagine you any other way.\"\n\n \"Clothes aren't really my thing, I guess,\" Jenna said, laughing to herself. \"I found one outfit that worked for me, and I stuck with it because I don't like anything else. When I have to do something formal, I have a pantsuit that I wear, but I really don't like it. I look like Hillary fucking Clinton.\"\n\n Sumita burst out laughing. She threw her arm around Jenna's shoulders, buried her face in Jenna's chest, and held onto her until the giggles stopped. When she sat back up, Jenna saw tears leaking from the corners of her eyes.\n\n \"You, my dear Jenna,\" Sumita said, trying desperately to contain another attack of the giggles, \"could never look like Hillary Clinton, no matter what you wear.\"\n\n \"That might be the nicest thing you've ever said to me,\" Jenna said to Sumita, and she broke into a broad smile. Sumita's delight was contagious.\n\n ~~~\n\n Rose was excited for Diwali. She had only met Sumita a few times, and this was an opportunity to get to know her big sister's girlfriend a little better. If she got to tell Sumita some embarrassing stories about Jenna, so much the better. She wore her Sunday best, and she made sure Brendan did as well. Brendan was indifferent to the idea, happy to be out on a school night but mildly offended at being relegated to the kids' table.\n\n Jenna, Rose, and Brendan arrived at Sumita's house early in the evening, before the worst of the rush hour traffic across the I-90 floating bridge. Meaghan was already there, sitting in the kitchen chatting with Sumita, and Gita and Dina were watching Jennifer in the living room, completely enthralled by the baby girl.\n\n Sumita greeted Rose with a hug, Brendan with a handshake, and Jenna with a kiss. She showed Rose and Brendan around the house, and she took them out to the boat jetty on the lake when Brendan asked. Vivek, Dee, and their twin boys Bill and Ed arrived just as Sumita came back inside. Jenna thought the twins looked familiar, though she couldn't say why. Perhaps it was their curious expression when they saw her, or perhaps it was just her imagination. Apu and Sapna showed up a few minutes later, and then Sarah finally appeared.\n\n When all the guests had settled in, hung up their coats, and deposited their bottles of wine and the like on the kitchen counter, Sumita made the introductions, with plenty of shaking of hands and polite exchanges of 'hello' and 'nice to meet you'. She introduced Jenna last, saying, \"... and this is my girlfriend, Jenna,\" and then kissed her on the lips to underline the point.\n\n Jenna felt a rush of red heat in her cheeks, and she looked at the unfamiliar faces for reactions. Bill and Ed didn't react at all - they were nineteen, and for them, a person being gay had never really been a thing. Apu, a big, dark teddy bear of a man, looked mildly uncomfortable with the public display, but unsurprised. Sapna and Dee both smiled warmly, welcoming Jenna into their little community. Vivek looked like somebody had hit him over the head.\n\n \"Your girlfriend,\" he said after a long, awkward silence. \"Okay...\"\n\n Dee took Vivek by the hand, whispered something into his ear, and led him into the living room. He followed, still looking confused. Sumita shooed everyone else into the living room as well while she and Gita finished up with the cooking. By the time the samosas came out of the oven, any lingering awkwardness was gone. Brendan was a little in awe of the twins - they were smart, they were tall, and they were in college. That automatically made them cool, and sitting at the kids table with them suddenly didn't seem bad at all. Plus, there were Gita and Dina, who were all those things, and also pretty girls.\n\n Before the meal, Jenna took Brendan, the twins, Dina, and Gita out to the lakeshore to shoot off fireworks into the Autumn darkness. The rest of the adults wandered out a few minutes later, except Sarah, who stayed behind to watch the baby. When everyone came back inside, Jennifer was asleep in her car seat, unbothered by the pops that had gone off outside. Sarah was gently rocking the car seat in the middle of the coffee table. Jennifer stayed asleep for almost the whole meal, which was unusual for her and lucky for everyone else.\n\n Dinner itself was lovely, a vegetarian feast of tastes and textures and colors, mostly traditional Indian with highlights ranging from Mexican and Chinese to minimalist and modern. All five of the kids went into the kitchen for second helpings, and so did half the adults.\n\n \"Sumita tells me you're a painter,\" Vivek said to Jenna over dinner. \"She made a point of showing us the new painting hanging on her bedroom wall before the fireworks. It reminds me of a sunset.\"\n\n Before Jenna could respond, Dee jumped in. \"It's two people fighting, dear,\" she said to her husband. \"Did you not see them?\"\n\n \"Oh, those were people?\" Vivek asked. \"I just figured they were clouds or something. Anyway, I like it. I could see something like that hanging up in the waiting room at the office - much better than the washed-out gray stuff my office manager Darlene picks out.\"\n\n \"Thank you,\" Jenna said, smiling her winning professional smile at both of them. \"I'm glad you like it. I can give you my card if you're interested in any of my other work.\"\n\n She reached into a pocket for a business card and held it out across the table. Dee took it, said, \"Thank you,\" and slipped it into her purse. Jenna got the feeling she would actually do something with it.\n\n The conversation level rose gradually as people finished eating, and then dropped again suddenly when three trays of homemade Indian sweets appeared from the kitchen. Things got loud again when Jennifer woke with an indignant wail. Meaghan scooped her up and disappeared into Sumita's bedroom to feed her and calm her down. When she emerged, everyone had finished eating and returned to the living room. Meaghan handed the baby to Jenna, at Rose's suggestion. \"It'll be good for you,\" Rose said.\n\n Jenna wasn't so sure about that, but she played along, standing little Jennifer up in her lap and making baby talk and funny faces to her. Jennifer responded with smiles and giggles, and Jenna decided that maybe this whole baby thing was okay, as long as the baby was in a good mood, and she could give it back when it inevitably started crying.\n\n Meanwhile, Dee went into the kitchen to help Sumita clean up. She was basically incapable of not helping.\n\n \"Don't mind Vivek, Sumi,\" she told Sumita. \"He was just a little surprised, that's all. Jenna seems great, and we're both very happy you've found someone. I know it wasn't all roses with Rajeev when you were married, but I also know how hard it was for you after he passed away.\"\n\n \"Thanks, Dee,\" Sumita replied. \"It was really gracious of you to be so accepting.\"\n\n \"Honey,\" Dee said, \"it's hard enough in this world find anybody at all you can live with. As long as you're happy, I think it's great.\"\n\n Jennifer's happy mood lasted about ten more minutes, and after that she got cranky enough that Sarah and Meaghan went home. A car ride was one of the most reliable ways to calm her down. Vivek's family drifted out a while later, followed by Apu and Sapna.\n\n \"Really nice to meet you,\" Apu said to Jenna, shaking her hand as he left. Sapna surprised Jenna with a hug.\n\n \"You take good care of her,\" Apu added, glancing at Sumita with a big goofy grin on his face. \"She can be pain in the ass, but Rajeev always thought she was worth it. Most of time, anyway.\" Sumita rolled her eyes at Apu's teasing.\n\n Sumita waved with her right hand as Vivek and then Sapna drove off. Her left hand held Jenna's.\n\n \"That went well,\" she said to Jenna as they walked back inside. \"Apu seems to like you. I was a little worried about that - he's a really nice guy, but he took Rajeev's death pretty hard. They'd known each other since they were teenagers.\"\n\n Jenna kissed Sumita on the lips.\n\n \"This was lovely, babe,\" she said to Sumita. \"Your friends are very nice, and it felt good to be acknowledged like that. No drama or anything. You have no idea what a relief that is.\"\n\n \"No, I guess I don't,\" Sumita said, \"nothing like you anyway. I'm just glad everybody got along.\"\n\n A noise from the living room reminded Jenna that Rose and Brendan were still there, and that they had driven together. \"I should probably go,\" she said. \"Brendan has school in the morning, and we have work.\"\n\n \"I wish you didn't have to,\" Sumita sighed, \"but I know you do. Friday?\"\n\n \"Yeah,\" Jenna replied. \"Looking forward to it.\"\n\n Rose drove home, and Jenna sat in the passenger seat feeling warm and fuzzy. She was starting to think that maybe, just maybe, she and Sumita could actually make it work together.\n\n ~~~\n\n After Diwali, life conspired against them for a while. They didn't get to meet Friday night because of a work emergency for Sumita, and Saturday and Sunday were out because of a big rush job for Ballard Bites. The next weekend Sumita had plans with Gita and Jenna with Rose and Brendan. So when they could finally meet for dinner at Sumita's house on Tuesday night, two days before Thanksgiving, they were both thrilled."
    ],
    "authorname": "Salish",
    "tags": [
        "lesbian romance",
        "lesbian love",
        "indian",
        "asian",
        "cooking",
        "art",
        "seattle"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/reboot-pt-02"
}