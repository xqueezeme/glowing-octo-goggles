{
    "title": "The Twelve Vitali Ch. 22",
    "pages": [
        "Authors note: Hello everyone. Thank you to everyone who takes the time to vote and comment, as always I have been overwhelmed by the generosity of the people who read this series. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\n\"Fucking control freaks!\" Dante grumbled. \"You're as bad as Josh, and this was supposed to be a holiday for me, not more babysitting duty.\"\n\n\"I know you didn't mean that as a compliment, but being compared to Josh isn't a bad thing, in my mind,\" Matteo shrugged.\n\n\"He's right,\" Phil weighed in. \"There aren't many of us who could have weathered so much death and destruction and come out as such a strong leader to rebuild it all in record time. Whether you want to admit it or not, the man is a powerhouse, and I imagine you and everyone else on your table have a tough gig keeping up with him.\"\n\n\"What he said,\" Matteo chuckled when Dante looked to him for support.\n\n\"It's not so tough. You realise he doesn't do it all alone, right?\" Dante grumbled.\n\n\"None of us do,\" Phil laughed. \"But it's people like Josh and our friend, Matt, here, who push and badger the rest of us into getting shit done. Speaking of getting shit done,\" he looked up as Nathanael walked in.\n\nAll eight of the men who had met in Kuala Lumpur had come on the next leg of Matteo's business trip. He had been right, each family had their own agenda for being in the Australasian Pacific, if not East Timor itself. They'd spent the night there waiting for news from home about the expected attack on the Papillo, but it never came, and, with great relief, they all started departing the following day to head home to their respective families. None of them discounted any of the theories they had come up with and promised greater transparency with each other, if no one else.\n\n\"I guess I'm off,\" Nathanael said. \"Do any of you need a lift to the airport?\"\n\n\"Nah, we're good, our flights aren't for a few hours yet,\" Matteo said easily.\n\n\"For what it's worth, I'm pretty sure something went down, but there was enough forewarning to nullify the threat,\" the serious Nathanael said as if he had given it a great deal of thought. \"I'll trust Phil's gut feelings over most people's, including mine anytime.\"\n\n\"Thanks, brother,\" Phil got up and embraced his friend. \"Have a good flight back. We'll catch up at the wedding. For what it's worth, you were right too. We have an amazing network of friendship and trust here. Our fathers probably did want us to reconnect on a better level. It's been years since we all got together like this.\"\n\n\"Yeah, we'll try to do it at least once a year,\" Matteo got to his feet to farewell the man.\n\n\"Yeah, that's what I need in my life, more control freaks,\" Dante grinned and embraced Nathanael.\n\n\"Yeah,\" Nathanael chuckled and left the house.\n\n\"It's just the three of us now,\" Dante said pointedly. \"So, spill it, Phil,\" he sat back and looked at the man who had counted his twin, Lio, as his best friend. \"You have the cone of silence, nothing goes beyond the three of us from this point on.\"\n\n\"You believed me about the Papillo, so you know I can sometimes just...\" he struggled to find the words. He hated talking about his sixth sense in terms other than just a gut feeling. His family knew about the depth of his abilities, but he rarely trusted others not to shoot him down or be suspicious of how he came by his information.\n\n\"Yeah, you can see dead people,\" Dante chuckled.\n\n\"I wish I could I give a million bucks to have Lio here right now,\" he let out a large breath. \"Look, I know who you saw in Ghost Town, Matt. Don't ask me how, but I know, and you should tell him before we leave. It's important for some reason, but aside from that, if the hacktivists have, or are still trying to get into the Papillo, you have to say something.\" He glanced at Dante and back at Matteo.\n\n\"Who was the older of the people I saw?\" Matteo asked, testing his friend.\n\n\"Your mother, Maria,\" Phil said sadly.\n\n\"Wait! What?\" Dante exclaimed. \"Fuck!\" he spat at a loss to even comprehend how hard that would have been for Matteo to find out that the mother who tried to murder him was alive and living in a family facility.\n\n\"Yeah,\" Matteo confirmed. \"Jacobi had been on a power trip since I had isolated myself, and the five of us, Maria's children, all had issues of some sort that was stopping my fathers' from naming the table. Ricco had fucked up his relationship with Cat, then I had fucked it up, Trista was becoming a sociopathic princess, like Nik, and Theresa needed to see that in full bloom. So we were all taken to Ghost Town for a reality check.\"\n\n\"I wondered why they told you now, of all times,\" Phil mused.\n\n\"When we came back from Ghost Town, both Ricco and I knew how badly we had fucked up. I still had a chance to make it right, so I came back to Brisbane and claimed my bride, so to speak. Which you know,\" he looked at Dante. \"What you don't know is that I had closure with Nik and finally moved on and let the pain and humiliation of that time with her go,\" Matteo said. \"How could you know, we all thought Nik was dead.\"\n\n\"Nik... alive...\" Dante said as if not comprehending what was being said. \"In the place where the twelve's secrets go to die...\"\n\n\"Roberto said that Joseph decided not to tell Josh because of what happened to Peri, and when he died the thirteenth decided your family had already been through enough and decided to keep the knowledge of her survival from you,\" Matteo said. \"Once I was officially chair I would have told you, but until then Roberto is the chair and gave his word.\"\n\n\"I think we always knew. Josh didn't mourn her the way you would expect him to. I think I put that down to Peri and what had happened, as you said. It was a relief more than anything that she was gone. We had planned to send her there, but she died before we could pull it off. I guess it doesn't matter who faked her death, that was always the end goal,\" Dante said calmly.\n\n\"So if the Papillo gets hacked, the monsters that scare our loved ones could reappear, or at least news of their whereabouts could get out. You're not the only family with monsters under the bed, so to speak,\" Phil said.\n\n\"Tell Josh or don't tell Josh, it's up to you, but you should tell Ben, at the very least. Nik still believes he will come and release her. She still claims she has done nothing wrong. She still hates Peri for turning Josh against her, and she believes Lio's death was his own fault for... well, you know what for.\" Matteo said, making sure Dante knew that time had not healed her narcissistic tendencies.\n\n\"That was some reality check your fathers gave you,\" Dante murmured. \"Why now? Why did they do it?\"\n\n\"Roberto is dying. He needs me to step up,\" Matteo sighed heavily and leaned back in his chair.\n\n\"I thought it was Stefano who had the heart surgery?\" Phil frowned.\n\n\"It was. Stefano will recover with some TLC and if he takes it easy. Roberto is terminal, they are saying a year, at most,\" Matteo said bluntly. \"No one on the tables knows, and that's how he wants it for the moment.\"\n\n\"Fuck!\" Dante said. \"Just Fuck!\" He was at a loss for words, for himself, for Matteo, and even for Phil, who seemed to feel these things more keenly than the rest of them.\n\n\"So I guess I wasn't supposed to hear any of that, huh?\" Nathanael asked from just inside the room. \"My gut mightn't work as well as Phil's, but I knew something was going on. Don't worry, cone of silence and all that shit, I get it. Of all of our friends you know, I can keep my mouth shut.\"\n\n\"Fuck!\" Dante said again.\n\n\"You know what I think?\" Nathanael said, coming back in to sit with them. \"I think we should all go to the hospital to see how our good buddy, Rick, is doing after his appendicitis. I heard he's in Broome.\" Nathanael allowed a rare smile to touch his lips.\n\n*****\n\n\"She can't talk right now, she's all tied up,\" Ricco chuckled.\n\n\"Put the phone up to her ear then,\" Matteo groaned. \"And send me a picture this time.\"\n\n\"Hello,\" Cat said breathlessly.\n\n\"Good grief,\" Matteo moaned deeply. How was he supposed to concentrate on what he had to do now? \"I miss you even more now,\" he closed his eyes. \"I'm sorry this is taking so long.\"\n\n\"You'll be back tomorrow, though, won't you?\" she asked, anxiety creeping into her voice. It was late even for Matteo.\n\n\"Yes, nothing could stop me coming home tomorrow!\" he said adamantly.\n\n\"I miss you so much!\" she said, breathing heavily into the phone.\n\n\"God, I wish I was there right now,\" he sighed. \"I love you and miss you too. Let me talk to Ricco again.\"\n\n\"Photo, now!\" he grumbled into the phone as he heard his brother move the phone to his own ear and the soft, breathy tones of Cat disappear. \"I'll be back mid-afternoon, I hope. Get the movers in first thing so we can move into the Penthouse tomorrow night!\" he commanded.\n\n\"Relax, Matt, most of it's done, we're just waiting for you,\" Ricco chuckled. \"Lucca can't wait to get us out of here. He's already started moving his stuff in.\"\n\n\"Photo, then I'll get relaxed!\" Matteo growled, making Ricco chuckle again before ending the call.\n\n\"He's a bit on edge,\" Ricco grinned at Cat, who swung from her bonds in the afterglow of a harsh scene with him. She did well to talk as coherently as she had on the phone. She had embraced his darkness, and he revelled in finding a new freedom of exploration with her. It would be different when Matt returned, not in a bad way, but these moments where he had her complete and willing surrender would be fewer. Matteo was a softer, more caring Dominant who enjoyed the lifestyle on a part-time basis. After having the last four nights with Cat, Ricco could happily immerse himself deeper into it on a more permanent basis if she would be there with him.\n\nRicco picked up his phone and arranged Cat's hair and body in such a way that he could take a few shots to send Matteo without revealing her identity. He would hate for anyone, especially Sebastian, who already thought badly of him, to recognise Cat and keep the photo's themselves. Matteo sent back appreciative expletives, and Ricco went about releasing Cat carefully from her bonds and going through the routine of washing her and caring for the marks he had left on her body.\n\n\"What's wrong?\" he asked into the silence, noticing the strange look on her face, not for the first time, as he smoothed a healing cream over her bruised skin.\n\n\"I'm nervous, I mean, I get it on some level, but it will be weird to have you both here in bed, together,\" she spoke softly. \"Now that we...\"\n\n\"I guess, at first, it will be strange for all of us, but as long as we love and trust each other, it will all fall into place. Trust me, I won't push Matt past his limits. I love him, I would never do anything to harm that,\" He said easily, because that was honestly how he felt. \"This stuff, the rope, it's not his thing, but he's curious enough about it to want to explore it with us, and that's all I ever wanted. A relationship where my needs are just as important as his where you are concerned.\"\n\n\"What about what I need?\" she asked.\n\n\"Your needs outweigh both us, you only have to ask to receive,\" he said, moving up the bed to kiss her. \"If it gets too much, you have safe words, and we stop, regardless of what we need. If you want something more, different, softer, darker, you just have to ask, mainly because we aren't mind-readers,\" he chuckled. \"We're pretty typical men, and subtlety doesn't always work with us, so you're better off just telling us what you want.\"\n\nCat laughed with him. It was so easy to believe everything could work out, but she was still anxious and didn't think that would ease until they were all here together again. She closed her eyes, feeling Ricco's arms drift around her, and fell into a deep exhausted sleep.\n\nThe following day both she and Ricco were busy all morning as they supervised the last of their belongings, as well as Lisa's equipment being packed and moved. Lisa went ahead to the penthouse to take charge of where everything went, especially in her kitchen, and by lunchtime they were done. Without Matteo there, however, neither of them lingered, wanting him to be there when they officially made it home, so they delegated to Lisa for the final touches and went to have lunch with the family, who were gathering in the restaurant downstairs, because, as usual, Ricco was starving.\n\nAfter taking Theresa into her confidence regarding her wedding dress, the wedding plans went smoother, and rather than spend time looking at things she had no interest in, Theresa was able to narrow down options for her and the major part of the planning seemed to be over. Cat didn't know most of the people attending, so she left the seating arrangements in Theresa's hands after asking that the Donatis' be given premium seating. She knew Matteo would have his own wants where the seating was concerned, but she hadn't had the chance to talk to him about that yet.\n\nCat had also been making a solid effort to get to know all of Matteo's siblings and found that Ricco had been right in his appraisal of everyone having a thing that they loved to do. His youngest brothers she found she liked immensely, on the surface they were funny and smart and liked nothing better than to try and get one up on their older siblings by clowning around. Getting to know them, however, she found they both had very different personalities and outlooks on life. Raphael was cynical and dry-witted, always seeing beyond the obvious to what lay beneath, and Cat loved to people watch with him as he judged and found most of the people wanting. Leonardo, on the other hand, was warm and open and as understanding of peoples faults as his brother was cynical.\n\nShe saw Lucca every day, and he seemed to seek her out when he was moving into the apartment or when she visited Ricco's office. He reminded her a lot of Matteo in that he was funny and charming and more often than not happy to drop what he was doing to help her with something. Zion and Aria had taken a day trip to Brisbane to view her portrait of the Donatis' and had given her unadulterated praise for the work she had done in such a small amount of time.\n\nTrista and Mia, she bonded with over the wedding plans while she saw Vanessa all the time at the HQ building as they finished off the penthouse and remaining apartments. Only Jacobi and Maryanne seemed to be stumbling blocks for her, although each time Lucia visited, Maryanne defrosted toward her a little more. Still, she was happy with the progress she had made, now she just had to get the Aunts and Uncles and cousins straight, and she could truly claim to be part of this family.\n\n*****\n\nMatteo wasn't surprised to see Josh sitting with Dante and Ben. He felt the need to talk with Ricco just as badly. Phil and Nathanael arrived within fifteen minutes as well, and Matteo realised they were all anxious to get some answers.\n\n\"I need to do this alone,\" Rick Papillo gripped his brother's shoulder.\n\n\"I'll just invite Ben and Josh to tour the facility,\" Leyton nodded. \"That'll give you an hour to explain to your friends why you're not in the hospital.\"\n\n\"Leyton, this is a surprise,\" It was Josh who stood from the table first to greet the two brothers who walked toward them.\n\n\"Not as much as hearing that you were here, I'm sure,\" Leyton laughed. \"Ben, how you doing?\"\n\n\"We know,\" Ben said abruptly. \"So, we can either air our dirty laundry here, or you can find somewhere where the other patrons won't have to see me hit you.\"\n\n\"Yeah, alright,\" Leyton looked at his brother and frowned. This had not been what they were expecting. \"Let's go to my offices.\"\n\n\"You recovered quick,\" Dante eyed Rick with a raised eyebrow as he fell into step beside him.\n\n\"Yeah, miraculous, isn't it,\" Rick said in a resigned voice.\n\nAn hour later Matteo felt better about the breach of the security systems that had occurred at the Papillo's known facilities. The hidden ghost town, however, had no computer records. Everything there was done by hand, and any correspondence was coded with the prisoner's pseudonym, which was always a colour. Still, a breach had occurred, and even though it appeared that the hacktivists hadn't retrieved any data of value, it was still cause for concern.\n\n\"Since when did we make Phil the grand poohbah of our gang?\" Rick asked teasingly, as Phil once again began to question all the things that had happened recently.\n\n\"From what I can work out he always was, it just that he doesn't have Lio taking all the credit for him anymore,\" Matteo chuckled.\n\n\"Fuck, I miss that guy,\" Phil reiterated. \"Sorry, D., but...\"\n\n\"Don't be, I already told you, I'm glad to know someone aside from me misses him so damn much. Especially at times like this,\" Dante gave a sad shrug.\n\n\"We all miss him, D.,\" Rick said genuinely. \"But you were always destined to be the Oracle, just like the rest of us.\"\n\n\"We're not all Oracles,\" Matteo said.\n\n\"You would have been if Cat hadn't dumped Ricco's ass,\" Dante chuckled. \"Same with Mo and the rest of them. It was about the mother every time. Personally, I think Lio was destined for the job, but I was lucky enough to be loved by one amazing woman.\"\n\n\"They're all amazing women,\" Matteo chuckled. \"It's us who have the hang-ups.\" He looked pointedly at Nathanael. \"Take the advice and date your brother. Sit around a bottle or six of Sambuca and lay everything online, then, once he trusts you, do the same with the mother until she trusts you. It's what works, and you can trust me on that.\"\n\nIt had been late when they finally went back to their hotel rooms, and Matteo woke with an overarching need to get home. He got up, showered and dressed in record time and headed down for breakfast where he had organised to meet his friends. Not being able to shake the need to get home as soon as possible, Matteo farewelled his friends, promising to catch up with them all at the wedding, and called his pilot. It was still a four-hour-plus flight, and he had an unsettling feeling in his gut. He'd probably just been around Phil and Nathanael for too long, he reassured himself, but he couldn't help the nagging feeling he had now.\n\n*****\n\nCat sat through lunch in the crowded restaurant trying to take in all of the different people she had met, and was glad she had taken the time to change into a nice dress before coming down to lunch in the restaurant on the ground floor of the HQ building.\n\n\"This must be the delicious Catriona I have heard so much about,\" a deeply accented voice said, and she turned to lock eyes with a tall, imposing, dark-eyed man who was obviously part of the Vitali clan. He picked up her hand and brushed his lips against her knuckles. \"There is still time to change your mind and marry a better choice,\" he winked at her.\n\n\"I'm afraid I did that whole cross my heart and hope to die thing with Matteo, so it's marry him or die, I'm afraid,\" she said sadly.\n\n\"Ah, best you go through with it then, it would be such a shame for one so beautiful to die so young,\" Danilo Vitali held back his smile. \"My shy son will be most disappointed I couldn't steal you away for him.\"\n\n\"Ric, you're a lawyer, right? How do I go about divorcing my parents?\" Arlo Vitali asked, shaking his head at his father and pulling up a chair from the next table to squeeze in beside Ricco. Danilo laughed raucously and moved away to greet his brothers.\n\n\"Hey, man, it's good to see you,\" Ricco greeted his cousin and introduced Cat. \"I already called dibs on being her second choice though, man, sorry.\"\n\n\"But does she realise that I come with the bonus of living and travelling in Europe for most of the year, good food, wine, museums, art galleries...\" he winked at Cat, making her laugh.\n\n\"You know what Europe doesn't have?\" she asked with a smile. \"Matteo and his cute butt.\" She winked back at him, making him burst out laughing.",
        "\"I've never checked out his butt, honestly. Speaking of the big guy, where is he?\" Arlo asked.\n\n\"Flying back as we speak, I hope,\" Ricco said. \"It's a full-time job trying to keep all you cousins from stealing Cat away.\"\n\n\"I better go see the old guys, and you,\" he looked at Cat, \"Can check out my cute butt as I go,\" he laughed again and stood to wriggle his butt at her before walking toward Roberto and Stefano.\n\n\"What is it with you Vitali men?\" she whispered to Ricco.\n\n\"We have a type, and you're it,\" he chuckled.\n\n\"If I can have everyone's attention!\" Roberto stood, clinking his knife lightly on his glass to get their attention. \"As advertised, the hunt teams will be drawn this afternoon now that the last of my brothers have arrived. They will be posted by dinner tonight, you have approximately thirty minutes, if that, to get your name into the drawing. Those who do not, or have not let us know their intentions by other means will not be competing.\" Everyone focused on him as he explained the rules for this year's hunt and how the teams would be drawn. Teams of three would compete, and there would be no changes allowed in teams once the draw had been posted. His smile had appeared toward the end of his speech and widened when Cat let out a squeal of delight as Matteo lifted her from her chair and kissed her.\n\n\"Sorry, Papa, I couldn't wait,\" he looked sheepish. \"We'll just take our reunion somewhere else,\" he grinned, took a key card from Ricco, who had held it up slightly between two fingers, and hoisted Cat over his shoulder before walking out of the restaurant to much laughter and cheering. He carried her to the elevator before placing her on her feet and kissing her again.\n\n\"Hi, I missed you,\" he said with a grin.\n\n\"I, and the rest of your family, might have noticed that,\" she giggled girlishly and wrapped her hands around his neck. \"Welcome home,\" she said softly, and kissed him as he pulled her into the elevator.\n\nTo her surprise, they didn't rise to the penthouse, but only a short distance, and, holding her in a tight embrace, he picked her up off her feet and walked awkwardly, still kissing her, to a small single room. Ricco had organised the key and booking for him for this afternoon and promised to distract the rest of the family for at least an hour before people sought him out.\n\nWhen he set her back on her feet after entering the room, she released her arms around his neck just enough to be able to look up into his eyes. They stared at each other for a moment before he wrapped a hand around her hair, gently tilted her head back and kissed her, slowly, deeply, passionately. They both poured all the passion, longing and need from the past few days into the kiss. Her nails scraped over his shoulders as she pressed closer. Their bodies melded together. He wasn't the only one home. She was back at home in his arms.\n\nShe practically whimpered when he broke the kiss. He tugged her head back a bit more and waited for her eyes to flutter back open and focus on his. Then he tilted her head and his mouth moved to her ear. His lips, teeth and tongue nibbled and kissed his way from there down her neck. He tightened his hand around her waist as he felt her squirm and her knees begin to buckle. He knew what this did to her, and, listening to her heated purrs, he lifted his head to see the heat in her vibrant blue eyes.\n\n\"I have missed my purring Kitten!\" he growled. He backed her up against the wall, holding her there with the weight of his body against hers. He couldn't help but moan as she began to roll her hips, pushing against him.\n\nHis hands slid along her arms, pulling them from around his own neck until he was able to press them over her head against the wall. He held her wrists together above her with one hand. He used his other hand to grasp a nipple through the fabric of her dress. She inhaled sharply and arched toward his hand.\n\n\"Open your eyes, Kitten,\" He murmured and watched her focus on him again, her beautiful blue eyes, overly bright now. \"I have dreamed of those eyes, this mouth,\" he kissed her, briefly causing her to arch toward him, when he pulled away, wanting more. Letting go of her hands, he took advantage of her raised hips and bent, sliding his hands up her legs under the skirt of her dress to hook into the sidebands of her panties and whisk them down her legs.\n\nMatt stood, kissing her hard again as he loosened his belt and pushed his pants and underwear down his legs. He needed her, needed the release so badly. He pushed her skirt up again and pulled her legs over his hips and felt her hands drop to his shoulders for support. He entered her roughly, revelling in the feel, sound and taste of her. He fucked her like a man possessed, promising that later he would fuck her properly. For now, he just needed her and this release from all the pent-up frustration of the last five days.\n\nCat was surprised at the speed and force with which he took her, but she felt exactly the same way. She needed to reconnect with him on this physical level, and she met his thrusts, rocking her hips into him as she matched his need with her own. This was the man she wanted and needed, the man she was going to marry in just over a weeks' time.\n\nMatteo came with a roar, and even though Cat sought her own release she didn't quite get there. She felt the connection with him, however, and gripping her tightly, he carried her to the bed, pulling her down on top of him.\n\n\"I'm sorry,\" he murmured into her shoulder, kissing the bare skin around her collarbone.\n\n\"I'm not,\" she smiled softly and smoothed her hand over his cheek. \"I missed you just as much,\" Cat leaned down and kissed him. \"Tell me everything, I want to know it all.\"\n\n*****\n\nCat and Matteo made it back to the restaurant and took their seats as Stefano stood to make a speech. He called Kalum and Cat to the front table where the current Vitali table sat with their wives.\n\n\"These two young people have both been challenged by the harshest of trials and have proven beyond a shadow of a doubt that they are worthy of bearing the name Vitali,\" Stefano intoned. \"What they lack, however, is experience in the Gathering and knowledge of our greater family. As they have both decided to join the hunt this year, my brothers and I have decided they will compete as one entity with two other team members. Do we have any challenges to that rule?\" There was a low murmur, but no one spoke up. \n\n\"This should be fun,\" Cat looked up at Kalum and grinned. \"I heard it's going to be an old school one, not much tech involved, which is good, right?\"\n\n\"Truthfully? Mia told me I had to do it. I don't even know what I've signed up for,\" he said with a whispered chuckle.\n\n\"It'll be fun, Kalum, I promise,\" she grinned.\n\n\"Excellent,\" Stefano spoke again. \"Cat, can you come and draw a number, please?\" he indicated a bag with small white balls in it that Anna held open for her. Cat drew one and passed it to Frank, who had held his hand out for it. \"If those of you who have signed up for the hunt would like to choose a number, feel free, for those who don't, you will be assigned a team in random order to fill in the blank spots. Once you have done that, hunters and huntresses can make their way to the conference room on the third level to find their team and the all-important list if you wish to get a head start on your competitors. The room will remain available to hunters throughout the two-week period.\"\n\n\"I guess I'm going to the conference room for the afternoon,\" Cat said as she came to sit down between Matteo and Ricco.\n\n\"That's probably a good thing,\" Matteo murmured. \"I have duties I can't get out of for this gathering, and I really need to talk to that clown about a few things. After dinner, though, I promise, it will be just the three of us.\"\n\n\"It's a good thing I don't have to feel bad about abandoning you?\" she laughed, \"Or you don't have to feel bad about leaving me all alone again?\"\n\n\"Look around you, Kitten, in this family you can never be alone,\" he chuckled. \"Besides, from what I hear you've only met a couple of my cousins, and they have all asked you to elope with them. What's that about?\"\n\n\"Ricco says you Vitali men have a type, and I'm it,\" she said with a perfectly straight face and a small nonchalant shrug, making him laugh loudly.\n\n\"He could be right about that. Why don't you go find Kalum and Mia, and I will come find you later?\" he suggested.\n\n\"Okay. But tonight, the three of us, alone, in our new home?\" she questioned carefully.\n\n\"That sounds amazing,\" he grinned and kissed her. \"You ready to go, Ric?\"\n\n\"Yeah, alright,\" he bent to kiss Cat's cheek, wishing he could kiss her in public the way Matt just had, but it wasn't the right time or place to even be thinking like that, so he took a moment to squeeze her hand under the table and smile softly. \"Tonight,\" he whispered in her ear, and was pleased when he caught a soft shiver from her.\n\nCat made her way over to Kalum, who leaned back and smiled at her, offering her the recently vacated seat beside him.\n\n\"I never asked what our number was,\" he said as she sat.\n\n\"The answer to life, the universe, and everything,\" she answered.\n\n\"I didn't know you were a sci-fi nerd,\" he chuckled.\n\n\"I don't know that I'd go that far, but I've read a bit,\" she laughed with him. \"I wonder how many teams there'll be. I mean, there's a lot of people playing if our number is that high.\"\n\n\"It's a big family and a big gathering, from what Mia has said. Let's hope we get a family member who knows everything about everyone. Like Mia,\" he chuckled.\n\n\"I guess we'll soon find out,\" she smiled. \"Are you coming up to get the list?\"\n\n\"As soon as Mia gets her number,\" he nodded. \"You may as well wait for us. I take it Matt isn't playing?\"\n\n\"No, he said he and Ricco had other duties they had to perform this week. I'm worried that with the wedding coming up that I won't be much help either. I feel a bit sorry for whoever gets stuck with us. Still, it should be fun,\" she smiled.\n\n\"I'm pretty competitive, by the way. I don't like to lose,\" he warned her. \"I reckon we find our team, make an action plan and schedule a few regular meetings to touch base and adjust our plan of attack.\"\n\n\"It's a game, not a military exercise, Kalum!\" she laughed delightedly. Despite her words, she really wanted to do well in her first family hunt.\n\n\"Doesn't matter, if you're going to do something you should strive to excel, or why bother?\" he asked.\n\n\"I guess we could be the quiet achievers that nobody thinks is a threat, and right at the end go... wham, here we are, thank you very much for playing,\" she laughed.\n\n\"Now that sounds like a plan I can work with,\" he agreed easily as Mia came back to join them.\n\n\"How did you go, sweetheart?\" he asked.\n\n\"Twenty-seven?\" she asked hopefully.\n\n\"Not even close, I'm afraid,\" he sighed. \"Depending on who's on your team we might be able to work out a deal though. Because, let's face it, Cat and I are a definite handicap to the poor suckers who got stuck on our team, I'm not helping any of your brother's win though,\" he warned her.\n\n\"Competitive much?\" she laughed and leaned in to kiss him. \"Besides, you're the one with the handicap. I think you need my help more than I need yours.\"\n\n\"Maybe, maybe not. We haven't seen the list yet. Maybe it calls for more brawn than brains. Cat's got muscles, babe, you should see her work out,\" he said with a smirk.\n\n\"Come on then, let's see who we got,\" she laughed and shook her head.\n\nIn the conference room, there were small tables numbered from one to seventy. As people went in, they found their number and sat looking at the list and equipment left on their table. Kalum put his hand on Cat's arm and held her back near the door, watching. Mia wandered off towards her table to greet what Cat assumed was a cousin already sitting there, and Kalum pulled her back outside.\n\n\"I know you probably haven't noticed, but there is a lot of interest in you at this gathering thing. Matteo is very well loved by his family, and everyone was so worried when he withdrew from the social scene for so long. I know all of his brothers are watching which team you are going to have, as well as some of the cousins. I imagine there will even be some manoeuvring to try and switch teams, even though it's against the rules. Let's make it interesting for everyone. Let's wait until both our teammates have arrived, then I will go and have a social chat with a few of the tables and let our guys know we are going to meet,\" he paused and seemed to consider the where.\n\n\"Aren't they going to post the teams somewhere?\" She asked.\n\n\"Hmm, I bet you could ask them not to and just give out teams to those who are latecomers. Those old men love a bit of intrigue and gamesmanship, and, for you, they may just change their mind about posting the teams. Especially because there's always some manoeuvring happening. You go and see Roberto and I will find our teammates and get them to meet us down in that little bar next to the restaurant,\" he encouraged.\n\n\"Alright,\" she said dubiously. \"I don't like my chances though.\"\n\n\"Try anyway, it's a good plan,\" he grinned, enjoying himself. This thing might be fun after all with Cat on his team. She was smart, funny, and most of Matteo's brothers wanted to help her, or even be on her team for the hunt. He could definitely use that to his advantage.\n\nCat went back down to the restaurant, she wasn't really sure about the advantage of people not knowing who was on her team, but if Kalum had some sort of plan she was happy to go along with it. She understood that driving need to prove that they would be a valuable member of this family. She approached Roberto as numbers were still being drawn and asked if she could speak to him quietly and gave him a concerned look.\n\n\"What seems to be the problem, Catriona?\" Roberto asked, guiding her away from the group of people to an empty table.\n\n\"I don't want to complain, but I want this hunt to be very fair and not like I have an advantage with a team of four and who might be on that team. Kalum and I had some concerns that there was an overabundance of interest in which team we were on and that quite a few people were waiting so they could possibly manoeuvre around your rule about team changes before you posted the teams tonight,\" she said as honestly as she could.\n\n\"Kalum and I were wondering that if we kept our team number secret, at least for the first few days, that it might stop the manoeuvring and make it a fairer playing field. He's watching the people who sit at that table, and we thought we could touch base with them another time when there wasn't so much interest in where we were sitting and what we were doing,\" she kept talking without coming to her point.\n\n\"What exactly are you asking me?\" Roberto frowned at her.\n\n\"I was wondering if maybe you wouldn't post the list of teams anywhere and the latecomers could come and check in with someone, maybe someone trusted at reception, to find out which team they had been assigned,\" she asked. \"I feel like I'm under the microscope more than a little bit, and I just want to have fun with this without all the...\" she lost the word she was going to use.\n\n\"I'll admit, there have been more than a few inquiries before and after the draw about your team, and volunteers who said they would take the disadvantage of guiding the new family members through the hunt,\" Roberto nodded. \"I'll talk to my brothers about your request,\" he said. \"I don't see how it will matter at all, but I can understand your reticence to be accused of cheating or manoeuvring around the game. This is Stefano's show this year, so the final word on it will be his.\"\n\n\"Thank you, Papa,\" she smiled. \"I'm sorry to be a pain so early on in the game, I promise I won't say another thing.\"\n\n\"Not at all, it's best to get these things sorted out early,\" he nodded and stood, walking back to his table where the balls were still being drawn. With over two hundred family members playing this year, it was not going to be an easy feat to arbitrate the points system.\n\nCat walked from the restaurant to the tiny bar almost hidden at the far side of the restaurant facing the street. Only two other people, a young man and woman, seemed to be in the bar, and she couldn't see Kalum, so she ordered a drink, unsure of what else to do.\n\n\"Cat, I'm Tate,\" the young woman approached her. \"I think you met my brother, Chase, already, but I was away and missed your engagement party, sorry.\"\n\n\"Hi,\" Cat said with relief that she didn't have to sit here alone. \"Did you see Kalum upstairs?\"\n\n\"We did,\" she nodded. \"That's Logan, take no notice of him, he's permanently grumpy.\"\n\n\"I heard that!\" Logan grumbled,\n\n\"See what I mean,\" Tate rolled her eyes. \"Kalum is still upstairs socialising to throw people off the scent. He says he has some sort of plan.\"\n\n\"He's competitive and hates to lose, I'm afraid. I hope you're both up for this, because I have a feeling it's going to be tougher than a boot camp,\" she laughed, taking a seat with them both. \"So, Chase's sister, which means your dad, is Cosimo?\"\n\n\"Correct,\" Tate said. \"There are tons of us though, so no one expects you to know everyone straight away. Logan is...\"\n\n\"No, let me guess,\" Cat considered him as he looked up. He had the same dark colouring that they all did, but there was something about the curve of his mouth that reminded her of Sebastian. \"I think your Dad might be Salvatore?\" she asked.\n\n\"Correct again!\" Tate clapped. \"You're good. How did you guess that?\" she asked.\n\n\"He looks a little like his brother, Sebastian. I've met him a few times now,\" she confessed.\n\n\"Sebastian is playing this year, and I thought I was finally going to be able to beat him, with this being old school, but then I drew this team of newbies,\" he grumbled.\n\n\"We aren't just going to beat him,\" Kalum said, coming to sit with them. \"We are going to beat everyone, because we have two distinct advantages. No one expects us to, and we have Cat. The first rule is never telling anyone our number. You can say we're on your team if you absolutely have to get an advantage, but never ever what our number is.\"\n\n\"Why not?\" Tate frowned.\n\n\"This is low tech, which means, from what I got from the other teams already, is that there will be progressive scores every couple of days with just the team number, no names, I hope,\" he looked at Cat for confirmation.\n\n\"Roberto seemed okay with it, but he said it was Stefano's decision. I guess we'll find out tonight if they post the teams with all the names,\" she explained that she had done what she could.\n\n\"You went to Roberto about a rule change?\" Logan sat back and looked at her.\n\n\"Was that wrong? How would I know, I'm such a newb,\" she laughed and tilted her head at him.\n\n\"Cat- one, Logan- zero!\" Tate chirped happily.\n\n\"Okay, let's see what we have to work with here,\" Kalum said, taking the backpack Logan had shoved everything into from under the table. He rifled around and drew out the lists after being satisfied he knew what all of the equipment was. They took some time going through the different sections of the excessively long list. Discussing the merits of doing or ignoring the easy items which were worth fewer points than the moderate or hard items. Group challenges came after that and were worth a variety of points becoming more substantial with the time required to complete them. Then there were the hard and impossible items and tasks, and this was an area that both Cat and Kalum needed guidance to understand. The impossible items and tasks seemed, to an outsider, doable until you discovered what they would entail and that most of the clues were cryptic in some way.\n\n\"Alright,\" Kalum said after they'd been through the list. \"The hardest things to coordinate will be the team challenges, mainly because the bride-to-be will be super busy this week and we have the gathering events, so let's schedule as many as we can in around all of those things. Our advantage here is that there are a few team challenges that only three of us have to complete, because that's all they allow for. I say we all take a section of the easy and moderate items each, because every point counts. If we lose by one point because we didn't get a napkin from,\" he checked the list, \"Heidi's Bavarian patisserie, then I will be gutted.\"",
        "\"You really think we can win, don't you!\" Logan said in amazement.\n\n\"I don't think it, my friend, I know it! We are going to use every resource we have at our disposal to do it, including being newbs, poor sweet, clueless girls, and the heroes who just want to help them get some points, and anything else we can think of to get an advantage. This is war, my friends, and we are going into battle!\" Kalum growled at them, causing Cat to break out into a serious fit of giggling.\n\n\"That was motivational,\" Tate said. \"Right up until the point where Cat started laughing.\"\n\n\"I'm so sorry,\" Cat tried to get her laughter under control. \"But he's just so cute when he gets like that. I couldn't help it.\"\n\n\"I'm not cute! Matteo is cute! I'm rugged and manly,\" he winked at her.\n\n\"Yeah, Matt doesn't like being called cute either, for some reason,\" she laughed again.\n\n\"I can't work out whether to take you two seriously or not, but if it means beating my brother, I'm in,\" Logan said. \"I'll take the first ten on the easy and moderate lists, and I will fit in with the bride-to-be's schedule for the group challenges. It's not like I have a life anyway at the moment.\"\n\n\"Yeah, I'm in too. If there is even a chance to win and beat the regulars who are always at the top of the heap, I'll adjust my schedule to fit it in,\" Tate said. \"I'll take the second ten in easy and moderate.\"\n\n\"Okay, Cat will take the next ten and me the fourth lot. Whoever finishes first moves on to the other things, we'll meet here before lunch tomorrow and Cat can confirm her availability in her schedule for the group challenges. Sound fair?\" he asked. \"Great. Because I am sure my fianc\u00e9 is wondering what I am up to by now, so I better go find her.\" He grinned and left the bar.\n\n\"I'm going to start on my list. Here's my number, text me so I have yours. If I can pick up anything extra for your lists this afternoon I'll let you know,\" Logan said, scrawling his number on a coaster.\n\n\"Thanks, Logan. I'm sorry you got stuck with the newbies, but, if nothing else, we're going to have fun on this team,\" she grinned at him and found he gave a small smile back, which was at least progress.\n\n\"I might do that too,\" Tate said. \"Talking to Kalum is pretty motivational,\" she laughed.\n\n\"Yeah, he's a cutie,\" Cat laughed with her. \"I'm going to go and look at my schedule for the week. Some of those team challenges we will have to book in for, and it'll be better if all four of us can do them.\"\n\n*****\n\n\"Hey there, beautiful,\" Ricco said walking into her art studio. \"We wondered where you disappeared to.\"\n\n\"Hey,\" she tilted her face up as he bent to kiss her. \"Where's Matt?\" she asked, looking around him.\n\n\"Talking to Papa, he wanted me to come and make sure you were okay and get you to come down early for dinner,\" Ricco said.\n\n\"I'm fine. I just wish he wasn't so busy, you know?\" she asked.\n\n\"I know, but what he's doing is important, or else he'd be with you. Trust me, with you is where he wants to be, twenty-four seven,\" Ricco chuckled. \"Why don't you wear something amazing to dinner, and make sure nothing else important comes up to distract him.\"\n\n\"I don't want to stop him if what he's doing is important,\" she said softly. \"I just still miss him, even though he's here.\"\n\n\"We have to eat, so let's get dressed for dinner and then I will make sure he spends the rest of the night with us,\" Ricco smiled, gently pulling her to her feet. \"He did ask me to come and find you and bring you down early, I'm pretty sure he feels the same way.\"\n\n\"I'm sorry,\" Cat said, accepting a soft kiss from him. \"It's been an odd day.\"\n\n\"There's a lot of family to get used to, huh?\" he said as he guided her from the room. \"Tell me about the hunt and what I can do to help,\" he suggested.\n\n\"Would that be cheating?\" she asked.\n\n\"I expect most people with husbands or wives are talking about the hunt requirements. Why would it be cheating?\" he asked.\n\n\"Maybe you could make some suggestions about the impossible ones, because I have no idea what even half of them mean,\" she laughed. \"And there's one in there that I'm not sure Matteo is going to be thrilled about.\"\n\n\"Oh, what's that?\" Ricco asked curiously.\n\n\"The bride's garter,\" she said.\n\n\"That's easily fixed,\" he shrugged. \"Just buy a hundred and give one to every team. They will still be yours, but not necessarily the one you wear on the day. The impossible ones are more about thinking your way through the challenge or task rather than the item itself,\" he shrugged.\n\n\"That's a great idea,\" she grinned. \"Although it means more points for my team if we just say no to everyone else. Kalum is super competitive. Did you know?\"\n\n\"No, but it doesn't surprise me,\" Ricco laughed. \"Who else is on your team?\"\n\n\"Two of your cousins,\" she said without naming them.\n\n\"You do realise how many cousins I have, right? You might have to be a bit more specific than that,\" he chuckled as she held up several dresses, and he shook his head at them.\n\n\"It's just that...\" she sighed and launched into the reasons they were keeping their team a bit secret and Kalum's plan for family domination. \"They all went out and started this afternoon, except me, so I am going to have to go out hunting for my share of the easy stuff in the morning.\"\n\n\"I see, but it won't matter if Matt and I know who's on your team, it's not like we are in the hunt this year, and we might be able to help,\" Ricco said patiently. \"One of us can take you hunting in the morning, or do some of it for you, if you want. Trust me, the other teams will have friends and family helping them out. Which cousins did you get stuck with?\"\n\n\"Tate and Logan,\" she said, holding up the blue dress she had worn on her first official date with Matteo.\n\n\"That's the one,\" he agreed, approving the dress. \"Tate's cool, Logan can be moody, but he got a tough gig having to be Sebastian's brother.\"\n\n\"Yeah, he seems pretty keen to believe we can beat him,\" she laughed. \"Kalum won him over with his win or die speech, second is just the first loser and all that. They are pretty determined now to win this thing, so I have been trying to find time in my schedule to fit in as many of the group challenges as possible.\"\n\n\"Delegate, my love. Delegate everything you absolutely don't have to do yourself and you'll find the time magically appears. Other than that, ask. Matt and I are pretty good at organisation and can probably pull some strings for you,\" Ricco said confidently. He pulled her into his lap and smiled.\n\n\"What nobody realises yet is that once they announce the table, Kalum, Sebastian and a whole host of others are going to get extremely busy, including Matt and me. So it will be up to you next week to lead the team, just like Kalum is leading it this week while you're so busy. That's why you play as one person,\" Ricco explained to Cat, and the lightbulb went off in her brain. \"There won't be any honeymoon for a while.\"\n\n\"Oh God, I still haven't applied for a passport!\" Cat sagged. \"I've just had so much to do, and...\"\n\n\"That is something I can help with,\" he chuckled. \"Leave that one to me, I'll get all the application forms and paperwork done for you to sign and we can send it off. Why don't you finish getting dressed while I look over this impossible list? You have to know with both Lucca and Sebastian competing this year it's going to be next to impossible to win.\"\n\n\"But I'm just a sweet helpless newbie. People will help me solve the impossible clues, won't they?\" she batted her eyelashes at him and giggled.\n\n\"Now that could be cheating,\" he laughed. \"It could also be your best asset.\"\n\nThey went back down to the grand ballroom where the opening night dinner was being held before the official events started the next day. As soon as he saw her, Matteo swept her up into his arms and kissed her.\n\n\"God, I missed you,\" he murmured and kept his arm around her waist.\n\n\"Catriona, may I have a word, please?\" Roberto asked, pulling her attention away from Matteo.\n\n\"Of course,\" she smiled and followed him to a table in the front corner of the room where Stefano and Cosimo sat, with Matteo still holding her hand.\n\n\"We have taken your concerns into account, but with the ebb and flow of family the teams will need to be posted, we've had several withdrawals already. We will, however, post them without their numbers, which seems to be the biggest issue, according to Tate and Logan, who have no desire to leave your team, even when given the option. Your concern about being accused of an unfair playing field has also been taken into account. You are correct in your assessment, and your team has agreed that you and Kalum should play as separate entities. With the number of last-minute withdrawals that have taken place this afternoon, we have decided to reduce the number of teams and make them teams of four,\" he gave all of this information as if reading from the rule book in a strict not-to-be-negotiated way.\n\n\"This will be announced during the dinner before the reveal of teams. No further manoeuvring will be tolerated!\" Stefano said, obviously angry about the withdrawals and changes made to his plans.\n\n\"Just so you know,\" Cosimo cut in over Stefano. \"To this point there have been twelve volunteers to join your team and help you with your first hunt.\" Cat's eyes widened, and Cosimo chuckled, \"Both Tate and Logan assure me, however, that they would be unhappy to switch teams and will not be withdrawing from the hunt.\"\n\n\"Kalum was quite motivational in our first team meeting,\" she laughed lightly. \"If nothing else our team will be having a great deal of fun!\" Cat smiled widely. \"There is one thing though,\" she turned her attention to Stefano. \"You realise that Matt mightn't be very happy that everyone will be asking me about and, I guess, wanting to see my underwear on my wedding day,\" she giggled.\n\n\"Wait! What?\" Matteo frowned at his father.\n\n\"The wedding garter only,\" Stefano smirked. \"The one grooms usually throw to the bachelors at the wedding.\"\n\n\"Seriously, Papa! Like we don't have enough to contend with, now we will have people sneaking into the penthouse to raid her wedding lingerie?\" Matteo shook his head.\n\n\"It's an impossible task for a reason, Matteo,\" Roberto chuckled. \"You have security in that penthouse, use it.\"\n\n\"Seriously?\" he asked, again shaking his head and making Cat laugh.\n\n\"Thank you for the small change, I appreciate being able to compete fairly,\" she smiled. \"If you'll excuse us just for a moment, my future husband and I have a weeks' worth of canoodling to catch up on,\" she laughed and pulled Matteo's hand as he looked at her with equal parts shock and pleasure.\n\n\"Canoodling,\" he waggled his eyebrows at his fathers' and walked away from the table with her.\n\n\"Matt,\" Sebastian stopped them on their walk from the table to a couch area at the back of the room. \"Got a minute?\"\n\n\"Just one, because I have canoodling to do,\" he said, liking the word Cat had used with his fathers' very much.\n\n\"Hi, Cat,\" Sebastian said. \"Did you enjoy the photo's Ricco took you to see the other night?\"\n\n\"Oh gosh, yes! Aren't they amazing?\" she enthused. \"Ricco's very talented, it must take forever to set up a shot like that.\" Sebastian seemed confused for a moment and turned his attention back to Matt, who was smiling.\n\n\"I thought you preferred paintings to photography?\" Zion said, stepping into the conversation.\n\n\"Usually for portraits, yes. There was something otherworldly about Ricco's photographs though. Truly amazing. Have you seen them?\" she asked Zion. She was dying a little inside and fighting the blush that crept up her face, but having been put on the spot she couldn't back down now.\n\n\"I have, not for a few years though, might be time for a revisit to his retreat,\" Zion smiled.\n\n\"I was thinking the same thing,\" Matteo nodded. \"Ricco's been trying to get Cat and me to meditate properly and become all Zen, like him,\" Matteo chuckled. \"You look like you could use a few relaxation techniques yourself,\" Matt told Sebastian with a chuckle. \"I trust Ricco with Cat, you should too, but thanks for the gentle heads up. Now, if you don't mind, I need to see to a little canoodling before this dinner starts,\" he grinned.\n\n\"Canoodling?\" Sebastian asked.\n\n\"It's my new favourite word,\" Matt grinned and kissed Cat before guiding her away.\n\n\"It's really happening, isn't it?\" Sebastian asked almost to himself.\n\n\"Yeah, I get that feeling too,\" Zion answered. \"Let's go see if Ricco is just as happy with himself.\"\n\nThe dinner was long and full of speeches from the brothers who currently ruled the Vitali family. The hunt teams were listed in groups of four without the team number attached to them. It was acknowledged that the first name listed would be the team captain and responsible for handing in the daily evidence in the correct packaging to reception, where it would be placed in the night vault until the arbitrators dealt with it in the morning. To Cat's delight, Logan was made their team captain. She had the feeling he lived in his older brothers' shadows, and she hoped this was his chance to prove himself. He had started a group message board for them so they could keep each other updated, and was more than happy that Cat had come up with a schedule they could book the team challenges into that week.\n\n\"Showtime,\" Matteo murmured and kissed her. He stood and walked to the small lectern where the speeches had been made. \"If I may address the hunters and huntresses,\" he spoke into the microphone and waited until the murmur of voices had settled. \"It's come to my attention that one item in the impossible list regards a personal item belonging to my fianc\u00e9. Let me warn you all now, nothing that my fianc\u00e9 will be wearing on the day of our wedding is located here. I'm not allowed to know or see her wedding dress, as per tradition. It is my understanding that everything she intends to wear for the wedding is with her dressmakers, who are part of the Battaglia family.\" He smiled as many groans sounded in the room. \"Impossible tasks are placed on the list to be just that, impossible. Knowing now what the task would involve, I expect you all to respect our privacy and not invade our home.\"\n\nCat laughed her way through dessert with Matteo's two youngest brothers as he was dragged away by more family members. No matter where she went during the evening, she found at least one of his brothers was never far away. Eventually, she made it to see Frankie and Anna, her oldest and dearest friends in his family. She was still sitting with them and talking when Matteo found her again.\n\n\"I'm going to steal her away, I'm sorry,\" Matteo said to his Uncle and Aunt.\n\n\"I'm sure we'll have plenty of time to catch up over the next two weeks,\" Anna patted Cat's hand.\n\n\"I'll make sure of it,\" she smiled. \"I'm so glad you don't mind David and Mick sitting with your family at the wedding. The guest list seems so one-sided, and I did know you well before I met any of the other Vitali,\" she smiled.\n\n\"I don't think you'll feel that way on the day. From what I understand, the Donatis' and the Battaglia have claimed you as one of their own and will fill the bride's side of the church,\" Anna laughed.\n\n\"Gosh, really? I hadn't even thought of the sides of the church with so many coming, I just assume it would fill up regardless,\" she laughed.\n\n\"That it will,\" Frankie said with a smile. \"But we like you better than Mattie anyway, so we were always going to sit on your side of the church, right up front with David,\" he winked at Matteo and chuckled.\n\n\"Can't blame you for that,\" Matteo chuckled in return, appreciating his Uncle's attempts to waylay her fears of seeming like the wedding was very one-sided.\n\n\"Go and enjoy your evening, we'll be here tomorrow,\" Anna encouraged and sent them on their way.\n\n\"Okay, let's make a break for it,\" Matteo whispered in her ear and pointed her toward a nearby side door.\n\nIt seemed to Cat as if his brothers were running interference for them, as people went to approach them but were steered into other conversations. Ricco waited for them at the elevator, his smile growing as they approached.\n\n\"Time to go home,\" he said happily.\n\n\"Hell yes!\" Matteo agreed as they stepped into the elevator with Cat between them.\n\n*****\n\nThe red room of pain had been a startling surprise to Cat, as she had taken in every detail, wondering how on earth they had recreated the exact room from the movie, if not the book. Ricco had stepped back slightly and allowed Matteo the space he needed to show her the room and everything he had promised to build for her on the day she had said yes to marrying him in the plane on their way back to Melbourne.\n\nHe'd watched with a true voyeur's intensity as Matteo stripped her of her dress and underwear. Kissing her deeply, Matteo turned her in his arms, pressing against her back and making her focus on Ricco, who continued to watch avidly.\n\n\"I want to see it first hand, not photo's, I want to see the master at work,\" Matteo rumbled in a husky voice close to her ear, and his hands moved around her to play with her breasts.\n\nRicco moved at an unhurried pace. He went to the rack that held specially crafted ropes, some of his from his retreat, as well as newer lengths. He selected several lengths and approached where his brother stood fondling the woman they both loved. This was more than he had expected or even dreamed of for their first night together in their home. He wanted it so badly his cock strained against his pants, and a shiver ran up and down his spine. He could see the anxiety in Cat's eyes, and one corner of his mouth twisted up. Fear was good, it would add to the experience and possibly make her even more receptive.\n\n\"I'd like her blindfolded, so she can concentrate on the sensations rather than us,\" Ricco spoke in a deep, lust filled voice. \"Trust me, you will enjoy it all the more,\" he said to her and stroked his fingers over her face. He watched as Matteo released her and went to get the blindfold.\n\nMatteo stood behind her again, kissing her neck and ear as he slipped the blindfold over her eyes and made sure it was secure. Ricco moved to press up against her front, softly brushing his lips against hers, and was pleased with her breathless whimpering purr.\n\n\"You look so beautiful like this,\" Ricco murmured and stepped back, leaving her arching towards him and then pushing back into Matteo.\n\nCat felt the two men move and adjust her, positioning her where they wanted between kisses, teasing touches and the tantalising feel of skin on skin which made her realise they had also undressed. Her hands were tied by the wrist behind her back, and she felt the familiar feel of the rope restraint was somehow comforting in her dark world. More rope coiled under her breasts and around her back, anchoring her arms in place at her sides, and again more rope coiled above her breasts, not tight enough to cut off circulation, but firm enough that her breasts sat out from the rope as if begging for attention. Each rope was knotted next to her spine. She could feel, what she assumed to be, Matteo's hands playing with her breasts and nipples, making her whimper and purr as Ricco continued to bind her.\n\n\"Remember to breathe,\" Ricco murmured into her ear. She consciously made an effort to regulate her breathing, despite the high sense of arousal she had. The ropes were cinched together by pulling her wrists up and using the long ends of that rope to secure them by pulling both ends over her shoulders and between her breasts, cinching the ropes at the front together as well and tightening its bra like hold on her breasts.\n\n\"Effective,\" Matteo's husky voice sounded in front of her. \"How long can she stay in a bound like this?\" He let his fingers trace over the edges of the rope, enjoying the vision before him even more than he had thought he would.",
        "\"It's called Shinju, or string of pearls, if done correctly she could wear it for hours. There are no circulation issues, and, as you can see, nothing is restricted from us. But before you get carried away, there's more,\" Ricco chuckled, seeing Matteo begin to become more aggressive in his teasing of Cat.\n\nCat could hear them talking and feel both sets of hands travel over her body, teasing the exposed flesh and testing the ropes that held her upper body immobile. She was already sinking into that calm headspace as the blindfold allowed her to block out the sight of the two men and instead concentrate on the sensations of her bondage alone. She almost wished she couldn't hear them talk. She swayed slightly, arching toward each demanding touch and teasing of their fingers. She felt another rope around her waist.\n\nRicco fastened the first rope around her waist at the front and then brought it behind her back and then up between her legs. He made sure that the ropes went between her pussy lips, and, as he showed Matteo how the Sukaranbo or the Cherry would titillate Cat more, he pointed out the two well-placed knots as he secured the ropes.\n\nCat gasped and squirmed at the pressure of two knots, one pressed against her anus and the other caressed her clit. She squirmed and rocked as her whimpers increased in volume. One of the men stroked her hair, and she heard Matteo's murmured chuckle in her ear.\n\n\"If I'd known the rope would make you this responsive I might have got some tuition myself,\" Matteo teased her in his deep husky voice.\n\n\"Well, you can see the result the knots can have. Imagine what she would be like if we left her like this for a few hours.\" Ricco's soft laughter surrounded Cat as she breathed deeply into her darkness.\n\nHe wasn't done and added two more ropes, one to the very top of each thigh with a tail end crossing her ass and attaching to the waist rope. He talked to Matteo about the possibilities of having her wear this part as her \"underwear\" to dinner one night.\n\nThe thought lit a fire in her mind, and she moaned loudly. She felt a mouth on her breasts, fingers caressing them, teasing them as the mouth went from one to the other. She felt her legs go weak with the sheer overwhelming sensation of the rope and the tormenting mouth and fingers, but just as she thought her legs would buckle she felt her position being adjusted and the ropes pulling her as she was bent forward. Instead of falling, the gentle hands cradled her by her breasts, and she knew the ropes had been secured above her to prevent her from falling.\n\nRicco pressed up against her ass and reached forward, gathering her hair together and tying it back with a short rope which he then attached to the shinju harness. He watched intently as Matteo moved forward fisting his cock and pressing it against Cat's panting lips. Ricco ground up against her ass, revelling in the whole scene, and Matteo's seeming acceptance, not only of his presence here on their first night in the penthouse, but his obvious enjoyment of the rope bondage that was such a large part of Ricco's dominant persona. Perhaps he could push his brother's limits in time, he considered.\n\nContent to watch and savour the sound and sight of the two people he loved best in the world, he continued to grind against Cat's ass, knowing it would be making the rope move in excruciating pleasure over Cat's most sensitive parts. He leaned forward as she gurgled and drooled over his brother's cock and murmured hotly in her ear.\n\n\"Cum for us, beautiful. Show us how much you love this!\" Ricco commanded, his voice made gravelly by arousal and desire. He watched as she arched but didn't reach the highs he was used to seeing her reach with him, and he grimaced, moving away.\n\nCat's head spun when she felt him, and his commanding words sank into her brain. Her body responded, but with Matteo moving within her mouth, and trying to concentrate on her breathing and pleasing him, she hadn't quite made it to the climax she wanted. She still felt the smaller waves roll over her in a pleasurable way as her body responded to the command, but she knew he was not happy when he moved away from her.\n\nMatteo watched as Ricco walked to a rack and took some time choosing a soft suede flogger, then stood to watch them for long moments. He locked eyes with his brother and nodded, winding his hands tighter into Cat's hair, making her cry out around his cock as he forced a little more past her gag reflex.\n\nRicco felt his cock jump and his balls tighten watching the act. His impression of his brother's preference had been for a softer, more vanilla style, but his obvious pleasure at the harsher approach was evident in the way he used Cat now. He walked back swishing the flogger through the air and stood behind Cat, moving his arm in a figure eight to colour her ass and thighs around the rope restraints.\n\nPain and heat lanced through Cat. She floated in her headspace and her body began to react automatically to the two men who used her for their pleasure and hers. She could no longer be sure which man was where, as the knots scrapped against her clit and asshole, hands grasped her nipples, squeezing them, and the flogger rained down in such a way that she came hard and loud, her body convulsing in the rope bondage she wore.\n\nMatteo stepped back, catching his breath and smoothing Cat's hair, his cum dribbling from the corner of her mouth, making his cock twitch painfully and remain erect. He moved slightly toward where Ricco stood to caress the hot flesh of her ass.\n\n\"How do you remove the rope between her legs?\" he asked breathlessly.\n\nRicco said nothing, but reached forward, pointing out a single looped knot, then simply flicked his fingers, and the knot fell and dropped the ends of the rope to her front. He reached below her to tug the knotted rope away, pulling it up onto her back. He then stepped forward and thrust his cock into her, making her arch in the ropes and cry out again. He gripped the ropes that held her in the position and began to pound into her hard and fast, seeking his own bliss as his brother watched him. The whole scene was too much, and he didn't hold out very long before withdrawing from her and walking to her head. He breathed deeply as he pushed his cock between her lips.\n\nMatteo had never been more turned than watching Cat like this with Ricco. For all their talking and imagining and building himself up to this moment, nothing would have prepared him for the way he felt now. He had been honest with his friend when he had said that he was good with Ricco and Cat being intimate. Seeing Ricco's desire and pleasure in taking her, and hearing her response and knowing that it included him and wasn't separate from him, gave him an even greater pleasure. He wasn't sure he could explain, even to himself, the arousal he felt right at that moment. He had always believed he could never share his lover's body and affections, but, rather than sharing and diminishing them, this felt like they grew exponentially. He stepped behind Cat and gripped her hips, thrusting into her as he saw Ricco begin to move in and out of her mouth.\n\nCat lost track of time and space as she floated on a cloud of endorphins. There was little to no pain, just a warmth from the fading marks of the flogger and the soft ropes as they held her body in place for the two men who loved and tormented her. Despite the lack of pain, she came over and over again, her body reacting to the sensations and sounds around her. She barely recognised her own cries, and, eventually, she passed out, sinking down into comfortable darkness brought on by hyperventilation and the extreme pleasure she felt.\n\nWhen she woke again, she lay in bed between the two men she loved. Matteo curled around her back as she lay beside Ricco, who slept on his back, his hand resting softly on her thigh. Breathing deeply, she could smell the subtle cream Ricco used on her after he cleaned her and cared for the marks on the body. Both of these men were usually early risers, and she wondered what time it was for them to still be here in this big bed with her.\n\n\"Sleep, beautiful, it's early,\" Ricco murmured without opening his eyes, as if sensing she was awake.\n\n\"Unless you want to wake up now, then I am sure we could find some way to put a smile on your face to start the day,\" Matteo murmured in her ear and kissed her neck.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "scavenger hunt",
        "reunion",
        "brothers",
        "menage-a-trois",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-22"
}