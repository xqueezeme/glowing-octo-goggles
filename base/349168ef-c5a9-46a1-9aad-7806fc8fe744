{
    "title": "A World for the Taking Ch. 03",
    "pages": [
        "\"Holy shit,\" whispered Jean, disbelievingly.\n\n\"Medical kit,\" Mike said, holding out his hand while he stared at the unconscious pilot.\n\n\"You've already got one,\" Tammy said, pointing to the kit lying on the ground next to the survivor.\n\n\"But she's not Human,\" Roy said.\n\n\"Our kits are updated for me,\" Tammy explained. \"So is the infirmary in Waimea.\"\n\n\"Oh,\" said Roy. \"I guess I never thought about it.\"\n\n\"Is she alive, Mike?\" asked Jean.\n\n\"Yeah.\" Mike ran the scanner down the full length of the jZav`Etch and back. \"Bruises, scrapes, some muscular contusions, nothing real bad except oxygen deprivation. Looks like her life support ran out. No. Wait a second. Nasty knock on the head, too. Hard enough to bruise the bone.\"\n\n\"She was wearing a helmet,\" observed Jean. \"How could that be?\"\n\n\"Looks a couple of days old,\" Mike said. \"Maybe she wasn't wearing her helmet at the time.\"\n\n\"What about that other one?\" Roy asked.\n\n\"There's another one?\" Tammy said.\n\nRoy nodded. \"Dead.\"\n\n\"Are you sure?\" asked Jean.\n\n\"No head,\" Mike told her. He was trying to figure out how to open the suit and did not look up to see the grimaces on his sisters' faces. \"Tammy, you've been studying these people. Any idea how to open this suit?\"\n\nShe squatted next to him and ran her eyes over the various fastenings. She disengaged the life support harness easily enough and tossed it aside. This exposed a seam at the waist and she felt along it until her fingers found a narrow clasp. With a jerk she popped it open and the seal separated. Similar clasps were to be found at the wrists, shoulders and ankles. Soon they had the environment suit stripped off the large female and she lay before them in a close fitting pressure suit with slim cables and tubes running over its surface.\n\n\"Why isn't she waking up?\" Jean wondered.\n\n\"I'm working on it,\" Mike growled. He set the medical kit on the jZav`Etch's chest and touched a button. The small device whirred and hissed, injecting medicine through the material. Mike touched another button and the machine sent another injection. The teens waited apprehensively for some change in the pilot.\n\n\"Is it working?\" Roy wondered.\n\n\"Heart beat is getting stronger,\" Mike said, reading from the small screen. \"Her breathing is deeper.\"\n\n\"Why isn't she waking up?\" Jean asked.\n\n\"Because Mike sedated her,\" said Tammy.\n\n\"What? Why?\" the younger girl demanded.\n\n\"Because she is jZav`Etch and probably has never seen a Human before,\" Tammy explained before her brother could. \"Remember when you used to try waking me up by shaking me?\"\n\n\"I only did that twice,\" snorted Jean.\n\n\"Why?\" asked Roy.\n\n\"Because her claws come out before her eyes open,\" said Mike. \"You might want to remember that.\"\n\nIn spite of the seriousness of the situation Tammy's ears lay out the sides of her head and her whiskers drooped in embarrassment. Roy blinked at her and then shrugged.\n\n\"I'll just have to keep it in mind,\" he said nonchalantly and leaned in to give her a peck on the lips. She grasped his broad hand and pressed her lips to his more firmly.\n\n\"Okay you lovebirds,\" said Mike ironically. \"Let's get her on the stretcher. Tammy, once we've got her secured, you two take her down to the animals. Roy and me are going to finish searching the ship. There were three seats and maybe we missed someone.\"\n\n\"Let me help with the search,\" she said, moving to shift the stretcher closer to the pilot.\n\n\"You should go with Jean,\" Roy said.\n\n\"What if the next one is still awake?\" she countered. \"Wouldn't it be better if they saw me, a fellow jZav`Etch, with you? Wouldn't a Human face among strange aliens make you feel better about being rescued?\"\n\n\"She's right, Mike,\" Jean said as they slid the pilot onto the stretcher. \"I can handle this thing. It'll float right over the branches and stuff. And Yoshi is down there with the animals. The two of us can handle one unconscious cat.\"\n\n\"I don't like it,\" grumbled Roy.\n\n\"But Tammy has a point,\" said Mike. He looked like he would rather eat broken glass than let his sister go into the ship with that headless body, but he still agreed she should. \"Have you got a bandana, Tammy?\"\n\nShe pulled one from her coat pocket and tied it over her muzzle.\n\n\"Alright,\" sighed Roy. He fastened the stretcher's safety straps across the pilot's torso and legs then stood up. \"Let me go in first, though.\"\n\nAs soon as Jean had the stretcher rising on its gravitic impulsers* the three of them turned to go into the ship. They found no sign of a third crewmember. The sealed hatch with its warning light would not yield to them and they gave up after several tries to understand its mechanism. As they continued their search they found strong indications the ship had been stripped of anything useful. Lockers stood empty. Several computer panels were completely missing; dangling cable ends strongly suggesting this was not caused by battle damage.\n\n\"I think this is supposed to be an arms cache,\" Tammy said, pointing to an odd rack near the cockpit entrance.\n\n\"What makes you say that?\" asked Roy.\n\n\"See these diagrams? This silhouette looks like the gun Pa gave me,\" she explained. \"I guess this long, narrow one is a rifle of some kind.\"\n\n\"Well, they're all gone now,\" said Mike.\n\n\"Makes me wonder what happened,\" said Roy.\n\n\"Let's get out of here.\" Mike motioned them towards the outer hatch. \"I want to try and call Pa again. And we need to get her somewhere warmer than the forest.\"\n\n\"Think she'll be dangerous?\" asked Tammy.\n\n\"Someone shot the hell out of her ship and killed at least one of her crewmates,\" Roy said. \"And none of us speaks her language.\"\n\n\"Yeah. I guess she might be,\" said Tammy, allowing him to lead her from the downed ship. She felt some reluctance at going, though. Other than the gun belt and her baby clothes, this was the first real concrete evidence of her people. Not really her people, but her heritage. She loved her family. She was pretty sure she loved Roy. But this was a jZav`Etch ship and she was jZav`Etch. It made her more curious than ever to know more about the mysterious people she came from. But there was a living jZav`etch just down the hill and that person might need her help.\n\n\"Hey guys!\" Yoshi's voice came over the pad link, excited and frightened. \"Hurry up! Something is happening up the valley.\"\n\n\"What is it?\" Mike asked, frowning.\n\n\"Not sure,\" the younger boy said. \"There was a fireball and then we heard an explosion.\"\n\n\"There goes another one!\" Jean called, frightened.\n\n\"What kind of fireball?\" demanded Mike.\n\n\"In the air,\" said Yoshi. \"About fifty meters above the trees. Maybe level with the top of the valley ridge on the east side. That second one was a lot farther up towards town.\"\n\n\"Shit!\" hissed Roy.\n\n\"We're on our way,\" Mike said into his pad and rushed Tammy and Roy out into the night.\n\nDown on the path they found Jean and Yoshi crouching next to the stretcher which was now resting on the ground. The jZav`Etch was still unconscious. The young teens had spread a blanket over her for warmth.\n\n\"Where was the fireball?\" Mike asked as soon as they were close enough to talk.\n\n\"About ten klicks up the valley,\" Jean told him. \"On the far side of Dodge Station.\"\n\n\"The other one was way far up near Waimea,\" Yoshi added.\n\n\"Were they ships like this?\" asked Roy.\n\n\"Didn't hear any thunder,\" said Jean.\n\n\"No,\" Yoshi said, shaking his head. \"They were too small.\"\n\n\"What happened to the nearer one?\" asked Mike, getting out his binoculars.\n\n\"All we saw was the flash,\" said Yoshi. \"Couldn't see anything after that. We were kind of blinded, you know? Just spots in our eyes until the second one blew.\"\n\n\"I don't see anything burning,\" Mike said.\n\n\"Could it have been a spinner?\" Tammy asked, worried.\n\nYoshi and Jean exchanged a look as if the idea had occurred to them, but neither spoke.\n\n\"Ma,\" breathed Mike, lowering the binoculars to stare at his sister. \"And Pa.\"\n\n\"They were coming to help us,\" whispered Tammy.\n\n\"No!\" squeaked Jean. Tears started from her eyes and she threw her arms around Yoshi. He pulled her into a tight embrace and let her cry on his shoulder.\n\n\"We don't know yet,\" Roy said, placing his hand on Tammy's shoulder.\n\nMike cleared his throat and nodded. He gulped air and then pushed it slowly out his nose as if trying to calm himself.\n\n\"Right,\" he said finally. \"We don't know what it was. I told Pa I would call as soon as we had something to report. He and Ma are probably still waiting to hear from me. They've probably got Temper and Sandy loaded up in the spinner and are ready to go. The closest place they can land between here and the homestead is Dodge's. And Pa will probably wait until dawn to fly out if he doesn't hear from us.\"\n\n\"Maybe,\" Tammy said halfheartedly. \"You know how stubborn he is. Ma isn't any better.\"\n\n\"They make a good team,\" Mike said firmly. \"Ma and Pa can take care of themselves. We've got a casualty right here and she needs to get somewhere warm. Let's head back to the barn and do what we can for her.\"\n\n\"Mike's right,\" Roy agreed. \"In the morning we might have communications back.\"\n\n\"But shouldn't we go and check out the other crash sites?\" asked Jean, getting a hold of herself. \"At least the nearer one?\"\n\n\"Do you think you can find it?\" Mike asked reasonably.\n\n\"We can try,\" she said and stood.\n\n\"We don't know where it went down, Jean,\" Yoshi said. He stood beside her and put his hand on her arm. \"We only saw it in the air. We weren't even using the binoculars. No coordinates. I don't think we could find it in the dark.\"\n\n\"We could try!\" she insisted and wiped the back of her hand across her eyes.\n\n\"And we could get lost and maybe hurt,\" Mike said firmly. \"Then there would be more people to look for. Without communications more search parties would have to fan out through the woods. Maybe more people would get hurt trying to find us.\"\n\n\"Jean, we need to wait,\" Tammy said in support of her brother. \"That's a lot of territory out there. Better to wait for daylight.\"\n\nJean put her arms around Yoshi again and sobbed for a minute until Mike patted her gently on the back and chivied the two younger teens onto their mounts. He clipped the stretcher's follower beacon to his saddle and led the way down through the trees with the stretcher gliding smoothly above the trail behind him. The rest of the small party followed quietly, each lost in their own thoughts.\n\nBefore they reached the old Dodge Station they saw several other fireballs in the sky, but those were too far away to be sure what they were. There was a bright blue explosion way up the valley, maybe as far north as Waimea, and when Mike looked through the binoculars he discovered the uplink tower on the ridge above town was gone and the forest around it was smoldering.\n\n\"Holy shit,\" murmured Roy when Mike told them what he had seen.\n\n\"What is going on?\" wondered Tammy fearfully.\n\n\"I don't know,\" Mike admitted. \"Let's get going. Maybe we'll figure it by morning.\"\n\n*****\n\n\"Tammy?\"\n\nThe voice was soft and low and at first she thought it was her mother. The scent belonged to her little sister, though and Tammy sighed. She was still bone tired from the long trek of the previous day and the long night spent trying to figure out what to do with the jZav`Etch pilot and what had gone wrong with the communications net. And most of all with worrying about the fireball that might have been her parents' spinner exploding.\n\n\"Are you awake, Tammy?\" whispered Jean.\n\n\"I'm awake,\" Tammy sighed and sat up. \"What time is it?\"\n\n\"A little after ten hundred,\" Jean told her. \"Coffee's ready if you want some.\"\n\nJean had dark bags under bloodshot eyes and her straight black, normally well combed hair was mussed. There was even a little leaf stuck in it.\n\n\"Did you sleep at all?\" asked Tammy, concerned. She plucked the leaf from Jean's hair and flicked it away.\n\n\"Couldn't,\" Jean said, shaking her head. \"Too worried about Ma and Pa.\"\n\n\"I'm worried too,\" Tammy said and placed her hand gently on her sister's cheek. \"We'll find them.\"\n\n\"We will,\" agreed Jean, nodding.\n\n\"How's the pilot?\" the cat girl asked.\n\n\"Med-kit says she's doing fine,\" Jean said and held the kit out to Tammy. \"We reduced the sedative a little and she should wake up soon.\"\n\n\"Alright,\" Tammy said. \"Why don't you try to rest? I'll keep an eye on her.\"\n\n\"Mike and Roy hiked up the hill above the cabin,\" Jean told her. \"Mike wants to see if he can see where the spinner went down. They should be back soon. Yoshi is checking the cabin for anything we might be able to use. I think he just needed to get away for a bit.\"\n\n\"How are the steelies?\"\n\n\"Quiet.\" Jean shrugged. \"I guess they're pretty tired after all the riding and rushing around. I watered them and they've got plenty of fodder.\"\n\n\"And the communications net?\"\n\n\"Still down.\" Jean tapped her pad and showed Tammy the screen. \"Same message.\"\n\n\"Out of service,\" sighed Tammy. \"Three little words. I don't remember the net ever being completely out before.\"\n\n\"Pa told me it went down a couple of times when he first got here,\" said Jean. She shrugged again. \"Maybe it's sun flares.\"\n\n\"We all saw the sparks in the sky, Jean,\" said Tammy. \"Sun flares didn't cause those fireballs last night and they sure as hell didn't knock out the uplink tower. Something serious is going on. We should leave a message here, pack up and ride for home.\"\n\n\"Hello the barn!\" came a shout from outside. \"Anyone here?\"\n\n\"Pa?\" Jean squeaked.\n\nTammy threw off her blanket and sprang down from the loft. Her sister dropped down the ladder and followed her to the open door. At the edge of the clearing surrounding the station they spotted their father and mother riding double astride his big stud, Temper. With cries of relief and joy the two girls ran to greet them.\n\n\"Oh thank God!\" cried Deborah. She leapt from the steelie's back and embraced her daughters. Bob dropped down and threw his arms around all three of them. After several long seconds they let go and stood back.\n\n\"We were so scared!\" Jean cried and dove back in, wrapping her arms around her father's barrel chest. \"I saw an explosion! We thought you were dead.\"\n\n\"Pa!\" called Mike, storming down the hill behind the cabin. \"Ma!\"\n\nRoy appeared on the trail, jogging behind Mike. A second later Yoshi came out of the front door of the ruined cabin and grinned with obvious relief.\n\n\"Mike!\" cried Deborah and pulled him into a hug. Seeing the other boys she kissed her son's cheek and moved to embrace Roy and then Yoshi. \"Thank God you are all safe. Nobody is hurt?\"\n\n\"We're all okay, Ma,\" said Tammy, hugging her father and then her brother, actually lifting him from the ground out of sheer joy.\n\n\"What happened, Mr. Mackey?\" asked Roy.\n\n\"We saw fireballs over the valley last night,\" Yoshi said.\n\n\"One of them was us,\" Bob said seriously. He kept a protective arm over Jean's shoulders but extended his beefy hand to shake with each of the boys' in turn. \"Some kind of energy weapon hit the spinner's engine. Fuel cell exploded and we had to auto rotate in.\"\n\n\"Jean, you look awful,\" Deborah said, deeply concerned. \"Are you sure you're okay?\"\n\n\"I am now, Mama,\" the girl said, hugging Deborah again. \"I am now.\"\n\n\"Are you two okay, Pa?\" Mike asked, looking his parents up and down. They were smudged with dirt and there was dry blood on his father's sleeve.\n\n\"We made it out with a few bumps and bruises,\" Bob said. \"Temper did too, but I had to put Sandy down. Three broken legs, poor girl. She was a good steelie, but I couldn't help her.\"\n\n\"Not Sandy!\" Tammy cried.\n\n\"It's alright, baby,\" Deborah said sadly. She put her hands on Tammy's cheeks and kissed her gently. \"She went quietly. She isn't in pain now.\"\n\n\"You said some kind of energy weapon shot you down?\" asked Yoshi, wide eyed.\n\n\"Never saw it coming,\" Bob said with a serious nod. \"We were on our way here. When we didn't hear back from you and then the net went down, we thought it was the only way to be sure.\"\n\n\"From what we gathered off the few transmissions we picked up this morning there were other aircraft shot down last night, too,\" said Deborah. \"All we're getting now is empty air.\"\n\n\"Others?\" Jean whispered fearfully.\n\n\"All the way up the valley to Waimea,\" said Bob. \"Between me calling in the rescue team and that emergency broadcast you sent out with the coordinates for the crash site we must have roused a lot of folks.\"\n\n\"Oh crap,\" Mike breathed. His tired eyes dropped and his expression looked sick.\n\n\"It is not your fault, Mike,\" his mother said with emphasis.\n\n\"Sending out those coordinates was the right thing to do,\" said his father. \"It's what we're supposed to do when we find a downed ship.\"\n\n\"We didn't shoot the spinners down,\" Deborah told her son. \"And there was no way for us to know anyone was going to shoot them down.\"\n\n\"Chin up, son,\" said Bob. \"You did the right thing. Now, have you got some coffee? We've been riding all night to get here.\" \n\n\"I made a fresh pot,\" said Jean. \"And I don't think you're going to believe what we found at the crash site.\"\n\n\"A survivor?\" Deborah asked.\n\n\"You go on, babe. I need to take care of Temper,\" Bob said and turned to gather in the big stud's reins. \"We've got a carry pack with most of the gear we were able to salvage, too. Down the slope.\"\n\n\"We can take care of that, sir,\" Roy said.\n\n\"I'll take Temper, Mr. Mackey,\" said Yoshi, stepping forward to take the reins from Bob. \"He knows me.\"\n\n\"Ought to,\" snort Bob. \"You've cleaned his stall enough times.\"\n\n\"Yes sir,\" laughed Yoshi.\n\n\"Is that a Burke 440?\" Bob asked, pointing to the pistol on Yoshi's belt.\n\n\"My father bought it for me,\" the boy said and pulled the weapon from its holster. He offered it to Bob, butt first.\n\nBob took the weapon and examined it appreciatively.\n\n\"Damned good piece of hardware, son,\" he said. \"This the one from Dunkin's store?\"\n\n\"It is, sir,\" Yoshi confirmed. \"You can squeeze off a couple rounds if you want.\"\n\n\"No. I better not,\" said Bob, handing the pistol back. \"I appreciate the offer, Yoshi, but we've got people shooting at us and we'll probably need all the ammo we have.\"\n\nWhile the boys attended to Temper and the carry pack, the Mackey family went into the barn. Bob and Deborah both drew up short upon seeing the pilot on her stretcher.\n\n\"I'll be damned,\" whispered Bob.\n\n\"Good Lord above,\" said Deborah.\n\n\"We reduced her sedatives this morning,\" Jean told them, picking up the med-kit. \"She should be waking up soon.\"\n\n\"You think her people shot at you?\" Tammy asked.\n\n\"Could be,\" her father said. \"We don't know anything for sure, though.\"\n\n\"Would the jZav`Etch attack us?\" Deborah asked, sounding doubtful. \"That doesn't make any sense. They aren't at war with the CP. Besides, we're outside of CP territory.\"\n\n\"And the jZav`Etch aren't anywhere near us,\" Bob said, nodding.\n\n\"It gets weirder, Pa,\" said Mike. \"Her ship is small. Not even as big as one of the supply shuttles. Bigger than a passenger shuttle, though. About the size of one of those pleasure yachts in the magazines. And it was stripped by someone.\"\n\n\"What do you mean stripped?\" Deborah asked.\n\n\"Computer components are missing,\" said Mike.\n\n\"And the small arms locker was empty,\" Tammy said.\n\n\"Small arms?\" asked Bob. \"Are you sure?\"\n\n\"There were diagrams of the weapons on the rack,\" said Mike. \"There were three seats in the cockpit, but she was the only living jZav`Etch aboard. There was another one missing its head. That was it. No sign of a third.\"\n\n\"Missing its head?\" Deborah said softly. She sipped her coffee and stared at the unconscious survivor.\n\n\"Any sign of the head?\" asked Bob.\n\n\"None, Pa,\" Mike told him.\n\n\"This gets more bizarre by the second,\" Bob said. He squatted down on the dirt floor and studied the female jZav`Etch. The look in his eye was hard to read, but it was almost as if he were seeing another figure lying on the stretcher.",
        "\"Bob, could she have been coming for Tammy?\" his wife wondered.\n\n\"Doesn't add up,\" he replied, shaking his head. \"Makes no sense for her to come here like that.\"\n\n\"Pa?\" Tammy broke into his thoughts.\n\n\"Yeah, Fuzzybutt?\" he said, reaching out and putting his arm around her hips, pulling her close without looking away from the figure on the stretcher.\n\n\"What if she was being chased?\" she said.\n\n\"What do you mean?\" he asked.\n\n\"Well, the jZav`Etch Hegemony is made up of a bunch of different cultures the way the Conglomerated Planets is made up of a bunch of different planetary systems. There are at least five subject races in the Hegemony. Five that we know of.\"\n\n\"Right.\" Bob nodded.\n\n\"And the Hegemony forced them to join,\" she said. \"They used their military and took over their worlds. They let the natives run things, but the worlds were forced into the Hegemony.\"\n\n\"The CP does the same thing,\" her sister said.\n\n\"No they don't, Jean,\" Bob corrected. \"The CP considers wars too expensive to fight. They use economics to bring new worlds into the Conglomeration. There are several independent systems within the borders of the CP and there is the Free World Confederacy out on the edge. And the Confederacy is too expensive to overrun. Cheaper to make trade deals with them. Hell, the Confederacy has been petitioning Juniper to join them for years. But go on Tammy. What are you thinking?\"\n\n\"What if one of these cultures doesn't want to be in the Hegemony anymore?\" she said. \"And maybe this woman was sent to do something about that. Does that make sense?\"\n\nEveryone was quiet for a while. Finally Deborah spoke.\n\n\"I don't know,\" she said. \"There's something to that. But it doesn't quite fit.\"\n\n\"Not quite,\" agreed Bob. \"But from what you three are telling us, it does sound like she was being chased.\"\n\n\"It certainly sounds like her ship might not have been her ship to begin with,\" Deborah said. She drank more coffee and narrowed her eyes on the pilot. \"Why would she have a headless body with her? Was it male or female?\"\n\n\"I don't know, Ma,\" Mike admitted. \"We didn't touch it. It was lying on its belly and... Well, I didn't have the stomach to turn it over.\"\n\n\"Was it larger than she is?\" Bob asked.\n\n\"Maybe,\" said Mike. \"Hard to say for sure.\"\n\n\"But it wasn't smaller?\" Debora asked.\n\n\"No,\" he said. \"Not smaller. It was in an environment suit, though, and that might have made it look bigger than it is.\"\n\nSuddenly, everyone's attention was drawn to the figure on the stretcher. Some movement had caught their eyes. As they watched the end of the pilot's tail sticking out from under the blanket twitched and then curled and relaxed. Her breathing became deeper and she let out a sigh. A moment later her eyes fluttered open and she lunged against the restraints. Feeling the straps resist her she began thrashing violently.\n\n\"Calm down!\" Bob said soothingly, moving quickly to her side and placing a gentle hand on her shoulder. \"It's alright. Calm down.\"\n\nThe pilot snarled and tore her hand from under the strap over her abdomen. Claws extended, she tried to grab Bob's throat but he was faster. He snatched her wrist and held it firm. She tried to match his strength and failed.\n\n\"Calm down!\" he insisted. He spoke in the same tone he used when dealing with unruly, green broke stock. \"We are not going to hurt you. Take it easy. You're going to make me spill my coffee.\"\n\nTammy stepped up behind her father and looked down on the pilot, trying to compose her expression into one of friendly intent, but this was an alien and expressions were not universal.\n\nUpon seeing Tammy, the pilot froze. Surprise was evident on her face and her tail lashed uncertainly. Strange words composed of chitters, grunts and mews spilled from her in a sharp interrogative and she went silent as if waiting for Tammy to respond.\n\n\"I don't speak your language,\" Tammy said gently. \"Can you understand us?\"\n\nThe pilot frowned and her tail lashed. She relaxed. Her claws disappeared back into her fingertips. Bob eased his grip and lowered her hand to her side.\n\n\"That's better,\" he said. He handed his coffee cup to Tammy and showed his open hands to the pilot for a second, letting her see that he held nothing in either of them. Very slowly he unbuckled the straps and set her free. Reaching back, he retrieved his cup and took a sip then offered it to the pilot. Uncertainly she sniffed at it. Had the situation not been so tense, her reaction would have been hilarious. Her whiskers vibrated and her eyes went wide in astonishment. She took the cup carefully and brought it to her nose, inhaling deeply. Bob smiled and nodded encouragement and the pilot sipped. Again her expression spoke louder than words. Her ears snapped forward and she sat up, gulping the hot liquid thirstily. When the cup was empty she held it out and nodded.\n\n\"More?\" Bob asked. He turned to his son. \"Another cup for the lady, Mike. Tammy, go get some of your rations. She's probably hungry.\"\n\nHalf an hour and four cups of coffee later the pilot was still eating one sausage after another. Now that they had gotten a good look at her it seemed as if she might not have been eating very well for quite a while. She had attempted speaking to Tammy a couple of times. When Tammy did not respond in kind, the pilot went silent. Furtive glances and the lashing of her tail suggested she was uncertain of her position in the small group. She watched Bob and Mike warily and when Roy and Yoshi came in with Temper she watched them just as warily. Her eyes widened and her ears turned sharply forward when she observed Tammy and Roy holding hands and whispering to each other. Her attention remained on Roy for some time after that.\n\n\"What are we going to do?\" Bob asked Deborah in low tones.\n\n\"We have to figure out some way to communicate with her,\" she said. \"She knows what's going on and we need to know.\"\n\n\"Well, we can't start by telling her what a cup is called the way we did with Tammy,\" he grumbled.\n\nDeborah smiled at the memory of teaching their daughter the English words for common objects. Tammy had spoken some of the jZav`Etch language when she had first come to them, but that was many years ago and she had not used any of them since before Jean learned to walk. Suddenly, she had an idea.\n\n\"Mike, you used your binoculars to track the ship in, didn't you?\" she asked.\n\n\"Yoshi did,\" he said.\n\n\"Were they recording?\" she asked.\n\n\"Sure,\" he said. \"I transferred the data to my pad so we could find the crash site.\"\n\n\"Bring up the first clear image of her ship on your screen and come over here.\" \n\nDeborah stepped carefully to the pilot's side, holding eye contact until she was squatting next to her. Mike passed his data pad to her and Deborah held it so the jZav`Etch could see the screen. The Pilot looked intently at the image for a couple of long seconds and then her ears flicked. She looked at Debora, nodding slowly. \n\n\"That is your ship,\" Deborah said, indicating the image on the screen and then pointing to the pilot. She advanced the recording until the ship began striking the treetops and froze it. \"You crashed. And this is what happened.\"\n\nThe pilot watched the screen as it jumped second by second through the landing. Finally, when the ship was hidden by a cloud of dust and smoke the pilot closed her eyes and hissed. Her tail lashed the dirt floor and she shook her head.\n\n\"Mike and Roy pulled you out,\" Deborah said, enunciating carefully. She indicated the boys when she spoke their names and pantomimed a pulling motion. \"They brought you here.\"\n\nThe pilot frowned deeply, her whiskers vibrated and she looked at the boys.\n\n\"Mike?\" she said, pointing at the dark haired, brown skinned boy.\n\n\"Mike,\" Deborah confirmed, nodding.\n\nPointing at the red haired, freckled boy, the pilot said, \"Rddoy?\"\n\nDeborah nodded, forcing herself not to smirk at the mispronunciation.\n\nThe pilot flicked her ears and pointed at herself. \"F`reet `du Hom.\"\n\n\"Ferret Doom?\" said Bob experimentally.\n\n\"Honey, your language skills are hopeless,\" his wife whispered.\n\nThe look on the pilot's face seemed to indicate she agreed with Deborah.\n\n\"Furreet Du Hom?\" Deborah asked, trying to enunciate clearly.\n\nThe pilot shook her head and repeated her name.\n\nDeborah tried a few more times until the pilot nodded.\n\n\"I don't know if I can pronounce that,\" said Bob.\n\n\"You're all going to have to try,\" said Deborah.\n\n\"I can.\" Tammy stepped closer to the stretcher and squatted down. She pointed at the pilot and said, \"F`reet `du Hom.\"\n\nThe pilot made several sounds, nodding emphatically. \n\n\"I am Tammy,\" said Tammy, indicating herself with her two right thumbs tapping her chest. \"Tammy.\"\n\n\"T` Emmi?\" asked the pilot.\n\n\"That's it!\" Bob said, surprised and excited. \"That's what your mother was saying! I couldn't say it so Dan and me started calling you Tammy!\"\n\nUnexpected tears welled in Tammy's eyes until they overflowed. She had no memory of her birth mother. She could not remember ever having heard her real name. And to hear it pronounced by one of her own kind overwhelmed her. She buried her face in her hands and wept. Deborah reached out and enfolded her daughter in a warm, comforting embrace.\n\nFor her part, F`reet `du Hom looked bewildered. Her gaze snapped from one Human to the next in rapid succession until it landed back on Tammy and Deborah. She said something in a tone that was gentle and inquisitive. When Tammy did not respond she reached out a hand and brushed the fur between the girl's ears, stroking it softly until Tammy got herself in hand once more.\n\n\"Okay, baby,\" Deborah said gently. \"I need to keep going. Are you alright?\"\n\n\"I'm fine, Mama,\" Tammy sniffled, nodding. She rose and went to Roy. He hugged her and stroked her back.\n\nDeborah took out her own data pad and sorted through images until she found one of the spinner. It was taken years ago when Bob had first brought it home. Big and ugly, built strictly for utilitarian purposes, there was no mistaking it for anything but a farm vehicle. She showed the image to the pilot. F`reet `du Hom examined the image and looked questioningly at Deborah.\n\n\"This was ours,\" Deborah said, gesturing back and forth between herself and Bob. \"An aircraft. It was shot down last night.\"\n\nF`reet `du Hom frowned and shook her head.\n\nDeborah sighed in frustration.\n\n\"Let me try,\" said Bob. He reached out and took the pad from his wife. With a few clicks he transformed the two dimensional image into a hologram that floated half a meter above the pad. He pointed at it and said with emphasis, \"Spinner.\"\n\nF`reet `du Hom frowned and considered the hologram. Finally she nodded as if indicating Bob should go on.\n\nBob set the pad on the floor and rose. From his holster he drew his pistol. The jZav`Etch immediately became warry and drew back as if she would spring away. Bob held the weapon pointed away from her and made a calming gesture. He ejected the magazine and cleared the chamber. He looked F`reet `du Hom in the eyes to be sure he had her attention and then pointed the gun at the hologram. Sure she was still paying attention he pulled the trigger and said, \"Bang!\", then used his toe to flip the pad over, causing the holographic spinner to dive into the dirt and disappear.\n\nWith a flash of comprehension F`reet `du Hom shook her head violently. She pointed at herself then at the pad and shook her head as if protesting her innocence.\n\n\"Not you,\" Bob said, squatting down so that he would not tower over her. He smiled and shook his head. \"Not you. We know.\"\n\nF`reet `du Hom responded to his calm tone and leaned forward to flip the pad, screen up. The hologram reappeared and she made a gesture that seemed to indicate she wanted to understand.\n\n\"Up there,\" Bob said, pointing out of the barn door at the sky. He held the gun and pretended to shoot the dirt then pointed out at the sky again.\n\nUnderstanding spread across the pilot's face and she pointed to the sky and the gun and then at the image of her crashed ship on the other pad.\n\n\"That's right!\" Bob said, pleased she was beginning to understand. \"Who?\"\n\n\"Dusig!\" F`reet `du Hom said emphatically. \"Dusig.\"\n\n\"Tammy, ever heard the word Dusig?\" Bob asked.\n\n\"That's one of the subject races of the Hegemony, Pa,\" the girl said. \"That's about as much as anyone knows.\"\n\n\"Sounds like Tammy was more right than we thought,\" said Mike.\n\n\"Sounds like,\" agreed Bob.\n\n\"How does that help?\" asked Yoshi.\n\n\"Don't know yet,\" Deborah said. \"We could spend a week asking questions and get nowhere.\"\n\n\"We aren't going to spend a week,\" said Bob, rising. He slid the magazine back into his pistol before slipping the weapon into its holster and considered the situation. Finally he turned to his adopted daughter and asked, \"Tammy, have you got some clothes that would fit this lady?\"\n\n\"Sure, Pa,\" she said. \"All my jeans are dirty, but I have a couple of clean shirts.\"\n\n\"Take her up in the loft and let her get dressed,\" he told her. \"Make sure she has a warm shirt. I want her to come along. She might not speak our language, but she knows who shot us down. I have a feeling we are going to need her for a while.\"\n\n*****\n\n*gravitic impulsers - Impulse motor (Impulser) - This is the common layman's term for an antenna designed to focus waves of artificially generated gravity to levitate loads above the surface of a planet or counter the effect of artificial gravity on spacecraft and space stations."
    ],
    "authorname": "RipperFish",
    "tags": [
        "adventure",
        "alien",
        "cat",
        "forest",
        "furry",
        "science fiction",
        "survival",
        "future",
        "multi-chapter"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-world-for-the-taking-ch-03"
}