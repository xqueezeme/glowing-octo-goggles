{
    "title": "Ghostly Spirit Seeks Revenge Ch. 02",
    "pages": [
        "This story will be rather confusing if it is read without first reading Chapter 1. \n\n*****\n\nOn the last evening of his life, by seven o'clock, Mick Donley was at a loose end. He'd worked hard that Wednesday, and had laid a maximum number of bricks. The attitude of his boss, David Turton, had bothered him.. No praise, just a cold stare, like he hated his guts. Usually he would admire a well structured wall, or a smart curve of bricks, but lately it had been mostly avoidance. Sod him. Just a bad mood time for him, probably.\n\nHe was fresh out of the bath, and standing totally naked in front of the mirror, he told himself that at thirty three he had kept his body in good condition. And his cock, hanging there loose , even in repose was impressive. Not as big as his mate Vince's, maybe, but whose was? Hadn't he ensured that it had plenty of admirers? Add to that the delight, and for some women, just a little concern when it was roused to its full pulsing erection. Women, attracted initially by his black skin, were soon rendered ecstatic by his hard black rod, and he reckoned he was pretty good at increasing their ecstasy with the power of it. ..\n\nDressed casually now, in jeans and T shirt, he sat in his favourite chair, wondering whether he might go out and find himself a bit of eager pussy. It would have to be just the standard pick-up. Because two nights earlier he had performed his monthly step up in class.\n\nEarning good money with Turton's, he gave himself a treat once a month. He dressed himself in lounge suit, shirt and tie, and wandered nonchalantly into one of the upper grade hotels in the area. Paying their exorbitant prices for drinks hurt just a little but so often it was worth it. What he looked for was a classy looking woman who already had a room in the hotel, and when he caught her interest, (often curiosity about the colour of his skin), he would turn on the false upper class charm. He stopped being a bricklayer and became a business executive, dealing in diamonds..\n\nSaturday night it had worked a treat. He had seen her sitting alone at the other end of the bar. From that distance she looked very promising, with a good, high cheek-boned face, surrounded by loose lioness coloured hair to her shoulder. The slack top she was wearing, hung from what appeared to be very impressive breasts.\n\nIn no time he had stood close, been told there was a seat beside her, and in no time they were in conversation. She possessed the voice of the educated super rich, and she told him she was a fashion model staying in the hotel for one night only. Clearly this was a plum worth picking. He watched her blue eyes widen at the mention of his work in diamonds. She allowed him to buy her a drink, as he noticed the slit in her three quarter skirt, parted to reveal bare knee and thigh. His cock twitched immediately.\n\n.From the course of the conversation she was clearly in the 'curious about black skin' category. He talked her into a twirl on the dance floor, and she was pressed close to him, becoming very aware of his hardening cock, pushing against her. Her eyes looked up at him, but she didn't back away.\n\nAfter the dance, they finished their drinks and she leaned towards him and whispered, \"I've drink up in my room, supplied by my agent. So it's free.\" Her face looked uncertain. \"Only if you want to.\"\n\n\"Is the view good up there?\" he asked, keeping the laugh out of his voice.\n\nBut she took his meaning well, \"Fabulous.\"\n\nUp in her fourth floor room she told him to take off his jacket while she fixed drinks, but he grabbed her hand, saying, \"Drink later. Would you do something about this?\" And he pulled her hand over his semi erect cock. He knew he was taking a risk. She might scream blue murder. But as he released her hand, it remained there, moving over the material of his pants.\n\n\"Oh, yes, that is impressive,\" she gasped. Her eyes were wide and moist looking up at him.\"I've never done it with a black man.\"\n\n\"Have you done it with anybody?\"\n\n\"Oh, yes, quite a few. One of them even discovered something that I didn't think I'd like.\"\n\nHe didn't ask any more questions as he unbuttoned the back of the top she was wearing, and she fumbled at his shirt. He had her down to bra and panties in no time, while she removed his shirt and ran her fingers over his chest. Her bra was next, flimsy and easily shifted to reveal really firm breasts with brown nipples. He bent to kiss them, and she gasped as his hands pushed down her panties.\n\n\"Such black skin,\" she sighed, running her hands and mouth over his shoulders and chest. God, she was good. His erection was now aching against his pants. He unbuckled himself, and pushed everything down. His rigid cock immediately shot up against her, and she gave off an 'Oh' sound, as she reached down for it. \n\nNaked she stepped away from him, and gazed, wide eyed. \"I've never\u2014no, never\u2014seen one so big.\"\n\n\"And so black,\" he said teasingly, as he let his fingers drift down to her bush, and tickle at the edge of her valley. Her fingers moved tentatively along his throbbing cock. \"God, is it getting bigger?\"\n\nHe grinned at her, \"If you treat it kindly,\" he said . \n\n\"Does it like being kissed?\" she asked coyly.\n\n\"Black ones bite.\"\n\nShe laughed, and going down on her knees, ran her lips from head to hilt along it. Her tongue made the journey back to the purple head, and licked all round it. Jesus, she knew her stuff, this one.\n\n\"Is this what the guy taught you that you didn't think you'd like.\"\n\n\"Oh, no, I've been doing this for a long time.\" Such a dulcet tone of voice, and no sooner had she spoken than her lips closed completely around his cock and sucked on it without taking it too deeply.\n\nMick put a hand on her head, really reluctant to stop her, but saying, \"Shouldn't we lie down somewhere?\"\n\nWithout delay she released his erection from her lips, and led him to the tidy bedroom, without ever letting go of his solid cock. She stopped by the side of the bed, and looked back at him provocatively.\"And now?\" she asked.\n\nMick's answer to that was to give her a quick smile, push her onto her back and slide his heaving cock into her already soaking depths. No foreplay this time. He gave her everything, and she took it all eagerly, wildly responding to his every thrust. She came just ahead of him and they hit a real high.\n\nRested, he licked and fingered her warm moist nest. She was avid to return the compliment by drawing his hefty penis deep to the back of her throat, sucking lustily. At that point she made a move that could have spoiled the whole evening.\n\nReleasing his penis from her mouth, she held it in her hand, and looking up at him, said, \"He's nice and lubricated. Would you like to put him where I once thought I wouldn't like it?\"\n\n\"And where's that?\"\n\n\"Up my bottom.\"\n\nUp my bottom? Is that how posh people talked about it? If it hadn't hit him with a stark reminder of times past, he might have laughed. But seven years earlier, performing that very act on a reluctant young woman, he had thought she was bucking him with wild passion when she was actually in her death throes. Since that time he had never been able to do that.\n\n\"I don't do that,\" he said quietly, feeling his erection, still in her hand, lose a little steam at the memory.\n\n\"Why?\" And she sounded disappointed. \n\nHe made up his story. \"Have you ever had one this size up there?\"\n\n\"God, I have to admit-no.\"\n\n\"Too dangerous. Believe me,I know.\"\n\nWith a shrug, she simply said, \"Fair enough.\" And proceeded to take him, semi erect back into her mouth, where she quickly sucked him back to full power, squeezing his scrotum and urging him to flood into her throat. He succumbed to those demands with some gusto, pouring wave after wave down her model's throat.\n\nAs he slid out of her mouth she licked a few remaining drops from the purple head, and murmured, \"Mm, black is best.\"\n\nThey screwed twice more before he left and that was it.\n\nSitting now in his chair, recalling it, he had to admit, that one little blip apart, it had been one of the best one nighters ever .For some strange reason, since that worrying incident seven years ago, his technique with women had improved. And he needed it more often. He found he got a lot more out of it by acting cool, but letting them know what he expected.\n\nHell, thinking about the other night was making him feel horny. It was just turned eight thirty. Maybe he could just go to one of the local clubs he frequented, pick up one of the 'easies' that were always there, and shaft her up against a wall. Better still, get her to give him a blow job, and then come home for an early night. Damned sure he needed it. His cock was rising inside his jeans in anticipation.\n\nIt was at that moment his doorbell rang. Who the hell could that be? He didn't get many visitors. Probably somebody selling something. He went into the hall and opened the front door. What a surprise!\n\n\"Hello, boss, what are you doing here?\" In the back of his mind was the recent bad attitude, but his boss looked a bit grim.\n\n\"I'm sorry to trouble you, Mick. Would you mind if I use your toilet? I was driving by, and just felt so sick. Hope you don't mind?\"\n\nCould be a route back into his good books, was on Mick's mind. \"Sure, nearest one is through the back there.\"\n\nDavid Turton stepped to one side, and drew a young woman alongside. \"Mind if she waits inside? Didn't want to leave her in the car.\"\n\n'Mick was staring wide eyed at the raven haired beauty at his boss's side. Black hair was fashioned to fall over part of her face, and the blue coat she was wearing did nothing to disguise the curves that lay underneath.\n\n\"No, no. Come on in. Just through the back, boss, as I said.\" Mick couldn't take his eyes off this luscious creature. The boss must have some charm. He led her into the front room and indicated the sofa. Mick held his hand in front of him to hide the extra bulge that her appearance had provoked. \n\nShe smiled at him, loosened two buttons on her coat, and said, \"Phew, it's warm in here. Mind if I take my coat off.\"\n\nMick was thinking that he wouldn't mind if she took everything off. But as they coat dropped away he could only think of what a lucky bastard his boss was. Under the coat the woman wore a yellow dress that buttoned down the front, and the top two buttons were unfastened to reveal a tantalizing amount of rounded bosom. Christ, you could even see her nipples pressed against the material.\n\nHe sat down in his chair, but leaned forward. She had crossed her legs, and he could see miles of delectable thigh. Desperate to find his voice he said, \"Have you been with the bo\u2014er\u2014Mr Turton long?\"\n\nShe uncrossed her legs and, just for an instant, he wondered if she was wearing any panties. Just a glimpse, but he wasn't sure. Then she said, \"Oh, I'm not with Mr Turton in that sense. He's just giving me a lift home-from a builder's conference.\"\n\nMick's breath became uneven. She wasn't with the boss. Looking at her sitting there with that peek-a-boo hair style he'd make a bet that Turton would have that dress off her as soon as he got to her place.\n\nShe leaned forward and asked, \"Are you uncomfortable?\" Her eyes were lowered in the direction of his jeans. Could she see his bulge? What he could see was when she leaned forward her dress fell forward and he could see almost both breasts. Was she wearing anything under that damned dress?\n\nAt that moment Turton came back, looking pallid, and very unhappy. \"I'm feeling really rough. I'm sorry, Tina, I'll have to get you a taxi.\"\n\nMick couldn't believe his luck. A chance to jump in. \"Don't do that .boss. I'll give her a lift.\" Wouldn't he just, though?\n\n. \"You sure, Mick?\"\n\n\"That would be very kind of you,\" the woman he'd called Tina said, and she bathed him with the most sensuous of smiles.\n\n\"Thanks for that, Mick. I'll just get away then. Might see you sometime,Tina.\"\n\nWith no further ado, he was gone out of the front door. Mick turned to Tina and almost gawping at her fully exposed thighs, he asked, \"Can I get you anything?\"\n\n\"Can I get you anything?\" she responded, with a wicked glance at his groin.\n\nWow, this one was an in-house special.. What a night this could be.\n\nHe sat opposite her again, \"Could show me what you've got under that dress.\"\n\n\"You could show me what's making that bulge,\" she teased, and as she talked she unfastened another two buttons. The dress gaped. No bra, and both breasts were all but exposed.\n\nFascinated by the sight of her, and her continued unfastening, he quickly unzipped his jeans, pulled them down, and watched her face as his black cock burst out pointing up at her face. This was a trick his mate, Vince had recommended.\n\n\"Had it black like this?\" he asked, feeling so sure of himself now.\n\n\"Not like that,\" she said, parting her dress completely, and confirming that she had been wearing nothing at all underneath. The blonde fuzz of her bush was a surprise. Blonde hair, black bush, yes, but black hair, blonde bush, now that was a something he hadn't experienced.\n\n\"Fancy handling it?\" he asked.\n\nShe appeared to ponder that for a moment, \"You bet I'll handle it-and more. But now, at this moment, I'd like your face-down here.\" And she lay back, spread her legs, and lifted her thighs towards him.\n\nGood things come, good things go, but Mick felt he was having a very good week indeed, as he dropped to his knees in front of her, briefly stroked along the blonde fuzz of her, before he buried his face where she wanted it, and licked solidly along her crevice. Creamy as hell, and already moistening, she was going to be everything he-the roof came down on his head.\n\nSlowly, head thumping painfully, his senses began to return. What was happening? For a while he was just content to lie. Lie? Why was he lying face down across the table? The light was dimmer than he remembered. He tried to sit back. His arms wouldn't move. Consciousness was returning fast. His head hung over one side and he could see his arms spread to be tied to the table legs. It was only a small table and the other side dug painfully into his lower belly as his legs too were pulled down tight and widespread. He struggled but the bindings were tight. Christ, there was even a binding around his waist so that he couldn't move at all.. Panic seized him. \n\nWhat in hell's name? Then he saw her. She stood in front of the sofa where, he recalled now, he'd been mouthing her, and she was still naked, watching him, a disturbing kind of smile on her face, triumphant, threatening. \"Look at me,\" she ordered. \"Look at me very hard.\"\n\nHe had to hold his head back to keep his eyes on her. A steady terror was building inside him. Terror borne of not understanding why this was happening. Terror, with the knowledge that something terrible was going to happen. Something terrible had happened already. He was naked, spread-eagled on his own table. His stomach was churning.\n\n\"Look at me. Look down here, look at the colour of that hair. If the hair on my head was this colour and not black.\" And she flicked her dark hair away from her face. \"Look hard. Imagine.\"\n\nHe did look. The hair, the face-oh, God the face. Seven years stripped away. This couldn't be. It had to be a nightmare. I'll wake up soon. Please, God, let me wake up. But the tautness of his bonds, the ache of holding his head back, the pull on his legs strapped to the table behind him somewhere. All of it, told him, this was no dream. A living nightmare.\n\n\"Get the picture, you bastard?\" The male voice from behind startled him. He forced his head to turn sideways, as another figure moved into his vision.\n\n\"Boss! Thank God you're here, boss. I thought\u2014\"\n\nHis boss ignored him, and said the woman,\" You think you can handle this?\"\n\n\"She wants me to.\"\n\nDavid Turton, his boss, was handing something long and heavy to the naked woman. Tremors shook Mick's body when he saw they were the huge cutters they used on chains or metal bands. \n\nWithout another word the woman walked around to the other side of the table behind him. \"What\u2014are you going to do?\"\n\nHis boss appeared in front of him, a large rag in his hand, and he forced it into Mick's mouth. \"Would love to hear you scream, like she screamed, but can't take risks.\"\n\nAt that moment, Mick felt the touch of cold steel at the base of his scrotum. No, no, not that. Jesus God, not that. The next second came the most agonizing, most excruciating, harrowing pain he had ever known. Pain so searing, that he must have passed out.\n\nHe came to in a haze of shock. He moved his head slightly. His mouth was still blocked with the cloth. \"He's back.\" He heard the woman's voice say. \n\n\"Right, I'll get it from the stove.\" His boss's reply.\n\nMick's senses were all but gone. His lower body, he felt, could take no more, just a sea of pain. He heard their voices to one side.\n\nTurton said, \"You want to handle this?\"\n\n\"I'm not sure if\u2014\"\n\n\"I'll do it-you tell him, before it's too late.\"\n\nMick tried to twist his head, caught a glimpse of Turton, and what was in his hand. His heart froze. His boss was holding a length of steel that was red hot at one end. He tried to cry out, but couldn't. He knew exactly what the intention was, especially when his boss moved behind him and fingers parted the cheeks of his buttocks.\n\nThe woman had come to stand in front of him. That golden bush not far from his face as she said, \"This is what you were giving her as she died. My sister. May you rot in hell.\"\n\nHe tried to appeal to her with his eyes. Suddenly, there was nothing as the searing rod ploughed into his anus and sizzled its way up into his bowel. Shear purgatory for only seconds, then he died.\n\n.......\n\nThey drove back in silence for a while.. Everything was cleared up. The body rolled off the table onto the floor. Nothing left behind to incriminate them. The trophy for Sara was safe in a plastic bag.\n\n\"God, I didn't think I could go through with that.\"\n\nDavid couldn't have agreed more, \"You need a lot of hate to carry out something like that,\" he said quietly.\n\n\"Just having his eyes feasting on my nakedness was bad enough. But then when he touched me, I could have vomited. I'm glad you were quick with the baseball bat.\"\n\nDavid nodded. He was pleased that the first part of the plan had worked so well. He had feigned illness, to get through to the toilet and unlock the backdoor at the same time. His one worry had been that impulse to smash his skull completely, when he saw him with his head between her legs. However, it had worked well.\n\nTina put his arm through his carefully as he drove, \"I was a little shocked at myself at how easy cutting off his -er\u2014equipment was.\"\n\n\"The need for vengeance is a strong emotion.\"\n\nArriving back at the bungalow, Tina carried in the plastic bag.\"I'll just wait for her message.\" she said, \"see what she wants to do with this.\"\n\n\"And how she wants the next one handled.?\" he asked.\n\n\"I know that already,\" Tina said. \"She wants to be involved with this one. So it has to be here, where her power lies.\"\n\nDavid thought about that for a moment, \"That's going to be tricky. The mess and all. She going to do it all.\"\n\n\"Not sure. Her power may be diminishing. Strong when she showed herself to the tramp. Dreamlike when she came to you-fortunately. So I'll need to be on hand, in case she needs me.\"\n\n\"We'll need to work out how it will work anyway.\"\n\nTina was staring straight ahead of her, her brow furrowed, her hand drifting up to touch her black hair. Her head nodded, as though in answer to a question. Another nod, before she turned to David, \"She's pleased it worked so well. Felt the release, she says. Wants his bits kept until we've got the other one.\"\n\nDavid nodded, just a little worried about the final act having to be carried out here in his home, but he knew they'd work something out. They had to, and it would have to be something positive. Already he was aware that, as his employer, he would be facing questions about Mick Donley. When Vince Coulby followed, it would be very tragic, but for the police, just a little too coincidental. However, he was. pretty confident they could deal with that. After all, what did he know about the private lives of his two employees? ",
        ".......\n\nOn the last day of his life, Vince Coulby was just a bit pissed off. Sometimes life really kicks you in the teeth. After weeks of just about ignoring him, his boss would choose this night to ask him to look at a job he wanted doing at his bungalow. The promise of a drink, hardly impinged on his annoyance about the timing. But the extra money for the job was something he couldn't refuse. What he should be doing on this particular night was repeating exactly what he had been doing on the previous evening, and that was having his cock worshipped by a tall, delectable redhead called Lana.. \n\nHell, she hadn't been the first to be overwhelmed by the size he displayed, even when it was flaccid, and it wasn't flaccid for long when there was a willing lady around. Often it would begin to rise just viewing a swaying female buttock out on the street. Such an incorrigible organ, and he was proud of it.\n\nThere was only one other thing that bothered him about the coming evening. He had been dubious when he heard his boss had bought that cottage. Of all the cottages that must be on the market he had to choose that one. Vince hadn't been in it since that evening seven years ago that had gone so wrong. Still, they had got away with that. But he wondered how he would feel when he went back.\n\nThinking about that time brought Mick Donley to mind. He had been horrified to hear what happened to one of his best mates. Police had been to the builder's yard asking questions, but all he had been told was that it had been a particularly brutal murder. Mutilation was mentioned. Christ, who would do something like that? Fortunately, he had a lady who willingly supplied him with his alibi. She had said she would give him a recommendation if he needed it. .\n\nHis boss, David Turton, had mentioned it when he'd approached him that morning. \"Terrible thing that happened to Mick last week. Good mates, weren't you?\" \n\nVince had been a little surprised by the approach, because he'd felt that the boss had been very cool towards him lately, but he went along with it, \"It was another mate killed violently.\"\n\n\"Another mate? Violently, you say. Was he murdered?\"\n\n\"No, smashed his motor bike into a bridge parapet. Just twenty one, he was.\"\n\n\"What was his name?\"\n\n\"We called him Sonny, mainly because he was younger than us. Had knocked around with us since he was eighteen.His real name was Peter Parton\"\n\n\"How long ago was this?\"\n\nVince had to think for just a moment, \"Oh, it'd be about five years.\"\n\nVince had been surprised at the interest the boss had shown in that little story. But was even more surprised when he came up with his offer. \"Listen, Vince, I'd like you to pop over to my place tonight. I fancy an extra, low short wall beyond the patio. We could have a drink and I'll show you what I want. Seven thirty all right?\"\n\nAt that point Vince could only see Lana's thighs parting for him, and he hesitated with his reply.\n\n\"There's ten grand in it for you, but no word to anyone else. Don't want you being seen as favoured. But I know you do good work.\"\n\nTen grand? For what might be just one day's work. Lana could surely wait for one more night. He'd phoned her, and told her he was building up his strength to screw her real good.\n\nNot that their last meeting hadn't been real good. And talk about taking your chances! His job had finished early, and he had gone home, bathed and changed and decided to take a walk around town. No real reason, no real goal, he just had these occasional aimless urges.\n\nParking his car in the multi-storey car park, he decided to have himself a coffee, and a doughnut. It was as he came out of the caf\u00e9 that this tall willowy figure came out of the clothing store next door, juggling with several packages. Her flaming red hair was eye catching enough, but the slender shapely body was not disguised by a short jacket she was wearing.\n\nFrom that point everything worked as though pre-ordained. She dropped a package, he offered to help and she accepted, after casting him an up and down look of approval. Her car was in the multi-storey, she told him, and when they reached it, Vince saw that it was only three cars away from his own. The next major event was the fact that she discovered she had a puncture. Ready to see to that, he found that she hadn't a spare. He offered her a lift, and she accepted, saying that she would phone her garage to see to the car.\n\nBetter and better, she had an apartment by the river. Very up-market, and Vince had thoughts of poor Mick and his boasting about his hotel conquests. He carried her packages up one flight of stairs watching the long legs, and her tick-tock backside right in front of his eyes. That set him twitching inside his pants.\n\nHer apartment was elegantly furnished in feminine fashion, all whites and reds. He said yes to her offer of coffee, even though he'd just had one. All he hoped for was that this would move somewhere. She sat beside him on the sofa, having shed her jacket to reveal a blouse that showed an intriguing cleavage, between generous mounds.\n\nPutting down her coffee she asked if she could give him a thank you kiss. Needing no further urging he leaned into her and their mouths meshed, tongue searching tongue.\n\nIn only seconds she drew away, her head nodded, and she led him to her bedroom, all girlie pink. Too good to be true, but this sort of thing had happened to him before. They stood by the bed, and he watched as she slowly, and provocatively removed her blouse, to reveal a flimsy bra. Vince unbuttoned his shirt and slipped it off. Stepping out of her skirt, she viewed his muscled chest and murmured, \"Mm.\" Before her eyes dropped to the bulge in his pants, and her eyes widened, \"Is that all it seems?\"\n\nVince was playing the strong silent type, as he removed her bra, and slid his hands inside the waistband of her panties, sliding them down, until she wriggled her legs to help them down. And there it was, a genuine fiery burning bush, exactly the colour of her hair.\n\n\"You're really something,\" he made his first statement. \"Now, sit on the bed.\"\n\nShe did as instructed, and looked up at him expectantly.\n\nVince unfastened his pants, and let them drop. The bulge in his boxer shorts had her open-mouthed. Deliberately, having done this before with quite a few women, he stood directly in front of her, and slowly, very slowly he lowered his shorts. He knew she could see his black pubic hair and a distorted bulge, and her mouth gaped in anticipation. At last he reached that point where he knew just one more push would release him. He made the move.\n\nHis monstrous erection sprang up, almost striking under Lana's nose, so that she momentarily leaned back, before reaching out to touch it, almost cautiously, but with definite eagerness.\n\n\"My God, I've never seen, never had one like this.\"\n\n\"Fancy it?\" He was in his element. The whole process had been so fortuitous, and now was the time to enjoy it to the full, as her hands began playing up and down his cock, as though fingering a musical instrument. From his standing position he reached down and stroked her pointing, pink nippled breasts. She sighed, as she leaned only slightly forward to touch her tongue to his purple tip. \n\nWanting more, he laid her backwards as he went with her, giving her mouth greater access to his rigid penis. Her mouth opened to welcome it, as he swiveled round, to bury his face into her fiery fuzz. Sixty nine achieved, he felt her absorb a good length of his cock along her slobbering tongue, as he ploughed his own tongue along her groove to reach the spot where he knew her clit dwelt.\n\nHer hands were working around his scrotum and then pulling at the hilt end of his cock that she hadn't taken. Maybe couldn't take. God, that was good. His own fingers had ploughed deep along her furrow to reach the vaginal lips into which he inserted two fingers.\n\nAt that point she pulled her mouth away from his erection and growled, \"I want to fuck now. I haven't got much time this evening.\"\n\nHe came up out of her, but she held him down for a moment, as she played a different tune on his cock. She sat up over him, and he wallowed in the adoration she favoured upon him. Two hands working over it up and down. \"It really is magnificent,\" she murmured, making it swell greater with pride. \"Now put it in me.\" And she lay back, raised her knees, parted her thighs, pulled him towards her, he , rolled over her, and had her guide his throbbing cock into her soaking grasping portal.\n\nHe drove into her hard, heard her gasp with the power of it, but felt the ridges of her vaginal walls pulling him ever upwards. Back half a stroke, then forward a full stroke, they went like that for some time. He raised himself slightly over her so that each stroke connected with her clit, at the beginning of the glide.\n\nListening to her breathing, while thrusting and sucking on one of her elegant breasts, he began a faster rhythm. Judging she was close to climax, he pumped even faster and harder, listening to her grunts and moans of delight. Faster and faster, harder and harder, and her pelvic thrusts were matching his, as she raised up from the bed to match his ardour.\n\n\"Aah, I'm coming. I'm coming, Eeeeeh\"\n\nAnd she was bouncing ,heaving and biting into his shoulder as he took one double thrust and shot all he had deep into her.\n\n\"Funny noises, you make,\" he said, after recovering his breath.\n\nShe sat up over him, laughing and said, \"Pity we have had to rush this. But we'll see who makes funny noises tomorrow night when I have a real go at your monster.\" And without further ado, she bent and took his deflating cock into her mouth, sucked on it and all the juices there, before releasing him.\n\n\"Tomorrow night, we'll give plenty of time to sharing some real action.\"\n\nAnd that was the promise he had to shelve for a visit to his boss. Still the following night held just as much promise. \n\nAt have past seven on the dot, he turned the car into the lane leading to the bungalow, noticing that the sign said 'Brooksley Cottage', but he had heard that the boss always called it a bungalow. He had a funny feeling inside about being here, and when the boss welcomed him at the front door there was a strange shiver ran through him. His stupid imagination.\n\nDavid Turton led him through to the living room, where one of the first things he saw was the bottle of champagne and two glasses standing on the coffee table.\n\n\"You'll take a drop of champagne?\" Turton asked, already beginning to pour.\n\n\"I'm an ale man, really,\" Vince said, noting the fresh decoration around the place.\n\n\"Oh, so am I. But now and again it's good to spoil yourself.\"\n\nVince took the sparkling glass, said his thanks, and added, \"I see you're getting on well with the decorating. Sam Connor said that's how you were spending your time.\"\n\nTurton nodded, \"Plenty of work. Bring your drink and I'll show you what's been done, and what I want you to do.\"\n\nOut in the hall, his boss indicated the amount of wallpaper that had been needed for that. Then into a smaller bedroom, that had a pale blue paper, and it was all very boring as far as Vince was concerned. He felt like saying, just show me what you want, and let me get the hell out of here. There was an uncomfortable coldness about the place.\n\n\"And just across here is the main bedroom,\" Turton said, his hand already on the doorknob.\n\nI don't really want to go in there, Vince thought. But what could he do? As his boss pushed open the door and went in, he just had to follow. \n\nImmediately, he was struck by an extra chill, as though someone had opened a fridge door and all the air had been sucked into this room He was pleased to see that it hardly looked the same. No rose patterned wallpaper, but the bed was in the same place. And he thought he was going crazy as he thought he heard that scream from all those years ago.\n\nHe felt his boss's eyes on him, and he was feeling strangely woozy. Christ, it was the effect of this place, Even his legs felt wobbly. Get me out of this room. \n\n\"Where's the job you want doing?\" he asked rather hastily.\n\n\"Keen to see it, are you?\" Turton said, with a smile. Then, frowning a little, he asked, \"Are you feeling all right, Vince?\"\n\nWhat could he say? This place gives me the creeps? All he could say was, \"Just a bit rough. Maybe a touch of fresh air, will\u2014\" But, even as he spoke, he stumbled. What the hell was the matter with him?\n\nTurton was leading him through the kitchen to a side door,\" Through here,\" he was saying. \"Best going through the garage.\"\n\nVince was worried now. The few steps needed to follow Turton out to the garage took monumental effort. After just one drink? The drink\u2014what was-?\n\nHe stood on the threshold of the garage, and Turton was standing watching him. A garage with plastic on the floor? But his vision was impaired , the garage was spinning madly. He was falling\u2014he was\u2014Blackness.\n\nSlowly he opened his eyes, unsure of where he was or what had happened.. Lying on his back he was staring up, into the gloom, at a ceiling laced with wooden spars. Where was this? His nose itched, and he tried to scratch it. His hand couldn't move. It was tied. Uncertainty, and a measure of panic swept over him, as he found both arms tied, his legs too. He could only move his head.. \n\nWhat the fuck was happening here? Jesus, he was buck naked. It was plastic sheeting under him, and he was spread-eagled. The garage, he now recalled, his boss was taking him into the garage That is where he was, he realised as his eyes became used to the gloom. He tried to yell and found that his mouth had been taped. Was this some kind of joke?\n\nThen the overhead neon light flashed on, and he was temporarily blinded,. blinking wildly in the glare. If somebody had turned the light on they had to be behind him, out of his line of vision. .\n\nHis eyes adjusting to the light, he turned his head to one side. And his heart leapt in his chest. A stark naked blonde woman was standing there, hands on hips, as though challenging him. In how many situations would this have been a sensuous thrill. for him? The woman was exquisite with firm breasts, flat belly and parted thighs that revealed, through the blonde bush, a hint of delicate labia.\n\nThe face could have been one of extreme beauty but there was something about this face that chilled his soul. Lips slightly parted, eyes of green that he was sure flashed red. Pure hate and venom seemed to be pouring at him from that face.\n\n\"Look at me. Remember me. Remember. Then regret.\" Suddenly she gave out one blood curdling scream, and the voice that came from her lips was deep, like a man's. \"Not many folk around, dearie. Save your breath.\"\n\nThat scream, those words, from Mick, weren't they. He did remember, and knew it couldn't be. She was dead. So this was some kind of game, wasn't it? His brain wouldn't let him accept that. How could anyone know those words?\n\nShe moved forward, and he flinched, not knowing what to expect. Now she placed one foot on either side of his head, and he was looking up into what should have been the blonde furred gates of heaven, yet he feared they could be the gates of Hell.\n\nStill with legs astride, the woman shuffled back wards over his body. Her voice was harsh female again, \"You've had your last look. Now have your last thrill.\"\n\nShe had reached his hips .where his cock lay, long and limp across his thigh. He saw her bend, and he had to raise his head to see her reach out and touch it.\n\nHer eyes, hard as emeralds, looked up at him, as she began to stroke, and lift his flaccid manhood. The strokes were deep and long. It was all surely too fearful for his to respond. But her touch was having an effect. Jesus, that felt good, and maybe this was all some kind of dangerous game.\n\n\"Has a life of its own, doesn't it?\" her voice was deep and hollow sounding.\n\nBreathing deeply he couldn't believe that he was almost fully erect, and a greater shock came when she leaned forward and licked at the purple head, before her lips enveloped his cock completely. This was amazing, he thought, and she was damned good. Frustrating because he longed to touch her tits, or suck into her.\n\nAt that moment, his whole dream shattered as felt her teeth bite hard into his throbbing flesh. His scream of despair was trapped behind his taped mouth. He jerked his body, to no avail.\n\nShe released his erection from her lips, and reaching behind her, she produced large bolt cutting shears. What was she intending? But his brain told him., and terror seized him, as he tried to thrash his body free. His erection hadn't had time to recede from the recent shock, and his next sensation was the feel of cold steel behind his scrotum.\n\n\"Say goodbye to all erections,\" she hissed, and snapped the handles together. Biting, searing, stabbing pain racked his whole body, with its centre in his groin. Prevented from crying out, his whole body heaved, and tears filled his eyes. That pulsing, was it the blood gushing out of him. \n\nThrough a haze of tears, he saw her stand, and she was spattered with blood, his blood. She still held the cutters, and in their jaws were his blood stained, dripping genitalia. \"I have the set now,\" she growled, releasing the cutter jaws over a bench, from which she picked up-God, a black cock and balls. Mick! It was she who'd taken Mick..\n\nPutting that down she picked up two more items, held one behind her back, the other, he could see through his misted agony, was a large bulldog clip, the kind used for gripping many sheets of paper together. She kneeled down beside him. \"A lot of pain, is there? I hope so.\" The green eyes viewed him meanly. \"Now, it's closure time.\"\n\nWith that she stripped the tape from his mouth, and as he released his cries of hate, of pleading of fear,. she opened the bulldog clip, and placed it over his nose. The clip itself was sharp and painful, but it also cut off any breathing through his nose. He opened his mouth to gulp in air, and that was when she produced the second object-a large red dildo. The moment he saw it he knew,. knew without any doubt, the significance of this piece of equipment. \n\nShe moved to push it into his mouth, but he turned his head away, sucked in air, and started moving his head from side to side, to prevent entry..\n\nSuddenly, another pair of hands was clutching at each side of his head. Looking up, in despair, he was suddenly filled with hope. \"Boss, you! Thank\u2014\"\n\nBut even as he spoke the woman had forced the dildo into his open mouth. He tried to stop its progress by biting on it, but he had to breathe. Relentlessly, it was forced in deeply to the back.\n\nPractically the last sound Vince heard was, \"I'm right down into her throat,\" It came from her lips, but it might have been his own voice. The dildo head was indeed way deep into his throat, blocking his air supply. His lungs fought for air. There was none. His body twitched and he felt his eyeballs bulging. He couldn't\u2014breathe\u2014there\u2014\n\n\"My name was Sara.\" Filled his head, and he was gone.\n\n.......\n\nClearing up was messy, and David was glad when the body was all wrapped and bound with parcel tape. Everything had gone well so far. The doctored drink had been ideal. Tina, no, it wasn't Tina, what he had watched and what he had heard from her told him that. She had shown things that Tina couldn't know. Sara's spirit had taken charge of Tina's body. He prayed to God that this could be reversed. So it was Sara who had stood by, still naked, still blood stained, and watching while he completed the clearing up. How could he work like this, knowing without a doubt that he was in the company of a spirit? He'd never in all his life believed in a spirit world. But here he was. \n\nNot Tina, he knew, when she said, \"One more function before I return this to my sister.\" She passed a hand down over her body, turned to the bench, and in each hand, picked up a set of genitals.",
        "\"Would you light them up, please? I can't venture outside.\"\n\nEverything was prepared for this part of Sara's demands. Out on the patio, an old disposable barbecue was already lit. Having no wish to handle the items in question, David held out the large tin containing a quantity of paraffin, and Sara dropped them in.\n\nDavid shook the can around to thoroughly coat the genitals. Out on the patio, with Sara watching from the doorway, and using a pair of tongs, he fished out one piece and placed it on the glowing coals. There was an instant flaring up, and David quickly added the second set. Ironically he thought it was no different than adding a chicken leg to a normal barbecue. Only here, being coated in paraffin, the male genitalia flared furiously for a while.\n\nHe saw Sara standing with arms folded, a satisfied smile on her face, as the smell of burning flesh filled the air.\n\n\"I'll shower. Tina wouldn't appreciate getting her body back in this state.\" Her eyes lingered on David for along moment, before glancing at the crisping genitalia on the glowing hot coals. Then she moved out of sight.\n\nDavid checked the whole garage to ensure nothing had been missed. The dildo had been left in Vince Coulby's mouth, and the cutters were in a bag, and would go into the river, with the body. Later he would ensure there was nothing but ash in the barbecue and that would be scattered from a bag as he took his next walk.\n\nHe went through to the bedroom and was surprised to find Tina stretched out on the bed, still naked, and looking utterly beautiful. But was it Tina?\n\nTentatively, he leaned over her and whispered, \"Tina. Wake up.\"\n\nHer eyes opened instantly, and looked at him with a worried frown. \"Is it all over, David?\" \n\n\"It is. But there's the body to remove.\"\n\n\"She took me completely. Used my body and my mind. What happened?\"\n\n\"I'll tell you while we take this final step. Get dressed.\"\n\nShe held out her arms, \"Hold me, David. Just hold me.\"\n\nIt was no hardship clinging to that wonderful body, and he knew they needed each other desperately.\n\nAs she dressed, Tina looked at him, and said suddenly, \"She's still here. She's staying until the body is gone.\"\n\n\"Then let's do it.\"\n\nThey had it all planned. Carrying Vince's body from the garage to the boot of his own car was difficult. He had been a hefty man, but they managed it. David drove Vince's car, while Tina followed in hers. Through the village and out beyond the town was a spot where the road came as close to the river as it ever did. It was a spot where the river flowed deep, and after recent heavy rain, it was in full flow. \n\nThe whole operation went off just as they'd hoped it would. After they watched the wrapped body float out into the turbulent waters, before sinking out of sight, David flung the bag containing the cutters as far out as he could.\n\nThen they drove a couple of miles away from the river, abandoned Vince's car, and drove back to the cottage. On the way, he outlined what had happened in the garage.\n\nBack home, Tina looked at him, \"I need a shower to wash all of this incident away.\"\n\n\"So do I.\"\n\nAfter a blissful session together under the streaming water of the shower, they lay totally naked on the bed, as he stroked her breasts, and she brought up his erection to full power. Suddenly she sat up, \"We forgot the wine. We need wine tonight. I'll get it.\" And she ran naked from the room.\n\nDavid lay back and closed his eyes. Hoping he could hang on to this erection until she got back. A pair of cool lips brushed over his, a hand brushed around his penis, and, in his head, he heard, \"Thank you, David. Goodbye.\"\n\nHe sat up, startled. At that moment Tina returned with a bottle of wine in one hand and two glasses in the other.\"She's been, hasn't she?\"\n\nDavid nodded uncertainly.\n\n\"She told me she wanted to thank you. And she's gone now. At peace at last. She won't return.\" And David saw the tears on her cheeks.\n\nFor the rest of that night, and beyond, he made it his duty to ensure that no more tears sullied those cheeks."
    ],
    "authorname": "Rex Siter",
    "tags": [
        "steel that was red hot",
        "vengeance her strong emotion",
        "an incorrigible organ",
        "bulge in his pants",
        "took his deflating cock",
        "an uncomfortable coldness",
        "heard that scream"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/ghostly-spirit-seeks-revenge-ch-02"
}