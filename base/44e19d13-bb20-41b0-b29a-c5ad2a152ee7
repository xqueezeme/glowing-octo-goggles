{
    "title": "Nightingale",
    "pages": [
        "Author's Notes:\n\nRising above the station one is born into is not only a measure of financial success but demonstrates a profound strength of character. Overcoming the forces that maintain social stratification can seem insurmountable. Those with the will to succeed, the resilience to persevere, and the intelligence to distinguish genuine opportunities from false promises will reach their goal.\n\n********\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nNightingale\n\n********\n\nChapter 1\n\nRaphael Graves frowned at the graded history test dropped on his desk.\n\n\"Congratulations, Mr. Graves. Another excellent effort,\" Mr. Haley said in his trademark wheeze. Lung cancer had robbed the older man of most of his volume when he spoke. The students knew if they wanted to survive his class, they had to shut up and listen.\n\nThe high school senior glanced up at the teacher, and the man sighed as he knew the look. \"See me after class,\" he muttered as he moved on to hand back the next student's test.\n\nMost would be pleased with ninety-eight percent but Raphael would fight for the remaining points. He rarely gave the teachers any grief, but he'd get every point he was owed.\n\nRaph's eyes panned down the test and found the question where he lost the two points. He reread it, and his answer still seemed accurate. He waited patiently for the teacher to finish handing out the tests and listened to the idiots whine and grumble at their low grades.\n\nFor him, the test hadn't been difficult because he'd made the required effort. History class was just about listening and memorization. He didn't enjoy the course, but he needed to maintain his grade average if he was going to earn the scholarship he was after. So far, he was on track, but he wouldn't let any points slip away if he'd earned them.\n\nIt still mildly annoyed him that Mr. Haley continued to roll the R and use the wrong emphasis on his name, gra-Vess, giving it a Spanish flair his mother's family had no heredity to back. The Graves he was aware of were as white bread as they could get, short of donning white robes with pointy hoods. Not that he'd ever spoken to any of them. Dotty was expelled from the family home and her family's lives when they discovered she was pregnant and who the father was. When he was born, Dotty named him after his father's father in the futile hope it might lure his father back, but none of her family came to welcome newborn Raphael into the world.\n\nTaking a slow, quiet breath and rolling his shoulders to release the tension, he let it all slide, again.\n\nMr. Haley was making his way back to his desk and glanced over as if he felt Raphael's eyes on him the entire way. He looked to the other kids as they were restless to leave, having only a couple of minutes left in the class. The teacher dropped himself in his chair and wearily waved at Raph to approach.\n\nRaph picked up the test and walked up to the teacher's desk, where he placed it on the surface.\n\n\"Where did you lose marks?\" Mr. Haley asked.\n\n\"Question four, but I answered it correctly,\" Raph insisted quietly. The room behind him settled down as they listened. They'd seen this happen before.\n\nThe teacher read his answer once more. \"You explained how the army took the beachhead but not how they held it,\" he responded.\n\nRaph blinked at the teacher, then the frown returned. \"That's not how the question was phrased.\"\n\nIt was the older man's turn to frown, and the room was completely silent now. He shifted in his chair as he was obviously aware of their attention, and Raph could see his neck turning red with his annoyance. It almost looked like he was going to toss the test back and say the grade was final.\n\nRaph watched him reread question four, then read the answer he'd given... and freeze. The man saw it.\n\nSighing, Mr. Haley nodded wearily. \"All right.\" He looked at the other students. \"Question four wasn't expressed as clearly as it should've been, so I'm removing it from the test. Bring whatever I gave you for your answer to that question up to two points. That's your new grade. Hand your tests back to me on your way out, and I'll record the new values. You'll get them back next class.\"\n\n\"Fuck yeah! I passed!\"\n\nMr. Haley scowled at the speaker, and Raph didn't need to turn around to know who it was. Wally Peterson was not one of the stars in this class, or any, for that matter.\n\n\"Mr. Peterson, watch your language in my classroom!\" the history teacher growled.\n\nWally just grinned, nodded to the teacher, and went back to showing off his new, barely passing grade to his friends.\n\nRaph nodded to Mr. Haley and made his way back to his desk. He noticed a couple of people smiling at him, but he didn't acknowledge those smiles. He'd learned the hard way to keep his head down.\n\nBesides, he only had a few months left in this dead-end town. He wasn't going to start making friends now.\n\nThe bell rang, so Raph packed his stuff and headed back to his locker. He had a shift at Beckett's Landscaping and Garden Center, so he had to get going. He stuffed his notes and books for his homework into his backpack and made his way outside and across the busy street to the bus stop. He had to sprint to avoid being run over by a school bus that lurched away from the curb just as he stepped onto the road. This wasn't the first time. The stupid old fucker never looked forward when he pulled out into traffic.\n\nAs he waited at the stop, he noticed he was getting admiring glances from a group of girls waiting for the bus as well. He heard them giggling. He scowled and looked down the street for the bus. He knew some of those girls had boyfriends on the football team. All he needed was for one of them to mention him within earshot of their testosterone-drunk boyfriend, and he'd have to deal with their jealousy. He'd already had to reason with one, explaining he had no interest in a girl he didn't even know the name of. A second boyfriend had just started swinging. Raph hit him once in the gut and patiently waited for him to stop puking before they could have their talk.\n\nRaph was tall, dark, and handsome, which had proven to be more of a curse for him than a benefit. Some in this small town criticized him for his ethnic looks. His Spanish name didn't help either. That wasn't unexpected in a place with an overwhelming majority of white sameness.\n\nWhile his mom Dotty was a looker herself, she told him his beautiful attributes came from his father, who'd been a musician passing through town. Dotty was as fair-skinned as she could be, but his father was of Spanish descent and bestowed his olive skin tone, black wavy hair, dark brown eyes, strong jaw, and sensual mouth to his son. She'd confirmed once that his father had been just a little taller than her five-foot-ten, so Raph had inherited his six-foot height from his parents as well.\n\nUnfortunately, that was all his father had passed along to his son because, after two dates and one night of bliss, the man left the young woman he'd infatuated and impregnated and moved on to the next city, and likely another one-night stand.\n\nDotty liked to tell him he probably had an enormous family out there somewhere, with half-sisters and brothers all across the country. She'd told him stories like that when he was younger, before she lost hope and crawled into a bottle.\n\nHe shook off the dark thoughts and looked up to see the bus approaching. He got in line and boarded, following the girls who continued to undress him with their eyes. He'd gotten used to that and just ignored them.\n\nHis job at the landscaping company was better than a gym membership and cheaper. His body was lean, well-muscled, and hard. He wasn't big, but he was strong. Every job he'd been able to get involved some form of heavy lifting, and he worked hard to keep the jobs. That was getting easier now that he was getting better at controlling his hot temper. The days when he'd lose control of the rage inside were mostly behind him. Mostly. He worked hard at that as well.\n\nHe found a seat at the back of the bus and settled in for the ride. Glancing at his fellow passengers, it was safe enough with this group, so he closed his eyes and got what rest he could. He'd be tired enough after his shift, and he still had homework to complete when he got home.\n\nHis internal clock automatically woke him before his stop, and he exited the bus to walk across the parking lot to the huge garden center. He was early, so his boss wouldn't have an excuse to ride his ass. Jackie Polane, the new owner of Beckett's, wasn't the worst boss he'd had, but he had a bad temper and never failed to take it out on his temp staff.\n\nRaph stuffed his jacket and backpack into his locker, put on his apron, and pocketed his gloves. He signed in and was directed immediately to the warehouse.\n\n\"Raph! It's about fucking time!\" Jackie barked as he entered the vast space.\n\n\"I'm early,\" Raph replied quietly.\n\nJackie's eyebrows went down, and he glanced at his watch. His anger slipped away as quickly as it had flared when he saw Raph was telling the truth. He moved on without apologizing.\n\n\"The morning crew fucked up a shipment of wood chips. They mixed the bags for the entire shipment with the existing stock. I need you to separate it into the proper storage bins. Get it done,\" the manager stated with finality, then turned to leave.\n\nGet it done was Jackie's catchphrase. There was no arguing with it.\n\nRaph just nodded and moved to walk down to where the bags had been stored.\n\nJackie stopped and turned back to face him. \"Hold up a second... listen, I fired Jimmy this morning for pulling this shit again. I kept Fred, but he's been warned it was his last chance. This means I'm short-handed in the stock room. I can juggle some of you part-timers around, but I need you to do some additional shifts. Can you work weekends?\"\n\nRaph looked at the man in surprise. He'd been after the weekend shifts since he started working here. It meant extra hours and more money. \"Yes, sir.\"\n\n\"Seven to five? Both days?\"\n\n\"Yes, sir,\" Raph said with a nod.\n\n\"Good. Fix that shit back there,\" Jackie growled as he turned away.\n\nRaph made his way to the mixed shipment with a small smile on his lips. More money was good. It meant he was that much closer to leaving.\n\nThe bags of wood chips were heavy, damp, and stank, but Raph separated them and restocked them into the proper bins. He was aching pretty badly from straining his muscles by the time he finished. Jackie inspected his work and gave Raph a rare smile. He was given lighter duties until the end of his shift.\n\nThe bus ride home dropped him several blocks from his door. The neighborhood was run down as many of the residents struggled with poverty, drugs, or alcohol addiction. His mom was in the latter two groups. He did what he could to help her rise above it, but her depression was winning.\n\nAs he walked the dark streets, he kept his eyes open for roaming addicts who weren't above a little robbery to pay for their next high.\n\nHe was a known presence in the area, so people left him alone. He'd beaten a few potential thieves to within an inch of their lives. The message was received. He wasn't a target... but that didn't prevent mistakes.\n\nHe let himself in the low-income housing townhouse's front door and saw an unfamiliar jacket on a chair in the kitchen. Then he heard crying. He dropped his stuff on the sofa on his way to the stairs leading to the upstairs bedrooms. He made it to his mother's bedroom door, where he heard her whimpers and a man's voice cursing. The crack of flesh struck violently was easily heard through the closed door.\n\nRaph threw the door open and barged in.\n\nOn the bed, an overweight, naked, white man with thinning hair was slapping Dotty's reddened face as he forced her legs back to her chest so he could shove his small cock in her ass.\n\nRaph reached the bed in three strides, seized the man's ears in a painful grip, and yanked him back, away from his mother. He stood aside as the heavy man crashed to the floor, arms flailing.\n\n\"Getting beaten was never on the table; you fat fuck!\" Raph roared.\n\nHe picked up the man's clothes to toss them at him and felt the jacket's fine material. His rage flared, and it was all he could do to keep himself from beating the man. A wallet fell from the jacket pocket, and he picked it up. He saw the man's eyes go wide with fear as he curled defensively into a fetal position, looking up at him as he loomed above the fallen man with teeth bared.\n\nThe wallet was open, and Raph read the man's name and address aloud. Now he knew where the asshole lived.\n\n\"So, Gene, if you come near her again, I'm going to show up on your doorstep, and everything you did to her, I'm going to do to you. We never want to see you again. Am I making myself understood?\" The man nodded rapidly with terrified eyes. \"Then why the fuck aren't you getting dressed and out of our house?\" he yelled as he tossed the wallet at the man's face.\n\nWhen the chubby man was on his feet and mostly dressed, Raph grabbed his shirt and pulled him close to stare him in the eye. \"Don't forget to pay what you owe her! And throw in money for damages, you fucking prick!\"\n\nThe man dropped all the cash from the wallet on the bureau, then Raph rushed him downstairs, grabbed his coat, and gave him a shove out the front door.\n\n\"Never come back... Gene,\" Raph warned one last time. The man hustled away with a terrified glance over his shoulder.\n\nRaph closed and locked the front door, leaning back against it to let his anger drain away. Dotty didn't need it.\n\nAs he took slow and deep breaths, he looked around the drab little living room, trying to distract himself from the rage boiling just under the surface.\n\nThe home wasn't much, but he kept it clean. It certainly wouldn't appear on the cover of an interior design magazine. He took in the thread-worn carpet under the cheap second or maybe third-hand furnishings, where nothing matched. The only personal touch was some framed art from his childhood adorning the walls. He sighed. He kept it neat and clean, which was the important thing.\n\nDistracted sufficiently, he felt calmer, so he made his way back upstairs. He stopped in the hall when he heard his mom crying quietly. His rage against the man threatened to surge once more, and he struggled to force it down. Once it was safe to do so, he went back into her bedroom and brought her the dressing gown from the back of her door. She was sitting on the edge of the bed, oblivious to her naked state, and he helped her put the robe on. The smell of whiskey on her breath turned his stomach, as did the bruises on her arms and her face, but he forced that down as well.\n\n\"How you doing, mom?\"\n\n\"I'm sorry, baby. I'm so sorry,\" she whispered.\n\n\"It's okay, mom. It's over,\" he said softly as he put his arm over her shoulder. She leaned against his chest, and her tears started once more. He held her trembling body against his as she came apart once again. He just let her cry as it was what she seemed to need right now, and he didn't know what else to do.\n\nShe was fading, so he tilted her chin up and kissed her forehead. \"I got my history test back. I got a perfect score on it.\"\n\nShe smiled proudly at him and hugged him tighter. \"My baby! My baby is going to make something of himself! I'm so proud of you. You're keeping your promise to your old mom. I'm so proud!\" Her voice was fading at the end as he could see the night had taken too much out of her.\n\nRaph gave her one more hug, then stood and scooped her up in his tired arms. He kicked the blankets down, then laid her down on the bed with her head on the pillow. He pulled the blanket up over her and kissed her forehead once more. \"Good night, mom. Sleep well.\"\n\n\"baby...\"\n\nShe was out.\n\nRaph let himself out of her bedroom and closed the door. He made his way back downstairs and grabbed his backpack. Pulling his homework out onto the small kitchen table, he got to work.\n\nAt thirty-four, Dotty was well past her prime for strip club talent, but she was still reasonably slim and had a delicate beauty that drew the eye... when she smiled. What set her apart was how well she danced. She moved with a sensual grace that put the other dancers to shame. Raph had witnessed this talent a few times over his eighteen years when she'd come home drunk and danced to the music in her head while he prepared her a late-night meal. It had been awkward and uncomfortable for him to see, but he couldn't deny she had mesmerizing moves.\n\nDotty drank... heavily. She also took drugs when she could get them. Her job as a stripper earned her a pitiful income as she didn't work every night. He didn't let her use her wages to pay for her habits, so she turned tricks on the side. He couldn't watch her all the time, and she was too deep into her addictions to find her way out. Her pain was deep and overwhelmed her sometimes. He'd been unable to help her with it, though he still tried. She'd long ago stopped trying.\n\nOn one particularly bad night, he'd come home to find a group of three men taking turns raping her. Even though he'd only been eleven at the time, he'd fought them off with the violent use of a kitchen table leg, which broke off during the initial struggle. The men barely managed to flee the house with their lives. In the following week, he'd hunted down and kneecapped two of them with the improvised club. The third man had been warned of the hunt, and he left town. The police had shown up on Dotty's doorstep to ask them questions about what had happened. His mom had given him an alibi, and the cops left after issuing a warning.\n\nDotty made him promise that night to put all his efforts into his grades to make something of himself. She knew he was smart. She just needed him to channel his energy into something positive. She told him she couldn't allow herself to live, seeing him waste his potential. Terrified she'd commit suicide like their neighbor recently had, he'd promised and had thrown himself into his schoolwork with everything he had. The initial years were hard, but he learned how to make it work for him, and he put all other distractions out of his mind. He worked when he could, as he'd need money to get them both out of this cesspool. As well as the part-time jobs he'd taken, he managed his mother's money for her, paid the rent, kept the house clean, and got them fed.\n\nOnce he finished his homework, he went upstairs, unlocked the deadbolt on his bedroom door, and went to bed. The lock had become necessary when Dotty began stealing money and stuff to sell from his room in her desperation for a fix. Once inside, he flipped it closed once more.\n\nHe set his alarm and finally let himself relax. He glanced at the lock once more and frowned. Another reason for it was to keep his mom from stumbling naked into his room during the night, as she'd done in the past. There was only so much he was willing to do to help her. Her addictions messed up her mind, most frequently at night, and now that he was older, she often mistook him for his father. Those were especially painful memories for both of them, just for different reasons.\n\nUnsettled, he flipped over onto his stomach and tried to clear his mind so he could get to sleep. He had another busy day to get through tomorr--he glanced at the clock and sighed.\n\nToday.\n\nChapter 2\n\nSam allowed herself a smile as she looked at her history test. The ninety-five percent would keep her grade average high, and that's all that mattered. She heard some of the other students griping about their grades, especially Wally, and turned to smile at her boyfriend Victor, who was sitting across the aisle from her. He smirked and showed her his eighty-one percent, and she nodded her proud approval. She'd tutored him for the test, and it obviously helped. It helped them both, to be honest.",
        "She felt eyes on her and glanced behind Victor to see Gerry Jackson watching her. JJ, as he was called behind his back, always seemed to be watching her, which made her feel uncomfortable. He knew she was Victor's girlfriend. He really needed to find a girlfriend of his own, she thought.\n\nGerry held up his test as well with a smile. She smiled politely at his seventy-five percent, then looked back to Victor, who had a sneer on his lips as he whispered something to Wally. The big guy sat in front of Victor to block Mr. Haley's view of him.\n\nShe glanced to where Victor was looking and saw Raph Graves talking with Mr. Haley. She'd heard Victor go on about what a loser he was. According to him, Raph's mother was a stripper and a prostitute. He also worked shit jobs after school, so he couldn't join the football or baseball teams, which to Victor was the definition of a loser.\n\nWhen Mr. Haley announced he was giving extra points for question four if they hadn't been earned already, she looked at what she'd received for her answer and grinned as she saw her grade would now increase to ninety-six percent.\n\nVictor was frowning as he'd already gotten the points. Wally was cheering his pass, and JJ was shaking his seventy-seven percent at his big friend.\n\nRaph was returning to his chair, and she quickly let her eyes slide down his body. Even though he didn't join any organized sports, his body was lean and hard. She admired his powerful hands. She caught his eye and smiled, but he just slid his eyes away from hers and sat with his back to her. She was a little surprised by how standoffish he was. Couldn't he spare a smile? What would it have cost him to smile in return? I mean, really?\n\nContrary to her boyfriend's opinion of him, she knew Raph got top grades as she'd spied on his test results in each of the classes they shared. Especially for pre-calculus, where she was desperately struggling. That course was her biggest worry. If she didn't do something quickly, it was going to drag her grade point average down.\n\n\"Hey! Space Cadet! It's time to go!\" Victor teased her as she was lost in thought. He was giving her that look, which told her he thought she was a flake. She frowned, and his expression immediately cleared as he knew she'd caught him.\n\n\"Did you complete your calculus assignment?\" she asserted as she stood with her books clutched to her chest. This prevented JJ from ogling her breasts.\n\nVictor squirmed and shook his head. \"Nah. I'll work on it later.\"\n\n\"It's due tomorrow!\" she exclaimed.\n\n\"I got enough of it done to get a passing grade,\" he said confidently. \"Come on; I'll drive you home.\" He glanced back at JJ and Wally. \"See you later, losers.\"\n\n\"Bite me!\" JJ replied with a grin.\n\n\"Loser? I passed!\" Wally complained.\n\nSam let Victor guide her out into the hall with his arm possessively over her shoulder. They made their way to his locker, then hers. She exchanged her books and gathered her homework, then they went out to the parking lot. Victor's car was a sweet, customized Civic. She knew he and the boys worked on it constantly to get extra performance out of it. All she knew was that it looked good, and they looked good in it. It also beat riding the bus.\n\nVictor had tried to get her into the back seat a few times, but so far, she'd fended him off. She wasn't ready, and he said he'd wait.\n\nShe felt a thrill rush through her as he drove them through the quiet back streets to get her to her house up on the hill. The homes up here were grander than those in the surrounding community and more secluded. They passed Victor's place on their way to the top. He pulled into her driveway, turned off the ignition, and turned to face her.\n\n\"Hey, are you available to go camping with us this weekend? A bunch of us are going,\" he looked at her hopefully, his eyes full of innocence.\n\n\"A bunch? Who?\" she asked with a smile on her lips.\n\n\"Some guys from the team and some ladies from the squad,\" he said, running his fingers through her hair in the way he knew she liked.\n\nShe gently eased his hand out of her hair before the tingles he was giving her made her make a poor decision. \"It's Wednesday; I didn't hear any of my ladies say they were going camping this weekend.\" She was the head cheerleader, after all. The squad did nothing without her say so.\n\nVictor's eyes slid away to some invisible spot on the interior ceiling as he changed his approach. \"Well, if you said you were going, I'm sure a bunch of the others would come along.\"\n\n\"Ahhh, there it is,\" she smirked as his ploy was revealed. No doubt, he and the team would expect to get lucky while inside those tents. \"No. I have to study this weekend. Next week we have midterms! Starting with chemistry! Besides, it's going to be cold this weekend. It isn't summer yet.\"\n\n\"Cold weather camping is the best! You can snuggle in the sleeping bags to stay warm,\" he insisted.\n\nShe grinned at him. \"Right. Snuggle. That's what you have in mind.\"\n\n\"Sure! Snuggle. If that leads to anything else, I'm sure that would be wonderful too. Come on; it'll be fun!\" he pleaded.\n\n\"Not gonna happen,\" she said with a sweet smile. When he pouted, she leaned over and pressed her lips to his. His arms went around her, and the kiss deepened until she pushed back on his chest. She gasped as her head was spinning, and her body was screaming at her to keep going. She knew she had to nip that in the bud as if she gave in to her lust, all her plans would derail. That wouldn't do.\n\n\"Why did you stop? I can tell you wanted more,\" Victor sighed as he looked at the heat in Sam's blue eyes.\n\n\"I want a lot of things, but they have to come in the right order, or they cause a lot of problems. Of course, I want to keep kissing you--AH AH! No.\" She pushed him back. \"You're a great kisser, and I look forward to enjoying more of that, but right now, I have to go inside and get started on my calculus assignment.\"\n\nHe snorted and grinned at her. \"Get started?!? You were scolding me, and you haven't even started?\"\n\nIt was her turn to pout. \"You could always help me with it.\"\n\n\"Sorry, babe. I have to... help my old man with some shit tonight. Off you go! Getter done!\" he teased.\n\nSam eased herself out of his car with a sigh and stood back as he reversed quickly out of the drive and sped away. With another pout, she went inside. She smiled at Maria, their housekeeper, as the woman put on her coat to leave.\n\n\"Did you have a good day, Ms. Harris?\" the older woman asked.\n\nSam couldn't get the woman to use her given name and stopped trying. \"Yes, and you?\"\n\nThe Hispanic woman grinned and nodded, then she glanced dramatically from side to side. \"I believe Mr. Harris is smoking cigars in his study again. I had to clean the smoke from the window glass, and there is a burn mark on the window sill. But you didn't hear it from me.\"\n\nSmiling widely, Sam nodded to the housekeeper and opened the door for her. \"Have a good night.\"\n\nThe woman stopped on the doorstep. \"Oh! Mrs. Harris called to say she would be late at the hospital, and Mr. Harris said he is entertaining out-of-town guests and will also be late.\" She gave Sam a sympathetic look but just got a shrug in return.\n\n\"Good thing, I have all this homework. You wouldn't happen to know anything about calculus, would you?\" Sam asked.\n\nMaria burst into giggles and patted Sam's arm before she turned and walked away. Sam closed and locked the door.\n\nFirst things first. She walked into her father's office, and sure enough, she smelled the stench of a cigar under the cloying scent of air freshener. She walked over to the window sill and there was the small scorch mark from where he set the cigar down. She'd talk to him later after she spoke to mom.\n\nShe made her way upstairs to her room and got her homework out. It sucked that Victor wouldn't even try to help her out with this as she really needed some assistance.\n\nThinking about him, she recalled the kiss in his car, and her nipples stiffened as a tingle started below.\n\nShit. She'd never be able to concentrate on her assignment now. She needed to take care of this first.\n\nShe went to the bathroom and collected the laundry bag. Carrying it down to the laundry room off the kitchen, she loaded the clothes into the washer. She set the machine to heavy-duty cycle and listened to determine if she was, indeed, alone. Nodding to herself, she started the washer.\n\nThe machine hissed as water began to fill the tub, and while she waited, she slowly rubbed her fingers over her tingling nether regions through her jeans. She sighed and closed her eyes. Soon, the machine began its slow roll and thump, so she pressed the corner of the big appliance between her legs.\n\n\"Ohhh yesssss...\" she sighed as the vibrations spread through her tender flesh.\n\nThe machine began to speed up, and the sensations strengthened to keep pace.\n\n\"Mmmm, fuck!\" she moaned and leaned forward a little more to press the hard surface more firmly against her sensitive nub. \"Oooooo--fuck!\"\n\nAs the vibrations brought her closer and closer, she replayed Victor's kiss in her mind and felt her body respond. She pinched a nipple through her top and gasped, wishing it was Victor doing that.\n\nNo! She couldn't talk herself into compromising her plan. Fuck, she was so close!\n\nHis lips on hers. His hands on her body, his tongue, oh FUCK!\n\nThe washer was buzzing along happily, and she rode the corner hard, grinding herself up and down, feeling herself gush in her panties. She closed her eyes again and felt him against her, his hard muscles, his... Hah! Ah!\n\nUnbidden as she crested through her release, her mind flashed an image of a dark-haired man with smooth tanned skin, dark eyes, and a sensual mouth. Those eyes were watching her with an intensity that sent sparks shooting through her limbs. She threw back her head as her mouth dropped open.\n\n\"FFFFUUUUCCCKKKK!!!!\" she wailed as bliss surged through her body.\n\nAs quickly as it popped into her head, the image was gone, and Sam's guilt came crashing down on her. She was Victor's girlfriend and should've been thinking of him! Stupid brain!\n\nShe gasped and panted until her body began to settle down. She realized she was a mess, so she stripped off her jeans and her soaked panties. She wiped herself as best she could with her shirt then threw it all into the washing machine. She wrapped herself in a towel and rushed upstairs on wobbly legs.\n\nA quick and hot shower later, she slipped into her jammies and settled down at her desk. Dragging open her text, she reviewed the questions. It still felt like some strange, indecipherable code. She turned to her computer and began to research how to answer the problem.\n\nHours later, she heard the sound of the front door opening. She glanced at the clock and saw it was almost midnight. She groaned as she wasn't finished the bloody assignment.\n\nShe dragged herself over to her door and pulled on her dressing gown. When she reached the bottom of the stairs, she saw her father, wearing a stupid grin and an oversized Re-elect Mayor Harris button on his coat. He had a handsome face, great hair, and a great smile. Very photogenic and right now, very drunk.\n\n\"Hiii, Bunny! Wutryou doing up this late!\" he slurred.\n\n\"Daddy, why are you so drunk?\" she scolded.\n\n\"Guests! I had company from outa town! They're lookin' to invest in our fair town! They also like to partay!\" he cheered. Seeing his daughter's scowl, he frowned at her. \"Oh, don't be such a stickamud...\" He grimaced at his slur and tried again. \"Stick in the mud. Woo! I am a little pickled. Goin' ta bed.\"\n\nHe gave her forehead a poorly aimed kiss and walked up the stairs to his bedroom.\n\n\"Where's Suzanne!\" he bellowed from upstairs.\n\nSam sighed. \"She's still--\" she stopped when she saw headlights coming up the driveway. \"She's just getting home now.\"\n\nMoments later, a tall, blonde beauty in a tailored jacket and skirt came in the front door. She looked like a mature version of Sam, and her daughter took great comfort in knowing what she had to look forward to when she got older.\n\nEven at forty, Suzanne Harris' beauty shone through. She was five-foot-ten, an inch taller than her daughter. She was fit with sleek curves, the source of Sam's big blue eyes, full lips, and blonde locks, but she tied her long hair back in a braided ponytail, courtesy of Sam each morning.\n\nThe most significant difference between mother and daughter was the air of calm confidence and authority that Suzanne exuded. As a hospital administrator, she managed a group of prima donna surgeons and doctors and kept the hospital functioning at peak efficiency. She likened it to wrangling cats, but she was expert level.\n\n\"Hi, baby. What are you doing up?\" she asked with a gentle smile.\n\nSam could see her mom was tired. \"Just finishing up some homework.\"\n\n\"Well, it's time for bed,\" the mother said in her no-arguments voice.\n\n\"Yes, mom.\" She glanced up the stairs. \"Daddy just got home, and he's pretty drunk. He was also smoking cigars in his office sometime yesterday.\"\n\nSuzanne sighed and hugged her daughter before sending her on her way to bed.\n\nSam entered her bedroom and closed the door. She looked at her homework and sighed wearily. She'd made good progress, but she wasn't sure she had enough completed to get a grade in the nineties. She dragged herself over to her chair and plunked down in it. She needed the points more than a little sleep.\n\nShe was unaware when she eventually fell asleep face down on her notes that she'd forgotten to set her alarm.\n\n-=-\n\nSuzanne watched her daughter head upstairs before she walked into Malcolm's office and smelled the poorly hidden cigar stench. She next went into the kitchen and poured herself a glass of water. Her throat was parched from talking all night, though the meeting had gone very well. They'd be getting the needed funding for the burn ward after all. She'd get that started right away.\n\nDelaying her confrontation with her husband, she went into the laundry room when she saw the light flashing on the washer. She opened the lid and moved the damp clothes to the dryer. Leaning over the machine to get the last items at the bottom, she rested her palm on its corner, and her hand slipped, knocking her against the machine's top. She stood up and scowled at her palm as she felt something slick. She sniffed and picked up an unmistakable scent.\n\nAh! That's why Sam was doing a load of laundry. She washed her hands in the sink and grabbed a paper towel to clean off the machine. She'd talk with the girl tomorrow about cleaning up after herself to be a little more discreet. Not that Malcolm ever found his way into the laundry room, but just the same.\n\nSighing, she finally made her way up the stairs and into the dark master bedroom, closing the door quietly behind her.\n\n\"Hey, beautiful!\" came a slurred voice from the bed. \"Sa-bout time you got here. Come to papa.\"\n\nSuzanne shuddered. She hated it when he was drunk as he became creepy too. \"You're drunk.\"\n\n\"Juss a liddle. Come ta bed, baby. Papa's got somethin' for ya.\"\n\nUgh. That killed the mood for her. \"Go to sleep.\"\n\n\"Aww, don't be like that!\"\n\nSuzanne got undressed and slipped her nighty on before she felt hands grab her ass. She slapped them away. \"Don't!\" she growled.\n\n\"What the hell! Can't a guy appreciate his woman?\" he growled in return.\n\n\"Not when he reeks of whiskey and cigars. Couldn't you at least take a shower and brush your teeth before trying to paw me?\"\n\nIn the dim light of the room, she saw him turn away and head back to bed.\n\n\"Fuck it. I tried. Way to kill the mood,\" he grumbled before dropping face down onto the bed.\n\nShe made her way into the bathroom with shaking hands. She clasped them together to still them, then washed her face and brushed her teeth. Coming back out into the bedroom, she heard the buzz of his drunken snores, and another tremor went through her body. She left the room and went to sleep in the guest room. Closing the door, she moved to the bed and got under the blankets.\n\nAs she lay staring up at the ceiling, she once more wondered what happened to the man she married. He'd been smart and ambitious but also had integrity and class. His smile could win over almost any opponent, and when that didn't work, he could talk his way out of most situations with his intellect.\n\nThese days it was his ambition that seemed to be overshadowing his other traits. He was still a great talker, but what he was saying was less about improving the community and more about increasing his status in it.\n\nThey hadn't made love in months, and when he'd come back from these drunken binges, he was always horny. She was starting to wonder if he'd cheated on her, but she had no evidence of it.\n\nSighing, she flipped onto her side and tried to get to sleep. She had to ignore her own needs once again.\n\nShe wondered if there was any more laundry left to do and snorted to herself.\n\nChapter 3\n\nRaph was on his way to the bus stop when he heard his name called out. He glanced back and sighed. It was his neighbor, Roxanne Sparks.\n\nShe caught up to him and jumped up against his chest to kiss him. While she stood only five-foot-four and her petite body was pretty light, he was caught by surprise by her leap. He dropped his backpack to hold her against himself with both arms. She purred into their kiss as she felt his hands on her body.\n\nWhen he managed to pry her from his chest and get her tongue out of his mouth, he slid her down his body to put her back on her feet. She was grinning madly up at him, and he wondered just how accurate that phrase was for her. He knew from experience that her mood swings were as violent as they came. She'd dropped him as her boyfriend with a tirade of raging screams as many times as she'd suddenly announced he was now hers once more with the sweetest of voices.\n\nHe'd told her straight to her face that he wasn't interested in having a girlfriend, but his protests fell on deaf ears... or potentially crazy ones.\n\nShe was petite all over, had crazy black hair in a cut that just reached the top of her shoulders, soulful (if sometimes mad) brown eyes, deep dimples on each cheek when she smiled, and a perpetual smirk on her lips like she'd just played a cruel prank on you that you hadn't discovered yet.\n\nRaph picked up his backpack once more. \"I'm going to be late for school, Roxy. What do you want? And didn't you break up with me two days ago? I think this time, you called me a heartless bastard.\"\n\nRoxanne rolled her lovely eyes and grinned at him. \"Silly man! You know I wasn't serious when I said that!\"\n\nHe frowned then turned to keep walking to the bus stop. She quickly moved to walk next to him.\n\n\"You aren't mad at me, are you?\" she asked cautiously.\n\nHe sighed. \"No, Roxy. Not mad. Just tired of dealing with your shit.\"\n\n\"I'm sorry, baby! You know I can't help getting a little mixed up from time to time. I missed you!\" she said as she clung to his free arm.\n\nHe looked down into her wide eyes and knew she was right. She did have a lot of emotional baggage from all the shit she went through when she was younger. Bad shit. Cancer, probably from her parent's heavy smoking. She lost some important inside parts to the disease and wouldn't ever have kids of her own. Then her Dad died and her fucking step-dad raped--\n\nRaph closed his eyes and took slow even breaths to calm the rage surging through him.\n\n\"Whatcha thinking about?\" Roxanne asked, feeling his hard muscles tremble with unspent adrenalin. She bit her lip as his body did things to hers. God, she thought he was so fucking hot! She wanted to feel him inside her again!\n\nHe opened his eyes and looked down at her once more. She had that hungry look in her eye again. Shit. He couldn't do anything about that. He was going to miss his bus!",
        "\"Nothing. Look, I have to get to school,\" he said stiffly.\n\n\"After school?\" she purred.\n\nHe saw his bus coming, so he picked up his pace to get to the stop. Roxanne kept pace, and her eyes never left his face. \"I have to study after school. The library. I won't be home until after ten.\"\n\n\"I can meet you there.\"\n\nRaph stopped next to the bus stop and looked at her in confusion. \"The library?\"\n\n\"No, at your place. Your mom won't be home 'til later, right?\" Roxanne insisted.\n\n\"Oh--uh... right,\" he mumbled as the bus door opened.\n\nRoxanne stepped back. \"See you then, lover boy!\" she called out loudly.\n\nScowling in annoyance, Raph climbed into the bus and dropped his ticket into the farebox. As he walked deeper into the bus to take a seat at the back, he watched Roxanne outside on the sidewalk, as did a few other people on the bus. She grinned and flashed her tits at him as the bus pulled away. Heads turned first to look at her, then to look at him. He found a seat with his back to the windows and closed his eyes so he didn't have to look at anyone.\n\nAs he got closer to the school, he opened them again. It didn't pay to be too inattentive this close to the school. Some of these morons weren't above taking a cheap shot. Case in point, the two idiots, Gerry and Wally, were boarding the bus. Usually, they weren't much trouble without their leader, but he kept them in his peripheral vision, just in case.\n\nThey rode on for a while, with no attention focused in his direction, which was good.\n\nVictor's goons were busy talking to some friends sitting closer to the front. Then the big one looked back at him wearing his angry face. He marched to the back, looking like trouble. Damn.\n\n\"GRAVES!\"\n\nHe looked up at Wally with a tired expression. \"What?\"\n\n\"Did you tell Roxanne to flash her tits at you?\" Wally growled.\n\n\"What? No! She flashed the whole bus. Her idea of fun, maybe,\" Raph answered calmly, keeping his eyes on Wally's. Interesting! Wally had a crush on Roxy. He'd have to mention it to her. Maybe he could get her to choose him as her new boyfriend.\n\nHe saw the big goon was building up a head of steam. Shit. He had to avoid a fight as he'd get the blame for it regardless of who threw the first punch.\n\n\"Wally! Get your ass over here! Leave that trash alone,\" Gerry called out.\n\nThe big guy scowled back at his friend, then turned his glare on Raph once more and jabbed a thick finger at him. \"You stay the fuck away from Roxanne!\" Raph said nothing but just continued to hold Wally's eyes calmly. Raph could see the doubt and anger on the other man's face until he stormed back to Gerry's side.\n\nThe bus was quiet for the rest of the trip, but people were whispering and glancing in his direction.\n\nOnce they got to school, Raph made his way to his locker and exchanged his books for his first class. He was closing the metal door when someone slammed his head into it. He spun, snapping his elbow in an arc, and caught Wally on the cheek, almost knocking him off his feet. After the thug shook off the blow, he began to roar, but Victor and Gerry were there to hold him back as one of the teachers stepped out in the hall.\n\nRaph's body tensed as he saw it was Mr. McConnell, the gym teacher... and football coach.\n\n\"What the hell is going on out here? Graves! Are you causing trouble again! Are you trying to get an expulsion just before midterms?\" the teacher bellowed. Raph could see the sadistic glee in the man's eyes, and he felt his anger building.\n\n\"Oh, Harold, put a sock in it!\"\n\nThe group turned in surprise to see an older woman approaching, and Raph felt his anger ebb away as the tension drained from his body. Mrs. Aikens was glaring at the gym teacher, and everyone knew she took no shit. A slim, petite woman in her late sixties, Helen Aikens was a force to contend with at school as she had the ear of influential people in the community. She taught art but announced she was retiring this year. While Raph did his best to avoid connecting with anyone in the school, he liked the old woman, and to his surprise, he truly enjoyed her art class. He was grateful for her intervention now.\n\n\"You know full well it wasn't Mr. Graves who instigated this commotion. If you used your eyes first instead of your mouth, you would've seen that his was the first blood spilled. Look at the door of the locker!\" she asserted as she pointed to the bent metal. There was a streak of blood on it where the vent slots caught the edge of Raph's eyebrow.\n\nShe pulled a tissue from her pocket and handed it to Raph for him to hold against the injury. She glanced at the others with a sniff of disdain and added a scowl for Mr. McConnell. She hooked her arm through Raph's elbow. \"Walk with me, Mr. Graves. I'll get you checked out at the nurse's office.\"\n\nRaph struggled to keep the smile from his lips as he walked away with the old woman.\n\nOnce they were far enough away, Helen glanced up at him. \"What is it with those mouth breathers that they must attack everything they don't understand?\" she sighed.\n\nRaph couldn't hold back the snort this time. He gave her a little smile, and she let herself smile in return. Then her eyes lit up.\n\n\"I'm very keen to see how you do next week in my class! While I don't have a midterm exam, we're going to work with clay, and I've managed to hire a live model who will pose for the students,\" she said with breathless excitement.\n\nRaph blinked in confusion at the woman. \"I've never worked with clay. I just draw.\"\n\nShe smiled at him. \"And you draw very well. That's why I want to see how you'll do in three-dimensional space. It's also very relaxing.\" Seeing his wary expression, she patted his arm. \"Trust me; you'll like it.\"\n\nThey reached the nurse's office, and she knocked. The door opened, and there was a tall, skinny red-haired woman with overly generous breast implants straining against her crisp white uniform. She was wearing old-school black-rimmed glasses with strong prescription lenses, which just made her blue eyes look slightly oversized. Her bold red lipstick-painted mouth widened in a cheerful smile, and Raph saw she was wearing braces to correct her overbite. Raph smiled in return, but he was getting an odd vibe from the nurse. It felt like she was... acting or role-playing. He wasn't convinced getting actual medical care from this woman was advisable, but glancing at Mrs. Aikens, she appeared unconcerned with the woman's appearance. She seemed to be resigned to it, at least. He took some comfort from that.\n\n\"Mrs. Galiban, young Mr. Graves needs medical attention--\" The bell rang. \"And a note for his first class. I'll see you later, Raphael.\"\n\n\"Thanks for... back there,\" he said to the woman, and she touched his arm again as she smiled at him. Then she was off, and he looked to the nurse who ushered him inside. He noted her shiny red leather three-inch pumps, and his unease increased.\n\n\"Please sit on the stool,\" she said, and Raph was surprised by her voice. For all her height, her voice was quiet and higher in pitch than he expected. She almost sounded like she was putting on a little girl's voice, which seemed strange coming from a woman who had to be in her late thirties. He put his books down on the counter and sat on the stool. She took the tissue from his hand and looked closely at the cut. \"Oh, that's not too bad. I can put a little suture tape over that, and you'll be good as new,\" she said, and he glanced up at her. She was smiling at him, so he tried to smile in return.\n\nShe bit her lip distractedly as she moved off to the counter. She returned with swabs and a clear liquid in a bottle. \"I'm going to clean the wound. This may sting a little.\" She stood before him and dipped the swab into the container. Then she dabbed at the skin around the injury, and Raph felt the liquid running into the cut. It stung badly, but he did his best to push the pain down.\n\nHe glanced up again and found himself staring into her boobs. She was standing way too close. Any closer, and her tits would be against his face. Then he noticed her nipples had begun to show against the tight fabric, but when he lifted his eyes to her face, she was intent on her task and humming faintly. Her hands moved with precise, economical motions easing some of his misgivings. She knew the job.\n\nFinally, she finished cleaning the cut and stepped back to put those items away. She returned with some small bandages and once more moved in close to apply the tape.\n\n\"It's going to need two, so please hold very still,\" she said with a strange breathiness to her little girl's voice.\n\nHer fingers smoothed the skin around the cut and gently applied the bandage over the wound without touching it. The tape would hold the edges closed.\n\nRaph was unaware of this as his face was now pressed firmly against her tits, one of her nipples resting against his lips, separated only by the thin fabric of her top. He was surprised to discover she wasn't wearing a bra under her uniform. He began to pull back to free his face from the plush prison.\n\n\"No, don't move,\" she asserted as her nipple grew stiffer still.\n\nHe tried to tell her she was making him uncomfortable, but when he opened his mouth, she pressed just a little more firmly, and the bump of her nipple slipped between his lips. He was surprised to detect a metal stud piercing in her nipple.\n\nShe applied a second piece of tape as she held his head in place.\n\nHe tried but couldn't close his mouth without his teeth catching on the metal piercing, which caused her to gasp quietly. He tried to look up, but she pulled his head back down and gave him a stern look. He was sure he'd seen a flush on her cheeks as her nipple rubbed across his lips once more.\n\nFinally, she pulled back and looked critically at her work. After a slight nod, she moved to the counter to put away the items she had taken out.\n\n\"Raphael Graves, was it?\" she said over her shoulder.\n\n\"Yes,\" he mumbled, confused by her behavior.\n\n\"Here's your note. The tape should stay on for a day or two, and you can shower with it. The cut should heal without scarring. Off you go.\"\n\n\"Thanks,\" he said as he stood. Her eyes dipped down to see the bulge that had formed on his jeans. He caught the smallest of smiles on her lips, then it was gone.\n\n\"Have a good day,\" she said as he left the room, clutching the note with his books once more in his arms.\n\nMind spinning as he couldn't get a read on the woman, he made his way to class and knocked before entering. He gave the teacher the note, then took his seat. He heard a snort behind him and knew it was either Victor or one of his goons, but he just focused on the teacher.\n\nIt wasn't an excellent start to the day. He hoped it would settle down into some form of normality soon.\n\n-=-\n\nMr. Dwight sighed as he looked at his class. For the most part, teaching them advanced math principles hadn't been a pleasure. \"Please take out your calculus assignments and pass them forward. This was to prepare you for next week's midterm. If you were struggling with this assignment, you need to get assistance immediately as the midterm isn't going to be easier.\" He watched the students squirm under his stare. They'd heard his emphasis.\n\nHis eyes jumped from face to face, making a quick assessment of his pupils. He found no surprises.\n\nMr. Peterson was angry, but there wasn't much chance he was going to pass. The teacher had tried to encourage him to transfer to a fundamental level math course at the beginning of the year, but he'd refused, wanting to remain with his friends, Mr. Manning and Mr. Jackson, who'd likely pass by the skin of their teeth.\n\nHe saw the panic on the lovely features of Ms. Harris. She was more of a concern. He'd hoped she could do better. He'd speak to her if he saw the issues he was expecting to see in her assignment.\n\nThen there was Mr. Graves. Honestly, he'd been surprised when he found the boy in his class at the beginning of the year as he'd believed the rumors of his hotheaded antics and his lack of potential. There were some strong opinions against him in this school. None more vocal than Mr. McConnell's, but he was sure this was the coach's bitterness at Raphael's refusal to join any of his teams.\n\nHowever, the young man had shown consistently excellent grades so far, and that had done much to raise the teacher's estimation of him. Today, he didn't appear worried at all, and the teacher agreed. He didn't need to direct any extra attention to this student.\n\nKeeping the stacks of papers separate, he placed them on his desk.\n\n\"Work on the questions on page forty-three while I review these,\" he said and sat behind his desk.\n\nHe powered his way through the assignments, his red pencil furiously scribbling as he annotated the errors he found. He managed to complete the review with ten minutes to spare. He wasn't grading the assignment, which the students would be pleased to hear, but he had several people he needed to speak with as they showed signs of failing the midterm. He picked up the first stack and delivered them back to the students in the first row. He saw their expressions range from relief to outright dismay as he walked down the aisle. He collected the next pile and handed these out too.\n\n\"Nicely done, Mr. Graves,\" he murmured as he dropped the paper on his desk. He wasn't expecting a response from the young man for the perfect grade and didn't receive one, so he moved on.\n\nWhen he put Ms. Harris' paper on her desk, he pointed to the note he'd left asking her to speak to him after school. Then he moved on.\n\nHe had more students to disappoint, including Mr. Peterson.\n\n-=-\n\nRaph settled into the chair in the last study pod at the back of the public library. It was four, and the library closed at ten, so he had six hours of quiet and privacy he could dedicate to studying. He had no work shift today, but he would tomorrow and on the weekend, so he wanted to make the most of the time.\n\nThe rest of the classes he'd had today had just been reviews of the material for next week. Uneventful. Even that ass-hat Wally left him alone as he probably had bigger things to worry about, like failing.\n\nRaph wasn't overly concerned about how he'd do in the upcoming midterms, but refreshing his mind on the topics was always a smart thing to do. The library was the best place for this.\n\nBesides, if he went home, Roxy would be there, and she'd want to have sex. Not that he didn't enjoy sex, and she was... enthusiastic. The problem was she was also damaged, and he always felt terrible afterward. He'd always been honest with her--brutally honest bordering on just brutal. That's how he had to be with her. He told her he was leaving town once he graduated, and he wouldn't be able to afford to take anyone else with him. He wasn't interested in having a girlfriend, and there was no emotional bond between them.\n\nShe claimed she was only looking to have some fun. Deep down, Raph wondered if this was just another self-delusion. It worried him, and he had no idea how to deal with her, so he avoided her when he could.\n\nHe shook his head to clear the cobwebs from it and to get himself back on track.\n\nWith the afternoon light coming in the stained-glass windows on the west side of the building, the environment was as warm and inviting as it could be. The library study booths were Raph's sanctuary and had been for as long as he could remember. The building was mostly empty, so the calming silence was welcome as well. Raph laid out his study materials and immersed himself in work.\n\nFifteen minutes later, he found himself distracted by a repeating noise. Then he felt a light touch on his shoulder. He turned his head and found himself looking into nervous blue eyes, above pretty lips holding a shy smile, in a beautiful face framed by long, blonde locks that were spectacularly catching the multihued light from the windows.\n\nHis mind blanked for a moment as his eyes widened in wonder. He'd never seen anyone so lovely before. Then recognition hit, and he was shocked that it had taken so long for him to connect the face to the name. Samantha Harris! Seeing her here was so out of context, it made no sense to his brain. His eyes suddenly darted past the woman to see if Victor and his goons were nearby. The odds of finding them in the library were slim to none, so he relaxed a little.\n\n\"Raph? Hi, I'm Sam Harris. I sit behind you in calculus,\" she said timidly.\n\nHe was still reeling from how lovely she looked in the afternoon light, so he was only able to nod to her. When her smile relaxed, his widened eyes were once more trapped by her beauty, so he looked away. \"Yes?\" he said tersely.\n\n\"May I sit?\" she said, pointing to the second chair in his study pod.\n\nHe glanced at the chair and realized if she did, she'd be sitting very close to him. Too close. If her boyfriend were to see them... that would be... bad for him. He scowled.\n\n\"Aren't you Victor Manning's girlfriend?\" he managed.\n\nShe blinked at him. \"I'm just asking to sit--\"\n\n\"Yes, but your psychotic boyfriend doesn't need any more excuses to hate me. I don't need him getting in my face any more than he already does. So, sorry, but no.\" He turned away.\n\nHe tried to get his mind back into his work, but he could feel her standing behind him. He tried to ignore her but finally sighed and turned to ask her to leave.\n\nShe was crying. Fuck. Silent tears were running down her cheeks from large blue eyes, and those... pretty lips were trembling. An almost physical pain went through him to see her so distraught. He had to restrain himself from standing, and... and... he didn't know what he'd do next.\n\nThen he got pissed that she was affecting him like this.\n\n\"Why are you crying?\" he growled quietly.\n\n\"I-I need--I need your help,\" she stuttered out.\n\n\"Don't you understand how much shit you'll cause me if someone sees us here together? You've so many friends, can't you ask one of them? Why me?\" he asked in exasperation.\n\n\"I'm going to fail the midterm in calculus because I don't understand it. Mr. Dwight said I'm showing a marked decrease in comprehension, and if I don't get tutoring by someone who knows the subject really well, I won't have any chance of getting the grade I need on this course!\" she said in a rush.\n\nHe looked at her. \"What grade do you need to get on this exam?\"\n\n\"Ninety or better,\" she mumbled.\n\nHis eyebrows rose. \"I thought you said you were getting failing grades.\"\n\n\"I am!\" she exclaimed.\n\nHe silenced her with a scowl, and she nodded in apology as she took some deep breaths to calm herself. That was doing distracting things to her chest, so he looked away again.\n\n\"So you need to go from failing to ninety or better in a week? The midterm is next Thursday,\" he said incredulously.\n\n\"Yes, I know. That's why Mr. Dwight said I needed an expert. None of my friends are smart enough to do it. Please! I need your help!\" she pleaded desperately.\n\nHe looked at her in frustration. She was too pretty. He was having trouble thinking straight, and he was in danger of making a stupid mistake.\n\n\"Victor or one of his spies might see us here--\"\n\n\"They never come to the library, and none of our friends do either. Today's the first time I've been here,\" she asserted.\n\nHe faced her once more and paused. \"Then... how did you know I'd be here?\"\n\nShe looked embarrassed. \"I-I followed you.\"\n\nHis eyebrows went up in surprise.\n\n\"After school, Mr. Dwight told me to find expert tutoring, or I'd fail. So I left the school trying to think of who I could turn to for help. Then I saw you crossing to the bus stop. I rushed to catch up and rode the bus with you. I followed you off the bus and into the building, and I've been trying to work up the nerve to speak to you,\" she explained and bit her lip as she waited for him to respond.",
        "He wanted to say, go away. He knew he should, but for some reason, he couldn't bring himself to do it. Seeing her cry had been... strangely disturbing. He'd seen and made people cry before, and it never affected him. He honestly didn't give a shit if someone shed tears... except now--except hers. He didn't know why, and that confused him. He pushed it aside.\n\nHe struggled for something he could say to dissuade her. \"I'm not a tutor. I've never tutored anyone before. I'd be a terrible one as I'm not good with people. You should've noticed that already.\"\n\n\"You don't have to like me. I-I could be a customer! I can pay for the tutoring!\" she said eagerly.\n\nHe froze. He could make money tutoring? That was welcome news. Maybe that'd also be enough to prove to Victor that he wasn't making a move on his girlfriend? It'd be a purely financial transaction. He narrowed his eyes. \"How much?\"\n\nSam's face showed the first real glimmer of hope, and he could see she was thinking quickly. Raph realized her parents would probably pay for the tutoring.\n\n\"Uh, ten dollars an hour?\" she suggested with a pretty smile.\n\nHer expression gave him a severe sensation of butterflies in his stomach and an uneasy feeling of slipping. That made the reality of the situation snap back into focus. He needed to scare her off. \"Twenty-five,\" he said firmly with what he thought was a daunting scowl.\n\n\"Done!\" she said with a grin. \"Can we start now?\"\n\nHe blinked at her in surprise. Then he cursed himself for being outmaneuvered. He found himself nodding, and she was moving into the pod to sit next to him in the extra chair.\n\nHe'd also been right. Sam was very close. He looked to his books and collected them off to his side of the small pod. He glanced at the wall clock and sighed. He supposed he could do his studying tonight after he made dinner for his mom.\n\nRaph looked into her happy blue eyes (again, too close) then looked down at the surface of the table so he could get his thoughts in order.\n\n\"Tutoring starts now. Four-fifteen, but you're paying for the first fifteen minutes as well. I've never done this before, but... I'll try to teach you how I learned it. That's all I can do,\" he said gruffly.\n\n\"How you learned it gets you excellent grades, so yes, please,\" she said eagerly.\n\nHe sighed. \"Then, we start at the beginning.\" He pulled out his notes, and they began.\n\nHe talked, and she listened. Then he'd get her to try the examples, and he'd correct her if she wasn't following his instructions. He caught himself growling on a few occasions when he was losing his temper and had to take some deep cleansing breaths to calm down. She always got it right on the next try.\n\nThere was a gentle chime, and Raph looked up in surprise as the lights flickered once. That was the fifteen-minute warning before the library closed. Six hours had passed already? He looked to the windows and saw the darkness outside.\n\nSam finished the question he'd assigned, and she sat back with a wide grin. He read over her answer and nodded. She squealed happily, and he hushed her with a scowl. He saw she was trembling with excitement. \"Sorry! It's just so amazing that it's starting to make sense to me!\" she gushed.\n\nRaph looked at his math textbook and realized they'd made good progress. The more complex methods were coming up, but he had to admit she was doing well. That puzzled him. \"You're getting this stuff so well. You're obviously smart. I don't get why you're having trouble in class.\" He began stuffing his books and papers into his backpack.\n\n\"It's the teacher!\" she quietly exclaimed as she packed up her books. She kept casting admiring looks at him, and that was seriously getting under his skin.\n\n\"Mr. Dwight?\"\n\n\"No, silly! You! You're an excellent teacher!\" she said with a happy smile. \"When can we have our next session? Tomorrow?\" she asked eagerly.\n\nHe grimaced. \"I have work tomorrow after school.\"\n\n\"After work?\"\n\n\"I work until closing, then I have to get home to make dinner for my mom,\" he said distractedly.\n\n\"You cook too? Is there anything you can't do?\" she teased as she bounced her eyebrows at him. He felt himself responding to her and was suddenly reminded of how dangerous their situation was. His expression closed up.\n\n\"We can't do that. No... friendly stuff,\" he growled.\n\n\"I'm sorry,\" she blurted with a worried look, concerned she'd messed up their deal. \"Are we still good for more tutoring? Is the weekend open?\"\n\nHe shook his head and took a deep breath. \"Monday. Same time and place. I can do it on Tuesday and Wednesday as well since I won't have another work shift until next Thursday. If you do as well on those days as you've done today and practice what I've taught you, the midterm shouldn't give you any trouble at all.\"\n\nShe was trembling with relief, and it looked like she was about to hug him.\n\nHe looked at her cautiously. There was something in her eyes that was tugging at him, and that felt very dangerous too. \"I have to go. Let me go first. Then you head out. Don't change how you act around me at school! Ignore me.\"\n\n\"Victor can't be--\"\n\n\"Stop. He can and is. I'm not going to try to convince you of what kind of man he truly is, as that's not my job. Speaking of jobs, have my money on Monday.\"\n\nWith that, Raph stood and left without looking back. He exited the library and walked to the eastbound bus stop. Minutes later, he saw Sam leave the building and walk to stand at the bus stop on the street's opposite side. They were the only ones out there, and he saw she was struggling to suppress a smile as their clandestine exit seemed rather silly now.\n\nRaph glanced around and shook his head in surrender. He heard her laughter across the street, and the sound was sweet to his ears. So much better than tears. He couldn't stop the smile from reaching his lips, so he turned to face where the bus would be coming from. He heard her snort and hid his mouth with his hand.\n\nSam's bus came first, and he watched it leave, seeing her lovely blonde hair next to the window. His bus came only minutes later, and he boarded it to head home.\n\nHe had to think of something other than the sound of her laughter.\n\n-=-\n\nAs she walked through her front door, Sam let out a mighty sigh of relief.\n\n\"SAMANTHA ELIZABETH HARRIS!\"\n\nShe jumped with a squeak when her mother's voice boomed out at her.\n\n\"Mom! Are you trying to give me a heart attack?!?\" she exclaimed.\n\n\"Are you trying to give me grey hair? Where have you been? You were supposed to come home directly after school! Calling your cell goes straight to voicemail!\" her mom said as she marched into the front hall from the kitchen. She was wearing an apron and smelled of fresh baking.\n\nSam could see the worry on her mother's face, and she suddenly recalled the plans she'd made with her at the breakfast table. \"Oh my god, mom! I'm so sorry! It was such a terribly stressful day, and time just got away from me! My cell battery died too.\"\n\n\"Where were you?\" Suzanne asked again.\n\n\"I was at the public library with my new calculus tutor!\" Sam grinned and rushed forward to hug her mom. Suzanne wrapped her arms around her daughter and pressed her lips against the young woman's temple.\n\nThe mother paused as the words sunk in. \"Wait, you were at the public library... downtown? You took a bus downtown, at this hour? And what's this about a tutor? Who is she?\"\n\nSam pulled back from her mom's chest and smiled up at her. \"Yes, the library downtown. The bus takes me right to it and back!\" Her expression turned regretful once more. \"I'm sorry, mom, but I'm doing poorly in calculus. The teacher told me that if I didn't get some expert tutoring, I would fail the midterm. \"I've been really struggling, and my grade kept getting lower. It's seriously jeopardizing my grade average.\" Then her smile came back full force. \"But it's going to be okay now! I found a tutor! He gets perfect or close to perfect on every test he takes, and he said he's willing to tutor me. We spent six hours going over everything we learned in the early weeks of the class, and I get it now!\"\n\n\"He? What's his name?\" Suzanne asked. \"Does Victor know you're out late with this other boy?\"\n\nSam winced. \"No, Victor doesn't know and can't know. I promised Raph--Raphael Graves. He's in our class and knows this stuff inside out. Anyway, I promised him I wouldn't let anyone at school know he was tutoring me. He says Victor hates him and would get really upset if he found out. I can't see Victor doing anything stupid or violent, but I promised.\"\n\n\"This Raphael Graves, is he tutoring you out of the goodness of his heart?\" Suzanne asked with a raised eyebrow.\n\nOnce more, Sam winced. \"No, I promised him I'd pay him twenty-five dollars an hour-\"\n\n\"What?!? Sam! That's expensive!\"\n\n\"Mom! He's so worth it! He spent six hours with me today, and I now finally understand how calculus works. He's my only chance to improve my grade! I have to do this!\" She pulled out the assignment her teacher had scribbled on and showed her mother how dismally she'd done. \"This is where I was before tutoring. It's all wrong! Now, look! Look at my notes from this afternoon with Raph!\" She flipped open the pages showing her practice questions, and there was a much more orderly progression in the equations. \"The best thing is, I know what this all means! I know how to do it! The more complex stuff is coming up, but with Raph teaching me, I'll get it too! I'm going to ace that midterm!\"\n\nSuzanne still looked like she had misgivings and serious worries about her daughter taking the bus at night in the center of town. \"Can't you study here?\"\n\n\"No! Victor might see Raph, and because of that, he'd never agree to come here,\" Sam explained.\n\n\"Where does Raphael live?\" the mother asked.\n\nSam paused and gave her a blank look. \"I don't know.\"\n\n\"Can you call him so I can speak to him?\" Suzanne suggested.\n\n\"Uh, I don't have his number, and... I don't think he has a cell.\" She thought about that and realized she'd never seen him carrying around any electronics; no cell, computer, or even an MP3 player.\n\nReplaying her memories of seeing him in the halls and the classrooms, she realized he seemed to wear the same thing to school every day--grey jeans and a black t-shirt under a casual black button-down shirt, worn open with rolled back sleeves and black work boots. She'd never really noticed or paid attention to him before. With such a limited wardrobe, shouldn't he have looked dirty or smelled? In the library, she'd been sitting so close to him, and all she could recall was a warm, masculine scent coming from him. It had been subtle and... pleasing. His clothes had been clean if a little worn.\n\nShe looked at her mom again. \"I don't think his family has much money. He mentioned he works after school and makes dinner for his mother.\"\n\nHer mother looked impressed and nodded with the beginnings of a pleased smile. Then her expression changed to concerned mom, protector of daughters, again. \"When is your next lesson? I'll drive you there so I can speak to him, and I'll pick you up afterward.\"\n\nSam was a little uneasy as she didn't want to screw up her arrangement with Raph. \"I won't have one until Monday as he has work tomorrow night and on the weekend as well. He said he'd give me three more lessons. Monday, Tuesday, and Wednesday. The midterm is on Thursday. I desperately need his help. He didn't want to tutor me as he said Victor would give him a hard time in school if he found out. I was only able to get him to agree by offering to pay him. You aren't going to do anything to jeopardize that, are you?\" She was almost panicking at the thought.\n\nSuzanne caught her look and hugged her. \"No, I just want to talk to him. To make sure you're safe. I think twenty-five dollars per hour is too high--\" She raised her hands in surrender when Sam began to protest immediately. \"I won't try to haggle. You've already negotiated the price of his services.\" She gave Sam an assessing look. \"Do you honestly believe you're getting value for this money?\"\n\n\"Yes! He's an excellent teacher! Mr. Dwight taught the same things, but it didn't sink in. When Raph explains it, I... get it. I can't tell you why it works better with him. It just seems clear and simple the way he teaches it.\"\n\n\"Do you like him?\" Suzanne asked gently.\n\n\"Mom! I have a boyfriend!\" she gasped in exasperation.\n\nThe mother found her response a little forced. \"Does Raphael like you?\" she asked.\n\n\"No!\" As the word blurted from her lips, Sam flashed to the memory of his look of... awe when she first touched his shoulder and the glances he'd given her afterward. \"No... no, he didn't want to tutor me and tried to get me to leave him alone, but he's my ticket to passing, so I didn't.\" Another moment came to her mind, and the joy it caused her made the words slip out before she could stop herself. \"He thinks I'm really smart!\"\n\nSuzanne was watching her with a subtle, knowing smile.\n\nSam frowned in frustration at her Mom's smug expression. She didn't want to deal with it now. \"Listen, I'm pooped, so I'm going to bed. Sorry about not letting you know where I was. I'll charge my phone tonight.\" She gave her mom a quick kiss on the cheek and another hug before she headed for the stairs.\n\nAs she got ready for bed, she couldn't stop thinking about how Raph was seriously coming to her rescue. She only wished Victor had been the one to do it. Then she could reward him with kisses.\n\nHer mind betrayed her by taking her to the image of Raph's sensual mouth.\n\nShe threw herself down on her bed with a groan of frustration. She just wanted to get the remaining tutoring sessions out of the way. Then her life could get back to normal.\n\n-=-\n\nRaph walked through the dark streets approaching the public housing development. The apartment towers were crowded and where the drug dealers lived. He didn't want to know how his mother had arranged for them to live in one of the nearby townhouses, but it happened shortly after he was born.\n\n\"Give me the fucking bag and your wallet!\"\n\nThe voice was raw and wobbled, but the owner held a knife as he stepped out in front of Raph. The stench coming off the addict almost made Raph gag. He scowled.\n\n\"Oh, shit! Oh, fuck, I'm sorry! Please! I didn--AAACK!\" the mugger began in desperation before Raph's fist cracked into his cheekbone, slamming him to the ground. Raph finished with a stomp to his leg and heard the bone crack. The man screamed.\n\nNormally, Raph would keep kicking until his attacker was truly a mess, but tonight something was holding him back. His rage just wasn't up for it. He took two steps away before he heard the weak thanks for sparing him.\n\nFuck. He couldn't show mercy. Not here.\n\nHe turned like he was just getting a run at the man and drove his boot into his stomach. A quick stomp on a hand to break the wrist, and he walked casually away as the man wretched and screamed. The sound echoed and traveled through the neighborhood. He felt eyes on him and knew his reputation was reinforced once more. He didn't feel bad for punishing the punk, but his usual satisfaction was missing. He felt strangely... empty.\n\nWhen he walked up to his complex, he could just barely hear the wails of the man he'd crippled.\n\nAnd there was Roxy.\n\nShe was sitting on his front step with a wide grin on her face. She heard the sound too and knew it had been him. Her safety in the neighborhood was guaranteed by the brutal shit he'd done back there. She made sure everyone here knew she was his and he was hers. While Raph wasn't known for instigating violence, they'd seen examples of his rage and knew what would happen to them if someone messed with her.\n\nHe sighed as he knew what was next. He could see the crazy in her eyes. Tonight, he really wasn't--\n\n\"Who's that badass muthafucka I see walking up to me?\" she purred.\n\n\"Roxy--\"\n\n\"Open the door, fucker.\"\n\nHe scowled at her as she wasn't going to listen to him again. He'd been down this road with her so many times before. He unlocked the door and pushed inside with her on his heels. He flipped on the light and locked the door. He turned and caught the expected slap with his left hand. She was grinning as she tugged at her arm and tried kicking him in the shin, but he just lifted his foot, and her kick struck the sole of his boot. She cried out in pain.\n\n\"Enough!\" he bellowed and spun her around to pull her arm up behind her back. She shrieked and tried to escape, but he pressed her down over the back of the couch. Her heel caught his shin painfully, and he roared. His frustration flared as he didn't want to be doing this. Roxanne was screeching and hissing at him as she called him every offensive name she had in her colorful vocabulary. Most revolved around him having sex with his whore of a mother. Roxanne knew how to get under his skin, and his rage climbed. As she wanted, he yanked down her cut-off shorts and exposed her ass. She was a petite woman, but the round orbs of her ass cheeks were perfect.\n\nSLAP!\n\n\"FUCK!!! YOU FUCKING BASTARD!\" she screamed as his open hand struck the other cheek.\n\nSLAP!\n\n\"AAAAAAAAIIIEEE!\"\n\nHer legs were trembling, and her juices were flowing as her ass stung. Roxanne looked over her shoulder desperately. \"Ooo, baby! Fuck me! I need it. Take me!\" she gasped.\n\nHe scowled at her as he unbuckled his belt. When his pants fell to his ankles, she whimpered in need. His cock bobbed between his muscular thighs, and she felt the heat of it, touching the tender flesh of her inner thighs.\n\nShe had one more taunt to get him truly fired up. \"Oh, fuck! Pound my pussy like you fuck your momma's nasty hole,\" she hissed.\n\nHe reached forward and grabbed her hair, pulling her head back so she could see the rage in his eyes.\n\n\"I. DON'T. FUCK. MY. MOTHER!\" he roared.\n\nShe was gasping, panting, and whimpering as he manhandled her. She silently screamed as he drove his cock deep into her gushing pussy until he slapped her ass with his pelvis. He growled as he thrust into her body, again and again, the wet slap of their skin echoing oddly against the bare living room walls.\n\nRaph lost himself to his rage. He felt manipulated, so he took his frustrations out on the one pushing his buttons so hard. His hips sped up, and soon Roxanne was making odd guttural grunts from the impacts. She'd already cum explosively and was riding the state between ecstasy and pain, barely maintaining consciousness.\n\nWhen his release came, he ground himself against her and curled his body over hers, rubbing her ass cheeks with his pelvis. She gasped loudly at the sensation and struggled to push back against him.\n\nFinally, his brain came back to him, and with it, the intense guilt of using Roxy like some kind of masturbation tool. He knew it was exactly what she wanted, but he hated himself for giving in. He felt his tension dissipate, and it was a great relief, but there was a vast emptiness left behind. He closed his eyes as she pulled herself off of his shrinking member.\n\nHe released her hair, and she dropped forward onto the cushions of the couch to recover. He moved into the small washroom to wash and wipe himself clean. He pulled up his pants and carried some toilet paper out to the couch. He wiped the mess they'd left on the cheap pleather cushions and handed Roxy a big wad of paper to clean herself.\n\n\"You were a fucking beast tonight! So good!\" she purred as she wiped herself. She hissed and sighed from the sensations coming from her abused, tender flesh.\n\nHe just looked at her in frustration, then over to the clock. Dotty would be home soon. His mom didn't like Roxy, and the feeling was mutual. He had to get her to leave.\n\n\"The fucking beast needs you to go home now. I have stuff to do,\" he grumbled.\n\nRoxanne was on her feet and launching herself at him over the couch with claws extended. He caught her in midair, spun, and slammed her up against the wall, pinning her there with his body.",
        "\"Ohhhhhh,\" she moaned as fresh sparks shot through her limbs. Raph kissed her hard, then lowered her to her feet.\n\n\"Go home. Get some rest,\" he rumbled, frowning deeply as his conflicted mind tortured him.\n\nShe wobbled as she made her way outside and turned to face him. She reached down and slid a finger up inside the leg of her shorts. She gasped as she pushed it deep inside her, then pulled it out for him to see his semen coating it. She slipped the finger into her mouth then giggled as she made her way to the next townhouse.\n\nRoxy, the girl next door.\n\nAs he closed and locked his door once more, he worried about his crazy neighbor. She'd been next door for as long as he could recall. They'd grown up together... in this shitty place to grow up. Their mutually abusive relationship was a perfect example of how unhealthy their environment was. Both of them were damaged. Neither of them was good for the other. Yet, the more he pushed her away for her own good, and his, the more she clung to him.\n\nHe moved to tidy up the living room and carried his books upstairs. A deep thumping on the front door brought him back downstairs quickly. He glanced at the crowbar next to the door, then opened it.\n\nThere was Dotty in the arms of one of the club's bouncers. Raph recognized him from the one time he'd visited the club to pick up his mom. She'd gotten sick on one of the club owner's more valuable customers. She hadn't told her boss that she was running a fever. The owner had been too pissed at her to send her home safely and called for him to pick her up. The man spent an hour ranting at them through the napkin he held to his mouth as she shivered in Raph's arms.\n\nThe bouncer was an ugly brute by the name of Yuri. Russian, like the club owner. The extensive tattoos didn't soften his image, and his voice was as rough as his complexion.\n\n\"Mr. Kirov says customer slipped her something and roughed her up in private room. She is to recover and return on Monday. Three days to get straight. Understood?\" His eyes held Raph's.\n\n\"Yes,\" Raph sighed.\n\n\"Good.\" Then he transferred the unconscious woman to Raph's arms. Yuri saw the redness on his knuckles and connected the dots. \"Broken man on sidewalk. You?\"\n\nRaph just nodded.\n\nYuri was impressed and nodded his approval. \"You need work, speak to Mr. Kirov.\" Then he turned and walked away.\n\nRaph brought his mother into the house and locked the door. He was carrying her upstairs when he heard her whisper.\n\n\"Mateo? My Mateo... you came back to me.\"\n\nRaph's heart sank. His father's name. He looked down at his mom's face, and beneath the bruises and swelling, he saw the hope in her eyes. He wasn't sure what drug she'd ingested, but she wasn't connecting to reality. Damn, this was going to be bad.\n\n\"No, mom. I'm Raph, your son.\"\n\n\"Mateo... I've missed you... so much.\"\n\nGoddammit! He wanted to kill the fucker who drugged and beat her. Instead, he just struggled to calm himself as he carried her down the hall to her bedroom. She was trying to snuggle against his chest as she repeated his father's name over and over.\n\nHe laid her gently on the bed, but when he turned to leave, she reached out and grabbed his shirt.\n\n\"Please... please don't... leave me again. Mateo, please.\"\n\nHeart aching, he stretched out on the bed next to his mom and gathered her against his chest. He kissed the top of her head, and she sighed in contentment. When her hands moved down his stomach towards his belt buckle, he gently took them in his and raised them to his lips to kiss them.\n\n\"Sleep... my love,\" he said quietly, and she whimpered something against his chest then slowly faded.\n\nRaph lay there for hours before he slipped into sleep himself.\n\nChapter 4\n\nVictor crunched down on his breakfast cereal, wishing it was louder in his head so he didn't have to hear his parents bickering. It pissed him off. His father's condescending tone and his mother's pitiful begging pushed him into a rage every morning.\n\nRoger Manning was an important man in town, head of the largest bank. He was rich and powerful. Victor admired that about him, but he also thought his father was a prick.\n\nEmily Manning fulfilled her role as the dutiful wife, but she made Victor so angry when she let his dad treat her like shit. Maybe she deserved it; he didn't know. All he knew was that he was sick of it.\n\n\"Is this what you do to keep yourself busy all day? Draw silly pictures of the garden?\" Roger sighed disappointedly.\n\nEmily glanced in embarrassment over at Victor, who looked back to his cereal and ate another spoonful noisily. She frowned at her son's sloppy eating habits.\n\n\"It's a design for the garden -- just a concept. I'd like to refresh the look. It shouldn't cost too much, and the backyard looks dreadful from last winter,\" she said in a reasonable tone.\n\n\"As if I didn't have more important things to be dealing with,\" Roger grumbled as he looked at his wife. He walked over to the patio door and looked out at the backyard. \"Well, damn,\" he growled as he took in the mess. He turned back to his wife. \"Fine, go get a quote, and I'll take a look at it tonight. Don't make any promises to those crooks.\"\n\n\"Thank you,\" she said quietly as her husband headed out to the front door without a glance back. She stood there for a moment until she heard the door close then moved towards the kitchen table. Victor suddenly stood and shook the empty box in her direction.\n\n\"We're out of cereal.\"\n\n\"I-I'm getting groceries this morning--\"\n\n\"And I'm out of clean clothes. When are you doing the laundry? Shit.\" Victor snapped as he left his mother in the kitchen, staring wide-eyed after him. Fuck! She pissed him off!\n\nNow he was going to be late for school.\n\nAs she collected Victor's dishes, Emily fought back the tears that had become so common these days. She glanced towards the living room entrance as that's where the brandy was but recalled how Roger had punished her for drinking some of his reserve. She unconsciously moved her arms over her breasts protectively. She put the dirty dishes in the dishwasher then gave herself a shake. She had to get started on her chores now to have time to go to the garden center later.\n\nShe heard the front door thump closed loudly, and she was alone. Again.\n\n-=-\n\nRaph yawned once more as he rode the bus to the garden center. He'd been so tired this morning when he woke up in his mom's bed. He'd eased her sleeping body off his shoulder and slipped out of her room.\n\nShe'd drooled on his shirt, but he was going to wear his other set of clothes anyway. He'd do the laundry tonight. He took a quick shower, got dressed, made her a quick breakfast, and left her a note saying she wasn't to go back to work until Monday, boss' orders. She might not listen to her son, but no one crossed Mr. Kirov.\n\nHe'd struggled through his classes, which were thankfully just review. He evaded Victor's attention, as he seemed to be in a rare mood. Of greatest significance, he'd avoided paying any attention to Sam.\n\nRaph had survived the day. Now he just had to get through his shift at work if he could stay awake.\n\nWhen he arrived, he saw the place was bustling. He saw Jackie standing by the door to his office. The older man looked upset, and his face was flushed. He must have been yelling at someone, Raph thought. Maybe not such a good time to make his presence known. He began to turn towards the staff locker room entrance when the man spotted him and frantically waved him over.\n\n\"Raph! Thank god! That useless shit Dante just quit, right at the start of one of our busiest weekends! I'm down one sales associate, and I can't get anyone else to cover his shift until tomorrow. Today, I need you on the floor!\" Jackie exclaimed with a raspy voice, showing the argument with Dante had been heated.\n\nRaph looked at the man in surprise. \"I don't know how to sell. I'm not good with people.\"\n\nThe boss scowled and fixed an eye on Raph. \"It's not like I have a choice. Listen. All I need you to do is answer questions as best you can. You don't have to try upselling anything. Just find them what they ask for. If I have at least one sales associate floater available to speak to customers and make them feel like someone's listening, that will keep them in the store.\"\n\nRaph still felt uncomfortable about this, but from the expression on Jackie's face, he knew he'd better do it or find another job.\n\n\"Sure. Okay, I can do that.\"\n\nThe man sagged with relief. \"I'll do my best to direct the more senior salespeople to the customers when I can. Get your apron on and come back quick.\"\n\nRaph rushed into the back to stow his books and got his apron. He put his gloves in the pocket and walked back out. He caught a glance from Jackie as he pointed to an older woman looking around. Raph moved closer. \"May I help you?\" he asked awkwardly.\n\nShe squeaked a little at his gruff tone but saw his stiff smile and settled herself. \"Yes, I'm looking for something to put around my garden bed to separate it from the lawn.\"\n\n\"Edging?\" he asked.\n\n\"Yes, that's the name. It just slipped my old mind,\" the woman said with a smile as she looked at him.\n\nMissing the opportunity to compliment her and make her feel good, he just pointed to the building's left wall where several different kinds were on display. \"We have brick edging and plastic edging in a variety of shapes and sizes.\"\n\n\"Oh,\" she said quietly.\n\nHe nodded with a smile and moved on as the old woman made her way to the edging.\n\nAs the afternoon became early evening, the customers continued to stream in, and Raph tried his best to remain calm when the idiots asked the same stupid questions without listening to his answers. To be fair, some customers were easy to deal with, but he got to field most of the requests as the floater.\n\nThere were three other senior sales associates, not including Jackie. Raph was taking a breather between requests and spotted his boss waving at him. He was standing next to a pretty woman with short, dark hair. From her timid body language and large eyes, she reminded him of a doe. She was probably in her late thirties and looked around nervously at the crowd.\n\nAs Raph made his way over, he noted the uncomfortable expression on his boss' face. \"Yes, sir. How can I help?\"\n\n\"Raphael, I need you to do a landscaping quote for Mrs. Manning here,\" the older man said, and Raph's eyebrows went up. His boss was using his formal name to impress the customer, so she must be important. He was also being asked to do something he'd never done.\n\nJackie turned to the woman. \"Raphael here isn't one of our sales associates, but he is an excellent landscaper. He'll follow you out to your place where you can show him what you have in mind. He'll work out a quote on the spot. Would that be all right?\"\n\nThe woman looked to Raph, who studied her in return. His impression of her looking like a doe caught in the headlights increased. He let a friendly smile slip onto his lips, and a shy one appeared on hers.\n\n\"That would be fine,\" she said with a timid voice.\n\n\"Raphael, take the pickup. The keys are on the wall in my office. Take the tablet and clipboard. The price list is on the tablet, and you can write up the quote for Mrs. Manning on the clipboard. She gets the top copy.\"\n\nHe looked at his boss once more. \"Okay, sure.\" He turned his eyes to the woman. \"I'll be right with you.\" He then hustled away to get the items from the office as she went outside. On his way back, Jackie caught his arm.\n\n\"Your last job was landscaping, right? You any good at it?\" Jackie asked nervously.\n\n\"Yeah, I'm good,\" Raph said with a nod.\n\n\"Good?\" his boss said with a raised brow.\n\nRaph's nerves were a little frayed from dealing with so many customers, so his tone was sharper than he should've used with his boss. \"Really... fucking... good,\" Raph said slowly as he held Jackie's eyes. For a moment, he thought he might've pissed the man off, but Jackie actually relaxed a little and nodded.\n\n\"I'd rather send one of the more senior people on this as the Manning family live up on the hill, but my guys are all in the middle of setting up large orders. Don't screw this up if you can avoid it.\"\n\nFrowning, he nodded and headed outside after another great pep talk from the boss. He caught up with the client.\n\n\"Where are we going?\" he asked as she was heading to her car. She turned to look at him in surprise.\n\n\"Oh! Sorry. Ninety Pinecrest Drive,\" she said with a slight blush.\n\nHe nodded and headed off to the truck. She was driving a small import, but he had no real trouble keeping up with her. Soon they were climbing up the winding road through a very posh neighborhood. He'd never been on this side of town before.\n\nThey pulled into a long winding driveway and up to a large house. Once parked, he gathered the toolbox from the cab, including the clipboard and tablet, and followed her into the backyard. The space was large, but it wasn't presented very well. There were signs of water damage and subsidence near the back of the property, where a slope was giving way to too much waterlogged soil.\n\nHe smiled at her, and she smiled back. It seemed more a reflex defensive action on her part, so he let his smile go. \"What were you thinking of doing back here?\" he asked, trying to move this along.\n\nHer eyes flickered to his, then she pulled a rolled piece of art paper from her bag and spread it out on the patio table as they looked out over the area to be done.\n\nHe was impressed by the detail she'd added to the sketch. He nodded appreciatively as he saw what she was going for. It was bold but needed a few minor adjustments. Even without it, the yard would be eye-catching. He was also caught by the fluidity of the drawing.\n\n\"This is really good, but it doesn't address the crumbling slope back there.\" He saw her shrink back from his criticism, so he pressed on, trying to speak gently. \"The grasses you've selected aren't going to firm up the ground sufficiently. I'd recommend you reinforce the slope with a short line of armor stone. Then you plant the grasses above and below them.\" He glanced at her once more and saw she was considering his suggestion. He looked over her design once more, and he had to admit, he was impressed. She had an excellent eye for design.\n\nGlancing at her again, he could see she was still intimidated by him. He worried about that and feared he might have scared her off. Maybe a compliment? \"Outside of my one minor suggestion, the design is brilliant... and beautiful!\" he asserted.\n\nHe saw her eyes light up with his praise. Her smile was dazzling, especially when it showed in her pretty eyes too.\n\n\"WHAT THE FUCK ARE YOU DOING IN MY BACKYARD?\"\n\nHe recognized the voice, and it finally clicked in Raph's head. Mrs. Manning. Victor Manning. Crap.\n\nHe turned to look at the source of the angry yell as Victor marched out onto the patio towards them.\n\nThe woman stepped between them. \"This young man is working on the quote for the landscaping. Your father said I could get a quote!\" she said with a shaky voice.\n\nVictor stopped and looked over his mother's shoulder at Raph, his jaw muscles clenching in frustration. Raph just looked back calmly.\n\nLooking his mother in the eye, he lifted the corner of his lip in a snarl. \"Get it done quickly, then get this Spic trash out of our yard,\" he growled. With a final glare at Raph, Victor stormed back into the house.\n\nMrs. Manning clasped her hands and rubbed them together as she trembled. She glanced over to see if Raph was upset and was surprised by his smile. \"I'm so sorry about how rude he was--\"\n\n\"Don't worry about it. I don't care what he thinks of me. The racist jab was new, but it really doesn't matter,\" he said with a slight smile.\n\nBig eyes blinked at him.\n\n\"Let's get back to working on this amazing design of yours!\" he said, and her beautiful smile was back.\n\nShe walked him through her ideas, and he asked about the color palette and texture theme she was working towards and offered suggestions of suitable plants to match each. She seemed to open up as he listened to her ideas without judgment. When they settled on something, he'd note it down in the tablet and worked out some quick tallies. He took measurements for estimating how much mulch and wood chips they'd need.\n\n\"There are some armor stone pieces back at the store that would be perfect for holding back this slope,\" he said while measuring the length. \"Yeah, we've just the right size of stones to do this job. We can make it appear like stone steps with grasses above and below.\"\n\n\"That would be lovely!\" she exclaimed, obviously seeing the image in her mind. He nodded and jotted it down on the pad.\n\n\"Okay, I think I have enough information to work out the quote. I'll give you two. One with all of the features you've asked for and one with some items removed to reduce the cost,\" Raph explained.\n\nShe pouted a little at the second option but nodded as it made sense.\n\nRaph sat at the patio table with the tablet and the clipboard and wrote out a quote like he'd seen others written. He itemized the elements and listed their costs. Next, he wrote out the economy version, which would still look nice but would be missing her design's true visual impact.\n\nHe then explained the two quotes. She was surprised by the cost but hopeful.\n\nRaph saw her expression and looked out at the yard in the dimming light. \"I saw the design they used for the mayor's property last year.\" She looked at him with interest. \"I can honestly say your design is more impressive and isn't as expensive as his was.\" He looked up as dusk was quickly settling over the hillside. \"I should be getting back to the shop.\"\n\nThe woman was smiling at him, now that he'd given her that tidbit about the mayor. \"Thank you so much! I'll show these to my husband, and I'll contact the store tomorrow,\" she promised.\n\nHe nodded to her with a smile, collected his tools, and headed back to the truck.\n\nHe drove back to the shop and walked inside with the quotes. Jackie rushed over and reviewed them.\n\n\"What's with the second cheaper quote?\" he growled.\n\n\"Mr. Manning is the bank manager. You think he'd accept only one option?\" Raph asked, and his boss frowned but shook his head.\n\n\"No, you're right. Good thinking. Thanks for taking care of this.\" The boss looked around and saw the crowd had diminished. \"You can finish up tonight by moving those bags of manure back into the stock room.\"\n\nRaph nodded tiredly and made his way towards the smelly bags. He was relieved to get away from the customers. Bags of manure didn't ask insulting questions and had no eyes to judge him.\n\n-=-\n\nEmily put the finishing touches on dinner and fretted as she waited for Roger to come home. He was late, and her nerves were beginning to fray. She'd prepared what she was going to say about the quote, but Roger could be... unpredictable.\n\nVictor had gone out for a while, and when he returned, he'd just glared at her as he climbed the stairs to his room.\n\nShe heard the front door close with a thump, and she squeaked a little. She took some deep breaths to calm herself and walked out to greet her husband.\n\n\"Welcome home, dear,\" she said with a smile.\n\nRoger glanced at her and looked away. \"Is dinner ready?\"\n\nShe nodded. \"I'll get it on the table.\" She moved to the stairs. \"Victor, dinner!\"\n\nEmily hustled to the kitchen and began moving the dishes out to the dining room. Roger was already seated, and Victor walked in. Neither looked at her or each other but instead just started eating.\n\nShe said a little prayer to herself and began eating, casting looks at the two men at the table.\n\nThey ate in silence, and once Victor was done, he got up and headed back upstairs to his room. She watched him go and realized she'd lost her son, the young boy who used to smile at her and was her little soldier. Now he wouldn't even look at her at dinner. The pain of that cut through her, and she put her hand over her mouth to stifle her gasp of despair.",
        "She couldn't cry in front of Roger. He wouldn't tolerate it.\n\n\"Did you get the quote?\" he asked, surprising her. She blinked away the tears quickly.\n\nHe was getting up from his chair, so she did as well and rushed to collect the papers.\n\n\"Yes! Yes, I had someone come out and look at the yard. He went over my design and only made one small revision to add some support for the collapsing hillside.\"\n\n\"Yes, yes, let's see it!\" Roger said in annoyance and snatched the forms from her.\n\n\"He gave me two. One full estimate with all of the changes I designed and one with some of the items removed to make it cheaper,\" she said, handing over the papers.\n\nRoger frowned as he read through the quotes.\n\n\"Shit! This is expensive! The cheaper one isn't that much less!\" Roger exclaimed. He glared at his wife.\n\nIt was time for her to play her ace card. \"The landscaper said he'd seen the quote for the mayor's yard last year, and its cost was higher, but it wasn't as impressive as ours would be.\"\n\nRoger went still as he studied her expression. He suddenly reached out, seized her right nipple through her clothes, and pinched it cruelly between his finger and thumb.\n\n\"AAAHH! Please, Roger! That hurts!\" she whimpered but did not attempt to pull away or touch his hand as her punishment would just increase.\n\n\"Are you trying to manipulate me?\" he said through gritted teeth.\n\n\"No! No, no, oh! Please! Please!\" she cried quietly.\n\n\"Tell me exactly what this slick-talking salesman said to you,\" Roger demanded. He tugged his fingers away, and Emily clapped a hand over her mouth to stop her scream. She looked at Roger through tearing eyes. He was red-faced with anger. She'd have to be very careful now.\n\n\"It wasn't a salesman. They were all busy, so the store manager just sent one of the landscapers. He was a young man who does the actual work. He had no sales experience.\"\n\nRoger brooded over this information. He could tell she wasn't lying now, not after he'd disciplined her. He liked the idea of having a backyard better than mayor windbag. Cheaper than his too. Sighing, he glared at her.\n\n\"Go with the full quote. But tell them it better be spectacular!\" he insisted. She just nodded, averting her eyes, and held her tongue.\n\nHe looked away and yawned. \"I'm going to bed.\" With that, he left, heading upstairs.\n\nShe sat for a moment, just holding her breast and fighting back nausea. When she'd recovered enough, she began taking the dishes into the kitchen. She scraped the plates into the recycling bin and stacked them in the dishwasher. Once she'd cleaned the pots and the counters, she shut the lights off and went into the dining room to collect the quotes. She allowed herself a little smile as she thought of working on her new backyard.\n\nShe also thought of the blunt-talking but genuinely nice young man who called her design brilliant and beautiful. She was looking forward to working with him again.\n\nShe turned off the main light and sat in the dim dining room to wait.\n\nIt was best if Roger was asleep before she went to bed.\n\n-=-\n\nRaphael was a smelly mess when he eventually went home as one of the manure bags broke open on him. People gave him a lot of space on the bus, and he didn't suffer a recurrence of the mugging as he walked through his neighborhood. He cleaned his boots outside his front door and shook himself to get the majority of the dirt off before unlocking the door and stepping inside.\n\n\"Raphael, is that you?\"\n\n\"Yeah, mom. I'm just taking a quick shower; then, I'll get dinner going.\"\n\nHe carefully made his way upstairs, but he didn't see any more dirt fall from him. He grabbed a pair of ratty shorts from his drawer, went into the small bathroom in the hall, and closed the door. He stripped and stepped into the shower after dropping his clothes into the laundry basket. He washed quickly and rinsed the soap from his hair and body.\n\nHe heard the bathroom door open.\n\n\"Mom! I'm in here! Wait your turn! I'm almost done!\" he growled.\n\n\"I was just going to get the laundry,\" she said plaintively.\n\n\"No, please, let me do that!\" he asserted as she was a disaster when it came to household chores. He couldn't afford to lose any more clothes.\n\n\"I feel so useless!\"\n\n\"You're not! Please wait for me downstairs,\" he said, softening his tone.\n\nThe door closed, and he listened to her descend the stairs. He sighed and quickly finished up.\n\nPulling on the shorts, he grabbed the laundry basket and made his way downstairs. Dotty was sitting on the couch. Light from the TV glimmered off the wet streaks running down her cheeks. His heart ached, and his frustration flared as he didn't know how to heal her pain.\n\nHe went down the stairs into the dark basement and stuffed the clothes, mostly her panties and bras, into the old washing machine with a little cheap detergent.\n\nOnce it was started, he made his way back upstairs and sat on the couch next to her. She looked up into his eyes. He'd always thought his mom was lovely, which made seeing her so sad all the time so hard to deal with.\n\n\"I'm sorry about last night,\" she whispered, her bottom lip trembling.\n\n\"It wasn't your fault. Just... be more careful with some of the assholes at the club.\" He wanted to tell her to quit, but she wouldn't, and he'd long ago exhausted his arguments.\n\n\"I meant... after I was home,\" she said quietly.\n\nSo, she remembered. He sighed and wrapped his arm around her, pulling her against his side. He felt her tremble then relax as he rubbed her scalp with his fingertips as he knew she liked.\n\nShe sighed and snuggled in closer to him. They sat like that for a while, watching nothing in particular on the old TV. They got maybe three channels on the antenna, and none of them were very clear, but it was something.\n\nWhen he heard the cranky buzz of the washer, he looked down at his mom and saw she'd fallen asleep. She finally had a peaceful smile on her face. He eased her back on the sofa and tucked the blanket up around her. Then he went downstairs to move the load to the dryer. It would take two or three cycles to dry the clothes, but they couldn't afford to repair or replace the machine.\n\nHe went back upstairs and took a frozen pizza out, and put it in the oven. She'd be hungry when she woke up. Pizza before bed wasn't such a great idea, but he hadn't had time to pick up anything decent on the way home.\n\nHe sat at the kitchen table and frowned with worry as he watched his mother sleep. She'd also be wanting a drink when she woke. He made sure there was no booze in the house, but he had two shifts this weekend, and he couldn't keep an eye on her. He wished he had someone he could rely on to watch over her. Roxy wasn't an option. Roxy's mom Janice worked evenings as a cleaner in the hospital, so she'd be asleep during the day.\n\nThere was nothing he could do. She'd go out and bring some bottles home. If he hid her cash, she'd earn some on her back. He ground his teeth in frustration, then closed his eyes and took some deep breaths. It hurt, but he couldn't help her if she didn't want to be helped.\n\nAll he could do was stay the course as he'd promised her. He'd get that scholarship. He'd get out of this stinking town and make something of himself.\n\nThen he'd get her out too.\n\nChapter 5\n\nMalcolm Harris was an important man. Sadly, he discovered that being the most important man in an unimportant town left him with the same lack of satisfaction he'd struggled with his entire life. It wasn't enough. He craved... more.\n\nActually, what he craved right now were painkillers. The previous evening's entertainment had left him with one doozy of a hangover. That was three nights in a row. He was hosting out-of-town investors who were promising to bring industry in to boost the economy. All he had to do was look the other way as not all of their business was... completely legitimate. Hell, he'd been compromising for years in many ways when he thought about it. It had been a long time since he got what he wanted.\n\nHe opened his eyes and remembered it was Saturday. No real need to get up early. He turned his head and saw the clock read eleven-fifteen. Okay, so not so early.\n\nThen he saw a bottle of aspirin and a glass of water.\n\nA present from Suzanne. Shit. She really was a good woman. He gently eased himself up to sit on the edge of the bed and moaned as the pounding in his head surged. He opened the bottle and swallowed three pills before sipping at the water.\n\nHe felt the pills slowly make their way down his throat and tried not to gag.\n\nSuzanne. Lovely, intelligent, and cold. He wondered where her passion was these days. His passion was almost out of control recently, and his wife wanted less and less to do with him. He needed excitement and wanted her to join in! No, he needed her to. He had a marriage contract with the woman to remain faithful. But, he needed to do things that excited him, and she was definitely not on board with that.\n\nReggie LeBraun, the businessman he'd wined and dined last night, had offered to host him and Suzanne at one of his couples-only resorts in Jamaica. He said they knew how to have a good time on the island and at his club, especially. He let him know this particular club catered to swingers.\n\nFuck! He was almost desperate to go. He wanted to take Suzanne there and get her high on some local weed so they could both get freaky! He'd fuck the black bitches Reggie was flaunting last night, and Suzanne would ride the biggest black cock he could find for her. He could be generous too!\n\nHe sighed, looked down at his boner, and gave it a half-hearted tug. He knew it was all a pipe dream. Suzanne would never agree to go on a holiday to a swinger's resort.\n\nOf course, Reggie did say he had another family-oriented resort, which was just a short taxi ride away from the fun one. They could fly down to stay at that one, and if he were to get her to loosen up, perhaps they could make a side trip to visit. For dinner and dancing... and fucking.\n\nFuck, he was throbbing just thinking about it. Imagining those two hot bitches wrapping their fat lips around his cock while he watched Suzanne moan in ecstasy as a thick Jamaican cock stretched her wet pussy wide.\n\nHe pumped his hand up and down his stiff cock as the image played over and over until he came, grunting with relief. He rested back on the bed, panting with the effort, and his head began to pound again. He closed his eyes to get through the worst of it.\n\nShit. He shouldn't have done that while he had a hangover.\n\nHe finally opened his eyes and looked down. Ugh. He'd made a mess of himself and the sheets.\n\nHe wiped his belly and legs clean with the top sheet then pulled them all off, dumping the quilt on the floor at the end of the bed. Then he dragged the dirty linens into the bathroom to shove them into the laundry basket. Suzanne would put new ones on the bed.\n\nHe needed a shower.\n\nThen he'd work on his plan to convince Suzanne that a vacation in Jamaica was a great way to rekindle their relationship.\n\n-=-\n\nEmily stood before the Customer Service desk of Beckett's, waiting to speak to the clerk who was dealing with a customer on the phone. She was getting impatient as she knew she had to get home soon to begin preparing dinner.\n\nShe looked around and saw the shop was busy with other customers. They did good business, so she took that as a good sign.\n\nFinally, the young woman hung up and turned to face her. \"How may I be of assistance?\"\n\n\"Yes, hello. My name is Emily Manning, and I had a quote done for some landscaping. I'd like to proceed with the work.\"\n\n\"Ah, okay, let me look for the order.\" She turned to her terminal and punched in Emily's name. She frowned. \"I see two quotes here under your name.\"\n\n\"I'd like to proceed with the full one--the more expensive one,\" she corrected herself.\n\n\"Sure, let me see who's available to schedule,\" the clerk said, pulling up a calendar.\n\n\"It has to be the young man who did the quote for me!\" Emily suddenly blurted. She surprised the clerk and herself, for that matter.\n\nThe young woman looked at her then back at the order. \"It says, Raphael Graves. He's not--\" She stopped talking when she caught her boss waving at her as he hustled over to the counter.\n\n\"Ah, Mrs. Manning! Lovely to see you again!\" Jackie said with a smile, slightly out of breath.\n\nEmily smiled at him, as well. \"I'm here to proceed with the full quote.\"\n\nJackie's smile widened again. \"That's wonderful.\"\n\n\"She was just asking to schedule Raphael Graves to do the work,\" the clerk said, holding her boss' eye.\n\nHe paused momentarily. \"Ah, yes, well... we have several excellent landscapers working here--\"\n\n\"It has to be Mr. Graves,\" Emily said firmly. She was trembling at her boldness.\n\n\"Oh? Is there any particular reason?\" Jackie asked carefully. If he heard that Raph had manipulated the customer to make her ask for him, he was going to be out on his ass today.\n\nShe paused to think about that, and it came to her easily. \"He-he immediately understood what I was attempting to create in my backyard and knew how to accentuate my design without diminishing it or overwriting it with his own will. He's an excellent designer.\" Emily gushed then reigned in her enthusiasm.\n\n\"Oh! Well... that's excellent! Let me see what I can do to expedite this then,\" Jackie said as he spun the clerk's monitor around. The calendar showed all available shifts. He wasn't looking for an opening for one of his other landscapers but the equipment's availability as he was going to send Raph out on this job. \"I see we have an opening next Saturday. Does that work for you?\"\n\nEmily flashed a broad smile at the man. \"Yes, that would be perfect!\"\n\nJackie nodded and looked at the clerk. \"Schedule it in. I'll go speak with Raphael to let him know.\"\n\n\"May I-may I speak with him as well?\" Emily asked. She felt a little dizzy for being so uncharacteristically forceful, but she kept her smile on her face.\n\nThe older man looked at her curiously then nodded. \"I'll send him out to speak to you.\"\n\nJackie left the desk and made his way into the stock room. He found Raph at the back, stacking bags of cedar chips onto a cart to bring outside for a customer. Jackie waited until he was done and walked beside him as he pulled the cart towards the side door.\n\n\"Mrs. Manning returned to place the order for her landscaping,\" he said, and Raph looked over at him and nodded as he breathed hard from the effort of pulling the weight. Jackie saw no signs of hesitation or guilt on the young man's face, so he didn't appear to be hiding anything. \"She wants you to do the landscaping.\" That made Raph's eyebrows go up.\n\n\"Me?\" he asked curiously.\n\nThey'd reached the lot outside, and Jackie watched him load the bags gently into the customer's trunk after putting a plastic liner down to protect the interior carpet.\n\nWhen Raph waved at the customer and returned with the cart, Jackie pulled him aside before he could take the next order.\n\n\"I'm going to send you out to do the work next Saturday. You told me you were a good landscaper. Are you? This is an important job. It's up on the hill.\" Jackie watched his eyes.\n\nRaph nodded. \"Yeah... I'm an excellent... landscaper,\" he said between breaths.\n\nJackie relaxed and smiled. \"Great! Mrs. Manning wanted to speak with you, so make it quick, then get back to the order picking.\" He pointed to the inside doors. He got a surprised look for that, but he could only shrug. He felt assured that Raph hadn't manipulated the customer. He seemed like a straight shooter.\n\nStill, he'd keep an eye on him as he did with everyone else.\n\nRaph pushed through the doors and spotted Victor's mom waiting for him by the customer service desk. He walked over. \"Mrs. Manning? You wanted to speak to me?\"\n\n\"Oh!\" she squeaked as he's surprised her. A smile splashed across her face as she turned to look at him. He noticed her eyes moving to his sweaty arms, pumped from all the heavy lifting. Her eyes widened, and she bit her lip as her eyes swung back to his face. He gave her a questioning look, and she smiled vacantly back for a moment, then jolted. \"Yes! I-we're going ahead with the full quote. You said-you said you had the armor stone in stock?\"\n\nHe nodded, wondering where she was going with this.\n\n\"Could I see it?\" she asked timidly.\n\n\"Oh! Uh, sure. Come this way,\" he said and led her to the stock room doors. \"We don't normally let customers back here, but you're with me, and you're confirming your order, so it's okay.\"\n\nShe smiled at him, and he nodded to her.\n\nThey walked over to the large building's right side, where they saw all kinds of stonework. He pointed out the light grey slabs he intended to use.\n\n\"These will be laid out end to end in three rows going up the slope like stairs. We plant the tall grasses at the top and bottom to absorb the water and stabilize the soil, and we have stability on the slope and the soft look you wanted with the grasses,\" he explained.\n\nShe was clasping her hands together and grinning as she pictured these stones on that troublesome spot in her yard. \"It's going to be beautiful!\"\n\nHe smiled in return. \"The slabs are wide enough to lie down on, so when the grass grows in thick enough, you could slip through it and sunbathe on the stones in privacy. Your own little getaway.\"\n\nShe laughed happily at the image and turned her lovely eyes on him.\n\nHe gave her a happy smile as well and saw her eyes were practically sparkling. Then he saw his boss gesturing to him to wrap it up. \"Oh, it looks like I need to get back to filling customer orders. Is that everything?\"\n\nShe looked at him in surprise. \"I thought you were a landscaper?\"\n\nHe didn't want to screw this up, so he smiled at her. \"I am, but I only do that for special customers.\" He saw that she liked that answer. He guided the happy woman back out to the store, said his goodbyes, and rushed back into the stock room.\n\nEmily watched the darkly handsome young man move off, and her eyes automatically and scandalously watched his firm ass in his tight jeans as he walked away. Her pulse was pounding in her chest, and she wasn't sure what was happening to her. When he was no longer in sight, she glanced to the left and saw the young clerk watching her with a knowing smile. She turned and made her way out of the store with as much dignity as she could muster.\n\nOnce outside, the feelings came rushing back. Emily couldn't get over how light she felt and how... young she felt, and how freeing it felt to be... happy. She could feel the grin on her face and relished the feeling of being genuinely happy. She hadn't felt that emotion in so long!\n\nShe was so looking forward to next Saturday!\n\n-=-\n\n\"Jamaica?!?\"\n\nMalcolm saw this was going to be a tougher sell than he expected. They were all sitting down for dinner on the patio enjoying some wine, the lovely meal Suzanne and Sam prepared together, and the great weather. Everyone was relaxed, and Suzanne looked happy. It seemed like the perfect moment for Malcolm to introduce the idea of their getting away.\n\n\"Sure! Sam is old enough to take care of herself here at home for a week, and we haven't had time to unwind in a long time. What do you say? I could make the arrangements, and we could be on a plane tomorrow!\"\n\nSuzanne laughed and shook her head in dismayed disbelief. \"Haven't you heard me talking about what I've been going through at work all week? It's budget time! I can't just up and leave now!\"\n\nHe did recall her mentioning something about that. He backtracked a little. \"Okay, how about next weekend? You need to set aside some time for us.\"\n\nSuzanne was giving him her disappointed look, and he knew he'd done something wrong again. He didn't know what, but he was sure she was going to tell him. He sighed.",
        "\"Working through the budget process takes weeks. I've only been telling you about it for the last fifteen years. And I need to set time aside for us? What about the last three March breaks when Sam and I had to go on trips without you because you couldn't spare the time?\"\n\n\"That's time for you and Sam to bond!\" he argued.\n\n\"NO! We beg you to join us every time, and you always make excuses. So don't talk to me about my not setting time aside for us when you are far guiltier of that! And why the sudden interest in Jamaica?\"\n\n\"I was--we were invited to enjoy a stay at a resort on the island. A really nice resort!\" he responded in a rush as he felt the argument slipping out of control.\n\nShe threw her napkin on the table. \"Belonging to one of your out-of-town guests, no doubt. Once upon a time, you'd recognize how bad that idea is.\" She took a deep breath to collect herself. \"The answer is no. Forget it. Thanks for ruining an otherwise perfectly lovely evening.\" She turned to Sam, who was sharing a sad expression with her. \"My apologies, dear. Dinner was lovely. I'll see you tomorrow morning. I've suddenly developed a headache and will be heading to bed early.\"\n\nWith a final disappointed look at Malcolm, she stood and walked inside with her dishes.\n\nMalcolm felt his daughter's unhappy gaze. It was too much. \"Don't you have homework or Facebook or something?\" he growled.\n\nSam picked up her dishes and followed her mother inside without a word.\n\nHe saw his plan to enjoy the Jamaican club vanish in a puff of smoke. Shit. Suzanne had become such a cold bitch. Sam was following in her mother's footsteps too.\n\nHis need for some sexy excitement was becoming unbearable.\n\nFuck.\n\n-=-\n\nRaph got home after his shift on Sunday feeling pretty good. Sore but good. Jackie seemed to be in a better mood, so he wasn't chewing everyone's ass, and business was good.\n\nHe'd fulfilled so many orders his arms were almost trembling with fatigue. He'd gotten more than his share of exercise today. He wouldn't have another shift until Thursday, so his muscles were getting a break.\n\nHe picked up a piece of meat, some onions, a little basil, some butter, and some potatoes on his way home. He was going to make a simple roast for dinner to surprise Dotty. She'd been moping around the house, and he was getting worried about her again.\n\nThe moment he stepped inside his house, he smelled it. The hairs on the back of his neck stood on end, and he quickly dropped the grocery bags in the kitchen and ran upstairs to check on his mom.\n\nAs he entered the bedroom, the smell of vomit and alcohol hit him in the face, and he grimaced.\n\nThankfully, she'd been able to roll onto her side and hang her head over the side of the bed before she puked. He was sure he was going to come home one day to find she'd choked to death on her own sick.\n\nShe'd gotten the bedsheets and the small throw carpet that was going in the trash. It was also in her hair. He'd have to bathe her. Fuck! She smelled... not so good. He needed a shower, and he'd be doing laundry, so getting his clothes wet wasn't an issue.\n\nFirst, he'd deal with the easy things. He rolled the carpet carefully and took it outside to the garbage bin. Then down to the basement to get a bucket of hot water and the mop. Upstairs to clean the floor, then dump the pail in the basement sink.\n\nBack upstairs to get a towel to wipe up the side of the bed and her hair. That brought some weak moans from Dotty. He picked up his mother, who was only wearing a t-shirt, and carried her into the bathroom, where he set her in front of the toilet just in time for her to puke some more as he held her hair. He got the shower started, and she moaned in protest as she knew what was coming. Hoisting her to her feet, he walked into the shower with her weakly struggling to get away. The spray hit her, and she wailed softly. He got her to stand and rinsed her hair. She was softly crying as he did it, so he grit his teeth and hurried through the process. Her arms hung by her side, and she made no effort to assist him in any way. He pulled the shirt off and grabbed the bar of soap. He hastily scrubbed her body with the soap as she moaned and cooed in her drunken state. Face burning with anger and shame, he quickly washed between her legs and her ass. She gasped and clung weakly to him.\n\nRelieved that was over, he quickly rinsed the soap away and washed her hair. She purred at the feeling of his hands in her hair. Rinsing the shampoo away, he turned off the water and wrapped his mom in an old beach towel before seating her on the toilet.\n\nAssured she wouldn't topple onto the floor, he stepped back behind the curtain and stripped off his wet clothes. He washed and rinsed himself quickly.\n\nWhen he stepped out, he held his clothes in front of himself as he looked for another towel.\n\n\"Do I disgust you?\" Dotty asked in a weak voice.\n\nHe looked at her and saw her eyes were glazed and very sad.\n\n\"No, mom. I'm disappointed,\" he growled.\n\nThat was enough to start the tears, and he cursed himself.\n\nHe was such an ass. \"Sorry, Mom. I didn't mean it. I love you.\"\n\nThere was only one more of the larger towels, so he grabbed it and held it in front of himself as he dropped the clothes into the hamper. He then turned his back on his mother and dried himself as best he could, knowing she was watching him. He didn't resent her for doing it. He knew she was still very drunk. He knew how much he reminded her of--\n\n\"Mateo?\"\n\nHe sighed, then jolted as he felt fingers touching his ass. He pulled away and wrapped the towel around himself.\n\n\"No, mom. It's not Mateo. It's Raph. Your son,\" he said stiffly, and her tears started up again. Fuck!\n\nHe scooped her up and carried her back to her room, but he hadn't changed the sheets yet. He forced back a snarl of frustration and sat her in the chair by the foot of the bed. Her tears were tapering off as she faded. Then he rushed off to get the other set of sheets for her bed but discovered they were in the wash. He went to his room and pulled the sheets off his bed to put on hers. He had to do laundry anyway.\n\nRaph quickly made her bed, then lifted his mother again, laid her down on the bed, and pulled the sheets up over her. She made an odd sound, so he glanced down at her.\n\nShe was pressing the sheets to her nose and inhaling his scent. He stared at her and shook his head. At least she wasn't crying. She was mumbling in her semi-conscious state, but he didn't want to know what she was saying, so he turned and left to get dressed in his room. The ratty shorts and an old t-shirt went back on.\n\nHe went downstairs and put away the groceries. The roast would have to wait until he got home tomorrow night when she got back from the club. He sighed. He still had lots of work to do before he'd be able to enjoy his bed.\n\nHe dropped into a kitchen chair for a moment to just catch his breath. Suddenly it all seemed too much, and he was tempted to get up, walk out the door and never come back. He sat facing the door for long minutes before he stood and carried the laundry basket to the basement.\n\nHe couldn't do that to Dotty. She'd had enough of people abandoning her.\n\nChapter 6\n\nMonday morning found Raph wearing an apron again, but this time he was in a classroom. Helen Aikens' art class, to be precise. He stood before a small table upon which sat a huge block of reddish clay. Arranged around a central podium were other small tables with their own blocks of clay of different sizes, each with a student standing beside them. Sam was standing at the desk to his left and, as promised, she ignored him. Some of the other ladies in the class did not. He did his best to pretend not to notice their eyes on him.\n\nHe tried to hide his nervousness as this was a medium he'd never worked with before, and he didn't want to screw up. The teacher liked him, but he didn't take anything for granted.\n\nSpeaking of the teacher, Helen walked into the room with a woman who was wearing a white silk robe. \"Good morning, people!\" she chirped, and the students returned her greeting. \"We have a special treat this morning. We have a guest with us today. I want to introduce you to a professional model and my friend, Patricia Lockheart.\" They said good morning to her as well, and she smiled and nodded to them in return.\n\nHelen continued. \"We're going to work with clay today, venturing into the realm of the third dimension. Firstly, I want you all to relax. This is an interpretive assignment. You're not going to be graded on your ability to mirror reality. We certainly won't have enough time in this class to complete your piece. I want you to express your perception of the model through the clay. While you're working, I'll be passing amongst you to pick up clues as to your process, and I may ask you to explain your vision so I can see how you're progressing.\" She watched her students' faces, then turned to the model and gestured for her to disrobe. Contrary to expectations, she wasn't nude under the gown but instead wore a two-piece outfit. On top was a thin four-inch-high band of white cloth around her torso covering her small breasts, and on the bottom, a white g-string.\n\nThe woman was in her late twenties and obviously worked out diligently. There was very little fat on her body, and her muscles weren't large, but they were nicely defined. Raph realized she would've been an excellent model for anatomy drawing. Sculpting, though, he was still unsure.\n\nPatricia sat back against a tall stool with her left foot up and resting on a crossbar. She kept her legs together, which made her body seem to curve. Her hands relaxed on her hips in a defiant gesture, and she looked slightly to the right. Then she settled into the pose.\n\n\"Now that our subject is ready, I'd like you to take a moment to study her. See how the light plays across her body. Observe her stance. Think about what that evokes in you. Does it trigger a memory? Does it ignite your passion?\"\n\nSeveral of the students giggled.\n\n\"Yes, yes, get it out of your system,\" Helen sighed with a smile, and she caught the eyes of the gigglers. \"Today, we study life, light, shadow, shape, beauty, and creativity. Inside the block of clay before you is the image forming in your minds. You've only to remove that which isn't part of the image. Begin!\"\n\nRaph shared a small smile with the teacher and looked towards the model. The first thing that struck him was the sinuous lines running from her neck, over her shoulders, racing outwards and around the tight bend of her elbows to return to the curve of her hips and legs. She... flowed.\n\nImage set in his mind, he reached out and began pulling chunks of the clay away from the tall block. It was harder than he thought, and he had to use a fair amount of strength to do it. He let his mind roam over the contours of the image, following the lines. His hands began to move faster to clear the excess away to get to the lines trapped within the block. The unused clay fell unseen to the floor at his feet. He stopped when he had roughly the shape he was looking for. He found he was panting from the effort of working with the dense material.\n\nHe began squeezing and pressing his strong fingers across and into the clay to chase the lines he saw within it. Fingers, palms, wrists, and even his forearms were used to smooth the rough surface until he could see the lines emerging. His hands began to move slower with more deliberate motions to bring out the sleek curves of her torso. Pressing his fingertips against the smooth expanses he'd created, he added the fine detail lines of the model's defined musculature. He almost had it.\n\nThe bell rang to announce lunchtime, jolting Raph back to the now. He blinked and looked around the room and saw many of the other students were watching him with wide eyes. He glanced at the teacher, who had tears of joy in her eyes, and held a hand over her smiling mouth. She began clapping enthusiastically, and a few others joined in, almost including Sam, who caught herself abruptly when he glanced in her direction. She turned away and began preparing to leave.\n\n\"Oh my, Raphael! You've discovered untapped potential!\" Helen gushed.\n\n\"If he'd found the tools in the table first, he could've done it a lot faster and stayed clean,\" Stephie Dulane noted in a snide tone and chuckled at her cleverness. The big-haired brunette was co-captain of the cheerleading squad and Sam's chief rival. She was smiling at Sam to share the joke with her, and Sam had to smile and nod to avoid suspicion.\n\n\"Ms. Dulane, what we've all just witnessed was raw artistic passion! It needs no tools!\" Mrs. Aikens chastised her and gave Sam a disapproving look as well.\n\nRaph frowned as he wasn't happy at all about the attention he was getting. Stephie was right about him being dirty. The skin on his hands, arms, and face felt tight from clay residue. He'd have another night of laundry duty.\n\nThe students began filing out of the room as they handed their aprons in and gathered their books. Some moved to get a closer look at Raph's work before they left. A bold few took pics with their cell phones.\n\nPatricia walked down from the podium to take a look at what she'd inspired. The statue was of her torso, displaying the sleek and sensual curves from her neck to her knees. She smiled in appreciation. \"That's really good!\" she gushed.\n\nRaph gave her a distracted nod then noticed what was missing. He pressed the tip of his pinky finger into the sculpture and gently stroked the result to contour it. Instant belly button and it was a pretty close match for her own. He gave it a little nod and stepped back.\n\nThe room emptied except for Helen, Patricia, and Raph. \"Could I take a picture of you two standing on either side of the piece?\" Helen asked, and they nodded.\n\nPatricia copied her pose, and Raph crossed his arms in front of his chest and tried to smile for the camera. Helen got her pictures and smiled as she reviewed them.\n\n\"I should go clean up. Thank you for the experience. It was... interesting,\" Raph said quietly, still a little disturbed at having zoned out so completely in the classroom. He looked to the almost nude woman standing before him. \"It was nice to meet you.\" She smiled and gave him a nod.\n\nHelen walked up and touched his arm. \"The art will be on display here in the school until the end of the term. Then you can take it home.\"\n\n\"I don't want it. I can't take it home,\" Raph said bluntly. He looked at Patricia. \"Ms. Lockheart can have it if she wants it.\" The woman in question nodded enthusiastically. \"I'd feel better if she took it right away. The less attention I get, the better it is for everyone. There's also a better than average chance someone will damage it if it remains at the school,\" he said with a frown.\n\nHelen went to protest, then nodded sadly. Patricia looked between them in surprise, then mirrored Helen's sad look.\n\n\"I have to go if I'm going to get cleaned up before my next class. Thanks again,\" Raph said as he pulled off the apron, grabbed his books, and headed out.\n\nHe made his way to his locker and dropped off his books. He carefully took off his over-shirt and left it in the locker so he could wash up in the bathroom without getting the shirt wet.\n\nAs he locked up, he heard someone clearing their throat behind him. He turned, and Mr. McConnell was standing outside his classroom door, smirking at him. He was flanked by four members of his football team. They were all grinning smugly.\n\n\"I hear you've gone completely queer. It makes sense now why you won't join any of the teams. Look at you! Covered in shit!\" the teacher said with a laugh, and his players joined in.\n\n\"If it makes you feel better to think that, sure,\" Raph said and walked away.\n\n\"Hah! I knew it!\" the teacher barked out behind him. \"Nothing but a faggot!\"\n\nAs he reached the bathroom entrance, Ms. Lockheart rounded the corner and called out to him. He stopped and smiled as he admired her figure as she approached. She'd slipped on some shorts, a short top that left her hard stomach exposed, and some strappy pumps that accentuated her toned legs.\n\n\"I wanted to thank you again for that amazing art piece before I left. I'm going to have a bronze made from it,\" she said with an excited look.\n\n\"You're welcome. I hope it turns out,\" he said.\n\n\"Listen, if you ever wanted to do another piece, I'd be willing to model for you again, no charge. With less clothing as well,\" she said with a cheeky grin.\n\nHe looked into her eyes and saw she was serious. He noticed she had pretty hazel eyes. He nodded politely, then she was suddenly pressing her body against him, and her mouth was on his. Damn! She was a good kisser, but it was a little jarring to feel hard muscles instead of a soft female form. Not bad, just different.\n\nAs quickly as she kissed him, she pulled back and grinned as she walked backward down the hall towards the exit. He felt a painful pinch and absent-mindedly adjusted himself in his pants to relieve the pressure. She grinned happily, biting her lower lip, then turned and rushed away. She squeaked in surprise, then giggled at the dumbfounded looks on the teacher and the four young men with him as she quickly passed. They saw two clay handprints on the ass of her shorts as she hustled away.\n\nMr. McConnell turned to look back at Raph, who finally noticed his audience and shrugged. He stepped inside the bathroom. He had clay to wash off.\n\n-=-\n\nSam felt terrible for joining in on ridiculing Raphael in the art class. Truth be told, she'd been in awe of the piece he'd created and tingled as she thought back on how intense he'd been while he worked on it. She agreed with Mrs. Aikens. They saw his raw passion, and it was thrilling. She trembled a bit.\n\n\"Hey, Sugarlips!\"\n\nSam squeaked and jumped as Victor's arms went around her from behind. He pulled her tight against his hard muscles and rubbed her ass with his groin. A thrill went through her body, and she almost moaned, but she got control of herself and pushed his arms away to spin out of his grip.\n\n\"What are you doing?!?\" she hissed.\n\n\"What the hell? I was just hugging my girl!\" Victor growled indignantly.\n\n\"Humping. That wasn't hugging!\"\n\nVictor gave her a crooked smile and shrugged. \"What can I say? You bring out my passionate side!\"\n\nSam's mind flashed to an image of Raph's dark eyes intense with concentration and his strong hands caressing the clay into the sensuous shape of the model's torso. She bit her lip as she recalled what real passion looked like.\n\nVictor misinterpreted her gesture and moved to pull her against him again.\n\n\"No!\" she said, pushing his hands away and looking around at the other students in the hall. She caught a few watching them.\n\nHe frowned and leaned back to look at her. \"What is with you? Acting all hot then cold, then hot and back to cold. Such a tease!\"\n\nShe blinked at him, and then her brows came down in anger. \"I'm not a tease! I just don't like being pawed in public!\"\n\nHe leaned in to whisper to her. \"Then how about we go somewhere private?\"\n\nHer body tingled with the idea of being with Victor in her bedroom or even his, but she knew that would screw up everything! No, she had to stick to the plan. Even when her body wanted to enjoy the bliss right now, she had to think of her future. She sighed and saw him deflate as he realized she was going to refuse him once more.\n\n\"I have a class now, and later I need to study for this week's midterms,\" she explained quietly.\n\n\"I'm getting the most intense case of blue balls!\" he groaned.\n\nShe snorted and grinned at him. \"I never said you couldn't touch yourself.\"\n\nVictor's jaw dropped at her cheeky comment, and he burst into a loud laugh. She giggled as she grabbed her books for her next class, locked the locker, and skipped away as he watched her leave.",
        "Victor wasn't kidding when he said he was aching for a little sexy time with Sam. She was such a hot little bitch, and he knew she craved his body. He'd felt her trembling when he held her tight. He'd been working on her for weeks, and all he'd been able to get from her were some very promising kisses. He knew sex with her was going to be amazing, but he just had to get past her defenses!\n\nHe'd waited a long time, but his patience was beginning to run out.\n\nHe shook his head, watching that delicious ass wiggle as she moved away. He would have it. Oh yes.\n\n-=-\n\nThe final bell for the day rang, and Raph got his stuff from his locker and made his way to the bus stop. He knew today was going to be his second tutoring session with Sam. He didn't want to think of it as anything but another job to do. A way to make some extra money to fund his escape, but his stomach had other ideas. Inside it felt like... butterflies.\n\nShit. This wasn't a good idea.\n\nTo emphasize how bad it was, he saw Victor and his goons drive by in their pimped-out Civic. Luckily it seemed like they hadn't looked in his direction, so he was good. He relaxed a little... except for the butterflies.\n\nThe bus arrived, and he moved to the back once more. This time two of the girls who'd been eyeing him the previous day worked up the nerve to move back to talk to him.\n\n\"Raphael? We're in your art class? I'm Linda, and this is Sharon?\"\n\nHe watched them without saying anything, even though everything coming out of Linda's mouth sounded like a question. He thought he recalled seeing them at the tables across the model's podium from his.\n\n\"We just wanted to say we thought your art was amazing!\" Sharon gushed, drawing an immediate and emphatic nod from her friend, who was staring at him and suddenly leaned in a little closer.\n\n\"Is it going to be displayed in the cabinet outside Mrs. Aikens' classroom?\" Linda asked. Finally, a real question.\n\nRaph wanted them to go away. He couldn't ignore them as they'd likely sick their boyfriends on him for being rude. Instead, he'd keep his answers short. \"No. I gave it to the model.\"\n\nEyes widened, and they grinned at him. He had no idea what titillating thoughts his comment had generated in their minds, so he just nodded and turned his face to look out the window. They hesitated, then moved back to their friends to share the news. Whatever news that would become. He soon heard a burst of giggles but put that out of his mind too.\n\nThe ride seemed longer than before, but it gave him time to work out what he would say to Sam to end the tutoring sessions. He'd want to be paid for the first session before he canceled, of course.\n\n\"Bye, Raphael!\"\n\nHe looked to the back doors, where he saw Linda and Sharon smiling back at him. He nodded to them, and they giggled as they left the bus. Shit. He hoped that wouldn't lead to trouble for him.\n\nHis eyes jumped to the other passengers on the bus as he suddenly recalled Sam telling him how she followed him on the bus last week. He saw the friends of the two girls that just left, and they were glancing back towards him. His eyes moved on, but he didn't see the blonde in question. He'd been on the first bus after school, so he supposed she'd be twenty minutes late today. That was fine with him. It gave him more time to think of a way to let her down easy and avoid the inevitable confrontation with Victor.\n\nHe finally exited the bus and made his way up the steps of the library. His stomach had finally settled down as he'd come to terms with canceling the tutoring and getting back to his regular life. The money was nice, but the risk wasn't worth it.\n\nHe went inside and nodded to the librarian as he passed by her desk. His eyes picked up the presence of a sharply dressed, blonde woman with a braided ponytail sitting at one of the tables in the main reading area. She was very attractive and looked... familiar for some reason. Then he spotted Sam sitting next to her and realized the woman had to be her mother!\n\nWhat the hell? He slowed his approach, and Sam spotted him. Her eyes glanced nervously towards her mother as she took in his confused and guarded expression.\n\nThe woman noticed him, and a professional smile appeared on her full lips as she stood and stepped towards him to close the gap. Sam jumped to her feet to catch up to her mother.\n\n\"You must be Raphael Graves,\" the woman said, holding out a hand.\n\nHe was still feeling defensive as he accepted her hand in his and shook it. The woman's skin was so soft!\n\n\"I'm Suzanne Harris, Sam's mother. I just wanted to meet the young man who was tutoring my daughter.\"\n\nHe nodded, and his eyes slipped to Sam, who appeared at her mother's elbow.\n\n\"Okay, you've met him, Mom. We have a lot of work to do, so...\" Sam said with an uneasy tone.\n\nSuzanne gave her daughter an annoyed glance and turned back to Raph as she released his hand. \"I understand you have a job after school as well? Where do you work?\"\n\nRaph was definitely beginning to feel like he'd been ambushed. \"I work at Beckett's Landscaping and Garden Center,\" he said hesitantly. At her interested nod, he found himself continuing. \"Stock clerk, but I'm doing landscaping now as well.\" His eyes went back to Sam. He was amazed by how much Suzanne looked like her daughter. Truly lovely.\n\n\"Mom! You said you just wanted to meet him.\"\n\n\"Sam, I'm just finding out a little about the young man I'm leaving my daughter with downtown late at night. This isn't an unreasonable request.\" Suzanne said to her daughter, whose face was beginning to show a deep blush.\n\nRaph relaxed a little as he now understood what was happening. It was a mom thing.\n\nNot that Dotty did it for him anymore.\n\nSuzanne turned back to the surprisingly good-looking young man before her. His background had to include some Mediterranean blood based on his lovely skin tone. Tall, dark, and very handsome. Sam had failed to mention this little, or perhaps, significant detail. Maybe Victor had reason to be worried about Sam spending time with Raphael.\n\nShe tried to get her mind back on track. \"I understand you're doing very well in your classes. What are your plans for after graduation?\"\n\n\"MOM!\"\n\n\"Shhh!\" the librarian scolded from the main desk with a scowl.\n\nSuzanne caught Raph's surprised smile as he looked at Sam's embarrassed face.\n\n\"It's okay,\" he said to Sam then faced Suzanne. \"If I get the scholarship I'm after, I'm going to university to become a doctor.\"\n\nSuzanne smiled widely, and Raph's eyes widened in response. He glanced between the two women, and she knew he was comparing their similarities. That made her feel... very flattered.\n\n\"A doctor! Any particular field?\" Suzanne asked happily. Sam was also watching him, waiting to hear his answer.\n\n\"I want to be a surgeon, but I want to work in the ER as well,\" he said earnestly.\n\nSuzanne nodded, then tilted her head a little to give him a questioning look. \"The ER isn't an easy environment to work in.\"\n\nHe sighed. \"Yeah, I know.\"\n\nSuzanne's eyebrows went up. \"You've personal experience with visiting the ER?\"\n\nRaph's expression closed up, and he looked uncomfortable. \"Yeah,\" he managed to say.\n\nSam touched her mother's arm, and Suzanne nodded. She could see the topic was a tender spot for him. She felt better now that she'd met Raphael. She was still planning on picking her daughter up. She'd perhaps have another opportunity to pick his brain once more. She'd offer him a lift home.\n\n\"I understand Sam owes you some money for her last session? One-hundred and fifty dollars was it?\" Suzanne asked. \"Can I write you a check?\"\n\nRaph frowned. \"Ca--\" he began but stopped abruptly. \"Uh, sure.\"\n\nSuzanne smiled and nodded. \"I'll write you a check for the previous session and tonight's when I return to pick up Sam. Would that be all right?\"\n\nRaph nodded, and Suzanne turned to kiss her daughter on the cheek.\n\n\"I'll see you two later,\" Suzanne said and quickly walked away to head back to the hospital.\n\nAs she walked down the steps, she smiled to herself. A very handsome young man, indeed.\n\nBack in the library, Raph cursed to himself as he realized he'd just promised to give Sam another tutoring session. Shit. It was too late to back out now. He sighed and made his way towards the study booths at the back of the library.\n\nHe glanced back and caught Sam watching his ass. She looked him in the eye, and her face burned with embarrassment. He looked away, unable to deal with that at the moment.\n\nRaph picked the same study pod as last time and sat down in the chair. He noticed the afternoon light was pouring through the stained-glass windows again and quickly looked up at Sam to see it shine through her golden hair. It was her turn to catch him staring, and she smiled at his wide-eyed look of wonder. He swallowed and looked away, fumbling to get his calculus textbook out. He seemed a little flustered.\n\n\"Are you ready?\" he said sternly.\n\nShe slipped into the chair next to him and got her books out. She seemed to pick up that he was a little unsettled by their closeness as she eased back to give him more space.\n\nHe felt himself relax slightly. \"We'll pick up where we left off. Did you go over the work we've already covered on the weekend?\" he asked.\n\n\"Yes,\" she said, and he nodded.\n\n\"You're comfortable with the material?\"\n\n\"Yes, it makes sense to me now,\" she said with a wide smile, and he struggled to not look at her.\n\nHe cleared his throat and opened his text and his notes to the next section. \"Okay, let's begin.\"\n\nThey powered through the work and hit a snag a few pages in as Sam seemed to be experiencing a mental block with a concept. He was becoming frustrated, and he took a few deep breaths to calm himself. He noted that she was biting her lip, and he could almost hear her heartbeat begin to thud in her chest.\n\nRaph rolled the problem around in his mind. He could see she was stuck, so he examined the issue from a different perspective. He began again, but this time, he explained the process step by step, stopping to get her to explain the significance of each step. When she got one wrong, Raph realized he'd found the source of her block. He cleared her misconception and continued until he finished the question completely. He risked a glance over and saw she was trembling.\n\n\"What's wrong?\" he asked in concern.\n\nShe looked at him, and he saw tears pooling in her long lashes, and his chest tightened. Then she smiled at him. \"I thought--I thought maybe the early sections were all I was going to be capable of doing. I know they get progressively more complex, and I thought, that's it. I've reached my limit.\" She looked into his eyes. \"Then you pointed out the simple mistake I was making, and suddenly I can feel it all falling into place. I-I can't tell you what a relief it is!\"\n\nHe looked like he was going to climb over his chair to escape if she began to cry. Then his expression darkened. \"You can't do that,\" he said gruffly.\n\nShe looked at him in surprise as she struggled to control her breathing.\n\nHe looked away, but he seemed to be trembling, just a little. \"No emotional outbursts. I'm your tutor, not your therapist. I don't have time for this.\"\n\nShe was a little taken aback at his abruptness. \"I-I'm sorry.\" She held her breath as if terrified that he'd give up on her.\n\nHe took a slow but shaky breath, then opened the textbook. \"Let's continue.\"\n\nSam watched him cautiously but paid close attention to what he said as he took her through the next section. He was relieved to find she comprehended the concepts, and she thanked him for being so diligent in ensuring she fully understood before moving on.\n\nThey continued until they heard the chime, and the lights flickered, indicating it was time to go.\n\nRaph glanced up with a look of annoyance. They only had three more pages to finish this section. He pushed back with a sigh. There was nothing he could do about it tonight. He looked over at Sam, and she quickly hid her smile.\n\n\"What?\" he asked with a frown.\n\n\"Nothing!\" she said, fighting the smile that threatened to escape.\n\nHe snorted, and she couldn't contain her happiness any longer. Raph's eyes widened, and his mouth began to smile in return as she was so dazzlingly beautiful when she smiled. He saw her mother in that smile. He could see a future--\n\nNo! Suddenly, he had to be elsewhere. Anywhere but next to this dangerous beauty. He hurriedly stuffed his books into his bag and pushed his chair out to leave.\n\n\"Raphael?\" she gasped at his scramble to leave. She placed a hand on his arm and felt his body lock up then vibrate with tension.\n\n\"No! Don't,\" he choked out through his tight throat.\n\nSam looked confused by his behavior but also worried she'd messed up. \"Tomorrow?\" she asked, gazing hopefully into his eyes.\n\nRaph wanted to tell her he was done. That she'd be good now, but he knew the next parts were the trickiest. He felt himself being drawn towards her as her eyes held his.\n\nHis chair fell back as he lurched to his feet. He turned away.\n\n\"Raphael!\" she gasped.\n\nHis back to her, he paused and turned his head slightly to the side. \"Tomorrow.\"\n\nHe found himself walking quickly towards the exit. He needed to get space between them. She was going to ruin everything! He should've told her they were done. Fuck! He should have said no when she first asked. She was too dangerous! She--\n\n\"EEP!\"\n\nRaph jarred to a stop as he pushed through the door and bumped chest to chest with Suzanne. He immediately reached out to catch her arms to keep her from falling, dropping his bag in the process.\n\n\"Sorry! Are you okay?\" he gasped.\n\nShe blinked at him. \"Yes, I'm fine? What happened? You looked like you were running from something! Is Sam okay?\"\n\nHe released her arms and bent to pick up his bag as his face heated up. \"She's beau-- Good! I have to go.\" His face looked hot enough to ignite.\n\nIf Suzanne caught his slip, she kept her reaction from her face. Instead, she glanced over Raph's shoulder and saw Sam rapidly approaching with a worried expression. \"I thought we could drive you home--\"\n\n\"No! I mean, that's very kind of you... but it wouldn't be a good idea.\" Raph said, wanting to leave, but she was in the doorway, and she wasn't moving.\n\n\"Mom?\"\n\nRaph's nerves flared when he heard Sam's voice right behind him. \"Excuse me,\" he said as he gently moved Suzanne to the side as he squeezed himself around her, and rushed out the outer door to hustle down the steps.\n\nHe sucked in a breath of fresh air. He had to get home.\n\nSuzanne watched him go with a look of surprise on her face. He was... strong! She saw him run across the street, and moments later, the bus arrived, and he boarded it. He sat and glanced back once as the bus pulled away.\n\n\"Mom?\n\nSuzanne turned to look at her daughter. \"What happened tonight? Why was he running away from you?\"\n\nSam shook her head unhappily, not wanting to talk about it.\n\n\"Did he finish the tutoring?\" the mother asked.\n\nSam shook her head but answered to stop her mother's look of outrage. \"We have two more sessions. Tomorrow and Wednesday.\"\n\nSuzanne felt her anger quickly fade as her confusion returned. \"Did you say something to upset him? Did he try something?\" she suddenly gasped, her temper flaring once more.\n\n\"NO! No, he didn't try anything. He's been... a perfect gentleman,\" she finished softly.\n\nSuzanne began to smile then looked at her daughter in dismay. \"I didn't give him the check!\"\n\nSam's anger flared. \"You have to pay him tomorrow! I need Raphael! T-to finish the tutoring so I can pull my grade up,\" she snapped.\n\nSuzanne's eyebrows went up at her daughter's tone. \"Excuse me?\"\n\nSam huffed as she realized she was overreacting. \"I'm sorry. I-I'm just a little... unsettled.\"\n\nThe Librarian was arriving to usher them out, so Suzanne gently drew her daughter out the doors, and they made their way to her car. Once inside, she turned to the young woman. \"Now, tell me what happened. Just start at the beginning.\"\n\nSam looked at her mom and sighed. \"It must be Raphael worrying about someone at school finding out.\"\n\n\"Someone meaning Victor,\" her mom insisted.\n\nSam looked at her and sighed. \"Yes, probably.\" She frowned. \"It's weird. It's like he's trying to be invisible at school.\"\n\nSuzanne just shook her head, unable to fathom what it might be like for the young man. What might cause him to act like that? She started the car.\n\n\"Why do you think he said it wasn't a good idea for us to drive him home?\" Suzanne asked as she pulled away from the curb.\n\nSam looked at her mother. \"I don't know. I don't even know where he lives.\"\n\nShe realized she really wanted to know more about him, and that desire confused her. He was just a means to an end.\n\nWasn't he?\n\n-=-\n\nRaph made his way up the street, taking deep breaths, his rage simmering close to the surface.\n\nWhy was he stuck in this situation? He was almost free of this place, and... she had to complicate things! He tried hard to not think about Sam. She... confused his head.\n\nHe strode around the final corner leading up to his townhouse and into a group of three men conducting a transaction. In a flash, Raph took in two college boys from the next town over, looking to score some drugs and a rough-looking dealer he hadn't seen before.\n\n\"The FUCK--\" the dealer yelped, eyes widening as he saw the grim expression on Raph's face. His hand went into his pocket to grab the ancient .38 hidden there.\n\n\"JIMMY! GUN!\" screamed one of the buyers as he pushed his friend away to the left. Twitching at the scream, the dealer squeezed the gun's trigger, blowing a hole in his pocket and ripping through the edge of Jimmy's letterman jacket.\n\nRaph's fist crushed the dealer's nose and snapped the man's head back. He crumpled to the ground before he could fire again. Raph stomped the side of the man's knee with a loud crack. His rage was unleashed, and it was taking no prisoners.\n\nBefore the two buyers could relax, the first took a hard left to the gut, and Jimmy got a right to the jaw. They both hit the ground as Raph stood above them, roaring at them to leave. He kicked them a few times for good measure until they managed to get to their feet and hobble away as quickly as they could.\n\nHe heard the crack of another shot and felt a brief searing pain across his right thigh. He rushed back to the prone man, and he stomped his right arm, breaking the bones, and the gun tumbled free. The man began to scream, so Raph kicked him in the jaw. There was a sickening crack, and it dropped to hang at a disturbing angle.\n\nThe sight of the gun turned Raph's hot rage icy cold. He looked down at the ugly, snub-nosed weapon. It was dirty and rusty, and its handle was wrapped with some dirty cloth tape. Regardless of its age and condition, it still worked. He'd almost been killed with it tonight.\n\nFor a moment, Raph contemplated using it to end the piece of shit who'd tried to kill him. He shook with the need to do it, but a cool, rational voice in his mind made him pause.\n\nDotty couldn't forgive murder.\n\nThat pulled him back from the edge.\n\nNow that his mind was his again, Raph used a discarded potato chip bag to pick up the weapon. He didn't want to touch it or leave prints on it. He nudged the release button, and the cylinder folded out. He dumped the bullets and kicked them into the sewer grate. Snapping the cylinder back into place with a flick of his wrist, he carried it back to the man who was looking up at him with hate in his eyes. Raph saw the next attack coming and stepped out of range of the sloppy stab. Another stomp broke the wrist holding the knife, and a wet scream came from the dealer's broken jaw.\n\nRaph looked closer at the thug. He didn't recognize him or recall seeing him before -- just another piece of shit moving into his neighborhood to spread the disease. His rage spiked again."
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "romance",
        "oral sex",
        "incest",
        "anal",
        "non-consensual",
        "romantic",
        "non-con",
        "noncon"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/nightingale-1"
}