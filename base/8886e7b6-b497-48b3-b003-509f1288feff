{
    "title": "The Office Hottie Ch. 03",
    "pages": [
        "I woke up the next morning feeling sore but strangely refreshed, especially after a late night of deep thoughts and sorting through a ton of feelings. I stretched, still naked in bed, and ran my hands over my body, remembering last night's pleasure and wincing as they ran over my abused nipples. Kisa, my kitty, was still in bed and chirped awake when I petted her. She closed her eyes as I stroked her sleek black fur, then yawned and resumed her sleeping. \n\nI did a quick rinse in the shower then flossed and brushed. A padded bra seemed to help my mistreated nipples take a break, a pair of light panties and a cotton summer dress made my clitoris easier to bear. I usually don't wear any hose and I settled for a pair of tan sandals. I added a light bit of make-up and noted the fur growing between my eyebrows. I'm really starting to look like one of the neanderthals at work, I smiled to myself as I plucked a few hairs. A private joke between us girls in the office, all the guys grunt too much and are sporting way too much hair. \n\nAlthough I promised myself to take the day off sexually, on the way out the door I grabbed an old hand towel and a fresh box of tissues to stash in my car for future use. Traffic was blessfully light this morning and I got into the office with a few minutes to spare. I was really apprehensive about coming in today, almost feeling guilty. As far as anyone knew, especially Kelly, nothing was different, I hadn't done anything wrong and no one knew about my self entertainment last night. But still, I wasn't sure how I'd react around her. \n\nLuckily for me, Kelly was stuck in meetings and training all day and I never really saw her. I felt a relief, that gave me the rest of the day to becoming comfortable in the office with my little secret, and it also gave my clit and boobs a rest, too. \n\nThe rest of the day went pretty smooth. On the way home I stopped by a fast food place for some dinner and to replenish my stash of napkins in my car. Always on the lookout for naughty locations these days I remembered the local park nearby. I drove through it's parking lot and was pleasantly reminded; I'd been in the park a number of times, and even had played a few seasons of softball there, but I never really thought about it as my personal play area before. The park has a couple of softball diamonds, several picnic tables, a nice pavilion with restrooms, a large maintained grassy field, trees all over the place and a nice play area for the kids.\n\nJust down the street is a nature sanctuary that has some open fields and a couple of nature trails. I've walked them before and I know there will be some private or semi-private areas that'd be perfect for my needs. \n\nMy pussy started to tingle with the naughty thought of it. \"Down girl!\", I thought to myself. \"You're taking the day off to recuperate.\" Tomorrow or this weekend will be a different story, I smiled lustfully. \n\nThe next morning I was feeling much better. I could wear my thin bras again and a pair of jeans without have to worry about any sensitive chafing. I chose a pretty, flowery blouse that buttoned up and a pair of matching blue shoes. Breakfast was simple and I was quickly out the door with a travel mug of coffee. \n\nKelly was in today and looking fine as usual. I passed her in the break room, I braved up and chatted a bit with her while getting coffee. It was difficult to not undress her with my eyes, but she's a sweetheart and very kind. It went well, I felt relieved and very comfortable around her. \n\nShe wore a button up white blouse with the hint of a white bra underneath and a nice pair of black slacks that accented her sweet little ass nicely, plus a pair of sleek black shoes with a little bit of heel. She always dresses nice, but quite tame compared to the other day. I went back to my desk to start my day and get some work done. \n\nKelly's desk is around the corner from mine so I don't get to see her that often, but she sometimes does have a need to work with the local tribe of cavemen in my area. This morning she spent a fair amount of time with the lead caveman, Ogg. His desk is across from mine and while she was getting some design information for a project from him I had a good view of her nice ass. Often she would position herself so she was blocking Ogg and I could stare at her butt without fear of being seen by him. I'd look around to see if anyone else was looking in my direction and I'd sneak a gaze at her ass thinking naughty thoughts.\n\nOccasionally she'd bend over and I could just imagine myself squatting behind her with my tongue in her pussy. I felt myself getting aroused and tried to calm down, this office with all the Neanderthals roaming around was not a good place to be horny, especially for a pretty, single girl. Bi or not. \n\nThen I suddenly had a naughty thought, why not? I felt I could control myself and why not enjoy the live view of Kelly's behind and tease myself. I looked around, saw no one was looking and put a couple fingers under my crotch, leaning forward to put pressure on my clitoris. \n\nMmmmm... it felt good, stimulating my clit while viewing Kelly's sweet ass for real instead of in my mind. I looked around to make sure the coast was clear and rocked a little bit on my fingers watching her ass, fantasizing about what I'd Iike to do to it. She straightened up and I pulled my hand away from my crotch just as she left to go back to her desk. Damn, too soon but that was really nice. \n\nI was a little horny by then and feeling really naughty. Every once in a while I'd look around while I worked and if no one was looking I'd sneak a squeeze on one of my boobs or try and pinch a nipple. I fingered my crotch a couple times but couldn't keep my hand there without being obvious and I needed both hands to get some work done. I still wanted to tease myself. I looked around for something to use and spotted the stapler sitting in my desk thinking that should do nicely!\n\nI placed it under my crotch and was able to position myself on my chair in such a way that allowed me to control how much pressure I wanted to put on my clit. Just then Kelly came back to speak with Ogg, it was so nice to watch her and tease my clit hands free at the same time. She left which disappointed me but I saw her heading to the break room. I needed a close up view before I started teasing myself again. With my pussy tingling, I put the stapler back, grabbed my coffee cup and headed for the break room. \n\nKelly has just started a pot of coffee brewing and we chatted a bit while waiting for it to finish. The more we talked the more comfortable I got around her, even when staring into those pretty doe-brown eyes of hers. I made her laugh and she touched my arm, all was well. I was definitely feeling lusty about her, especially after the electric feeling of her innocent touch, but nothing more. I was in lust, I just wanted to bang this chick. \n\nShe turned and I realized she had a button undone on her blouse which has blossomed open allowing me to see way more than she would normally allow. The curve of her ample breast and the lacy white bra looked scrumptious, it would be so easy to slip a hand in and fondle her. I contemplated not saying anything so I could feast on the eye candy down her blouse but I couldn't. Besides, it's my eye candy, no one else's. \n\n\"You might want to fix that, Sweetie,\" I said pointing at her boobs. \n\nShe looked down at her front \"Oh, crap,\" she replied as she buttoned it up. \"No wonder Ogg was staring at me. Thanks.\"\n\n\"At least I got a look too,\" I winked at her in a mocking voice. \n\n\"Oh, you,\" she smiled and playfully slapped my arm before she left for her desk. \n\nDamn, I didn't think she'd pick up on it, but I was hopeful. I wasn't sure if I should pursue her or not. I'd flipped sexual innuendos at her in the past, always in a joking manner but she'd rarely return any and she'd often just laugh it off. It was difficult to tell how she'd react if she knew I was attracted to her. Being married is one thing but if she was bi-curious it might be a different matter. Either way I'd have to be careful with her, and around the office. One day at a time, right?\n\nI wandered back to my desk with a fresh cup of coffee and the memory of her lace enclosed boobs ingrained in my mind, sat down and looking around at my co-workers and seeing the coast was clear I replaced the stapler under my crotch. Rocking on it made it easy to put my pussy back in motion. I scooted closer to my desk so someone passing by wouldn't be able to see what I was sitting on. \n\nSo nice, so naughty, to be stimulating myself while working, all these people around not knowing I was getting hornier by the minute, even if most of them were the cavemen. It was getting difficult to concentrate on my work and the stapler was making me a little sore. I put it back on the desk and looked around for something else to use. There wasn't much else on the desk that would have been easy to use and easy on my clit, rummaging through the drawers didn't turn up anything either. A bit disappointing and I tried to think of something I could bring from home, maybe even break down and finally buy a toy. Then I remembered we had a stash of racquet balls left over from our tournament days in the supply room. \n\nSure enough, I found them right away and took one out of the tube. It seemed to be the right size and had the resiliency needed, my pussy tingled in anticipation. Once back at my desk I looked around to make sure no one was watching and stuck it under my crotch. It popped out a couple times until I figured out a good position on the chair. Oh, it was so nice, the feeling of the soft pressure it put on my clit. Not the best setup and I had to position myself just right in my chair but certainly much better than the stapler. I rocked on it thinking of Kelly and a couple other of the girls in the office. \n\nThe feeling was really good, just the right amount of pressure as I slowly rocked on it. Mmmm... I really liked the pleasurable feeling it was giving me and contemplated wearing a dress on Monday instead of jeans. The thought of the ball stimulating myself with just my panties and not the thick fabric of my jeans really made my pussy tingle. I found I could slowly roll my hips without being as obvious with my whole body; rotate forward to put pressure on, hold it, release, and repeat. \n\nI looked around to see if anyone was watching. An orgasm was coming, could I do it? Could I cum at my desk? Was I brave enough? I looked around again, I was horny as hell with my naughtiness, and felt the orgasm coming really quick. I stopped rocking and looked around, Ogg was busy on the telephone and his computer and the other guys were busy with their work. \n\nMy mind was saying no, but my pussy was saying go! I started rocking again being watchful while pretending I was working. A couple of guys went walking by and I continued to rock, feeling the physical and emotional pleasure as I teased my pussy, sitting at my desk, surrounded by my co-workers, the office noise, and no one around me was aware I was masturbating. The eroticness was intense!\n\nI love edging my orgasms. I heard about it a few months ago and had read up on it. I liked the idea, it seemed easy to do and it was just a matter of working it, concentrating. I liked that it didn't requiring any toys or anything to buy, just some discipline to not rush. It extends the pleasure and makes my orgasms so much more stronger. I usually have very intense orgasms to begin with and edging them makes them even more extreme. And I'm very noisy when I cum. \n\nI continued rocking my hips. The orgasm was almost here and although I wanted to edge it, this was not the place, not without putting on a really big show for the cavemen. That naughty little thought of me putting on a performance for everybody did make me smile, and turned my arousal up a notch. I felt the orgasm creeping up and I looked around one last time and rocked, risking a nipple pinch through my blouse. I was close to cumming and I knew I couldn't stop it. I looked down at the drawings on my desk and grabbed a pencil to make like I was working, praying I wouldn't get caught, just in time as the climax passed over me. A sweet little orgasm, just enough to make me shudder a little bit. \n\nI stole a glance around again, everybody was still in their own world working. That was sweet, I thought to my naughty little self. I wondered if I could pull off another one. I continued slowly rotating my hips on the racquet ball while watching the office; a couple guys had got together and were talking about a game, one of the girls walked by with an armload of folders and said hi to me, I said hi back while continuing to rock my pussy. Telephones were ringing, somebody dropped an f-bomb, one of the girls was laughing, I was in my own naughty little world in our busy office, building up another secret orgasm. \n\nI felt a little sweat form on my forehead, I tried to look busy and not rock too much on my seat. Timing was essential, I realized. I felt my hand on my boob and quickly dropped it, hoping nobody saw. The orgasm rolled over me much quicker than I anticipated. I put my head down, squeezed my eyes shut, and came with a little squeak, almost snapping my pencil in half. \n\nI realized I was holding my breath and I slowly let it out while looking around. Resume normal breathing, I thought. The guys were still taking about their game, another was staring off into space, Ogg was still on the phone, and nobody was aware I had just had two nice little orgasms. This is gonna be fun, I thought to myself as I pulled out the racquet ball, gave it a little kiss and dropped it in my side drawer. I took it back out of the drawer and put it in front of my keyboard, a little reminder to myself to keep things naughty. \n\nI concentrated on getting some work done, to catch up from the morning and to get a little ahead for the afternoon. I didn't think I was done masturbating for the day. \n\n++++++++\n\nAll the rest of the morning and through lunch I was thinking naughty thoughts, keeping my arousal in the back ground. Visits from Kelly helped. Even though I'd cum twice this morning I wanted more and was thinking how to amp it up a bit. I could feel my nipples were hard and in need of attention. I wore one of my usual thin bras today but my blouse was thick enough that I didn't think they'd poke through, I was in a mood to tease them and they wanted to be teased. The thought of my nipples poking through and making a show for everybody to see made me just a little hornier. Maybe I do have a little exhibitionist in me, I thought with a naughty smile. \n\nAll day I was constantly on the lookout for something in the office or a location to help me be naughty. I really wanted some kind of toy to use. Where else could I cum? Maybe the supply room, I could work up an orgasm until I'm ready to cum then step inside to finish off but that would be risky. Occasionally I'd tease a nipple or give my boobs a squeeze which would raise my horniness and it made me think that nipple clamps would be a nice accessory for my sweet tits to wear around the office. I didn't have any and wouldn't have had them in the office anyway. I fantasized about them and how they'd make me feel. I made a mental note to look at some while I shopped for a toy. \n\nWhile getting some coffee in the break room I spied a couple of small binder clips laying on the counter. I picked one up and toyed with it on the tip of my finger and the skin between my thumb and index finger. Way too tight for my nipples, I thought, and would hurt like hell but if I bent them apart right so they didn't put as much pressure on they might work. They'd stick through my bra though, probably even if I was wearing a thick one so I abandoned the idea. Maybe at home, but certainly couldn't wear them around the office. Then I found a couple of small paper clips. Perfect, I thought as an idea formed in my naughty little head. I scooped them up and headed for the bathroom. \n\nInside the stall I unbuttoned my blouse and took my boobs out of my bra. My nipples were hard, as they usually were, but I pinched and pulled them to make them a little harder. I worked at bending a paperclip around my right nipple. I winced when it was too tight but found a good compromise, not too lose and just tight enough to get my attention. The left nipple got adorned really easy since I knew what shape to make, except one of the ends of the clip was digging in. I almost bent it back but decided I liked it and carefully bent the other end around so it was also digging in, pinching me, one on each side of my nipple. \n\nI really liked the feeling, like a needle but not so sharp. I took the right one off and reshaped it so the ends would dig in, too. Nice, I thought, liking the tease my nipples were getting, and fanned my hands in front of them, brushing the tips of my nipples with my fingers sending little shocks through them and into my breasts. Mmmm... fuck, that was nice! I almost wanted to diddIe myself right there but I wanted to wear them around and extend the naughty pleasure. I carefully put my boobs back in my bra which covered most of the shape of the paperclips. With my blouse buttoned back up they didn't show at all. \n\nOnce I got out of the stall I checked my boobs in the mirror to be sure. Gina, one of the girls, came in just then and we gave each other a \"hey\". She didn't say anything so I felt pretty safe and walked out of the ladies room. My boobs have a natural little bounce which made the clips deliciously torment my nipples with each step. \n\nFuck, this was awesome. I felt super naughty walking through the office wearing the paperclips on my nipples, feeling them dig in with each bounce of my boobs. Out of the corner of my eye I saw one of the guys checking me out and I suddenly became very self conscious about the clips, but there's no way he knows and in a way it made it even more erotic, even more naughty, him not knowing I'm teasing myself, making myself aroused. Making myself wet. \n\nI sat at my desk loving the feel of my nipples being teased and had to constantly resist the urge to caress my breasts, but every once in a while when no one was looking I'd give one a squeeze or tease the tip of a nipple with a fingernail through my blouse. Fuck, it was intense! I was getting really horny and knew I would need to get some release soon. \n\nKirsten, one of our admins, was making copies so I got up with the excuse to make a scan of some papers. She's a black girl, light skinned, about medium height, in her 30's, with short hair, a bit plumpish with medium size boobs and really cute. My horny meter went pretty high as we chatted, me standing there with my nipples being poked and her totally unaware. She got done and I did my scan then headed back to my desk. \n\nI was really enjoying this, I thought, when an IM suddenly popped up on my monitor; Sharon, our boss, was asking me to step into her office. Damn, guilt immediately flooded through me like \"how did she know?\" but I knew nothing could be wrong. I gathered a pen and a notepad as I stood up to go to her office. My boobs bounced with each step and with each bounce the paperclips dug into my nipples sending little jolts through my boobs. I was wet and really horny by now and would rather have stopped into the bathroom first before seeing the boss. Along the way I passed Kelly who smiled at me and I had lascivious thoughts about clips on her nipples. Mmmm... sudden thoughts of bondage with her, helpless while I ravaged her body. Fuck, knock it off, I said to myself. I'm on my way to see the boss!\n\nSharon is a tall, slender lady in her early to mid fifties, with long, straight blond hair that was beginning to gray, small boobed, somewhat plain looking but still attractive for a woman her age. She was divorced a couple years ago and rumor was she's banging one of the other married bosses in the building. I sat in her office listening to her drone on about a new project she wanted me to work on. My nipples were fully aroused by the paperclips and my gaze often wandered down to Sharon's small boobs and wondered what they looked like. It was difficult to concentrate, my pussy was really wet and begging for attention. I tried not to squirm in my chair wishing she'd hurry so I could get to the ladies room and relieve myself. I considered asking to excuse myself when she finally finished up and I could leave. I stood up and subconsciously checked the chair to make sure I didn't leave a wet spot. ",
        "Big boobs can sometimes be a curse and this was no exception as they bounced back to my desk where I dropped my pen and pad and then bounced towards the ladies room. My tits and my pussy were aching. Along the way I was stopped by one of the guys who asked me about getting a softball team together. I said I was interested and excused myself but then was stopped by one of the girls who wanted to freakin' chit-chat. \n\nAlarms were going off in my pussy, I had to get some relief right now! I finally excused myself and all but ran into the ladies room. Fortunately all the stalls were empty and I picked the one at the far wall. I closed the door of the stall and yanked my jeans down to my knees. My hand dove beneath my panties and I shuddered, letting out a moaning sigh when my fingers touched my sopping pussy. I threw my head back, closed my eyes and moaned with lustful delight. Mmmm... fuck, I leaned against the wall rubbing two fingers on each side of my clit, loving the pure pleasure my pussy was giving me. \n\nI pulled my wet panties down, turned and sat on the toilet, the fingers of one hand on my clit, the other fumbling at the buttons on my blouse trying to undo them. My nipples were aching with the sweet, delicious pain of the paperclips digging into them. I relinquished the hand on my pussy to unbutton my blouse and carefully pulled my boobs out of my bra. \n\nSlowly I removed the paperclip off of one nipple and hissed at the rush of blood sending needles in the nipple and into my breast. I moaned in sadistic pleasure at the feeling and removed the other paperclip. I threw my head back and closed my eyes as I plunged a finger in my pussy and gently massaged each nipple. I came almost right away, my body shuddering In delight. \n\nI pushed my jeans and panties down to my ankles, spread my knees as far as I could and leaned back, my pussy open to be fondled and fucked by my fingers. Waves of pleasure rolled over me as I felt another orgasm build. I squeezed my tits and nipples while two fingers fucked my pussy, the sounds and feeling of my fingers squishing in my pussy sent me over the edge, a sweet, naughty, erotic orgasm and I gasped at the power of it sweeping over me. \n\nMmmmm... my pussy felt really contented and I put my fingers in my mouth, savoring the taste. I'd never really tasted my pussy before except on my lover's kiss after he'd licked me to full satisfaction. This was exquisite, I thought as I licked each finger. I knew now I could work the rest of the day. \n\nI wiped my fingers off with some toilet paper and cleaned myself up, then peed and wiped again before pulling my wet panties and jeans on. Damn, I thought, If I'm going to be doing this I'm gonna have to bring an extra set of panties in to work. I flushed and walked out of the stall feeling very satisfied with myself as I washed my hands. I checked my face and my hair and left the restroom, my pussy feeling nice and warm, my naughtiness abated. When I got to my desk I stashed the clips in the desk drawer, promising my nipples they would see them again.\n\nTomorrow was Saturday and I was looking forward to a naughty afternoon at the park."
    ],
    "authorname": "Lorelei907",
    "tags": [
        "lesbian sex",
        "masturbation",
        "office",
        "public",
        "work",
        "public masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-office-hottie-ch-03"
}