{
    "title": "TT Spalding - Maggie's Story",
    "pages": [
        "Edited by Angel Love.  \n\nBoth Bruno and Polly were part of TT and Maggie's past. We've met both of them now but the story of Maggie is still to be told. We know that she came from a troubled past but we know little about her and her life before TT. This is Maggie's story with hints of TT's involvement. But his is a story for later. \n\nMaggie's Story\n\nI had to do what I planned in spite of the pain. He had just left after one of the more savage beatings for whatever it was that made him angry and I knew I had only an hour or so before he would call or actually come back to apologize once again. By then I had to be gone, gone for good. There was no turning back this time. He would know that I had told someone else about the beatings, the savagery and the absolute brutality of his fists. This time was the last time. No more! Never again!\n\nI took the camera and went into the bedroom to the full length mirror. I stood in front of it and stripped off my clothing. My slacks, top and underwear. I folded them neatly, turned to lay them on the bad and stepped back in front of the mirror. I looked at the new bruises already turning a dull, angry red. The ones on my ribs, my stomach and my hips. There were several older bruises, now purple or light brown on my legs and torso. There were also angry welts on my arms and wrists where he had grabbed me and held me as he kicked and beat me. None on the face where they could be seen. Oh, no. Not so anyone else would know what he did to me. \n\nI began to take the pictures, the flash making me blink each time. I took as many as I could, careful to make sure I got my face included on each so there would be no dispute that this pathetic creature was me. I had placed the newspaper on the floor beside me so that it could also be seen in each of the photos. The date was clearly marked. Today's date. No dispute as to when this was taken. I shot the entire roll of film, opened the camera and took it out and replaced it with another fresh roll. I continued to shoot pictures until I was sure I had enough. When I was finished, I threw the camera and the first roll of film on the bed with my clothes and stood there shaking with humiliation. The pictures were the only proof I had of what he had been doing to me. \n\nAfter I calmed, I began to dress again in the clothes I had removed. I took the camera and the roll of film to the camera case and put that into the suitcase I took down from the walk in closet. I had already packed it before putting it back in place. Fortunately Jonathan never noticed it had been moved. He rarely come into this closet since it was mine except to check to see that I kept it organized as he desired. Otherwise he didn't care. He bought all of my clothes and he told me what I would wear when we went out. He controlled most of my activities now.\n\nI took the suitcase downstairs and placed it by the door to the garage. I went into the den, broke into the drawer where he kept our personal papers, found my passport and other personal documents I needed and put them into a large manila envelope along with over $2000 I had saved from the daily allowance he gave me for the household requirements. Since he paid all the bills and kept all the credit cards, I had only what he gave me. This was all I took from my marriage of four years. I took one last look around and walked out. I took my suitcase, went into the garage, found the key that he thought I knew nothing about and opened the trunk. I put the suitcase inside and opened the garage door. I started the car, backed out onto the street and drove away, never looking back.\n\nLess than three hours later, I pulled into a driveway that led to a small motel located back off the street. I was almost a hundred miles away from home now and this motel was one few people knew about. It was almost hidden from view by a new high-rise building that had been built in the last few years. I had found it by accident one day while I was trying to find a place to stay when I decided to make my break. I had inquired and found that the rooms could be rented by the hour, day, week, month or whatever. The rates were reasonable and the clerk was just pleased to know that there was one less room to worry about. I gave him a fictitious name and address but he really didn't care. I took it for a month. It used up $750 of my precious $2000, but I had to have a safe place to live. \n\nThe room was larger than I expected, painted a sad shade of yellow and had a double bed, a small table with one chair, and a dresser. The closet was small and had room for maybe ten hangers. The window looked out on the parking lot and there was a single street light outside. I unpacked my suitcase, lay down on the bed and fell deeply asleep, feeling free for the first time in years. I dreamed, and the dream wasn't pleasant. I was back and he had found out I planned to leave. He beat me again and again. I jolted awake, frightened, until I remembered where I was. Safe, for now.\n\nI waited until the next day to take the film rolls over to a small strip mall close to where I was. I had found a photo shop there and it had one hour developing. I wanted to get the pictures developed and then I planned on seeing a lawyer. Maybe I could get a recommendation from someone here. But that was for later. I walked over to the shop and entered. Inside, I found a short skinny old man who seemed to be in charge. I took the film up to the counter and waited until he noticed me. While I waited, I looked at the array of photos behind the counter on the wall. They were all black and white and seemed to be of people of all kinds. There were young and old, black and white, foreign, women and men of all types. They were the most fascinating things I had even seen. I was staring when he interrupted me with a \"harrumph\".\n\nI jerked my attention back to him and then remembered why I was there. I handed him the film. \"I'm sorry. I was just looking at your pictures. They're magnificent. Ah, I'd like to have these developed in an hour. Can you do that today?\"\n\n\"Says so on the window don't it? One hour photos. Not the best quality but if you're in a hurry, it'll work. That what you want?\" He seemed to be looking down his nose at me which is hard when you're only about 5 foot tall. \n\n\"That's what I want. Ah, can you not look too hard at the pictures when you develop them? I'd rather you didn't unless you have to.\" I was humiliated by what the pictures showed and I hated to have to give them to anyone, but I had no choice.\n\n\"Need to be sure they're OK, but I don't care what's on them. I'll not nib into your business if that's what you're worried about.\"\n\n\"No, no. That's not it. I'm just a bit embarrassed by what they show. Please, just do what you have to. I'll come back in an hour or so if that's OK.\" He nodded so I walked back out and down the street. At the other end of the mall was supposed to be a lawyer's office. I wanted to check it out before going back to the motel till the photos were ready.\n\nI went down the covered walkway toward the opposite end of the mall and found a storefront that read, 'M. Haynes, Attorney at Law' and below that a list of hours. It seems Mr. Haynes was open late on Tuesday and Thursday nights. Perfect! Once I had the pictures, I would stop in and see what I could arrange. Money was going to be the big problem. Maybe Mr. Haynes could collect from Jonathan. I knew that it was a possibility but whether Mr. Haynes would agree was another question. Well, first things first. \n\nWith an hour to kill, I decided to spend a little of my money on a nice meal. I found a small diner and went in. A cup of coffee, a burger with onions and tomato with a side of fries, and maybe a piece of pie for desert. And no fear of making a mistake. I had to remind myself of that. No one was judging me now.\n\n* * * * *\n\nBack at the photo shop, Max Bower was running the film through the contraption that made pictures in an hour. He hated the thing but it was what people wanted nowadays. No heart, no feeling, just speed. It was getting to be more and more of a bother to run his little shop. He had the latest equipment for sale and he did a good business in developing and selling film and cameras but he was not too keen on the new digital stuff that was becoming the rage. Maybe it was time to consider retirement, but he was alone now with nothing else to do. If he could only find someone to pass his love of photography on to. \n\nThis one hour stuff was an example. All he had to do was put the film onto a spool, feed it into a grip and close the door. Then, just sit back and wait. Only had to sit there and make sure the finished photos didn't get stuck in the chute. Didn't want to ruin a good print. But then most of the pictures were of someone's head with the top cut off, or a blurred snap of some kid kicking a ball, or some other crap. Not worth the chemicals to develop. In this case, he would see what she had. When she asked him not to look to closely, it was like a red flag waving in his face. Not look? Hell, no way he wasn't going to look now. \n\nHe sat back and waited for the pictures to start coming down the chute. He thought about the lady who gave him the film while he waited. Tall, blond, beautiful, a heavenly face and a body to kill for. Hell, Max thought, he may be old but he wasn't dead! She was a real beaut! But sad. He saw that in her eyes. A sad lady for sure. But she liked his pictures so that made him want to help her if he could. So he waited for the pictures.\n\nAs the first few came down the chute, Max saw and stood up immediately with an oath. \n\n\"Godamn! Look at this shit! Oh, God, not her. Not this sweet lady.\" Max now impatiently grabbed each picture as it slid down the chute and collected them. He was almost in tears as he saw the damage done to her. Had to be by a man, for sure. Any son of a bitch that did that needed to be shot. He took the last photo from the machine and put them into an envelope. He sealed it shut and put it in his cash drawer. She would be back shortly and Max wanted to talk to her. As he closed the drawer, a thought came to him suddenly. What if. . . . . .?, yeah! He considered it from all sides but couldn't find a negative. He trusted his instincts. Now, to wait.\n\nI took a sip of my now cold coffee and checked my watch once more. It had been just over an hour and I could now go back for my pictures. I was nervous: about the pictures and what the old man would think, about what I was going to do with those pictures, and finally, how I was going to survive on my rapidly diminishing cash. With the room, the pictures, my lunch and a few other things I picked up in the drug store next door, I was down to $1216.75. If I was careful, I had enough for food and such for a month. Not much more and certainly not enough to live on without a job. Well, time enough to worry about that. Now for the pictures.\n\nI walked calmly into the photo shop which was blessedly empty. The old man was sitting behind the counter, looking at a newspaper. When he heard the bell signaling someone entering, he rose and leaned over the counter waiting for me. He had a small smile on his face, which I was unable to interpret. Since I had no choice but to go for it, I said, \"Hi. Remember me? I left the pictures an hour ago? Are they ready yet? It's been over an hour.\"\n\n\"Pictures are ready. Said an hour and so it's been an hour. Pictures show some things I had no choice but to notice. I had to be sure the pictures don't jam the chute. So I got to look. Sorry.\" He reached into his drawer and pulled out a large manila envelope. He laid it on the counter while he looked at me. \n\n\"I guess you had no choice. Can I trust you not to say anything? Please?\" I was worried that he was going to say or do something. But all he did was stand there watching me. Then, he pushed the envelope toward me but kept his hand on it, making me wait. He apparently wasn't finished.\n\n\"Saw what he did to you. It's wrong what he did. No man should ever be allowed to do that to no woman. What do you plan to do? I ask, not intending any disrespect.\"\n\nI saw that there was a look of concern on his face now. It was clear that the pictures disturbed him. As they would any decent human being! What to say? I had to get used to it now that I had made my decision.\n\n\"I was going to go talk to Mr. Haynes right down the mall. Do you know him? Is he any good and can he be trusted? I don't know anyone here. I'm not from here.\" I had to stop! I was in danger of babbling uncontrollably. I was tense and scared and not used to being on my own. Now I was.\n\n\"Mel's OK. Not the shiniest coin in the roll but he's honest, knows the ropes and he's fearless. Stupid sometimes, but not about the law. He'll do you fair. Divorce?\"\n\n\"Yes. I left yesterday. I just packed and left while he was at work. I couldn't stand it anymore. I had to go.\"\n\n\"Did right! Son of a bitch should be shot! No man should do what he done.\"\n\nI wasn't aware of the tears that were coursing down my cheeks but the old man was. He watched and I could see he knew the pain in my heart. As I watched his face, he seemed to come to a decision right then and there. He straightened up and reached out to take my hand in his wrinkled, but firm, grip. \n\n\"Wanted to know if you'd be willing to take a job here with me, helping me run this shop. I'm getting older and it's becoming a burden to me. I could start you right away and we could just take our time with the paperwork. I bet you don't have a lot of money saved up.\"\n\nI just stared at him, not believing my luck. How could this be possible? The first place I came to, to begin my quest, to find someone like this man, this wonderful man who saw, understood and reached out to help, not even hesitating. God must have looked down and pushed me in the right direction. For the first time since I walked out the door, I had hope.\n\nJust that quick, I had a room, a job and a recommendation for an attorney. I told Max that I would be delighted to work for him, we shook hands to seal the deal and then Max closed the shop to walk with me down to see Melvin Haynes, Attorney. The day after I decided to change my life, I was ready to take the next step. \n\nThe meeting with Melvin Haynes was very good. He seemed to know Max very well and he welcomed me with a huge smile, and a wave to the chairs in front of a large desk, covered completely with papers, cups, broken pencils, yellow legal pads and what seemed to be various office tools like staplers and punches. How he functioned in that mess was a real mystery, but he seemed comfortable in it. He, unlike Max, was a huge man, coal black hair on his head and what I could see of his body. He had to be over 250 pounds and he stood at least six foot and several more inches. I guessed his age at around 50 but that was an estimate only. In a booming voice, he asked me if I wanted Max to leave and I told him I wanted him to stay if he would. Max smiled, patted my hand and settled back.\n\n\"OK, what can I do for you? If you're a friend of Max's, you're a friend of mine. Talk to me.\"\n\n\"My name is Margaret Malone DiCarlo. Everyone calls me Maggie. I'm thirty seven years old and I've been married for four years to a man named Jonathan DiCarlo. We have no children. We lived in Queens and I ran away yesterday because he beats me. Badly. For no reason that I can find. He just gets angry when he sees something he doesn't like and he beats me. I took it as long as I could but now I'm done. No more. Never again! I want a divorce and I want a restraining order on him so he'll stay away from me.\" \n\nI told him the story as completely as I could. I told him of the evenings when Jonathan came home and didn't like the dinner I prepared. Or he was upset that I was out of the house when he called, or he was just in a bad mood and something I said made him angry. I had given up trying to understand why he got angry. He just did. All the time. And when he did, I became his punching bag. On the body, never the face. He threatened to kill me if I ever told anyone. He always apologized and wanted to make love to me afterwards. I never refused because when I did, it started over again. \n\nI gave him the pictures and told him of the last time, which was only yesterday, even though it seems like it was forever ago. It was clear in my mind. \"It began at breakfast. He wanted eggs over easy with bacon and toast. Toast, just beginning to turn brown, eggs with the yolks dark yellow but not hard, the white solid with no runny liquid. He wanted it perfect as always. I put three eggs into the skillet but only got two that didn't break. But I was able to get the eggs just right. I turned off the heat, put the toast in to heat and removed the bacon strips from a second skillet. I laid them on a sheet of absorbent towel and waited for the toast to come out. Jonathan came into the kitchen, moved to the stove to pour himself a cup of coffee and went to the table sitting in his regular seat.\" \n\n\"I popped the toast out at the right instant and lightly buttered it, cutting it into two triangles as he liked. I arranged the eggs on a plate, flanked by the two strips of bacon just crisp, and the toast wedges. I looked at the plate, saw that it was perfect and sat it in front of Jonathan. He was reading the paper and didn't look down right away. I poured myself a cup of coffee and sat down across from him at the table. I never ate with him, since I had to finish his meal first anyway. I relaxed and sipped my coffee.\"\n\n\"Jonathan put the paper away, looked down at the plate in front of him and then looked up at me. 'There are only two eggs here. Where's the third?'\"\n\n\"I swallowed, almost choking on my coffee. I had forgotten that one of the eggs broke and I never replaced it! He always had three eggs! I panicked and didn't answer immediately trying to think of what to say. I was about to tell him that I was trying to be sure to make the eggs just perfectly when I was hit by the plate of eggs. He threw it at me! I jumped up, moved backward, falling over the chair to the floor. He came around the table, yanked me up by my dress and started to methodically beat me, hitting me in the stomach and ribs, over and over, telling me what a stupid cow I was. After the first few blows, I lost consciousness and didn't feel the rest. Those were the bruises in the picture. The most recent ones.\"\n\nWhen I finished, I looked at the faces around me. They were angry faces. Faces full of fury and disgust. But for the first time, they were not meant for me! They were meant for Jonathan, not for me. A sob come to my chest and I felt the tears start. I let myself go for the first time in a long time. These faces were not judging me and finding me wanting! They understood and they cared! I cried and cried, letting my grief and frustration come out not caring that someone else saw me. I felt a hand on my shoulder and knew it meant me no harm. \n\nWhen I could, I wiped my tears and got back to business. I gave Mel my passport, my marriage license and the other important papers I took with me when I left. I then told him that I had very little money to pay him and asked about Jonathan being made to pay. He nodded, said that was fine with him and to let him worry about that. We talked for over an hour before Mel told me to come back tomorrow and he would know more. I reminded him that I couldn't let Jonathan know where I was and he assured me that he would keep that a secret. The first thing to do was get the RO and go from there. I left with Max and he took me next door for lunch. \n\nAfter lunch, I went back with Max to his shop where he began the process of teaching me what I needed to know to help him with the shop. He was an excellent teacher and I picked up the necessary skills very quickly. I was to work with him over the next several months until I ran the place full time. Max was to spend more time in his loft where he worked on whatever it was he did. I did ask him about the pictures on the wall behind the cash register. I had noticed them and found them to be fascinating to look at. I had no interest in photography myself but I recognized talent when I saw it. The story he told me was one that would change my life.",
        "Max said that the pictures represented some of his best works. He picked them specifically for that place on the wall. His intent was to let them stay there until someone walked in and saw them for what they were. For someone to recognize the skill and the care and the soul that they represented. He said that he knew someone would come in eventually and he only hoped it was before he passed on. He wanted to give that person all he had to teach them about his art. He wanted to pass on his passion and his love to someone who could recognize it. He put them up and he waited. They had been there for over four years when I came along. Obviously they weren't meant for me. But, they were a part of my future. I just didn't know it at the time.\n\nThe following day, I went back to see Mel and he had some news for me. He said that he had spoken to a judge he knew who would issue a RO to be delivered to Jonathan the next day. It would not give my address or my location and it would be given to the police in Queens where I had lived and here. If Jonathan did find me, I could call 911 and report him. He would be arrested immediately. \n\nHe also said he would be happy to represent me in a divorce. Since I wanted nothing from Jonathan but my freedom, he said it should be easy to get. We had no fault so it wasn't necessary to give a reason. It would take six months but it would begin when the court date was finalized. In the meantime, I was free to go about my business. Mel told me he would file papers to assure he was paid by Jonathan and that he would have no problem with collection. He also told me he wanted to get more information on Jonathan and asked me if I had any objection to giving him some more information to use. I agreed and he took what he needed. \n\nI settled down in my new life, enjoying the freedom to move about and not fear for my life. I learned about my new surroundings and found a small apartment close by to rent. It was not much bigger than the motel but it was cheaper and it was clean. I moved in at the end of the first month and begin to make it mine. With my new job, a lawyer working to free me from Jonathan and a new apartment, I began to feel more like living. I was beginning to come out of my shell and I was looking forward to the divorce. I could start a new life and hope that it would be better than what I had endured.\n\nI learned about the photography business and Max began to leave me alone in the shop more and more. I could now handle the register, I knew all the pricing and how to write up the orders for framing or developing and I could talk knowledgably about most of the cameras and film when a customer expressed interest. I tried to make the shop more attractive by rearranging the inventory and moving some of the cameras to the front of the cabinets, and just cleaning and polishing. Business did improve and the register did ring more often and Max began to reappear. He was pleased with the changes I made and he started talking more with the customers and with me.\n\nIt had been just over a month since I walked out of the house and my life with Jonathan when I was showing a prospective customer a new camera she asked about. Max was in the back, working on a framed picture for a customer when the bell sounded, indicating a new customer. I finished with the woman who decided to think about the camera before making a decision. I gave her some information and watched her leave. As she walked out the door, I looked around to locate the new arrival. When I saw him standing there, my heart almost stopped and my legs felt as if they could no longer support me. \n\nIt was Jonathan! \n\nI think now, when I look back on it, that I screamed. I stood there, looking into the eyes that I saw in my worst nightmares and I screamed. I couldn't do anything else. I knew I had to call 911. I had to move away! I had to do so many things but all I could do was stand there and scream. At the sound, he moved toward me with his hands raised as if to entreat me to stop. His face had a smile and he was making sounds that I assumed were supposed to be comforting but all I saw was Jonathan coming at me to beat me again. I backed away as far as I could, coming up against the counter behind me. I had no where else to go. I was trapped!\n\n\"Maggie, please. It's just me. It's me baby. Come on now, just calm down and let me talk to you. Calm down now Maggie.\" He continued to move toward me with that terrible smile on his face and his hands out, not yet bunched into fists, but promising. I knew the promise was there, and I knew that he would kill me this time. I left him! I humiliated him and he would make me pay with my life. I knew it.\n\n\"That's it. Just stay there and let me talk to you. You know I love you Maggie. I just want you to come home with me. Just come home with me. That's my girl.\" As he spoke I watched him start around the counter toward me. Only a few more feet and he would have his hands on me and he would kill me. I felt his anger coming off in waves, in spite of the smile on his face. As he moved, his fingers began to curl into claws, reaching to grab my blouse as he always did. \n\nJust as he was about to take hold, I heard a new voice. \"Back away and get out from behind my counter! You take one more step toward her, I'll blow your fucking head clean off! You get one warning and then I pull the trigger!\" It was Max, standing at the end of the counter with a small shotgun pointed directly at Jonathan. Max held it steady and his face was very calm. I had never seen him this way. He was always so jovial. When he frowned, it was more a squeezing together of his eyebrows and a pursing of his lips. This look was different. I could see violence in that look. Strange as it seems, it gave me hope. \n\nJonathan looked toward him and stopped. Jonathan was nothing if not a coward. He beat me in private where no one could see because he understood that he would be punished if people found out and he feared punishment. This was something he understood. A shotgun was severe punishment and it caused Jonathan to begin to back away as ordered. He watched the gun as he stepped back away from me and then around the end of the counter and back out into the store. Max watched him intently and waited. Once Jonathan was standing well back, Max told me in a calm voice to call 911. \n\nJonathan raised his hand immediately. \"Please Maggie, don't call. I'm sorry. I just wanted to talk to you and beg you to come home. I didn't mean anything.\" \n\nMax told me again, \"Maggie, call 911! Now! And you, Mister, don't you move till the cops get here. I'll shoot your kneecaps if you try to run. We'll just wait for the cops together. Should be here in just a few minutes. They know me and my store. They'll come running, believe you me.\" Max moved into the store where he could see Jonathan more clearly. He also had a better shot this way and Jonathan knew it. I could see the fear in his eyes and for the first time I was not afraid. He was! Jonathan, the bully, the one who beat me, was suddenly afraid. I felt a shiver of pleasure shoot up my spine as I watched him tremble. \n\nI heard the sirens a minute before the cops came running into the store. They took a quick look, saw Max with the shotgun pointed at Jonathan and then, without a pause, they moved to take Jonathan from behind. One had his gun pointed at Jonathan and the other pulled a pair of cuffs to put on Jonathan. He hadn't said a word. The cop, once the handcuffs were secure, told Max to lower the gun. He had Jonathan move over near the counter and then asked. \"What's going on here? Why the gun Max? And who called us?\"\n\nI answered before Max could say anything. \"I called when this man came in the store. There is a restraining order on him issued for here and back where he came from. I have a copy of it right here.\" I reached into my purse and pulled out the paper. I handed it to the cop who scanned it and then turned to his partner.\n\n\"It's legit. Take him in. I'll call the house and give them the information so it'll be there when we get back. Save a lot of paper for us.\" The other cop nodded, took Jonathan by the cuffs and led him out to the car while the second officer stayed to talk to Max and I. It was brief, the cop knew Max had a permit and nothing more was said. He told me that I might have to appear in court but that someone would call to let me know. I told him about Mel and he smiled. \" You're covered then. Mel knows the ropes.\"\n\nAs it was, I didn't have to appear. The judge set bail for Jonathan at $5,000 with the condition that he make no further attempts to contact me. If he did, bail would be revoked and he would spend time in jail. Jonathan was too afraid of jail to break his bond. But he did get my number and he began to call once a day or more. Always from a pay phone and just long enough to threaten me if I didn't call off the divorce. He promised that he would get me eventually if I didn't. Typical Jonathan. No witnesses and no one to hear him. I finally told Mel, who promised to take care of it. He didn't say how but it was only two days later that the calls stopped. I never received another call.\n\nThings settled down for me and I began to relax again. The divorce was in full swing now with papers served on Jonathan two months after I contacted Mel. I wanted nothing from Jonathan but Mel did set some conditions on the divorce that he said were common. I was to get a cash settlement for an amount he said he would verify. I asked him how and he just smiled. \"Not to worry pretty lady. I have my ways. I certainly do.\" And he did. The amount he determined was quite large and I was surprised when he said it was only 25% of Jonathan's net worth. I had no idea. He told me Jonathan's lawyer was very pleased with the offer and would urge his client to sign. \n\nNow I began to worry. Jonathan was a coward but he was also very smart. He would fight to keep his money and he would make every effort to hide it away so as not to be found. I told Mel as much but again, he just smiled. I finally let him handle it. He assured me he was being paid out of Jonathan's pocket so he was working very hard to get as much for me as he could. Billable hours he called it. Whatever. I didn't want the money but it wouldn't refuse it either.\n\nIt was the middle of the summer when we went to court for the hearing on the divorce. The papers had been signed and delivered to the judge. True to his word, Mel got Jonathan to agree to the amount he specified and apparently it was not more than Jonathan was willing to pay. Mel said he was actually relieved. I was pleased, but surprised. The hearing was short and to the point, Jonathan and his lawyer agreed to all conditions and the judge accepted the settlement and it was official. Now only 90 days remained before it was final. During the hearing, Jonathan never looked my way once. I was surprised but relieved. Mel was smiling the whole time as he kept looking over at their table. I had no idea what he was so happy about but I didn't care. I was almost free. \n\nThe time passed, no further contact with Jonathan occurred, and I was as happy as I had ever been. I had friends, a job, some money in the bank and my divorce was final. When the papers arrived, I took Mel, Max and a few of my new friends out to dinner at the diner next door. It was a blast and Mel and Max were feeling no pain by the end of the evening. I was just happy. I didn't know how Mel had done it, but he had. When he was sloppy drunk and singing with Max, I pulled him aside and asked him point blank: \"How did you do it? What was your hammer? What did you use to beat him up with?\"\n\nMel was smiling so big I expected his face to crack in two but all he said was, \"TT darling, TT was my weapon!\" I just stared at him, having no idea of what a TT was and finally said, \"OK, OK, don't tell me then. I don't care. I just love you, you big con artist.\" And that was that. \n\nThe next four and a half years passed almost faster than I could count. I ran the store now, I had increased business over 75% so Max was pleased to let me run the place without him. I was doing all the work now, and with his teaching, could handle anything having to do with the camera, film, framing, and all the other business chores. We did well. I had many friends but no men friends. The past made it difficult for me to trust any man so I chose to do without. It was hard. I had needs but I learned to control them. I had other interests. I was happy, fulfilled and living my life. \n\nBut like all things, they had to change. I had noticed a young girl, a teenager or at least early twenties, who came into the store several times and just seemed to wander around. I knew she was just trying to stay warm and she caused no trouble so I let her go. She never spoke and just looked at the cameras and some of the other items we carried but it was sometime later, when I was thinking about closing the shop that I noticed her staring at the pictures on the wall behind the counter. Max's pictures. I made note of it as I began to shut off the lights preparatory to closing. She noticed and turned away without a word. \n\nOver the next few weeks I noticed her coming in when it was very cold and each time she ended up staring at the pictures. Her look was intense and she seemed to be unaware of anything else when she was looking at them. I began to get a strange feeling in my stomach as I watched her. Was she the one? Could it be? I decided to find out.\n\nTwo days later when she came in, I stood in front of her and asked her name and what she was doing standing there. She started to give me a crap answer and I just stopped it right there. This was too important. I let her have it. \"Listen young lady. I asked you a question and I expect an answer. And not this crap you're trying to sell. If you want more information about those pictures, and if you want to be able to come into my store and keep warm, you'll tell me the truth. Do you understand me?\"\n\nWell, she was no dummy and caught on right away. She began to talk and soon it all came tumbling out. She was on her own, only nineteen and she was fascinated by the pictures. As she told me how they made her feel, I knew she was what Max had been waiting for. I could see it in her eyes and hear it in her voice. This beautiful child wanted what Max could give her. And she wanted it badly. \n\nHer name was Polly Gooding and she was on her own. We got to know each other that night and I introduced her to Max the next day. Polly was all that Max had hoped for and he gave it all to her: all his skill and love of the art and every trick he knew. She was like a sponge and she took it all in. It was a match made in heaven and Polly became Max's heir in more ways than one. She and I became close as well and we came to love each other like sisters. \n\nMax died two years later and Polly and I inherited the store, Max's loft apartment and studio and all his equipment. Polly and I moved in together since Max's place was huge compared to either of ours. Polly continued with her photography and became very good at it. She went on to become a renowned photographer while I ran the shop. Our lives were diminished by Max's departure to the other side but we had good memories. We continued to grow and change.\n\nThe only thing that happened of any significance to change my life from the comfortable state I was experiencing was when this man came in to my store, introduced himself as TT Spalding and asked me out on a date. \n\nTT Spalding. My mind went back a few years to the time of my divorce. I remembered asking Mel, my attorney what weapon he used to convince Jonathan to agree to pay me almost a fourth of his worth in the divorce. That and what was going to convince Jonathan not to continue to harass me after the divorce. His answer at that time was cryptic and I chalked it up to having too much to drink. He told me \"TT is my weapon.\" I had discounted it then but now? Was this TT the one he was talking about? I was soon to find out.\n\nI was working in the shop one day, minding my own business and putting up a display of the new digital cameras that had just come in. I was interested in this new technology and I wanted to see if they would sell. Pictures without film. Who would have thought? I was standing back, admiring my work when I noticed a man standing there beside me. He seemed to be watching the display as well. I moved away and turned to look at him. He was average height, good looking in a strong way, face composed of hard planes, eyes grey-green, hair dark with some grey just starting at the temples. His figure hinted at strength, lean and hard. He was dressed in a suit that had seen better days but his shoes were newer and looked very practical. Overall, he was a handsome man, at least to me. He looked to be about late forties or even fifty. Not much older than me.\n\nAs I observed him, he turned to catch me staring. I blushed and turned away but he came over to the counter where I was standing and looked me directly in the eyes. \"Hi. My name is TT Spalding. Everyone calls me TT. You're Maggie, aren't you?\"  \n\n\"Yes, I'm Maggie. I think I've heard of you before. Do you work for Mel, next door?\"\n\n\"Occasionally. I'm a Private Investigator now. Used to be on the force and then I worked as a special investigator for the DA's office. Got tired of that and wanted to go on my own. Been doing it for a while now.\"\n\nHe was interesting, in a rough sort of way. I liked his voice and the way he spoke. He put me at ease almost immediately and I enjoyed talking to him. We chatted about nothing particular for awhile and then just before he turned to leave, he did the unthinkable. \"Would you like to have dinner with me some evening? We could try that new place on 17<sup>th</sup> street if you like Italian. Maybe we could catch a movie or something?\"\"\n\nI was speechless. I had not dated anyone since my divorce and I didn't even have any male friends that I went out with ever. When I did go out, it was with Polly or one of the other women I knew. Never a man. I had trust issues. I remembered Jonathan and it was still fresh in my mind. I didn't know what to say to this man. So, I stalled. \"I don't know. I'll have to think about it.\" Then I realized how that must sound so I quickly added, \"It's not you. Please don't think that. It's just, well, I've not dated for some time now.\"\n\nHe seemed to take that well and just smiled. \"Take your time. I'll stop back in later and then we can talk about it some more.\" He smiled again, gave a sort of bow and then left the store. I stood there in shock, unaware of anything until a customer tapped me on the arm to get my attention. I came back to earth and somehow finished the day. I was still thinking of it that night when I went up to the loft. I waited till after dinner and then I went in to talk to Polly. She was working on some proofs and I tried to wait but I got impatient. I poked her to get her attention.\n\nI asked her if she remembered this guy who came in from time to time and described him. Polly seemed to think she did so I blurted out, \"He asked me out on a date. Today, when he came in. Just walked right up and asked me out on a date. To dinner. And a movie.\" \n\nPolly thought about it and said, \"He seems nice, and he's cute so what's the deal? Did you say yes?\"\n\n\"No. I told him I had to think about it. I'm thinking about it. That's all. I think he's cute too. But that's not the issue.\"\n\n\"What is the issue? A guy asks you out, you say yes or no. That's all there is to it. Just yes, or no. He doesn't look like a perv, so no big deal.\" She was surprised when I shook my head at her words. \n\n\"It is a big deal. For me anyway. It's a very big deal.\" I was actually shaking a little and my hands were cold when she gripped them.",
        "\"Talk to me Maggie. What's the deal? Why is this such a major issue with you? He seems like a nice guy so why not try it? Talk to me.\"\n\nI hesitated for just a second and then I let it all out. I told Polly about Jonathan and the divorce and what he did to me and how I saw all men and how it had screwed with my head to the point I couldn't trust any man. I talked and talked and was surprised at how much it still hurt. But it did feel good to tell it to someone else who cared about me. \n\nWell, talking with Polly helped me. Especially when she threatened to kick TT's ass if he hurt me. That little thing threatening someone like him made me laugh and just like that, it was over. I made up my mind to say yes to him if he came back again. A big if, in my mind. But, he did come back and I did say yes and it was wonderful. I found someone who made me feel again and I wanted to see him again and again. Thank the good lord, he felt the same way. \n\nWith his patient attention and his calm personality, I began to find it fun again to go out with a man on my arm. He was funny, unpredictable, always understanding and great to be with. He had friends everywhere which seemed to be a tribute to how many people liked him. He never asked me about my past and when I did finally tell him, he listened with interest but was quick to remind me he wasn't Jonathan. I learned to understand that and I grew to love this man. Love him more than I thought possible. I knew now that what I had with Jonathan wasn't love. It was dependence and submission. TT taught me what love was really about. And I knew that he returned that love. It was in his eyes every time he looked at me. \n\nTT and I married and I eventually sold the photo shop and went to work with him. It's been a great life and I love that man to death. I would die for him and he would die for me. But together we plan to live forever and make love every chance we get. And we do, at least the make love part. "
    ],
    "authorname": "thecelt",
    "tags": [
        "first meeting",
        "love story"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/tt-spalding-maggies-story"
}