{
    "title": "Three Years, Two Months, One Week..",
    "pages": [
        "Part three of Erin and Kate's story:\n\nThe third and final part of the story for these two characters.\n\nI appreciate it's been a fairly long wait for this but I'd like to thank you all for your patience. My only hopes are that you enjoy this final part...and of course, that I've done Erin and Kate justice. \n\nReading part one (Nine Months...) probably isn't a necessity for this to make sense but I would recommend you give part two (Two Years, Four Months...) a read before starting this last story.\n\nAll the best \n\nThree Years, Two Months, One Week and Roughly 22 Hours\n\nChapter One:\n\nUnchartered Territory:\n\n\"Ladies and gentlemen, we will shortly be starting our decent into Vancouver International Airport.\"\n\nI jump a little as the pilot's voice comes over the intercom into the cabin and interrupts my train of thought.\n\n\"Please ensure your seatbelts are fastened...\"\n\nMy stomach churns with nerves and I don't hear the rest of the speech, a huge part of me still can't believe I actually got on the plane. What the hell am I doing here? I must be insane...\n\nAs we fasten our seatbelts and fold our tray tables into the closed position I can't help but sink back into the flashback of my life a few months ago and the events that occurred before I got that fateful phone call from Elaine.\n\n...\n\nThe day I found out Kate had cheated was the worst day of my life to date, my whole world fell apart in a matter of minutes.\n\nI knew she been desperate to talk about what had happened, she had practically begged me to be there when she came home from work but I just couldn't do it. I couldn't look at her, I was in shock. I couldn't close my eyes without seeing Nina all over her, that bitch was lucky I'd turned and walked away when I did...I wanted to wipe that smug look off her face and I wasn't above doing so in front of whoever might walk past to witness it.\n\nInstead I had somehow calmly typed up the notes from my meeting, gone home, packed a bag, grabbed Wilbur and his things, written Kate a note and gone to Sara's. Sure enough the hurt and humiliation Kate had caused was there, bubbling beneath the surface but it was as though my brain was trying to shut that information out.\n\nI had broken down completely the second I stepped through the front door at Sara's, I was still sobbing hysterically when Lucy came home, she thought that Kate had died...in a strange sort of way she had...the Kate I loved would never have done this to me.\n\nI left Wilbur there with Sara and went to a hotel for the night. The following morning I called work, cancelled handing in my notice, took some annual leave and made camp at a different hotel by the coast, ignoring the rest of the outside world until I knew Kate had left for Canada and I could go home without having to face her.\n\nSeptember 8<sup>th</sup>.\n\nThe day I should've flown out to Canada.\n\nI sat for hours on the end of the bed the night before staring between my suitcase and the space where Kate's clothes should have been in the wardrobe.\n\nI remember I had been beside myself with indecision. At one stage I had actually thrown a pair of shoes in the case, but the thought of seeing Kate again only brought back painful memories of the day my world fell apart and instead of packing I ended up laid in bed staring at the wall with a stream of pathetic tears rolling down my face.\n\nI was distracted all morning at work that day and as I watched the flight go from scheduled to departed on the airport website the tears started again. I was no use to anyone in the state I was in, I couldn't focus on my work and couldn't keep myself together emotionally. After the second bout of tears, my manager, who knew what had happened between Kate and I, took pity on me and sent me home.\n\nThat afternoon I tried everything I could think of to distract myself from thinking about Kate, but none of it worked. I went shopping, cleaned the house, tackled the massive pile of ironing I'd been putting off doing and even caught up with the Netflix series I'd been watching.\n\nI had lasted about five minutes after switching off the tv before breaking down completely...my decision to not get on the plane had become a sign of the end for my subconscious. It might have taken a few hours, but my conscious mind finally caught up that night. I sat on the edge of the sofa and sobbed, I knew Kate was gone, I knew she had cheated and broken my heart, but that never stopped me from missing her every second of each day that passed.\n\n...\n\nThe next morning things were still far from ok, I called in sick to work and took myself on a long walk to try and clear my head. I thought a lot about leaving the house, Sara had offered me her spare room before I went away and Wilbur would be more than welcome, but I couldn't do it, even though the house was full of memories of mine and Kate's life together and it often hurt to relive them, it was still my home and I loved it. I did however decide to leave the hospital, a new start surrounded by new people sounded like exactly what I needed.\n\nI tried dating again and went on a couple of dates with Rebecca (a girl my sister's best friends knew) she was fun and light-hearted. Things were starting to look up...until I received a letter from Kate.\n\nIt sat unopened on the kitchen table for days after I received it. In then end Sara grew so sick of seeing me staring at it that she opened it herself.\n\n\"It's not that bad.\" She had said as she passed it to me.\n\n\"Really?\" I had asked hopefully.\n\n\"Well no, it's fucking awful actually. But at least it's honest.\"\n\nShe hadn't been lying. Kate had detailed everything she could remember about what had happened that night in London, how at first, she had pushed Nina away and then woken up next to her, how she had tried to keep it all from me by covering the scratches on her body and saying she was ill...and finally just how sorry she was it had ever happened...and how much she loved me.\n\nSara stayed with me for two days after that, I needed her to keep me from slipping back into the hole I'd been in when I'd first found out that Kate had cheated. She pushed me out the door for work, made sure I ate and washed and sent me on more dates with Rebecca...when more letters started arriving from Kate I threw them in the suitcase in the wardrobe and left them unopened.\n\n...\n\nBy the end of January, almost four months later, I was still fighting a losing battle with myself trying to get over Kate.\n\nI was still seeing Becca, although we never stopped at my place and she had never been anywhere near my bedroom. It somehow felt wrong to have her there and when we did have sex it was ok...but Kate had set the bar incredibly high and she just wasn't the same. I'm sure she must have known I wasn't 100% in our relationship and a part of me wished she would've just let me go, I felt guilty for wasting her time but whenever I had hinted I wanted to end things she had clung on tighter.\n\nThings weren't great, but they were ticking along at least. Sara and Lucy had announced their engagement and being involved a little with their plans helped to distract me...until I had a phone call from Elaine.\n\nKate had passed out at work and her appendix had burst, she was in a bit of a state. She was working herself into the ground, not taking care of herself, she had given up. Everyone was really worried about her...could I please call her...or come and see her.\n\n...\n\nI thought about just calling, I really did, but when I tried to think of what I'd say my mind went blank.\n\nI thought about it some more for a few hours and then decided, what the hell? I had some holiday to take and I'd never been to Canada. I could briefly stop in Vancouver to see Kate (Ira and Elaine had offered me a free stay with them while Kate was in the hospital) and then head off somewhere new.\n\nGetting a plane ticket had cost me my relationship with Becca, she had finally reached her limit and called round while I was packing my bag to tell me it was over, I couldn't blame her, I liked her yes, but I wasn't in love with her and deep down I knew she wasn't in love with me, in the end I actually just felt relieved that we were done.\n\n...\n\nI switched on my phone with shaking hands as the plane taxied to the terminal, Ira had messaged to say Kate's brother Liam would pick me up at the airport, I hadn't met Liam before but I knew he was Kate's favourite of her three brothers.\n\nI recognised him instantly as I walked out into the airport, he had Kate's eyes and easy smile, I could definitely appreciate why he was as popular with women as Kate had said he was.\n\n\"Erin?\" He asks as I walk over to him.\n\n\"That's me,\" I smile, \"You must be Liam?\" I hold out my hand to shake and instead he pulls me into a hug.\n\n\"Thanks for coming,\" He says, squeezing so tight I can barely breathe, \"I know you didn't have to but believe me, we all really appreciate you flying out.\"\n\n\"I'm not sure what I'll be able to do.\" I gasp.\n\n\"Trust me,\" he smiles, letting go of me, \"you just being here will make a difference.\"\n\n\"Even if we end up on worse terms than we are now?\" I raise a questioning eyebrow.\n\n\"Can things get any worse?\" He laughs and his smile widens.\n\nI can't help but laugh a little too.\n\n\"Do you wanna head to my parents place first to drop your bags off? Or do you wanna just get it over with and go to the hospital?\"\n\n\"I might change my mind if we go home first.\" I reply nervously.\n\n\"Hey,\" he grips my shoulder, \"if you don't want to see her, no-one will force you.\"\n\n\"No, no, it's ok,\" I smile, \"I'm just a bit nervous...last time I saw her was when...you know...\"\n\n\"I know.\" He smiles sadly \"How's this, we'll get in the car and head to the hospital and if, at any point, you need to take a break, you let me know and I'll take you to my folks' place?\"\n\n\"That sounds good.\" I nod.\n\n...\n\nLiam talks non-stop as we drive to the hospital, he's definitely the product of Ira and Elaine, but he's polite and friendly and I'm incredibly thankful for the distraction.\n\n\"Hey,\" he says as we start to pass signs for the hospital, \"did you hear about Nina?\"\n\n\"Nope,\" I shake my head, \"what happened?\"\n\n\"Well, you know how she was fucking Kate's new boss...\" he glances sideways at me, then realises his mistake and smiles \"sorry, of course you didn't know that. Well, anyway, apparently his wife found out and hit the fucking roof, came down to the hospital shouting and swearing at the top of her lungs. Then Nina walks in and the wife damned near knocks her out she hits her that hard.\"\n\nI don't even try to hide my grin.\n\n\"I know right.\" Liam grins back \"Jamie said they should've sold tickets. Once Nina got her head back on straight it turned into a proper catfight, scratching, biting, the lot! They had to call security to get them all out of the lobby.\n\nCourse, Kate's boss and Nina were fired on the spot. Meant a lot of extra things for Kate to sort out but I'm sure you'll agree it was well worth it.\" His grin widens even more and suddenly all I can see is Kate, her smiles lights up her face in the exact same way...\n\nLiam goes quiet as we pull into the hospital car park and find a space, perhaps he thought he'd upset me...I don't know. My stomach starts to churn once more as we climb out of the car...too late to turn back now...\n\n...\n\nWalking through the hospital my breathing starts to become rushed and unsteady, my heart starts to race and my palms feel sweaty as I sense the colour draining from my face. If Liam wasn't walking right by my side I'm not sure I would've made it this far.\n\nHe pauses when we reach the door to Kate's room.\n\n\"You good?\" He asks, noting my shaking hands and white face.\n\n\"Yeah...yeah...I will be...I-\" I stammer as the door opens.\n\n\"Erin sweetheart!\" Elaine exclaims, pulling me into a tight hug the instant she steps out of the room \"How are you honey? Thank you so much for coming, it means so much to us all.\"\n\nLiam rolls his eyes at me over his mum's shoulder and I smile a little feeling my breathing steady and my body becoming more relaxed the longer Elaine hugs me.\n\n\"Would you like to come in and see her?\" Elaine asks quietly.\n\nI nod slowly and follow her into the room.\n\nMy breath catches in my throat when I see Kate. To say she looks dreadful is an understatement. Elaine wasn't exaggerating when she said she wasn't taking care of herself. Apart from the enormous dark circles under her eyes, her skin is so pale she seems to be glowing under the lights. Her lips are a light grey-blue colour and god does she look thin, if I didn't know her face so well I'd almost think she was an imposter.\n\n...\n\nPerhaps fifteen minutes or so later, Kate stirs a little as we stand in an awkward silence around her bed. Ira, Elaine and Liam to one side and me alone on the other.\n\n\"Hey there Katie-Kat.\" Liam smiles at her as she blinks groggily.\n\nShe tries to sit up but Elaine steps in:\n\n\"Don't move sweetie,\" she says, pushing her back down, \"your appendix burst, you need some time to relax and recover.\"\n\nThey talk a little more between themselves but I can't stop looking at Kate, I'm completely transfixed by her.\n\n\"Try to sleep Katie.\" I say surprising even myself as the words come out.\n\n\"Erin?\" Kate croaks as she turns to face me, her hand reaches for mine.\n\n\"It's me sweetheart.\" I whisper.\n\n\"Erin...\" tears spring from her eyes and she laces her fingers as best she can through mine \"Honey...I'm so sorry...\"\n\n\"Shhhhh.\" I whisper again as I move some hair back from her face and tuck it behind her ear \"Go to sleep.\"\n\n\"But I...I...\"\n\n\"Shhh Katie, go to sleep.\"\n\nSlowly her grip on my fingers loosens as she relaxes back into sleep but I find myself unable to let go of her hand, Ira slides a chair across to me and together he, Elaine and Liam back out of the room leaving me alone with Kate...\n\nChapter Two:\n\nVancouver:\n\nTwo days had passed since I arrived in Canada and once again I found myself sitting outside Kate's room talking with Elaine. Even though I'd been here at the hospital as often as visitors were allowed since I'd arrived I just couldn't bring myself to go back into the room and sit with Kate again. I knew I still loved her but I was shocked at just how quickly those strong feelings had come back when I'd seen her on that first day.\n\n...\n\nI sigh inwardly, I can hear people talking further down the hallway as I sit there with Elaine, bits of medical conversation, doctors discussing patients, relatives visiting their loved ones.\n\n\"Ira cheated on me once you know,\" Elaine says suddenly, with the air of someone throwing caution to the wind, \"we'd only been married a few years, Nathan was just a toddler and I was six months pregnant with Liam, I thought my life was ending.\"\n\nMy mouth falls open, I had no idea Ira had ever cheated, they had always seemed to happy and solid to me and Kate had often described them as being unbreakable.\n\n\"Does Kate know?\" I ask.\n\n\"No, she doesn't.\" Elaine continues \"None of the kids know,\" it's clear from her facial expression just how much this memory still haunts her all these years later, \"but my parents knew...and I made damned sure Ira's parents knew too, the beating his father gave him, I don't think their relationship ever fully recovered afterwards.\" She sighs and pauses a wave of relatives walk past us. \"I know it still hurts Erin, believe me I do. She did a stupid, selfish, hurtful thing and I'm in no way condoning it...but there's not a day that goes by where I regret giving Ira the chance to make it right... we wouldn't have had Jamie or Katie if I hadn't...\"\n\n\"It was different for you though,\" I whisper, still reeling from the shock of hearing this story, \"you had Nathan to think of, you were pregnant, you had a family to keep together. I just have myself to take care of an-\"\n\n\"And is denying yourself what you want taking care of yourself?\" Elaine interrupts.\n\nI don't answer, my chest starts to feel tight as my heart thumps harder against my ribs.\n\n\"She needs you in her life sweetheart and you need her in yours, I never thought I'd see her happy until I saw her with you. We'd met girlfriends before of course, but I'd never been enamoured with any of them and I think if she was being honest Kate wasn't either, they were just a way to keep me quiet.\"\n\nI can't help but smile I little when I hear these words, remembering how Kate had once told me that was precisely why she brought girls home.\n\n\"But then you came along and she was different, she was in love, head over heels in love with you, Ira and I were so happy...\"\n\nI feel my eyes start to burn and tears forming as another crowd of relatives walk past. Elaine pauses again before speaking.\n\n\"All I'm saying honey, is that people make mistakes, some bigger than others, it's just human nature. But it's how they learn from them that makes all the difference in the world. She loves you so much Erin. Please come in and sit with her again for a while.\"\n\nI shut my eyes and desperately try to supress the tears rolling down my cheeks, I know what Elaine is trying to say, I know her intentions are pure, but it doesn't take away the hurt and anger I still feel about what Kate did.\n\n\"I'm just going for some air.\" I stammer at Elaine as I stand abruptly from my chair.\n\n\"I'm so sorry Erin,\" she tries to hug me, \"I didn't mean to upset you.\"\n\n\"It's fine, honestly.\" I say, moving out of her reach \"I'll be back in a while.\"\n\nI get roughly half way down the stairs before I'm unable to hold the tears back any longer and I end up sat crying alone in the stairwell.\n\nI know Kate still loves me, in spite of the medication I could see that the instant our eyes had met when she'd first come around two days ago and seeing those genuine tears falling down her cheeks had broken my heart. But the pain she caused was still there too, burning away in a corner of my heart, getting harder and harder to ignore.\n\n...\n\nSlowly I begin to get my breathing back under control and compose myself, I need to get away from the hospital for a while, a few hours at least. I head back upstairs to let Elaine know I'm gonna make my way into the city and find that she's in Kate's room. I hesitate outside the door as I hear voices coming from inside;\n\n\"...and she won't come in?\" I hear Kate say.\n\n\"It still hurts too much Katie.\" Elaine replies.\n\n\"I know it does...\" my heart stops as Kate starts to cry \"I love her so much mom...I ne...need her to come see me so I can...I can explain...\"\n\n\"Oh sweetie,\" Elaine whispers, I chance a glance round the door and see her gather Kate in her arms, holding her close, rocking and shushing her like she would a child who'd had a bad dream, \"I tried for you honey, I really did. But you know what? She's here, I called her, said you were in the hospital and she got on the first flight out here. That counts for something right?\"\n\nKate nods as best she can against Elaine's shoulder and I back out of the doorway again. Leaning back against the cool wall in the corridor I feel my own tears start to drip off my chin once more.\n\n...\n\nI avoid the hospital over the next few days...Elaine tells me that Kate has managed to get herself out of bed and walking round the room, they're hopeful she can come home soon, other doctors and nurses she knows from around the hospital have visited...but she asks about me first every time anyone new arrives.\n\nStill unsure about how I feel about Kate at the moment, I politely nod and try to avoid her eyes.\n\n...\n\nThe following morning I make my way down for breakfast and catch the end of a conversation between Ira and Elaine.\n\n\"...you can't keep trying to interfere Elaine!\" Ira says firmly \"I know you mean well...and believe me I want them back together just as much as you do...but guilt tripping Erin into staying won't help.\"",
        "\"I'm not going to guilt trip her Ira!\" Elaine hisses \"They're perfect together and they're still crazy about each oth-\"\n\n\"Maybe they are,\" Ira interrupts, \"but Kate comes home this afternoon and we need to let Erin decide what she wants to do now.\"\n\nI take a deep breath, I knew this day would come soon and Kate would eventually be coming home but I can't say I'm prepared for it. Unable to avoid entering the room any longer I try to make it look like I haven't heard any of their conversation and re-arrange my features into a hopefully calm and composed exterior.\n\n\"Morning Erin.\" They chorus together as I enter the room.\n\n\"Morning guys.\" I smile mechanically as I sit down across from them.\n\n\"So, Erin, honey,\" Elaine begins without letting me draw breath, \"Ka-\"\n\n\"Erin,\" Ira takes over giving Elaine a meaningful stare, \"I'm not sure of the best way to tell you this so I'm just gonna come right out and say it. We found at this morning that Kate will be coming out of the hospital this afternoon, we're picking her up around two. I thought I'd give you the heads-up now rather than it being a surprise later on.\"\n\n\"Thanks Ira,\" I say genuinely, \"I really appreciate it.\"\n\n\"Now obviously you're more than welcome to stay here with us, we've no intention of kicking you out.\" He smiles.\n\n\"We love having you here.\" Elaine beams at me \"We think of you as one of the family.\"\n\n\"But...\" Ira continues \"We'll understand if you don't want to, things between you and Kate are still all over the place at the moment and we just want you to know, whatever you decide to do, we're here for you.\"\n\n\"Thank you, both of you,\" I say as calmly as I can manage, \"it means a lot.\"\n\n\"Don't even mention it honey.\" Elaine smiles \"You just let us know what you want to do.\"\n\nI smile again while my stomach starts to squirm with nerves and anxiety...suddenly nowhere near hungry, I excuse myself and head back upstairs.\n\nI sit down on the edge of my bed and rest my head in my hands, I've no idea what to do now, staying here with Kate just down the hall, in her parent's house sounds like more than I can handle at the moment. Maybe I should head somewhere new, that was the plan after all. Kate doesn't need me to be here, she's on the mend, well enough to be leaving the hospital at least, I've spent some time with Ira and Elaine, there's no real reason for me to stay...\n\n...\n\nPerhaps an hour later I'm, yet again, strolling down the corridor in the hospital towards Kate's room and trying to keep my breathing under control. My palms are sweaty, my heart racing, I almost turn back a few times, but I know deep down I need to do this, I need to end this the right way before I go.\n\nI stop outside the door to Kate's room and take one final deep breath. I feel my heart fill with emotion as I enter the room and look at Kate, she already looks so much better than she did, she almost looks like herself again, her hair is tied back with a few loose strands feathering her face and her cheeks have a healthy pink glow. She's sat reading her favourite book, I recognised the cover instantly, I guess she assumes I'm a nurse or a doctor here to do a final check on her stats and stays absorbed in her book as I enter, her arm held loosely out in front of her. It's only when I don't reach out to touch her that she realises something is off and looks up.\n\nShe stands so quickly her stitches seem to pull a little, her hand presses against her stomach and her book drops unceremoniously to the floor.\n\n\"Hey.\" She whispers.\n\n\"Hi there.\" I don't meet her eyes.\n\n\"I...how are you?\" She asks, obviously not sure what to say.\n\n\"I think I should be asking you that question.\"\n\n\"I'm ok, I guess.\" She stammers and blushes a little.\n\n\"You guess?\" I ask. She's nervous...and it's adorable.\n\n\"My abdomen is still a bit sore but otherwise I'm sure I'll be fine.\" Her cheeks turn a deeper shade of red.\n\n\"I can go then?\" I say, still not properly looking at her.\n\n\"No!\" She blurts out.\n\n\"No?\" I raise an eyebrow.\n\n\"No...I'd lik-\" She stops and composes herself \"My parents would love you to stay...they were more excited to see you than they were me when I came back...and I'll be back at work soon so, you know, you'll be able to do what you want without trying to avoid me.\"\n\nShe really wants me to stay, that couldn't be clearer if she tried...and even though I do want to leave...I really don't at the same time...\n\n\"Maybe...maybe I could stay a few more days.\" I say to the floor.\n\n\"That'd be great.\" She beams at me and my heart melts.\n\nOne of the nurses comes in at this point to check Kate's fit to go home, I sit quietly in the corner as they go through the various different tests and try to come to terms with what I've just agreed to.\n\nMaybe it won't be that awkward...\n\nThis thought is soon eradicated as Kate trips on her way out the door to sign some papers and I reach out to steady her without thinking about it. She grabs my hand and I swear a small jolt of electricity passes from my fingertips straight to my heart. As soon as she's stable again I let go of her hand and head out to the car...there's no way this is going to be anything other than awkward.\n\n...\n\nDinner that night was a tense affair, it was just Kate, her parents and me. There was some polite, yet slightly forced conversation as we ate but when her parents left to do the dishes Kate and I didn't say a word to each other, instead we sat and watched tv in silence. Kate opened her mouth a few times as if she wanted to say something but changed her mind and closed it again almost instantly. Conversation only started again when her parents came back\n\n...\n\nThe next few days were no less awkward.\n\nKate wasn't able to get back to work as soon as she'd hoped so we ended up alone in the house together quite a lot. Her brothers often brought the kids round and while I hoped they'd provide a distraction...they didn't...they always seemed to want to do things with both Kate and me together. One snowy afternoon they wanted us to watch a movie, which was fine, until Kate and I ended up squashed together in the middle of the sofa with several sleeping kids on top of us. It was torture, sitting there so close to her, I knew she felt the same, I felt her arm twitch a couple of times, as if she was debating extracting it from between us and wrapping it round my shoulders...it took all the willpower I had to stop thinking about the part of me that wished she would...\n\nWe struggled through meals in the same room and sharing a bathroom. Sitting next to each other in the car was awful...and trying not to relive the memories of our trip to the coast in the UK when we visited a seaside town Elaine had found was almost unbearable.\n\n...\n\nTwo nights before Kate was due to go back to work I came out of the bathroom to a blazing row between her and Elaine, I don't know what they were fighting over but an hour later I heard the back slam just before Ira poked his head around the door to the front room to let me know that he was taking Elaine out for dinner.\n\n\"We'll probably be back late so don't wait up for us.\" He smiles \"Oh...and I think Kate went out too so you've got the place to yourself.\"\n\n\"Have a good night.\" I smile back.\n\n...\n\nI try to return my focus to my book but I feel restless all of a sudden.\n\nI grab a blanket from beside me on the sofa and walk out onto the back porch. There are deliberately no lights on this side of the house so the stars are more easily visible, apparently Ira fancies himself a bit of an astronomy expert so he took them out years ago.\n\nIt's so cold outside, my breath fogs the air instantly when I breathe out as the snow starts to fall again. I've only been out there ten minutes or so when I hear footsteps coming around the corner, I know it must be Kate, not really wanting to speak to her I think about bolting and heading back inside, but I move too slowly and before I know it her footsteps are only feet away from me.\n\nKate freezes when she sees me.\n\n\"I-\" She starts.\n\n\"You shouldn't be out here in the cold.\" I say quickly.\n\n\"I'm wearing a jacket...and a sweater.\" She holds her arms out from my body so I can see \"You shouldn't be out here in the cold either. Mom will do her nut if she catches you.\" She grins.\n\n\"I won't be cold...and they went out for the evening.\" I reply without smiling and turn my hand to show her the blanket I'm holding.\n\nThe grin slips from her face.\n\nI turn back to the stars and wrap the blanket around myself as Kate leans on the railing roughly a foot away from me.\n\nThis is the closest we've been to each other since that afternoon we watched a movie with the kids, physically at least, if I reach out my arm I could actually touch her. Her fingers twitch on the railing and I can't help but let my eyes flick to them. She smiles briefly until she catches sight of my face...she stretches her fingers out and curls them back again, trying to pass off the movement as a muscle spasm.\n\n\"There's a few breaks in the clouds up there...I...I could show you some constellations if you like?\" She asks tentatively. Her eyes meet mine. \"From over here I mean...\"\n\n\"Whatever you want.\" I shrug and turn away again.\n\n\"See this one here,\" she points to a group of stars to her left, \"that's Ursa Major.\" My gaze follows her finger and I nod.\n\n\"How do you know that?\" I ask.\n\n\"Dad...and Liam,\" she replies, \"when we were younger dad used to bring us out here and show us the stars. Nathan and Jamie weren't bothered but Liam loved it, he learnt more than dad in the end and ended up teaching us both.\"\n\nShe smiles a little, showing her teeth and I feel myself start to grin too.\n\n\"Then this one,\" she continues, pointing to some stars to her right, \"this one is Ursa Minor.\"\n\n\"I see.\" I nod again, looking past her hand and into the sky.\n\n\"Except that you don't,\" she laughs, \"you're looking in the wrong direction.\"\n\nWithout pausing she steps across to stand behind me and gently touches the fingers of her left hand to the side of my head, tilting my face in the right direction.\n\n\"It's these ones.\" She whispers, her lips inches from my ear. The hairs on the back of my neck stand up as she lets her fingers trail down my cheek and come to rest on my shoulder.\n\nI hear her breath catch in her throat as she shuffles behind me, I step back nervously to find myself pressed into her chest.\n\nSlowly she brings her right hand down from pointing out the stars and lays it on the railing beside mine, our skin makes the briefest of contacts and a jolt of electricity courses through my body.\n\nKate inhales deeply and I feel her body relax a little, she presses herself more firmly against me and slowly edges her right hand on top of mine. She leans down and nuzzles against my head, the smell of her perfume fills my nostrils and suddenly I know I'm home.\n\nIn a bold move she presses her lips to my head, I sigh and close my eyes for a few seconds, I can't help myself, everything that's happened seems to fade to the back of my mind as we stand there together...I've missed her too much to push her away now.\n\nHer fingers softly brush over the skin on the back of my hand as she brings them up my forearm then up over the blanket covering my shoulders. My heart thumps heavily against my ribs when she reaches the top of my shoulder, I swallow loudly and let out a shaky breath. She must be able to hear my heart beating, I swear it's thudding like a drum under my ribcage.\n\nEver so gently she brings a trembling hand to my cheek and encourages me to turn my face to hers. This time I don't look away from her. I trace my thumb across her cheek as my fingers cup the back of her head and I move closer, she's shaking just as much as I am.\n\nIt seems to take an eternity, but eventually we're there, our lips millimetres apart, Kate licks her bottom lip and I press my lips to hers, unable to hold back any longer. My chest fills with emotion, I open my mouth and her tongue reaches out to meet mine. She moans as my arms wrap around her neck, her hands go to my hips and she holds me against her.\n\nKate nibbles my bottom lip and I push my fingers into her hair, her hands cup my ass and she squeezes gently, eliciting a small moan from me.\n\nWhen we break away from each other for air, I look up at Kate and even in this poor light I can see in her eyes that her arousal matches mine.\n\n\"You wanna take this inside?\" She asks with baited breath, her voice shaking a little.\n\nI don't answer, instead I take her hand and lead her back into the house.\n\nThe blanket and Kate's coat are abandoned together on the bannister at the foot of the stairs.\n\nWe stumble up the stairs and into Kate's bedroom, I slam the door shut and just about get it locked before she's all over me again. We kiss briefly as she pushes my jumper and shirt up and over my head, her hands working on the zip on my jeans. I pull her jumper off and reach around to unhook her bra, our mouths meet again and she nips my lower lip. I moan softly as she starts to push my jeans down over my hips, I can feel a damp spot rapidly forming on my underwear. We break apart long enough for me to remove my jeans, bra and pants and to strip Kate of the remainder of her clothes. She pushes me down onto the bed and kisses me again, one of her hands snakes down my body and she slips a finger into my wet and slippery pussy, I moan again, louder this time and reach between her thighs to find she's in a similar state.\n\n\"Jesus Katie.\" I breathe as I feel her soaked pussy under my fingers.\n\n\"Pl- please Erin...\" she gasps \"I need you...please...\"\n\nI press one finger deep into her and she cries out as I curl my finger searching for her g-spot.\n\n\"Yes Erin...please...right there...right there.\" She rolls her hips against my hand and I press the heel of my palm against her clit.\n\nI don't know whether it was because it was Kate or because I hadn't had sex for a while but suddenly I was right there, I needed her to make me feel like she used to.\n\n\"Fuck me Katie.\" I whisper to her as my arousal reaches an almost unbearable level.\n\nShe doesn't hesitate, she pushes two fingers into my pussy and curls them upwards, my back arches and I press another finger into her. Our eyes meet, both of us panting hard, I feel myself falling over the edge within seconds, my body shaking hard as the intensity of the orgasm takes over.\n\nKate lays shaking above me, the same overwhelming orgasm pulsing through her body. She pulls the covers over us and rolls onto her back still breathing hard, I roll with her and wrap myself around her, my hand cupping her breasts gently.\n\n...\n\nAs our breathing steadies I start to feel the unmistakable pangs of need between my thighs once more. I nuzzle against Kate's neck and plant small kisses on her skin as my hands roam across her chest.\n\nKate slowly pulls my hands away and twists her body until I'm laid on my back.\n\n\"I know baby.\" She whispers as she kisses me.\n\nHer fingernails trail up and down my sides and she pushes my legs apart before pulling me onto her so that the back of my thighs are flush with the top of hers. I wrap my calves around her hips and my hands resume their position on her breasts. I pinch her nipples and she moans appreciatively as her fingers slide back into my hair and she kisses me deeply.\n\nOur tongues meet once more and I lift my hips in an attempt to get contact where I want it the most. Kate must want it badly too because for once she doesn't make me wait and rolls her hips with mine.\n\n\"Ooooh baby...\" I moan with longing as our clits brush briefly together \"right there...more...please...\"\n\nAgain and again we roll out hips together, panting and moaning in unison, we're both so wet that we slide easily against one another. Kate grips my hips firmly and I bring my hands up her back to her shoulders, my fingernails digging in a little.\n\n\"Oh fuck!\" She groans \"I can't...I can't hold it much longer Erin.\"\n\n\"Me neither.\" I confess.\n\n\"Cum with me sweetheart.\" One of her hands leaves my hip and she cups my cheek as our lips meet again \"Please.\"\n\nMy calves tighten their grip around her hips and my fingernails dig in deeper, my back arches causing our nipples to brush against each other's, I tilt my head back, exposing my throat and Kate's lips instantly come to my skin. She bites and sucks gently, her breathing harsh against my neck.\n\nMy orgasm hits only moments later.\n\n\"Oh god...oh god...oh god Erin.\" Kate pants as she feels my body start to convulse and joins me in orgasm.\n\nI've barely started to come down when Kate slides down my body and eagerly presses her tongue to my soaking pussy.\n\n\"Katie...wait...I'm not-\"\n\n\"I've missed this so much.\" She mumbles, ignoring my request as she laps at the juice still flowing from me.\n\n\"Oooooh...\"\n\nIn my sensitive state I experience another small orgasm within seconds as her fingers trail up the inside of my thighs and she sucks my clit into her mouth, fluttering her tongue over it.\n\n...\n\nEver so slowly my heartrate returns to normal and the reality of what just happened starts to sink in. Laying here with Kate between my thighs feels like the most natural thing in the world, but the more my heartrate slows, the more all I can think about is if she laid like this with Nina that night in London. I feel so conflicted; my heart starts to race again as anxiety begins to course through my veins causing my breathing becomes ragged...\n\n\"Erin, honey, what's wrong?\" Kate asks, her voice full of concern.\n\n\"I hate how good this feels.\" I whisper.\n\nSlowly she makes her way up my shaking body and lays gently on top of me, my chest tightens as she risks placing a nervous kiss on my lips.\n\n\"Do you regret this?\" She asks, her voice quiet and uncertain.\n\n\"No...\" I gently push her away from me and sit up on the edge of the bed \"but I feel conflicted...I love you so much...\" I take a deep breath and try to stop the tears starting \"but I'm still so fucking angry with you.\"\n\n\"Baby I know,\" She sits behind me and runs her hands down my arms, \"believe me I know. There hasn't been a day...no, there hasn't been a single second since it happened that I haven't regretted it.\"\n\nShe climbs off the bed and kneels in front of me.\n\n\"It means the world to me that you're still here, in Canada let alone in my bed, but I want you to want to be here. I love you more than anything.\" She takes my hands and kisses the inside of my wrists \"I'll wait for you, I don't care how long it takes...I'll wait forever honey.\"\n\n...\n\nI left early the following morning.\n\nAfter Kate's omission she had managed to persuade me to lay back down and cuddle with her. I passed the time until she fell asleep by staring at the picture of us on her bedside table, it used to sit on the mantlepiece back at home, it was the only thing she had taken when she left. Once I was sure she was fully asleep, I slipped out of bed and went back to my room, trying to make sense of it all, but the more I thought about it the worse things got. I was in Canada, in Kate's house, with Kate's family...we had just had sex...did this mean she thought I forgave her? Did I forgive her? Were we back together? Was I really ready to even consider that possibility?\n\nI decided I wasn't.\n\nI wrote Ira and Elaine a note saying goodbye, thanking them for having me and wishing them all the best. Then I switched my laptop on and booked myself on the first flight out of Vancouver, it didn't even matter that the closest I could get to home was Paris, I just needed to be out of Canada, I would sort the rest out later.\n\n...\n\nSara was almost understanding when I told her what had happened, although she still thought I was an idiot for even going to Canada in the first place.\n\nI could see where she was coming from, before I'd gone I had a new job and a new girlfriend, the chance to start fresh...now, I still had the job but I was back living by myself in a house full of memories of Kate with just Wilbur for company and no distractions.",
        "Sara and Lucy invited me round for dinner a lot but I was always conscious of overstaying my welcome, they had a wedding to plan and a future to look forward to, I didn't want them worrying about me.\n\nThe months passed slowly, I threw myself into work and doing the things I enjoyed...things were getting better again...until one evening at the end of April...\n\nChapter Three:\n\nAn Unexpected Reunion:\n\nI switch off the shower and step out into the muggy room, my body filled with the satisfying ache of a hard training session. I've just about finished drying my legs when a loud bang comes from somewhere downstairs. Assuming that Wilbur has managed to knock something over I sigh and wrap a towel around myself before opening the bathroom door to investigate. I'm halfway across the landing when I hear a voice coming from the front room.\n\n\"-where is she buddy, eh?\"\n\nI cautiously pad along the landing and look down the stairs. I can't see a thing...my heart starts thudding harder against my ribs as I frantically look for something to use as a makeshift weapon...\n\n\"...have you missed me? I bet you have...I'm so sorry for that day I was packing...\"\n\nI stop the second I recognise the voice.\n\nMy chest fills with a combination of annoyance and nervous excitement when I remember that Kate still has a key, I walk slowly down the stairs and try to get my thoughts organised and my breathing under control.\n\nNot that it matters.\n\nMy foot connects with something heavy and solid as I reach the bottom and sends me flying into the hard-wood floor, all dignity and sensible thoughts forgotten.\n\n\"Ah! What the hell!\" I cry out in pain.\n\n\"Erin?\" Kate appears in front of me \"Erin...fuck...I'm so sorry, I meant to move those but got side-tracked. Are you ok?\"\n\nI try to get up but my ankle won't take my weight and I end up falling into Kate.\n\n\"What are you doing here?!\" I ask angrily.\n\n\"Come here, I've got you.\" She says, gathering me in her arms and ignoring both the question and my attempts to push her away.\n\nShe sets me down on the sofa and kneels in front of me. Her gaze lingers a little on the exposed skin at the top of my thighs but she manages to tear her eyes away as she looks at my ankle.\n\n\"What're you doing here?\" I ask again, raising an eyebrow at her and then trying not to wince as she rests my foot on her thigh.\n\n\"I'm examining your ankle, I don't think it's broken but-\"\n\n\"You know what I mean.\" I fix her with a firm stare \"Why are you here?\"\n\nShe sighs and looks up at me, those gorgeous brown eyes round, watery and full of sadness.\n\n\"I want to come home Erin.\" she whispers.\n\n\"You want what?!\" I say incredulously.\n\n\"I want to come home.\" She repeats, tears now brimming in her eyes.\n\n\"I'm not leaving!\" I say firmly \"This is my home...so if you think you can just walk in here and tell me to piss off you've got another thing coming.\"\n\n\"No...you misunderstand me,\" she shakes her head a little \"I don't want you to leave. I want to come home...to you...please Erin...I miss you so much. I quit my job at the hospital in Vancouver...\"\n\nI stare open-mouthed at her, words refusing to come out...that job was the one she'd always wanted, that she'd worked so hard for...\n\nShe looks down and I feel her tears fall onto my skin.\n\n\"I tried to give you space,\" she sobs, her voice barely more than a shaky whisper, \"to let you move on, but I just can't do it. I can't Erin. When I woke up that morning and you were gone I felt like I was only half a person, you're my other half honey, my soul mate...and the thought of you with someone else...it breaks my heart an-\"\n\n\"And how do you think I felt when I found out you'd fucked that bitch?!\" I snap, words suddenly coming easily to me \"Do you think I wasn't heartbroken?! That I didn't feel sick every time I closed my eyes and all I could see was you with her legs wrapped around your neck?! That I didn't spend weeks, no months, wandering around not knowing what to do with myself?! That-\"\n\n\"Erin, I kno-\" She starts, tears falling thick and fast.\n\n\"No, you don't know!\" I interrupt angrily\n\n\"I know,\" she replies firmly, her fingers cup my chin and she holds my head in place as our eyes meet, \"I know I fucked up and believe me, there hasn't been a single second since it happened that I haven't wished more than anything I could go back in time and fix it. When you first said you loved me too all those years ago it was like life finally made sense...the woman of my dreams loved me back, I spent the first few months of our relationship pinching myself, things that good never happened to me...and then I did what I did and threw it all away.\" She pauses and I can't tear my gaze away from her \"When you came to visit me in the hospital it meant more than the world to me. I honestly thought I'd never see you again. Then, that night...at my parents' place...\"\n\nI take a deep breath before speaking again, my words come out quiet but harsh.\n\n\"So, you think you can just waltz back in here, tell me you've quit your dream job for me, give it the sad eyes and the big speech and the happy memories and I'll turn around and say I forgive you and welcome you back with open arms? Is that it?!\"\n\n\"No, I-\"\n\n\"What you did destroyed me Kate!\" I take another deep breath and try desperately to fight tears, the words I should have said all those months ago finally coming out in a rush \"I thought we were happy...I thought you loved me...that you would never hurt me or humiliate me like that...I knew there was something wrong the second you got back from London but I pushed it away...I tried to believe you when you said you were sick, I wanted more than anything for that to be the truth...then finding out it wasn't...\"\n\nI can't finish that thought, I try to stand again but the pain in my ankle stops me and I end up sat on the edge of the sofa, angry and frustrated tears pouring down my cheeks. Kate says nothing, tears continue to fall down her face as she silently examines my ankle. She leaves to fetch the first aid box from the kitchen, then comes back and tenderly wraps a bandage around the painful joint.\n\n\"It isn't broken,\" she says quietly, her fingers lingering on my calf \"but you should try not to put any weight on it.\"\n\nShe glances at the clock on the wall and stands up, offering me her hand.\n\n\"Please,\" her eyes flick to mine, \"just let me help you up to bed.\"\n\nThe genuine concern in her eyes combined with the pain throbbing through my ankle and up my calf forces me to reluctantly take her hand and allow her to help me back up the stairs to bed.\n\n\"Do you have anywhere to stay tonight?\" I ask as she sets me down on the edge of the bed and I pull my pjs to my chest.\n\n\"I might call Dan,\" she turns away allowing me some privacy to change, \"if he's working he might give me the keys to his flat...or I can find a hotel.\"\n\n\"You don't have to leave, there's the sofa downstairs.\" I sigh quietly as I slip my t-shirt over my head and my heart beats my head in the internal battle over offering for her to stay \"For tonight it's yours...if you want it?\"\n\n\"That'd be great.\" she answers still looking away.\n\n\"Here,\" I pass her a pillow as I pull the duvet around me, \"there's spare blankets in the wardrobe.\"\n\n\"Thanks Erin...it's more than I deserve...\" She pulls the blankets from the top shelf.\n\n\"I'm pretty pissed off that you're here Kate, but I'm not completely heartless. I'm not gonna kick you out in the middle of the night.\"\n\nShe takes a step toward me, I think to simply just say 'thank you' but thankfully she stops almost as soon as she starts, my emotions are all over the place at the moment and I think the look on my face is enough to put her off, instead she hesitates, tucks the pillow under her arm, gathers the blankets together and heads back downstairs.\n\nMy tears start to flow again the second I hear her reach the foot of the stairs, thoughts and feelings I thought I was over come painfully to the surface as I lay there reliving the first few nights I was without Kate in this bed. I try to muffle the sound by pulling the duvet up and over my head but it doesn't matter...the sound of Kate sobbing downstairs covers any noise coming from me...\n\n...\n\nTo say that night was a long night would be an understatement, Kate's cries echoed through the house for what felt like an eternity, the sound tore at my heart. I wanted desperately to just hold her until the hurt went away...until I flashed back to the night she came home from London, when I did just that and it turned out she had spent the previous night tearing my world apart...\n\n...\n\nEventually the sun rises and light creeps into the room, I hear Kate moving around downstairs and manage to drift into a light doze.\n\n...\n\nMy eyes open again what feels like seconds later at the sound of a cup being placed on my bedside table, I look up to see Kate nervously watching me. Somehow the sight of her doesn't seem so unbearable this morning.\n\n\"Morning,\" she says tentatively, \"I thought maybe you might like a drink?\"\n\n\"Thanks.\" I sit up and Kate hovers in the doorway. \"Do you want something?\" I ask.\n\n\"Only you.\" She whispers.\n\n\"Kate...\" I sigh \"please don't do this.\"\n\n\"Sorry, I didn't mean to say that out loud.\" she replies genuinely.\n\nI don't answer, instead I bring the cup to my lips and take a drink...cursing her silently for remembering just how I like my tea.\n\n\"How's your ankle this morning?\" She ventures, the hint of a smile playing at her lips when I don't complain about her tea making skills.\n\nI reluctantly swing my legs out of bed into the cold room and Kate eagerly moves forward to meet me, she sets her mug down next to mine before kneeling and again placing my foot on her thigh, her fingers trail softly up the bandage around my calf before she slowly begins to unwrap the cloth.\n\nMy ankle is a delicate combination of grey, blue and purple bruising, Kate tenderly checks the joint and pulls me towards her slightly,\n\n\"Can you stand?\"\n\nShe offers me her hand as I gingerly try to put weight on my foot, I cry out in pain and my free hand grips her shoulder.\n\n\"Ok, ok,\" she says quietly, her fingers squeezing my hand tight, \"sit down, I'll be right back, I'm gonna go get some ice.\"\n\nI flop back down on the bed and resume drinking my tea, true to her word Kate is back only minutes later with the ice and some ibuprofen. I take the tablets from her and nearly choke as she presses the cold ice to my ankle.\n\n\"Sorry,\" she presses her fingers to the back of my knee and uses the pressure to lever my leg into position, \"I'll just hold this here for a bit longer and then I'll leave you to it.\"\n\nTears form in my eyes as she adjusts the ice on my ankle to a particularly sensitive spot of skin.\n\n\"Kate,\" I gasp and she looks up at me, \"can you stop please?\"\n\n\"Sorry,\" she says standing quickly and dropping my ankle, \"I should go...\"\n\n\"No, I meant, can you stop with the ice, it really hurts.\" A couple of tears drip down my cheeks as my eyes water in pain.\n\nI swing my legs back onto the bed and Kate sits at my feet.\n\n\"Sorry,\" she takes my ankle and rubs it gently, \"I think it'll be best to just leave it uncovered today.\"\n\n\"May as well,\" I reply, trying to ignore how much I've missed her touching me, \"it's not like I can go anywhere anyway.\"\n\n\"Did you have a lot to do?\"\n\n\"I need food, I haven't had chance to go shopping lately...and Wilbur needs some bits.\"\n\n\"I'll go for you.\" She says quickly \"It's my fault you're in this state in the first place, it's the least I could do.\"\n\n\"You want to go shopping...for food?\" I raise a questioning eyebrow at her. Kate hates shopping...and she never comes back with anything I actually need when she does go...\n\n\"Please...I promise I'll try really hard to bring you things you actually want.\"\n\n\"I'll write you a list.\" I sigh.\n\nWhile I try hard not to smile at her enthusiasm, Kate doesn't even attempt to mask her happiness and my smiles widens in-spite of myself, I'm still furious with her for so many things but seeing her happy never stopped being infectious.\n\nBy the time I'd finished the list and allowed her to escort me back downstairs she was practically giddy. Perhaps, like me, she was starting to feel that last night was the final time either of us would spend a night crying over what had happened...\n\n...\n\nTwo hours later she came back with what has to be said was a considerably better offering than her previous attempts at food shopping, she'd also bought me some flowers as an apology for almost breaking my ankle.\n\nI was hobbling round the kitchen trying to put things away when she came in with the final bag of shopping.\n\n\"Erin, what the hell do you think you're doing?\" She asks, dumping the bag on the side.\n\n\"Putting the shopping away...\" I groan as I knock my ankle lightly on an open cupboard door.\n\n\"I'll sort it,\" she steps in front of me and pulls the bread from my hand, \"go and sit down.\"\n\n\"I can put shopping away.\" I snap while my eyes water yet again.\n\n\"Yeah,\" Kate replies calmly, \"buuuuttt you can't really can you?\" She brushes a few stray strands of hair from my face and briefly cups my cheek in her hand \"Please go and sit down.\"\n\n\"I'll make us a drink.\" I answer, avoiding her eyes and hobbling over to the kettle.\n\nReaching up to grab a couple of mugs I stagger a little on my bad ankle and Kate grips my hips from behind making me jump.\n\n\"Steady there.\" She breathes against my ear.\n\n\"Don't you trust me to make a drink without help?\" I gasp.\n\n\"Not with that ankle I don't.\" Her grip on my hips doesn't falter \"Please Erin, just let me take care of you...I am professionally trained in providing care to people who need it you know.\"\n\n\"Even if you're the reason they need it?\" I say sharply.\n\nKate lets go of my hips and bends down to resume putting the shopping away without looking at me.\n\n\"I'm sorry,\" I say honestly, hobbling over to her and resting my hand on her shoulder \"I didn't mean that how it sounded.\" I squeeze her shoulder gently \"I don't want to fight with you anymore Kate.\"\n\n\"I don't want to fight with you either.\" She lays her hand on mine and turns to look up at me \"I'm so fucking tired Erin.\" She stands up and wraps her arms around my neck \"I don't just mean tired of fighting...I'm tired of it all...\"\n\nI stiffen a little at her initial closeness but I can't just switch off from how much I care about her and want to comfort her when she's hurting like she is.\n\n\"I know sweetheart,\" I sigh and wrap my arms around her waist, \"I'm tired too.\"\n\n\"Do you think, maybe it'd be ok if...if we could just be tired together for a while?\" She whispers against my cheek.\n\n\"That sounds ok to me.\" I say, holding her a little tighter.\n\nI lose track of time as we stand there holding each other, the shopping lays forgotten on the kitchen floor...it's only when I notice the ice cream dripping onto the side that we finally pull apart.\n\nChapter Four:\n\nThree Weeks Later:\n\nKate was still staying in the house with me...well...I say she was just 'staying'...but in reality she was living here. It hadn't been that bad really, I had needed her around for the first few days while my ankle healed and then I just never got around to asking her to leave again.\n\nMost days I barely noticed she was back to be honest, she had easily walked back into a job in a private practise about two weeks ago so I hadn't seen her that much. The only real evidence of her presence were the suitcases lining the hallway, her toothbrush in the bathroom and the fact that my sofa was now permanently made up into a bed so I couldn't watch tv when I wanted.\n\n...\n\n\"Hey Erin,\" Kate shouts from downstairs, \"have you got a suitcase I can borrow for this trip?\"\n\n\"Yeah, I should have,\" I shout back, throwing my towel down on the bed, \"hold on, I'll just have a look for you.\"\n\nI open the wardrobe door and pull the suitcase towards me, it feels heavier than it should. Opening it I soon realise why, I'd been throwing unopened letters from Kate in it for the better part of four months...I tip the case up and throw the letters on my bed before taking it downstairs to the front room.\n\n\"Thanks,\" Kate smiles, taking the case from me, \"I'm kinda still living out of mine.\"\n\n\"No problem. What's your conference about?\" I ask.\n\n\"Oh, just some cardiologist telling us about his latest work. It'll probably be really dull but you never know, it might prove useful.\"\n\n\"And you'll be back Wednesday?\"\n\n\"Maybe Tuesday night if things get wrapped up early enough...why'd you ask, you gonna miss me?\" She grins.\n\n\"Nah,\" I smile, \"I have a date...if things get heated I won't bring her back here if you're around...wouldn't want you getting jealous.\"\n\n\"Really?\" She asks, her face suddenly serious despite the smile.\n\n\"Really what?\"\n\n\"Do you really have a date?\" Her smile drops.\n\n\"No, not really.\" I reply \"But even if I did, what concern is it of yours?\"\n\n\"None I guess...but I'd be heartbroken.\" She admits, turning back to the case and throwing things in.\n\nShe stands up and faces me again, her eyes focused fiercely on mine\n\n\"I meant it when I said I'd wait forever honey.\"\n\nWe stand there watching each other without moving for what feels like forever, it's on the verge of getting uncomfortable when Elaine thankfully chooses that moment to phone her daughter and I can escape from the room while they talk. I head back upstairs and go to grab my towel but instead find myself picking up one of the letters from Kate. I pause for a second and listen for Kate, she's still talking to Elaine downstairs. Assuming it's safe to open one I sit down on the edge of the bed and start to read.\n\n...\n\nA couple of hours later I'm nowhere near finished with the letters. Surprisingly Kate hadn't filled each and every one of them with statements begging me to take her back, they were almost like a diary of her time in Canada and reading them actually made me feel closer to her again. She wrote about her family and how work was going, told me funny stories about different things that had happened and always asked questions about what was going on with me. The barriers around my heart felt like they dropped a little more with each letter I read and she ended each one with the same three lines:\n\nYours, always and forever,\n\nKate,\n\nxxx\n\nI stayed up late into the night reading them and made a point of getting up earlier than I had too the next morning to see her off.\n\n...\n\n\"Here,\" I gently nudge Kate with my foot, \"wake up and drink this.\"\n\n\"Whaaa?\" Kate groans and rolls to face the back of the sofa \"Nooo...it's not time to get up yet.\"\n\nI put the drink down on the coffee table behind me and pull the blanket from over her.\n\n\"Oh no you don't!\" Kate laughs and sits up against the back of the sofa. Grabbing my wrists, she pulls me gently but firmly towards her until I have no choice but to straddle her lap \"You take away the blanket, you keep me warm instead, that's the deal.\"\n\n\"I brought you a coffee, does that not count as payment enough?\" I ask, secretly loving the playful familiarity of this exchange.\n\n\"Hmmm, I suppose...think of this as the price you pay for waking me up so early then.\" She grins.\n\n\"Kate,\" I grin in spite of myself, \"it's not early, look...\" I reach over and pass her phone to her.\n\n\"Shit!\" She curses, noting the time \"I'd best drink up quick then.\" One arm wraps around my waist as she leans forward to pick up her drink.\n\nShe takes a sip and then leans in again and pecks my lips. My eyes widen, both in surprise at the kiss and at the butterflies that materialize instantly in my stomach at such a simple gesture.\n\n\"Oh fuck. I'm so sorry Erin...\" she looks away sheepishly \"I'd best go jump in the shower...\"",
        "Kate scrambles out from underneath me and heads upstairs while I sit in a stunned silence on the sofa, I find my fingers suddenly drawn to my lips and they come to rest on the area she kissed.\n\nShaking my head, I switch the tv on and wrap the blanket around my shoulders. I've no idea what's on, Kate's lips are all I can think about, I had always found them irresistible, so much so that I barely notice her come back into the room and start to move me around on the sofa while she finds her phone.\n\n\"...back either tomorrow night or the day after, ok? Hello, Erin?\" Kate grips my shoulder.\n\n\"Hi,\" I blink, \"yes, tomorrow...fine...\"\n\n\"Either tomorrow night or the morning after...you feeling ok?\" Her eyes search mine.\n\n\"Yeah, yeah I'm good.\" I smile back as she rests her hand on my forehead.\n\n\"You don't feel warm or anything.\" Her expression becomes uncertain.\n\n\"Kate, honestly, I'm fine.\" I push her hand away \"You'd better go or you'll be late.\"\n\n\"You call me if you need anything ok?\"\n\n\"I will.\" I reply, standing up and backing her towards the front door \"Now go.\"\n\nSomewhat reluctantly she eventually does leave.\n\n...\n\nAfter she'd gone I spent yet another afternoon confused and conflicted, we'd gotten so used to each other again that, at the time, the kiss had seemed perfectly natural, like we were back to how we used to be.\n\nI knew that Kate wanted more than anything for that to be the case, for us to be together again, she was trying so hard to keep those feelings buried but I knew her too well to be fooled...and maybe she knew me too well to know that deep down, despite how desperately I tried to hide it, I wanted that too...\n\nChapter Five:\n\nMother Nature Steps in:\n\nFor the next month, no major changes occurred in our daily routine. Each day we said morning, wished each other a good day and perhaps spent a little time together in the evenings before saying goodnight. I slept upstairs and Kate remained on the sofa. I wouldn't say either of us were overly happy, but things were better than they had been for a long time...we were making the arrangement work at least...\n\n...\n\nEventually the weather warmed enough to signal that summer was finally fully upon us, but while I was taking time off and enjoying the sun Kate was working increasingly long hours at the hospital. I knew there was something wrong, Kate loved the sun and the outdoors, when we had been together we had eaten out in the garden as often as possible, gone walking in the woods after work or spent frequent long weekends at the coast during the summer months. I tried to ask her if she was ok, I couldn't help myself, I knew her too well to know she was hiding something, but she waved my concerns away and either changed the subject or headed out the door to work again.\n\nA small part of me enjoyed her being out so often, it meant I had the house to myself and could do whatever I wanted, like play music loudly without having to worry about waking her if she was on nights or watch what I wanted on tv...but for the most part, I actually found myself missing her being around, she was still good company after all.\n\n...\n\n\"Right then Wilbur.\" I step over him and grab my bucket of water \"Let's get this bathroom sorted out.\"\n\nI squirt some bleach in the water and make my way through the front room to head upstairs.\n\n\"Jesus fucking Christ!\" I yelp as I trip, yet again, over Kate's laptop charger.\n\nThe bucket goes flying out of my hand and lands on the sofa, water spills out all over Kate's makeshift bed, why she never bought an actual bed for the spare room I don't know. I try to grab the bucket before it's completely empty but it's no use, the sofa is completely soaked through...and smells strongly of bleach.\n\n\"One day I'm gonna let you eat this damned thing!\" I sigh at Wilbur as I pick the charger up and put it on the table out of his reach.\n\nCursing again I grab the cushions from the sofa and lean them against the fence in the garden to dry, I'm just opening the windows in the room to get rid of the smell when Kate walks back in from her night shift. Clearly exhausted she stumbles into the room and drops her bag in the doorway.\n\n\"What the hell happened in here?\" She asks.\n\n\"I fell over your laptop charger and threw a bucket of water and bleach over the sofa.\"\n\n\"In retribution or by accident?\" She grins.\n\n\"I think karma covered retribution.\" I smile back at her \"But if you leave it out again I've promised Wilbur he can go to town on it.\"\n\n\"Sorry, I'll try and remember to keep it out the way.\" She tests the sofa to see just how wet it is. \"Guess I'll be sleeping out in the garden this afternoon then.\"\n\n\"The sun would probably do you good,\" I remark, noting just how pale she looks, \"but I think you'd sleep better in bed.\"\n\n\"I don't have a bed.\" She laughs \"I'm gonna have to sleep outside.\"\n\n\"Promise me...\" I hesitate a little \"Promise me you'll get a shower first...and you can sleep in mine...I just changed the sheets so it's clean.\"\n\n\"Really?\" She asks and I nod \"Thanks Erin,\" she smiles and gives me a quick hug, \"I promise I'll shower first.\"\n\nShe goes to kiss me on the cheek but ends up catching my lips as I turn my head at the same time.\n\n\"Sorry...\" she whispers as we both blush \"it was an accident.\"\n\n\"It's fine.\" I stammer, unable to focus on anything but her lips still only inches away from mine.\n\nI don't know how long we stood there like that, but it felt like I'd aged a good couple of years before I could get my feet to function to move away. Kate headed upstairs and I went to the kitchen to have another attempt at getting a bucket of water, we stumbled around each other as she came out of the bathroom and I went in to clean it, both of us seemed to be filled with a sort of nervous energy that was only heightened by the fact that Kate was wrapped in a short towel that left nothing to the imagination.\n\n...\n\nThings got worse when I decided to make a trip my sister's and then to the shops that afternoon, I got everything I needed but the drizzle that had just started when I entered the shop was a torrential downpour as I got back in the car...I knew Kate would most likely still be asleep so I rushed back to try and get my washing before it was completely soaked through, I burst through the front door and ran through to the back garden to get the clothes off the line when I noticed the sofa cushions still propped against the fence...shit!\n\nI threw everything on the kitchen table as I went back for the cushions...rushing was pointless, they were soaked through too...although they at least didn't smell of bleach anymore...I carried them upstairs and stood them in the bath to dry off while I hung the clothes over the clothes horse.\n\n\"Hey.\" Kate says suddenly from the doorway.\n\n\"Jesus!\" I gasp, spinning around and clutching my chest \"You scared me half to death there.\"\n\n\"S-sorry...\" she yawns, her hair sticking up all over the place \"and I'm sorry about the washing, I didn't realise it was raining.\"\n\n\"Don't worry about it,\" I smile, \"you look shattered, you should get back in bed.\"\n\n\"Nah,\" she yawns again, \"I can't. If I do I'll be dead to the world later when you come to get in yourself. You'll not wake me up.\"\n\n\"Yeah...about that...\" I turn my attention back to the washing \"I think maybe we might have to share tonight...the sofa cushions got caught in the rain too...they're in the bath, drying off.\"\n\n\"Oh...right...will they definitely not be dry in a few hours?\"\n\n\"You can check them.\" I say \"But they probably won't be dry before tomorrow morning.\"\n\n\"Will...will you be ok...with us sharing I mean?\" She looks at me sheepishly.\n\n\"I'm not going to make you sleep on wet sofa cushions Kate,\" I smile, \"I'm sure we'll survive for one night.\"\n\n\"Only if you're sure you're ok...I could sleep at the hosp-\"\n\n\"Kate,\" I interrupt, \"it's fine, it'll be ok.\"\n\n...\n\nI glance up at the clock on the wall, it's only half ten and I can barely keep my eyes open. Sighing deeply, I drag myself out of my chair and make my way upstairs. I pause as I reach the bedroom door and peer inside, Kate had gone back to bed after dinner a few hours ago and was now, as she'd predicted, dead to the world.\n\nShe looked a lot like she did the night she'd first told me she loved me, her hair was pushed up in a mess around her head, the covers pulled up high around her chin to compensate for the breeze blowing in through the window, I can't help but think just how beautiful she looks...and how much I've missed looking at her...it's only when I notice her arm wrapped firmly around my pillow in the middle of the bed that I realise this could be more problematic than I'd first thought.\n\nI pad across the room and slip my pjs on, my eyes never leaving Kate's sleeping form.\n\nAs gently as I can, I slide into bed and slowly pull my pillow from her grasp, she stirs a little but doesn't wake as I settle beside her. I close my eyes and am asleep within seconds.\n\n...\n\n\"Erin...\"\n\n\"Hmmm?\" I groan sleepily.\n\n\"Erin...Erin...I'm so sorry sweetheart...\" Kate whimpers in her sleep beside me \"please...please...\"\n\nI roll over to see Kate visibly upset and laid on her back staring at the ceiling, her face screwed up in anguish and her breathing harsh. While I was still wrapped in the duvet she had pushed it off her body and was now shivering in the cold room.\n\n\"Are you ok?\" I ask quietly.\n\n\"Yeah,\" she replies, her voice shaking as she turns her head to face me and smiles a little, \"yeah I'm fine.\"\n\nNot remotely convinced I instinctively reach down and pull the covers back over her body.\n\n\"You're frozen.\" I note as my fingers brush over her skin.\n\n\"I'm fine honestly I-\"\n\n\"Don't lie to me Kate.\" I sigh \"It's too early in the morning...you were talking in your sleep...bad dream?\"\n\n\"You could say that,\" she whispers, \"did I wake you? I'm sorry, normally I'm in bed by myself so I don't have to worry about talking in my sleep.\"\n\n\"D- do you dream a lot?\" I enquire.\n\n\"There's no variation, it's the same dream every night.\" She admits, returning her gaze to the ceiling.\n\nI can't draw my gaze away from her face as I see the tears start to drip down her cheeks, my stomach tightens as she rolls away from me and pulls her pillow to the edge of the bed. The memories of every heart-breaking moment that's occurred in the past twelve months fade away in that moment.\n\nI follow Kate across the bed, slide my pillow to hers and wrap my arm around her waist.\n\n\"Oh Katie.\" I breathe as I press myself against her.\n\nThe floodgates open when I say her name and she rolls over again so quickly that I'm forced onto my back. She tucks her head under my chin and her arms wrap around me, I hold her close as her body begins to shake, a few loose tears falling from my eyes too.\n\n\"I lo...love you so...so so much Erin.\" She sobs against my chest. \"I'm so sorry...for everything.\"\n\n\"I love you too Katie.\" I reply, my voice barely above a whisper.\n\nIt seems to take an age for her breathing to steady, shushing her quietly I softly brush her hair back from her face and rub small circles on her back. I kiss her forehead gently and her arms tighten around me briefly before she takes a last deep breath and finally relaxes back into sleep.\n\nChapter Six:\n\nThe End of the Line:\n\nThe next morning I wake up to find Kate has already left for work, I feel strangely lonely as I stretch out onto her side of the bed...a lot like I used to feel when she worked nine or ten days in a row and I barely saw her...although back then the welcome home sex would have made the wait more than worth it.\n\nMy stomach gives a tiny jolt as I look across at the clock to see it says 13:09, I must have needed the sleep, I haven't slept this late for months. I throw a t-shirt, some boxers and some shorts on and make my way downstairs to start on the last of the washing to find it's already done and just needs hanging on the line outside.\n\nThe front door opens and Kate walks through it just as I open the back door to take the washing out, she comes through to the garden and wraps her arms around my waist.\n\n\"Thanks for last night.\" She says with a smile that makes my heart melt \"You've no idea how much it means to me. I'm just gonna jump in the shower and then I'll make us some lunch, yeah?\"\n\n\"Yeah, that, that sounds great.\" I reply as she bounds off, surprised by her sudden change of mood, for weeks now she had been down and miserable, yet after one night back in my bed she was like she had been before that fateful phone call from Nina.\n\nWe sit outside on the grass with Wilbur as we eat, neither of us say much but our arms frequently graze each other's as we soak up the sun.\n\n\"I should go grab those cushions out of the bath really.\" Kate sighs as she tilts her face to the sky \"But I can't be bothered.\"\n\n\"Just leave them,\" I answer without thinking, \"it's too nice a day to be worrying about cushions.\"\n\n\"I might need them later though.\" She laughs laying down.\n\n\"Oh yeah.\" I lay down beside her.\n\n\"Unless you're gonna invite me to bed again?\" She enquires, turning to face me.\n\nI don't answer, I can't deny having Kate in bed with me last night lead to the best night's sleep I'd had in a long time...once the tears stopped...but if I allow her in again without good reason where does that leave us? Are we back together...am I emotionally ready for us to be back together?\n\nKate can obviously see my mind ticking over trying to process this information as she sits up.\n\n\"Tell you what,\" she says, \"I'll go get them and get them dried off, then later on tonight, when we go to bed...well, when you want to go to bed...you let me know what you want to do, ok?\"\n\n\"Ok.\"\n\nShe leaves to go grab the cushions from the bathroom and Wilbur comes over for some attention.\n\n\"What do you think I should do eh? Shall we get back together?\" I stroke his ears \"Do I want to be back together?\"\n\nHe looks at me with sad eyes and I'm suddenly reminded of talking to Elaine at the hospital after Kate's surgery earlier in the year.\n\n'All I'm saying honey, is that people make mistakes, some bigger than others, it's just human nature. But it's how they learn from them that makes all the difference in the world.'\n\n...\n\nI dwell on that one piece of advice from Elaine all afternoon while Kate and I sit outside in silence. God knows what she must be thinking but I can't get my brain to focus on anything else. We eat dinner in silence and part ways for bed a few hours later, still without really saying a word to each other.\n\nI lay staring at the ceiling for hours, my body nowhere near tired and my brain refusing to switch off.\n\nI had to admit that since Kate had come back it felt like a weight had been lifted, like we'd reached a calmer and happier place after my trip to Canada and the events that had caused us to break up, I was whole again, she had never mentioned Nina and if I was being honest with myself, I didn't care. I didn't need her to apologise anymore, Nina was gone, out of my life and while I would never forget what had happened in the past, remembering it didn't fill me with nearly as much anger and hurt as it had done for so long.\n\n...\n\nI sit up and throw the covers back, this is it now...time to make a decision. I either go downstairs and tell Kate she needs to leave this house or I go downstairs and tell her to get her backside upstairs to bed.\n\n...\n\nI walk down the stairs as quietly as I can and slowly push open the door to the front room. There was no need to be quiet really, Kate is sat up on the sofa under a blanket reading her book, one arm behind her head pulling the tank-top she's wearing insatiably tight across her chest, her nipples just visible under the material.\n\n\"You can't sleep either?\" She asks, putting the book down.\n\n\"No.\" I shake my head and lean against the doorframe.\n\n\"Have you come to ask me to leave?\" Her face is impassive.\n\n\"I don't know.\" I answer truthfully.\n\nShe sighs and sits up straighter, the blanket gathered around her hips. \"Come here...please honey.\"\n\nShe opens her arms invitingly and I walk across to her. I pull the blanket back to find she's only wearing boxers and hesitate slightly. Kate says nothing but her eyes never leave mine. I straddle her waist and kneel down over her, her hands immediately go to my thighs and her thumbs graze over my exposed skin. I lean closer to her and her hands wander further up my legs until they reach my hips. I trail my fingers up her arms and across her shoulders, leaning further into her until my arms are wrapped around her neck.\n\n\"I've missed this so much.\" She whispers.\n\n\"Me too.\" I admit as I rest my chin on her shoulder. Her thumbs find their way under my t-shirt to run across my back.\n\nWe sit quietly for a long time, comforted by the rise and fall of each other's chests as we relax against each other.\n\n...\n\n\"Erin, you awake?\" Kate asks breaking the silence some minutes later.\n\n\"Hmmm...yeah...\" I breathe turning into her neck.\n\nHer arms tighten around me.\n\n\"Do you want me to go?\" I ask, goosebumps erupting on her neck where my breath meets her skin.\n\n\"Never.\" She smiles turning to face me, her eyes fixed on mine, our lips millimetres apart.\n\nShe lets her gaze drift down to my lips and I run the tip of my tongue instinctively over them, Kate leans in quickly and places a soft, tender kiss on my lips.\n\nI push myself away from her and slide off the sofa.\n\n\"Where are you going?\" She asks sadly as her smile drops.\n\n\"I'm getting cramp.\" I hold out my hand to her and she raises an eyebrow at me. \"You coming or not?\" I smile.\n\nKate's face erupts into a huge smile and she eagerly takes my hand.\n\n...\n\nI slide under the duvet and Kate follows close behind me, her arms wrap tightly around my waist as she nuzzles against my head.\n\n\"Do you not want to go to sleep?\" I enquire.\n\n\"I do,\" she breathes, \"but I just can't help myself. I love this so much, wrapping my arms around you and cuddling up together, the smell of your shampoo, how soft your skin is under my fingers.\" She lifts my shirt and runs her fingers across my stomach to prove her point.\n\nI turn in her arms and her fingers drift lazily up my back, her head dips lower and her tongue traces my ear.\n\n\"Do you love that too?\" I gasp.\n\n\"I love how much I know you love it.\" She blows air lightly over the skin she's just licked causing the hairs on the back of my neck to stand up.\n\n\"And you think I'm ok with this because?\" I inhale deeply.\n\nHer head dips lower still and she gently bites along my shoulder and up my neck. A small moan escapes my lips and Kate pulls away from me.\n\n\"You could have pushed me away...\" She smirks \"but you didn't...and I know you don't want to.\"\n\nSeeing no resistance in my expression she slowly pulls her shirt up and over her head, rolls me onto my back and lays her body down on top of mine.\n\nShe brings her face to mine and traps my lips under hers, her tongue traces my lower lip and I can't help but open my mouth a little for her, her left hand eagerly runs down my body until it's resting on my backside.\n\n\"You've no idea how much I've missed this.\" She squeezes my ass and I moan into her mouth.\n\n\"I think I have.\" I murmur against her lips.\n\nI wrap my legs around her waist and Kate rolls her hips, the contact between my thighs causes me to moan quietly again.\n\nShe slides down my body until her head is level with my hips. Her fingers find the hem of my shirt and she begins to edge it slowly up around my waist, she swirls her tongue around my navel and gently bites and sucks my skin as she kisses and licks her way up to my breasts.\n\nI lift myself up off the bed allowing Kate to push my shirt up and over my head, she smiles appreciatively as she throws the shirt over her shoulder and pulls my nipple into her mouth.",
        "\"Feels so good baby...\" I whisper and tangle my fingers in Kate's hair.\n\nKate lavishes attention on my breasts, she kisses every inch of skin, nibbles and sucks on my nipples. Her hands run up the inside of my thighs and deliberately pass close enough to my pussy for her to feel the wetness seeping down my legs. She smirks a little as she kisses up my neck and presses her lips to mine once more.\n\n\"I think you want me sweetheart.\" She says, kissing along my jaw and up to my ear.\n\n\"Mmmmm...whatever gave you that impression?\" I raise an eyebrow mockingly.\n\nShe smiles broadly \"I'd be ashamed of myself if I didn't know that...now turn over.\" Her tongue makes one final sweep of my ear.\n\nI eagerly extract herself from under her and lay on my front, Kate quickly rids herself of the rest of her clothes and pulls my shorts down and off. She slaps my ass lightly and reaches over to me to the bedside table, I hear her open the bottom drawer and know exactly what she's looking for.\n\n\"Top drawer baby.\" I smile against the pillow as my pussy gets significantly wetter in anticipation of what's coming.\n\nKate steps into the harness and tightens the straps before straddling my thighs and leaning back so the tip of the cock is resting against my ass.\n\n\"You're so wet Erin.\" I can hear the smile on her face as she uses her fingers to explore between my thighs.\n\nShe leans forward and bites the side of my neck; her tongue slides up to my ear.\n\n\"Do you want me?\" She whispers.\n\n\"I thought you already knew the answer to that one?\" I reply with a cheeky grin.\n\nShe slaps my ass again, harder this time \"Do you want me Erin?\"\n\n\"Yessss.\" I hiss back as I feel her teeth on my ear.\n\nShe drags her nails down my back and bites my neck again.\n\n\"On your knees.\" She whispers.\n\nShe slaps my ass harder still and tests my opening as I raise myself up onto my knees. There's clearly no need, she knows I'm ready, if I can feel my pussy running down the inside of my thighs she can definitely see it.\n\nKate doesn't make me wait. She pushes the head of the cock deep into my dripping pussy and I moan loudly.\n\n\"Ohhhhh god...yes...baby that feels so good!\" I moan, my back dipping as I press myself back against her.\n\nKate's hands come to my hips, she grips them tightly and uses the leverage to pump the cock deeper and harder into my pussy.\n\n\"Oh fuck, Katie!\" I cry \"Yes! Yes! Harder, please...please baby...\"\n\nKate's hands come to my chest, she pulls me upright and I reach behind me tangling the fingers of my left hand in her hair while my free hand plays with my clit. Kate bites my neck once more, her hands back on my hips as she drives into me.\n\nI can't speak, my mind goes blissfully blank, I feel like I'm floating, I'm only vaguely aware of Kate's voice in my ear. She stiffens suddenly behind me, her breath heavy against my cheek.\n\n\"Fuck...Erin...Jesus honey I'm sorry...I couldn't...I just couldn't stop it...you make me so fucking hot!\"\n\n\"Don't stop baby!\" I cry, ignoring her apology \"Please...more...\"\n\nKate pushes me forward again, I rest my head on my arms, she leans over me fully and grips my hair tightly, I gasp and moan as she finds a new angle to drive the cock deeper still. I've never wanted her as badly as I want her right now, I can feel sweat running down my spine.\n\n\"Fuck me Katie...oh god please...please...please...\"\n\nShe leans down and bites where my neck meets my shoulder, I tilt my hips forward causing Kate's cock to press firmly against my g-spot with each thrust.\n\n\"Ohhh...right there...right there baby...harder now please...\"\n\nShe pulls out abruptly and I moan in anguish.\n\n\"Don't tease me Kate...not now...\"\n\n\"Turn over again baby...\" she breathes \"I want to see you...\"\n\nI flip over and Kate is instantly all over me again, she pushes the cock deep into me, leans down over me and kisses me passionately, her eyes shining with arousal as she begins to thrust her hips once more.\n\n\"Oh fuck, Erin...\"\n\n\"Fuck me baby.\" I gasp, bringing my hands to her hair and cupping the back of her head.\n\nShe gently sucks on the tip of my tongue, leaving me breathless as she rocks her hips faster against me, the cock edging a little deeper each time.\n\nMy moans mingle with her heavy, panting breaths.\n\n\"Cum for me baby.\" Kate whispers.\n\nOne of her hands drifts to my hip and she grips me tightly, using her grasp as leverage to thrust harder and deeper than before.\n\nI'm in ecstasy it feels so good, my whole body is in a complete state of bliss...all it takes is one small change of position from Kate and I see stars.\n\nI don't know who was moaning louder, me or Kate, all I know is that I never wanted this feeling to end. It was just me and Kate, once the stars subsided all I could see were her brilliant brown eyes, full of pleasure...and love. She kissed me sweetly as she pulled out of me.\n\n\"Do you have any idea how beautiful you are sweetheart?\" She asks, brushing some hair back from my face.\n\nI look away uncomfortably and Kate takes my chin between her thumb and forefinger, turning my face back to hers.\n\n\"Gorgeous...\" she sighs.\n\n\"Kate, we nee-\"\n\n\"Don't baby,\" she whispers, pressing a finger to my lips and slipping out of the harness, \"not now, not tonight, please...just let me hold you.\"\n\nI smile and open my arms to Kate, she lays down quietly next to me, presses one of her legs between mine and nuzzles into my neck. Her lips pressed against my skin.\n\n...\n\nI wake early the following morning to find Kate lying beside me, propped up on her elbows, her fingers gently brushing my hair back from my face.\n\n\"Morning beautiful.\" She smiles.\n\n\"Morning.\" I smile back \"Enjoying yourself?\"\n\n\"Gotta take advantage of being able to look at you while I can.\" The smile slips from her face \"I figure I've got maybe another hour before you ask me to leave.\"\n\nI sigh deeply and bring my hand to her cheek. Reaching up I kiss her softly and her hand drops to my waist, she closes her eyes and turns her face into my palm, placing a small kiss in the centre.\n\n\"I want you to promise me something.\" I trace the edge of her ear with my finger.\n\n\"Anything.\" She breathes, her hand moves around to my back as she shuffles a little closer.\n\n\"You will never, ever, hurt me like that again.\" My fingers move along her jaw.\n\n\"Never.\" Her breath catches in her throat.\n\n\"You will never humiliate me like that again.\" I let my fingers trail down her neck and rest them against her collarbone.\n\n\"I swear I won't.\"\n\n\"And no-one but me will ever kiss these lips ever again.\" I whisper while I run my thumb across her bottom lip.\n\n\"Baby you don't even need to ask for that one.\" She slowly closes the gap between us and presses her lips to mine.\n\nI kiss her back and allow her tongue to meet mine causing an eruption of butterflies in my stomach.\n\n\"I need to know Erin,\" she manages to get out between kisses, \"does this mean I get a chance to fix what I made such a mess of before?\"\n\nI pull away from her and look into those eyes that I've loved since the day we met and missed so much in the past few months.\n\n\"One chance Katie...I meant what I said...you break any of those promises and we're done. I don't care how hard it'll be, you won't get the chance to hurt me a third time...\"\n\nHer face breaks into an enormous smile that I can't help but return, she pulls me tightly to her and kisses me with such fever that it takes my breath away.\n\n\"Erin...\" she breathes as we break apart. She pulls me to her and hugs me tightly, nuzzling into my neck as we both simultaneously burst into relieved yet happy tears...\n\nChapter Seven:\n\nEpilogue:\n\nFour months later:\n\nSara and Lucy's wedding day:\n\n\"Hey there gorgeous,\" a voice whispers in my ear while I watch Sara and Lucy enjoying their first dance as a married couple. \n\n\"Hey yourself.\" I reply as pair of hands coming to rest on my hips. \n\n\"Would you like to dance?\" The voice asks \"I've been watching you for the past ten minutes and I can't believe no-one's asked you yet.\"\n\n\"Sounds good,\" I whisper back as the dance finishes and everyone claps before taking to the floor themselves, \"but if my girlfriend shows up on your head be it.\"\n\nI turn and wrap my arms around Kate's neck as she pulls me onto the dancefloor.\n\n\"Hi,\" she smiles and presses her lips to mine, \"you look beautiful...I think I like you in a dress.\" \n\nShe gives me a cheeky grin and drops her hands to the back of my thighs, lifting the dress a little \"It definitely makes getting to what I want to touch a lot easier.\"\n\n\"Later baby,\" I smile, kissing her again, \"Lucy will never forgive me if all people ever remembered about her wedding in the future was you undressing me on the dancefloor...and as Sara's best woman I think I should show a bit more class than that.\"\n\n\"I hate waiting,\" she nips my earlobe as she rests her cheek against mine, \"getting you out of that dress is all I've been able to think about all day.\"\n\nShe takes one of my hands in hers and wraps the other around my waist as the music slows.\n\n\"It's been torture you know, sitting in meeting after meeting with nothing else to occupy my mind but how fantastic your ass looked when you tried this outfit on for me the other day.\"\n\n\"Poor baby...\" I kiss her deeply \"I'm sure I can think of a way to make it up to you...later on...in private\"\n\n\"So how long do I have to wait for it to be considered late enough to take you to our cabin?\" She replies eagerly.\n\nI laugh and take her hand in mine.\n\n\"Well...luckily for you I've been thinking about you all day too...and I've been stuck in this dress for hours and am just about desperate to take it off...so not that much longer.\"\n\n\"That's the best news I've heard all day!\" \n\n\"I just want to say goodnight to Sara and Lucy.\" I say as Kate drags me to our table to pick up my things.\n\n\"They won't miss you...\" she says, helping me into my jacket \"I'm sure you've been an amazing best woman all day...it's my turn to spend some time with you...\" she pulls me in for another kiss as she edges towards the door \"Now let's go!\"\n\n...\n\nThe following morning I wake filling blissfully satisfied but a little cold, I roll over to wrap my arms around Kate for both warmth and comfort but am instead met by an empty bed. I see the pile of spare blankets missing from the chair beside the bed and follow the trail of destruction with my eyes as it leads across the room to the sliding door leading to the porch around the cabin.\n\n...\n\n\"It's beautiful isn't it?\" I ask sitting down next to Kate some fifteen minutes later and handing her a cup of coffee.\n\n\"It sure is.\" She smiles and lifts the blanket for me. \"Thanks for the coffee. I need it this morning, why on earth they wanted to get married in the middle of December I'll never know, it's freezing!\"\n\n\"No problem.\" I grin back, tucking my legs underneath me and leaning into Kate's side \"...and I think they wanted to get married in December because that's when they first got together...some people are romantic like that.\" I stick my tongue out at her and she kisses me quickly.\n\nWe sit in silence as we drink, it's hard to not find the view inspiring, the Lake District truly is a beautiful place. \n\nI feel Kate's eyes on me...\n\n\"You should take a picture you know...\" I smile and turn to face her \"I won't look like this forever.\"\n\n\"You will to me.\" She pulls the cup from my hand and places it on the edge of the bench next to her. \n\nShe slides from the bench and kneels in front of me.\n\n\"You will always look like this to me, you're truly the most beautiful woman I've ever known, inside and out...I love you so much...you're my one and only honey, the woman of my dreams...and I want to spend the rest of my life with you.\"\n\nShe takes my hand in hers and pulls a small box from her pocket.\n\n\"Will you marry me Erin?\"\n\nI sit in stunned silence as she gazes up at me.\n\n\"Please?\"\n\nAs the shock subsides a small smile starts to creep across my lips.\n\n\"Does that mean yes?\" She asks, grinning.\n\n\"Yes Katie...it means yes.\"\n\nShe stands up and twirls me around in her arms before taking the ring from the box and slipping it onto my finger. \"Looks good.\" She beams at me.\n\n\"It certainly does.\" I reach up and wrap my arms around her neck, pulling her in for a long and lingering kiss. \"I think we should keep it to ourselves for a few days though, Lucy would also kill me for announcing this now and stealing her thunder.\"\n\nShe smiles at me \"Well, you know what I think?\"\n\nI raise a playful eyebrow at her.\n\n\"I think we need to take this inside.\" She whispers. \n\nShe lifts me up into her arms as I laugh and kiss her again. She carries me back into the cabin and lays me down on the bed, pulling her hoodie up and over her head as she lays on top of me.\n\n\"I love you so much Erin.\" She says, her eyes blazing into mine.\n\n\"I love you too Katie.\" I reply, reaching up to pull her lips to mine once more. \n\nWe kiss lightly before Kate takes my hands in hers and holds them gently over my head. \n\n\"Hey!\" I pout \"Why'd you stop me?\"\n\nShe stops and looks deep into my eyes, as though she's looking straight into my soul while I stare back into hers.\n\n\"What's wrong?\" I ask quietly.\n\n\"Absolutely nothing honey,\" she smiles, \"I was just thinking how eternally thankful I am for that wonderful day three years, two months, one week, six days and roughly 22 hours ago, when the universe finally smiled on me and introduced me to the woman I knew I was destined to be crazy about for the rest of my life...\"\n\nShe leans down and kisses me again,\n\n\"I know exactly what you mean baby...\" I smile. \n\nEND"
    ],
    "authorname": 184081,
    "tags": [],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/three-years-two-months-one-week"
}