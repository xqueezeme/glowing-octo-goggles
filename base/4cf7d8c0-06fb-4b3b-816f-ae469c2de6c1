{
    "title": "Home for Horny Monsters Ch. 41",
    "pages": [
        "Hi all! Welcome to the next chapter of Home for Horny Monsters!\n\nNew? You're going to want to start at Chapter 1. Each post is a chapter in a series of novels, and you are near the end of book three. There's a ton of monsters, sex and excitement to catch up on.\n\nReturning reader? Welcome back! It's time for a showdown with Oliver, but how do you beat the unbeatable? You're about to find out.\n\nAs always, don't forget to rate, review, or comment! I do see them all, but my limited free time is primarily devoted to writing more chapters and working on a side project that will hit Literotica later this summer.\n\nEnough from me, enjoy!\n\nThe Devil\n\nYuki sat on the porch swing, staring out at the front yard with a cup of tea in her hands.\n\nThe debris from the magic storm was strewn across the grounds, making the land look like a small junkyard. Somehow, it served as a perfect metaphor for her life right now, a giant mess with nobody to help clean it up. She took a sip of tea, letting out a sigh as the hot liquid streamed down her throat.\n\nThe front door opened behind her and Mike walked out, then sat down next to her on the swing. She fought the urge to scoot away, to turn her venom on him, but resisted. It was a knee jerk reaction to years of anger, and she mentally applauded herself for resisting.\n\n\"Ratu is working on a cure down in her Labyrinth,\" he told her. \"She seems fairly optimistic that we can undo the gorgon's curse, but it will still take her a couple of days to finish putting what she needs together.\"\n\n\"Good.\" She sipped her tea, trying to keep her hands from shaking. It was hard existing without that burning rage seething away inside of her, and she was afraid of what would come next. Though Mike had healed her wounds, it was always possible that he might decide to kick her out or put her back in the tower. What didn't scare her so much was his judgment. Whatever the man thought of her, she likely deserved.\n\nWhat scared her the most was that she would let him do it.\n\n\"So, the emerald is gone for good? No way we can get that back and use it on Oliver?\"\n\nYuki shook her head. Discussion of the emerald hadn't happened yet. After the events in the front yard, she had told them everything about what had happened to Beth. The Rat King and Tink had filled Mike in on how Oliver had used Beth to steal secrets from the house, secrets he planned to turn over to the Society if she didn't give herself up.\n\nBeth's contract with the demon weighed heavily on Yuki's mind, and she had gone over what was specifically said in the deal. Mike had frowned at this, but said nothing else.\n\n\"The emerald... this is hard.\" She set down the teacup and gripped the wood of the bench, her fingers biting into the wood. \"I'll tell you about the emerald, but no questions until the end. It's something I only want to talk about once.\"\n\n\"Okay, then. I'll keep quiet.\"\n\nShe took a deep breath, remembering the events from so many years ago. \"When Emily vanished, I thought she had been stolen away, abducted by a darker force. For years I searched, turning up nothing. You have to imagine my surprise when, one day, she reappears in the tower, as if she never left.\"\n\nThe memory of Emily cut deep, and Yuki bit down on her lip to keep from crying. She could still picture Emily standing against the balcony, the wind tossing her curly hair behind her. In disbelief, Yuki had approached, suspecting it was a dream or a trick. Emily had turned around, a twisted smile on her face, extending her hand as if to take Yuki's and hold it.\n\n\"When she came back, we got into a fight. I was caught off guard and it was fairly one-sided. During our fight, she pulled out this clear piece of glass. At least, that's what I thought it was. Have you ever heard about how your eyes are the window to the soul?\" She touched her right eye in memory of the pain from the attack. \"She apparently needed a piece of my soul. Not even the whole thing, just a very specific part. When she pulled it out, it...\"\n\n\"Yeah, I can imagine.\" He gave her hand a squeeze, then retracted his hand. \"Continue.\"\n\n\"I don't know why or how, but I came to, and she was holding that emerald. I didn't know it until now, but the emerald was a part of my soul, and she had just built some kind of magical artifact. When you used the gem to make me whole again, it destroyed itself to give back what had been taken from me. You can't just make a new soul, no matter how hard you wish it, but you can give back what was stolen.\" Yuki took a deep breath, then wiped a tear off her cheek. \"And then she left. A few years later, I turned three hundred. For a kitsune, it's when we grow our next tail and choose the magic we wish to master. I was so hurt and angry that I deepened my knowledge of the frost that had grown in my heart, which resulted in this.\" She touched the white fur of her ears. \"Kitsune can change their shapes, but we can't just whimsically change our nature. I've been missing a piece of myself for so long, it's very hard to describe how it feels to have it back.\"\n\n\"She took a piece of your soul?\" Mike asked. \"Is that... I mean, is that common, or...\"\n\n\"No. It is powerful, dark magic to do something like this. In fact, I would even say it's lost magic. It's one of the few things abhorred by literally everybody. I would wager that even these Society people would rather destroy someone like that than accept them into their ranks.\"\n\n\"I wouldn't go that far,\" Mike muttered.\n\n\"Giving up your soul or selling it is one thing. Your mind stays behind and, in a way, you are still you. But ripping out a chunk of someone's soul is dangerous magic. It can give you control over someone, can dictate their actions. It can be used as currency, or even as a means of immortality. When Death comes for you, he expects a soul. Handing over your collection is sometimes enough to balance the scales.\"\n\n\"Interesting. Do you suppose she was hoping to control you?\"\n\n\"I don't know. The last thing she ever said to me was that she wished she could forget about me.\"\n\n\"Mmm hmm.\" He sat back, rocking the swing. \"You do realize that the emerald was capable of granting wishes, yes? Well, one wish per person. It wasn't all-powerful, but it could make your desires real enough.\"\n\n\"I do now, but not at the time.\"\n\n\"When Emily said those words, that's what happened. Whatever her plans for the emerald were, they were dashed the moment she said that. You wouldn't know this, but the moment she left, she handed over the emerald to the rats and then promptly forgot about them. Emily's memories are tied into the house and the geas itself. I can't say this with any certainty, but I know the geas does weird things to our heads. It's why nobody remembers anyone else until I meet them. When Emily forgot about you, it was as if she had never met you in the first place. But what if somebody asked where you went? I suspect the emerald itself took care of that to ensure her wish was properly granted. When the house reset... you were simply gone.\"\n\n\"I don't get it. Why go through all that trouble to hurt me if she was just going to erase me from her memory?\" Yuki wiped a tear away from her eye. \"It doesn't make sense.\"\n\n\"Did Emily ever mention a shadow? Or a secret staircase in the tower?\"\n\nYuki's ear twitched. \"Only once. She thought she saw a secret door in her room, but I was never able to find it again. That was months before she disappeared though.\"\n\n\"I see.\" His face darkened. \"I have a theory, but it's only a small one. When I was in the tower, I came across a shadow man who knew that I was the Caretaker. He offered me advice and power but wanted a piece of my soul as payment.\"\n\n\"Did you tell him no?\"\n\n\"I did. But I keep thinking back to what he told me. He said this place would burn, and offered to fast track me on my quest, which I'm still unsure of.\"\n\n\"Emily mentioned a quest several times. She thought she needed to fill the house with magical creatures or something.\"\n\n\"A quest? A quest for what?\" He suddenly sounded eager. \"What was she trying to find?\"\n\n\"Nothing, really. She was deliberately vague about it all the time, but it's because she didn't know. Said it was a weird feeling that she got, like she needed to fill the house with magic. More creatures, more rooms. Talked about some weird dreams a couple of times, but that was it. Wish I could say more, but...\" Yuki sighed.\n\n\"Oh.\" Mike shook his head in disappointment. \"Was really hoping you would tell me where I could find the user manual for this house. Guess I'll just have to wing it like I always do.\" He offered her a weak smile.\n\n\"Winging it is a nice way of putting it.\" Yuki looked out at the yard. \"According to Tink, this isn't even the first time the yard has been wrecked this badly.\"\n\nHe coughed. \"Anyway, I have a theory that I want you to think on. If Emily made a deal with this guy, do you think she could have been forced to do things? Things she didn't want to do? She hired Ratu to dismantle magic items beneath the house with nobody knowing about it, and Zel has hinted more than once that she may not have been all smiles and sunshine. I think she even banished the fairies to the Labyrinth, and then obviously the whole thing with the rats was a secret. Her behavior before she died was erratic, and the others didn't know what to make of it since none of them had the full story. She was trying to achieve immortality or godhood, according to Ratu, but even Naia didn't know about that.\"\n\n\"It's possible.\" Yuki took a deep breath and let it out. \"Think on this, then. That wardrobe in the hallway upstairs, it's made from a special tree that used to grow in the backyard, that's where the portal was originally. We would go into the backyard and just walk into the woods and emerge by the tower. Emily also had a small grove of younger trees out back that allowed her to walk to places all over the world, but I'm guessing you haven't seen any.\"\n\n\"No, I haven't.\"\n\n\"Do you know how you grow trees that quickly?\" She hugged herself. \"With a dryad. Her name was Amymone, or Amy for short. Her tree was centuries old, and she was very powerful. Amy could grow a tree to full size in a matter of weeks instead of years. One day, on a lark, she let Emily open a portal in her own tree. You see, Emily still needed to seed her destinations, and Amy got this idea that she could combine her magic with Emily's to grow a portal somewhere else. That's how we found the world with the tower, completely by accident. However, you need to know that dryads need their trees to live, Mike, and sometime after she abandoned me, Emily cut all of the trees down, including Amy's. Its remains sit upstairs, in your hallway, with a lock on the door.\"\n\nThe realization of what she said made Mike's eyes widen. \"She... Emily killed someone who lived here?\"\n\nYuki nodded. \"She must have. And guess what? Nobody will ever remember Amy because you'll never meet her. Those memories are locked away, forever.\"\n\n\"How do you remember then?\"\n\nYuki shrugged. \"The world where I've been trapped is technically inside and outside the house at the same time. The tower used to be a place like this one, that much I've gathered. While there, I felt the house reawaken and sensed your presence in it, but could do nothing except lure you to the opening. I truly felt that the home was mine by right. It was something Emily and I spoke of often.\"\n\n\"You also weren't yourself. Not your full self anyway.\" He stood up and stretched. \"I want you to think about something really hard for just a bit. It isn't something I know for certain, but it's a theory I have that I want to share.\"\n\n\"Okay.\"\n\n\"When Emily attacked you, she had some greater purpose in mind. I have no doubts that she knew what that emerald was capable of. A piece of your soul, trapped inside for all eternity, capable of granting the user a wish. The wish isn't something you can just say, but something you have to feel, deep inside. When she walked away, leaving you behind forever, she said that she wished she could forget about you. Maybe, just maybe, she wasn't wishing that for her sake, but yours. She had already gone so far as to pull out a piece of your soul, so what was next? As long as she knew who you were and where to find you, she could come back anytime to finish the job.\"\n\nThe weight of his words struck her in the chest like a hammer.\n\n\"I... I read some of your journals. Or Ratu did, and told me about it. You two loved each other, of this I have no doubt. And whatever was about to happen? She had one shot to save the person who mattered most to her, and she took it, even though it cost her that love and all its memories. I don't know this for certain, but...\" he shrugged, then rubbed his arms. \"Just... I think she got caught up in something she couldn't beat.\"\n\nYuki blinked away the tears that were forming in her eyes, her eyes on the messy yard. Was it true? Could what happened have actually been an attempt to save her?\n\n\"I'll be inside when you're ready. If I know my demons, then I am willing to bet that Oliver is planning something of his own. We have until sometime tonight or tomorrow before the Society can check in with him to answer their questions, based on what he told Beth, anyway.\" He stood up and stretched. \"However... take your time. We'll be waiting.\"\n\nWithout warning, he patted her gently between the ears on his way by. Such a casual touch from someone she barely knew, but she recognized the gesture immediately as something that Naia had done in the past. Even though the memories of Yuki had been erased from history, her time in the house had been very real indeed.\n\nOnce the door closed and Mike was gone, the floodgates finally opened and Yuki let her grief flow freely.\n\n--\n\nMike sat at the kitchen table, his eyes tracing the patterns in the wood grain. He looked up at the sound of the front door opening and waited for Yuki to join the rest of them. Ratu and Tink sat on one side of the table, and they had opened the window for Zel and Abella to participate. The fairies sat on the window ledge, kicking their legs over the gap between the ledge and the floor. Scattered around the room were Reggie's higher-ups, and seated at the table was the Rat King himself.\n\nWhen Yuki sat down, Tink gave her the stink eye, a small growl emanating from the back of her throat.\n\nYuki bowed her head, her lip curling in anger.\n\n\"Look, I know you're mad about what happened, but I'm here to help, okay?\". Mike could see the irritation under her eyes where her tears had fallen. \"If Mike was able to forgive me, even if it's just for today, then you can just get over yourself.\"\n\n\"She's mad because you ate the last of my Eggos\" he explained, trying to hold in a smile. \"Sofia keeps tossing them out, so she hides them in the back as kind of a secret stash for when I want a snack.\"\n\n\"Oh.\" Yuki blushed. \"I'm... sorry about that.\"\n\nTink crossed her arms and looked at Mike. \"Fox buy husband more after she smash demon.\"\n\n\"I...\" Yuki let out a small laugh. \"Okay, Tink. I'll buy him more.\"\n\nThis seemed to placate the goblin, who sat back in her chair. \"Husband have good plan?\"\n\n\"As a matter of fact... no.\" He looked across the table. \"Ratu, how far along are you on unfreezing the others?\"\n\n\"A couple of days at least,\" she explained. \"I'm worried that if I rush it, I might screw up, and that's simply not an option.\"\n\n\"Okay. So let's talk worst case scenario. We need to go get Beth back, and that means I need to go try to make a deal with a demon. If something happens to me, the house will go dormant again. Ratu, I want you to go back to the tower and work on the cure. Reggie, you and the rats can go with her as well. If the house falls asleep, someone has to be able to come back and unfreeze Naia. She's the only one who remains awake when the house is asleep, and we can't let the house die because she's stuck as a statue and unable to pick a new Caretaker.\"\n\n\"Wait, you assume that you should go?\" Ratu asked. \"Why not someone else?\"\n\n\"You mean Yuki?\" He looked over at the kitsune. \"Honestly, if anyone were to go by themselves, she would probably be the best option. I would never ask someone to do such a thing by themselves, though, it's simply too dangerous. However, if she volunteers to go, she can come with me.\"\n\n\"I'll go,\" Yuki offered without hesitation. \"I want to help.\"\n\n\"Tink go too!\" The goblin stood up in her chair and slung her club over one shoulder. \"Smash mirror demon in his stupid face.\"\n\n\"I would go as well,\" Abella offered.\n\n\"No.\" Mike held out his hands at their protests. \"You can't all go. This isn't a problem we can just punch in the face. As much as I would love having everybody by my side, I think that whatever we do can't look like a frontal assault. We need to catch him off guard.\"\n\n\"He has a point,\" Ratu added. \"If he walks in there with all of you, Oliver will know what's coming. A demon in his lair is thrice as dangerous.\"\n\n\"Which brings me to why we are here. We need a plan of attack, and we need to do it quick. Based on what I've been told, the Society contacts this demon once a month to ask it three questions. Once a question has been asked, it knows the answer. But I'm worried. Yuki stoned Beth on the way in to protect her. According to the deal she made with him, he can't freely give the Society information anymore regarding this house.\"\n\n\"That's how she put it.\" Yuki said. \"She gave herself willingly, and he accepted. I stoned her as she fell, so the agreement should be sound and he won't be offering freebies to his captors.\"\n\n\"But here is what I don't like. Yuki pissed off a demon with nothing to lose and plenty of time on his hands. What if he tries to ransom her back to us, threatening to shatter her if we don't play along? Or, even worse, the Society may have a way to undo the curse. They've had their own gorgon's eye for a long time, and I can't trust that they won't find a way to make a new deal with Oliver by offering to unstone her. Remember what they did to Dana? Do we really want something like that to happen to her?\" He looked at Yuki. \"Abella even told me that Amir had a fucking genie. Could a genie fix her?\"\n\n\"A lesser djinn, technically, but yes, they have one.\" Yuki shifted in her seat. \"It may or may not be capable of undoing a stone curse. I don't know the extent of its abilities.\"\n\n\"Which means we are on a timer. The faster we act, the less time they have to plan anything. We need to figure out how to get in, get Beth, and then leave before sometime... tonight or tomorrow?\" He turned to look at Zel.\n\n\"Um... not entirely sure.\" She looked at Tink and Reggie. \"Did Beth give a definitive time on when the Society checked in with Oliver?\"\n\n\"Tink no remember,\" the goblin said, scratching her cheek. \"Rat face?\"\n\nReggie scowled at Tink. \"I was under the impression that her deadline to acquiesce was also when they might check in with him. Still, it would be better to assume sooner rather than later, since we have no definitive time.\"\n\n\"Okay then. It's super important that we make this happen tonight then. So... ideas?\" Mike looked around the room.\n\n\"How are you even going to get there?\" Zel asked.\n\n\"The rats will help,\" Reggie offered. \"For Lady Beth, the rats will do anything. Since the demon took her through the reflecting pool, I have had my rats studying the area around it. We think we've identified a path that we can chew to his location.\"\n\n\"Good. Once we are there, we need a way to grab her and get out. However, she's a heavy statue, so... suggestions?\" Again, Mike looked around.\n\n\"If we can actually get ahold of her, I can do it.\" Yuki offered. \"With magic, of course, but we'll have to be careful. The statues hold up to the elements, but a sharp blow will shatter them.\"\n\n\"Okay, so we have to be careful, which means that we need to either trade with Oliver to get her back, or defeat him. Assuming he doesn't want to trade... anybody know how to kill a demon?\"",
        "\"Killing him won't work,\" Ratu said. \"When you slay a demon, typically it goes back to Hell. So if you were to kill him, he would likely just reappear in his mirror world where he had been trapped. There is magic that can do it, but I don't know that we have anything lying around that could do it.\"\n\n\"Damn. Really, we can't just kill him?\" Mike laid his dagger on the table. \"This was able to hurt Cecilia. Would this do anything?\"\n\n\"You could hurt him, but it would only be temporary and he would heal,\" Ratu answered.\n\n\"But what if it was a fatal injury?\" Mike pointed to the side of his own skull. \"If I could lodge it in his brain or something? Even if he heals, we could shut him down that way, right?\"\n\nRatu frowned. \"Maybe, but demons are very good at shapeshifting. You would have to catch him off guard. It sounds strange, but it's no difficult feat for a demon to move its internal organs around to avoid injury.\"\n\n\"Okay, so Oliver has a demon healing factor and we need to stab him in a brain that moves around. What else do we know about him?\"\n\n\"Demons always have to tell the truth,\" Zel added, holding up one of her notebooks. \"They love to play games with mortals. Also, they are completely immune to fire and heat, on account of being from Hell. Oliver's dimension is traversable by others, but Oliver himself cannot leave. I even have some notes from Beth about her time there, so can tell you how to leave without a portal. There's a reflecting pool on his side, and I even have the words to get out. The place was a large garden with animal statues and she even drew me a crude map.\" Zel flipped her notebook over to show everyone a drawing on it. \"Once there, he is likely to be in his pavilion over here.\" She tapped on the drawing with a finger.\n\n\"Okay, good, we can use that.\" He looked at the others. \"If we're going to stab him in the head with the dagger, what do we do to keep him off balance? Between us, Yuki and I should be able to do something to keep him off guard long enough to play pin the knife in the demon. Any ideas?\"\n\nEveryone looked at each other, but no ideas were offered. Mike sighed, sitting back in his seat. They needed a plan, and they were going nowhere fast.\n\n\"I have a question.\" Yuki had pulled a few cards from her sleeve, cycling through them. \"Could a demon hurt a demon?\"\n\n\"I mean... yes, I suppose.\" Ratu leaned forward with interest. \"You have something?\"\n\n\"I think I might. I could cause a distraction, which might let us disable him.\" Yuki looked across the room. \"I would like to point out that even if we take Beth from Oliver, he is going to be beyond pissed. We wouldn't actually be solving the real problem, just putting a band-aid on it. Even if we plant that dagger in his skull and bury him deep in the dirt, the Society can go back and forth to his world, remember? That's how they put Beth there in the first place. They will go looking for their magic eight-ball when he doesn't show up when called, pull the knife out of him, and then there will be literal hell to pay.\"\n\nMike felt his heart sink. Yuki was right. They needed an even bigger solution, but what? What could be done to destroy a demon or even get rid of the Society?\n\nThe room suddenly cooled, causing Mike to shiver. He rubbed his arms for warmth and saw Ratu shifting uncomfortably.\n\n\"Could you ease up?\" Ratu asked, squinting at Yuki. \"It's freezing in here.\"\n\n\"That isn't me,\" Yuki replied. Everyone went quiet at the sound of soft cotton feet pitter-pattering across the floor. A bundle of fabric flew through the air, and Jenny tumbled to a stop in the middle of the table, causing everyone to jump.\n\n\"Jenny!\" Mike put a hand to his chest. \"You scared the crap out of me.\"\n\nI shall be punished for it now, I suppose, by being drowned in my own tears! That WILL be a queer thing, to be sure, the doll said, her voice echoing in his skull. Yuki suddenly sat up straight as if a bolt of lightning had traveled through her body.\n\n\"Um, yeah, I'm sure it would.\" He was happy to see her active, but this wasn't helping. \"Do you have an idea we can use?\"\n\nAnd she tried to fancy what the flame of a candle is like after the candle is blown out, for she could not remember ever having seen such a thing. Jenny looked around the table, then settled on Yuki. If he smiled much more, the ends of his mouth might meet behind, and then I don't know what would happen to his head! I'm afraid it would come off!\n\n\"Jenny.\" Mike let out a sigh. \"Jenny, I know you're trying to be helpful, but if you know something, we need a straight answer.\"\n\n\"No. No, you don't.\" Yuki held her hands up for silence. \"In fact, none of you do. She's quoting Alice's Adventures in Wonderland. Why would she be doing that?\"\n\n\"She's quoting that book? We had no idea,\" Mike admitted. \"She's always been a bit weird about talking, no offense Jenny, but she was saying some really strange things once she got her hands on the emerald. Our theory was that she was having visions of the future, but now I wonder... was she quoting Alice this whole time?\" He tilted his head. \"Or maybe it was both? She referenced something that happened, actually. Sorry to say this, but I beheaded your Jabberwock.\" He winced as the words left him.\n\nYuki scowled but brushed it aside. \"Yes, but why? Don't you see? Why that book? It's one of my favorites, I could rehearse it by heart if needed. It's why I made the Jabberwock, I felt like I was Alice and had been trapped through the looking glass. If she's having visions of the future, why not just tell us up front, why quote from the book?\" Her eyes widened. \"Oh my god, I think I get it.\"\n\n\"Get what?\" Zel asked.\n\n\"The emerald had a piece of my soul in it. She can't be straight forward because of it. That book was my salvation, and I suspect Jenny has had a vision of what's to come, but is stuck sharing it through the words I love the most. Is that... is that right?\" \n\nJenny approached Yuki, then bowed her head. Everything's got a moral, if only you can find it.\n\n\"Jenny,\" Yuki whispered. \"A flame after it's been blown out... a smile that stretches all the way round... oh my god, you're brilliant! Absolutely brilliant!\" She looked at Mike, her eyes lighting up in excitement. \"I know what we have to do, but I'm going to need some help.\"\n\n--\n\nHours later, they stood by the reflecting pool, their eyes on the untroubled waters. The rats had finished their examination, their teeth steadily grinding into the cold rock nearby. A blast of heat emerged from the hole they had chewed, and Mike found himself looking at a sky that made him think of dusk. He licked his lips as the hole widened, then looked over at Yuki for support.\n\n\"You sure this is going to work?\" he asked.\n\n\"No.\" She frowned at him, the warm wind ruffling her hair. \"But we're going to try anyway.\"\n\nHe clenched his jaw, waiting for the portal to be wide enough, then his eyes slid over to the reflecting pool. If what Zel's journal had suggested was true, Beth was going to exit the same way she came in, and the last thing they needed was for her statue to be hurled into the front of the house via the closet shortcut. On Yuki's advice, they had blocked off the closet door upstairs, which would render the shortcut inert.\n\n\"Remember. Don't eat or drink anything. You'll be stuck forever.\" It was one of the few things he could remember from Zel's list that hadn't been emphasized during their meeting.\n\n\"Oh, don't worry about that.\" Her lip curled up to reveal very sharp teeth. \"I'll have other things to worry about.\"\n\n\"Okay, on my mark.\" He checked the time on his phone. \"Ten minutes.\"\n\n\"You'll know that I'm there. Trust me.\" Yuki turned her face toward him, the light of the portal reflecting off her dark, green eyes. The reddish hue of Oliver's prison made her fur look orange in its light.\n\n\"Okay.\" He looked into the portal and took a deep breath then hopped in.\n\nIt was disorienting, the sensation of falling and then falling some more, but he gracefully landed in a crumpled heap on the other side. The crimson world he had viewed through the portal was gone, and now he stood in a beautiful garden. Scattered throughout were several statues of animals wearing fancy clothes, as if preparing for a tea party.\n\n\"Holy shit,\" he muttered, looking around. \"Through the looking glass, indeed.\" He stood, dusting himself off. The animals in the garden nearby slowly turned to face him, and he found himself looking at a statue of a bird in a top hat. It regarded him with cold, lifeless eyes.\n\n\"Mr. Radley.\" Oliver's voice spoke directly in his ear, but the demon was nowhere to be seen. \"This is a... surprise.\"\n\n\"Yeah, I'm here to talk about my friend and was wondering if we could have a friendly chat?\"\n\n\"That dagger on your belt does not suggest a friendly chat.\"\n\n\"Yeah, well...\" Mike touched the hilt with a grin. \"From what I've been told, it would just piss you off.\"\n\nOliver laughed. \"You are a brave man, Mr. Radley.\"\n\n\"Please. Call me Mike.\"\n\n\"Mike, then. Okay, I'm curious. Let's talk.\" The statues lifted arms, wings and snouts to point there way through the small hedge maze, and Mike followed. It didn't take him long to find the gazebo at the center of the floating island, and he fought hard to keep the surprise off his face when he arrived. A large pedestal had been built, and Beth was placed upon it, frozen in a defiant stance.\n\n\"As you can see, she is well cared for.\" Oliver appeared behind him, wearing a bright white button down shirt with a purple overcoat and a top hat. He waved a hand at the small table nearby. \"I wasn't expecting company, but perhaps you would like some tea?\"\n\n\"No thanks. I'm only here to talk.\"\n\n\"Well, I would like some tea.\" Oliver sat down at the table and poured himself a piping hot glass of a red liquid. \"So what brings you here today?\"\n\n\"Her.\" He pointed at Beth's statue. \"I heard you pulled some kind of dirty trick and began messing with her head. Then you forced her to come here and I want her back.\"\n\n\"Interesting choice of words. I didn't force her, she made the choice.\" Oliver turned around, his face wistful. \"Regrettably, that damn fox turned her to stone before I could properly enjoy her. But no matter. I have plenty of time to figure out how to restore her.\"\n\n\"Okay, well, let's try this the easy way. What do you want? In exchange for Beth.\"\n\nOliver grinned, setting down his teacup. \"This little minx wandered into my lair not too long ago and thought to trick me out of what was rightfully mine. An unexpected side effect of our tryst was that she carried a piece of me inside of her. There's a lot I can do with a human soul to help me pass the time in a place like this, so you will find me hard pressed to think of something I want in exchange from her.\"\n\n\"Okay, new question. What do I have that is equal or greater in value?\"\n\nOliver's yellow eyes flashed. \"Ah, now that is the way we do things around here.\" He contemplated Mike for several seconds. \"And what a fascinating collection of things that you have. Even you aren't aware of the powerful objects in your possession.\"\n\n\"Objects?\" Mike put his hand on his chest. \"I figured you would be interested in my soul or something.\"\n\n\"Bah, no.\" Oliver waved off Mike's comment. \"Your soul is indeed very special, but does not make up for the high esteem in which I hold hers.\" He sipped at his tea with a grin. \"In short, she is much hotter than you, so I have zero interest in what you have to offer.\"\n\n\"Oh.\" Mike picked a cup up off of the table and quickly set it back down. \"So... what about these other things you are interested in?\"\n\n\"Yes, well, about that. If I were to give you a list of any one of these items, it might prove problematic for me. These things are... complicated.\"\n\n\"Okay, you're just wasting my time then.\" Mike stood, the timer on his phone causing it to vibrate. \"Is there anything I could do for you that would result in Beth coming back with me?\"\n\n\"Yes, well, I\u2014\" his face darkened. \"Someone else has just arrived. Mr. Radley, are you planning to take Beth from me by force?\"\n\n\"Is it true that you can answer any question once you've heard it?\"\n\nOliver rose with a sneer. \"Of course I can. You're dodging my question. Who just came here?\"\n\n\"I find it curious that you live in a world that's simply... through the looking glass.\" Mike stepped back, his hand on the dagger. \"So I wonder if you know the answer to this one: can my magical dagger cut through a demon? Could it cut through you?\"\n\nOliver snorted, his shadow extending behind him. \"When your compatriot arrives, I'm afraid they aren't going to find much left of you.\" His red skin darkened and thick horns emerged from his head, knocking his top hat off.\n\nIt rolled to a stop by Mike's feet. He kicked it away, his eyes on the angry demon in front of him. Oliver's coat fluttered and then burst out behind him, forming a pair of dark bat wings.\n\nOliver took a step forward, his claws opening and closing. He laughed, his razor sharp teeth glinting terribly in the light of the mirror world, and then moved blazingly fast to take Mike's dagger from him. Laughing, he hurled it out over the horizon, where it soon vanished.\n\n\"Goodbye, Mr. Rad\u2014\" Oliver paused, his distorted face gazing into the distance. The sound of chains being dragged was rapidly approaching, and a foul looking head popped up from the garden, swinging a massive arm to knock over some of the animal statues. Standing on the monster's shoulder was Yuki, her hands clutched tightly around a thick, icicle staff.\n\n\"You,\" Oliver hissed, and he swung his arm, knocking Mike aside. He pointed a jagged claw at the monster Yuki rode. \"You have no business here.\"\n\n\"Contract,\" the other demon hissed, and Yuki hopped down, a smirk on her face. Mike crawled away from the fight that was about to begin, doing his best to stay low.\n\nYuki had played the Devil card and part two of the plan was officially active. Having summoned a powerful demon of their own, Yuki explained earlier that she could command it to kill Oliver. The demon she brought with her was almost thirteen feet tall with massive arms that had been shackled in thick chains that dragged on the ground. It approached on stumpy legs and howled, revealing a giant set of teeth that stretched across its misshapen head.\n\nThe two demons threw themselves at each other, the ground cracking beneath them in a flurry of teeth and claws. The kitsune ran over to Mike and then looked at Beth.\n\n\"Do you think it's safe to move her?\" she asked.\n\n\"I have no idea where the exit is.\" He looked over at the two demons. While Yuki's demon looked far stronger, its claws didn't seem to be doing any damage to its opponent. \"Oliver is going to win.\"\n\n\"Yeah, but we expected that.\" She knelt down, holding another card in her hand. \"Time for phase three.\" Tossing the card in the air, she summoned the Priestess. Bedecked in long, white robes, the woman was made primarily of light and held a thick bible. \"The demon must be stopped.\"\n\n\"God's will be done,\" the priestess declared, then opened her book. Light flowed outward from the holy woman, casting the garden in an eerie light, and Oliver paused in the middle of ripping the other demon's arm off.\n\n\"Do you... think that will stop me?\" He slapped Yuki's demon in the face with its own arm, causing it to disappear in a puff of fire and smoke, then stomped toward the holy woman. His movements were sluggish, but he put his hands together, summoning a large ball of red and black fire. Letting out an inhuman roar, he hurled it over his head at the priestess.\n\nThe magic washed over her and she began reciting rapidly from the book. Mike was certain she was reading in Latin, then looked over at Yuki.\n\nYuki nodded, holding the ice scepter in front of her. The staff had cracked in more than a few places and was beginning to fall apart. She handed it to Mike and began summoning large chunks of frost that clung to Oliver's feet.\n\n\"I will enjoy chewing your face off,\" Oliver hissed, throwing more fire at the priestess. He was having trouble dividing his attention between Yuki and the priestess now, and he stumbled under the dual assault. Letting out a loud roar, his body rippled again and was covered in thick scales of black and red. Mike felt a wave of terror eat through his body, and even Yuki stumbled in her spellcasting.\n\nThis was enough to allow him to charge the priestess and attack. Her holy magic did her no good as he twisted her head and bit into her face, her ethereal body popping out of existence like a giant bubble of light. Yuki threw everything she had at him, but he sneered, the talons on his right hand growing longer.\n\n\"I will make you regret this day,\" he told her, then swung his arm. Malignant energy washed over her, sending her spiraling through the bushes, and Mike lifted the staff and smashed it on the ground, picking up the object within. He moved alongside Oliver, waiting for his chance to strike. His left hand reached into his pocket.\n\n\"We are going to take her back!\" Yuki hollered, summoning ice beneath the demon's feet. Her magic was far weaker here, and without her cards, she was unable to summon the necessary materials. The ice slowed him for a moment, but his cloven feet smashed through, digging deep into the soil.\n\n\"No. You won't.\" His tail whipped around and spiraled through the air, grabbing Yuki by the waist and pulling her through the air. The demon caught Yuki in one hand and smashed her into the ground. She let out a cry of pain, and Oliver laughed in her face.\n\n\"There is nothing you can do that will hurt me,\" he told her, saliva dripping from his jaws. \"In this place, I. AM. GOD.\" He punctuated his words by smashing her into the ground repeatedly. His attention was so fixed on her that he didn't pay any attention when Mike slid the goggles over his face, the lenses flicking back and forth instantly to form a floating bullseye.\n\n\"Hey! God!\" Mike leaned on his back about ten feet from the demon and twisted the knob on Tink's club. Oliver looked up, his bony brow folding in curiosity as Mike lined up the shot and pulled the trigger once the bullseye was between Oliver's eyes.\n\nThe mechanism fired the bolt, but instead of a standard arrow, the bolt had been rigged with the final vial that Zel had given him. It exploded on contact and expanded into a sickly yellow foam that clung to Oliver like glue. Steam hissed from his body as the acid did its best to eat through his flesh, and Yuki scurried off, the foam eating into the hard rock by her feet.\n\nBlinded, Oliver swung wildly with his hands, and Mike shouted at him, drawing him away from the pavilion with Beth inside. Oliver's bones and sinew were visible now, but Mike watched as the demon's flesh regenerated, the wounds closing up where the acid had already fallen off. A large portion of it had fallen to the ground, and the demon stumbled over the suddenly uneven terrain.\n\nTaking a chance, Mike waited for Oliver to stumble onto the smooth walkway of the garden and then leapt forward and swung the club into Oliver's knee. The impact made his arms go numb, and the club fell from his hands, clattering onto the ground. Oliver spread his fingers wide and pinned Mike to the ground with his claws as he fell.\n\nThe angry face of a wounded demon was terrifying enough, but the acid had eaten away all of the soft tissue. Oliver growled, his sunken eyes slowly growing back in his monstrous skull. One of his horns had fallen off, but was already reforming on his skull.\n\n\"Did you... did you really think... that you could win?\" He asked. Oliver leaned forward, his hot breath washing over Mike. \"Oh, I'm going to make you suffer for this.\"\n\n\"I bet.\" Through Oliver's legs, he could see Yuki moving close. He needed to buy just a couple more seconds. \"I heard you like questions. Is it true the answer just pops in your head, just like that?\"",
        "The demon's face was ruined, but healing rapidly. Scales and flesh were growing back across his skull. \"I'm uninterested in your questions.\"\n\n\"Even if I ask you a good one? Like, for instance, what are all the lines of code necessary to run Google?\"\n\nOliver's face contorted and steam hissed from his eye sockets. His horn had finished regrowing now, his regeneration speeding up. He raised his claw in the air.\n\n\"Follow up question. What are those lines of code converted into morse code?\"\n\nOliver's hand faltered and he shook his head, then clutched it in pain.\n\nMike laughed, egging Oliver on. \"I knew it! You still have to process the information, don't you? Hard to do with half your fucking face gone, isn't it?\"\n\nThe demon bellowed, shaking his head and coating Mike in spittle and blood.\n\n\"If you shuffled up the morse code randomly and printed out every configuration and then shuffled those up...\" Oliver placed his hand over Mike's mouth, silencing him.\n\n\"Enough!\" Oliver bellowed, holding up his other hand, the talons narrowing into razors. His yellow eyes had reformed and the skin of his face was nearly complete. He focused his gaze on Mike. \"You're dead.\"\n\nMike briefly twisted his mouth free of Oliver's hand. \"How is a raven like a writing desk?!?\"\n\nOliver's eyes flashed and he let out a grunt, bloody drool falling from his mouth. Smoke emanated from his face now, coming out of his nostrils and his ears. It lasted just a few moments, and then he tilted his face down toward Mike's. \"I'm going to peel you like a grape and then fuck your skull, you weak bag of flesh.\"\n\n\"Yeah, well...\" Mike mumbled, then twisted his mouth free again. \"You owe me a new kitchen knife.\"\n\nOliver's brow furrowed. \"What?\"\n\nYuki slammed into Oliver from behind, the magic dagger sinking into the back of his skull. He reached back, eyes rolling into his head, and then his body went limp and he fell onto Mike. Mike scurried free and Yuki rolled off of the demon and pulled the dagger free, then stabbed him in the head again. Oliver let out a gurgling whimper, the first wound already closing and one eye swiveling around to focus on the kitsune. Twisting his head sideways, Yuki jammed the blade into his temple and let go. The demon went completely limp and collapsed, his claws twitching.\n\nMike stood up and joined Yuki. She watched the demon twitch for a moment and then picked up Tink's club from the ground nearby. She walked toward the demon and used the club as a hammer on the pommel of the dagger. It sank even deeper into Oliver's skull. She did this over and over again until the loud cracking of bone could be heard. Hammering it even deeper, the hilt sank beneath his skull, blood like black tar leaking onto the ground. Only an inch of the pommel was visible now.\n\nMike gagged at the sight and turned away. He took a few seconds to compose himself and turned back. As Ratu had predicted, the wound had mostly healed already, the knife now firmly embedded in Oliver's skull. The sharp blade inside his brain had disabled him completely, trapping him in a state of death.\n\nYuki pinched the pommel and yanked it, causing Oliver's head to lift.\n\n\"That's not coming out anytime soon,\" she said, slamming Oliver's head back on the ground. \"If anything, it might go deeper, but he's gonna have a tough time with a dagger floating around in there.\"\n\nMike let out a huge sigh. They had done it. \"Okay, so what now?\"\n\n\"First, we get Beth out of here.\" Yuki sat on the ground and let out a groan. \"I think he broke some of my ribs.\"\n\n\"Yeah, well, we'll get you patched up when we get home.\" He grinned. \"Your plan was brilliant, by the way.\"\n\n\"Thank you, I... we needed to do this.\" She let out a pained breath and stood back up. \"Let's get Beth home and then teach the Society that you don't fuck with the Radley House.\"\n\nMike laughed. \"I'll go find that pool if you'll go get the rats.\"\n\n--\n\nYuki stood atop the pavilion, her eyes scanning the garden below. The rats were everywhere, hundreds of them, scouting the ground. Oliver's body had been moved into the pavilion proper where several rodents stood guard in case his body found a way to push the dagger out of his skull.\n\nMike appeared through the bushes, followed by Tink. When his eyes met Yuki's, he gave her a thumbs up. \"She's safe. She just sort of emerged from the pool, so we all dragged her out. Ratu is busy working on the cure right now, so by tomorrow, everyone should be safe.\"\n\n\"Good.\" Yuki let out a sigh. No matter what happened next, at least that was one debt repaid. Her lungs burned with every breath, her wounds from Oliver more severe than she had let on. They would heal in time, but she would have to live with the pain for now.\n\n\"Lord Mike.\" Reggie appeared from one of the hedges. \"I believe we are ready to begin.\"\n\n\"Do you think it will work?\"\n\nReggie took off his plastic glasses and wiped them off on his shirt. Yuki fought the urge to laugh at the absurdity of a rodent pretending that he had actual glasses. What the Rat King was about to accomplish was nothing short of a miracle.\n\n\"I do,\" Reggie said, placing his glasses back on and adjusting his crown. \"We have already located and isolated other worlds like this one, so no other creatures will be harmed. Those places, though, will be utterly destroyed once we begin.\"\n\n\"Okay, good.\" Mike looked at Yuki. \"As for you... are you good?\"\n\n\"Of course.\" Yuki gazed across the garden. The stone animals were slowly transforming into twisted, macabre versions of their former selves. With Oliver out cold, his mental control over the garden was weakening. Soon, the trap would be laid, and all they could do was wait.\n\n\"Then let's begin.\" Mike nodded at Reggie, who signaled to some rats nearby. Those rats set off, and then the entire garden filled with the sound of chewing.\n\nMike climbed on top of the pavilion with Yuki's help, his eyes on the work below. It would be a while before any of the portals would open.\n\n\"This is so surreal,\" Mike said, watching them work. \"I'm watching magic rats coordinate an interdimensional highway inside of a prison world that looks like the Mad Hatter's tea party. That's what made me think of the raven question, actually. I watched the Alice cartoon as a kid, and wondered if a question like that would confuse him. Pissed him off pretty bad, that was a surprise for me.\"\n\nYuki chuckled. \"This place has been around since the eighteen hundreds, according to Zel's journal. I'm wondering if Lewis Carroll himself once passed through the looking glass, if you catch my drift.\"\n\n\"Do you really think he was here? I thought he was just a mathematician.\"\n\n\"In some ways, math is just another type of magic.\" Yuki coughed, wincing. \"He may have visited, been trapped here, or even overheard the story about this place from a friend. Maybe even used that question to escape, who knows? You'll find that every story tends to have a kernel of truth, and some truths are far more interesting than others.\"\n\n\"I see.\" He looked out over the gardens.\n\n\"Mike?\"\n\n\"Yeah?\"\n\n\"What's a Google?\"\n\nHe laughed. \"That's a good question! It's easier to show you when we get home.\" His brow furrowed and he turned to look at her. \"Also, I've been meaning to ask you. Once we get everyone back to normal, what were you thinking of doing?\"\n\n\"What do you mean?\" Yuki fought the nauseous feeling rising up in her throat. Whether it was from her busted ribs or anxiety, she couldn't be sure.\n\n\"Well, I mean...\" Mike cleared his throat. \"Where are you going to stay? After this?\"\n\n\"I thought...\" Yuki hung her head. She hadn't really thought that far ahead. In a way, it didn't make a whole lot of sense for her to stick around. After all, she had almost lost the house to a group of witches. Nobody in the house even remembered her, which meant that as far as they were concerned, she was still the enemy.\n\nShe had been stupid to think that her hard work would help make up for the trouble she caused. Lost in thought, she realized that Mike was still speaking to her.\n\n\"-or you could stay in the tower, if you'd rather. It's just that the current rooms are either a mess or occupied. The rats will probably shift a bit, but I don't want you to be offended because I offered you the servants quarters, that's just the only one that's remotely ready to be a bedroom.\"\n\n\"Wait... what?\" She turned toward him. \"You want me to stay?\"\n\n\"Only if you want to. I know you have mixed feelings about what happened, and you're certainly free to go. I just didn't know which room you wanted and was trying to make conversation. You can stay in the tower, but that might make you nervous about getting trapped again, so I didn't want to assume anything.\"\n\n\"You realize what you're asking, right? You want me to stay here, to live with you, even after everything I've done.\"\n\nHis face darkened and he lowered his voice. \"I want you to stay because of what you've done.\"\n\nYuki blinked a couple of times, unsure of what she had just heard. \"You want me here because... because I tried to kill you?\"\n\n\"Kind of.\" He kept his eyes on the distant rats. \"I keep thinking about that shadow thing and it makes me wonder. What else is tucked away in the house, waiting to try and manipulate me? What if something causes me to hurt somebody one day, like Emily did? Who would notice, who would be able to stop me from going off the deep end?\"\n\n\"You don't think the others would notice?\"\n\nHe shrugged. \"They might. But would they be able to do what needed to be done?\" Mike turned to look at her. \"I have a feeling that you would, but I hope it never comes to that. I know that you only want what is best for the house. Even in the middle of hating me, you were able to set your feelings aside. Abella told me that you tried to give her the key and come get me. That still counts, even if it didn't work.\"\n\n\"I guess.\" She crossed her arms and scowled. \"So you want me to stay just so I can kill you in case you go off the deep end?\"\n\n\"What?\" He looked confused for a moment, his eyes eventually settling on the wry grin on Yuki's face. He chuckled and shook his head. \"No, I want you to stay because you belong here, with the others. They might not remember you now, but they're still the same people you used to know. I just wanted to be up front with you that I'm aware that something might happen to me someday. I rarely have a plan, and I've gotten lucky more than once. Someday, that luck might run out, and I need to know I can depend on you.\" Mike chuckled. \"That, and if this plan you came up with works, it's going to really piss off some people. I wouldn't mind the extra firepower at home.\"\n\n\"If they survive.\" A grin crossed her lips. \"Okay, we have a deal. We can worry about room assignments after I get back.\"\n\n\"Good.\" He patted her head, then jerked his hand back. \"I'm really sorry. I have no idea why I keep doing that.\"\n\n\"It's... it's okay.\" She couldn't help but smile. \"It reminds me of an old friend.\"\n\n\"Okay then.\" He did it again, but gave her hair a good ruffle. A hot breeze blew across both of their backs, and he turned around to look. Down on the ground, one of the first portals had been opened. \"Oh boy, I'm getting nervous.\"\n\n\"Me too.\" They watched together in silence as the rats did their work, the portals opening throughout the garden. Eerie light from different worlds cast a technicolor glow into the sky. Each portal went to a world that was like this one, completely closed off from everywhere else.\n\nBeneath them, the ground began to rumble.\n\nMike broke the silence. \"I did want to ask you a question.\"\n\n\"What's that?\"\n\n\"Why is the Grim Reaper out in my front yard?\"\n\nYuki grinned. \"I traded away a decade of my life to trap an avatar of Death inside of that card. He was meant for Emily, but she had already passed. Once summoned, the avatar must collect the soul of the person I request before it can return to... I guess wherever Death exists.\"\n\n\"So he's not actually the Grim Reaper?\" He held up his hands and made a pair of air quotes.\n\n\"Death is more of a concept than a person or a deity. Just think of it like one of your mall santas. They aren't the real santa, just one of his helpers, an extension.\"\n\n\"Ah. I see. So... he's just stuck here? In my front yard?\" He paused, deep in thought. \"Is he... safe?\"\n\n\"I guess. I tried to use the card on that Amir guy, but apparently his soul wasn't in his body, or whatever. So until Amir actually dies and crosses over, Death is stuck on here.\" She shrugged. \"This is new territory for me, too. As for being safe... I'm not sure.\"\n\n\"Lord Mike?\" Reggie coughed from down below. \"It's going to become fairly unstable soon. You may wish to climb down from there.\"\n\n\"Sure.\" He climbed down first, then offered a hand to Yuki, who followed. The ground rumbled and she fell into his arms. He caught her easily, holding her close against him until the tremors passed. It was an oddly comforting sensation, feeling his arms around her body, the most human contact she had had in over a decade. His nymph magic washed over her, at once so similar to Emily's, but already so very different.\n\nShe steadied herself and the ground shook again.\n\nReggie scampered up. \"We will be done here shortly. The exit portals have all been sealed, so you will need to use the reflecting pool here to get home.\"\n\n\"You're sure the pool will take us home?\" Yuki asked.\n\n\"Of course!\" Reggie drew himself to his full height. \"My subjects are leaving the same way. It returns you to the closest reflective surface to your departure point on Earth.\"\n\n\"You're gonna get wet, though,\" Mike added.\n\n\"Not the worst thing that's ever happened to me.\" She turned her attention to the horizon. \"I guess we should get started.\"\n\nMike walked with her to the edge of the garden. The rats had trimmed the hedges down over the last couple of hours, giving them a clear path to the edge of the floating garden. When they got there, they got on their hands and knees and crawled to the edge, peering down into the depths below.\n\nIt was possibly miles of nothing, followed by shifting clouds beneath. When the clouds moved, Yuki could see something beneath them, shifting around. Beth had told them that she thought it was souls who had gotten trapped here, but Yuki suspected something far more sinister.\n\n\"What's down there?\" he asked. The ground shook beneath them, and both of them clutched nearby rocks tightly.\n\n\"Doesn't matter. Won't be there long.\" The ground rattled again, and a stone tumbled free of a nearby garden wall, falling into the void beneath. \"We should scoot back.\"\n\n\"Agreed.\" They moved away about ten feet and then stood. The ground rumbled under them again, and Yuki realized that she no longer saw any trace of the rats. Across the garden, she spotted a few of them migrating toward where she knew the exit to be, followed by a giant pillar of floating rats that spiraled into the sky, each one winking out of existence like a star chased away by the dawn.\n\nThey walked back to the pavilion. The ground rumbled so intensely now that the pavilion had toppled, as well as several of the nearby statues. Except for the path that the rats had made from the edge to the exit, the soft glow of open portals was everywhere.\n\n\"Ugh.\" Mike held his stomach. \"You can feel your equilibrium shift when you walk too close to some of them.\" They walked to the pool to see a steady stream of rats stepping inside. Reggie was there, speaking the magic words that activated the portal.\n\n\"Ixiar Tobish Anuit,\" the Rat King said, sending another cluster of rats skyward. Mike and Yuki waited until he had sent them all into the sky, and he turned around to face them.\n\n\"Well?\" Mike asked.\n\n\"It was difficult, but we managed to very carefully reach the threshold.\" Once the words were out of his mouth, the world trembled around them. Air pressure varied, and the ground bucked. \"I strongly suspect that the addition of any other portal in this world will cause it to collapse.\"\n\nYuki couldn't help but smile. Much like Alice, she had no idea what a flame would look like after it had gone out, but Reggie had assured her that the garden would likely cease to exist. It had been sealed away so completely that it was its own pocket universe. As for Oliver? He couldn't return to Hell or Earth, which likely meant utter annihilation or an eternity trapped in a place where neither time or space existed.\n\nEither way, he deserved it.\n\n\"Great job Reggie. Are all of your subjects out?\"\n\n\"Only I remain.\" Reggie gave Mike a salute. \"I look forward to seeing you on the other side.\"\n\n\"And you will.\" Mike knelt down and took the king's paw in one hand. \"We couldn't have done this without you.\"\n\nReggie's whiskers twitched, and Yuki could have sworn he was smiling.\n\nThe Rat King stepped into the pool and spoke the magic words, his body slowly raising into the sky until it disappeared from view.\n\n\"The timing on this is going to be tricky,\" Mike said.\n\n\"I'm aware,\" Yuki told him. The two of them followed the path back toward the edge, but Mike took a small detour to contemplate Oliver's body once more.\n\n\"Something wrong?\" Yuki asked.\n\n\"That dagger has bailed me out of more trouble than I care to admit,\" he told her. \"I got it off of a witch who came to kill me my first week in the house. It cuts through anything, I'm honestly lucky to still have all of my fingers.\" He wiggled all ten of them for her. \"I guess I'm a little sad to leave it behind. I mean, I get why it needs to be this way, but it's almost like it was a part of me.\"\n\n\"It was never a part of you,\" Yuki said, holding in another cough. \"It was a tool that had its uses, sure, but it was never meant to be wielded by the likes of you.\"\n\n\"The likes of me?\" He frowned at her.\n\n\"You're not meant to be a fighter, we both know that now. You are the Caretaker. You use the tools at your disposal to keep our home safe. Sometimes it means fighting, but usually it means nurturing, taking care of the home and the people inside it. I see it in how the others look to you for guidance, and I sincerely wish I had seen it before.\" She took a deep breath, then let out a terrible cough, clutching her sides. \"You are already so far ahead of where she ever was. If I had known that when I first saw you, I would have hurled a much bigger piece of ice at you, or had my Jabberwock snatch you up in its jaws.\"\n\nHe let out a chuckle, then sighed. \"Yeah, well, there will always be something out to get me.\" He knelt down by Oliver and tenderly touched the pommel of his knife. \"It was just so comforting knowing that I had a weapon, in case trouble found me.\"\n\n\"From now on, I'll be your weapon.\" The words were easy to say, but she almost felt like she had cast a spell, the air rippling oddly around them. It was likely the effect of this pocket universe being pincushioned to the point of annihilation, but she couldn't be sure.\n\nMike stood. \"Then I guess I better keep you close by. Are you ready?\"\n\n\"Yeah.\" They walked together toward the edge of the garden and gazed down into the depths below from a safe distance. The distant clouds shifted hungrily, as if eager for their meal.\n\nYuki pulled a card from her pocket and held it up. The Sun card was warm in her hand, the energy of over a decade's worth of direct sunlight stored inside. It was one of the first cards she had made, but one of the last she had finished. Each line of art had been painstakingly drawn at night beneath Daisy's magical glow, the only light that was safe to draw it by. Hungry for heat, it had gobbled up the sun's light so quickly that an unnatural winter had settled in to the mountain for several months until she could control its intake.\n\nShe slid her hand across the face of the card and tossed it over the edge. It shimmered and turned into an angry ball of light that rapidly expanded to the size of a small sedan before it vanished from view.",
        "\"Are you ready?\" she asked Mike, pulling the sunstone from her pocket.\n\n\"Do it,\" he told her.\n\nYuki cocked her arm back and winced, grabbing her side in agony. Her arm dropped to her side, so she handed the sunstone over to Mike.\n\n\"You need to,\" she told him, already feeling the temperature rise. \"Hurry!\"\n\n\"Yeah, sure.\" He scooped up the sunstone and cocked his arm back. He threw it over the edge of the garden and then they both turned and ran.\n\nThe sky turned an eerie red above them as the giant ball of fire beneath the island met up with the falling stone. A blast of heat rocked the island from beneath, sending giant cracks through the ground and the garden walls. Mike and Yuki both fell to the ground as the combined might of the stone and her tarot card combined to create what likely looked like a small sun beneath them.\n\nAnother wave of heat blasted the island, and Yuki looked back in time to see a chunk of it break off and fall.\n\n\"Go,\" she hissed, clutching her sides. Mike yanked her to her feet and ran, pulling her. A second wave of energy rocked the island, and they both got tossed through the air and crashed into one of the nearby statues. It tilted on top of them, but she was yanked out of the way at the last second by Mike.\n\n\"C'mon,\" he shouted, then pulled her up once more. A low musical note filled the air as hot wind rushed across the island, followed by several more tones as each portal acted like the open end of a bottle. The sound raised the hairs on Yuki's neck, causing her to shiver.\n\nThe temperature was increasing exponentially now. The rats had cleverly created a closed system with their dimension hopping, and as the heat increased, so would the pressure. Oliver's world had become a massive pressure cooker that was starting to heat up.\n\nThey passed the pavilion and then Oliver. Yuki stumbled again, her legs giving out as fire spread through her lungs, but Mike helped her again, lifting her off the ground and slinging her over his shoulder. The ground rocked dangerously beneath them, giant cracks appearing in the garden, but he casually sidestepped them and even dodged a few falling statues. The going was slower than she would have liked, and she gasped at the sight of a shimmering wall of heat blasting away at the edges of the garden.\n\nThey were at the reflecting pool. Mike held on tightly to Yuki, stepping into the water.\n\n\"Ixiar Tobish Anuit,\" they both said, and the pool shimmered beneath them. Their bodies floated up into the sky slowly at first, and Yuki looked down in horror as the water beneath them began to bubble. Gathering her magic, she blasted the pool with frost, attempting to cool it down long enough for them to escape.\n\nThey rose together into the sky, slowly gaining speed as Oliver's island grew smaller beneath them. The light from below was so intense that it was like looking into the sun itself, so they both closed their eyes as they gained speed, the air growing impossibly hot around them. Yuki summoned her magic, her icy shields bursting and turning to steam just as fast as they formed.\n\nIt was now hard to breath. Neither of them had expected the garden to become so unstable, and the air was hot enough now that it hurt to breathe. Flames licked at their feet, the world beneath them ablaze with power.\n\nWhen they exited the reflecting pool of the Labyrinth, the heat that chased them out had caused steam to rise from its surface, turning the pool into a hot spring. Together, they quickly scrambled out of the water and fell on the cool stone of the Labyrinth floor, gasping for air.\n\n\"Well,\" Yuki began, wheezing now. \"Now that we've made a bomb roughly the size of a small planet, what would you like to do tomorrow, Caretaker?\"\n\nMike let out a hard laugh, squeezing Yuki's hand with his own.\n\n--\n\nBeth opened her eyes, taking a deep breath. Her vision was blurry for a few moments, and she saw some shapes moving around in front of her.\n\n\"Easy,\" a voice told her, as if from a great distance. \"It takes a few minutes to acclimate to being flesh and bone again, so just relax.\"\n\n\"Ra... Ratu?\" her voice was barely a whisper. The figures slowly gained definition, turning from amorphous blobs into humanoids that moved in front of her. The fuzzy edges of their bodies came into focus, and she found herself lying on a cot that had been built in front of the Labyrinth.\n\nOff to her side, she saw Ratu nod with a satisfied smile. She was holding a strange scepter with a stony eyeball built into the top. \"Looks like we're good here. Don't get up for a bit, your balance is non-existent and your muscles are going to hurt pretty badly. You aren't dying or anything, so just relax until the feeling passes.\"\n\n\"I... where...\" her brain fought to put the pieces together. A warm hand took hers and squeezed. She turned her head to see Mike at her side.\n\n\"Welcome home,\" he told her, then leaned in to give her a hug.\n\n\"You... came for... me...\" the smile that crossed her face hurt like hell, but she didn't care.\n\nShe was saved.\n\n--\n\nI certainly hope you enjoyed this chapter, it was fun for me to write, and it sets the stage to close out a major plot thread! Don't forget to rate or review. Also, I update my bio whenever I hit submit, so feel free to follow me or check that often for news about future posts.\n\nComing next chapter, the explosive conclusion to Book Three, the return of an old character and the introduction of a new one. Hope to see you then!\n\nTake care of yourselves, you all mean the world to me!\n\nPS. I have already started working on Book Four, so no panicked emails please :P"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "playing with portals",
        "tarot card magic",
        "tricking the trickster",
        "harem",
        "kitsune",
        "monstergirls",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-41"
}