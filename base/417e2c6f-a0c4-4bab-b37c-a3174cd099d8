{
    "title": "Words with Friends with Benefits",
    "pages": [
        "July\n\nMedMax played CAD for 32 points.\n\nIt was a solid play. The \"C\" was laid on a triple letter score and counted twice, filling in between an \"IT\" above and an \"H\" below to also form \"ITCH\". \n\nMax trailed by 40 points, performing better than in most games against Jasmine. If she fell into tile trouble, he might still jump ahead. \n\nJasmine sent him an in-game message: \"What girl did you mistreat today? Tasha I hope.\"\n\nHow the hell did she know? Ah, she didn't. She was just riffing on his last play, but it was a segue into his big news.\n\nHe typed back: \"That was my best play, but as it happens, Tasha and I broke up this afternoon.\"\n\nHer response came seconds later: \"Good\".\n\nJazmatazz played BYE for 22 points. \n\nShe had hooked the B to also play BITCH vertically. \n\nMax had been sipping his evening coffee, and his laughter caused him to inhale a teaspoon of Guatemalan dark roast into his maxillary sinuses. She hadn't hit any colored tiles with that play, and had probably skipped better options on the board just to play those two words. When she saw a word in the tiles that seemed to fit their conversation, she almost always played it, and she usually beat him anyway.\n\nMedMax: \"That was one of your better ones.\" \n\nHe used the I in BITCH to play \"SAKI\", landing the K on a triple letter. \n\nThe game suddenly disappeared. Thelonious Monk's \"'Round Midnight\" crescendoed, and Jaz's photo slinked onto the screen. He liked the photo. He had taken it in front of Shedd Aquarium. Mischief twinkled in eyes framed by exquisite cheekbones. Strands of her hair counterfeited an auburn veil, blown asunder by the wind off Lake Michigan.\n\nMax answered the phone, and had to move his ear a few inches away to avoid being deafened by Jaz's rendition of \"Ding Dong the Witch is Dead.\" \n\nWhen she paused for a breath in the middle of her discordant wailing, he interrupted, \"Don't hold back, Jaz, tell me what you really thought of her.\"\n\n\"Youdidit! Youdidit! What happened?\"\n\n\"She had a depressive episode, and I found out she stopped taking the Lithium I had prescribed.\"\n\n\"Third strike?\"\n\n\"Yeah, she tried to say it was the side effects, but I had warned her after she flushed her Prozac and Zoloft that she needed to tell me when she went off her meds.\"\n\n\"And you followed through, instead of staging another rescue attempt?\" Jasmine sounded impressed.\n\n\"She strung her last boyfriend along for six years. I ended it in six months. I figure I got off easy.\"\n\n\"You could have saved yourself five of those months by listening to me when I first met her. 'Don't date losers, Max,' I said.\"\n\nThat annoyed him, but he kept a lilt of humor in his voice. \"You should talk.\"\n\nJasmine's tongue tsked him through the airwaves. \"Don't break our rule! After giving our initial opinion, we can only insult each other's bad relationship decisions once they have ended. It has worked well for ten years.\"\n\n\"It won't happen again. So where is your current bad relationship decision tonight?\" \n\nShe made a raspberry sound. \"Jack has a gig in Milwaukee.\"\n\n\"Milwaukee hasn't yet banned Linkin Park cover bands? Good for Jack.\" He had known too many poseurs back in college, and could spot the guys who only saw music or art as a means to score drugs or women. Jack was all about both, but like most of Jasmine's boyfriends, he was buff, chiselled, scruffy (\"rugged\", Jaz always called it) and oozed an aura of rebellious danger that made her knees weak. \n\n\"Post mortem time,\" Jasmine said. \"How was Tasha in bed?\"\n\nThey did this after every breakup, sharing the intimate details in order to learn from each other. Both had found it valuable, as if they were reading the other team's playbook. \"Best sex ever for about a month,\" Max said. \"Then it tapered off.\"\n\n\"How was she at oral?\" Her tone was that of a teacher going through a grade sheet.\n\n\"A-minus, but more for enthusiasm than technique. When we were first dating she liked to go down on me in public places, which was amazingly hot.\"\n\n\"What's so hot about sex in public?\" Jasmine asked. \"A few boyfriends have pushed for it, but I just worry about getting caught, and the stress dampens the mood.\"\n\n\"I don't know. I think it's the woman wanting me so much she doesn't care whether she gets caught. There is nothing sexier than rampant, uninhibited, female lust.\"\n\n\"Most of my boyfriends would disagree,\" she said with a tone of disappointment. \"What was wrong with her technique?\"\n\n\"I think she learned it from watching porn, which had it's upsides, but it was like she was playing a role, giving me what she thought I wanted, without actually paying attention to whether I liked it. She would do something amazing with her tongue and she would suddenly use her hand too fast and hard, without noticing that she was hurting me.\"\n\n\"So she wasn't paying attention to your responses. Check.\"\n\n\"You are looking for tips on oral?\"\n\n\"I don't think I am that good at it, and I am trying to figure out why.\"\n\n\"I doubt your problem is technique.\"\n\n\"Uh huh. Why do you say that?\" Jasmine's tone indicated she knew she was being set up for a punchline.\n\n\"I just doubt you could stop talking during the act.\"\n\nShe made another raspberry sound. \"How about the actual sex?\"\n\n\"She loved cowgirl, missionary, and doggy, which are my favorites, so that was all good. But she had this thing for impossible kama sutra positions that look much better on paper than they feel in practice. I think I would have to be packing fourteen inches in my boxers to actually pull some of those off, which I don't think a woman would find comfortable most of the time.\"\n\n\"Don't knock it 'til you've tried it. Any kinks?\"\n\n\"Nothing major. She had a knack for talk, and was a hell of a screamer. Literature really turned her on. She would ask me to read from the letters of Abelard and Heloise, and then she would hump my leg while I did it.\" \n\n\"Those are wonderful. Had I known she was a fan, I would have liked her more.\"\n\n\"Bullshit.\"\n\nJasmine laughed. \"Well, I would have respected her taste, anyway. How did she handle the breakup?\"\n\n\"Desperation made her horny. You should have heard what she promised me when I told her I was ending it.\"\n\n\"She would get your permission before cutting herself next time?\"\n\n\"Come on, she wasn't a cutter. No, she promised me the 'abject sexual submission of a woman to a man'. I wasn't sure what she meant by that, but it seemed to include on-demand fellatio for eternity.\"\n\n\"You must have a will of iron to decline an offer like that.\"\n\n\"If I had believed it, I would have put a ring on it.\"\n\nThat made Jasmine laugh again. \"You can do better. I have to go to bed. Early day tomorrow. Your move.\" She hung up.\n\nHis phone buzzed again as her next move arrived.\n\nJazmatazz played \"EXCEL\" for 57 points. \n\nDammit, she managed to reach the triple word score.\n\nAugust\n\nMedMax played VENTRAL for 39 points. \n\nHer text came a minute later.\n\nJazmatazz: Bah, you should have drilled me better on vocab during Biology.\n\nHis vocabulary only exceeded Jasmine's in medical or biological terminology, where he could sometimes burn her. She hadn't seen that her earlier play of \"VENT\" allowed him to extend three common letters to hit a triple word score. He was now ahead by ten points, and with only a few letters left to play, he might score a rare win. \n\nThey had met as lab partners in Introductory Biology their freshman year of college. Max had been on the Pre-Med track, and Jasmine had been filling a cross-disciplinary science requirement for whatever liberal arts major had been her whim that semester. He had carried her through the class, and she had made it fun. \n\nMedMax: Usually when I am beating you it's because you get stuck with letters that only spell words in Serbian. What's up?\n\nMax could tell she wasn't in tile trouble. She was just missing plays where he himself could see a better use of the tiles she had played. At one point, she had laid a \"ZA\" down on the board for a mere 13 points, missing a location where she could have quadrupled that.\n\nJazmatazz: I caught Jack in bed with a skanky groupie, and dumped him.\n\n\"The fucker!\" Max said after she picked up her phone in response to his ring.\n\n\"Don't pretend you're shocked.\" Jasmine had a weariness to her voice which Max recognized. She had been on this particular merry-go-round before.\n\n\"I am not shocked, but it's my duty to tell you he is a lying, cheating, dickless fucker who wasn't worthy of you, and then wait until you're all cried out before I say I told you so.\"\n\nHe heard a snort, but it seemed to be amusement, not derision. \"You always know how to cheer me up.\"\n\n\"You want to talk about it, or bury it deep down until it forms a festering canker of bitterness on your very soul?\" He knew that if she hadn't wanted to talk, she wouldn't have told him.\n\n\"I had an eye appointment today, where they dilate your pupils and you stagger around for the rest of the day like Gizmo in Gremlins screaming 'bright light!', but I left my sunglasses at Jack's apartment, so I stopped by and used the key. I hear Minutes to Midnight coming from the bedroom, which gives me a sinking feeling, as it is Jack's favorite sex soundtrack. Sure enough, some barely legal blonde with pneumatic tits is lying on the bed with her butt in the air while he screws her from behind.\"\n\n\"Ah, hell.\"\n\n\"So I scream, 'What the fuck do you think you're doing!' The blonde is shocked and starts to move, but Jack holds her in place, looks at me and says 'unless you want to join, you will have to wait until I am done,' and he keeps screwing her!\"\n\n\"Oh God.\" There hadn't been any news reports today of musicians thrown to their deaths from sixth floor windows, so it must not have been as bad as it could have been.\n\n\"The rat bastard knew he was busted, but wanted to get off and save face with his new pet skank.\"\n\n\"What did you do?\"\n\nHer voice was silk over a razor blade. \"Why do you think I did anything? Maybe I just left?\" He could hear the smile.\n\n\"Not without a personality transplant,\" he replied.\n\nJasmine chortled. \"He had switched positions into missionary by the time I pulled out my Taser.\" \n\nMax doubled over, imagining the look on Jack's smug face.\n\nJasmine wasn't done. \"You know how a Taser makes you convulse? I think the skank liked the effect it had on Jack. I was sending fifty thousand volts into Jack's ass, and she was pounding the headboard screaming for Jesus. You know, I might have to taze my next boyfriend myself during the act of love.\"\n\nMax couldn't resist. \"It would be a pre-emptive taze. He will deserve it eventually.\"\n\nThat deflated Jasmine's mood. \"Yeah, he probably will,\" she sighed.\n\n\"Sorry, I was planning to hold off longer for the toldya-so.\"\n\nJasmine changed the subject. \"How about you? Any opportunities?\"\n\n\"Just the usual nurses and lab techs trying to play matchmaker for me.\"\n\n\"Your hospital's brigade of wannabe Yentas doesn't count. I meant are there any opportunities you're actually considering?\" The older ladies at work were always trying to set him up with a daughter or niece, but they never knew what he was looking for, and the attempts just resulted in awkward conversations and hurt feelings.\n\n\"None, but I haven't been looking hard.\"\n\n\"It's been a month. Don't you have needs, Max?\"\n\nIt was his turn to change the subject. \"So, are you going to give me a debrief on Jack?\"\n\n\"Yeah, I could use closure.\"\n\n\"Bedroom skills?\" Max looked forward to Jasmine's debriefs. He couldn't help but picture her performing the acts she described, despite realizing long ago that dating her would be disastrous.\n\n\"Oh my, yes. Jack knew his way around a woman's body. He had this assertive ferocity that was very sexy. There are some things I don't normally like, but he made me like them.\"\n\n\"I didn't take you for a submissive.\"\n\n\"Ha! No, I meant he made them seem sexy and forbidden.\"\n\n\"Example.\"\n\n\"Um... I would rather not say.\"\n\nMax suspected he knew. \"Alright, how did he change your mind?\" \n\n\"He, um... built it up one night, saying that for me it was a taboo. I argued with him, and he said I was afraid of just letting go to lust - that good sex was raw and carnal and dirty. It got me thinking, so I tried to approach it his way, and it was really hot.\"\n\n\"You know that's one of the oldest tricks in the book, right? Overcoming a woman's resistance to... something new... by saying there is something wrong with her, and laying down an implicit challenge for her to disprove him?\"\n\n\"Well, it worked.\" Jaz sounded annoyed. \"Jack could also last forever, but now I wonder if it wasn't because he was unloading elsewhere.\"\n\nMax didn't know what to say to that. \n\n\"Am I shallow, Max? Is that my problem?\" The anxieties always poured out after one of her boyfriends showed his true face. \"I know it's my slutty side, but I just love sex. I know I need to stop thinking with my hoochie, but all I can think of when I meet a guy is how he would be in bed. If a man is a disappointment in the sack, his number is deleted from my contact list before his underwear is back on.\"\n\n\"There have to be phenomenal lovers out there who aren't assholes.\" \n\nHe heard Jasmine grunt noncommittally and he could hear typing. Her question had been rhetorical, and he was pretty sure she hadn't even heard his response. Instead, she had been playing with her phone. \"Anyways, gotta go,\" she said, just as his phone buzzed.\n\nJazmatazz played SCUM for 11 points.\n\nSeptember\n\nJazmatazz played WASTED for 10 points.\n\nShe had merely added a D to his earlier play of WASTE. It was Friday night at eleven, and Max suspected she might have sandbagged the play on account of inebriation.\n\nMedMax: You OK?\n\nShe didn't respond, so Max typed his own word. \n\nMedMax played DEALT for 14 points.\n\nHe hit a double word score, and playing off the T in WASTED.\n\nHe had a Saturday shift at the hospital starting at six, so he went to bed. As he entered the cozy realm of semi-sleep, Thelonious Monk wailed from his phone.\n\nWhat now? \"Jaz, it's midnight.\"\n\n\"Oh, thank God, you are still up! I need to call in some friend favors. I will make you dinner for a month, just please come get me. Pleasepleaseplease.\"\n\nIt wasn't the first time. Jasmine didn't trust cabbies \u2014 too many bad experiences late at night flying solo. \"Where?\"\n\nShe told him. It wasn't a good neighborhood.\n\nMax arrived twenty minutes later, in time to see her arguing with a rough-looking guy in front of the apartment building she had given him as an address. \n\nFuck. He pulled over.\n\n\"Max!\" Her voice had the high pitch of panic turning into relief.\n\nThe man turned to appraise Max. \"This your white knight?\" Scruffy goatee, long hair, and muscular. Jaz's type. He was looking at Max with deliberate contempt.\n\n\"Get in the car, Jaz,\" Max commanded, exiting the car and striding to the sidewalk. He left the engine running.\n\n\"Fuck that,\" said Scruffy, grabbing Jaz by the wrist. \"She owes me a new TV.\"\n\n\"You can bill her. Get your fucking hands off her, asshole. She is leaving now.\" It was a deliberate attempt to shift the animosity to himself. \n\nIt worked. Scruffy relaxed his grip on Jaz, and Max recognized violence in Scruffy's narrowed eyes. \"Asshole? Let's do it, geek.\"\n\nJaz looked panicked again. \"Max, don't do this. Get back in the car and call the cops.\"\n\nShe didn't think he could take Scruffy. Max assessed his opponent's build. Max was taller, but more wiry than beefy, and had no experience in fights. Jasmine's pessimism of the outcome was probably correct.\n\n\"Get in the car, Jaz. Now. I know how to handle this. Trust me.\"\n\nJaz said nothing, but she climbed into the car, brow furrowed in worry.\n\nMax looked at Scruffy with what he hoped was cool disdain, and slowly removed his windbreaker, stepping back to the car door while never taking his eyes off his opponent, who waited for him with clenched fists. Max opened the car door, and made as if to throw his jacket into the driver's seat... and quickly slid inside the car beside Jaz. \n\nBefore Scruffy could figure out what had happened, the doors were shut and locked. Max shifted to drive and hit the gas.\n\n\"Motherfucker!\" Scruffy's fist hit the hood of Max's new Prius as they drove off.\n\nJaz's fingers were a vise on his bicep, only relaxing when it was clear they were safe. \n\n\"Oh thank God, he didn't dent your hood.\"\n\nMax gave Jasmine a quick once over to make she herself hadn't been dented. She looked fine. More than fine, in fact. \n\n\"I thought he was going to kill you,\" she said.\n\n\"I told you I knew how to handle it.\"\n\nJasmine closed her eyes, leaned back in the chair, and whispered, \"You did. Thank you.\"\n\nMax shared her relief. That had been a gamble. If Jaz hadn't moved, or if Scruffy had figured out what he intended to do, that might have ended badly. Max was very fond of his teeth and intended to keep them. \"Did you really break his TV?\"\n\n\"Yes.\"\n\n\"What happened?\"\n\n\"You can probably guess.\" Jaz was descending into the world-weary-cynic stage of intoxication.\n\n\"Guessing can be mistaken for judging. I would prefer that you just tell me.\"\n\nJasmine looked down, causing her long auburn locks to fall forward, across her face. She would wear her hair in a braid or ponytail when she was working at the museum, but she wore it down for play, which is where it was tonight. She brushed it back behind her ears. \"Allison and I went to that new club. I met Keith, and we hit it off, so I sent Ally home. But Keith started acting like an asshole when we got back to his place.\"\n\n\"What did he do?\"\n\nJasmine kicked off her pumps, straightened the hem of her red skirt across her upper thighs, and leaned back in the car seat, looking at Max. \"There is normally a fine line between sexy self-confidence and being a boor. Keith leaped it in a single bound. He started calling me a slut, like I would think it was a turn-on. 'Sluts like you just want the cock' \u2014 that sort of thing, like he took lessons from Tom Cruise in Magnolia.\"\n\nMax had heard Jasmine call herself the same word, but he didn't think he should point that out right now.\n\nShe seemed to read his mind. \"When I call myself a slut, it is 'an empowering embrace of my identity as a modern woman'.\" She recited the last bit as if she were quoting Cosmo. \"But when he did it, it felt degrading \u2014 the way you didn't like it when Keith called you a geek, or the way white people can't use the n-word.\"\n\nMax didn't think he agreed that the latter example was the same thing, but he let it pass.\n\n\"Anyway,\" Jaz continued, \"I told him I changed my mind and said I wanted to go. He didn't like that, and started to get violent. I locked myself in the bathroom. I checked for my my Taser, but I must have forgot it, so I called you. I stayed there for twenty minutes, then I made a run for it when I heard him getting his toolbox to remove the hinges on the bathroom door. He chased me when I ran, and I ripped his TV off the wall and threw it at him. I hoped he would catch it, but he just backed up. One broken flat screen later, we were arguing in front of the building, where you found us.\"\n\nShe was looking at him again. \"He called you my white knight. He was right.\"\n\nMax didn't feel like it. \"I got in the car and drove away.\"\n\n\"That was just smart. You handled it perfectly. No one got hurt. No police trouble. Girl rescued.\"\n\nShe tilted her head down, and gazed at him with exaggerated, adoring, doe-eyes. \"You are my hee-ro.\"\n\nNow she was mocking him, again. \n\nShe saw the annoyance on his face. \"I am embarrassing you,\" Jasmine said. \"Sorry. I don't like needing to be saved. Why don't I ever meet the nice guys?\"\n\nMax was halfway through rolling his eyes when he caught himself, and glanced over to make sure she hadn't noticed.",
        "Jasmine was looking at him sharply. \"You're a nice guy. Why didn't you ever ask me out?\"\n\nMax made a wry smile, and shook his head, bemused. \"You really don't know?\"\n\nHer brow furrowed again, and she touched his arm. \"Tell me.\"\n\n\"You were a verse in my Nice Guy's Lament.\"\n\n\"I don't think I know that poem.\"\n\n\"It's a term I coined with a few friends in college. Nice guys always seem to find themselves attracted to beautiful, wonderful women who insist on dating assholes, and then cry on our shoulders asking why other guys aren't more like us. Once the woman recovers from heartbreak, they chase after the next asshole and we are forgotten. That was our Lament.\"\n\n\"Is that what I did to you in college?\" She gave his arm a squeeze, and he heard a hint of dismay in her voice, which he didn't like at all. He didn't want pity from her.\n\n\"That's how I viewed it at the time.\"\n\n\"How about now?\" \n\nShe needed to understand he was well past that. Max remembered the many times in college he had convinced himself she finally saw him in a romantic light. He would misread a smile, or a light touch on the arm, or a compliment, and be in the process of planning his move when Jasmine would come running to him salivating over some new flame, oblivious to the despair in his heart. It had taken him a year to recalibrate his emotions and realize she didn't see him that way, and never would. It took him a surprisingly short amount of time after that to be convinced that outcome was for the best. \n\nAnd now she wanted to know whether he still felt that way. If he answered this question wrong, it could completely upset the dynamic of their relationship, which he treasured deeply, so he chose his words carefully. \"There was a girl in my dorm who crushed on me,\" he said. \"Eventually she broke down crying, complaining that I didn't appreciate her. I realized I was a verse in her Sweet Girl's Lament. I just didn't find her attractive, physically, intellectually, or emotionally, even though she was very nice to me. I saw that my friends and I had a whiner's way of viewing the world. Being nice to someone doesn't grant sexual entitlement. If someone isn't into you, they aren't into you. So I moved on. I hang out with you because you are fun, a good friend, and I am a better person with you in my life.\" \n\nJasmine was staring at him, and seemed about to speak, when he forestalled the additional pity he expected to come from her mouth. He needed to balance the confession of former interest with something that would make it more clear their friendship was safe. \"Anyway, now it's clear we would have made a shitty couple, so you were just smarter than me. You would have given me an early heart attack, and I probably would have bored you. There must be a reason I end up with clingy psychos and manipulators, and you only date asshats. Clearly, we are each looking for something that we don't find in each other.\"\n\n\"What do you think I am looking for?\" There was a note of sadness in her voice, and she had removed her hand from his arm.\n\n\"I remember you telling me that you love it when you dream of falling, and are convinced you are going to die, and the fear wakes you up, and you find yourself safe in bed. I think for some reason you don't appreciate the sense of safety without the preceding panic.\"\n\nJasmine twisted her lips. \"Maybe.\"\n\nMax shrugged. \"I am not going to try to get in your head. Maybe you are attracted to the type because your dad was that type, or because your Mom was attracted to the type and it's in your genes, inherited from her. Maybe you got imprinted by a narcissistic sociopath in preschool. I won't try to guess why you find these guys sexy, but you clearly do.\"\n\nJasmine showed rare embarrassment in her smile. \"I never think they are assholes when I start dating them. They just seem confident and hot. I like guys who know what they want. Somewhere out there, I am certain there is a guy who has learned how to master suave confidence without being an asshole.\" She was looking at him as if she expected him to make fun of her.\n\nHe had said something similar to her last month, but she had ignored him. That caused annoyance, which he decided to deflect with a joke. \"He is probably dating my perfect girl \u2014 a brilliant, needy waif, with a swimsuit model's body and a headful of crazy.\"\n\n\"You're making me sad, saying we are doomed to forever repeat the same failures.\"\n\n\"'The past is prologue.'\"\n\n\"That's from The Tempest, you know.\"\n\n\"I didn't.\"\n\nJasmine was silent for just a moment, and her mood seemed to lighten. \"I think it's misunderstood. People often use the phrase like you just did, to mean that the past predicts the future, but Shakespeare's full line is: 'Whereof what's past is prologue; what to come, in yours and my discharge.' He is saying the opposite, that the past may be written, but the future is subject to your choices.\"\n\nMax grinned at her. He had been thoughtlessly feeding her harsh fatalism after a rough night, and here she was already bouncing back and finding hope. He loved that about her. He would love it more if she could discover a way to do it without rationalizing away her mistakes. \"Knowing Shakespeare by memory like that is half the reason you kick my ass in Scrabble.\"\n\nThey had reached Jasmine's apartment. She gave him a hug before exiting the car, resting her head on his shoulder for a pleasant minute. \"Thank you, Max. Did I ever tell you that you're my best friend?\". She kissed him on the cheek and left him in the car.\n\nHis phone buzzed as he drove home, but he forgot about it and didn't see it until the next morning.\n\nJazmatazz played LEARN for 15 points.\n\nShe laid it vertically, in parallel to the word \"DEALT\", with a two letter offset. It was a deft play in terms of lining up the two words, but it was weak in points. \n\nOctober\n\nMedMax: I had a date last night. Melanie.\n\nJazmatazz: Oh? Nothing in a month for me. How did it go?\n\nMedMax: Just a first date. Kissed her at her front door, arranged a second date next weekend.\n\nJazmatazz played HO for 10 points. \n\nShe snagged a triple letter in what had turned into a cramped board made up of short words.\n\nMedMax: Hey! You don't even know her yet!\n\nJazmatazz: Just my best play. Someone in their late twenties who only gives a front porch smooch on the first date is more of a priss than a ho, anyway.\n\nMedMax played HORN for 14 points. He extended two tiles off her play to hit a double word score.\n\nJazmatazz played HORNY for 10 points.\n\nMax did a quick scan of the board. There wasn't much he could use. He had VITODTG and no great prospects, except hooking off the open H from HORNY. He scrambled his letters a few more times, and saw the play. \n\nMedMax played DITTO for 11 points.\n\nHe smiled, imagining Jaz laughing when she saw his DITTO connected to her HORNY.\n\nJazmatazz: LOL! I will be right over.\n\nHis smile died. He hated when she did this. She was fucking with him again, just like she did back in college. His best option was defusing it with humor. \n\nMedMax: Awesome! I will change into my pajamas. I will leave the door unlocked and be up in bed.\n\nJazmatazz: You have pajamas?\n\nMedMax: It sounded sexier than \"My Bulls t-shirt and boxers\".\n\nJazmatazz: No, those are pretty sexy. What kind of boxers?\n\nMedMax: Navy cotton.\n\nJazmatazz: Verrrry sexy.\n\nShe was taking this too far.\n\nMedMax: I have been celibate for two months. Don't fuck with me.\n\nJazmatazz: It's only been a month for me, and I am going crazy. How have you made it for two?\n\nMedMax: I have transcended the need for female companionship.\n\nJazmatazz: Ah, masturbation. Me too.\n\nMedMax: Which reminds me, it's time for bed.\n\nJazmatazz: Cockteasing bastard.\n\nMedMax: :P\n\nNovember\n\n\"I am just saying that Max could help his career by choosing a different speciality.\" Melanie's voice contained a timber of annoyance. She didn't like having a friend of Max's question her prerogatives.\n\nMax rubbed his temples. Melanie had voiced subtle suspicions about him having a best friend with breasts, and it had seemed a good idea to have them meet. Instead of defusing a conflict, however, he had detonated it.\n\nJaz displayed a girlish glower. \"You think he would help his career by choosing a speciality he doesn't enjoy? He loves pathology. He views himself as a medical detective. He is great at it, and he helps people.\"\n\n\"He could help people as a urologist too. They make a lot more.\"\n\n\"But he would be pissing and moaning about how much he hated his work.\" Jasmine gave a double eyebrow waggle to Max, who acknowledged the play on words with closed eyes and a shake of his head.\n\n\"Or Cardiology\", Melanie suggested.\n\nMax looked back at Jasmine, expecting \"his heart isn't in it,\" but she merely shook her own head and silently mouthed, \"too easy\".\n\nMelanie seemed to take Jasmine's silence as surrender. \"I see better things for him.\" She spoke with a this-conversation-is-done tone that Max already disliked after only a month of dating.\n\nJasmine either didn't recognize it or ignored it. \"Why the hell are you dating him if you want to change him so fundamentally?\"\n\nMelanie looked at Max, with an outraged look indicating she expected him to defend her. \n\nMax closed his eyes and rubbed his forehead again. A headache was definitely coming. \"Jasmine, please be civil.\"\n\nJasmine had a fire in her eye that told him this wouldn't end well. \"Max, dear, if I was being uncivil, I would say you can do so much better than this cosmetically challenged social climber.\"\n\nMelanie's outrage went nuclear, her voice rising to a shrill pitch as she checked her makeup in the bar mirror. \"Max! Are you going to let her talk to me like this?\"\n\nJasmine looked at him, expectantly. Max was silent, wishing it was yesterday.\n\nMelanie escalated. \"Max, let's go. I never want us to see her again.\" She stood to leave.\n\nMax rolled his eyes to the heavens. He was annoyed with Jasmine for picking this fight, but Melanie was showing a controlling side to her personality that he hadn't seen before. Had Jasmine spotted it so easily or had she brought it out? He didn't think it mattered.\n\nDamn it. He had just started having sex again after a three month drought. \n\n\"Melanie,\" he said, \"I am sorry our relationship didn't work out. I will walk you to your car.\"\n\nMelanie looked as if she had just eaten worms cooked in lemon juice. \"Don't bother,\" she spat. She left the bar, leaving anger and defeat in her wake.\n\nMax noted with relief that his headache was departing with her.\n\nJasmine's smile reached her ears, which Max took as a taunt. \n\n\"You didn't see her good side,\" he said. \"She was smart, pretty, well-read, and had a touch of class.\"\n\n\"You were settling.\"\n\nHer presumption galled him. \"Where the hell do you get off deciding whether someone is good enough for me? This may come as a shock to someone who can date the hottest guy in the room just by crooking her little finger, but I don't meet very many women who interest me, and damned few of them return the favor.\"\n\nJasmine boggled. \"Oh, bullshit.\"\n\n\"I am serious. I didn't date at all in high school and only a few times in college. I don't have enough luck with women to be throwing them away like that.\"\n\nJaz's eyes widened further. \"You really don't know, do you? You still think you're the person you were at eighteen \u2014 smart and cute, but sexually insecure and desperate because you weren't the captain of the football team? Is that why you keep dating these train wrecks?\"\n\n\"What?\"\n\nHer smiled turned beatific. \"Why do you think that clutch of Yentas at your hospital is trying to set you up with their single friends and relatives? Let me lay it out for you, sweetie. You're a successful doctor in his twenties, just finished with his residency and starting to make real money. You purchased a Prius because you prefer conscience to status but you could have afforded a Mercedes and you know it. You keep yourself in shape, but aren't narcissistic about it. You're six-two, and depending on your mood you sport either intense eyes, or a killer smile. Your last ex, Tasha, may have been just another psycho, but she dressed you well, and for the first time in your life you don't look like a relic from the grunge era who got lost at K-MART. You have this cool cowlicky hair that most women would love to run their hands through when they wake up next to you in the morning. And that's just the superficial stuff. You're also whip smart, witty, kind, and so loyal to your friends that you risk life and limb to save their stupid ass when they desperately call for help in the middle of the night, and then don't even hesitate about breaking up with a girlfriend when she tries to force you to choose her over the stupid friend. You're confident in every area of your life except when it comes to women, where for some inexplicable reason you passively wait for these leeches to find you.\"\n\nJasmine stood, and threw ten dollars on the table for her drinks. \"Max, honey, there isn't a woman in this bar who hasn't checked you out tonight, because you are the hottest guy in the room. It's time you fucking acted like it, and set your sights on a woman worthy of you. Take some fucking chances, Max.\" \n\nShe flashed a quick smile at him, turned, and walked out to her car, leaving Max alone and aghast. \n\nHis mouth still hadn't closed when his phone buzzed two minutes later. Jasmine hadn't made a move in their current game for several weeks, and had ignored his reminders, but she must have just typed in a word from the parking lot.\n\nJazmatazz has played BEZIQUES for 245 points.\n\nMax had to blink twice. It was the highest point play he had ever seen in a real game. He had left an open E on the bottom line of the board, and she had laid the Z and Q both on triple letters, nailed the triple word score, and had bingoed to boot, gaining thirty-five points by using all her letters. \n\nJasmine had been sitting on the word, he realized, waiting for the right moment to use it. The play was Jasmine's equivalent of an endzone dance.\n\nWhat the fuck was a bezique?\n\nDecember\n\nMedMax: Are you still planning to come over for bezique night? I have the deck ready, and a case of Goose Island chilling in the fridge.\n\nJazmatazz has played YA for 9 points.\n\nJanuary\n\nJazmatazz has played SOLO for 24 points.\n\nShe had played the word in parallel underneath her earlier play of ALAS, forming five words at once, but she had left him an open triple letter.\n\nMedMax: Speaking of SOLO, this has to be your longest sexual dry spell in living memory. What's up?\n\nMedMax has played SIRE for 12 points.\n\nJazmatazz: That night in September spooked me. Taking a break.\n\nMax caught himself smiling too broadly at that, and mentally kicked himself. He wasn't going to get sucked back into that trap again. \n\nJazmatazz has played DESIRE for 15 points.\n\nMax also knew he wasn't being a good friend, monopolizing her time like he had been doing these past months, when he really should be pushing her to go out and date again.\n\nMedMax: You can't let that spook you forever. You need to get back out there.\n\nMedMax has played DING for 13 points. \n\nHe hit another triple letter with his G. She was leaving them wide open.\n\nJazmatazz has played BIDING for 26 points. \n\nShe stretched his last play to hit the Double Word.\n\nThat was more like her.\n\nJazmatazz: Maybe. There is a guy I have been planning to seduce, but I am not sure he is interested in a relationship with me.\n\nProbably a colleague, Max thought. Hopefully he wasn't another asshole.\n\nMedMax: If he isn't interested in you, he is blind and stupid, or gay. \n\nJazmatazz: :) You have no idea how much I value your input on this, but it's kinda complicated.\n\nMedMax: You are a clever girl. You will figure it out. \n\nJazmatazz: You have convinced me.\n\nMedMax: Now, go forth and fuck, woman!\n\nJazmatazz: Yes, sir!\n\nFebruary\n\nJazmatazz: Did you get lucky at that convention in San Diego?\n\nJazmatazz has played HOPE for 15 points. \n\nMedMax: Almost. There was a hot blonde Ob/Gyn from Minneapolis. She was flirting with me, and I made plans to walk the Embarcadero with her to find some dinner. I watched her closer, and she was flirting with everyone, so I cancelled, sensing an emo drama queen craving attention.\n\nMedMax has played MET for 16 points.\n\nJazmatazz: You shouldn't date them seriously, but eager-to-please has its place. All the desperate women I know are claimed by their lovers to be hellcats in the sack when they can be talked off the ledge.\n\nMedMax: Not what I am looking for.\n\nJazmatazz: A hellcat?\n\nMedMax: Desperate. I could use a hellcat.\n\nJazmatazz has played SMILE for 9 points. \n\nMax frowned. That was a particularly weak play, and a waste of an S, which could have been hooked off four other words on the board to make two words at once. He had been kicking her ass lately. She was definitely off her game. He would have thought she was commenting on their in-game dialogue, but he hadn't said anything really funny.\n\nMedMax: How about you? Did the seduction of that guy at work pan out?\n\nJazmatazz: Not a guy from work, and no, I am still working my way around the complications. It might take awhile, but I think he is worth it.\n\nMust be someone from the community theater where she volunteered. That was good. Most of them weren't assholes. Max suppressed another tinge of jealousy. The feeling was common lately when he thought of her with someone else. This happened whenever he spent a lot of time with her \u2014 his old college feelings would resurface, and he would have to control them again. Fortunately, he had much practice.\n\nMedMax: Then it looks like both of us will be single on Valentine's Day.\n\nJazmatazz: Not celebrating Valentine's Day this year. Celebrating Anti-Valentine's Day instead.\n\nThat made him laugh. He punched her number.\n\n\"OK, I will bite. What the hell is Anti-Valentine's Day?\"\n\n\"It's a subculture holiday for people who are feeling unromantic on Valentine's Day, either out of nonconformist pride or sullen bitterness. The way I celebrate it, you get together with someone you aren't dating, and do un-romantic stuff, like paint the kitchen, go out and eat fast food, and then come home and watch a depressing European art film where an alienated couple destroys each other's chances at happiness. Or an art house thriller. I haven't decided yet.\"\n\n\"That sounds wonderfully unromantic. Who's your anti-date?\" Max asked, knowing the answer, and already looking forward to it.\n\n\"Well, I was hoping you would be, unless you have other plans.\"\n\n\"I would be honored to not be your date on Valentine's Day.\"\n\n\"I can always count on you.\"\n\nValentine's Day\n\n\"These are the stencils I want used with red paint. These are for yellow. I marked up the walls indicating where I want them. I will touch them up with accent colors tomorrow.\" Jasmine had cut the stencils herself - an assortment of easily recognizable culinary images. \n\nMax paged through them, making note: chili pepper, cherry, ice cream cone, banana, lemon, tomato, and strawberry. He had expected to be handed a roller brush and a tray of beige paint, but he really should have known better \u2014 Jasmine would never go through the work it took to paint a kitchen herself if she weren't expressing herself in some way. \"I haven't painted anything like this since elementary school,\" he said. \"Mrs. Weinbaum looked at my painting of my pet hamster Elmo, and had me hauled in front of the principal because she thought I had painted a picture of dog shit.\"\n\n\"That's why I gave you stencils.\"\n",
        "\"You talked to Mrs. Weinbaum?\"\n\nShe gave a half laugh. \"I knew you were allergic to studio arts.\"\n\n\"What about brushwork? The complex interplay of light, texture, and pigment? The wry postmodern commentary on the obsolescence of artistic form in an uncaring world?\"\n\nJasmine's smile was sly and appraising, unsure if she was being mocked. \"Wing it. If you mess up too bad, I will repaint it. Or maybe just leave it. Mistakes are where a lot of stories come from. Years from now, people will come into the room, and they will ask, 'why is there a well-endowed purple elephant on the wall of your kitchen?' and I will say 'Max tried to paint a picture of an eggplant, and his stencil kept slipping.' Your artistic ineptitude may entertain my dinner guests for years.\"\n\nThat's what he was afraid of. Max selected the chili pepper and the red paint for his first attempt. As he began to work, he stole a look at Jasmine. She had climbed on a step ladder, and was painting an intricate grapevine pattern above the cupboards. She had found a way to look beautiful even wearing painting clothes. She had her auburn locks restrained in a ponytail, which was threaded through the back of a White Sox cap. (He had expressed dismay at her choice of a Sox cap. Her defense was that she only used it for painting, as she didn't want to splatter the Cubs cap he had bought her this summer.) With Jasmine's angular face, large eyes, and high cheekbones, whenever she wore a baseball cap, he had to suppress the urge to daub the tip of her nose with an ice cream cone and go twirling through a park somewhere.\n\nMax screwed his face up in a frown and finished painting his chili pepper, switching to a tomato. \n\nHe hated it when his old college emotions would rear up. He had realized years ago that they would be much better as friends than lovers, and even though Jasmine's romantic indifference had made the decision for him, time had proven their judgments were correct. It was a good thing they weren't dating.\n\n(Max watched her paint the grapes, thinking the color she chose somehow made them look sour.)\n\nJasmine had become his best friend \u2014 even more so the last few months. He had given up on Melanie so easily because he had been suspecting what Jasmine had voiced about her, and he enjoyed his game nights and conversations with Jasmine more than he had enjoyed dinner and trips to the symphony with Melanie. \n\nExcept the sex \u2014 all the online Scrabble knock-offs and pinochle-variants in the world didn't make up for the lack of that. He was getting horny enough that wet donuts were looking good, and now he was spending the evening working next to Jasmine, watching her shirt ride up as she reached over her head, exposing a flat, beckoning expanse of satin skin that made him want to pin her wrists in that position while his mouth explored every soft curve of her body.\n\nDamn it! \n\nMaybe he should rethink his don't-screw-the-crew policy and ask out that X-Ray technician who kept smiling at him. He had talked to her once, and her words were all banalities about what happened on The Bachelor. She had seemed vapid, but maybe it was an off day. She was very pretty, and she always wore tight skirts or pants that made her ass look almost as good as \u2014\n\n\"Are you looking at my butt?\" Jasmine interrupted the pogo-sticking of his thoughts. \n\nShe had busted him. Think fast. \"Well, I was painting this tomato, and I needed to look at something round and curvy to get the shading right.\"\n\n\"Shading? You are painting six inches outside the stencil. The tomato looks like someone threw it against the wall and made it go splat.\"\n\nFuck. \"Don't you know it's rude to bust a guy for checking you out when he doesn't think you are looking? I am disappointed at your invasion of my privacy.\"\n\nThat provoked a laugh, and she resumed painting her grape vine pattern in soft, delicate brushstrokes. \"Just messing with you. It's okay. It's flattering when you look at me.\"\n\nThat was too damned close to patronization. Max went on the attack. \"Like you don't check me out every time you follow me up a flight of stairs.\" When she denied it, he would insist he didn't believe her.\n\nShe glanced at him, and he saw a hint of a smile as she pulled out her phone and started typing. When finished, she put her phone back in her pocket and went back to paint another grapevine.\n\nHis own phone buzzed a minute later. \n\nJazmatazz has played TOUCHE for 8 points. \n\nShe had burned a blank tile to make the C.\n\n---\n\nMax argued that the least romantic place in the northern Chicago suburbs was the McDonald's Playland, as nothing quelled romance like the reminder of the children it sometimes begat. Jasmine had insisted it was the Five Guys in Evanston, for aesthetic reasons involving the bags of potatoes that the restaurant used as decor. He let her win the argument as the Five Guys burgers were much better.\n\nAfter they had finished painting, she had released her hair from its ponytail, creating an auburn cascade across her upper back. She now wore a tight red t-shirt, black jeans, an oriental-patterned silk scarf, and boots. She looked far better that he expected for an Anti-Valentine's Day, and had this been a real date, he would have delighted to claim the woman on his arm as his own.\n\nWaiting in line for their food, Max had more than enough time to notice everything about her \u2014 a shade of lipstick somewhere between a red rose and a ruby, her yin/yang earring studs, and the way a stray hair kept falling across her face. He had never stared at a woman so openly before in public, much less without her getting uncomfortable. \n\nJasmine sat at their table, shelling peanuts and popping them in her mouth, while looking at him with mock menace. She had a fistful of peanut detritus in her right hand, and he knew she wasn't afraid to use it. \n\nHe couldn't look away \u2014 she wouldn't let him \u2014 every time he turned his back, she threw a peanut shell at him. It was as if the salt in the peanuts were making her thirsty, and the only thing she could drink was his attention.\n\n\"Thanks for taking me out,\" she said when he brought their food.\n\n\"Well, there is no one I would rather spend Anti-Valentine's Day with than you.\"\n\nJasmine didn't touch her food, and instead placed her hands under the table and bowed her head as if to pray. \n\nMax watched her, puzzled. Jasmine's Dad was Jewish and her Mom was Methodist, but he had never seen her go to either church or temple, and he didn't think she was particularly observant of either faith. He was certain he had never seen her pray before. Suddenly, she lifted her head and brought her right hand up, holding a handful of peanut shells in an open palm.\n\nHis phone buzzed, and he watched her slowly smile.\n\nJazmatazz has played SHUCKS for 14 points. \n\nMax groaned. \"You threw peanut shucks at me for five minutes and fished for a compliment just so you could play that word?\"\n\nJasmine shrugged, holding her eyes wide open and baring her teeth in an embarrassed smile.\n\n\u2014-\n\nJazmatazz has played WOO for 6 points.\n\nMax made his own play and put his phone away. She was standing in front of him, with three DVDs held out in a fan. \"You choose. I decided I was more in the mood for a thriller.\"\n\nMax took them, and glanced at the covers. Mulholland Drive, Bound, and Swimming Pool. Jaz had good taste in films and knew what he liked, so the odds were that all would be good, but he hadn't seen any of them. The Bound DVD cover advertised it was by the same guys who made The Matrix, which indicated promise. He handed it over to her. \"This one.\"\n\nJasmine started the movie, kicked off her boots, and sat next to him on the couch. \n\nShe did indeed know what he liked. It was a well-written thriller about a mafia girlfriend and an apartment handyman who decide to steal money from the mob, with the twist that the two were lesbians. The camerawork and dialogue were both top notch, and the characterizations were so well-drawn he found himself engrossed. \n\nDuring a scene when Gina Gershon was called by Jennifer Tilly to fix the plumbing in her apartment, Jasmine switched positions, lying down on the couch and stretching her legs across his lap.\n\n\"You don't mind do you?\" she asked.\n\nMax conceded that he did not.\n\nThe only problem was that the scene developed into an extremely erotic lesbian sex scene, which was both wonderful and awkward at the same time.\n\nMax knew how to watch a hot sex scene with a girlfriend \u2014 you curled up a little closer, and half the time you took an hour long break to have sex before finishing the movie. \n\nMax also knew how to watch such a scene with a group of guys, where you made appreciative catcalls at the screen and assiduously avoided eye contact with each other, to prevent the unspeakable horror of looking another man in the eyes when each knew the other had an erection.\n\nBut he had no idea how to watch such a scene with a female friend.\n\nJasmine often invited him over for a movie night as part of her desire to make him share her love of films. She chose screwball comedies from the 30s, musicals from the 50s, gritty 70s urban thrillers, 80s comedies, and the occasional Kung Fu movie from China, but they had never watched a movie like this together before, and he wasn't sure how to act. \n\nThe major complication was the inevitable tenting in his khakis. He needed to adjust himself for comfort, but Jasmine's legs were stretched out on his lap, only inches from his awkwardly positioned organ. It didn't help matters that she evidently had restless leg syndrome, resulting in occasional flutter kicks.\n\n\"God, that's hot. Don't you think that's hot?\" Jasmine was apparently unwilling to let the uncomfortable scene pass without comment.\n\n\"Yeah, kind of.\"\n\n\"What do you mean, 'kind of'?\" She paused the film, leaving a frozen image of Jennifer Tilly and Gina Gershon folded into a sapphic embrace. \"We have discussed your sex fantasies before, and you said this was one of your favorites.\"\n\n\"Alright, it is hot.\"\n\n\"Why are you acting so coy about what turns...\" She stopped speaking and noticed the way he seemed to be trying to pull his hips into the sofa. \"Oh! I am sorry. You have a hard-on.\" \n\nMax said nothing.\n\nShe didn't move her legs. \"Don't worry about it. You don't think I am turned on too? It's times like this I miss having a boyfriend.\"\n\nThis was safe ground. They had this conversation at least once a week, although never before with her calves so dangerously close to his erection. \"I know what you mean,\" he said.\n\n\"I miss it, you know? It's been five months. How long has it been for you again?\"\n\n\"Three. Melanie.\"\n\n\"Wait til you get to five.\" She stretched her legs, but when she settled them back down they were even closer to his crotch. \n\n\"Jaz, you aren't helping.\" The discomfort was increasing. \n\nShe just smiled at him and still didn't move her legs. \"You want me to help you?\"\n\nOh God. \"Um, yeah?\"\n\n\"By moving my legs away? Are you sure that is how you want me to help you?\"\n\n\"What do you mean?\" This wasn't a realm where ambiguity was good.\n\nHer smile broadened and she bounced her legs on his lap again. \"I think you know what I mean.\"\n\nMax's brain enlisted his circulatory system in an emergency chemical redeployment, and his head swirled in vertigo while the discomfort in his groin turned painful. \n\nStay grounded. This is your best friend. It won't end well. His eyes had other opinions, and they watched as Jasmine used a strand of her own hair to draw auburn circles on an exquisite cheekbone.\n\nJasmine's eyes, wide open with pupils dilated from the dark, observed the play of emotions on his face. \"I know you think we would suck in a relationship, so that isn't what I am suggesting, but we are both single and suffering from celibacy.\"\n\nMax needed to remove any ambiguity. \"You are talking about becoming 'friends with benefits'?\" he asked.\n\n\"I find that a crass way of phrasing it. I prefer the term, 'fuckbuddy'.\"\n\nThat made him laugh. She joined him, releasing some of the tension, but her eyes never left his. She was waiting for him to decide, and her patient smile told him he had some time.\n\nConventional wisdom said this was a bad idea. He did know people who had tried this and failed, but they hadn't necessarily regretted the outcome, and none of those relationships had been anything like theirs. None of the women were anything like Jasmine. It might work.\n\nSo why was he hesitating? Why was disappointment mingling with anticipatory arousal?\n\nJasmine was impulsively destructive. He had thought she was making better choices since her mishap in September, but now here she was haphazardly offering herself to her best friend, dismissing any impact on their friendship. Last week she had been planning a seduction of some guy from work or the theater, and now the nameless colleague was forgotten. This flighty recklessness was just so... so... Jasmine. It was exactly why he had decided a romantic relationship with her would be a disaster, despite the depth of his a decade-long physical and emotional attraction to her.\n\nBut he was attracted to her. He had been convinced he was in love with her ten years ago. He had recovered, but she still starred in his fantasies, even though she was now his best friend. Whenever she described her sexual exploits, he couldn't help but imagine them, with himself as her lover. He wanted her. He knew that. He had always wanted her, even if he was strong enough to control it. \n\nBut did he want to control it any more if she was offering an alternative? Even if it risked everything they had?\n\nMax expressed his concerns as delicately as he could. \"It could wreck our friendship if things go sour.\"\n\n\"I think our friendship is pretty strong. Of course, if you just don't find me sexy...\" Jasmine played the coquette and batted her eyelashes.\n\n\"You already know better than that.\"\n\n\"Yes, I think I do.\" Her legs wriggled on top of his crotch.\n\n\"Sex would turn tonight into something awfully like a date, violating the sacred traditions of Anti-Valentine's Day.\"\n\nThat brought on another smile. \"Valentine's Day is focused around romance, and I know you don't have that in mind, as you think we would make a horrible couple, like you said in the car back in September. So you can think of this as sex without romance, which would be the apotheosis of Anti-Valentine's Day.\"\n\n\"You wonder why I find you sexy \u2014 you use words like 'apotheosis' in casual conversation.\"\n\nJasmine grinned and waggled her eyebrows at him. \"Apotheosis. Epitome. Quintessence.\" She pronounced each word as if it were an obscenity whispered from the depths of lust, allowing him to see her tongue on every sibilant.\n\n\"Stop, you are getting me all hot.\"\n\n\"You won't do anything about it. You are too afraid. Daunted. Timorous.\" She was now flagrantly rubbing her legs against him.\n\nMax recognized that she was trying to provoke him into making a move, but that was part of the charm. \n\nHe would regret this, he knew, no matter what he chose. If he denied her offer, it would never be made again, and he would forever berate himself for turning down the most desirable woman he had ever known. Acceptance, however, would be a surrender to Jasmine's native recklessness. He would be caught up in her sexual tumult, and would almost certainly damage their relationship once one of them wanted a normal dating partner. \n\nMax knew that if he kept thinking, he would talk himself out of it, and he decided he didn't want that. The mischief in Jasmine's smile and the searing heat in her eyes both promised that the rapture would be worth any ruin. \n\n\"Are you going to kiss me, Max, or just think about it for the rest of your life?\" It was as if she could read his mind.\n\nTake some fucking chances, Max, she had said.\n\nMax lifted Jasmine's legs off his lap, and slid between them to loom over her prone position on the couch, suspending his torso and hips just inches from hers. \n\nShe moistened her parted lips, tilting her chin in anticipation. \"Oh my...\" she said.\n\nMax lowered his face to hers, and she closed her eyes just before their lips touched. He closed his own and felt the warmth of her mouth against his, tasting him. There was a slight quiver to her lips, which may have mirrored his own apprehension, or may have been his imagination.\n\nHe felt the softness of her tongue probe for his and was struck by a frisson of unreality. This was not Tasha, or Melanie, or Debbie, or that Australian intern in the supply closet at Cook County Hospital. This was Jasmine.\n\nJasmine had gone out to get drunk with him in college when Debbie had dumped him, and held his head the next morning as he emptied his regrets into a garbage can. He recalled the squeal of joy she had released over the phone when he told her he was doing his residency in Chicago, where she had just taken a job herself. Jasmine had been the only one in town he knew well enough to help him move, and they ate pizza and watched the sun set over the city from his new balcony. She had dragged him to a Guillermo Del Toro film retrospective, and had smiled as she watched his amazement at the images on the screen. \n\nShe was his best friend, and kissing her felt alien and familiar at the same time. \n\nMax opened his eyes to look at her, and saw her eyelids flutter as if in REM sleep. Her face was more familiar to him than anyone outside his own family, yet he had never seen it this close, much less with such a naked expression of joy and lust. He closed his eyes again and lost himself \u2014 in the feel of her lips and mouth \u2014 her distinct scent of citrus and rosewater \u2014 the ripe yielding of her body as he pressed against her \u2014 the faint sigh emanating from the depths of her throat \u2014 the warmth of her limbs entwined around his hips, pulling him tight against her.\n\nHe remembered Jasmine describing the perfect first kiss to him \u2014 gentle yet passionate, full of a desire and heat that matched her own emotions. She had complained of boys (they were always boys when she described them thus) who tried to gag her with their tongue, or felt like they were trying to eat her lips. They had no sense of a kiss as an introduction rather than a consummation, she had said. He tried to emulate her idea of the perfect first kiss, and realized he was already there.\n\nJasmine's mouth opened wide, her tongue yielding further before him. She collapsed the remaining rigidity of her lips \u2014 beckoning him forward, to taste and experience her more fully, to explore parts of her he had only imagined. \n\nMax gave her what she wanted, savoring the taste of her on his palate, just holding back enough to make her demand more, to provoke Jasmine into wanting to draw him inside her more fully. Her hips began to orbit, as she pressed herself against him, surrendering to the provocations of his body.\n\nHis hesitancy, his sense of unreality, his trepidation \u2014 all fell into nothingness. \n\n\"If you love like you kiss,\" Jasmine murmured into his mouth, \"this is going to be... interesting.\" She tugged at his shirt, desiring its absence.\n\nMax shifted to an upright position, noting the bemusement in her expression as she watched him take off his shirt. Did he see a glint of hunger as well, or was that a trick of the light?\n\nJaz twirled her fingers through his chest hair and ran her nails across his pecs. \"I remember going swimming with you in college. You were kinda scrawny.\"\n\n\"Thanks for reminding me.\"\n\n\"I was trying to compliment you. You aren't scrawny any more. Whatever you're doing for exercise should be prescribed to all your patients.\" Her fingers traced the grid of his abdomen. \n\n\"Is that how it is with you? A platonic friend works out and you can't help wanting to rip his clothes off?\"",
        "Jasmine's smile was wider than his teasing warranted. \"A girl likes what a girl likes.\"\n\n\"Take off your shirt.\"\n\n\"Do it for me.\" Her eyes had a challenging expression.\n\n\"No. I want to watch you take it off.\"\n\nHer legs tightened around his waist as she pulled herself up to straddle his hips, bringing her face inches from his. \n\nMax kept his eyes locked on hers as she unbuttoned her blouse. He remembered falling in love with those eyes across a petri dish in college Biology. He had wanted to dive into those blue pools of exuberance and wit. \n\nEven now, having long recovered from the puppy love he felt in college, her eyes still fascinated him. He would count the gold and black flecks, and try to determine whether it was her clothes or her mood that made her eyes radiate with mischief and joy. Her eyes still shone with those twin lights, but there was something he hadn't seen before \u2014 a yearning ache \u2014 something he had once longed to see.\n\nOr was he just imagining it, like he had so often hallucinated her interest in him back in college?\n\nJasmine halted her hands at the midpoint of her blouse. \"You aren't watching.\"\n\nMax kept his eyes on hers, and let a smile appear on his face. \"I beg to differ.\"\n\nJasmine blinked and she glanced down at her shirt. She tried to undo another button, but her hands trembled with the same fluster he had seen on her face just before she looked away. \n\nHe had rattled her.\n\nWhat had he done? Had she revealed something she didn't want him to see? He had been looking into her eyes rather than at her chest, focusing on the emotional intimacy of their contact over the physical. Why would that bother her unless...? \n\nHe recalled his sense of earlier disappointment at Jasmine's impulsivity, but what if he had been wrong, and this wasn't a whim, but a plan? \n\nMax knew he might be suffering a relapse of his college-era projections of his own feelings onto Jasmine, but he wasn't imagining the warmth of her skin inches from his flesh, or the earlier taste of her kiss. What if their positions had reversed, and it was now Jasmine craving the emotional connection, fearful that he would deny her? \n\nNo, that way madness lies.\n\nMax touched Jasmine's neck, stroking her skin while parting the fabric of her blouse. \n\nJasmine seemed to draw strength from the power in his hands, leaning into his caresses while her fingers undid the last buttons. She shrugged off the blouse. \n\nMax drifted his hands down to touch the black satin which still imprisoned the soft white flesh of her breasts. \n\nJasmine sighed at the intimate touch, parting her legs to press her hips down further against the steel she could feel between his legs. She returned her gaze to his once more. \"I like your hands,\" she said.\n\n\"I like where I am placing them. Did you wear this bra special for tonight?\" Did you plan this?\n\n\"If I ever dig into my sexy stuff, you will know.\" The hesitation was back in her eyes. Max had caught enough glimpses of her undergarments over the years to know this wasn't the type of thing she wore casually. She was lying.\n\nHe pushed the straps off her shoulders and kissed the soft ivory flesh. \n\nJasmine swanned her neck and emitted a moan as her hips shifted against his.\n\nMax undid her bra. He knew from her stories that Jasmine's breasts were the gateway to her libido, but that she was very particular about what she liked. She complained that most men screwed it up, and that she would just push their hands or mouth away and do the work herself with her own fingers. He remembered she liked it soft during foreplay, with more vigor as she approached climax. \n\nHe held her breasts gently in his his fingers, and gave her nipples the slow tongue baths he knew she loved. Jasmine responded by cupping her own breast upward into his searching mouth and sliding her other hand down to free him from his khakis.\n\nJasmine's voice was a sigh. \"You know how to use your mouth for more than just talking.\"\n\nMax acknowledged the compliment by swirling a nipple with his tongue, savoring the firm texture and restraining the urge to bite harder than he knew she presently wanted.\n\nJasmine nibbled his neck and whispered, \"I am taking your pants off, then I would like to use my mouth on you.\"\n\nMax felt his pants sliding down his legs, and the delicate touch of Jasmine's fingers began stroking him through the cotton of his boxers. \n\n\"Would you like that?\" she asked. \"Would you like me to take you in my mouth?\"\n\nMax spoke between nuzzles. \"You are too smart to ask foolish questions.\"\n\n\"Ah, I thought you might be up for that. You have been hard for me tonight, haven't you? I could feel it under my legs during the movie. Would you think less of me if I confess I imagined what you would taste like in my mouth?\"\n\nMax indicated he would not think less of her at all. He glimpsed a sly smile as her face slid past his. \n\nJaz efficiently removed his boxers and knelt between his legs, her hands stroking his thighs and their juncture. She seemed to be assessing him. With a crooked smile and a glint in her eyes, her lips wrapped around him. \n\nMax released a gasp of pleasure at the wet warmth of her glossal caresses. He recalled that Jaz had once voiced doubt in her own abilities as a fellatrix. Hadn't she been prompting him for tips? He remembered questioning whether she could stop talking long enough to perform the act, and inwardly laughed at the memory.\n\n\"God, you are so hard,\" she said, taking him out of her mouth, and speaking between kisses. \"I just want to kiss and lick every inch.\"\n\nMax grunted his permission.\n\n\"I love that my hands and mouth can do this to you \u2014 that I can get you so hard.\" She continued to taste him between words.\n\nShe really was going to talk the entire way through. Max tried to suppress the chuckle, but couldn't.\n\n\"Let me guess,\" she said, \"you are remembering telling me that I wouldn't be able to shut up during oral?\"\n\n\"Yeah, but now I know I like it.\"\n\nJasmine looked up at him, and saw the truth of his words. Max had once confessed his love of sex talk to her, and she displayed a smug grin of vindication. \"Oh? You like it when a talkative woman goes down on you, and can't stop telling you how much she wants your cock? That when she tastes you in her mouth she can't help thinking that if you feel half as good inside her, that it will be the fuck of a lifetime?\"\n\nThe hunger in her eyes was turning ravenous, and her mouth resumed its artistry. \"Do it, Max. Come in my mouth. We will still have sex later.\"\n\nMax had been holding back, and now surrendered himself. He let her words and mouth wash over him.\n\n\"That's it. I can feel you pulsing underneath my tongue. I want to taste you.\"\n\nHe uttered a warning and her lips wrapped tight around him. Max heard and felt Jaz's own moans reverberating from her throat as the world turned incandescent. \n\nJasmine smiled as she released him. \n\n\"Jaz, you can talk all you want during oral sex, and I will never mock you for it again.\"\n\n\"You know just what a girl wants to hear.\"\n\n\"Your turn.\"\n\nHer smile broadened. \"You really know just what a girl wants to hear. Bedroom then. I don't think you will be as careful as I was in not sliming my sofa, and I don't want you to try.\"\n\nHe grabbed his pants, and she took him by the hand and led him to her bedroom. A few selections from Matisse's Jazz hung over the bed: Icarus, Clown, and a print Max didn't recognize that seemed to show a blue human torso.\n\nHer dresser had a dozen photographs, half of which included him. There was a photo she had taken of the day she had helped him move into their apartment. Another two from college, and more recent ones from some of their gaming nights and pub crawls.\n\nWhen he turned back toward Jasmine, her pants were off, and she was lying on her back on top of her white comforter, watching him with a smile. \"You've never been in here, have you?\"\n\n\"No.\" Max had only glimpsed it before. \"This will be my first time in either of your inner sanctums\". He sat down next to her on the bed, and placed a hand on her thigh, which rose toward his touch. She was wearing black satin bikini panties, matching the bra that had been discarded in the living room. \n\n\"So you just naturally dress this sexy?\" Max asked. He ran his fingers along the waistband of her panties, trying to decide whether he would be able to sense the tactile difference between the satin fabric and her skin if not for the heat coming off her flesh.\n\n\"Yes, I already told you.\" She had that nervous look in her eyes again, indicating a lie. \n\nWhat did it mean? Had she planned this entire evening as an unconventional seduction, including a movie that she knew would get him aroused? But hadn't he chosen the movie? \n\nNo, he realized. He had picked one of three that she had suggested. Had they all had a similarly erotic scene?\n\nThis wasn't like Jaz. She was spontaneous, as prone to improvisation as her name would indicate. So what did it mean if she had planned a night like this? If she wanted to sleep with him, why didn't she just say so? Had she been as concerned about the impact on their friendship as he was?\n\nJasmine laughed nervously, disconcerted by his hesitation. \"What are you thinking?\"\n\n\"I have imagined you naked for almost ten years, and you exceed expectations.\" It wasn't the answer to her question, but it was true nonetheless \u2014 creamy skin over toned sinews, long legs, a narrow waist, and full breasts that his mouth longed to savor again. His imaginings hadn't done her justice.\n\n\"I am not naked, you goof.\" She wriggled her hips as a reminder of the unwelcome presence of her panties. \n\n\"That's right. I had said I was going to return the favor. I had forgotten.\"\n\n\"I hadn't!\" Jaz arched her hips as Max removed her panties. He began his kisses at her navel, and he felt her hands lightly grip his hair as he travelled south. \n\nJasmine emitted a stuttered squeak that deepened into a low growl of pleasure as Max tasted her. She raked her fingers through his hair, and Max could feel her toes slowly curve upward against the skin of his hips.\n\n\"Woof,\" she woofed. \"You were listening during all my... post-mortems about... (oh fuck)... oral, weren't you?\"\n\nMax allowed his mouth to speak for him \u2014 nonverbally. He remembered her describing how her wetness and hip movements indicated where and how she desired to be touched. It helped that she was so ready and open for him, rendering it unnecessary to time the transition from slow to fast. The squirms of her body and the squeals of her throat told him it was time to use his hands. One set of fingers slipped inside her, and the other reached across the flat, sweat-sheened expanse of her stomach to pinch a nipple with the ferocity that he knew she wanted.\n\nJasmine was already perched on the cusp of climax as Max pushed her most precious and sensitive buttons. She swore again, and bit down on the flesh of her own palm, trying simultaneously and paradoxically to forestall and prolong the inevitable climactic cry. \n\nHer failure was glorious.\n\nMax intensified the staccato rhythms of his manipulations, inducing a second wave of rapture, then eased off as Jasmine physically withdrew into a euphoric, quivering puddle.\n\nShe muttered something as Max laid down beside her.\n\n\"You are mumbling,\" he said.\n\nJasmine threw a leg across him, and rested her head on his shoulder while she twirled spirals into his chest hair. \"I said that was nice.\" \n\nNo, she had said something like \"passed\", but he didn't argue the point, preferring to inhale the scent of her auburn mane. \"I have heard you talk about how you throw yourself into sex, but I never hoped to see it.\" He had loved the way her body had responded to his touch, her own ecstasy enhancing his own.\n\nHer fingers traced a line down between his legs, exploring and testing. He felt her smile broaden against his chest. \"Feels like you are ready to see it again,\" she said, climbing on top of him.\n\nMax's eyes rolled back in his head as he felt the hot, slick contact between them. Jasmine's hips moved against him with a rhythm and force of wanton demand. \n\nHer lips nuzzled his neck as she spoke. \"This isn't too weird for you?\"\n\n\"That isn't the word I would choose.\" His hands explored her body, committing each svelte curve to memory for eternal recall. \n\n\"What word would you choose?\" Her voice was a tropical wind in his ear.\n\n\"There isn't a word for something that is familiar and exotic at the same time.\"\n\nHe heard light laughter between her kisses. \"Yeah, I know.\" her hips had brought him to the position and angle she wanted, and with one transcendent glide, he was inside her. \n\nJasmine sighed as her teeth scraped against his collarbone. \"God, to think I was worried...\"\n\n\"Worried about what?\"\n\nShe shook her head. \"Not now.\"\n\nHe thought he knew, and it all made sense in a flash. \"I know what you are up to.\"\n\nJasmine's hips briefly hesitated, before continuing their divine rhythms. \"I am fucking you, that is what I am up to.\"\n\nShe was using obscenity to distract him. Should he let her? If he was wrong... \n\nBut what if I am right? he thought. \n\n\"The guy you wanted to seduce, but were afraid of complications \u2014 it's me. You have been planning this for months,\" he said, going for broke.\n\nShe sat up, straddling him. With her hair an unkempt, half-closed auburn curtain over her face, he could only see part of what seemed to be a wary expression. \"You have quite the ego,\" she said.\n\n\"Which you like.\" He repositioned her leg, then unleashed his muscles to roll on top of her, pinning her against her bed with a thrust of his hips. \n\nShe had looked as if she were about to speak, but suddenly had no words. The brief widening of her eyes and a tightening inside her loins spoke for her.\n\n\"This isn't about sleeping with me,\" Max said.\n\n\"I beg to differ,\" she managed to stutter.\n\n\"This isn't just about sleeping with me.\" \n\n\"Oh?\" she asked, her body opening to draw him deeper inside her.\n\n\"Sex is so important to you that you didn't want to risk our friendship by telling me the truth until you knew whether the sex would be good.\"\n\nMax watched perspiration bead on Jasmine's upper lip, as her hips arched in a rhythmic match to his. \"I wouldn't tell you what truth?\"\n\nHe ignored her question. \"And you wanted to see if I would take a chance, so you planned this whole night as a test drive, concocting an excuse about wanting a fuckbuddy. You don't want to tell me the truth until you are sure this is what you want. And now you know it is.\"\n\n\"Tell you what truth?\" she repeated, her breath catching in anticipation. \n\n\"That you have fallen in love with me.\"\n\nJasmine's eyes widened as Max's words struck true. Her fingers clambered for purchase on his back, and her legs pulled him close.\n\n\"And now,\" Max said, \"you are trying to guess what I am going to do about it.\"\n\nHer eyes bored into his, seeking the answer to that very question.\n\nMax was heady with triumph. He was right. The trembling of her body, the increased tempo of her hips, and the torrid look in her eyes all screamed the truth. \n\nHow must she be feeling now \u2014 poised on the precipice between friendship and love \u2014 forced to choose \u2014 knowing he was forced to choose as well? Was she vulnerable? scared?\n\nVulnerable, maybe, but not scared. This was Jasmine. She feared nothing but global warming and spiders. The expression in her face was not fear, but hope.\n\nMax's suspicions of her plans had grown as the evening had progressed. He had thought through his response as each touch of her flesh weakened the walls of rationalization he had built to withstand the force of ten years worth of suppressed emotion. Jasmine's \"recklessness\" was now revealed as a patient refocusing of her attention upon Max himself. They wouldn't be right for each other? That may have once been true, when he was an insecure geek and she an intellectual party girl, but it wasn't true today. That wasn't who they were any more, and that evolution had been driven by their friendship. \n\nEach made the other better, and if that wasn't right, then nothing was. \n\nHe held her face in his hands, sure of his own choice. He had planned to tease her, but faced with the childlike vulnerability in her face, he spoke. \"I have loved you since the first day in biology lab, when you made a heated crucible explode by dunking it in ice water. I just suppressed it by convincing myself it wouldn't ever happen.\n\n\"I was a fool ten years ago to think I had a chance at you. I was a fool one year ago to think I didn't. And I would be a fool now to take the most beautiful, amazing, and inspiring woman I have ever known \u2014 to take my best friend in the world \u2014 and relegate her to the mere status of a 'friend with benefits'. I am done being a fool. I won't settle for that. It's beneath what we mean to each other. If I am going to have you \u2014 and I will have you \u2014 it will be the whole Jasmine. I want your body, heart, and soul.\" His body moved in a crescendo that paced his emotions.\n\nThe strength of Jasmine's smile was a caress against his hands as he held her face. Her eyes were blue sunlight.\n\nJasmine's fingers twined through his hair, and she pulled him down to speak in his ear, her voice a sigh. \n\n\"You are right. I did plan this, because I had to know how we would be together, and now that I have had you I don't want anyone else to touch me ever again.\" Jasmine's legs were a vice, pulling him into the depths of her body. \"I do love you, and have been working for months to make you mine. But this has been my longest sexual drought since I was sixteen.\" He could hear laughter in her words as they turned insistent. \"Make me come or I am kicking you out on the street.\" \n\nMax increased the urgency of his thrusts, rising to the challenge. His hand slid down to find the magic between her legs, and his other hand seized her breast with the rough strength he knew she craved right now. He gazed deep into the eyes of his best friend and lover as she experienced an apotheosis of love, friendship, and lust \u2014 knowing she was watching the same detonation of pleasure mirrored in his own eyes. \n\n---\n\nJasmine lay facedown on top of him, head on his chest, her broad smile showing white teeth. \n\nMax traced a finger up the length of her spine, exulting in the reality of having her in his arms. \"Sorry to wreck your anti-Valentine's day with a burst of romance.\"\n\nJasmine raised her head, and he saw mischief in her eyes again. \"Well, Anti-Valentine's Day started out as a great idea, but then it got all commercialized, you know?\"\n\nMax smiled. \"Yeah, it's like there is all this pressure to conform to society's expectations of what an unromantic evening is supposed to be like. If I want to have a romantic evening, I will have one on my terms, and Hallmark can take all of it's Anti-Valentine's Day cards and go fuck itself.\"\n\nShe nodded. \"Agreed. It's time we created Anti-Anti-Valentine's Day, to reclaim it for the romantics.\"\n\nMax ran his fingers through her hair as she sat up. \"I need to use the bathroom before round three,\" she said.\n\nHe watched the sway of her hips as she walked down the hall.\n\nTwo minutes later, he heard his phone buzz from the pocket of his pants. \n\nShe had made a move from the bathroom, using a blank tile and an earlier three-letter play to make her word, which also formed the word OX by snuggling up against an open X on the left hand side of the board.\n\nJazmatazz has played WOOHOO for 19 points. \n\nDespite her earlier haphazard play that Max now saw as a string of hints as to her intentions today, Jasmine was now beating him by fifty-three points, and she had just drawn down the number of remaining tiles to zero. If Max were going to win, it would be with the tiles he now possessed: YICOVRT",
        "Max's chuckle turned into a full laugh when he saw the full implications of Jasmine's play. Jaz had left the word OX hovering just to the right of the ten o'clock triple word tile. Max had seen a bingo play in his tiles earlier, but there hadn't been a place to fit until Jaz's last move. Had she done this on purpose, meticulously counting the tiles and knowing what he had in his hand? Or was it mere luck and perfect timing?\n\nMax decided it didn't matter, and moved the tiles onto the board, setting his V in front of OX and laying his tiles vertically downward from there.\n\nMedMax has played VICTORY for 137 points.\n\nA pop-up window appeared.\n\nYou have won the game! \n\nA movement in the doorway caught Max's eye. Jasmine stood in the frame, clothed only in the shadows of her silhouette. She was watching him, her smile a promise that while their relationship had just changed, their friendship hadn't. \n\nMax looked down at the game. Rematch? Yes/No\n\nDefinitely, Max said to himself, as Jasmine walked toward him. He clicked yes, beginning a brand new game. \n\n---\n\nThe End\n\nThanks for reading. This story was submitted as part of the 2013 Valentine's Day contest, so please vote and let me know what you thought. "
    ],
    "authorname": "Ironiclaconic",
    "tags": [
        "romance",
        "valentine",
        "friends with benefits",
        "romantic",
        "drama",
        "oral",
        "dialogue",
        "games",
        "seduction",
        "love story"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/words-with-friends-with-benefits"
}