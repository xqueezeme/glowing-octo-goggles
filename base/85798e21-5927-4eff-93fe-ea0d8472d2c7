{
    "title": "All Things Come... Vol. 2 Ch. 11",
    "pages": [
        "This is the final chapter, and then Luke and Uli are going to be laid aside: I've gone as far as I can with them. There's too much of it, but I couldn't risk splitting it or there'd be another long wait. This way I've been forced to stay engaged. My apologies to all of you who wrote, (some angrily, some pleadingly), wanting to know when the story would be finished. It's way, way too late, but real life intervened, (earning a living, fending off nymphomaniacs, stuff like that), and then I was busy with \"Roomers\", and the selfish anti-hero of that short series, Doug, refused to let me go till I'd finished his confessions. Better not to offend someone with his unpredictable talent. \n\nPlease remember to vote. I respond to non-anonymous feedback. Satyricon.\n\nSPAIN, MUNICH, VIENNA, BRUSSELS, EARLY/MID JULY\n\nLUKE, ULI \n\nI settled into the drivers' seat feeling childishly pleased. Cash had worked its magic and I'd paid considerably less than I'd expected for the motor-home. Big enough for a shower and toilet, small enough to handle like a car. I couldn't wait to try it out.\n\nI'd stocked the freezer, prepared the house for summer, arranged for Se\u00f1ora Montero to open it and air the rooms when I called her, paid outstanding bills, promised everyone's kids that the blonde se\u00f1orita would be here very soon and of course we'd go to the beach: the only chore left was to go and collect the se\u00f1orita herself. Alicante to Munich isn't really that far. \n\nTraveling as a self-sufficient party of one is a liberating experience. If you want to stop, detour, play music far too loud, whatever, then that's what you do. No-one asks questions or complains or makes sour comments. I didn't hurry, but kept going steadily and was a hundred kilometers past the French border when tiredness caught up with me. I pulled into the next rest area, clambered between the front seats, and was home.\n\nSupper, a little reading, testing the surprisingly spacious bed: all of it was like a birthday treat. I woke at about four and made coffee before setting off again, and at ten the following morning I stopped twenty kilometers outside Munich. I shaved and experimented with the shower: when I checked myself it seemed to have worked just fine, so I put on clean clothes and headed for town. I refilled the water tank first though: thinking ahead.\n\nShe answered the phone so quickly that she must have been sitting next to it.\n\n'Luke?' Caller ID spoils all the fun.\n\n'Hello, sweetheart. Are you packed and ready?' Once again I realized how much I'd missed her. Whatever happened to the old Luke?\n\n'Of course I am. Where are you? How long till you arrive? What's the van like? What...' I cut her off ruthlessly.\n\n'Look out of your front window and tell me what you see.' There was a pause, and then the window flew up and a blonde head with a phone clamped to its ear popped out. I craned my neck out of the van and waved: I heard her shriek through the phone and through my other ear as well. Surprise in stereo.\n\n'Already! Hang on.' The window slammed shut, and two minutes later she burst out of the door with a pack over one arm and a bag in the other. I opened the side door and slung the luggage in, then scooped her into my arms.\n\n'Hello properly, Fr\u00e4ulein Fischer. Are you ready for a summer of adventure and fun?' She squeezed me so tight that I nearly choked.\n\n'Only if there's plenty of love and sex too. I've been bursting to see you, and Lottie sends her love, and says \"see you soon\", and when we get to a quiet place I want to drive and...' Over her shoulder I saw a policeman approaching, fumbling for his notebook, and I hustled her into the van, hopped in and pulled into the traffic as quickly as possible. It never pays to argue with German cops. I was concentrating on getting out of town in one piece and couldn't pay attention to her gasps and coos as she explored. After ten minutes she squeezed between the front seats and settled herself, fastening her seatbelt.\n\n'Luke, it's lovely, like a dolls' house for grown-ups, and curtains and everything. I thought the beds in these things folded up and down, does the toilet really work?' She was bubbling with excitement, eyes sparkling, slim tanned body alive with energy.\n\n'You can fold it up if you want to, but there's plenty of room for just two people so there's no point, and yes, everything works and I'll show you properly later. Now tell me where we're going. I haven't thought further than picking you up and being back in Brussels by the twelfth. So that's nine days just for us. No-one knows where I am, and now no-one knows where you are either.' \n\n'I'll unpack my stuff and think. Which way are we going at the moment?'\n\n'South-east, more or less.' She unlatched her seatbelt and climbed into the back again. I heard her moving about as she put things away, then the noise of the curtains being drawn, and suddenly a pair of panties floated over the back of the seat and landed in my lap.\n\n'You'd better find somewhere to park,' she said. 'I feel faint so I've had to loosen my clothing and lie down.' I smiled and looked at the clock. \n\n'I had a bet with myself that you'd be naked in less than half an hour, and it's twenty-seven minutes. Try to stay calm for a moment.' I felt my cock stirring as I parked, then squeezed between the front seats and pulled the privacy screen down\n\nShe'd turned the quilt back and was sprawled across the bed, a picture of innocent sensuality, her slender body glowing in the light filtering through the curtains, one hand stroking her mound delicately and a finger dipping occasionally and caressing her swollen lips. My cock jerked uncontrollably and I hurried to get rid of my clothes. I was still unbuttoning my shirt when I felt her other hand unzipping me and worming into my crotch. \n\n'I've missed you so much, and I'm never going to miss you this much again, ever. It's been nearly two months, and... ' She was talking a little too fast.\n\n'You've been a good girl for two months? Cross your heart and tell me that again.' She blushed.\n\n'You always know. Just once, three weeks ago at a party, and that was because he looked a bit like you, but he was too quick, so I had to finish myself off afterwards in the toilet.' My chinos were round my ankles and my boxers followed them, and then I was on the bed with her, holding her tight against me.\n\n'If you had to sort yourself out then it definitely doesn't count. What shall we do first?' She pushed her head into my neck and bit me gently.\n\n'Everything, all at once. I love you so much, Luke. Can we lie quiet and hug for a bit?' Fine by me. We stayed like that for nearly twenty minutes, our bodies molded together, letting the knowledge that we were together again sink into our bones. Slowly, in the most natural way in the world, awareness grew, and I realized that now the scent of her perfume was underlaid by the familiar aroma of her need. She stirred and pressed herself harder against me and I began to respond.\n\n'Gently and slowly, please' she murmured, 'just to take the edge off.' I felt a rush of something in my head and as if my heart was going to burst out of my chest. \n\n'Not too slow: we're in a one hour parking zone.' She shifted and raised one leg and I slipped between her moist folds, feeling like a man coming home after a long exile. She sighed contentedly and I felt her stretching to accommodate me, her arms tightening round my neck. Her pussy rippled and began to caress me rhythmically, squeezing me to fuller hardness and her hips started to sway, pulling me after her.\n\nIt seemed to go on for ever, but I suppose it was only ten minutes before our tempo increased till slow and gentle was only a memory, and our bodies were locked together as we matched each other's movements, helping each other to the summit. Her breathing grew more ragged and the beloved fluttering of her abdominal muscles told me that she'd reached the point of no return and I drove myself harder, pushing her ahead of me in the way we both loved. We were simply satisfying our physical needs: there was nothing hovering round us, and I took us over the edge with two hard strokes and she spasmed against me and moaned deep in her throat, then gave in to the waves pouring through her. My balls tightened and I felt the warm flow beginning in the root of my cock and rising through the shaft, then I spurted into her, letting my pent-up longing fill her completely. Our bodies tensed against each other then relaxed.\n\nAfter a little she pressed herself against me and kissed my neck.\n\n'I can concentrate now. When I want you like that my brain just stops working except for planning how to get you into me.' \n\n'You could try asking,' I said lazily. 'I don't often refuse you.' She bit my shoulder delicately.\n\n'Persuading you is lots more fun, and then I can save having to beg and plead for when it's really and truly urgent.' She wriggled under me. 'Can you show me how to use the toilet and the shower?' Demonstrating everything took a while, and her disappointment that the shower was low pressure and only gave eight minutes of flow was hilarious to see.\n\n'It's not big enough for both of us even if we squeeze together like mad,' she said, and pouted exaggeratedly. 'We'll have to stay in hotels every three or four days just to be able to have our games.'\n\n'And in between we can be completely by ourselves and do what we want and still never need to be dirty. Three minutes each is plenty if you do it right. You're just too used to luxury. Where are we going first?' She was drying herself and rummaging in the drawers for clean panties.\n\n'I'd like to go home for a couple of days to say hello to Mum and Trudi, and Karl too if he's there, if that's OK with you, and then we can go back to Brussels really slowly, unless there's anything special you want to do.' She looked at me cautiously. 'Were you serious about not being with anyone else unless I'm there too?' I nodded.\n\n'I've spent a couple of nights with Anita and three with Elena since May. Not Magda, because she's too busy with her German stud. But they know about us, so it's different. I'm not against it on principle, but when you're not there something's missing.' She smiled and ruffled my hair\n\n'I said it wasn't really that important to me, and I meant it, but I'm still pleased. We'll need to work something out for next year though.' She pulled her T-shirt over her head and smoothed it over her breasts. 'Now, I want to find somewhere to practice driving this thing and then go home and make them all jealous.' \n\nMunich to Vienna is not very far at all, and even with brief halts for driving practice and one longer one for more hanky-panky it was only late afternoon when we pulled up outside the big townhouse. The van had barely stopped when Uli was out and hammering on the front door. I knew that she was hoping her mother would be in, and I'd called ahead to make sure she would be.\n\nLUKE, ULI, ANGELA, TRUDI, INGE \n\nDon't come between mother and daughter when they're as close as those two. They fell into each other's arms and I slid past them and down to the kitchen to say hello to Cook. When I'd escaped from her crushing embrace and she'd gone into overdrive, planning a celebration dinner, it was Trudi's turn: considerably less suffocating and much more fun.\n\n'It's so good to see you,' she said when we came up for air. 'It's ages and ages since Christmas, and I'm really bad at e-mails, and I've been so busy, I never wrote properly like I meant to, and phone sex is just too frustrating.' She pushed her crotch against mine and wriggled. 'How long are you staying and when am I going to get some of this?'\n\n'Talk to Uli, sweetheart. As far as I'm concerned as soon as possible, but I've put her in charge of all that side of things for the summer. My idea, not hers.' \n\n'I thought you might do that.' She disentangled herself, a look of disappointment flickering over her face, but then smiled. 'I'll beg and whine till she gives in, so you'd better plan to be exhausted. Tell me how Magda is.' I didn't have a chance because at that moment there was a clatter on the stairs and Uli erupted into the kitchen and leapt at Trudi, hugging her and sniffing.\n\n'We're all going to have dinner together and then the three of us are going to go out and find Inge and make a night of it, and I've got so much to tell you, you wouldn't believe, but let's call Inge first to make sure she's free.' Her glance flicked over to me. 'Girl-talk, Luke: go and find Mum while Trudi and I catch up with each other.' One eyelid drooped fractionally, and I took the hint. Never interfere with girl-talk.\n\nAngela was in the living-room of her suite, nursing a glass of wine and looking a little weepy, I sat down next to her and put an arm round her and squeezed her gently.\n\n'Don't feel sorry for yourself. You're busy and happy and so's she, and when you want her she'll be there. Me too. We're all pretty lucky.' She rubbed her head against my shoulder and I felt her relax.\n\n'Tears of happiness mostly, Luke. Seeing her so alive and so in love and doing what she wants to: it's wonderful. There's a tiny part of me that's jealous though. When I compare her with myself at that age, it seems unfair.'\n\n'If you hadn't done what you did there'd be no Uli, and I wouldn't have met either of you and then where would we be?' She smiled faintly.\n\n'I've never known anyone like you for looking on the bright side. Tell me what you've been doing since the spring. That was such a lovely weekend, and those nice women too. I want to know everything.' \n\nWe were swapping news when Uli came in, still fired up and in full organizing mode.\n\n'Making out with my own mother while my back's turned, eh? And without inviting me. Shift up and let me have your other arm and I'll tell you what I've arranged.' \n\n'Do I get any input here?' I asked tentatively, 'or am I just a helpless pawn?' She snickered.\n\n'You'll get your chance at input later, and you'd better not be too tired. Trudi knows it's going to be a sort of goodbye for a while and we're all of us going to have to be gentle with Inge. Trudi says she's carrying a torch for you but won't admit it. And then tomorrow we'll take Mum out somewhere nice and talk about everything. I didn't tell her the whole Dieter story yet, nor about next year, nor about her rights.' Angela reached across me and stroked Uli's cheek.\n\n'My needs, you mean, and your generosity. If it was me I'd be keeping him all to myself and snarling at every other woman who crossed our path.'\n\n'Which would drive him away in ten minutes,' said Uli, 'and you know it. Don't be grateful, Mum: it doesn't suit you, and anyway we've already talked about that.' She bounced up and grabbed my arm. 'Come on, you: we're going to have a proper shower and a nap, and no distractions. Tonight's going to be full of fun.' It looked as if being a helpless pawn was the best option.\n\nWhen we were clean and stretched out on my old bed, relaxed and content, she wormed closer into the crook of my arm.\n\n'Can I ask something?' Her voice was hesitant and I twisted my head to look at her closely.\n\n'Is it something to do with your Mum?' She bit my shoulder again. This was becoming a habit, I thought.\n\n'You are so annoying sometimes. I was going to ask what you'd think about inviting her down to Spain for a week. She needs a break and I'd like to see her properly, without being rushed, and we could have a nice time. We'd need to talk about the sleeping arrangements, but I won't say anything if you're doubtful.' I looked at her again and wondered if this was sensible. Her instincts were usually good though: to hell, if it looked like going south I'd try to trim their sails a bit, and if it worked it'd be stupendous. Temptation is a terrible thing.\n\n'Talk to her and see what she thinks. Not more than a week though, or I'll get claustrophobic. Do you really think you can handle it?' She nodded. \n\n'It's scary exciting to think about, but she's my mum and we all love each other in different ways. I need to be a bad girl sometimes and so does she. We'll talk to her tomorrow night.' I wondered if I'd have to end up spanking both of them simultaneously.\n\nThat evening the four of us sat in a booth in Gustav's bar and restaurant. Uli had made sure that Inge was next to me and Trudi opposite. She was controlling somehow, and I was watching her fascinatedly and wondering how she did it. She was coaxing Inge to talk, and Trudi was helping, reminiscing about Christmas. There didn't seem to be much for me to do, so I didn't.\n\n'Do you remember the little red fish?' asked Trudi. 'The way they used to come and nibble our pussies, tickling? It was so much fun.' She turned to Uli. 'You'd have loved it: we spent half the time wishing you were there and the other half being glad we had him to ourselves. I even wished Inge wasn't there sometimes, and then I felt really guilty and let her go first the next time.' Inge drained her glass and gestured to Gustav for another.\n\n'I spent all the time wishing it could go on forever,' she said, 'and I still dream about it.' From the corner of my eye I saw Uli glance at Trudi, who reached across the table and stroked Inge's cheek.\n\n'Do what I've done,' she said. 'Start thinking of him as an occasional bonus and stop seeing everyone else as a substitute. When I started looking around again I was quite surprised at how much fun it was.' I felt uncomfortable about being talked about in the third person, but gentle pressure on my calf from Uli kept me quiet. She and Trudi had the evening planned and I wasn't going to butt in. She kept the drinks coming, though I noticed that hers were still half-full when they were cleared and replaced.\n\n'I think we ought to go and sweat some of this off,' she said after an hour. 'Did you bring the keys, Inge?' Inge perked up considerably and burrowed in her bag.\n\n'Whenever you like. It's been ages since we were all naked together.' I stayed quiet, though my heart rate had risen. They'd planned an evening at the spa, and all that that entailed. I caught Uli's hand as we left the bar.\n\n'Making up for low pressure showers already?' She giggled softly and squeezed my hand. \n\n'A therapy session with fun thrown in. Poor Inge's got to reclaim her life before she gets all bitter and starts hating me and you and everything. She's a bit pissed already and Trudi and I are going to help you fuck her silly and then Trudi will talk to her afterwards and fix her up with a nice kind dominant guy who'll be good to her. Trudi's been scouting for candidates and she's going to suggest testing them out together first.' Women constantly astonish me: they're a mixture of the romantic and the practical that I'll never figure out.\n\nI didn't want to wake up at all. I was far too comfortable, it was far too early, I didn't need to piss that badly. I turned over and tried to escape the commotion that was happening round me but it got worse.\n\n'Luke, it's half-past ten and we need to go shopping. Sit up and drink your coffee. Why are you so tired anyway? Trudi and I did most of the work: all you did was lie there with your cock sticking up like a flagpole, and that can't be as exhausting as you pretend.' There was laughter lurking behind her brisk tone and I levered one eye open and peered up at her.\n\n'It's not exhausting at all till three energetic women take their best shots at it. When that happens there's a strong need to recuperate. Why have we got to go shopping anyway?'\n\n'Stuff for the van of course,' she said promptly, 'and a present for Mum, because it's her birthday next week, and I need some clothes for the summer, and those shoes of yours are a disgrace, and...' I struggled into a sitting position and accepted the coffee. As I sipped I thought that this wasn't going to work at all unless I learnt to enjoy being organized. I'm not the sort of guy who says \"yes, dear\" very convincingly. I flagged that idea for further contemplation and looked up at Uli.",
        "'The van's as equipped as it's going to be, and I even remembered an adapter for your hairdryer. All it needs is food and drink, and we'll go and get those as soon as you like. I'll let you buy one luxury item for it, and that's all, because if I let you loose on it with a credit card it'll be so full of useless gadgets that it'll be too heavy to drive and I'll go mad and refuse to satisfy your disgraceful needs. And incidentally, shoes are much cheaper in Spain.' She looked at me and sighed.\n\n'Everything you need and most of what you want. That's my Luke. You English are still sort of Puritans underneath it all. You can't blame me for trying though. Do get up though: Mum's present is important and I really do need to do some shopping.' Never overdo a victory. I finished my coffee and rolled out of bed. \n\nI stood under the hot water for a long time, feeling better by the minute. The previous night had been more for Inge and Trudi than for Uli and me, but that seemed fair enough: Uli and I were going to have the whole summer and then a lot more, and I wasn't going to complain about four way fun. I hoped Trudi's plan would work. There had been tears from Inge as well as laughter and peaks of ecstasy, and in the end she had come for a third time, forcing herself hard onto my cock, her small breasts tight against her straining torso, tiny nipples like diamond hard berries and her warm pussy squeezing me like a vice, struggling for every ounce of sensation before she slumped, semi-conscious, onto the pile of towels we'd been fucking on. Uli and Trudi had fussed over her while I let my heart rate settle and pondered the fact that I was going to have to deal with the pair of them at least once more. Uli stuck her head into the shower stall.\n\n'Are you coming or what? There's loads to do and I've got clothes on so it's no good hoping I'll blow you. I'll do that when we have our siesta.'\n\nSiesta?' She smiled cheerfully.\n\n'I'm practicing for Spain, and siestas are their best idea. Now get out of there and get dressed.' She was at home and happy and excited so I sighed and did as I was told, reminding myself not to be too compliant all the time. I hoped she had the good sense not to push too hard.\n\n'It's a quarter past three and we're about six hours from Brussels and we've got a day in hand,' I said as she pulled into a rest area. 'Do you want to push on and get there tonight or rest up and aim to arrive tomorrow morning?' She stretched.\n\n'It's been such a lovely week. I think we've made love in half the rest areas of the autoroute system. Is the water tank full?'\n\n'Yes. Answer the question.' She unlatched her seatbelt and slid the door of the van open.\n\n'Rest up, I think, so we're fresh tomorrow. Let's have a sandwich and then sit in the sun for a bit and then practice our siestas.' She looked at me with a wicked smile. 'You're not very good at them yet. Much too restless.' I felt a tingle of anticipation in my groin.\n\n'Not my fault. You need to work harder at soothing me.' She wriggled round and squeezed between the front seats.\n\n'I'll make the sandwiches and open some wine and we'll see.' I smiled and opened my own door too. \n\nI'd hauled a blanket out of a storage cupboard and spread it on the grass next to the van, and was lying admiring the sun through the trees when she flopped down next to me, holding a loaded tray carefully. The breeze caught her short summer skirt as she arranged her legs and I got a glimpse of smooth tan thighs that went all the way up to her ass without interruption.\n\n'Salami and tomato and the wine's cold,' she said, 'and don't you dare say that I don't spoil you.'\n\n'I've never said that, nor even thought it.' She grinned.\n\n'Just reminding you.' We ate hungrily and when she'd finished she wriggled into the crook of my arm and relaxed. One hand crept out and rested possessively on my cock and she sighed softly, then her eyes closed and her breathing slowed. I lay still and looked at the sky some more.\n\nOur dinner with Angela had been intimate and relaxed to begin with, and sensual and exhausting later. She'd decided that discretion was the better part of valor and had booked a suite in a hotel for the evening.\n\n'No point in shocking Cook too much,' she'd observed dryly when I queried the need. 'That daughter of mine looks as if she's planning something.' Her eyes had sparkled briefly. 'And to tell the truth I'm feeling a little wicked and adventurous myself.' I'd thought that if that was the case it was more likely that Uli was checking that being a threesome in Spain for an entire week wasn't going to be a disaster, but I'd stayed quiet. I seemed to be doing a lot of that lately.\n\nWe'd met in the hotel bar. Uli had given all her packages to a porter and told him to take them up to the suite; she flopped into a chair and exhaled noisily.\n\n'Brandy and Tia Maria, please, Luke, so that it feels like an occasion.' I settled for wine, and when Angela joined us Uli persuaded her to go festive too. She sipped and looked at us, and raised her glass.\n\n'Here's to love, however complex and peculiar it is.' She and Angela clinked glasses and smiled at each other. I focused on them as they looked at each other and caught a hint of shared mischief and a love that was somehow stronger than mother and daughter usually have. As if they felt my concentration they turned and looked at me.\n\n'If it hadn't been for you, Uli,' said Angela quietly, 'I'd never have enjoyed being a mother, or having my daughter as my best friend, or looking forward to spending time with her and her lover.' Uli nodded in agreement.\n\n'I feel the same, and it makes me feel as if I want to burst.' Her face changed. 'And I'm so hungry you wouldn't believe. Let's go and eat.' Shared silent laughter flickered between us and Angela rose.\n\n'Come on, then. I ordered a lot of seafood to make sure we get our energy levels up.' Uli caught my eye and winked, then turned to her mother.\n\n'O ye of little faith: when did he ever run out of energy before either of us?'\n\nLater, with not too many oysters boosting my energy levels, and just enough delicate white wine relaxing me, I lay sprawled across the queen-size bed watching mother and daughter as they took turns to stroke and nibble my cock. There was no doubt as to their relationship. Maybe Angela worked out more and had had the benefit of a very expensive cosmetic surgeon. Certainly Uli was in the first flush of youth. But their bones were the same, the flesh covering the bones was equally firm and tan and toned, and the way they held their heads, and the smiles they shared as they made my cock tense and jerk were almost identical. Angela had a little more weight to her breasts than Uli did; her hips and ass were a little fuller. So what? They seemed to be good with taking turns and I relaxed a little. \n\n'The first time I went to bed to bed with him he cut my panties off my body and I thought he was going to be rough but he made me beg just by being gentle, and then he ate, no, feasted on me, until I actually passed out,' said Angela reminiscently to her daughter. Uli's tongue was laving the head of my prick and she didn't answer straight away. Then she raised her mouth from my body.\n\n'The first time he did that to me I thought I'd died and gone to heaven. And then when I went down on him I got so excited that I lost it and choked and he came all over my face and I nearly cried. He made it alright though.' They seemed to have forgotten I was there, except that Angela was running her lips lightly over my balls and I felt the stirrings of fresh desire rolling through me like a warm tide.\n\n'Enough nostalgia,' I said. 'The oysters are working again. Whose turn is it?' Mother and daughter looked at each other. \n\n'Go on then, Mum,' said Uli. 'He can sort you out and I'll let him clean me up a bit and keep me simmering for the next one. He can do both at once.' She giggled suddenly. 'And he might as well practice while he's got the chance.' She rolled over and knelt beside me, then grasped my cock gently and raised it from my belly. Her soft hand encircled me and she spread fresh pre-cum over the tip with her thumb. Angela swung her body over mine and her hungry pussy sank onto me, the firm muscles of her vault grasping me and drawing me remorselessly into her. Her eyes closed and she started to hum wordlessly and Uli lifted my cock higher to help. As her mother's thighs settled over my hips she smiled and shuffled towards me, pushing her mound forward. I reached out and slipped my thumb into her, flexing it gently, and she stiffened, then leant forward and whispered in my ear.\n\n'If I help, can we try to make her pass out and then make love to each other our way? What I really like about sharing is that I know I'll have you to myself afterwards and how lucky I am.'\n\nSo that's what we did. Afterwards she and Angela had hugged each other and cried a little, but they were tears of happiness and love, so I was able to handle it: maybe I'd be able to handle the week we were going to spend together as well.\n\nThe warmth and the wine had conspired to make me nod off and I wondered fuzzily what had woken me. Then I felt a warm mouth close over my prick, and the long slide that took my shaft deep into her throat. I raised my head to watch just as she flicked a glance upward and our eyes met. I felt her chuckling and blew her a kiss; she squirmed round so that her crotch was close to my face then lifted her head.\n\n'Just a helping hand and then we'll decide what to do next,' she muttered and her tongue flickered out to caress me again. I let my hand drift up her thigh and found nothing but warm flesh.\n\n'I never felt you take your panties off,' I gasped as her tongue swirled round the crown of my prick. The suction relaxed.\n\n'After I made the sandwiches,' she mumbled round my shaft, then the pressure began again and I stopped listening. Her pussy was hot and moist and the muscles of her vagina squeezed the two fingers that I'd slipped into her. She moaned deep in her throat and her head began to move gently, drawing the essence out of me. I flexed my fingers gently and she wriggled so that they slid more firmly into her. I felt her free hand nudging mine as she rubbed her clit gently and the tempo of her lips on my shaft increased subtly. Her hips were moving rhythmically and I relaxed and surrendered to the sensations. When I opened myself to her feelings I realized that there was no urgency in her. She was doing this for me and her hand and mine taking her along the path she was leading me down was enough for her this time. I knew that the need would simmer in her though, and that tonight would be a kaleidoscope of desire and love and friendship. She wiggled her hips and I slid my thumb into her ass. Now my hand was being grasped gently by both the openings, and her mouth was accelerating, sliding along my shaft, her head bobbing as she drew me deeply into her. Suddenly her lower mouths closed over me and I felt her inner muscles fluttering as a small orgasm rippled through her. Her hand closed over my cock and she squeezed and I splashed into her hungry mouth, feeling a deep sense of peace flooding through me. Her knees were trembling and she straightened out and lay alongside me, my cock softening in her mouth. I kept my fingers where they were, enjoying the faint tremors that washed through her, and looked at the sky through the trees some more.\n\n'How could you let me fall asleep like that?' she demanded an hour later as I swung the van back onto the road. 'With your cock in my mouth and me dribbling cum and your fingers inside every bit of me? If anybody had seen us I'd have died.'\n\n'How could you fall asleep at all?' I asked. 'You started snoring and I was too scared to move. I was terrified you were going to start grinding your teeth.' She smacked my knee and peered at me through her fringe, her eyes sparkling. \n\n'Good job the water tank was full, or the van would smell like a fish shop. But I want to stay in a hotel tonight and have a proper shower. When are you going to call Angela?'\n\n'The results are out tomorrow morning, so I suppose at lunchtime.' She looked at me closely.\n\n'You are so strange. You don't really think any of them have failed, do you?' I shrugged.\n\n'Not really, but there's always a first time, and I'm sort of relying on the bonus to repair my finances.' She looked as if she was about to say something and then stopped. Just as well, I thought. I was damned if I was going to be subsidized. She smiled as if she'd guessed my thoughts and reached out and ruffled my hair.\n\n'Please don't change, Luke, even if it feels like I'm pushing you. I just want you to stay being the person I fell in love with, who makes me feel safe and who doesn't get all careful and polite just because my father's rich.' That was all right then. I changed up a gear. High pressure shower fun seemed like a good idea.\n\n'All of them, Luke,' crowed Elena, 'and all with distinctions. They can hardly believe it and neither can I. it's a miracle. Everyone wants to celebrate and hug you, even Gregor, so you'd better be free tonight.' A wave of relief washed over me. \n\n'Uli's with me, Elena, and I'm not going to lose sight of her: I hope she's invited too.' Her laughter was soft and intimate. \n\n'Of course she is. Magda's told me so much about her and I'm ultra curious, and anyway, I want to see the person who's managed to tame you. What about Annette's? At nineish?'\n\n'See you there, Elena.' I'd had the phone on hands-free and I turned and looked at Uli. She'd ordered breakfast from room service and we were still in bed, recovering after late morning lovemaking. To my surprise there were tears in her eyes, and she lunged forward and hugged me, then sat back on her heels.\n\n'I'm so silly. I ought to be happy for you, that they've all passed, but hearing you say that about me to Elena just made me feel as if I wanted to love you even more than I do already.' I reached out and gathered her back into my arms.\n\n'No harm in reminding them who I am. Are you going to be up for another farewell orgy? Screw them all senseless and then just be the two of us together, surveying the wreckage?' I dropped my head and nuzzled her soft breasts. 'I helped you with Inge and Trudi, so you've got to help me with the coven. And I think you'll like Elena and Angela, and none of them are going to be carrying a torch for me.' Her nipple was firming under my tongue and she twisted away, grabbing my ears and pulling my head up.\n\n'Don't get me all hot again, Luke Lancer, and don't pretend to be begging me for help with your harem. I know just how they feel after passing everything and I'm going to help them celebrate till we all drop. But first I want to shower and then go out and walk around and then have some oysters for a late lunch and then a hands off siesta so we're ready for tonight. How does that sound?' \n\n'As if you're a mind reader. Let's do just that.'\n\nLUKE, ULI, THE COVEN\n\nUli felt a shiver of excitement as the taxi pulled up. Her mother had told her about Annette's bistro, and about the two other women who were Luke's lovers, but she'd never been there or met them. All new experiences today, she thought as he helped her out of the cab. She sensed an air of steeliness about him as he straightened up and took her arm. He's going to make sure it's good for me too, she realized, and felt the same surge of emotion that had filled her when she heard him speaking to Elena that morning. He looked down at her.\n\n'Ready to kill 'em dead?' The irony that always lurked in his voice was there in force and she smiled knowingly and squeezed his hand. Already her pussy was tingling lightly.\n\n'As long as I'm not just a spectator'. He smiled and they went in.\n\nAs they pushed through the inner doors Uli gasped. An almost spherical woman in her mid-fifties came flying towards them, arms outstretched. She ignored Uli completely and grasped Luke, hugging him firmly to her.\n\n'My bad boy, where 'ave you been, ignoring your poor Annette for so many weeks? I 'ave been heartbroken, heartbroken I tell you.' Uli nearly giggled as Luke struggled to escape from the crushing embrace. Finally the woman released him and turned to her, looking at her closely. 'And you little one, I 'ave met your sister, maybe?' Luke slid an arm round Uli's waist.\n\n'Her mother, Annette and you are a very perceptive woman.' Annette looked pleased and leaned forward to give Uli a kiss of greeting.\n\n'He is a bad, bad, boy, but you must know that by now. The only woman he 'as ever refused is me, and I am heartbroken still.' She turned back to Uli. 'Your friends are here already, bad boy; I don't think you are going to sleep very much tonight.' She burst into wheezy laughter and winked at Uli. 'And you are going to keep the score, ma petite? You will need a calculator, I think.' Her laughter was so infectious that Uli started laughing too. Luke was watching them and Uli saw his mouth twitch with repressed amusement.\n\n'Annette, if I wasn't terrified of Pierre I'd invite you as well, but you know how he is...' Annette wheezed with laughter again.\n\n'Arsenic in your mussels, you bad boy, and serve you right. And besides, you would be destroyed by a real woman, but my Pierre...' She was choking with mirth and wiped her eyes as she tried to regain control. 'Come to your table, little ones, where the other hussies are waiting. Mon Dieu, Luke, I think you are the baddest boy I 'ave ever met.' \n\nUli's head was whirling as Magda introduced her to Luke's students. Gregor and Jenica, Peter and Rosa and Alex, then Anita and lastly, Elena, their boss. Polite kisses from everyone, but Elena and Anita hugged her warmly as well; her heart skipped a beat as she felt the touch of welcome in their soft hands and let herself be seated between Elena and Magda. The mood at the table was one of self-congratulation and pleased satisfaction, but she also noticed that between the three women who were Luke's lovers there was a sparkle of excitement, tinged with regret. Elena turned to her, nodding towards Luke, who was talking to Gregor and Jenica.\n\n'He's different when you're with him. Did you know that?' Uli stared at her and Elena thought about what she'd said, then grinned. 'That was a stupid thing to say wasn't it? Of course you don't. It's true though. You're a lucky woman, Uli.' Uli nodded.\n\n'I know that. When you went to bed the first time did he seem to know exactly what you wanted?' Elena blushed slightly and nodded.\n\n'Yes, and Magda and Anita both say the same. I think we're lucky to have met him, and that the two of you are very unusual people.' \n\n'If it weren't for him I don't know what I'd be,' said Uli seriously. 'A sort of Austrian Paris Hilton I suppose. But he rescued me from that and from my parents and from myself and then he rescued my mother as well. We owe him plenty, and he just smiles and says we did it all ourselves.' Angela nodded.\n\n'Your mother said something like that when she was here in the Spring. Well, whatever you've got, it's been a privilege to be allowed to share a small part of him.' Her voice changed slightly. 'You do know how we're planning to thank him, don't you?' Uli's smile was that of a fallen angel.\n\n'Oh yes, and if you try to keep me away I'll scratch your eyes out.' Elena gave a sigh of relief and the two women raised their glasses to each other.\n\nThey've gone to a lot of trouble, thought Uli as she relaxed against Elena's soft breasts. The hotel was modern and anonymous, but it had the undoubted advantage of imperial sized beds. Magda was sprawled across Luke's body, his deflated cock still half inside her and the other three women were lying comfortably against each other. Elena and Magda's bodies were slick with perspiration after the attention that Luke had paid them, and Uli's pussy was still fluttering from the gentle orgasm that Anita had coaxed from her with hands and tongue while they watched Magda's slender body straining upwards, struggling to accept all of Luke's rigid cock. As she watched him his eyes opened and then one lid drooped in a conspiratorial wink. Her heart sang at the sight, and she slid forward and grasped his cock gently between her teeth, withdrawing it from Magda's slack pussy and releasing a flood of mixed juices. She lapped at them indiscriminately, enjoying his taste mixed with that of another woman, then drew him into her mouth and laved him thoroughly. When she'd finished she raised her head.",
        "'My turn next?' The eyelid drooped again, and she smiled and nuzzled his belly. Magda stirred.\n\n'Lovely, lovely, lovely,' she murmured, rolling over and stretching. She crawled up to Luke's face and kissed his nose lightly. 'That was the last time for me, darling Luke. I'm going to go shower and then go and meet Jurgen and soothe him. Thank you so much for turning me into someone I like. If Jurgen knew how much he owes you he'd have a fit.'\n\n'You did it yourself, silly,' Uli heard him whisper. 'All I did was light the fuse. You're pure dynamite, girl.' Magda dipped her head and kissed him softly on the lips and then straightened up.'\n\n'I'm going now before I start crying.' She scooped up her clothes and headed for the bathroom. Anita started to go after her, but Uli grabbed her arm and shook her head. Anita glared at her but Uli held on.\n\n'Leave her for the moment. She's got to walk away in her own style,' she said softly. Anita stared for a moment then relaxed, and Uli let go of her. Luke sat up and gathered Anita into his arms.\n\n'It's difficult for me too, sweetheart. There's a part of me that doesn't want to let go of any of you. But deep down you know it's time to move on, for me as well as you.' Anita buried her head in Luke's neck and clung to him, and Elena nodded. She too looked close to tears. \n\n'Too much emotion,' she murmured to Uli. 'Maybe this wasn't such a good idea after all. I don't think we realized till now how much of a hole he's going to leave in our lives.' Her voice broke and Uli reached out and hugged her. She caught Luke's eye and knew that their thoughts were. She blew him a kiss and he returned it before dropping his head and nuzzling Anita's shoulder again. We're helping everyone accept that it's different now, she thought, and he understands me and I understand him. I'm so lucky. She drew Elena closer to her and helped her through the tears of loss.\n\nLUKE, ULI, ANGELA, SPANISH VILLAGERS AND CHILDREN\n\nThe drive from Brussels to the village had tired me, and I didn't wake till late in the morning. We'd arrived as the sun was setting and I'd done nothing but stumble into the shower and then into bed. My bladder was too full to bear, so I staggered to the bathroom and dealt with the problem, then settled back under the sheet, luxuriating in having nothing to do. I heard footsteps on the stairs and Uli peered round the door. When she saw I was in the land of the living she advanced, carrying a loaded tray in both hands.\n\n'Breakfast in bed for being a hero and doing all the driving,' she smiled, 'and I've fixed you a proper English one too. You're going to need all your strength this week.' I looked at the tray. It wasn't quite a proper English breakfast, but she'd been to so much trouble and invested so much love that I felt a lump rising in my throat and sat up straighter.\n\n'I didn't know we had all this stuff,' I said as she put the tray on my lap. 'Have you been shopping?' She nodded proudly.\n\n'The lady at the shop was so helpful; I pointed at things and showed her words in that phrase book, so it was quite easy. She kept talking as well, but I didn't understand a word so I just nodded and smiled. I'm going to have to learn a bit of Spanish or I'll feel like a helpless idiot when we're out together.' My kind of girl. I sipped orange juice and began to feel absolutely great. \n\n'You fell asleep so quickly last night that I had to sort myself out,' she said, 'and even when I was coming you didn't move an inch. Are you going to make it up to me before we go and meet Mum at the airport?' I nodded happily.\n\n'You bet. I need therapy badly. I'm still suffering from emotional overload after that night in Brussels. Still, at least Elena paid me the next morning.' She pinched me quite hard.\n\nDon't sound as if we were just doing it for the money. Poor things. They were so upset and so sensible and so nice to me; they could have been really bitchy, you know, but they weren't, even though they were all feeling a bit miserable. I felt so sorry for them. I won't mind if we visit them again.' She looked at me sideways. 'Or if you decide you want a weekend in Brussels to talk about old times.' I thought about that.\n\n'Too soon to be making those sorts of plans. But you could explain to me why you've still got your clothes on.' I twisted and put the breakfast tray on the bedside table as she jumped up and began stripping off her tank top. Her skirt fell to the floor and she was naked, her body glowing and taut in the sunlight. She held the pose for a second, then whisked the sheet away and dived onto the bed, grabbing my ears and forcing my head round so that we could kiss. My cock stirred as her fragrance invaded my senses, and she felt the movement and pulled back.\n\n'I'm badly in need here, so I want hard and fast and a little bit rough, and from behind, please, and just as soon as you're ready, because we've got to be at the airport in a couple of hours.' She wriggled and ground her hip gently against my cock. 'Pretty please?'\n\n'No problem, lady.' Her face was flushed and her breathing was fast and shallow. A thought struck me. 'Have you been bad?' She wriggled her hips again.\n\n'Mmmm. Not bad in that way, except for sorting myself out last night, but I might be later. Sharing you with my own mother for a week is really naughty. But for now, just firmness and...' I clamped my hand over her mouth and rolled her over so her face was pressed into the pillow. She gave a muffled squeak and lifted her rump, and then pulled her knees up so she was kneeling, her ass thrust high. I leaned round and bit one soft buttock gently and her initial gasp turned into a long sigh. Her hand slipped into her groin and I knew she was caressing her clit, waiting for me to fill her. The scent of her need was heavy in the warm air and the finger that I drew down her cleft came away wet and slick, so I kneewalked over her legs and settled myself, driving hard into her in one slow deep stroke. She lifted her head and moaned happily and pushed back strongly against me, forcing the head of my cock against the top of her vagina. I grasped her hips and held myself still for a moment, straining into her, feeling her hand moving against the base of my prick as she touched herself. Then she gave a little shimmy and I pulled back slightly and we began the dance. \n\nLess than five minutes fulfils the legal definition of a quickie, I've always thought, but it seemed like much longer as she bucked and twisted in my grip. Leaning over her back, I grasped her neck and buried myself in her. She twisted her head to breathe, and after the first whooping inhalation, I heard her muttering.\n\n'More, just a little bit more, I want to be full of you, everywhere, fuller than this, full everywhere...' I straightened again, high above her, pinning her with my cock, then licked my thumb and slid it into her puckered asshole, twisting it roughly against the walls. She wailed once and buried her face in the pillow again, her body shaking as the beginnings of orgasm flooded through it. Her ass was jerking uncontrollably and the smooth strong muscles within were grasping me. I felt the storm surge gathering pace and quickened my own movements, hurrying after her, jetting my seed with a cry of exultation as the sensation took her soaring, and then falling limply forward as I sagged over her. \n\nAfter a long minute she stirred and crawled forward, letting my cock slide out of her before turning round and lapping at it delicately.\n\n'We always get it just right,' she mumbled contentedly. 'I'm going to be feeling buttery delicious all day now. Exactly what we wanted: I mean, you seemed to be enjoying yourself.' I thought about that and realized she was right. I'd wanted hard and fast too, and somehow our needs were synchronized in a very positive way. For the twentieth time in a week I felt supremely lucky. She gave my cock a final lick and then stretched.\n\n'Clean me up a bit, but really gently, please, and then we'll have a shower and fetch Mum. I'd like to go to a proper supermarket too, if we've got time, for bathroom stuff and maybe some better coffee. Mum and I can't use economy shampoo and no conditioner and Se\u00f1ora Montero's shop only has the basics.' I twisted round and began to lave her pussy softly. It was slightly swollen and she sighed as my tongue stroked it. 'That feels wonderful. It's going to be such a lovely week.' I dipped my tongue into her pungent folds again and silently agreed. If it carried on the way it had started I might even be needing a Zimmer frame by the end.\n\n'But it's absolutely beautiful!' Angela's said as she and Uli came back downstairs after the tour of the house. 'It feels as if it's a thousand years old and brand new at the same time. Who did it for you, Luke?' I shrugged.\n\n'It's only a couple of hundred years old really. I did the easy bits and people from the village pitched in too; I had to hire professionals for the electricity and plumbing, but mostly it's all local. Local materials, local people, not like city rehabbing.' She nodded and looked round again.\n\n'I'd love some of my designer friends to see this. Luxurious austerity is difficult to do.' She was wearing a pair of shorts and a T-shirt, her feet in beach sandals and I realized with surprise that she wasn't wearing make-up. Her hair was pulled carelessly back in a ponytail and her eyes were sparkling with pleasure and excitement. She looked like a little girl on holiday and I had a flash of understanding about what a change this was for her. Uli caught my eye and I knew that we were sharing thoughts again. \n\n'How tired are you, Mum?' she asked. 'We haven't made any real plans, except to have some lunch.' She jerked a thumb at me. 'Mr. Clever here interrupted breakfast to satisfy his other appetites so...' She checked for my reaction and giggled. 'Alright then, my appetites, but I'm still hungry. Luke, what shall we do?' Part of me wanted to lead them upstairs and show Angela the bedroom more thoroughly while Uli cheered us on, but the rest of me wanted a slow build up.\n\n'I went to bed early last night so I'm not tired at all,' said Angela. 'What I want to do is see the sea. I haven't been on a beach in years, but I want to see your village first and have just something light for lunch so I don't faint.' She looked at us expectantly. I gestured to the door. \n\n'Se\u00f1ora Montero's bursting with curiosity, so we'll kill two birds with one stone and then go down to a beach I know. It's only forty kilometers.' I offered each of them an arm and we strolled out into the warm sun. \n\nThere were a dozen children sitting on the rim of the fountain in the middle of the square and swinging their legs, and a suspiciously large number of locals in the bar next to Se\u00f1ora Montero's shop and hairdressers. Her husband Luis came to take our order, his eyes darting from Uli to Angela as he fumbled with his note pad. Then he looked at me and one eye flickered in a wink.\n\n'Se\u00f1or Luke, some seafood for you?' There was a certain amount of nudging and whispering going on and I realized it would be better to get this over with quickly. I looked at Uli.\n\n'Tell your mum to get ready to be kissed, otherwise they'll be gawping at us as if we were from Mars. I turned back to Luis. 'Luis, you remember my \"novia\", Uli? Let me introduce you to her mother Angela, who has come to spend a week with us here.' He whipped to attention and stepped smartly round to Angela's seat. Once the introduction has been made, the kissing can begin. After what seemed like the whole village had kissed and inspected her Angela sat down, managing not to wipe her cheeks. Uli was about to say something when there was a commotion among the children, and the smallest, cutest, little girl was pushed forward: she whispered in my ear and I raised my eyebrows at the two women.\n\n'Juanita here has reminded me that I promised we'd all go to the beach when the van and the blonde Se\u00f1ora were here. What do you think?' Uli looked doubtful, but Angela smiled delightedly.\n\n'Just what we need to stay decent until this evening, and a beach is always more fun with children. Tell your waiter to hurry up and that next time he wants to kiss me he should shave first.' Uli relaxed and began to look delighted and I steeled myself for an afternoon of childminding. Juanita was waiting expectantly.\n\n'Go and tell Luis to be quick with lunch, then tell your friends to collect all their stuff and tell their mothers what's happening and to tell them that Se\u00f1ora Montero knows my mobile number,' I told her. 'And then you can come back here and wait quietly and we'll go.' She beamed and flung her matchstick arms round my waist, and then tore off to spread the word. Luis arrived with salad and wine, and a bottle of alcohol free beer that he put ostentatiously in front of me. I got the message. Don't drink and drive. Juanita was his favorite niece. \n\nEating lunch with a dozen pairs of young eyes willing you to be as quick as possible is not the best experience in the world, but Uli and Angela were as excited as the kids and by the time I was gulping my coffee I was beginning to feel enthusiastic too. I put the cup down and beckoned to the children.\n\n'Down to my house and wait quietly, chicos, while I tell Luis where we're going.' They tore off in a shrill pack and I paid the bill, promising to take good care of the village's future. We strolled down to the house and Angela and Uli hurried to collect our beach kit while I loaded the kids, totally illegally, into the van. The women reappeared and squeezed into the double passenger seat and I clambered in the drivers' side and hit the ignition.\n\nThere are beaches and beaches. Many of the Spanish ones have been ruined by uncontrolled development, but there are still long stretches, hemmed by low cliffs and hard to access, where shore and sea and sky meet in unspoiled perfection. I lay on white sand, watching Uli and Angela playing in the surf with the children, and thinking idly that life couldn't get much better. Angela came trotting up to me, breasts bouncing, nipples puckered, and shook her wet hair vigorously, spraying me with droplets of water.\n\n'Come and swim again, Luke: we need someone who can tell the kids not to go out too far.' I peered up at her, enjoying the view. Her body was spangled with diamond specks of salt as the sun dried her, and she seemed to be glowing with ... with something. \n\n\n'I was trying to conserve my energy.' She stuck her tongue out and grabbed my wrist, but I heaved back and she stumbled and fell half across me. I slipped my arms round her, my arms rasping gently across her sandy body, and licked the hollow of her throat delicately, enjoying the salt tang. She purred and pressed herself against me.\n\n'This is such fun. You make me feel like a teenager again, Luke. How do you manage it?'\n\n'You're the one doing it, Frau Fischer. I am who I am. Why are you distracting me from lifeguard duty?' She reached down and squeezed me gently.\n\n'You'd better get rid of that or you'll scare the kids to death. Unless you're going to let them use you for windsurfing practice.' I winced at the thought and rolled her over so she was completely covered in sand.\n\n'Don't be sadistic, woman. The water will deal with it very effectively and you can cool down too.' She chuckled and we strolled back down to the water's edge. Uli was surrounded by laughing children and a splashing war seemed to be in full swing. I dived in and surfaced by her side.\n\n'Luke to the rescue.' I grabbed the nearest child and tossed him gently into the air towards his friends. Shrieks of excitement and a redoubling of the frenzied splashing was the predictable result and we lost ourselves in the game. At one stage I found myself grasping Uli, her breasts soft against me.\n\n'Happy?' I asked. The smile on her lips and the sparkle in her eyes was all the answer necessary.\n\n'I'm exhausted', announced Angela as she finished the last of her Rioja. We were sitting at the rustic table on my patio, full of food and wine, the warm evening air caressing our bodies. Uli wagged a finger at her mother.\n\n'Not too exhausted, mum. We've got an appointment upstairs in a minute and your presence is requested.' Angela smiled.\n\n'No, not quite that exhausted, but I just want a quickie and then fall asleep peacefully. You can carry on without me afterwards.' Uli winked at me.\n\n'You see? Guests first and then the household help. She knows how to put me in my place.' \n\n'Get upstairs, the pair of you,' I said. 'I want you both clean and eager by the time I've stacked the dishwasher and brushed my teeth.' They looked at each other, stood up, saluted me smartly and clattered up the stairs. I heard Angela's voice murmuring something and then a smothered giggle from Uli. I shook my head fondly and began to clear the table.\n\nWhen I'd finished the bathroom necessities and freshened up I padded into the bedroom. Uli and her mother were half hidden behind the mosquito net and all I could see was the fuzzy outline of their glowing bodies. I slid in between them and gathered them into my arms. My cock was thickening and stretching already and when I felt a hand wandering across my groin I couldn't resist flexing it. Uli's tongue slipped softly into my ear and her warm breath tickled me.\n\n'She feels a little bit shy about something, and doesn't want to tell me, so I'm going to go and have a quick shower and work myself up while you soothe her, OK?' She slid out of bed, her fingers trailing across my chest and disappeared into the bathroom. I rolled towards Angela and ran my tongue across her breasts.\n\n'What's madam's pleasure tonight?' I murmured as one delicate nipple firmed under my lips. I felt, rather than saw, a flush spread across her face and down her neck, and she gulped before answering.\n\n'Uli told me about you and her this morning and I've been thinking about it ever since and wondering if...' Like daughter, like mother, I thought wryly. I nipped her breast hard and she squeaked in surprise. I could smell the scent of her musk as she squirmed under my weight, and when I slid my hand down to her crotch she was wet and ready. I rolled over her and pinned her arms above her head with one hand, then pushed her knees apart with my leg. Her eyes were huge as she stared up at me, but her hips were rolling in anticipation and her pelvis was thrusting upwards, begging to be filled and crushed. With my free hand I set myself at the entrance to her body and dropped my hips, forcing myself hard into her, pushing myself through her fat pussy lips and feeling her stiffen and then relax as she stretched to accommodate me. A strangled sigh was forced from her and she opened herself completely to me as I thrust again. I pinched her nipple and twisted it, and as she gasped I clamped my mouth over hers, driving deep. The gasp turned into a muffled yelp but her grip relaxed a little as I settled into a hard rhythm, my weight holding her down, her body shuddering as I plowed her, preventing her from reacting as she wanted. \n\nThe wordless humming that was her trademark noise when she was being pleasured began, punctuated by gasping breaths as I continued to wrench her body towards climax. I was vaguely aware of the bed tilting slightly as Uli clambered onto it and rested her hand on the small of my back, squeezing a fold of skin in time with my movements. I don't think Angela noticed anything. Her eyes were squeezed shut, her lips drawn back, hands clawing at her own breasts as she heaved and thrashed beneath me. I felt the usual mixture of feelings. A part of me loved Angela's occasional need to be dominated, finding an answering chord in my own darker side, but the rest of my reactions were ambivalent and it wasn't a part of me that I especially liked. On the other hand, just once in a while it was what she needed and so did I. I shifted my weight and lifted one of her legs over my shoulder, using the new position to drive deeper into her until her body began to spasm as her orgasm welled up in her. Uli was watching us, one hand still stroking my back, the other gently caressing her pussy. Her breathing was fast and shallow and her aroma mingled with her mother's, making my head spin. I quickened my pace, forcing Angela's climax to the surface, and suddenly the pressure burst through and her body snapped into a rigid bow, her vaginal muscles clamping over my cock, painfully even, as she was swept away by the tide of pleasure. Uli gasped as she watched and her hand on my back slowed and stilled.",
        "Later, with Angela asleep in the guest room, I lay quietly with Uli, our bodies touching, the warm, gentle glow of our own lovemaking still filling us.\n\n'So different,' she murmured sleepily. 'Every time it's different. How long till we repeat ourselves and it gets boring, do you think?' I trailed my fingers over one perfect breast.\n\n'When you find the person you're meant to be with it's always the same and always different. Genetics, luck, fate, call it what you like. You don't keep on looking for your keys once you've found them. Our children are going to be stupendous though.' I'd never thought I'd say those words at all, let alone so casually. She rolled over in a flash and stared at me.\n\n'Our what?' She looked ready to throw her pills away on the spot.\n\n'Not for a while, sweetheart. We've got a lot of other stuff to do first. But unless we both go mad this isn't going to stop. You know that as well as I do.' She was hugging me hard as I finished, her head burrowing into my neck, warm dampness trickling down my chest.\n\n'My last wish.'\n\nThere's not much to add. Once the words had been said and I'd realized that they were from the heart, the world gained a new, sharp focus, and our relationship deepened even more. Uli's happiness shone through everything she said and did and when she took Angela aside two days later I knew that there was going to be some serious celebrating happening in the Fischer household fairly soon. I lay on the lounger on my patio and listened to their excited voices speaking rapid German, still slightly startled at what I'd committed to. It would work out alright though. Strasbourg isn't far from Munich, Vienna isn't much further, Spain is always here as a refuge and a good place to raise children, as well as being far enough way from central Europe to discourage too many unwanted visitors. Maybe I ought to think more about translation and less about teaching. Translation all happens online now, and there's no racing about. That might offer some stability when the time came. I wondered why I wasn't panicking and looking for the escape hatch, then watched as Angela came onto the patio, naked except for a tray of bread and chorizo and ice-cold beer. Uli followed her, equally nude, carrying cheese and white wine. Nothing to escape from, I decided, as she plonked herself in my lap and kissed me. Nothing at all."
    ],
    "authorname": "satyricon.21",
    "tags": [
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/all-things-come-vol-2-ch-11"
}