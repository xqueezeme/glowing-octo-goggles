{
    "title": "For Love of a Brother Ch. 02",
    "pages": [
        "The summer went by slowly for Andy. Although his recovery was quick and he regained his strength rapidly, it was decided it was best for him to skip summer baseball and wait until spring to play again. He understood the decision, but it didn't mean he liked it. His arguments fell upon deaf ears from all sides concerned, so he dropped it. Serena and Jenny both knew how bad he wanted to play, but even they thought he should wait. He also wasn't allowed to work his summer job, which made his days seem even longer. Jenny was working six to eight hours a day at McDonald's, but they had their evenings and weekends free.\n\nHe had settled into a routine by this time, taking his medications at precise intervals and having his blood checked regularly. He was now getting his blood drawn only once per week, down from every other day when he was allowed to go home from the hospital. His chemistry levels continued to hold steady in the normal range as Dr. Venkata slowly lowered his dosage, being extremely careful not to lower them too quickly. Taking pills was not a big deal for Andy. In his mind, anything beat the way he felt before the transplant and he wasn't going to jeopardize rejecting the kidney by not taking his medications. Getting his blood drawn was no big deal, either. It was just another thing he had to do to stay healthy.\n\nBy mid-July, Serena had made a full recovery and was working four hour shifts as a cashier at the local grocery store. Except for the massive scar down her abdomen, no one could tell she was any different. She had been in touch with Sue Griffin, the Indiana University softball coach, several times during her recovery and Sue even visited for a Sunday afternoon, much to Serena's surprise. Serena's thoughts often turned to school and her first year in college. All of her paperwork had been submitted and her enrollment completed. She knew she wanted to major in business, but she had no specific field in mind. She was in no hurry with her decision for she had until her junior year to declare. Going to I.U. tread heavily on her mind, for she knew she would miss her family very much, even though they wouldn't be far apart. \n\nBeing away from Andy would be the hardest thing to overcome. She knew that now. They had grown closer and closer since the transplant and sometimes she wished she had chosen a school that wasn't so far away. But, she knew she made the right choice and she didn't think she would be happy anywhere else, even Ohio State. Still, she knew it would be very hard for the entire family when it was time for her to leave and she wasn't looking forward to that.\n\nTowards the end of July, Jenny celebrated her eighteenth birthday with a small gathering of family and friends. Andy wouldn't be eighteen until September. Andy had no idea what to get her, so he turned to Angie, her mom, for advice. She suggested numerous perfumes, bath oils, and jewelry items and Andy considered them all. He eventually settled upon a necklace, its chain thin and dainty with a gold heart pendant attached. When she opened it, she loved it immediately and had Andy fasten it around her neck.\n\n\"I'll never take it off,\" she said to him once they had a private moment. She kissed him and hugged him and wished they were totally alone. She wanted to make love to him right then and there, but she couldn't. She felt his hardness against her belly and sighed softly, knowing that if the right moment came, she would gladly take him inside her and accept everything he could give.\n\nThey had come close numerous times that summer up until then. It was very hard to keep their hands off each other during those times after they went to the swimming pool or the beach. Jenny was right when she said her bikini was skimpy. All she had to do was take a look at Andy's shorts to know that. The looks from the other guys told her that, too. But, all she cared about was what Andy thought, and he thought she looked awesome.\n\nOccasionally, in private, she would let him slip his hand inside her bra and he would tease her nipples until she was hot, slick, panting, and thinking she couldn't resist too much longer before she would have to remove the rest of her clothes. Fortunately, sanity would return before they went further. Andy couldn't get enough of her breasts and loved the feel of them against his fingers. He thought he had never felt anything so soft in his life. It was only after they returned to their respective houses that they were able to relieve some of the sexual tension they had allowed to go from a simmer to a boil.\n\nIt was around this time when Jenny decided she needed to have a long talk with her mom. Her mom had always told her she could come to her with anything and Jenny decided it was time. It was after supper one hot, sticky night and Jenny asked Andy not to come over. Because he was puzzled, she explained her reasoning.\n\n\"You're going to ask your mom for what?\" he asked, barely able to control his voice. \"She'll go ballistic. Why don't you just announce it to the world that you want to go on the pill!\"\n\n\"Calm down, Andy,\" Jenny hissed. \"She won't be too mad as long as I'm open and up front with her.\"\n\n\"My God, she'll probably tell my parents!\"\n\n\"I don't think she will.\"\n\n\"Geez Jenny, I don't know,\" he said, totally unconvinced.\n\n\"Listen,\" Jenny said, \"I'm not going to make love to you unless I have some sort of protection besides condoms. They don't work.\" She thought back to her mom and dad. They had used a condom in high school and Jenny was conceived anyway. She did not want that to happen to her.\n\n\"Maybe we should forget about it,\" he said quietly. \"Maybe we should just cool it for a while.\"\n\n\"We both know that won't happen. We both know how much we want this. I know how much I want it.\"\n\nOnce dishes were cleaned and put away, Jenny asked her mom to go on a walk with her. Angie raised an eyebrow, but said nothing as they headed out into the steamy evening. Jenny's arms were crossed as they walked for a few minutes.\n\nAs they crossed the first intersection, Angie broke the silence. \"So, what's up?\"\n\n\"I just wanted to talk.\"\n\n\"You haven't said anything.\"\n\n\"I know.\"\n\nThey continued for another block before Jenny spoke again. Looking at her mom as they kept in stride with each other, Jenny asked, \"Do you ever regret getting pregnant with me when you did?\"\n\nAngie tried not to act too surprised at the question as she eyed her daughter. \"I never regretted getting pregnant with you. We were getting married in a few months anyway when I found out. I do wish it had happened a little further down the road after we were married. Why do you ask?\"\n\nJenny shrugged her shoulders and looked down at the pavement. Thoughts of her daughter being pregnant ran through her mind. She and Brad had suspected that Jenny and Andy were having sex, but they never confronted them. They came to a small park and walked amongst the trees before sitting down at a bench. \n\nJenny spoke again. \"You don't have to answer this if you don't want to.\"\n\n\"Okay.\"\n\n\"How many times did you and dad have sex before you got pregnant?\"\n\nAngie sat back, sighed, and thought carefully about her answer. Here it was, she thought, Jenny's pregnant. That's just great! She calmed herself down and thought about the question again. \n\n\"It was never just sex,\" she replied quietly, \"but to answer your question, I think it was about a dozen times or so.\" It was a lot more than that, but she wasn't going to tell her everything!\n\n\"Oh,\" Jenny said, deep in thought.\n\nUnable to restrain herself any longer, Angie asked, \"Are you pregnant?\" \n\nJenny shook her head. \"No.\"\n\n\"Are you sure?\"\n\n\"Mom, we haven't done anything to get me pregnant.\"\n\n\"Oh.\" Angie slumped in her seat, no knowing what else to say. A minute or two went by. \"Is he pressuring you?\"\n\n\"No, not at all, but I think it will happen. We're trying really hard not to, but...\"\n\n\"But what?\" Angie asked.\n\n\"It's getting harder and harder to resist.\"\n\n\"I see.\" Angie's mind was in a whirl. What was this really about? What did she want?\n\n\"I don't know,\" Jenny sighed. \"Did you feel like this?\"\n\n\"Yes,\" she replied. Angie couldn't deny that. She remembered. They stared off into space as a few walkers passed by. \"So, what do you want from me?\" she asked, looking at Jenny directly. \"I certainly don't want you to go to bed with Andy, but I can't forbid you from seeing him. I can see that you love him and he loves you, but I don't want you to make the same mistake we made. You two have so much to look forward to with high school and college. Your father and I didn't have plans to go to college, so it didn't matter in that regard.\"\n\nJenny looked down at the ground for a second before eyeing her mom once more. \"I think what I'm asking is, would it be alright with you if I went on the pill?\"\n\n\"The pill? Jenny, if I let you go on the pill, it would be as if I was giving you permission to go to bed with him. Can't you two wait and think about this?\"\n\n\"Mom, we would have done it many times already if we hadn't been thinking about it. We are trying so hard not to.\"\n\n\"Don't you think it would be better if you two held out as long as possible before you decide about this?\"\n\n\"Were you and dad able to hold out?\"\n\nAngie sighed. \"No,\" she admitted, thinking back their courtship. They had been dating only a month before they began to have a sexual relationship and it was a mutual decision. Angie remembered it being wonderful, too, and she knew what her daughter was going through. She only wished it wasn't happening all over again.\n\n\"I just don't think we'll be able to resist too much longer. We love each other so much, mom. I know he's the one for me. I'm certain of it. I would never even think about making love to him unless I wanted to spend the rest of my life with him.\"\n\nAngie looked at her daughter and produced a small smile. Her Jenny had never been one to act impetuously. Even when she was flighty and boy-crazy, she never acted impulsively and without thought. She believed her when she said they hadn't done anything, but she also believed they would eventually get to that point. She didn't want to give her a license to screw like a bunny anytime the moment hit her, but she sure didn't want to be a grandmother at thirty-seven.\n\nAngie knew Jenny was truly in love with Andy and knew she meant to marry him. What she didn't know was Andy's intentions and she was going to find that out before she gave consent to anything.\n\n\"I know you love him and I'm certain he loves you, too,\" Angie began. \"It wasn't that long ago when your dad and I dated. I know what you're feeling because I went through it, too.\" She took Jenny's hand. \"I don't want you to do this, but I'm not naive enough to think it won't happen. I will let you go on the pill on one condition.\"\n\n\"What's that?\" Jenny hoped it didn't mean telling her dad. She wouldn't have a boyfriend to worry about after her dad got through with him. Then, he'd lock her in her room until she was thirty!\n\n\"I want to talk to Andy about this.\"\n\nJenny was relieved. \"Okay,\" she said. \"What about dad?\"\n\n\"I'll take care of him,\" Angie said, \"but he'll have to know eventually.\"\n\n\"Why does he have to know?\"\n\n\"Because no matter how good a job you do with hiding them, Melissa will snoop and find them. You know that and I know that. It's better if he's told before he hears it from her.\"\n\n\"But mom,\" Jenny cried, \"he'll kill him!\"\n\n\"No, he won't, Jenny. I'll talk to him. He has to be told.\"\n\nAnd so, it came to pass a week or two later. Angie had a long talk with Andy one Saturday afternoon when Brad and Melissa were away. Although he was extremely nervous about the meeting, he relaxed soon after he realized Angie wasn't going to skin him. She was frank and honest with him, asking him pointed questions and making sure he understood his responsibilities should Jenny become pregnant. She reiterated to him that she was not giving them permission to have sex, but understood the circumstances. They talked for well over an hour before Angie was satisfied.\n\nAs they finished, Angie hugged him, thinking he was very mature for his age. She almost thought of him as a son at that point and was certain he would be her son-in-law eventually.\n\nJenny saw her gynecologist and with her mother's signature, she was given her first cycle of birth control pills. Now came the tough part, telling her father.\n\nAngie took him on a walk, basically using the same route she and Jenny had used just a few weeks prior. She brought up the subject gingerly, and slowly told him the truth. He didn't erupt as she had feared, but merely sighed deeply. They sat down under a tall, beautiful maple and watched squirrels frolicking around the trunks of the other trees that were nearby.\n\n\"We thought they were screwing around anyway, didn't we?\" he said gruffly.\n\n\"Yes, we did.\"\n\n\"She says they're not?\"\n\n\"That's what she said and I believe her.\"\n\n\"I don't know,\" he sighed. \"The thought of them....him....damn.\" He shook his head.\n\n\"Try to remember what it was like with us. Just for a minute, just remember all those times at your brother's apartment after school,\" Angie said.\n\n\"I couldn't wait to get inside your pants,\" he laughed. He remembered how breathtakingly gorgeous she was when she was naked. And she looked even better now. He still couldn't wait to get into her pants.\n\n\"And I couldn't wait to have you inside me.\" She touched his arm. \"At least she came to us and was honest about it.\"\n\n\"That's true, but I still don't like it.\"\n\n\"Do you think I do? But, I would rather see her on the pill than coming to us with a bun in the oven.\"\n\n\"We couldn't stop them if we wanted to,\" he admitted. \"I think they're more in love than we were.\"\n\n\"I don't think so,\" she laughed, \"but they're close.\"\n\nBrad stood up and reached back for his child bride, gently pulling her up to him. \"I think I need to have a talk with that daughter of mine.\"\n\nWith that, they walked arm in arm back to their house.\n\n* * * * *\n\nAs the end of August neared, thoughts of school began to trickle through their heads. They still hadn't made love, but the urgency wasn't quite as strong as it had been. Perhaps it was because Jenny was on the pill and they knew they could maybe just let the moment happen instead of plan for it. Brad had his talk with Jenny, but never talked to Andy. He simply didn't trust himself not to say the wrong thing and lose his temper. He was always cordial to him, but it was a slightly strained atmosphere whenever Andy and Brad were together.\n\nThe swimming pools and lakes were close to closing down for the summer when Jenny and Andy went to the beach for one last time on the last Saturday in August. It was a hot, steamy day when even a dip in a pool or lake wasn't quite as refreshing as one would hope. Nonetheless, they played and swam amongst the other people who were there, enjoying the water and being together in the warm sunshine. \n\nThey had brought along a picnic basket of peanut butter and jelly sandwiches, chips, and cokes. Always in a semi-aroused state whenever she was in her bikini, his eyes opened wide when he caught a glimpse of her nipple as she relaxed next to him, her hand supporting her arm.\n\n\"Nice view,\" he winked at her, pointing to her exposed nipple.\n\nJenny looked down, smiled, but made no move to conceal it, noting there were no other people around them. She didn't mind him seeing it and liked the expression on his face. Noticing the growing bulge tenting out of his swim trunks, she looked around to see if anyone was watching. No one was, so she quickly reached over and grabbed his penis and gave it a playful tug. They had sometimes did some touching below the waist, but always with clothes on. Jenny remembered almost having an orgasm once as he was hitting a good spot, but Melissa interrupted by coming down the stairs.\n\n\"Something's getting excited,\" she giggled. Although she had never actually seen it, she guessed it to be a pretty good size.\n\n\"Hey,\" he jumped, very surprised. He looked around, but saw no one watching, either. \"You better be careful or I might have an accident.\"\n\n\"I wouldn't mind seeing that,\" she winked. She reached over and tugged on it again.\n\n\"Hey, come on Jenny, not here,\" he said. He loved her playfulness, but he didn't want them getting in trouble.\n\nJenny laughed and laid on her back, her stomach flat and her nipples pushing through the wet, blue bikini bra. She had wonderful nipples, as Andy had found out, nipples that were the size of a small eraser and quickly became firm from his touch. She saw him staring at her and smiled. He moved over her and began to kiss her lightly, starting at her nose and ending at her lips. She loved his soft kisses as the tingles began to invade her body. His kisses always drove her crazy! Her body started to respond as she turned to him, her one shoulder off the blanket as she reached around him with her free arm.\n\n\"We need to find someplace a bit more secluded,\" she whispered breathlessly as they came up for air. Andy nodded and they began to pack for their return trip.\n\nWhen they got back to Andy's house, no one was home. There was a note on the fridge saying they had gone out shopping for luggage and school stuff for Serena. She was moving into her dorm the next day and the whole family was going to help. The note said they would be home around four. Andy checked his watch and it was about two-thirty. They put the food away and headed upstairs to his room. They knew they didn't have time to make love, they didn't want to rush that, but they could make out or get a little more daring if they chose.\n\nThey stood by his bed for a few seconds before they sat down and began kissing. Jenny was wearing a t-shirt and thin, cotton shorts over her suit while Andy still had his suit on with a tank top. Laying side by side, their hands roamed freely without any inhibitions or fears of being caught. Andy's hands were soon underneath the shirt and gently squeezing her left breast through her bra. She sighed contented as she continued to kiss him, her thighs rubbing together slowly. Soon, his hand moved aside the cloth and his fingers found her already hardened nipple. Jenny squirmed at his touch as her breaths came quicker. She reached down and began to pull on his penis through the cloth of his suit.\n\nThis continued for several minutes before she let go and moved her hand to his waistband. \"I want to touch it,\" she said quietly. Wordlessly, Andy eased away from her and untied the drawstring, pulling the waistband loose from his body. Jenny gently put her hand back under and found what she was looking for. Her hand enclosed around the head of his penis and Andy jumped slightly from her foreign touch.\n\n\"I didn't hurt you, did I?\" she asked.\n\n\"No,\" he managed to say. Her hand felt fantastic as she moved it about the head. \n\nShe could feel the slippery juices at the tip and knew instantly he was getting very excited. With her free hand, she unbuttoned her own shorts and opened them. She took his hand and placed it near the edge of the bikini bottom.\n\n\"Go ahead,\" she said.\n\n\"Are you sure?\"\n\n\"Andy, if we had the time, I'd be totally naked by now. Please touch me,\" she pleaded. Reassuringly, she pressed his hand underneath the thin cloth as she continued to play with him.\n\nHe moved his hand forward and soon found the beginnings of her pubic hair, fine and soft to his touch, not coarse and bristly like his own. Jenny gave out an audible sigh as a shiver escaped her. She smiled dreamily and Andy took that as a good sign as he pushed further down. Tremors of pleasure went through her when his fingers touched her hooded clitoris. \"Right there,\" she gasped, \"rub there.\" She held his hand to that spot as he started to move his fingers over it. He could feel her wetness as she spread her legs to allow him easier access.",
        "It was but seconds later when he couldn't hold back any longer. Jenny could feel it pulsing before it began to gush its warm, sticky fluid. Andy groaned loudly as his sperm soaked Jenny's hand and the inside of his swim trunks. When he finished, she withdrew her hand and was amazed. It was actually dripping off her hand and onto the bed. Tentatively, she licked one of her fingers. The taste wasn't too bad, not like some of her girlfriends had described it.\n\nAndy was breathing heavily and looking at her as he started to play with her again. Jenny wiped the rest off on his blanket and began to concentrate on what he was doing to her. She wriggled her shorts and bikini bottoms to her ankles and showed herself to him for the first time. At first, he was mesmerized by the sight. Yes, he had seen pictures of naked women before, but this was something to behold. Her blond pubic hair was very light in color, thin and wispy, and very soft to the touch. Her inner thighs were toned like the rest of her legs, but her skin was silky soft. He looked at the tender folds of skin that lined both sides of her vagina and then to the point where her protruding clitoris lay. His penis, which had just covered Jenny's hand with sperm, was twitching and starting to grow again. Jenny laid back and opened her thighs for him as he continued rubbing her. It wasn't long before her whole body began to tremble as the pressure kept building up towards its release.\n\nSuddenly, Jenny pitched forward and let out a scream as the first wave went through her. It hit her many times stronger than when she ever pleasured herself. Each wave wracked her body like never before as her thighs clamped around Andy's hand as he looked on in amazement. He had never seen anything like it and wondered how much was pleasure and how much was pain. Jenny's face was contorted and turning red from the exertion. After about ten seconds, the initial hard spasms subsided and were replaced by smaller, gentler waves.\n\nShe relaxed her thighs and Andy pulled his hand away, still staring at her naked beauty. Now he knew how the power of sex could take over a man. He wanted nothing more than to see her naked all of the time from that point on, and he couldn't wait to see what it would feel like to have his penis in between her sweet folds of skin. Jenny was gently rubbing herself, basking in the afterglow of her orgasm. It was, by far, the strongest one she had ever had and she knew it was because he had done it for her.\n\n\"You are so pretty,\" he said as he looked at her from head to toe.\n\nJenny smiled at the compliment and reached for his waistband. \"I want to see what this thing looks like.\" Andy pulled down his trunks until his now hard penis bobbed over the waistband. Jenny gulped when she saw it. It wasn't real long, maybe seven inches, but it was thick in circumference. Whenever they did make love, she thought, it was definitely going to be a tight fit. The flesh between her legs twitched at the thought of it.\n\nThey kissed for a few minutes before they cleaned up and got dressed again. They didn't want to push their luck. Andy switched into jeans and a t-shirt before they left. Jenny still felt tingles between her thighs as they went downstairs and outside to his car when he took her home. They talked little, but held hands throughout the short drive. The understanding was quite evident between them although it was unspoken. The bond they had built over their courtship was getting stronger and it was only a matter of time before they would be bonded in the flesh as well.\n\nThe next day, Serena was sad, nervous, and excited as they drove to Bloomington. She would be rooming with someone whom the athletic department picked for her. All female students on athletic scholarships roomed in the same dormitory called Anderson Hall. Serena hoped she'd like her, whoever she may be.\n\nSerena glanced over at her brother and he seemed to be in a pretty good mood as he poured over a large book on his lap. He had been unusually mischievous the previous evening, playing jokes on her and teasing her unmercifully. She appreciated his efforts to lighten her mood, but she was too deep in her own thoughts to joke back with him. This didn't stop him, of course, as he continued to gently prod her from time to time. They talked into the early morning after their parents had gone to bed. He told her about him and Jenny fooling around in his bedroom and she was surprised, not by the fact of the matter, but because he was usually pretty reticent to discuss his love life with her. Like Jenny's parents, Serena already thought incorrectly that they were having sex. How could she know any different up until then? Sex was one of the few subjects he never discussed with her. She didn't pass judgment, but merely cautioned him and hoped they were being careful enough to avoid pregnancy. \n\nAfter he had gone to bed, she sat and thought about her brother's relationship with Jenny. Although she wished him all the happiness in the world, she couldn't help but feel a little jealous. She hadn't dated anyone in almost a year and it was beginning to bug her. She thought she was attractive enough. She had many male friends, just no steady boyfriend. It puzzled most of her close friends, too. Many people would say she was quite pretty, seeing her dark brown eyes and her sharp facial features. She was a bit heavier and more muscular than girls her height, but she looked trim, cut a sexy figure in a bathing suit, and was in great shape. Going to college would be a whole new experience for her in all regards, including dating, and maybe she would find someone special like her brother did.\n\nHer parents seemed unusually quiet and to themselves that morning. Diane tried to start a few conversations with Joe, but they died quickly soon after they were started. Joe had nothing to say and nodded from time to time when his wife spoke, but he was more comfortable keeping his eyes on the road than indulging in conversation.\n\nBy midday, they reached the university and her dorm. They were parked a block away, but they began to unpack Serena's belongings and helped her move in. The room wasn't too bad in size. It was big enough for two twin beds, two desks with chairs, two book cases, good closet space for both, and a full bath with a shower.\n\nSerena met her roommate, a tall vivacious redhead named Christy Lothian who was on the volleyball team. She greeted Serena warmly and promised to show her around once she settled. Christy had gotten in earlier that morning and had all of her things put away. She was from Gary, Indiana. Her brother had graduated from Indiana and her sister was a senior, so she knew the campus very well and all of the good places to hang out. Serena liked her immediately and it looked as if they were off to a good start.\n\nOrientation for the students and their parents would not be until the next day. When it got to be two o'clock, Diane, Joe, and Andy left Serena to go to their motel to get checked in, leaving Serena with Christy, who had returned.\n\n\"Are you hungry?\" Christy asked after everyone had left.\n\n\"\"Starving,\" she replied.\n\n\"You got your meal ticket, didn't you? It should have been with all of your orientation stuff.\"\n\n\"Yeah, I got it.\"\n\n\"Well, grab it and I'll show you the cafeteria.\"\n\nThey went to the cafeteria, found an unoccupied table and sat down to eat their lunch. While they ate, they got to know each other a little bit. Christy had been second team all-Indiana in volleyball her senior year and was majoring in pe-law.\n\n\"I'll be the tallest female attorney in the state!\" she laughed. When Serena rattled off her awards, Christy was amazed. \"Why did you come to Indiana? You could have gone to Texas, UCLA, Oklahoma, or any other great softball school. Why here?\"\n\n\"I just wanted to be close to my family,\" Serena explained.\n\n\"That was your brother, right?\" she asked.\n\n\"Yes,\" Serena nodded.\n\n\"He's cute. Is he taken?\"\n\nSerena laughed at the question. \"Very much so.\"\n\n\"Why do you laugh about it?\"\n\n\"Let's just say that if they weren't still in high school, they'd probably be married by now.\"\n\n\"Wow!\" Christy exclaimed. \"That's pretty serious.\"\n\nThey chatted about different things, but mostly about sports, music, and boys. Serena found out very quickly that Christy was slightly boy crazy and wasn't afraid to admit it. \n\n\"It's so hard to find someone who can get past the fact I'm taller than he is,\" she lamented.\n\n\"How tall are you?\" Serena asked.\n\n\"Six foot three.\"\n\n\"Yeah, that's pretty tall.\"\n\n\"It seems the only ones who ever showed any interest in dating me were one or two of the basketball players. That narrowed down the field, if you know what I mean.\"\n\nSerena looked at her roommate for a second or two. Christy certainly wasn't a beauty, but she wasn't bad looking, either. She had very pleasant features and Serena thought she wouldn't have trouble finding dates. \"It looks like we'll have to help each other find the right guy,\" Serena commented.\n\n\"Sounds great to me. I'll need all the help I can get,\" she laughed.\n\nAfter they finished, they went back to their room where Christy had Serena show her class schedule to her. For the next hour or so, they toured the campus, bookstore, and the buildings where Serena would have her classes. They checked out the laundry in the dorm, plus the game room and all of the other things. By the end of the tour, Serena was confident she would find her way around without any trouble.\n\nBy the end of the day, Serena was exhausted and wanted to do nothing but crawl into bed and sleep, but being in a strange bed with a new roommate made that difficult. However, sleep eventually did overcome her and she slept fitfully for her first night in college.\n\n* * * * *\n\nFor the first few weeks after Serena was in school, the whole Burleson household had problems adjusting. Even though Andy had Jenny to keep him occupied, he missed Serena a lot. He never realized how much time they spent together, especially at night before they went to bed. Several times, he'd forget and wander into her empty room to talk about something that happened that day, only to realize his mistake. He wrote her a few letters to help him think she was near, mostly humorous ones to mask his pain. Sometimes, he would simply sit in her room for a few minutes and look at all of her awards and trophies and wish she was there.\n\nFor her part, Serena was too busy during the day to think about how much she missed her family. That usually happened at night when things had calmed down and her studies were completed. Although she was taking only fifteen credit hours that semester, it was more than enough to challenge her. She thought about her parents and Andy quite a bit, and like Andy, she missed their talks, too.\n\nChristy was turning out to be a pretty good roommate and friend. They were both on the same page when it came to studying; both thought of themselves as students first and athletes second and they took their studying very seriously.\n\nOne unusually warm night, Christy came into the room to find Serena in a crop top and shorts and it was the first time she had seen the scar.\n\n\"What in the world happened to you?\" she asked, pointing to Serena's abdomen.\n\n\"Oh, I lost a kidney,\" Serena said, smiling and thinking of Andy.\n\n\"That must have been awful. What happened, if you don't mind me asking?\"\n\nSerena proceeded to tell her about Andy's illness and the subsequent transplant.\n\nWhen she finished, Christy sat back and whistled, \"Girl, you are something else. He's lucky to have you for a sister.\"\n\n\"I think so,\" Serena laughed.\n\n\"Weren't you scared?\"\n\n\"Terrified.\"\n\n\"Then why did you do it?\"\n\n\"I couldn't stand seeing him sick like he was,\" Serena explained. \"My parents would have gladly given him one of theirs, but I was the best match and it was a pretty easy decision for me.\"\n\n\"Wow. Like I said, you are something else.\"\n\nThey had both settled into a routine by then and rarely did they get on each others nerves or disturb the other when study time was needed. Serena found that sometimes the dorm was too noisy for her to concentrate, so she would head over to the medical library where church mice were known to be kicked out for disturbing the med students.\n\nOne such night before an accounting exam, Serena lost track of the time as she was trying to make a balance sheet come out right. She had been working on it for almost an hour and she was frustrated at her inability to figure out why it was wrong.\n\n\"Ma'am?\" a quiet voice said to her left.\n\nIrritated and her concentration broken by the intrusion, Serena hissed in the general direction of the voice without bothering to look, \"Yes?\"\n\n\"The library closed a few minutes ago. Didn't you hear the announcement?\"\n\nSerena glanced at her watch and was surprised to see it was after two o'clock in the morning. She had been studying so hard that she indeed did not hear the announcement. \"I'm sorry,\" she said, looking at the student who belonged to the voice. \"I guess I didn't hear it.\" She turned off her calculator and began to gather her books and notebooks.\n\n\"That's okay,\" he said. \"I just thought I'd let you know before we got locked in.\" He had a drab green back pack slung over his shoulder.\n\nSerena glanced his way as she finished packing. He was still standing nearby waiting for her. He was tall and thin with curly black hair and wire rimmed glasses. He wasn't much to look at, Serena thought, but he seemed nice enough. She did notice he had a nice smile, though.\n\n\"Do you study here often?\" he asked as they left the building and into the steamy Indiana morning.\n\n\"Only when the dorm's too loud,\" she replied.\n\n\"Which one?\"\n\n\"Anderson.\"\n\n\"Oh, the jock dorm,\" he mused, as if it were some private joke that only he was privy to.\n\n\"Is there something funny about that?\" she asked, a bit irritated as being referred to as a \"jock\".\n\n\"No, not at all,\" he said quickly. \"I just didn't think of you as being an athlete. We never see them in the medical library.\"\n\nThey walked a few more seconds before Serena asked, \"Where's your dorm?\"\n\n\"McCauley.\"\n\n\"Isn't that over there?\" she asked pointing behind her.\n\n\"Yes, it is,\" he replied. \"I thought I'd walk you back and make sure you got there okay. It's pretty late,\" he added.\n\n\"I'll be okay. I don't anyone protecting me.\" She looked at his thin frame and didn't think he could defend himself against her, let alone anyone else.\n\n\"But, I know karate, judo, and a few other Japanese words,\" he replied, grinning. \n\nAs tired as she was, Serena smiled at his joke. He liked her smile. The campus was eerily quiet that morning. She had never been up that late studying before and it was a bit weird for her. Once she thought about it, she was glad to have some company.\n\nWithin a few minutes, they reached the entrance to Anderson Hall. \"Thanks for walking with me,\" she said before heading to the door.\n\n\"Maybe I'll see you in the library again sometime,\" he said quietly.\n\n\"I'm sure you will.\" She hesitated for a moment. \"What's your name,\" she asked, \"or should I just say 'hey you' next time?\"\n\nThe thin student smiled and said, \"Sergei Federinkov.\"\n\n* * * * *\n\nThey saw each other a few other times in the library in the next couple of weeks, but they studied separately. If he had the chance, he made it a point to walk her to her dorm, no matter if it was early or late. If she finished before him, she wandered over to see if he was ready to leave and would wait for him if he was almost through. Serena learned he was a junior, a pre-med major, and he did indeed know karate and judo. In fact, he showed he some pictures of himself during various tournaments in which he participated. His body reminded her of a tall Bruce Lee, very lean, but muscular.\n\nSergei hailed from Springfield, Illinois and planned to return there upon his completion of medical school and his residency program. His grandfather had been an Imperial Guard in Czar Nicholas II of Russia's army before Lenin and the Bolsheviks took over. He fled the country before the Czar's murder and settled in Chicago.\n\nSergei liked Serena from the start and had seen her once or twice before their first encounter. It was then when he decided to drum up his courage and approach her. Serena didn't go to the medical library every night, but it became much more frequent than before. Christy wondered about her new study habit, but didn't say anything. She just figured Serena was having troubles studying in their room. Serena had no romantic feelings towards Sergei, but she enjoyed his company as a friend. In a letter to Andy, she told him about their friendship in a general way and Andy didn't read anything into it. He was simply glad she found some male companionship.\n\nDuring the last weekend in September, Serena came home for the first time since school had started. Although it was a short stay, it was good to have her home. It felt a bit strange to her to sleep in her own room and bed again, but she adjusted quickly. She and her parents caught up on everything they hadn't discussed in their letters, including Sergei, and of course, Serena and Andy stayed up late every night talking.\n\nSerena was relieved to hear that Andy and Jenny had not had any more interludes since before she left for school. She was scared Jenny would become pregnant and didn't want that to happen to either of them. Andy assured her they would be very careful and that Jenny was on birth control, but she still worried.\n\nAndy asked about Sergei, but Serena offered no more than what she had written previously. She described him in more detail, but insisted they were merely friends and she wanted to leave it that way for the time being. He hadn't asked her out for a date or even to meet for lunch, so she figured the feeling was mutual on his side. As much as she wanted a real boyfriend, Sergei filled a void in her personal life and she was happy with that.\n\nBecause she was in school, she missed his birthday, which was on the twenty-first of the month. So, while she was in town, they had a small party for him with just family and a few friends, including Jenny. Serena gave him an Indiana University baseball tee shirt and ball cap, which he loved.\n\nHis parents gave him an expensive pen and pencil set plus one hundred dollars in cash, for which he was very grateful. Jenny gave him a Cleveland Indians tee shirt and a silver necklace with an Indians pendant attached. He liked that very much as well and gave her a huge hug as a thank you.\n\nAfter everyone had left, Andy took Jenny home to a dark house. It was late and everyone was in bed. They sat in her driveway for a while, talking and kissing.\n\n\"You are my best birthday present,\" he said as he stared at her.\n\n\"Oh really?\" she asked coyly.\n\n\"You know that.\"\n\n\"Show me, then.\"\n\nAndy laughed and began kissing her again. A few minutes later, they came up for air and decided to call it a night. Andy always hated to leave after spending time with her, but she had to work the next day and needed to get to bed. They kissed again at her door before they said their final good night.\n\n* * * * *\n\nThe changing of the season saddened Jenny as she looked out her window that crisp October morning. She was never a cold weather person, preferring the warmth of summer to the coolness that invaded the Ohio country every fall. While she did appreciate the turning of the leaves, she wished she lived in California or Florida or someplace where it was warm all of the time. But then, she thought she wouldn't appreciate the spring and summer as much as she did when they arrived.\n\nShe sighed and thought about the previous evening with Andy. They had come close to making love, but time curtailed any thought of getting naked. Wild thoughts of pretending to go out on a date, and instead, renting a room went through her mind. But, as she thought about it more rationally, she dismissed it. They had a wonderful evening in her basement listening to the stereo and fooling around a bit. Her parents and Melissa had gone out for a short time, but they didn't seize the opportunity to make love. However, his hands and fingers brought her to a very satisfying climax.",
        "When he left, she couldn't help but toy and play with herself while in bed. She even thrust two fingers inside herself, which she rarely did. She imagined her fingers being his penis and that sent her over the edge as wave after wave went through her. She had to bite her lip to keep from yelling. Jenny had always been a sensual girl before she and Andy began dating, never afraid to masturbate in bed or in the shower, but since they started to become intimate, she wanted and needed his special touch more and more. When she couldn't have it, her own hand had to take its place.\n\nJenny wished they could find a few hours when they knew for sure they wouldn't be caught or interrupted. She wanted their first time to be special and without any fears or thoughts of anyone else. She didn't want to have to rush it, but she wanted to take it slowly and let everything flow naturally. Jenny wanted to love him and be loved in return. She never tired of being around Andy and her heart leapt whenever she saw in school or at one of their houses. Their dates were never fancy or out of the ordinary, mostly just going to the movies or the mall or hanging out at one or the other's house. Andy had a weight set in his basement and Dr. Vekata had given him permission to begin weight training as long as he didn't strain his abdominal area during his workouts. Jenny trained with him at times and enjoyed the exertion. She could feel herself getting stronger and more toned and was beginning to like the way she was looking.\n\nA few weeks later, Diane approached Andy one afternoon before supper. He was in his room studying for an English test and almost didn't hear her come in.\n\n\"Andy?\" she said after she knocked. Andy turned quickly to his right and saw her.\n\n\"Yeah, mom. What's up?\"\n\nShe came in and sat down on his bed. \"You know your father and I are celebrating our twentieth anniversary this week.\"\n\n\"Yeah, I know,\" he answered. He had gotten them a gift certificate at their favorite restaurant.\n\n\"Well, we were thinking about going away this weekend, leaving Friday and coming back on Sunday.\"\n\n\"Okay.\" Them going away for a day or two was nothing new. They had been doing it once or twice a year for the past few years.\n\n\"We kind of hesitated doing this because you would be by yourself for a few days.\" No, I won't, he thought to himself.\n\n\"It's all right. I don't mind,\" he said.\n\n\"You've been doing so well since the transplant. That's why we were thinking about it.\"\n\n\"I'll be fine. You won't have to worry. I'll be hanging out with Jenny most of the time, anyway. Knock yourself out and have a great time,\" he smiled. Hopefully, we'll both be doing the same thing, he said to himself.\n\nDiane smiled back. \"Good, I'll have your dad make the reservations. It'll be so nice to get away for a few days,\" she said wistfully. She stood up and began to walk to the door. \"You're sure you'll be okay by yourself?\" she asked as she turned back to him.\n\n\"I'll be fine,\" he assured her.\n\n\"Okay,\" she said and then left the room.\n\nAndy didn't know what to think. He wanted to tell Jenny right away, but thought better of it. He wanted to wait until he knew for sure they were going to do it. The one thing he didn't want to happen was to tell her they were leaving, then having them change their mind and not go anywhere. Heck, he might even wait until they were out the door before telling her. What a surprise that would be for her.\n\nThe thought of being totally naked with her and actually making love to her excited him in more ways than one. He had not seen her totally unclothed from head to toe before, only parts from time to time. Andy hoped she wasn't going to be on her period in the next few days. That would really stink. She never discussed that part of her life with him. Andy suspected she felt uncomfortable talking about such things with him.\n\nHe pushed aside his homework for the time being and thought about the possibilities that lay ahead. Friday night would probably be the best time, he thought. She would have to work Saturday for eight hours and Sunday for four more. He could take her out to dinner and then go back to his house, or they could skip dinner altogether and go straight to the fun. Andy smiled to himself as he thought about Jenny again. He had always heard and read that girls were usually reluctant when it came to sex and losing their virginity. He certainly couldn't say that about Jenny. She had been wanting to go to bed with him for quite some time now and was very disappointed they hadn't. Andy found it odd, but he definitely didn't argue about it. Of course he wanted to go to bed with her. What guy wouldn't? But with him, it went much deeper than that and he knew it. He was truly in love with her and wouldn't make love to her otherwise.\n\nWould their relationship change if they did? He didn't know, but if it did, he felt it would be for the better, that their love would be even deeper than it already was. That, he wholeheartedly believed to be true. With each step they took, things had only gotten better and he saw no reason for this to counteract it. To them, it was just a natural progression in their relationship and they knew it was the right thing to do.\n\n* * * * *\n\n\"Well, he finally did it,\" Serena said to Christy as she came into the dorm room after an evening at the library.\n\n\"Did what?\"\n\n\"Sergei asked me out.\"\n\n\"You're kidding.\" Christy had seen him once or twice and had not been impressed.\n\n\"Yeah. He asked me to go to the game with him Saturday.\" They were going to go to the box office the next and get tickets together since it wasn't a sellout. Indiana football wasn't exactly the hottest ticket in town.\n\n\"Who're they playing?\"\n\n\"Northwestern, I think.\"\n\n\"Figures.\"\n\n\"What are you talking about?\"\n\n\"He could at least have asked you to go to the Ohio State game or the Michigan game.\"\n\n\"Come on, Christy. I know you don't like him, but he can't ask me out according to their schedule.\" Serena was always puzzled as to why Christy didn't like him.\n\n\"I never said I didn't like him,\" Christy replied. \"I just think as pretty as you are, you could find someone a lot better looking than him.\"\n\n\"Maybe I could, but I like him. He reminds me of my brother a little bit.\"\n\n\"Your brother's a lot better looking than Sergei.\"\n\n\"I didn't mean his looks,\" Serena replied. \"I meant his personality. He's real quiet, reserved, and soft spoken like Andy. I like that in a guy. Looks aren't everything. They've never been a big deal to me and they never will.\"\n\n\"Well, he's your date. I, on the other hand, am waiting for you to find me my Prince Charming, the one who will sweep off my feet.\"\n\n\"You didn't find Sergei for me. Why should I help you? Besides, I haven't found anyone desperate enough yet.\" Serena smiled sweetly.\n\n\"Bitch!\" Christy laughed. \"See if I help you again.\" \n\nSerena laughed along with her. She went to her desk and put her books away. Sitting down at her desk, she wrote a letter to Andy and one to her parents relating the week she was having and her upcoming date. In her parents letter, she wrote in generalities, but with Andy's, she went into more detail. She was starting to like Sergei more and more. Granted, they had only known each other by walking together short distances from the library to her dorm, but like she said to Christy, she liked his personality and demeanor. Besides, she could get to know him better by going to the game with him.\n\nAfter an hour of writing, Serena sighed and put everything away. Christy had already gone to bed and was sound asleep. When she was finished using the bathroom and brushing her teeth, she settled under the covers. A strong wind was blowing outside their window that evening as a storm was on its way. Serena didn't care for storms much and they usually meant a restless night of sleep for her, but she was tired and she hoped she would be dead to the world before it hit. Rolling onto her stomach, she was soon asleep as the winds howled all around.\n\nAs Friday arrived, Jenny was restless as she waited for Andy to pick her up. She always looked forward to dates with Andy, no matter what they did or where they went. It could be just going for a drive or taking a walk. She didn't care. Being with him was all that mattered. As she waited for him to pick her up, she wondered what he had in mind. She really wasn't in the mood for a movie and they weren't going to McKinley's football game, so she had no idea what he wanted to do. Sometimes, he would just ask her and she would make the decision and that was okay with her as well.\n\nWhen he did show up, he had a mischievous grin on his face. He talked briefly with Jenny's parents and her sister before they left. As he let her in the car, she asked, \"What are we doing tonight?\"\n\n\"I'll tell you in a minute,\" he said as he shut her door.\n\nWhen they were out of the driveway and driving away from her house, he said to her, \"I've got a surprise.\"\n\n\"What is it?\" she asked. Jenny liked surprises and Andy was sure she'd love this one.\n\n\"What would you say if I told you my parents are gone for the weekend and we have the house to ourselves?\"\n\nJenny blinked and looked at him as if she didn't hear him correctly. \"You're kidding,\" she said.\n\n\"Nope,\" he replied. \"Their anniversary is tomorrow and they wanted some time alone with each other. They went to Cleveland and booked a room at the Holiday Inn. They'll be gone until Sunday.\"\n\n\"Oh my God,\" Jenny said softly, still not totally believing him. It was finally going to happen for them. She trembled at the thought.\n\n\"So, where do you want to go?\" he grinned.\n\n\"Your house, and quickly,\" she replied.\n\nThey arrived at his house within a few minutes and they went inside and up to his room. He closed the drapes in his room and turned on his light. They stood facing each other, both a bit nervous at what was about to transpire. Jenny made the first move as she went to him and began to kiss him, holding his face in her hands as she did so. Jenny could feel his hardness pressed against her. She let one hand fall from his face and glide down to rub it against him through his jeans. A slight groan escaped his lips as her kisses and the anticipation of seeing her naked was almost unbearable.\n\nThey broke their kiss and undressed quickly. She now stood in front of him, her nipples aroused and pushed out. Seeing her completely naked for the first time took his breath away as he stared at her in fascination. In her eyes, he looked great, too. The workouts he was doing was paying off and she could start to see definition in his muscle tone. Of course, she saw his thick, erect penis bobbing in front of his groin and had to resist licking her lips.\n\n\"You're absolutely gorgeous,\" he said softly as his gaze traveled up and down her body.\n\nJenny blushed and giggled. \"I'm a little nervous about this,\" she said. She went to him and pressed her hand to his hardness, feeling the wetness surrounding its tip. \"But, we might as well get started,\" she added with a laugh.\n\nAndy's hand traveled down the side of her hip to the front as he touched the wispy blond pubic hairs which covered her sex. She opened her legs slightly as he felt between the folds of skin. She was slick and wet and more than ready to begin. Jenny felt like her body was on fire, feeling every little movement Andy made with his hand and fingers as she shuddered and trembled from his touch.\n\nHer hand fell and she pushed away from him gently. Jenny looked at Andy and smiled sweetly. \"I want you,\" she said softly without batting an eye. \"I want you now more than anything.\" She took his hand and led him to the bed.  \n\nJenny laid down first on her back and opened her legs for him. Andy sat on his knees and stared at her, unable to move or speak. This wonderful girl loved and trusted him enough to offer herself to him without reservation. He would never forget the sight of her open like that. No matter how many times they made love, he knew this time would always be the most memorable and the most special. \n\nNot wanting to wait any longer, Jenny reached for him and pulled him to her. With his hands at each side of her head, he positioned himself between her legs. Andy bent forward and kissed her sweetly to let her know he was ready. She reached between his legs and gently guided him forward until his tip was at her entrance.\n\n\"Take it slow,\" she said, her voice a bit raspy. Andy nodded, his breathing was getting faster, too.\n\nHe began to push as her hand was still wrapped around it. Finally, she let go as the tip made it past her entrance. \"Ease off,\" she said quickly, trying to get used to his size. Andy eased back a little and Jenny nodded for him to begin again. Andy began again as sweat beads began to form on his forehead. He didn't know how long he would last since it was their first time. He had masturbated twice before he picked her up in hopes of taking the edge off, so to speak, but he wasn't sure if even that was going to help him now. Taking it easy and going slowly, he let her get used to him. A seconds later, Jenny let out a gasp as he pushed almost totally into her. She stiffened momentarily before realizing they were connected.\n\n\"Oh my God, Andy, you're in,\" she exclaimed. Andy held still and didn't move. Jenny wrapped her arms around him and hugged him. \"I can't believe it! Oh my God!\" She began to cry from the emotion of it. Andy didn't know what to do. Part of him wanted to start, but yet, he didn't know what Jenny wanted. Being inside her felt nothing like he imagined it would.. She was warm, soft, and moist and he could feel the pressure of her vaginal walls surrounding him. It was a very tight fit and he knew he wouldn't last too long. It felt absolutely wonderful.\n\nAfter she got over the initial shock and pain of him being inside, Jenny tried to concentrate on relaxing herself enough to enjoy it. \"I love you so much,\" she whispered in his ear before releasing him. Andy took this as a sign for him to start. Still afraid of hurting her, he began very slowly with his thrusts. Although it hurt at first, Jenny felt her body loosen and begin to respond to his virginal lovemaking. Within seconds, she could feel small tremors began to invade her body as his thrusts became a little faster and more urgent.\n\nTheir eyes met at this point and Andy stopped. The enormity of the moment hit them both and neither could speak. Andy bent down and kissed her again, this time deep and loving. Jenny's hands began rubbing his back as she began to kiss him hungrily, wanting him to continue and empty himself inside her for the first time. Her hands went to his hips, grabbing them and pushing him away from her before pulling him back into her. Andy got the subtle hint and resumed his thrusts with her help.\n\nIt was but seconds later when he felt the telltale signs of the start of his ejaculation process, and there was nothing he could do to stop it. Jenny felt the tenseness and sensed he was near. She didn't care that she wouldn't have an orgasm with him. All she cared was that they were now one in the flesh and no one could ever take that away from her.\n\nShe rested her head on his chest afterwards as their breathing slowed to almost a normal rate. Jenny felt like she wanted to stay that way forever, just lying in his arms against him. Thousands of thoughts ran through her mind, thoughts of what just occurred and thoughts about what had happened between the two of them over the past year. At such a young age, she never thought she would be so totally committed to one person, so in love and wanting to be with that person forever. She never expected it to happen so soon, thinking it might happen in when she was in her twenties or in college or after she graduated. But, she never thought it would happen when she was barely eighteen and so quickly.\n\nAndy held her close and didn't want to let her go. In all of his dreams and fantasies about loving her and making love to her, the real thing was so much better. He would never forget the feeling of being inside her and being joined with her. It was everything he could want or hope for and more. He never counted on the emotional part of lovemaking to affect him as it did, thinking only about the physical part. He now knew the sexual bond his parents shared went much deeper than just the physical act of love. He knew it probably would be the same way for him and Jenny.\n\nJenny sighed contented as she snuggled against him. She could feel his sperm slowly trickle out of her and down her thigh and she smiled at the thought. Andy's hand found her breast and he cupped it lovingly, gently rubbing his finger across the nipple and causing Jenny to shiver slightly from his touch. Jenny giggled softly and placed her hand over his.\n\n\"Shoo fly,\" she laughed as she squeezed his hand. \"If you keep doing this, I may not be able to control myself.\"\n\n\"I wouldn't mind,\" he replied. The thought of loving her again cued his penis to start hardening again.\n\nShe raised her head from his chest, turned to him and kissed him hard, maybe harder than she intended. He didn't mind, though, and drew her to him until she was lying on top of him, her breasts crushed between their bodies. Her golden curls were falling into her face, but she didn't bother to brush them aside. She could feel his erection beneath her and she knew she wanted and needed it inside her once more.\n\nHer round, soft breasts dangled in front of Andy's face when she rose up after breaking their kiss. He raised his head and gently nibbled on each little nub with the tips of his teeth as Jenny squealed from their sensitivity. When he stopped, she scooted back until she was directly over his groin. Slowly and sensually, she began to rub herself on him, moving back and forth stimulating herself as the rim of his penis made contact with her clitoris.\n\nAfter only a few seconds, she could stand it no longer. Raising herself up, she gingerly grabbed him and aimed him towards her own twitching, turgid flesh. When she felt him near her opening, she slowly began to lower herself. Andy gasped slightly as her vaginal muscles enclosed around him once more, its warm moistness surrounding him as lovingly as an infant suckling at his mother's breast. He went in much easier this time, but Jenny grunted slightly from its girth. When he was in completely, Jenny smiled at Andy from above, almost angelically as she waited for his approval to begin. He reached forward and touched each breast that felt so wonderful to his touch. He kneaded them softly and reveled in the way they felt. Andy looked down and saw his dark pubic hair meshed with her blond ones and it was very erotic to him. He could see them joined and he was amazed at the beauty of it. Jenny raised her hips a little bit and he saw her outer lips surrounding his erection, their juices mixed and making it look shiny.\n\nJenny eased back down and then up again and Andy realized it was now she who was making love to him. His hands settled onto her hips as she continued to rock easily, her breasts bouncing sexily from the movement. She closed her eyes and bit her bottom lip lightly as the tremors began again, all the while rocking on him. For once, she was glad she was a catcher as the motion was akin to the way she played her position. When she opened her eyes, she saw Andy watching her every movement. Their eyes met and locked briefly, he urging her to go for it and enjoy it. \n\nAfter a few minutes, she picked up her pace as he was really starting to feel good inside her. Andy sensed her vaginal muscles tightening around him as his own excitement was starting to build as well. Jenny could sense her orgasm building within and she increased her speed even more, causing her breasts to bounce to and fro with abandon. Jenny's body was glistening with sweat from her effort. Soon, her face turned bright red as the first wave slammed through her. She let herself fall down on him as the waves gripped her and sent her through an all-time high. Gritting her teeth, growling, and yelling his name, contraction after contraction went through her. The pressure on Andy was too much to bear as he grunted loudly and let loose with rope after rope of sperm. By then, her waves were starting to subside slightly and she could feel his penis pulsating within her.",
        "With him still inside her, she bent forward and kissed him, her damp hair falling onto his face and tickling his nose. He brushed several strands aside, smiled, and kissed her back. Her hips were sore by now and reluctantly, she let him fall out of her as she moved to his side. Silently, they held and kissed each other and tried to store this memory within their minds forever.\n\n* * * * *\n\nSerena and Sergei met at the library at eleven o'clock for the game. They didn't expect a full house at the stadium, but they wanted to get there early anyway. Northwestern was not supposed to give the Hoosiers much difficulty that day and Serena hoped for a win.\n\nAs she found out, Sergei enjoyed football, loved basketball, and liked sports in general. He had played a little basketball in high school, mostly second string, and became acquainted with martial arts as a youngster. His parents thought he needed more discipline in his life and felt this would steer him in that direction. Sergei liked it immediately and found he had great hand-eye coordination necessary for the moves and techniques involved. He was a black belt in both karate and judo, but he wanted to get better so he could become a master. Sergei didn't appear all that interested when Serena told him about her high school softball days and why she decided to enroll at Indiana. It irritated her a little bit, but she decided to let it slide and not worry about it. She thought perhaps he didn't care for softball as much as other sports.\n\nThey cheered and yelled throughout the game whenever Indiana scored, which was often. They won easily 30-0 and as they thought would happen, only about thirty-five thousand bothered to show up.\n\nAfter the game, they strolled around the entire campus, enjoying the crisp, cool October air. Others seemed to have the same idea as there were many students outside. When it was time for supper, they went to a sandwich shop inside the student union. They talked only about general things, much to Serena's dismay. Whenever she tried to go a little deeper and try to find what made him tick, he would either clam up or change the subject. She was even more puzzled by the fact that he seemed either bored or disinterested whenever she tried to talk about herself. Serena thought he might want to get to know her a little better, but apparently that wasn't on his mind. He seemed to be a lot different than from the times he walked her back to her dorm. She honestly didn't know what to think.\n\n\"I had a good time,\" she said at the entrance to Anderson Hall. \"Thanks for asking me.\" They had finished their supper a while ago and when the conversation dragged miserably, Serena decided it was time to go.\n\nSergei nodded and smiled slightly, seemingly preoccupied with something else. \"You're welcome,\" he replied politely. \"Maybe we could do it again sometime.\"\n\nSerena looked at him and thought about saying something flippant, but said nothing. Was he messing with her mind or what? If he was as bored with her as he acted, why would he say something like that? Maybe he was just being nice. She had no idea.\n\n\"We'll have to see,\" she finally answered. \"I'm sure I'll see you in the library some more, though,\" she added. She certainly wasn't going to stop studying in a quiet place just because Sergei wasn't quite what she thought he was.\n\n\"Yeah,\" he answered. \"I guess I'll see you there.\"\n\n\"See you later,\" Serena said before she disappeared through the doorway.\n\n\"See you,\" he said as he waved to her before he began his walk home.\n\nFrustrated and a bit angry, Serena trotted up the stairs instead of taking the elevator to her floor. Christy saw the look on her face when she came through the door and knew something had gone wrong. Serena proceeded to tell her about the entire day and Christy listened carefully.\n\nWhen she finished, Serena asked, \"Am I right to feel this way, or am I off base?\"\n\n\"He's weirder than I thought,\" Christy said truthfully. \"I don't know what to tell you.\"\n\n\"The funny thing is,\" Serena said, \"I still like him. He's very nice and polite. I mean, he wasn't rude or anything. I guess he's just not interested in me.\"\n\n\"He's nuts, but it sure looks like it,\" Christy replied. \"Hey, tell you what,\" she said as her eyes brightened. \"Some friends of mine from the volleyball team are having a little get together tonight. We need to let off some steam from last night. Want to come?\" They had played Michigan State the previous evening and got beat three straight games.\n\nSerena knew she had some homework to do, but she could put it off until the next day. Besides, she needed to loosen up and have a good time. \"Sure, why not?\"\n\nA few minutes later, they were ready to go. It wasn't a long walk to the house off campus, perhaps only ten or fifteen minutes, but Serena enjoyed the walk. She always liked fall and the cooler temperatures it brought. As much as she liked spring and summer for playing softball, fall suited her just as well. She truly hated winter and the cold, snowy weather it brought. Sometimes, she kicked herself for turning down scholarship offers from warm weather schools such as Florida State, Texas, and U.S.C. She even turned down the University of Hawaii!!!. She knew she was crazy to do that, but she really wanted to be close to home.\n\nChristy was her normal chatty self from the moment they left the dorm and Serena appreciated it. It was a stark contrast to trying to get Sergei to talk about himself. They reached the white, two-story structure and Christy led her in. There were perhaps twenty people milling around, guys and girls, and loud music was playing from an old stereo system. Christy introduced Serena to seven or eight of her teammates and after that, they made themselves at home.\n\nThere was a keg of beer in the kitchen and Christy offered her a glass. Serena declined, she didn't drink, and looked instead for a soft drink. Finding none, she followed Christy back to the livingroom where most everyone was gathering.  \n\nSerena found she was enjoying herself as the night wore on. The crowd didn't seem to get much bigger, but the beer was flowing and everyone was in a good mood. More than once, one of the guys would sidle up to Serena and engage her in conversation. They all seemed nice enough, but none really appealed to her.\n\nAt around eight-thirty, one of the guys, a bit drunker than the rest, came up to her as she was speaking to someone else.\n\n\"Hey there,\" he slurred. \n\nSerena turned to him and could smell the alcohol on him. \"Hey,\" she said before turning back to whom she was speaking.\n\n\"Hey!\" He said it belligerently, his hand grabbing her wrist. \"I was talking to you.\"\n\nSerena stopped talking and looked at her wrist, then at him. \"Let go of me,\" she said flatly. She wasn't angry, but merely annoyed. She tried to turn her wrist to wrench free, but he had a strong grip.\n\n\"Hey Mark,\" Christy said as she came to Serena's rescue, \"let her go, man.\"\n\n\"I just want to talk to the bitch. What's wrong with that?\" His grip became tighter.\n\n\"Come on, Mark,\" Christy tried to reason. She knew from past experience he could be difficult when he drank, and he had drunk quite a bit. She had seen this before.\n\nOut of nowhere, a familiar voice said, \"I think she wants you to let her go.\"\n\nNow, Mark was not a big person, perhaps one hundred and eighty pounds, but when he saw the tall, thin guy talking to him, he knew he had an easy target.\n\nSerena's head snapped in Sergei's direction as she tried to wrestle her arm away from Mark. Her eyes met his and he smiled reassuringly.\n\n\"What are you going to do about it?\" Mark asked menacingly.\n\n\"Oh,\" replied Sergei, \"I know karate and a few other Japanese words.\" Serena remembered him saying that to her on their first walk together. She looked at Sergei and tried to smile.\n\nMark let go of Serena and pushed Sergei hard in his chest. Sergei moved back a step or two, only because he allowed it. He was reeling Mark into a false sense of security. Mark moved forward and pushed Sergei again, moving him back another step.\n\n\"I don't want to fight you,\" Sergei said. \"You just need to leave the girl alone.\"\n\n\"You're going to fight me,\" Mark spat out. \"You stuck your nose where it didn't belong and you don't know who you're messing with.\" He came towards Sergei with clenched fists.\n\n\"Not in here,\" Sergei said. \"I don't want your blood all over their furniture.\" He was baiting Mark to throw the first punch.\n\nMark smiled crookedly before he stepped forward and threw a punch towards Sergei's face. A girl screamed. Sergei blocked the punch with his left hand. Angered, Mark tried to throw another punch. Sergei blocked it easily with his right hand.\n\n\"We could do this all night if you like, but you're just going to get tired,\" Sergei said. \"Why don't you leave before you get hurt?\"\n\nIncensed and frustrated over not being able to hit the thin guy, Mark tried to rush forward, but was met by Sergei's foot in his chest. He was knocked backward and almost fell down, but he was able to remain upright. The kick happened so fast that he didn't even see it, nor did most of the people watching. Serena was amazed at the speed of the delivery.\n\n\"Mark,\" Christy pleaded, \"just go before he hurts you.\" She had her hand on his arm. Mark flailed away from her, his fist striking her on her forehead. She brought both hands to her head. \"Damn it, Mark,\" she exclaimed, \"you didn't have to hit me!\" Serena quickly moved to her side.\n\nSergei's demeanor changed dramatically once he saw Christy holding her head. He strode quickly to Mark, who didn't have time to react. Sergei spun, planted his left foot, and then kicked Mark across his face with his right foot. Mark went down in a heap, falling down to his knees. Sergei reached down, grabbed Mark's hand and began applying pressure on one of the nerves, causing extreme discomfort. Mark grimaced and tried pull away, but Sergei applied more pressure.\n\n\"Now,\" Sergei said in a low, steady voice, \"you're going to leave quietly and not come back. You haven't pissed me off, yet, but if you stay any longer, I may lose my temper.\"\n\n\"Okay, okay,\" Mark said, wincing, and suddenly more sober. \"I was just fooling around. I just wanted to talk to the bitch, that's all.\"\n\nSergei's eyes narrowed and he frowned, the first expression he had made since it all began. \"Okay, now I'm pissed,\" he said. Without warning, Sergei slapped him with an open palm and left an imprint on his cheek, all the while holding onto his hand. The blow was quite forceful as Mark's head jerked to the side.\n\nSergei jerked Mark's hand back with even more force. Moving towards his face, Sergei hissed, \"Don't you ever call her that again! Do you understand that?\"\n\nMark nodded, his eyes fearful. He knew the thin guy could break his wrist if he wanted to.\n\nSergei felt a hand on his arm and saw Serena standing next to him. She was scared, but calm as she looked at him. \"I think you can let him go now,\" she said quietly.\n\nSergei looked at her, then to Mark. \"You're leaving and not coming back, right?\"\n\n\"Yeah.\"\n\nInstantly, Sergei let his hand drop. Mark rubbed it momentarily before slowly getting up from the floor. He looked at Sergei and Serena before walking to the door and into the darkness. Sergei followed him and stayed on the porch until he saw him no more.\n\nSerena stepped out from the house and was by his side. The October night had turned quite cold and she shivered a little. She really didn't know how to approach him. He helped her, yet he could have really hurt Mark. He didn't, but the thought of the damage he could have done to him scared her. \"How did you know I was here?\" she asked.\n\n\"I didn't know you were here,\" he replied. \"I just decided to take a walk and I happened to see you at one of the windows. Things got a little crazy there for a moment, though, didn't it? Who was that idiot?\"\n\n\"Some guy named Mark. I think he's friends with Christy and her friends.\"\n\n\"Oh.\" Sergei looked at her and then down to his shoes. He could see his breath. He looked back at Serena. \"He didn't hurt you, did he?\"\n\n\"No,\" she shook her head. \"He just grabbed my arm, that's all.\" She waited for him to say something else, but he was silent. She touched his arm. \"Thanks for helping me,\" she said softly.\n\nSergei smiled. \"You're welcome,\" he replied. He went silent again as he contemplated his next move. He put his hand over hers. It was the first time he had touched her with any type of affection and she liked it.\n\n\"About this afternoon, you didn't really have much fun, did you?\"\n\nThe question caught Serena off guard and she couldn't think of an appropriate response for a second or two. \"I had a good time at the game,\" she said, \"but after that, I can't say that I did.\"\n\n\"I thought so,\" he said.\n\n\"I don't know,\" Serena went on, \"you just didn't seem to have any interest in anything I had to say, as if I wasn't important or interesting.\"\n\n\"I'm sorry,\" he said quickly, \"I didn't mean to. I just had a lot of things on my mind today.\"\n\n\"What's going on?\" she asked. Serena zipped up her sweat jacket.\n\nSergei evaded the issue. \"I really don't want to talk about it right now.\"\n\n\"It might help,\" Serena countered. \"I'm a pretty good listener.\"\n\n\"I'm sure you are,\" he replied. \"I just don't want to talk about it to anyone.\" He leaned against the wooden column on the porch and stared out into space.\n\n\"Okay,\" she said softly. \"Why don't you come in? It's kind of chilly out.\"\n\n\"I think I'll stay out here for a while.\" Secretly, he hoped she'd stay there with him.\n\n\"Well, I'll be inside,\" she said, a bit sad. She still couldn't understand why he was so reluctant to talk to her.\n\nAs she turned to go in, she heard Sergei say quietly, \"Wait a minute, Serena.\" He truly didn't want to be alone at that time.\n\nWith her hand on the door handle, she turned back and said, \"Yes?\"\n\n\"Maybe I do need to talk about it.\" His shoulders were slumped and he was clearly uncomfortable with what he was about to say. It was never easy for him to talk about his family, but he sensed Serena's confusion throughout the day. He was starting to like her a lot and he didn't want to push her away.\n\nWith her hands inside her pockets, Serena came back to him and stood a few feet away, waiting patiently for him to begin.\n\nSergei avoided her eyes as he looked to his feet and then out towards the street. \"It's kind of hard to talk about,\" he said quietly, almost in a whisper. \"From what you've said about your family, they're pretty neat.\"\n\n\"Yes, they are. I love them to death.\"\n\n\"Well, I don't come from such a cozy environment,\" he admitted. \"Both of my parents are functioning alcoholics. My mom called me last night, drunk as a skunk, complaining that my dad beat her again. She wanted me to come home, but I really didn't want to.\" He looked off into space again. \"I mean, what good would it do? He's not going to stop beating her and they're not going to stop drinking.\"\n\nSergei hesitated and sighed, his shoulders slumping again. \"Anyway, I went back to Springfield for the night and he had done a good job on her; a black eye and a busted lip.\" Serena's jaw dropped. \"Oh, he's done worse,\" he laughed sarcastically.\n\n\"Why does she stay with him?\"\n\n\"She loves him,\" Sergei replied with a straight face.\n\n\"How could she still love him?\" Serena didn't think she could ever understand that.\n\n\"I don't know...\" His voice trailed off.\n\n\"Can't you do something to stop him?\"\n\n\"What? Beat him up?\" Sergei laughed softly at the irony. \"I've stepped between them a few times and stopped him before it got really bad, but he just beat her up worse after I left.\"\n\n\"What about the police? They could charge him with domestic violence or assault.\" Serena was very confused.\n\n\"Who would pay the bills if he got locked up? Mom doesn't work, never did. Lovely situation, isn't it?\"\n\n\"It's terrible.\"\n\n\"I know.\"\n\nSergei and Serena's attention was interrupted by the sound of breaking glass and laughter coming from within the house.\n\n\"So,\" he continued, \"I came back early this morning and I guess I wasn't in the best of moods with you. I'm really sorry for that. I shouldn't have let what happened at home affect how I feel about you.\"\n\nSerena let the words go through her and waited for him to continue, but he fell silent. She now knew why he was so reticent to talk about himself. She was now more interested in him than ever and wanted to know more about him. \n\nA gust of wind swept through, chilling Serena and making her wish for them to be inside. The cold didn't seem to bother Sergei as he was wearing a flannel shirt and jeans. The wind barely ruffled his wavy hair, but his eyes blinked behind his glasses.\n\nAfter the wind settled down, Serena asked, \"What do you feel about me?\"\n\nSergei seemed surprised by the question, but he smiled to himself. She was always asking questions of his thoughts and feelings. It was her nature, he guessed. Always a very private person, he resented, at first, all of the questions she asked, but he now realized she was interested in him and not trying to pry. A smile peeked from the corners of his narrow mouth. He just knew she was going to ask that. If anything, she was consistent. He laughed lightly.\n\n\"What?\" Serena asked.\n\n\"Oh, it's nothing,\" he said as he shook his head. \"You just ask so many questions, that's all.\"\n\n\"I just want to know you better,\" she said truthfully.\n\n\"I figured that one out.\"\n\n\"Is there something wrong with me asking you questions?\"\n\n\"No. No, there isn't. At least, there shouldn't be. I just don't like to talk about myself, my feelings. I come from a family where thoughts and feelings aren't discussed unless it's based from anger.\"\n\n\"I see.\"\n\n\"It's not like I don't want to talk to you about things. I just don't know how.\"\n\n\"Okay, I can understand you not being able to talk about your feelings and thoughts, but you seemed so indifferent, so disinterested in me this afternoon. It was as if it didn't matter what I said or did. I might as well have been talking to myself.\" Serena's arms were folded in front of her. She glad to get that out.\n\nA frown appeared on Sergei's face and he looked genuinely sad. \"Yeah, I guess I wasn't much of a date, was I?\" He looked at her and tried to smile. Even though she seemed angry with him, he thought she still looked pretty. \"I don't have much of a role model when it comes to treating a girl. It looks like I'll have to work on that.\"\n\nSergei glanced down at his shoes. \"Would you still consider going out with me?\" he asked without looking up. \"I don't drink and I promise not to beat you up.\" He managed a small smile as he slowly looked up. His eyes met hers and she was smiling at him.\n\nSerena found it odd that he would joke about something as depressing and bad as his parents' personal lives, but she felt she could trust him more now, that he wasn't intentionally trying to be mean to her. She thought there was a lot of good within Sergei that was trying to get out and she was willing to go out on a limb for him.\n\n\"I think I can handle going out with you again,\" she replied as her hand touched his arm once again.\n\nSergei sighed, exhaling audibly. \"Good,\" he said softly, happy that she still liked him.\n\n* * * * *\n\nThe coolness of October gave way to the snow and cold of late November. As Thanksgiving approached, it was clear that the Midwest was going to be hit hard that winter. Snow and cold blanketed Ohio, Indiana, and Michigan since early in the month and Serena found it necessary to stay in Bloomington until her break instead of risking the travel back to Ohio beforehand.\n\nAndy and Jenny had not had any more times alone since their first weekend together. Although they wished for it to happen again, it was still fresh in their memories and that sustained them. They would celebrate Thanksgiving in their own homes, Jenny's mom insisted upon it, but they had plenty of time throughout the break to get together. During the time since they made love, it seemed that it only brought them closer together, if that was possible, and their bond became stronger than ever.",
        "With her parents blessing, Serena invited Sergei to their house for Thanksgiving, but he declined. He felt it would be extremely awkward for him since they had been dating for such a short amount of time. Serena argued with him about it, especially since he wasn't going home to Springfield, but finally gave up when she realized how strong he felt about it.\n\nThey had gotten closer in the time since their first date and Serena learned little bits about him almost daily, but it was going very slowly between them. That was okay with her because she knew the absolute worst thing to do with Sergei was to rush him into anything. Truthfully, she was quite content with the speed of their relationship and didn't wish for it to get serious anytime soon. They studied together nightly and it was rare when Christy would find her in their room after supper.\n\nHe was doing his best when it came to dating Serena and she appreciated his effort. She knew his parents warped ideas of love influenced him at times, but he tried very hard to overcome all of those learned traits. When he did lapse into indifference, Serena would gently remind him and he would change immediately. There was no way he wanted to be his father's son and he had to change if their relationship was to survive. After a few weeks, the times became so infrequent that Serena became surprised when it did happen.\n\nThanksgiving turned out to be a great time for the Burleson's. Being home for a few days made Serena realize how much she truly missed being around her family every day. She missed talking to her mom and dad whenever she felt like it and she missed her and Andy's late night talks. She made up for it as best she could while she was home. She even went out with Andy and Jenny a few times, whether it was going to the movies or just hanging out together. Once it became time for her to go back to school, the sadness returned all over again. However, she knew Christmas break was right around the corner and winter exams and Sergei would keep her occupied until then.\n\nShe was pleasantly surprised at how much she was looking forward to seeing Sergei again. Even though being with her family for a few days was great, she did miss him and wondered how he was doing. He hadn't gone home for the break, but that wasn't an unusual thing for him. He had been on his own since the summer of his high school graduation and he would visit his parents periodically, but painful holiday memories made him reluctant to visit during those times. Even the times he did visit were almost always very short, and he left before they got on each others nerves and the yelling started. He had no other siblings and just a smattering of cousins scattered here and there.\n\nSerena was also glad to see Christy again. She was becoming almost as close to her as she and Jenny. Christy was starting to see what Serena saw in Sergei and was giving advice and counseling to her whenever things in their relationship puzzled her. It was a disappointment, but Serena was still unable to find Prince Charming for her, although it wasn't from lack of effort on her part. She suggested a couple of guys she knew to Christy, but she wasn't interested in any of them.\n\nSerena saw Sergei the first Monday night in the library after she came back from break. Alone and at a corner table with his back to everyone, he didn't notice her behind him until she wrapped her arms around his shoulders and hugged him lightly.\n\nHis head turned quickly in her direction and he smiled broadly. As soon as she left the campus to go home, he regretted not taking her up on her offer to come for Thanksgiving dinner. Even if was awkward, he thought, it was better than being alone. But, he caught up on some much needed studying and that was a good thing. If he wanted to get into a good med school, he had to get straight A's. There were no ifs, ands, or buts about it.\n\nThey didn't speak, but his smile spoke volumes to her. She knew he missed her as much as she did him and that comforted her. After she got settled in a nearby chair, they went about their studying.\n\nThey finished early that night, partly because it was the first day of classes, but mostly because they wanted some time to themselves to talk.\n\n\"I missed you,\" he said as they walked to the student union. His arm was around her shoulder holding her close. \"I should have come to dinner when you asked.\"\n\n\"I missed you, too,\" she replied as she looked up to his face. \"I thought about you quite a bit. I wish you would have come.\"\n\n\"Anyway, I got some studying in and got caught up in everything I needed to. With exams coming up, I can't afford to get behind in anything.\" He breathed in the cold air as the wind picked up a bit. He looked back at her and was very glad she was back on campus.\n\nThey sat down in one of the lounges and talked for a long time. For the first time in their relationship, Serena noted that Sergei's attention was focused on her the entire time, a breakthrough she wasn't expecting. His steel-blue eyes watched her every move, dancing across her face and taking in her features. For the first time in his life, he was really trying to get to know someone and let that person inside his personal being. Admittedly, it was hard for him to fathom, but he was starting to care for Serena in a way he never thought possible and he hoped she was feeling the same about him.\n\nHe walked her to her dorm as was his custom and they were arm in arm on that frigid night. Thinking back to when he manhandled Mark, she no longer feared he wouldn't be able to defend her. Serena felt safe and secure beside him with their arms linked. They walked slowly and leisurely, almost strolling through the blustery winds that swept across the campus.\n\n\"Do you want to come up for a minute?\" she asked when they reached the entrance. \"I know Christy won't mind.\"\n\n\"No, that's okay,\" he replied, \"it's getting late and I have an early class tomorrow.\"\n\n\"Well, I'll let you go, then,\" Serena said. She didn't want him to go so soon, but she knew how important his studies were to him. He was one of the most intense persons she knew when it came to his schoolwork. It was something she really admired about him.\n\n\"See you tomorrow?\" he asked hopefully.\n\n\"Gee, I don't know,\" she teased. \"I don't know if I'll have any homework to do tomorrow.\"\n\n\"Right,\" he replied.\n\nSerena took his long, lean hand in hers. \"I really did miss you,\" she said earnestly.\n\n\"I know you did. \"I missed you, too.\"\n\n\"I'll see you tomorrow. I'm sure I can did up some homework from somewhere,\" she laughed.\n\nSergei laughed along with her. He liked her sense of humor. It was something that was grossly lacking in his life up until then. He squeezed her hand gently before bending down and kissing her lightly on her cheek. He got a whiff of her light fragrance, immediately fell in love with it, and committed it to memory. He felt like keeping his nose there forever, but he thought better of it.\n\nSerena looked at him in surprise. \"Why Sergei, I never knew you had that in you.\" She smiled before she moved forward and kissed his rough, stubble-filled face. It scratched her lips slightly, but she didn't care. They looked at each other briefly, smiling, before Serena turned and went inside.\n\n* * * * *\n\nAndy continued his workout regimen throughout the late fall as he prepared himself for the baseball tryouts that were approaching within the next few months. He weighed about ten pounds more than what he did before he became sick and he attributed that to his normal growth pattern in the past year and his weight training. Jenny continued to join him in the basement for the workouts and she was gaining strength as well. She looked leaner in the middle, but toned everywhere else. It was hard for Andy to concentrate on the weights whenever she was around, but he always wanted her there with him, distraction or not. He always wanted her with him. Sure, they had disagreements about things, but they were never truly angry with each other. Andy knew how lucky he was to have her as his girlfriend, his best friend besides Serena, so being angry with her for whatever reason made no sense to him.\n\nAs he approached his six month anniversary of his transplant, his chemistry readings continued to stay in the normal range and Dr. Venkata was pleased with his progress. His blood drawings were cut back to once a month and Andy was delighted with this small victory. The doctor still cautioned him about his workouts, telling him not to over lift and strain himself, but to try more for toning instead of bulk. This is what Andy wanted to do anyway. He did not have a big frame, so bulking never entered his mind. Besides, playing second base and shortstop required speed and agility. He was now 5'9\" and 170 pounds and he felt better about himself than he had in years. He couldn't wait for the tryouts to start to see how far he had progressed. He had only one year left of high school baseball and he wanted to make the best of it.\n\nSeeing Serena again during Thanksgiving break was great for him. Like his sister, he really missed their talks together. He also missed her waking him up in the morning. His mother did that now, which meant him getting up earlier than he was used to, but he still hated alarm clocks and this was the only solution. He also missed driving to school with her, bantering with her in the morning and afternoon. Although writing to and receiving letters from her was the next best thing, he became depressed at times and wished she was home permanently. He was almost jealous of Sergei, him being the male person in her life now. Andy was truly happy for her even though she downplayed his importance in her life. Andy knew his sister very well and he could sense how much she really liked him.\n\nAs Christmas approached, Andy faced a dilemma as to what to get Jenny for a gift. He wasn't sure if he should keep it light with clothes or books, or go serious with jewelry of some sort. He wasn't going to give her an engagement ring or anything like it, but he wanted to buy her something special that would have a real significance to it. He asked his mom for her opinion and she thought a ring was much too serious and thought maybe a necklace with a special charm would be more in line. Andy tended to agree with her on this one, but he had already given her a necklace for her birthday.\n\nAfter several days of shopping, he finally decided upon a bracelet with many charms on it. There was a heart, a baseball, and other ones denoting her mom, dad, and sister. His mom thought it was perfect and Andy thought so, too. He also bought her a blue sweater that she had pointed out to him a few weeks prior.\n\nBefore they had their break, Andy and Jenny went to a Christmas dance held in the school gym. As they were driving to the school, Andy laughed to himself as he thought back to their prom, wondering if there would be a repeat performance at Jenny's grandparent's house.\n\nJenny noticed the wry smile on his face. \"What's so funny?\" she asked.\n\n\"Just thinking,\" he answered.\n\n\"About?\"\n\n\"Oh, I was just thinking about when we went to your grandparent's house after the prom.\" He looked over at her. \"I don't know. The dance reminded me of it.\"\n\n\"I wish we could go there, but they're home,\" Jenny replied. \"But,\" her voice getting excited, \"they're talking about going to Florida sometime next month and I know they'll want me to take care of the house. Hint, hint.\" She winked at him and raised her eyebrows suggestively.\n\nAndy smiled as he knew exactly what she was talking about. \"Do you think you might need some help at their house?\"\n\nJenny laughed. \"Oh, I think I'll need your help at least a couple of times!\" The thought of them being alone again, being naked and making love to each other sent shivers through her. She always knew their first time together would never be enough. Jenny really wanted to feel him inside her again to feel the closeness they shared.\n\nThe dance was casual dress and Jenny was wearing a loose fitting skirt and blouse, while Andy wore dress pants, shirt, and a sweater. The gym wasn't very crowded with perhaps only a hundred couples or so, but it was very nice nonetheless. They danced all of the slow dances and Jenny even persuaded Andy to try some of the faster ones as well. They left while it still had about an hour to go. Jenny had to work the next morning and she wanted some time alone with Andy before she had to go to bed.\n\nWhen they got back to her house, it was only about nine-thirty and her parents and sister were still up watching TV. They excused themselves and went down to the basement to listen to the stereo. Jenny didn't want to hear anything soft that evening, so she found some Black Sabbath to listen to. Andy didn't mind and enjoyed listening to hard rock music once in a while. She didn't turn it up loud like she normally did in her room. Jenny knew they'd be kissing and maybe fooling around some and she wanted to be able to hear Melissa should she decide to interrupt. \n\nJenny settled next to him on the sofa as he held her close. He could never get enough of her scent as he put his nose near her neck and inhaled. \"I've always loved that perfume,\" he murmured.\n\n\"Why do you think I always wear it?\"\n\nAndy merely shrugged and kept his nose there. Before long, though, he began nuzzling her neck with soft kisses, something he knew she loved. Jenny sighed happily and pushed her hair back for him. Soon, their lips met and they began loving each other as they had done so many times before. Jenny let him slip one hand inside her bra and loved the feel of his warm hand against her breast. She began to get moist as his finger brushed against her nipple, teasing her and making her squirm. Abruptly, she pulled away and stood up, leaving him confused and thinking he did something wrong.\n\n\"I'll be right back,\" she said mischievously and went to the darkened portion of the basement. She returned seconds later with a wide grin plastered across her face. She walked toward him and tossed something in his direction. He caught it neatly and looked at his hand which contained her white cotton panties, slightly damp from her excitement.\n\nAndy's jaw dropped as he touched her juices on the soft cloth. He brought the panties to his nose and sniffed them. The scent was alluring and exotic and it was as he remembered when they made love.\n\nJenny giggled lightly and plopped down on the sofa next to him. She pulled up her skirt to her waist and once again, his eyes were treated to the wondrous beauty of her sex. She had trimmed her hair since the first time and Andy found it to be sexier. He could plainly see her hooded clitoris and he reached down to touch it. Jenny shuddered from his touch and opened her legs slightly. She turned her face to him and they began kissing as his hand went further down and found her slit, which was slick and slippery. He started to stimulate her clit with his forefinger by rubbing it in a circular motion. Jenny squirmed and moaned as he was hitting a good spot.\n\nJust when it was starting to feel really good, she heard the unmistakable sound of footsteps coming to the basement door. She straightened up quickly as Andy took his hand away and then smoothed her skirt down to her knees. Andy had her panties in his hand and looked at her in horror, not knowing what to do with it. The basement door opened and footsteps could be heard coming down. At the last second, he put the panties under his sweater and Jenny settled against his shoulder as if nothing was happening.\n\n\"Hey guys,\" Angie said as she got to the bottom of the stairs.\n\n\"Hey mom,\" Jenny said, trying to keep from grinning.\n\n\"I just need to get a nightgown.\" Angie flipped on the light to the laundry room and came back with her nightgown. \"I'm going to bed,\" she said as she turned off the light. \"Goodnight.\"\n\n\"Goodnight, mom,\" Jenny replied.\n\n\"Goodnight, Angie,\" Andy said.\n\nAngie went back up the stairs and closed the door behind her. Jenny collapsed in stifled laughter against Andy's chest as he heaved a sigh of relief.\n\n\"Geez, that was close,\" he sighed. He hugged her to him as she continued to laugh softly.\n\n\"Well, so much for that!\" she said as she straightened up. \"Damn, I wish she hadn't come down. You were hitting a great spot.\"\n\nAndy's hand started to go towards her thigh, but Jenny tapped his hand. \"No, no, lover boy. No more tonight. That was too close for comfort.\" Her inner thighs were still tingling and she knew she would have to finish what he started when she went to bed. Reluctantly, he pulled his hand back.\n\nThey sat back and listened to the rest of the music, kissing and snuggling as they did. Later, she walked him to the door. Everyone else had gone to bed and she should have been in bed already, but she just couldn't let him go. \n\n\"I had a great time,\" she said as she smiled at him. \n\n\"I'm glad,\" he replied. \"I did, too, except for a few harrowing seconds there,\" he chuckled.\n\n\"By the way, could I have them back?\"\n\n\"Have what back?\"\n\n\"My underwear,\" she whispered with her hand over her mouth as she tried to keep from laughing.\n\n\"Damn, I forgot it was still there.\" He reached under his sweater, pulled them out and handed them to her. \"Maybe we can do it again next time.\"\n\n\"I don't know,\" Jenny said, \"that scared the crap out of me. Maybe we should wait until grandma and grandpa go to Florida.\"\n\nAndy didn't want to wait that long, but what choice did he have? \"Yeah, I guess we'll have to wait.\"\n\nAndy left a few minutes later. True to her thoughts while in bed, she thought of him and wished he was there. Laying under the covers with her legs spread wide, she played with herself until she came to a nice, satisfying climax.\n\n* * * * *\n\nChristmas came and went as Serena stayed at home for a week before heading back for the next semester. Softball practice would be starting soon, much sooner than they ever did in high school. Their first game would be in the first week of February and they would play four to five games a week until May, with almost all of them being on Friday, Saturday, and Sunday.. Depending upon how well they played, the team might be playing upwards of sixty games. The most she ever played in high school was nineteen. Serena knew it would be a test of her physical and mental strengths to be able to play that much and at the high level that she expected of herself. They would be traveling for most of their first two months of the season into the warmer regions of the States, being how cold and snowy February and March could be in Bloomington. Her family hadn't traveled much except for a family vacation once in a while and Serena was looking forward to seeing some of the country.\n\nShe had met most of her teammates and she found out there would be five total outfielders on the roster; two seniors, two juniors, and herself. She knew she could play well enough to earn a starting position. From what she had read and heard about Hoosier softball, the outfield was not one of their strongest assets the previous season. But she was taking nothing for granted and would play as hard as she could in order to earn a starting job. Unknown to her, Coach Sue Griffin had already penciled her in as the starting center fielder and had seen enough of her hitting to place her in the fourth position in the batting order. The coach felt she could have started for her team the previous year when she was still in high school. Sue felt blessed that Serena wanted to stay close to home and wanted to come to Indiana. Having one of the best high school softball players in the country literally fall into her lap didn't happen every day.\n\nOne thing Serena would have to get used to was the juggling of her class schedule, studying, and playing ball. Her time with Sergei would be severely curtailed on the weekends and that disappointed her. Having a boyfriend was something she really hadn't counted on when she arrived at I.U., but it happened and she was happy because if it. Now, she just had to find a way to throw him into the mix and be able to do everything else.",
        "She really didn't know what to expect that first day at practice. It would be held in a large gym whereby only a few players didn't have scholarships and would be trying to make the team as a \"walk-on\". After stretching and warming up, the team ran for ten minutes. When the running was completed, they broke off into groups and began throwing. Everyone wore identical I.U. sweat pants, softball tee shirts and hats, issued to them by the school. Serena was paired with another outfielder, a senior named Katy Trent whom she liked immediately. In fact, Serena liked everyone on the team whom she had met. Even though Katy knew Serena would be her main competition for a starting job, she still treated her great and made her feel welcome and part of the team. All of the upperclassmen had heard of the \"hotshot from Ohio\" as Coach Griffin had called her affectionately, and were anxious to see if she was for real.\n\nAfter practice was over, a tired Serena slumped on the bench in front of her locker and waited for some strength to return so she could take a shower. Some of the girls went straight to their dorms to clean up, but Serena felt like getting it over with. She had never been through such a rigorous practice before. It was well organized and she never had a moment to rest. She figured she might be a little bit out of shape since she had to take it easy for most of the summer and fall, but she hadn't counted on such a tough practice. Coach Griffin kept an eye out for her, wary of how she would do. She had conferred with university doctors about Serena's condition and they assured her she would have no lasting effects of being a donor. Still, she worried.\n\nThe practices got easier for her as the weeks went by and she rejoiced when they went outside for the first time, even though she would have preferred it to be warmer than forty-two degrees! Still, it felt good to be playing outside and she played with abandon. She felt like she never had an operation and she was back to her old self. Eventually, after showering, one of her teammates saw her scar and soon, the whole team knew her story and marveled that she gave a kidney to her brother. She gained an enormous amount of respect from that, and soon, she fast became one of the more popular players on the team.\n\nJanuary came to a close and the Indiana team embarked on their first road trip of the season, a trip to Baton Rouge, Louisiana to play Louisiana State, Kentucky, Texas Christian, and Auburn. Throughout the practices and intra squad games, Serena have proved to Coach Griffin and her teammates that she was as good as advertised.\n\nBy the time Serena was preparing for her first collegiate game, Andy and Jenny were just beginning their first practices. To say that Andy was ready for them to start was a severe understatement. Diane and Joe had to practically tie him down to keep him from bouncing off the walls in the days before.\n\nDuring the first practice, Andy was like a kid in a candy store. As much as he tried to stay under control, he was all over the place. He couldn't get enough and wanted to play more, even after the practice ended. Although he had missed a year, the coach assured him he would get a fair chance at either second base or shortstop. One look at his exuberance, plus his skills that he seemingly had not lost, told Coach Anderson all he needed to know. He actually thought Andy was quicker, more agile, and an all around better player than before his illness.\n\nAfter practice was over, Andy got a case of deja vu when he saw Jenny in the lounge waiting for him. He would be taking her home after practices whenever possible so that her mom wouldn't have to make a special trip every day. He couldn't believe a whole year had gone by since they met up again. And he couldn't believe all the things that happened to him in that year, either.\n\n\"Seems like old times,\" he grinned as he threw his arm around her shoulder. He hugged her close and sniffed at her neck. She smelled as wonderful as always and he would never get tired of her scent. He could be in a room, blindfolded, with a dozen females and he would be able to pick her out simply by her scent. \"It felt so good to be playing again.\" There was a bounce to his step and Jenny noticed he could hardly contain himself.\n\n\"You certainly look like you had a good day,\" she remarked as they stepped into the brisk February air.\n\n\"I had a great day!\" he exclaimed. \"I woke up, and that's always a good thing.\"\n\nJenny laughed, \"I would hope so.\"\n\n\"I played baseball for the first time in almost a year, and now, I'm walking with my absolute best friend and driving her home. What could be better?\"\n\n\"Nothing that I can think of,\" she replied.\n\n\"So, how was your practice?\" he asked.\n\n\"It was fine, but it felt weird not having Serena there. I kept waiting for her so we could stretch and throw together until I realized she was in Indiana. But, I made it through okay.\"\n\n\"I know what you mean. Sometimes, I still think she's home, especially when I need to talk to her about something.\" Andy thought back to her Christmas break when she came home. They had a great time and he was really sorry to see her go back.\n\nThey reached his car and he let her in the passenger side. As soon as he closed the door to his side, he leaned over and gave her a kiss.\n\n\"What was that for?\" she asked.\n\n\"Do I have to have a reason?\"\n\nJenny smiled shyly. \"No, I guess not.\"\n\nAndy sat back and pondered. There were so many things going through his mind, so many thoughts about what happened to him over the course of a year. He had come full circle and it was time to celebrate the gift given to him by his sister. He had gone from life to near death, and then back to life once more. Andy knew some people never got the second chance he did and in his private moments, he secretly prayed for those persons and all persons who were waiting for a transplant. The love he felt for his sister was never stronger and mere thanks would never be enough. Because of her, he was normal again.\n\nAndy looked at Jenny and smiled. Because he didn't need a reason, he gave her another kiss to tell her how much he loved her and needed her in his life.\n\n* * * * *\n\nEpilogue: June 23, 1984\n\nIt was a warm and breezy day as the trees which surrounded the small chapel swayed easily. Andy waited in a small room to the right of the altar deep in thought. Friends and family had stopped by occasionally to wish him well and he appreciated how much they cared and it helped calm his nerves. He couldn't believe it was actually happening, that the time had come. He looked down at his ruffled shirt and black tuxedo pants in disbelief. No, she still couldn't get him to wear a white tux, never mind that it was the most important day of his life.\n\n\"No,\" he gently reminded her, \"the most important day was when I got Serena's kidney. If that didn't happen, this wouldn't be happening.\" Jenny could have argued good-natured that she was the most important thing to happen to him in his life, but she understood. Without him receiving Serena's kidney, who knows what would have happened? No, Jenny couldn't disagree with him on that and once again, he got to wear the tux he wanted.\n\nA lot had happened in those four-plus years. Not able to stand the thought of being separated while at college, they enrolled in one of the only schools who would give both of them athletic scholarships, the University of Dayton. Neither had distinguished careers there, but each graduated with a degree, he in accounting, and she in biology, and that was the most important thing. They would settle in Dayton as she pursued her Master's Degree and he would begin his career at the accounting firm of Scott, Epstein, and Scott. During their last year in school, they lived in an apartment off campus together and were basically husband and wife without the license. Today would remedy that, much to the satisfaction of their parents.\n\nSerena carefully climbed the steps from the basement to the main floor, not wanting to trip on her gown. Jenny was ready when she left and she could hear the chime of the bells overhead announcing it was fifteen minutes before the hour. Serena found him in the same room where she had left him an hour or more before. They hadn't had much time to talk over the past few days and it saddened her. She hoped to make up for it before she and Sergei left to return to their home in Columbus, Indiana on Monday.\n\nHis face was in his hands and his back was facing her when she entered the small chamber. He seemed oblivious to everything going on around him as he had the door partially closed. Serena came behind him and touched his shoulder. Andy jumped and quickly turned his tear-stained face towards her.\n\nSeeing her, he wiped away the tears and smiled. \"Hey sis,\" he said quietly.\n\n\"Are you okay?\" she asked, her hand still on his shoulder.\n\n\"I couldn't be better,\" he replied, still smiling. \"How's Jenny doing?\"\n\n\"She's radiant. I've never seen her happier.\"\n\nAndy smiled even wider at the thought. He couldn't wait to see her. He looked back at his sister. \"Have you ever been so happy that you think it's all a dream, that it couldn't possibly be true?\"\n\n\"Yeah,\" she replied softly, \"last year.\" It was less than a year since she married Sergei.\n\n\"Then, I guess you know what I'm feeling.\" He knew they only had a few more minutes before the ceremony was to begin, but he wanted more time alone with his sister. He owed her so much when she thought he owed her nothing. That was just her way.\n\n\"We don't have much time,\" he said as he stood up.\n\n\"I know,\" she said, her eyes starting to blur from tears. She moved forward and hugged him tight, not wanting to let him go.\n\n\"I wouldn't be here if it weren't for you,\" he said, almost choking on the words from the emotions he was feeling.\n\nSerena pulled away and looked at him. \"Yes, you would,\" she said. \"Whether it was me, or mom, or dad, you would have gotten here. I don't deserve that much credit. All of us were there for you, not just me.\"\n\n\"Well, that's true,\" he agreed, smiling as tears began to form again, \"but, I'll always have a part of you in me and that will never change.\"\n\n\"And I never want it back.\"\n\nThey stood facing each other for a few moments. They had spent so many days and nights throughout their lives talking endlessly to each other and now, they fought to control their emotions in their silence. Andy pulled her close and hugged her again.\n\n\"Jenny's the best, isn't she?\" he said, as if asking approval.\n\n\"She is,\" Serena agreed, \"but I told her she better take care of you or I'll kick her ass!\"\n\nAndy laughed and he hugged her even tighter. \"She's done a great job so far.\"\n\nThey heard a throat being cleared and they looked to the doorway where Sergei was standing. \"If you weren't her brother, I think I would be very jealous right now.\" He smiled at his joke. \"It's time,\" he announced. \"Serena, Jenny says to get your butt downstairs now, and to stop trying to talk Andy out of this!\"\n\n\"Okay,\" Serena giggled. She turned back to her brother and smiled. \"I guess this is it, Andy.\" She took his hands in hers and squeezed them.\n\n\"Yeah, it is.\"\n\n\"Promise me something?\" She gazed into his eyes.\n\n\"Anything.\"\n\n\"Be happy.\"\n\n\"I wouldn't dream of doing anything else.\"\n\nSerena bit her bottom lip to keep from crying. She moved forward and kissed him lightly on his cheek. \"I love you, Andy,\" she said, touching his face.\n\n\"I love you, too, sis.\" She turned to leave. \"Hey, sis?\" he said.\n\n\"Yeah.\"\n\n\"Wish me luck.\"\n\n\"With Jenny, you're going to need it!\" she laughed. \"See you at the altar.\"\n\n\"See you.\"\n\nSerena left the room quickly and headed back to the dressing room where Jenny and the other bridesmaid, Melissa, were getting ready. Jenny's mom and dad were there, too, each trying to keep Jenny under wraps, but she appeared to be the calmest of all of them. Andy and Sergei walked out of the room and surveyed the crowd. The chapel was full and Andy looked around to see many relatives and friends staring back at him. He saw his parents in the front row and his mom was already crying. Who could blame her? No one ever expected him to live past five years old and here he was at twenty-two getting married.\n\nThe music started and Andy steeled himself for when he would first see her come down the aisle. Melissa walked down first and Andy was amazed how much like a woman she had become. He still remembered when he first saw her, a twelve year old brat who tried her best to torment them. Now, at seventeen, she could have passed for someone much older. She smiled broadly at Andy. They touched hands briefly before she took her place on the opposite side. They had always liked each other, even in her \"brat\" days. Serena came down the aisle next. She, too, took Andy's hand for a second before standing next to Melissa.\n\nNo matter how hard he prepared himself, nothing could have helped him foresee the beauty who walked down the aisle between her parents. Jenny was at her absolute finest and Andy found it difficult to breathe. Despite walking slowly, they arrived in front of Andy much quicker than he anticipated. Through her veil, Andy could see her smiling brighter than ever before. He could do nothing but stare at her.\n\n\"Take care of her, son,\" Brad said in his thunderous, booming voice. Andy didn't know if it was a request or a threat, so he took it as both. \n\n\"Yes, sir,\" he replied.\n\nAngie moved forward and kissed him on the cheek, leaving a slight imprint. She looked as young and pretty as her two daughters. After kissing their daughter, they took their seats and the ceremony began.\n\nAndy simply could not keep his eyes off of Jenny and had a difficult time concentrating on his own wedding. Although it was a long service, it seemed to fly by and soon, it was time for the actual nuptials. Andy's voice was steady and calm as he recited his vows to love, honor and cherish Jenny for all eternity. Jenny's voice and hands trembled as she was asked to do the same. I will not cry, I will not cry, she kept saying to herself. She looked to Andy for reassurance and he smiled and nodded to her. She recited the vow as she stared into his eyes. Jenny locked onto them as she often did when they made love. It calmed her and soothed her and helped her get through it. They exchanged rings and Andy couldn't believe the joy that coursed through his body. He wished he could freeze the moment and save it so he could enjoy it anytime he wished.\n\nThey started hugging and kissing before the priest could even finish pronouncing them husband and wife. After several seconds of lip-lock, he said, \"Okay, okay, that's enough.\" They stopped kissing to the delight and applause of their family and friends.\n\nIn Andy's mind, however, it would never be enough for him for he had not forgotten what his life was like before he received Serena's kidney. He glanced at his sister and she smiled at him as if knowing exactly what he was thinking. He would never take his new wife for granted as he had never taken Serena's kidney for granted, either. Andy knew how precious life and happiness were and he learned it the hard way. Because of her love for her brother, he would always live his life to its fullest and not look back. "
    ],
    "authorname": "Tony155",
    "tags": [
        "sighed thought",
        "serena kidney",
        "settled routine",
        "serena explained",
        "snow cold",
        "thoughts happened",
        "practice andy",
        "serena laughed",
        "satisfying climax",
        "hoped she'd"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/for-love-of-a-brother-ch-02"
}