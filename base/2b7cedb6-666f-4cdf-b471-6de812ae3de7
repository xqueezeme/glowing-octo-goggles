{
    "title": "Ambiramus Ch. 01",
    "pages": [
        "A/N -- Hello. I'm sure most of those who follow me are thinking 'Oh, this is new!' Well, I like to experiment and try new things when it comes to writing stories, so I thought I'd give a story in this category a go. As always, there'll be a romantic feel to the story, as I always like a... happy ending.\n\nGiggity.\n\nTo those who regularly read in this category but not read my stuff before, I don't do quick stroke stories. I like my stories to have some romance. Keep them at least a little realistic, though in the end, they are meant to be fantasies.\n\nIn the end, like every other story, it's written for fun and all I can do is hope you enjoy it too.\n\nRegarding the title, Ambiramus is a Gaulish word (an extinct language in Europe) meaning 'voyage' or 'journey''. It is also the name of a song by Swiss folk-metal band Eluveitie.\n\n*****\n\n\"Come on, Mark. When did you last hit the town?\"\n\nGrumbling something into my mug of coffee, chewing on the boring sandwich I'd prepared the previous night. \"How long have you been divorced now?\" That earned him a glare. \"Okay, okay, still a touchy subject.\"\n\n\"The divorce isn't touchy. I'm just glad we live here in this country where men don't get bent over and completely reamed during the divorce. And I won't begrudge my kids what they need, though I'm sure the bitch spends the money on herself rather than them.\"\n\n\"Mark, seriously, I can't remember the last time you got out for the night. Yes, every second weekend, you have the kids, and you play footy on a Saturday afternoon for a few months a year. But other than that, you have no social life, my friend.\"\n\n\"In case you haven't noticed, Mike, said divorce has left me feeling rather bitter towards the so-called fairer sex. And before you even say anything, no, I'm not changing to your side.\" I took a sip of my coffee before whispering something that would be considered derogatory, but we'd been friends for over twenty-five years, and I'd known he'd been gay since we were teenagers. He heard and chuckled.\n\n\"Look, Chris and I are hitting the town on Saturday night. You should come along. We'll get some drinks, we head to a few bars, there'll be some good music, but most importantly, you'll get out of your fucking apartment. And you've never had a problem in the sort of bars we frequent. Hell, getting hit on by some good looking guys will at least give the old confidence a boost.\"\n\n\"At least they take no for an answer,\" I said, managing a slight grin.\n\n\"That's the spirit! So... are you going to come?\"\n\nSighing, I finally nodded. \"Fine.\"\n\nHe clapped his hands. \"About time. Trust me, we'll have a great time and you'll put all your worries behind you, at least for the night.\"\n\nChris, Mike and I all worked as mechanics. When you talked or spent time with the pair, you wouldn't have guessed both were homosexual, but I'd picked up the lingo over the years. They were what they called 'straight acting'... until they were around people they were comfortable with and trusted. We were all the same age, thirty-five. While I'd settled down in my early twenties with my now ex-wife, buying a house, two children, all that jazz, those two enjoyed life to the fullest. To my surprise, they never hooked up after being each other's firsts in high school. Why that is the case is a story for another time.\n\nFinishing work for the day, I had a couple of days to ready the mind for the Saturday night. I guess I had become somewhat of a recluse since the divorce. I can only assume it happens when your ex-wife decides one dick in our marriage wasn't enough. Thankfully, she was an idiot, or just didn't care and flaunted it, but once I found out, the marriage was over. I didn't like moving out, and leaving the kids behind, but I refused to tolerate a cheating whore as a wife. The divorce went about as well as any man could expect. I got the kids every fortnight, and one day during the week, holidays were alternated, and I got them for half the day on their birthday. Our marriage might have collapsed, but I was surprised she didn't use our kids against me. I actually think she felt some guilt for what she did.\n\nDidn't mean the hate went away quickly though, but for the kids' sake, we managed to keep our relationship cordial.\n\nAfter showering as soon as I got home, I looked into the mirror and saw a slightly world weary man looking back at me. I thought I still looked good for thirty-five. The ex-wife had always complimented my blue eyes. Still had thick brown hair on my head. Usually had stubble as I hated shaving, relying on an electric razor most mornings. Nose had been broken a couple of times due to the footy, but wasn't ugly. I worked out nearly every day, so I was fit, standing at just around six foot.\n\nOne thing I'd learned was how to cook so at least that was a treat every night, keeping plenty of things in the fridge and the cupboards. Sure, sometimes I wanted nothing more than beans on toast, followed by a case of beer, but the idea of a night out grew on me, and by the time I sat down in front of the TV with my dinner, I was feeling in a better mood. That was perked up by the usual call from my ten-year-old daughter, Natalie. My son, Greg, was now a surly fifteen-year-old and he hadn't dealt with the separation well. I knew his mother copped most of the flak, but my relationship with him was strained as well. Natalie just missed her daddy, and the ex-wife didn't refuse her calling me whenever she wanted.\n\nBy Saturday afternoon, I have to admit I was actually looking forward to getting out for the night. I wasn't going to get all dressed up, just a nice shirt, jeans and leather shoes, the standard wear for whenever I went out for a drink. Mike called when he was outside in the taxi he'd booked for the three of us, driving into the city and an area known for the bars that they would prefer. I'd been out with them before to such place. When married, my then wife had actually preferred it!\n\nHitting up a regular pub first, the first schooner of beer barely touched the sides. Chris and Mike shared a glance. \"Thirsty, Mark?\"\n\n\"Haven't been out in months. Don't worry, I'll drink the next one a lot slower. We eating?\"\n\n\"Yeah, we'll pick up a burger or something,\" Chris replied.\n\nEnjoying a second beer, grabbing a simple burger at the same time, we headed out and walked towards the sort of places my mates would prefer. Most of the time, the only difference is the pride flag or colours that would be somewhere above the door. I knew they had their favourites, and we'd only go to those later, once it was dark and the crowds were out.\n\n\"Once we hit our favourite place, Mark, you'll be on your own,\" Mike warned, \"Just grab a stool at the bar and try not to be a miserable bastard.\"\n\n\"And what, pray tell, will you be doing?\" Before he could open his mouth, I held up a hand. \"I can guess. Twinks, right?\"\n\n\"Topping twinks is what Chris and I do best.\"\n\n\"Yeah, spare me the details otherwise.\"\n\nI'd enjoyed a few drinks by the time we reached their favourite club. Soon as we walked in, they were on the prowl. I wished them good luck, and to just let me know if they were leaving with company. Taking a seat at the bar, the woman behind it took my order, ordering a Jack and Coke. It wasn't cheap, as expected, but I wasn't planning on getting wasted.\n\n\"Here by yourself, honey?\" she asked, a friendly smile on her face.\n\n\"Nah, though I think my friends hope to leave with company other than mine by the end of the night.\"\n\nShe looked me up and down, the part she could see anyway. \"You're straight, aren't you?\"\n\n\"That obvious?\"\n\n\"I just have that sixth sense.\"\n\n\"I've been here before. I've known my friends for decades now. I see nothing in here I haven't seen before.\"\n\nShe smiled. \"You need another drink, you just give me a wave, honey.\"\n\nI grinned at the fact she was being nice. Hadn't had that much lately. \"Thanks.\"\n\nThe music wasn't blaring, at least, though the dance floor was full of men and women gyrating. There were all sorts of men on display, no surprise half were walking around without a shirt already. Didn't even bother checking out the women. They were either gay or the sort of women who frequented gay bars to avoid being bothered all night by drunk guys. And I didn't want to bother them. Wasn't really bothered about picking up at all.\n\nNursing a second drink, the stools to either side were usually occupied, making general conversation with anyone who sat next to me, though any sort of flirting was quickly rebuffed. I'd probably been sat there for an hour when the stool to my left was occupied by a woman. Glancing out of corner of my eye, she was brunette, blue eyes, nice bumps on her chest. Wearing a short-sleeved blouse and a skirt, sensible shoes on her feet. She ordered some sort of cocktail, and only after receiving it did she turned towards me.\n\nShe was absolutely gorgeous. I mean, model sort of gorgeous, left wondering why she would even bother talking to me.\n\n\"Hi,\" she said.\n\n\"Um, hello.\"\n\nShe offered her hand. \"I'm Cindy.\" I probably blinked in silence for a few seconds as she leaned closer. \"This is where you shake my hand and introduce yourself,\" she whispered.\n\nI chuckled. \"Sorry, little out of practice.\" I took her offered hand. \"I'm Mark. Nice to meet you.\"\n\n\"I was standing over there and you looked a little lonely. Here by yourself?\"\n\n\"No, a couple of mates are here. They're on the prowl. I reckon I'll be leaving alone later.\"\n\n\"And you? You on the prowl too?\"\n\n\"I'm just out for a couple of drinks.\"\n\n\"And you're not gay.\"\n\n\"I must have a sign on my head saying 'I'm not gay' or something.\"\n\n\"No, it's the fact half a dozen men have walked away disappointed after flirting with you and you shutting them down rather quickly.\"\n\n\"Ah, well... I've been out with my mates plenty of times. Nothing really shocks me anymore, but while I'm flattered, I generally don't want to give the wrong impression.\" I took a sip of my drink. \"What about you?\"\n\n\"Oh, I have the same dreams as most young woman. Meet a guy. Fall in love. That sort of thing. Probably not the right sort of place for that though.\" She flashed me a smile. \"I figured I'd just bite the bullet and come talk to the handsome but lonely looking man at the bar.\"\n\nI almost snorted before chuckling. \"Well, at least someone finds me handsome. Didn't realise I looked as lonely as I did.\"\n\nHer soft hand rested on top of mine. \"It can be lonely at times, these lives we lead.\" I met her blue eyes. How on earth could this woman possibly be lonely? I mean, I know anyone can suffer depression, crippling anxiety, that sort of thing, but this woman should have had a line of suitors, whether men, women or something in between.\n\nI finished my drink and waved over the same bartender. She smiled seeing me with Cindy. \"Evening, Cindy. Nice to see you again.\"\n\n\"Good to see you too, Cass.\"\n\n\"What are you drinking?\" I asked Cindy.\n\n\"Blue Lagoon.\"\n\n\"Drink for the lady and same again for me.\"\n\n\"Sure thing, honey.\"\n\nShe squeezed my hand. \"Thank you, Mark,\" she said softly.\n\n\"No problem.\" I cleared my throat. \"Um... I haven't really done this in a while. I was married for over a decade.\"\n\n\"You mean flirting? Dating? All the above?\"\n\n\"Yeah. This is my first proper night out since the divorce.\" Cass placed drinks in front of us, offering my card to pay. Cindy gripped my hand a little harder. \"Sorry, let's change topics. We're out for a good time, right?\"\n\n\"Want to finish these drinks and go somewhere quieter?\" I nearly choked on my drink. Placing the glass down, I had to stare at her for a couple of seconds. \"As I said, I approached you for a reason. Physically, instant attraction. You're devilishly handsome. So now it's the getting to know you part,\" she explained with a smile.\n\nChuckling, I replied, \"Seems the dating game has changed. Can't remember a time a woman approached me first.\"\n\n\"Don't ask, don't get. Grab the bull by the horns. You know, all those phrases about thinking positively and taking action.\"\n\n\"Let me message my friends.\" Pulling out my phone, I sent them a message on the group chat we used. No surprise they both appeared out of the crowd within half a minute. Chris has his arm around a young man, Mike was still alone. Probably wouldn't last much longer. He never left without company.\n\n\"You going home already?\" Mike asked.\n\n\"No, I'm leaving with Cindy.\" I turned towards her. \"Cindy, these are my friends, Mike and Chris.\"\n\nShe offered her hand. \"Nice to meet you.\"\n\nAfter shaking hands, Mike gave me a curious glance. \"Where are you going?\" he asked.\n\nShrugging, I admitted I didn't know. Cindy mentioned a quieter bar so we could talk and get to know each other. Mike returned another curious glance before he seemed to shrug to himself. \"Okay, well, I'm assuming you'll find your own way home then?\"\n\n\"I was assuming I'd be doing that anyway, Mike.\"\n\n\"Fair enough. Well, see you at work on Monday.\"\n\nThe evening was still warm and Cindy didn't have a jacket. Once outside in the cooler air, realising how heavy the air had been inside, she took my hand and led us away. She was shorter than me, perhaps no taller than five-nine at most, the small heels she was wearing adding an inch or two at most. I let her take the lead as I figured she probably had somewhere in mind, amused when we ended up at a caf\u00e9. \"I don't want a hangover tomorrow morning,\" she said.\n\n\"Not a bad idea. Let's get a table inside.\"\n\nI ordered our drinks and joined her in a small booth. To my surprise, she stood up and slid into the space next to me. I glanced at her and smiled. We made small talk before our drinks arrived, and the idea of finishing off the night with a coffee was certainly relaxing. I learned more about her. She was twenty-five, worked a dull office job (her own words), and lived in an apartment in a suburb only a short drive from where I lived.\n\n\"Why were you in that bar tonight? You're not a lesbian... or at least I think you're not.\"\n\nShe laughed lightly. I'd learned to really enjoy the sound already. \"No, definitely not a lesbian. I just like the vibe of those places. And I can enjoy a drink or two and not be harassed. Let's be honest, the majority of men in such places are not interested in me. And most women are not interested in me either.\"\n\n\"Because you're not a lesbian.\"\n\n\"That and one or two other reasons.\"\n\nI was ready to ask what they were but I noticed her hands were shaking, as if she was nervous. So I took one of her hands in mine, ensuring her fingers were between mine as I squeezed. \"Something wrong?\"\n\nShe turned to look at me. \"Not yet. I haven't done anything like this in a long time. Shared a drink with someone. A stranger really.\"\n\nWe continued to chat as I drank her in some more. Her brunette hair went as far as her shoulders. Her blue eyes sparkled in the low light of the caf\u00e9. Her lips were full and definitely the sort I'd probably enjoy kissing. She had a slight tan and her skin looked flawless, that I could see. Her breasts were full, around a C-cup at a guess, and to my surprise, looked a little fake. I had no problem with fake breasts. Some women with smaller busts liked to enhance what they had to feel more confident in themselves.\n\nFinishing our drinks, she asked if I'd like to go home. Checking the time, it was after midnight and I had consumed quite a few drinks earlier. \"Want to share an Uber? I'll make sure you get home safely then just take it the rest of the way home.\"\n\nI booked one that was only five minutes away, waiting outside, continuing to chat away about anything that came to mind. Mentioning my kids made her smile, eventually opening my phone and showing her some photo's, mostly of my daughter. My son didn't really like having his photo taken. Natalie was a little model whenever I had my phone out to take pictures.\n\nThe ride home didn't take as long as usual as there's little traffic at that time in the morning. Pulling up outside her apartment block, I got out and walked her to the door. \"I live a few floors up,\" she said.\n\n\"I'd like to see you again, Cindy.\"\n\nShe smiled. \"I'd like that, Mark,\" she said softly. She took my phone and put her number in mine, and I did the same to hers. Then I took a chance and kissed her. First woman I'd kissed since my divorce. She tasted of mint, having slipped a piece of chewing gum into her mouth after our coffee. Her perfume was fragrant and wonderful. The Uber driver beeped his horn. I groaned before I broke the kiss.\n\n\"Two more minutes, mate!\" I yelled out, \"I'll give you a bigger tip.\"\n\nThen I kissed her again, wrapping my arms around her, pulling her to my body. Part of me wanted to stay with her that night, but I didn't feel in the right mind to leap into bed straight away. Finally pulling apart, she looked up at me with a smile. \"Well, that's a hell of a way to wish me goodnight, Mark.\"\n\n\"I'll call... tomorrow...\"\n\n\"I'd like that too.\"\n\nI kissed her again a final time before wishing her goodnight and walking back to the Uber. Getting home ten or so minutes later, I headed straight to the bathroom to pee. Looking in the mirror again, I saw a grin on my face for the first time in months. A genuine grin.\n\nHearing my phone buzz, I wandered out to the kitchen and opened the app. It was a picture of Cindy already in bed, thanking me for a great night. I replied, stating I'd had a great time, and that I'd like to do it again. To my surprise, the next sound was my phone ringing. It was Cindy.\n\n\"Let's have lunch tomorrow,\" she suggested.\n\n\"Okay. I can drive over and pick you up? Say around 1pm?\"\n\n\"Sounds great, Mark.\" I heard her yawn. \"I'm bushed. Sweet dreams, Mark.\"\n\n\"Goodnight, Cindy.\"\n\nDisconnecting the call, I headed to my room and undressed, having a quick shower, before getting into bed. I lay back and thought about the evening. I certainly hadn't expected to meet anyone that night. There was something joyful about her though. Some real joie de vivre. But, at the same time, she didn't seem troubled, but like when her hands started to shake, I think she perhaps had problems of her own. Just like all of us, to be honest.\n\nAfter breakfast and a visit to the gym the next morning, I sent Cindy a message when I was ready to go pick her up. Arriving outside her apartment block half an hour later, she buzzed me up, her door already open after I stepped out of the elevator. She was waiting for me, wearing a gorgeous red summer dress that highlighted her curves, the hem high enough to show off a great pair of legs. I definitely gazed at her in silence. \"You like?\" she asked softly.\n\n\"I definitely like. Any man where we eat is going to be jealous you're on my arm.\"\n\n\"Well, aren't you a charmer.\"\n\nThat made me snort with humour, setting off a giggle from her. \"Ready to go?\"\n\n\"Yes. I got us reservations at a place nearby. You're a man. I assume you eat meat?\"\n\n\"I do.\"\n\nShe grinned. \"Good. Let's go eat.\"\n\nLunch was fantastic but her company was what helped pass the time. Before we knew it, we'd eaten three courses and the conversation had been incredibly easy. Both of us feeling rather full, I suggested we just take a walk in a nearby park. She loved that idea, so taking her hand, we strolled around the man-made lake, passing by plenty of other couples and families soaking in the warmth and sunshine.\n\nLeading her off the path to the shade of a tree, I leaned back against it as she settled back between my legs, her head resting on my chest, cuddling her back against me. \"I could fall asleep like this,\" she said softly.\n\n\"Hmmm. Been a while since a young woman fell asleep with me.\"\n\n\"What are you doing tonight?\"\n\n\"Nothing.\"\n\n\"Would you like to come to my place?\"\n\n\"I'd love to.\"\n\nShe sat forward before turning around, straddling my lap, her blue eyes looking into mine. Chewing her bottom lip, she seemed to be thinking about something, before seeming to make up her mind, leaning forward to give me one hell of a soft but sensual kiss before cuddling into me again. God, I'd known her for maybe eighteen hours by this point and I was already thinking a lot of things.",
        "Returning to my car once the sun started to dip, she held my hand as I drove us back to her apartment. \"I feel safe with you,\" she said as we walked towards the door of the block. That was a slightly curious thing to say, at least to my ears, bringing me to a stop. She turned and looked at me. \"I already feel safe in your arms, Mark. Girls like me, we need that.\"\n\nI scratched my head. \"Girls like you? What do you mean?\"\n\nShe took my hand. \"We'll go upstairs and talk. Will you want anything to eat later?\"\n\n\"I'm still pretty full up.\"\n\nBack inside her apartment, it was tastefully decorated, dropping her things on the counter before she escorted me to the living room, sitting together on the couch. Turning towards her, she curled her legs underneath her, looking at me and I could see the nerves again. So I took her hand in mine. \"Okay, Cindy, something has been on your mind, I think since we first started talking last night.\"\n\n\"Mark, I really like you already, but I need to tell you something.\"\n\n\"Okay.\"\n\nShe took a deep breath. \"I'm a woman, Mark, but I'm a woman with... extras.\"\n\nI gave that phrase a moment of thought and, to be honest, figured it out rather quickly. Considering the way of the world, and adding to where I'd met her, I probably should have put two and two together. \"So you're transgender?\" She nodded. \"Um, I'm not sure how to ask the next question without possibly offending?\"\n\nShe shook her head though smiled at me. \"No. I don't intend to go through that surgery, but I've lived as a girl, then as a woman for fifteen years at least. I knew I was a girl before I knew anything else.\"\n\n\"And that's why you've been nervous?\"\n\n\"I haven't dated in a few years, Mark. Men don't react well to it when I confess the truth. Some just freak out and leave. One or two... have been a little more unpleasant. But you're just so damned handsome, and there is this aura around you. I knew, even if you couldn't accept, you wouldn't... hurt me. I've been hurt before. So have some of my friends.\"\n\n\"Who the hell would hurt someone as beautiful as you?\"\n\nThat earned me one hell of a kiss. Guess it was the right thing to say. She ended up straddling my lap again as we made out, lasting however long it did before we needed to break to catch our breath. \"Cindy, we've only just met each other, but trust me, I don't care. All I see on my lap at the moment is a beautiful young woman. Hell, there's a ten-year age gap between us. That's the thing that actually has me worried if... you know, this gets serious.\"\n\n\"Can you stay the night?\"\n\n\"I'll need to go home and get some things for work tomorrow.\" I watched the concern cross her face, as if thinking I'd leave and not come back due to her revelation. \"You can come with me, see my place at the same time. Bit of a bachelor pad compared to this place though.\"\n\nThe drive didn't take all that long, showing her around my apartment, proving my point about it being a bachelor pad. I'd been in worse places, but even after a year, it didn't feel like home. I packed a small bag with the things I'd need before heading to the kitchen to prepare my lunch. That's when she grabbed my hand. \"I'll make you lunch in the morning,\" she insisted, \"Probably better than whatever boring sandwich you'd make yourself.\"\n\nShe was absolutely right so I didn't argue, making sure I at least turned off the lights and locked the place up before heading back to the car. I think, by the time we returned to her apartment, we were both a little nervous. I certainly was. I hadn't been with a woman in far too long. And even though I was staying with her that night, I still wasn't sure I was in the right frame of mind for intimacy.\n\nWouldn't turn down a kiss and a cuddle though. Considering I'd been starved of affection from a woman for a couple of years, just something like a hug would feel wonderful.\n\nLeading me through to her bedroom, she had an enormous bed, a couple of pictures hanging up on the wall, a dresser covered in feminine beauty products, and a small flat-screen TV on the wall. Built-in wardrobes full of clothes. The bathroom was on the opposite side of the hallway. I sat on the bed as she took off her sundress, standing before me in a matching pair of red bra and panties. Turning towards me, she smiled.\n\n\"Like what you see?\" she asked softly. I didn't trust my voice so made do with a firm nod. She smiled again, helping take off my shirt before bending down to take off my shoes and socks, then standing me up to lower my jeans, leaving me in my boxer-briefs. \"Bet you're wondering where I keep mine, right?\" she asked, running her fingers over my obvious bulge. I was decently sized, and the one thing the ex-wife had never complained about was our sex life. Which made her cheating even weirder in some sense. She'd never really explained herself, though I didn't really want to hear her excuses either.\n\n\"I'll admit, it has crossed my mind.\"\n\n\"I tuck it.\"\n\n\"Fair enough.\"\n\nStraddling my lap, she kissed me without hesitation as my hands found their way to her back down to her arse. She smiled when I gave that a gentle squeeze. \"Boobs are fake, arse is one hundred percent mine,\" she said, giggling away.\n\n\"Hang on, arse implants? I must be living under a rock sometimes.\"\n\nWe ended up under the thin sheet and blanket. I wasn't in any hurry to have sex and Cindy seemed to realise that about me, though feeling her tight body pressed up against mine provoked the sort of reaction that made her smile. \"Most men would just be wanting one thing from me now,\" she whispered, and I could hear the sadness in her tone, \"Though now I'm wondering...\"\n\n\"Can I be honest?\"\n\n\"I'd rather you be than not.\"\n\n\"You're fucking hot.\" That made her smile. \"And while my body is screaming at me to do things, my mind... I don't want this to feel like some sort of rebound for either of us. All I know is that I really like you already but don't feel the need to rush into anything. I mean, I only met you last night and you've invited me to stay tonight so I think that's something. Right?\"\n\n\"You're not worried about the... extra parts?\"\n\nI kept my eyes on hers as I ran my fingers down her flat stomach towards the band of her panties. She opened her legs slightly as my fingers slid under the narrow band, and I could feel the heat of her cock. I barely brushed against it, but made sure I smiled. \"No, it doesn't bother me, because that doesn't define who you are. What I've learned so far is that you're a beautiful, intelligent, witty and rather fun young woman.\"\n\nThat earned one hell of a kiss before she cuddled into me. \"Charmer,\" she murmured, \"Although it is nice to have a man in my bed to hold me all night.\"\n\n\"Now that I can do happily.\"\n\nProbably had my best night of sleep in months that night. I woke in the morning to feel Cindy spooned back against me. She woke up at roughly the same time I did, hearing her chuckle as she wiggled her arse against my obvious erection. Lifting her right leg over mine again, I ran my hand down her body and felt her erection having already popped out of her panties. \"Well, looks like we share similar features in the morning,\" I whispered into her ear.\n\n\"Want to shower together before breakfast?\"\n\n\"That sounds like a rather delightful way to spend a few minutes.\"\n\nAfter we both visited the toilet to pee, I stepped into the shower stall where she was already wet. She pulled me close and the door shut, her mouth looking for mine again. Pressing her back against the wall, our tongues duelled playfully as we were both erect again in seconds. Both of us glanced down and smiled. \"We're the same size,\" she said with a giggle \"I've read some erotica about girls like me. I'm seven inches and thick enough that it'll feel good.\" Her fingers grasped mine, causing me to shudder. \"And yours is almost the same.\"\n\n\"Never heard complaints,\" I muttered.\n\n\"Want to wash me?\"\n\n\"I'd love to.\"\n\nI had great fun soaping up her body. She was athletic but not to a major degree, just kept herself nice and fit. Told me her cup size was a C, which I'd assumed, and she was five-nine, so shorter than my six foot. She knew I'd have a lot of questions about her life, and said if I was interested, she'd tell me all about it the more we got to know each other.\n\nAfter she returned the favour, washing me up and down, she leaned back against me as we stood under the hot water. \"I usually jerk off in the shower each morning,\" she explained, \"Generally keeps me going until midday. I'll go jerk off at lunchtime.\"\n\n\"Got a high libido?\"\n\n\"I love to cum.\" With one arm around her body, she lifted her head back against my chest. \"Would you like to... stroke me?\"\n\n\"Well, that's something I never thought I'd hear in my lifetime. But I'd love to, Cindy.\"\n\nHolding her in my arm, I gently grasped her cock with my right hand. She shuddered and gasped at my touch, using a little more body wash to lube up her cock. Within a couple of minutes, I had her moaning softly, her body moving against mine. She could feel my erection against her. Snaking a hand back to grab me, I whispered into her ear, \"Just let me take care of you this morning.\"\n\n\"I'm keeping you, Mark,\" she whispered back.\n\nShe must have been horny as she blasted cum all over the tiled wall within five minutes. She came a lot, at least five long, white streaks of cum, amused when she grabbed my fingers and sucked them dry. Then she seemed to realise, glancing back and smiling, with a blush on her cheeks. \"I love cum, even my own,\" she said.\n\n\"Something I might have to get used to?\"\n\n\"I hope so,\" she replied softly.\n\nWe got out eventually and dried off, dressing in her room before she happily made us both breakfast, then she made me lunch. Watching her bounce around the kitchen to the tunes on the radio had me smiling and chuckling the entire time. She was a bundle of energy and in a great mood. When I mentioned that, she stopped and turned. \"My lover made me cum. I feel a lot lighter,\" she said. Walking towards me, she gently grabbed my crotch. \"Are you sure you don't need to cum too?\"\n\n\"I'll be fine.\"\n\n\"Not often a man turns down...\" She leaned forward and kissed me. \"I would love to suck your cock, Mark. I mean that, one hundred percent.\"\n\n\"Okay,\" I said, smiling away, \"You've convinced me.\"\n\nBreakfast and lunch preparation was immediately abandoned as she slid down to her knees, undoing the belt around my trousers, then the button before lowering the fly. Fishing out my cock, I was already semi-hard, and just meeting her gorgeous eyes, the licking of her lips, the feeling of her tongue along my shaft, had me rock hard in seconds.\n\n\"Nice and quick, baby,\" she cooed, \"We do have jobs to get to.\"\n\nShe licked my cock up and down a few times, circling her tongue around the head, her eyes never leaving mine. Considering I was as horny as she'd been, I knew I wasn't going to last too long. Couldn't remember the last time I'd been blown. The ex-wife... Eh, best stop thinking about the bitch. Cindy slowly took most of my cock in her mouth in one smooth move of her head, quickly bobbing up and down on my cock, her tongue driving me wild.\n\n\"Fuck,\" I grunted, running my fingers through her brunette hair.\n\nLooking up, she smiled around my cock as it popped out of her mouth. \"I'm going to swallow every drop, Mark,\" she said before my cock disappeared again.\n\nHonestly, I was having a difficult time remembering a better blowjob, or at least one done as enthusiastically. Her fingers were gently fondling my balls at the same time. I couldn't help but look at her, almost in disbelief that someone so beautiful had chosen to approach me two nights previous.\n\n\"I'm close,\" I warned her. Her eyes lit up again as her head bobbed up and down quicker, almost a desperate need to make me cum. Continuing to stroke her hair, I had to take a couple of deep breaths as I felt the orgasm bubbling up.\n\n\"Oh fuck,\" I groaned. The first spurt did catch her by surprise, but she was ready for the rest. I relaxed back on the chair as I felt myself empty completely. Beat jerking off back at my apartment, that was for sure. As I relaxed, Cindy kept sucking me until I was empty, her tongue then cleaning up, down and around my cock.\n\n\"Yummy,\" she whispered, putting away my cock and doing everything up before sitting on my lap and kissing me. \"I wanted to do that as soon as we got back here last night,\" she admitted.\n\n\"I should have said yes!\"\n\nWe ate breakfast together before she gave me a tupperware box with some pasta and sauce she'd cooked at the same time. Certainly better than a boring sandwich. I thanked her profusely. \"I take care of the man in my life,\" she said sweetly.\n\nHeading downstairs together, we kissed one last time before getting into our respective cars. \"I'll call tonight,\" I said, \"I have the kids next weekend. Friday night through to Sunday afternoon. Well, my daughter...\"\n\n\"Is it too early to meet this daughter of yours?\"\n\n\"I have no idea. I've been single for over a year and I don't know the rules.\"\n\n\"Your ex-wife?\"\n\n\"I have no interest in her private life. Long as it doesn't affect my kids, she can do what she wants.\" I took her hands in mine. \"I would like to see you again soon though.\"\n\n\"Then we'll figure something out. What do you normally do with your daughter?\"\n\n\"Honestly? Whatever she wants.\"\n\n\"Wrapped around her finger, are you?\"\n\n\"Probably worse now. Gives the ex-wife another thing to bitch at me about.\" I sighed. \"I'll call you tonight regardless. Want to meet up during the week?\"\n\n\"I'd love to.\"\n\n\"Then we'll figure it out as we go.\"\n\nWalking into my office at the mechanics, having been the manager of the place for five years now, I was left alone for the first hour before Mike and Chris both walked in and shut the door. Glancing up from my laptop, they sat across from me with expectant looks on their faces. \"What?\" I asked.\n\n\"So...\" I gestured for Mike to elaborate. \"So how'd it go?\"\n\n\"How did what go?\"\n\n\"You left with Cindy. Chris and I know her by sight rather well. She's a semi-regular in that place.\"\n\n\"I assumed so considering she knew the lady behind the bar and they seemed to be friends.\"\n\nThey shared a glance. \"You know, don't you?\" Chris asked, \"She's already told you.\"\n\n\"Of course. She was very brave. I know confessing something like could be potentially harmful in more ways than one.\"\n\nThey shared another glance before they grinned. \"You like her,\" Mike said.\n\n\"I stayed at hers last night.\"\n\n\"Holy shit!\" Chris exclaimed, \"Seriously?\"\n\n\"I'm not going into details. But she's a lovely woman and there's definitely a spark between us. Natalie will be at mine this weekend. I'm already thinking of inviting Cindy over.\"\n\n\"And the fact she's... you know...\" Mike made a certain gesture. \"You don't mind?\"\n\n\"No, I don't. Already seen her naked, know what's going on regarding that. It's not a big deal to me. To many others, it would be a dealbreaker. She knows and understands that. I've assured her I like her for her.\"\n\nThey both grinned before Mike looked at Chris. \"When was the last time we saw him this happy?\"\n\n\"Fucking years, to be honest. Spent far too long putting up with the other bitch.\"\n\n\"I'm not counting chickens regarding Cindy. We've barely known each other for three days. But I think there's a base here for something good, long as I don't fuck it up. Now, I'm sure you have customer cars to take care of out there.\"\n\n\"Well, Chris, looks like the three of us finally got lucky on the weekend,\" Mike said, both men standing up, laughing to themselves as they left me alone.\n\nI called Cindy the next couple of nights as she didn't get home from the city until late each night. Wednesday night, though, she called me as soon as she was in the door, asking if I wanted to go to a nearby club for dinner. It was a fine idea, driving over to pick her up, Cindy dressed in a yellow sundress this time, tight to her body, showing off her spectacular leg. I got out and opened the door for her, earning one hell of a kiss, the sort that ended up with her pressed against the car, the idea of going out almost disappearing before she mentioned something about dinner and drinks.\n\nTaking her by the hand as we entered the premises, I noticed quite a few glances in her direction. She was gorgeous, she knew it, I knew it, and I felt myself walk even taller, aware that such a stunning creature was on my arm. \"They're jealous of you,\" she whispered.\n\n\"Can you blame them?\" I looked around then met her eyes. \"Can't see anyone who looks better in here than you.\"\n\n\"Talk like that will get you in my panties later.\" She stood up on her tiptoes close to my ear. \"You won't have to worry about removing a bra, at least,\" she whispered, \"One of the good things about fake tits. They just sit there most of the time.\"\n\nChuckling to myself, we found a table, and after checking the menu, I placed our orders for food at the counter before heading to the bar, buying us a drink each. Conversation flowed easily again, mentioning the fact my two friends recognised her. She didn't know them well at all, admitting she kept to herself more often than not, only conversing with friends and those she knew well.\n\n\"Do you get women trying to pick you up?\" I wondered.\n\n\"Of course. So I have to shoot them down rather quickly. Most are nice about it, but I've had more than my fair share of nasty comments too. It can be difficult at times, which is why girls like me are usually so careful telling people the truth.\"\n\n\"I don't really know,\" I admitted, \"I mean, I was married for nearly ten years. The world sure went and changed in some ways during that time.\"\n\n\"But you... accepted me immediately...\" she said, smiling at me.\n\n\"Yep.\" I didn't think I needed to add anything to that.\n\nFinishing dinner, we had another drink before I drove us home. Stopping outside her apartment block, I turned towards her. \"Want to stay at mine tonight?\"\n\nShe grinned broadly. \"Give me five minutes.\"\n\nTen minutes later, she opened the door, threw a bag in the back seat, before sliding into the passenger seat, leaning over to kiss my cheek. Holding my hand the entire way, thankful I drove an automatic, she moved over enough that she could lean across and against me. Parking my car, I led her up to my apartment. As soon as I shut and locked the door, she practically leapt on me, her bag ending up on the floor by the front door.\n\n\"I've missed you,\" she admitted.\n\n\"Missed you too,\" I replied, our mouths barely parting otherwise as I led her to the bedroom. Wasn't as tastefully decorated as her bedroom. Honestly, it was the bedroom of a single man who had gone through a bitter divorce. Sheets were always clean, though. Nothing better than sliding into a bed with clean sheets.\n\nClothing was removed quickly before we were down to our underwear. Her breasts were perfect and, while we both knew they were fake, they were not obviously fake. Noticing her nipples were rock solid, she smiled at my reaction. \"They're still very sensitive too,\" she whispered. Meeting her eyes, I took one of them in finger and thumb, giving it a gentle squeeze and pull. Her reaction earned a grin. \"Mark, do you want to make love tonight?\"\n\n\"Um... stupid question but how?\"\n\n\"Not a stupid question. I have lube. I want you to make love to me.\" She rested her hands against my chest. \"Have you thought about the other way?\" I nodded. \"Does that... concern you?\"\n\n\"No, it doesn't. I just wasn't sure if you were interested... you know, being a woman.\"\n\nShe smiled. \"It's one of the reasons why I'm not going to lop it off. I still love to feel myself get hard. I still love to stroke myself to orgasm. And I still love to fuck and cum in someone, though I prefer having love made to me.\"\n\nI kissed her softly. \"Good to know. Something we can discuss later, right?\"",
        "\"But you're not saying no?\"\n\n\"I'd never say no, Cindy. But I'm still a man, consider myself relatively heterosexual, not particularly submissive, and... you know, there are still certain hang ups about the idea of being a bottom, even if it's doing it with a woman I really like.\"\n\nShe wrapped a hand up towards the back of my head, dragging me down to kiss her. \"Where were you five years ago?\" she whispered.\n\n\"Unhappily married,\" I replied, pulling her tight to me, \"And being thirty at the time, and you twenty, would have raised even more eyebrows.\"\n\n\"Wait right here.\" She returned within a minute carrying her bag, opening it up and fishing out quite the bottle of lube. Noticing my grin, she explained, \"Well, I use it to jerk off too.\"\n\nPlacing that on the bed, she moved back towards me, helping me wriggle out of my underwear before I slowly removed her black panties. Hands sought and found the cock of each other, gently stroking as we slowly lowered ourselves onto the bed, our mouths barely parting again as she ended up underneath me. I had to give those perfect breasts of hers some attention, and whoever her surgeon was should be thanked. I'd seen some horrific jobs during my time surfing the internet. Hers suited her body and frame perfectly, and by the sounds she made, she loved the attention.\n\nKissing down her body, I noticed her lift her head and smile, soft kisses all across her abdomen before I arrived at her stiff cock, not a single hair around her groin region. Her balls were around the same size as mine. I could see pre-cum oozing from the head. \"Mark?\" she asked softly.\n\n\"I want to, Cindy.\"\n\n\"Okay.\"\n\nI didn't know what I was doing, of course, relying on what I'd seen in porn, and what Cindy had done to me the other morning, as a guide, in addition to watching her reactions. Grabbing the base, it amused me that our cocks were roughly the same. I think she was perhaps a little thicker, while I was a little longer, but it didn't really matter.\n\nLicking it like a lollipop provoked a chuckle, covering her shaft in my saliva, circling the head with my tongue and tasting her pre-cum. It wasn't as bad as I thought it would be. \"Will you swallow?\" she asked. I nodded affirmatively before I took a couple of inches in my mouth. I enjoyed the gasp she made, immediately followed by the movement of her hips. \"Oh god,\" she murmured.\n\nI knew that teeth were a no-no, and that I should use my tongue. Feeling her fingers through my hair, I glanced up to see Cindy looking down at me, nothing but a grin. I perhaps took two-thirds of her cock before I realised, to take more, I'd have to do something else. \"It's okay, baby. We'll train you on that later,\" she whispered, \"What you're doing now will definitely make me cum.\"\n\nWhile I did want to make her cum, I also wanted to get some practice, so keep the bobbing of my head nice and slow, running my tongue up and down her shaft at the same time. She always smelled delightful, and I was left thinking she'd even scented up her cock and balls. Remembering those, I made sure I started to give her balls a gentle fondle at the same time.\n\n\"Oh god, Mark,\" she moaned, her hips starting to move up into my mouth, fingers gripping my hair tight, \"I'm close already, baby. God, I want to cum in your mouth.\"\n\nI actually liked the sound of that too. I genuinely wanted to make her happy, and if making her happy was finishing in my mouth and swallowing, I'd do it for her. My head bobbed up and down faster, her hips moving quicker at the same time, looking up to see the lust and desire in her eyes. I managed a grin despite her cock being in my mouth. \"Close, baby...\"\n\nI felt her cock start to throb, but the first shot in my mouth still took me by surprise. Moving her cock just enough that the other spurts filled my mouth, I swallowed down each spurt as quickly as possible, surprised that it wasn't as unpleasant as I thought it would be. In fact, while I won't say it was nice, it was something I could see myself doing all the time, if it earned the smile that was on her face at the precise moment.\n\nOnce she'd stopped firing into my mouth, I used my tongue to clean her up, making her hiss as I teased the head of her cock, before kissing back up her body, all the way to her mouth. I quickly found myself wrapped in her arms and legs. \"Baby, that was wonderful,\" she murmured, \"Sure that was your first time?\"\n\n\"It was. But... well, guess I've watched quite a bit of porn in the last year and more. Never thought watching chicks blowing dicks would help me do the same thing!\"\n\n\"Ever watched transgender porn?\"\n\n\"Of course. There's a reason why it's so popular, right?\"\n\n\"You watched it the past couple of nights, haven't you?\"\n\nI grinned. \"Guilty as charged.\"\n\n\"Want to make love now?\"\n\n\"There is one thing I really want to do to you first.\"\n\nShe smiled as she asked, \"Oh, what's that?\"\n\n\"I want to eat your perfect little arse first.\"\n\nThat earned one hell of a kiss from her, tongue exploring my mouth for a good couple of minutes, before she finally pulled back. \"While you do that, you can get me nice and ready for your big cock.\"\n\nShe was rather excited as she turned over onto her hands and knees, shaking her pert little arse in my direction. Her cock was already hard again too. Considering she was ten years younger than me, I guess it wasn't that big of a shock she would be ready to go again quickly. Spreading her cheeks, my tongue gently tickled her rosebud and she moaned loudly.\n\n\"God yes, baby. Give it some affection.\"\n\n\"Even your arsehole is pretty, Cindy.\"\n\nThat earned a loud giggle.\n\nLowering her head to the bed, she seemed to love anything and everything I was doing, though impatience did eventually get the better of me as I soon poured some lube onto my fingers and her little rosebud, removing my tongue as I started to feel her up instead. Once she gave me the go ahead, I slid a finger into her. She felt incredibly tight, and that left me wondering how the hell I was going to slide my cock inside her.\n\n\"Once you've got three in me, it'll be golden, Mark,\" she murmured, \"Nice and slow, lots of lube.\"\n\nI'd obviously never done this with the ex-wife. I'd ask every so often, not even anal sex, just a little finger. But just brushing my fingers across her rosebud accidentally led to an argument and no sex. I eventually just gave up asking, and once our sex life dried almost entirely, well, I guess that explains plenty of what happened.\n\nA second finger inside Cindy earned a soft moan, thrusting both in nice and slow. She started to stroke her cock again, running the fingers of my left hand up and down her back. \"That's nice,\" she whispered, \"Relaxing.\"\n\nGiven the go ahead for a third finger, I applied more lube to my fingers before giving her the third. She moaned even louder, starting to rock her hips back as I gently thrust my fingers into her. I assumed she likely had toys to use on herself, but I figured this was something you'd need to do anytime you had anal sex. Can't just go forcing a cock inside... unless you enjoyed the pain of it, I guess.\n\n\"Okay, Mark... Okay... Let's make love.\"\n\n\"Turn on your back,\" I requested softly, \"I want to watch your face.\"\n\nShe turned around and kissed me, pressing her body into mine, as she moved her legs to fall back onto the bed with me between them. Having already lubed up my cock, she grabbed a pillow and slid it under her butt, spreading her legs, grabbing under her knees. \"Take it slowly,\" she instructed, \"It's not a pussy. Well, not exactly...\"\n\nPressing the head of my cock against her rosebud, she nodded for me to push forward. I took it nice and slow, watching her face, surprised to see a mixture of concentration and pleasure already. I noticed her relax as soon as the head of my cock slid inside her, and I moaned at how tight she was. \"Fucking hell, Cindy,\" I muttered.\n\n\"You like my arse, baby?\"\n\n\"I fucking love it already.\"\n\nLeaning down to kiss her again, I spent the next couple of minutes sliding in the rest, not feeling any rush to start fucking her. Just being inside her in such an intimate manner was enough. Her fingers were busy caressing my cheek and running through my hair, gazing into my eyes. Fuck, she was beautiful...\n\nFeeling my entire length now inside her arse, she groaned and shuffled underneath me. \"Touching my prostate, baby. Keep that angle and I'm going to cum like a fountain.\"\n\n\"Definitely want to make you cum, gorgeous.\"\n\nSlowly sliding in and out of her arse, I learned that she did like a bit of dirty talk. She probably found me rather quiet, relying on my grunting and moans. Again, a leftover from my failed marriage. Cindy wanted to hear me talk, urging me to tell her what I was thinking, feeling, what I wanted. It took me a few minutes to come out of my shell.\n\n\"I love your cock, baby,\" she moaned, \"Been too long since I had a nice thick one in my arse.\"\n\n\"You're my first, Cindy,\" I admitted, \"Never had anal before.\"\n\n\"Oh baby, you've been missing out.\" She took my right hand and lowered it between us. \"Stroke my cock, baby. Make me cum as hard as you will.\"\n\nLeaning down to kiss her, I started to pump her just a little faster. Earned a few louder moans, her fingers digging into my back, feeling her legs loosely wrap around my hips. \"Fuck,\" I groaned.\n\n\"Don't cum too soon,\" she whispered, before she smiled, \"Though I won't complain to riding your cock later.\"\n\n\"I'd love to see that.\"\n\nI removed my hand from her cock as I focused on fucking her, getting the right angle to provoke another of those groans that told me I was hitting the right places inside her. I only stopped to apply some more lube, feeling it get a little dry, before she ran her fingers down my back to my arse, the sign for me to start fucking her hard.\n\n\"Fuck yes,\" she groaned as I did what she wanted. Fuck, her arse felt even tighter. Then she moaned even louder, feeling her cock throb between us, and a hot liquid splashing against my chest, looking down to see cum firing from her cock. \"Oh baby... oh baby, yes...\" She grabbed my head, leaning up to kiss me, our tongues duelling again as I didn't relent on her for a second. \"Cum in me, baby. Fuck, you need to cum in me.\"\n\nPushing her back down, I removed her legs from around me, spreading them and placing them against my upper arms. Raising an eyebrow, she smiled and nodded. For perhaps two minutes, I fucked her hard. Didn't wince a single time. Instead, she urged, begged, pleaded me to keep going until I finally came inside her.\n\n\"Fuck, I'm close,\" I grunted, \"Cindy...\"\n\n\"In me, baby. Bury your cock and blast away.\"\n\nWhen the orgasm arrived, I was left thinking it was the best of my life to that point. I had no idea I could cum so much and it would just feel so powerful. No idea how many times I spurted inside her, groaning before I lowered my mouth to kiss her again, moving her legs so they were wrapped tightly around me. Only when I stopped thrusting as I felt empty did I stop kissing her, resting my head next to hers.\n\n\"Fucking hell,\" I muttered.\n\n\"Are you sure you haven't fucked a girl like me before?\" she joked, \"Because if that's your first time, damn, I'm in for a great time in the future.\" I met her eyes and chuckled as she caressed my face. \"Mark, that was... worth waiting for since we met on Saturday.\"\n\nPulling out, I rested on my side next to her as she turned to face me. We made out for a few minutes, cuddling at the same time. I watched as the cum on her chest dribbled onto the bed. She joked that cum was also leaking out of her arse too, and that it's just something you get used to. What surprised me was that, despite quite the intense orgasm, my cock only deflated a little bit, and her fingers were soon having it rise to the occasion again.\n\nWithout a word, she gently pushed me onto my back, lubed up my cock again and happily slid down my shaft until my cock disappeared entirely. \"Can you handle me finishing all over you?\" she asked.\n\n\"Cindy, at this moment, you can do whatever you want, as long as it involves my cock being buried where it is right now.\"\n\nShe let her cock go and focused on just bouncing up and down on me. Her cock slapping against her then me with every bounce amused us both. Gently grasping her cock, she poured a little lube on my hand before I started to stroke her. She changed how she rode me so it made stroking her easier and better.\n\n\"Make me cum again,\" she whispered before leaning down to kiss me, \"Love a man who wants me to cum so much.\"\n\n\"I love your cum face. It's very pretty.\"\n\nShe rode me in such a manner that she could almost fuck my hand at the same time. Given I wasn't going to cum again anytime soon, my focus was helping her orgasm again. I spent a lot of time watching her face and her eyes. She looked utterly delighted with what she was doing. Her arse was so incredibly tight, it almost felt like a vice at times.\n\nIt was a warm evening. Our skin was now glistening with sweat. Considering all the cum, we would definitely need a shower once we were finished. Her brunette hair was now stuck to her forehead, trying to blow her hair out of her eyes otherwise. Her cheeks were bright red. Her eyes focused on mine nearly the entire time.\n\n\"Oh fuck, your cock,\" she moaned, \"I'll take over on my cock, baby. You just hold me upright.\"\n\nShe was soon pumping her cock fast, almost desperate to cum again. I pulled her down slightly, moved my legs, and started to pump up into her. It was the right thing to do as she moaned loudly. \"Cindy,\" I groaned.\n\n\"Going to cum again, Mark,\" she cried softly, \"Oh god...\"\n\nI felt warm cum land on my chest again, glancing down to see spurt after spurt of milky white cum land on me. I slowed my thrusts as she enjoyed her orgasm, smiling as she lifted her fingers to her own mouth before offering them to me. I cleaned them up nicely before she leaned down to kiss me. \"I'm going to make you a cum addict,\" she warned, chuckling to herself.\n\n\"Maybe yours, Cindy.\"\n\nLeaning down on her forearms, she kissed my cheek. \"Fuck me, baby. Fuck me and cum in me again.\"\n\nResting my hands on her cheeks again, we both got comfortable before I started to pump into her. The dirty talk ended as all she asked for was harder and faster. I relied on grunts and groans, finding myself further and further incapable of speech with each passing minute. Her arse was just exquisite. I had no idea how long this burgeoning relationship would last, but I was already hoping that this was going to last for a long time yet. And she seemed to like me just as much, so it seemed, and so I hoped.\n\nShe was in the middle of kissing me when I finally unloaded inside her. I groaned. She giggled. Four, five decent spurts again before I just felt myself relax back on the bed, Cindy relaxing on my chest. We were going to shower anyway so the cum stuck between us didn't matter. \"Now that was some fucking great sex,\" she murmured into my ear.\n\n\"Where were you five years ago?\"\n\nShe laughed. \"I was at university, avoiding the dickheads who thought I'd be an easy fuck for... well, reasons, I guess.\"\n\nShuffling back until I was sitting back against the wall, she sat up so my cock fell out of her, before she sat on my lap. Caressing her cheek again, she closed her eyes and smiled. \"I'm not used to this,\" she said softly, \"I haven't dated in at least five years, but I have needs. Each time, I just felt... dirty... used to complete some bucket list fetish...\" Opening her eyes and smiling, she added, \"You're the first man in a long time who makes me feel... good. No, not good. You make me feel wonderful, Mark.\"\n\nShe cuddled into me, and we only moved when we started drifting off to sleep. After a quick shower, I changed the top sheet and blanket before we snuggled. I thought she would spoon, but she turned so her head rested against my chest, wanting to feel my arms wrapped around her. \"I've slept alone nearly every night,\" she said, \"Now I have a man who likes to cuddle.\"\n\n\"Particularly if it's with someone like you.\"\n\n\"You always this sweet?\"\n\n\"I am with women I really like.\"\n\n\"I know we haven't known each other long, but... Do you want this to go somewhere?\"\n\n\"Yes. Absolutely.\"\n\nShe was silent for at least a couple of minutes before she whispered, \"Me too.\"\n\nDrifting off to sleep before me, she moved in her sleep, cuddling tighter to me again. I didn't just want it to go somewhere. I knew, from lying next to her, that I was falling for her big time. I wasn't used to the feelings, in all honesty. I hadn't felt the feeling of falling in love in over a decade, and of being in love for at least a couple of years. It terrified me a little bit.\n\nBut if Cindy ended up feeling the same way, if she didn't already, then it would be worth it.\n\n*****\n\nA/N -- As I said above, sticking for a romantic feeling, at least for the first couple of chapters. Then their journey together will really begin, and it will be a lot of fun for them both."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "romance",
        "transgender",
        "transwoman",
        "anal",
        "tgirl",
        "mtf trans"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/ambiramus-ch-01"
}