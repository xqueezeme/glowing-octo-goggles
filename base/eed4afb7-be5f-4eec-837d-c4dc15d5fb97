{
    "title": "The Things You Make Me Feel Ch. 09",
    "pages": [
        "\"No, you sit, babe; I'll go.\"\n\n\"Are you sure, hot stuff?\" Dave asked.\n\n\"Positive,\" Kara giggled and gave him a big, fat kiss. \"I'll be right back.\"\n\nShe stepped out of the theater to get some more popcorn.\n\nKara and Dave had been going out for two weeks now, and Kara couldn't have been happier with her pick. Although, at first, it was Oliver who'd caught her attention, Dave made her quickly forget that his brother was ever a contender. She'd found her soulmate in Dave, she felt, and Oliver did seem to her a bit of a brooding bore compared to her jovial boyfriend\u2014which was a massive relief for her BFF, who had done all that she could to desexualize Oliver in Kara's eyes. Ellie didn't want to give her best friend up, but she would in a heartbeat had she kept pursuing him.\n\nKara returned to the theater with the popcorn and coke. She climbed down the stairs to the row they were sitting in when something unexpected made her stop in her tracks and observe.\n\nShe and Dave had gone out on a double date with Gena and Jack, with Ellie and Oliver tagging along. It was in fact a triple date. That, however, was known only to half of the six. The seating arrangement from left to right was as follows: Ellie, Gena, Kara, Dave, Jack, and Oliver. The girls had orchestrated that before the movie commenced. They wanted to opportunity to be able to chat if the picture proved to be a bore as it was guys' pick.\n\nKara dismissed the disturbing thought with a resolute head shake and returned to her seat, scolding herself for even suspecting such a vile thing.\n\n***\n\nChristmas eve, the Jensen residence.\n\nDan, Alice, and their children were seated round the table and enjoying a festive meal laden with strong booze and delectable food. Jack's newly fianc\u00e9e, Gena, was also there along with Dave's girlfriend and little Michela. Jack had popped the question two days ago, and it seemed the Jensens would be getting their wedding after all.\n\n\"You'd better not be pulling an Ellie on us in a couple of months,\" Dan quipped while twirling his glass of cognac on the table.\n\n\"Dad!\" Ellie objected with the majority of the table voicing its amusement.\n\n\"I'm just saying, pumpkin! I don't feel like paying for two weddings and have none of my kids married. We want to see some grandchildren around here for crying out loud. We're not getting any younger.\"\n\nEllie shook her head in mock ire before giggling into her glass of orange juice.\n\nTruthfully, she didn't mind her father's banter at all. She was the happiest she'd ever been, and she knew that calling off her wedding had a great deal to do with it.\n\n\"Well, Dan, you may not need to wait for much longer,\" Gena said timidly and glanced at Jack.\n\nJack studied her face, realization slowly shaping his. \"You're pregnant?\"\n\nGena nodded in a blend of excitement and apprehension. She'd learned that just earlier today.\n\n\"Oh my god!\" He slapped a kiss on her lips, cueing the rest of the table to commence the festivities.\n\nAll the women lurched to their feet to congratulate them, including Michela. The guys followed suit, and the Christmas cheer hit new highs. Dan left the table to fetch an exceedingly expensive bottle of Merlot, and by the time he returned, the seating arrangement had been reshuffled, with the women now clustered together and discussing everything pregnancy, from the sex of the baby to the due date. The head of the family uncorked the wine bottle and started filling glasses while the ladies were already conjuring up possible names and throwing out d\u00e9cor ides for the nursery.\n\n\"So, was it a part of the plan or was it an accident?\" Dan asked, wreathed in the smoke of his Cuban cigar and elated at thought of a baby crawling around the house soon.\n\n\"How can something like that be an accident nowadays, with the pill?\" Kara said. \"It's downright impossible, isn't it?\"\n\n\"You'd be surprised,\" Alice said knowingly and tried hiding her smirk as she took a swig from her wine.\n\nJack chuckled at his mother, noting the not so subtle smile. \"Oh my god, what did you mean by that?\"\n\n\"Nothing,\" she blurted with blush in her cheeks from either the wine or from\u2014\n\n\"Dad?!\" Jack said.\n\nDan guffawed at his perturbed son. \"What you mother meant to say was that... accidents do sometimes happen.\"\n\n\"Who?!\" Ellie said, also agitated at the news. \"I bet it was Dave, wasn't it? He has accident written all over his face.\"\n\n\"Why me?! I bet it was you!\"\n\n\"Hey!\" Jack exclaimed. \"If it was her, then it was me, too!\"\n\nThe siblings kept bickering, none ready to be labeled as the oops child.\n\nOliver didn't participate. He sipped his wine as he looked across from him at his girl, who while perched in his mother's lap, was enjoying a scrumptious piece of blueberry pie. He smiled at her, yet she couldn't tell, or maybe because she couldn't tell. Her attention bounced back and forth between her quarrelling uncles and her pie. That little feisty Italian was loving every second of it.\n\n\"Dad,\" Ellie said with a haughty smirk, \"tell Dave the truth, so he can start accepting that no one wanted him, and that he imposed himself on our family.\"\n\n\"Ellie, look at this face,\" Dave said, pointing at his face. \"This is the face of a love child. You're the accident! Embrace it.\"\n\n\"I'm the accident?! You're so...\"\n\nDave and his sister were going at it incessantly and cracking everyone up. Unlike their brothers, they found great pleasure trading banters and wits and could probably keep going all night long.\n\n\"Dad, tell Ellie\u2014\"\n\n\"No, you tell Dave\u2014\"\n\n\"Knock it off,\" their father ordered with a chuckle and poured himself more wine. Seeing Dave and Ellie going at each other's throats was entertaining as ever. \"You want to know? I'll tell you. One or more of the four of you was an unexpected yet a very welcome surprise, and that's all I'm gonna say on matt\u2014\"\n\n\"Ha! He said more. You and Jack are so the accidents.\"\n\n\"One or more. He just didn't want to throw it in your face in front of your girlfriend, you lab freak.\"\n\n\"Oh, just tell them already, Dan, or they will never stop.\"\n\nAlice tried to sound irritated, but she was as amused as her husband.\n\n\"Very well. That is if no one objects.\"\n\nThe siblings looked at Oliver, who shrugged with an I-couldn't-care-less face.\n\n\"Go on, Dad,\" Ellie said. \"Break Dave the painful news.\"\n\nDave snickered. \"We'll just see about that.\"\n\nWhile all eyes on him, Dan poured himself more wine and took a sip, lingering for the effect. He could feel how anxious his children were to label and mock the poor bastard/s. He took a second sip, his face expressionless. He set his glass on the table and smiled at his wife. His smile sloped down to his granddaughter as he ruffled her hair, and from Michela, the smile was shot across the table at her father.\n\nOliver shook his head in mirth. \"Of course...\"\n\n\"Oh, god,\" Dave chuckled, ecstatic that it wasn't him. \"Oliver! You wretched oops baby!\"\n\n\"Behold\"\u2014Jack gestured at Oliver with both hands\u2014\"The accident.\"\n\nJack and Dave kept taking turns congratulating their brother for being the mishap.\n\nDan picked his granddaughter up and sat her in his lap. \"Sometimes, the best things are the things you never even knew you wanted.\" He planted a loving kiss on Michela's cheek. \"Isn't that the truth, son?\"\n\nOliver slowly nodded, his eyes on his oblivious, simpering daughter.\n\nEllie, for a change, was still as she considered her striking boyfriend. Suddenly, it was all clear to her. It had to be Oliver. She hadn't fallen in love with him by accident; this was the doing of a higher power. Some deity had long ago decided that for her, when she was only a toddler. This deity must have really loved her, Ellie thought, for it was giving her everything she wanted, answering to all of her prayers.\n\nJack took Michela in his arms. \"Soon, you'll have a nephew or a niece to play with. Isn't that exciting?\"\n\nMichela nodded vigorously.\n\n\"Right on!\" he chuckled when she gave him high five. \"Dad, let's break out the piano. It's time for some Christmas carols.\"\n\nWhile everyone trickled into the living room, Oliver received a text. He swigged his wine as he read it, \"Your room. Now.\"\n\nHe cut his eyes at the stairway and watched his girlfriend swaying her heart-shaped tush as she mounted the stairs. A smile curved his lips upward as he gulped down the exquisite wine. He glanced at his father taking a seat in front of the piano with the rest encircling him. They would never notice, Oliver knew. He rose to his feet and followed the smoldering blonde's footsteps.\n\nOliver wasn't wrong when assessing the situation. No one could notice him and Ellie gone while singing and quaffing their beverages round the piano. Unless they were looking for it, that is.\n\nJust as he vanished up the second floor, Kara set her drink down and started up the stairs. Since that night at the movies, a suspicion had been sprawling inside her like cancer. She'd spent long hours mulling it over, but she couldn't shake off that pesky feeling that there was something very wrong with her best friend, and it had everything to do with her little brother. What Kara had seen that night wasn't awfully incriminating, and a less observant person wouldn't have thought twice about it, but she knew Ellie too well to disregard it.\n\nWhile descending the stairs in the theatre and peering for the row they were sitting in, Kara caught the look Ellie had given her brother. That gaze pierced through the three people that had been buffering them and was answered with a similar look from Oliver. Both had gazed at the display of their phones a second before as the theater was dark and it was easy to pick up on it. Kara didn't know Oliver well enough to pass judgment on his look, but she knew Ellie like the back of her hand, and that look was a look she'd seen her giving many times in the past. It was a look, however, she should have never given her own brother.\n\nBy itself, the look wouldn't have been enough to make Kara dwell on it, but when factoring Ellie's engagement annulment along with the peculiar way she had been trying to steer her away from Oliver and toward Dave, made her think. She'd been keeping a watchful eye on them since, but they hadn't given anything away.\n\nUntil now. This was the breakthrough she'd been waiting for, and as she reached the second floor and bored into Oliver's closed door, she had a good guess what was going on in there. It certainly was loud enough. She treaded carefully, not wanting to alarm them before she would\u2014\n\n\"Kara, don't!\"\n\nDave raced past her and blocked her path.\n\nHis girlfriend shot him a look. He clearly knew more than he was letting on. \"Why not? What would I see in there?\"\n\nHe gulped, his arms still splayed out. \"Let's take a walk.\"\n\n***\n\nEllie blew Oliver a kiss as he made a U-turn and drove home. She watched as he rounded the corner and giggled as she started for her building entrance. She and her brother had taken a big risk tonight and fooled around while their family was chanting downstairs. She wanted to fuck him so badly but was too apprehensive since anyone could have surprised them in the act.\n\nShe punched in the code to her building and rode the elevator to her floor. She wanted Oliver to spend the night under the pretense of watching old movies, but her annoying best friend had torpedoed the initiative. Kara had seemed quite rattled when Ellie handed her the keys to her condo, so she could take off early. It was definitely going to be irksome, listening to her bitchin' about Dave, for he must have done something to make her this distraught.\n\nShe knocked on her door, and the pretty brunette answered it a second later in one of Ellie's pajamas. Kara looked hot in her night garments, Ellie thought, before she tossed her purse on the couch and shuffled out of her high heels. She flopped onto the sofa, bosom down, and sighed. \"Well, let's hear it. What did Dave do?\"\n\n\"What did he do? Well... nothing really. Only telling me the truth.\"\n\n\"Kar, it's late, and I'm a bit tired. You need to start making more sen\u2014\"\n\n\"I know about you and Oliver.\"\n\nEllie thought she had died at that second, her heart thumping distressingly against her chest. She raised her head and studied her best friend's face, her stomach braiding into knots. \"Me and Oliver? What\"\u2014she gulped\u2014\"What do you mean?\"\n\n\"Oh, drop the act, will ya, Ellie? I fucking know!\"\n\nEllie stroked her fair hair back as she sat upright, sweating like a pig. \"Kara, you need to listen to me now: Under no circumstances are you to repeat what you just said. Do you understand me? Do you fucking understand me?!\"\n\n\"My god, Ellie... your own fucking brother?!\"\n\n\"What Oliver and I do is none of your business. You just remember to keep your mouth shut, or I will smother you in your sleep, so help me God.\"\n\nKara shook her head, can't believe her friend. \"What you and Oliver are doing is incest for fuck sake! It's crazy!\"\n\nEllie fished her phone out of her purse and called her brother. \"Yeah, fuck you. Oliver is going to be there any second now. Jump into the passenger seat and get your ass to here. Tell him he's spending the night at my place after all.\" She hung up and shot Kara a look. \"I would start changing back if I were you.\"\n\n\"Ellie... this is crazy!\"\n\n\"I heard you the first time.\"\n\n\"No, you didn't! If you did, you'd realize the\u2014\"\n\n\"Kara, with all due respect, I have been living this crazy as you call it for five months now. Don't you think I tried everything I could to get away from it?\"\n\n\"Then what are you saying?! That you can't keep your hands off of your own brother?! Jesus Christ, Ellie!\"\n\n\"I'm not going to defend myself here because as hard as it may seem to you: I've done nothing wrong. Whether you're okay with that is of very little significance to me.\"\n\nEllie patted to her room and started changing into her Superman pajamas. They were blue with a red S at the center and red elastic cuffs in both bottoms and top. Her best friend watched while trying to grasp what she was saying. She absolutely believed Ellie should be committed.\n\n\"So... how long are you planning to keep up with this insanity?\"\n\nEllie put on her pajama bottoms. \"Till death do us part.\"\n\n\"Dear god, tell me you're kidding. Please tell me you're kidding.\"\n\nThe blue-eyed blonde pulled her top on and looked into Kara's eyes. \"I love him.\"\n\n\"You love him? The brooding porker with the receding hairline?!\"\n\n\"So is that what this is about?\" She sprayed herself with perfume. \"You're mad at me for swaying you to Dave?\"\n\n\"God, no! I'm glad I'm with Dave. It's the first time in a long time that I've been happy in a relationship, and you know that. I actually think I might be in love with him, but that's a story for another night. My point is that I couldn't care less about Oliver. I do, though, care about you, Ell, and what you're doing is going to ruin your life; yours, his, and Michela's.\"\n\n\"That's where you're wrong; my life has never been better. And besides, Oliver said he was gonna figure this out. He's gonna take care of me, Kar. I know he will.\"\n\nKara shook her head, flabbergasted. \"Jesus, Ellie...\"\n\nEllie entered the kitchen and fetched a bottle of whiskey out of the cupboard along with a shot glass. She set them on the countertop and checked herself in the mirror next to the front door. She gave her long blond hair a couple of strokes, making sure that it looked as enticing as always, and patted to the bathroom to brush her teeth. Kara, meanwhile, filled the shot glass with the whiskey and gulped it down. She poured a second one, and\u2014\n\n\"What are you doing?\" Ellie said coldly. \"This isn't for you; it's for Oliver.\"\n\n\"Trust me\"\u2014Kara gobbled it up and shivered as she plunked the glass down\u2014\"I need it more than he does.\"\n\n\"Kara, you should really get ready. The second they're here, I want you out of my place.\"\n\n\"Why?! So you can fuck your brother?!\"\n\n\"Well, yes, and you should really do the same. With my other brother, that is.\"\n\nEllie sat comfortably on the sofa checked the time. Her brothers were five minutes away at the latest, she knew. Kara sat next to her and observed her for full two minutes without saying a word. Only the desperate suckling noises she was making as she smoked her cigarette could be heard in Ellie's plush condo.\n\n\"You want one?\" she offered when noting the way Ellie seemed to be craving it.\n\n\"No, thanks. I'm going through withdrawal, is all.\"\n\n\"Ellie, honey...\" Kara shook her head, aching to get to her somehow. \"Do you know how beautiful you are?\"\n\nEllie gulped but kept staring at the clock on the wall, counting the seconds until her brothers arrived.\n\n\"You are the most beautiful real-life woman I've ever seen. Did you know that? I mean, I've seen guys throwing themselves at your feet, literally. I have seen your boyfriends crying and begging you not to dump them. You are so desirable that you can get any guy you want, any guy. Let me take you out a little, show you what the world has to offer, the abundance of men that would\u2014\"\n\n\"Kar, I don't want other men! I want Oliver!\" Tears streamed violently down her subtly freckled cheeks. \"You don't even know what it's like to want something so bad, and to have to hide it, to feel ashamed because of it... it's a horrible feeling, Kar.\" She shook her head, her tears relentless. \"I gave it my all, I really did, but... I can't. Never in my life have I wanted a guy as much I want him. If I can't have him, then... I don't wanna live anymore.\"\n\n\"Jesus, Ellie, you don't mean that! You just\u2014\"\n\n\"I do! I mean it! Oliver means everything to me!\" she cried, taking in labored gasps between painful sobs. \"What do you do when you wake up one day and realize that your brother also happens to be the love of your life? How the fuck can you even get away from that? Do you think I was looking for it? To be in a relationship with him?\" She snagged a cigarette from Kara and fired it up. She pulled, loving the smoke wreathing her lungs. \"I pine for him, Kara, the way I have never. I dream about him, I think about him nonstop. I fantasize, I giggle, I... not even when I was 16 I was that pathetic.\"\n\nKara was dumbstruck. She couldn't comprehend how one could ever fall for a sibling, but she was definitely witnessing it now. As absurd and surreal as it was, she had never heard her best friend speaking about any guy with such passion and longing. Ellie was absolutely, head over heels in love with her brother, Kara was just starting to grasp.\n\n\"Fuck me sideways,\" the brunette sighed as she lit up another cigarette. She watched Ellie wailing on the couch, tormented by her illicit love for her bro. \"Fuck!! Shit!!\"\n\nEllie was actually beginning to feel better listening to her best friend cussing, for she knew it meant that Kara was past the initial shock and was now seeking a way to be in peace with it.\n\n\"Jesus Chr... fuck!\"\n\nSobbing, Ellie snuffed out her cigarette and bolted to the bathroom. She washed her hands and face and brushed her teeth again, her reflection a mess.\n\n\"Ellie, get back here!\" Kara yelled outside the locked bathroom door. \"We're not done!\"\n\n\"I don't wanna t-talk to you anymore... I need... Oliv-ver.\"\n\nAs if on cue, there was a knock on the door. Ellie stepped out of the bathroom just as Kara answered it, and the brothers walked in with Dave pulling ahead. Ellie almost ran him over when dashing to her baby bro.\n\n\"Oliver!\" she sobbed as she crashed into his body.\n\nHe swathed an arm around her and stroked her golden hair with his free hand, her tears tearing at his heart. \"What's the matter? Why are you crying like that?\"\n\nSurprisingly, Oliver was the only one who was clueless in that room. His brother never disclosed to him his knowledge of his and Ellie's relationship, and neither did his sister. The looks on both Dave and Kara's faces swiftly got him up to speed though. He kept stroking his girlfriend's hair while soothing her with soft kisses to the top of her head. Ellie clung to him in a vice-like grip, constricting him like a python, unwilling to pluck her tearful face from his chest. It felt too good and too safe to be in his arms.",
        "\"Calm down, my love; I'm here now,\" he whispered, cleverly inducing what had made her this perturbed. \"Everything's gonna be okay. Just leave it all to me.\"\n\nWhether it was true or not, Ellie believed him wholeheartedly. She would believe every word that came out of his pretty mouth.\n\nOne would be hard-pressed to guess which of the siblings was the younger when watching the two tangled at this moment. Ellie sure didn't feel like the oldest now. She hadn't felt like that for a few good weeks. The more intimate she and Oliver were getting the needier and weaker she was growing. Oliver's inner strength was overpowering and awe-inspiring. It made her feel it was safe to be vulnerable with him in a way she'd never allowed herself before, and, consequently, was making her more and more dependable of him. Perhaps because she knew he could withstand it and never punish her for it.\n\nIt was a strange moment for all participants, save Ellie. She was too much of an emotional disaster to take notice, bawling in her lover's arms, but for Dave, this was the first time since that night months ago that he witnessed his siblings in such an intimate moment. He wasn't sure how he felt about it, but he knew he wasn't loving it. Kara felt much like Dave. Incest made her feel awfully uncomfortable when reading on it let alone when seeing it. As unsettling as it was, however, Kara and Dave were transfixed as they watched Ellie going to pieces in Oliver's arms. They may have wanted to look away, yet they needed to let it sink in.\n\nOliver was still at lost as to how their secret was untimely revealed, but the answers were coming, he knew. He looked into his brother's eyes with no remorse or shame as he kept calming their sister down with loving caresses. \"I love her.\"\n\nDave nodded, not willing to argue with the facts. \"I know.\"\n\nDave was definitely uncomfortable with those words, but he wasn't a hypocrite. Up until not very long ago, he himself had been having similar feelings for their sister, and had those feelings been reciprocated, he might've very well been standing there instead of his brother, taking on the world alongside Ellie. Mercifully, after his sister had made it clear to him that such a pairing would forever remain an unrealized fantasy, he was able to repress those feelings and move along. Watching Ellie weeping in their brother's arms, he knew he loved her, but not the way Oliver did, not anymore.\n\nEllie was settling down eventually, and she was only sniveling now as opposed to her previously unrestrained sobbing. Oliver cupped her cheeks as he looked down into her deep blue eyes. There were still a few tears fogging them, but it made her look even more ravishing, he thought. He smiled, as if unfazed by this predicament. He needed to take the burden off her shoulders and onto his; perking up his girlfriend was his top priority now. Ellie smiled back, tears coursing down her right cheek. She was already feeling better. Her brother's smile made her confident in his ability to resolve this. He could end a war with that smile, she felt.\n\nOliver wasn't nearly as confident in himself as he led his sister to believe, but she would never know that; he would die before she even suspected it. He released her cheeks and walked past Dave and Kara to the kitchen as nonchalantly as he could muster. He poured himself the whiskey and did the shot before pouring again. He needed to calm his nerves before he put out the fire.\n\nKara considered him as he did his second shot. She might not have lied before when confessing to Ellie of her growing adoration for Dave, but she couldn't deny that there was something awfully attractive about his kid brother. It was that silent power as she once described it. It had an impact on her that she did not approve of, as much as she was trying to loathe him at the moment.\n\n\"How you found out is utterly irrelevant now,\" Oliver said quietly. \"Your feelings on the matter are equally moot because this is going down regardless. You just got a little more time to get used to it before we pull the trigger, and it won't be a whole lot of time, I tell you that.\"\n\nEllie watched her kid bro in admiration. He had the ability to sound so incontestably authoritative without even trying to. The second he stepped into her flat, he had the room.\n\n\"We understand it will take some getting used to, and we're not gonna push you to accept it a second before you're ready. All we ask is for you to keep it to yourselves until we're prepared to start hell.\" He poured his third glass and did the shot before he expelled the fumes with a deep sigh. \"Bro?\"\n\nDave nodded. He'd known for some time now that this was indeed a new reality he needed to get used to.\n\n\"Kara?\"\n\nKara swallowed, oddly apprehensive to speak her mind. \"You know you're ruining her life, don't you?\"\n\n\"Don't listen to her, baby,\" Ellie hissed as she walked past her best friend. She wrapped her arms around his waist and shot Kara a look. \"She has no clue what she's talking about.\"\n\n\"Kara?\" Oliver repeated as if she'd said nothing.\n\n\"If anyone finds out, it won't be from me.\" She turned around to fetch her clothes. \"Come on, babe, let's get out of here.\"\n\n***\n\n\"I don't know what you have to be nervous about. You don't need to impress them or anything.\"\n\nEllie smiled, agitated. \"I know, but you think so highly of them, and they are my little sunshine's grandparents. I just want to make a good impression, is all.\"\n\n\"As if that was ever in doubt. Good impression is what you do, bellissima.\"\n\n\"Thanks, baby,\" Ellie replied nervously, standing at the airport alongside Oliver with Michela a few feet away anxiously awaiting her grandparents.\n\nIt had been well over a month since the night Kara and Dave walked out of Ellie's condo with the promise to keep their relationship a secret. Kara had been keeping her distance, and she and Ellie hadn't even talked once let alone met up for drinks etc.. Ellie was in peace with it however; she was prepared for such a reality long before that night. If had to, she would sacrifice everything and everyone for Oliver. Nothing else mattered now.\n\n\"NONNO! NONNO!\" Michela shouted at the top of her lungs after spotting her grandfather in the surge of crowd. She could barely contain herself. \"Guarda qua! C'\u00e8 Michela!\" (Look here! It's Michela!).\n\nThe 48-year-old Italian grinned, and while pushing two suitcases on the cart in front of him, quickened his paces. \"Bambolina!\" He picked his granddaughter up and kissed her repeatedly. Michela's grandmother soon emerged behind them and snatched the little girl from his arms, kissing her in tears.\n\nOliver approached Michela's grandfather, and the latter hugged and kissed him no less passionately than he had his granddaughter, which was a bit strange for Ellie to watch. There was big love between them, and this smart-looking man was showering her brother with kisses as if he were his own child. By contrast, the no less groomed woman ignored Oliver as if he weren't even there. Ellie could easily feel the bad blood between the two.\n\nThey were awfully young and handsome, Ellie thought. Both looked mid-40's, with dark skin that divulged no wrinkles. The man was about 5' 9\" and had all of his hair. The woman was a bit shorter than Ellie, standing at 5' 4\", and her chocolate shoulder-length hair was swept back into a ponytail. She was quite a looker in Ellie's eyes, and she could immediately see the resemblance between her and her granddaughter.\n\n\"E chi \u00e8 questa splendida creatura?\" (And who's that beautiful creature?).\n\n\"That is my sister, Ellie. Ellie, this is Antonio.\"\n\nAntonio took her hand in his kissed it humbly. \"\u00c8 un vero piacere conoscerti finalmente,\" (It is a great pleasure to finally meet you).\n\n\"It's very nice meeting you, sir,\" Ellie replied with a smile, wisely inferring he'd just greeted her.\n\n\"Oliver e Michela hanno provato a dirci quanto sei bella, ma \u00e8 chiaro che non ci sono riusciti. Sei assolutamente splendida,\" (Oliver and Michela have told us of your beauty, but they were not doing you justice. You are absolutely magnificent).\n\nEllie couldn't understand a word he'd said, but his smile and warm tone suggested it was something very positive. She smiled her captivating smile and waited for her brother to translate.\n\n\"Uh, yeah,\" Oliver said, as though forgetting his function. \"He said he thought you'd be prettier.\"\n\nEllie's eyes shot wide open. She couldn't belie\u2014\n\n\"No, no! That is not what I said!\" Antonio objected in a distinct Italian accent before he chuckled at Oliver. \"Your brother is what we call in Italia un imbecille.\"\n\nOliver laughed. \"This imbecile got you to switch to English though.\"\n\n\"Very nice, Oliver; very nice indeed. Now tell your sister my exact words.\"\n\nOliver gave Ellie the translation, the correct one this time, and a warm shade of red filled her cheeks. \"Thank you so much, sir. It's\u2014\"\n\n\"Please, Antonio,\" he implored.\n\nEllie smiled, humbly bobbing her head. \"Antonio.\"\n\n\"Perfetto,\" he approved her pronunciation. \"I've heard so much good things about you. I am hoping we\u2014\"\n\n\"E questa \u00e8 mia zia Ellie,\" (And that's my aunt Ellie), Michela cut her Granddad off as she introduced her aunt to her grandmother.\n\nEllie and Francesca greeted each other through Antonio since his wife didn't speak a word in English. They then headed out to the parking lot, where Dan's SUV patiently waited. Oliver put their luggage in the trunk and drove them to the restaurant he'd made reservations at, which was a couple of hours drive from the airport. Michela and her grandparents were chattering incessantly in the backseat as well as at the restaurant, and come evening, Oliver dropped the Italian couple off at the 5-star hotel they were staying.\n\n\"They're such nice people,\" Ellie opined on their way back home, the rain dashing against the windshield. She glanced over her shoulder and smiled at her sleeping niece. \"They've tired her real good.\"\n\nOliver smiled. \"Yeah. Busy days ahead of her.\"\n\n\"Antonio is nothing like I thought it'd be. He's so easygoing and pleasant.\"\n\n\"He is. He's an incredible person.\"\n\n\"And Francesca? At first I thought she was grouchy, but... she seems to be only around you.\"\n\n\"Yeah,\" Oliver sighed.\n\nEllie reached for his hair and fiddled with it lovingly. \"She's really angry, isn't she? Because of Michela?\"\n\nHe nodded, his eyes on the road.\n\nEllie interlaced their fingers and kissed the back of his hand. \"You'll work it out; I know you will. There's nothing you can't do, baby.\"\n\n\"You give me too much credit,\" he said in dismay.\n\nEllie shook her head and kissed his hand again. \"I really don't. If anything, I don't think I give you enough.\"\n\nThey drove another mile or two in silence, concentrating on the volleys of rain that spattered across the windshield.\n\n\"Spend the night.\"\n\nEllie turned her head to study his face. Her boyfriend had a knack for making it so impossible to refuse him. Or maybe it was just with her?\n\nShe couldn't tell, not anymore. \"All you need is just ask.\"\n\n***\n\nThe Italian couple was having lunch the next day at the Jensen residence. Michela couldn't have been happier, with most of her immediate family round the same table. Jack and Dave were absent, each due to his own reasons, but at least her aunt was there. She was always there now.\n\n\"More wine, Antonio?\" Dan offered and began pouring as though the bottle had a mind of its own.\n\n\"Si, grazie.\" He dabbed the corners of his mouth with the napkin and rinsed down his bite with a swig from his red wine. \"Signora Alice, the lamb is eccellente, so... Oliver, come si dice tenero?\"\n\n\"Tender.\"\n\n\"Si, molto tenero. You cook very good.\"\n\nAlice grinned proudly. \"Thank you very much. I'm glad to see you're enjoying it.\"\n\n\"Oh, yes. So much joy.\"\n\nAlice and Dan tittered. Similarly to their daughter, they both found Michela's grandfather pleasant and endearing\u2014and interesting, too. His English was adequate enough for them to be able to converse through many different topics, and this meal proved to be less awkward than what Alice had initially believed.\n\nThey were of upper middle class, Alice noted by their attires and table manners, never mind Oliver had already disclosed it months ago. She could tell Michela hadn't been deprived of anything while living in Italy, which she was both pleased and a bit disappointed with. She wanted to outclass them, in everything. She snuck another peek at Francesca while she was speaking to little Michela who was perched in her lap. It rubbed her the wrong way. She didn't like that woman.\n\nFrancesca, unlike her husband, was unable to take a more active part in the casual conversation as she didn't know English; irrespectively, she didn't seem particularly disposed to. She was engrossed in her granddaughter's stories and clearly didn't need or want any distractions.\n\n\"It seems to be going well,\" Ellie said to Oliver while helping him making coffee for all. \"If you don't count Mom's dirty looks at Francesca.\"\n\n\"Yeah,\" Oliver murmured absently, loading another capsule into the espresso machine.\n\nEllie put her hand on his back and raked softly. \"Hey. What's wrong?\"\n\n\"It's just... frustrating. The way she behaves.\"\n\n\"Have you even tried talking to her? I don't think I've seen you exchanging a single word since they landed.\"\n\n\"You're not wrong,\" he muttered bitterly.\n\n\"Then maybe you should think of changing that. Make the first move?\"\n\n\"You think?\"\n\n\"What's the worst that could happen?\"\n\nOliver nodded. \"You're right. I'll give it a shot.\"\n\nThe siblings served the coffee and took their seat. Oliver observed his daughter and her grandmother chatting while he was racking up the courage to engage in conversation with the latter. He took a few sips as he listened to his daughter telling Francesca about her friends from kindergarten and about the many playdates he'd set up for her.\n\n\"\u00c8 molto amichevole. Tutti le vogliono bene,\" (She's very friendly. Everyone loves her).\n\nFrancesca shot him a murderous look, and only once he gulped, she requested more details from Michela. Oliver averted his gaze to Antonio as he feigned interest in what he and his parents were talking about. Ellie put her hand on his knee under the table and squeezed lightly, encouraging him. Antonio gave him a no less encouraging smile, and Oliver took a sip from his tea and decided to try his luck again as he looked for opportunities to jump in.\n\nHe swallowed as he nodded at Michaela's words. \"Si, abbiamo provato a\u2014\" (Yes, we've been trying to\u2014).\n\n\"Non ti rivolgere a me, Oliver! Capito?!\" (Do not talk to me, Oliver! Do you understand me?!)\n\nBafflement washed over the table. Antonio quickly urged his wife to calm down, reminding her that they were guests and that Michela shouldn't hear this.\n\n\"No! No!\" she shouted as she sprang to her feet. \"Non si rivolger\u00e0 a me come se niente fosse! E non rimarr\u00f2 seduto, nemmeno per un secondo, se\u2014\" (He's not going to talk to me as if nothing happened! I will not sit here, not even for another second, if\u2014).\n\n\"Francesca!\" Antonio barked. \"Non qui,\" (Not here).\n\nShe shot Oliver a glower and asked her husband where she could smoke a cigarette. Antonio repeated the question to a shaken Oliver, and the latter showed her to the patio and joined her outside. Michela burst into tears at the sound of the heated debate and began a frenzied run in the direction of the patio while weeping at her grandmother to stop yelling at her father. Alice ran after her and stopped her from opening the door. She picked her up and announced angrily that she was taking her upstairs.\n\n\"My apologies,\" Antonio said to Dan and Ellie. \"My wife... she is very upset with Oliver, but this is not a good way to behave.\" He shook his head and poured himself what was left of the wine before he explained to a worried Dan the actions that brought upon his youngest this outburst.\n\nEllie was long gone by then. She stood by the patio door, observing this Italian monster tearing her lover a new one. She wanted to scream at her to stop, but she didn't. Her brother was slowly unraveling, and Ellie prayed for him to defend himself. Not long after, Oliver began countering, and now it was Francesca who was looking like the rattled prey. Ellie couldn't tell what they were saying, but the names of Bianca and Michela were shouted to and fro, and with each time, the mature Italian was crumbling a bit more.\n\nEllie didn't think she looked like a monster anymore. She looked crushed and in pain, quivering in the cold under the roof that sheltered them from the dour weather, and suddenly, all she wanted was to hold her. She looked beyond devastated, marching straight into the vicious rain in tears, flinging her arms about as though she didn't care if she lived or died.\n\n\"Francesca!\" Oliver cried out as he stormed after her into the rain. The two were soaking wet in less than ten seconds. \"Bianca is gone! I can't bring her back! None of us can!\"\n\n\"It is not about Bianca! My daughter is with God now. It's about Michela! And it's about you, Oliver!\" She sobbed, her body trembling. \"Michela is the only thing I have left... and you... I had loved you like a son, and you took her from me and left, and now I have nothing... NOTHING!\"\n\nOliver pulled his sopping hair back, the rain pouring down his eyes and lips. \"What do you want me to do?! I... I don't know what to do anymore!\"\n\n\"Come home! This may be the place you've grown up in, but your home is Italy! With us! It always has been! You were lost, Oliver, but my Bianca found you. She made you who you are! You are more Italian than you would ever be American.\" She pressed to him, her eyes pleading into his. \"I'm begging you, Oliver, if you love me... come home.\"\n\nOliver shook his head and looked in the direction of the house. His watering eyes found his girlfriend's through the glass door. Ellie could see how distraught he was while bathing in the torrential rain. Her brother held her gaze for a long moment before he broke eye contact and said something to Francesca that made her throw herself in his arms. Ellie had no idea what it was, but Francesca was kissing his cheeks again and again while embracing him so closely.\n\nThis woman didn't hate her brother at all, Ellie only now came to the realization. Even their own mother never held Oliver this way. It amazed Ellie how deceptively thin the line between hatred and love truly was. At that moment, this woman loved her brother more than any parent ever a loved a child. Ellie smiled at the heartwarming sight and left to find her mother.\n\n*\n\n\"Oliver, t\u00e8 o caff\u00e8?\" Francesca shouted. \"Ti faccio un caff\u00e8,\" (I'll make you coffee), she decided for him a second later. \"Adori il mio caff\u00e8.,\" (You love my coffee).\n\nFrancesca was in the kitchen with Ellie twenty minutes later while the two were making hot beverages. She was still soaked to her bones, even after sweeping through her clothes with a blow-dryer for most of those twenty minutes. She looked nothing like the woman who'd entered this home an hour ago, though, Ellie pondered. She was crooning Italian songs and was all smiles and love.\n\n\"Sei bellissima cara,\" (You're beautiful, you). She cupped Ellie's cheeks and gave the left one a kiss. \"Proprio come tuo fratello,\" (Just like your brother). She kissed her right cheek.\n\nEllie giggled, blood mounting in her cheeks. She understood the first sentence perfectly since Oliver called her and Michela that constantly.\n\nThe two carried the drinks to the quiet table, and Francesca set Oliver's coffee in front of him. She kissed the top of his head and mumbled in Italian that he should drink it while it was hot. Michela then asked if she and father had reconciled, and her grandmother replied affirmatively before feeding both her cheeks a bevy of kisses.",
        "Alice assaulted her son with the most bitter look she could muster. A clever woman, she was findings Francesca's sudden joyous mood unsettling. Oliver occasionally glanced back at her, acknowledging that he was aware of her emotional state, but mostly tried ignoring her. Fifteen minutes later, the guests rose and thanked their hosts, and Oliver and Michela drove off with them to the next activity they had planned.\n\n***\n\nEllie got out of the shower and reached for her phone. She smiled as she read the text her brother had sent her. She bit on her curled-up bottom lip and made haste to her room. She put on contemporary pop music on the TV and cranked up the volume all the way. She opened the closet and tossed a barrage of bras, dresses, jeans, and blouses on her bed before reviewing each when pressing it to her form in front of the mirror. After deliberating for minutes, she picked her outfit and started to get ready.\n\nShe rubbed lotion all over her body before painting her face to perfection with soft pink eyeshadows and brown eyeliner to frame her catlike blue eyes. She applied pink powder on her high cheekbones and pink lipstick on her pouty lips. She shimmied into her skin-tight, dark blue denim and donned a revealing white blouse. She then straightened her golden hair and swept it back into a sky-high ponytail.\n\nOliver was on his way from the airport after dropping off Michela's grandparents. It had been three days since that lunch, and Ellie had barely gotten to spend any time with him all week long. She'd been putting overtime at work, and Oliver had too many people to juggle among regardless, so she was understandably anxious to have him all to herself for the night. He was almost two hours away when he'd texted her, and Ellie smiled at the thought. He knew her well enough to know that an hour-thirty would be cutting it way too close.\n\nShe stepped into her pumps and posed for minutes in front of the mirror, making sure her skinny jeans were accentuating her pert ass and pair of long, slim legs, and that the bra-blouse combo was making her girls stand out. She was showing a whole lot of cleavage, but she always loved flaunting her glorious rack, and she knew that her boyfriend was an avid fan of her deep crevice, just like all those who preceded him. A few bracelets and necklaces later, she sprayed herself with his favorite perfume, tried on a few sexy jackets, and began composing a text. She punctuated her text with a couple of hearts and red kissing lip\u2014\n\nEllie giggled at the sound of the knocking on her door. She set her phone down on the table and clacked her way to the door with a grin.\n\n\"I was just about...\" Her face turned sour as she realized it wasn't her boyfriend who was doing the knocking.\n\n\"Hi.\"\n\n\"Hi,\" Ellie replied coldly. \"What are you doing here?\"\n\n\"I was in the neighborhood and saw that your car was here. Can I come in?\"\n\n\"Actually, I was just leaving. You've picked a really bad time to\u2014\"\n\n\"Let me in, Ell.\"\n\nEllie gave a sigh along with a roll of eyes and strutted back inside, leaving the door open. Kara closed it after her and checked Ellie out as she followed her to the living room. If she weren't straight, she would have fucked that hot blonde for a month straight or until neither of them could physically reach an orgasm. She brushed the thought away and sat on the couch next to Ellie, who just finished her text.\n\n\"You look hot. Where are you going?\"\n\nEllie shot her a look. \"What's it to you?\"\n\n\"Good thing you're not hostile or anything.\"\n\n\"My deepest apologies, but I don't know what you've expected after over a month of total disregard.\"\n\n\"I needed some time. You know, to digest your dirty little secret.\"\n\n\"As far as I'm concerned, Kara, you can take all the time in the world. Take the next decade and see if I give a damn.\"\n\n\"Okay, why don't you take it down a notch? I'm not here to fight.\"\n\n\"Then why are you here? To tell me how I'm ruining my life?\"\n\n\"No. That's not what I'm here for.\"\n\n\"Good. 'Cause you'd be wasting your time, of which you have precious little left. Oliver is picking me up any second now, and I'm telling you now -- he's not gonna wait.\"\n\n\"You used to keep them waiting forever.\"\n\n\"Not this one.\"\n\nKara shook her head as she reached for her purse. \"Do you mind if I smoke?\"\n\n\"Actually, I do.\"\n\n\"You should've really said something then,\" the brunette retorted as she lit one up anyway.\n\nThe blonde sighed, wishing she choked on her cigarette. \"Whatever; just get on with it.\"\n\n\"Will you drop that fucking attitude already?!\"\n\n\"Why should I?! I haven't done anyone harm, certainly not to you, and now you expect me to\u2014\"\n\nEllie was caught off guard when Kara slapped her a kiss straight on the lips. With their lips puckered against one another, her eyes darted about as she was trying to make sense of it. Too nonplused to resist, she waited for Kara to break and explain herself.\n\nKara let her lips go, much later than either of them had expected, and looked deeply into her mesmerizing blue eyes. \"Two things: A) No, I am not gay or bi for that matter\u2014and if I ever was, I'm certainly not anymore. B) I love you, Ellie.\"\n\n\"I uh... love you, too, Kar. I mean\"\u2014she lurched to her feet in rage, her breasts heaving\u2014\"what the fuck?! You think you can make it up to me with a kiss?! Speaking of which, please don't do that again.\"\n\n\"It felt kinda weird, didn't it?\"\n\n\"Eerily.\"\n\n\"Yeah, I clearly didn't think that through. I just got distracted by your lips, which are super-soft by the way, Ell. How do you make them this\u2014\"\n\n\"Kar!\"\n\n\"Anyway, I'm sorry! I... I freaked out. But I fucking love you, baby, I really do. This whole fucking month was so hard on me...\"\n\nEllie was still vertical, but her pose was losing anger and bitterness quickly. She sat back down and traced two fingers across her pouty lips, thinking that that was definitely the last time she allowed a pair of lips other than Oliver's to go even near hers. Kara took a few strong pulls from her cigarette and waited for Ellie to comment.\n\n\"So... does that mean that you're okay with me and Oliver?\"\n\n\"It means that... it's still hard for me to understand it, no matter how truly hot your brother is, but... I don't wanna lose you, Ell. You're my best friend and kindred spirit. And it's your life; you will make your choices for better or worse. I just can't stand the thought of us parting ways because of this. Not to mention that I love your brother. Your other brother, the funny one with the good hair and big cock\u2014\"\n\n\"Oh my god, no! I don't wanna hear it! Fuck!\"\n\nKara got a belly laugh as she put out her cigarette. The grimace on Ellie's pretty face was hysterical.\n\n\"Gross! Why did you have to tell me that?! Now I will never be able erase it from my brain. You've scarred me for life, I hope you know that.\"\n\n\"I just thought to rub it your face in case Oliver wasn't as equipped. Make you feel like shit for choosing the wrong brother.\"\n\nThey giggled at the morbid quip. Strangely, they both felt better for being able to laugh about it.\n\n\"Well, I'm glad that... my brother's size is to your liking. I never thought I would ever say that, but apparently, big dicks run in the family.\"\n\nThey burst out laughing, shedding their inhibitions faster than any of them had guessed.\n\n\"So Oliver is big?\"\n\nEllie cocked a shapely brow. \"Is the Pacific big?\"\n\nThey guffawed again, can't seem to have enough.\n\n\"Oh, god,\" Kara giggled. \"It feels so wrong and so good at the same time.\"\n\nEllie finished her giggle. \"Wrong and good: The Jensen moto.\"\n\n\"I thought it was Long and thick?\"\n\nThe banters and subsequent big laughs kept on coming until Ellie received a text.\n\n\"The Pacific is downstairs.\"\n\nKara giggled, her facial muscles sore from the reckless laughter. \"Where are you going?\"\n\n\"To have fun. That's what he promised in his text, and my man always delivers, so...\"\n\nKara's smile transitioned into a sad pout. \"Too bad. I kinda wanted to be with you tonight\u2014and yes, I know what it sounded like.\"\n\nThey chuckled.\n\n\"Well... do you wanna come with?\"\n\n\"Just me?\"\n\n\"Yeah. Or you can call up the Atlantic, if he's up for it.\"\n\nThey giggled.\n\n\"Is Oliver even up for it?\"\n\n\"He should be. And if he isn't, he will be for me.\"\n\nKara rang her boyfriend while Ellie rang hers, and two minutes later: it was a double date.\n\nThe girls giggled for the umpteenth time before Kara remembered that she wasn't dressed or even remotely ready for a night out in the city.\n\n\"No, no, no! Pick whatever you want from my closet. You're not going to your place now.\"\n\n\"Yeah?\" Kara falsely questioned, lapping the offer up.\n\n\"Definitely! We're the same size in clothes and shoes, and I'll do your hair and makeup real quick. You will look like the hottest piece of ass there.\"\n\n\"Thanks, babe.\" The girls sprang to their feet and made a dash to Ellie's bedroom. \"Is Oliver gonna be okay down there? It's gonna take a while.\"\n\nEllie smiled as she bobbed her head. \"He's just gonna have to wait.\"\n\n***\n\nOliver pulled his head from his phone when Ellie and Kara finally came downstairs. He'd been waiting for over forty minutes in the car, but he wasn't aggravated. Kara was a huge part of Ellie's life, and the past month was terribly difficult for his girlfriend. So when she'd asked him if Kara could join them tonight, he was instantly on board. The talk he'd been planning to have with her would just have to wait. He took a good look at them as they walked up to the car arm in arm. They seemed awfully cheerful and carefree, as if their friendship were never in question.\n\nKara looked very hot, he had to admit, strutting in gray skinny pants and a black jersey that exposed the top of her breasts. She was lapped in one of Ellie's leather jackets, he could tell, and similarly to Ellie, Kara liked to dress provocatively. She sure had the body for it, he knew, with a figure that closely resembled his sister's, yet with fuller thighs and smaller bust. Her bosom wasn't small per se, yet in the featherweight class Kara and his sister were competing, everyone seemed small compared to Ellie; she was a true freak of nature. He gave his sister the one over. She looked like a goddess, he gladly confessed to himself. How he ever got her to fall for him would remain Earth's greatest mystery.\n\nThe girls jumped in the back, and Ellie ordered him to pick their brother up from their parents', not before she pulled him to her kiss, which was alarmingly hot. He couldn't care less how Kara felt about it, and by the way Ellie was swallowing his saliva down her throat, neither did she. He was half-expecting to taste alcohol in her spit as it was a really gutsy move on her part, but there was nothing but a delectable minty flavor; she was as sober as him. He then blasted the speakers at their request and drove to his parents' to collect Dave.\n\n***\n\nAt the table, the four were a bit tense and apprehensive, but the music and ambiance helped diffuse some of it, much like in the car. After twenty minutes of pedestrian conversation, the girls took their drinks and bellied up to the bar. They wanted to let the brothers chat a bit as they were visibly uncomfortable around one another; in fact, they hadn't exchanged a word in over a month despite living under the same roof.\n\nThe second they rose, Dave had two beers and whiskey shots flying to the table, trusting the powers of alcohol to inspire a better conversation.\n\nOliver did his shot and swigged his beer, like his brother, longing for the alcohol to take effect. \"So uh... how's work?\"\n\n\"Good,\" Dave replied and ordered more shots. \"You?\"\n\n\"Yeah, good.\" He took another draft as he absently scoped the bar out. \"I took a few days off, so I could show Antonio and Francesca a good time, but... come Monday, I'm right back at it.\"\n\n\"Good,\" Dave remarked as he chugged his beer. \"That's... good.\"\n\n\"Yeah,\" Oliver sighed. \"Sweet.\"\n\n*\n\n\"God, it looks so painful from here,\" Ellie said as she studied the boys.\n\n\"Give them time. By the speed in which they're gulping their booze, it shouldn't be long. Speaking of, what's with the coke?\"\n\nEllie spun back around and smiled as she took a sip. \"Designated driver.\"\n\n\"Designated what? Fuck that; we'll take a cab back. Drink up.\"\n\n\"No, I'm cool. I'm... it's my mom's car, and I don't want her to get upset.\"\n\n\"What are you talking about? They have your dad's car, and we'll get it back tomorrow. Tonight, we're getting smashed. I'm getting you a shot.\"\n\n\"No! Kar, I don't feel like drinking.\"\n\n\"I'm sorry, did I actually hear you saying no to booze?\"\n\n\"I'm turning a new leaf. I... I wanna cut down.\"\n\n\"Cut down? What are you, an alcoholic?\" Kara studied her face, not buying a word. \"What you're hiding there? Because we both know that's a load of crap.\"\n\n*\n\n\"Thanks,\" Dave said. \"And two more beers.\"\n\nThe brothers did the round of shots, their second as of now, and resumed sipping the beers quietly. Oliver had just about enough with the awkwardness, watching Dave playing a game on his phone.\n\nHe gave a sigh of exasperation. \"Why are you here?\"\n\nDave frowned at him, as if offended. \"Sorry?\"\n\n\"You heard me. Why, are, you, here?\"\n\n\"I'm here because my girlfriend asked me to be here.\"\n\n\"And you couldn't say no?\"\n\n\"Fuck you. What's with attitude, man?\"\n\n\"You clearly don't want to be here, so why did you come? You could've just said no and saved us this... whatever the hell this is.\"\n\n\"For your information, I did say no, but she threatened me that I wouldn't get any for a week.\"\n\n\"I see,\" Oliver sighed, extracting his wallet from the back pocket of his jeans.\n\n\"What are you doing?\"\n\n\"What does it look like I'm doing? I'm paying for our drinks, getting Ellie, and getting the fuck out of here.\"\n\nDave shook his head, frustrated, mostly with himself. \"Oliver, wait.\"\n\n\"Why should I?\"\n\n\"Because\"\u2014he heaved a sigh\u2014\"I was lying to you before. Kara hasn't threatened me, and I actually wanted to come.\"\n\nOliver shot him a puzzled look. \"Kay...\"\n\n\"Things have been really awkward between us, and I don't like that.\"\n\nOliver nodded, pocketing his wallet. \"Me neither.\"\n\n\"I thought maybe if we had a few drinks, we could talk a bit, try to work it out.\"\n\n\"Well, I'm pretty buzzed now if you're interested.\"\n\nDave chuckled. \"Yeah, so am I.\"\n\n\"Alright then. Fire at will.\"\n\nDave swigged his beer as he weighed his words. \"I've actually known about you for some time now.\"\n\n\"Yeah. Ellie told me.\"\n\nDave scrutinized his face, wondering if Ellie had also told him about the unresolved feelings he'd had for her a while back. If she had though, his brother wasn't giving it away.\n\n\"I've had a few months to get used the idea of you two, but... it's so fucking strange still.\"\n\n\"I can understand that.\"\n\n\"No, I don't think you can.\"\n\n\"Okay. Then why don't you tell me what you find stran\u2014\"\n\n\"You're banging our sister. I find that strange.\"\n\nThere was a silent eye-lock following Dave's words. It ended when they cracked up out of sheer gaucherie. They kept laughing into their beers as they guzzled some more.\n\n\"You're seeing Ellie naked, you're... kissing Ellie, you're...\" He sighed and thanked the waitress for getting them their shots.\n\n\"Bro, believe it or not, it's still strange for me, too. Yeah, there's definitely a voice inside me that is yelling at me to stop, screaming for her to... to put her clothes back on.\"\n\nThey laughed. It was so awkward it was hilarious.\n\n\"Now that I don't believe.\"\n\n\"But it's the truth. I find myself struggling quite a bit sometimes, but in the end... I love her, Dave, like I have never, and I can't walk away from this. I... I can't let her go; she's mine. All I can hope for is that someday you, Jack, and the folks will only be mildly uncomfortable around us, because... Ellie and I is not going anywhere.\"\n\nDave sipped his beer, ruminating on their family's reaction. \"You know, when you do finally tell them -- it's gonna be on you, not her. She might even get out of it squeaky clean, but you? You're done.\"\n\n\"You don't know that.\"\n\n\"Come on, dude, you're gonna have no one in your corner. Well, maybe Dad, but... even that is wishful thinking. You're the one who left for five years, you're the one who showed up with Michela, you're the one who broke her engagement off... Dad will have a stroke, Mom will lose her mind, and Jack... is gonna fucking kill you.\"\n\n\"Let's hope he doesn't,\" Oliver muttered. \"I'll deal with them when I need to, but right now, I only care about you.\"\n\nDave reflected on his own feelings regarding this unusual situation. \"I have a question, and it's important that you'll be completely honest with me. If you answer me this, I promise it will help me cope.\"\n\nOliver sighed, his mind and body alert. \"Ask away.\"\n\n\"Is... Ellie really as hot as she looks?\"\n\nThey guffawed, disturbing the bordering tables.\n\n\"Oliver?\" Dave smiled anxiously, clearly expecting an answer.\n\nOliver brought his beer to his lips and smirked. \"Hotter.\"\n\n\"Damn.\"\n\nThey laughed a little and drank a lot, both undressing their sister in their heads. Oliver finished first and smiled at her incomprehensible nudity before he chuckled at his brother, who was spacing out hard. He suspected Dave was secretly dying to see her naked.\n\n\"Kara? Is that a good thing?\"\n\nDave bobbed his head, regaining awareness. \"Best thing that's ever happened to me.\"\n\n\"Wow,\" Oliver said in surprise.\n\nDave smiled, seeming surprised no less. \"Yeah. Wow indeed.\"\n\nThey both kept to themselves for a spell before Oliver said, \"Is she as hot as she looks?\"\n\nDave chuckled and tried emulating the smug face Oliver had made just a moment ago. \"Hotter.\"\n\n*\n\n\"Jesus fucking...\" Kara asked for a shot and stroked Ellie's thigh, unsure what to say. \"That's huge.\"\n\n\"I don't know what to do,\" Ellie wept quietly, hiding her tears while facing away from her brothers.\n\n\"What to do? You need to tell him, that's what you need to do.\"\n\n\"No, no, no, I'm not telling him.\"\n\n\"Ellie, babe, he's gonna find out sooner or later.\"\n\n\"Then I pick later.\"\n\n\"But that's not fair to him. You can't dump this on him three months before\u2014\"\n\n\"No, he's gonna freak out and tell me to get it fixed.\"\n\n\"First of all, you don't know that. Secondly, he has the right to know and, at least, express his opinion. And thirdly... you can't spring something like that on a guy and tell him to deal with it; it's cruel.\"\n\n\"But I'm so afraid,\" the blonde murmured in tears.\n\nKara gulped her shot down and cussed some more. \"Fucking man up, Ell. If anyone can take it, it's Oliver, considering his life experience.\"\n\n\"It's because of his life experience, I'm afraid. And you heard what he said that night, about Michela being enough.\"\n\n\"Ellie, you're carrying your brother's baby. Health concerns aside, this is going to change both of your lives forever. Now since you have no intention to terminate it, and since he's going to be a father for the second time whether he approves or not, you really need to tell him. How far along are you exactly?\"\n\n\"Fourteen weeks.\"\n\n\"Fuck! How\u2014\"\n\n\"Shhhhhh.\"\n\n\"Sorry!\" Kara whispered. \"How is possible?! You're not showing at all!\"\n\n\"I am showing,\" Ellie whispered in a quivering voice and raised her blouse ever so slightly, so Kara could sneak a peek at her little baby bump.\n\n\"JESUS!\"\n\n\"Kara, shut the fuck up!\"\n\n\"Sorry,\" Kara whispered, a shocked look on her face. \"I did find this blouse suspiciously loose around your...\"\n\n\"Yeah, I don't have much choice, do I?\"\n\n\"Then how do you like... do it? Granted, it's still quite small, but he had to see it, didn't he?\"\n\n\"We haven't had any time this week, and last week I told him I was having womanly problems, and before that, I didn't show at all.\"",
        "\"Well, you're starting to show now, and unless you can convince him to do you from behind from now on, you're busted.\"\n\n\"No shit!\" Ellie whispered and ordered a beer.\n\n\"What the fuck are you doing? Now you're starting to drink?\"\n\n\"I'm not gonna drink. I'm just gonna take a sip and pretend to be drinking. I think he's starting to notice, the alcohol thing.\"\n\n\"Now you're just being paranoid.\"\n\n\"You can never be too safe,\" Ellie said as she took a sip from the beer. \"Yeah, can you please spill this and fill it with bottled water?\"\n\n\"This is madness,\" Kara said in disbelief. \"Now I'm ordering you to tell your brother that you're pregnant with his child.\"\n\n\"No!\"\n\n\"Ellie!\"\n\n\"Kara! Oliver will find out when it's too late and not a second before.\"\n\nKara heaved a sigh as she shook her head. \"God help you.\"\n\n\"He already has. Now shut your pie hole and let's get back there.\"\n\n***\n\n\"E dopo ci andiamo a prendere il gelato,\" (And after that we're having ice cream).\n\n\"Ovviamente,\" (Obviously).\n\nIt was 10 a.m. on a weekday when Oliver was sauntering down the street whistling some Italian children's song, and Michela was doing her best to keep up with him. He'd been teaching her how to whistle for the last two days, and her training was coming to an end, Oliver knew. His daughter was mastering the technique very quickly, and he had no doubt she would soon surpass him.\n\nNormally, Oliver would be at work at this time of hour and Michela at kindergarten, but not today. Two days ago, his boss had summoned him to his office and expressed his dissatisfaction with the efficacy of his work. From there, he'd questioned his commitment, and shortly after, he so graciously consented to give him one last chance to prove himself. Oliver had respectfully declined much to his boss's surprise, and by 9:30 in the morning, he'd bid farewell to his colleagues and packed his stuff into a box.\n\nOliver wasn't happy working there, and he'd contemplated a resignation many times. This was just what he needed, a nudge from his boss. It was his first job doing what he'd studied for, and as suspected, he realized he'd chosen wrong. He was bored to death surveying financial reports, crunching numbers, and doing spreadsheets. This wasn't for him, and his late wife had apparently been right all along.\n\nShe was against this choice of career right off the bat, but he wanted to impress her father so badly that he perused it with vengeance, turning a blind eye to all warning signs that flashed along the way. But now it was glaringly apparent that a drastic change was in order, yet he wasn't in a rush. He had all the time in the world to think about it, liberated from the financial straits that plagued most of the world.\n\nWhen their grandparents had passed away, they left Oliver and his siblings a substantial inheritance, two million dollars that were split four ways. It was half of their fortune. The other half went to Alice and Dan. Oliver's money had kept making more money all those years under Antonio's watchful eye, yielding 12% in returns on average year over year. With close to three-quarters of a million in liquidity and barely any expenses, he could take his sweet time before hunting for a job.\n\nOliver opened the door to the flower shop for Michela, and his little girl whistled her way in. It was Jack and Ellie's 27th birthday, and he wanted to send his girlfriend flowers and chocolates ahead of the special night he had planned for them.\n\nThey'd been going through a rough patch, Oliver felt. He wasn't sure, but he felt as if Ellie was pulling back a bit. She was still as warm and loving as ever, but their intimacy had taken a hit without question. They hadn't made love for almost four weeks, and every time he tried to get her naked, she would make an excuse why she couldn't that night. But she would never leave him pent up. True to her promise, she was taking good care of his cock with blowjobs, footjobs, and titjobs. She was making his dick spurt with every body part of hers she could think of.\n\nAnd it was marvelous, but also unfulfilling. Rubbing his member against her oiled limbs and tits was fucking fantastic, but he wanted his sister's pussy on his cock, and he wanted it every day. He'd been daydreaming about her shaved slit wrapping around his dick and stroking him to and fro until she took his cum over and over. He wanted to see her orgasming face again and again, to see her begging into his eyes as he was making her shudder on top of and under him. He wanted to bathe in her cum until the end of times.\n\nAnd tonight was the night; no more excuses. She would take his cock into her pussy, and she'd love every second of it. Oliver was so sure of himself today. He'd made reservations at one of the best restaurants in town, and he'd booked them a suite for the night in a 5-star hotel an hour-drive away. If that wasn't going to make her drop her panties, he didn't know what would. Little did Oliver know that plowing his way into his sister's prized snatch would be the least of his concerns by the end of the day.\n\nOliver picked the largest bouquet of roses he could find, told the florist to throw in the Belgian chocolates, and wrote a card. Ten minutes later, he and Michela were on their way to have ice cream while whistling in harmony.\n\n*\n\n\"Gena, is that Oliver there?\"\n\n\"Where?\"\n\n\"There.\" Jack pointed across the street. \"He just got out of the flower shop with Michela.\"\n\nShe took a better look. \"Yeah, it is him. Probably bought you flowers,\" she quipped.\n\n\"God no,\" he chuckled. \"That would be incredibly embarrassing.\"\n\n\"It must be for Ellie then.\"\n\n\"You think?\"\n\n\"You know how close they are.\"\n\n\"And if it isn't for Ellie? Maybe he's seeing someone?\"\n\n\"Then it's his business. Come on, let's\u2014baby, where are you going?!\"\n\nJack shot her a sly smile over his shoulder. \"To investigate.\"\n\nGena gave a sigh, though amused by the notion of spying after Oliver, and followed her fianc\u00e9 to the flower shop.\n\n\"Hi, is anyone here?\"\n\n\"Yes.\" A middle-aged man emerged from the closed door behind the counter. \"How may I be of assistance?\"\n\nThe man was stout and bald with earrings on both ears, clad in a pink t-shirt with some cheesy line, and spoke with a lisp. Jack had no difficulties guessing his sexual orientation; his gaydar was beeping all over the place.\n\n\"Yeah, the guy that was just here with the little gi\u2014\"\n\n\"Oliver?\"\n\n\"Yeah, exactly! How do you know his name?\"\n\n\"He told me his name just a moment ago.\"\n\n\"Right. Anyway, did he buy flowers here just now?\"\n\n\"Why, yes he did. A very impressive bouquet in fact.\"\n\n\"Really?\" Jack flashed a cunning smile at Gena. \"Impressive?\"\n\n\"Mhmm.\"\n\n\"Did he write a card by any chance?\"\n\n\"That's affirmative.\"\n\n\"You don't think you could let me take a quick peek at the card? I'm his brother by the way.\"\n\n\"Brother? Those are really good genes your family got there.\"\n\nJack blushed, feeling a little uncomfortable with the man's lascivious eyes. \"Uh... thanks. So um, the card?\"\n\n\"Brother or not, I'm afraid I can't. That would be a violation of his privacy, and we just don't that here at Velvety Blossom.\"\n\n\"Yeah, I understand, but the thing is it's my birthday today, my and my sister's, and I just want to know if he got the flowers for one of us, or if it's for... someone else, if you catch my drift.\"\n\n\"Oh, I do.\" The man smiled knowingly. \"And congratulations.\"\n\n\"Thanks.\"\n\n\"Unfortunately, I can't disclose what he put in the card. I'm sure you understand.\"\n\nJack heaved a sigh, strangely hungry for information. \"What did he get? Can you tell me that?\"\n\n\"I don't see why not. It's this one over here.\"\n\nJack inspected the sumptuous bouquet. \"No way it's for us.\"\n\n\"If you say so,\" the man replied.\n\n\"You wouldn't buy your sibling something like that, would you?\"\n\nThe man smiled with lips sealed.\n\nJack could tell by his devilish grin that he knew more than he was letting on.\n\n\"Sir, I really need to know who those flowers are for. It would be so helpful. Please, I'm sure you can make an exception just this once. I swear, I won't say a word about it to anyone.\"\n\n\"Listen, young man, what's your name?\"\n\n\"Jack.\"\n\n\"That's a good name, a strong name. It really suits your build.\"\n\n\"Yeah, thanks. I think.\"\n\n\"Anyhow, it's not that I don't want to help you, I just can't. There's an ethical issue here. Why don't you just call him and ask?\"\n\n\"He won't tell me. My brother has a reputation of keeping his cards close to his chest.\"\n\n\"I see. Well, I would've loved to help you, Jack, I really would. You look like such a nice... well-built man with those broad shoulders and strong presence, but...\"\n\nThe florist seemed to be drifting into reveries, sweeping his eyes over Jack's body.\n\n\"Yeah?\" Jack said, feeling violated.\n\n\"Sorry?\" the man said, seemed a bit addled.\n\n\"Jack, why don't you take a walk around here,\" Gena said. \"Let me and this nice gentleman chat a bit.\"\n\nJack ventured farther into the store and watched his fianc\u00e9e from afar as she was taking over the negotiations. He wasn't sure why he wanted to know who the recipient of those gaping red roses was, but he was obsessed by now. These were the small delights that siblings enjoyed the most: uncovering each other's dirty little secrets.\n\nHe checked the time. They were late for brunch with Ellie, Dave, and Kara. Everyone had taken the day off work. He then dwelled on why Oliver wasn't joining them. He had no idea why, but it had something to do with this mystery woman, he was now convinced. If all fails, he could always milk little Michela for information. His niece had many virtues. Keeping secrets, however, was not one of them.\n\nHe observed Gena as she was swiping a finger on her phone's display. After a couple of taps, she submitted her phone to the man, and he was clearly liking what he was seeing. He cut his eyes at Jack and shot him a lewd smile before he swiped to the right and ogled the phone some more. A couple of swipes and dirty looks later, he returned Gena her phone, and she called her confused fianc\u00e9 back.\n\n\"Yeah?\" Jack said.\n\n\"After your brother gave me the card, I accidentally dropped it, and when I picked it up, it was open. I never wanted to read it of course\u2014\"\n\n\"Yeah, 'cause you don't do that stuff in here,\" Jack interjected in derision.\n\n\"Exactly. We never read our custo\u2014\"\n\n\"What was in the card?\" Jack sighed, worn out with his charade.\n\n\"Well... it was a sexy card. Definitely not something you write a sibling.\"\n\nJack smiled excitedly, victory in hand. \"Sexy how?\"\n\n\"There was a reference to her genitalia, and his, and... the culmination of a meet between the two.\"\n\n\"Holy shit,\" Jack tittered, loving the details. \"What else?\"\n\n\"That's it really. A couple of hearts and love yous... nothing worth mentioning.\"\n\n\"Oh my god, that bastard is seeing someone behind our backs!\" he said to Gena, overjoyed with the fruits of his investigation. \"Was there a name?\"\n\n\"I'm afraid not. There rarely are. Not that I would know, as I never read\u2014\"\n\n\"Yeah, yeah, we know,\" Jack chimed in, getting testy with this absurd man. \"What's the address? Maybe I know her.\"\n\n\"Oh, no, I can't possibly reveal\u2014\"\n\n\"There's a bonus waiting for you if you help us,\" Gena cooed, equally excited about their findings. \"Full frontal.\"\n\nThe man giggled yet clearly was giving it a serious consideration, sizing Jack up.\n\n\"What do you say?\" Gena said.\n\nHe smiled at Jack. \"Wait here.\"\n\nHe walked across the counter to the computer to pull the delivery address.\n\n\"Full frontal? What the fuck have you been showing him?\"\n\n\"A few innocent pics of you. In your boxers.\"\n\n\"Shit,\" Jack chuckled in mirth. \"Though you're not really going to show him a pic of me naked, are you?\"\n\nGena shot him a mischievous smile, and they both laughed furtively until the man interrupted them.\n\n\"What's so funny?\" he asked, simpering like an idiot.\n\n\"Nothing,\" Jack said. \"The address?\"\n\n\"Yes. It's...\"\n\nJack's eyes became as wide as pancakes, and Gena long lost control over her jaw as it plunged dramatically.\n\n\"Is this a joke?\"\n\nThe small-statured man took one peek at Jack's blood-red eyes and flaring nostrils, and he knew he was in trouble. \"Uh, no. That's the address he gave me. But you can't tell\u2014\"\n\nJack whirled around and stormed out.\n\n\"Jack!\" Gena shouted as she ran after him. \"JACK!\"\n\n***\n\n\"This looks nice,\" Ellie opined as she pressed the jeans with the elastic waistband to her figure. \"Right?\"\n\n\"Yeah, if nice is fat.\"\n\nThey giggled.\n\n\"Stop putting me down. I already feel like a tank.\"\n\n\"I'm just pulling your chain. I wish I looked like this fifteen weeks into my pregnancy.\"\n\n\"Really, Kar? I feel like I'm pregnant in my butt; it's gotten so huge.\"\n\nKara giggled when Ellie quivered her tight ass in quest of ungainly wobbles.\n\n\"Babe, that's just your wild imagination. You're the same size you've always been, aren't you?\"\n\nEllie smiled, loving that her hot figure had barely altered. Her long legs remained slim, and aside from her slightly bulging belly, it was impossible to determine that she was pregnant.\n\n\"Gena would've killed for your body, and she's two weeks behind you.\"\n\n\"I guess,\" Ellie conceded, knowing full well that Kara wasn't lying.\n\n\"Oliver is taking you out tonight?\"\n\n\"Yeah,\" she said with a groggy simper. \"I have a feeling he's gonna go big.\"\n\n\"I'll say. After a month of not getting any, I would go big, too. What bullshit story are you telling him tonight?\"\n\n\"Tonight, I'm on the rag. Didn't you know?\"\n\nKara giggled. \"Tick Toc, Tick Toc, Tick\u2014\"\n\n\"Oh, shut up.\"\n\n\"How are we doing there?\" Dave asked while coiling his arms around his girlfriend from the back.\n\nKara palmed the scruff his neck as he was playfully nibbling hers. \"Ready when Ellie is.\"\n\n\"I'm done,\" Ellie sighed and hooked the jeans on her shoulder. \"Let's go eat something. I'm fucking starving.\"\n\nThe cashier rang her and Kara up, and they stepped out to the grim day. It was cold yet dry, so the trio needed not an umbrella. They were all in warm coats, scarfs, and the girls in slouchy beanies, as well, as they ambled to the coffee shop, where they were to meet up with Jack and Gena. Dave told them smutty jokes all the way to there, and the girls were guffawing hysterically after every single one.\n\nDave and Kara were coming to terms with Ellie and Oliver, and it was much less awkward between the four as of last week. And since Oliver was now unemployed and Dave could never keep a job, the two were bonding over video games and daily visits to the gym. Kara and Ellie had been spending many hours discussing this atypical situation, and the former, although still not quite comfortable, was beginning to sympathize with Ellie.\n\nKara had two brothers but neither was even remotely as enticing as Ellie's. Had she been in Ellie's shoes, would she have fallen for him, too? She wanted to believe she wouldn't; then again, she couldn't unequivocally negate it. Kara was head over heels in love with her boyfriend, though that was now, after she'd gotten to know him. He wasn't her first pick, and there was a reason he wasn't.\n\nLooks aside, Oliver had certain qualities that appealed to Kara, and by extension, to the greater female population. He was intelligent, charismatic, and, despite his age, authoritative. He was hot-blooded, more than any of Ellie's brothers, which she liked, and his piercing look could cut through a girl like butter. What Kara found most appealing in him, though, was his total unawareness of his powers. He seemed genuinely oblivious to how attractive he was; he wasn't faking it. He might be a babe, but he wasn't playing it like one.\n\nUnlike her boyfriend, he wasn't especially funny or charmingly flirtatious. He didn't have game so to speak. He was innocent and mellow, as if utterly without agenda. He could be getting a girl drooling over him for hours, and he wouldn't even know. And when packaging it all in such a hot wrapper, it was becoming a handful. If she ever met a guy who could fuck with a sister's head like that, it was him.\n\nStrolling alongside her boyfriend and best friend, though, Kara was more than happy with the brother she ended up with. He was making her laugh like she hadn't in years, and she felt a strong connection with him. Dave was definitely for her, never mind Ellie had claimed his kid brother since the day of his return. But all of Ellie's brothers had something going for them, and Dave was brilliantly showcasing himself as the three rounded the corner, less than a hundred yards from the caf\u00e9.\n\n\"Where do you come up with all this?\" Ellie giggled, drying her tears with her index fingers. \"The last one made me pee in my panties a little.\"\n\n\"Well, Sis, I'm afraid that's a gift as well as a curse.\"\n\n\"Telling jokes is a curse?\"\n\n\"No! Making girls wet themselves, obviously.\"\n\nThe trio laughed once more, loving the good vibe.\n\nSuddenly, a taxy emerged behind them and pulled up to the curb abruptly. A woman opened the backseat door, fear in her eyes.\n\nEllie peered closely and frowned with a smile. \"Hey, perfect timing. But where's\u2014\"\n\n\"Get in!\"\n\n***\n\n\"Again?\" Oliver unlocked the front door and stepped in. \"How many times can you watch that?\"\n\n\"Plenty. It's the best movie ever, Papi.\"\n\n\"Frozen? That's the best movie ever?\"\n\n\"S\u00ec! \u00c8 magico!\" (Yes! it's magical!).\n\n\"Child, have you got some growing up to do...\"\n\n\"Papi, you promised!\"\n\n\"Sadly,\" Oliver sighed. \"But a promise is a pro\u2014\"\n\n\"Zio Jack!\" Michela dashed to her uncle in the living room and hugged him tightly. \"Happy birthday! I love you very much!\"\n\n\"Thanks, sweetheart.\"\n\nOliver smiled at his brother. \"Yo, what are you doing here, Bro? Shouldn't you be halfway through your brunch by now?\"\n\n\"There's been a change of plans.\" He gave his niece a kiss and put her down. \"An upsetting change of plans.\"\n\n\"Really? That sucks.\" Oliver set his keys and phone on the table. \"What happened?\"\n\n\"Yeah, what happened?\" Michela shadowed her father.\n\n\"Oliver, take Michela upstairs. You and I need to talk.\"\n\nOliver could tell something upsetting indeed happened, and he could also tell by Jack's somber face that he had something to do with it. And since he had never seen this look on his big brother's face before, it could only mean one thing: the cat was out of the bag. How or who were questions he didn't even need answering. They were of no importance now.\n\nOliver gulped and then sighed, feeling a bit intimidated by his brother's glower. \"Jack, listen, I\u2014\"\n\n\"Take her upstairs. Now.\"\n\nOliver nodded, his body alert. \"Vita mia, let's set the movie up in our room. Pap\u00e0 and your uncle Jack need to talk.\n\n\"Benne,\" she sighed, disappointed that her father wouldn't be joining her after all. \"Happy birthday, Zio Jack.\"\n\nOliver took her hand in his, and they climbed up the stairs. He set the movie up on the TV screen while Michela was sitting on the bed. The tension and melancholy she'd felt downstairs rubbed off on her, but she didn't say anything. Her father seemed preoccupied, and although she was little, her emotional intelligence had always been out of tune with her age. She had the sensitivity and understanding of a child a couple of years older, and she could feel that something grave had transpired.\n\nOliver fetched the Bluetooth headset from the bedside drawer and paired it with the TV. He'd purchased it almost six months ago so he could watch TV at night without interrupting his little girl.\n\n\"Now listen to me: I want you to watch the movie with these on. It's important that\u2014\"\n\n\"Papi, I'm afraid,\" Michela whispered in tears.\n\n\"Afraid? Of what?\"\n\n\"I don't know... but I'm afraid.\"",
        "\"You have nothing to be afraid of.\"\n\n\"Then why do I need to put the headphones on?\"\n\n\"Oh, that? It's because I want you check them out for me. You see, I think maybe these are starting break down, and if that's the case, we should really buy new ones. But I'll feel much more confident if you try them on first, give me your honest review.\"\n\n\"What's a review?\"\n\n\"It's when you... just tell me if they're okay or not, but only after the movie is over, not a second before.\"\n\nOliver put the headphones on her and got\u2014\n\n\"Don't go, papi,\" Michela pleaded, clutching his arm.\n\nHe gave her a smile and then a loving kiss to her forehead. \"Don't take them off, no matter what, until I come back.\"\n\nHe pressed play and smiled as he closed the door behind him. He then gave a sigh as he started down the stairs. Jack was sitting on the couch with his hands clasped together in his lap. He seemed so angry yet bottled-up at the same time, Oliver thought while treading in trepidation into the living room.\n\n\"Do you want a beer? Or perhaps something a bit... stronger?\"\n\nJack responded with an angry scowl, his body as stiff as his face.\n\nOliver cut his eyes at his phone. It was on vibrate, and he could see from afar Ellie's pretty face on the display.\n\n\"Do you want to pick that up?\"\n\nOliver gulped and disregarded the incessant vibrations his girlfriend was making. \"No.\"\n\n\"Who's calling?\"\n\nHe shook his head, thinking he should have probably taken his daughter's advice. \"Jack, I\u2014\"\n\n\"Who's calling, Oliver?\"\n\nHe gave a sigh. \"You know who's calling.\"\n\nJack rose to his feet to take a better look at Oliver's phone. He stared at it for more than two minutes, watching his twin calling over and over, before he sized his little brother up. \"So a funny story: you're fucking Ellie.\"\n\n\"Jack, it's not like that.\"\n\n\"No? So you're not fucking our sister?\"\n\n\"I... I lov\u2014\"\n\n\"Don't say it. Don't even fucking think it.\"\n\nOliver swallowed and walked across the room.\n\nHis brother wasn't a violent person, he knew, but he looked nothing like Gandhi at the moment.\n\n\"How long?\"\n\nOliver gave another sigh, guilt surging up within him. \"December.\"\n\n\"Fuck... so three months?\"\n\n\"Just over.\"\n\n\"Wow.\"\n\n\"Jack, if you let me exp\u2014\"\n\n\"Zip it. You only answer to what I ask.\"\n\nOliver gave a meek nod as he paced around the sofa while Jack was striving to reduce the distance between them.\n\n\"Where're you going? Don't tell me you're afraid.\"\n\n\"I don't know,\" Oliver replied, pacing back as Jack stepped forward. \"Should I be afraid?\"\n\n\"To be honest, Oliver, that's a question I'm finding hard to answer now.\"\n\n\"Jack, I understand you're pissed off, but\u2014\"\n\n\"Pissed off? No, we're way past that.\"\n\n\"My little girl is upstairs, and she's very afraid.\"\n\n\"Jesus fucking Christ, Oliver, and whose fault is that?!\"\n\nOliver almost tripped while blindly pacing backward. \"Let me get someone to watch over her, and I'll go with you wherever you want. I don't want her to see it.\"\n\n\"What the fuck is wrong with you?\" Jack closed the distance between them as if his brother had said nothing. \"Our own sister?\"\n\n\"I love her.\"\n\n\"I told you not to say that.\"\n\n\"Then what do you want me to say?! Why did you even come here if you weren't gonna let me explain?\"\n\n\"Like you could ever explain that. There is no explanation any way you slice it.\"\n\nOliver flopped backwards but scrambled up quickly, though not quickly enough. He was out of lane, and his brother was too close now. \"Jack, please. For Michela.\"\n\n\"Wasn't it enough that you went MIA for five years and showed up with Michela? Huh? You had mess with Ellie, too? You disgusting perv.\"\n\nOliver swallowed while looking for escaping routes to his left and right, but there were none; his brother had him cornered. \"We're adults: you, me, and Ellie. Forgive me if this offends you in some way, but frankly, Jack: I don't give a damn. I'm not gonna try to make you see how amazing this is for us 'cause you obviously have no interest in hearing that. So I'll just say this and be done with it: This is our lives, and we'll do what the fuck we want with them. You're mad? Enraged? Have a glass of cold water and walk it off. When you're ready, I'll be more than happy to sit you down and explain you everything. But don't think for a second I'm gonna let you dictate\u2014\"\n\nBAMMMMMMM!!!!!!\n\nJack drew first blood when he threw a punch right into Oliver's left eye. Oliver crumbled against the wall from the painful blow and, essentially, unwillingly consented to be used as a punching bag for his brother while collapsing to the floor. The blow had dazed him, and for long seconds he was only able to guard his face as Jack mounted him and drove reckless punches to his abdomen and ribs.\n\nThe urgency to protect his ribs forced him to retaliate, and in a surprise counterattack, he pulled his brother's face into his fist and split his left eyebrow. Jack didn't feel or care that he was bleeding and kept lashing at his kid brother mercilessly, but Oliver was done taking the beating. He wriggled his body to enfeeble Jack's dominant position and found another opening when Jack was a bit off balance. He snuck a jab into Jack's ribs, and when his brother arched to his side, he pushed him off and grappled with him on the ground.\n\nThey tangled, rolling back and forth, punching like the poorest of the MMA fighters, but Oliver was the more fit of the two, and he managed to wind his limbs around Jack's from behind while lying on his back. He contained him this way until his brother was too weary to try escape, and so they lay short-winded on the floor, Jack unable to strike and Oliver wouldn't.\n\n\"Let me go,\" Jack panted and tried squirming out of his brother's grip. \"LET ME GO!\"\n\n\"Are you gonna calm down?\" Oliver asked between labored breaths, the pain in his eye explosive and unfaltering.\n\n\"If you don't let me go, Oliver, so help me god...\"\n\nOliver considered it. He wasn't keen on the idea of relinquishing control, but he was desperate to pacify his brother. \"I'm letting go, but\u2014\"\n\nPOWWWWWWW!!!!!!\n\nJust as Oliver loosened his grasp over his brother, Jack drilled a stupefying elbow straight into his jaw. It was over for Oliver now. His brother was back on top of him, driving one angry fist after another into his stomach and ribs, like a gorilla on a rampage. All he could do was to try shelter his face. That elbow had almost knocked him out.\n\n\"Oh my god, GET OFF OF HIMMMMMM!!!!\" Ellie screamed in horror two seconds after the four stormed in. \"DAVE!!!\"\n\nDave hooked his arms in Jack's from behind and had to use all of his strength to scrape him off Oliver. He lugged Jack backward and rolled him onto his belly. Rasp in his breath, Jack could do nothing now but to lie face-down with his arms constrained behind his back.\n\n\"Oliver, oh my god,\" Ellie keened in anguish as she crumbled beside him, and for a just reason. \"My poor baby...\"\n\nHer boyfriend got some serious beating, his face and ribs black and blue. He was bleeding from both corners of his mouth as well as from his left brow, and only by way of miracle had managed to cling onto consciousness.\n\nEllie sobbed as she stroked his hair. \"What did he do to you...\"\n\n\"Let me go, Dave,\" Jack panted.\n\n\"Are you gonna be cool?\"\n\n\"Let go.\"\n\nDave freed him but stood between him and Oliver, just in case.\n\nBut it wasn't Jack he should have been worried about.\n\n\"YOU MONSTER!\" Ellie lunged forward and flung her hands at her twin, smacking him wherever she could reach. Dave tried to hold her back when placing himself between them, but Ellie was not operating on behalf of sanity and managed to dig her long nails in her twin's cheek. Jack screeched with pain when she raked and tore at his skin. By the time he escaped her nails, it looked as if he'd just run into a Bengal tiger.\n\n\"You bitch!\" He passed his fingers along the bloody grooves Ellie's nails had furrowed.\n\nWith one wrathful talon, Ellie had inflicted on her twin more damage her boyfriend had managed throughout their struggle, and she wasn't done, not by a long shot. Seeing Oliver this way had broken something inside her, and Jack was no longer her brother now. She writhed in Dave's arms like a lunatic and landed a smack across Jack's face that kept resonating long after Dave pushed her back.\n\n\"Fuck!\" Jack cried and tried pushing Dave aside.\n\nJack might not have been a violent person, but something had broken inside him, too. He was more lenient toward Oliver, more than any of their family members, and this is how he repaid him? By shaming their sister? And Ellie... it was a betrayal of highest order. Twins have complicated relationships more times than not, and although he never had any romantic feelings for her, he felt betrayed in a way he could not explain, even to himself.\n\nDave had his hands full as he tried to deny the showdown. Jack was clearly not being himself, and Dave had never seen Ellie this loose before. She was more of a handful than Jack. As hard as he tried, they were too keen on confrontation, and a strong push from his sister made him drop to floor. With Dave out of the way, a fearless Ellie lashed out, hitting her twin in such brutality that made everyone in the room goggle in bewilderment, including Jack. She could kill him now and not even shed a tear at his funeral.\n\nIt was becoming increasingly difficult for Jack not to counter while Ellie was hitting him with everything she had, and after she smacked him across his face for the second time, he hurled her down at the floor with perhaps too much intent. Only when watching his twin sobbing as she pulled herself back up, he remembered how fragile she really was. She was no match for him, however upset.\n\n\"Oh, no you didn't,\" Dave hissed menacingly after Ellie was tossed to the ground and threw a righty into Jack's face.\n\nIt was one thing hitting Oliver, but no one was going to lay a finger on his sister.\n\nFinally, Kara and Gena intervened and saved Jack from a painful beating as Dave was ready to shred him to pieces. Ellie was wailing like she had never. She got hurt when Jack thrust her into the hardwood flooring, but her pain was internal more than anything. While she was sobbing and screaming at her twin, Dave helped Oliver to the sofa and gathered her in his arms. After a moment in which everyone had the chance to cool off a bit, Ellie scurried to the kitchen and fetched Oliver a steak from the freezer to soothe his wounds. He was bleeding quite profusely from his brow, and Ellie suspected he would need stitches.\n\n\"Ellie!\" Jack yipped. \"Ellie!\"\n\nThe blonde gave a hurting Oliver a kiss on the cheek and rose to round two, a verbal one for a change.\n\n\"What the fuck is wrong with you two?! Have you completely\u2014\"\n\n\"Fuck you, Jack! Do you think we owe you an explanation?! Who the fuck died and made you God?!\"\n\n\"Are you insane?! You are fucking your own brother!\"\n\n\"You know, we wanted to tell you when the time was right and to explain everything, but after today, Jack, I couldn't care less what you think about it let alone how you're gonna deal with it. I couldn't care less about you, period!\"\n\nJack shook his head at her, an astounded frown on his face. \"You should be institutionalized for this, you twisted sicko. Oliver has already proven he is capable of anything, but you? God help you, Ellie.\"\n\n\"You know what? I don't wanna fucking hear it! I don't wanna fucking hear you! You know why, Jack? Because you're dead to me!\"\n\n\"I'm dead to you? You're dead to me! You and him!\"\n\n\"Good riddance! Believe me when I say this, we will not be mourning.\"\n\n\"God, you're the worst twin ever!\"\n\n\"I'm the worst twin?!\"\n\n\"You've never given a damn about me, let's be honest here, Ellie.\"\n\n\"You know what? You're right. I've never given a damn about you because I've never particularly loved you. You wanna know the truth, Jack? Of all my brothers, I've loved you the least. There; I said it.\"\n\nEllie might have been furious with her twin and was looking to hurt him, but deep down, they both knew she wasn't lying. He was a distant third, always had been.\n\n\"Well, I'm glad it's finally out. Now we don't need to pretend anymore around each other.\"\n\n\"Whatever! Gena take your wife-beater piece of shit out of here. I'm sure he's gonna make a great father. Just be sure not to piss him off, or you and your baby will be next.\"\n\nJack marched angrily to her. \"What the fuck did you just say?\"\n\nEllie lurched forward to meet him halfway. \"What are you gonna do?!\"\n\n\"Keep running your mouth like that, and you'll\u2014\"\n\n\"Don't you fucking dare to touch her again!\" Kara squeezed herself between them and shoved Jack back. \"She's pregnant!\"\n\nA collective gape of eyes followed Kara's words.\n\nGena and Jack were understandably dumbfounded, but so was Dave. He knew nothing about it.\n\n\"You're pregnant?\" Gena asked, perplexed.\n\n\"Fifteen weeks!\" Kara shouted, guarding Ellie. \"She's gonna give birth even before you do!\"\n\nEllie was uncomfortable with Kara spilling the beans and the subsequent wide-eyed stairs, but truthfully, she didn't care so much that they knew. She did care, however, that Oliver knew. This was not how she wanted him to learn about it, and when she slowly turned around to gauge his reaction, she knew Kara had made an awful mistake by blurting her secret out like that.\n\n\"Oliver, I...\"\n\nShe sighed for the lack of any excuse as to why he was only now finding out. With eyes downcast, she waited for his reaction, any reaction.\n\n\"Dave,\" Oliver said quietly, his head spinning, \"come give me a hand.\" He hooked his arm over his brother's shoulders, and Dave helped him to his feet, the room utterly still. \"I need you to take to me to the clinic or something.\"\n\nDave bobbed his head, and they walked slowly, Oliver wincing with every step.\n\nFraught with dread, Ellie finally raised her head to look into his eyes. \"Baby, I wanted\u2014\"\n\n\"Don't touch me, Ellie.\"\n\nShe burst into tears as he teetered past her. This was more painful than anything Jack had either said or done to her.\n\n\"Kara, Michela is upstairs watching a movie.\"\n\n\"Michela is here?!\" Gena exclaimed, scowling at her fianc\u00e9.\n\n\"Watch over her until we get back? I don't want her to see me like this.\"\n\n\"Yeah; sure, Oliver,\" Kara said, appalled just as Gena that this had taken place while she was in the house. \"I'll look after her. Don't worry.\"\n\nOliver darted a look at his sobbing girlfriend, and he and Dave left.\n\n***\n\nAll hell broke loose while Oliver and Dave were away. Alice and Dan cut their day at work short after Jack informed them of his siblings' incestuous relationship and its forbidden fruits, and the house was in great turmoil. Alice pinned everything on Oliver while her husband pinned it on Ellie, and the twins pried at old wounds as their relationship continued to disintegrate. Little Michela was at the playground with Kara and Gena, so she was spared this horror show, and none was able to come to an agreement about anything.\n\n\"Mom, I am not terminating shit!\"\n\n\"No, you're going to end this abomination, and you're going to do it first thing in the morning. I'll see to that.\"\n\n\"Yeah, dream on.\"\n\n\"Ellie, you're ruining your brother's life!\" Dan chimed in. \"If not for yourself, then do it for him!\"\n\n\"Oh, that's just great, Dad. You've always loved him more than me!\"\n\n\"This is not about love! It's about doing the right thing for crying out loud!\"\n\n\"And what is the right thing here exactly? Huh, Dad? For me to be miserable?!\"\n\n\"I assure you we will take good care of both of you after it's done. We'll see to it that you get therapy, and we'll help you both back on track.\"\n\n\"Dad! We don't need therapy or your help. We need each other! Why can't you get that in your thick head already?!\"\n\n\"Ellie, you and Oliver\u2014\"\n\n\"Shut the fuck up, Jack! I don't even know why you're still here. I'm not talking to dead people.\"\n\n\"Jack, stay out of it,\" Alice said. \"Baby, listen to me now: You're\u2014\"\n\n\"No! I am done listening! This is going down, and although I understand that it's difficult to deal with, you really haven't got much choice. We're all big kids here\u2014yes, Dad, even Oliver\u2014and this is a reality that\u2014\"\n\n\"Ellie, Oliver is just a kid, no matter what you say. He's been through a lot, and instead of acting like the adult here, you went and dragged him into\u2014\"\n\n\"What do you mean she dragged him into this?!\" Alice exploded. \"It's all his fault! He set out to ruin this family long ago. My baby is just another one of his victims.\"\n\nWhile Alice and Dan kept bickering on who was the real culprit, Jack and Ellie were burying one another over and over when declaring each other dead. They issued fake burial certificates and everything.\n\n\"Dad! Dad!\" Ellie cut him off as he was explaining to his wife that Ellie was the oldest, and, therefore, should have acted like one. \"What are you talking about?! Have you taken a good look at your kids lately?! I may be the oldest and Oliver the youngest, but he is more mature and grownup than all of us combined! He might as well be the oldest!\"\n\nDan shook his head as he poured himself another glass of whiskey. He didn't want to admit it, but Ellie had a point.\n\n\"Listen, this is a tough pill to swallow, no doubt, and right now you're in shock, so you can't even begin to fathom anything I say. But I want you to hear me when I say this loud and clear: As incomprehensible and twisted as it may seem to you, I'm in love with your son, and he's in love with me back. If you\"\u2014tears coursed down from her blue eyes\u2014\"even dare to interfere with us or manipulate Oliver in any way... you will never see me again. EVER!!\"\n\nAlice shook her head, now sobbing along with her daughter. \"How do you expect us t-to be okay with this? Really, baby, that's a lot to ask from us. I understand that you've been having... unhealthy feelings for some time now, but\"\u2014tears furrowed her pale cheeks\u2014\"that's my son we're talking about here... MY BABY BOY!\"\n\nEllie burst into tears, can't stand to see her mother in such agony. \"But, Mom... your baby boy also happens to be the love of my life. If I let him go... I'm as good as dead.\"\n\nAlice gave a sob, and she and Ellie wept around the kitchen island. Alice would give her life for her daughter, but what Ellie was asking now might have been greater than death.\n\nThe three then heard the front door open, and Dave and Oliver joined them in the kitchen.\n\n\"Oliver?!\" his mother exclaimed as she rose to inspect his face.\n\nHe was battered in a way that could leave no one indifferent, with a suture on his left brow and a shiner on the same eye, and as he tottered in, it was clear that the rest of him wasn't doing any better.\n\nDan shot Jack a look. \"You might want to get away from me now.\"\n\nJack swallowed and left to the living room.\n\nEllie rose to her feet and waited for her boyfriend to acknowledge her, but the moment did not arrive.\n\n\"Michela?\" Oliver asked as he slowly lowered himself on the kitchen stool.\n\n\"They're on the way back,\" Alice said, wiping off her tears.\n\nShe searched for a spot on his cheek where the tissue wasn't discolored and planted a motherly kiss there before she poured him whiskey at his request. Ellie kept hunting down his gaze, but he was actively avoiding her eyes.\n\n\"Oliv\u2014\"\n\n\"Ellie, go home.\"\n\n\"But I really need to talk\u2014\"\n\n\"Go home,\" he said without even looking at her and gulped the whiskey down. \"We'll talk later.\"\n\nWith a loud sob, she stormed out of the kitchen and out of the house.\n\n***\n\n\"You should always hold to the handrail when going down the stairs, Papi. I do it all the time.\"\n\n\"You're right, princess. Daddy can be such a klutz at times, but I will definitely pay more attention from now on.\"",
        "\"Good. I don't want it to happen to you again.\"\n\n\"It won't.\" He kissed her forehead while she was lying in bed. It was a ritual they'd been doing forever: discussing their day before Michela fell asleep. \"Piccola, you didn't by any chance hear Pap\u00e1 falling down the stairs, did you?\"\n\n\"No. I was watching the movie with the headphones on, like you told me. If I heard you, I would run to you, Papi, and I would pick you up, and kiss you, and make you feel better.\"\n\nOliver chuckled. \"That sounds... perfect. Though it's a good thing you didn't hear anything. I guess the headphones are okay after all.\"\n\n\"They're great! I heard the movie really good, Papi.\"\n\n\"Excellent. And how was at the playground with Gena and Kara?\"\n\n\"It was fun. I've made another friend there. His name is Ben.\"\n\n\"That's great, vita mia. Tell me some more about him.\"\n\nAfter Michela fell asleep, Oliver maneuvered his aching body out of bed, and climbed down the stairs. He held onto the handrail like his daughter had advised him to and put his coat on.\n\n\"I'm going out,\" he informed his parents.\n\nThey were in the living room, brooding.\n\n\"Where to?\" Dan said.\n\n\"Come on, Dad, are we really gonna do this?\"\n\nHis father remained quiet, and so did his mother.\n\n\"Guess not,\" he muttered as he walked out.\n\n***\n\nEllie put the finishing touches on her makeup as she got ready in the front of the mirror. Oliver had texted her earlier that he was coming over to talk. She'd been a wreck up to that point, weeping for hours, and if weren't for Kara, she might have gone mad. She feared their parents might have coaxed him into breaking up with her, and with the way he'd been behaving today, it didn't seem all that far-fetched to her.\n\nShe opened a bottle of red and let it breathe a little before Oliver was there. She lit candles in the living room and put on soft R&amp;B music. She was doing everything she could to create a romantic ambiance, to remind him that the ship had long sailed, that they were now lovers, not siblings, that they could never go back.\n\nShe was just setting the wine and glasses on the table when there was a doorbell ring. She swallowed as she faced her striking reflection one last time, running her fingers in her cascading blond hair. She heaved a sigh to help her loosen up a bit and answered the door.\n\n\"Hi,\" she breathed, more eagerly than she would have wanted.\n\nHer brother replied with a bob of his head, his expression unreadable.\n\n\"Uh, come in.\"\n\nShe cleared the doorway, and her blue eyes welled up with tears as he walked passed her.\n\nHe was so indifferent to her appearance; an appearance she'd spent more than an hour to perfect, and it was very unlike him. He would always comment on her looks, even when she answered in her pajamas. He would call her bellissima, gorgeous, or say something about her golden hair, about her tight ass, her long legs, about her rack... and he always, always kissed her. But there was none of that now.\n\nOliver cut his eyes at the candles and wine while he hung his coat, and he and Ellie took a seat on her comfy sofa.\n\n\"Are you okay?\" she asked when he groaned as he sat down.\n\nHe gave a wince while adjusting himself. \"I will be.\"\n\nThey say silence turns awkward after eight seconds or so, and if that's the case, then this was triple awkward and counting.\n\n\"I'm sorry, I can't keep doing this,\" she said abruptly, shuffling to him. \"You're mad at me, and you have every reason to be, but I need to know what is happening here.\"\n\n\"What do you mean what is happening? We're\u2014\"\n\n\"Oliver, please don't do this.\"\n\nHe frowned. \"Do what?\"\n\nShe sprang to her feet, her composure gone like the wind. \"Are you breaking up with me?!\"\n\n\"Ellie, why don't you sit down, and we'll\u2014\"\n\nShe burst into tears. \"Oh my god, I can't believe you! You said we were forever!\"\n\n\"What are\u2014\"\n\n\"How can you do this to me?! When I love you so much...\"\n\n\"What are you talking about for heaven's sake?! I'm not breaking up with you!\"\n\nEllie drew a deep breath, her tears relentless. \"Y-you're not?\"\n\n\"Jesus, no! Am I upset? Yes. Am I mad? You damn straight I am! Am I breaking up with you? No! Not now, not ever.\"\n\n\"Oh my god,\" she giggled tearfully and plunked herself down in his lap.\n\n\"Ellie!\" he whimpered in ache.\n\n\"Sorry, sorry...\" She kissed his cheeks and throat. \"I'm just so happy now.\"\n\n\"What in God's name made you think that I was breaking up with you?\"\n\n\"You were so angry when... and Mom and Dad, I thought they might've gotten into your head... I was really worried, baby. I've been crying all day.\"\n\nHe cupped her cheek and stroked her tears away with his thumb. \"Beautiful, you have nothing to worry about. Do you know why?\"\n\nShe shook her head, submitting herself to his piercing brown eyes.\n\n\"Because no one can get into my heart. You have taken it by a storm months ago. Breaking up with you?\" He shook his head and gently sucked her lips. \"I can't live without you, Ellie.\"\n\nShe cupped his cheeks when he released hers. \"I love you so much, Oliver, and I'm not prepared for anyone to come between us, ever. I will give everything and everyone up for you. Us is all that matters to me now.\"\n\nHe nodded before he sucked her supple lips again. \"So... fifteen weeks?\"\n\nEllie pulled her long hair back and poured two glasses of wine. She passed him one and held the other. \"I can drink once in a while; my doctor told me. As long as it's within reason.\"\n\nHe took a sip. \"I know.\"\n\n\"Of course you do,\" she sighed, recalling that this wasn't his first rodeo. She sipped her wine as she weighed her words. \"I don't know what to say. I have no excuse here. I should've told you, but...\" She sighed and swigged her wine.\n\n\"First thing first: is it mine?\"\n\n\"What?!\" she exclaimed. \"Oliver! Of course it's yours! Of what exactly are you accusing me here?!\"\n\n\"I'm not accusing you of anything, but fifteen weeks, that's... December. You were still engaged back then.\"\n\n\"Oh my god, no! I hadn't touched him for at least a month before that. Oliver, it is unquestionably yours.\"\n\n\"That's a relief,\" he sighed, the petrifying fear that had been gripping him for most of the day abating.\n\nEllie giggled and kissed his lips. \"This is the product of our fuckfest. Don't you remember that weekend? We were going at it nonstop, baby.\"\n\n\"How can I forget? It was the best weekend of my life.\"\n\nEllie reiterated the sentiment with a sultry simper. \"Was it?\"\n\nHe smiled and polished off his glass. \"Hit me.\"\n\nEllie poured him and placed the bottle on the table.\n\n\"I know we never talked about it, but I just assumed you were on the pill.\"\n\n\"I was, but... do you remember what Dad said about you on Christmas? Well... apparently lightning does strike twice.\"\n\n\"So you were on the pill.\"\n\n\"I couldn't believe it myself, Oliver. I checked and double-checked and then triple-checked. Blue, every time. I went to see my doctor, who confirmed that I was pregnant, and he said that it was rare but not impossible. I didn't plan it if that's what you're asking.\"\n\n\"Yeah, I believe you. Now why didn't you tell me?\"\n\nEllie gave a sigh and gobbled her glass up. \"I was afraid that if I told you... you would want me to get it fixed, and I don't want to, Oliver. I'm... I'll be honest with you, having your baby was something that I wanted. I might not have planned for it, definitely not so early, but it was nonetheless decided for me, for us.\"\n\n\"So you're keeping it?\"\n\nShe nodded. \"I'm 27 today, I'm in love, and... I'm ready to go forward. I want to go forward. I want children, a family, and I want those things with you. I look at how great you are with Michela, and... I'm ready to settle down, to start the next chapter.\"\n\nOliver sighed as he guzzled the wine. He set the glass on the table and sighed again as he stroked his hair back.\n\nEllie was growing more and more despondent, watching him sighing and not at all enthusiastic about it. \"But I guess I'm... alone in this.\"\n\n\"What do you want me to say, Ellie?\"\n\n\"Oh, I don't know. Maybe something along the lines of: 'Yeah, I'm psyched that you're carrying my baby. I love you, and I can't wait to start a family with you because you're the woman of my dreams.' Do you remember when you called me that? The woman of your dreams?\"\n\n\"You're not being fair to me.\"\n\n\"Oh, aren't I?!\" She clambered off of him angrily, tears coursing down her slightly freckled cheeks. \"Never in my life has someone hurt me as badly as you're hurting me now, Oliver.\"\n\n\"How am I hurting you? You spring this on me out of the blue, and I'm just automatically supposed to be stoked about it?\"\n\n\"Yes!\"\n\nHe shook his head and poured himself more wine.\n\n\"Why aren't you stoked about it?\" she wept. \"The woman of your dreams wants to start a family with you, and this is how you react?\"\n\n\"Ellie, you are the woman of my dreams. I am hopelessly and madly in love with you, and the fact that you want to have my kids that much makes me so fucking happy, but...\"\n\n\"But Michela is enough.\"\n\n\"What?\"\n\n\"That's what you said once to Lindsey, that Michela was enough.\"\n\n\"Baby, I didn't mean that. We just... I didn't even think about it! We were just starting this! I didn't even know if you ever wanted kids!\"\n\n\"Well, now you do! So what's the problem, Oliver?!\"\n\nHe rose with his glass of wine and paced about. \"I just thought I would have a little more time... to have some fun. I never got to have fun, not like you. I've had Michela so young, and...\" He sighed and sipped the wine.\n\nEllie's ire was dissipating. She understood where he was coming from. While she was out clubbing and partying, and starting new and exciting relationships, her boyfriend was already raising a child, on his own.\n\nShe snatched the glass from his hand, set it on the table, and snaked her arms around his neck. \"Hon, I understand what you're saying, but you couldn't be more wrong. I would've traded all of my twenties in a heartbeat for this, for what we have, for what I feel for you. It looks so much more glamorous than what it really is, partying and drinking, but this, us... that's actually glamorous; it's the real deal. I could be lying with you in bed watching old movies, and it would be so much more exciting and fulfilling for me than the wildest night in the clubs.\"\n\n\"It would?\"\n\n\"Yes,\" Ellie giggled. \"Oh my god, the things you make me feel... and it doesn't mean that we won't get to have the old traditional fun anymore. We'll go out and do everything. We'll just need to find a babysitter first, is all. And when we get back home, to Michela, to our other kids, we'll\u2014\"\n\n\"Other kids?\"\n\nEllie tittered. \"Well... one isn't gonna cut it for me, Oliver.\"\n\n\"Oh my god, how many do you want?!\"\n\nEllie got a belly laugh from the dread on his face. She was pushing it now, and she knew it.\n\n\"We'll start with the one we already have in the oven, and we'll take it from there, one baby at a time. Yes?\"\n\nOliver sighed, his head a turbulence of feelings and fears. He then took a good look at his sister's pretty face, at her shapely brows, at her blue eyes, at her red pouty lips, and nuzzled her nose. \"I don't have much choice, do I? I need to keep my girl happy.\"\n\nEllie smiled as she nuzzled him back. \"You're keeping her very happy right now, baby.\"\n\n\"Am I?\" he whispered as he moved to gently suck on the side of her neck.\n\nEllie gave a sigh, her body temperature rising. \"Keep it up, and\"\u2014she exhaled again\u2014\"I'm going to show just how much.\"\n\nHe sucked across her throat, loving her deep sighs, before his kisses trailed up to her ear. He took her earring in his mouth and gently tugged while his sister caressed the nape of his neck. He released it and slipped his tongue down her ear canal, fucking her ear. Ellie's sighs grew more powerful before they morphed into moans. She was getting hotter and wetter, and she could just sniff her excitement out. She'd been aching for her brother's dick inside her for weeks.\n\nHer hands roamed over his body under his sweater while he was sucking and tonguing key sections of her neck and ear. She pulled his sweater and tank off of him and continued to paw at his bare yet bruised abdomen, gingerly, thoughtfully. She loved how tight and toned he felt against her palms and fingers. She then realized, while he was again sucking on her throat, that it didn't matter so much to her, his hot build, not anymore. She wasn't in love with his body; she was in love with the person within.\n\nShe covered his lips with hers and kissed him hungrily, ecstatic at the realization. This must have been how his late wife felt when she'd fallen for him. It was a powerful feeling, to truly be in love, not just with an image of a man, but with his substance, too. And while they were swapping oral fluids, she knew she was in love to death with her brother. She would do unspeakable things to whomever tried breaking them up, even to her own flesh and blood. Oliver was hers, always had been. Even while married to another woman, he was hers.\n\nShe stroked his hair as he knelt before her and tugged down her leggings. Horrible thoughts whirled in her head as he uncovered her purple lace thong and slim thighs. She genuinely believed his wife was removed by some higher power as a penalty for taking what belonged to another. There was no other explanation, Ellie was certain. The second Bianca coveted her man, she was doomed.\n\nShe raised her legs, one at a time, so he could take her pants off. Once he did, he kissed his way up her knees and thighs very slowly, very erotically, just teasing her pale skin. She was sighing more acutely as his mouth closed in on her triangle, her skin bristling with goose bumps. He was such a perfect lover, she thought, making her rev until she was redlining for him. He was more patient than her ex-lovers. They couldn't withstand her hotness for more than a minute, soaking their straining members in her sopping wet cunt as fast as they could, but not her baby. He was taking his time with her, allowing her to go crazy for him as he was for her.\n\nOliver brushed her thong aside and ogled her flower in ache. What his sister had put him through the past month was inhumane. How dared she deny him her fatty mound, her puffy lips, and little nub? He was going to destroy that perfect pussy tonight. He would make her orgasm until it hurt, until she cried and begged for him to stop.\n\n\"Oliver!\" Ellie gasped when his lips pressed to hers.\n\nHe was kissing her labia so delicately, as though it were her mouth. Ellie was going crazy, his wetness mingling with hers at the crux of her thighs. The second he slid her thong off, she propped her left foot on the sofa's armrest and remained standing on her right, giving him as much of her pussy as she could. She'd never been eaten like that before, and while shivering as his lips moved up to her clitoris, she was happy she hadn't.\n\nShe wanted as many firsts as possible with him. Had she had the gift of foresight, she would have preserved her virginity for him, saving her body and heart for all the firsts she could take. It was just so powerful and special with her brother, even a routine cunnilingus. The sensations that coursed through her were amplified beyond her wildest dreams. Watching him on his knees eating her bald pussy with voracious appetite felt like nothing else.\n\n\"God, baby,\" Ellie whimpered as if she were crying, his tongue spanking the fuck out of her sensitive clit. \"I lo-love you.\"\n\nThis was another power her brother possessed. He was making her emotional whether licking her or fucking her. She simply couldn't contain herself with him. Perhaps she was never meant to.\n\nShe took off her blouse and remained in her black lace push-up bra. There was no need to hide her baby bump anymore; it was all out in the open now. She caressed her belly as she watched the gorgeous father of her unborn child taking good care of her. It felt so intimate to Ellie. Oliver would be taking care of her pussy, of their kids, and of her till the end of times. How she could've ever hoped to resist him was beyond her now.\n\nShe arched her neck, relishing the wet sound of his tongue flicking at her ever-distending clitoris. His tongue sloped down her slit a second later as he licked from hole to clit again and again, before the tip of his wet flesh resumed lashing her nub.\n\n\"God,\" she moaned when he spat at her inner pink and licked his spit off her tender flesh. Ellie could orgasm just from the sound of his spit being thrust into her hole, never mind that his deft licking was making her long leg tremble.\n\nThe tender R&amp;B music and multitude of candles were the perfect setting tonight. Though the music was difficult to hear now when she was muffling it with ragged moans, seconds from squirting. Ellie was a squirter before Oliver, but she never gushed out this explosively, this violently before. And after she trained Oliver what to do to make her spout like a whore, she would be left dehydrated.\n\nShe reached down and parted her lips with two fingers while he was wrecking her excitable button with his lips and tongue. It was sensational to feel his tongue probing her folds and plunging into her time and again before licking up to her clit. It was orgasmic when he sucked and tugged on her nub, devouring her genitals like a famished carnivore. He would have to take her in seconds, they both knew; she was quivering too often.\n\nEllie felt a tingle within, her breathing rapid, her body on fire. She started humping Oliver's mouth, the way she was programmed whenever she was about to crest. With one leg stretched down to the floor and the other bent with her foot perched on the armrest, she rolled on his lips, trickling her musky excitement into his mouth. She moaned softly before harder, huskier, feeling her pussy doing its own dirty thing. Her slit ground up and down his lips faster and harder until she\u2014\n\n\"OLIVER!!!!\" She ejaculated into his awaiting mouth, trembling and whimpering forcefully. There was no music now but the one she was making. \"Oh my god, take me... take me!\"\n\nOliver was taking her alright, pumping two fingers in her hole while rapidly tapping on her clit. He pulled his fingers out and watched another potent squirt jetting out of her before he repeated the process. Ellie was standing on one leg like a stork and spurting like a fountain, her brother's face all the way up her business as he was tapping, pumping, and sucking the orgasm out of her.\n\n\"O-Oliver,\" she whined in rapture, her pussy pulsing in his mouth, her juices dribbling down his chin. \"God, I love you, baby...\"\n\nA thread made of gold snaked around her and lifted her in the air before coming down on her like Thor's hammer, her orgasm washing over her in waves of a tsunami. She shuddered as she rode his lips, pulling his face to her gap by his hair and expelling her desire down her brother's throat.\n\n\"Oh, gosh,\" she whimpered like the whiny bitch she'd always been in bed. \"Oh, gosh...\"\n\nEllie finished strong, the way she'd started, and was slowly coming down while her brother sucked gently on her hole. Her clit was insanely stimulated now, and if he kept messing with it, she would come over and over this way. He would make her come repeatedly tonight, but not on his lips.\n\nHe gave her throbbing pussy one last loving kiss and looked up into her deep blue eyes. They were tearful. They often were when she climaxed. She was still uneasy, winded, jerking here and there, her foot on the armrest. It was then when he noticed her belly. It was slightly protruding, disagreeing with the rest of her thin body. This was the second time he'd made a woman look like that. He splayed a hand across his big sister's belly and rubbed, understanding that he was months away from rearing another child, that Michela was only the first link in a chain of unknown length, the head of a dynasty.",
        "Ellie lapped his hand with hers as he rubbed. The feeling overpowered her, and she was trickling tears. She was in love; she was going to be a mother; she was going to have a family; she would soon have everything a girl could ask for. It was such a blissful moment for her, watching her little brother caressing her belly that was swelling with his seed.\n\nSociety was right, Ellie realized. She and her brother were indeed abnormal, unnatural, but not in the way it so ignorantly accused. She and Oliver were the embodiment of true love; that was the only thing abnormal about them. They'd have their family and grow old alongside one another, and if there were indeed such a thing as an afterlife, they would be there no doubt, together, loving each other as they were doing now.\n\nShe lowered her foot back down to the floor and yanked Oliver up to her in a sob. It was too much for her, and she needed to let it out. She wept in his strong arms, not in pain but in joyfulness. This moment was the happiest moment of her life, one of many Oliver had given her up till now and would be giving her for years to come.\n\nOliver was used to it by now, to see Ellie seeking his embrace. He could never comprehend it though, why she'd fallen for him, why she wanted his kids, why she was willing to fight for them to the bitter end. His sister was a rare flower, a masterpiece, the most stunning girl he'd seen both inside and out. What she had found in her obese, unkempt brother was beyond him.\n\nEllie was every bit as desirable and striking as her brother made her to be, her baby bump making her more ravishing than ever, but Oliver was no longer obese nor unkempt, no matter that he was still perceiving himself as one. This was a blessing as a curse. He would never be able to truly appreciate himself, to see himself the way others were now.\n\nStanding shirtless in jeans and sneakers while holding his weeping sister in her lace push-up brazier, he couldn't tell what an aesthetically pleasing picture it would have made. His 5' 11\" frame that was no less toned and sculpted than the best of the best-looking male models pressing to Ellie's 5' 5\" of pure hotness. He couldn't tell what a lovely sight was to watch his sister's cute belly snuggling up to his well-defined abs. He couldn't see his face, the swan that emerged from the fat, bearded teenager he once was.\n\nHe couldn't see any of it and never would. Devoid of vanity and narcissism, he would forever worship his sister, pray at the altar of her beauty and grace. He would never be able to look into her excruciatingly beautiful sapphires as an equal. He would never be able to stroke the mane of her dark blond hair without feeling like he cheated, as if he were paying good money for it. And he would never be able to make love to her and truly accept that it was indeed happening, that he wasn't dreaming it, that this breathtaking blonde was his now and forever.\n\nAnd perhaps it was for the best, that old habits die hard. Ellie would never admit it, but she loved being put on a pedestal. She was used to it by now, and although Oliver was far more striking than any of her striking ex-boyfriends, she wasn't keen for him to truly realize it. An irrational fear had long nested inside her that he might leave her for another woman, for a less complicated relationship, that he would stop appreciating her for the masterpiece she unquestionably was.\n\nEllie would have nothing to fear of however. Her current and final boyfriend, just like all who preceded him, would worship her forever. God had made sure of that when dreaming her, giving her an unfair advantage in curves and ass, assembling a pair of breasts on her narrow frame that were originally promised to a broader broad. He made sure of that when he carved her face from a rare mold of the divine and spectacular, when he graced her with thick blond hair that made girls green with envy whenever she tossed it about.\n\nHe guaranteed it when conjuring her blue eyes in a spell that could only be cast once per millennium, and with a pair of pouty lips that guys would kill to have them wrapping around their cocks. Ellie was his muse, the ultimate example of how all women should look like if only he had the resources, and now, whether he approved or not, his muse had picked her mate -- the youngest of her brothers, her own flesh and blood.\n\nNestled in the safety of her brother's arms, an emotional Ellie was finally ready to unglue her cheek from his smooth chest as she gazed up into his eyes intently. \"Move in.\"\n\nOliver couldn't object even if he wanted to. All Ellie ever needed to do to get her way with him was shed a tear, and it was over. \"Just say when.\"\n\nEllie fretted her bottom lip, loving how spellbound he seemed while getting lost in her tearful eyes. \"When.\"\n\nOliver brushed her fair hair aside, unable to look away from the sorcery of her blue gaze. \"Done.\"\n\n\"I love you,\" Ellie murmured excitedly, tears smothering her throat, before she thrust her lips at his and sucked so emphatically. \"My god, I love you!\"\n\n\"I love you more. I love you to death, gorgeous.\"\n\nArms vined around his neck, Ellie strangled her brother as she took his mouth, and he retaliated by tightening his arms around her slim waist. Neither seemed to care whether their fetus could take this brutally snug embrace. It took only seconds for their hot kiss to set fire in their loins, and suddenly, they were pawing and feeling each other up, desperate to interlock.\n\nTheir tongues wrestled and grappled as Ellie unbuttoned her brother's jeans while he was molding her rounded, firm butt. His dick was straining hard in there, just like her nipples against her lace bra. Oliver sucked on her neck while shaping the bloom of her ass, and Ellie kissed his shoulder and chest as she was fighting to free his massive erection. Well-known for her tenacity, Ellie was stroking her baby bro's dick, skin to skin, in a matter of seconds. He was good and hard for her, she knew. She would grind that fat cock in her tight pussy tonight until it bled.\n\nThey kissed hungrily again, Oliver so erect against his sister's belly. He clutched the back of her thighs and picked her up, and Ellie crossed her feet around him as soon she was airborne. He grimaced at the ache of her legs hugging his bruised ribs but was resolved to ride it out, hating to show weakness in front of his woman. Despite his best efforts, his sister noted his struggle and crossed her feet around his hard ass instead while grinding her bare, leaking sex on his dick.\n\nAlthough she admired that chauvinist trait in him, his reluctance to acknowledge vulnerability in her presence, she would never allow him suffer for it. They kissed passionately, gasping and tangling, before Ellie thundered a whimper when Oliver slammed her bony build against the wall. This was it, she knew. He was gonna do her standing.\n\nWhile kissing as though it were their last time, Ellie tugged his jeans and briefs down to his knees in urgency, her mind crazy with sex. She stroked his veiny member, feeling so empty it hurt, and aligned it with her damp entrance. A spasm passed along his shaft as his big sis gauged how thick and hard he was in her fist. She taunted them, rubbing along her slit with his cock, giving him a taste of the heat and wetness expecting him.\n\nIt didn't take long for Oliver to push into her, and Ellie moaned into his kiss when he split her folds. Her brother wanted to cry at the feeling of her snug moistness wrapping around his succulent dome as he impaled her. Eyes fluttering with sex, Ellie took his dick up to the hilt, loving how preposterously wet she was when they locked pubic bones. He felt so fulfillingly big inside her, stretching her around him, occupying all of her soaking inner pink. She looked down at their ungodly fusion, the blue in the eyes scintillating, loving this view, of her brother buried inside her.\n\nHe kissed across her throat, basking in her scalding wetness. \"Dear god, I've missed you.\"\n\n\"Then show me, baby,\" Ellie breathed, nibbling his bottom lip in desire. \"Show me how much you've missed me.\"\n\nTheir tongues instantly sought each other's caresses as Oliver began moving in his pregnant sister. Ellie nearly wept at the intense sensation, of her bro sliding his beastly cock in and out of her. Her feet were locked tightly around his toned butt as she took him over and over, heaving against the wall. She sent her hands after his biceps while mingling his spit with hers, loving how firm he was, everywhere. But he was the firmest inside her young vagina, thrusting like a god.\n\n\"Oh god, you do that to me!\" Ellie whimpered, clinging on her bro as her hourglass figure kept bobbing to the pace of his thrusts. \"Ohhh... ohhh... ohhh... ahhh... ahhh...\"\n\nHer belly continued to scrape her brother's steel-hard abs while he was filling her, stretching her around him, his dick pumping in that womanly passage that resided between her slender thighs. And Ellie loved it, moaning incessantly, cradling him as he kept plunging into her, penetrating, claiming, sucking on her flushed skin, making her heave and groan at her fullness. She arched her back, pinching her shoulder blades against the wall, as she submitted more of her pussy to her kid bro.\n\nAnd he was taking, taking her, thrusting so hard into her tight slit that made Ellie jerk and whimper like a little cunt. She kissed him deeply while tightening her vaginal sheath, clutching him inside her, hating to let go when he slid out only to desperately suck him back into her. She gloved his manhood so painfully snugly, molding to him as if she were born for his cock, as if her entire purpose was solely to wrap around him in the tightest of fits, so he could pop inside her when he couldn't take it anymore, the feeling of her wringing wet tube sock clutching and stroking him mercilessly.\n\nShe grasped his muscles while her skinny bod bounced up and down his pelvis. Her bro was expertly fucking her, smacking her shaved pubic bone with his every time her feminine canal swallowed him whole. Ellie whimpered aloud as he thrust into her again and again, her back scraping the paint off the wall. The strap of her bra slid farther down her arm with each ram of his cock, desperate for traction. Another thuggish thrust and a subsequent whimper, and her strap draped down her elbow, loosening her large cup.\n\nOliver was too focused on her gaping mouth and cunt to notice, drilling his prick into his only sister. He was going mad, feeling her bulging belly pressing up to his skin. It was his baby inside this hot blonde, inside his big sister, and so was his hard dick. Only when her taut nipple teased the corner of his eye, he noted that her right titty was left unguarded. He cupped it immediately and squeezed hard, forgoing subtlety.\n\nEllie thundered a groan as her breast easily welled up in his tight grip. Her tit was too plentiful, even for two-handed use. With great pain, her brother had to agree and tugged at her pink nipple instead while pumping his brawny manhood up her hot little sex. Her nipple was as hard as his dick, so rubbery and sensitive in his crude touch, and Ellie gasped and whimpered with every thrust and pull.\n\n\"God, you're so tight,\" he gasped while bouncing the smoldering blonde on his dick.\n\n\"Oliver, please fuck me, please,\" she whined while pulling her hair back, her blue eyes so weak and needy. \"Fuck me!\"\n\nEllie arched herself again, pressing to his fingers as he curled the pink beauty that garnished her pale swell. She clenched and released her thighs as she fell and rose on his hard meat, loving the slushing music of their genitals meshing. She tongued his tonsils as he molded her breast again and whined up the ceiling when he staved in her nipple. He kept forcing it into her tit before he engulfed it with his sweet lips. He sucked and tugged, getting it to swell with blood all over again, and Ellie's nip was engorging and straining once more, only now so sensitive and stimulated, threatening to burst in his mouth.\n\n\"Oh my god!\" she cried, her mind obsessed with sex. \"Do that to me, baby! Stick it to me!\"\n\nPowering through the pain of his wounded torso, he thrust into her womanly core, slapping her between his build and the wall. Her golden hair flopped down her right eye and glued to the beads of sweat on her forehead. A never-ending chain of mewls rumbled out of her throat before she again begged her brother to fuck her. He was too excited now, but so was she, longing for him to explode deep in her pussy, as deep as she could take him. She was gagging for his seed to be splashed all over her vaginal walls, to milk him dry with her tender sex.\n\nShe reached down their convergence to feel his member gliding in and out of her. A tremor exploded through her hotness of a bod as she sensed how slick he was with her juices, coated good in her lovin'. She splayed two fingers on her supple labia and relished him sliding between them straight into her. She moaned so erotically, realizing how tightly they were pulled around him. Bobbing on his cock, she sucked on her fingers to fill her mouth with her delightful essence. She then whimpered again and again as he thrust into her like a horny bunny, tearing through her with that monstrous member.\n\n\"God, baby, you're so big,\" she puled lustfully as he resumed curling her erect nipple, breaking her, owning her, so rough and inconsiderate, and his smoking sis was loving every second of it.\n\nThe flashing tingle between her hot legs alerted her that she was loving it too much. She was going to burst, and it was about to happen momentarily. She was too hot and wet, caressing his dick inside her faster, deeper, harder. While her brother nibbled her neck, her thighs began jerking, incapable of holding it in anymore. She cupped his temples, her body bouncing furiously up and down his pelvis, desire seething deep in her sex.\n\n\"Oliver...\"\n\nIt was like cipher by now. Every time his sister whined his name like a skanky bitch, she was about to come.\n\n\"Me too, baby, me too.\" He shoved his tongue and cock into her wet holes, rippling so deep inside her snatch. He pulled her bottom lip down with his teeth and licked the inside of her lip. He ran his tongue along the straightness of her teeth, tasting her gums, licking his sister, everywhere. \"I can't wait to feel you come.\"\n\n\"I can't wait to feel you,\" she gasped, aching for his sperm, her shoulders bobbing, her frame heaving, her loose right breast jiggling.\n\n\"You're gonna feel me all night, bellissima.\" He crushed her naked titty in his hand and made her sob a whimper when he slammed her against the harsh wall, loving how snugly her feet were locked around him. He shot her right boob an obscene look, adoring how busty his sis was. \"God, your girls are huge.\"\n\nEllie set free the most delicious whimper while being impaled up to her pancreas. \"Wait a couple of months and see what happens. They'll be gigantic.\"\n\n\"If you wanna come, then stop talking about your tits. I'm struggling as it is.\"\n\nShe heaved a guttural grown as he slew her hot vagina, hitting it deep inside her, teasing her G-spot, still stretching her, shaping her, taming her. \"You're gonna need four hands to lift one.\"\n\n\"Fuck,\" he panted, his veiny shaft swelling with cum at the thought.\n\n\"They're gonna fuck my back so bad, baby...\"\n\n\"Ellie...\"\n\n\"Come, sweetheart, come,\" she pleaded, their bodies moving as one. \"I'm literally waiting for you!\"\n\nHe grasped her left thigh by the hamstrings and pushed it to the side and upward, opening her up. Ellie's feet untangled as her left leg was taking a hard left while her right was curled around his butt. She was open wide and allowing her bro frightening depth, anything to please him.\n\n\"Ellie, baby, you're so fucking hot,\" he whimpered. \"I'm dying to come...\"\n\n\"Oh my god,\" she gasped in excitement, feeling him in her spleen when he began throbbing. \"God, just fuck me! Come inside me!\"\n\n\"Ohhhh,\" he moaned. \"This is it for me.\"\n\nWith their bodies mashed together, it was Ellie who was doing the final undulating. Interlocked with her brother, so open for him, she moved in waves like a melody, working her shoulder blades against the wall, wanting to relieve him inside her, the deeper the better, wanting him to bust his nut, to dump his load inside his sister, to feel him pulsating in her sheath, to have him \u2014\n\n\"Holy shit!\" She gasped for air, taking furious spurts of cum in brutal depth since her brother was trying to squeeze his balls into her, too.\n\nOliver couldn't speak or move. He was pumping his jizz straight into his sister's growing womb, filling her up with a month's worth of supply. He could feel how snug she was as she milked his member. She was such a tight slit, and wet, too. Ellie buried his wounded face in the deep crack of her cleavage and grunted repeatedly while doing the fucking for them, as her kid bro wouldn't budge while filling her love box with explosive spouts of his seed.\n\nBut he didn't need to move. His maiden spurt triggered her orgasm, and the silky oils of his pregnant sister swept over him in torrential tides while she was riding him and peaking, sucking his cum into her quaking vagina one rope after another. Her smoldering body lurched and writhed, her contractions fierce and endless. She clenched her right leg around his hard ass, her pretty toes stretched so taut, and grunted like an animal with his face in her bosom as she milked the fuck out of his junk in her fertile pussy.\n\nEventually, she drained his balls after transporting every bead of his seed into her, and collapsed on him, her legs draping around him in the air in soft spasms. They remained in stillness, sweaty and breathless, before Ellie plucked her face from the crook of his neck and propped her head back against the wall. Her blue eyes were so needy as she gazed into her brother's bright brown eyes, her legs spasming freely a couple feet off the ground. They said nothing though. They just stared for a long moment, the palms of their hands lapping so lovingly on the swell of her belly.\n\n***\n\nEllie lay in bed in the late hours of the night, kissing and licking the sex off her lover's hard abdomen while he was on his back catching his breath. She exhausted him with a relentless two-hour fuck. He was too horny, and her appetite when it came to him could never be sated. It had once baffled her, but not anymore. Nothing could baffle her now when it came to her kid brother. The power he commanded over her was absolute.\n\n\"Baby!\" she giggled as he rolled them over to reciprocate with his own session of sucking and licking. His tongue lapped up the sweat off her breasts, ribs, and her striking baby bump before he clamped a soft nipple between his lips and suckled delicately.\n\n\"You're making me go again, sweetheart,\" she breathed suggestively while drawing her knees to her bust, her nipple expanding and reaching, grazing his palate.\n\nJust then, he rolled off of her and took a swig from the wine.\n\n\"God,\" she giggled while pulling her hair back with both hands.\n\nShe lowered her legs and snuggled up to him. She was definitely game, but she knew he wasn't; he was just teasing her. Nevertheless, the second her nipple connected with his mouth, she was wet and hot as though she hadn't exploded on his cock a gazillion times tonight.\n\n\"It's gonna be like that forever, isn't it?\" she whispered under the strong arm that was securing her to him.\n\n\"Have you taken a look at yourself in the mirror?\"\n\nShe simpered, loving how he was worshiping her. \"So is that a yes?\"\n\nHe took a second draft from the bottle. \"It's definitely not a no.\"\n\nShe giggled, so happy and content and excited. She splayed a hand across his toned chest and stroked idly with her long fingernails, loving the sexy streak of hair that ran down his abdomen. \"What did Mom and Dad say to you? After I left.\"",
        "He petted her side and heaved a sigh. \"Let's just say it was intense. Three hours of it.\"\n\n\"Baby, pay no attention to them. They'll never understand. No one can understand.\"\n\n\"Bella, I don't care. I only care about you. You are all I care about.\"\n\nHis sister pulled him to her hot kiss, putty at his words. She released him with a tender suck and curled a leg across his abs, careful not to contact the bruises her twin had left on his flesh. \"I'm gonna bust Jack's fucking kneecaps for this.\"\n\n\"Leave him be.\"\n\n\"No promises,\" she muttered bitterly, despising her twin. She brushed her fingers over his nipple, reflecting. \"Oliver, we need to start planning ahead. Right now, it's us and Michela; soon, we'll be four. We need a game plan here.\"\n\n\"Well, we're gonna need to move. Let's start with that.\"\n\n\"I agree. We can't stay here; too many people know us.\"\n\n\"Actually, I've been wanting to talk to you about that for some time now.\" He took a sip from the wine and twiddled his fingers in her fair hair nervously. \"Um... I uh... I was thinking maybe we could um...\" he stammered, unsure of the best way to bring it up.\n\nEllie beamed. \"Italy?\"\n\nHe looked down at her striking face, her grin instilling confidence in him. \"Yeah. Is that... something you'd be willing to consider?\"\n\nHis sister gave a fleeting burst of laughter, excited at the thought. \"I might.\"\n\nA big smile curved her brother's lips upward. \"What will it take to convince you?\"\n\n\"I don't know,\" she purred in playfulness, long sold on the idea. \"Pitch it to me.\"\n\nEllie had had her suspicions Oliver had been secretly planning to return to Milan. He was so passionate whenever reminiscing, and after he'd won Francesca over that day, it was clear to her that their time in the States was coming to an end. Francesca wouldn't have forgiven him otherwise.\n\n\"Well, let's start with the obvious benefits: No one knows us in Italy, and that means that we could do what the fuck we want, like hold hands, kiss...\"\n\nEllie gave his nipple a gentle suck, so pumped at the thought. \"That sounds like a dream.\"\n\n\"It doesn't have to be.\"\n\nShe climbed atop him, her superb naked bod flat on his. \"Go on, baby.\" She kissed his lips. \"Tell me more.\"\n\nOliver's heart began racing for some reason. He might have had total power over his sister, but it was no less true the other way around, maybe even truer. He tucked her blond hair behind her ear and kissed her deeply, rolling her taste along his tongue. \"Milano is such a great city. It really is, Ellie. It's based in northern Italy, and it's well known for its designers. Some you may have heard of: Gucci, Dolce &amp; Gabbana, Armani...\"\n\n\"Ooo, baby,\" Ellie purred, knowing full well he would buy her whatever she wanted. She grasped his limp dick and began softly stroking. \"More.\"\n\nOliver smiled, can't believe how still wet she was against him. \"We'd be very close to Austria, Switzerland, and France. We could go skiing the Dolomites in the winter. And there are some beautiful cities all around: Verona, Firenze... Venezia.\"\n\nEllie adored his accent, so melodic, so erotic... she cupped his large scrotum and kneaded delicately, loving the change of pace in his breathing as well as the rapid hardening of his manhood. \"Will you teach me how to speak Italian?\"\n\nOliver gave a deep sigh, knowing he would have to fuck his hot blonde's brains out in seconds. She was simply irresistible. \"Michela will teach you. She speaks much better than me.\"\n\n\"I want you to teach me, lover,\" she whispered in his ear and then hummed in a sultry voice when his erection pressed to the bump of her belly.\n\n\"Whatever you want, my love,\" he breathed, going crazy at her trickling and her breasts yielding.\n\n\"Do you really mean it, Oliver?\" she whispered so softly in his ear, gently grinding against him, skin to skin, her pussy bare and wet. \"Whatever I want?\"\n\nHer brother palmed her cheeks, can't even fathom her beauty. \"Ellie, I will give everything for you. Everything.\"\n\nStaring into his loving eyes, his sister was now also trickling tears. \"What have you done to me...\"\n\n\"Nothing you haven't done to me.\" He stroked her tears away. \"I'm helpless without you.\"\n\nEllie gave a sigh and rose to align his super-hard dick with her super-wet hole. She let him pierce her ever so slightly. \"I love you, Oliver.\" And she hissed the rest of the way down his cock.\n\n*****"
    ],
    "authorname": "blackmatter",
    "tags": [
        "incest novella",
        "incest drama",
        "drama",
        "incest romance",
        "romance",
        "pussy munching",
        "vaginal sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-things-you-make-me-feel-ch-09"
}