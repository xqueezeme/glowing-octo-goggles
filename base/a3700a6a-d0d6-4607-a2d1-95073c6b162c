{
    "title": "Birthday Girl Ch. 05",
    "pages": [
        "Hey guys, \n\nI know this is getting pretty standard but thanks a lot for your votes and especially the comments. \n\nI'd really like your feedback on this one since it's the first time I'm writing a sexy scene (for some reason saying that reminds me of Borat). Kindly bear in mind I'm a complete novice at this so any helpful suggestions would be much appreciated. \n\nI have made up some places and stuff to fit the story; you'll know when you see it. \n\nNames and places... Coincidence... fiction... unintentional \n\nEnjoy! \n\nP.S. Yes I'm a car guy. Well spotted, fellow enthusiast. \n\n********************************************* \n\nThe sun is shining, the weather is sweet. I think Bob Marley wrote that song on a day just like this one. There was nary a cloud in sight in the blue sky and the sun was just on the cusp of being unbearable, making its presence known but not too much that we would run inside cowering. \n\nThe grills were out and Nick was manning them with a hawks eye of precision. If there was one thing Nick liked more than making my life hell, it was grilling. To his credit, the results were always spectacular. He always managed to come up with new recipes from the oddest ingredients and somehow the end product was always delicious. Today he was making burgers with the patties made of a mixture of chicken and minced lamb. Hopefully it would turn out ok. If not, there was always KFC. \n\nIt was an afternoon where you just wanted to lounge around and soak up the sun, which was exactly what people were doing. There were around ten people, all friends of ours milling around, some taking a dip in the pool and generally having a good time. Melissa was yet to arrive with Bill and Sally. \n\n\"Any luck?\" Nick asked, after looking around to check whether Jenna was within earshot. \n\n\"Yeah, I spoke to the wildlife conservation people yesterday.\" \n\n\"And...?\" he was impatient. \n\n\"They were hesitant at first, and it took a lot of convincing, but in the end I made them an offer they couldn't refuse.\" I said in my best Godfather imitation, which wasn't very good. I sounded like I had a sore throat. \n\n\"So it's done?\" he asked, eyes bulging with hope. \n\n\"Yup.\" I said nodding. \n\n\"Hell Yeah!\" he flipped the tongs he had in his hands and did a little break dance on the spot before freezing mid-step. \n\n\"Wait. What offer?\" he asked suspiciously, turning towards me. \n\n\"Don't worry about it,\" I evaded, \"Nothing you can't handle.\" \n\n\"What offer?\" he asked again menacingly. \n\n\"It's nothing!\" I said with my hands out in front of me. \n\n\"Brian, spit it out or I'll stick these in you,\" he brandished the tongs at me threateningly. \n\n\"Don't you trust me at all?\" \n\n\"Now!\" \n\n\"Youjusthavetoadoptone,\" I mumbled quickly. \n\nHe froze. The tongs advanced until they were right under my nose. \n\n\"I have to what?\" \n\n\"You have to adopt one.\" I said warily, keeping my eyes on the sharp tongs twitching slightly in his grip. \n\nI could see his jaw clenching and unclenching as he processed this information. \n\n\"You're kidding me right? Please tell me you're joking.\" \n\nI didn't respond, instead pretending to look at a bird flying past overhead. \n\n\"Brain, what the hell man, can't you ever do anything right?\" He stalked off back towards the grill, \"it was a matter of asking a simple question, but no, you have to go and make me adopt a freaking behemoth!\" \n\nI followed at a safe distance, ready to bolt at a moments notice. I knew he would react like this, getting all mad and excited before taking a minute to listen to the whole story. He was still ranting as he attended to the grill, making sure his beloved chicken didn't get burnt. His concerns weren't totally unwarranted though, I did have a habit of screwing up in grand ways, and everyone knew that. When I was younger my mom never sent me to the grocery store. She'd tell me to get a packet of milk and I'd return with half the store, sans the milk. \n\n\"Dude, it isn't as bad as you think. It's not like you have to put a leash on it and tie it to your garage door or anything.\" I tried to reason with him. \n\n\"Then what? I build a basket full of fluffy pillows for it in my backyard?\" He asked still pissed. \"Maybe it can use the pool as a watering hole!\" \n\n\"You just have to pay a small amount annually for its up-keep and stuff, that's it.\" \n\n\"That's it?\" he echoed, calming down some. \n\n\"Yes, that's it. If you feel like it, you can go visit sometimes, but even that's optional.\" \n\n\"You're sure?\" he asked still skeptical. \n\n\"Despite what you and your girlfriend think of me, I'm not a complete buffoon Nick. You're good, trust me.\" \n\nThe smile returned on his face and he flipped a piece of chicken higher than normal, catching it deftly as it came down and returned it to the hot bed of coals. \n\n\"Awesome. Now we just have to convince Jenna and Melissa to come for the trip.\" \n\n\"I don't know about Lissy man, I don't think I've known her long enough for her to agree for a trip.\" \n\n\"Just help me convince Jenna. She'll do the rest.\" \n\nKnowing Jenna, that could mean showing up in a non-descript black van outside Melissa's house, faces covered with pantyhose, and putting a sack over her head, kidnapping her, and taking her all the way to our destination before revealing ourselves. \n\n\"Dude, Jenna...\" I tried to object. \n\n\"Relax,\" Nick had already guessed my concerns, \"She really likes your girlfriend, she's not going to do anything stupid, that's reserved for you.\" \n\n\"Are we really doing this?\" I asked him with a little doubt in my voice, \"you could just take her for dinner and drop the ring in the champagne.\" \n\n\"Don't you dare back out of this now,\" the tongs of death were back. Maybe he was Vlad the Impaler in a previous life. \"You're the one that spurred this on, and you're not backing out now.\" \n\n\"Alright alright, I was just asking, that's all,\" I said with my hands up. \n\n\"We just need to make sure Jenna doesn't get even a whiff of this or else it will blow up in our faces.\" \n\nJenna took that moment to bound out of the house and rush straight for us wearing a long sponge-bob T-shirt that reached her knees. We immediately changed the topic and started to talk about the grass and how it's a bitch to mow. Too late, she had noticed. \n\n\"What were you talking about?\" she asked as she got to us. \n\n\"Nothing.\" We both said in unison. That there was a guilty reaction if I ever saw one. \n\nHer eyes narrowed and she put her hands on her hips. I saw Sponge-bob was surfing and his pet snail was directly where her legs met. I never figured out if she picked these outfits on purpose or if it was just pure coincidence. \n\n\"I'm giving you up to three to tell me what's going on.\" \n\n\"There's nothing going on peanut,\" I tried to sound convincing. \n\n\"One,\" \n\n\"Baby, we were just talking about how I have to cut the grass, look at how long it's grown,\" Nick tried. \n\n\"Two,\" \n\nWe both started talking at the same time, making a racket, but neither making any sense. \n\n\"Three.\" \n\nHer hand shot out and she grabbed my right ear between her thumb and first finger, twisting it inward. \n\n\"Ouch Ouch Ouch!\" I screamed, \"Why me? Pick on him!\" I said pointing at Nick. \n\n\"Are you going to tell me?\" \n\n\"There's nothing to tell, you psycho!\" \n\nShe twisted my ear further until I was bent down to her level, the pain in my ear unbearable. \n\n\"I didn't hear you. What was that you said?\" she said turning her ear to me. \n\n\"Nick just tell her dammit!\" I said, fearing my ear was going to tear off any second. \n\n\"We were making plans for a camping trip Jen,\" Nick finally said, giving her half the truth so that she wouldn't dig for the rest. \n\nShe released me and I retreated, one hand clamped over my ear, sucking in air from the corner of my lips. My ear was on fire, it was going to be as red as a tomato in a few minutes. \n\n\"Camping trip? What camping trip?\" she rounded on Nick. \n\n\"We were planning to go for one during the long weekend that's coming up. A colleague of mine told me of this great place around three hundred miles from here. It's hundreds of square miles of land that's been set aside as a wildlife sanctuary and conservation effort. Pure untouched wilderness, and they have camping sites and cabins, depending on your preference. I was thinking we go for it since it's our seventh anniversary since we got together, kind of like a throwback to the old days,\" said Nick. \n\n\"Yeah, and it was supposed to be a surprise but you just had to go and ruin it, didn't you?\" I said, still rubbing my ear. \n\n\"I'm not going camping,\" she said totally ignoring me, \"I refuse to pee in the bushes and I will not go for three days without a shower.\" \n\n\"There are cabins, babe,\" Nick wasn't going to give up that easy. \n\nJenna's interest was piqued and she appeared to mull over it. \"How do we know they are any good?\" \n\nNick smiled. He had prepared for this. He withdrew his phone from his shorts and scrolled for a few seconds before handing it to Jenna. She gasped. I joined her to see what she was looking at as Nick hadn't shown me this either. It was a quaint little wooden cabin set in a lush green field against the backdrop of an imposing forest, at dusk. It had a run-down, lived in look and there was even smoke coming out of the chimney on one end. \n\n\"This is the place?\" Jenna asked awed. \n\n\"Yeah, the colleague I told you about went there last month and took that pic himself, it's no advertising or Photoshop gimmick.\" \n\nJenna looked at the picture longingly and half heartedly said, \"But it's almost the end of the term and you know how much there is to do at the school around this time...\" \n\nNick had one more card up his sleeve, \"They have a telescope for star-gazing.\" \n\nNick and Jenna were amateur astronomers and they loved observing the night sky at any opportunity they got. We had spent quite a few weekends back in college in the woods, away from the city lights, with a telescope, staring at the night sky trying to look for Mars or Jupiter. It was something else to be able to look upon another world, millions of miles away, revolving around the sun just as we were and try to imagine what it must be like out there. \n\n\"You're going to help me grade all the papers when we get back,\" she said, pointing at Nick. \n\n\"Babe, they're in kindergarten...\" he stopped when Jenna glared at him, \"Fine, grading it is.\" \n\n\"How many of us are going? Just us three?\" she asked. \n\n\"Actually, we were kind hoping you would be able to convince Melissa to come,\" Nick said, rubbing the back of his neck. I was busy looking up at the birds again. \n\n\"I see, I have to do all your dirty work,\" she said, then looked at me, \"You owe me for this one Bry.\" \n\nShe was just messing with me. She liked to be all tough because I always bullied her and she got precious few opportunities to get back at me, which come to think of it, were now rapidly increasing ever since Melissa had come into the picture. Lissy was one area she could exploit my weakness and there was hardly anything I could do about it. Dammit, I was no longer a lone wolf anymore, a renegade destined to roam the vast plains, bound to no-one and nothing, taking what I needed, doing what I wanted, eternally free, supreme master of my domain. \n\n\"Yeah fine, I owe you, you owe me, same thing,\" I said dismissively. \n\n\"Jenna!\" we heard from the other side of the pool. \n\nIt was Sally, waving as she walked towards us, hand in hand with Bill. She was wearing a sheer white sundress, her green two piece bikini quite evident underneath. Melissa was a step behind her in a yellow T-shirt depicting Tweety on the front, her hands in her denim shorts and flip flops. She still made my heart skip a beat when I saw her flashing me a grin. \n\nJenna met them half-way and they had their usual Hug-O-Mania. Bill came over and we shook hands. \n\n\"Shit, is that a coal-fired grill?\" Bill asked eyeing Nick's chrome plated prized possession, \"I haven't seen one of these since I was a kid, used to make some of the best steaks I've ever had.\" \n\nLittle did he know he had made a life-long friend with that innocent comment. Nick was all smiles and proceeded to giving him an in depth analysis of the working of his overturned garbage can. That's what I thought of it, I hated cooking. I had the patience of a three year old on an espresso binge, cooking just wasn't my thing. \n\nI was surprised when Sally gave me a warm hug. I wasn't used to hugs from people I wasn't familiar with, they were too complicated and required positioning of body parts in ways I was not competent with. Melissa being the exception, of course. She just fit into me like the last piece of a jigsaw puzzle. Usually I just ended up banging heads with the other person. I say hugs should be replaced with fist-bumps, make the world a simpler place. \n\n\"I heard what happened, thanks for getting Lissy home safe,\" she said as she pulled away. \n\n\"Uhmmm... yeah it was, I didn't...\" \n\n\"I know, anyone would have done the same thing right?\" She finished for me. \n\nI just smiled sheepishly. Melissa then came up and hugged me as well, pressing the full length of her body against me. Okay so maybe all hugs shouldn't be replaced with fist-bumps. I needed to conduct a detailed research on the matter. We held each other for slightly longer than necessary before she pulled away, running her hands down my arms. \n\n\"What happened to your ear?\" she asked, eyes flitting over my right ear which was so red you could signal aliens with it. \n\nI looked at Jenna pointedly, who stared back, daring me to tell on her. Melissa followed my gaze and smiled, \"You probably deserved it.\" \n\nI turned to her in shock, \"Who's side are you on?!\" \n\nJenna dragged Melissa to her side and stuck her tongue out at me. \n\n\"They were planning a camping trip to the Himalayas and they were keeping it a secret from me,\" Jenna told Melissa. \n\n\"The Himalayas are in Nepal, Peanut,\" I said shaking my head, \"and we were obviously going to tell you about the trip, it's not like we could have teleported you there without you knowing.\" \n\n\"Gee thanks for clearing that up for me Mr. World Atlas, here I was thinking the Himalayas were in Burkina Faso,\" she said sarcastically as she took Melissa and Sally towards the house. Sylvester could be seen looking for Tweety on the back of Melissa's T-shirt. \n\n\"Where you going?\" Bill asked as the girls disappeared into the house. \n\n\"Rhinestone Everglades Conservation Park,\" Nick told him. \n\n\"Isn't that the place where they have all those endangered species?\" \n\n\"That's the one.\" \n\n\"Awesome.\" \n\nNick then got a look in his eye that I knew very well. He had made up a plan and was going to go ahead and execute it without any consultation of its viability whatsoever. Like the time he decided to bring home two ducks, for no reason at all. Thankfully they ran away within two days. I shook my head slightly to warn him but I knew it was futile. \n\n\"Dude, you should totally come with us,\" he said a little too enthusiastically to Bill. \n\n\"What? To the park?\" \n\n\"Yeah, why not? Unless you got something else to do over the long weekend,\" \n\n\"Not really,\" Bill said as he rubbed his chin, thinking. \n\nNick's fished out his phone again as he showed Bill the same picture he showed us. Bill gave a low whistle. \n\n\"We can take the grill...\" Nick sweetened the deal. He was a salesman through and through. \n\n\"I'll have to talk to Sally,\" Bill said as he handed back the phone. \n\n\"That won't be a problem,\" Nick said, \"leave that to Jenna.\" \n\nThe patties were ready and Nick went about preparing the burgers, lining them up on a small table for everyone to take. The beer was running low in the cooler so I got another batch from the kitchen. \n\nThe girls came out of the house and my burger stopped half-way in its journey to my mouth. Sally had removed her sheer sundress and was now in her two piece green bikini. She was curvy in all the right places. Jenna, the petite one, was in an orange string bikini, but not too revealing. She might have been petite but no one would mistake her for anything but a female. Melissa was in a modest purple one piece with a matching sarong tied around her waist that fell to mid-thigh. Her legs just went on and on and the bikini hugged her curves like it was painted on. \n\nAll three looked sexy without being slutty. I had to physically tear my eyes away from Melissa, the tops of her breasts peeking out over the bikini were mesmerizing. Her breasts were not overly big but fit her frame just right, probably a little more than a handful. The taper of her waist that gently swelled into her hips was very feminine and sexy. \n\n\"They're coming with us for the trip,\" Jenna announced when they got to us. \n\nThat was fast. Apparently Jenna had gotten the same idea as Nick and had gone ahead and invited Sally as well. I looked at Melissa with a questioning look and she gave a small nod and a smile. I winked at her then turned back to the others who were oblivious to our little exchange. \n\n\"Who are 'they'?\" Bill asked, playing dumb. \n\nSally slid up to him and snuggled into his side, \"Sweetie, they're going for a small holiday the weekend after next, to Rhinestone. I was thinking maybe we can go too?\" she had turned the charm on full blast, batting her eyes and walking her fingers across his chest. \n\n\"I was planning to just relax that weekend, but if you really want to, I guess we can do this instead,\" he said. I looked at Nick and we grinned knowingly. The guy was a genius. He was racking up some serious boyfriend points pretending to do this for her when he had already agreed to it before. \n\nSally's face lit up as he agreed and she kissed him on the jaw, \"Thanks sweetie.\" \n\nWell that was settled. We were going for a trip. I guess when you come to think of it, it was a good idea to bring Sally and Bill along. Melissa would feel more comfortable if she had her friends around compared to being alone with people she had known for only a few weeks. \n\nWe spent the better part of the afternoon planning the trip, discussing the logistics as the girls kept going into the house occasionally to do their own things. Jenna was ecstatic at having other female friends and doing girly things as opposed to being dragged into doing guy stuff when she was with me and Nick. It had to be a nice change from debating over which spanner was best suited to open a particular type of nut. \n\nAt one point Jenna was standing by the edge of the pool, talking to someone on the other side, when I got an idea for payback. Twist my ear will she? Let's see how she likes this. \n\n\"Guy's, watch,\" I said in a low voice. \n\nI walked up behind her casually and stopped with my back facing her back. She was asking if anyone wanted more burgers. Pretending to stretch I lifted my arms up and yawned, then thrust my butt out behind me and bumped her. \n\nShe gave a small shriek as she lost balance, teetering on the edge, leaning more out than in. Her arms were waving frantically as she tried not to tip over. Time for the coup de gr\u00e0ce. I extended my index finger and gently tapped her in the middle of the back and yelled, \"Timmmmmmbeeeeeeeeeeeeeeer!\" \n\nAs if in slow motion she tipped over and fell screaming into the water, a loud slap echoing as she hit the surface face and chest first. That must have hurt. I almost felt bad. Almost. She came up sputtering and spitting water out of her mouth, her eyes shut. \n\n\"Brian, you Asshole!\" she screamed pulling her hair out of her face. By some freaky telepathy powers she instantly knew it was me, even though she hadn't actually seen me yet. Either that or I was the usual suspect. \n\nShe got out of the pool screaming every expletive known to man-kind and I ran for dear life as she chased me around the pool, picking up plastic plates and glasses and flinging them at me. She tired after the third lap and went to sit on Nick, hitting him in frustration instead. He took it like a sport. ",
        "\"I'll get you Brian,\" she glowered as I sat back down, ready to run again if necessary. \n\nSally came and sat next to Bill, still laughing, \"You're really an asshole Brian, that was just plain mean.\" \n\nMelissa sat beside me and smacked me on the arm, \"You need to stop bullying her,\"she told me sternly, \"what she has ever done to you?\" \n\nIt was as if the gods had answered Jenna's prayers. She went on to cry about all the times I picked on her as if she was a right little saint. She played the part of the victim really well, drawing sympathy from all the others except Nick. He knew how she could mess my life up but wisely remained quiet, not wanting to get on her bad books. Smart boy. \n\nI ended up getting a lecture from all three girls on how to properly treat a lady. Yeah, that was going to happen. Jenna kept giving me evil smiles whenever the other two weren't looking. Bitch. \n\nAs the afternoon wound down people started leaving one by one until it was just the six of us left. We cleaned up everything, everyone changed from their swimwear and we went back out to sit for a little while before we parted ways. The sun was low in the sky and a cool breeze had picked up. Melissa sat close to me this time, our thighs touching. \n\nWe finalized on last details the trip. Nick and I had originally planned to hire a four by four but Bill said he could borrow his dads Land Cruiser V8. We would drive up on Friday morning, probably taking around five hours to get there, and return on Sunday evening. I would call up the park tomorrow and book the cabins since all the girls refused to camp. I didn't get what was so bad about peeing in the bushes, I did it all the time when I was drunk. \n\nAs the sun finally disappeared, we walked to the cars, prepared to leave. I still hadn't taken mine to the garage so Nick had picked me up. Melissa lagged behind with me as the rest went ahead, walking alongside me with her arms crossed under her chest. It was the first time we had been alone together, the whole day someone or the other had always been around, not giving us a chance to be by ourselves. \n\n\"I enjoyed myself today,\" she said. \n\n\"Are you sure about the trip?\" I questioned. \n\nShe nodded, \"Yeah, it's been a while since I've gone somewhere like this and let loose a little, it should be fun. Besides, I've heard there are endangered species being rehabilitated there, someone has to make sure you don't feed Jenna to them.\"  \n\n\"Thanks for the idea,\" \n\n\"Brian, I swear...\" \n\n\"Relax Mel, I'm not going to feed her to a T-rex or anything.\" \n\nWe were almost at the cars. I didn't want her to leave, we had spent so little time with each other today. \n\n\"Do you really have to go?\" I asked, \"you can stay for a little while, I can drop you with Nicks car later,\" I tried. \n\n\"Not today Brian, I have to babysit for Amber tonight,\" she said, \"Amber's my oldest sister,\" she added when she noticed me trying to figure out who Amber was. \n\n\"Ah, Ok,\" \n\n\"We'll do something during the week ok? I promise,\" she said, putting her hand on my arm. \n\nBill hooted and I flipped him the bird. \n\nAnother quick peck on the lips and she was in the car and on her way. I heard something behind me and turned to see Jenna coming out of the house with a baseball bat. Damn it. Time to pay the piper. \n\n**************************************** \n\nI was at work on Thursday afternoon, staring in despair at the humongous pile of paperwork in front of me, when my phone rang and I smiled as I checked the caller id. \n\n\"Howdy there, sexy thang,\" I said in a southern drawl. \n\nShe giggled on the other side, \"Can't you ever just say Hello like a normal person?\" \n\n\"I could, but where's the fun in that?\" I said as I leaned back on the chair and stretched my arm out behind me. \n\n\"Listen, what are you doing tonight?\" \n\n\"Nothing special, just going to go home after work and maybe watch a movie on Netflix, I've been putting off watching The Martian for a while.\" I lazily wrote the word Martian on a paper on the desk. \n\n\"I have a better idea,\" \n\n\"I'm all ears,\" \n\n\"Dinner, my place,\" \n\nWatching a space movie versus spending time with Melissa. That was a tough one. \n\n\"I'm sure Matt Damon can wait another Sol for me, what time?\" \n\n\"Shall we say seven? Oh, and I need you to do me a favor, can you get some things on your way here?\" \n\n\"Of course. What do you need?\" \n\nShe listed out the items she wanted and I wrote them down on a piece of paper. \n\n\"What are you planning to cook?\" I asked as I finished the list. \n\n\"Who said I was cooking?\" she asked playfully. \n\n\"If you're not... then who? Is Kelly going to be joining us?\" I was confused. \n\n\"Nope, it's just me and you.\" \n\n\"But then if...\" the penny dropped. \"No way.\" \n\n\"Oh yeah.\" \n\n\"Lissy there isn't an antidote in the world that can help you if you eat what I cook.\" \n\n\"Why don't you let me worry about that. Besides, I'm going to guide you, we'll cook together.\" \n\n\"I've never cooked before, not even putting coffee in the machine.\" \n\n\"There's always a first time for everything.\" \n\nI gave up, \"It's your funeral.\" \n\n\"In that case, let's make it a tasty one.\" \n\nWe spoke for a bit before hanging up, me promising not to be late. I stared absently out of the window at the dark clouds gathering in the distance. I had to cook? And eat what I cooked? I'd rather sample rat poison dipped in the venom of a pit viper. How the hell did she convince me to do something I absolutely hate? I nearly burn the house down when I try to cook, boiling water was a problem for me and here I had gladly agreed to cook with her. I had it bad, real bad. \n\nI turned back towards the stack of papers and pulled out the topmost one and stared at it without really seeing anything. I just hoped the fire brigade didn't have to be called tonight. \n\n************************************* \n\nThe weather was getting increasingly worse as I drove to Melissa's place, one of those freak storms that pop out of nowhere, when least expected. It couldn't have been in greater contrast to last Saturday when the sun was shining down on us, turning us golden brown. I was driving a replacement old model Taurus supplied by the garage since my Celica was still in repair. The damage was quite extensive, the radiator was leaking, the intercooler was busted, the fan-belt was almost torn, and the Turbo was a little messed. That was excluding the bodywork, headlight and windscreen. It was going to cost me a small fortune to fix it up and I hadn't told Melissa about it. She was feeling bad as it was and I didn't want to add to her guilt. \n\nI ran to the door with the groceries just as the rain pelted down, the first large drops of water splattering the ground, giving off that wonderful earthy smell. Putting the grocery bags down I shook myself off as I waited for Melissa to open the door. I wiped a few drops of water off my glasses, and looked out at the rain. It was just a moderate shower at the moment but if the clouds approaching were any indication, it was about to get a lot worse. \n\nI didn't hear the door but felt warmth behind me and her arms snake around my waist as Melissa propped her chin on my shoulder, joining me in looking at the rain. I could feel her soft form pressed up against my back, feeling wonderful. \n\n\"Beautiful, isn't it?\" she said after a while. \n\nIn a span of a few minutes the ground was soaked and small rivulets of water were running down her driveway to join the stream on the main road. Her swing stood like a lone soldier, swaying slightly in the middle of the garden, being pelted from all directions by the rain. A fine mist was picked up by the wind and sprayed us with countless thousands of tiny droplets. \n\nI turned and placed a kiss on her temple, \"It sure is,\" I said looking directly at her, hoping I didn't sound too corny, and then back at the rain. \n\nHer arms tightened around me and she bit my earlobe, \"Someone's learnt flattery,\" she said softly in my ear as she blew gently over where she bit me. \n\nI tilted my head and tapped her lightly, \"Just saying it the way it is.\" \n\nShe released me, took hold of my arm and pulled me in, \"it's getting chilly out here, let's get inside.\" \n\nThe sound of the rain got muffled as I closed the door behind me and followed Melissa into the warmth of the house. She was wearing a dark green halter top that left her arms bare and a pair of snug fitting blue jeans that framed her cute little ass perfectly as she swayed her hips in front of me. I followed like a donkey following a carrot on a stick. I had come directly from work so I was still in my formals of a shirt and pants. We walked to the kitchen and I deposited the goods on the counter and turned to face her. \n\nBefore I could say anything she spoke up, \"Don't even try it, we are cooking, that's final.\" \n\n\"But-\" \n\n\"No buts. Don't worry, it's nothing complicated.\" \n\n\"What are we making?\" I asked, curious. \n\n\"Sandwiches. I figured we should pop your cherry with something simple, ease you in slowly so you don't make a total mess your first time,\" she said wryly. \n\nThe double entendre wasn't lost on me but I didn't have any response to that. I just blinked, trying to find a smart enough retort. \n\n\"Oh my god, you should take a look at your face,\" she laughed, \"you look like a deer caught in headlights-\" \n\nShe stopped laughing abruptly as she realized what she had just said and I burst out laughing instead. \n\n\"Are you going to crash into me by any chance?\" I asked, still laughing. The tables had turned. \n\nShe nudged me on the chest with her right shoulder, \"Wham!\" \n\nI clutched my chest, pretending to be mortally wounded, \"Oh, the agony!\" \n\nShe started removing the items from the grocery bag, \"By the way, how's your car coming along?\" \n\n\"Not bad, I should get it back next week,\" I said, joining her in unpacking, our hands brushing each others occasionally. \n\n\"You're never going to let me drive your car again, are you?\" she asked, not looking at me. \n\nWe had not spoken much about the crash since it happened. Melissa's mood always turned sad when the conversation went in that direction so I made sure I avoided it as much as I could, I couldn't stand to see her down. \n\n\"You can drive it whenever you want to Lissy. I can even take you to the garage with me on Monday so you can drive it back,\" I said seriously. I didn't want her thinking I would ever hold it against her. \n\n\"Thanks,\" her mood brightened again and kissed me on the cheek. It must have meant a lot to her. \n\n\"By the way,\" I started as she directed me to arrange the huge slices of bread on a plate, \"who taught you how drive like that again?\" I tried to sound casual. \n\nI continued my task and got no reply. After a long pause I dared to glance at her and found her leaning her hip on the counter, hands folded across her chest, with an extremely amused look on her face. \n\n\"You've just been dying to ask me that haven't you?\" \n\n\"Of course not,\" I quickly went back to the bread, trying to sound as nonchalant possible, \"It just crossed my mind since we were on the topic of the car and stuff...\" \n\nIn all honesty, it had crossed my mind a few times. Okay, a shit load of times, but I couldn't think up of any innocent way of bringing it up without coming across as a nagging, suspicious middle-aged housewife. \n\n\"You're a terrible liar Brian,\" I could even hear the amusement in her voice. \n\n\"Yes, I've been told that,\" I said as I ran out of bread, \"repeatedly.\" \n\n\"Will you grate the cheese for me please?\" she asked as she removed a block of cheese from the fridge and handed it to me. \n\n\"No problem.\" I was glad I was being given such manual tasks. This I could do easily. \"What sandwich are we making?\" \n\n\"It's a special one me and Kelly came up with. The GMCT sandwich.\" \n\n\"GMCT?\" I questioned. \n\n\"Grand Mega Cheesy Tasty sandwich. Patent pending\" \n\nI cocked an eyebrow at her. \n\n\"I was five and she was seven okay? Our vocabulary wasn't very refined at the time.\" \n\n\"So we're going to have something you concocted when you were five?\" \n\n\"Obviously we've made a few changes since then,\" \n\n\"And it never occurred to you that maybe the name needed a change as well?\" \n\n\"Hey, do you want the Grand Mega Cheesy Tasty sandwich or not? One more word against it and you'll be eating raw cabbage from the dustbin,\" she waved the knife she was using to cut some peppers at me. What was it with people and shoving pointy things at me? Did I look like a pin cushion? \n\nWhatever the case, I absolutely adored how she could act totally childish at times. As I looked over at her I noticed how her tongue stuck out at the corner of her lips as she concentrated on cutting the peppers in perfect proportion and how she blew away errant strands of hair that fell across her face as she worked. Not for the first time I thought about how I could spend hours doing nothing but simply looking at her. \n\n\"Done,\" I said as I finished grating the cheese. \n\n\"Onions, chop chop,\" she ordered. \n\n\"Are you a cannibal?\" \n\n\"No,\" she was confused, \"why?\" \n\n\"Because if I chop the onions you'll find chunks of my finger in there for you to enjoy.\" \n\n\"Ughh, gross Brian,\" she screwed up her face. \"Fine, would you set the table while I finish this up?\" \n\nThe dining table was adjacent to the kitchen, separated by a low wall and one could see what was going on in the kitchen. It was a small square glass table with four high backed chairs, each on one side. \n\nThe rain still hadn't let up and if anything, it sounded like it had increased in intensity judging from the increased staccato from the drops hitting the roof. Driving back was going to be a bitch if it continued like this. I stared at the table and wondered what the hell I was supposed to do. For me, setting the table meant getting rid of the pile of junk on it to make enough space to put a plate on it. Either that or clear a spot on the floor in front of the TV, but her table was spotless and sparkling in the low light. \n\n\"Plates are on the top shelf,\" Melissa called out. \n\nRight. Plates. We would need those, why hadn't I thought of that before? Might as well get glasses while I'm at it. Since we were being fancy, spoons and forks wouldn't hurt. Was I missing anything? Ah yes, tablecloths. After all, we didn't want to have food stuck all around our mouths. I was proud of myself as I surveyed my immaculate setting of our eating area, identical dinnerware set on opposite sides of the table. I adjusted a spoon slightly so it was perfectly in line with the rest. \n\nJust as I was about to go back to the kitchen there was a loud crack of thunder that shook the entire house and suddenly complete darkness enveloped us. All that could be heard was the steady sound of the rain battering the house. The power was out. \n\n\"Lissy...\" I called out. \n\n\"Wait for it,\" I heard from her direction. \n\nThere was a low mechanical rumble, distinct from the sound of the rain, that permeated the silence and the lights came back on for about five seconds before they flickered and went out again as the rumble slowly decreased to a stop. \n\n\"Shit...\" I heard Melissa curse. \n\nI switched on the flashlight on my phone and joined her in the kitchen. \n\n\"I think the generator is out of fuel,\" she said apologetically. \n\n\"It's okay, I think this is better anyway, where do you keep the candles?\" \n\n\"Really? A candle lit dinner? Do you want me to wear a corset as well?\" \n\n\"With high heels?\" I asked hopefully. \n\n\"You men are impossible!\" she huffed as she walked past me and got candles from a drawer. \n\n\"You started it...\" I said in a small voice. \n\n\"It's a good thing the sandwiches are done,\" she handed me the candles and took the food to the table. \"Hurry before they get soggy.\" \n\nPlacing the two lit candles in the middle of the table I joined her, taking a seat opposite her. \n\n\"Dig in!\" she said attacking her sandwich like a ravenous wolf. \n\nShe ate like a pothead who had the munchies. Strings of cheese extended from her mouth to the sandwich as she took a bite and pulled away, sauce dripped down onto the plate and she made delicious moaning sounds as she chewed. I was staring open-mouthed, my sandwich forgotten. \n\nShe noticed me looking and smiled, a pickle stuck on her cheek, \"There is no dainty way of eating a GMCT sandwich, so don't expect civilized behavior from me, this is the way it's meant to be eaten.\" She took another sloppy bite. \n\nI grabbed my sandwich in response and took an enormous bite with similar results as hers. I had to keep myself from moaning as well. It was simply delicious. There was just enough bread to match the splash of different sauces. I detected sliced boiled potatoes between strips of ham and other stuff I couldn't identify and didn't know when she added them. All this capped with a flooding of melted cheese. This is what heaven must taste like. \n\n\"How is it?\" she inquired. \n\n\"This is officially the best sandwich I have ever had, \"I said between mouthfuls, \"we should open a restaurant, you should go onto Master-Chef, you should travel the world sharing this delicacy, people need to know about this!\" \n\n\"Easy there Tiger,\" she laughed, \"that's the cheese talking.\" \n\nI couldn't believe I was eating like a rabid dog in front of Melissa. Wait till Jenna gets word of this. She had painstakingly schooled me on the do's and don'ts of eating with a date and here I was violating each and every one of her rules, and the best part was, it wasn't even my idea. Never in my wildest dreams would I have imagined Melissa being this cool. That's the only word I could describe her with right now. Cool, with a bob of the head. \n\nWe finished eating and I sat back in the chair, content with life. Across the table Melissa gave a tiny burp and immediately her hand shot up to cover her mouth as she mumbled Sorry. \n\nI couldn't help laughing, \"That's the sign that the tank is full.\" \n\nShe patted her tummy, \"Oh yeah, I'm stuffed, nothing's going in me now.\" \n\nI gave her a naughty smile. \n\n\"Get your head out of the gutter Brian.\" \n\nWe cleared the table and I went and sat on the couch with one candle as she finished putting the remaining food in the fridge. Then she came over and sat right beside me, leaning forward to place her candle on the coffee table. She wrapped her legs under her, put her arms around mine and leaned into me, resting her head on my shoulder as we silently listened to the thrum of the rain on the windows. I was glad we could sit like this in silence and not be uncomfortable, each just enjoying the presence of the other. \n\n\"We dated for four years,\" she started quietly. \n\nEven though it was out of the blue I knew what she was talking about but chose to remain quiet. She would tell me at her own pace. \n\n\"He was a pilot, one of the big airlines, in a different city almost every day.\" \n\nShit. A pilot? Couldn't he have been a janitor or something? \n\n\"We were pretty serious, I knew he was going to pop the question any day,\" she was tracing patterns on my arm with her finger, \"I was head over heels into him, enough to look past his constant flirting with other women. I thought it was just harmless banter. He was tall, handsome, well spoken, and could charm the pants off a girl with just a smile, and he was mine. What more could a girl want?\" \n\nGreat, I had the love-child of George Clooney and Brad Pitt to live up to. \n\n\"I was going to move in with him but he was always away in some other country so I never got around to it,\" her tone was even and level, like she had accepted what had happened and moved on, but I knew it must have hurt a lot at some point in her past. \n\n\"He had a Carrera GT, a gift to himself. That's where I learnt how to drive a stick.\" \n\nI was going to hang myself. George Clooney and Brad Pitt had a threesome with Vin Diesel. Screw hanging, I was going to douse myself in petrol, light myself on fire and jump off a cliff into a freezing ocean below. I couldn't hold myself any longer, I had to say something. ",
        "\"Mel, if he was that good, how come he's an ex?\" \n\n\"When things seem too good to be true, they usually are Brian,\" she said as she measured her hand on mine, her palm flat against mine. The tips of her fingers reached just beyond the line of my third knuckle. \n\nThat hit a little too close to home. As I turned to look at her beautiful face in the soft glow of the candle-light I wondered whether she was too good to be true for me too. \n\n\"What happened?\" I asked, tucking away a strand of her unruly hair that had come loose. She smiled at that. \n\n\"Remember I told you he was a in a different city almost every night?\" \n\n\"Mm-hmm\" \n\n\"Well, he had a different girl in almost every city as well,\" she said quietly as she interlaced her fingers with mine. \n\n\"He cheated on you?\" I asked incredulously. \n\nShe just nodded, bringing our joined hands to her lips and tracing the outline of my knuckles with her lower lip. \n\n\"That must be the dumbest son of a bitch on the face of this planet.\" \n\nAnd I meant it. Who in their right mind would cheat on this amazing woman next to me? You'd have to be stark raving mad. Even Johnny Bravo wasn't that stupid. \n\n\"Smartest thing you've said all night,\" she said as she looked up at me smiling, \"But enough about that.\" \n\nShe got up onto her knees and swung one leg over mine and sat with my legs between hers, straddling my thighs. \"I don't think I've thanked you properly for the other night,\" she said, taking both my hands in hers and pinning them on the couch, on either side of my shoulders. \n\nThere was something nagging me and I guess she must have she picked up on it by the look on my face, \"What's wrong?\" \n\n\"Nothing,\" \n\n\"Brain, what did I say about you and lying?\" \n\n\"I'm not very good at it?\" \n\nShe kissed my nose, \"That's right. Now tell me what's wrong.\" She still had my hands pinned. \n\n\"It's just... your ex was like WOW!... and I'm like wow...\" I was finding it difficult to explain myself, \"how can I even begin to...\" \n\n\"No.\" she said forcefully as she brought our hands between us. \"Don't you dare. You don't have to compete with anyone Brian, least of all him. Do you understand?\" \n\nI nodded but it must have not been very convincing as she continued, \"Brain, do you know why I'm with you?\" she asked in a softer tone, \"Why I like you?\" \n\n\"Temporary Insanity?\" \n\n\"Stop it.\" she admonished. \"It's because when I'm with you I can be myself. I can joke around, I can snort when I laugh, I can eat like a pig and I know I'm not going to be judged.\" \n\nI was still looking doubtfully at her. \n\n\"Do you think I've ever eaten a GMCT in front of my ex? \n\nJudging by the line of questioning I think the answer should be no. I shook my head. \n\n\"That's right. Never. You know why? Because it's not proper and lady like and all that crap. I know it sounds ridiculous but I'm expected to act a certain way, be the perfect arm candy, and be sophisticated and suave all the time. Trust me, it gets old very fast.\" \n\nI had never looked at it that way before. I heard Spiderman in my head saying, With great beauty comes great responsibility. Or something like that. \n\n\"But when I'm with you, I can just be me. You let me be me, no pressure, and I can tell that you like me the way I am, the real me. You do like me that way, don't you?\" she asked sternly, pinning my arms again and leaning closer. \n\n\"I wouldn't have you any other way,\" I breathed, looking directly into her eyes even though I could barely see them in the dark. \n\nShe closed the distance between us and grazed her lips on mine from left to right. The feeling was exquisite. \n\n\"Are you going to stop thinking about all that now?\" she whispered in my right ear. \n\nDamn, she was a good negotiator. The doubts were already disappearing one by one. She descended again, this time dragging her lips from right to left. They felt like they were on fire. \n\n\"You didn't answer, \"she whispered in my left. \n\nAnswer what? What were we talking about? I was brain-dead. She dipped further and softly bit my lower lip and pulled back, taking my lip with her, her teeth dragging over it as it sprang back to its position. \n\n\"Any more doubts?\" she asked, looking at my lips before lifting her gaze to look me in the eye. \n\n\"Huh?\" I asked stupidly. \n\nShe smiled, her dimple pronounced even in the dim light, \"Perfect.\" She tilted her head to the side and planted her lips on mine, while shifting my hands from the couch and placing them on her back. My hands were on the curve of her lower back, just above her ass. I moved them up and down slightly relishing the way it swelled closer to her butt and narrowed as I travelled up. Her hands came to rest on my collar bones. \n\nShe deepened the kiss, opening her mouth slightly and tentatively exploring my lips with her tongue, imploring me to open up as well. I was just following her lead, rolling with the waves, going with the flow. My inexperience didn't allow me to do much more, but I could mimic, and mimic I did. Parting my lips as well, I granted her access and immediately she snaked her tongue forward, flicking my tongue with the tip of hers. Her hands travelled up to either side of my neck, the tips of her fingers lightly caressing the back. \n\nI thought I had died and gone to heaven. Her mouth was slightly sweet and the way she was playing with me, her tongue occasionally darting out and teasing me before retreating back into its cave had me growing hard in my pants. \n\nThe rain was now just a dull buzz in the background as I was itching to explore her body, my hands gripping her waist tightly. She broke the kiss momentarily to look up at me. \n\n\"You know there are other parts of me besides my waist right?\" she asked huskily. \n\n\"I... I didn't know if I should, maybe you didn't want...\" my fog-induced brain wasn't firing on all cylinders at the moment. \n\n\"Brian, I'm draped across your lap and playing tag with your tonsils, I don't think I can give you any more indication than that,\" she said nudging the tip of my nose with hers. \n\n\"So I can...?\" \n\n\"Yes, you can,\" she nodded and our lips met again. \n\nSlowly I dragged my hands lower than I had previously dared and slid the over her jean covered ass. I was rock hard just by that simple move. The way she was sitting had her ass jutting out and the jeans were pulled taut against it. I ran my hands all around her cheeks, squeezing and making her give a little moan into my mouth. \n\nThe little moan gave me the confidence to try something more, after all, it wasn't fair if she didn't enjoy what we were doing as well. Waiting for the right moment I snaked my tongue into her mouth as soon as she had pulled back and began exploring. Her mouth was even sweeter on the inside and I could tell I had surprised her by the way she jerked her head back a little before accepting the intrusion. \n\nI welcomed her tongue back, then sucked on it briefly, swirling my tongue around hers simultaneously. She moaned again, a little louder and longer this time, and the sensation travelled straight down to my groin. She had arched her back, pressing her soft breasts into my chest and her breathing was becoming heavier. \n\nI wasn't going to let up. As I kept up my onslaught, my hands travelled up and under her top, touching her silky smooth skin for the first time. It was warm and felt like velvet under my fingers. I traced the twin ridges that ran parallel on either side of her spine. The higher I went, the more she pressed herself against me, her crotch now directly sitting on mine. There was no doubt she could feel all of my excitement, even through my pants and her jeans. \n\nReaching her upper back I came across her bra and stopped there. From there I raked my fingernails back down slowly until I reached the top of her jeans. Through all this she had begun attacking my mouth with fevered intensity, her hands now in my hair, gripping it tightly in her fingers. I was painfully hard by now and afraid of losing control but I just couldn't get enough of her. \n\nFinally she broke off and rested her forehead on mine, her breathing slightly ragged, her breasts heaving against my chest. I loved the feel of them on me and thought about how they would feel when we were both out of our clothes. \n\n\"Someone's a quick learner,\" she whispered between breaths, her eyes still closed. \n\n\"I can't take all the credit,\" I managed to respond, breathing equally hard, \"I've got an amazing tutor.\" \n\nHer eyes opened and she looked into mine, as if searching for something. Then, unexpectedly she pivoted her hips down than back up so that her crotch slid along the entire length of my erection. \n\n\"Lisssssssssy!\" I hissed between clenched teeth, my hands grabbing her hips firmly. \n\n\"Hmmm...?\" she asked, not having moved at all except for her hips. \n\nShe did it again, more slowly, pausing at the base before dragging back up. \n\n\"Lissy don't...\" I managed to get out, pulling her hips towards me to try to prevent her from doing it again. \n\n\"Why not...?\" her voice was barely above a whisper. \n\n\"Because...\" I didn't want to admit it. \n\nHer hips went down again and I could feel the heat emanating from between her legs even through her jeans as she came back up. Despite my efforts to still her, she continued to torture me, her strokes getting slower and slower and my peak approaching closer and closer. The whole time she never took her eyes off mine and I couldn't stop looking into hers. She must have sensed I was about to blow because she paused at the bottom. I shut my eyes and my whole body was as tight as a drawn bow-string as I tried to concentrate on anything except what she was doing. \n\n\"Why...?\" she whispered again, her tongue snaking out to trace my upper lip. \n\nIf she came back up I was done for. I didn't know if she knew what she was making me go through but deep inside I had the feeling she knew exactly what she was doing. This was like payback for getting her all hot and bothered. \n\n\"Because... Because I'll make a mess if you do,\" I croaked. I was so going to get her back for this. I was going to pay her back a thousand fold, I was going to tease her until she begged me for mercy. \n\nShe smiled and I knew she had no intention of stopping, this had been her goal all along. She was going to finish me off, in all senses of the word. \n\nAs she began her upward stroke I tensed up for the inevitable, feeling the rush building up, ready to shoot, when, from nowhere, there was a blinding flash of light. We both started and shut our eyes, covering them with our palms. The power was back. After so long in the dim light, it was like someone had put a floodlight right into our eyes. \n\nI simultaneously thanked and cursed whoever restored the power. Thanks... asshole. \n\nWe blinked as we adjusted to the light, slowly lowering our arms to look at each other. It was like waking up from a dream. Did all that really happen? I was all confused inside. On one hand I was glad that I didn't make a complete mess in my pants and on the other hand... \n\n\"Well that was a complete mood killer,\" she said, leaning back and putting her hands behind her on my knees. \n\n\"It saved me from a sticky situation,\" I looked at her accusingly. \n\n\"You got lucky, next time-\" \n\n\"Next time you're the one going to be begging,\" I interrupted her. \n\n\"Really? Those are big words. Wanna bet on it?\" \n\n\"Absolutely.\" I wasn't going to lose this time, she was going to scream for mercy by the time I was done with her. \n\nAn evil smile spread across her face, \"Whoever loses has to be the winner's slave for a day.\" \n\n\"You better start practicing then.\" \n\nShe laughed and got off me, landing on the couch next to me. I was already missing her closeness, she was becoming addictive. I glanced over at the clock and was surprised to find it was already midnight and the rain seemed to have stopped outside. \n\n\"Shit Mel, I gotta run, I've got an early day tomorrow,\" I said getting up and adjusting my pants. I was still at half mast and sporting a small tent in my trousers that I tried to hide. \n\n\"Yeah me too, I didn't realize the time because of the dark,\" she got up with me and walked me to the door, \"I've got to get to the hospital by six in the morning.\" \n\n\"You start that early?\" \n\n\"Not really, my duty usually starts at eight but I've got some pending work need to finish so I thought I would go early and get done with it before we leave on Friday.\" \n\nThere was still a light drizzle outside and it was quite chilly, the wind blowing in as soon as I opened the door. I stepped out as Melissa paused on the doorstep. \n\n\"Thanks for dinner and everything else...\" I said turning back to her. \n\nShe grabbed my shirt and pulled me back and gave me another toe curling kiss, running a light finger over my pants. Little Brian was already giving an encore. \n\n\"Next time you won't be so lucky,\" she said as she let me go. \n\n\"We'll see about that,\" I said as I walked to the car, the tiny droplets doing nothing to calm the heat inside me. \n\nI paused after opening the door, forearms leaning on the top edge \"Wait, so that means I won't be so lucky because I'll get lucky?\" \n\n\"Go home Brian.\" \n\n\"Think about it, I'm going to get lucky, but that makes me unlucky...\" \n\n\"Brian?\" \n\n\"Yeah?\" \n\nShe pointed at the road, \"Go!\" \n\n\"Aye aye!\" I saluted her and got into the car, already a little soaked from the drizzle. \n\nShe waved and closed the door as I backed out and pulled away, turning on the heater in the car. The roads were treacherous when wet and I didn't trust the car I was given so I drove along slowly, not wanting any unexpected surprises at this time of the night. The slow pace and the intermittent swipe of the wipers let me drift over my thoughts. \n\nI was really falling for Melissa, and falling hard. It was an exhilarating feeling but terrifying at the same time. Her words came back to haunt me. When they are too good to be true, they usually are. Was that what this was? Was I just fooling myself with the fantasy that she could actually fall for someone like me? \n\nShe had given me no reason to doubt her, and tonight was out of this world, but that did nothing to quell my misdirected fears. It was quickly getting to a point where it would be unbearable to lose her. I was becoming attached and that scared me. It was difficult for me to get attached to someone but once I did, it was even harder for me to let go, which is why I hardly ever let anyone get close. Melissa was an oddity in that sense, she had managed to worm her way under my skin in record time and with almost no effort at all. She walked past my defenses as if she was walking through tall grass, running her hands over the long stalks while she was at it. The fact that I hadn't cracked a joke in my head for more than five minutes was a cause for concern in itself. \n\nAs I stopped and waited at a red-light I watched as tiny droplets of rain gathered on the windscreen before the wiper slid across and wiped them all away. When I was with Melissa she was my wiper, clearing all my little doubts and misgivings that gathered in my head like the raindrops in a single stroke. Every time they gathered up, she would wipe the slate clean. \n\nPulling away from the light I decided to just see where things would go. It wasn't like I could do anything about it anyway, there was no way I was going to stop seeing Melissa, it wasn't even an option, downright unthinkable. I couldn't even picture my life without her in it now. \n\nMy thoughts reverted back to her straddling me, her warm soft body pressed up on me, and a big smile broke out on my face as I looked down at the memento of our time fooling around together. She had left me with quite an uncomfortable situation that I was going to have to deal with once I got home. One thing was for sure, my right hand was going to get some exercise tonight before I went to bed. \n\nMake that a lot of exercise."
    ],
    "authorname": "Agera_R",
    "tags": [
        "barbeque",
        "pool",
        "cooking",
        "power outage",
        "kissing",
        "sandwich",
        "simple",
        "romance"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/birthday-girl-ch-05"
}