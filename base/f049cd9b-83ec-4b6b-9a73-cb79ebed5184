{
    "title": "Nude Noir Ch. 04",
    "pages": [
        "This is an addition to my \"Nude Noir\" series. I think this story can stand on its own, however, the first three chapters of \"Nude Noir\" will provide background and context. My apology, but this chapter runs somewhat longer than my usual story.\n\nThis story is a work of fiction. Some real places and institutions are mentioned or implied, but they are used fictitiously here. Insofar as the author knows, no real person affiliated with any of those places or institutions has done anything akin to what is described in this story. Any similarities between any character in this story and any real person are coincidental and unintended. I encourage comments on this story, both favorable and unfavorable. Thank you for reading.\n\n_______________________________________________________________\n\nMy rent-free lease on Unit 7 at The Cove far outlived my relationship with Allison Nance. The age difference and her parents' implacable opposition to our relationship were too much to overcome. I saw it coming and understood. Given my history, how else could the relationship end? I helped Ali pack her car. She gave me one last hug and got on the road to Gainesville to start law school.\n\nWith Ali was gone, I felt completely empty. I had felt almost as empty when I'd been fired from the Bureau several years ago. Then, at least, I could rationalize that I'd been screwed for doing the right thing. I lost Ali because of things inherent in me. There was no one else to blame.\n\nPaul and Lilith were as supportive as they could be. They got me a referral client. Ron and Jeanette Kester had made a lot of money in real estate development; although my sense was that wasn't difficult in Florida. They had been converted to the nude lifestyle during vacations in the Caribbean and had finally bought a resort near Orlando. Lake Zephyr was large, clean, and very family oriented. They were, however, experiencing pilfering from their bar and from their onsite shop. Some carefully placed miniature cameras identified the culprits who were promptly let go. The \"shrinkage\" problem disappeared.\n\nRon and Jeanette were roughly twenty-five years older than me, but we hit it off. They owned a small barrier island near Ft. Myers which they and friends frequently used as a nude beach in nice weather. Not long after we solved the pilfering problem, they invited me to join them one Saturday. I met Ron and Jeanette at a marina on Sanibel Island. A woman about my age was with them, their daughter Julia. Jeanette explained that Julia liked to join her parents and their friends for a naked day by the seas occasionally. Her husband, a surgeon in Ft. Myers, wasn't interested. I was invited to be a purely platonic partner for Julia.\n\nI liked Julia Fairchild. She had probably once been very attractive, but the passage of time had added flesh around her middle, hips, and thighs. She still had a lovely face, and she was intelligent, witty, and quick to laugh. Despite the difference of opinion about social nudity, Julia was happily married. She was, nonetheless, good company for a day at the beach. I guess she enjoyed my company too because I started getting regular invitations to the island if Julia was coming.\n\nIt was August, the start of Ali's second year of law school in my mental calendar, when I saw a news item about a shooting on a barrier island in Lee County. There wasn't much information, but it caught my attention because that type of violence in the Gulf Coast islands was very rare. I momentarily wondered whether it wasn't Ron and Jeanette's island but quickly dismissed that possibility.\n\nMy cell phone rang on Monday. A very distressed Julia Fairchild asked if I could come to her house and meet with her right away. I dug out my sport coat, which almost still fit, and got in the car. Over two hours later, I pulled into a concrete driveway of a large, new house on Captiva Island. Apparently, Dr. Fairchild was very successful.\n\nDr. Fairchild was there. I had not met him before. He was a tall, broad-shouldered man with a soft calm voice. I was thinking the voice might be helpful because Julia had obviously been crying. She seemed to be holding it together, barely.\n\nThe three of us sat in an expensively furnished room that looked out on the Gulf. Dr. Fairchild began, \"Mr. Beck, did you see a news item yesterday about a shooting on an island here?\" I nodded affirmatively. \"Unfortunately, that was the island owned by Julia's parents.\"\n\nJulia broke in, \"they killed Mom and Dad!\" I was very sorry to hear that. I liked the Kesters. I'd also hoped they might be a source of more work or, at least, referrals.\n\nDr. Fairchild resumed, \"you know that Mr. and Mrs. Kester and their friends use the island recreationally. I believe you've been there. They and some of their friends were there Saturday when, the police tell us, a boat came up on the Gulf side and started shooting with an automatic or semi-automatic rifle.\"\n\n\"They had asked me to go with them,\" Julia said, \"but I had a meeting of the hospital auxiliary board that morning.\"\n\n\"Thank god for that,\" Dr. Fairchild said with some feeling. \"To make a terrible story as short as possible,\" he continued, \"the Kesters were killed along with six of their friends. One couple survived. They're both in Lee County Memorial, but they are, I understand, the primary source of the information the police have.\"\n\nJulia got herself more under control. \"Ian,\" she said, \"I want you to investigate this. The police are thinking drugs and, I think, don't care that much about a bunch of nudists anyway. I think this is something different. Dad has been telling me for about six weeks that someone had been badgering him to sell them the resort and the island. Dad always said no. He and Mom don't need the money and they love both places, loved, I'm sorry.\" She paused. \"I think there is a connection.\"\n\n\"You've told this to the police, of course?\" I asked. Julia nodded.\n\n\"Detective Shermer of the Lee County Sheriff's Office told us he thinks it is just coincidence,\" Dr. Fairchild said.\n\nI asked for details. What I got was that, roughly six weeks earlier, a lawyer in Orlando had contacted the Kesters saying he had an undisclosed client who wanted to buy their resort and island. The initial price offered was low. The Kesters had said no. The lawyer persisted, raising the price significantly in each call. The Kesters continued to say no. They also checked out the lawyer, a solo practitioner with a storefront office who usually handled criminal matters. That raised the Kesters' discomfort. Julia told me the lawyer had last called her father a few days before the shooting. He offered roughly double what the resort and island were worth. Julia said her father had told her that, when he rejected that offer, the lawyer had said his client \"will not take this well.\"\n\nI talked with Lee County Detective Brad Shermer. The Fairchilds' perception was accurate. \"I understand the daughter is distraught,\" he said, \"and we all prefer conspiracy theories to thinking loved ones were just at the wrong place at the wrong time. We're pretty confident this was part of a drug deal gone bad and the shooters just made a mistake about their targets.\"\n\n\"If I may,\" I asked, \"why do you think that? Why would the shooter think a bunch of naked people were his target?\"\n\n\"We have our reasons,\" Detective Shermer said, ending the conversation.\n\nPeople I talked to around Orlando told me that lawyer who had been pestering Ron Kester was a borderline sleaze. I finally called him pretending to have some land outside Orlando to sell, saying I had heard he had a client who was interested. That got me nowhere.\n\nWith Julia's permission, I went through her parents' papers, e-mail, and texts. I found the contacts from the lawyer and negative responses from the Kesters, but nothing identifying the would-be buyer, much less tying him, her, or it to the killings. A follow up call to Detective Schermer produced a rather icy statement that his office was satisfied the killer had left the country. I was nowhere.\n\nI gave Julia my entirely negative report. I agreed that the police view seemed too easy, but I had nothing to contradict it except very vague suspicion. I didn't send a bill but, a couple weeks later, I received a check from Charles Fairchild for $ 5,000. I deposited it.\n\nFor about a month, I didn't do much besides miss Ali. In early October, Julia called again. Julia had inherited the resort, the island, and some other of her parents' property. The same lawyer who had pestered her father had just called her with an offer for the resort and the island of about double what they were worth. \"It's a lot of money and Charles is dead set against owning a 'nuddie resort.' Unless you have something new to tell me, I guess they're going to get what they killed my parents for.\" I didn't have anything new to tell her.\n\nAround the time I thought Ali was finishing her second year of law school, my friend at the Tampa PD, Beth Potter, called. Apart from the occasional lunch, I hadn't seen Beth in the last year. I knew she'd been promoted and was now deputy commander of the Major Crimes division. That status, I assumed, made it too risky to be seen at The Cove anymore.\n\n\"Could you come Downtown for a meeting at 11:00 tomorrow?\" Beth asked.\n\n\"What about?\" I asked.\n\n\"It is complicated,\" Beth replied. \"Best to wait until tomorrow when you can hear the whole story.\"\n\n\"Well, I think I had....\" I started to evade.\n\n\"Ian, we're not arresting you,\" Beth said sharply. Her tone softened a little, \"as my friend, please come. Oh, would you also dress nice?\"\n\nOnce Beth made it a matter of friendship, I had no choice but to go. Her request to dress nice would be tougher. I found a pair of khakis that only had one pocket ripped. My one white shirt had scorches from when I'd last tried to iron it. My sport coat fit well enough to cover those. After an hour, I found my tie.\n\nI showed my photo ID and waited about ten minutes, before I was escorted to an upper floor conference room at Tampa PD headquarters the next morning. Beth gave me a friendly hug. I was the only male in the room. I recognized one of the other women: Sally Stancik, SAC of the FBI's Tampa field office. Sally was Beth's very close friend. The two of them had visited The Cove a few times while Ali and I were together. For two women my age or older, they both looked good naked.\n\nThe third woman was introduced as Special Agent Laura Kelly. She made a strong impression. Copper-colored hair framed an intelligent-looking face that had green eyes; a small, upturned nose; prominent cheekbones; and a strong jaw below, at that moment, a broad smile. Her business suit precluded any conclusions about her body, but she projected the confidence of a very attractive woman.\n\nAfter the introductions, Sally Stancik said, \"Ian, I know you are familiar, or used to be familiar, with the Lake Zephyr resort near Orlando. You knew the former owners and tried to investigate their murders for their daughter.\"\n\n\"Yes,\" I said, \"and came up with zip.\"\n\n\"Don't feel too bad,\" Sally replied, \"no arrests have been made for the murders on that island that day. I assume you also know that their daughter, Julia Fairchild, sold the resort and the island.\"\n\n\"I knew she was going to,\" I answered. \"Who'd she sell to?\"\n\nSally smiled. \"A Nevada company called 'Bare Enterprises, LLC. We haven't gotten any farther than that. I'm going to let Agent Kelly pick up the story.\"\n\n\"Lake Zephyr,\" Laura Kelly said, \"is now 'Club Sensual.' It is still a nude resort, but adults only with, we think, a tolerance if not encouragement of overt sexual behavior. It's private property. They can do what they please. The entire staff of Lake Zephyr was let go when the resort changed hands. However, the state's records show Club Sensual pays worker's comp and unemployment comp premiums for about 30% more staff than Lake Zephyr had. The staff live onsite but local merchants report that they all seem foreign. Reports are that they speak English, but with a 'Russian' accent.\"\n\nSally jumped back in. \"Club Sensual and Bare Enterprises do not have any foreign employees holding lawful visas. ICE did an inspection. They questioned one woman, a thirty-two-year-old named Katya Thompson, who got citizenship by marrying a US citizen named Chad Thompson two years ago. My impression is that the ICE agents weren't very comfortable in a nude resort so that was satisfactory to them.\"\n\n\"We were not interested until Miami-Dade found a badly beaten up hooker a couple of months ago,\" Laura said. \"The woman survived. She told Miami-Dade she had been recruited in Almaty, Kazakhstan with the promise of a good-paying job at a resort in the US. She said she was flown to a very warm country, Venezuela we think, was put on a large boat with some other girls. They were on the boat for several days before being offloaded onto on a smaller boat off the coast of what she later realized was Florida. The small boat took the girls to a small island. The girls' things were taken from them. They were given jeans, tee shirts, gym shoes, and Florida driver's licenses. Then, they were taken from the island on a short boat trip to the mainland. On the mainland, they were loaded into a van and, a few hours later, unloaded, at Club Sensual.\"\n\n\"How did she get from Orange County down to Dade?\" I asked.\n\n\"I haven't spoken to her directly,\" Laura said. \"Miami-Dade says she said that the manager at Club Sensual told her she wasn't working out after a few weeks. She worked a lot in the nude, but she has a birthmark on her ass. The manager told her customers had complained but he had found her another job where customers wouldn't care. The next day, she was driven to Miami and turned over to a pimp. Of course, Club Sensual denies knowing anything about the girl. Their lawyer told us they'd be happy to furnish their employment records as soon as we get a warrant.\" After a pause, Laura added, \"Lee County tells us that the Kesters' island now has no trespassing signs posted all over and that armed men have been seen on the island at times.\"\n\n\"We think the Kesters' resort and island are being used to bring foreign women into the US illegally to be sex workers,\" Sally said. \"ICE isn't interested because of the nudist resort angle. That was good thinking on someone's part, practical immunity. We're not interested in the immigration violations per se, but we are very interested if women are being brought in illegally and forced to be sex workers.\"\n\n\"This sounds plausible to me,\" I said. \"How do I merit a briefing on this from the Tampa SAC?\"\n\nSally Stancik smiled. \"I think this is where I should leave,\" she said. She and Beth hugged, and she left the room.\n\nBeth glanced at her watch and said, \"It's lunch time. Let's get something to eat and talk about this outside the office.\" Instead of our usual lunch spot, we followed Beth several blocks to an Italian restaurant. Beth told the host she wanted her \"meeting table.\" He led us to a four top in a small alcove.\n\nOnce we'd ordered and the server left, Laura said, \"SAC Stancik has given me responsibility and authority to investigate. I think we need to start by learning a lot more about what goes on at Club Sensual, but we need to do that surreptitiously.\"\n\n\"That means someone will have to pose as a customer, which means they'll stick out like a sore thumb if they don't take everything off,\" I said.\n\n\"I know,\" Laura sighed. \"That's why I can't ask anyone else to do it.\"\n\nBeth chimed in, \"A single woman alone will constantly be harassed by men. When Laura goes in, she needs to pose as a couple with a man.\"\n\nI'd not noticed any wedding ring on Laura's finger. \"Boyfriend?\" I asked.\n\n\"Sucky timing,\" Laura replied. \"I just broke up with someone.\" She paused before adding, \"It can't be a guy from the Bureau. If I do that, the story, no doubt embellished, will be on the Bureau grapevine all the way to D.C. Goodbye career. Maybe goodbye to Sally's career too.\"\n\n\"Ian,\" Beth said, \"you did something similar with Ali. That's how you met her. Ali told me more than once that she didn't think she could have done it, go undercover at a nude resort, with anyone but you. When Laura went to Sally with her problem, Sally immediately thought of you. She called me and I agreed you are perfect. You're trained as an agent, but you are completely outside the Bureau.\"\n\n\"I know what happened to you,\" Laura added. \"You got screwed for being an honorable man. If you'd kept your mouth shut and just gone along, you'd probably still be in the Bureau today. If I must pretend to be part of a nude couple, I think you're the kind of man I want to pretend with.\"\n\nThis was flattering, but the idea sounded terrible to me. I was still very wounded from the break-up with Ali. Going naked with a very attractive woman in a pretend relationship would be salt on the wound.\n\nBeth knew enough of my history that I think she knew exactly what I was thinking. \"You can do it Ian,\" Beth said. \"Please do it as a favor for Sally and me.\"\n\n\"And me,\" Laura added.\n\nBeth had been a friend for several years. She was the only significant person in law enforcement community who had stood by me after the FBI fired me. Ali and I had spent some very pleasant hours naked with Beth and Sally. If I owed anyone anything, I owed Beth Potter. My sense of self-interest also told me that doing a favor for a senior Tampa PD officer and the Tampa SAC could pay dividends in the future.\n\nLaura closed the deal. I looked into her eyes, and she looked straight back into mine. There was a message in her look, but I was too old and beaten up to understand it. The little voice in my head told me I'd regret it if I didn't play this out and see where it went. Of course, my little voice specializes in bad advice.\n\n\"Ok,\" I said, \"what do we do first?\"\n\nWith more affection than I'd ever heard in her voice before, Beth said, \"thank you Ian.\"\n\nLaura reached out, put her hand over mine on the table, and said, \"thank you very much.\" After a pause and another direct look, Laura added, \"I'll report orally to the Sally. Starting Thursday, I'm officially on leave. That won't seem odd, I've got over a month of vacation coming. Do you want to get us reservations for Friday through Sunday at Club Sensual, just to scope the place out?\" Laura asked. Then she corrected herself, \"No, I should make the reservations.\"\n\nI had lunch with Beth and Laura on Tuesday. Laura called on Wednesday. \"Club Sensual isn't cheap, but I got us a room for Friday and Saturday,\" Laura said. I focused on the singular \"a\" room. I'd be in close quarters with Laura for an entire weekend and, for most of that time, we probably wouldn't be wearing any clothes. We would pretend to be partners. There would be touching, laughs, and hints of intimacy. This was not going to be easy.\n\n\"Given traffic,\" Laura continued, \"I think we ought to allow three hours to get there. I'll pick you up at 2:00 p.m. Friday afternoon up there in Pasco County. What's the address?\" I told her. \"You live in a nude resort? I suppose you'll be able to teach me the etiquette, then. See you Friday. Oh, one more thing. Can you e-mail me a digital picture? Your face is all I need.\"\n\nMy rational brain knew I'd been recruited into this bizarre task only because Beth Potter thought I could be professional. It also knew I was at least a dozen years older than Laura Kelly and about as attractive to her as a garbage can. Despite the insights from my rational brain, I was getting excited about spending a weekend naked with an attractive woman. I needed to reel my irrational brain in.\n\nSince I didn't own that many clothes, what I needed all fit in one bag. I opted not to take a gun on the theory it would blow my cover, although it sometimes seemed like everyone in Florida carried a gun then. I spent Friday morning going over our security procedures with The Cove staff who would fill in for me for the weekend. Paul and Lilith weren't excited about my being gone for a weekend, The Cove's busiest time, but they understood that I had to comply with Beth's request.",
        "The receptionist called me exactly at 2:00 p.m. to say there was a woman there to see me. I went into reception carrying my bag. I think I probably stopped, speechless, for a moment. I've been calling Laura Kelly \"very attractive.\" I realized at The Cove's front desk that afternoon that \"very attractive\" was a gross understatement. Laura wore a yellow sundress that went perfectly with her copper hair. The hem was short enough to show an enticing sample of her firm thighs and the top was tight enough to show a chest that was, perhaps, a little larger than exactly proportional to her body. To top it off, the expression on her gorgeous face made it seem like she was genuinely happy to see me.\n\nI told Trisha, who worked the front desk weekday afternoons, that I'd be gone until Sunday. That earned me a wink. I gathered that Trisha also thought Laura was impressive.\n\nAs I put my bag in the trunk of Laura's Subaru, she handed me a small, laminated card. \"I'm assuming we'll have to show photo ID,\" she said. She had handed me what appeared to be a Florida driver's license with my picture on it. It showed my name as Ian Kelly. \"That's my address,\" Laura said. \"We're supposed to be married so it would look odd if our ID had different addresses.\"\n\nLaura reached into her purse and pulled out two small jewelry boxes. She handed one to me. Inside was a simple gold band. \"Wedding rings,\" Laura said as she opened the other box and slipped a ring with a single diamond onto her finger. \"These belonged to my parents, so I'd really like to have them back,\" she said. \"I didn't know how else to come up with wedding rings on short notice. Put it on.\" To my considerable surprise, the gold band slipped onto the third finger of my left hand as if it had been made for me. Laura smiled.\n\nAs Laura pulled onto US 41, I asked, \"Your parents are gone?\"\n\n\"Yes,\" Laura said matter-of-factly. I let the subject drop. After Laura turned onto the state highway leading to I-75, which would take us to I-4, she said, with a slight giggle, \"Sally Stancik tells me she and Beth Potter used to visit you and your girlfriend at The Cove. I gather the girlfriend is gone?\"\n\n\"Yeah, she's gone,\" I replied. \"I met her working on a case when she was still in college. We eventually realized we couldn't overcome the age difference, and her family in Sarasota hated the fact that she hooked up with an older man and lived in a nude resort.\" Not wanting to talk more about Ali, I fired back at Laura, \"you said Tuesday you just broke up with your boyfriend.\"\n\n\"He flies helicopters for the Coast Guard,\" Laura said. \"I met him doing an aerial surveillance. Very masculine but not overbearing about it. We had an incompatibility. He's all about rules, procedures, and protocols. I'm more into coloring outside the lines. He got promoted and transferred. He now commands the pilots at a station in Alaska. I wasn't moving to Alaska, at least not for him.\"\n\n\"How does someone who likes to color outside the lines end up in the Bureau?\" I asked.\n\n\"Sort of family tradition,\" Laura answered. \"Dad was a cop in Chicago.\"\n\n\"Really?\" I said. \"I started on Chicago PD.\"\n\n\"Mike Kelly,\" Laura said. That name rang a bell. It took me a second or two to remember. It was after I had joined the Bureau. I still had friends on the Chicago force. They had told me about Captain Mike Kelly. He had been appointed commander of a troubled division, officers only turning in some seized drugs and selling the rest, letting hookers off for a free blow job, the like. Kelly was assigned to clean things up. That irritated longer-timers in the division. There was a riot after an officer shot an unarmed young man. Kelly was commanding on scene when someone started shooting. There was thought the shooter was an officer because Kelly was hit precisely in a seam in his body armor. It was eventually established that it was just a \"lucky\" shot by a civilian that took Mike Kelly's life.\n\nAs the story came back to me, I said, \"Oh. I'm sorry.\"\n\n\"You weren't on the force when it happened were you?\" Laura asked.\n\n\"No, I was already at the Bureau. Chicago friends told me about it,\" I replied.\n\n\"So was I,\" Laura said. \"First assignment out in Denver. It was really tough on Mom because an IED had gotten my brother Jack in Iraq a few months before.\"\n\n\"I'm very sorry,\" I said.\n\n\"Shit happens,\" Laura said. \"It taught me you have to enjoy whatever time you get with the people you care about because it can end at any moment.\"\n\nLaura made the turn onto I-4, and we drove in silence for a few minutes. With a more upbeat tone, Laura broke the silence. \"How do you see the weekend?\" she asked.\n\n\"Get an understanding of what goes on at Club Sensual,\" I replied. \"See if we can figure out who's in charge. See if we can learn anything useful from the staff. The goal as I see it is to get an idea of where to go next. Those are your problems. You're the investigator. I'm just along as cover.\"\n\n\"No,\" Laura said. \"Beth Potter told me about your Olmos case. You know what you're doing. I need all the help I can get.\"\n\n\"Ok,\" I said, \"but you're in charge.\"\n\nLaura laughed. \"You like the woman on top?\"\n\n\"Less work for me and the view can be nice,\" I shot back.\n\n\"Changing the subject,\" Laura said, \"I had a call from Club Sensual this morning. A very pleasant woman with an accent said that, since we're first-time guests, they wanted to welcome us and tell us a few of the ground rules.\"\n\n\"And what are the ground rules?\" I asked.\n\n\"Clothing is optional everywhere except the pool, hot tubs, and sauna where nudity is required,\" Laura answered. \"Nudity is encouraged everywhere else, but most people wear 'erotic costuming' in the night club.\"\n\n\"I don't own any 'erotic costuming'\" I grumbled.\n\nLaura laughed again. \"I brought a sheer teddy with crotchless panties,\" she said. \"There's a shop. Maybe we can find you something there. There is a special section they call Sensual Elite for a thousand a night. Nudity is mandatory there and overt sexual behavior is to be expected.\"\n\n\"You didn't sign us up for that did you?\" I asked.\n\nLaura laughed again. I was getting to really like her laugh. \"Already sold out for this weekend,\" she replied.\n\nTraffic between Tampa Bay and Orlando was thick on a Friday afternoon. Laura rarely got up to the speed limit. We had a lot of time to talk. By the time we pulled up to the covered entrance beneath a huge neon sign that said \"SENSUAL\" we knew a lot about each other.\n\nThe reception area of Club Sensual was a lot of chrome trim and neon lights. It didn't give me a favorable first impression. However, the young woman who checked us in was attractive and pleasant enough. After the girl had run Laura's credit card, she handed us two keycards. She pointed to a locked door. \"That leads to the indoor pool,\" she said in accented English. \"Your room is on the second floor of the building on the other side of the pool. Have a sensual stay.\"\n\nThe pool was huge. Several hot tubs were set in the massive pool deck. There was a bar to our right beyond one end of the pool. Lounge chairs were everywhere, about two-thirds of them taken. Virtually everyone I saw was naked.\n\nAs we started walking along one edge of the pool deck to our room, we were confronted by a large man, a bodybuilder type. He was nude with a tattoo of an eagle covering most of his chest. After he walked past us, I heard Laura softly say, \"oh God.\"\n\nThe building containing our room was only two stories, but it had an elevator. Our room was about halfway along the open passageway the overlooked the pool. The room was nicer than I'd expected. I noticed there was only one bed. At the far end of the room was a balcony with a couple of chairs. The balcony overlooked an outdoor pool that was also teaming with naked people.\n\nAfter inspecting the room, we both set our bags down. We were stalling. Laura finally said, \"we need to get our clothes off.\" I slid off my sandals. I looked at Laura. She gave a nervous smile. I turned away from her as I pulled my shirt off, undid my slacks and pushed them and my boxers to the floor. I heard Laura taking her dress off. After a long moment, Laura said, \"that is a nasty scar on your ass.\" I'd been shot in the ass during the Olmos case. \"Ian,\" Laura said, \"we're going to be naked together all weekend. You might as well start looking at me.\" I turned around to face Laura.\n\nI had thought Ali Nance was the most beautiful woman alive. The error in that thinking was obvious the instant I saw Laura Kelly in the nude. Laura had looked very beautiful in her sundress. Laura looked exponentially more beautiful in only her bare skin. Her breasts were just a bit large for her frame, but they looked firm and were perfectly shaped. Her nipples, hard at the moment, pointed up. Below her breasts, her stomach was flat. Her legs were toned but not overly muscular. Between her thighs was a closely cut patch of red hair. Without even thinking, I blurted \"Jesus, you are stunning!\"\n\nLaura smiled. \"Thank you,\" she said. \"Sally told me you are a very attractive man with no clothes on. She was right, although she didn't mention one of your more prominent features.\" Laura gestured at my dick which was getting a bit hard. \"That is flattering,\" Laura added. This was going to be a very difficult weekend.\n\n\"Let's try the indoor pool,\" Laura said. \"I don't want to risk sunburn my first hours here.\" We slipped on flips, gabbed towels and our keycards, and went out the door. As the door to our room closed, Laura said, \"I can't believe that I just walked out of a hotel room without a stitch on.\"\n\n\"You ok?\" I asked.\n\n\"Yes,\" Laura replied. \"It's exciting. I'm already beginning to understand why you live in a nude resort.\" Laura started walking away. I stood transfixed by her gorgeous, tight ass. Laura stopped after she'd gone a few feet, turned, and said, \"I know my ass is one of my best features but we're not here just so you can look at it.\" All of Laura's features were \"best features.\"\n\nThe only unoccupied lounge chairs were on the far side of the pool from the elevator. We walked single file between occupied chairs placed at all angles. The crowd wasn't as diverse as I'd expected. It was mostly white and forties or younger. There were some people carrying excess weight but no one truly obese. Apart from Laura, I saw no women whom I'd call beautiful. Another thing that set Laura apart was the lack of any tattoos. At a rough guess, ninety percent of the people around the pool, men and women, had noticeable tattoos.\n\nAs we spread our towels on two lounge chairs, Laura softly said, \"I guess I should have gotten a tramp stamp.\"\n\n\"No,\" I replied. \"Your beauty doesn't need any enhancement.\" Again, I'd spoken without thinking. Laura looked at me for a moment, then gave me a warm smile.\n\nNot long after we sat down, the first truly attractive woman I'd seen other than Laura walked up. She was holding a trey in one hand and wearing a basically transparent bra and panties. In accented English, she said, \"Hello. I am Svetlana. You've just arrived, I think. Welcome to Club Sensual. May I get you something to drink?\" We'd agreed that we would have to go very lightly on the alcohol. Laura ordered a glass of white wine. I asked for mineral water. \"You are health conscious?\" Svetlana asked rhetorically. \"It works for you.\" To Laura, Svetlana said, \"you have an attractive partner.\"\n\n\"I know, and he's my husband,\" Laura replied.\n\nSvetlana smiled and said, jokingly, \"too bad.\" She turned and walked away. Her ass wasn't in Laura's league, no one's was, but it was very nice.\n\n\"Svetlana's a pretty woman,\" Laura said. \"And she seems to like you.\"\n\n\"Alas,\" I said, \"I have to stay faithful to my wife.\"\n\n\"I'm not sure they worry too much about that here,\" Laura retorted.\n\nWhen Svetlana came back, I said to her, \"This is our first time here. What is there to do?\"\n\n\"Well,\" she said, \"there is another pool outside, and tennis courts. There is a gym. Most people go to the night club at night. You can go nude, but most people dress up a little bit. Not to cover up you understand, but to show off.\" Svetlana handed us our drinks. \"It is full this weekend,\" she said, \"but, if you come back, you might think about the Sensual Elite section of the club. It is locked away from the main club. There are ten suites around a pool and hot tub. No clothes are allowed there, but everything else is allowed. You pick a member of the staff and she or he is your host and servant for your stay. They must do anything you wish, except, of course, something that might injure them. It is quite expensive but people who have used it think it is worth it.\"\n\nAfter Laura and I finished our drinks, she suggested we check out the club's shop before it closed. The shop had an interesting range of merchandise, ranging from vibrators to strap on dildos to sunscreen and soft drinks. There was also an extensive selection of \"clothing.\" Laura found something she wanted me to wear to the night club. It is difficult to describe. Basically, it was a thong that was open in front to allow my dick and balls to protrude. However, there was a small rigid piece on the front that my dick and balls would rest on, pushing them out and up a little. \"Not that you need to make that part of your body more prominent,\" Laura said, \"but I think you'd look great in this.\"\n\nLaura allowed me to pick out something for her. I choose a dark green body stocking. The green would set off her hair nicely. The body stocking had no crotch or seat, leaving Laura's ass and pubes bare, and had small openings for her nipples.\n\nThe club's restaurant was open from six until ten. The night club opened at ten. We went to the restaurant around eight. I'd say that about half of the diners were, like us, completely nude. The rest wore items designed to expose the body parts normally covered in public. Like she'd been at the pool, Laura was, far and away, the most attractive woman in the restaurant, a fact that did not go unnoticed by the other diners.\n\nWhen we sat down, Laura said, \"I've gotten used to guys undressing me with their eyes. I guess I'm saving them the trouble tonight.\"\n\nTo my surprise, the same woman who had served us at the pool, Svetlana, was our server for dinner. I commented that she was working hard. Svetlana responded, \"yes. We are short staff. They tell us some new girls are coming later next week.\" That was interesting information.\n\nThe food was so-so. I'm not sure Laura noticed though. She was enjoying, I think, her first experience dining in a restaurant in the nude. As Svetlana brought us after dinner coffee, she said, \"I am impressed by you. Most people do not come to the restaurant completely nude for their first meal here.\"\n\n\"We decided to jump in with both feet,\" Laura responded.\n\n\"As handsome as the two of you are,\" Svetlana replied, \"it is a shame that you ever have to wear clothes. Please come to the night club. I am working behind the bar tonight.\"\n\nLaura wriggled into her body stocking, in which she looked incredibly sexy, I put on my \"thong,\" and we went to the night club at ten. We took seats at the bar. As promised, Svetlana was behind the bar. She had changed outfits. She was now topless with a bright yellow thong. Although Laura outshone everyone, Svetlana was a lovely, and healthy-looking, woman.\n\nThe night club was not very busy. Svetlana told us it didn't get busy until around midnight. We used the opportunity to try to get some information. Laura nonchalantly asked Svetlana where she was from and how she came to be working in a club in central Florida.\n\n\"I'm not supposed to tell you,\" Svetlana said, \"but I know Mr. Holloway, the manager, is at a party in the Sensual Elite section. I'm from Moscow. My father and mother helped lead a group opposed to Putin. They are in prison in Siberia. I have a university degree, but the government kept me from getting any kind of job. My parents told me to get out of Russia, but the government would not let me leave.\"\n\n\"What subject is your degree in?\" I asked.\n\n\"American and British literature,\" Svetlana answered. That explained her good English.\n\n\"How did you get here if the government wouldn't let you leave Russia?\" Laura asked.\n\n\"I learned about a company that placed people, mainly women, in the hospitality industry in America,\" Svetlana answered. \"I knew it was corrupt, but the owner has connections to Putin, I think. It was my only way out. I took the train from Moscow to Odessa. There were other girls there from Uzbekistan, Turkmenistan, Kazakhstan, and Ukraine as well as Russia. We were flown to Venezuela. From there, we were put on a freight ship which came to the west coast of Florida. Somewhere around Ft. Myers, I think, they put us in a small boat and took us to a small island. We stayed there a night and a day. They took everything from us and gave us new clothes and Florida identification cards. The next night, they took us across the bay, put us in a small bus, and drove us here.\"\n\n\"How long have you been at Club Sensual?\" I asked.\n\n\"Almost a year,\" Svetlana said. \"I am fortunate because I am better educated than most of the other girls and speak better English. I communicate better with the guests, so they give me larger tips. The Club takes the tips. I make them money, so I stay. Many girls are sent to Miami.\"\n\nSvetlana said \"sent to Miami\" as if that was tantamount to execution. \"What do they do in Miami?\" I asked.\n\n\"I cannot tell you and you do not want to know,\" Svetlana answered. \"I do not want to be sent to Miami. However, I know I'm not in your country legally. I'm trusting you not to tell anyone. If your immigration police get me, I will be sent back to Russia.\"\n\n\"Do you like working here?\" Laura asked.\n\n\"It is not that bad,\" Svetlana said. \"We have a place to live, and they feed us. Most of the guests are nice to us. I'm not as beautiful are you are, but I know I have a nice body. I don't have any inhibitions about letting people see me.\" Svetlana's expression changed. \"I see Karl coming,\" she said. \"Please act like we've not been speaking.\"\n\nSvetlana moved down the bar as a muscular young man wearing a full thong entered the night club. He went behind the bar and checked the computer screen on which Svetlana recorded the drinks she served. He said something abrupt to Svetlana in a language I didn't recognize and left. Svetlana glanced at us but stayed away except to refill our drinks for the rest of the evening.\n\nPeople started coming into the night club in large numbers just after 11:00, and a DJ started playing music at a volume that made conversation impossible. We weren't going to get any more from Svetlana that night anyway. Laura leaned to my ear and shouted, \"Come on husband, let's dance.\"\n\nI'm not much of a dancer but the small dance floor was so crowded that you couldn't do much beyond twist a little from side to side. We were constantly being bumped by other people. Laura looked so delicious I suspect guys were bumping into her on purpose.\n\nAfter several upbeat songs, the DJ played a slow song. Most of the people left the dance floor. Laura extended her arm and said, \"Let's be romantic husband.\" I took her arm and put my other arm around her back. Laura reached behind herself and moved my hand from the small of her back to her bare ass. She put a hand on my bare ass and pulled me into her. It was exquisite slow dancing with Laura dressed as we were. Her nipples rubbed against my chest. My dick rested on the small platform built into my thong and my dickhead rubbed against Laura's close-cropped red bush. At the end of the song, Laura kissed me on the lips.\n\nThe night club had gone from slightly chilly to oppressively hot. We left just before midnight. As we walked out, Svetlana gave us a very slight nod of her head. Walking back to the room in her crotchless, seatless body stocking, Laura looked incredibly beautiful and erotic. I had the frightening realization that, after less than a day with her, I was falling for her. That was the first time in a long time that I wanted to think about Ali.",
        "We shared the bed in our room, although I made a point of staying on the edge. In the morning, we went to breakfast nude. The restaurant was not very busy and poor Svetlana was the only server. I raised my eyebrows as she came to take our order. She softly said, \"I slept only four hours. Thank god the new girls will be here Thursday.\"\n\nSvetlana had given us useful information. We thought it best to stay away from her for the remainder of our stay. Laura and I spent several hours at the outside pool on Saturday. The highlight, for me, was rubbing sunscreen on Laura's back. We hot tubbed and used a sauna. Finally, we bought some soft drinks at the shop and went back to our balcony. There we could talk in safety.\n\nSaturday evening had Svetlana serving us another bland meal. I gave her a large cash tip, saying \"to keep you out of Miami.\" Svetlana thanked us. She did not work the night club that night, which was ok. That night, I got a couple of slow dances with Laura in her wonderful body stocking. She slept in my arms that night. No, there was no sex.\n\nWe had gotten good information. Svetlana was smart and knew much of what went on at Club Sensual. On the drive back to Tampa Sunday, I was thinking that we might well get more information from her if we went back to the \"Sensual Elite\" part of the club and asked for Svetlana as our hostess. That would inevitably mean sex with Laura, and probably Svetlana. I was certainly not opposed to that. I had developed a strong desire for Laura over the weekend. I also couldn't suggest it.\n\nWe were about halfway back to the junction between I-4 and I-75 when Laura, whom I hoped was not a mind reader, said, \"we need to get Svetlana with us in the Sensual Elite section. I think that's a thousand a night. I'll have to get Sally to approve the money.\"\n\n\"If we do that, Svetlana is going to expect us to have sex,\" I said. \"We may even be expected to have sex in front of the other people staying there. Remember Svetlana said Friday that the manager was at a party in that section. We don't know what happens at those parties.\"\n\n\"Does the idea of sex with me offend you?\" Laura asked.\n\n\"Of course not,\" I said. \"You're the most desirable woman I've ever met, but we need to be clear about what we're getting into.\"\n\n\"I think we're talking about you getting into me,\" Laura said with a laugh. \"I'm ok with that. You're really pretty hot.\" That was a new one. Even Ali hadn't called me \"hot.\" \"The real problem,\" Laura continued, \"is that we can't just go over there and being doing it for the first time. Anyone who sees us would know our claim to be married is BS. I doubt they'd risk doing anything terrible to us, but would we put Svetlana at risk? What do you think Ian?\"\n\nI thought I was getting too aroused listening to her. I changed the topic. \"Svetlana said new girls arrive next Thursday. That means they'll probably land on Kester's island Tuesday night or Wednesday night. We could just bust the landing, but that blows any chance of tying those girls to Club Sensual. We need to see the girls landing on the island and see the same girls working at the club.\"\n\n\"What are you thinking Ian?\" Laura asked.\n\n\"Have you ever used a sea kayak?\" I asked.\n\n\"Yes,\" Laura answered. \"You're right. It would be perfect for close surveillance of the island.\"\n\n\"I think I know where to find one we can use,\" I said. \"I'd also like to look at the island in daylight. I've been there before but I don't know what the current owners have done to it.\" I pulled out my phone and called Julia Fairchild. The upshot of that conversation was that Charles would be happy to take us out on his boat that afternoon if it would help get the people who killed her parents. I finished the call and asked Laura, \"do you mind driving down to Captiva today?\"\n\nWe stopped to get gas on I-75 south of Sarasota. Laura pulled a bikini out of her bag and used the gas station restroom to put it on. She came out wearing the bikini top and her shorts over the bottoms. She looked wonderful. She also looked wonderful when she took her shorts off on Charles Fairchild's boat. Charles was looking at her so often, I half feared he'd run us aground. However, we got to the island without incident. There were \"NO TRESPASSING\" signs posted around the high tide line, but I didn't see any evidence of sensors or motion detectors. Vegetation which the Kesters would have pulled down had been allowed to grow. A storm had caused the passage between the island and the next one to the south to silt up, so it was too shallow for Charles's boat. A kayak would do fine, however.\n\nPeople easily forget Florida is a long state, and Orlando to Captiva was a lot of driving. It was getting dark by the time Charles docked his boat at a marina on the bay side of Captiva Island. We stopped at the Fairchilds' house long enough for me to ask Julia to call around and see if someone on Captiva, Sanibel, or Ft. Myers would rent me a black sea kayak. It was after seven by the time we left the Fairchilds. It would be late before Laura dropped me at The Cove. Then she had to drive home to her condo.\n\nI drove Laura's Subaru back up I-75. We stopped for a quick dinner along the way and reached The Cove around ten thirty. Sometime during the day, Laura and I had tacitly agreed we were more than just working together. When we pulled into The Cove, I said, \"If you're officially on leave, you could stay here tonight.\"\n\nLaura laughed yet again (I really love that laugh). \"Like I said on the drive from Orlando,\" she said, \"if we're going to do Sensual Elite, we need to practice fucking each other first. I haven't got anything better to do tonight, do you?\"\n\n\"I usually watch something on Smithsonian channel Sunday night,\" I teased, \"but I suppose I could sacrifice it this once.\" Laura lightly punched my shoulder. I waved my security card inside at the sensor that controlled the vehicle gate to The Cove. I drove Laura's car to the resident's parking lot at the back of the property.\n\nAs Laura got out, she asked, \"Do I need to take my clothes off right now?\" The tone of her voice said that was exactly what she wanted to do.\n\n\"It would help,\" I said. \"Just toss them in your bag and bring it in.\"\n\n\"I'll just leave them in the car,\" she replied as she opened the trunk and tossed her bikini top in it. I didn't think it was fair to make Laura walk nude to my unit by herself, so I started stripping off too. When we were both naked, Laura stepped to me. We put our arms around each other and kissed. We kissed for a long time. At some point, Laura started stroking my balls. I moved a hand between her legs and started fingering her. When I got hard, Laura broke our kiss, stepped back, and said, \"I've wanted to see you at full staff. It looks nice, but I'd like to see it in better light.\"\n\nI grabbed my wallet and my keys. Laura slammed her trunk lid shut with her and my clothes inside. I can't say I'd never walked around The Cove with a hard on before, but I was glad we didn't run into anyone between the parking lot and my unit.\n\nInside my unit, I turned the lights on. Laura looked at my erect dick and then at my face. \"You're beautiful,\" she said.\n\n\"So are you,\" I replied. I led Laura upstairs to the bedroom. Inside the door, we stopped. Laura started stroking my shaft and I put a finger inside her. In less than a minute, Laura said, \"I want you in me, now!\" She went to the bed, lay on her back, and spread her legs. As I got between her legs, I thought quickly about disease. I'd trust Laura on that one as she was trusting me. I also thought about birth control. I guessed she had birth control but, I thought, if I get her pregnant, I'll marry her and live happily ever after. With that thought in mind, I was sort of hoping Laura did get pregnant as my dick slid into her.\n\nSex with a new partner is, more than anything else, about trial and error. You try different things until you find something that pleases her. It is, by far, the most enjoyable trial and error process I know.\n\nThe process was especially enjoyable with Laura. Although we stayed in traditional missionary position, I changed my pace, my force, my depth, and my angle. She shifted her hips and wiggled around underneath me. Eventually, we found a combination that worked for us both. At the same time, I kissed her lips, kissed her neck, sucked an earlobe, and sucked on her nipples looking for the secondary stimulation she liked best that night. One of the best parts was that neither of us was trying to show off for the other. We were both genuinely trying to please the other. Another good thing was that it quickly became clear we were sharing passion based in mutual affection. I cannot explain how we reached that point so quickly, but I wasn't complaining. Perhaps, with both of us recently out of relationships, we were just vulnerable.\n\nI think Laura and I made love for a long time that first time. I know I loved every second of it. Laura was not loud when she came. Her hips bucked faster, her breathing sped up more, she squeezed me very tight, then exhaled sharply and said, \"God yes!\" I felt myself about to come and started to back out. Laura locked her legs around me and said, \"no way Mister. You're coming in me.\" I didn't argue. Instead, I had the most powerful orgasm I could remember.\n\nAfter we made love, Laura and I showered together, learning more about each other's bodies. I went back downstairs to lock the door. When I came back up, Laura was already in bed. I got in next to her and we fell asleep holding each other.\n\nIt was still dark when Laura woke me up. She softly said, \"I need more.\" We got each other aroused again. She gently pushed me onto my back and mounted me. Looking up at her, I knew she was the best and most beautiful woman alive. Her face became even more beautiful as she came again. I wasn't sure what I was capable of after the way I had come earlier, but I shot another very satisfying load inside her. Laura rolled off me to my side. We kissed for a long time. Echoing my thought from earlier, Laura softly said, \"I'm almost sorry I'm on the pill. Doing it with you makes me think I'd like to have your child.\" Even from Ali, that would have been scary. From Laura, it was flattering.\n\nThe sun was up when we awoke the second time. I got back on top this time and we made love again for a very long time. It was too tender to call it \"fucking.\" We smiled at each other as we came almost at the same time. When we got out of bed after our third session in ten hours, Laura said, \"let's not shower yet. I like the smell of your sex on me and mine on you.\" I liked how Laura thought.\n\nI scrounged what little I had that was still edible to make some breakfast while Laura called in a report to Sally Stancik. I heard Laura explain that we'd do surveillance on the island to try to observe the new girls landing. I was impressed by the confidence with which Laura explained the need for us to go back to Club Sensual and spend the thousands of dollars for Sensual Elite. I was surprised at how readily Sally approved that.\n\nI made some calls. Laura got our bags out of her car. We both dressed and drove to a store I knew in Tampa that specialized in military type gear. There we bought two sets of sheer black spandex-like pants, tops, gloves, and hoods: and some black cammo. I knew the owner and he agreed to \"loan\" me a pair of very expensive night vision goggles. I'd be in deep shit if I didn't bring them back in working order.\n\nBack at The Cove, we tried on our camouflage gear to make sure it blacked out everything except our faces. Laura was incredibly sexy wearing the sheer, form-fitting outfit with nothing on underneath. We made love again on the floor of my study. Later, Laura called Club Sensual. When she ended the call, she reported \"the earliest we can get Sensual Elite is weekend after next, but Svetlana will be out hostess.\" Laura stayed that night.\n\nTuesday morning, we stopped at Laura's condo to get her fresh clothes. We made a stop at the FBI office where Laura got an infrared camera that would take usable pictures in the dark without flash. Then we got on the road south again. In Captiva, Julia had found us a black, two seat sea kayak. We declined her offer of the Fairchilds' guest bedroom, saying that we'd be keeping very weird hours. We found a room at a reasonably nice place just on the mainland side of the causeway.\n\nAbout 8:00 p.m., we drove back onto Sanibel and up to the Captiva marina where we'd stowed the kayak. It would have looked too strange to be driving in our black gear through the toll booth, so we'd worn ordinary clothes. The marina seemed inactive at that time of a weeknight, so we changed beside the car. We launched the kayak with Laura in front. Between us, in a watertight pouch inside a supposedly watertight compartment were the goggles, camera, two pistols, and Laura's FBI ID in case we had official trouble.\n\nWe had thought the girls would come Tuesday night because Svetlana and the hooker in Miami said they arrived one night and left the next. However, Tuesday night was a bust. We gave up about four a.m. We stowed the kayak at the marina and changed out of our black gear. We were both tired, and really didn't care. Instead of getting fully dressed, we just wore tee shirts and drove back to the hotel bare from the waists down.\n\nAt the hotel, we pulled the curtains shut and slept in each other's arms for about eleven hours. I knew a relatively inexpensive, and very good, seafood place on Sanibel not far from the causeway. We ate breakfast/lunch/dinner there and played tourist on Sanibel for a few hours until it was time to get in the kayak again.\n\nWednesday night was better. We beached the kayak on the next island south of the Kester's island. About 2:00 a.m., I heard a speedboat engine in the north. After a moment or two, I picked up a shape going out to sea without lights. Laura and I got into the kayak. When we heard the engine coming back, we paddled to the bay side of the Kester's island. That offered a better view of most of the island. It was good we found a place in some mangroves because another boat soon approached from the bay side. A hand-held searchlight scanned the small island then flashed three times in the direction of the Gulf.\n\nThe speedboat put seven girls ashore and left. With the night goggles, I was certain I could identify them again. Laura was also getting pictures. We watched as the girls stripped down and the men from the second boat took their old clothes and handed out new ones. As the girls were herded onto this second boat, I got a good look at the man who seemed to be in charge. He was a dead ringer for Lee County Detective Brad Schermer. We waited until the second boat was out of sight with its load of new employees for Club Sensual before paddling back to the marina. We'd checked out of the hotel. It was still dark. We decided to do the tee shirts only thing again all the way up to Tampa.\n\nThursday a week later, Laura and I were again at the reception desk for Club Sensual. This time Svetlana came out to meet us. She was wearing a tank top and running shorts, like a Hooter's girl but in different colors. Svetlana led us through a different door, across a large lawn, and through a door in a wall. We entered a room with what looked like the old airport lockers along the walls.\n\nSvetlana turned to us, smiled, and said, \"I'm so glad you came back and that you asked me to join you in Sensual Elite. It is good that we got along well when you were here before because we will be together the entire weekend.\" She giggled. \"We will know all there is to know about each other. Now, this is where we must take off all our clothes. If you need medications, you may take those with you; but everything else goes in the locker. They are timed. You are leaving Sunday, so our locker can be opened after 9:00 a.m. Sunday. Until then, none of us may access our clothes, even in an emergency.\"\n\nIt was, of course, exciting to be stripping naked with two very attractive women. It was more exciting to know that we would have no access to clothes for the next two and a half days. Laura and I followed Svetlana's lovely bare ass through another door which locked behind us. Svetlana faced turned to us again. \"You are free,\" she said. \"The only rule here in Sensual Elite is pleasure. I am here to help you have pleasure. I will do anything you ask. Now, let me show you to our suite.\" Svetlana looked almost as good in the nude as Laura.\n\nThe suite was a quantum leap from the room we'd had in the main part of the club. Someone had really thrown money at this. I did notice no television, radio, computers, or phone. Svetlana explained, \"here you will not need outside influences. We will entertain each other. If you wish, you may join in entertainment with our other Sensual Elite guests; but that is purely optional. We will wait a little while here to make sure all the other guests have arrived. Then, I will take you out to meet them.\"\n\nAll ten Sensual Elite rooms were booked. Svetlana told us that was true most weekends. Thirty naked people met by the pool. Except for two women, they were all male-female couples with a female hostess. The women had an exceptionally well-built man assigned to them. The hostesses were all relatively young, in their twenties I guessed, and at least pretty. Laura whispered in my ear \"we chose the best-looking hostess.\" Laura was right. Svetlana was clearly the second most attractive woman by the pool.\n\nThe guests were a mixed bag. The two women together were ok. Two couples were older and carried a lot of extra flesh. Another couple were obviously both bodybuilders. A fourth couple, younger, had obviously already been drinking. I didn't see anyone I wanted to get close to apart from Laura and Svetlana.\n\nAnother hostess went to a metal door in the wall between two rooms. She punched a code into a keypad and opened the door. \"The bar is now open,\" she announced, \"it will remain open all weekend. Help yourselves. If you want something that is not here, let your host or hostess know and it will be delivered to your room.\"\n\nLaura and I had decided on the drive up that we'd need to drink a little more this trip to establish our credibility as wealthy pleasure-seekers. Laura had a glass of white wine. Svetlana made me a gin and tonic. After she handed me my drink, I asked, \"are you allowed to drink?\"\n\n\"That is up to you,\" Svetlana answered. \"I may drink if you give permission.\"\n\n\"By all means,\" I said, \"get yourself whatever you want.\" Svetlana made herself a vodka and tonic. The heavy-drinking couple were already getting obnoxious so the three of us went back to our suite.\n\nIn the suite, Svetlana said, \"You have been looking at each other with desire since we undressed. Please remember, in Sensual Elite you may do whatever you wish whenever and wherever you wish. If you prefer that I not see you, I will step out.\"\n\nI looked at Laura. It was true that we were horny for each other. However, I read in her eyes exactly what I was thinking: this was an opportunity to build our relationship with Svetlana. \"You are correct,\" Laura said, \"that Ian and I want each other very much, right now.\" Laura moved close to me and took my dick in her hand. \"However, unless you do not wish to, we'd like you to stay while we make love. We have not made love with someone else watching us before. It will be exciting.\"\n\n\"You are such a physically beautiful couple,\" Svetlana replied, \"that I will enjoy watching you give pleasure to each other.\" Laura and I embraced and kissed. She was stroking my dick and I was fingering her. As we were ready to start intercourse, Svetlana softly said, \"in here\" and gently pushed us into another room which had a something like a grossly overgrown ottoman footstool in it. Laura lay down on the furniture. I got above her and slid into her.",
        "Laura and I had started our sexual relationship less than two weeks earlier, but we'd made love many times in that period. Sex with Laura was always, by a substantial margin, the most exciting and pleasurable thing I had ever done. It was a new level of thrill, however, doing it with another lovely, intelligent woman in the room, naked, watching us. Still, we followed the pattern set during our first coupling: we were slow and caring of each other.\n\nI have no idea how long we went before Laura and I came. We were getting very good at synchronizing ourselves to come at the same moment. When we finished, we kissed, stood up, and saw Svetlana in a chair with her legs spread, fingering herself. She stopped and stood up. \"You go very slowly,\" she said. \"I had my orgasm many minutes ago.\" She gestured at my dick. \"May I\" she asked Laura. Laura nodded. Svetlana used her index finger to wipe a bit of semen from my dickhead. She put her finger in her mouth and sucked. \"Sex between two people who love each other is the best thing humans can do. I can see you love each other. I am going to enjoy this weekend.\"\n\nDinner, lobsters, was delivered through a chamber built into an outside wall of the room. We ate and shared an excellent white wine. Svetlana put our used dishes and silver back into the wall chamber. The food in Sensual Elite was much better than the main club.\n\nSvetlana said, \"I expect the drinkers are already passed out. Let's use the hot tub.\" It was a pleasant evening with a clear sky above us. No one else was out, much less in the tub. Svetlana turned it on, and we got in. Initially, Svetlana sat a little bit apart from us. \"Move close Svetlana,\" Laura said, \"we like you. Let's sandwich Ian between us.\" Svetlana got very close to me on one side and Laura got very close on the other. I was touching a lot of beautiful bare skin. \"Feel free to handle Ian if you wish,\" Laura said. Svetlana cupped her hand around my balls. I spread my thighs as much as I could to give her access.\n\nSvetlana kept her hand on my balls when one of the two-woman couple came out. She was, I guessed, in her forties; slender, but with drooping breasts. My sense was a housewife who didn't get enough exercise. The tub was a tub, not a spa; you could see through the water. The woman saw Svetlana's hand holding my balls and Laura's hand holding my dick. I had a hand between each woman's legs. \"That looks nice,\" the newcomer said. \"Maggie's in with Sven. He made me sore.\"\n\nLaura, Svetlana, and I kept fondling each other while we talked with the other woman, a divorcee from Atlanta. She had come to Club Sensual with an old sorority sister. \"I've already had more passion here than my ex gave me in fifteen years of marriage. It's justice that he's paying for this.\"\n\nThe three of us went back to the room when the other woman's sorority sister came out with Sven. Inside, Svetlana said, \"Laura, I have a very great favor to ask. I have not had a man inside me in many months, contrary to what you may think about someone who works here. Ian is the first man I've met here whom I want inside me. Would it be acceptable to you if Ian has intercourse with me?\"\n\nI had no idea what Laura would say. \"Of course, I'm fine with that. I don't usually share Ian, but you are becoming a special friend.\"\n\nSvetlana looked at me. \"Ian, am I attractive enough to you that you will make love to me?\"\n\n\"You are extremely attractive, Svetlana,\" I said, \"I'd be honored.\"\n\nIf you are a little open-minded,\" Svetlana said, \"I think I can make this pleasurable for all three of us.\" She took us into the bedroom. We formed a sort of huddle with both women fondling my dick and balls while I fingered both of them. When we were all three aroused, Svetlana said, \"Laura, lie on your back on the bed. I'm going to do something that will shock you, but you will enjoy it.\" Laura did as she was told. Svetlana got on the bed between Laura's legs, bent over, thrust her ass in the air, and started licking Laura's clit. After a few licks, Svetlana said, \"Ian please enter me from behind.\" I got on the bed on my knees behind Svetlana and pushed into her. The situation was truly surreal. I was fucking an illegal Russian \u00e9migr\u00e9 while she went down on my FBI agent lover.\n\nSvetlana was more aggressive than Laura. She rammed herself on me as hard as I thrust into her. At the same time, she was bringing sounds out of Laura I hadn't heard before. Suddenly, Laura yelled, \"Oh my god. I can't take this. Oh... my... GOD!\" That was, far and away, the loudest orgasm Laura had enjoyed in my presence.'\n\nAfter Laura came, Svetlana said, \"I'm close Ian,\" and fucked me harder and faster. I went from basically enjoying watching her eat Laura to shooting in very little time. Just after I shot my load in her, Svetlana came. She and I collapsed on top of Laura. We rolled off to let Laura breath. After a while, Laura said, \"My god, that was intense. Ian, you would not believe how far her tongue went inside me.\"\n\nSvetlana was smiling. \"I enjoyed that very much. Thank you both. The way you two make love is very caring. There are times, however, when you really want explosive pleasure. If you are agreeable, I think I can show you ways to do that.\"\n\n\"Yes, please,\" Laura said.\n\nSvetlana's lessons started the next morning. She had us fuck with me standing, holding Laura, who had her legs wrapped around me. Later, she had me fuck Laura from behind, using her hand to hold my dick in the position she wanted it in. Laura and I had not done oral sex. Svetlana knelt with Laura in front of me and showed Laura how to give an amazing blow job. Svetlana got Laura on her back again and, with both our faces between Laura's legs, she showed me how to use my tongue and lips in ways I hadn't known that gave Laura an orgasm from which she said she almost passed out.\n\nLate Friday afternoon, Svetlana was outside talking with another hostess who was having a problem. Laura and I were sitting together. \"Ian,\" Laura said, \"I love you, but Svetlana is so sexy, I want to take her home for both of us.\" I agreed.\n\nFriday night, the Sensual Elite guests met the general manager, Fred Holloway, and his much younger partner Lydia. Consistent with the rules, they too were naked. Neither did anything for me. Holloway was a tall, balding man, visibly out of shape, with a small dick. Lydia was at least twenty years younger, thin almost to the point of anorexia, with a very hard face. We all had drinks (I noticed the heavy-drinking couple from the night before and their hostess were not there), ate from a buffet, and got to watch Lydia suck Holloway off. It wasn't sexy.\n\nBack in our suite, I got to practice what Svetlana had taught me about oral sex on Svetlana while Laura practiced what Svetlana had taught her on me. Svetlana and I both came. Then, I used Svetlana's techniques on Laura. I was very pleased at how she came. For the second night in a row, I slept between two beautiful, very sexy women.\n\nAfter a light breakfast Saturday morning, Svetlana said, \"take the sunscreen. I want to show you the part of Sensual Elite you have not seen yet.\" Outside the room, Svetlana opened a metal cabinet mounted on the wall and pulled out three folded beach towels. At the bar, Laura and I got beer and Svetlana took a plastic cup of white wine. She led us to a door in the wall almost directly across the compound from the door through which we had entered Thursday. Svetlana entered another code and the door opened.\n\nWe walked onto a manicured lawn about the size of four tennis courts. The lawn was surrounded by the same high pinkish wall that enclosed the rest of Sensual Elite, but it was completely open to the sky. We spread our towels on the lawn. I had the privilege of putting sunscreen all over Svetlana and then all over Laura. I was meticulous, leaving no skin uncovered. After I finished with the women, they put sunscreen on me. Laura took my right side, Svetlana my left. They met at my dick.\n\nDespite the sexy start, Svetlana became serious. \"People only rarely come out here,\" she said. \"The staff use it when we want to speak openly. We fear management may have listen to what is said in the rooms. We are not supposed to tell guests our full names, but I want you to know. My name is Svetlana Rukova. When I was on the little island on the west coast, they gave me a Florida driver's license saying my name is Sarah Rink. I have never heard of a Sarah Rink.\"\n\nLaura casually asked, \"who owns Club Sensual?\"\n\nSvetlana gave her a sharp look. \"I do not know who you really are or why you are here, but I think you can help. I will trust you. Also, I like you both, very much. I do not have certain knowledge who owns the Club. Mr. Holloway is the manager. Lydia is supposedly his assistant, but she does nothing apart from giving Holloway sex. They live here. Their boss is a Russian named Bukov. He does not live here. I do not know where he lives. He comes here about once a month. He decides which women are sent to Miami.\"\n\n\"You know what the women do in Miami?\" Laura asked.\n\n\"Of course, I know,\" Svetlana said in a hard voice. \"They are prostitutes. I do not want to be sent to Miami. You will not believe me, but I do not have sex with the guests. Most of the girls here do. It is expected. I did a few times when I first got here to show I was willing, but most of our guests are not desirable. I realized Lydia does nothing, so I began keeping track of inventory in the restaurant and the bar, telling Mr. Holloway what we needed to order when. I do my own job and much of Lydia's. I am useful to Mr. Holloway so, when I say I do not wish to go to Sensual Elite with guests, he does not force me. He also keeps me from being sent to Miami.\"\n\n\"Are you paid anything extra?\" I ask.\n\n\"To be candid,\" Svetlana said, \"I am not certain I am paid at all. Holloway gives all of us a statement each month, but it is on Club Sensual paper, not from a bank. We do have cards to get money from the machines. A few girls are taken into the city each week to have their hair done or feet or nails or to see the doctor. Karl or one of the other young men always goes along, but we can go where we wish within limits. There is a bookstore. I get money from the machine and buy books.\"\n\nLaura asked the obvious question, \"if you don't have sex with the guests, why are you at Sensual Elite with us?\"\n\nSvetlana smiled. \"When they told me Laura and Ian had asked for me, I remembered you. You were here only a couple of weeks ago. I thought you were attractive and sexy people. I like you both. I thought I had to show I'm still willing to entertain guests and thought I would enjoy entertaining you. I have. Also, I have a sense you can help me.\"\n\n\"I think we will,\" I said.\n\nLaura apparently thought we had pressed Svetlana enough because she changed the subject. \"Ian,\" she asked, \"have you ever made love outdoors?\"\n\n\"Yes,\" I answered.\n\n\"So have I, back in Russia,\" Svetlana added.\n\n\"I never have,\" Laura said. \"I feel deprived.\"\n\nWe were the only people on the lawn. I slid next to Laura and said, \"I think it is time to fix that.\" I began fondling Laura's nipples. She gently ran her hand down my chest and abdomen to my dick. She took my balls in her soft hand.\n\nI was aware of Svetlana sitting a couple of feet away. I looked in Laura's eyes and rolled my own in Svetlana's direction. Laura took my hint. \"Svetlana, please join us,\" she said. Svetlana slid next to us. Laura and I each began sucking one of her nipples. Laura took my shaft in her hand. Svetlana began fingering Laura, and I began massaging Svetlana's clit.\n\nThe easiest way to have a three-way on the lawn was for one woman to ride me while the other sat on my face. When I lay back, Laura straddled me and lowered herself down onto my erection. Svetlana squatted over my face, with her ass in my hands for support. I ate Svetlana while Laura made love to me. It was delightful. We all came within seconds of each other. Doing it in the bright Florida sunshine seemed wholesome.\n\nAs we lay together on the towels, Laura said, \"that was wonderful.\"\n\n\"There is a buffet for Sensual Elite guests by the pool tonight,\" Svetlana said. \"In fact, I will have to help the other hostesses set it up this afternoon. I am told that it is a tradition that the guests have sex openly around the pool after the buffet.\"\n\n\"We should do what we just did again tonight,\" Laura said enthusiastically.\n\n\"That is what I was thinking,\" Svetlana said.\n\nWe lay together in the sun for a couple more hours, talking, kissing, and lightly playing with each other. Finally, Svetlana stood and said, \"I must go to work. You may stay here. If you want another drink or want to go to the suite, the code for the door is 9797197.\"\n\nLaura and I stayed on the lawn to talk in private. \"I'd like to get Svetlana out of here,\" I said. \"Do we have enough?\"\n\n\"If we see girls we saw landed on the island working here, yes, I think we'll have enough for a warrant,\" Laura replied.\n\n\"Instead of the private entrance she brought us through Thursday,\" I said, \"let's ask Svetlana to take us out tomorrow through the indoor pool. As short-staffed as they were a couple weeks ago, I'll bet at least some of the new girls will be working.\"\n\n\"If not,\" Laura said, \"we can always stay in the main part of the Club tomorrow night.\"\n\nThings went to plan, sort of. The Saturday night buffet was excellent. After the food, we watched the two bodybuilders fuck. That was interesting. One of the older couples \"took the stage\" after the bodybuilders and fucked for the rest of us to watch. We decided to go next. We repeated what we'd done on the lawn that afternoon, except Laura and Svetlana switched roles. Svetlana rode me while I ate Laura. I didn't think it was disloyal to Laura to be glad to have intercourse with Svetlana one last time.\n\nSunday morning did not go to plan. We gathered our things from the locker at the entrance to Sensual Elite and walked naked past the main bar and indoor pool. We did not see any of the girls who had recently been brought in. Laura dressed and went to the front desk to get us a room for the night in the main part of the club.\n\nI took Svetlana aside. Hoping we weren't being watched, I took five hundred dollars bills, folded over, wrote my cell number in the margin of one, and handed them to Svetlana. \"I want you to have this, not the Club. My phone number is on one of the bills. Can you make calls out?\"\n\n\"When Amy is working the front desk, she will let us use the phone,\" Svetlana answered.\n\n\"Ok,\" I said, \"call me as soon as you know when you will be going into the city again.\"\n\n\"Thank you,\" Svetlana said. \"I am off after a weekend in Sensual Elite. I should go to the living quarters. It would be unusual for me to stay in the Club when I'm not on duty.\" She hid the money among the clothes in her hand, kissed me on a cheek, and walked away naked. She had a beautiful ass.\n\nLaura and I lucked out that afternoon when we went to the outdoor pool. Three of the girls we'd seen landed on Kester's island were working as servers. They all looked to be in their early twenties, two were blonde and one had dark hair and a darker complexion. They were all reasonably attractive.\n\nWe had what we needed but thought it would be suspicious for us to book an extra night and then leave. Laura and I stayed Sunday night, enduring another mediocre meal in the main restaurant served by a timid and inept young woman whom we'd also seen coming in on the island. Laura and I made love in one of the hot tubs by the indoor pool after dinner. Being in coitus while strangers walked and talked a few feet away was surprisingly arousing for both of us.\n\nThings moved very quickly after that. Affidavits from Laura and I that we had seen women working at Club Sensual whom we'd also seen surreptitiously landed on Kester's island and that we had reason to believe staff from the Club were assigned to work as prostitutes in Miami got a search warrant for the entire Club. Svetlana called on Wednesday to say they were taking her into Orlando the next afternoon. Laura lined up agents from Tampa and Orlando, along with ICE agents (to reduce inter-agency tensions) to execute the search warrant. She also lined up an SUV and two male agents from Tampa to help us snatch Svetlana as she left the beauty salon.\n\nI grabbed Svetlana and hustled her into the SUV as she walked out of an Orlando beauty salon. The guard assigned to her, not Karl, didn't know how to react. He pulled a gun and fired a few shots just as I entered the back seat behind Svetlana. One bullet grazed my ass in exactly the place I'd been shot before. That earned me a few hours bare-assed in the ED getting stitches.\n\nThe raid on Club Sensual went worked. Holloway and Lydia were taken into custody for \"resisting.\" The girls working there were taken by ICE. Agents seized computers. An external hard drive in a safe in Holloway's office was the mother lode. It had records of who had been sent to Miami, the pimps they were assigned to, and how much they earned. There was also e-mail between Holloway and \"MK\" about girls coming into the country. There was e-mail to an address liked to Schermer scheduling pick-ups of girls at Kester's island. There was also old e-mail from to Holloway from \"MK\" about killing Ron and Jeanette Kester to make it possible to buy Lake Zephyr. I have no idea why Holloway saved that.\n\nThe Feds charged Holloway and Lydia with conspiracy to evade immigration laws and conspiracy to bring women into the US for immoral purposes. Dade and Orange Counties charged Holloway with conspiracy to promote prostitution. Lee County was looking at conspiracy to commit murder.\n\nWhat the raid did not uncover was anything about Bukov. Svetlana had helped FBI artists make a sketch that had been circulated to law enforcement throughout Florida. About a week after the raid, police at Miami International reported something that had happened the day after the raid. Twelve young women, two young men, and an older man arrived at the airport as a group. TSA thought it fishy enough to notify airport police. The police had no grounds to stop them but saved the security camera footage just in case. Someone in Miami thought the older man looked like the sketch of Bukov.\n\nSvetlana identified the older man in the airport video as Bukov and one of the younger men as Karl. She also identified five of the women as Club Sensual staff who'd been sent to Miami. The FBI learned that the entire group had taken a flight to San Salvador. The airline had checked passports, all of which were Russian. The older man used a Russian diplomatic passport in the name Mikhail Kalunin.\n\nThe Russian embassy in Washington denied that there was a Mikhail Kalunin in the Russian diplomatic service and said the passport number was bogus. Who knows if that was true? Salvadorean authorities reported the entire group had connected to a flight to Havana. Of course, the Cubans told us nothing. With Bokov/Kalunin having decided prostitution was the highest and best use of the twelve women, I had dim hopes for their futures.\n\nMy top priority became keeping Svetlana from being deported. Local ICE was grateful for her information breaking the case. They were in no hurry, but they'd have to act against her eventually if something wasn't done. A lawyer I'd worked for put me in touch with one of the top immigration lawyers in Tampa. She implemented several parallel strategies. The one holding the greatest promise was a private bill in Congress granting Svetlana citizenship.\n\nI put together a presentation for one of our congressman's senior staff. I emphasized Svetlana's education, English, and her contribution to a major law enforcement win. As FBI agent in charge of the investigation, Laura confirmed that Svetlana's information broke the case. I affirmed that, as soon as she could legally work, Svetlana would be employed as administrative assistant in my firm. We left out the fact that Svetlana was living in my unit at The Cove, where Laura also spent her nights. We had eight rather tense months before the private bill passed and signed. Laura and I took our roommate before a Federal judge in Tampa to swear her in as a US citizen. Svetlana did go to work assisting me. Given my duties for The Cove, I often worked from home. That allowed Svetlana and me to work naked.",
        "We were concerned that Laura and I would have to testify at Holloway's trial. Holloway had seen us at Sensual Elite and cross-examination about our conduct at Club Sensual could be problematic for Laura's FBI career. Bokov/Kalunin reached out one last time to solve part of that problem. Holloway was killed in jail. Lydia Dunova and Brad Schermer did plea deals. There would be no trials in the Club Sensual case.\n\nLaura's star in the Bureau was rising, with no apparent sources of tarnish. The Bureau has always sought publicity, from the days of J. Edgar Hoover. Sally Stancik was kind enough to name me as an \"important contributor\" in the Bureau press releases about Club Sensual. The notoriety and implicit FBI connection did wonders for my business. Svetlana and I had real work to do.\n\nThe Feds and Florida fought over who would get the forfeiture of the Club Sensual property and what I called \"Kester's island.\" The Feds won. Club Sensual was auctioned off. However, Julia Fairchild's lawyer persuaded the Feds that the island had no value. Indeed, it could disappear in the next Hurricane Charlie. The US Government sold the island back to Julia Fairchild for $ 1,000.\n\nJulia re-acquiring the island was convenient. About two years after Laura and I had first gone to Club Sensual, we stood together on Julia's island. Some friends were there: Svetlana, Beth Potter, Sally Stancik, Paul and Lilith Westerfield, Julia, and her husband. All of us were nude except for Charles Westerfield and a young woman I didn't really know. She was there because she was an ordained clergyperson and was the only person we found willing to officiate a nude wedding. With Svetlana as maid of honor and Beth Potter as \"best man,\" Laura became my wife. We had a very informal reception right there on the beach. That night, Laura, Svetlana, and I went back to our home at The Cove and slept together in the same bed."
    ],
    "authorname": "HStoner",
    "tags": [
        "public nudity",
        "public sex",
        "threesome",
        "exhibition",
        "voyeurism",
        "threeway",
        "group",
        "group sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/nude-noir-ch-04"
}