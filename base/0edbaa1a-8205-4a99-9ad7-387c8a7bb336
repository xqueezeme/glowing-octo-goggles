{
    "title": "Hampered in His Plans Ch. 04",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 19 - Forewarning \n\n\"Oh, Commannnderrrrr...\"\n\n\"Get out of my dream, Angela.\"\n\nIt was 2:30am, early Friday morning, January 15th.\n\n\"Oh, Commander,\" chided Angela Harlan. In my dream she was in black and white, under a cone of light, naked but for her high heel black pumps, her raven black hair cascading behind her. \"Your day is coming, your day is coming.\"\n\n\"What day?\" I asked in my dream.\n\n\"Oh, your day to join the Dark Side, my beloved Iron Crowbar.\" Angela whispered, her voice sounding as if it were very near me. \"Don't you want to know why I went bad, Don?\"\n\n\"I already know.\" I said.\n\n\"You don't know shit.\" Angela said, then began pacing in front of me. I was sitting on some chair, not restrained, but seemingly unable to move. \"But you're about to find out. You are about to face the same choice I had to make. The Dark Side is coming, Don. Will you go into the Darkness, into the Deepness?\"\n\n\"No!\" I shouted. I looked around. I was sitting up in bed, having waked up and violently thrown the covers off me. That had awakened Laura.\n\n\"Don?\" she asked. \"Don, are you all right?\"\n\n\"Yeah... yeah, I'm fine. I just had a... weird dream. Go back to sleep.\"\n\n\"Come, lie back down.\" she said. But I was getting up.\n\n\"I'm going to go get something to drink.\" I said. \"I'll be right back.\" With that, I went downstairs to the kitchen. There was some orange juice in the refrigerator and I poured some of that. I might have added a touch of vodka, as well.\n\nI downed my drink, following it with a glass of water. Then I went back upstairs. I checked on the kids, who were peacefully sleeping. But two dogs were looking up at me.\n\nBowser was in his basket at the foot of Carole's bed, which had rails on the side to keep her from falling out. Buddy was in a basket under Jim's crib, which he'd taken to from the get-go.\n\nI sat down on the floor, and both dogs came up to me. I would make a point of giving them equal time, so I was petting Buddy with my left hand and Bowser with my right hand. \"You guys guarding the kids?\" I asked. They didn't respond, but let me keep petting them for a while. Perhaps they sensed my feeling of foreboding, partly due to the nightmare dream with the Black Widow, partly due to her words of forewarning... but also because of something more, as if a House of Cards was about to fall on my head...\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely MILF redheaded reporterette at 7:00am on the same Friday, January 15th. \"Channel Two News has learned that there is a possible, let me say that again: possible transplant organ that could become available for young orphan Amy Croyle. This is contingent upon a terminally ill person passing away, and University Hospital and Dr. Richard Searles are prepared if and when the organ arrives.\"\n\n\"In other news,\" said Bettina, \"the EMT strike remains peaceful, but the Town & County Council has asked the Police Department to clear the EMTs, saying that they have no lawful authority to be on strike, and their presence is a danger to the Community. However, Sheriff Daniel Allgood and Police Chief Sean Moynahan issued a joint statement that as long as the EMTs remain peaceful and no one is put in immediate danger by their actions, they will not be molested by the Police. Asked for a statement, Commander Donald Troy stated that the EMTs have a Constitutional First Amendment right to Peaceably Assemble, and as long as it remains peaceful, he has no reason to bother them.\"\n\nBettina said \"When asked if they would open a dialogue with the striking EMTs, a spokesman for the Council has stated that the EMS service no longer exists, that the former EMTs have no jobs to return to, and they are disqualified from any County Government job. The Council considers the matter closed, except for seeking legal action to force the former EMTs to disband.\"\n\nBettina had more: \"Meanwhile, the Police responded to a KXTC inquiry into the murder case of NBESW president Jack Naples, and the Police response was that they continue to actively investigate the case, but do not yet have sufficient evidence to serve an arrest warrant. However, Commander Troy did say that there is plenty of evidence to bring the arrested Firemen to trial in the rape and assault cases.\n\nBettina added: \"There has been surprisingly little national interest in the story of a national Union president being murdered. Some experts suggest the NBESW is not a very influential Union, nor one with much clout, while other experts suggest that this an example of Unions losing their influence overall. However, sources close to this situation suggest that it is the relatively hopeless situation of the local EMS as the reason for the lack of national interest in this story.\"\n\nWho are these 'experts'? I once again asked myself as I listened to Bettina's broadcast...\n\n\"And in the continuing saga of the District Attorney's office, D.A. Krasney has moved to bring the Fire Department rape case forward.\" said Bettina. \"This occurred after both the State and Federal Departments of Justice began an inquiry into the matter. The Fire Department Union will continue to provide legal representation to their Firemen, and D.A. Krasney named A.D.A. Paulina Patterson as the lead prosecutor for all the Fire Department cases. She and Commander Troy have brought many cases to a successful conclusion with guilty pleas before trial, and these cases may be soon brought to an end.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Commander,\" said Detective Martin Nash as he entered my office, with Lt. Perlman right behind him. \"I did a routine check through the FBI of any issues with Jimmy Lawson's medical unit. At the time he shipped out, a couple of long scalpels were reported as missing. It is not totally uncommon for items to disappear here and there, but they actually made a full investigation and report about it.\"\n\n\"Long scalpel.\" I said.\n\n\"Yes sir,\" said Nash, \"I also checked with the Medical Examiner, and she said that type of long scalpel would definitely fit the profile of the murder weapon.\"\n\n\"Looks like this is enough probable cause to get a warrant to search Lawson's home and car.\" I said. \"Get with Paulina and make it happen.\"\n\n\"Better call Ted Mason.\" said a voice, which belonged to the gorgeous black ADA. Paulina came on into the office. \"Commander, you and I have appointments at County Jail. The lawyers for the TCFD perps say they're ready to get this done. But I suspect they'll need to have you in front of them to put the true Fear of God and Crowbars into them.\"\n\n\"Okay, Perlman,\" I said, \"Get with ADA Mason, secure the warrant, and let me know what your guys find. Good work on that, Nash. Keep this up, and the FBI will probably steal you from us.\"\n\n\"Not if I can help it.\" Tanya said with her cherubic grin. Nash was silent, and looked a little uncomfortable.\n\nPart 20 - Resolution \n\nThe two firefighters accused of rape were brought to the County Jail's Interrogation Room 1. Yes, '1'. They'd finally renovated two more rooms into Interrogation Rooms, so I and Third Precinct now had three secure and videocamera-covered rooms to work with. Happy happy, joy joy, I thought to myself.\n\nThe firefighters were in orange County Jail jump suits, and had been held in a separate detention cell to prevent them from being attacked by other inmates. They had never been very exceptional firefighters, from the reports I read, and now they were haggard and looked beaten.\n\nTheir lawyers, despite any talk of amicable conclusions, were still going to press for everything they could. But they might have known to not fuck with me, and that I was their last hope of any pre-trial conclusion.\n\n\"All right, guys,\" I said, \"you're going to do hard time, no matter what. We can make this a bit easier on you, or make it very very hard.\"\n\n\"Commander,\" said one of the lawyers, an older man with white hair on both sides of his hair, and glasses on his beakish nose, \"Why should my clients capitulate, when the video was illegally obtained, and their arrest unlawful?\"\n\n\"Are you really going to waste my immensely valuable time this way?\" I shot back, keeping my voice as calm as I could. \"First, the victim has picked these two men out of a hundred photographs. She will also be able to pick them out of a lineup. Second, the semen samples recovered from the victim, as well as skin from under her fingernails, has 99.9999% DNA matches to your clients sitting here before me. Third, the video evidence was very much lawfully obtained, and it's clear. Do I even neeeed to say 'Lets watch some TV.'? You're clients are done, Counselor.\"\n\n\"Let's make a deal, then.\" said one of the firefighters, overruling his lawyer's attempts to make him stop talking. \"What's the best we can do?\"\n\nPaulina said \"Let me first make you understand what happens if you take this to trial, and you're convicted. And let's be honest, guys, with this DNA evidence alone, you are going down. You're looking at 25-to-Life, especially if I tack on aggravating circumstances, which is very possible here. Basically it's the rest of your lives. But if you plead guilty, the judges around here would very likely give 20 years each, with some possibility of parole. That's not too likely, as you face other charges, but I might can swing concurrent sentences instead of consecutive ones.\"\n\n\"Protective custody?\" the other fireman asked.\n\n\"No doubt about that anyway.\" I said. \"I've already labeled you 'keepaways', and that'll follow you to State Prison. You'll probably get a transfer to Supermax.\"\n\n\"How long before parole?\" asked the first firefighter.\n\n\"There's no guarantee of it.\" Paulina said. \"I intend to wrap this whole thing into one ball and put it on the Judge's desk. Your most likely scenario is 20 years, straight up.\"\n\n\"It beats the hell out of life without parole, which you could conceivably get if you go to trial.\"\n\n\"We need to confer with our clients.\" said one of the lawyers.\n\n* * * * * * * * * * * * * * * *\n\n\"What about the rest of them?\" I asked Paulina as we waited in the anteroom.\n\n\"From what I'm hearing,\" Paulina said, \"the guys holding the EMTs while the third was beating his face want to hold out. They're going to say the EMT was attacking their fellow firefighters, and they were just restraining him, and the Police got the wrong idea when they drove up.\"\n\n\"Like we didn't get camera coverage of it?\" I said. \"We did, you know. Pretty clear pictures, too.\"\n\n\"They think they can get that tossed.\" said Paulina. \"Or at least their lawyers do. Anyway, the guy who was punching the EMTs might be a bit more reasonable; he knows he's in deep shit.\n\n\"Tell you what, let me take the lead on it.\" I said. I told her what I would do, and being a smart as well as beautiful woman, she agreed with my idea.\n\n* * * * * * * * * * * * * * * *\n\nThe rapists agreed to plead guilty in exchange for 20 year prison terms, but held out that they could change their plea to 'not guilty' if the judge rejected the plea deal. In the end, Judge Folsom would accept the deal, and they would have two decades in near-solitary-confinement to contemplate things.\n\nNext up were the three men who were holding the male EMTs and beating them nearly to death.\n\n\"Okay, guys.\" I said. \"We can sit here and watch TV, which shows very clearly that you prevented these two EMTs from helping their female colleague. Then you deliberately held and beat them. So, the charges I've filed are conspiracy to commit rape, conspiracy to commit murder in the first degree, harming persons in your custody, which happened when you physically held down the EMTs, and the biggie: attempted murder in the first degree.\"\n\n\"That's ridiculous!\" thundered one of the lawyers. Where do they get these guys? I wondered to myself.\n\n\"Ridiculous?\" I asked. \"How so? They were beating that man with the intent to kill him. I'm certainly willing to let a jury decide if this is attempted murder, which will carry life without parole because of the other charges. I also intend to ask for consecutive sentences, which judges around her like to give, and that means your clients here will spend the rest of their lives in Supermax prison.\"\n\nThe three firefighters suddenly had scared looks on their faces. \"What's the matter guys?\" I asked, loudly and menacingly. \"Your lawyers tell you you'll only get assault charges, maybe plead down to misdemeanors? Nope, not gonna happen while I'm Police Commander in this County. I'm going for the full meal deal, and all felonies. I really am, very seriously guys, talking about life sentences when all is said and done. You are going to do hard time, and a lot of it.\"\n\n\"By way of contrast,\" said Paulina, right on cue, \"we can probably get this wrapped into one neat package of 20 years without parole, then you walk out with the rest of your lives.\"\n\n\"We need to consider this, guys.\" said one of the firefighters. The lawyers admonished him to shut his mouth.\n\n\"Tell you what, guys.\" I said, getting up. \"I'll go into the other room, take a potty break, all that stuff, while you guys talk with your lawyers for a few minutes. And I hope you get better legal advice than you've gotten so far.\" With that, Paulina and I left the room.\n\n\"You were right.\" Paulina said. \"They really thought they'd get off light. And when you said 'attempted murder', I thought they'd dump in their pants. Think their lawyers told them they'd get off easy?\"\n\n\"I'd suspect their Union reps were the ones feeding them that hot air.\" I said. \"Quite frankly, I don't care if they take any deal or not. They're hip deep in it.\"\n\n\"Supervisor Harris is next.\" Paulina said. \"What about him?\"\n\n\"He'll be the hardest one to convince.\" I said. \"In fact, I won't be surprised if he takes it to trial. But maybe vee hav vays to make him see reeeson.\" I said in my 'German' accent.\n\n* * * * * * * * * * * * * * * *\n\nAfter thirty minutes of wrangling with their lawyers, the three firemen offered to plead guilty to assault and battery charges. I said it wasn't enough; the political climate required restitution for the rape, as well as one EMT nearly dying from their beating. In the end, they agreed to plead guilty to aggravated assault with the intent to do bodily harm, and conspiracy to commit rape, which meant they'd have 20 years without parole each.\n\nAnd then Superintendent Harris was brought in. His lawyer was the older man who'd represented the rapists. They were both feisty.\n\n\"Your Police Captain attacked me.\" snarled Harris. \"I'm going to press charges and sue her. And I'll call every firefighter in that building to the stand, and every last one of them will tell the jury that your bitch cop attacked me first. No way in hell I take any deals. I'll see your redheaded stepchild ass in Court, Troy!\"\n\n\"I think he's trying to irritate me.\" I said to Paulina. \"I think he's succeeding, too.\" I turned back to Harris. \"Okay, buddy, let's be clear. First of all, even if you do get 14 firefighters to perjure themselves for you, I will then bring out the videotape which will prove who assaulted who.\"\n\n\"But since you've decided to be an asshole about it, Harris,\" I said, \"you've got something worse to think about. You see, Captain Ross is my blood kin. A fellow cop, to be sure. But my family, too. My blood, Harris. And the way I see it, shithead, you attacked her, and she didn't kill you on the spot, which she could've done. She didn't kill you... but if you get out and walk free... well, I'll be there, Harris. I'll be there.\"\n\n\"Are you threatening me, Troy?\" snarled Harris.\n\n\"Harrumph. What do you think?\" I replied sneeringly.\n\n\"You know this is being recorded.\" said Harris's lawyer. \"This alone will get him off. The judge will drop the charges, and you'll be hearing from the Inspector General.\"\n\n\"I'm sure I will.\" I said, letting my eyes bore into Harris. \"Superintendent Harris knows about the cohesion, the brotherhood within a Fire Station. I'm sure he knows that the Police have the same cohesion. And they'll support my Captain, even if they don't support me. Someone will be out there, Harris. And that's not a threat, it's a prediction.\"\n\n\"My God, how can you be speaking this way--\" the lawyer started. Then it hit him. \"Those damn microphones better be on and working!\" he snarled.\n\n\u2028\"And if they're not?\" I asked.\n\n\"They'd better be, or I'll have your ass strung up so fast and hard you'll wish you were dead.\" the lawyer threatened.\n\n\"Now who is threatening who?\" asked Paulina. The lawyer and Harris both glared at her.\n\n\"Okay, on to trial.\" I said. \"No deals for this piece of shit, Ms. District Attorney.\" I got up to go.\n\n\"Wait a minute.\" said the lawyer. \"In light of all this acrimony, we should be able to come to some sort of agreement here. For all our sakes.\"\n\n\"Oh, I have nothing to fear.\" I said. \"Superintendent Harris, though... as the Station Commander that he was, he's responsible for what happens in his Station. Forcible rape is what happened. He can be charged with conspiracy to commit rape, since he didn't try to stop it. Every charge we're bringing against his subordinates, I intend to bring against him. And through it all... he still assaulted my blood kin. See you in Court, Harris.\" I turned and left.\n\nThey did manage to get Paulina to listen, and she pretended to get me to come back in. Once back inside, the lawyer said \"Okay, what do you want? And by that I mean something we can actually agree to.\"\n\n\"Well...\" I said, as if thinking about it, \"... if your client makes a plea bargain that includes his immediate resignation from the Fire Department, voluntary forfeiture of any Fire Department pension, and an agreement to never work in any County position of employment... the same treatment the EMTs have always gotten... then he can plead guilty to misdemeanor assault on a police officer, and get probation. That's not negotiable, that's my final offer, take it or leave it.\"\n\n\"Let me keep my pension, and it's a deal.\" Harris said.\n\n\"Ears are to hear with.\" I said. \"Start using yours. I said my offer was non-negotiable, take it or leave it. No pension. Not one dime.\"\n\n\"I'll leave it, then. I'll see you in Court.\" said Harris. \"And in Hell.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Pretty good day.\" said Paulina as we ate lunch at the Cattleman's Club, my treat. \"The rapists are getting pretty standard sentences, there, so no public backlash should happen. The bullies got served, but still got less than they could have. But I think you could've had Harris, too.\"\n\n\"Paulina,\" I said with something of a grin and something of a thought of pain, \"if you think Cindy beat the shit out of him, just imagine what she would've done to me if I'd cut a deal with that prick. As it is, he's going to trial, he'll face a host of charges of aiding and abetting rape, as well as felony assault on a Police Officer, for which he will be convicted.\"\n\n\"In the meantime,\" I went on, \"he faces TCFD discipline for losing control of his Fire Station, basically being in charge of a Fire Station where people in his charge committed forcible rape... they're going to strip him of his pension anyway. He was a fool not to take that deal, it's no longer on the table, and *he* walked away from it.\"",
        "\"You win all the way around.\" said Paulina, smiling her beautiful smile. \"Oh!...\" She looked down at her distended belly. \"Your baby just kicked.\" I had to smile at that.\n\n* * * * * * * * * * * * * * * *\n\nBack at the Station, Paulina and I were greeted with news.\n\n\"Sir,\" said Tanya Perlman, \"we got the warrant and executed it. We found a long scalpel among Jimmy Lawson's old Army belongings. He said it was souvenir from the war, but we confiscated it. The Medical Examiner is now studying it to see if it matches the wounds on Mr. Naples. It was cleaned, though, so I'm not holding out hope for DNA.\"\n\n\"Did you arrest Lawson?\" I asked.\n\n\"Sort of.\" said Martin Nash, who was standing next to Tanya. \"We told him he needed to come to the Station. He asked if he was being arrested and we said not yet, but he was coming to the Station. He's in Interrogation-A, and has called his lawyer.\"\n\n\"Was his wife and baby at home when you got there?\" I asked.\n\n\"Yes sir.\" Tanya said solemnly. \"I let him hug and kiss them goodbye before bringing him in. It was... one of those moments that make this job less easy.\"\n\n\"Good, you did the right thing.\" I said. \"Okay, you videotaped finding the scalpel?\"\n\n\"Yes sir.\" said Nash.\n\n\"Good.\" I said. \"When his lawyer gets here, start asking him questions.\"\n\n\"Sir,\" said Tanya, \"if the M.E. comes back with a match to the scalpel, we have him cold, don't we?\"\n\n\"Well, I suppose the scalpel could've been planted by Mr. Logan.\" I said. \"But men have been put to death for less than what you'll have if it's a match...\"\n\nPart 21 - The Evil That Men Do \n\nAt 8:30pm, Friday the 15th, I got the call from Laura that the organ donor had just died. The liver would be at University Hospital in two hours. They were beginning to prep Amy. She and Father Romano prayed together, he said a mass for her and she took the Sacraments. Then it was time to say goodbye to Teresa.\n\n\"I'll see you when you get out of surgery.\" Teresa said. \"You just be strong and keep fighting, okay?\"\n\n\"Teresa,\" Amy said, reaching for her hand, \"thank you. Thank you for everything. I just want to say... I love you.\"\n\n\"Aw, I love you too.\" Teresa said, tears in her eyes.\n\n\"You'll take care of Buddy?\" Amy said.\n\n\"The Iron Crowbar will. He loves dogs, and he loves Buddy as much as you do.\" Teresa said. \"Buddy will be fine.\" Amy smiled weakly, then began falling asleep as tiredness and the sedatives began working...\n\n* * * * * * * * * * * * * * * *\n\n\"Dr. Morgan,\" said Dr. Searles, \"I really appreciate you volunteering to assist in this operation. It's going to be a long, tough one.\"\n\n\"Yes it is.\" said Dr. Morgan. \"But it's the least I can do for that little girl. And I love dogs, too, so this is for both of them.\" Dr. Searles nodded, and he and Dr. Morgan began discussing and mapping out what they would do. The bottles of O-Negative blood, were ready; they'd been sent from hospitals all over the State as well as the Red Cross after seeing the Bettina special on Amy. Hundreds of persons had given blood, even if only the O-Negative ones could help Amy.\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, that's it.\" said the doctor at City Hospital, who'd just removed the liver from the dead donor. \"Get this to University Hospital, stat.\"\n\n\"Yes, Doctor.\" said the nurse, who was preserving the liver in a solution, and that inside an ice-filled chest. As the Doctor began extracting other organs, the nurse took this one down the hall and stairs to the pick-up point. \n\nA van with a label denoting his company as an organ transfer company was parked at the back entrance. The young man, tall and slender with curly black hair under his cap, signed for the organ, gave the nurse a copy of the paperwork, then put the chest in his van and pulled out.\n\n\"Okay,\" said the nurse to an orderly, \"let's go get the next one.\" Just as she turned to go in, a van with identical markings to the previous one pulled up in a rush. A man popped out.\n\n\"I'm here for the liver for University Hospital.\" he said. \"For that orphan girl.\"\n\n\"Whaa?!?!\" exclaimed the Nurse. \"But... that guy just picked it up seconds ago.\"\n\n\"Wha?\" said the driver. He and the shocked Nurse and orderly looked down the drive where the other van had just gone.\n\n\"Oh my God!\" gasped the Nurse. \"Call the Police! QUICKLY!\"\n\n* * * * * * * * * * * * * * * *\n\n9:15pm. As we waited in Laura's office inside the Hospital, there was a soft knock on the door. To our utter shock, the door opened to reveal FBI Special Agent In Charge Jack Muscone. Lt. Tanya Perlman was behind him. Muscone's face was as white as a sheet. Tanya had tears trickling down her cheeks.\n\n\"Don.\" gasped Muscone. \"The FBI got a call half an hour ago. The liver for Amy was stolen from City Hospital...\" He could not continue.\n\n\"Oh my God!\" Laura wailed. I was standing there, in total shock.\n\n\"What... what happened?\" I finally asked as Laura rushed out to find Dr. Searles.\n\n\"Guy in a regulation van pulled up, took the liver.\" said Jack. \"Seconds after he left, another van pulled up. He was the real courier.\"\n\n\"Oh, geez.\" I whispered. And then it hit my mind like a punch in the face. \"Perp was a young man, black curly hair?\"\n\n\"How the hell did you know that?\" gasped Jack. \"This ain't no '400-years-ago' thing, either! How did you know?\"\n\n\"Did my Data Guyz tell your guys about that money that went in and out of Vauxhall?\" I asked.\n\n\"Oh.\" said Jack, realizing where I was going with this. \"Shit. Yes, they did. We'd only started to look at that. Do you think this guy was the one?\"\n\n\"Yeah.\" I said. \"And feel free to burn my ass at the stake for this one. I should've realized this, I should've put out the word, I should've gone there myself to escort that liver...\"\n\n\"SHUT UP, DON!\" shouted Tanya. \"This is not your fault!!\" \n\nTanya's words were like a badly needed slap to my face. I took a breath, regaining a modicum of control. \"Yeah, you're right. Oh my God. Jack, does the FBI have any idea where he might have gone?\"\n\n\"Maybe I can help with that.\" said a voice. It belonged to Dr. Searles, who looked very somber. \"Come to my office.\" We went to Dr. Searles's office. He sat down in front of his computer.\n\n\"This is the organ donor national system.\" Dr. Searles said, bringing up the program. \"I told you before there was only one other claim on this liver, and that claim was dropped earlier today. Boston Medical was the hospital making the claim, and they were going to kick it, as the term is called, to a facility in New Hampshire.\"\n\n\"I'll alert the FBI.\" said Muscone.\n\n\"Agent Muscone,\" said Dr. Searles, arresting Muscone's attention. \"Send your agents, but if they can't find that liver and get it here within the next hour or so... it may not matter. If it's going to Boston, it'll be on a plane, too.\"\n\n\"We can damn well try, and we can catch the son of a bitch that stole that organ!\" snarled Muscone. He stalked out of the room.\n\n\"Has anyone told Teresa?\" I asked.\n\n\"No.\" said Tanya. \"Unless your wife did. Cindy's with Teresa now.\"\n\n\"Well,\" I said, \"this is my punishment. It's my duty to tell them. Excuse me.\" I left the office and began walking down the halls, agony eating at my soul.\n\nI met Laura in the hallway. \"Have you told Teresa yet?\" I asked.\n\n\"No.\" she said. \"Do you want me to do it?\"\n\n\"It's my job, and my duty.\" I said. Laura nodded. The look on her face was the most profoundly sad that I'd ever seen.\n\nA moment later, I entered the waiting room. Cindy had Teresa looking at crime reports to distract her, and get Cindy up to speed on what Vice was doing. I sat down opposite them, and Cindy felt the vibe immediately.\n\n\"Don, what's wrong?\" she asked.\n\n\"Ladies,\" I said, working my ass off to get the words out, \"the organ that was coming to Amy was stolen from City Hospital. The FBI is trying to track it down now. But... but it's gone. It's not likely they'll find it in time...\" I couldn't go on.\n\nTeresa gaped, no sound coming from her mouth. She almost pitched forward, and caught the coffee table to balance herself. Cindy then caught her and took her into her arms.\n\n\"Nooooooo,\" Teresa was moaning. \"Nooooooo.\"\n\n\"Dr. Searles is putting out the word to try to find a new one.\" I said, my voice haggard, barely working. \"We will really need a miracle now.\"\n\nTeresa was trying hard to rally. \"We cannot lose hope. We cannot lose hope.\" she said. I silently commended her Warrior Spirit... \n\n* * * * * * * * * * * * * * * *\n\nAt 2:00am, Saturday, January 16th, City Police Detective 'Sapper' Warren called me. \"We've got video footage of the guy. The van was found at City Airport; it's been impounded. We've turned the case over to the FBI.\"\n\n\"Okay, thanks.\" I said.\n\n\"Hey, Commander,\" said Sapper. \"Tell everyone there we're all hurting here, too.\"\n\n\"Thanks, Sapper. I will.\" I said.\n\nWe were in Dr. Searles's office. He was scanning the organ donor system, as if the harder he clicked the mouse, the more likely a donor organ would appear. No such luck, though. Meanwhile, Amy had been taken back to her room, and we were told she'd likely sleep until morning.\n\nI asked Teresa if she wanted me to call Todd. She said he'd had to fly out of the State, to California. It was strange that he had not told me. He usually did, or my mother did because she would take care of little Doug.\n\nI called David Krueger, Myron Milton and Mary Milton to the hospital. I had Dr. Searles show them the organ donation system, and the Boston entry for the liver, as well as our own. It would not take Mary long to not only access that data from her laptop, but to go into the depths of the system, to see who'd accessed the records of that liver.\n\n\"It's obvious someone else wanted that liver.\" I said. \"They monitored the system. When they saw it was coming for Amy, they stepped in and stole it.\"\n\n\"And it's someone from this County.\" said Mary. \"Didn't try to route it around too many times. Looks like... well, this Hospital. Maybe I'm reading the data wrong.\"\n\n\"No you're not.\" said Myron, looking over his wife's shoulder. \"These are Dr. Searles's computer's links, they're direct. These others are from another place in this Hospital.\"\n\n\"Okay guys, stay here.\" I said. \"I need fifteen minutes to think about this, and then I'll have some instructions.\"\n\n* * * * * * * * * * * * * * * *\n\nFifteen minutes became forty-five minutes. I sat in Laura's hospital office, alone, in the dark, putting every ounce of power that my mind could generate to see through this one. It was slow and agonizing, and it didn't help that someone's voice was in my head.\n\n\"Oh, Commmannnddderrrr...\" \n\n\"What now, Angela? I'm trying to think, here.\"\n\n\"Oh yes, you do that soooo well, Commander.\" Angela taunted. \"You didn't catch me in time, and now that precious little girl is going to die because you didn't act in time. But all can be saved... if you just come over to the Dark Side with me. The answers will be soooo clear then.\"\n\n\"Either side won't do me any good if we don't get that organ or another one for that girl.\" I thought.\n\n\"Oh, you poor man.\" Angela said inside my head. \"You just can't see that you can't fight Fate. Young Amy has served her purpose here, and valiantly. You have another job to finish. You have someone else far more powerful to stop, someone who I failed against, who corrupted me and beat me...\"\n\nI opened my eyes. It was still dark in Laura's office. But I now realized some things. Threads were now weaving together...\n\nBut God damn it, Angela! Why does Amy's life have to be the payment for this?\n\n* * * * * * * * * * * * * * * *\n\n\"Okay, guys.\" I said, returning to Dr. Searles's office. My bug-killer was on, which took out Mary's wi-fi reception. \"I want you to continue looking into Vauxhall. Dig deep, find what you can. Tell me anything you find, then tell the FBI if I say you can. Then I want you to start digging into this Hospital. I want you to look at everything Dr. Searles has done vis-a-vis this organ donation system, though I suspect he's clean. Look anyway. Then look at anyone that might have a connection to the system. I'll give you a shortcut: Dr. Louise Alcott, the Hospital Administrator. She may have used aides or proxies, so look at them. And dig so far up the Hospital Board's asses that they shit data bytes for a week.\"\n\n\"I don't suppose asking about a warrant is necessary?\" asked Myron.\n\n\"Damn the warrants.\" I said. \"Do it. On my authority. I may go to jail, but the bastard that stole Amy's organ as well as the slugs who paid him... will go down first.\"\n\n* * * * * * * * * * * * * * * *\n\nAs I was about to leave and go to the Station, a redheaded woman came out the elevator, alone. It was Bettina Wurtzburg. She saw my face, and her eyes got a bit too wide for her face.\n\n\"Off the record.\" I said, coming up to her.\n\n\"Deep background?\" she asked quietly, giving it a try.\n\n\"How about... embargoed until I release it.\" I said. Bettina agreed.\n\n\"Is it true?\" Bettina asked. \"The organ for Amy was stolen?\" I just nodded.\n\n\"How?\" Bettina asked. Reminding her this was embargoed and the FBI was investigating, I told her the gist of the story.\n\n\"Oh my God.\" Bettina said. Having gotten to know Amy for her news story, she began crying. I took her into my arms and held her, fighting hard not to break down myself.\n\nPart 22 - Relentless Ticking of Time \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" said Bettina, standing outside University Hospital at 7:00am on Monday, January 18th. \"We're bringing you continuing coverage of the devastating story over the weekend that a donor organ meant for young orphan Amy Croyle was stolen from City Hospital Friday night before it could be delivered. While Dr. Richard Searles searches desperately for a new organ for Amy, time is running out for the young girl. Doctors say she may have just days left to live.\"\n\n\"In other news, Jimmy Lawson was arrested for suspicion of the murder of Jack Naples a week ago.\" Bettina continued. \"He is being held at County Jail, having so far been unable to make the one million dollars bail set by Judge Harry Nance.\"\n\nIt was an exceptionally somber MCD room. I thought about the weekend: when Amy woke up, Teresa had told her that the organ didn't arrive, and they were still looking for a new one. Teresa had literally torn out the wires of the TV set so that Amy would not hear that the organ had been stolen. \n\nStill, Amy heard about it soon enough. When I brought Buddy to see her on Sunday, Amy asked me and Teresa to forgive whoever had stolen it, and that the organ hopefully had saved someone else's life.\n\n\"Amy,\" I said \"you don't need a heart transplant, because the one you've got is wonderful. But it's my job to go after whoever did this, and keep them from ever doing this to someone else. It's what I get paid to do. Anyway, we'll keep looking for another one.\" \n\nAmy nodded, and petted Buddy. She was trying to stay strong, but the ravages of the disease on her young body, the drugs that had been given to her to prep her for the surgery, and the effort to endure and drive on were all taking their toll. Amy was getting weaker, much weaker, every day. Buddy settled down by her side and lay there, his canine eyes showing his love, making it easy for her to pet him and for her to feel better with his presence...\n\n* * * * * * * * * * * * * * * *\n\n\"How can someone be so... evil... to steal a little girl's only chance to live?\" Joanne Cummings said quietly, nearly in tears.\n\nJust then, Detective Julie Newton came into MCD. \"Commander, can I see you for a moment?\"\n\n\"Sure.\" I said. We went out into the hallway, which was apparently enough for Julie.\n\n\"Sir,\" she said, \"I've been trying to track the guy who stole that organ from City Hospital, but I'm being blocked.\"\n\n\"Hacked?\" I asked.\n\n\"No sir,\" said Julie, \"but I can't get data.\"\n\n\"Well, the FBI might've cut you off, by accident or just as a precaution.\" I said. \"And I appreciate your trying to help, but let's let the FBI handle this one. It's bigger than us, and not even in our jurisdiction.\"\n\nJulie did not seem mollified, but she headed back to Vice.\n\n* * * * * * * * * * * * * * * *\n\nThe M.E.'s report was devastating. It showed conclusively, enough to be admitted as Court evidence, that the scalpel recovered from Jimmy Lawson's home was the scalpel that had cut Jack Naples's spine and been driven into his head.\n\nJimmy Lawson had done the wise thing: he'd immediately invoked his Fifth Amendment rights. I had watched from the anteroom of Interrogation-2 as Tanya and Theo Washington had questioned Lawson, through his lawyer. They even offered to do hypotheticals after getting my permission, but neither Lawson nor his lawyer would play the game.\n\n\"I don't get it.\" said Paulina, watching in the anteroom with me. \"I know he has rights, but we've got a strong, strong case against him. He was the only one pretty much alone with Naples, though someone conceivably could've snuck back in later. He didn't want to go on strike, and Naples was pushing relentlessly for a strike. The Union has furnished the lawyer, but no one is stepping up to pay his bail. He has no money, he and his wife have no family. If he doesn't speak out, find a way to show he's innocent-- yeah, I know he doesn't have to-- but still...\"\n\nTanya and Theo came out of I-2 and into the anteroom. \"I don't know.\" said Tanya. \"Maybe they'll put up a defense that the scalpel was planted, though his words at the scene that it was souvenir damns him on that.\"\n\n\"Unless they throw it out because his rights weren't read to him yet.\" said Theo.\n\n\"But they were read to him.\" I said. \"I mirandized him myself. He could still say someone stole the scalpel, killed Naples, and returned the scalpel... but my God, how that can be shredded by a good prosecutor... a good... prosecutor...\" I was off to the races in a reverie.\n\n* * * * * * * * * * * * * * * *\n\nCindy came into my office later that morning. \"You're not with Teresa?\" I asked.\n\n\"No. Todd's back from his trip, and he's staying with her at the Hospital.\" Cindy said, then added. \"Don, I don't think Amy has a week left.\"\n\n\"Yeah, I know.\" I said. \"How's Teresa holding up.\"\n\n\"She's staying strong for Amy's sake.\" Cindy said. \"But I know she'd really like to be working on the case. If she ever finds the bastard before anyone else does...\"\n\n\"Hell, he'll have a better chance with her than he will with me.\" I said.\n\n\"You okay, Don?\" Cindy asked, peering at me.\n\n\"No, Cindy. No I'm not.\" I replied. \"I am not okay. I cannot believe the unspeakable level of evil that I have seen here. We are going to put an end to it, my friend. I am going after the bastard that is behind this, and after he is publicly exposed for his crimes, I am going to watch him die at Jacksonville State Prison. And then... I will be okay.\"\n\nCindy just nodded. \"Sometimes I wonder if would be better just to kill him, even though that's stooping to his level, and we just become criminals. But how many lives would we save by exterminating his?\"\n\n\"I know.\" I replied. \"To me, the only problem with killing him is that the World won't know of his crimes, his evil. They'll only know he was killed by us. He might even become the martyr, the hero, and we the villains and killers. Like The Batman and The Joker.\"\n\n\"So,\" I said after a pause. \"How are things with Jenna?\"\n\n\"I have not seen her in days.\" Cindy said. \"I've been at the gym doing all the paperwork, at the Hospital with Teresa, trying to keep up with Vice on Teresa's behalf; and Jenna's working on her campaign for 20 hours a day, sometimes staying at her Headquarters office overnight.\" I just nodded.\n\n\"I'm going to go check on Vice.\" said Cindy. She got up to go.\n\n\"So how is the bug-killer working?\" I asked, realizing she was using it now. Cindy turned with a smile.",
        "\"I guess we'll find out if I.A. comes and visits us.\" she said, then turned and left the office.\n\n* * * * * * * * * * * * * * * *\n\n\"It's thin.\" said D.A. Krasney. \"It's circumstantial. I don't doubt your ability to prosecute it, but a good lawyer is going to put up a tough defense.\"\n\nHe was meeting with Paulina Patterson in his office, looking over the case she was preparing against Jimmy Lawson.\n\n\"Yes sir,\" said Paulina, \"but it's a pretty strong circumstantial case. I've got no problem going with it.\"\n\n\"What about the Harris case?\" Krasney asked.\n\n\"God, if we can't win that on the videotape evidence alone,\" replied Paulina, \"then it's time to take down our shingles and find something else to do.\"\n\n\"Let me ask you something.\" said Krasney. \"And answer me honestly: whose side are you on, mine or Stiles's?\"\n\n\"None of the above.\" said Paulina flatly. \"Mr. Krasney, I'm here to do my job and do it to the very best of my abilities. My loyalty is to the job and the Court, not to any person. I've never given you reason to question my loyalty to the Office, and whatever I think of you personally or you think of me, doesn't matter when it comes to Justice.\"\n\n\"I'll buy that.\" said Krasney. \"The only reason I asked is to let you know that whomever you choose to support is okay with me, just as long as you don't let that affect the stellar job you've been doing. And that brings me to these other Fire Department cases... it looks like the judges are going to go with them. You did a good job with them, you and Commander Troy both, and I appreciate that.\" Paulina just nodded.\n\n\"There is one other thing.\" said Krasney. \"How would you feel if Commander Troy gave this case to another A.D.A. and worked with him or her?\"\n\n\"If that's what you and he want, I'll go with it.\" said Paulina. \"But why would he or you do that?\"\n\n\"I don't know,\" said Krasney, trying to show humor. \"I heard a rumor that you might have a baby one day soon. We're going to have to get your colleagues up to speed, even if you're not gone long. And with Ms. Stiles out of the picture for the next few months...\n\n\"I'd think she'll never be back.\" said Paulina. \"If I bitch-slapped you like she did, I'd expect to never see this side of the Courthouse again.\"\n\n\"Yes, I know.\" said Krasney. \"But I also know that I handled that poorly, and I understand her frustration. She went through hell, and I understand that. And you can tell her if you see her that if I win in November, I'll be open to bringing her back to her old job.\"\n\nPaulina was stunned, but said nothing about that. Instead she said \"Okay, we'll see what Commander Troy wants to do with this Naples-Lawson case. But I really think it's going to take me to get it through...\"\n\nPart 23 - Coming To An End \n\nCindy came into her condo at 10:30pm, feeling exhausted. She'd spent the last couple of hours with Don, Teresa, Todd, Amy and Buddy. She had nearly burst into tears, seeing how weak Amy was, how the girl was barely able to pet her beloved dog.\n\nTo her shock, she saw Jenna sitting on the sofa, going through a sheaf of papers. \"Hi Jenna, how are you doing?\" she asked.\n\n\"Tired, but energized all the same.\" Jenna said. \"We're starting to get some donations. By the way, I should be able to keep up the payments on the condo for a while.\"\n\n\"Don't stress on it.\" Cindy said. \"You want a drink?\"\n\n\"No, I've got way too much to do.\" Jenna said. \"But are you sure you can handle the condo payments alone? After buying out Melina's half of the gym?\"\n\n\"I'm going to be bringing in minority partners for the gym.\" Cindy said. \"I'm already talking to two girls I was on the Miss Physical America circuit with.\"\n\n\"Good.\" said Jenna. \"How is Amy doing?\" When Cindy didn't answer, she looked up to to see tears rolling down Cindy's cheeks.\n\n\"She's not going to make it.\" Cindy said. \"I've tried to hold out hope, but she's so weak now she won't survive an operation. The phone could ring any time...\" She did not finish the sentence.\n\n\"I'm sorry to hear that.\" Jenna said. \"That was so incredibly cruel.\" Cindy just nodded.\n\n\"By the way, I have a speech tomorrow at the Ladies Auxiliary Club.\" Jenna said. \"Why don't you come? Having your public support would do wonders for the campaign.\"\n\n\"I...\" Cindy said \"I can't right now. There is so much going on...\"\n\n\"Look.\" Jenna said. \"I know you can't support me while you're in a Police role. But put on some civilian clothes and show up. Sit at the head table with me. You don't have to say anything.\"\n\n\"I know, but...\" Cindy said. \"Look, you've got your thing to do, and I've got mine--\"\n\n\"Dammit, Cindy.\" Jenna said, looking up at Cindy. \"Everyone's busy, but I need your support. This is going to be a tough, uphill battle. I thought I could count on you of all people to be there for me.\"\n\n\"Come on.\" Cindy said. \"You know I'm into the politics thing. I'm supporting you, of course, but I can't make it to every speech. That's your thing.\"\n\nJenna sighed. \"Look, are you in this with me, or not? It can't be halfway. And it's not just for me, its for the County.\"\n\n\"What?\" Cindy said. \"I do a hell of a lot for this County already.\"\n\n\"Yes, but we have to get Krasney out of there. You can do more--\"\n\n\"What the hell?\" Cindy gasped, whipped to anger, her restraint finally breaking. \"I took fucking bullets for this County! I was lying in that Hospital nearly dead for this County! My best friend went into that dungeon after you, and I had to wait to see if either of you would come out alive! And now that same friend is trying to help a teen girl hold on to her life after her last chance was stolen from her, and my support is needed there far more than your God-damn political campaign! How dare you even suggest I'm doing less than I should!--- Oh my God...\" Cindy was shaking. Jenna was just staring at her.\n\n\"I've... I've got to get some air.\" Cindy said.\n\n\"Fine, run away from it.\" Jenna said. \"But don't pretend this is not a problem...\"\n\n\"You fucking bitch!\" Cindy gasped. She grabbed her coat and practically ran out of the condo.\n\n* * * * * * * * * * * * * * * *\n\nI got a call from the Duty Desk at 2:00am, Tuesday, January 19th. \"Sir,\" said the Duty Sergeant, \"this may be none of my business, but Captain Ross came in about 11:00pm and went to her office. I'm calling because she's still in there, and the light is not on.\"\n\n\"Uh, yeah, okay.\" I said, trying to wake up. \"Yeah, you did right to call. I'm coming down there. If she comes out, ask her to wait there for me.\"\n\nGetting to the Station, I came in through the south-side entrance from the gated employees lot. I turned left and walked down the hall, then left again to the anteroom of Cindy's office on the left, and Lt. Masters's office on the right.\n\nI knocked on the door and heard a \"Leave me alone!\" from inside. That would not do, of course. I had a red crowbar, and expected I could stave off most of the blows.\n\n\"Now you know I'm not going to do that until I'm satisfied you are okay.\" I said, coming right on in. I saw Cindy in her chair behind her desk, not crying now but having been in the past few hours.\n\n\"Sorry, I thought it was the Duty Desk or something.\" Cindy said as I sat down in the chair at the side of her desk.\n\n\"So what's up?\" I asked. \"Amy?\"\n\n\"That's some of it.\" Cindy said. \"Jenna was at home tonight. She got insistent about me supporting her campaign, said something that set me off, and I went off on her. Called her a bitch, too. I should go apologize, but... I dunno...\"\n\n\"Did she yell back?\" I asked. \"Did she put in a few good names in reply?\"\n\n\"No.\" Cindy said, then said as if realizing it for the first time, \"No, she... she was cold as ice the whole time. Almost like she was goading me. Saying I was running away. Just...\"\n\n\"I understand.\" I said. \"Well, you can talk to her tomorrow. But just between us, cousin-to-cousin, friend-to-friend... this relationship may not survive these next few months.\"\n\n\"I know.\" Cindy said. \"That is what I was thinking about. I love her, I want to be with her... but at the same time I cannot support some of the things she's doing, especially this campaign.\"\n\n\"Think she was wrong to do it in the first place?\" I asked.\n\n\"Yeah.\" she said. \"She's not going to win, and she's doing it out of vindictiveness. She had planned to take it more slowly. Now... I don't know what she'll have after the Election. I don't see how she'll have a job here, the Town is pretty saturated with private lawyers.\"\n\n\"But more importantly,\" Cindy said, turning her ice blue eyes onto me, \"if she moves away... well, I know I won't be going with her. My place is here... with you, Don. As long as you're our 'Sherlock', I am your 'Watson'.\"\n\n\"Yes, yes you are. And a whole lot more.\" I said, feeling moved by her words of loyalty. \"And you've been through a lot.\" And I knew that she would have more to endure.\n\n\"Tell you what, when did you last eat?\" I asked.\n\n\"Lunch yesterday.\" Cindy replied.\n\n\"Let's go to the Diner on University Avenue. On me.\" I said. \"We'll solve all the world's problems after the sun comes. Right now, I'm hungry.\"\n\n\"You won't have to ask twice.\" Cindy said.\n\n* * * * * * * * * * * * * * * *\n\n\"Hello, Jimmy.\" I said to Jimmy Lawson, who was being brought into the Interrogation Room 1 at County Jail. His lawyer was also present. It was 9:30am, Tuesday morning.\n\n\"I want to talk to you about this situation, Jimmy--\" I started.\n\n\"He's taken the Fifth.\" said the lawyer.\n\n\"I know.\" I said. \"So I'll do the talking. Jimmy, I want you to understand that while the case is circumstantial, it's still strong. Very strong. If there is anything, anything at all, that you can tell your lawyer and have him relay to us that will shed more light on this case, or help establish your innocence, you need to tell him. I know you have a family, and they have nothing right now, not even you at home. Let me help you if it is in any way possible.\"\n\nI got up to go, sliding my Police card over to the lawyer. \"Anything you can give me that will help me. Off the record, hypotheticals, anything.\"\n\nI left the room. Hope wasn't in strong supply right now.\n\n* * * * * * * * * * * * * * * *\n\nAnd hope ended.\n\nAt around 10:00pm, I was in the den of the Mountain Nest, reading the Lawson case file again, and again. Laura was on the other sofa, the one against the wall.\n\nI noticed Buddy come down the stairs. He went to the back door, and began whimpering. My eyes widened and I stood up, staring at the dog.\n\n\"Don, what is it?\" Laura asked, seeing the look on my face. Buddy looked back at me, then at the door, whimpering again.\n\n\"Does he need to go out?\" Laura asked.\n\n\"No.\" I said. I knew. I could feel it, too.\n\n\"Laura,\" I said, putting on my gunbelt and trenchcoat, \"get Mom up here to take care of the kids, then come to the Hospital after me. I'm taking Buddy now.\" Laura's eyes widened as she began to understand.\n\nWith that, I collected Buddy and took him to my Police SUV. I drove somewhat like a maniac, burning the blue lights and siren. I blasted down University Avenue, then cut across traffic to the entrance of University Hospital, seeing striking EMTs on either side of the drive. I flew up the drive to the back parking lot, tires screeching as I pulled in.\n\nBuddy was still whimpering. I grabbed him and ran into the hospital. The elevator was unbelievably slow. Running down the hall with Buddy, I saw Father Romano coming out of Amy's room.\n\n\"You're just in time, Commander.\" said the priest sadly. Then he added \"I've just given Amy the Last Rites.\"\n\n\"Thank you, Father.\" I said. Steeling my resolve, I opened the door and went in.\n\nTeresa was at Amy's right side, holding her hand. Todd was standing behind Teresa. The intermittent sound of the machine monitoring Amy's heartbeat showed the weakness.\n\nI went to Amy's left side, and sat Buddy down next to her. The young girl was barely able to open her eyes.\n\n\"Buddy!\" she whispered, a smile of joy forming on her face. Buddy settled down next to her, and she petted his head with her left hand, stroking down the back of his neck. \"Buddy, you're here with me...\"\n\nWith barely any light in her eyes, Amy looked up at me. \"Will you... take care of Buddy for me?\"\n\n\"Like my own family.\" I said. \"Buddy will be fine.\"\n\n\"Thank... you...\" the girl whispered. She looked back at her dog. \"I love you, Buddy.\" Buddy looked at Amy, watching her eyes. For several interminable minutes, her hand stroked him, slowly... getting slower each time.\n\nTeresa looked up. A bright light seemed to be filling the room, filling her eyes. She thought she saw her sister Alexis's form next to her. \"You've done well, Sister.\" she thought she heard her sister say. \"I'll take Amy home. Avenge her...\"\n\nAmy's hand was barely able to move as she petted her dog for the last time. Then her hand slipped down his side to the bed. Buddy had been looking at Amy, and now he looked up at me. It did not take the steady tone alarm of the heart monitor for either him or me to know. \n\nA teen girl that had fought to take care of her dog, and then fought for her life, was finally at rest and peace, her last chance to live taken ruthlessly by unspeakable Evil.\n\nAmy was gone.\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "crime drama",
        "police drama",
        "dark side"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/hampered-in-his-plans-ch-04"
}