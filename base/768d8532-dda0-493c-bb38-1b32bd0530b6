{
    "title": "Unexpected Visitor",
    "pages": [
        "With Chloe, my wife of fewer than two years, still away on one of her frequent business trips, I'd spent the morning bathing and shaving away any trace of body hair from myself. From there, I grabbed my laptop and watched dirty movies in the living room while sitting on the couch. I started out watching clips of girls flashing their bodies to strangers in public. But I was soon moved onto nastier topics. I even spent nearly an hour shopping for a chastity cage. I almost bought one too but was never able to bring myself to complete the sale. Chloe would have seen the charge on her credit card. She tolerated some of my kinkiness, but a chastity cage was something she couldn't accept. Someday I'd buy one and keep myself chaste whenever she had to leave on a trip.\n\nGoing back to the movies, I wound up watching fem-boys in chastity cages milking themselves on dildos. I never once touched my skinny, little, smooth penis. It was aching for attention, but I kept myself from touching it. In the end, I made my way back to the chastity cage shopping. I even added it to my cart, but still didn't finish the sale.\n\nBy then I was beyond any normal level of arousal. I left my computer on the couch and moved to my bedroom. From the box tucked away in the back corner of my closet, I pulled out a bottle of lubricant, my hot pink butt plug, and my long, flesh-colored dildo. These were the toys Chloe did not approve of. The only time I was able to play with them was while she was away. Thankfully, she'd been traveling so often for her work.\n\nButterflies arose in my stomach while I held the dildo and buttplug in my hands. I cherished my time alone with my toys. It started while still living at home with my mother. During that time, I used vegetables and anything else I could find with a phallus shape to penetrate my body.\n\nAfter crawling onto my bed on my knees, I applied an ample amount of lubricant to the buttplug before lowering my shoulders to the bed and keeping my butt up high. I lubed myself thoroughly, between my cheeks and over my quivering little button. Very slowly, I began to work the buttplug inside of me. It had been more than two weeks since I'd had my special alone time and I'd been looking forward to it. I controlled my excitement and took my time with the initial penetration. Soft moans and whimpers left my mouth as I stretched around the wider parts of the unyielding plug.\n\nWhen my tight ring of muscle stretched around the widest part of the plug, I kept my body from sucking it inside. I held the plug right where it was so my wrinkled hole was stretched over the widest, thickest part. It felt so good. My hips were wiggling around and my penis was leaking its excitement onto my bedcovers. I squirmed around on the bed dreaming of being just like the fem-boys in those videos. I whimpered softly when I thought about a video being made of me and people, strangers watching it and getting turned on.\n\nAfter I'd nearly driven myself crazy with desire, I let the buttplug slip all the way into my body with its wide base nestled between my cheeks. Needing this afternoon to be as exciting as possible, I slid off my bed and tiptoed through my house toward the kitchen. With every step I took, I felt the plug moving inside of me. It was a delicious sensation!\n\nI didn't rush by any of the big windows, I took my time strolling by them naked and hyper-aroused. If our neighbors got a peek, it would only turn me on more. Unfortunately, or maybe, fortunately, I didn't see anyone outside. In the kitchen, I got a small glass of water and stood by the sliding glass doors while I sipped on it. I was really hoping our neighbor, Mrs. Ross would be in her yard and see me. But no such luck. Ever since the day she'd stopped by to visit with Chloe and saw me standing, bottomless, in the corner with a red bottom, she had become very flirty. I'll never forget how it felt to be standing in that corner while Chloe told her how I'd used her credit card to buy myself a buttplug.\n\nSetting my glass down, I returned to the glass doors and slowly slid them open. Taking a deep breath and summoning all my courage, I stepped outside into the warm sunshine. I was completely naked with a buttplug buried in my bottom. I was extremely horny and my little penis was as stiff as a pencil. I stepped away from the door and made my way to the middle of our yard. Holding my arms up high, I spun around in circles and giggled before racing back inside. The fear of being outside and being seen was scary and a huge turn-on. But at that moment, it was scarier.\n\nOnce I'd made it back to my bedroom, I wiggled the plug out from inside of me. After cleaning it, I put it away in the box. It was time for the main event. I took my time lubing up the flesh-colored, realistically shaped dildo. My small hands sliding over the veiny rubber made me shiver with excitement.\n\nAfter getting back on my knees with my shoulders against the bed, I lined the dildo up with my wrinkled button. I considered going back and buying the chastity cage I'd been dreaming about for so long. But when that slippery dildo bumped against my still gaping hole, I knew what I'd be doing for the rest of the day. Pushing gently, I opened up and the dildo slid inside of me. Still avoiding my desperate penis, wanting to cum like the fem-boys in the videos, if I let myself cum at all.\n\nFor the next several hours, I rolled around on my bed sliding that big, fat dildo in and out of my bottom. The orgasm within me grew every time that dildo slid over that special place deep inside of me. When I felt myself getting too excited, I slowed down or completely stopped until I settled down. That afternoon, I edged myself dozens upon dozens upon dozens of times. My little, bald penis was leaking like a faucet. My mind was fuzzy, I could hear myself panting and moaning. Naked, hairless, laying on my back with my knees bent, my penis aching for release and a dildo buried in my bottom, that was exactly how I looked when my mother-in-law barged into the room unannounced.\n\nHer name was Betsy, but even before Chloe and I were married, she insisted I call her 'Mumsie'. Mumsie was the sweetest lady. Whenever Chloe was out of town for business, which was quite often, Mumsie would stop in to check on me every other day. But she had been there the day before. She wasn't supposed to stop by again as soon. And she usually knocked on the front door. She didn't usually use her key.\n\nMumsie was wearing a white and red, floral print summer dress with large red buttons down the front. On her feet, she wore low, white heels. Mumsie was not a thin woman. She would best be described as full-figured. She had enormous breasts, each of them larger than my head. Her wide hips swayed with every step she took. And her big behind nearly filled the doorway she stood in. Her light brown hair was pulled back into a bun. She held her large-brimmed, white summer hat in one hand and was covering her mouth with the other in surprise. Her eyes were opened wide and I heard her audibly gasp.\n\nHer voice matched her expression, surprised, \"Sammy! Oh my! What are you doing?\"\n\nI squealed, let go of the dildo, squeezed my legs together, and covered my face with both hands. The combination of all I had done that day, seeing Mumsie in my doorway, and hearing her voice was too much for me to handle. With the dildo still buried inside of me, my skinny penis flexed hard and stood straight up. Right there with Mumsie watching, my little, bald penis erupted. My toes curled up tightly and my body began to tremble. I felt muscles all over my body quivering and flexing. My back arched deeply and then it happened, big spurts of my creamy love oozed from the squishy pink head of my penis. I lay there, not touching my penis at all. I kept my face covered to hide my shame but knew Mumsie had stepped closer to get a better angle. When I felt the bed shift, I knew she'd sat down beside me. I came with Mumsie sitting right there watching it all. It was the most powerful and intense sissygasm I'd ever had.\n\nWhile I lay there, still hiding behind my hands, Mumsie laid her large, warm hand on my bare knee. \"Sammy, Honey, you don't need to be embarrassed.\"\n\nI whimpered from behind my hands, \"Yes I do!\"\n\nShe rubbed her hand up and down my thigh, \"No, you don't. Sammy, that may have been the cutest thing I've ever seen.\"\n\nI kept my hands over my face and looked away from where she sat, \"No, you're lying.\"\n\n\"I'm not. I promise. I didn't know a boy could cum without touching himself. And you shaved. My goodness, you look adorable!\"\n\nI slowly lowered my hands away from my face until I saw Mumsie's smiling at me. \"Do you really think so? When I've shaved before, Chloe says I look like a little boy.\"\n\nMumsie smiled warmly, \"You do look like a little boy. Especially with that little-bitty penis of yours. Chloe once mentioned it was small, but I thought she was fibbing.\"\n\nI scooted over and got a handtowel from the top drawer of my bedside table. I wiped up my mess and folded the towel over the gooeyness before setting it on the edge of the bed. Biting my lip, I looked into Mumsie's eyes and whimpered, \"Mumsie, Chloe hates it when I do this. She is going to punish me when she finds out I shaved again. She says it makes her think that I'm gay.\"\n\nShe replied, \"I won't tell her, I promise. But are you? Are you gay?\"\n\nI spoke with a timid voice, \"I don't think so. But... I mean... I think about it. I think about lots of things. But I do think about being with a man.\"\n\nMumsie's hand slipped between my legs and she gently tapped on the base of the dildo still buried deep inside of me. \"My sweet, little Sammy with a big, tall, grown man. Now I'll be thinking about that too.\" Every time she tapped that dildo, the sensation shot through my body and I twitched.\n\nAfter not saying anything for a few moments, she looped her fingers around the dildo and pulled it out just a little bit before pushing it back inside. I whimpered softly and gripped the bedcovers with my fists.\n\nMumsie was staring at my little penis as it stiffened before her eyes. \"Sweetie, tell me one more thing you think about.\"\n\nMy hips began to grind when she slid the dildo back out and in. \"I-I-I think about people, strangers seeing me outside, like this.\"\n\nMumsie grinned, \"Like how?\"\n\nI arched my back and squirmed while clutching the bedcovers with white knuckles, \"Like naked... and horny... or maybe... maybe...\"\n\nShe began sliding the dildo in and out of me at a steady pace. My skinny penis had never softened and remained completely stiff while the shame of having Mumsie see me began passing. I slowly let my knees spread further apart, allowing her an unobstructed view of my small, bald penis. I whimpered and moaned while she made love to me with the dildo.\n\nHer voice was soft and understanding when she asked, \"How do you want people to see you? Tell me, Honey, I promise it'll stay between the two of us.\"\n\nI couldn't look at her. I covered my face with my hands and looked away. \"I have always thought about... I used to before Chloe... But I haven't since... I mean...\"\n\nMumsie slid the dildo almost all the way out before pushing it back in very slowly. My toes curled up again and my back arched deeply. It felt so good!\n\n\"What did you used to do before Chloe? Tell me, Honey. It's okay. You're safe.\"\n\nMy voice cracked and I whimpered softly while spreading my legs as far apart as I could. \"I-I-I used to wear... I'd dress up in my sister's clothes.\"\n\nMy bald, skinny penis was standing straight up again. Mumsie had found the magic spot inside of me. She was bumping the dildo against it and it was making me tingle all over.\n\nHer eyes were moving from my stiff penis to face and back again. In that same kind tone, she asked, \"When was the last time you played dress-up?\"\n\nI squeaked, \"Before we were married.\" I tried to calm down when I went on to explain, \"When Chloe found my little suitcase of girl's things, she got really upset and threw them all away.\"\n\nMumsie looked sad, \"You poor boy. You couldn't even wear Chloe's things, they would be far too big for you.\"\n\nBiting my lower lip, I nodded my head and whimpered, \"I know!\"\n\nShe spoke in a soft voice, \"Sammy, I bet you'd look adorable in a little dress. I would love to take you out shopping. You could keep those things at my house. And whenever you wanted to play, you could come to visit me.\"\n\nI squirmed on the bed while she continued to slide the dildo in and out of my bottom at a slow, steady pace. I squeaked, \"I'd love that, Mumsie!\"\n\nShe grinned and uttered a single word, \"Good.\" She then pulled the dildo all the way out from inside of me. Mumsie then stood up from the bed, turned back to face me, and offered me her hand. \"Let's go shopping!\"\n\nI squirmed and writhed on the bed, \"But Mumsie, I can't go like this. I'm really...\"\n\nShe smiled down at me, \"You're what? Horny? I know you are, baby boy. I want you to be just like this when you step out of a changing room and model a dress for me.\"\n\nListening to Mumsie tell me I'd be modeling a dress for her in a store was like a fantasy come true. Not wanting to disobey her, I wiggled off the bed and rose to my feet. My little penis was pointing at the ceiling and my bottom was tingling from the attention it had received. Biting my lower lip, I looked up at Mumsie. Like Chloe, she stood a full head taller than my 5'2\" height. I was never sure how much Mumsie weighed, but she had to be 2 if not 3 times my 95-pound weight. While I stood there naked and extremely aroused before her, my eyes kept dipping to the ample cleavage left exposed by her summer dress.\n\nMumsie turned away from me and moved to my dresser. She began searching through my drawers looking for something for me to wear. She soon handed me a pair of gray cotton shorts and a white T-shirt. I didn't have to ask about underwear, I knew she'd left that out on purpose.\n\nShe grinned, \"Panties are going to be the first things we buy.\"\n\nHearing my mother-in-law tell me she was going to buy me panties made me shiver and goosebumps rise all over my body. For a brief moment, I thought I was going to squirt right there. But the feeling calmed down and the danger of making another mess passed.\n\nAfter I'd gotten dressed and stepped into my flip-flops, Mumsie frowned, \"Hmm, something isn't right.\" She then took hold of the waist of my shorts and pulled them up, giving me a wedgie! She then rolled down the waist of the shorts far lower than my usual shorts sat which left a strip of my pale tummy exposed. Reaching back, I found the shorts were clinging to my cheeks and the center seam had disappeared between them. Moving my hands lower, I felt the bottom third of my cheeks were left out in the open and the impression of my little erection was right up front for everyone to see!\n\nMumsie took my hand and we left my bedroom and walked through the house locking it up. While passing through the living room, she noticed my laptop still sitting open. When she moved to close the lid, the screensaver ended and the chastity cages I'd been looking at caught her attention. She paused to see what I'd been looking at. After sitting down on the couch, she scrolled down the page to see the different styles and materials they were made from.\n\nShe eventually whispered, \"Chastity cages?\"\n\nIt sounds silly after all she'd seen me do, but I was terribly embarrassed when I squeaked, \"Yes, Mumsie.\"\n\nShe closed the laptop, set it on the table, and stood from the couch. While offering me her hand, she said, \"Change of plans. We'll get panties after we buy you a chastity cage.\"\n\nI shivered again and felt my skinny penis flex hard. When I looked down, I saw it had been leaking in my shorts and the wet spot looked lewd. The pink head of my rigid penis was resting right in the middle of that moist spot.\n\nMumsie didn't give me time to dwell on that moist spot. She took my hand and after locking up my house, she led me directly to her car parked in our driveway. Mumsie kept looking at me and smiling while driving out of our neighborhood, but she seemed to be thinking and I didn't want to interrupt her thoughts. I sat silently in the passenger's seat while being driven to an unknown destination.\n\nAfter we'd left my neighborhood, Mumsie finally spoke. \"Chloe doesn't tell me very much about your relationship. But she did once tell me that you liked some kinky things.\" I squirmed in my seat and blushed. She went on to say, \"What I can't understand, is why she dislikes them and forbids you from playing. Sweetie, I find every kinky thing about you very exciting and I'd never discourage you from doing them.\"\n\nI giggled and teased, \"I know! You're taking me shopping for a dress!\"\n\nShe smiled while turning into an adult bookstore. \"I'm going to be buying you more than just a dress.\"\n\nAfter parking near the front door, she climbed out of the car and came around to my side. After opening my door, she offered me her hand. I didn't take it right away. In a timid and frightened voice, I explained, \"Mumsie, I don't know about this. Maybe I don't want a chastity cage. I've never been in a store like that and I don't think I want to.\"\n\nShe frowned while leaning down and taking my hand, \"Nonsense. I think you do want your little penis locked up. And I know I'd love to do that for you. Come along. This is only our first stop of the day.\"\n\nAfter I'd slid out of the car, Mumsie led me to the front door. All the windows and doors were blacked out and it made the building look scary. Mumsie opened the door and had me enter first. I'd barely taken a step before a man's voice called out rather firmly, \"ID. I need to see your ID.\"\n\nSpinning back to Mumsie, I squeaked, \"I don't have my ID. I don't have my phone or anything.\"\n\nMumsie stepped toward the man behind the counter, \"I'm sorry but my son-in-law doesn't have his ID. But I can promise you the boy is of age. Just barely, but he is of age.\"\n\nThe man didn't look happy, but he said, \"Son-in-law, huh? Okay, but be quick.\"\n\nMumsie thanked the man and asked, \"Could you point us in the direction of your chastity cages?\"\n\nThe man leaned over the counter and took a long look at me. His gaze lingered on my still stiff penis and its small moist spot. He seemed to cheer up and pointed to racks along one wall, \"Right by the handcuffs and gags.\"\n\nMumsie thanked him, took my hand, and led me further into the store. After I'd stepped away from the counter, I happened to look back and caught the man staring at my butt and licking his lips. I turned back quickly and raced along to keep up with Mumsie's long strides.\n\nThe aisle we walked down was filled with all sorts of kinky toys. There were edible panties, racy lingerie, blindfolds, dildos, and more. As we neared the area the man had sent us to, Mumsie paused and took a box from the rack. Glancing at the box she was holding, I saw it was a remote-controlled, vibrating buttplug.\n\nMumsie looked down at me, \"We're getting this too.\"\n\nI whimpered softly, \"For me, right?\"\n\nShe grinned, \"Definitely for you. But I'll hold the remote.\" She then handed me the package to hold onto while she continued to shop.\n\nI was shivering and squeezing my cheeks together as we finished making our way to the chastity belt selection. They had metal cages, plastic cages, big ones, small ones, there were just as many as I'd been fantasizing over online. When Mumsie asked which one I liked. I pointed to a clear plastic cage with an almost 3-inch length.\n\nMumsie frowned, \"Baby boy, you could almost get erect in there.\" She picked a package from the rack. It showed an opaque pink silicone cage with less than an inch-and-a-half in length. It was called, \"The Sad Sissy Trainer\". She stood there in the aisle reading the package while I remained beside her throbbing in my shorts and holding the vibrating buttplug.",
        "After she'd finished reading, she handed me the box, \"Yes, this will be perfect.\" We almost started walking down the aisle when a steel lock caught her attention. Taking one from the rack and adding it to the packages I held, we finally made our way back to the counter. While the man was alternating between checking me out and checking us out, Mumsie had him add a tube of lubricant and batteries to our order.\n\nBefore he loaded everything into a bag, he asked Mumsie, \"If you want to plug him and lock him up before you leave, you can use one of the booths in the back.\"\n\nMumsie smiled, \"Well thank you. I think we'll take you up on that offer.\"\n\nAfter grabbing my hand, she led me to the very back of the store and down a dark hall with doors lining both sides. Mumsie chose the very first one on the right. Inside, on a small screen played a preview of a very hardcore movie of a girl with several large black men.\n\nMumsie held the flimsy door open for me and after she followed me inside. Before she sat down on the only chair, she closed the door and locked it. When she told me to take my shirt and shorts off, I got worried. The door was very flimsy and if someone wanted in, they could break the door open easily. But there hadn't been very many people in the store since we'd arrived. The odds of someone doing that were slim. It was just my mind running wild.\n\nMumsie had me stand between her knees while I took off my shirt and shorts. While I undressed, she got things ready. I slowly pulled my shirt up and off and laid it over Mumsie's thick thigh while she opened the chastity cage and began disassembling it. I took a deep breath and hooked my thumbs under the waist of my shorts. I slowly lowered them down my legs and then stepped out of them one foot at a time, laying them over her thigh on top of my shirt.\n\nI was standing naked in a video booth in an adult bookstore with my mother-in-law! My skinny, short penis so stiff it was pointing straight up. When she had the cage ready to put on me, she looked up and saw my little hard-on.\n\nShe frowned, \"Well, this isn't going to work. You need to make that little thing get soft.\"\n\nI bounced on my toes and nervously whimpered, \"I know!\"\n\nMumsie grinned, \"Well, I suppose this will be your last one for a little while. It should be memorable.\" While still looking right at me, she leaned down and took it in her mouth to the very root. It was the last thing I expected. The feeling and sensations were overwhelming. I was bouncing on my toes and waving my arms around like crazy.\n\nI'd been so excited for so long, I wasn't going to last long and we both knew it. When I got right on the verge of squirting, Mumsie sealed her lips around the skinny neck of my penis. But she wasn't moving at all. Like before, my penis squirted all on its own. I squeaked when the first glob oozed onto her waiting tongue. My whole body was trembling and I'd completely forgotten where we were. At that time, it didn't matter.\n\nMumsie swallowed my juices and kept my penis in her mouth until it softened which took several minutes. While I stood there, I jumped at every sound I heard. Each time the store's front door opened and I heard someone talking, I felt like jumping out of my skin. No one made their way back to where we were. But the reality of being there in that condition was very real and made my heart pound in my chest.\n\nWhen my penis had wilted to its normal size, Mumsie let it slip from her mouth. She wasted no time I soon had the chastity cage assembled over my penis. Even soft, my penis filled the cage. I knew when I got stiff, it was going to be awfully cramped and probably hurt.\n\nAfter getting the lock unpackaged, Mumsie reached out and put it in place on the chastity cage but didn't close it. Looking up from where she sat, she asked, \"When is Chloe due to return home?\"\n\nBiting my lower lip, I whispered, \"Next week, six days from now.\"\n\nShe smiled and whispered, \"I'm sure you can last six days in your new cage.\" She then snapped the lock shut. The clicking sound of that lock echoed in my mind while I watched her slip the keys beneath her blouse, under her bra. \"How does it feel, Sammy?\"\n\nI squeaked, \"It's tight. It's scary. But it's good too.\"\n\nShe smiled, \"I'm glad. Now turn around, bend over and spread your cheeks for me.\"\n\nTurning away from her, I laid my hands on either side of the monitor that was playing a preview of a girl being fucked by a huge cock in the back of a van driving down the street. Mumsie lubed up the buttplug and then lubed up my behind. The plug took a little time to get inside, but not as long as it would have if I hadn't been playing earlier. I moaned softly when it slid inside and the base settled between my cheeks.\n\nEven after just squirting, I felt myself becoming aroused again. As my penis began to swell in its cage, I felt the discomfort and arched my back while rolling my hips upward. I whimpered softly, \"Oh Mumsie!\"\n\nShe let her hands slide over my bare sides and down my hips, \"I know Sammy. It feels good.\" Her hands slid back up my sides and I arched my back even deeper. Her voice sounded husky when she said, \"I'm not going to take you home today. I'm not going to take you home until Chloe is on her way home. You'll be staying with me until then.\"\n\nWhen I stood up, pulling myself away from the wall I whimpered as the plug moved inside of me. Turning back to face Mumsie, her eyes immediately dropped to the cute, pink cage keeping my penis captured. Her eyes slowly drifted up my naked, hairless body until she was looking into my eyes.\n\n\"Baby Boy, you have never looked so cute.\" Her eyes drifted over me standing there for a few moments until she grinned, \"I've got a wonderful idea. Sammy, you've wanted people to see you naked and horny. If ever there was a place made for a cute boy to expose himself, it was an adult bookstore.\"\n\nI squeaked, \"I can't Mumsie! Not here!\"\n\nShe smiled, \"Oh yes, here.\" After stuffing my shorts and T-shirt into her purse, she stood up and turned to the door while taking hold of my hand. Mumsie left the litter from our packages on the floor while unlocking the door and opening it all the way. Mumsie stepped into the hallway and dragged me along behind her. I was panicking and trying to hide myself behind my hands. But the only thing I was left wearing were flip-flops, my chastity cage, and the buttplug! I could never hope to conceal my nudity with just my hands. When I tried to hide myself behind Mumsie, she paused, gave me a stern look, and had me walk in front of her while keeping my hands at my sides.\n\nAs we stepped out of the hallway, I quickly scanned the store and saw three men shopping plus the man behind the counter. One of them looked to be in his early thirties, the others were all in their forties or older. The shoppers didn't look up and kept their attention focused on their shopping. But the man behind the counter smiled big enough that I could see his stained teeth from across the store. I thought I was going to faint or vomit, I wasn't sure which.\n\nWhen the man behind the counter called out, \"I see the chastity cage fits.\", the other three men looked up from what they were doing and slowly made their way closer to us to get a better look at the naked boy in a chastity cage.\n\nMumsie ignored the other men when she answered the man behind the counter, \"Yes, it fits perfectly. After all the help you gave us, I wanted my son-in-law to come to show you how cute he looks wearing it.\"\n\nHe arched his eyebrows and asked, \"Did you get that remote plug in too?\"\n\nMumsie dug through her purse until she found the instructions for the plug, \"Yes, it went in without a problem. But I'm a little confused about the remote. Can you explain it to me?\" She then handed the man the sheet of paper.\n\nI stood there naked in my chastity cage while Mumsie and the man got the app downloaded to her phone and paired it with the plug in my bottom. She stood by with the three shoppers while the man behind the counter took control of her phone and my plug. When he turned it on for the first time, I gasped and doubled over. It was vibrating deep inside of me, bumping against my magic spot! It was a terribly intense sensation. I quivered and gasped while he showed Mumsie the 'intermittent' function. It would vibrate and the pause the vibrate again. It was horribly arousing.\n\nMy skinny penis struggled to stiffen and I was learning just how small the cage was. While I was limp, it wasn't bad at all. But even when I started to get excited, the cage kept it bent in a way to keep it from ever getting fully erect. It hurt, but it was far more uncomfortable than it was painful.\n\nThe three men were all standing right at the counter with Mumsie while the man behind the counter drove me crazy with the plug. He taught them all how to increase the intensity of the vibrations and mix it up the frequency of the intermittent function. I was standing in front of Mumsie and all those men quickly becoming the horniest I'd been all day.\n\nWhen the man behind the counter passed Mumsie her phone back, she looked to the other three men and asked if any of them would like a turn. Of course, they all wanted a turn. And for the next half hour, I squirmed and wiggled and ground around that store while the plug vibrated inside of me.\n\nBy the time Mumsie got her phone back, I was covered in a thin layer of perspiration, breathing heavily and my pink chastity cage was pushed out from my body due to my poor penis trying so hard to get stiff. Drips of my excitement were falling from the tip of my cage. I was a horny mess! Somewhere along the way, things got hazy. But I do remember holding Mumsie's hand and leaning against her while we made our way to her car. After I'd calmed down, I squirmed in the passenger's seat on my bare bottom and asked why I was still naked.\n\nMumsie said, \"You didn't ask for them and I didn't offer them. I think you look perfect just the way you are. But if you want to get dressed, your clothes are in my purse.\"\n\nI scooted across the big, bench seat right beside her. I snuggled up even more when she wrapped her arm around my naked body. In a soft voice, I said, \"I think I'm okay. If you want me to stay like this I will.\" Cars were passing us and people could have been looking inside and seeing me, but I barely noticed them. My penis was still cramped in the cage, but at least the vibrations had stopped.\n\nMumsie stroked my naked back while she drove, after a short time, she said, \"I was going to take you to a mall to go clothes shopping. But I know a lady who owns a consignment store. I think she'd be more tolerant of a young boy running around in a dress...\" She hesitated and glanced down at me, \"...or naked.\"\n\nI snuggled my head against the side of her enormous breast and cooed, \"Okay.\" Reaching down between my legs, I felt the chastity cage and tried to squeeze my fingers into the slits to feel myself under the silicone, but the slits were too small. I couldn't even touch my penis.\n\nWhile driving along, she asked, \"Sammy, you're such a good boy. I just told you I would take you into a consignment store naked, and you didn't object at all.\"\n\nI squirmed against her soft body and never looked at her while I explained, \"Everything we've done today, they are things I've always dreamed of doing. All of it...\"\n\nShe rubbed my back gently so I went on explaining, \"Chloe would never, ever do things like you've done for me. I've known that for a long time. And I never thought I'd get to do this stuff. Chastity, the butt stuff, being naked in front of people, being naked in front of you...\"\n\nShe looked down at me and I looked up at her. She asked in a gentle voice, \"Have you thought about me seeing you naked before?\"\n\nI looked away and blushed, \"Yes.\" I squirmed against her before looking up to see her still smiling down at me. \"I've thought about it a lot. And I'm really glad you walked in on me today and saw what I was doing.\"\n\nShe looked back to the road, \"Want to know a secret?\" She didn't wait for a response, \"I've thought about seeing more of your little body too. But I never thought I'd see as much of you as I have today.\"\n\nI whispered, \"I love you, Mumsie.\"\n\nShe squeezed me against her, \"I love you too, Sammy.\"\n\nMumsie pulled into a strip mall and parked at the storefront of her friend's Consignment shop. There were a few other cars in the parking lot and through the windows I could see a few people wandering around the store. She climbed out of the car and came around to my side. With my door opened, she offered me her hand. As I laid my small hand in hers, I felt the butterflies return to my stomach. I nibbled on my lip and tried to stay behind Mumsie while we walked toward the store.\n\nAfter we'd stepped into the store, Mumsie laid her hand on my lower back and guided me toward the lady behind the register. The other people were browsing through the racks of clothes and didn't seem to notice us.\n\nWhen we stepped out from behind the last rack concealing us from the lady at the register, her mouth and eyes popped open wide. Mumsie had me stand just away from the counter so her friend could still see me. Her friend was a full-figured lady just like Mumsie. She wasn't as tall as Mumsie, but she still towered over me. She was wearing slacks and a blouse, both of which were stretched tightly over her ample figure.\n\nIn a surprisingly calm and relaxed voice, Mumsie said, \"Hello Denise. I'd like you to meet my son-in-law, Sammy.\"\n\nShe smiled at me while her eyes drifted over my naked, hairless body and my pink chastity cage. She was nervous and glanced around the store before saying, \"It's nice to meet you, Sammy.\"\n\nAs I opened my mouth to respond, Mumsie turned on the vibrations of the buttplug. I gasped, doubled over and my legs immediately felt like jelly. I had to lean against the counter to keep from falling.\n\nMumsie spoke to Denise, \"Chloe is out of town again and I stopped in check on Sammy this morning. I accidentally walked in on him while he was playing with a surprisingly large dildo.\" Denise gasped out loud. Mumsie didn't pause, she went on, \"I had to say something. So, I sat down, and we a conversation about how normal things like that are. During that conversation, I also learned little Sammy had an interest in Chastity. So that was our first stop.\"\n\nDenise stared at me standing there in my chastity cage while I writhed from the vibrations of the plug, \"I can see that.\"\n\nMumsie turned up the vibrations, \"And now we're here. Because during that conversation this morning, I also learned Sammy liked to wear dresses and girly things. Do you think you can help us, Denise?\"\n\nStill looking very nervous, she pointed to the side of the store where a woman was flipping through the racks, \"The junior sizes are over there.\"\n\nJust before we began walking across the store, Mumsie turned off the vibrations. I took a second to catch my breath before following along beside her. When we got to the aisle, I kept Mumsie between me and the other woman in the area. Before beginning to look, Mumsie glanced at me and muttered, \"Four, I bet you're a four.\" She then looked toward the other woman and called out, \"Excuse me, can I ask your opinion?\"\n\nThe woman looked up from the rack and saw me trying to hide. Mumsie pulled me in front of her and asked, \"What do you think my son-in-law's dress size is? I'm thinking a four.\"\n\nShe responded, \"He's your son-in-law?\"\n\nMumsie smiled proudly, \"Yes, we're out for a day of shopping. You see, Sammy loves to play dress-up. But my daughter simply won't allow it. With her being out of town, it was the perfect time for the two of us to pick him up a few things to wear until she gets back.\"\n\nThe woman shook her head from side to side while saying, \"My son-in-law is a jackass. Why can't he be more like yours?\"\n\nMumsie smiled proudly, \"I guess I'm just lucky!\" She paused before asking, \"What do you think, a four?\"\n\nThe woman let her eyes wander over me once more before answering, \"Yes, about a four...\" She didn't finish her thought when she noticed a drip of my excitement beginning its slow descent from my pink cage. \"May I ask why you want to put him in a dress? If he were mine, the boy would never wear more than that little cage.\"\n\nMumsie got my attention and said, \"Sammy, why don't you show this nice lady what else you're wearing.\"\n\nBiting my lip, I knew exactly what she meant. Turning my back to the lady, I parted my legs and slowly bent forward. I saw her walking toward us from between my legs. And when she was close enough to reach out and touch me, Mumsie turned the vibrations back on at the highest intensity. I popped up and fell back against the woman who caught me in her arms. I squealed, \"Mumsie!!\"\n\nThe lady held me while her hands slid up and down my sides until coming to rest on my hip bones. The lady moaned, \"Fuck yes. He'd never wear more than the chastity cage and butt plug.\"\n\nMumsie varied the intensity and frequency of the vibrations in my plug. While she played, she said, \"You do have a point. We both love him running around like this. And if I put him in a dress, it would hide his little cage.\" Mumsie finally turned off the plug and let me catch my breath and regain my balance.\n\nThe lady furrowed her manicured brow, \"Hang on. I saw something down here. I'll be right back.\" And with that, she walked back to where she'd been standing earlier. After browsing through the rack, she pulled a piece of clothing that was tinted pink but completely transparent. It looked very short with thin, lacey spaghetti straps. I shivered when she brought it toward Mumsie and me.\n\nThe lady pulled the garment into a loop while walking toward me. She didn't ask, she didn't need to. I slowly raised my arms and let her slide the camisole down over my hyper-excited body. It fit my body loosely and ended just above my belly button. My bottom and chastity cage were left completely uncovered. It was decidedly feminine and matched my chastity cage perfectly. The lady stepped back and smiled, seeming to be very pleased with how I looked.\n\nMumsie looked at me and had me turn around in a circle. \"I like it, but I'm not sure.\" She looked over the racks of clothes before looking back at me, \"Sammy, there are a few shoppers, plus Denise. Be a good boy and go ask their opinion on how you look. We'll let the majority will decide if we get it for you.\"\n\nBiting my lip nervously, I almost asked if I had to. But in the end, I stepped away from those two ladies and slowly made my way toward Denise. When I stepped in front of the counter, I squeaked, \"Excuse me, Denise?\"\n\nWhile she looked up at me, the vibrations began slowly and at big intervals. I had to fight to keep focused on what I had to do. Denise didn't say anything, her eyes drifted over me and I somehow managed to say, \"Mumsie, I mean Betsy wants me to ask you if you approve of my outfit.\"\n\nShe looked a little worried, \"I do. But don't you want to wear something down lower?\"\n\nI squirmed my hips in circles and tried not to pay attention to my poor penis being so cramped in its cage. I whimpered softly, \"I am. My cage. I'm wearing my chastity cage. And I think that's all Mumsie wants me to wear.\"\n\nShe looked up over my head in the direction of Mumsie. When she next looked at me, she was smiling, \"You do look awfully cute dressed like that. I'd have to say I do approve.\"\n\nWith her answer, I thanked her and made my way to the back of the store, and began searching for other people. After passing two aisles, I found a man who looked old enough to be my father. He was searching through a rack of work clothes. He looked up and saw me as I tiptoed toward him, his attention zeroed in on my chastity cage.\n\nHis voice was deep and rather sexy, \"Well, hello there Cupcake.\"\n\nMy voice was squeaky when I explained, \"Hi. Um, my Mumsie wanted me to ask you if you approved of my outfit.\"",
        "He grinned wide, \"If it were up to me, every boy as cute as you would have to dress just like that.\"\n\nAs he finished that thought, the vibrations began again and this time more savagely than before. I gasped, ground my hips around, and finally leaned against the man while laying my hands on his chest. He wrapped his arms around me to keep me from falling. One of his hands wound up on my bottom and he must've felt the vibrations. Before I knew it, one of his fingers had slipped between the pale, round globes of my cheeks and was tapping against the base of my plug. That rhythmic tapping on my plug turned up my arousal even more.\n\nHis voice was even deeper and raspier when he said, \"Someone around here knows how to properly treat a boy like you.\" He was looking over the racks while still tapping on the base of my plug. When the vibrations finally stopped, he held my shoulders and looked down at me, \"Are you with the lady across the store? She the one that sent you over here?\"\n\nI moaned, \"Yes!\"\n\nHe patted my naked bottom and said, \"You can tell her I more than approve. And you can tell her seeing you has made my day. It isn't often I get to see a cute boy running around dressed in as little as you.\"\n\nMy breaths were coming in gasps when I stepped away from the man and continued to look for anyone else to ask. On the last aisle, I saw two ladies and a girl all shopping together. The girl looked to be in her early twenties, about my age. The women were closer to Mumsie's age. As I made my way toward them, they all looked up before I got near them.\n\nThe girl about my age exclaimed, \"Holy shit!\"\n\nOne of the ladies covered her mouth with her hand.\n\nThe other looked at me disapprovingly. She began telling me, \"Young man, you can't be in public dressed like that! You need to get some clothes on this instant!\"\n\nFeeling like I was about to cry, but that was interrupted when the plug began vibrating again. I squirmed and wiggled my hips and finally wound up bracing myself against a nearby shelf. Right away, a drip of my excitement began falling toward the floor. It was followed up by another.\n\nThe woman who had first covered her mouth spoke to the woman who had scolded me, \"Calm down Ellen. The boy has got the sort of body to wear that sort of thing. Just look at him. He's gorgeous and obviously very aroused.\" That woman took hold of my hand and raised it above my head. I turned like an awkward ballerina in slow motion, writhing around in a frenzy the entire time.\n\nI finally worked up the strength to ask what I'd been sent to ask, \"Hi. My Mumsie sent me here to ask if you approve of what I'm wearing.\"\n\nThe sour woman asked, \"Mumsie?\"\n\nI bit my lower lip and explained, \"She's my mother-in-law.\" The vibrations finally turned off giving me a break from the torture. I tried to catch my breath and calm down. My little chastity cage was pulled out from my body and my little marbles were being pinched by the ring of the cage.\n\nThe younger girl pointed over the racks of clothes, \"That's got to be her over there. She's waving.\"\n\nAfter I'd asked again, the nice lady and girl both agreed that they approved. The sour woman gave me a firm 'NO'.\n\nI was extremely horny when I turned away from the group of women and made my way back to Mumsie. I didn't bother looking for anyone else to ask. I was so horny I wasn't thinking straight at all. I eventually found her standing near the register chatting with Denise.\n\nWhen I got close, she asked, \"What did everyone think?\"\n\nI whimpered, \"Four yeses and one no.\"\n\nMumsie reached down and gracefully pulled the cami off of me, leaving me standing there in only my chastity cage and plug again. Mumsie laid the cami on the counter and told Denise we'd take it. After it had been rung up and paid for, Mumsie asked for a bag. She told Denise I wouldn't be wearing it on the drive home.\n\nAfter all that I'd done since walking into that store, I was impossibly aroused. The chastity cage seemed to emphasize my horniness. It made me squirm and constantly think about how horny I was. When Mumsie began chatting with Denise about her business, I tugged on her arm. When she bent down, I whispered in her ear, \"I'm really, really horny, Mumsie.\"\n\nShe stood up and right there in front of Denise, she said, \"I know you're a very horny boy. But I just put you in your cage a little while ago. Do you already want me to let you out?\"\n\nI nodded my head and whimpered, \"Yes, please, Mumsie! Pretty please!\"\n\nShe frowned, \"Well, that's not going to happen. But, if you behave yourself, perhaps when we get home I'll let you spend some time under my dress.\"\n\nI groaned, \"Oh Mumsie!\"\n\nShe looked at Denise who was completely flabbergasted at what she seen and heard from the two of us since we entered her shop, Mumsie then told her it was time to get me home. Denise didn't respond, she stood there staring at us, trying to comprehend all that had occurred. I never looked back, but I'm sure she watched the two of us as we left her store.\n\nAs we stepped out of the shop, I asked, \"Are you really going to send me under your dress?\"\n\nAfter opening my door and I'd sat down on my bare bottom which drove the plug deeper inside of me, I whimpered and squirmed until I got more comfortable.\n\nMumsie leaned into the car, kissed my nose, and said, \"Yes, when we get home, you'll be spending some quality time under my dress. You aren't the only one who has gotten horny today. And I'm not in a chastity belt. I can have as many orgasms as I want. Unlike you who will remain in your little cage until Chloe is on her way home. I meant that Sweetheart.\"\n\nI whimpered while spreading my legs wide apart and pulling on the chastity cage, \"But Mumsie! I'm really horny! I don't know if I can wait.\"\n\nShe smiled, \"You may not want to wait. But I know you can.\" During the drive home, I squirmed in the seat beside her and couldn't stop myself from tugging on my chastity cage. Even with my penis struggling to become erect, it didn't really hurt. Not like a spanking or stubbing my toe. No, the cage was just really uncomfortable.\n\nMumsie kept looking at me tugging on my chastity cage while we drove those first few blocks. After pulling to a stop at a light, she reached under her dress, into her bra, and pulled out the small key ring containing the two keys to the lock on my chastity cage. She slipped her pinky into the ring and let the keys dangle from it while she returned her attention to the road.\n\nWhile driving along, Mumsie asked, \"Sammy, Sweetie, can I trust you?\"\n\nI stared at that pair of keys and whispered, \"Yes, of course.\"\n\nWithout looking away from the road, she said, \"You know I want you to remain locked up until next week. Do you know how disappointed I'd be if you somehow cheated and got out of your cage before I wanted you to?\"\n\nMy eyes remained on those keys while still tugging and pulling on my chastity cage, \"I think so. You'd be very disappointed with me.\"\n\nShe glanced at me and had a very serious look on her face. \"That's right. I'd be so disappointed in you that I'd never play with you again. We'd never have days like this ever again.\"\n\nBiting my lower lip, I whimpered, \"I don't want that.\"\n\nShe glanced at me once more before looking back at the road, \"I don't want that either. I want us to have lots of days like we've had today. But for that to happen, I need to be sure I can trust you.\"\n\nI squeaked, \"You can trust me! I promise!\"\n\nShe glanced at me and grinned, \"I hope I can.\" She then handed me the keys to my chastity cage. She laid them in my hand! \"I want you to hold onto these for a little while. But I don't want you to use them. Just hold them for me.\"\n\nSitting in the passenger's seat, I held the keys in both of my hands. To me, they were the most precious thing in the world at that moment. I whimpered, \"Mumsie, I'm really, really horny!\"\n\nShe pulled to a stop at another light and turned her attention to me. \"I know, Baby. And I imagine it's only going to get worse the longer you spend in your little cage.\"\n\nMumsie let go of the wheel with her hand furthest away from me and dropped it to her lap. She pulled her phone out from between her legs and after tapping it a few times, the plug in my bottom began vibrating slowly. I moaned and arched my back deeply.\n\nIn a soft voice, she asked, \"Sammy, on a scale from one to ten, how horny are you?\"\n\nI groaned, \"A million! A billion!\"\n\nShe grinned and said, \"Sammy, put the key in the lock. But don't turn it.\"\n\nI was writhing in my seat and my hands were trembling as I lined the key up with the lock and slid it inside. Before I'd let go of the key, the vibrations in my bottom stopped. When they started again, they were more powerful, but only lasted for a moment. But she'd made it vibrate intermittently. It started up again, stopped, and started again.\n\nI moaned, \"Mumsie! This is so hard!\"\n\nShe set her phone aside and let the plug continue to torture me while she drove toward her home. She chuckled, \"Actually, it's not hard. Your little cage is keeping it from getting hard.\"\n\nI squealed, \"That's not what I meant!\"\n\nMumsie reached over and set her hand up my naked thigh. It slid upward slowly until she was close enough that she could slide her finger over my cage and make the second key bounce back and forth across my cage. She felt my body react each time the plug began vibrating. Her voice was raspy when she uttered, \"I am really enjoying this. Knowing how horny you are and unable to do anything about it until I allow it is a bit of a power trip.\" She moved her hand away from my cage and moaned, \"Sammy, I want you to leave the key in the lock and hold onto it until we get home. But don't turn it or our game will be over forever.\"\n\nFor the next several miles, I sat there naked, holding the key in the lock of my chastity cage. The plug in my bottom was vibrating rhythmically. I'd edged myself for the better part of a day before. But even that couldn't compare to how horny I was during that drive. All I had to do was turn the key and I'd be able to end the torture. But I couldn't. That wasn't what Mumsie wanted. She wanted me to wait until Chloe was on her way home, six days away. I hadn't even gone one day and I was already insanely aroused and desperate for relief. But I would do whatever I had to do to wait for permission from Mumsie. I couldn't imagine not ever having days like this again.\n\nWhen the car turned away from her house, I timidly asked, \"Where are we going, Mumsie?\"\n\nShe didn't look my way, she kept her eyes on the road, \"We're going someplace to get something I've been thinking about all day.\"\n\nI held the key between my fingertips and squirmed with each vibration of the plug. I didn't ask for more information on where we were going. I knew I'd find out when we got there. And after all I'd been through that day, I wasn't about to refuse her now.\n\nAs she turned down a familiar street, I got the idea of where she was taking me. When she pulled to a stop in that same parking place near the front door of the adult bookstore, I whimpered softly, \"Mumsie, why are we back here?\" From the look of the parking lot, I guessed there would be fewer customers than before.\n\nShe turned in her seat toward me. She smiled while her eyes drifted over my overexcited body. \"Sammy, I've been thinking about something since I saw you sliding that dildo in and out of yourself this morning. Baby Boy, we're going to go back into this store and have that nice man help us buy a strap-on. I've always wanted to use one of those on someone.\"\n\nI squeaked while still holding the key, \"I've never done that before!\"\n\nShe moaned, \"Neither have I, we're both virgins.\" She then held out her hand, palm up. \"Hand me the keys.\"\n\nA soft moan, followed by a gasp left my lips as I slid the key from the lock and hesitantly laid them in her hand. After slipping them back into her bra, she turned off the vibrator and I whimpered softly in desire. I surprisingly missed the vibrations in my bottom.\n\nMumsie got out of the car, came around to my side, and offered me her hand. After taking it, I rose up out of the car. We were both surprised with a car horn honked as it passed by and a man shouted out something about a cute boy. But we didn't catch all of what he shouted.\n\nMumsie laid her hand on my naked back and guided me toward the door. After she'd opened it and I'd stepped inside, the same man at the register grinned when he saw me. \"Back already, Cupcake?\"\n\nI chirped, \"Yes, sir.\" Mumsie stepped close behind me and rested her hands on my bare sides.\n\nThe man's eyes wandered over my bare, hairless body while asking, \"What can I help you two with this afternoon?\"\n\nMumsie leaned over my shoulder and told me to answer him. After biting my lower lip, I struggled to look him in the eye while explaining, \"Um, Mumsie wants to buy a strap-on.\" Mumsie's hands slid from my sides to my hips and continued around me until her hands framed my caged penis.\n\nThe man grinned while staring at my cage. His eyes drifted back upward while asking, \"Is Mumsie going to peg you?\"\n\nI squeaked, \"Yes sir.\"\n\nHe looked from my quivering body to Mumsie, \"Damn! You two have made this the most exciting day I can remember.\" He looked over me once more before indicating the same wall as before, \"The strap-ons are just down the aisle from the chastity cages.\"\n\nMumsie took hold of my hand and together, we stepped further into the store. I counted two other people, both of them men. One of them older, like the man behind the counter. The other looked to be younger, closer to my age. The older of the two men was standing a little way down from us looking through dirty magazines. He was playing with himself over his pants while flipping through the pages. I gasped when I saw him.\n\nMy gasp caught his attention and he looked up from his magazine. He groaned, \"Holy Fuck!\"\n\nMumsie told me to say hello to the nice man. I bit my lip hard while watching him still playing with himself over his pants. My voice cracked, \"Hello mister.\"\n\nHe began walking toward us while still squeezing his cock over his pants, \"Where have you been all my life, Baby Boy?\"\n\nMumsie glared at him before stepping between us. Her voice was hard and scary sounding, \"He's been with me. Now you'll have to excuse us.\" She then led us away from him toward the wall with the strap-ons. The second customer was browsing that aisle. When he glanced up and saw Mumsie and me, his eyes popped open wide. His eyes drifted over my bare body, but his gaze was different. He wasn't looking at me with a hungry gaze.\n\nHis voice was soft and timid when he said, \"Hello. Um, I, um, I really like your chastity cage.\"\n\nMumsie smirked at him and answered for both of us, \"Well thank you. I've only put him in it earlier today. Do you have experience with being kept chaste?\"\n\nThe boy answered in a soft voice while looking at the floor, \"No, but I've always wanted to.\"\n\nMumsie smiled warmly, \"You cute, timid boys all seem to be the same.\" She stepped toward him and took the package out of his hands that he was holding. \"What do we have here?\"\n\nHe stuttered and stammered, \"I-I-I was just looking at it!\"\n\nStepping in closer to her, I looked at the box and learned it was a Bondage Beginners Kit. It had a ball gag, wrist and ankle cuffs, collar, leash, nipple clamps, a leather flogger, and a wooden paddle. I shivered when I saw the images on the box. My little penis struggled to get stiff in my cage. I squirmed my hips around and pulled at my cage in a futile effort to relieve the discomfort.\n\nMumsie looked at me and said, \"I think we could have some fun with this. What do you think, Sammy?\"\n\nI whimpered softly while still pulling on my chastity cage, \"I guess so. I mean, if you think so, Mumsie.\"\n\nOur new friend asked, \"Mumsie?\"\n\nMumsie smiled down at the boy and explained, \"Yes, Mumsie. I'm Sammy's mother-in-law. My daughter is out of town and I'm keeping an eye on Sammy until she gets home.\"\n\nThe boys whimpered, \"I wished I had a Mumsie like you.\"\n\nShe ignored what he said, telling him, \"We're going to buy this.\" Indicating the box she handed to me to hold. \"If you want one, you'll have to find another.\"\n\nMumsie took my free hand and guided me further down the aisle. While we passed the boy, Mumsie said, \"Now let's find a nice strap-on so we can get home and I can fuck you silly.\" Both the boy and I moaned out loud at the same time.\n\nAfter browsing through the racks, Mumsie eventually decided on a black leather harness designed for full-figured ladies. She couldn't decide on which dildo, so she bought two of them. Both of them were pink to match my chastity cage. The first was rather thin with a round ball on the end, it was specifically designed to make a feminine boy squeal out in pleasure. The second one was bigger, much bigger. It was realistically shaped, complete with a scrotum. It more than 8 1/2 inches long and 2 1/2 inches in diameter.\n\nAfter carrying all of our choices back to the counter, the man looked through them all and began to ring us up. That was when Mumsie pulled her phone out, handed it to the man, and asked for another lesson with the buttplug's app. She didn't need another lesson and he knew it.\n\nAfter picking up the phone, he began flipping through different frequencies and intensities, never letting it remain unchanged for long. Within minutes, I was dancing around in front of the counter waving my arms and moaning. My skinny penis was pressing against the cage, struggling to get stiff but it wasn't going to happen. The cage was pulled away from my body and my little balls were the only things keeping it from coming off.\n\nWhile this was going on, Mumsie had opened up the bondage kit. When the man finally slowed my buttplug down and let me get used to it, Mumsie was right there and wrapped the collar around my neck, buckling it closed. I was still trying to catch my breath when she wrapped the wrist cuffs around my skinny wrists. My arms were limp when she raised my wrists to the collar and locked them to either side of my neck. Unable to lower my hands below my shoulders, I squirmed while everyone in the store gathered to watch my predicament.\n\nBefore Mumsie returned her attention to the man behind the counter, she passed her phone to the man who had been playing with himself earlier. He quickly got the hang of the controls and soon had me writhing in a combination of pleasure and agony. While Mumsie paid for the purchases, that masturbating man stepped close and while still driving me wild with the remote, he spoke to me in a deep, raspy voice, \"You are the sexiest boy I've ever seen. I swear, if you had a website, I'd be beating off to it constantly.\"\n\nAfter I'd moaned softly, the man asked, \"How does that make you feel, Princess? What do you think about men beating off while looking at you? Does it turn you on to think about men dreaming about fucking your skinny little ass?\" He paused to hear my response, but I was too far gone to answer him. He then almost growled in my ear while flicking my chastity cage with his finger, \"That's what I'll be doing for a good long time. I'll be dreaming about you bouncing up and down on my cock.\"\n\nMumsie grabbed her phone from his hand, wrapped her arm around my waist, and guided me away from that man and out the door. My wrists were still locked to the sides of my neck and I felt more exposed than I had all day. My little chastity cage was bouncing with each step I took and the plug was still vibrating in my bottom.\n\nI was guided directly to the passenger's side of the car. After I'd sat down, I noticed the boy had followed us outside and was watching Mumsie buckle me into my seat. When she walked around the front of the car, she paused and said something to the young man which made him blush before walking away from him. While this was going on, I was grinding my bottom against the seat while spreading my legs wide apart. I struggled to get even a little friction against my desperate penis, but it was pointless. I had to sit there desperately horny with no relief in sight.",
        "After Mumsie had sat down in the car, I spread my legs as wide as I could putting one foot on the dashboard and the other across her lap. My hips were grinding around lewdly while my penis filled my little cage to capacity. It was no longer just uncomfortable; it was starting to hurt.\n\nWhile starting the car and driving us away from that store, Mumsie's voice was soft and calm when she asked, \"Did you enjoy that, Sammy?\"\n\nI half-moaned, half-sobbed, \"Mumsie, I'm so horny! Please! Pretty please!\"\n\nShe didn't look away from the road when asking, \"Pretty please what? I know you aren't asking for me to take your cage off. You know how disappointed I'd be if you even asked for that.\"\n\nTears began to run down my cheeks, \"I'm just so horny!\"\n\nShe stroked my leg that was laying across her lap, \"I know, Baby. We're almost home.\"\n\nThe ride to her home seemed to last forever. I squirmed and writhed in the seat and fought against the cuffs holding my wrists against my neck. I didn't even pay attention to where we were until the car came to a stop in her garage. After closing the big garage door, she got out of the car and came to help me out. Once on my feet, she began handing me things to hold. With my wrists trapped near my neck, it was awkward to hold anything.\n\nMumsie led me into her house and after taking the bags from me, she set them on the dining room table. She backed me against the wall near a large photograph of Chloe, in a husky voice she gave me a choice, \"Sammy, what would you like to do now? Would you rather spend some time under my dress?\" She stepped back from me, lifted her dress, and began to peel her big panties off. The musky, humid scent of her arousal quickly filled the room.\n\nShe held those enormous white satin panties right in front of my face. She moaned, \"Look how horny you've gotten me today. Do you see how wet my panties are?\" The moist spot on her panties had damped the entire crotch. If I didn't know better, I would've thought she'd had an accident.\n\nMumsie moved the panties closer toward my face until I felt the moisture touch my nose. \"You could spend some time under my dress. Or, we could try out the strap-on and I could fuck your skinny little ass until you can't walk. We'll be doing both tonight. But we can start with either one, Baby. Why don't you choose this for us?\"\n\nI wasn't exactly thinking straight, but I thought she sounded slightly more excited about having me go under her dress. So that is what I chose. Mumsie grinned, took my hand, and led me to the living room. After sitting in her chair, she wagged her finger at me while scooting down in the chair and raising her dress.\n\nOn my knees, I ducked my head under her dress and was greeted by the powerful, womanly scent of her arousal. Between Mumsie's warm, thick thighs, I learned everything about her womanhood was bigger than Chloe's. The bushy, dark hair was long, kinky, and unshaven. While Chloe's lips were thick, Mumsie's were even chubbier. They were far bigger than hamburger buns. Peeking out from between her fat, hairy lips was her clit. Not only was it about the same size as the squishy head of my penis, but it also resembled it. It was glistening pink, and there was a seam running up the bottom side, just like my penis!\n\nLeaning forward, I felt her hands lay gently on my head, guiding me toward her sex. With my wrists still cuffed beside my neck, I had no way to brace myself. I struggled from falling forward against her for a short time before giving up and leaning my weight against her huge pussy. Her lips spread apart and hugged the sides of my face as I licked circles around her stiff clit.\n\nMumsie caressed my scalp with her fingers over the dress covering my head and moaned softly while I worked. She began talking to me while I ate her. But I was unable to lean back and respond, so I kept licking, kissing, and sucking on her while she spoke.\n\n\"Oh Sammy, you're such a good boy. You're my good boy. You're Mumsie's good boy. Mmm, that feels so nice Baby. It's been so long since anyone has done this for me. Do I taste good, Sammy? Do you like the taste of Mumsie? I love the feeling of your face, mouth, and tongue down there.\"\n\nShe continued to talk to me like that while I slid my face up and down between her lips. My face was soon drenched with her juices. She was all I could taste, see, or smell. Wherever my mouth was, I licked and sucked everything I could reach.\n\nThe plug in my bottom never started vibrating. But my little cage forbid my penis from getting the least bit stiff. My hips ground around while I slid my face against her juicy expanse of sex. My penis was cramped up and ached for release. But it seemed to add to the wonder of the moment. I wasn't thinking about getting out of my cage. I was thinking about how proud Mumsie would be unlocking me the next week when Chloe was on her way home.\n\nMumsie's fingers gripped my head tighter and her thighs closed in around my head. I slurped her fat clit into my mouth and tickled it with the tip of my tongue while Mumsie's legs began to spasm. I sort of heard her moan loudly even though her thighs were muffling the sound of her voice. Her clit throbbed against my tongue and her entire body began to tremble as she came against my face. She kept me held tightly in place until she could stand it no longer. She then scooted back on her chair and once I'd managed to lean up, she closed her thighs tightly together.\n\nHer face and chest were deeply flushed. She was breathing heavily and had the biggest smile on her face. After she'd calmed down from her orgasm, she moaned, \"Thank you, Sammy. I've needed to cum since I walked in on you this morning.\"\n\nI moaned softly after hearing her say how she needed to cum. Still kneeling on the floor at her feet, I licked my lips and whimpered, \"I'm-I'm glad I was able to help.\"\n\nShe smiled while reaching into her bra and retrieving the keys to my cage. Leaning forward, giving me an incredible view down her dress between her enormous breasts. I moaned softly while sitting there gazing at her breasts pressed snuggly together beneath her dress. She slipped the key back into my lock and left it dangling there.\n\nShe asked in a soft, sexy voice, \"Sammy, I've wanted to ask you, is having your little penis locked up in that cage all that you thought it would be?\"\n\nI squeaked, \"Yes, and more. It's different than I thought it would be. It hurts sometimes and it's uncomfortable. But just knowing it won't come off until you take it off. It's making me think about it. and I always feel it. It's so intense, Mumsie.\"\n\nShe smiled, \"Baby Boy, are you still off-the-charts horny?\"\n\nI arched my back and moaned, \"Yes! I've been in this cage most of the day! And I've been naked in front of strangers! Mumsie, having you catch me playing with myself was the best thing that's ever happened to me.\"\n\nBending forward with her elbows on her knees, I was able to peer down her dress again. She gently asked, \"Do you know what we're going to do next?\"\n\nBiting my lip while squirming my hips against the floor, \"You're going to try out your strap-on?\"\n\nShe stared into my eyes, \"That's right, Sammy. And if you think you're horny now, I'm betting I'm going to have to scrape you off the ceiling after I'm done fucking you.\" She then stood up, looked down at me, and said, \"Wait right there. I'll be back to get you when I'm ready.\"\n\nShe then walked away from me toward the stairs leading to the bedrooms on the second floor. As soon as she'd stepped out of sight, I looked down at the key dangling from the lock. I wiggled my hips and heard the key clink against my cage. I was so close to being free. But even if my hands weren't restrained, I wouldn't have turned the key. I swore to myself that I would last as long as Mumsie wanted to keep me locked up.\n\nI knelt there by the couch and bit my lip when I heard the water come on. Mumsie was taking a shower. I squirmed on the floor while imagining her abundant body in the shower with water dripping from it. Squeezing my eyes shut, I imagined her breasts, tummy, thighs, behind and legs dripping wet. I whimpered softly while I waited.\n\nThe water eventually turned off. I listened to her walking around above me on the second floor. I tried to figure out what she was doing. But I wasn't even close. When she came into view at the top of the stairs, she was truly a vision. She was wearing an ankle-length, black, silk robe. It was left open a little bit all the way down the front. I was able to see her bare cleavage, her soft tummy, her bushy pussy, and her thick thighs. My penis ached while struggling to swell to its petite erect size.\n\nMumsie walked right past me and into the dining room. After collecting our bags, she returned to sit in the chair I knelt before. The first thing she pulled out was the pink cami top she'd bought for me at the consignment store. While holding it between us, she said, \"When I first saw you in this camisole, I had this horrible thought of taking you home to Chloe wearing it and your chastity cage. Even now, I think she should know that if she isn't willing to indulge your chaste, sissy, exhibitionist fantasies, I will.\"\n\nI whimpered softly, \"I thought about it too. But...\"\n\nShe shushed me before I could finish. \"I know, Baby. I know.\" After laying the cami over the arm of her chair, she began pulling out one item after another from our bondage kit. The first things to come out were the nipple clamps. It wasn't until that moment that I noticed the small silver bells hanging from either clamp.\n\nMumsie reached out and pinched my nipple between her fingers. I squirmed and arched my back deeply which pushed my chest toward her. While pulling my nipple away from my body, she used her other hand to set the clamp in place. When she'd released it, I squeaked and wiggled around which made the bell tinkle. Soon after, the sharp pain passed and I was left with my nipple feeling very warm. Mumsie then repeated the process on my other nipple. When both of them were in place and the initial pain had passed, I wiggled my chest making the bells tinkle. It seemed to please Mumsie.\n\nNext came the pink ball gag. While holding it in front of my lips, she whispered, \"Open wide.\"\n\nI had to open wide to let the ball fully enter my mouth. After she buckled it behind my head, it became clear that I wouldn't be able to stop myself from drooling. It began oozing down toward my chin while Mumsie sat there smiling at me.\n\nNext from the bag came the leash. After she'd clipped it to my collar, she leaned in, kissed my nose, and said, \"Maybe tomorrow we'll go for a walk in the park.\" I moaned against the ball gag and felt drool beginning to drip from my chin. The thought of Mumsie taking me for a walk through the park on a leash made my penis tingle and strain inside its cage.\n\nAfter that, she pulled out the rope and ankle cuffs. With a smirk, she said, \"We'll figure out what to do with these later.\n\nThe next two things to come out of the bag were the pink leather flogger and the wooden paddle. Leaning in again, she kissed first my nose and then the pink ball holding my mouth wide open. \"Do you know, I've never given you a single birthday spanking.\"\n\nShe must've seen the concern on my face. Picking up the wooden paddle, she slapped it against her open palm a few times. \"If you hadn't been such a good boy all day, I'd be turning your cheeks bright red with this. I suggest you continue to behave or you'll wind up on the wrong side of this paddle. Do you understand me, young man?\"\n\nI nodded my head quickly while glancing between her and that paddle. She set it and the flogger aside before returning to our bags and pulling out the skinny, short, pink dildo. She laid it on her leg before pulling out the huge, thick, pink dildo. Picking up the thinner, smaller dildo, she held one in each hand and looked at me. Raising the thinner of the two, she shook her head and set it aside on the end table.\n\nWith the huge dildo resting across her lap, she pulled the last items from the bag, her harness, and the lubricant. After setting the lube aside, she took the harness from its box, fiddled with straps, and mounted the dildo on it before standing up before me. She stood so close that at times, my nose was nestled in her pubic hair while she stepped into the harness and pulled it up her legs. As it slid into place, the dildo brushed along the side of my face.\n\nMumsie then sat back down with that huge dildo rising up from her waist. She wagged her finger at me and when I leaned toward her between her naked thighs, she reached around my head and removed the gag. While I stretched out my jaw, Mumsie scooted her hips to the edge of the chair again. This time her juicy pussy was framed by the straps of the harness. And from that harness rose the long, thick pink dildo.\n\nShe asked in a soft tone, \"Sammy are you still my good boy?\"\n\nI nodded my head slowly and uttered, \"Yes, Mumsie.\"\n\nHer eyes were half-closed when she moaned, \"Mmm, I'm happy to hear that. Because I want my good boy to suck my cock now.\" She used her finger to push the dildo until it was pointing right at me while beckoning me near with the finger of her other hand. Leaning forward, I pursed my lips and placed a kiss right on the tip of it. Looking up into her eyes, I slowly parted my lips and let the phallus pass into my mouth.\n\nMumsie stared at me and moaned, \"That's my good boy. You know how to make Mumsie happy. Yes, sucking on my cock like the good boy you are.\"\n\nI began bobbing up and down on the dildo jutting up from her hips. My slobber was dripping down all over it. The wet sounds of my what I was doing seemed to echo around the room.\n\nMumsie reached down and ran her fingers through my hair. \"Deeper. Take more of it. Take as much as you can.\"\n\nI slid down farther than I had before but still wasn't even halfway down before I almost gagged. Mumsie looked pleased but she moaned, \"Deeper.\"\n\nI swallowed my mouthful of saliva and went back down on her cock. When I got close to the back of my throat, I hesitated before pushing forward far enough that I gagged and backed off, but kept her in my mouth.\n\nShe was watching my every move. In a soft voice, she said, \"Again. Just like that.\"\n\nWith her dildo still in my mouth, I whimpered, \"But Mumsie...\"\n\nShe got a look on her face that let me know this wasn't the time to speak up for myself. After licking my lips and swallowing, I went back down on her and gagged myself again. Mumsie moaned, \"Again.\" She set a routine. I gagged myself over and over on her dildo while she sat there watching it all. The dildo was eventually covered in my saliva and I paused to lick up and down along its length so it wouldn't make a mess on her. While I did that, Mumsie smiled down at my flushed face.\n\nShe whispered, \"How is your little penis, Honey?\"\n\nI whimpered, \"It's cramped up in the cage.\" My hips squirmed around and I ground my bottom against the floor.\n\nMumsie grinned, \"Well, my cock feels wonderful. Look at how stiff it is.\" She wrapped her hand around the dildo and began to stroke it up and down while I knelt there watching, unable to even touch my desperate little penis.\n\nWhile she stroked herself, she said, \"Sammy, ask me to fuck you.\"\n\nI moaned, \"Mumsie, will you please fuck me?\"\n\nShe playfully frowned while saying, \"I don't think you meant that. I just don't believe that you want me to fuck you.\"\n\nI arched my back and wiggled my cage so the key bounced off the cage and the bells on my nipple clamps tinkled. I moaned, \"Mumsie, please fuck me! I've wanted you to fuck me since you picked out that dildo in the store. I've never been fucked like this before. But I really want you to be my first. I want to give myself to you. I want you to take me.\"\n\nShe smiled, \"Do you love me, Sammy?\"\n\nI groaned, \"Yes! I do! I love you very much!\" Leaning forward I took her dildo back in my mouth but didn't gag myself.\n\nShe stroked my hair while I sucked on her dildo, \"Baby Boy, I wished I'd met you before Chloe.\"\n\nI popped up off the dildo and moaned, \"I think that too!\"\n\nMumsie stood up quickly and helped me to my feet and grabbed the lubricant. My legs had gotten stiff from kneeling there for so long. She guided me up the stairs with her dildo poking against my back and bottom the whole way. She guided me straight through her room and into the master bath. Following her instructions, I spread my legs and leaned over against the sink, and watched her reflection in the mirror. Mumsie wiggled her fingers under the base of my plug and began to slowly pull it out from inside of me. I rose up on my tiptoes and arched my back deeply when my little hole stretched around the widest part of the plug. Mumsie then pushed it back in and I squealed. Over and over, she slid the widest part of the plug in and out of me. When it finally came all the way out, I was left feeling empty and extremely horny.\n\nMumsie glanced at me in the mirror before laying her hands on my hips. She gently rubbed the tip of her dildo against my gaping hole. She paused to pick up the bottle of lubricant and squirted a large amount of it down between my cheeks. She then slid the dildo between my cheeks covering it in lube as well.\n\nShe spun me around and almost pushed me back into the bedroom. She was excited, probably just as excited as I was. She lifted me onto her bed which sat high off the floor. She grabbed my ankles and pulled my bottom to the edge of the bed and rest my skinny legs against her breasts and shoulders. She lined up the dildo and touched it against my ring of muscles.\n\nShe looked up over my body. My legs were spread apart and the chastity belt with its key in the lock was pulled away from my body. The clamps on my nipples were gently tugging on the tender flesh which only aroused me more. The collar around my neck and my wrists captured against it. I was a horny mess with no hope of relief any time soon.\n\nHer voice was raspy, \"I'm going to fuck you now, Sammy.\"\n\nI wiggled my hips, \"Do it, Mumsie! Please do it!\"\n\nShe kept hold of my thighs while pressing forward with her hips. The long, thick dildo began to sink into my body. Mumsie moved slowly, she was in no rush. When I tensed up, she slowed to a stop before starting again. It didn't take as long as I thought it would before I felt her legs and hips against my cheeks.\n\nThat moment when she'd buried the entire thing inside of me, she moaned, \"Tell me you don't want to cum.\"\n\nMy back arched deeply and shivers shot through my entire body when she bumped the strap-on as deeply as she could without pulling it out very much at all. \"I don't want to cum, Mumsie!\"\n\nShe grinned while sliding the dildo almost all the way out before slowly going all the way back in. \"Who is going to decide when you can next cum?\"\n\nI whimpered softly while squirming around on the bed, \"You are, Mumsie!\"\n\nShe began sliding the dildo in and out of my overexcited body. While staring into my eyes, she asked, \"And how many times am I going to cum before I let you out of your little cage?\"\n\nI groaned while arching my back and wiggling around on the bed, \"As many times as you want to!\"\n\nShe grinned while the sound of her hips slapping against my thighs and bottom echoed around the room. \"That's right. I'm going to use your face, your cute little mouth, and your slippery pink tongue to cum as often as I want.\" After slamming the dildo into me especially hard, she asked, \"How does that make your little penis feel?\"\n\nI began trying to push myself out to meet each of her thrusts. But it was difficult to do with my hands secured to the collar around my neck. \"It makes it sad and lonely. It makes it really cramped in his cage.\"\n\nShe grinned and asked, \"HIS cage?\"\n\nThe strap-on was bumping and sliding against my magic place inside my body. I was squirming and moaning as I felt my pleasure rise up inside of me. Having no idea how she wanted me to respond to that, I whimpered, \"Her cage?\"",
        "She began sliding the dildo in and out of me at a methodical pace. I moaned each time she bottomed the dildo out inside of me. She had begun to sweat while I was already covered in a thin layer of perspiration. She almost laughed, \"HER cage? I like that. I was going to have you say it was my cage. But I like her cage better. Now since your little penis is a girl, what shall we call her?\"\n\nI squeaked out the first name that came to mind. It was the name of the most petite girl I'd ever known, \"Lily?\"\n\nMumsie grinned down at me while sliding the dildo in and out several times before sinking it all the way inside of me again. She then reached down and took hold of the lock and key in her hands. She turned the key and the lock popped open. She didn't remove it from my cage, she left it lying there, still trapping Lily inside.\n\nThe idea of being so close to being free was unnerving. I squirmed and wiggled and bucked my hips wildly trying to get the lock to somehow fall out. While I did, I was giving Mumsie's strap-on a nice workout. She grinned down at me, \"That's a good boy. Don't stop, show me how much you love riding my strap-on.\"\n\nI whimpered softly, \"Mumsie, please! Please let me out!\" After watching her expression change, I went on to say, \"Please let Lily out of her cage. She only needs to be out for a minute or two. Please Mumsie?\"\n\nShe grinned while slowing down her fucking of me. Reaching down, she took hold of the lock and key once more. My heart was pounding in my chest. I'd never wanted or needed to squirt so badly in my life. When she closed the lock and removed the key, my heart sank.\n\n\"Sammy, I told you I'm not going to let Lily out until I know Chloe is on her way home. What part of that don't you understand?\" I moaned softly while watching her toss the keys several yards across the room on her dresser. The keys slid across the top and back behind the enormous piece of furniture. Mumsie had watched it happen along with me. She looked back at me laying on the bed with her dildo buried deep inside of me, \"Out of sight, out of mind. I know you could never move that dresser by yourself. I'm not even sure we could move it together. But we're not going to worry about it until I hear Chloe is almost home.\"\n\nI panicked and whimpered, \"But-but-but what if we can't move it? What will we do?\"\n\nShe smiled, \"It's not what we'll do. It's what you'll do. You'll have to go home still wearing your little cage. And if Chloe decides to play with you when she gets home, you're going to have to explain why you're wearing it.\"\n\nShe found the sweet spot and began sawing her hips back and forth while the head of her strap-on rubbed across my magic spot. I squirmed and whimpered, \"I-I could tell the truth!\"\n\nMumsie kept grinding her dildo against me, \"Oh Baby Boy, I wished you would. You could tell her how I walked in and found you. You could tell her about both trips to the adult bookstore. You could tell her about the consignment store and all we've done since we got home. Sweetie, we still have six days to go. If we did all of that on our first day together, try to imagine all of the kinky, perverted things we'll do tomorrow, and the next day and the next.\"\n\nThe strap-on had slowly ramped me up to the point where it felt like I was about to pee. I squealed out loudly. And at that same moment, Mumsie pulled her strap-on all the way out and left me laying there frustrated and denied. I kicked my legs and bucked my hips while whining, \"Mumsie! Please don't stop! I was so close! Lily was so close! Mumsie please!!\"\n\nBut she didn't start again. Not until later that evening after I'd eaten her to two separate orgasms. And that time she made love to me with deep, long strokes that had me squirming around like crazy. Again, she stopped short of letting me squirt.\n\nFor the next six days, Mumsie took me to at least one public location each day. I exposed myself and my little cage to dozens upon dozens, if not hundreds of strangers. I helped her to achieve at least three orgasms each day we spent together. One afternoon, she invited 3 of her lady friends over for brunch. While I ran around serving drinks and snacks, I learned all three of those ladies knew Chloe. The thought of one of them telling my wife what I'd done made me shiver and my penis try to swell in its little cage. When those three ladies left, they each gave me a kiss on the lips and a pat on my bare bottom.\n\nOn our last full day together, Mumsie took me next door to her neighbor's house. She'd called ahead and gotten their permission for me to go swimming in their pool. The couple that lived there was about Mumsie's age. Both the husband and wife sat beside Mumsie near the pool's edge watching me skinny dip, wearing only my chastity cage, while pretending to pay attention to what Mumsie was saying.\n\nAt one point, the wife said something to Mumsie then popped up and ran into the house. She came back with a bottle of sunscreen. After calling me over, I rose out of the pool and stood by passively while this woman I'd known for less than an hour, rubbed down my naked body with that sunscreen. Naked except for Lily's cage of course.\n\nLater, when it was time to leave, Mumsie asked the husband if he would dry me off. That man had lust in his eyes. Since being caught by Mumsie just a few days before, I'd seen that same look in the eyes of many men. I held my arms out of the way, turned around, and even bent over at my hips to help him dry me off. By the time he'd finished, he had an unmistakably large bulge in his pants.\n\nThat night, Mumsie had me eat her to two orgasms, one right after the other. She then pulled on her strap-on and after slipping a pillow under my hips, she made love to me in the missionary position. She made love to me like a man makes love to a woman. That night she let it go farther than ever before. When she finally stopped, we both watched two large drops of my creamy juices ooze down the side of my chastity cage. It wasn't orgasm. It wasn't even a milking. It was part of a ruined milking. That night I hardly slept at all. I squirmed around, grinding my bottom back against Mumsie's hips. I was so horny and desperate for relief from the excitement that had built up over the past week.\n\nShe kept rubbing Lily's cage and telling me to calm down and go to sleep. Exhaustion did eventually catch up to me and I fell asleep. That night I dreamt about walking down the aisle wearing only a white plastic chastity cage. Chloe was accompanying me and Mumsie was waiting for me at the altar. Everyone I'd ever known was in that church. After Chloe had given me away to Mumsie, there was a short ceremony before I was officially wed to my Mumsie. At the reception, instead of our first dance, Mumsie took me with a large black strap-on in front of all our guests.\n\nWhen I woke the next morning, Mumsie was stroking my hair while I was sucking on her nipple. Her nightgown had been pulled off her shoulder and under her enormous breast. I lay there naked, except for my chastity cage, in my mother-in-law's embrace while suckling from her bare breast. It was a wonderful moment and neither of us was eager to make it end. It was our last morning together and it had begun in the most special way I could imagine. It wasn't at all sexual, it was a close, intimate moment between the two of us.\n\nAfter the better part of an hour, Mumsie spoke for the first. She whispered, \"You have to go home today.\"\n\nI pulled off her breast and sat up in the bed while she pulled her nightgown up to cover herself. I bit my lower lip and whispered, \"I don't want to go.\"\n\nShe smiled warmly and replied, \"I know Baby. But we'll do this again the next time Chloe has to leave town.\"\n\nI lay down with my head in her ample lap while nibbling on my lower lip and unnecessarily reminding both of us, \"I do get out of my cage today.\"\n\nShe stroked my hair and spoke in a soft tone, \"Who gets out of their cage today?\"\n\nSquirming beside her and upon her lap, I whimpered, \"Lily gets out of her cage today.\"\n\nMumsie whispered, \"Yes she does. And because you and Lily have been so well-behaved this week, why don't the two of us get the key from behind that dresser and let Lily out early.\"\n\nI spoke quickly, almost running my words together while I raced around the bed, \"I'd like that too! Now come on, let's move this dresser!!!\"\n\nIt took both of us to budge that dresser enough so we could get a broom handle back there and scoot the keys close enough for me to reach them. When I held them in my hand, I was briefly tempted to open the lock and remove the cage myself. But I didn't. Instead, I carefully laid the keys in Mumsie's hand before looking up at her smiling face.\n\nMumsie moved back to the bed and laid down, flat on her back. She patted her tummy while beckoning me near, \"Come climb on top of me. I've been thinking about this all week. I want this first orgasm to be special. And I've decided,\" She sat up and slid the straps off her shoulders moving her nightgown down between both breasts before laying back down and using her hands to squeeze her enormous breasts together. \"...You'll be squirting onto my boobs.\"\n\nI bit my lip hard while climbing back onto her bed. As I straddled her stomach as best as I could, I was shocked at what she'd suggested. I never thought I'd squirt onto her boobs! That simply wasn't something I'd ever dared to think about.\n\nOnce I was settled into place with Lily's cage resting almost over her breasts, Mumsie slipped the key into the lock and paused to say, \"Sweetheart, can you promise not to touch her? I want to make this happen. I can't have you interfering. Do I need to get your collar and wrist cuffs?\"\n\nQuickly moving my hands behind my back, I laced my fingers together and squeaked, \"No! I promise I won't touch it!\"\n\nMumsie frowned, \"If you do, I'll have to use that paddle for the first time. And I'm sure you don't want to go home to Chloe with a crimson bottom.\"\n\nShaking my head from side to side, \"No. I promise to keep my hands behind my back.\"\n\nMumsie smiled and turned the key, opening the lock. She glanced between that lock and my face while slowly removing the lock from the cage. When she began to pull the cage apart, my penis swelled to its biggest size ever, which was still relatively small, and almost pushed the cage off. Mumsie looked very pleased with my reaction while carefully removing the ring portion of the cage. My little marbles immediately disappeared inside my body and the silky soft pouch was pulled up tight along the bottom of my little prong. I was finally free after being locked up for so long! My little penis was finally erect!\n\nShe didn't touch me. She let my penis throb above her while she asked, \"What was your favorite part of the past week?\"\n\nI wanted to cum so badly! And she wanted to talk! But I'd promised and struggled to form a complete thought in my mind. \"Um, I think that first day when you walked in on me.\"\n\nMumsie grinned, \"Mmm, that was fun. You did surprise me. I never expected you to be playing with yourself like that. My favorite part was having you eat me to so many orgasms. I'm going to miss your cute little mouth.\"\n\nI whimpered softly, \"I could come over and visit?\"\n\nShe laid her warm hands on my naked thighs and said, \"I'd like that. I went from having an orgasm two or three times a week, to at least that many times each day. You've spoiled me.\"\n\nMy hips wiggled around and I whimpered, \"Mumsie?\"\n\nShe grinned, \"How is Lily doing? Is she happy to be out of her cage?\"\n\nI moaned, \"Yes, but...\"\n\nShe moved her breasts together with her hands. While peering down over them, she guided one of her nipples toward the swollen pink head of my penis. Ever so gently, she rubbed it along the underside along the scar from my tight circumcision. That was all it took.\n\nMy hips lunged forward and my penis pressed against her nipple and sunk into her soft, warm breast. I convulsed and heard myself moan out loud while forcing myself to keep my hands laced together behind my back. Everything went into slow motion while my mind struggled to accept that I was finally being allowed to orgasm. Lights flashed before my eyes while my body twitched and spasmed and my penis spurted out an entire weeks' worth of pent-up excitement.\n\nWhile I began to float back down to Earth, Mumsie spoke in a firm voice, \"Now scoot down and lick up this mess you've made.\"\n\nThere was so much of my cream on her breast! I knew I'd never squirted that much before. Her long nipple and pancake-sized areola were coated with it. My cream was covering one side of her right breast where my penis had pressed against it. The juices had run down and were pooling between her breasts. It was a huge mess! I began to complain while at the same time, sliding down to straddle one of her immense thighs and leaning down, \"I've tried before... But I always... I never do... I get so self-conscience after...\"\n\nShe cut me off with that same firm tone, \"I understand. But I've told you to do something. Are you going to make me say that twice? Am I going to have to get my paddle?\"\n\nI looked up at her face and squeaked, \"No!\"\n\nLooking back at the mess, my post-orgasm blues had fully set in and I was really struggling with what I had to do. That was when Mumsie set her hand on the back of my head and gently urged me downward. I took a long lick through the puddle and pulled my tongue back into my mouth, swallowing the most cum I'd ever had in my mouth. It tasted organic and a little salty, but not really. It wasn't that bad. But I struggled with the fact that I was eating my own cream.\n\nWith her hand still on my head, I went back for more. This time slurping up some of the puddle and swallowing it down without hardly hesitating. When I immediately went back for more, she removed her hand from my head and let me continue by myself.\n\nWhile I licked up and swallowed all that cum, Mumsie whispered, \"That's my good boy. Sweetie, this is what you'll be doing at the end of all our visits. I'm going to release you from your cage, allow you to squirt, and then you're going to lick it all up.\"\n\nI listened to every word she said and moaned softly when she'd finished. But I kept licking and slurping up all the cream until there wasn't a trace of it anywhere outside of my stomach. As I sat up, I learned I left a little puddle on her thigh where I'd been straddling her. Without needing to be prompted, I scooted down and licked that up before cuddling up beside her and taking her nipple back into my mouth. The same nipple that had recently been covered in my cream.\n\nMumsie stroked my hair gently while whispering, \"Baby boy, are you going to leave me horny like this?\" She frowned and teasingly continued, \"Don't you care now that Lily's out of her cage?\"\n\nI quickly squeaked, \"No! I just!\" I stopped trying to talk and wiggled back down the bed so I could get under her nightgown. When I got there, the smell of her arousal and her clit poking out from between her meaty lips was proof of how horny she'd become. Resting my hands on the insides of her huge, warm thighs, I leaned in and began feasting on her dripping pussy. As usual, I used my entire face while eating her. Her clit spent time between my lips, but I also slipped and wiggled from my chin to my forehead between those juicy, face-hugging lips. She had become almost as aroused as I'd been after being set free from the cage. In very little time, her thighs closed in around my head and her fingers knotted up in my hair while pulling me tight against her. She grunted and moaned while her body spasmed and her clit twitched and throbbed between my lips.\n\nWhen the sensations became too powerful for her, she pushed my head away from her so she could squeeze her thighs together and ride out the rest of her orgasm. I wiggled out from under her nightgown and knelt there beside her knees with a silly grin on my glistening face.\n\nWhen the waves of pleasure had slowed down, Mumsie smiled at me, \"I love it when you look like that. It looks like you got sprayed in the face with a hose.\"\n\nWe got up out of bed after that. We showered together, but I was careful not to wash my face. We'd decided I'd wear her juices all day, until just before we had to leave to take me home. I remained nude while Mumsie got dressed in another pretty summer dress, sandals, and a necklace. I sat on the seat of the toilet and watched as she got ready for the day, doing her hair and applying her make-up.\n\nWhile she worked, she told me, \"During your next visit, we'll explore your interest in crossdressing. We'll get you all prettied up before going out and doing something together.\"\n\nMy mind raced to the inevitable fear of going out in public dressed. But I set that aside, I didn't need to worry about it at that moment. Instead, I asked, \"And Lily will be in her cage?\"\n\nShe smiled while applying blush, \"Of course. We wouldn't want Lily to make an unsightly bump in your dress. Would we?\"\n\nI giggled for a few seconds before going silent and watching her finish up in the bathroom. From there we had brunch. While we were eating, Mumsie's phone pinged. After checking it, she smiled and said, \"It's a text from Chloe. She's wondering if you're with me. Apparently, she hasn't been able to reach you all week. I wonder why?\"\n\nI began to panic while watching her tap a few times on her phone before tapping it one last time before setting it down between us on the table. When I heard it ring, I quickly figured out she had called Chloe and it was on speakerphone!\n\nChloe picked up after that first ring, \"Hello Mom, do you know where...\"\n\nMumsie cut her off, \"He's with me. He's been with me all week. When I stopped by to check on him, I found him sobbing on the couch. He'd been terribly lonely all by himself, so I invited him to come to stay with me.\"\n\nI quickly squeaked, \"Hi Chloe!\"\n\nChloe chuckled into the phone, \"Lonely huh? Hey mom, I've got four more trips coming up. How would you feel about me dropping him off with you on my way to the airport?\"\n\nMumsie reached over and cupped my little penis in her hand, \"You've been traveling so much lately. I think that's a wonderful idea. It's been nice to have him around this week. I get lonely too sometimes.\"\n\nChloe said, \"That's great, thanks, mom. Listen, I was going to head to Miami next Wednesday. I could change my flight and head out there now. Spend a few days on the beach before getting back to work. Would you two be okay if I stayed away for another 10 to 14 days?\"\n\nI was bouncing in my seat and couldn't wipe the smile off my face. Mumsie had somehow remained calm while answering Chloe, \"That will be fine. The two of us can find a way to keep ourselves occupied in your absence. You go do what you need to do for your job. We'll be here when you get home.\"\n\nAfter taking a silent, deep breath, I managed to say, \"Going to the beach sounds like fun!\"\n\nChloe responded, \"Yea, it'll be nice. That's great news. I could use a few days of downtime after the week I've had. I'll call you next week sometime. Bye, love you.\"\n\nBoth Mumsie and I called out at the same time, \"Bye, love you too!\" And the call came to an end.\n\nMumsie turned to me and said four words, \"Go get Lily's cage.\""
    ],
    "authorname": "fantaseeboy",
    "tags": [
        "cfnm",
        "sissy",
        "sissygasm",
        "femdom",
        "mature",
        "old young",
        "public",
        "bondage",
        "chastity",
        "denial"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/unexpected-visitor-13"
}