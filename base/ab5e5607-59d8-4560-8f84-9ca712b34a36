{
    "title": "Surefoot 03: Field Trip Ch. 06",
    "pages": [
        "USS Surefoot, Deck 1, 2315 Hours:\n\nCaptain Hrelle moved briskly down the corridor, grateful that they were sparse of crew so that no one could see the cheesy grin on his face, and grateful that Lieutenant Abed generously agreed to take over for him earlier than expected, allowing Hrelle to prepare for his date with the delightful Professor Gianopoulis. He wondered how many of his crew would have known or guessed about his plans. Probably everyone; with the size of his crew, it would be easier to reach Warp Ten than keep a secret around here.\n\nHe entered his quarters, his mind thinking ahead to what he would wear, only to find someone had already visited, and left out a set of clothes - a fetching white silk V-neck shirt, black trousers and matching shoes - on one of his chairs. Who the hell did this-\n\nHe smiled. Thank you, Kami.\n\nHe stripped off and hopped into his shower stall, opting for a sonic setting rather than his preferred water, not wanting to waste time having to dry off and groom his fur. He wanted to try and dampen his enthusiasm - after all, Barbara might have changed her mind, or be busy, or he might have been completely wrong about her feelings towards him. Then he remembered their last moments together, earlier that day. No, he wasn't wrong. He let his enthusiasm glow.\n\nBut the glow dampened as he emerged and saw himself in the full-length mirrors surrounding him. He normally bypassed these, not caring much, or pretending not to care much, or just simply finding excuses to look elsewhere. Now, however, he couldn't ignore them. He looked.\n\nAnd he hated what he saw.\n\nHe was certainly healthier than a year before, when he escaped from slavery: his strength and mobility had returned, he'd put weight back on, and he could eat and sleep most times without difficulty. His overall life expectancy had been reduced, he was told, but for now, he felt good.\n\nIt was how he appeared that mattered to him at the moment. He was covered in scars, in burns and permanent bruises that his fur not only couldn't hide, but which seemed to recede from those many places, as if beaten down by the evidence of his ordeals. He looked like some rag doll crudely assembled and kept together over time, or the artificial monster from that old Terran Gothic novel.\n\nAnd he knew each and every one of them like an old enemy, a bookmark in the dark chapter of that life: the ringed scars on his wrists and ankles from the chains he wore in the Breen pergium mines; the electrical burns on his thighs and hips when that faulty generator had exploded, killing four other slaves around him; the knife cuts on his belly and arms from the many fights he'd been forced into, and the black scar tissue when a heated poker had been driven into his sternum as punishment for refusing to kill a wounded opponent; the whip marks on his back, from far too many occasions to recount.\n\nAnd then there was the base of his spine, and the ugly black place where the Bel-Zon had cut off his tail and cauterised the wound with an energy weapon, for no other reason than to hurt him and make him beg and plead for a mercy they were never going to show him.\n\nHad he been crazy? Was he really going to show off *this* body to Barbara? He'd give her nightmares!\n\nHe reached for his robe in disgust and slipped back into it, his heart racing, his breath shallow and rapid as he left the bathroom, stopping by his bed. He felt dizzy, and missed the side of the bed as he slid down to the floor, unable to catch a breath. He reached out to his bedside table before he passed out, grabbing the combadge he had left there earlier and tapping it. \"Capt- Captain Hrelle- Counsel- Counselor-\"\n\nThankfully the computer was smart enough to interpret his ragged words, as Kami's voice replied. \"Captain? What's wrong?\"\n\n\"H-Help-\"\n\n\"I'm on my way!\"\n\nHrelle nodded to no one in particular, dropping the combadge and curling up, focusing on his breathing. Seconds later, he heard his door slide open, and smelled the Counselor as she raced in, kneeling beside him, touching his cheek as she helped him back into a sitting position, murmuring softly, \"It's okay, just breathe in through your nose... slowly, deeply, gently... now let it out through your mouth... count to five... breathe in again...\"\n\nHe nodded weakly to her, remembering the techniques for managing panic attacks, but grateful for her presence nevertheless. He never had attacks like this until he had escaped, when his mind could finally process what had happened to him and he had to deal with the effects rather than just focus on surviving. But they had eased in number and intensity in the months since he had started counseling. This one, however, was as strong as it had been unexpected.\n\n\"That's it, good, good,\" she said. She was clad in a sweat-soaked vest and shorts; when she saw him looking, she remarked, \"I was taking advantage of the cadets being planetside to get some intense exercise in at the gym; usually when they're around and see me there, they get... distracted.\" She smiled. \"Another few minutes, and you'd have caught me in the shower, and that wouldn't have done either of us any good.\"\n\nHe nodded. \"S-Sorry to have called you-\"\n\n\"Save it, I'm not onboard this ship just to look sexy.\" She rose, entered his bathroom and returned with a small glass of cool water, squatting down again and offering it to him.\n\nHe accepted it gratefully, drinking deeply. \"Thank you.\"\n\n\"You're welcome.\" She leaned back on her haunches. \"So... ready to talk about it?\"\n\n\"It just- I was overwhelmed-\"\n\n\"I guessed what happened. I want to know what triggered it.\"\n\nHe started to reply, but then found himself saying, \"I- I don't know. I'm probably just overworked.\" He was helping himself back to his feet. \"Would you please call Professor Gianopoulis, explain to her that I have to cancel tonight?\"\n\nShe rose as well. \"Well... I could. Or you could just tell me the truth.\"\n\nHe stiffened. \"I've told you the truth. Something happened, that's all, and I can't let her see me tonight. Maybe the next time we're in orbit. Tell her something. Tell her anything you want, I don't care.\"\n\nShe nodded back. \"Ahh, that makes sense.\"\n\n\"What does?\"\n\nShe drew closer. \"What you just said. 'I can't let her see me tonight'. Not 'I can't see her tonight', what anyone else would have said. I should have anticipated this.\"\n\nHrelle shook his head. \"I don't know what you're talking about.\"\n\nIn response, she reached out and tried peeling open his robe.\n\nHe pulled back.\n\nShe nodded to him. \"Take that off.\"\n\n\"What? Why?\"\n\n\"Why not? We're Caitians; what's nudity to us?\"\n\n\"I don't want to.\"\n\n\"A part of you does; the part that wants help. The part that called me instead of Dr Ling or T'Varik or someone else. Because you knew I wouldn't stand for your crap. That I'd help you accept the truth.\"\n\n\"Oh? And what truth is that?\"\n\nShe gave him a look, as if silently chiding him for making her go through the motions. \"It only just occurred to you that the Professor might see you naked tonight. And apart from doctors, no one has seen you like that since you escaped slavery, and doctors aren't going to be judgemental. You refused to get your tail and claws replaced and your wounds removed because you didn't want others or yourself to forget what happened to you. But now, that stance has triggered a wellspring of self-doubt about how you might look to a potential lover.\"\n\nHe was feeling hot again, hot and dizzy, and he wanted to be alone. \"I'm sorry I bothered you, Counselor. You can go now.\"\n\n\"No.\"\n\nHis anger rose. \"Leave! That's an order!\"\n\nKami seemed to consider his command, and then turned as if to obey. He should have known better, as he watched her walk over to his desk and activate the intercom. \"Counselor Shall to Commander T'Varik.\"\n\n\"T'Varik here.\"\n\nKami shot Hrelle a look. \"Effective immediately, the Captain is on indefinite medical leave. Please acknowledge.\"\n\n\"Acknowledged. T'Varik out.\"\n\nHe stood there, in abject disbelief. Twenty years as a starship captain, and no member of his crew had ever treated him like this! \"Rescind that order! NOW!\"\n\n\"Kiss my furry pink lips.\"\n\nHe almost bared his teeth at her. \"I'll get Dr Ling to override it!\"\n\nShe approached him again, shaking the ponytail out of her mane. \"Do you really think Dr Ling is going to take your side over mine?\"\n\nThen she started undressing.\n\nHe stepped back. \"What are you doing?\"\n\n\"Showing you how it's done, since you seem to have forgotten.\" She pulled her vest up over her head and cast it aside, quickly following it with her bra, before kicking off her training shoes and reaching for the waistband of her shorts and knickers. \"See how easy it is- why are you looking away? Do you want to insult me?\"\n\nHis breath quickened as he faced her, keeping his gaze above her shoulders; he'd seen her in various states of undress before, but never to this degree. His discomfort was bizarre, given how they were raised on their homeworld; no doubt his time away among more modest humans hadn't helped. \"Kami, please- don't do this-\"\n\n\"Esek,\" she replied simply, solemnly, \"I swear on my cub's life: I'm doing this to help you, not to hurt you, or humiliate you. But you know that already.\"\n\nHe looked into her eyes, hating her for taking that oath - an oath he couldn't possibly ignore, not without irrevocably damaging their relationship. \"That's a dirty trick.\"\n\n\"Yes,\" she admitted, unrepentant. \"You should have figured out by now that when it comes to helping the people I love, I'm a no-holds-barred, dirty bitch fighter - and yes, I said I love you, Esek, you don't have to have a cub over it.\" She smiled. \"Come on, Captain. Don't leave me feeling all naked and vulnerable here.\"\n\nHe swallowed, averting his eyes as he finally undid the cord of his robe. This was stupid, he told himself- not having to undress, but being made to undress.\n\nHe cast the robe aside and stood there.\n\nKami looked at him - not with judgement, or derision, or flirtation. Just compassion. \"Now turn around.\"\n\nHe fought the urge to cover himself as he turned in place.\n\nWhen he faced her again, she nodded to the bed. \"Lie down.\"\n\n\"Lie down? Why?\"\n\n\"Because it's more comfortable than the floor. Because I'm tired and want a rest. Because I asked.\" She smiled. \"Think of it as practice for when you're sharing a bed with the Professor, so you don't accidentally kick her out in the middle of the night.\"\n\nHe shook his head - but lay down anyway, on his back. And Kami lay down beside him, on her side, facing him. She draped her mane down, letting her tail rise and sway as if from an errant breeze, and then grunted. \"Mother's Cubs, you look like I'm about to stab you in the heart. Relax.\" She rose up onto one elbow. \"You know, your trouble is that your senses are too limited.\"\n\n\"Counselor, we're Caitians. We see in the dark, we-\"\n\n\"Yeah, yeah, we see in the dark, we can track a gnat's fart across the Alpha Quadrant, I've heard it all before.\" She reached up and gently rapped her knuckles on his forehead. \"I mean that you're limited to your own viewpoint, your own history.\n\nYou act like the Professor's first impression of you will be tonight when you're naked. But you've spent all day with her: working, talking, eating, flirting. She's seen you at your most relaxed, has watched you interact with the crew, has heard you talk about Sasha and Hannah. And I can guarantee you that she will already know about your background; you're a bit of a celebrity in this sector of space. She's a smart woman. She knows what you are by now.\"\n\n\"Oh? And what's that?\" he asked quietly, wanting and not wanting to know the answer.\n\nKami's eyes lit with genuine regard. \"Someone who's been through the Seven Hells. Someone who would have every right to emerge from that a bitter, angry, self-centred, self-destructive man.\n\nBut he's not. Instead, he has proven to be kind, compassionate, humorous, patient, loving. A caring Captain, a loving and doting father, a loyal friend.\" Her fingertips reached out and lightly traced along his arm and shoulder, making the fur rise slightly. \"And you have this combination of strength and gentleness that I know more than a few people find incredibly attractive.\"\n\n\"People? What people?\"\n\n\"Never mind. You're someone they can trust to take care of them.\"\n\n\"Trust, huh? Like some faithful hound?\"\n\nHer expression sobered. \"Don't belittle trust, Esek. There are so many people in the Universe, and so few you can trust, and I mean fully trust.\" She rested her arms on his chest, and her head on her arms. \"I have an extended clan of elder males, brothers, uncles, cousins, nephews. Scores of them. And if I needed them, they would come, and would do everything they could for me. But I've only ever known two males to whom I would trust implicitly to care and protect my cub and myself.\" She paused. \"One was my late husband. The other is beside me right now.\"\n\nHe stared at her, too moved to say anything.\n\nFortunately, she continued. \"The scars are nothing. The burns are nothing. Nothing but confirmation to anyone who sees them that you took on the worst that life could throw at you, and you came out of it not only stronger, but better.\" Now she smirked. \"And you know, you're really not bad looking. I love the muzzle and the eyes and the scent - Great Mother, your scent is exquisite! - and the broad shoulders and the warm voice. And I have a particular fondness for this belly, imagining feeling it against me...\"\n\nShe sat up now. \"I promise you, you won't regret seeing her. And neither will she. Because if you are half as good a lover as you are a Captain, a father and a friend, then you're gonna leave a very satisfied woman down there.\" She grinned. \"And by 'down there', I mean-\"\n\n\"Yes, I can guess.\" He smiled feeling more relaxed than he could have imagined. \"Thank you, Kami. I owe you one.\"\n\nAt his words, she took on a tentative, vulnerable expression now. \"You want to pay me back? Let me lie with you for a few minutes. That's all, just lie here. It's been a long, long time since I've been close with one of our own kind... you know what I mean.\"\n\nHe did; in fact, he had left his world beside so long ago, the proximity of one of their own was a distant memory. He lay back, stretching out an arm in silent invitation.\n\nKami curled up against him, one leg over his, tail drifting over to touch his belly, her face resting on his chest, breathing in his scent.\n\nIt was remarkably quiet, remarkably intimate. He relished it more than he thought possible. It was comforting.\n\nIt was also... arousing.\n\nAnd judging from Kami's chuckling, she noticed it, too. \"Well... the Professor is in for a treat. My cue to leave, I think.\" She rose and reached for her clothes, back to her usual self.\n\nHe followed. \"And be sure to let T'Varik know I'm no longer on medical leave, I don't want to have to argue with her later.\"\n\n\"No need; she and I have an arrangement already: if I call her and tell her that you were on medical leave, she should just play along, that it's part of your therapy.\"\n\n\"What? That's... outrageous!\"\n\nShe stuck her tongue at his reaction to that. \"Come on, Captain, you have an appointment to give a lady a limp and a smile...\"\n\n*\n\nLuntanu at midnight was as hot as anything Hrelle remembered from his homeworld, and suddenly he felt overdressed; it took a lot to make his people sweat, but this planet could do it. He had beamed down as arranged in the centre of a wide collection of domed structures, the homes, workplaces and storage areas of the archaeological outpost, interspersed with tall, thin light posts; he picked up the hum of an energised perimeter fence in the darkness beyond, and further out, the sounds of the jungle. He took in the scents, and glanced up at the moons: a large white pockmarked sphere followed by a smaller red echo.\n\n\"About time.\"\n\nHe turned to see Barbara standing in the open doorway of the nearest dome. She stepped out towards him. \"I was worried you might have been caught up with some starship business.\"\n\nHe approached her as well. \"A galactic invasion wouldn't have stopped me. But... if you are still aggrieved at my tardiness, allow me to make it up to you somehow.\" He saw that she was clad in a simple white linen dress and sandals, something that looked cool and comfortable in this heat... and very reminiscent of the clothes back on Cait. Her mass of black curly hair cascaded down behind her.\n\nShe smiled up into his eyes. \"Oh? And have you any ideas on how to do that?\"\n\nWhen they met, his hand moved naturally up to her cheek, lightly stroking it as he looked into her moonlit eyes. \"I always have ideas.\" He watched her shiver as his touch moved to the curve of her ear, then down to her neck, watching her head tilt back and she closed her eyes. He brought his muzzle down to her neck and began purring, nipping slightly at her skin. Barbara pressed against him, slipping her arms around him and holding on tightly as she whimpered, her breath quickening.\n\nThey drew back, still holding onto each other as she murmured, \"Let's get inside, I think I've given my colleagues enough to gossip about in the morning.\"\n\nThe cooler, climate-controlled interior of her quarters was lit by soft lanterns here and there, and filled with old-fashioned furniture, real books, and numerous paintings of Luntanu's moons, its jungles, and some small primates. \"Your works? You're very good.\"\n\nShe moved to an entertainment unit at the far wall. \"Don't let my parents hear that; they still say I should have taken up art instead of archaeology.\" The room filled with a gentle sound of classical guitar, as she ventured to a small table. \"I know you just came off a shift, so maybe you're hungry?\"\n\nHrelle drew closer to the table where she had stopped, where a small platter of recognisable snacks of various types and origins sat, awaiting them. She looked up at him again. \"I ordered what few Caitian recipes we have in our database. Now you can taste for yourself what we have to put up with here.\"\n\nHe looked over the selection, choosing what looked like a sandwich of grilled shuris meat and blood mustard. \"That's very kind of you, thanks.\" He bit into it, chewing and making sounds. \"Mmm... Mmm... Oh, yes...\" He swallowed, looking at her. \"Yes, that's definitely shit.\"\n\nShe laughed softly. \"Told you. Don't hold it against me.\"\n\nHe looked back at her, his voice low, melodic, as he took her hand to draw her in again. \"I didn't come here for the food, Barbara.\"\n\nBut as he was about to nuzzle into her neck again, she reached up between them, pressing a hand against his chest. \"Wait... I have to tell you something before this goes any further.\"\n\nHe stopped, hoping he hadn't done something wrong, had misinterpreted the signs somehow. \"What is it?\"\n\nShe breathed in, looking a little anxious now. \"There was a scientist here. We were involved, for a time...\" She sighed. \"He got too serious about it, and eventually I had to break up with him. He left on the last ship that served this sector, before yours took over.\"\n\nSomething like embarrassment crossed her features. \"I'm very attracted to you, Esek, and there's light years of obvious difference between you and him. I think we can have some fun together. But you have to know I'm not looking for a life partner.\"\n\nHe drew back a little and nodded, understanding all too well. He nodded. \"Oh, I see. I get it. You're just using me for sex. Mindless sex.\"\n\nHer face paled. \"I- I didn't mean-\"\n\n\"Because if that's the case, I'm really quite happy with that.\"\n\nThe anxiety bubbling in the woman's eyes now seemed to simmer again. \"You are?\"\n\nHis hand moved up to draw back her hair. \"I'm just restarting my life, and trying to reconnect with my little girl - who is no longer little, and who has grown up far too much too quickly for my liking - and so I'm definitely not ready for another partner, either.\"",
        "He nodded thoughtfully as he continued to speak, while his hand moved down from her face to her shoulder. \"And since we're now being upfront, I should tell you that it's been over seven years since I've had sex with a woman.\"\n\nHis hand moved down further, tracing the outline of her breast through her dress, making her close her eyes and shiver in his embrace. \"And now there's this very attractive-looking, attractive-smelling woman in front of me whom I really want to bed.\"\n\nBarbara's breath quickened. \"Are you- Are you sure-\"\n\nHe drew her in closer, reaching around, relishing the supple feel of her flesh. \"I should warn you, though, it's been so long, we may have to do it more than once. Just to make sure I remember how everything works. May have to be at it all night, in fact.\"\n\nShe nodded against his shoulder. \"W-Whatever you have to do, I'll understand.\"\n\n\"Thank you, you're very kind.\" Hrelle reached down, sweeping her up into his arms and carrying her into the area he smelled was her bedroom, thankful she had a large bed that proved to have a firm mattress. He lay her down, carefully but with anticipation, as he hovered over her, nuzzling once more into her neck. He whispered in her ear, \"I'm sorry my people don't have lips to kiss. But we do have tongues.\"\n\nAnd as if to prove it, his tongue darted out and licked along her ear, before he descended along her body, making her arc beneath him.\n\nSuddenly she seemed distracted. \"Oh no- Shit!\"\n\nFrom where he was, he asked, \"What is it?\"\n\n\"I don't believe it! I forgot to shave my legs! I'm sorry-\"\n\nNow Hrelle stopped where he was and chuckled, making her look down at him as he asked, \"Do I *look* like body hair is going to be a dealbreaker for me?\"\n\nTO BE CONCLUDED"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "science fiction",
        "space",
        "federation",
        "caitian",
        "starfleet",
        "starfleet academy",
        "starship",
        "alien11111",
        "fanfiction"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-field-trip-ch-06"
}