{
    "title": "Dry, No Lube Ch. 05: Blitz",
    "pages": [
        "I wrote this while I was reading Erik Larson's The Splendid and the Vile, during which I wondered how a person like Pixy Pfeiffer would react if she was huddling powerless beneath a bomber.\n\nPoor thing.\n\n* * *\n\nPull on a pair of underwear.\n\nTuck yourself in nice and tight. Adjust it so that your penis is lying to the correct side, or so that it frames your labia just so; arrange it so that it doesn't tug at your pubes. If you're a certain kind of male mutant, go ahead and tuck your four balls comfortably into the pouch.\n\nNow. Pull your pants up.\n\nFix your staytab, fasten your belt. Pause, shifting your weight from foot to foot, then smile because everything fits perfectly.\n\nNow? Go on into the bathroom and push everything down. Go on. Everything: pants and undies, all the way down to the ankle. Shift your feet around with your pants and underwear all intertwined; get them nice and mingled. Then, bend quickly and pull everything back up in one disheveled mass, no adjusting. Let all your bits and pieces tuck themselves away wherever they want. Let your underwear bunch up under your trousers. Let them get misaligned, the two waistbands not quite lined up.\n\nFasten that staytab! And now? Go on with your day, coping with the fact that everything is just slightly fucked up. But not fucked up enough to keep you from getting your work done.\n\nThat was similar to the feeling of discomfort racing through Subcommander Pixy Pfeiffer's mind as she stood in the main bay of the frigate Desperado, frowning up at where the Line Chief had fastened the netting... well, not wrong, per se. The netting would get the job done. But not right, either. She cleared her throat, as always fighting the Aries accent that threatened to emerge.\n\n\"Um. Chief. Is there a reason the stays aren't clasped left to right, the way I like them?\"\n\nThe chief, obviously still on a residual high from the dose of bump he'd just sniffed, blinked. \"Ma'am?\"\n\n\"Yeah,\" Pixy said slowly, \"I'm certain, absolutely certain, I told you last time that I liked the stays fastened toward the right. Fleet-fashion, not like some fucking merchant ship.\" She nodded to herself, then glanced aside at the carefully blank-faced sailor. \"What do you think, Chief? Do you remember me telling you that?\" Or are you too wasted to care, she left unsaid.\n\n\"Ma'am,\" he replied noncommittally. The big man frowned, looking doubtfully up at the netting. \"Well. I guess I can send someone up there to reconfigure them.\" He sighed, that long-suffering sigh chiefs give when officers are bothering them needlessly. \"Might mean I need to flush the gravity in the whole hold, ma'am, to get a guy up there.\"\n\nPixy's mind churned as she made some notes on her tabslate, her implant feeding her data. The ship was hurtling through sublight space out past the Lesser Bight, fleeting along with 744 souls aboard, weapons status amber. They were crabbed at three degrees to port, which was placing stress on the starboard vanes; not nearly enough to worry about, given the stresses to which combat starships were designed, but still. A gravity dump in the main bay, at these speeds... \"No. Do it the old-fashioned way. Get a ladder.\"\n\nHe nodded, mournful, completely unsurprised. His was not a world where officers acted reasonably at any time, and certainly not out here on the Outer Parabola. They only sent fuckups out here, he knew: officers with pasts, like court-martials or, in Pixy's case, a former career in Service Command instead of Combat.\n\nBut, for all that, she wasn't that bad an officer. \"Most XOs,\" he allowed grudgingly, \"wouldn't even come down here to inspect.\"\n\nPixy nodded absently, her fingers still flying across her 'slate. \"I'm not most XOs,\" she grated. \"I've been here seven months. You should know that by now.\"\n\n\"Still.\" The chief was rattling at his own 'slate, summoning a sailor to square away the nettings.\n\nPixy had no desire to chat with this oaf, but she also had no intention of leaving before she watched with her own eyes as someone set up a ladder to fix the clasps. \"This isn't my first time,\" she said shortly. \"I've done the job before. On a GP Service ship.\"\n\n\"No shit?\" He glanced over at the diminutive women with the fierce glare and the combat medals. \"I didn't think Service Branch used XOs.\"\n\n\"They don't,\" Pixy admitted. \"My captain was... well, an outside-the-box thinker.\"\n\nThe chief gave a knowing nod, brown-nosing shamelessly. \"He saw something in you, ma'am.\"\n\n\"No,\" she snapped, \"he got tired of my whining. I was a promotable lieutenant, I was sick of being a supply officer, and there were no other good billets for me. He made me XO while I cooled my heels waiting for a school slot.\"\n\n\"Oh!\" He sounded surprised, the two of them watching dully as a pair of soldiers sauntered over with an inflatable ladder. \"That, uh, sounds like the kind of thing they'd do in Combat, too.\"\n\nPixy shrugged. \"Actually,\" she smirked, \"I'm continually shocked at how similar Service and Combat often are.\" She watched with approval as the sailors began setting up the ladder. \"Okay. Good enough. I'll be back to check later, Chief, and if all the clasps aren't done correctly, I'll kick your mouth in.\"\n\n\"Aye aye, ma'am.\" He'd heard about the XO's feet. The whole ship was talking about the kicking she'd given old Francisco in the machine shop last week when he'd moved insufficiently fast in response to her orders. They'd still been finding his teeth three days later. \"I'll get it done.\"\n\n\"See that you do.\" A thought struck her, something she'd been meaning to bring up. \"Oh! And do me a favor?\" The Line Chief arched a doubtful eyebrow. \"I'll be out in the shuttle next week doing the hull inspection. It'll take awhile. Can you find a hotplate and bolt it into the crew compartment? So I can have some tea?\"\n\nHis face cleared. \"Shit, ma'am,\" he nodded, \"that's not a favor. That's barely even a chore. I'll do it myself.\"\n\n\"Thanks,\" she nodded, but she was already on to the next item in the endless chain of shit that needed the XO's attention. The hatch rattled behind her as she swept from the bay, brooding, her 'slate still chirping. It had yelled at her while she was taking her inspection notes, nagging, reminding her that she still hadn't approved the personnel transfers from after the mutiny near Plastic Nebula.\n\nAnd she knew she'd better, because the Captain had come back.\n\nCaptain Ledecki had arrived on local Tuesday, hauling along her runner-up trophy from the Celestial Cup, the triumphant PR warrior returning to the backwater station to which Fleet had assigned her, where she could get plenty of practice time while still being One Of Our Bravest Starship Captains. Pixy was walking around these days with her fingers crossed, hoping the Captain's new intergalactic Parcheesi ranking would rise, getting her reassigned to the Core. Getting her off this ship.\n\nNot that Ledecki was a bad Captain. In fact, she was generally quite good: she stayed out of the way and let Pixy do whatever the fuck she pleased. She'd arrived back at the main hatch, ordered grog for all hands, and then disappeared back into her cabin astern with her weird little steward. \"Thanks for looking after the ship, Pixy.\" She'd smiled so sweetly. \"I'm a little worn out from traveling. Why don't we meet for dinner and go over your inventories in, say, three days?\"\n\n\"Um.\" Pixy had all her inventories, inspections, damage bills, and roster shifts ready to go right then. Three days? This was Fleet! \"You don't want to hear about all that right now?\"\n\n\"No.\" The reply had been simple, her steward hovering behind her in the doorway to her quarters, and Pixy had watched speechless as her Captain disappeared back into her cave.\n\nLeaving only Chonny Delmer, the Captain's \"aide\" during her Parcheesi tournament. And an asshole. \"Miss me?\" he'd asked Pixy with a supercilious curl of his lip, and Pixy had decided then and there that she needed to get him off the ship for good.\n\n\"No,\" she'd snapped curtly, and then it had been off to make sure the ship was ready to fight.\n\nThat had been three days ago, and now the 'slate was mad at her for another reason too. Pixy's steward Wrae Juno had picked up on it just the other day as she made them lunch. \"Ma'am?\"\n\n\"Yeah?\" Pixy had been going over the ship's pelding status for tonight's dinner with Captain Ledecki. The pelding was always in bad shape. She'd glanced up to see Juno studying the mail. Her mail. \"Put that shit down.\"\n\n\"What?\" Juno doubled as the ship's legal tech, and it was her duty to shuffle through the official mail. \"It was in with the legal stuff. It's a letter from your mom?\"\n\n\"Of course it is,\" Pixy growled, in no mood for it. \"She always writes when my father dies. I'm sure he's done it again.\"\n\n\"When your father... I mean... what?\" Juno was seldom speechless. \"Uh, what the fuck, ma'am? Did you misspeak?\"\n\n\"Am I some stuttering little bitch, Juno? No, I didn't fucking misspeak.\" Pixy pushed her paperwork aside and sniffed. \"I never misspeak. He dies. It's what he does. It's not as impressive as it sounds.\"\n\n\"Oh, it's not the dying I'm wondering about.\" The little steward flipped a grilled cheese with kale. \"It's that other word you used. 'Again.' That's not something I'm used to hearing in conjunction with 'died.'\" She reached out and tossed the letter on Pixy's worktable.\n\n\"No,\" Pixy muttered, \"when you kill people, they tend to stay dead.\" When she met the younger woman's eyes this time, they blazed back darkly. \"Don't look at me like that.\"\n\n\"Like what?\" She arched a precise eyebrow and then went coolly back to her sautee pan, leaving Pixy to shudder a bit. Cold little murderous bitch. She could cook beautifully, take exquisite care of Pixy's uniforms, and handle all the legal work with more expertise than any High Court justice. She was also a sexually frustrated little murderess with, as far as Pixy knew, at least five victims to her credit, ranging from a couple of sublieutenants all the way up to an admiral. \"I'm just thinking of how I should deal with your sudden attitude. Ma'am.\"\n\n\"Fuck you,\" Pixy groused. \"Go ahead. Poison my food or something. Some days, I'd embrace that.\" She brooded, staring at her mom's letter. \"Yes,\" she sighed at last as Juno produced that awesome chef's knife of hers and ran it neatly across Pixy's sandwich. \"Again. He dies periodically, then someone fixes him up.\" She hesitated, not wanting Juno to know, but fuckit; the little steward would find a way to figure it out anyhow. \"He's got a hobby clone farm.\"\n\n\"A what?\"\n\n\"A clone farm. But, like, a hobby version.\" She watched, her mouth watering, as their sandwiches made their way to the desk. \"Smells good.\"\n\n\"Of course it does. Focus, ma'am.\"\n\n\"He sent away for a kit. Like, a mini-cloning kit. For making your own fruit flies and macaques and shit.\"\n\n\"Cocks?\"\n\n\"Macacques,\" Pixy gritted. \"Like, monkeys.\" She shrugged. \"He eventually got tired of cloning little things and... well, he upscaled.\"\n\n\"Jesus H Buddha.\"\n\n\"Yeah. It's only borderline legal on my world, but what the fuck. It beats drug abuse or autoerotic asphyxiation. My mom got mad one day when he tried to clone my sister, and made him put it away. But since he's retired... well. He's experimenting on himself now.\" She shrugged and picked up the crisp, buttery sandwich. \"He dies sometimes, just to see if the cloned parts work. I guess they usually do.\"\n\nWrae was smiling oddly. \"You guess?\"\n\nPixy chewed deliberately. \"I've not been home in over ten years.\" She tossed the letter abruptly aside and pushed the whole fucking mess from her mind, and now as she strode up from the main bay and the Line Chief's ridiculous ladder she thought about what that letter represented. Home. Leave. Vacation, a foreign concept to a woman who'd pulled every trick in the Fleet book to stay on active shipboard service whenever possible.\n\nBut the 'slate had started alerting her a week ago: she had shore leave due soon. And she might just have to take it; Fleet allowed officers to bank their leave, and Pixy always had. But by now, at fourteen years' service, Fleet was starting to get pissy about banking so many days. Pixy knew the drill: the tabslate would beep. She'd ignore it. So then her implant would beep. She'd ignore that too. So then, at last, they'd call Captain Ledecki, who'd call her down to the great cabin and, in her weird fluffy slippers, order her to go home for a break.\n\nThe concept galled Pixy.\n\nShe tramped along the corridors, by now the sprawling frigate almost as familiar to her as the tiny old Service GPs she'd spent most of her career riding around in. No, she told herself; she wasn't going anywhere. She'd fought for this, for a transfer to Combat and a chance to take warships into battle. Why leave now?\n\nSo, with a brutal jab at the tabslate, she silenced the calendar reminder that told her she had to take leave. But the other message was there, the one that glared reproachfully up at her from the glowing screen, and with a sudden choppy curse she strode to an intertube on the wall. \"Wrae Juno,\" she told the box, the message making its way through the ship until her steward answered scratchily.\n\n\"Ma'am.\"\n\nPixy studied her 'slate. It was time to move on from the mutiny. The new Admiral was shuffling officers around, and as acting captain, Pixy had to sign off. \"Juno. Those three officers I have to send off for reassignment.\"\n\n\"Yes ma'am.\" The steward's voice was carefully neutral. \"The ones you've been delaying.\"\n\n\"Whatever. Pass the word for Mr Delmer and Mr Vecque. My office.\"\n\n\"Aye aye, ma'am. And the other officer?\"\n\nFuck. \"Pick a Marine lieutenant.\" Pixy glanced up and down the corridor to make sure nobody was listening, not that it mattered; information on Fleet ships had a way of being known to everyone right away. \"The least useful one. Summon them, too.\"\n\n\"Lieutenant Tatuu,\" Juno shot right back. \"He's a shitty seller, ma'am.\"\n\n\"Do it.\" Pixy sometimes wondered whether it had been wise, the ship's XO going into business with her own steward to control the drug trade aboard her own ship... but whatever. It was too late to worry about it now. \"Get them in as soon as you can. I'll be right up.\"\n\n* * *\n\n\"So, gentlemen, that's about the size of it.\" Pixy made herself smile. \"The rest of the squadron is so short, that they've selected you three to get reassigned.\"\n\n\"Selected.\" Delmer was not taking this well. \"They've selected.\"\n\n\"Well.\" Pixy let him see her triumphant smirk. \"With input from senior leadership. Like, me.\" She leaned back in her chair. \"Think of it as an opportunity, if you can. Mr Vecque, I'm sending you off with a really good letter of commendation for your outstanding duty performance,\" she lied. He'd never been more than adequate at anything, and when it came to supply swaps with other ships... well. That's why they used his assistant for that. \"It's waiting on the Captain's desk, but your transport is coming in about three hours.\"\n\nHe'd nodded lugubriously. \"What ship, ma'am?\"\n\n\"Well, see, that's the really good news.\" Pixy knew she was laying it on. There was no way any of these guys would see this as anything but a demotion. \"You're off to the Conqueror. Captain Pratt, flying the pennant for the whole Lesser Bight Squadron! That's a great opportunity to excel, plus it's a cruiser.\" She was searching for things to say now. \"Bigger quarters.\"\n\nPoor Vecque. He'd been enlisted, then promoted for bravery, and it had been far more than his abilities could stand. But he'd been an ally at a time that Pixy had needed allies, just after she'd arrived, so the commendation she'd written had been a strong one. \"Ma'am.\"\n\n\"And you, Lieutenant Tatuu!\" Tatuu had been the officer she'd reported to when she first came aboard, a Tygon of indifferent talent. \"You're heading off to command your own detachment! On a sweeper, no less!\"\n\n\"Thank you, ma'am.\" He'd heard, of course: the Marines had their own grapevine. He'd be commanding the Corsair's Marines, mostly because every other Marine officer in the Inner Sector had been hanged. All their ships had mutinied, and there could be only one price for a Marine officer who let that happen. \"I'll do my best.\"\n\nDelmer stirred, glancing at Tatuu. \"You can go, Lieutenant. I'm sure Commander Pfeiffer has other things to say to me.\"\n\nPixy watched the Marine glance at them both, the apprehension clear in his green Tygon eyes, before he did a right-face and without another word went for the door. \"Standby, Lieutenant,\" Pixy called after him. \"I'll let you know when I've got a ship date for you.\"\n\n\"Aye aye, ma'am.\" He didn't look back as the hatch slid shut, and when Pixy swiveled her chair back to face Delmer he was already sitting down across from her, unasked.\n\n\"Don't get comfortable,\" Pixy told him as he sank into her guest chair. \"You're not going to be here long. In more ways than one.\"\n\n\"You win, I guess.\" He glared over at her with an odd, cold smile.\n\nPixy felt her temper, always primed around Delmer, start to flare. She knew she needed to keep it down, though. There was no point in letting him push her buttons. He was leaving. \"I don't much think of any of this is a win for anyone.\" She made sure to keep her voice neutral. \"You filled in as XO for a few months. You know how hard it is to keep this ship running shorthanded.\"\n\n\"Fuck you, ma'am.\" He was angry now. \"This isn't about anything but you wanting me off this ship.\"\n\nPixy let the words hit her and then roll past, leaning slowly back. She could feel a chilly grin of her own, and bit it back. Be professional. She was very aware of how badly she'd mishandled this man. She'd gone in guns blazing from the start, like she always did, and it was occurring to her that that might have been unwise. \"I'm sorry you feel that way, Mr Delmer. We've misunderstood each other, I think. Probably best that you get a fresh start someplace else.\"\n\nHe gave a contemptuous snort. \"Misunderstood. That's nice.\"\n\n\"There's a limit, even now, to the level of disrespect I'll take from you before I...\" She stopped herself, her tone growing more clipped. This hadn't ever worked with Delmer, the threats and intimidation. Be fucking professional! she raged in her mind. \"Well. It doesn't matter. Stand by,\" she repeated, taking refuge in Fleet formula. \"I'll let you know when I've got a ship date for you.\"\n\nHe was nodding slowly, like a cornered beast, still disdainful. \"Uh huh. So, I guess I'm relieved in the meantime? I should spend my time chilling in my cabin and let McZylenko take over as Weapons Officer? Maybe think about the bigger quarters on cruisers?\" he sneered.\n\nPixy nodded, regal. \"I think that would be wise.\"\n\n\"He's a shit. You're making a mistake.\"\n\n\"This is Fleet, Mr Delmer,\" she shot back evenly. \"We all make mistakes. Sometimes all the choices are bad. And we sometimes have to suck it up, bend over, and take it dry. You know that; you've served for awhile. You don't have to get bitchy about it, no matter how you feel about me, but you do have to follow orders.\"\n\n\"You should be getting rid of Paulus, not me,\" he went on doggedly. Pixy had a hard time believing he honestly thought she'd change her mind. \"I'm just an asshole. Him? He's inept.\"\n\n\"We're done here, Mr Delmer.\"\n\nThe man's eyes narrowed in that broad face of his, his clipped beard bristling. \"Pathetic,\" he muttered, turning carefully on his heel. \"This is a bad decision.\"\n\n\"You already said that.\" Pixy made a point of glancing back down at her tabslate. \"Or something just like it. Now shoo. I'm busy.\"\n\nHe shook his head. \"If you didn't want to hear people tell you you're wrong,\" he hissed, \"you should have stayed in Service.\"",
        "Pixy looked up then, slowly, her eyes narrowing. \"Ma'am,\" she prompted softly.\n\n\"Ma'am.\" It came out as a snort. \"Fuck. Good riddance, then.\"\n\n* * *\n\nPixy was pleased with what she saw on her way down to the Captain's quarters. You could tell a lot about a ship by walking through it like a conquering empress, she'd always found. If the people backed obsequiously away from you, they were living in fear. If they stared at you and waited until the last second to salute, they were mad at you. If they nodded and met your eyes, they were a happy crew.\n\nShe met a lot of eyes today.\n\nThey liked what she'd done, she knew. Some of that was obvious: as soon as Captain Ledecki had left, she'd taken control of the onboard drug trade, instituted summary corporal punishment, and increased the number of whores. Morale had soared overnight: Juno kept tabs on the drug prices, and even the sailors who got beatings preferred that to an inconsistent and capricious Fleet legal system, where even the simplest infractions took tense months to resolve.\n\nBetter to take a kicking and just get it overwith.\n\nAs for the whores? Lieutenant Dwart had proven to be an outstanding Prostitution Officer. But alas, the Captain seemed to disapprove of paid sex; she certainly disapproved of beatings, and now that she was back Pixy expected she'd have some explaining to do.\n\nThe Marine sentry at the Captain's door was Ghyll, from Lieutenant Plovsek's platoon. Pixy never really knew how to deal with Ghyll, now back to duty with his old brain placed into the body of his clone. Well, most of his old brain. \"Ah. Ghyll. I've got an appointment with the Captain.\"\n\n\"Ma'am.\" He elbowed a red paddlecatch to alert the Captain's steward. \"Just a moment.\" They waited awkwardly, Pixy glancing aside at the bulkhead; the Captain liked the hull kept opaque, and had given quiet orders to that effect as soon as she'd stepped aboard. Pixy had been keeping them transparent, with the starfield shining into the Desperado.\n\n\"You, uh, you healing all right?\" Pixy felt like she had to say something. Last time she'd seen this body, it had been sitting patiently waiting to get its brain sucked out and replaced by the real Ghyll. \"Rehab going smoothly?\"\n\n\"Yes, ma'am.\" Ghyll had been an okay good Marine, according to Plovsek, but there was never any telling what a brain transplant would do to a person. \"Fit to fight.\"\n\n\"Good,\" Pixy replied weakly; she didn't like Payne, the Captain's steward, but she'd never been so happy to see him as when the hatch slipped open. \"As you were then, Marine.\"\n\n\"Subcommander Pfeiffer.\" Payne bowed with his usual impeccable manners. He'd been completely invisible while Ledecki had been off the ship; Pixy still wasn't quite sure he hadn't accompanied her and Delmer to the Celestial Cup. \"You're expected. If you'd please leave your boots up here...\"\n\n\"I remember,\" Pixy told him brusquely. Ledecki hated footwear. \"What's on the menu, Payne?\"\n\nHe sighed, the well-bred man's sigh when he encounters social inferiors whom, nevertheless, he must serve. \"I've prepared a braised marl, served with hydroponic cress and a nice dhal.\"\n\n\"Great.\" She left her boots haphazardly by the door. \"What else can you get for me?\"\n\nHe arched a mannerly eyebrow, looking doubtfully up at her. \"Ma'am? You're the Captain's guest; if you've got any menu input, I'd be pleased to take it into consideration.\"\n\n\"Would you chop your penis off and serve it as an appetizer?\" Pixy enjoyed needling Payne.\n\n\"I would not, ma'am,\" he sniffed. \"Please go down. I'm certain we're through with the pleasantries, Subcommander.\"\n\n\"I'm not even getting started,\" Pixy muttered, but she loped briskly down the stairs into the living space anyhow. Fucking Payne, that smelly midget. He always put her out of sorts.\n\nLedecki's quarters were, as always, oddly spartan; artificial light everywhere, with her Parcheesi simulator in the corner and Payne's nicely-set table by the kitchen alcove. Real metal silverware, Pixy noted; might have even been actual steel. She'd not eaten with steel utensils in many, many years. Pixy paused, her tabslate under her arm, glancing over at the viewscreen.\n\nEvery other captain in the Fleet would have had the screen in their quarters set up as a repeater, showing the ship's status, the plot, the course, and all the rest. Pixy had hers set up that way, right above her bunk so that she'd know at once what was happening when the intertube chime woke her in the middle of the night for some sort of emergency.\n\nBut then, that was the point: Captain Ledecki didn't need to do that. Because, aboard the good ship Desperado, it wasn't her that would get awakened in the middle of the night. It was her XO. So the Captain's screen was showing a close-up of a Parcheesi match.\n\n\"Hello, Pixy,\" she said, sunk into her sofa in a bathrobe, and Pixy bristled; she was not a first-name sort of girl. \"Have you gotten the chance to see my match? This is the tournament final,\" she beamed, nodding happily at the screen.\n\nPixy set her slate down. \"Um. I'm surprised you're watching, ma'am. After all, you were there.\" And you lost, she left unsaid. Ledecki's hands on-screen moved surely over the spiky board with the same fluid grace that Pixy's own hands showed when she moved them across a shuttle dashboard. Pixy stared blankly at the viewscreen for a moment. \"So, like, what's the score?\"\n\n\"Pixy,\" the Captain sighed mildly, never taking her eyes off the screen, \"don't be dense. I'm not watching this for entertainment. I'm diagnosing my tendencies so that I can mitigate them in future tournaments.\"\n\n\"Oh.\" She shifted her weight uncertainly in the deep pile carpet Ledecki had slapped down over the deck, curling her bare toes. \"Mitigate. Right.\"\n\n\"Thanks for coming, though,\" Ledecki allowed. \"You've been busy while I was gone. I read about you.\" It sounded like an accusation. \"Commendations. Medals. Deaths.\" She paused her viewscreen carefully, then rolled a cynical eye over toward Pixy. \"They warned me this might happen.\"\n\nPixy instantly went on guard. She'd never served with anyone who was a harder read than Lina Ledecki. Apparently it was something she'd learned from Parcheesi. \"Ma'am?\"\n\n\"That Assignments Officer. Commander Thajk. She sent along a little missive about you when she assigned you out here.\" Pixy noticed a sheet of crinkle-paper on the sofa beside the Captain. \"I'm sure you know what she wrote...\"\n\nPixy felt her sphincter tighten. This felt like a reprimand. What the fuck? \"That I get shit done, ma'am.\"\n\nLedecki smiled coolly. \"That's one way of putting it.\" She rose, her dressing gown billowing behind her as she led the way to the table. \"I'm not at all sure you and I are compatible, Pixy, if I'm being frank.\"\n\n\"My methods work, ma'am.\" Nope. No way was Pixy planning on taking any level of shit from this woman, this nonentity who'd allowed Fleet to steer her out here where she could do anything, anything at all, other than being in fucking charge. She sat heavily across from the Captain. \"You told me when I got here. When in charge, be in charge. Right?\"\n\n\"Well, yes,\" Ledecki nodded pleasantly while the napkin maneuvered itself down to her lap, \"but I didn't really mean it.\" Payne was there suddenly, tiny and malevolent, with some toast points topped off with something that smelled bad. \"This is Outer Parabolic Station Four. Nobody really does anything. And yet you come out here to our quiet little backwater and start shaking things up. Fighting the war. Getting people killed.\" She shrugged and bit delicately at her appetizer, a woman accustomed to banquets. \"Disrupting things.\"\n\n\"I'm sure the Assignments Officer warned you I would, ma'am.\" Thajk would have had other warnings, too, if she'd bothered to write them on the crinkle-paper. Warnings like be careful of Pixy Pfeiffer's feet. Thajk's black eye had taken several days to fade. Pixy was not in the mood for this, not at all. \"You'll find I'm handing your ship back in excellent order, I think.\" She tapped her tabslate. \"It's all right here.\"\n\n\"Yes.\" Ledecki yawned, her eyes straying back to her own hands on the screen. \"I'm sure there's all sorts of things I need to sign.\" They watched as Payne approached with two long dishes of marl. When the Captain spoke again, her voice was even more quietly tentative than usual. \"I guess we can keep the FPP going,\" she conceded.\n\n\"Wait.\" Pixy paused with a spoonful of legumes halfway to her mouth. \"You're okay with the whores now?\"\n\nHer answer was a placid nod. \"Your instincts in putting Raella Dwart in charge and bringing the program to full strength seem to have done wonders for morale,\" she admitted. \"So why not. I can admit when I might have been wrong.\"\n\n\"Well, thank you ma'am.\" The dhal tasted a bit off; Pixy was certain Payne had pissed in it, but this was Fleet. It would hardly be the worst thing she'd ever eaten. \"And, um, corporal punishment?\"\n\n\"That ends.\" Ledecki's reply was flat and hard, a book dropped onto the deck. \"We're not monsters.\"\n\n\"Some of us are,\" Pixy reminded her softly, thinking about the recent mutiny.\n\n\"Well, the crew certainly won't improve if their officers treat them like dung,\" she pointed out. Pixy merely blinked, defeated, thinking how useless it was to try to get a woman like this to understand that sailors weren't there to be improved. They were there to do their duty. \"So. That? That ends. See to it first thing tomorrow.\"\n\n\"Aye aye, ma'am.\" It was nothing Pixy hadn't expected, anyway. And the Captain letting her keep the FPP was great news.\n\n\"Now.\" Ledecki chewed slowly, then dragged her eyes back from the screen to Pixy. \"I returned to a severe message from the Academy on Hephaestus III. Something about three midshipmen they're missing.\"\n\n\"Severe?\" Pixy was not an Academy grad. She seldom cared about messages that came from them. \"I'm not surprised that they're trying to find their people, ma'am. I might have forgotten to put our three midshipmen on the return shuttle once their assignment was up.\"\n\n\"Why's that?\" Ledecki didn't seem pissed, just genuinely curious. \"Had you told Raella to enroll them in your pimping scheme, or something?\"\n\nPixy ignored the dig. \"We lost Mr Welson and Mr Zuus.\"\n\n\"Yes. They died. Have you sent for their clones yet?\"\n\nPixy waited, silent, until the Captain met her eyes again. \"Really dead, ma'am.\"\n\n\"Oh.\" Her fork hit the long bowl with a clatter. Lina Ledecki was the least bloodthirsty officer Pixy had ever met. \"Really dead.\"\n\n\"The midshipmen are pretty good,\" Pixy allowed, \"especially Shitbird and Vagina.\"\n\n\"Who?\"\n\n\"Smith-Aliyeva and Wollz,\" Pixy corrected; Ledecki did not appreciate unkind nicknames. \"The third isn't irredeemable, either, given enough time. I'd already spoken to Commodore Krynne about giving them acting warrants as Junior Lieutenants, and she said to talk to you about it.\"\n\n\"Admiral Krynne.\" Ledecki shrugged. \"They're promoting her.\"\n\n\"Oh.\"\n\n\"Not officially, not yet. But soon.\" She resumed eating. \"Fine. They can be acting officers, then. I'd rather just call them midshipmen, but whatever. It's a fait accompli, anyway.\"\n\n\"What?\" Pixy was not enjoying the marl. \"I just did something until it would be too late to do anything else.\"\n\n\"Yes, Pixy, you ignorant peasant. That's exactly what a fait accompli is.\" Pixy bit back a retort as the Captain frowned. She stirred, the screen catching her eye again. \"Payne! Where did my match go?\" The screen was blitzing in and out, flashing with static. \"Why is the viewscreen so messed up?\"\n\n\"You should have checked it, ma'am,\" Pixy told her venomously.\n\n\"Too late now,\" Ledecki whined.\n\n\"You're saying it's a fait accompli, then?\"\n\nThe Captain swiveled her head very deliberately back toward Pixy, glancing at her food. \"You're a very useful officer most of the time, Pixy, but you're not very funny. Eat your marl.\"\n\n\"Ma'am.\"\n\nPayne was scuttling around behind the viewscreen, but the alert chime was already sounding by then. Both women stiffened automatically; it wasn't every day that you heard an alert chime. They conditioned you to pay attention when that thing sounded, and this time it proclaimed the arrival of the Honorable Julles Krynne, in acting command of the entire archsquadron, resplendent in the glory of the USS Billy-o's sumptuous Staff Quarters. She waited in regal state, glaring at the camera, her eyes rolling as her voice boomed from the speakers. \"Is she finally fucking there?\"\n\n\"Yes, ma'am. We're all connected,\" came a flustered voice from offscreen, probably one of her techs.\n\n\"Hello? Commander Ledecki?\"\n\n\"Yes, ma'am!\" The Captain got to her feet at once, ludicrously saluting the camera. \"A pleasure to see you, Admiral!\"\n\n\"Not yet!\" hissed Payne from down near the deck. \"She's still a commodore!\"\n\n\"Yes! Pleasure to see you, Commodore!\"\n\nKrynne frowned, peering into her camera, her eyes flitting around. \"You're on mute, Commander Ledecki.\"\n\n\"What?\" She looked blankly around, Payne dithering with the cables behind the screen, so it was left to Pixy to march across to the screen and smack the unmute button.\n\n\"Go ahead, ma'am,\" she whispered, but Krynne's ears were sharp.\n\n\"Was that Pfeiffer? Show yourself, Commander Pfeiffer.\"\n\nPixy rolled her eyes, noted where the camera was, and bobbed into view for a split second. \"What's up, ma'am?\" She ducked back down at once.\n\n\"Your forehead is delightful, Pfeiffer,\" Krynne snapped, \"but since you're there, you might as well get into the picture. I've got a change of mission for your ship, top priority.\"\n\nTwo sets of eyebrows rose on the Desperado. Pixy, for one, hadn't been aware they were accomplishing any mission to be changed. She raised her head guiltily and stood there beside her captain, not at all sure what was going on. Except that she wouldn't need to finish her marl.\n\n\"I'm glad you're both on. It'll save time. Captain, I'm drafting orders right now for transmission over midbeam, but you'll need to get underway at once and I want to give you time to get everything plotted.\"\n\n\"Underway?\" There was a quiver in Ledecki's voice, and Pixy reminded herself that she was on camera just before she rolled her eyes. Ledecki was the kind of officer who preferred to stay safely in formation with other ships. Pixy did not think that way. \"Where?\"\n\nKrynne glanced sideways, gnawing her lip. \"Phaeton system? Fourth planet. It's in the Lesser Bight. The Flasbards are bombing out there, and the locals are demanding Fleet do something about it.\"\n\n\"Like what?\" Ledecki asked, hushed. The Commodore blinked back at her.\n\n\"Like locate the bomber. Blow the shit out of it. Save the day.\" Krynne glanced at Pixy. \"Clear enough?\"\n\nPixy nodded vigorously, her blood pumping already. \"Very clear, ma'am.\"\n\nThe Captain hesitated. \"Did, ah, any word come through about my request for transfer to Public Relations Command?\"\n\n\"You're going, Ledecki,\" Krynne snapped. \"Get your shit together. I want you underway by 2200 relative. Your contact at Phaeton is some militia officer or security guy called Johnward Lorero. The people in charge are some kind of noble family. Sounds like a pain in the ass, but hopefully you won't even have to talk to them in person.\"\n\n\"Ma'am?\"\n\nKrynne did roll her eyes. \"Just blast the fucking bomber, Ledecki. It's pretty simple, and sadly? You're my best ship at the moment.\"\n\n\"Uh, Ma'am?\" Pixy cleared her throat. \"What's the target?\"\n\n\"Your target is a Flasbard bomber, idiot. I've said that a couple times now.\"\n\n\"No, ma'am.\" Pixy took a deep breath. \"I mean, their target. What are they bombing?\"\n\nKrynne made a dismissive gesture. \"A few terraforming nodes. About a hundred, hundred-fifteen thousand humans?\" She consulted her tabslate. \"They mine fleromorphic basalt there. We use it in our fuel boosters, apparently.\"\n\n'\"I know all about it.\" Pixy was very aware that the Captain was staring at her, open-mouthed. It was disturbing for her to realize that, just a few months removed from Service Command, and despite Ledecki's entire career in Combat, she, Pixy, knew much more about what to do here than her Captain did. \"We're on it, ma'am,\" Pixy told them both. \"No worries.\"\n\n\"Good. Any questions?\"\n\n\"We're still short a couple officers,\" Pixy said slowly. \"We're retaining our midshipmen, but...\"\n\n\"Yes,\" Krynne replied with the ghost of a smile. \"I heard about that. The Academy is displeased.\"\n\n\"I... that is, we could use a qualified watch officer. Preferably from a non-mutinous ship.\"\n\n\"I hanged all the mutineers,\" the Commodore snapped. \"Not an issue. If I can find you anybody, it'll probably be someone's cast-off, Pfeiffer. You might be better off just training up those midshipmen. I'll go ahead and sign their warrants, so you can feel free to make them watch officers. Or, hell, train your Marine officers; it's not that hard.\" She leaned back and said something to some underling off-camera. \"As we're all aware, we don't really get the cream of the crop out here.\" She nodded. \"2200. Head for the Lesser Bight and I'll get the orders beamed off to you as soon as they're ready. And if I can't get a replacement watchstander by then, Commander Pfeiffer, you'll just have to make do with who you've got. I'd plan to do just that.\"\n\n\"Aye aye, ma'am.\" Pixy was acutely aware of how quickly she and Krynne had elbowed Ledecki out of the conference. \"I'll just assume we're short. Captain? With your permission, I'll go get the ship ready?\"\n\n\"Oh. Uh, sure. Carry on, XO.\" Pixy was bounding up the stairs as she heard Ledecki bleating once again at the screen... \"Now, I really was interested in that PR slot...\"\n\n* * *\n\nStars, innumerable stars, gleamed on the scarred hull of the USS Desperado as she slid through space, shouldering aside both merchant vessels and caution in her headlong passage to Phaeton.\n\n\"Nominal transit is forty-four hours, sidereal.\" That had been Delmer on that first night, as Pixy waited outside the starplot, still burping up Payne's bad marl.\n\n\"Bullshit. Run the numbers again.\" Her own rule-of-thumb navigation had suggested they should be able to work the voyage in just a shade over thirty-nine hours. \"There's a gravity well off your charted path by about forty LY,\" she pointed out, stabbing a finger at his chart. \"The time spent drifting off your line will be more than made up by the slingshot we'll get, probably.\"\n\n\"To save five hours?\" Delmer had been surlier than usual, but Pixy hardly blamed him; he was working under a virtual guillotine, ready to fall as soon as Pixy could boot him off the ship. But while he was here, he was First Officer, meaning navigation was his job. \"It might not work.\"\n\n\"Yeah, well. Humor me,\" she snapped. \"And yes, 'to save five hours.' What do you think we're doing out here?\" she demanded petulantly. \"Fucking citizens are getting attacked by the enemy. It's easy for you to piss away five hours like it's nothing, Mr Delmer. It's not your home getting bombed.\" She turned away before she struck him. \"Lazy motherfucker.\"\n\nNow they were bowling along through the cosmos, and Pixy supposed that from the outside the frigate's path probably looked majestic. From inside? Just stars, endlessly shifting through the parts of the hull Pixy could get away with leaving transparent. She brooded in the command chair, flipping restlessly through intelligence updates fresh from Paulus' coding gun. \"This is it?\" she frumped at him. \"Nothing on any new bomber types?\"\n\nPaulus shrugged. \"I put in a request, but it's been a long time since anyone got Flasbombed. Most places have decent defenses.\" Yes, Pixy thought sourly, and then the raids stopped. And people got complacent and built unprotected flerium mines on prosperous moons... \"I'll let you know if anything else comes in, ma'am.\"",
        "\"Nothing else will come in.\" She stared sullenly over at the Commo station. Paulus had just replaced his assistant Jeyne, meaning Jeyne was currently in his bed. Naked. Pixy gritted her teeth; it had been a week since she'd been able to sleep with him. \"I might go take a nap,\" she mused to nobody; the objective wasn't due to come into comms range for another five hours or so, even on the low-beam.\n\nBut shit, there was always more to do. XOs were continually busy as a rule, but it was worse when the skipper spent her life sulking aft. She'd not slept in two days as the ship hurtled through space.\n\n\"You're not taking a nap.\" The voice was a low hiss, Wrae Juno standing right behind her. \"You're too busy.\"\n\n\"Fuck.\" She started. \"I didn't even hear you.\"\n\n\"No, you didn't. And don't forget it.\" Juno liked to remind people she was sneaky. She pulled two folders from under her arm now. \"You said you were going to slot the midshipmen, ma'am.\" She jerked her head back toward the hatch. \"They're waiting.\"\n\n\"I'll slot you,\" Pixy muttered, powerless, scowling back into Juno's mocking grin. \"Maybe I'll make one of them my steward.\"\n\n\"I'd be the first to approve, ma'am. You're a pain in the ass to be a servant for.\" The little redhead smirked. \"Do me a favor and make it one of the guys. I'll break him in properly...\"\n\n\"Slut.\" Pixy held out her hand for the folders. \"Do me a favor. Bring me some matzoh.\"\n\n\"You got it.\" Juno sauntered off, her pert ass swinging. \"Want me to send up the midshipmen?\"\n\n\"Fine.\" Pixy had no objection to making officer assignments here on the bridge, in front of everybody. Hell, it was no secret that two of them were reliable and one was a relative waste; the whole ship knew by now that Midshipman van Shaughnessy was kind of useless. She perked up suddenly, something about the ship's motion raking at her senses... \"Wait. Is there something wrong with the aft vanes?\"\n\nThe two techs in the Maneuvering pit below her glanced at each other, then at the helmsman. \"Yes, ma'am. Starboard. We're well able to compensate.\"\n\n\"At this speed? You shouldn't need to compensate. OOD!\" She shouted it, but she didn't really need to; Lieutenant Dwart was standing right there in her orange Engineering utilities, the OOD's telescope cocked under her arm alongside her impressive left tit. \"Did you know there was something wrong with the aft starboard vanes?\"\n\nDwart's vacant face told her the answer was no, not really. \"It's in the order book, ma'am, I think.\"\n\n\"Yes,\" Pixy grated, \"but did you feel it? Could you tell by the handling of the ship? And do you know how dangerous it is to be moving above velocity factor ten with a loose aft vane?\"\n\nDwart licked those full, sexy lips. Pixy knew she'd seldom made a better choice than when she picked Dwart to be the ship's chief whore. The Head of head, as they called her behind her back, and with lips like that Pixy knew why. \"I know it's not ideal, ma'am,\" she admitted, glancing over at the helmsman. \"But I also know we're in haste, and slowing down to make repairs isn't a requirement unless the vibration exceeds 4.8 million Hertz...\"\n\n\"Sure. But what's the rate of vibration now? Without looking at the viewscreen, please.\" Pixy was at full gallop now, snappish for the sake of being snappish, her mind still reeling a tad: 4.8 million Hertz? On the GP Service ships Pixy had spent her whole career in, vanes needed to be inspected and replaced if their vibration hit just ten thousand Hertz! Even after a few months aboard, guiding this awesome war machine through space, the strength of it awed her. \"Tell me, Ms Dwart.\"\n\n\"It's well within tolerance, ma'am,\" the woman insisted, unexpectedly sturdy. \"I've got the helm alarm set to warn us when the rate goes beyond two million.\"\n\n\"Relying on warning alarms is not a perfect technique, Ms Dwart,\" Pixy grumbled, annoyed that she couldn't really find fault with the answer. \"Check the numbers every fifteen minutes.\"\n\n'Aye aye, ma'am.\"\n\n\"Put it in the order book too, please.\"\n\n'Ma'am.\" They both glanced aft as the hatch grated open, admitting the two more useful midshipmen. \"State your business, you two.\"\n\n\"I called them.\" Pixy nodded at Dwart. \"Thank you. Mind your helm.\" Pixy peered hard at the two, her lips pursed severely. \"Where's Asskiss?\" Sure, Captain Ledecki didn't like Pixy's nicknames for the midshipmen, but the Captain wasn't here. This was the bridge; she was never here. \"Not that it matters. I'm not terribly interested in him, but I found a place to put you two.\"\n\nShe eyed them both. Nergui Smith-Aliyeva, alias Shitbird, wiry with huge, alert eyes, who knew when to keep his mouth shut. And Dahlia Wollz, alias Vagina, whose tae-kwon-do prowess had saved the bridge during the recent mutiny. \"So we're short. You know that. We're heading off on a real mission; you know that, too.\" She'd made sure they'd been invited to the wardroom with the other officers once they'd gotten underway. \"I have it in mind to give you two shitlicks warrants as acting duty officers.\" She saw their eyes light up. Wollz, in particular, was pumped; she'd already gotten a medal out of this trip. \"So from now on you're Mister Shitbird and Ms Vagina. Congratulations. Your buddy Asskiss can just stay Asskiss. Mr McZylenko!\"\n\n\"Ma'am?\" Poor McZylenko, who was usually such a pussy, came loping over from the weapons station. He was Delmer's assistant, and unfortunately, he'd soon be the actual Weapons Officer once she was able to shitcan Delmer.\n\n\"I'm giving you Mr Smith-Aliyeva here as your Second Assistant. Turn him into a goddamn killing machine.\"\n\n\"Ma'am.\"\n\n\"Maybe, we can even get him qualified to stand a watch. But until then, he's yours. Mr Paulus!\"\n\n\"Yes?\" Paulus' commo station was within earshot, so he'd already figured out what was going on. \"Do we get Vagina, ma'am?\"\n\n\"You? Fuck no, Mr Paulus; you couldn't get any vagina without paying for it. You do, however, get Ms Wollz as your second assistant.\" Pixy glanced over at the young woman. \"But hands off, Mr Paulus. Clear?\"\n\n\"Ma'am!\" He looked offended. He'd been exiled out here into the wastelands because he'd been found drunk on duty once, but he should have been sent here because he was deeply inept. \"I resent the aspersion, ma'am.\"\n\nPixy turned to Vagina. \"What's an aspersion, Ms Wollz?\"\n\n\"An insult, ma'am.\"\n\n\"Oh! Well.\" Pixy lowered her head, glaring at Paulus through her lashes. \"You know better. That wasn't an insult.\" She waited, for effect. \"This is an insult, you whiny, worthless, cockless little insect. And here's another: if I had to pick someone to rescue out of a fight, I'd go in after Ms Wollz before you. So suck on that, you shitfuck.\" She'd been reasonably careful to keep her voice down. \"Pray let Mr Jeyne teach her the mystical secrets of commo. He's better than you.\" She smiled grimly. \"How's that for an aspersion?\"\n\n\"Top-notch, ma'am.\"\n\n\"Kissass. Get moving. Teach her how to be a watch officer.\" Pixy glared moodily out at the navigation pit, then cocked an eye toward Dwart. \"Okay, OOD. You've got the ship.\" She could do it. \"I'm taking a nap. Nothing should happen,\" she went on, glancing up at the plot: no contacts. Zero. \"But I doubt I'll be too long.\"\n\nThe lieutenants lived along the passage just aft of the wardroom, and everyone was shuffling around with all the vacancies: Vecque had had a hullside cabin, and Golightly and Charlatul were currently dueling about who should move in. Managing the lieutenants was the First Officer's job: another thing, falling through the cracks because she'd not been able to get Delmer off the ship. I might have to step in and decide who gets the better cabin, Pixy sighed to herself; so much to do, always.\n\nBut not right now.\n\nShe stole quickly along to the third hatch on the port side and punched in Felix Jeyne's doorcode. Bedwarmers customarily slept in the senior officer's quarters, but Pixy knew little Juno would be lurking back there and she had no wish to be waylaid by more work. For that matter, she didn't want to bring Jeyne back to her place for the same reason. Juno had never disguised her interest in sliding into bed with the two of them, and Pixy was too tired to deal with that shit, too.\n\nJeyne's quarters were dark and close. A sublieutenant aboard a frigate got a fairly spacious cabin, but Jeyne wasn't hullside yet; his place lacked stars. But stars weren't what Pixy Pfeiffer needed just now.\n\nShe needed closeness.\n\nHer hand slid across her staytab, the clothes sloughing from her body with alacrity. They seemed happy to go. Made sense; she'd been unable to shower since Krynne's change of mission, and she could smell herself as she glided over the bare deck toward Jeyne's rack.\n\nHe was crashed out, crammed hard into the angle where his mattress met the bulkhead by the latrine. He had a weird way of wedging himself right up against the nearest available surface, which was useful when he was warming Pixy's bed; then? She was the nearest available surface. But at times like this, it just looked weird. She smiled tiredly, lifting the thin blanket to slide in beside him.\n\nHe was sleeping soundly, but that was fine with her. Pixy was not in need of anything from him. She needed to renew herself, and she had her own ways of doing that. Almost six months they'd been warming each others' beds. They were used to each other by now, so she slid down his spine beneath the blanket with her body pressing against his, resting her cheek against his skin. She liked smelling him, feeling him, touching him, and this time he didn't even stir until he felt her arms snaking around his waist, her face and lips nuzzling the small of his back.\n\n\"We could go to your quarters,\" he rumbled sleepily.\n\n\"I like where I am,\" Pixy whispered back, feeling the strain melt away as her lips roved slowly along the lean cheeks of his ass. And Jeyne was wise enough to lie there and let her be. She tasted skin and sweat, her eyes fluttering closed as her day melted away into the urge for contact. She felt him stiffen slightly, like he always did, when her tongue skirted the outer edge of his butt crack. \"Just relax with me,\" she murmured.\n\nHe did, slowly, while Pixy trawled along the backs of his thighs, still tented by his Fleet blanket. Her fingers traced idly around him, along the hair and flesh of his chest and belly, then down to where his cock nestled between his thighs. He let her raise his upper leg so that her roving face could find the warm, sensitive flesh between asshole and balls.\n\nPixy was losing herself, exactly as she needed to. This was bedwarming distilled to its essence, a time of closeness and trust and warmth far, far removed from the sterile walls and decks all around them, and from dry space beyond. She needed this, and as she tasted his crotch she felt her whole body uncoil between his legs, slithering up and around to his front.\n\nThe worm. That had been Lieutenant Shimizu's laughing term for this thing Pixy sometimes felt driven to do, the full contact of face on body, and Pixy had always secretly thought that was just the right term: worms dug and delved and pried, just as her nose was doing to Jeyne's balls right now. Although Shimizu had always messed it up: she'd always tried to reciprocate, back there aboard the Seville in those far-off days when Sublieutenant Pfeiffer had been fifth officer. Leanne had been her name, Pixy recalled suddenly, the only bedwarmer she'd ever had who'd been shorter than she was.\n\nPixy wondered where Shimizu had ended up. She'd been a good officer, but she was undoubtedly still in Service Command if she was even still in Fleet. Probably already a captain, guiding some General Purpose ship from place to place, like all her other old friends in Service. That was the story of Pixy's career now, littered with useless contacts from those days in Service.\n\nJeyne's penis was growing stiff and heavy as Pixy let her chin nudge it toward her lips, laying a soft kiss on his head. Not all bedwarmers were also lovers, but she and Jeyne enjoyed that side of it too; he had a pleasant dick that, no doubt, his wife was missing these days. She emerged from between his legs to bury her face in his pubes now, his thighs clasped around her body, feeling warm and secure and wanted as she trailed licks and kisses up the front of him.\n\nHe was still wise enough to keep his mouth shut as she wedged herself between his warm body and his cold wall, face to face now with their eyes glittering in the stuffy darkness. She felt him raise his arms, one hand in her hair with the other one light on her hip, their legs pressed together, and it was the most natural thing in the world to raise her foot atop his knee, pushing against him, feeling his cock now warm and firm along the lips of her pussy.\n\nHe pushed inside her, easily, smoothly as she sighed into his mouth. Bliss, she felt: this abandonment of herself to him, to them, to this, and she drifted off to sleep with the pleasant fullness of his penis halfway inside her.\n\n* * *\n\nShe watched him a day later, forcing aside a twinge of unwanted jealousy as he stooped close behind Vagina at the comms station with his face nearly buried in her long hair. He was teaching her to use a coding gun.\n\nJealousy. Of a man who was happily married to a doctor. Pixy chuckled to herself, drawing an irritated glance from Captain Ledecki. \"What's funny?\" she demanded.\n\nMost of the bridge crew clearly thought she was, making her monthly appearance on the bridge in her lounge coat and slippers. She hadn't yet told anyone why she'd come up here, though Pixy figured it was just as well; they were about to hail the people they were supposed to come help, so the command chair was where the skipper clearly belonged. Probably, she reflected, the captain was simply bored down there.\n\n\"Nothing, ma'am. A joke Mr Jeyne told me a bit ago,\" Pixy lied, hoping the Captain wouldn't ask her to repeat any. Jeyne did not tell her jokes, as a rule, and she knew the fact she was using him as a bedwarmer made Ledecki uncomfortable. The woman had shown no signs of ever having one. \"You're drifting again, helm!\" she barked, keeping an eye on their rate of deflection. \"Got to stay on top of that.\"\n\n\"Sorry, ma'am.\" McZylenko stood beside Pixy with his midshipman next to him, a long line of useless officers milling around because the Captain was here. They all stood in careful nonchalance with their hands behind their backs, even Pixy. And as soon as she realized it, she scowled at herself.\n\n\"Not sorry enough. Stay on top of it, Mr McZylenko,\" she growled. \"Might even be a good chore for Mr Shitbird over there.\"\n\n\"Pixy,\" the Captain warned.\n\n\"Like I was saying, a good chore for Mr Smith-Aliyeva over there,\" Pixy went fluidly on, restraining another scowl with great difficulty. \"How about it, Midshipman? What's the optimal deviation deflection correction the helmsman should apply at this velocity factor? With the clobbets deployed?\" The kid blinked across at her, then whipped out his abacus and began clacking his way toward the solution. \"In your own good time, Mr Smith-Aliyeva.\"\n\nJeyne straightened at the commo station. \"Looking like three minutes until earliest signal acquisition, Captain,\" he called out.\n\n\"Signal for what?\" Ledecki frowned.\n\n\"I got it, ma'am,\" Pixy muttered. \"Try the secondary low-beam first, Mr Jeyne.\"\n\n\"Aye aye, ma'am.\" His tone made it obvious he didn't need to be told how to fucking make commo contact, thank you very damn much.\n\n\"Yeah,\" Pixy went on. \"You're hailing something named Johnward Lorero. Callsign seems to be Node North Command? Or North Security? Either should work.\" Pixy's implant was flashing her data in a constant stream, which she always found disquieting.\n\n\"Well,\" Jeyne said quietly, \"actually, Ms Wollz here is going to be hailing something named Johnward Lorero.\" Pixy shrugged; she could not care less. \"One minute, Ms Wollz.\"\n\n\"Sir.\" Pixy hid a smile. Jeyne was one of the three shades of lieutenant, and Fleet tradition said lieutenants didn't usually \"sir\" each other. This might be the first time he'd ever had an officer do that, even an ersatz officer like Vagina. \"Shall I try Command, or Security?\"\n\nPixy smiled. \"I'm going to get some tea,\" she announced to the entire bridge. She'd learned early on, from Captain Bourbon-Parma years and years ago, that it was important for officers to pretend never to be worried about what was going on. And nothing said \"I'm not worried\" like going for a butter-tea. \"Good luck in your comms, Ms Vagina.\"\n\n\"Pixy,\" Ledecki began.\n\n\"Ms Wollz,\" Pixy corrected herself, whirling toward the wardroom hatch. Her butter-tea waited there on the hotplate behind the little bar, and she reminded herself to check and make sure the shuttle maintenance guys had bolted one into the shuttle. Rank had its privileges, she mused, and one of them was a ready supply of fresh butter-tea. Even when shuttling.\n\nShe lifted the fragrant bowl to her face, letting the steam cloud her mind in that refreshing way it had, there alone in the wardroom with the great ship humming around her. The first slurp was perfection, thick salty astringency flowing down her throat in a solid, hot lump like a big load of semen. She sighed happily, freed for a moment from the cares of her world, then marched back onto the bridge bold and refreshed and ready to track down an enemy bomber.\n\nUntil the helmsman fucked up.\n\n\"Jesus H Buddha!\" she wailed, the ship careening hard with the whine of the clobbets audible even through the graphene hull. She heard a jumble of other curses as the rest of the bridge watch swayed, fumbling for loose objects before they could hit the deck, but of course it was too late for Pixy: she lay sprawled on the floor with that silky, delicious butter-tea spattered all over the front of her utilities. \"Shit!\"\n\nThe whole bridge now stared at Pixy, standing like a moron with her uniform sheeted in thick, caramel-colored goo. A tech fumbled to pick up her dripping bowl. She was slowly coming to her senses when Jeyne gave a carefully understated report. \"Comms established on Beam Three, 88% signal strength.\" He bent over the console. \"He's requesting visual.\"\n\n\"Put it on,\" Ledecki shrugged.\n\n\"No fucking way,\" Pixy spluttered, but the Captain had been quicker and the screen was suddenly shimmering at the front of the bridge. And that's how Johnward Lorero made his first acquaintance with his Fleet saviors, ranged hopefully around the camera in varying stages of slippers, tea-spatter, and abacus-rattle.\n\nFrom the look on his big, square face, it did not reassure him.\n\n\"Watch your mouth, Pixy,\" the Captain was admonishing in her robe. \"And your hygiene. We're trying to make a good impression here.\" She disliked swearing. She flashed a radiant smile toward the man on the screen. \"Good morning!\" she purred. \"I'm Commander Lina Ledecki, Celestial Parcheesi Cup runner-up. With whom am I speaking, please?\"\n\nThe man frowned, clearly having never heard of Parcheesi. Pixy watched his beady eyes sweep the bridge group, from red-faced XO to fidgety midshipman. \"Ward Lorero. Look, I'll just get to it,\" he rumbled. \"Which of you can fix our problem, and how soon can you do it?\"\n\nEveryone looked at Pixy, which just made her redder. Of course they'd look at her. Everyone knew who ran this show, and it wasn't the woman in the slippers. She stepped close to the camera so that her wrecked uniform wouldn't show. \"Subcommander Pfeiffer. When can I come meet with you, and where can I find you?\"\n\nHe nodded soberly. \"As soon as possible. Administration building at Node North. What's your position?\"\n\n\"Node North?\" Pixy glanced across at McZylenko, who was frowning at the planetary chart on his tabslate. He looked over and shook his head helplessly. \"Can you get more specific?\"",
        "\"No.\" The man glared at her.\n\nPixy tried again. \"But you're on Phaeton, right? Phaeton IV?\"\n\n\"No,\" Lorero barked. \"We're on one of the moons. I told your dispatch officer this a thousand times.\"\n\n\"Yeah, okay,\" Pixy snapped, annoyed at the whole world, \"but you'll only have to tell me once. I wasn't told you were on one of the moons.\" McZylenko nodded now, showing her his 'slate. \"I'll just shuttle down to you.\" She paused a moment, noting their position, the 'slate showing her a moon half-terraformed. Her implant helped her with the math. \"I'll be there at fifteen minutes past local noon, tomorrow your time.\" She did some more math. \"Look about sixty-six degrees above your horizon, east-northeast. You'll see our ship arrive. I'll contact you on the Fleet mid-beam around then. Sound good?\"\n\nHe nodded in that grudging way people have when they're used to being disappointed. \"They're going to come back tonight,\" he told them flatly. \"Hopefully there'll be an admin building for you to come meet me at.\"\n\n\"Hopefully,\" Pixy agreed. She could already tell this was the man she needed to be dealing with: low tolerance for ineptitude, minimal bullshit. He'd do. \"Stay safe, Mr Lorero. Help is on its way.\"\n\n\"I'll believe it when I see it.\" He cut comms right away, leaving the bridge crew blinking.\n\n\"Well,\" Captain Ledecki declared, \"that was a thoroughly rude man.\" This time, Pixy didn't bother stopping herself from rolling her eyes.\n\n* * *\n\n\"So, you know the skipper's going to be going with you down to that moon. Right?\"\n\n\"What?\" Pixy hadn't expected Delmer to speak; they both seemed to have agreed that talking was a bad idea, under the circumstances. Pixy, in a new set of utilities, was stretching high to grab some sucrose off the top shelf in the wardroom galley. She'd been ignoring the silent First Officer in the corner by the EViewer. \"What's that?\"\n\nDelmer yawned, eyeing her as she stretched. \"Fuck. Let me give you a hand, at least,\" he grumbled, hauling himself to his feet. He nudged her roughly aside and grabbed the sucrose without even raising his arm above his chin. \"You short people should all be dragged out and shot.\"\n\n\"I didn't ask,\" Pixy bit out, glaring, but she took the sucrose. \"But thanks anyway.\" She watched him clump back to the sofa. He'd always given off that whiff of manliness, of good-natured virility. She'd never been attracted to him, really, but she'd sometimes wondered what it would be like to take a hate-fuck from him. \"What were you saying?\"\n\n\"Captain Ledecki. She never, ever misses a chance to get her feet on the ground.\"\n\nPixy scowled with the righteous ire of a Fleet officer who was only really happy in space, with her boots on a deck. She glanced out the wardroom door, but they were alone: the two senior officers aboard, other than the Captain. \"Off the record? She's the weirdest human being I've ever met.\"\n\nDelmer returned a veiled glance. \"She's not the one getting rid of me.\"\n\n\"Your loyalty is noted.\" Pixy leaned thoughtfully back against the table. She'd been hoping for another nap before arrival, but there was too much to do. Delmer. He'd been her built-in opponent since Day One, a powerful officer popular with the lieutenants. Accustomed to running the ship under Ledicki's benevolent, distant hands. He had not been impressed to find his style cramped by a hardass XO just transferred from Service, which as far as Delmer was concerned was barely even Fleet.\n\nShe'd broken him by sending him away, then making sure a few of his cronies died. Which was their own fault; they'd mutinied. But Delmer had not been pleased to come back to the ship and find all his friends floating in space. Secretly, Pixy presumed he wanted to leave. She nodded at him slowly. \"So if the Captain and I are both dirtside, you're the senior officer.\"\n\n\"Yes ma'am,\" he replied dryly. \"Such a privilege.\"\n\n\"Quit being a child,\" she snapped. \"You're not an idiot. You're a good shiphandler and you're reliable in a fight, but your attitude sucks.\" She thought of something from the recent Fleet Bulletin. \"Have you heard of those ships they're launching out at Basin 114-IV? The new K-class?\"\n\n\"Those placer-extraction frigates? The ones they're naming for, like, swords?\" He frowned. \"Why do you ask?\"\n\n\"Bigger than a standard frigate,\" Pixy mused. \"Independent orders, raids. That kind of shit. Might be the sort of community that would welcome people with bad attitudes. Want me to write a letter?\"\n\nHe gaped at her. \"You're fucking serious? I'm on the conventional command track, despite this little detour out here in the back of the universe's ass. It's held me back long enough. Why would I want to jerk all that around by moving to a totally new and unproven ship type?\"\n\n\"Why not?\" She was trying to be reasonable, and hoped he noticed. \"You could excel. Fresh start? Different people? A new... like, culture? Organizational renewal?\" She shrugged. \"You wouldn't ever need to serve with me again.\"\n\nHe glared at her levelly. \"I hate you.\"\n\n\"You made my point.\" She rolled her eyes. \"Your feelings are your prerogative, Lieutenant. What I should do,\" she speculated, \"is send you down with her. If the Captain wants to feel gravity, great, but either she or I should stay with the ship.\"\n\n\"I was acting XO before you got here.\" He watched her carefully.\n\n\"Yeah.\" Pixy nodded. No way could she avoid going down there; Pixy trusted nobody but herself to interface with the locals. Delmer was right. He'd done the job before; he'd do it now. \"Captain Ledecki will leave you her instructions before we go, but they'll actually be my instructions.\"\n\n\"I expected nothing less,\" he sighed.\n\n\"And if you don't carry them out, I'll stomp you. But don't worry,\" she added, more quietly. \"I'm not stupid. You know how to handle a ship, and I know that. I'll give you plenty of latitude.\"\n\n\"Gee. You're too kind.\"\n\n\"Fuck off. I'll want data. Propulsion signature, maneuver radii, auditory tells. Predicted top speed, bottom speed.\" He was nodding. \"You know all this. I'll spell it out in writing to cover us both.\"\n\n\"All I need to know is whether I can kill the bomber if I get a shot. Ma'am.\"\n\nPixy gave him a skull-like smile. \"We're in Combat Command. I'd never dream of telling you to avoid combat.\" She shrugged. \"But this moon's got an equatorial length of over twenty thousand klicks. It's massy. Relatively huge sensor shadow. I think the Flasbards will have places to hide.\"\n\nHe returned the smile. \"Whatever.\"\n\n* * *\n\nSo the Captain came along when Pixy shuttled down to the planet, which meant she needed an entourage: little Payne came along, strapped into a jumpseat and looking incongruous in his atmosphere suit. So did a guard detail, three large Marines led by their diminutive and highly dangerous sergeant-major: a completely impulsive woman, was Naline Tarasz. Pixy had processed many complaints against her from Juno and her legal office. Ledecki also brought along the bewildered Skyler van Shaughnessy, whom Pixy and the other officers had taken to calling The Other Midshipman because he was the useless one. He sat nervously with a bitchtube ready in case he vomited.\n\nAlongside squatted wan, cadaverous-looking Suupf, one of the ship's Tygon corpsmen, his medical sack slung over the freshly welded bracket that held Pixy's brand-new hotplate. His green skin was a sickly pea color.\n\nPixy was driving, up on the flight deck with Lieutenant Prowne, pissy because she wasn't in her engineering office. \"I'm still not sure why I'm along, ma'am.\"\n\n\"You know, don't you, that I think you're the best lieutenant on the ship?\" Of course she didn't know that; Pixy seldom praised anybody, and Prowne glanced back at the XO in shock. \"I told you before: I wanted to make you assistant XO.\"\n\n\"But I wouldn't leave my engine room.\"\n\n\"But you won't leave your fucking engine room. You'll be an XO soon enough though, Ms Prowne; about time you saw how things were done, whether you like it or not.\" She flicked the plus-ups, watching the nose rise with the big moon creeping into view now from the side. Pixy steered with her usual savage joy. Piloting shuttles was the one thing she did really, really well, the thing Fleet had known her for the longest. \"Besides, about time you got some fresh air. You breathe nothing but solvents down there; it's unhealthy.\"\n\n\"This is Fleet, ma'am. Everything is unhealthy.\"\n\nPixy nodded her agreement, adjusting the approach angle by eye before the targeting globe even told her it was needed. \"And yet, we bend over and take it.\"\n\n\"Dry. No lube,\" Prowne agreed. The surface was gaining definition now, and two of the moon's terraforming nodes were clear to see down there: patches of atmosphere-hazed greenery, tiny buildings, lights. \"What's this moon called again?\"\n\nPixy consulted her implant. \"Masaakama?\" She had no idea about the pronunciation, but that hardly mattered. \"It's the sector's leading producer of flerium.\"\n\n\"Oh!\" That did intrigue the engineer. \"That's more interesting. Think we can get our hands on any?\"\n\nPixy grinned back at her. \"Why do you think I brought our Acting Supply Officer?\" Charlatul was the last member of the party, in charge of Supply now that Vecque was gone. He'd been doing the traditional Suuply job of bartering sexual favors for needed items ever since it had become clear he could fuck like a superstar. He was useful in the role because he didn't really care what he stuck his mighty penis into. Pixy, who'd spent years in Service Command doing the monotonous skin trade herself, knew how lucky Desperado was to have him along. \"I'll find the local fleromorphic basalt dealer and turn Mr Charlatul loose.\" She rode the turbulence of Masaakama's abbreviated ionosphere, then thumbed the PA. \"Five minutes out, Captain.\"\n\nShe studied the landscape below, mostly dry and featureless apart from those tempting nodes. There were two more of those somewhere on the satellite; one day, the whole surface would look green and lush like Old Terra. \"The non-nodal areas have no atmosphere still. See?\" She pointed out the viewport at the moon's smoothly curved horizon. \"Limited albedo. That tells you you can cruise straight in from orbit in those areas without worrying about entry angles. Hell, you could probably strap on a pair of gravity boots, or even a parachute, and just head on down from here without worrying about ablation.\" She glanced at the engineer. \"Handle the landing, Lieutenant.\"\n\n\"Ma'am?\" Every Fleet officer was trained as a shuttle pilot, but plenty of them sucked at it and engineers weren't usually expected to keep their ratings up.\n\n\"You heard me.\" Pixy believed in throwing people right at a problem and expecting them to handle it. \"I'm going aft for some tea. Just drop straight down to any non-nodal area and navigate by compass from there.\" She pointed past Prowne's shoulder as the other woman gingerly took the controls. \"I'm pretty sure that's the node we're aiming for, Ms Prowne.\"\n\n\"Pretty sure?\"\n\n\"Almost positive. Drop your gravity before you cross the nodal boundary; I'll probably be back up here by then.\" She patted the woman's shoulder with a buoyant smile. \"Have fun!\"\n\n* * *\n\n\"I'm quite certain we'll locate and destroy your Flasbard bomber, probably within twelve hours.\" Captain Ledecki made this lofty announcement while holding court beside a fountain in the courtyard at the Masaakama Palace, eating jolloff rice on naan. \"I did tell you, did I not, that my ship covered itself in glory against a Cathos Vremein espionage raider a few months ago?\"\n\n\"You did indeed, Captain.\" Pixy, sitting off to the side with a glass of kumquat juice, marveled at how everyone was ignoring the fact that the Palace had no roof at all, the entire east wall a mass of rubble now being picked over by rescue robots. The smell of ash and dust hung everywhere. But the locals pretended not to notice any of that, and their Fleet visitors were mostly following suit. \"As you see, we're eager to get this threat taken care of.\"\n\nThe Palace had been bombed the night before, from out of nowhere. Pixy had immediately sent Prowne and The Other Midshipman off to examine whatever debris had been found from the Flasbard munitions, and Suupf was already lending a hand with the wounded. Up above, the partly-atmospheric sky was a blinding silver wash over the damage.\n\nThey'd been greeted by a formal squire in lovely green satin, most of the Fleet people tumbling out of the shuttle in a state of nausea from Prowne's graceless landing. \"This way, please, your honor,\" the boy piped, and now here they were, on an incongruously sumptuous settee beside an incongruously cheerful fountain with the robots pulling body parts out of the rubble. \"Before we do anything else,\" the squire had continued, bringing the group straight down to earth, \"let me point out the nearest shelters, where you'll be reporting in the event of a bombardment...\"\n\nLedecki sat there surrounded by her four Marines, like some sort of potentate. \"Please,\" she grinned, \"call me Lina.\" She'd taken to their host at once, for reasons obvious to anyone attracted to beautiful men. And there was no question that Freiherr Miguel Angrick-Schetters, Prime Minister of Masaakama and Lord of Node North, was a beautiful man. He looked like a painting, one of the ancient ones from Old Terra, like on the side of a vase or something? An urn? \"My ship is already hard at work in space above, searching out the enemy. Fear not, my lord.\"\n\n\"Thank you.\" He paused, shrewd dark eyes seeking out Pixy again. She'd noticed that tendency before, frequent sidelong glances her way, and she was just starting to wonder whether they'd met before or something when, unexpectedly, he gestured to his squire. \"If your ship is truly on the hunt, Captain, then please don't let me keep you here...\"\n\n\"It's no trouble at all,\" purred Ledecki. Yep, Pixy decided; the woman was definitely horny. Most of the officers studiously avoided the awkward questions about Captain Ledecki: why was she so disengaged? Why did she never really leave her cabin? Did she and Payne have exotic sex down there? These were things best not discussed, in the end, as long as she let them do whatever the hell they wanted. \"My First Officer has things well in hand, and my Executive Officer is right over there,\" she went on, nodding to Pixy. \"I was thinking I'd send her back up tonight to head the search, while I remain here.\"\n\nThe man paused; he had the breeding not to arch an eyebrow, but Pixy was good at reading people. She could tell he wanted to. Once more, he glanced over at her. \"Is that wise, Captain? To be down here, under the bombs, when your ship is in action?\"\n\n\"Subcommander Pfeiffer is more than capable of running the ship,\" Ledecki breezed, and the four Marines traded a glance among themselves. Pixy just poured more kumquat juice, sitting next to the impassive Johnward Lorero. The scattering of local nobles stirred, looking at Lord Miguel for their cues on what to do or say. \"Aren't you, Pixy?\"\n\nPixy set her juice down. It was delicious, overlaid with some sort of local brandy. \"I'll be speaking with Mr Lorero to determine what course of action to recommend for the ship,\" she mused. \"Sooner, I think, rather than later.\"\n\n\"Any meaningful discussion,\" Lord Miguel put in politely, meeting her eyes fully, \"will wait until Colonel Stonador and Mr Irn can arrive. My sister Kimiko is coming with the colonel; that will bring the leaders of all four nodes together.\" He smiled, a gently teasing quirk of his lips. \"Did you think we were just hanging around, exchanging pleasantries, Pixy?\"\n\n\"I did, in fact,\" Pixy said bluntly. The corner of her eye showed Ledecki, flinching at her rudeness. \"And you should call me Commander, I think.\"\n\n\"I think not, Pixy.\" He raised his glass to her. \"You have an aggressive and valuable subordinate here, Captain Ledecki.\" He nodded toward her. \"Perhaps a game of Parcheesi while we wait? I understand I'm in the presence of a Galactic Champion here.\" He nodded to the squire. \"And more juice for Pixy,\" he ordered, again with that gentle smile.\n\nAnd Pixy, her rage building, felt that smile in her cunt.\n\n* * *\n\nMasaakama, it was explained, had a long history of evening bonfires, where clans would gather and tell stories. \"We're not doing that quite so much these days,\" Lorero frowned.\n\n\"Yes. The bombers.\" Pixy looked across the firepit at the rest of the attendees: slight little Freifrau Kimiko, her brother Lord Miguel. Emhart, who'd been introduced as the colony's chief mining engineer. Mattias Irn, stolid and grumpy, with a bandage on his head; Ward Lorero had said he was the oldest living man born on Masaakama. Colonel Stonador, silent and gun-barrel-thin, who ruled the People of Musk in their own node somewhere over the mountains. For some reason, they were talking to Captain Ledecki about genetic diversity. \"Weird mix of people,\" she risked.\n\nLorero grunted. \"The bombers would wipe out the entire leadership of the whole moon if they hit us right now.\" The twilight was dusky; something about the satellite's orbital period meant it never really did get fully dark on this part of the surface.\n\n\"Do they bomb randomly?\"\n\n\"Seem to.\" Captain Ledecki was speaking now, in halting phrases, something in the never fear, Fleet is here vein. She'd been cranky since midafternoon, when Pixy had sent Sergeant-Major Tarasz and her three wise men to go camouflage the shuttle.\n\n\"We're supposed to guard the Captain, ma'am.\"\n\n\"Go camouflage the shuttle, sergeant-major.\" Pixy had smiled coldly. \"Or I'll kick your teeth in.\" Two of them were back now, standing there in their spears and shiny helmets, but Ledecki scowled every time she glanced around and noticed the others were missing.\n\n\"There's been no targeting analysis?\" she pressed. \"No attempt to find out a pattern for the attacks?\"\n\nLorero's frown deepened. \"Why the fuck do you think you're here, Commander Pfeiffer?\"\n\nFair enough, Pixy reckoned. She glanced up at the sky, blocking out Ledecki, her implant running quickly though Prowne's data from earlier: the bombs the Flasbards had been dropping had been inexpensive, barely even guided. She'd found what she thought were sensing receivers in several of them. No idea what they'd been sensing, though.\n\nLedecki finished, indistinctly, the night pressing about them. \"We've lost forty million shekels' production just this week,\" Lady Kimiko was saying.\n\n\"To say nothing of 1,277 casualties,\" her brother reminded her softly.\n\n\"Fleet needs flerium. Merchant vessels need flerium. Everyone needs flerium for emergency boosts.\" Kimiko sighed. \"We can't sustain production while this bombing continues.\"\n\nAh. That reminded Pixy. She leaned toward Lorero. \"Hey. Can you hook me up with a fleromorphic basalt wholesaler?\" She was thinking of Charlatul and his impressive prick.\n\nThe security man frowned, which seemed to be more or less his natural state. \"Of course. Why?\"\n\n\"No reason.\" The bickering continued at the other end of the table, Emhart the mining engineer explaining flerium's various foibles. \"And, like, see if that mining engineer can provide me with storage data?\" Pixy was not above simply stealing some. Lorero, given his withering glance in reply, knew what she was thinking.\n\n\"It's highly unstable. Needs specialized processing,\" Emhart was saying.\n\n\"Why?\" Ledecki frowned.\n\nPixy interrupted. \"Fleromorphic basalt ignites energetically if its surface temperature exceeds 700 Torms.\" The Captain blinked back at her. \"That's, what, about 340 Kelvin?\"\n\nThe circle fell silent. \"That's right,\" Emhart allowed.\n\n\"How do you know all that?\" Lord Miguel arched an intrigued eyebrow at Pixy.\n\nShe shrugged. \"I was in Service Command for years. We hauled that shit all over the universe.\" She smiled now, remembering the time she'd swapped eleven ounces of the stuff for some electrocoat and a handjob, then bartered six of those ounces for almost a year's supply of Crystal; she'd been able to make a killing in the onboard drug trade aboard the Pulver back then. \"Gotta keep it cool. I've always heard it was a really rare substance.\"",
        "Lord Miguel nodded. \"Our deposits here are only modest, and yet we've been able to terraform four nodes debt-free. And we're approaching the point where the nodes can spread on their own.\"\n\nEmhart shrugged unhappily. \"The bombing last night took out our largest stockpile here at North.\"\n\nColonel Stonador frowned from his high-backed seat. \"The very first strike was a near-miss on our biggest facility.\"\n\n\"And a near-miss is dangerous, because of the heat of the fire,\" Emhart nodded.\n\nPixy frowned as the people on the other side of the cold fire began gabbling about antiaircraft guns. She turned once more to Lorero. \"Could I possibly have a map showing the strikes?\"\n\n\"There's one posted in the Freiherr's office, behind the Fountain Hall,\" he replied curtly, putting his things into a slim portfolio. \"I've got to go prepare the evening defenses.\"\n\nPixy remained in her seat a few more minutes once he'd left, watching in increasing annoyance as Captain Ledecki tried to get to grips with the crisis, before she abruptly drained her juice and swept to her feet. Nobody was paying attention to her as she headed for the wrecked wall of the Palace, picking her way over rubble that the robots continued to clear industriously. Blood splashed one of the pillars across the roofless hall, the fountain now turned to a low burble for the night. A Palace guard roved around with a spear, one of the local Constabulary guys, and Pixy gave him a cursory wave. \"I'm analyzing the target probabilities in the, uh, the Lordship's office,\" she explained. Long words often worked with poorly trained guards, she'd found.\n\n\"I don't care,\" the young man admitted, shrugging; she'd seen his vacant eyes go to her rank tabs, and it was clear he'd been told to let the Fleet people do whatever they wanted. Pixy paused, curious.\n\n\"You okay?\"\n\nHe raised an eyebrow at her. \"Have you ever been bombed?\"\n\nPixy felt a chill run up her spine at the sight of the man's eyes. \"Can't say I have.\"\n\nThe guard nodded, his lip curled. \"You'll find out.\" He paced slowly back toward the fountain, leaving a frowning Pixy in his wake: nothing she'd seen here, not the fatalism of the leadership, nor the piles of blasted rubble, nor the body parts being carted away by the robots... none of it left her as unsettled as that young guardsman's eyes.\n\nChilled, she crunched across the broken masonry to the little suite of offices behind the dais, finding a grand old-fashioned hinged door at the end of a short hallway: clearly, the Freiherr's office. It was unlocked, and she pushed it gingerly open against a flutter of dust.\n\nThe interior was spare, a window on the far side overlooking the waterfall they'd put in across the valley. In front sat a nice, sturdy desk and a chair with a luxuriant snarf-covered cushion. Tabslates lay scattered around, some local design Pixy didn't recognize, but it was clear enough what they were. She stirred in the twilight, turning to the bare wall behind the desk, and the zoomable map there.\n\nThe four nodes lay scattered across the surface, islands of green in a grey waste. She saw mines marked and labeled on the map, with support buildings, dorms, tube stations: the whole moon looked from here like an ideal industrial site, orderly and profitable, even comfortable within the nodes.\n\nBut the surface was also scarred with angry red markings, the Flasbard strikes scattered across the moon like the blood smeared on the pillar. She scanned it rapidly, her implant blinking, to store the information for later consideration; that done, she started to study the dates, the relative damage inflicted. She was still leaning thoughtfully over Lord Miguel's desk, deep in concentration, when she felt a shape looming behind her. \"Finding anything interesting in my office, Pixy?\"\n\n\"It's Commander Pfeiffer.\" She stared at the map a moment longer before, slowly, she turned. \"Your guardsmen are not good at protecting your office.\"\n\n\"My guardsmen are not guardsmen. They are constables, trained for crowd control and protecting payroll.\" He stood close to her. \"They are not trained to deal with this.\"\n\n\"We all end up doing bullshit we're not ready for, my Lord,\" she sighed, turning to perch her butt on his desk. She was not in the mood to show deference. \"Why are the Flasbards choosing their targets?\"\n\n\"You may call me Miguel, Pixy,\" he smiled.\n\n\"Why? Why these targets?\" Pixy pressed. \"We figure that out, and we'll know where they're going to be. So we can kill them.\" She looked up at him as he stood alongside her. \"You can help with that.\"\n\n\"Your warship,\" he suggested gently, \"has sensors that can find these bombers. No?\"\n\n\"Your moon is a big place. And we're only a frigate.\" Pixy decided that now was not the time to try to educate this handsome nobleman in the specifics of inner-space target sensing. \"We need you to help us. I doubt these strikes are random, and your people know more about these locations than we do.\"\n\nHe nodded at her in the twilight. \"I can tell it bothers you, Pixy. Needing to follow the orders of a less competent captain.\"\n\nPixy bristled. \"Fuck you, my Lord.\"\n\n\"Miguel. Please.\" He showed no offense. \"She, and they, can stay out by the fire all night. The real decisions will be made here, between you and me. We know that.\" He laid a large-fingered hand on her arm. \"What do you need me to do to make this easier for you?\"\n\nHis hand felt good; she had to admit that. She tossed her head back, short hair settling. \"I told you already.\" She arched an eyebrow. \"Miguel.\"\n\n\"Yes you did,\" he nodded back, \"Commander Pfeiffer.\" She chuckled. \"I prefer Pixy, however.\"\n\n\"It's your planet,\" she shrugged, relaxing slightly. His thumb was gentle on her bicep. \"You need to figure out what those targets had in common, Miguel. Latitude, altitude, composition. Whether they're transport nodes or population centers.\"\n\n\"Do you know what your Captain Ledecki is discussing with my sister?\" She started at the change of subject. \"Lady Kimiko is very concerned about our genetic diversity here. We only get immigrants from Phaeton, and she and my mother are both worried that our gene pool will centralize.\"\n\n\"Why do you two think Fleet would give a shit about any of that?\" Pixy barked a laugh. \"We're here to shoot Flasbards, not help you people with your breeding problems.\"\n\n\"If you can do both...\" He smiled warmly. \"Your Captain has already promised to send down a party to help us. Volunteer males.\"\n\nPixy nodded, rolling her eyes. Of course she'd promised. She'd promised to send her own sailors under falling bombs just so she could brown-nose with this local despot. \"There are worse things, I guess, than fucking your way through a bombing,\" she sighed.\n\nHe laughed, a deeply rolling, cultured laugh that did things to her pussy. Like his glances from across the fountain. \"Speaking of which,\" he said softly, his thumb still insistent on her arm, \"if you were looking for a place to sleep tonight, I'd be happy to share my quarters with you, Pixy.\"\n\nShe snorted a dry laugh. \"Subtle, Miguel.\"\n\nHe shrugged easily. \"I've lived a life that conditioned me to expect I can get what I want.\"\n\n\"Well, you're yapping up the wrong narbleck. Captain Ledecki's been making eyes at you all day; she'd be happy to help you out. Me, I'm heading back for my ship as soon as I can get the shuttle powered up.\"\n\n\"No, you're not.\" He sounded serious. \"My sister has closed the skies until morning. The risk is too great.\"\n\n\"Your sister has what?\"\n\n\"Closed the skies.\" He was stroking her whole arm now, wrist to shoulder, his hand moving in a confident rhythm up and down. \"No craft in or out. It's far too dangerous while we await the bombings.\"\n\nPixy's eyes narrowed. \"And... your sister? Not you?\"\n\nHe smiled. \"She's older than I am. So she's the actual viceroy here. I'm simply more interested in the mining operations; she wants to spend most of her time back on Phaeton.\" He nodded. \"Like my mother.\"\n\n\"And you?\" She could smell him, masculine, sweaty. \"You're a lifer? Wanting to settle down here and start a family? Say, with a visiting Fleet officer?\" she teased.\n\n\"Why not?\" He drew even closer, his face inclined. \"It's not so bad here. And it could be downright pleasant...\"\n\n\"Fucking through the bombs?\" She raised her head, responding at last, and why the hell not? He was hot, and interested, and if she couldn't lift in the shuttle... \"Your quarters, hmm?\"\n\n\"They're just downstairs.\" His lips smiled, just centimeters from hers. She could smell the jolloff on his breath. \"We've moved everything below grade, for the bombs. I'm sure you'll find my bed more comfortable than any of the other shelters.\"\n\n\"I'm sure I will,\" she sighed, lifting her chin, and they were just about to drift together when a slight tremor in the room made the window rattle. \"What's that?\" She drew back swiftly. \"Tell me you people have earthquakes on this fucking moon.\"\n\n\"We do not.\" His expression hardened into a look of dread that moved even her black, withered heart. \"Those are bombs, Pixy. My people are dying.\"\n\n\"Fuck!\" She twisted away from him and scrambled for the window, the fear leaden in her gut. Another rattle shook her reflection in the window. \"You're sure?\"\n\n\"I'm acquainted by now with the feel of a bombing,\" he said, and she caught her breath at the note of sadness in his voice. He was already moving toward the door. \"Come with me. There will be much to do.\"\n\nPixy emerged to a world of sprinting Constables and milling miners, scrambling for shelter. She peered wildly around for her people, her Captain, joining the crowd of people surging through the ruined hall, past the fountain and out toward the cold fire circle.\n\nShe found Prowne, holding a local by the throat and smacking him hard. \"Get it together!\" the engineer commanded. \"What's the speed of sound on this fucking rock?\"\n\n\"What?\" The man was twisting, fishlike in her hands, and Pixy wildly consulted her implant.\n\n\"It's.89 Mach, Ms Prowne,\" she called. \"And let go of that man. He's scared to death.\"\n\n\"Fine.\" Prowne gazed east, gesturing Pixy's attention that way, while her victim scuttled off. \"You can see the flash of the explosions out there, ma'am, past the hills.\" Another blast tore through the air, so much louder than they'd been inside the Freiherr's office. Prowne noted the flash, then did some quick math. \"About 325 meters per second. Those bombs are falling within five klicks, ma'am.\"\n\n\"Hey! Desperado personnel!\" Pixy bellowed it, the yell tearing at her throat. \"Get the fuck down to the shelters!\" Everything was a mass of confusion, more thunking blasts punching the air, and Prowne was counting some more.\n\n\"Moving this way, ma'am.\"\n\nBoth of them craned their necks instinctively up, searching the twilight as the nearby rattle of launchers sent missiles up in return, but the bomber was way too high to see. \"Find The Other Midshipman and Mr Charlatul and get to safety. I'll see about the Captain.\"\n\n\"Aye aye, ma'am.\" She darted off, her orange Engineer utilities showing against the shadows, and Pixy realized as she darted her gaze around the broad Palace Plaza that her fear hadn't faded; this was a problem. Normally, during times like this, the stopped being scared as soon as she could take action; this time, her guts still churned, and in a flash of insight she figured out why: this time, there was no action she could take.\n\n\"Fuck,\" she grunted to herself, the ground shaking harder now; defensive rockets were arching into the sky in deceptively graceful trails of smoky sparks, and all her Fleet people were headed for the little bunker they'd been shown by the squire in green. The bombs pounded closer, louder, headed straight for her.\n\nAnd she was completely powerless.\n\nThe realization smacked into her like a wave on the beach: she was a mote, fractal, caught in someone else's game of physics. The end could come in a moment, and there wasn't a goddamned thing she could do about it. Instinctively, she crouched; she needed to piss very badly.\n\nShe'd never been so scared.\n\n\"Ma'am! Come on!\" Pixy turned, her teeth chattering, hearing the Marine sergeant-major's bellow. Every instinct she possessed told her to join the trickle of people headed for the shelter, and she even turned that way, her feet moving, until she realized it wasn't the XO that Sergeant-major Tarasz was yelling at.\n\nCaptain Ledicki stood there, mesmerized, as the explosions marched over the crest of the outlying hills, then across the villages dotting the grassy plains out that way, ripping up earth and homes and people as they came. \"It's nothing to worry about, Naline,\" the Captain said, quite conversationally, and Pixy had just that one final moment to be pissed at the way Ledicki insisted on using first names before a roaring whoosh rippled through the skies directly in front of them; Pixy was frozen in a haze of indecision, Prowne yelling from the mouth of the shelter while Tarasz reached out to drag the Captain bodily away, but then everything went impossible.\n\nImpossible. That was the only word that occurred to Pixy's mind. Because what her eyes told her made no sense at all. First everything froze, abrupt in a white-light tableau, like the afterimage when a laser-ranging tube flared. Then everything seemed to shrink, as though the whole image had been hooked by something massive and dragged away fast, the Captain and the Marine dwindling into the distance just before that white heat fell over them like a curtain over a stage show.\n\nPixy blinked herself back to the present abruptly, with no sense of the passage of time, blown several meters back by the force of the blast; she'd come to rest inside the abandoned ashes of the bonfire pit, her scarred back howling. She coughed hard, creeping to her hands and knees, and in shock spewed out a warm puddle of citrus-scented vomit. \"Fuck,\" she gasped.\n\nDistant cries, shouts, and the everpresent thunking mutter of the bombs, now receding away; Pixy dragged herself to the edge of the pit, still crawling, then threw up again when her scrabbling hand landed directly in a warm, slippery pile of goo that had many of the features of the Desperado's Marine sergeant-major.\n\n\"Jesus H Buddha,\" she grunted, her brain reassembling itself; Tarasz was still alive, in a manner of speaking, the goo twitching around Pixy's fingers, and the Captain had been standing right beside the sergeant-major, which meant the Captain... \"Shit.\" Pixy scrambled to her feet, back protesting and head swimming, her head spinning madly. \"Suupf!\" she shrieked as the ground shook once more, more distantly now. Pixy's voice sounded weird, stuffy, but at least she could hear herself. Those cloned inner ears were holding up well. \"Get out here, Suupf! And bring your haemo!\"\n\n\"Ma'am?\" The corpsman was already running over, his goggles bouncing off his nose while Lieutenant Prowne coughed behind him. \"Are you wounded?\"\n\n\"Find the Captain,\" Pixy grated, gesturing around. \"Or whatever's left of her.\" Based on what she'd seen of Tarasz, Pixy had to assume Ledecki was in many, many pieces. Hopefully one was her head, and hopefully it was intact. She thought quickly now, sparing a glance for the sergeant-major. \"Three minutes, Corpsman. We don't get her brain harvested in three minutes, we give up and try to save Tarasz.\"\n\n\"Damn.\" Prowne was already bending over the wrecked Marine, her hands darting around to try to reassemble all the pieces. \"We need more than one corpsman, ma'am,\" she panted.\n\n\"Tough shit, Ms Prowne. We've only got the one.\" A cry from Suupf drew her over a chunk of concrete, to where the Tygon was already shrugging his haemodrive off his back. \"Found her?\"\n\n\"Sort of.\" Ledecki's chest was there, and an arm, but her head was someplace else. Suupf glanced at the great fan of blood still running freely from the stump of the neck. \"Help me, Commander. I have to get the haemo ready. Her head should be thataway.\" Pixy obeyed, following the blood from the neck, trying not to step in it; something about stepping in it seemed wrong.\n\nShe found the Captain's head just as the sound of sirens descended on the scene, the lower jaw sheered completely off; Ledecki looked almost comical, lying there with her eyes wide in shock and her upper teeth poking out into nothing. She was quite dead, but when Pixy prodded her cheek she felt warmth.\n\n\"Got her!\" she called, scooping up the head and racing back toward the medic.\n\n\"Skull intact?\" Suupf ran a clinical eye over Pixy's burden, twisting to peer all around. The ground was no longer shaking, the thumps moving well off to the east. \"She's in pretty good shape, actually. I don't think we'll need to cut the head open down here.\"\n\n\"Thank Buddha,\" Pixy panted; she'd seen a brain harvest once, from a distance, and had no wish to see it again.\n\n\"Do me a favor and expose the brainstem, so I can hook up the drive.\"\n\nPixy stared, uncomprehending, then swallowed hard and looked mechanically down at what was left, suddenly, of Lina Ledecki. The Captain's fine hair filled her hands, and she found herself staring at the woman's molars. A little shred of cilantro stuck there, from the joloff. The roof of her mouth gave way, beyond a slack uvula, to a gristled mass of torn and blood-slicked flesh and bone. \"Nasty,\" she managed, gagging again, fumbling with the ruin of the top of her spine. \"There's not much here I can get my hands on.\"\n\n\"No problem,\" Suupf rasped. \"I have a set of cervical wrenches.\" He regarded her closely. \"I guess I have this, ma'am. You go help with the sergeant-major, maybe?\"\n\n\"O-okay.\"\n\n\"And don't throw up on her. It'll infect her wounds,\" he added gently, ratcheting his wrench open. \"You, uh, might not want to watch this part...\"\n\nPixy passed out around that time, her addled brain finally giving up.\n\n* * *\n\nShe felt a burning in her arm as the stim went in, goosing her whole body with fierce artificial energy. Her eyes flapped open at once. \"I'm up. What's the status?\"\n\nProwne was stooping over her with a look of concern on her face that would be touching, if it weren't so abnormal. \"Well. So you survived, at least.\"\n\nPixy felt an odd heaviness in the side of her face, and lifted her hand to feel there. \"This feels weird.\"\n\n\"Yes.\" That was Suupf, his thin green face coming up on her other side as he put the stimstick away. \"I think the blast wave knocked your implant out of position. That, or the impact when you got thrown.\" He shrugged. \"There's nothing I can do about it, ma'am, but I think it's a simple procedure. Doc Borowicz can probably fix it up when we get back to the ship.\"\n\n\"It's still working, though,\" Pixy frowned, \"apparently.\" She manipulated the thing, trying a few simple searches, and it seemed okay. It just felt like half her face was slouched down. She shook her head and looked at the engineer again. \"What's the status? I don't want to ask a third time, Ms Prowne.\"\n\nShe sighed wearily. \"You're in the infirmary at the Palace. Captain's dead. Sergeant-major's on her way out. One more Marine wounded. Oh, and The Other Midshipman.\"\n\n\"Dead?\" Pixy asked hopefully.\n\n\"No, just lost an eye.\" Both women considered that. \"I don't even know whether he's got a clone yet. Not one old enough to, you know, help out...\"\n\n\"Not our problem.\" Pixy's mind was elsewhere, almost dissociated, straining to access the data in the implant. Something there was nagging at her consciousness, processes trying to resolve... \"What else?\"\n\n\"I'm setting up comms with the ship, but it's difficult on our end. We need to wait in line for the working transmitter. Charlatul's on that. When he raises Delmer, we'll tell him to send down the other shuttle.\"\n\n\"The shuttle's wasted?\" Pixy raised herself on her elbows.\n\n\"Not wasted, no. But definitely, it took a pounding.\" She glanced at Pixy's face. \"Cannon fire. Not a bomb. So they're strafing too.\"",
        "\"Should've camouflaged it better,\" Pixy groused.\n\n\"No, I don't think that was the problem; the hits looked hasty. I don't think they got a good bead on it until it was too late.\" The engineer hesitated. \"The camo was a good idea, ma'am.\"\n\n\"Yeah...\" Pixy's mind was spitting out answers: the map, Emhart's storage data... \"Where is Lord Miguel? I need to see him now.\"\n\n\"Who the fuck knows, ma'am?\"\n\n\"Okay. I'll go coordinate with him. You carry on; we've done most of what we can do here. Priority is to get the Captain's head back aboard, along with the rest of us.\" She pulled herself painfully to her feet, blood still clinging to her black utilities. \"I'll be back shortly.\" The exit was a tiny square of dun sky in the corner of the little underground chamber, and Pixy lunged for it with her mind still racing.\n\nEmhart's storage data. The map.\n\nOutside, all was noisy confusion with a strange, flinty smell on the air. Smoke smothered the entire node, the floodlights gleaming off the underside. So much smoke; it made sense, though, now that she was thinking clearly. The pattern.\n\nAnd now she knew, too, where she'd find Lord Miguel.\n\nHe conferred, low-voiced, with Lorero as she stepped up behind him. \"My lord,\" she said quietly, very conscious of the blood and vomit ground into her utilities. Miguel looked as though he'd just come from dinner.\n\n\"Ah. Pixy.\" He passed a brief glance over her wrecked form. \"I'd understood you'd had your head blown off. I was saddened.\"\n\n\"Wrong Fleet officer,\" she grimaced. She'd be remembering the cilantro stuck in the Captain's teeth for a long, long time. She jerked her head toward the flinty smoke. \"Was this, um, the family stockpile?\" He raised his eyebrows. \"Of flerium?\"\n\nThe nobleman nodded, a tightness in his lips. \"A hedge. Against inflation. In the Palace Plaza.\"\n\n\"Yeah.\" Pixy checked her numbers again. \"Cornering the regional market. Well, it tells me how the bombers are targeting the surface, I think.\"\n\nThis time, he turned fully toward her. \"Yes?\"\n\n\"Yes.\" She cleared her throat. \"Your man Emhart. I need to see him. And I'll need you, my lord, to make sure you've got dedicated comms with my ship at all times..\"\n\nHe sighed. \"I told you, Pixy. It's Miguel.\"\n\n\"Yeah. What the fuck ever.\"\n\n* * *\n\nShe stepped off the second shuttle into a flurry of activity aboard the Desperado, pleased and a bit surprised to see that Delmer had come down to the Main Bay to greet her. \"Ma'am,\" he told her, licking his lips. He looked like he'd had no sleep.\n\n\"Mr Delmer.\" Dr Borowicz had all his corpsmen down here, sorting through their tasks, the bay lit brightly. \"Tell me you engaged the bomber last night.\"\n\n\"I didn't engage the bomber last night.\"\n\n\"Fuck.\"\n\n\"We got its signature, though. We'll find it again.\" They watched in silence as Borowicz bent over the torn form of Sergeant-major Tarasz, giving quiet orders to his people. \"Shame about the sergeant-major.\"\n\n\"Focus.\" Pixy was having enough difficulty for her own part, keeping it together; she needed Delmer functional. Her slipped implant was making her teeth ache. \"What happened?\"\n\n\"What you said.\" He scratched at his beard. \"Sensor shadow. Excessive equatorial girth. By the time we got here, we were just in time to catch Cheeley's transmission.\"\n\n\"Whose?\"\n\n\"Um. Ms Prowne's, ma'am.\" He shrugged. \"I locked in and sent the other shuttle down. But I seeded a few sensor mines along the horizon.\"\n\n\"Good move.\" She sucked at her lower lip as Suupf brought his haemodrive carefully out, the whole bay falling silent. \"That's the Captain,\" Pixy told Delmer, quite unnecessarily.\n\n\"Mhmm.\" He took a knee beside where the corpsman had set the haemo down, peering inside. \"One of the finest Parcheesi minds in the universe, reduced to a head in a box.\" He leaned in closer. \"What's that? Parsley?\"\n\n\"It's cilantro.\" Pixy looked away. \"Close the shutter, Suupf.\"\n\n\"She might be sentient by now. A little bit, anyway.\" The Tygon was studying his readouts.\n\n\"Then we'll have Doc put her right back out again.\" She glanced at Delmer, who was looking strangely back at her. \"It's easier that way. I doubt she wants to know what state she's in. And she can't legally exercise command while she's dead.\"\n\n\"True enough,\" Delmer nodded. He studied Pixy's face. \"You should get yourself looked at, too. That's a fucking honey of a bruise on your face.\"\n\n\"When he's done with Tarasz.\" She yawned, and painfully, an overwhelming tiredness sweeping her limbs as the corpsmen led The Other Midshipman away, both his eyes bandaged. \"Fucking bombs, man.\"\n\n\"Ma'am?\" Delmer leaned in close and spoke with unusual deference. \"I'm fine handling the ship. You look like you need a rest.\"\n\n\"When I'm dead.\" She dug into her pocket for more stim. \"I'll need your help, though. I've got a plan. Dwart and McZylenko to my conference room. You... you're acting XO, I suppose. For awhile.\"\n\n\"Ma'am.\" It hadn't occurred to Pixy yet that, with the Captain gone, she was in charge now. She thought about it, then ignored it because it didn't feel any different. \"For awhile.\"\n\nSomething else was nagging at her; she blinked away a fog on her brain and remembered what it was. \"Corporal punishment's back on the menu, XO.\"\n\n\"Aye aye, ma'am.\"\n\n* * *\n\n\"So. With Mr Delmer acting as XO, you're going to be the acting Weapons Officer.\"\n\n\"Ma'am.\" McZylenko, never the most decisive man, swallowed.\n\n\"Good thing you've got Midshipman Shitbird to assist,\" she muttered, looking away. \"Anyway. We're going to be engaging the Flasbard bomber from 30% below the horizon, which means skimming the torpedoes. We'll have maybe three klicks of altitude, and you should set up your firing plot so that it doesn't intersect any of the nodes down below. Make sure you work your crew up to manage that.\"\n\n\"Ma'am.\" Another swallow.\n\n\"Yeah. And work yourself up, too.\" She still wasn't sure the implant was set correctly, but the Doc had told her it was the best he could do without cutting her open.\n\n\"Um, ma'am?\" He looked down at the notes he'd taken on his tabslate. \"Can I ask how you know the bomber's going to be in this position?\" He pointed to a spot on the Masaakama map, looking confused.\n\n\"Because I figured out the Flasbards' munitions are sensing large stockpiles of fleromorphic basalt. I found out from the mining engineer where the next-largest storage facility is. If my hunch is correct, the Flasbards should head right for it, then you'll torpedo the shit out of them.\"\n\n\"Oh!\" He grinned. \"An ambush!\"\n\n\"Just so, Mr McZylenko.\" She smiled, painfully, and then nodded him out of her office. \"Now go. I need to pee. Ms Dwart should be out there; send her in.\"\n\n\"Aye aye, ma'am.\" Like every man on the ship, McZylenko stared at Raella Dwart's chest as they passed; the woman always told her orange Engineer utilities to leave their neckline at its lowest setting, for plenty of cleavage. She marched in now, self-assured as ever, and took a seat across from Pixy's desk without being told.\n\n\"Ms Dwart.\"\n\n\"Hi, ma'am.\" Her little lips quirked into a grimace as she squinted at the side of Pixy's face. \"You okay?\"\n\n\"I am not. But never mind that. As the ship's morale officer, I wanted to let you know that it's my intent to give the crew liberty on the surface once we accomplish our mission. You'll organize the rosters for the liberty parties, and of course since you administer the Fleet Prostitution Program onboard, you should put your sluts on alert. I'd imagine there will be rich pickings below.\"\n\n\"Yes ma'am.\" She paused. \"It's, like, a mining colony?\"\n\n\"Sure, but civilized. They've got trees and restaurants and beds and shit.\"\n\n\"Good.\"\n\n\"And.\" Pixy interlaced her fingers, not quite certain about this next bit; most of the conversation on this matter was lodged in Lina Ledecki's sketchy cranium. \"I understand there are concerns, on the moon, about the long-term genetic diversity of the colony?\"\n\n\"All colonies have that problem, ma'am, until they're certified as fully viable. I grew up on one of those.\"\n\n\"Oh?\" Pixy raised her eyebrows, quite unprepared for the spasm of pain that came with it. \"That might explain some things.\"\n\n\"Yeah.\" She shrugged, setting her tits rippling in pleasant ways. \"I think it's why I'm such a whore.\"\n\n\"Yes, well, then you'll understand that the locals are interested in our sperm. Tell the men of the ship's company that they're encouraged to get as busy as they want, but you should try to keep track of who ends up impregnating whom, in case of future paternity proceedings.\" Both of them smiled, equally cynically. \"Yeah. I have to tell you to do that. But I'm very aware it's not really possible.\"\n\n\"I'm on it, ma'am.\"\n\n\"Good.\" Pixy's yawn twisted her face into another painful rictus. \"Now shoo. I need to piss.\"\n\n\"Aye aye, ma'am.\"\n\n* * *\n\nWhen the ambush nearly went catastrophic, it wasn't really anyone's fault.\n\nEverything was fine at first. The ship slipped smoothly into general quarters. Paulus and Jeyne had Emhart on the other end of a committed communications link. McZylenko, with Delmer standing above the weapons pit, had a good plan: four torpedoes, No. 3 spread, skimmed. Delmer's sensor mines were mostly still operational, though the moon's curvature had put one of them completely out of touch and another was having issues with the unexpectedly strong sunlight. Praaskinen, on Systems, had all the sensors at maximum sniff.\n\nAnd, right on cue, the Flasbards came. \"I'm a tactical genius,\" Pixy muttered to herself, marveling as the contact flashed on the repeaters. \"I can't believe this worked.\" It was right where it was supposed to be.\n\n\"It didn't, yet.\" Delmer said it so that only she could hear, but you could tell that he was excited too, and why not? They were about to bag the bomber. Delmer frowned at Praaskinen. \"Shields on standby?\"\n\n\"Sir.\" The shields blunted the sensors, so Pixy had opted to leave them off and trust to the moon's horizon to give them that split-second of advantage she'd need to get the drop on the enemy. \"Should I also enable the aft sensors? For anything coming up behind?\"\n\n\"I wish.\" Pixy stretched a kink from her neck. \"I need all the power on those forward sensors. This degree of resolution is a pain to manage.\" She was feeling good, confident, the dragging fear of life under the bombs giving way now to this, to something she knew she could pull off. \"The moment that motherfucker gets within range, we're going to shoot him.\"\n\n\"Aye aye, ma'am.\"\n\n\"Aft sensors would be a good idea,\" Delmer muttered.\n\n\"I'll leave them on standby, but nothing more.\" She was feeling the excitement now, as one of Delmer's mines got tripped.\n\n\"Contact!\" McZylenko had Midshipman Shitbird on the scope. \"Mark eighteen, altitude differential plus-four.\"\n\n\"Plus four!\" Pixy traded a satisfied glance with Delmer. \"That's ideal. Reset your spread to No. 2, Mr McZylenko; you won't miss.\"\n\n\"Ma'am!\"\n\n\"Go ahead and fire when ready,\" she added magnanimously, lifting her bowl of tea, feeling that thrill she always felt when it was time for action. Everything was smooth, well-drilled, the bridge watch doing everything as fluidly as if they'd been real Fleet sailors on a real Fleet station, rather than out here in the boonies...\n\n\"Intermittent disturbance on the near-scan, ma'am.\" Pixy jerked her head up sharply; it had come from Systems.\n\n\"Near-scan, Mr Praaskinen?\" She thought about asking for a complete report, but he was already bending back over his scope, busy, so Pixy let him be.\n\n\"Ma'am?\" McZylenko, shifting his gaze back toward she and Delmer. \"I'm seeing an aspect change on the target...\"\n\n\"Mid-beam is active too, ma'am. It's not us.\" Jeyne was messing with the commo equipment.\n\n\"Jam whatever's out there,\" Pixy snapped, feeling a vague prickling sense of dread in her gut, \"and Weapons? Go back to Number 3 spread and fire.\"\n\n\"Number 3 spread and fire, aye, ma'am.\" A tense pause followed, then the frigate gave a faint tremor as the four torpedoes let go. \"They're away, ma'am.\"\n\n\"Good. Aft scan off standby,\" she called, but that's when everything went to shit.\n\nA screeching, ear-rattling explosion shook the port quarter, the whole bridge lurching into horrifying, sliding motion. Pixy felt vomit bubble up from her gut as, abruptly, the gravity winked off, then back on.\n\n\"What the fuck!\" Delmer was picking himself up from under the commo console. \"Full aft scan, now!\" He and Pixy yelled it simultaneously, even as another blast rocked the Desperado. For a split second Pixy remembered her first action, the chaos of the shattered bridge at Detached Engagement 447, and she nearly lost it again.\n\nPixy dragged herself back into the center of the command chair as the view-scan burst into life with a massive contact to the rear. \"Rear tubes. Double-loaded. Fire as you bear!\" she shouted at McZylenko. Delmer was snapping helm orders, bringing the ship back around while Praaskinen shunted damaged systems in desperation. The horizon gave a giddy lurch to port. \"And please tell me we hit that first fucking bomber,\" she added desperately.\n\n\"Ten more seconds, ma'am.\" The pale midshipman on the station was timing the spread, licking his lips while his lieutenants struggled to bring the aft tubes on-line. \"They're still tracking, though.\"\n\n\"Gee. Thanks.\" Pixy watched the gyro, willing it to swing faster, the shape of the new contact becoming clear. \"It's... it's a bomber. Again.\"\n\n\"There's two?\" Delmer was frowning at the plot repeater, too. \"Did we know there were two, ma'am?\"\n\n\"I didn't.\" The aft tubes at last came on-line, a marginal shot, but the enemy target was already accelerating off into space. Fleeing. The fury threatened to overwhelm her. \"Damage report, First Officer.\"\n\n\"Aye.\" Delmer was on it already, stooped with Praaskinen over at Systems. \"Just a moment.\"\n\n\"Bullseye!\" Shitbird gave a high-pitched shout from Weapons. \"One hit on the first target, ma'am. Three misses.\" He frowned at the repeater. \"Shit. He's turning tail.\"\n\n\"Give him another one,\" she snapped grimly, though she knew it wouldn't matter; the bomber would have its full shields up. She'd fucked up. Desperado was still shaking, losing altitude. \"And dammit, helm! Keep us in space, why don't you!\"\n\n\"Almost set, ma'am.\" The propulsion shunts were taking effect, the nose slowly creeping up, then up some more. \"We're approaching nominal now.\"\n\n\"Good.\" Pixy let out a great sigh, not even realizing she'd been holding her breath; already, the red system were going yellow. \"Match the pressure on the port vanes,\" she snapped. \"Something must be jammed to starboard. Compensate by dropping power.\"\n\n\"Yes.\" Delmer was back at the helm, where he belonged. \"Back to 70%.\"\n\nPixy felt a sick, twisting wrench in her belly. \"Damage?\"\n\nDelmer glared back. \"More than we should have taken, ma'am.\"\n\nDesperado evened herself out in space, the Masaakama surface finally leveling off, now with a flaming trail of the Flasbard bomber plunging away from Masaakama. \"Goddamn second bomber,\" Pixy cursed. \"Motherfucker.\"\n\nThe bridge crew stared back in silence, the plot showing the dot of the second bomber dwindling into the brightside of massive, looming Phaeton IV. Someone coughed. Chonny Delmer stepped away from the helm. \"Do we pursue, ma'am?\"\n\n\"No.\" Pixy sighed in disgust. \"Our mission is the mining moon. And besides, pursue which one?\" She gritted her teeth and took solace in action. \"Systems! Effect repairs, immediately. Priority on getting our torpedo tubes unobstructed and boresighted.\"\n\n\"Aye aye, ma'am.\"\n\n\"Secure from general quarters, First Officer; get your damage reports to me at once.\"\n\n\"Ma'am.\"\n\n\"Comms? I need to talk to the surface people.\" She frowned. \"We need another plan. Soon.\"\n\n* * *\n\nThe very last place Pixy wanted to be was back on the surface of Masaakama, but she knew she had to. The entire crew knew how dangerous it was down there; their damn Captain was in a box now because of that place, and after she'd fucked up with the rear sensors, Pixy knew her credibility among the rank and file was shredded.\n\nAnd she also knew she was the acting Captain now, solely. No more of that twilight I'm-in-charge-but-not-really bullshit, like when Ledecki was alive. No way could she send down a group to dangle beneath the bombs.\n\nShe started by making it official, having Juno cut and notarize a set of emergency orders giving her command. She then thumbed the all-ship intertube. \"Attention, all hands,\" she gritted, never liking the sound of her own voice as it bounced around the corridors. That fucking accent was never far away, especially when she got nervous. \"This is Subcommander Pfeiffer. In view of the Captain's death in action, I hereby assume command of USS Desperado, effective immediately. Promotable Lieutenant Delmer is hereby appointed as Executive Officer, both of us to serve until relieved. Officers to the wardroom; it'll be quick. That is all.\"\n\nShe hung up the handset and brooded a while, then sighed heavily. \"Officer of the Deck, you're in charge. I'll be in the wardroom with the other officers.\"\n\n\"Aye aye, ma'am.\" Golightly, from Engineering, was OOD. She didn't need him down there anyhow; she'd have his boss, Prowne. He could get the word from her later.\n\nShe stalked down to the wardroom with the other officers trailing behind her. She was not in the mood to sit down and work out a proper Fleet Order; she had an overwhelming sense that haste was what was needed here. Her mind was on fire, equal parts rage and shame, the need to bend the Flasbards over and fuck them in the ass combining with her feeling that she'd failed her ship and crew.\n\nThat maybe she should have stayed in Service.\n\n\"Get the fuck in there,\" she muttered as the officers trooped past, most of them avoiding her gaze. They weren't all there, and that was fine: there'd be watchstanders on the bridge and in the engine room, and she only needed a few of them to know what was going on, anyway. She slid the hatch closed behind them, the air in the room thick with tension. She leaned back against the doorjamb and crossed her arms beneath her little tits.\n\n\"I fucking hate losing,\" she began with no preamble, her face red, \"especially when it's my own fault.\" She took a deep breath. \"So I'm going back down there.\"\n\n\"Um, ma'am? Are you sure that's...\"\n\n\"Shut up. My turn to talk.\" It had been Delmer, which surprised her. Jeyne, off in the corner, looked troubled. \"I'll need a recovery crew for the other shuttle. A Line Chief to take charge, techs, and an officer to drive it back.\" She scanned the crowd. \"Ms Dwart.\"\n\nThose big gorgeous eyes blinked. \"Ma'am?\"\n\n\"While they're fixing the shuttle, you can make some contacts for... for that issue we discussed,\" she winked. She glared around once more. \"As soon as we get that junked shuttle repaired, you'll fly back. And... Mr Jeyne.\" She took a breath, hoping nobody would think this was favoritism: always the problem when a senior officer took a bedwarmer. With a small pang, she reminded herself that she was in command now... that she might need to give him up. \"You'll bring a coded mid-beam to ensure ground comms with Mr Paulus, back here on the ship.\"\n\n\"Aye aye, ma'am.\"\n\nEven as she stood there, her mind in a red rage, her new plan was moving through her mind, calculating... \"Mr Delmer. XO,\" she went on, letting the new title start to sink in: it was the new reality, and if she needed them to see that she was in charge, she needed them to know she backed him. Though she didn't want to. \"Are you ready for another try at those bombers?\"\n\n\"Fuck yes, ma'am.\"\n\n\"Good. Open shots this time, no more skimming.\" She wasn't going to blame McZylenko; the shot had been rushed, because she'd panicked. But skimming was hard. \"You know your targets now. We've wounded one. You need to kill it now.\"",
        "He cleared his throat. \"And you, ma'am?\"\n\nShe stared back at him, the plan still forming, swirling. Partial. \"I'll kill the other one.\"\n\n* * *\n\n\"Fuck.\" She could confide in Jeyne, as long as she was quiet, with the hatch to the shuttle crew bay closed. She shook her head as Masaakama once again filled her viewport, yet another shuttle run back to the Nodes. \"I should have my head examined. Nothing ever goes well when my boots are in the dirt.\"\n\n\"You already did get your head examined,\" he replied, deadpan, looking meaningfully at the bruise over her implant. \"Besides, you know how it is. When Fleet sends you in, you go in dry.\"\n\n\"No lube,\" she agreed. \"Only, this time, Fleet's not sending me. I'm sending myself.\"\n\nHe was quiet at that, minding the targeting globe, checking the angles. \"I'd have volunteered, ma'am, and so would all the rest of us.\"\n\n\"Fuck off.\" Pixy hated sentimentality. She was vaguely aware that she was respected, followed, possibly even admired, but she wasn't about to take it from a subordinate, even one who'd had his cock in her mouth. \"Mind your comms, Mr Jeyne.\"\n\n\"Aye aye, ma'am.\"\n\nShe swept past the irregular blotch of Node West, coming in low over the hills toward the Freiherr's Palace. \"They know we're onto them now,\" she went on, more calmly. \"Both bombers will be in action from now on. Their unopposed funtime is over.\" She nudged her collapse bar. \"We'll get them eventually. They know it. I'll expect them to expend all remaining ordnance.\" She glanced over. \"You'll head up the landing party from one of the bomb shelters. I'll be busy.\"\n\n\"Busy?\"\n\nShe cocked an eyebrow. \"Why, Mr Felix Jeyne! Your new skipper is beginning to formulate a Plan.\"\n\nHe paused, the shuttle scrubbing speed. \"Very good, ma'am.\"\n\n* * *\n\n\"It's going to take until tomorrow night, Commander,\" Emhart said doubtfully, shaking his head. \"Not to gather all the shit, really, but just to move it all. These are roadless regions. No atmosphere.\" He shrugged. \"That puts a lot onto my workers.\"\n\n\"Do it.\" Lord Miguel's tone, there in his little office behind the Fountain Hall, brooked no argument. \"As quickly as you can. Commander Pfeiffer's plan makes sense to me.\" He glanced at her from his chair. \"Mostly.\"\n\n\"Same here, my lord,\" Pixy admitted. 90% of the plan was straightforward, even simple, elegant in its military precision. It was that last ten percent that she didn't quite have finished yet. \"It'll be messy. But it'll work.\" Her plan, here in its early stages, involved various ways to try to turn her junked shuttle into a guided missile, preferably remote-controlled.\n\nIt had taken the Line Chief about fourteen seconds to decide the shuttle had made its last safe trip. He'd stood, arms akimbo, nodding curtly. \"It's fucking trashed, ma'am,\" had been his way of putting it, and now Pixy watched as Emhart left the office to set his wheels in motion.\n\n\"They'll come again tonight,\" the Freiherr muttered.\n\nPixy felt her face flush, and hung her head. \"Likely, my lord.\"\n\nShe looked up after a few seconds of silence to find him smiling that panty-dropping smile. \"Miguel. Please.\"\n\nShe nodded, feeling like a schoolgirl. \"Likely, Miguel.\"\n\n\"So.\" He sighed. \"Mr Emhart tells me it's not worth beginning your operation until tomorrow, as it might simply trigger the strike you're looking for a day early. Your Sublieutenant Jeyne is safely ensconced in the shelter, your Junior Lieutenant Dwart appears to be... amusing herself.\" He allowed a brief smile.\n\n\"They're all just lieutenants,\" Pixy told him dully. The stims were draining away fast now, her eyes drooping. \"We don't specify among all the different grades of lieutenant, I mean.\"\n\n\"Don't you.\" His voice, so deep, so soothing, drifted through her mind with the silvery twilight outside, the waterfall across the valley roaring on unconcerned with tonight's inevitable bombs. \"If your hunch is correct, Pixy, they will bomb Node Center tonight. Or perhaps Node Musk. Both Colonel Stonador and Elder Irn have been warned. Loss of life should be minimal.\"\n\nWith an effort, Pixy drove her eyelids open. \"They'll try to bomb both,\" she predicted; the tactics were clear to her. \"They'll get one. Mr Delmer will position Desperado in between, but he won't find a way to engage both bombers. Not after the mauling they gave us yesterday.\"\n\n\"But there's nothing more to be done tonight,\" he pointed out. \"Our plans are all arranged, as much as they can be for now.\" He smiled in that rich chair of his. \"You've done your duty.\"\n\nShe yawned, considering dreamily, and then rolled her head across the chairback to look at the gravely smiling nobleman. \"Yesterday, Miguel, you...\" She took a breath. \"Nevermind.\"\n\nMiguel cocked his head. \"Go on.\"\n\n\"No.\" She gathered herself forcing her head away from the chair. \"Really. Nevermind. I'll go check my people.\"\n\n\"You were going to say,\" he said softly, deeply, as she crossed to the door, \"that yesterday, I offered my quarters.\" She paused with her hand on the old-fashioned doorknob. \"The offer has not changed, Pixy.\"\n\n\"No.\" Duty called, that iron cage of discipline and culture and responsibility, and she made herself turn the knob. \"Thank you. But I need to get going while I still can.\"\n\n\"To beat the arrival of the bombers?\" He was coming closer to her, moving silently through his darkening office, around his desk. Toward her. \"Or to escape me?\"\n\n\"Both,\" she replied at once, but then he was right there, the warmth of his body reaching out to her, and a distant siren began to wail from the far side of the hills. She turned, peering out the window, just as his hand found her waist and pulled her close. \"Mmm.\" Despite herself, Pixy moaned against his broad chest.\n\n\"As administrator of this node,\" he pointed out, sweetly reasonable with his voice rumbling through his chest against her tender face, \"I must insist you take refuge in the nearest shelter.\"\n\n\"Very well,\" she murmured, the sirens droning on in the distance, and she didn't say anything more as he took her hand and led her deeper into his Palace.\n\n* * *\n\nThe subterranean room shook once, an errant strike in the Palace precincts, but the moon's soil soaked up a lot of the shock. By the time it reached Pixy's sleeping body, the Freiherr's mattress had taken care of most of the rest. She stirred, breathing in the smell of his sweaty skin, rich and sharp in her nostrils as she nestled into the crook of his armpit. \"Was that a near-miss?\" she asked sleepily.\n\n\"We've made the bed move quite a bit,\" he smiled back, his teeth a white flash in the darkness. \"That, alas, was not us.\"\n\nShe giggled, feeling delicious exhaustion in every limb. He'd said nothing to her as he ushered her down the crudely tunneled stairs, nothing but, \"relax,\" and she'd lain back and done something she almost never did: she'd let him take over.\n\nEven now, as she thought back on the magic of the early part of the evening, she couldn't remember him ever actually penetrating her. Maybe he had, of course; Pixy had seldom felt so worn, so torn up by sleeplessness and stress and danger and the bruised damage of getting blown into the cold bonfire, that she wouldn't have trusted herself to give a decent account of anything at that point.\n\nShe remembered touches, many of them, his hands along every part of her body. She remembered his body over hers, almost (but not quite) smothering her as he dragged his balls slowly along her skin. She definitely remembered his lips, brushing along her nipples and her hips and her thighs and across the screaming wetness of her pussy, just before he left her crying into his silk pillows as her orgasm rolled through her body like a conquering army.\n\nHe'd let her sleep after that, a deep and solid night's rest before, at last, she'd awakened to the feel of his thick penis on her thigh, his kisses pulling her awake. She'd surrendered then, eyes narrowed as she planted her hands on his naked ass and pulled him between her spread thighs, the two of them panting in each other's mouths as, incessantly, he thrust her to another climax with his veined shaft sawing along her clit. And then, as she tightened her pussy, holding him deep inside, she'd wept again when he came into her, deep, potent, both of them shuddering with the force of his bursting semen.\n\nAfterward he'd toyed with her in the dark, his fingers twiddling her nipples. \"Forty million shekels lost,\" she marveled softly. \"I don't know if a shekel is the same on Phaeton IV as it is in the Core, but that's a lot of production.\"\n\nHe chuckled out of the darkness. \"It is,\" he agreed, \"but it's nothing compared to my mother's fortune,\" and when he told her how much he was worth she gasped against his smooth chest.\n\n\"Wow.\" She thought about that, an incomprehensible sum. \"By the time I retire, say thirty years from now, I might have one quarter of that saved up.\"\n\nHe smiled into her hair. \"Will that go far? Where you're from?\"\n\nShe stirred, uncomfortable as always in thinking so far ahead. She had no clue where she'd ever retire to, no real sense that she ever would. In her mind's eye, Pixy always saw herself in space. \"I'm from Aries IX. That place is a real planet, like the Core. It's not anybody's outpost.\" She felt him tense against her. \"What? What did I say?\"\n\nWhen he spoke, he didn't seem pissed. \"Real planet. As though this one isn't?\"\n\nShe chuckled. \"Y'all have four nodes terraformed. Best I can say about that is that it's better than three.\" She brought his hand up from her tit, gave it a kiss. \"You've got a ways to go.\"\n\nBut he had more to say. \"Phaeton is like that. Like your Aries. Fully developed. Maximal infrastructure. The continent where my family is from? They've got universal education, healthcare, the lot. Indigenous medical schooling. Arts and culture.\" He shifted on the bed, Pixy's body moving to compensate; she felt comfortable against him. Comfortable skin to skin, with his cum painting her thighs as it leaked out. \"Phaeton has become the Core.\"\n\n\"Well.\" She shrugged. \"Isn't that the goal on any colony world?\"\n\nHe paused, and when he replied his voice had that schoolmasterly, briefing-officer tone Ledecki had alluded to. \"Our ancestors arrived on Phaeton over eight centuries ago. It took them 700 years to reach these moons. Seven hundred! Our four nodes might not look like much, but they're real. And it took us 150 more years to get this far.\"\n\nHe seemed to be trying to get her to see something, but Pixy was not a deep thinker about things like this. When she tried to conjure an answer, all she came up with was, \"Okay,\" and he seemed a bit deflated.\n\n\"Like, think of it. Once upon a time, Phaeton only had four nodes. Hell, even your Aries only had four nodes.\"\n\n\"Oh,\" she ventured. She was already sorry she'd asked.\n\n\"We respect what our people achieved on Phaeton. And we want our descendents to respect what we're doing here. Now. On Masaakama, which will one day be every bit as advanced as Phaeton. Right?\"\n\n\"Um. Sure?\"\n\nHe tensed. \"You've never had to think this way, Commander. You're the child of a developed planet, a Fleet officer, surrounded by modern life. Living in the present, a present of war and danger and even death. But here, we see ourselves as part of a larger picture. Neither my ancestors nor my descendants are an abstraction to me. They're very real.\"\n\n\"Does anyone ever tell you to stop talking?\" She ran her fingers lightly along his cock, gratified when she felt it twitch and stiffen. \"I'm not here to debate historical philosophy.\"\n\n* * *\n\n\"Status, chief?\"\n\nThe old Line Chief nodded slowly at the shuttle in the chrome light of the early Masaakama morning, thumbing his chin. \"Want a formal report, ma'am, or just the real deal?\"\n\n\"Let's make it formal. I need this ship fully functional.\"\n\n\"Okay.\" He slurped loudly at a chai. \"Formally? We're fucked.\"\n\nShe blinked. \"Fucked.\"\n\n\"Oh yes. Fucked.\" He shrugged happily. \"Five days and a rip-kit, and I could tell you that shuttle would be fully certifiable for one-way flight to the Desperado. But you're saying I have until tonight?\" He shrugged again. \"I mean, I don't doubt I can make it so you can lift. Atmospheric flight is a given. The docking ring, I could fix, sort of, but I won't certify that you can match velocities to make the capture. Reentry is not in the cards. Stationkeeping? That's a laugh. Hull integrity, that's your biggest worry.\" He slurped at his mug again. \"I'd not go aboard without a pressure suit. Comms were heavily damaged internally.\" He suddenly remembered something. \"The plus-ups are in great shape, though, ironically.\" Plus-ups were famous for breaking.\n\n\"Okay.\" Pixy nodded and tried to look wise. She had absolutely no solid plan at all to deal with the bombers, other than getting them piecemeal over two or three sorties, and what little she had was falling apart with every word out of the Line Chief's mouth. And, worse, she was signed for this shuttle; a noncombat loss would mean an inquiry, maybe even an audit. \"So you won't rate it for any sort of flight?\"\n\n\"Well, see ma'am,\" he continued slowly, chewing on his braided mustache, \"I wouldn't fly in it, myself. At all. So while I might be able to make it do a few things? Nah, I won't certify it.\" He turned his palms outward. \"Like I said. Fucked.\"\n\n\"I need you to make it so that an expert pilot can lift off the surface and get past Blue Point for zero-grav, low-orbit flight. Those are my parameters.\" She had no idea why; her mind was coughing up random shit at this point. Vaguely, she was thinking of using it as a decoy of some kind. \"Make that happen, and I promise I won't make you ride in it.\"\n\n\"Oh, ma'am,\" he replied with a gentle laugh, \"you're not getting me to ride in it, regardless. It's fucked,\" he explained.\n\n\"Fucked. Sure. Right.\" She glanced aside, chewing on her lower lip, to where Dwart was sitting with a local whoremonger and the settlement's gene czar, drawing up terms. Jeyne was putting the finishing touches on his low-beam antenna, a backup for reaching Desperado at longer ranges. Sailors, her sailors, drifted around the deserted Palace Plaza on various purposeful-looking errands of their own, watched by Constables curious about their chores even though they were punchy with fatigue.\n\nEverywhere, cleanup was a swarming mess. Lord Miguel had told Ledecki that this was a daily process now, the clearing up after the newest raid, robots and citizens alike taking a break from the mines to make their homes livable again for a few hours before the Flasbards came back and plastered them once more.\n\nAnother half a million shekels lost, Pixy thought to herself savagely, and she was letting it happen. She was the Captain now, the senior Fleet representative, solely responsible for saving this entire moon and all its people. And she sensed she was screwing it up, badly.\n\n\"Why are you here, ma'am?\" Jeyne had asked her, low-voiced, as they huddled in the shelter during the first of their mandatory drills.\n\n\"Well, Mr Jeyne, when a mommy and a daddy love each other very much...\" She smiled at the ancient joke, but when she glanced at him she saw he was dead serious.\n\n\"It's such a risk. After losing the Captain... Dwart and I could have handled this just fine.\"\n\n\"I fucked up,\" she'd explained softly. \"And now I deserve to pay. This is where it's dangerous. So?\" She'd shrugged; to her, that was explanation enough. Jeyne had just looked away, but she knew she was right.\n\nShe owed Miguel and his people a better plan, she knew, as she wandered aimlessly among the destruction. Hell, she owed them any plan, really, other than what Emhart had already set into motion early this morning: the careful handling and transportation of as much ore as the four nodes could lay their hands on, assembling all of it in the middle of nowhere. In a place the Flasbard sensors wouldn't be able to resist.\n\nSo all she could do was lure a Flasbard bomber. What would she do with it? She had about ten hours to figure that out. Always before, this great war in which she'd spent her whole life had been an abstraction: she'd fought for The Free People Of The Universe, but of course when you're a space officer, you never really saw those people. Now she could, and she was scared to death that she'd let them down.\n\n* * *\n\nThe plan took until teatime to materialize in her active little mind.\n\nShe chewed slowly at the peanut-butter sandwich, the taste bringing back all the old childhood Aries memories: yo-yos. First day of school. Naadam morning, with all the presents in the ox-bin. Catching steelfish with those little magnetized lines they sold down at the bazaar...\n\nShe frowned abruptly, staring at the junked shuttle with the memory of those magnets in her head. She glanced down at the shuttle's scorched sideskirt, at where the cargo umbilicals waited coiled up above their electromagnets.\n\nDid the Flasbards use metal in their ships?\n\nHer mind was racing; it usually did that when she was scared to death, even as her muscles trembled and her bowels churned in guilty expectation of imminent emptying. She looked hard at Lieutenant Dwart, standing in her engineer's orange unzipped over a particularly nice-looking lace bra, her gorgeous eyes gazing skyward. \"Dwart. What's the reentry velocity for this moon?\"\n\n\"Reentry?\" The girl blinked glancing around at the horizon. \"Most of this satellite has no atmosphere, ma'am.\"\n\n\"No shit. I mean, over the nodes.\"\n\n\"Well. I'll need to do some math, actually. Because of the partial pressure over the nodes...\"\n\n\"Do the fucking math, then.\" Her own brain was doing its own math, simple space-officer math, not the kind of esoteric voodoo shit engineers knew how to do. Her own body weight, plus a pressured EVA suit, plus a puffer and a few spare cartridges... and, hopefully, a parachute. \"Mr Emhart.\" She came up with a number as she turned toward Miguel's mining manager. \"You're an ore guy. Say I wanted to explode a mass of flerium in orbit. Enough to rupture a starship hull.\"\n\n\"Well.\" Emhart arched a doubtful eyebrow. \"How big a rupture?\"\n\n\"Big as you've got.\" Her gut was still churning, but less and less as Dwart messed with her abacus. \"But it also needs to generate a shockwave that can lend some velocity to a mass weighing around 160 kilos. Like, the mass should be wafted away from the blast slowly enough that it can be captured by this moon's gravity, but fast enough that it can escape the blast itself.\"\n\n\"The fuck is this?\" the miner wailed. \"Word problems?\"\n\n\"Just figure it out. I'll need a chunk of ore whose explosion will fit those parameters.\" She glanced at the sky. \"Fast, please.\"\n\n\"Hmph.\" The man chewed on his mustache and spat. \"How far away is the 160-kilo mass from the blast point? And is it moving?\"\n\n\"Fuck,\" Pixy bit savagely. \"Just figure it out. I no longer have time to waste.\" The plan was insane, clearly, the latest in a morose shuffle of insane plans she'd had to come up with. And it was unnecessary: Desperado could easily deal with the second bomber in time, maybe tomorrow night, maybe the next night. But that would mean more bombings, and that was no longer an option Pixy wished to consider.\n\nAnd, worse, it would mean Pixy would remain a failure. Fleet officers were only as good as their last battle, and hers had been a classical fuckup. She could not accept that.\n\n\"Ms Dwart! What's your number?\"\n\n\"I'm assuming you're talking about getting that 160-kilo mass back to the surface down here, ma'am?\" She'd been listening as Pixy spoke to the miner, now wrestling with his own abacus. \"It would need to be moving at no greater than 20 poronkusemas per second, no less than twelve.\"\n\nPixy nodded, her muscles tightening now as the decisions fell into place. \"Hey. Emhart!\" she called to the manager, \"there's your desired velocity. Call it fifteen porons per second. The blast needs to accelerate the 160 kilograms to that velocity for gravity capture.\"",
        "\"This is bullshit,\" he muttered, his abacus clacking. \"I'm a fucking geologist.\"\n\n\"Figure out the mass, and then break me off a chunk of flerium that size,\" she pressed, \"as long as it'll also cause a big hull breach.\" She nodded toward Miguel. \"With your permission that is. My lord.\"\n\nThe nobleman's eyes narrowed. \"You're making no sense, Pixy,\" he sighed, \"but you sound confident. So.\" He chopped a curt gesture toward the mining manager. \"Do as she says, Emhart.\"\n\n\"Ms Dwart.\" Pixy hauled in a deep breath, the fear ebbing as it usually did, replaced now by the buzz of decisiveness that waited to explode orgasmically out of her at times like this. \"You and Mr Jeyne need to gather all our people. Load them up onto the intact shuttle and lift. I'll be alongside in the fucked shuttle. Escort me up there, then when the bomber gets close, you skedaddle. Hang out on the far side of the moon until the bombers are dead.\" She hesitated. \"And make sure the transceiver is clear for the rescue frequency. In case... in case there's a bitch in an EVA suit stranded up there in low orbit. Or tumbling toward Phaeton IV.\"\n\nDwart frowned, then her eyes flew open as her mind put the puzzle together. \"Ma'am. No.\"\n\n\"Yes.\" Pixy said it savagely, hopelessly. \"I'll probably crash into the damn moon, but if I get the angles wrong I'll be starsailing. And if so, you better fucking track me down.\" She shook Dwart's shoulder. \"Get moving. I want your people off the dirt before everything goes to shit. And fasten your damn utilities, too; you've got maximum tit-overflow there. Show a little class, Ms Dwart.\"\n\nShe whirled before the engineer could answer, her mind ice-clear, eyes darting toward the wounded shuttle on the far side of the pad. The mining guy was over at the ore pile, measuring; Dwart and Jeyne were shouting hoarsely to the rest of Desperado's people, but Pixy had a shuttle to fix up. Not too much; just enough to get her into space. With the butter-tea hotplate powered up.\n\nOh, she reminded herself. Better find a parachute someplace, too.\n\n* * *\n\n\"Fuck. You're going to die, ma'am,\" the curvy engineer had blurted, just as they all got the shuttle engines powered up. Jeyne, looking his usual impassive self, had just stood there. He had a bedwarmer to lose if Pixy died, and he was aware that put him in an awkward position when it came to advising her.\n\n\"I might,\" Pixy glared. \"Be honest, Ms Dwart. You ever been close to death?\"\n\nShe considered. \"Honestly? Not really.\"\n\n\"Yeah.\" Pixy frowned, fingering one of the parachute harness' buckles. \"You get used to it. After awhile, you even get curious about it. And? Think of it this way: say there was a Fleet officer who was on the verge of getting booted off his ship because he's such a shithead. Then, five days later, he becomes the skipper. Pretty amazing story, right? He must be a pretty good leader, right?\"\n\nDwart looked confused. \"Um. Yes?\"\n\n\"Good. Because that describes Mr Delmer, the kind of leader you'll be following if I die. See?\" She threw the chute over her shoulder. \"Silver lining.\"\n\nAnd so, Desperado's gimpy shuttle limped off the moon's surface, rattling from every panel, its stabilizing braces jury-rigged and its flingmotors whining. But it launched, dammit, Pixy grinning like a maniac at the controls. Dwart's shuttle made a far smoother lift beside her, close aboard, Pixy's instructions clear: Keep in tandem with my shuttle as long as you can. The Flasbards will see them as one contact. The smoothness of its flight told her it was Jeyne at the controls.\n\nEverything hinged on her limping shuttle remaining undetected. That would take some fancy flying, but fortunately Pixy Pfeiffer was one fancy flier.\n\nMasaakama receded on the rear monitor, the dark-green smudge of Node North staying in view even as the blurry aft camera slowly lost the plot. She had to focus on keeping station with the other shuttle as long as she could, but it was bitterly hard: the controls demanded constant attention through the stink of lube graphite worming into her nostrils, making her lightheaded at exactly the time she could not afford to be lightheaded.\n\nHer speaker buzzed. \"Ma'am?\"\n\n\"Speak, dammit.\" Her mic was stuck open, which was just as well; she couldn't spare a hand to slap the button.\n\n\"Got that second bomber on the scope.\" Yes, Jeyne at the controls. He'd put Dwart on the mid-beam. She needed to work on her reporting; Pixy made a mental note to emphasize cross-training between the bridge officers and the engineers, before reminding herself she stood an excellent chance of dying today. So the training schedule would need to find a new keeper.\n\nAnd the fear of that made her tremble once more.\n\nStop it. She nearly said it out loud, raging at herself. She had no time for doubts. She was a desperate woman in a medium-duty pressure suit that fit her poorly, the helmet and puffer in a locksack by the aft hatch beside the parachute, all three of them drifting and thumping in the iffy artificial gravity. She made herself bat her despair away. \"Report, Ms Dwart. Range? Closure?\"\n\n\"Oh.\" The woman hesitated. \"Eleven thousand klicks. Forty porons' closure.\" She paused. \"Well, no in fact. No closure. She's not heading for us. But that velocity looks right.\"\n\nGood. \"She won't head for us,\" Pixy grated, fighting her collapser bar. \"She doesn't care about us. She'll assume we're a picket, and she'll expect you to bear away. She's going to wipe out Node North while her buddy goes after our flerium pile.\" She studied her prox indicator. \"Stay with the plan. You're glued to me until they pass us, then I'll glom onto them and you get to the far side.\" She glanced at the alarm beacon on her wrist. \"And remember to try to track my beacon. I have no clue where I'll be.\" She hoped the quaver stayed out of her voice.\n\n\"Roger.\" Dwart sounded confident, at least. \"Just heard from Desperado, ma'am; they're engaging the other bomber. Stern chase.\"\n\n\"I don't care,\" Pixy snapped. She had enough to worry about here. And if the frigate couldn't cope with just one Flasbard bomber, no matter who was at the wheel, none of this really mattered anyway. \"Focus, Lieutenant.\"\n\n\"Aye aye, ma'am.\" Now the oncoming bomber was visible even on Pixy's balky scopes. She glanced at the bearing and then craned her body over the instrument panel, her suit clinging at her midsection, to peer out the viewport.\n\nAnd there it was, her probable death. Approaching like a bold silver star against the million pinpricks of diamond-light on their silk black field, a swift and furtive mover against the vastness of space. \"This is Pfeiffer. Visual contact,\" she bit out, twisting her throttles.\n\n\"Got it.\" Jeyne's shuttle was huge out there, just a couple of meters away as they darted up from the moon. Everything would move quickly, Pixy knew; even if the crippled controls on the shattered shuttle had allowed her to, she'd have no time to get scared now. She thought of the locksack, of the parachute, of the thick hunk of fleromorphic basalt that Emhart had chipped off for her. Of her hotplate. She wondered how long it would take for the plate to reach 700 Torms. 340 Kelvin. About 65 Celsius. That wasn't much; she doubted she'd have more than two minutes once she plugged it in.\n\nThe one variable she'd had no time to check at all. Too late now, though.\n\n\"Altering course, ma'am, to synch up with the bomber,\" the speaker popped. That was Jeyne himself; he must have put Dwart on the side-scope.\n\nPixy glared in vain at her targeting globe, but the thing was wobbling heavily. \"Fuck. I can't get a course indication. Just tell me when you're moving.\"\n\n\"Ma'am.\" Pixy could hear Jeyne lick his lips on the far side of the mid-beam. \"I'm coming around to fourteen by fifty-seven at a turn rate of... four? Maybe five.\"\n\n\"Aye.\"\n\n\"In three. Two. One.\" The two shuttles swung about on the new course, Pixy's eyes glued to the other shuttle's nose: she needed, needed, to maintain her aspect relative to the other shuttle, or they'd get enough separation for the Flasbards to tell there were two shuttles instead of one. And then they'd be in a world of shit.\n\nPixy was still fixed on the deteriorating condition of her craft as the Flasbard bomber came surging past, its sub-Lerbal field shaking the teeth in her head and the rivets in her hull. She fought for control, her wild eyes darting toward the viewports, gauging distances. She shouted into her mic over the rattle of her ship. \"I'm good, Jeyne. We're under her guns and inside her sensors.\" The ship's shields glittered, all greenish needles across the pitted night-grey hull. \"You can disengage whenever you can get clear.\"\n\n\"Roger.\" The transmission trailed off at the end as the other shuttle rolled away, Pixy's weakened antenna no longer able to maintain the beam. An irritating beep blared from the corner of her hearing, the far-right console blinking: the gravity was failing. Not that she needed the warning: her internal organs were already shifting, so she smacked frantically at the switch that brought her shuttle to zero-G. Not like she could spare the energy now, anyway. \"Best of luck,\" came Jeyne's distorted hail, his shuttle already shrinking in the distance as he opened the thrusters.\n\n\"Yeah,\" Pixy sighed, her eyes staring hard at the big alien hull not ten meters away. She couldn't believe she was doing this. The dull metal was warted with bumps and channels snaking across its surface, like the skin of some massive grey hard-on, rolling through space.\n\nShe didn't realize it, but her teeth were chattering with excitement as she flung her hands along the panel: magnets, she howled at herself. Two magnetic umbilicals would do it, lashing her shuttle to her enemy so she could get back down into the crew compartment and get herself out of this hideous situation. Her whole being was bent on what she'd need to do down there, even as the vanished gravity tried to pull her out of her seat against the harness: throttle, collapser, helm. Proximity override. Thrusting down, the alarms all blaring, but Pixy knew how close she'd need to get and forced her hands to drive the sagging shuttle on down toward that threatening hull.\n\nHer fingers shot up above her head to trip the umbilicals, the whine of their reel adding a fresh clatter to the soundbox in which she'd trapped herself. The shuttle buffeted, a hard sharp crack coming from someplace, and all at once the fear was there: it took forever, it seemed, for the electromagnets to latch on, for her to be able to smack at her harness buckle and let herself launch up out of the seat, arms scrambling to fend herself off the walls.\n\nAnd then it was out of her mind, all gone, that claustrophobic cockpit with its cracked instruments and its walleyed targeting globe fading away. Because now there were bigger snarfs to shear.\n\nThe aft compartment was a nightmare, all creaking joints and rattled connections dominated by the ominous smell of the betakerosene and, worse, by the even more ominous burnt-steak smell of space itself. She pushed panic aside, her lungs slowly losing volume: there was a breach someplace, and she forced her strong legs against the bulkhead to drive herself clear across the bay to the clip by the hatch where that lifesaving helmet waited in her locksack.\n\nIce was forming on the walls while her fingers fumbled the thing out and onto her head, her hands shaking badly enough to make her try twice to fasten the slipring and start the oxygen pumps. The umbilical reel shrieked as the Flasbards put on speed, beginning the bomb run, her whole being dominated now by that everpresent Fleet need for haste.\n\nShe shouldered the bag with its precious puffer gun, her trembling body hitching the parachute over her utility pack, fumbling with the straps. \"Jesus H Buddha!\" she shouted, breathless, pissed at her sudden clumsiness; the airflow couldn't quite catch up until, with a sudden sweep of her arm, she freed a kink in the ox hose.\n\nAnd then, suddenly, she could think again. The oxygen cast its spell on her mind and body, hands tingling now. She pushed off fiercely, flying toward the hotplate and the chunk of flerium ore, weaving her arm through a seating strap so she could hold herself steady enough to get some duct tape around the rock, so she could snug the tea plate up against the mineral's oily hide.\n\nSomething snapped loudly up on the flight deck, rupturing. She felt her suit begin to inflate. Fuck me, she marveled. Might as well be in space now. She wouldn't even need to depressurize before she kicked the hatch, she realized, but this new breach meant she needed to move, fucking MOVE, the hotplate cord trailing behind her as she floated to the hatch.\n\nNo time now, the starlight visible through gaps in her hull as the bomber dragged her along, and everything that was in her was screeching at her to get out, now, just get the fuck away from this hell.\n\nBut, of course, plug in the tea plate first.\n\nThe jack sparked when she jammed in the plug, and then she was alone in a crumbling spacecraft with a time bomb measured by the steadily mounting heat against the flerium boosting the surface temperature until it would hit those 700 Torms and blast itself, the shuttle, and hopefully the bomber to smithereens; Pixy was panting, eyes and mouth never wider, when she smacked the hatch release and flung herself out into space, free at last.\n\nBelow her swung Masaakama, suddenly huge against that velvet space backdrop, the great bomber above her accelerating, leaving her behind with her shuttle clinging ridiculously to its hide. She fumbled the puffer from her sack, blasting the gun at full power to turn toward where she guessed Node North was. She whirled, the wonder of the billion stars thrilling and confounding her in equal measure, like they always did. And that's when the zero-g sickness struck, her vomit frosting the helmet facebowl and splashing all around her head in sickly peanutty globules.\n\nEVA always, always made her puke.\n\nShe tumbled along, struggling to breathe as the blowers slowly cleared her helmet, the enemy ship hurtling away. She was done now, completely spent. Everything was out of her hands, the physics of heat and pressure and velocity and gravity shaking her like dice in a cup. She looked wearily down at the satellite's surface, those inviting green nodes seeming close enough to reach out and touch. What had she told Prowne, just the other day, in the shuttle? Hell, you could probably strap on a pair of gravity boots, or even a parachute, and just head on down from here without worrying about ablation.\n\nWell, she was certainly about to find that out.\n\nNothing to do but wait. And, hopefully, the hotplate would cause the flerium to blow before the bombers dropped their payload.\n\nThe flash of the explosion came with staggering abruptness, and she didn't even feel the shockwave smash into her. But her organs did, sloshing around inside her, the moon beneath her getting much, much bigger with a speed and suddenness that shocked her. Screaming, she groped for her ripcord against the fright of that crazily spinning world before her, and just as she cast her eyes down to find it she threw up again.\n\nThe whole world, suddenly, was the color of peanut butter.\n\n* * *\n\nThe bonfire flared brightly now in the dusk, Pixy sitting alongside it with her leg elevated in accordance with Dr Borowicz' directions. The squire, still in his green satin, hovered nearby with a crystal pitcher of kumquat juice. \"More, Captain?\"\n\n\"No thanks.\" She peered speculatively through the flames at where the Flasbard bomber, her Flasbard bomber, poked out of the distant wastes, pointing toward the chromium sky like an accusing finger. She burped. \"I need to pee, anyway.\"\n\n\"I'll bring a bedpan,\" the squire announced at once.\n\n\"No, you will not.\" She was on old-fashioned crutches, given the uneven terrain down here; she'd never been that good with antigravity boots. \"I'm not just going to strip down and urinate right here in public.\"\n\n\"Nobody would notice, ma'am.\" That was Dwart, in the next lounge chair, gazing about proudly at her handiwork. \"Isn't it amazing?\"\n\n\"That's one word for it,\" Pixy muttered. The watchmen in the perimeter tower had spotted her limping along on a broken foot, her parachute dragging a broad grey dust cloud behind her as she marched toward Node North, silhouetted by the blazing pyre of the crashed bomber behind her. And now, here she sat with a sparkling beverage, watching as the locals had an honest-to-goodness orgy. \"Amazing.\"\n\n\"You see, of course, why I won't be able to keep a clear record of who's impregnating whom,\" the Head of head continued.\n\n\"Damn skippy,\" Juno murmured from Pixy's other side. Before them stretched a broad, writhing field of a few hundred naked bodies, local women and Pixy's own Fleet crewmen, all copulating vigorously amid ecstatic moans while the local men stood there watching in silence.\n\nApproving silence, though. They seemed fine with letting a space frigate's worth of Fleet crewmen with inadequate sex lives come down here to the surface to cum loudly inside their women. \"We used to have similar festivals on my home planet,\" Dwart bubbled in a haze of nostalgia, \"every time a ship came. My mom and my aunts, all the ovulating women in the local area, all kicking off their knickers and getting laid while their husbands just sat there and drank.\"\n\n\"Long term genetic diversity,\" Pixy sighed. The evening smelled of woodsmoke, candles, and cum. \"I take it our women are amusing themselves with the local men, too?\"\n\n\"Why not?\" Dwart sighed, smiling. \"It's a celebration, ma'am. The enemy is vanquished. Time to unwind.\"\n\nPixy sipped at her drink, wishing she was back on the Desperado where she belonged. \"We're due back on-station in four days, Lieutenant.\"\n\n\"I've built that into my shore-leave schedule, ma'am. Relax.\" She snickered. \"On my home planet, we did this thing where all the visiting men would line up with their cocks out, then all the local women would take a gold wire and some solder, then go along the line and-\"\n\n\"Enough, Ms Dwart.\" Pixy was suddenly tired, her foot hurting. She had no stomach for tales of bizarre fertility rites. \"Shut up.\"\n\n\"Shutting up, Captain.\" Pixy felt the little glow then, the slight thrill: she was the Captain. Holy fuck.\n\nJuno stirred beside her, now proud of her new position as Captain's Steward, however long it might last. \"Your 'slate is alerting you,\" she whispered, frowning down at the device. \"Ah.\" She looked back up, her eyes unreadable. \"It's warning you about your leave. You have to take it within two months, or you forfeit it.\"\n\nPixy leaned her head back on the slats of the lounge, watching the flames dance. Looking up into the gunmetal sky at the half-visible Desperado, hanging in low orbit. Listening to the people of Masaakama, rutting wildly in the reflected light of Phaeton IV. Thinking about the report she'd be writing on the way back to Outer Parabolic Station Four. She took another precise sip of her juice. \"I'll be forfeiting it, Juno. Go ahead and file the necessary paperwork when it's convenient.\" She smiled without mirth. \"So my dad died. Big deal. He'll be back by the time I finally get there.\"\n\n* * *\n\nThanks for reading! Pixy will return, probably; she's an attention whore."
    ],
    "authorname": "Voboy",
    "tags": [
        "space war",
        "pixy pfeiffer",
        "bomber",
        "sf",
        "spacecraft",
        "fear"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dry-no-lube-ch-05-blitz"
}