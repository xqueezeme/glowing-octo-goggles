{
    "title": "Before I Forget",
    "pages": [
        "When you finish this I'll tell you my inspiration for the story. This is a revenge on a cheating wife tale, very little sex.\n\n................................................\n\nWEDNESDAY EVENING 5-21-11\n\nTheir visitor was right on time. Since she received the phone call the day before, Ronnie was consumed with curiosity. She knew the woman slightly, she was her third cousin after all, but they hardly ever met except at family reunions. The fact that she was a lawyer deepened the mystery.\n\nHer husband was a lawyer, and she asked him if he knew her professionally.\n\n\"Barely\" he said, \"She practices in another county so we rarely cross paths. She works alone, doesn't have partners, and does everything she can to pay the bills, including family law. I can tell you she is well respected.\"\n\nVeronica ushered her into the den, and noticed how nervous she was. After the catching up on family was out of the way, she got right to the point.\n\n\"Ronnie, Phil, you must be wondering what's going on. Your dad contacted me almost two years ago about using me for some work he wanted done. Phil, I know you're his lawyer of record, and you will continue to be. Nothing will change that.\"\n\nThe woman, an attractive blonde in her early fifties, looked like she had tears in her eyes.\n\n\"This is the hardest thing I've ever been asked to do, but you don't refuse kin, so I helped him. Everything will be explained in the DVDs I have.\n\nThe first one you'll watch was made day before yesterday. All the rest are a good bit older. I'll be here while you watch them in case you have questions. I'm sure you will, and I'm sure you'll understand why I asked that your children not be here tonight.\"\n\nShe handed Phil a small stack of discs, each one labeled, and whispered to him.\n\nHe nodded, and came back with water for all three, and a box of tissues.\n\nHe picked up the one marked VERONICA AND PHIL, and inserted it into the player. Her father's face filled the screen. He was smiling.\n\n\"Ronnie, Phil, hi. Phil, don't take me getting Anne to do this is an insult to you, and after I explain, I'm sure you'll understand.\"\n\nHe paused and took a breath.\n\n\"You guys know that for the last year and a half I've been seeing a doctor. What you don't know is why.\"\n\nHe paused again, obviously fighting his emotions. Ronnie felt an impending sense of doom, she had never seen her father so emotional.\n\n\"There isn't a gentle way to say this. Almost two years ago I was diagnosed with Alzhiemers'. I went to the doctor because I was depressed, and thought that was what was causing me to be so absent minded. You didn't notice because at the beginning it was slight and I could blame it on my age. As it got worse I came around less and less, hoping you wouldn't notice.\"\n\n\"The drugs helped for awhile, but it progressed, and now my doctors have agreed it has entered the second stage. I have to give up my drivers' license and they urge that I look into assisted living. I've made the arrangements, but I want to clear up a few things before I go.\"\n\nHe slumped his head down for a few seconds before starting again. Ronnie felt the tears to starting.\n\nDamn it! She had felt like something was off, but with two teenage girls, her job[especially this time of year, she owned an accounting firm and tax season had just ended], and his assurances he was fine, she had let it go. He looked up at the camera.\n\n\"Don't be mad at me for telling you like this. I just needed to make sure I got it right, and with this, it helps me make sure I'm clear. Plus, I'll still be around, and I expect all my kids to come and see me as often as they can while I can still remember them.\"\n\nHe stared hard at the camera for a second.\n\n\"When you, Joy, and Junior come to see me, I'm only going to ask for one thing. When it gets worse, when I can't remember who you are, and lose the ability to speak, I want you to stop coming. I won't know, and the thought of you staring at an empty husk would be too much to bear. Try to keep your memories of me happier.\"\n\n\"Remember when I asked you guys to give my doctor a DNA sample? I told you it was for research on a genetic trait that was almost exclusive to our family. What I was actually doing was having you tested to see if you were predisposed to Alzhiemers, after all it is genetic.\"\n\n\"Well, two out of three are safe. But you Ronnie, you're at risk. Phil, make sure she has a physical once a year. Progress is being made daily in search for a cure and treatments, and it is my sincere hope it never happens, but if it does, the quicker she starts treatment the better the quality of live you'll have.\"\n\nThe pain in his voice was very evident. He drew a deep breath.\n\n\"Now for the hard part. The reason Junior and Joy aren't at risk is they're not biologically my children. They don't have the same father either. I have no idea when it comes to Junior who his biological father is, but I'm pretty sure that Josh Randall is the sperm donor for Joy.\"\n\nThey had to shut the player off because Ronnie was sobbing into the chest of her husband. Soon Anne joined them with tears of her own. It was twenty minutes before she could regain her composure.\n\n\"Would you like me to leave?\" Anne asked gently, \"You could just call me later f you have questions.\"\n\nRonnie gripped her hands firmly.\n\n\"Please stay. I'm sure I'll have a million questions. How much longer is the video?\"\n\n\"This one, about thirty more minutes or so. There are private messages for you, your brother and sister, both your spouses and one for Joy's roommate. And lastly, there is one for your mother. Are you up to continuing?\"\n\nRonnie shook her head in assent, and they settled back into the couch as Phil turned it back on.\n\n\"You have no idea how shocked and hurt I was to find this out. It took me a few days to sort through my emotions. In the end, as far as you kids were concerned, it didn't matter. You're still ALL my children. I raised you, I loved you, I'll still be proud when you call me dad. You can't take back a lifetime of love based on a few lines of a chart. I pray they feel the same way.\"\n\n\"But Ronnie, in spite of how I feel about you guys, when it came to your mother, I admit it changed my feelings for her. I had a little investigation done, and didn't like the results, so I changed my will.\"\n\n\"You and Anne are my executors of the new will I had Anne draw up. We tried to cover ever contingency, but you never know. Ronnie, the fact that you alone are biologically mine has nothing to do with it. I named you because you were always the tough one. You're the one I trust to do the right thing. Junior has always favored his mother, and I was all right with that. Admit it, he's the most tender hearted person we know. And Joy is still a child, and I'm sure my revelations will hurt her deeply. You have to have the strength she needs to draw on. Help her.\"\n\n\"You know how much I love the mountains, and I found a nice place specializing in my condition there. Mountain Pines Assisted Living. The arrangements have been made and the finances have been taken care of. I want you and all the kids to come see me next weekend after I've settled in. I'm looking forward to it.\"\n\n\"But before I go, me and Elvis are going trout fishing. I'm taking my tent, I haven't done that in years. My last hurrah, so to speak. I love you Ronnie, all of you. I'll see you soon.\"\n\n..................................................\n\nAfter a few more tears the questions started.\n\n\"Anne, how long have you known?\"\n\n\"I found out almost as soon as he did. He surprised me by coming by my house. When we were settled he handed me a hundred dollar bill.\n\n\"What's this for?\"\n\n\"Anne, I want to retain your services. I use my son in law usually, but what I'm doing is extremely confidential, I don't want any of my family finding out. Will you help me?\"\n\n\"I felt like I was going to regret it, but I agreed. I was right, you can ask my husband how many times I came home over the next few weeks with a tear stained face. As I helped him, my admiration grew. Here was a man faced with a terrible future, and his first priority was to make sure his family wouldn't suffer. I can't say I agreed with everything he had me do, and I actually talked him out of a few things.\"\n\n\"One thing he stressed. You are not to tell your mother or your siblings until he personally says you can. He wanted you to know sooner so you could prepare for the storm. Look, It's getting late, and you've got a lot to think about. Come by Saturday evening. We'll fire up the grill and let my husband roast something. He is very good at that. Then we'll start on the paperwork.\"\n\n.................................................\n\nMONDAY EVENING 5-09-11\n\nOn Monday of that week, three days before Anne met with his daughter Ronnie, David Childers sat in his worn old recliner, the one that was so comfortable he just couldn't get rid of despite his wife's complaints. He was looking at his wife of thirty one years. She felt his eyes and looked up.\n\n\"What?\" she said with mild annoyance, her usual tone.\n\n\"Just thinking, Thirty one years together, a milestone for this day and age. Did you ever regret choosing me, a farmer, over your other beaus? Especially Ed. I think that man was born in a suit. Bet he's never had a dirty hand in his life.\"\n\nHe saw her eyes tighten up some. She waited a few seconds before answering.\n\n\"No, I don't regret choosing you. I'll admit, I wish you'd have dressed up a little more often, taken me out a little more often than you did, but that's history. I chose you, and I don't regret it.\"\n\nHe persisted.\n\n\"You sure? I know I haven't been a very good companion lately, with being sick and all. We haven't made love in almost a year, since I got sick, don't you miss it?\"\n\nHe could tell she was uncomfortable with the subject.\n\n\"Relax, honey. A night out at a good restaurant pleases me more now than drinks and dancing. And we're in our sixties, that urge has been gone for a while now.\"\n\nHe smiled.\n\n\"Thank you babe, that means a lot.\"\n\nHe changed the subject.\n\n\"Honey, will you do something for me?\"\n\nA little leery because of the last conversation, she didn't commit immediately.\n\n\"What do you want?\"\n\nHe smiled.\n\n\"It's trout season. I'm taking Elvis with me and spend the night at the state park. Will you make some of your pimento cheese and a batch of brownies for me to take? It seems like I catch more when you do.\"\n\nShe smiled indulgently.\n\n\"Sure thing. Are you up to a trip?\"\n\nHe had kept his condition from her a secret as best he could. It was pretty easy actually, since she ignored him a lot. When she did, he blamed a sleep disorder and insomnia for making him forgetful. He had even moved out of their bedroom, saying he didn't want to keep her awake with his tossing and turning. She was fine with it.\n\n............................................... \n\nSATURDAY EVENING 5-14-11\n\nRonnie and Phil, Anne, and her husband Jerry \n\nwere standing on the patio, enjoying the lat spring breeze while the meat cooked. There was little in the way of conversation, each wrapped in their own thoughts. Anne got another round of beers and settled back into her chair.\n\n\"Did you watch the DVDs?\"\n\nDespite trying to put on a brace front, Ronnie broke into tears immediately.\n\n\"Yes. And after talking it over, Phil and I had Junior, his wife Jane, Joy, and her roommate Sidney come over last night. I let them watch the cover DVD, and then gave each of theirs. I had watched them first per my instructions. Joy didn't take it well, she just got out of the hospital at three. She was treated for shock and a nervous breakdown. Junior went real quiet, then went on a rant about it being a pack of lies. Jane took him home and called me later. She had to give him a sleeping pill, and he was still ranting and tossing on the bed. I bet she didn't get a wink of sleep last night.\"\n\nAnne hadn't considered that she would reveal the DVDs this soon, but everything was in place and rock solid. Phil had reviewed it and complimented her on her work. He gave her thanks for doing it, saying he understood how much of a conflict of interest it would have caused if he had prepared it. He had tears in his eyes when he told her of his video.\n\n\"I didn't know my father in law liked me so much. He thanked me for being such a good husband and father, and apologized for putting us in the middle. It made me very sad, and regret not spending more time with him. He made sure he stressed the importance of Ronnie and I being the anchors in the family now. I want to thank you, Anne. I know you probably didn't this much involvement in our lives, and we'll try to keep it to a minimum.\"\n\nJerry stood with his arm around Anne. A quiet man by nature, the depth of the betrayal he was exposed to affected him deeply.\n\n\"If you need anything, anything at all, call us. Doesn't matter what day it is, what time it is, call. It's too big a burden to carry on your own.\"\n\nAnne tried to hug him harder, thanking God for the man he was.\n\n\"Now that everybody knows, Ronnie, what are you planning?\n\nRonnie sat up straighter, allowing some of her anger to surface.\n\n\"Not everybody knows. Our dear mother is in for one hell of a surprise down the road. We're all going as a family tomorrow to see dad at his assisted living facility, to see if he has anything he wants to add, and just love him. I \n\nthink he needs that right now.\"\n\n................................................\n\nSATURDAY MORNING 5-14-11\n\nDavid felt the tug on his sleeve that same Saturday morning.\n\n\"All right Elvis, I'm awake. Too damn early on a Saturday if you ask me, but your right, trout waits for no man. Give me a minute and I'll make breakfast.\"\n\nHe sat up, glad for the little frame he had bought to put his double air mattress on. It made it a lot easier to get out of bed. He held his head in his hands for a bit. He'd had a bad episode last night, coming to his senses in the woods, with no idea how to get back to the campsite. If Elvis hadn't been there he would probably still be wandering around in circles. They were getting more frequent.\n\nHe fixed breakfast quietly while Elvis watched, keeping a close eye on the bacon.\n\nDishes done, he filled his small pack with lunch and fishing gear, picked up his rod, and looked over at Elvis.\n\n\"I'm gonna get that big one at Baker's Point today, Elvis. I can feel it. Ready to go?\"\n\nElvis was so anxious he led the way.\n\n..................................................\n\nFRIDAY NIGHT 5-13-11\n\nSidney held Joy by the hand in a firm grip for reassurance.\n\n\"Calm down, babe. It's probably nothing.\"\n\nJoy had a death grip on Sidney, trying to draw strength from the woman she loved.\n\n\"I can't calm down. This has to be bad news. What if they know about us? What if they disapprove. The secret is killing me.\"\n\nSidney rolled her eyes, thinking how many times they had already gone over this.\n\n\"Good. Look, when we came out to my Mom last year she didn't freak. I think she was a little disappointed from the grandchildren angle, but she's always liked you, so she was happy for us.\n\nWhen we told her we wanted to adopt after college and established in out careers, it sealed the deal\"\n\nHer eyes hardened.\n\n\"And if they don't approve, we'll wear them down. But it really isn't as big a secret as you'd like to think. I get the feeling your dad knows, even though he's never said anything. Your brother and sister aren't idiots, they have to suspect. I think the only one worried is you.\"\n\nNow relax, I'm sure this doesn't have anything at all to do with you.\"\n\nShe thought many times over the next year how she wished she'd been right.\n\nJunior and Jane were already there, so they started the meal. They were all intrigued by the the almost demand that they all be there. Ronnie just said it was important family business.\n\nFinally, they were in the living room. Ronnie had fended off their questions during dinner.She surprised them all by hugging them in turn.\n\nShe grabbed Junior and Joy and looked into their faces.\n\n\"What I'm about to show you is going to hurt, really bad. There's nothing I can do about that. What I can do is assure you that no matter what you see, I'm still your sister and I love you deeply.\"\n\nShe played the original first. Soon everyone in the room was in tears. Ronnie gave Joy her video, offering to let her watch hers in their oldest daughters room. Per her father, she had watched everyone of the DVDs.\n\nFive minutes later they heard a scream like that of a wounded animal and rushed upstairs, finding her curled into a fetal ball, moaning. They had to call the ambulance, and she was treated for shock, sedated, and kept overnight. After making there was absolutely nothing they could do, the went back to Ronnie's. The hospital assured everyone she would wake around eight. Sidney stayed.\n\nJunior sat in his niece's room for a long time after the video ended, without moving. Jane finally went and got him, leading him like she would a small child. She promised she would have him at the hospital by eight, and she would watch her video at home. By then it was almost two in the morning. Ronnie and Phil fell into the bed exhausted.\n\n................................................\n\nSATURDAY MORNING 5-14-11\n\nSidney was dozing when Joy woke up. She stirred, trying to remember what kind of accident she was in. Her hands and legs moved fine, she didn't feel any lumps or contusions on her face of body. Joy felt the locket her dad had given her, and it all came back. She woke Sidney with a wail, bringing the nurses and doctors charging into the room. Sid had her wrapped in her arms, rocking her like a baby, waving them away. Soon the rest of the family were there and took turns holding her until she quieted down. She asked to be alone with Ronnie. After thirty minutes they came out, and Joy told them she was going to go spend the night with Sidney and her Mom. They all promised to meet at Juniors and go see their dad the next morning.\n\nWhen she heard about David, Sidney's mom hugged Joy hard.\n\n\"That poor man. He was always so strong. Not the flashy look at me type strong, but like a tree. Solid. Dependable. You felt safe with him around.\"\n\n................................................\n\nSATURDAY AFTERNOON 5-14-11\n\nJane watched her husband like a hawk. She had never in her life seen him so quiet. He was loud, rowdy, in a happy kind of way. She rubbed her tummy to give her strength. Five months along, it was a girl, something that gave them both a lot of pleasure. She was a surprise baby. Jane was thirty six, and they had two boys, fifteen and thirteen. They loved their grandfather, this was really going to hurt them.\n\nShe had always liked her father in law. She didn't much care for her mother in law, she always seemed distant, cold. The kids always flocked to their grandfather. She and Ronnie always tried to engage her in conversation, but she rarely talked any length.\n\n\"I hope he does something about how awful she's been to him all these years. She deserves it.\"\n\nShe thought quietly. She never said anything, he had always been a bit of a momma's boy. Jane definitely did not want to have to comment on the whole mess.\n\nThe boys came home to them from the other set of grandparents, and he surprised them by hugging fiercely. They were surprised.\n\n\"Gee, dad, you act like somebody died. Are you all right?\"\n\nJunior spoke for the first time in hours.\n\n\"No, son,\" he said as he ruffled the hair of his oldest. He knew how bad he hated that, it just wasn't cool.\n\n\"I just got really sad news, and I'm still trying to process it.\"\n\nHe turned around and hugged Jane so hard he lifted her off the ground. For the first time in twenty four hours he appeared normal. She dreaded tomorrow, she had always been afraid of rest homes.",
        ".................................................\n\nSATURDAY MORNING 5-14-11\n\nBaker's point was named after one of the first settlers in the area, and the family owned the land at one time. The state had owned it for forty years, developing a park and campground.\n\nThere was hiking, swimming, boating, and especially fishing.\n\nIt was an actual point, a sheer knob of granite that extended out from the mountains into a point less than three feet wide. From there it dropped off ninety feet, where the headwaters of the river flowed by in typical fashion. An eighty foot run that dropped about four feet, strew with rocks the size of marbles up to the size of cars, before making a turn at the point and widening into a large pool.\n\nDavid had just hiked up from the pool, and was sitting there gasping a little, just where the point leaves the mountain.\n\n\"Damn, Elvis, I can remember when I could run up here and not be out of breath.\"\n\nElvis looked at him like he was smiling. David noticed.\n\n\"Don't think I forgot. What the hell were you thinking? I almost had him, I bet he weighed fifteen pounds. That's a monster around here. I wasn't going to keep him, I just wanted to hold him once, before I let him go. I almost had him in the net when you jumped in the water and broke the line.\"\n\nHe looked over at Elvis, admiring him. He wasn't a perfect specimen, he had a crooked tooth that made his lip curl into a snarl, and it reminded him of a picture of a young Elvis, so he gave him that name. He was from the last litter of boxers he had bred, and was one of the biggest, weighing over seventy pounds.\n\nHe caught his breath and set out two small bowls.\n\nHe put water in one and a can of dog food in the other. He usually fed him dry, giving him a can once in a while as a treat. He took the long leash he had brought, clipped it to his collar, and tied it to a small tree. It was long enough to reach him as he unwrapped his lunch, and he bumped his head into his shoulder until he lifted his arm, and Elvis slid underneath.\n\nHe watched mournfully as David unwrapped his sandwich, whining softly.\n\n\"Damn, Elvis. I get you a gourmet can of food, and you're trying to steal the last meal I'm ever gonna have. What kind of fair is that?\"\n\nStill, he tore the sandwich in half and gave it to him.\n\n\"Here, bud. I owe you this. I want to apologize and thank you. First, for forgetting you for two days. Two days!\"\n\nHis voice shook with shame.\n\n\"For two days you stood in your lot without food or water, yet when I remembered and came for you, all you wanted for the first minute or two was my attention. That's where the thank you part comes in. You made me realize it was time for me to stop pretending, and do something.\"\n\nHe paused to rub behind his ears, knowing he loved it.\n\n\"Did I ever tell you why I kept you instead of the others? You were butt ugly and dumb as a rock, for one thing. But the decider was loyalty. That's something I've come to value lately. It didn't matter if it was ten degrees or a hundred, if it was pouring rain in a high wind, or if it was a blizzard outside, if I went out you wanted to go too.\"\n\nHe patted the dog one more time.\n\n\"Don't worry, someone will be along shortly. You've got food and water, and if nothing else that bark will attract someone. Goodbye my friend.\"\n\nHe sat for a minute as tears ran down his face.\n\nLooking at the point, he remembered this morning.\n\n...............................................\n\nHe'd walked out the the very end of the point and looked down. Ninety feet looked like a long way down. The headwaters of the river ran alongside the base, dropping about ten feet in an eighty foot run, strewn with rocks from the size of a tennis ball to the size of a car, before curving around into a deep pool.\n\nNinety feet. That should just about do it.\n\nHe thought carefully about the plans he made, trying to find a flaw. For the sake of his children, this had to look like an accident. All the upbeat videos should reinforce that it was an accident.\n\nHe felt foolish, but was compelled to speak.\n\n\"I never worried much about you, you know. I took my kids to church for years, because I felt they needed to be exposed to you. I never really felt you in church. I guess there were too many people competing for your attention.\"\n\n\"No, I felt you in the wind. In the warm sun and rain that made my crops grow, in the beauty of a perfect crop, bound to nourish people I would never meet. And I saw you a few times too, in the faces of my children. I want to thank you for all that.\"\n\n\"I know what I'm about to do is a sin according to some. I admit I'm doing it partly for me, the thought of dying by inches doesn't appeal to me at all. But, mostly I'm doing it for my children. I can't stand the thought of forcing them to watch me fade away until only a shell is left. I don't want to burden them by forcing them through guilt and pain to come by and spend time with an empty husk. I want their last memories of me to be good, when I was able to function. Maybe I'm wrong. Maybe I'm selfish, but I'm gonna do it anyway. Just wanted to clear the air.\"\n\nHe stood for a second more, then grinned.\n\n\"Oh, and if you feel like granting me a last request, let me catch Mr. Big. I won't hurt him, I'll put him right back in the water. It'll be a good memory to go out on.\"\n\n.................................................\n\nSATURDAY AFTERNOON 5-14-11\n\nHank and Mary Travers were huffing and puffing, trying to keep up with their twelve year old daughter as she ran laughing up the trail. Both raised in a large city, they looked for jobs in smaller towns, looking for a better place to raise their children, and have a house with a big yard. Beth came to them late, they had just about given up trying when she came along.\n\nThey learned to love the outdoors, and camped as often as they could. They would regal friends at parties with their fiasco stories of their first attempt, but had become so proficient they were sought out as chaperones when Beth's girl scout troop went on their annual trips.\n\nBeth heard the dog barking long before she saw it. When she topped the trail, she saw the big dog, tangled in his chain underneath the tree. An old man was sitting there, apparently ignoring the barking. Something didn't look right, and she waited for her parents.\n\nWhen they got to the top Beth went up to the man and shook him gently.\n\n\"Mister? Mister! Are you all right?\"\n\nHe was passive for a minute when he suddenly started. Gradually the little girl came into focus. When she saw him staring she repeated the question.\n\nShe remembered his reply her whole life, especially if she was in the mountains.\n\n\"No child, I'm not. Do you think your parents will walk me back to the campground? And if you would, unclip my dog and let him run while we untangle his leash. He won't hurt you. His name is Elvis, and the worst thing that could happen would be him attempting to lick you to death.\"\n\nShe looked at her dad and he nodded. She called his name and petted him for a minute before taking the leash off the collar. After being unable to take more than a few steps for hours, he immediately took off down the trail, burning off some pent up energy. She called after him, but the old man said to leave him, he'd be right back.\n\nHe was stiff when her mom and dad helped him up.\n\nHer dad advised him to walk around a bit, to limber up his muscles. The old man walked to the end of the point and looked down, then up.\n\n.................................................\n\nDavid walked to the end of the point. He looked down at the water, then up at the sky. If the nice young family hadn't happened by, it may have been morning before he came back to himself.\n\nLooking up at the sky, he thought to himself about the day.\n\n\"Well, guess you showed me. I give up, we'll do it your way.\"\n\nHe turned to go back to the trail, when Mary Travers screamed. Elvis had come back up the trail at a dead run, saw his master, and leapt straight into his arms at full speed. It knocked him completely off the point. Luckily, the little girl was busy untangling the leash, and didn't witness it. She called 911, there was signal on the point, and soon the rangers and EMTs arrived. It was too late.\n\nDavid looked upwards as he fell, and had just enough time to mouth \"thank you\", and with his last thought hurled Elvis into the pool. He popped up and immediately ran back to David, licking his face and whining. The rangers had to shoot him with tranquilizers to get him to stop defending the body two hours later.\n\n.................................................\n\nSUNDAY MORNING 5-16-11\n\nJuanita Childers walked through her front door with a happy smile on her face. She'd just spent a great night with her younger lover. They'd made plans for their future together, once she divorced David and got most of his assets. She was going to retire, and he was going to quit his job. The affair had been going on for over twenty years.\n\nShe thought about David, frowning. He was so nice, so gullible, he never suspected she was sleeping with other people. It had started less than two years after they were married, forty years ago, with their banker. After that fizzled out she hooked up randomly, carefully, always covering her tracks, until she met Josh. \n\nIt would be awful for David.It would be like clubbing baby seals. He might not ever recover.\n\nBut, as Josh often said, there's always got to be a loser.\n\nAs she laid her purse down, she noticed her answering machine was full, thirty messages. Odd.\n\nIt reminded her to turn on her cell phone, and she noticed her message board was full. Wonder what was going on? Most were from Ronnie and Phil, god what an insufferable ass he was, she wondered what she saw in him sometimes. She checked the last message. She heard Phils' voice.\n\n\"Juanita, when you hear this, you need to call me or Ronnie. David was in a serious accident yesterday, and you need to get to Highlands Medical just as soon as you can. Please let us know you got your message as soon as possible.\"\n\nShe was immediately concerned. Even if she didn't love him, she didn't want him to come to harm.\n\nShe called Ronnie. \n\n\"WHERE THE HELL HAVE YOU BEEN? OFF FUCKING JOSH RANDALL? GET YOUR ASS UP HERE RIGHT NOW, YOU SLUT!\"\n\nHer head reeled. Ronnie knew. God, she hoped she hadn't told David. She had to get up there right away, try to get a handle on the situation. She called Josh on the way out the door.\n\n\"Josh, David's been in an accident. I knew I should have left the phone on last night! Worse yet, somehow Ronnie knows about us. I'm on the way to the hospital. Keep an ear out for your phone, try to answer it before your wife does. It might be a good idea to turn it off today. I'll call back as soon as I know more.\"\n\nShe could hear the near panic in his voice.\n\n\"She can't know now! It would screw up all our plans. Call me as soon as you can.\"\n\nAs he disconnected, it struck her he never asked about David. She had a wicked thought she tried to suppress. What if he died? It would move their plans up, and she would end up with all his assets instead of just most.\n\n..................................................\n\nShe parked in the hospital lot, checking her hair in the mirror. Damn, she wished she'd had the presence of mind to change clothes. She had on her party dress, her seamed hose, black four inch pumps. All things she kept hidden in a closet of one of the spare bedrooms. She exercised regularly, was trim, colored her hair, and she looked ten years younger than her actual age.\n\nRonnie met her in the lobby, her face set in hard lines of anger and pain. There was no greeting.\n\nShe looked her mother over, noticing the dress, and her face got even harder.\n\n\"About damn time, Cinderella. Did you have a good time at the senior slut ball last night? Maybe win the prize for biggest whore?\"\n\nJuanita stepped back from her daughter, thinking she might actually strike her.\n\n\"Mind your tongue, young lady! How dare you speak to me like that.\"\n\nRonnie looked her up and down.\n\n\"Well, Mom, if the 'come fuck me' pumps fit, I guess you should wear them.\"\n\nHer blush deepened. Ronnie was still at full volume and people were starting to stare. She took her arm, which she immediately shook off.\n\n\"Don't touch me, you slut!\"\n\nJuanita lost it and slapped her. She stood, horrified. What had she done?\n\nRonnie rubbed her cheek before she spoke again.\n\n\"Thanks, skank. I needed to calm down. The whole world doesn't need to know our dirty business. Come with us.\"\n\nPhil had appeared at her side, and if looks could kill, Juanita would be on the floor. She could feel the anger in his body. They turned and headed down a hall to a small office, stopping at the door.\n\n\"Go in there. They'll give you the information on Dad's condition, since you were so concerned you haven't even asked me once.\"\n\nThey literally shoved her through the door.\n\nJuanita stood before a woman who looked harried and tired. She looked up from her desk.\n\n\"May I help you? Please, take a seat.\"\n\nJuanita sat gingerly. Josh took her ass last night, and she let him so infrequently she was sore. She smiled at the memory. She gave it to him as a special treat once in a while, it kept him in line. Juanita stared at the woman for a second.\n\n\"Yes, I hope so. I'm here to inquire about David Childers. Where is he? What's his condition? How soon can I see him? I was, er, out of town last night and didn't get the message. I came as soon as I could.\"\n\nThe woman fished through her files, and looked up, frowning. She called someone, and soon there was a doctor in the office. They both looked uncomfortable.\n\n\"Um, Mrs. Childers, I'm afraid you got some bad information. Your husband isn't in the hospital.\"\n\nThe doctor paused for a minute, he had always hated this part.\n\n\"Ma'am, I'm sorry to tell you your husband passed yesterday afternoon, a hiking accident, according to the report. Arrangements were made by your daughter to transport him back to your local funeral home. I thought your children told you. They were all here by midnight last night.\"\n\nJuanita let out a small moan before she slumped down in the chair. The doctor checked her over, before summoning a nurse and instructing her to find the family. She came back with a note from Ronnie.\n\n\"You didn't need us when he was alive, I see no reason for us to be around now. If it was up to me I'd tell you to call Josh and have him comfort you. But Junior is in the lobby, waiting on you. Jane drove their car home.\"\n\nThat was it. Junior picked her up and drove her back home, refusing to speak or listen to her the whole way. Jane was waiting in the driveway. She didn't come into the house.\n\nJuanita noticed.\n\n\"Screw them all. They'll come to me after the will is read, hands out. Let's see how they treat me then.\"\n\n..................................................\n\nTHURSDAY AFTERNOON 5-19-11\n\nIt was a funeral the small town talked about for years. David was well liked, and the small church overflowed.\n\nThey all remembered the visitation, where Juanita sat on one side with the older grandchildren around her, and the siblings sat on the other. The line was long, and the mood somber, until Josh Randall appeared, hugged Juanita, and went over towards the children.\n\nJoy came up in a rage.\n\n\"YOU BASTARD! YOU ACTUALLY HAVE THE NERVE TO COME HERE? GET OUT! NOW, OR I'LL TELL SECRETS.\"\n\nHis face turned bright crimson, and he practically ran out. It took three men to constrain Junior. Juanita fainted.\n\nThe same odd grouping occurred at the funeral.\n\nJuanita rode in a limo with the three oldest grandchildren, while the siblings and their spouses rode in a limo together.\n\nSidney escorted Joy to the door of the limo and turned away, to be blocked by Junior.\n\n\"Where are you going? You're family now, and Joy needs you. Come on, sister in law, get in the car.\"\n\nSidney cried all the way to the cemetery, a mixture of sorrow and joy.\n\n.................................................\n\nMAY 19-26, 2011\n\nJuanita sat and brooded. Why were the children being so mean? Didn't they think she deserved happiness?\n\nShe was making a list of things to do. She thought it odd that she couldn't find any paperwork she needed in his little office. When she went to the bank and found the safety deposit box empty she had a mild panic attack. She had especially wanted his grandmothers jewelery, something he refused to get out of the box except for special occasions. She planned on wearing most of it all the time.\n\n\"Calm down\" she told herself, \"Phil probably knows where everything is. It'll all come out at the reading of the will. Then I'll take those snippy kids down a peg or two.\"\n\nThe reading of the will would be tomorrow. Josh had slipped over last night, and they spent four glorious hours together. He had taken the little blue pill, and they spent most of it in bed. Five orgasms, at least. She slept like a rock.\n\nShe sat gingerly, she had given up her ass again. He was becoming more demanding, sexually, since she was no longer attached. She found it charming. He had bit her breasts and thighs, leaving marks that couldn't be seen, marks that declared her his. After the will was read and she found out just how much she had, and he got his divorce, they were selling out and leaving town.\n\n..................................................\n\nMONDAY AFTERNOON 5-23-11\n\nJuanita actually had a spring in her step as she approached the office of Anne Johnson. It seemed odd at first that Phil didn't handle the will, but upon reflection she realized it made sense, avoiding conflict of interest.\n\nShe was greeted and ushered into a conference room. Anne came in and introduced herself. Juanita could feel her disdain in her voice and mannerism. It didn't matter, in an hour or two she would never have to see you again.\n\n\"Mrs. Childers, I am instructed by the terms of the will to have you view this video, it will answer a lot of questions before the actual reading of the will. It should take a little over thirty minutes. When you're done, have my receptionist get me, and we'll gather with the rest of the family to read the will. If you need water or anything else, she will get it for you.\"\n\nWith that Anne left the room.\n\n\"Gee, what's the problem?\" she thought. \"I guess I need to hear Hubby's last words.\"\n\nShe had to admit, she missed him more than she thought she would. Even if she didn't exactly love him like she should, she was attentive to most of his needs. He made her feel safe and comfortable. Lately the big farmhouse seemed too empty, and the creaks and groans of an old house settling as the temperature changed kind of unnerved her. Odd she had never noticed that while he was alive. She started the video. His face filled the screen.\n\n\"Juanita, if you're watching this, I'm already in the rest home. Two years, and you never noticed me degenerating. Oh well, I'm sure you had other things on your mind.\"\n\nShe blushed, she had been a little self centered.\n\nHe continued. \n\n\"Things like fucking Josh Randall. Did you know he's probably the sperm donor for Joy? And Junior, I have no idea who his sperm donor is, but if you can remember, you need to tell him. If I've learned on thing from all this, it's that conditions like mine are genetically transferred.\n\nThe knowledge should be helpful should he ever need a kidney or something along that line.\"\n\nShe paused the disc in panic. How had he found out? After getting her breathing under control she restarted the disc, fearing the worst.\n\n\"It might be interesting for you to know that Ronnie is mine. She must have slipped through by accident.\"\n\n\"All these years I've loved you, and you've been distant from me. I understand now. You know, I've never liked Josh, he's always seemed sleazy to me. Now I know I'm right.\"",
        "\"When I found out, I paid a firm to get audio and pictures of you two together. Want to see and hear some excerpts?\"\n\nThe screen was filled with a photo of Josh and her in a bed, naked, his sperm splashed across her face and chest, while an audio played.\n\nIt was her giggling.\n\n\"Can you believe how clueless they are? Twenty years and they don't suspect a thing. I feel bad for them really, especially your wife. It's gonna hurt her pretty bad to get the divorce papers. At\n\nleast the kids are out of the house.\"\n\nShe heard Josh laugh.\n\n\"She'll be all right. She can move in with her mother while we sell the house and split the money. Lord knows she can't afford to live there by herself. And your husband, that's the on who'll really get hurt. When you have him served and asked for seventy per cent, he'll probably have a heart attack.\"\n\nShe heard her voice again.\n\n\"You know I'll probably only get fifty per cent, but that's a healthy chunk. Enough, with your retirement coming up in a year, and early social security, to last us the rest of our lives. I've always wanted to go to Europe, and Scotland. Let's start there and see where it goes.\"\n\nThen they went into sex talk, and she could hear herself slurping while Josh urged her on.\n\n\"Oh baby, just like that! I never get tired of your mouth! I'm close baby close. I'm gonna pull out, baby, give you a pearl necklace. Aaaah!\"\n\nShe was mortified, sitting there listening to herself. The picture had changed into a slide show of her and Josh together in different positions.\n\nThey faded into the face of her husband. She had never seen such an angry look on his face.\n\n\"I wondered, if you found me so lacking, why didn't you leave. Then I discovered it was all about the money.\"\n\n\"Now, honey, seeing you hold me in such high regard, I thought it only fair to return the favor.\"\n\n\"My new will is iron clad, but if you want to spend resources you're really not going to have, feel free to try and break it.\"\n\n\"All my insurance policies now have our children listed as beneficiaries. You'll get nothing should I die. I prepaid for the funeral, so you won't be burdened with that debt.\"\n\n\"I sold the farm, all but twenty acres and the house and buildings, to that developer who's been after me for years. It was mine before we were married, and my dad had it tied up in a trust that couldn't be broken, unless I decided to sell. He tried to get me to reduce the price because of the economy, but I told him I had given him first choice, and if he didn't want to pay the price I would list it. He buckled and gave me full price.\"\n\n\"I moved everything out of the safety deposit box, took all the savings except ten thousand, all the bonds and investments, and moved them to another bank, and had the account put in Ronnie's name. If she feels like you deserve more she'll give it to you.\"\n\nHer head was reeling. What had he done?\n\n\"I know you probably won't like living in that five bedroom house by yourself, so I did you a favor. I paid off Juniors' house. You and he will be switching. He needs more room with the baby coming, and his little two bedroom ought to suit you just fine. You don't have to thank me. Oh, and don't try to fight it, Ronnie is my executor along with Anne, and they'll have you evicted. No, this way you can act like a thoughtful mother and be a hero.\"\n\nThe proceeds from the sale of the land went into trust funds, divided equally between the three kids. If they feel like giving you some of it, it's up to them.\"\n\n\"I assure you, everything I've done has been carefully assessed and totally legal. Like I said before, fight it if you want. Also, if you try divorce me, or try to get hold of my finances by declaring me mentally incompetent, it's too late. I had myself declared incompetent a year ago, and named Ronnie my guardian.\"\n\nHe rested his head on his hands on the screen. When he looked up, she could see the tears.\n\n\"I don't know why you didn't love me, guess I never will. But you gave me a few good memories and three great kids. That's why I'm leaving you enough to retire in comfort. But be aware, should you blow the money on, say, trips to Europe, when it's gone it won't be replaced.\"\n\n\"Finally, I gave strict instructions that you were not to be placed on my visitors list at the rest home. I want what few memories I have left to be pleasant ones. Goodbye Juanita.\"\n\nHe sat for a moment, and then added an afterthought.\n\n\"By the time I'm gone you will have received a few surprises I left for you. Take them in the spirit they were given.\"\n\nThe video froze on his face, a look of despair and anger on his face.\n\nShe lay her head on the table and wept.\n\n..................................................\n\nShe didn't stay for the reading of the will, she couldn't see the point.\n\nRonnie saw the looks of surprise on her siblings. Each of them were moderately wealthy. If they were conservative and lived within their means, they could provide the best for their children and\n\nlive comfortably in their retirement.\n\nRonnie had no mercy on her mother, making her stick to the instructions in his will. After a month, she and Junior swapped houses. It did make her look like a thoughtful mother, and she did admit, she liked thee little house. It was so much easier to take care of. She lived quietly.\n\n................................................\n\nFRIDAY AFTERNOON 6-22-11\n\nJuanita wondered what her boss wanted. She hardly ever asked anyone to come there, preferring to move about the building, talking while she supervised.\n\nShe looked back on her job. She wanted to go to work after Joy was born, she told David she was feeling bored. They didn't need the money, and she assured him it was just something she wanted to do. Of course he agreed, wanting to make her happy. She soon found that there wasn't a lot out there for a high school dropout. She couldn't see the sense of staying on school since she was going to marry David just as soon as she turned eighteen.\n\nDavid actually got her the job, his cousin owned the rest home. It was housekeeping, and didn't pay a lot, but she had always liked to clean. She slowly moved up until she was housekeeping supervisor.\n\nOne of the perks of the job was the retirement program. If you stayed twenty years, you could retire at three quarters pay, after the age of sixty. Juanita was past sixty, but needed fifteen more months to vest. It would coincide with her taking early retirement.\n\nShe was surprised to see Josh there. They had hit a bit of a rough spot when she found out she wasn't going to inherit much. He still slipped over from time to time, but he never talked of a future together anymore, saying hey should cool it for awhile, let things blow over. The sex had gotten rougher, too. She wasn't comfortable with it, and things came to a head when he did her anally and then tried to get her to take him in her mouth. When she refused he stormed out, and they hadn't gotten together since.\n\n\"Josh! What are you doing here?\"\n\nHe shrugged. \n\n\"Dunno. She said be here at three, so here I am? Think it has something to do with our play times?\"\n\nShe had gotten him his job there sixteen years ago, as one of three groundskeeper/maintenance men the home employed.\n\nMona, the owner, called them into the office and shut the door. She sat and looked at them for a moment before slamming a file on the desk.\n\n\"You idiots! Do you know how dangerous what you've been doing was to my business? If the state inspectors had caught you having sex in one of those empty room, I could have lost my license! And Juanita, at your age! What were you thinking?\"\n\nThey sat there stunned. How had she found out? They were very careful. When a room was available, she did the final inspection, and had a maintenance man[guess who] go over it before releasing it to be occupied again. They had some of their hottest sex there, quickies mostly, with an occasional head job. The fact that there was a remote possibility they could get caught heightened the excitement.\n\nMona flipped a few pages out of the file, two of them having sex, doggie style on the bed, her uniform skirt flipped up and his pants around his ankles, and one of her on her knees, while he leaned against a dresser with a blissful look on his face. There was little doubt what was happening.\n\n\"Just so you know, these are legal. There's a notice in every hallway about video cameras in use. This one is special. I put it in the room after David talked to me, and removed it before a resident moved in. I just wanted you to know I had these, just so you wouldn't put up too much of a fuss over what's about to happen.\"\n\n\"Josh, I'm sorry to inform you, due to the recent economic downturn, I'm going have to lay you off. I wish you the best in future employment. Do not expect a recommendation.\"\n\nJosh exploded.\n\n\"What? You can't do that, I have eight years on the last guy, and I've only got four years to go to get vested. You can't do this to me.\"\n\nMona sighed.\n\n\"All right, if that's the way you want it. Josh Randall, you are hereby terminated for flagrant violations of the morality clause covered in our\n\nemployee rules of conduct. I note that in your file is a copy of the rules with your signature, noting that you read and understood these rules.\n\nPlease leave the property immediately. And Josh, these photos will find their way to your wife, somehow. Still don't want me to lay you off?\"\n\nJosh sagged back in the chair, defeated.\n\n\"Yes ma'am, I'll accept the layoff.\"\n\nMona smiled.\n\n\"Good, at least unemployment will give you some income while you try to find another job. Please leave now, and never come back on this property. Are we clear?\"\n\nHe nodded, and left without saying another word.\n\nJuanita sat there stunned, fearing her fate.\n\nMona barely concealed her hatred.\n\n\"Juanita, let me tell you what a stupid bitch you are. My first inclination was to fire you when David showed me the pictures. I was hesitant to put the camera up, but admit it was an act of self preservation. You need to get on your knees and thank God David didn't want you fired. After he explained what he wanted, it gave me a greater respect for him.\"\n\nShe sat back and looked at her severely.\n\n\"Juanita Childers, in light of recent activities, I am removing you from your supervisory position and demoting you to part time. From now on, you are allowed two days a week, on Friday and Saturday. You know what a hard time we have getting people to work the weekends, this solves all our problems.\"\n\n\"You get to keep your job, and I get reliable help on the weekends.\"\n\nJuanita broke into tears. Mona slapped the folder down again.\n\n\"If this isn't acceptable, you can always quit. But think about it, this way you get to keep your job and still earn your retirement. Since it's based on hours, and you're going from forty to sixteen, it'll take you until you're sixty seven to vest, but it's not like you're going on pleasure cruises or traveling soon, now is it. Take it or leave it, Juanita, but I need your answer right now.\"\n\nJuanita was trapped and knew it, so she agreed.\n\nMona felt a little pity for her.\n\n\"It's not that bad. You can still retire next year and work. Your pay won't even effect what you draw. If you behave yourself, in a year or so I'll give you more hours.\"\n\n...............................................\n\nEXCERPTS FROM THE GOODBYE DVDs\n\nJOY.\n\nHis face filled the screen. He had a big smile on his face.\n\n\"Joy-Joy, did I ever tell you why I called you that? It was because you gave me twice the joy in my middle years than I deserved. Your mother got to name the other two, but I insisted on your name, Joy Elizabeth. Elizabeth was in honor of your great grandmother, I wish you could have met her.\"\n\n\"You gave me a great gift. Ronnie was so much older than you it was like I got a first daughter all over again. I can't tell you how many times you lived up to your name over the years. Every time I felt low, you were always there to cheer me up. I can't tell you how sad I was when you went off to college, But it's life. It was time for you to start seeking your own destiny.\"\n\nHis face got serious.\n\n\"Joy-Joy, I need you to understand something. No matter what some lines on a test say, your mine. My baby girl, and you always will be. If you've never believed anything else I've ever told you, believe this. I love you dearly, my daughter.\"\n\nHe paused, still looking serious.\n\n\"Speaking of love, baby, everyone knows you're gay. Even as clueless as Junior is, even he figured it out.\"\n\n\"I knew when you were thirteen, and I found your brothers old Playboys and other skin magazines where you hid them in the barn. I knew when you and Sidney got together your junior year and went to the prom together, saying you couldn't find boys interesting enough to take you. You even bought corsages for each other. It was no surprise you guys went to the same college and shared a two bedroom apartment. You don't know how many times I wanted to tell you to stop fooling around and get a one bedroom, until I visited you and saw you guys had turned the other bedroom into a study room. So stop goofing around, and come out. We'll all act surprised if you want us to.\"\n\nHe added it as an after thought not to be surprised if her mother doesn't take it well.\n\n\"That being said, I'm glad Sidney is an economics major. Let her keep up with the money I'm giving you. Artists aren't generally known for their keen business sense.\"\n\n\"I'm glad you're going to be an artist. You have a rare gift, your paintings are like snapshots of a soul. Remember that pencil sketch you made of you and I when you were ten of us walking across the field, with the two boxers I had at the time?\n\nThat's when I knew what a talent you were. If you remember, the next month I started your art lessons.\"\n\n\"I framed that sketch, it had a place of honor on the wall right across from my desk. It's in my will, that when I pass it is to be placed in my casket with me, along with the baseball Junior hit to win the county championship, and the first place certificate Ronnie got in the regional science and math fair. I'm so proud of all of you.\"\n\nThere was more, but she couldn't stand to finish then.\n\n................................................\n\nJANE\n\n\"Jane, I need you to do something for me. Watch over Junior. He's a gentle soul and has always been partial to his mother. That's why what I'm leaving you two is in both your names. If he's not careful, she'll wheedle most of what I give you away from him.\"\n\n\"By now you should be living in our old house. It was built by my grandfather, but I kept it up and added improvements. It's a house used to the sounds of children, so it should be happy you're there.\"\n\n\"I know things were a little rough for you two, with you being laid off and his hours being cut. I have a request.\"\n\n\"You should have ample money for you to go back to school and finish your degree. If you do, Ronnie has a spot waiting for you, maybe even a partnership down the line.\"\n\n\"Junior has always been a mechanic at heart. Try to get him to go to diesel school, the work is more steady and he won't be gone overnight anymore. I've redone one of the farm sheds and fixed it up, all he has to do is go to work when he gets his certificate. There's always work for a good mechanic.\"\n\n\"I want Bobby to have my truck. It's a little old, but it's in good shape and doesn't have many miles on it. He's fifteen, he'll be driving soon.\n\nGive little Dave the farm equipment, he was the one most likely to be a farmer. I left you enough acres he can do some experimenting with, just to see if he likes it. I also want you to give him Elvis. He's dumb as a rock, but he's loyal, and he and Dave have always gotten along.\"\n\n\"I'm sorry I won't get to see them become adults. and I want you to promise me on your soul when your little girl is born you bring her to see me.\"\n\n\"I hope you have a good life. Watch out for your family for me.\"\n\n\"Oh, and don't get stupid and name your daughter Davida. I don't like the way it sounds.\"\n\n..................................................\n\nSIDNEY\n\n\"Well I did it, girl, forced Joy to come out.\"\n\n\"Treat her well, give her the love she needs. Look out for her, you know she's an idiot when it comes to practical matters, especially money. I know you're the dominant one in the relationship, so the burden falls to you.\"\n\n\"And Sid, I'm glad she found you. I hope your lives turn out well. And come see me Sid, just you, occasionally, So we can know each other better.\"\n\n................................................\n\nTWO YEARS LATER 5-16-13\n\nEight adults, seven children, ten tents. It looked like a band of gypsies had descended on the campground. They ate breakfast the next morning, the three adults cooking lost count of the pancakes and sausage they cooked. The cooks rested while everyone else cleaned. The kids who were small enough played in the creek under watchful eyes, while the two teen girls and two teen boys wandered off in search of people their own age.\n\nThey ate a light lunch and started packing backpacks and boxes. Soon the whole group were filing up the hill in a column, slowly enough the children could keep up. A little eighteen month old girl was handed from adult to adult as they tired.\n\nForty minutes later the arrived at Baker's Point. There was a forty two inch wall on the drop side, and warnings were posted. The wall had a plaque near the end.\n\n\"In honor of David Childers, who accidentally fell from here 4-14-11. Erected by his children in his honor. Rest In Peace, Dad.\"\n\nSoon two small tents was erected and there was a bustle among the females. Soon the strains of a string quartet were heard, and five minutes later the wedding march commenced.\n\nJoy emerged from one tent, Sidney from the other. They were dressed in identical white dresses, and carried matching bouquets. They walked towards the makeshift altar with Ronnie, Jane and their daughters on one side, and Phil, Junior, and his sons, and the two small sons of their preacher on the other. The preacher and his wife stood at the makeshift altar.\n\nWhen the music stopped the ceremony began. Same sex marriage had become legal in their state two months before, and it had taken that long to coordinate everyone's schedules.\n\nWhen the reverend asked \"Who gives this woman in marriage\", Joy looked at the portrait carefully placed beside her.\n\n\"My father does\" she said in a calm, confident voice.\n\nFor the rest of her life as an acclaimed artist, if she was ever asked what she considered her masterpiece, she would point it out.\n\n\"Portrait Of Me And My Father\" showed a pale blue sky beating down on a finely furrowed field. A little blond girl, around six years ole, was holding a man;s hand and looking up at him. You could see the love in her eyes. She was barefoot, weaing a little white shift. You could see the dirt stains on the tail. The man was looking down, smiling. He was wearing boots, overalls, and a dirty white t shirt. His bald head was gleaming in the sunlight. Two boxers pranced around the pair, kicking up small puffs of dirt.\n\nShe had won three awards with it, and had several very lucrative offers to buy it, but she could never part with it.\n\nAfter the ceremony, and the hugs and kisses, the others started repacking everything. \n\nRonnie, Phil, Joy, Sidney, Jane and Junior took a small cooler and walked to the end of the point. The cooler contained flower petals, which Joy, Ronnie, and Junior tossed over the wall and down into the water. The spouses stood back and watched, then hugged each in turn before heading back.\n\nElvis couldn't wait to get back down the trail. \"Little\" Dave, now six feet tall, held him firmly as he whined. He petted him. \n\n\"I know Elvis, we all miss him.\"",
        "Juanita found out three months later, when one of the grandchildren let it slip. Joy hadn't spoken to her since the funeral.\n\n..................................................\n\nThis story came from a true experience. I had a friend who moved two states away. We would talk occasionally, but as five years past,we stopped. He called me out of the blue one day, saying he was going through all his old numbers and found mine. We chatted for a few minutes before he revealed the true purpose of his call. He had the disease, second stage. He was going through his phone records, calling friends and telling them goodbye while he still could.\n\nWe talked about old times for about thirty minutes before he hung up. I made a resolve to call him again soon, and three weeks later I did. I got his wife.\n\n\"I'm so sorry\" she said \"he died in a fishing accident. He fell into the river and his waders filled and dragged him down.\"\n\nI felt the hairs on the back stand up. My friend had almost drowned as a small child, and harbored an almost paralyzing fear of water. He got queasy driving over bridges.\n\nDraw your own conclusions.\n\nAnd before you say anything, I have Juanita's story plotted it out.\n\nThanks for reading. "
    ],
    "authorname": "qhml1",
    "tags": [
        "alzhiemers"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/before-i-forget"
}