{
    "title": "Ganymede Station Pt. 01",
    "pages": [
        "GANYMEDE STATION\n\nPART 1: CHEYNEX\n\nCHAPTER 1.\n\nAs I looked high overhead I was taken aback by the sheer number of stars. An entire galaxy spread into the vast blackness of space all around us. Even while I was rocked by the man underneath me, my head was a million miles away.\n\nCarson, one of many freighter pilots who stopped by this station, held me firmly by the waist as he slammed repeatedly into my ass. We were on the bridge of his cargo ship, the Comet Chaser, docked at Ganymede. I loved when he fucked me in this exact place aboard his freighter. It was cramped, but through the heavy windows above and surrounding us was one of the best views of the nearby cosmos. Sweat rolled down my smooth chest and arms as I held myself atop the ship's console. The steam we were creating from our exertions fogged the large windows ever so slightly, in gray patterns like clouds. Carson grunted and gritted his teeth as he fucked me for all he was worth. The feel of him inside was wonderful. He was one of my regulars, I would usually get a message from him when he came through this way, every other month or so. He was nice enough, I always looked forward to our time spent together.\n\n\"You're so hot, baby.\" He moaned into the cool air of his ship's cabin.\n\n\"Don't stop until I make you cum.\" I told him, pushing some long dark hair out of my face.\n\nCarson leaned back in his captain's chair, gripping me more tightly. It was an awkward position for me, my feet perched on the chair arms and my hands holding me slightly wedged between the windows and ship's terminal, but I wasn't uncomfortable, in fact I felt incredible. He spit into one of his large, rough hands and I felt it wrap around the length of my cock and start to pump.\n\n\"Mmm, just like that, it won't be long now...\" I said with a gasp.\n\nI curled my long tail up underneath and pushed gently between the big man's hairy thighs until I was sliding into his sweaty ass cheeks. I nudged further until I was prodding against his tight asshole. He wouldn't let me enter him, but I knew the gentle, teasing pressure here would send him over.\n\n\"Ungh, you know the spot, don't ya?\" He grunted with a grin under his whiskers. \"Here it comes!\" Carson shouted.\n\nHis hand was clumsy on my dick so I replaced it with my own to bring myself to orgasm. I joined him moments later, blasting streams onto my stomach and chest with thick bursts of semen. I threw my head back as the power of our combined climax wracked my body. Carson continued to thrust and his eyes grew wide with lust as he enjoyed watching me shoot. After several blissful moments our bodies began to slow and relax while our breathing returned to a less feverish pace. When I was finally spent and the frenetic sexual energy had dissipated, I carefullly climbed off the larger man's lap and leaned against the side of his chair, kissing his broad shoulder.\n\n\"That was wonderful, Carson.\" I said sweetly.\n\nThe grizzled freighter pilot gave a wide smirk. \"I don't think I'll ever get tired of being inside you, Cheyne. You know just how to make me feel good!\" \n\n\"You make me feel good too.\" I smiled back.\n\nCarson rose to his feet and fumbled around in the pile of clothes near his feet until he found his underwear, stepped into them and pulled them up to his hips.\n\n\"I'm gonna get a drink, you want one?\" He asked as he headed for the cabin door.\n\n\"That sounds great.\" I nodded appreciatively. \n\nAfter he left the room I began to dress as well. I pulled on my briefs and heavy socks. Then I climbed into tight-fitting pants and a shirt, large heated jacket and heavy boots, out of necessity. The boots had mechanisms inside that could be activated to adhere to any metal surface in the station. If the artificial gravity failed, as it sometimes did, it was necessary to not only have the magnetic footwear handy, but also be adept at moving in them without gravity's assistance. The heated jacket was necessary for all scabarethen, that is, members of my race. Our planet is severe, arid, much hotter than human climates, and while we can deal with cooler temperatures for a time, we ultimately need to be able to heat back up and quickly. For scabarethen living in space, or human settlements, hypothermia is sadly the number one cause of death.\n\nI zipped the jacket up and the sensors inside the cuffs and neck activated, alerted to my body temperature and began to heat the lining accordingly. I sat on a low bench near the back of the cabin and stared off longingly through one of the long, slanted side windows into the vast twinkling universe beyond. The view wasn't spectacular, there was construction, other ships and docking ramps obscuring what I could see, still, without actually being out in space, you could at least see the stars.\n\nCarson returned a few minutes later still wearing only his boxer shorts, carrying two human ales, they weren't a brand I recognized.\n\n\"Here ya go, Cheyne.\" He offered me one which I gratefully accepted.\n\nI took a few sips and contemplated the flavor. It wasn't too bad, although drinks of my people always seemed to have more depth, more sweetness than human-brewed beverages.\n\n\"How is it?\" Carson asked as he took several big gulps.\n\n\"It's fine, thanks.\" I replied.\n\nHe picked up his work pants from the heap on the floor and rummaged around in a pocket until he found his smartscreen, a handheld device that nearly everyone owned and used regularly. It could contact anyone almost anywhere, display any information desired and even monitor the owner's health and wellbeing. To my understanding humans have used them for generations.\n\nHe raised an eyebrow slightly and asked, \"Are we gonna do this now?\"\n\n\"Yeah, sure.\" I said, producing my own smartscreen from my jacket.\n\n\"Same amount as last time?\" He asked.\n\n\"Yup, sounds good.\" I said.\n\nCarson made a few taps and slides with a finger. \"Done.\" He stated.\n\nI made a quick check of my account and saw it update to reflect the latest addition of credits. \"Perfect, then we're all set!\" I said happily.\n\nWe finished our drinks over small talk. It was nothing too personal, things like, 'how is work going?' Also, 'how long do you think you'll stay in Ganymede this time around?' \n\nUltimately Carson started to fidget and said. \"Well Cheyne, I'm pretty tuckered out, think I'll turn in soon.\"\n\nObviously this was my queue to leave, as I always did at this time of night but something stupid popped into my head and instead I remarked, \"I could stay the night if you wanted?\"\n\nThe big freighter pilot gave me a fairly confused look. \"I uh, couldn't afford that.\"\n\n\"No, I mean, I know. It would be on the house. My place is just about the worst, so, not in a hurry to get back there.\" I replied quickly and gave a short laugh.\n\nCarson grimaced and scratched his blond chest as he thought. \"That's okay Cheyne, I think we should just call it a night. I'll message you when I'm next in Ganymede.\"\n\n\"Cool, yeah! No problem then. Catch you later, Carson!\" I was already wearing everything I had brought with me so I quickly headed to the back door from the bridge, leading down to the airlock. I turned and gave a small wave and smile as the door slid closed behind me. Carson waved back, he still had a somewhat conflicted look on his face. I genuinely hoped I hadn't scared off one of my regulars with talk of wanting to stick around. I actually didn't mind spending my evenings with him, I shouldn't be so careless.\n\nI passed through the airlock connecting Carson's ship with the dock. I left the small freighter behind and entered the narrow corridor leading back through the expanse of freight bays. It was fairly late by this time so there weren't too many folks working the docks. Of course time is still a relative thing in space when you aren't orbiting a star whose light dictates the hours of your day. Because folks still need to have normal day and night schedules and relative quiet while they are asleep, we follow a simple Earth time schedule. Immense lights in the yawning domed roof of the station slowly come to life every morning, stay on over the course of the day and fade away each night. Ganymede station is a good size and sees a high amount of goods imported and exported through the spaceport docks. It serves to be a meeting point between many well-trafficked deep space shipping lanes. It's large enough that it's home to over a couple thousand people, the vast majority being human but there are maybe a couple hundred scabarethen living here as well, including me. We are in a constant state of rotation which, combined with enormous generators under our feet helps to create the artificial gravity we all take for granted. Behind the thriving shipping businesses are much seedier hotels, brothels and gambling rings. It's cramped, cold, and reeks of too many people and too much industry crammed into the same space. I would hate it here, but I don't know anywhere else, so I have no basis for comparison. Maybe every place in the galaxy sucks just as much. \n\nI left the docks behind and headed out into the system promenade, an extensive metallic road that extended all the way around and through Ganymede. Old and mostly faded display panels let visitors know street names and locations. Naturally the businesses that thrived in this place could afford newer screens that actually functioned properly. For reasons I can't quite explain, I liked the sound of the buzz from too many lights and neon billboards crowded along Ganymede's mainstreet. They made this place almost feel alive, the sound, the thrum of energy through wires and circuits, interconnecting the whole station. I headed through some back alleys where the street lighting began to flicker and fade. Fewer signs here, it was getting into the low rent apartment districts where the majority of the population lived. There was grease and probably some sewage on the streets where pipes had become blocked and begun to seep out, but the maintenance team didn't put too much priority on coming down this way. Hotels, casinos, nice restaurants and brothels were what made sure Ganymede stayed alive out here. These were what were maintained and kept shiny to attract any wayward miners or freighter pilots who happened through.\n\nIt wasn't a bad walk back to my apartment building, from the docks it was only about twenty minutes. My apartment was right in the middle of the scummiest parts of Ganymede. There was little point in being upset about the fact, I couldn't afford any better. The three story grey building was all but falling down. 'Andromeda Arms Apartments' was written in large blue letters over the doors, which looked like they had lit up at some point a long time ago. I opened the front door, and entered the small lobby where I was met by harsh, flickering lights. A glint of shiny plastic on the floor caught my eye and I found a small keycard on the dirty brown carpeting. I picked it up and turned it over in my hand, it looked like it could be another tenant's room key, and if it was, it was to a third floor apartment. It occurred to me that It might be worth poking around, maybe there was cash to be made. It was unlikely though, anyone who lived in this cesspit wouldn't have credits lying around, let alone any money in the first place.\n\nThe elevator hadn't worked since I had lived here for the past twenty some years so I took the stairs to the third floor. As I stepped out into the long, carpeted hallway it instantly became apparent which room the keycard unlocked. Just like the other two floors, this one had only a single straight corridor lined with ten rooms on either side. All the way near the opposite end of the hallway was a crumpled heap of body on the floor, sprawled in front of one of the doors. I approached the fallen person with some trepidation. They might be injured, they could be on some chemical, making them unpredictable, hell, they could be dead.\n\nI reached the far end of the passage and stood over the body on the carpet. Not dead, sleeping it looked like, or more aptly, passed out cold. I tried the keycard in the door and I heard it click as it unlocked. I pushed it open and peered into the inky darkness beyond. Near my feet the unconscious man stirred and made a snort. He rolled onto his back and I got a look at his face. He was human, and I actually recognized him. I had seen him around the building occasionally. He had on faded jeans and a big jacket that looked military or maybe police-issued. There was a heavy eyepatch over his right eye and a thick black moustache that almost looked too big for his face. I guessed he had dropped his keycard earlier and when he hadn't been able to get into his room, just resolved to sleep in the hall. He was the local marshall for the station, and from the smell of his breath, beyond intoxicated. I decided that robbing him might not be in my best interests after all.\n\n\"You awake, marshall?\" I asked as I poked at him with my boot.\n\nHe grunted and rolled onto his side.\n\nI don't know why, maybe it was some neighborly obligation or something, likely it was just me wanting to put a marshall in my debt, but I determined I would get him into his room. I knelt down and got my hands under his armpits. I lifted with exertion, the man was big, heavy, and nothing but dead weight at the moment.\n\n\"Come on, marshall, help me out.\" I said with a labored breath as I hoisted the man.\n\nHe came awake from the movement and staggered to his feet with my help. He whirled around suddenly, his good eye open and shoved me bodily against the far wall.\n\n\"Take your hands off me, scab!\" He drawled as he fixed me with an angry bloodshot stare.\n\nScab is a very derogatory name for my people, one of many that humans have devised over the years.\n\n\"Yeah? Fuck you too.\" I spat angrily. \"I was just trying to help you into your apartment you worthless drunk.\" \n\nI pushed away from the wall and produced his keycard from my pocket. \n\nThe marshall looked at me in surprise. I tossed him his key which he fumbled and dropped to the floor. Through a bleary eye he tried to focus on me.\n\n\"Go to bed, stop sleeping in the hallway.\" I said irritably as I turned and left.\n\nBehind me the drunken man stooped to grab his key then shuffled into his room, shutting the door behind him. \n\nI headed to my apartment on the second floor, unlocked the door and pushed my way inside. I was still annoyed over the exchange upstairs. I had actually tried to do the right thing and instead gotten hit, sworn at and made to feel like a fool. It was small wonder that nobody ever helped each other out in this place, there was nothing to be gained by doing so. I went to the cramped washroom and flipped on the switch, dimly illuminating the area. I started the shower running, it usually took several minutes to get hot water. I stripped all of my clothes off and piled them at the counter's edge next to the small sink. \n\nI looked myself over in the cracked mirror. I took good care of myself, it was important in my line of work. I brushed some dark hair out of my face. I appeared tired around the eyes, though most humans couldn't recognize what that looked like. We have large, wide eyes that are mostly black except for the large irises which range from pale yellow to crimson red. They will actually change color depending on our mood. Currently mine were brownish-orange, indicating stress and fatigue. \n\nSteam began to drift from the tiny shower stall so I stepped inside. Water is normally a luxurious commodity in deep space but Ganymede was a good size and central enough to an asteroid belt nearby that was full of water ice. Freighters stocked with mining equipment would break up and haul the ice in where it was stored in enormous tanks in Ganymede's belly, broken up further, melted down, chemically treated, and pumped in liquid form throughout the station. Water recycling was just as important, nearly every drop of water that found its way down the drains from my apartment would be treated and reused elsewhere. Stations such as this had to be efficient to keep spacer societies running in the distant reaches of space where water, oxygen and building materials could be scarce. \n\nThere was a thin bar of soap on a ledge in the corner of the tight stall so I began to lather up my deep purple body. Oh right, scabarethen are purple, head to toe, varying shades. We have short claws at the tips of five fingers, a long, slender, prehensile tail and high, rounded ears reaching up over our heads. I grabbed the sponge hanging underneath the showerhead and thoroughly began to scrub my body. Despite knowing Carson, and being with him dozens of times, I still felt the need to clean myself after every encounter I had, with him or any man. \n\nIt wasn't a proud profession I had joined, but it was something I knew, and performed well. Most members of my race wouldn't lower themselves to selling their bodies which left me with an opportunity. Horny freighter pilots were rarely in short supply and many of them got paid on arrival here and needed to spend some of that money burning a hole in their pocket. I was lean, strong, relatively young and of course exotic so I did alright for myself. I still tried to get work where I could around the station but nothing I found paid nearly as well or consistently. I had grown up around humans even more than my own people and had developed an attraction to them early on, especially the big, burly men I saw everyday around Ganymede.\n\nThe water never stayed hot for long so I shut it off and stepped out as soon as I felt the first telltale change in temperature. I wrapped my body in a scratchy towel and started to briskly dry myself. I headed to the wall display between the kitchen and bedroom and adjusted the apartment temperature. As I have said, we need more heat than humans, which naturally leads to higher heating costs so I make sure to only turn it up while I am at home. I moved into my small bedroom and climbed into the bed. There's one window in the room but it faces the apartment building immediately next door so I just keep it hidden under a dark blanket. \n\nI was tired, but have never been able to sleep easily. I pulled a sketchbook and pencil from the shelving alcove behind the head of the bed. Sometimes I would just draw when there was nothing else worth doing. It was a decent distraction I discovered over the years. I had heard stories, seen movies and shows about forests and oceans and deserts. Each was beautiful in drastically different ways. \n\nI reached my hand to the wall and caused a low light to fill the room. My smartscreen had a mode where I could draw on its surface, but for whatever reason I loved the feel of the paper and pencil, made the work more real to me. I flipped the book open to a picture of a tree standing in a field I had been working on from the night before. It wasn't anything special and I don't claim to be much of an artist, but while I sketched in a new branch and leaves, I imagined what it might sound like with wind causing the trunk to sway. I wondered what it would smell like after a rain. I thought about what that rain would feel like on my skin. I started to add raindrops into the picture.\n\nEventually my eyelids began to droop and my head bobbed with exhaustion. I closed the sketchbook gently and tucked it back onto its recessed shelf. I touched the panel beside the bed again to turn off the lights in the apartment until I was surrounded by comforting dark. I allowed myself a yawn as I pulled thick covers up over my body. I curled up into a ball with my tail wrapping around my ankles. I tried not to think about what tomorrow might bring and instead thought about the view from the bridge of the Comet Chaser. There were countless worlds out there, seas, and storms, black holes and solar flares. Somewhere out in the vastness of space was my homeworld that I had never seen.",
        "CHAPTER 2.\n\nI woke up chilly the next morning, even under the blankets. I blinked wide awake and sprang out of bed. I tapped the screen on the wall in the kitchen area, it didn't respond. I quickly pulled on my heated jacket first and clothed myself second. I was shivering but started to warm up quickly with the coat's help. I let out a sigh of relief, quickly followed by a wave of anger. I pulled on my boots and dashed into the hallway. I briskly strode downstairs and over to the first door in the hallway. I bashed on the metal door. I continued to hammer on it until a tall older man answered, wearing a bathrobe and a severe frown. \n\n\"What the hell, you know what time it is?\" He snarled.\n\n\"Yes Ford, I know what time it is. It's about two hours after you shut off my power!\" I shouted.\n\nThe thin man folded his arms in front of him. \"You're fifteen days late on rent. I figured you might actually stop by to pay it if you lost your electricity.\" He said indifferently.\n\n\"Except when you turn off my power, you also shut off my heat! You could have fucking killed me!\" I yelled.\n\nHe gave me a blank expression. \"You sure seem healthy to me, and loud. You want heat? Pay your damn rent or find somewhere else to live.\"\n\nI whipped my smartscreen out and waved it in his face. \"Fine, lucky I just got paid.\"\n\nFord's eyes actually lit up at the prospect of making a little money. \"About damn time.\" He grumbled, reaching for his own screen.\n\n\"Maybe use some of my rent money to fix my shower? The water pressure is for shit and it takes forever to heat up.\" I said hotly.\n\n\"No promises, next time a plumber stops through I'll have him take a look.\" He said with disinterest.\n\nThis was the way the man told his tenants that it was never going to happen and don't hold your breath. \n\n\"We good? You'll turn my power back on?\" I asked after a few moments.\n\n\"Yup. Turned on within a few hours.\" Ford said as he backed into his room, closing the door in my face.\n\nI wanted to get out of there so I decided to skip breakfast and check out main street.\n\nMain street or, what passed for Ganymede's downtown was a stretch of a few blocks just behind the spaceport and freight docks. I had traveled briefly through the night before but today I was going to do a little trawling for marks, maybe see if anyone had any more legitimate job offers. There wasn't such a thing as a normal or relaxed day for me, I was always on the clock. \n\nPerhaps I should explain how I got to this point, though it's not a terribly interesting or uncommon tale. I never knew my mom, I don't even have an early memory of her I can reference in my mind. She left me with my father, a man named Cerasbek, when I was a baby and he was a freighter pilot. Ganymede was where he could afford to live and also raise me on a space trucker's salary. There aren't any schools here so he taught me how to read and write, some math and not much else. He was a hard worker, never very affectionate with me and also a pretty heavy drinker. He never hit me or anything but I wouldn't have nominated him for father of the year. Dad slept in the bedroom and I slept on the couch. He had women over sometimes and he would make me listen to movies in the common room loudly to mask the sounds they made. It never quite worked and at that age I would feel uncomfortable, but also aroused. When I was a few years older, I fooled around for the first time with a guy in my dad's room while he was on a weeklong haul. Well, it turned out the haul had been cut short and my father came home a day early. He caught me with my mouth on another man's prick. \n\n\"D-Dad!\" I cried in alarm.\n\nHis face was surprised, at first, but it quickly changed into something else I didn't recognize. I learned shortly after it was disgust. He ordered me over to a neighbor's place the following day, and when I arrived home later for dinner, he was gone. He had taken his clothes, personal belongings and freighter but left me some money which helped me pay rent for a few months. I was devastated. I was able to take over my father's lease on this crappy apartment because I lied, convinced the landlord that I was old enough and that my dad had left and wasn't coming back. Ganymede has never been a hospitable place for kids, but it was harder without anyone to look out for, or take care of me. Jobs were scarce, they still are, and I had no skills to brag about. I had wanted to be a pilot like my dad, like many of the folks throughout the station, but I was a minor, had no credit, no parent or guardian to vouch for me or way to pay for pilot's school. There wasn't even a pilot's school on the station. \n\nI learned sometime later that I had developed a fit young body and certain men would look me over, more so when I dressed in tight-fitting clothes and flirted with them. By the time I was halfway through my eighteenth year I was a whore. \n\nAnd that's my story up to this point, I'm not trying to garner sympathy. It's a shit life but that's how it goes.\n\nI walked along main street to the Rose Thorn, one of the largest brothels and stepped inside. A wide, circular bar room spread out before me. There were round tables, a small stage to one side and two long bars at the back of the room. It was nearly empty at this time of day except for a handful of locals and some ladies trying to get work. A few girls lingered near the front of the establishment but frowned when they saw me.\n\n\"Looking for Tetha?\" Asked one of them with a bored expression.\n\n\"Yeah, is she around?\" I asked.\n\n\"I'll tell her. You can follow me.\" She said.\n\nShe led me through a narrow hallway to a door with red leather embossment. I had been here many times before, Tetha's office and occasional dungeon. The girl who had guided me back knocked on the metal frame of the door.\n\n\"Tetha? Cheyne is here.\" She said.\n\nAfter a moment I heard. \"You can show him in.\"\n\nthe girl opened the door to let me inside and closed it once I entered. Tetha was standing near her long, black wooden desk. Such an extravagant item would be expensive to get here, but I knew she had deep pockets. She wore dark red lingerie, high heeled boots and held a small tight cord wrapped in her hand. She was a fair bit older than me but kept herself in outstanding physical shape. The purple tone of her skin was nearly the color of night. She was often in high demand by men and some women, though not many could afford her services. Next to the desk, strapped to a metal ring hanging from the ceiling was her current customer. He appeared to be in his late thirties, hairy and slightly overweight. He wore only a leather mask over his eyes and red marks covered much of his exposed flesh. \n\nTetha's tail switched behind her, indicating her impatience. \"Well Cheynex? What is it?\"\n\n\"I can wait outside, I didn't know you were with anyone.\" I said.\n\n\"Don't be absurd, and anyway, he seems to like that I have company, it embarrasses him, it excites him.\" She flicked the man's round rump with the short whip. He cried out and I watched as his cock stiffened noticeably with the blow.\n\n\"See?\" Tetha asked as she made her point. \"Now what did you come by for? You here to pay what you owe?\"\n\nI frowned. \"Tetha I don't owe you any money. I just came by to see if you knew of any odd jobs around the station or knew of any pilots who might be interested in me.\"\n\nTetha was a shrewd businesswoman but more than that, she had her finger on the pulse of Ganymede. She almost always knew information even before the dockmasters. If a freight pilot stopped by her establishment, she often knew his kink even before he did. \n\nShe pushed the leather cord into my hands. \"You whip him for awhile, I need a drink.\" \n\nThe man trembled in anticipation. \"Please hit me, sir.\" He pleaded quietly.\n\nThis wasn't something that interested me much. I had no issues with folks who enjoyed bondage play but I liked my sex more intimate than this. Something about being whipped in a dark office while blindfolded by someone who just happened by, struck me as almost comically impersonal. Perhaps that was the idea. Still, I knew if I wanted any useful information from the brothel owner I would have to heed her request.\n\nI snapped the whip lightly against the man's thigh, forcing another moan from him. I walked behind him and lashed him across the rear. \n\n\"Honey, he's not even going to feel that. Give him his money's worth.\" Tetha instructed as she poured herself a glass of whiskey.\n\nI grimaced. I didn't like inflicting pain on others, even when they were into the sensations. \n\nThe whip slashed out again around the side of his hairy gut and left a long red welt. \n\n\"Ow! Oh, oh, fuck.\" The man writhed in his restraints and precum dripped from his dick.\n\n\"I-I don't want to continue.\" I said uncomfortably.\n\nTetha looked at me carefully as if sizing me up. \"You're too sweet for this life, Cheynex. I've told you before. So pretty though, I could line a man up for you every night if you were here.\" \n\nShe walked over and took the whip from my hand. She cracked it in a flash in front of my face, causing one of the man's breasts to start trickling blood.\n\n\"Fuck! Ouch! Hey, not that rough!\" He cried out in a frightened tone.\n\n\"Sorry, baby, I'll ease up.\" She said soothingly while staring me in the eyes. Tetha's irises were almost entirely red, nearly malevolent.\n\n\"I don't know of any work for you.\" She said presently. \"And I don't think I'll know of any more work for you in the future.\" She took a sip of her drink as she walked around the man, eyeing him like he was her prey.\n\n\"What? Why not?\" I exclaimed. \"I always send any men who aren't interested in what I have to offer to you! Fair is fair!\"\n\n\"That used to be true, but I feel like some of those men would have come here already but get sucked in by your little seductions somewhere along the way. You get paid, but where does that leave me?\" She reached out and twisted one of the slave's nipples violently. He whimpered in response.\n\n\"I'm one guy! I can't possibly be drawing much business away, if any and besides, we're both scabarethen, we need to stick together. There's not that many of us on Ganymede.\" I said, feeling like I was making compelling points.\n\n\"I've let you have your little side venture, Cheynex, because your father was something of a friend, but it's starting to become mildly annoying.\" She reached down and squeezed the large man's testicles hard in her hand while he grunted and gasped for breath. She continued. \"Your options at this point are to work for me here, or start paying me a percentage of what you're pulling in.\"\n\n\"I can barely afford my rent, Tetha. Please be reasonable.\" I begged. \n\nThe thought of working here made me uneasy. There was a darker side to this place and I couldn't stand the thought of being owned by someone. It might seem like she was just offering me a job but I knew from girls and young men who had worked here in the past that Tetha could be ruthless. I determined that keeping my distance, as well as I could, was still my best course of action. I moved toward the door.\n\n\"I'm sorry to waste your time.\" I said.\n\n\"I'm sorry you wasted my time.\" She echoed. \"I'd like your decision by the end of the week. Pay me, or work for me. No more free enterprise in my station. Consider this a warning.\" She said sternly. \n\nShe turned halfway back to the bruised man and I watched while she rained a small trail of blows down his front, ending just above his genitals. He groaned and wailed but his maleness still bobbed excitedly with each lash.\n\nI pushed the door open partway.\n\n\"It's not your station, Tetha. I'm just trying to make a living, and I'm not trying to be an obstacle for you.\" I stated firmly.\n\nWhen she said nothing in response, I left the room and headed back down the dark hallway to the large front room.\n\nI felt bothered by the conversation with Tetha. She had looked the other way for the last several years while I slept with some of the freighter pilots who came through this way. I knew she had been a friend to my father, he had told me once before, though I was ignorant as to the full nature of their relationship. When I had first gone to see her years ago she had recognized me instantly and been kind to me. She helped me pay my rent and afford food for awhile after my initial savings my dad left ran dry. She had explained that she owed my father and helping me out would make them square. She had asked me early on to start working for her and when I told her I wanted to do my own thing she had seemed mostly understanding. Perhaps the unspoken agreement was that I would eventually accept her offer. Despite her beauty, and knowledge, she had always made me nervous. Even with my limited experience of such things, I knew you didn't become the head of the most profitable brothel on Ganymede through business savvy alone. Now it sounded like I was given an ultimatum and I honestly wasn't sure what the outcome would be if I didn't follow her wishes. Maybe I could afford to give her a small cut, though that meant doubling my efforts to take men to bed which made my stomach knot. Though I enjoyed sex, I wished it could be on my terms, and not those dictated by their credits.\n\nI was still focused on the previous conversation so I didn't notice the fellow standing near the bar as I weaved through tables toward the exit doors. \n\n\"Hey!\" I heard a man's voice call.\n\nI stopped and turned, it wasn't a voice I knew. \"Yes?\" I asked warily.\n\nOnce I faced him and peered through the low lighting I could see it was my neighbor, the one-eyed marshall from upstairs. \n\n\"Come over here, let me buy you a drink.\" He said. \n\nHe didn't seem entirely unfriendly, although he wasn't especially pleasant.\n\nI sighed. \"If you want to buy me a drink, it can't be in here.\" I scanned the room quickly. I didn't want to be seen luring any potential customers out either.\n\nThe man made some motions on his smartscreen, presumably paying for his drinks, and then walked over to join me. \n\nHe was a big fellow, and now that he wasn't half doubled over from drink, I could see he was tall and powerfully built. He had a round belly, likely from years of drinking, and a wide frame. He looked like he might be wearing the same clothes from the day before, jeans, a thick jacket and trucker's hat. The hat displayed a marshall's star on the front, underneath was short black hair. There was a long thin red scar that bisected much of his face, starting above his eyebrow and traveling under the eyepatch and across his cheek toward his jaw. It was ugly, but rugged too I supposed. I had done worse, admittedly not by much. I could at least see what he wanted.\n\n\"Uh, Jim's Place?\" He asked.\n\nIt was a pretty shady dive bar relatively close to our apartment building, I surmised that he knew it well.\n\n\"That's fine, let's go.\" I nodded.\n\nAs we left and stepped into the brilliant unnatural lights of downtown, my mood brightened a bit and I tried to be a little sweeter. I wasn't going to land a guy if I was being short with him. It did occur to me that it might be a bad idea to mess around so close to home, and with a lawman, but again, it could be a one-time thing and I wasn't about to turn down a potential meal ticket.\n\n\"So what were you thinking about?\" I asked.\n\n\"Huh?\" He gave a puzzled look.\n\n\"With me. You said you wanted to buy me a drink?\" I asked innocently.\n\n\"Oh, well yeah. I kinda wanted to apologize for last night.\"\n\n\"Well that's sweet of you, I like that.\" I smiled. \n\nHe frowned. \"I was pretty damn drunk, I don't know if I did anything to you.\"\n\n\"Did like what? You don't remember?\" I asked guardedly.\n\n\"I remember a scabarethen face, must be yours, you're the only one in the building. I think you let me into my place last night?\" He reasoned.\n\nI realized he might not actually be looking for a date. \"Yeah, you dropped your keycard, I found it and got you into your apartment. You... shoved me and called me a scab.\" I said with a trace of resentment in my voice.\n\nThe marshall grimaced and gave me an apologetic look. \"I was so drunk, damn, I'm sorry. I don't normally say stuff like that, I'm not prejudiced or anything.\" \n\n\"Well, it felt shitty, I was trying to be a good neighbor.\" I said, looking away from him. \n\nHe surprised me by grabbing my arm lightly and turning me to face him.\n\n\"Hey, I am sorry. I'm trying to keep folks safe around here, so I want to make it up to you.\" He said seriously.\n\nI saw an opening and perhaps instinct won out over better judgment. Maybe I just misread the signals. I grabbed him by the jacket and pulled his moustached face close to mine. \n\n\"If you really want to make it up to me, take me to your place and make me feel good.\" I punctuated the last word as I cupped and rubbed the front of his jeans.\n\nHis eye grew wide with shock and he stepped back.\n\n\"Whoa, kid. That is not what I was getting at.\" He said with a slow shake of his head.\n\nI felt hot with embarrassment and annoyance followed a moment later. \"Well what then? You want to buy a man a drink, in a brothel I might add, but don't want to fuck him?\"\n\nThe marshall's face reddened.\n\n\"I wanted to apologize and show you there weren't any hard feelings! Don't be an asshole about it.\" He growled.\n\nI scoffed. \"I'm not being an asshole, dude. Apologies don't pay the fucking bills, you know?\" I said indignantly.\n\n\"Nevermind, I was, it doesn't matter. Have a nice life. Try not to get killed by the next guy whose cock you grab.\" He grumbled as he walked past me.\n\n\"Great advice!\" I called after him. \"Try not to drown in the next bottle you crawl into!\"\n\nI watched him move away until he disappeared down the next street. The rage in me began to subside and I thought about our exchange. He had apologized for last night and wanted to make it up to me, the kind of things that friends might do for each other, or at least, decent people. I didn't really have friends in this place, just an endless string of men with faces that blended together over time. I was always on the defensive, always on my own so when someone was nice to me I threw it back in their face. I felt like such a piece of garbage. Maybe I could still smooth this over later, I did know where he lived after all.\n\nI spent the rest of my day and evening near the spaceport and surrounding restaurants. I got a few nods and a couple wide grins but couldn't seal any deals. It was disappointing, but such was the nature of my profession. I checked my smartscreen again in case any of my regulars had tried to contact me with no luck. \n\nDinner was instant food patties from the corner liquor store as I headed home. The food was cheap and easy to prepare, just requiring some water and you could heat it up if you wanted. It tasted, well, mostly awful, but I mentioned it was cheap right? \n\nAs I climbed the stairs to the second floor, I considered going one floor further and knocking on the marshall's door. He was probably passed out drunk by this time of night and I didn't really want to deal with that. I wasn't feeling much like apologizing either. I headed for my own apartment instead.\n\nI unlocked the front door and moved inside, closing and locking the door behind me. I could see my breath in the air and feel the cold in my ears and tail. I went to the wall panel and checked it, no power, still. \"Sunnuvabitch!\" I swore between clenched teeth. Ford still hadn't gotten my power turned back on, an entire afternoon and evening later. I would have to sleep in my self-warming coat and pull a heated blanket out of the closet for the bed.\n\nThe patties couldn't be heated in my small oven, but with some water they would still be edible. The tap water was supposedly safe to consume, due to heat and chemical treatments but it tasted funny. I did my best not to think about what I imagined to be swimming around in there. Out of habit I tried to turn on the large paneled screen in the common room next to the sofa. No power, that's right, I thought with a frown. I curled up on the small couch in the dark and decided to watch some programs on my smartscreen. I sat my dinner on the low table in the center of the room and flicked through channels. There was a news program about a severe sandstorm on a faraway planet called Mars. With a swipe I made the screen enlarge and pulled it into three dimensions before setting it on the arm of the couch next to where I sat. I think I remembered that Mars was in the same solar system as Earth, the human homeworld. Mars had been colonized second, after Earth's moon, before they moved beyond their own star system and began to settle the cosmos. It was a very similar origin story for my people as well. Perhaps it was those similarities that made us able to coexist. It might have been those same similarities that had caused us to war against one another years before. The human-scabarethen wars had raged for decades but eventually an accord was reached and knowledge began to be exchanged between the two races. This was all long before my time, even before my father's. Some members of both species still harbored hatred, but it was less frequent than one might expect. Life in space is hard enough without having to hold grudges from previous generations.",
        "I watched another show or two before my body became weary and let me know it was time for sleep. This was the time of night when I enjoyed a hot shower before falling toasty and warm into bed, unfortunately the water heater was electric and as lifeless as every other modern convenience in this dump. I pulled a blanket from the tiny closet just inside the bedroom and tossed it over the mattress. I climbed under the covers to my waist and pulled the sketchbook out, setting it in my lap. I set my smartscreen into light mode and set it on the window ledge beside me. Drawing a sandstorm seemed daunting, but it had been oddly beautiful, and I wanted to capture its power if I could. What did sand feel like as it whirled through the air? It proved difficult to capture the essence of the storm and I don't think I succeeded. Still, even with the failed attempt I let my imagination take me to the distant red planet, steeped with orange sand and drifting dunes. It must be warm there, it was so red and sandy, like a giant beach. I laid back and was carried into sleep. I want to say I dreamed about a wide, flat beach, crashing surf and hot sun beating down overhead. Instead I dreamt about being forced to beat someone with a whip in a lonely cold apartment.\n\nCHAPTER 3.\n\nThe next week felt long and was mostly uneventful. I was able to meet a guy just outside the spaceport who was traveling through Ganymede on business. He was anxious and kept letting me know he never did things like this, so I did my best to make him feel comfortable. Half an hour later in a nearby hotel he was shaking and grunting as he shot his load across my ass, buckling his belt and transferring money to my account before quickly leaving. It was nothing close to a good time for me, still, it didn't take up too much of my evening and he hadn't wanted to try anything that made me nervous.\n\nOutside of this not much happened in my little world. I didn't bother speaking with the marshall upstairs, and he didn't seek me out again. My power had finally been restored on the third day of having no heat, and by extension no shower. Believe me I was grateful for that hot shower when the lights at last flickered to life. Even the instant food cakes were more palatable when heated, though not by much.\n\nIt was early one morning a couple days later when there came an insistent knocking at my front door. The banging woke me and I sat up in bed, rubbing my eyes. The knocking came again. I pulled on a pair of underwear and my heated jacket. A few moments later the pounding rattled my front door yet again.\n\n\"Oh my god, I'll be right there!\" I yelled, annoyed.\n\nI reached the door and peeked through the small peephole. Two human men stood outside, one of them large and thickly-built, the other tall and mostly average in appearance. The bigger man carried a heavy duffel bag. \n\n\"What do you want?\" I asked as I pressed a small intercom button on the wall.\n\n\"Maintenance.\" Said the heavier fellow.\n\n\"You're not wearing maintenance uniforms.\" I said warily.\n\n\"Yeah, we weren't supposed to be on duty today.\" Said the tall man. \"But we got the call, so here we are.\"\n\n\"This is about the plumbing?\" I asked hopefully.\n\nThe taller of the two men nodded. \"Yes, here to fix the plumbing.\"\n\nI unlocked the door and started to pull it open. \"I honestly never expected you guys to--\" \n\nMy words became cut off as the door was violently kicked inward, knocking me backward into my apartment and onto the floor. I looked up suddenly as the two men pushed their way inside and closed the door behind them. My heart raced and I struggled to understand what was happening. The intruders watched me carefully as the bigger man knelt down and opened his duffel bag. He produced a long knife and handed it to the tall man, he then pulled out a length of metal pipe.\n\n\"Wh-what the fuck is this?\" I stammered in fear.\n\n\"Should have taken the lady up on her offer.\" The taller man said.\n\nMy skin suddenly felt cold despite the heat of the apartment. A lump formed in my throat. \"She sent you to kill me?\" I managed to ask. I was in a state of shock.\n\n\"She's not a monster, we just need to make sure you're not much to look at when we're done.\" Replied the larger man. I noticed his hand for the first time under his long sleeve where he held the length of pipe. His flesh was metal, or rather the hand, and maybe the whole arm had been replaced with a flexible prosthetic. He was an augment, and the strength in that arm was likely ten times that of a normal person or more.\n\nMy heart was nearly beating through my chest. These men were here to cut me up and beat me, and I had let them inside my home.\n\n\"T-tell her I'll stop! I'll take the job, whatever she wants!\" I cried out as I slowly got to my feet and backed into the small living room.\n\n\"Sorry, it's too late for that kind of talk, that's why we're here.\" The tall man said as he traced his finger along the knife's edge.\n\nI had moved around the low table in front of my sofa and now had it between the assailants and myself. I didn't know where else to go, there was only one exit from the apartment and I had no weapons. My physical stature has me a little over five and a half feet and I don't have too much in the way of muscle. My options for escape were severely limited.\n\n\"Take him.\" Said the taller man calmly.\n\nThe big guy suddenly advanced toward me, holding the pipe out to one side. If he got a clean hit on me I knew it would shatter a limb or crack my ribs. He came around the side of the table between the bedroom and myself and swung with the heavy club. I hopped onto the couch behind me as the metal cudgel smashed into the flimsy table, breaking it into pieces and splintering one of the legs. He didn't hesitate long and clambered onto the small couch next to me and took another arcing swipe at me with the weapon. I dived through the air towards the kitchen as I heard the large screen on the common room wall explode into a shower of glass fragments and white sparks. The big man cursed.\n\nI rolled to my feet and quickly grabbed a knife of my own from a drawer nearby. I brandished it before me as the two men regarded me from the opposite side of the counter.\n\nThe tall man sighed. \"If you try to hurt us with that it will be much worse for you, believe me.\"\n\nHis icily calm demeanor was unsettling, but I had to stay focused. I grabbed a heavy glass bowl from the cupboard next to me and threw it hard at the tall man, who was closer. He ducked and backed away as it smashed into the wall near his head. While the men were momentarily distracted I dropped the knife and scrambled over the countertop in front of me and sprang toward the front door.\n\n\"Shit!\" Griped the big man. \n\nThey both lurched forward even as I was tugging the door open. I noticed they hadn't locked it when they came in and was lucky to reach it without getting caught by them. The large augmented man was almost on top of me as I was racing through the doorway into the hall. His club came down, denting the floor with a loud crunching sound. I flicked my tail up as I entered the corridor outside my apartment, lashing my attacker across the face. It should stop him dead in his tracks, the force of my whipping tail, but it didn't. He stumbled only for a moment as I tried to pull the door closed behind me. \n\n\"Someone help me!!\" I screamed desperately to no one.\n\nHe had switched the pipe into his other hand by this time and grabbed the door by its edge in his powerful metal fist. With a deafening squeal he literally tore the heavy door off its hinges and bent it back into the apartment. The sound was so loud in my sensitive ears that I felt briefly stunned and had to cover my them with my hands as I stumbled to my knees. A second later I knew the two men would reach me and after the escape attempt, maybe kill me out of anger. I forced myself to my feet and sprang forward again, I looked back over my shoulder just in time to see them both in the hallway, sprinting after me. When I had nearly reached the end of the passage I looked up just in time to see my upstairs neighbor, the marshall, who had stepped out of the stairwell. I pulled up sharply to avoid bowling into him. He reached out and forced me to the floor by the shoulder. \n\n\"Get down, kid!\" He shouted.\n\nI had no choice, he was strong, and I stayed down as he had ordered. I looked up to see him bring his sidearm out from a holster at his side and steady it, just for a second, before he let off a shot. A blue pulse of energy erupted from the weapon as he fired down the hall. I swiveled my head in time to see the large man take the shot in his thigh and crash to the floor with a loud cry. Behind him the tall man stopped in his tracks and raised his hands over his head.\n\n\"Drop the knife!\" The marshall roared authoritatively.\n\nThe man complied, and the long knife bounced once as it hit the shallow brown carpet of the building.\n\n\"Don't either of you fucking move or you're dead!\" The marshall said sharply as he pulled out his personal screen. He kept his weapon trained on my attackers as he spoke into the device. \"Two armed men, shots fired, one appears to be augmented.\" He looked down at me. \"You okay? Did they hurt you?\"\n\n\"N-no, I'm, I'm fine.\" I was still shaking from the ordeal but also the adrenaline that was now pumping through my system.\n\nHe continued speaking into his device. \"Victim appears unhurt, but shaken. Send a mobile cell unit to Andromeda Arms Apartments.\" He finished.\n\n\"Hey, you're alright, but I'm gonna need a statement from you.\" He said.\n\nI nodded my comprehension. \n\n\"I'm taking these guys in once my backup gets here with the cell.\" He informed me.\n\n\"O-okay.\" I was still trembling. As I looked back down the hallway the tall man was staring right at me. \"I don't want to stay here, I want to go, please.\" I told the marshall.\n\n\"You can't just go, kid. I need to know what happened here.\" The marshall said.\n\n\"I know but... please...\" I gave him a pleading look. \n\nHe put the device back in his jacket pocket and pulled out his keycard. \"You remember which room is mine upstairs?\"\n\n\"Yeah, all the way at the end.\" I said.\n\n\"You can wait for me there, it's safe. Don't touch anything.\" He gave me a stern look.\n\n\"Sure, yeah.\" I said as I found my footing and stood. The marshall pressed the key into my palm and I shakily headed upstairs.\n\nI closed the door and locked it behind me as I entered the unfamiliar apartment. I shouldn't say unfamiliar, it was identical in layout to my own, just backward on account of being on the other side of the hallway. I didn't want to poke around, he had asked me not to, so I sat on the couch in the common room. I held my hands clasped tightly in my lap as I couldn't stop them from quivering. One end of the sofa was piled high with clothes, the other end had a pillow and a tangle of blankets. I was still trembling and my mind raced with frantic thoughts. I couldn't sit still just yet so I got up and began pacing in a tight circle. I started to look around the place, to distract myself. The kitchen was messy and cluttered. I saw a mostly empty bag of the same brand of instant food patties I often ate. There were empty alcohol bottles strewn over nearly the entire counter with more on the floor. There was an old recliner next to the couch and a big table nearby holding more empty bottles with a couple of chairs. I peaked into the bathroom, same as mine, though the mirror wasn't cracked. There were pill bottles over the small counter here as well as a razor and other washroom necessities. I briefly looked myself over in the mirror. I ran a hand through my shoulder-length dark purple hair. I was immediately reminded that I was still just wearing a pair of underwear and my jacket. Lastly I poked my head into the small bedroom. I was even aware that this was a big breach of privacy but I just wanted to focus on something else while I waited. The bed was unmade, clothes tossed on the floor and over a small chair wedged into a corner. There were more empty liquor bottles lining the window ledge. This window was actually uncovered as it had a decent view of the street outside. \n\nThe small shelf behind his bed had three picture frames. I leaned over to peer more closely at them. One showed a small boy with a large moustached man. At first I thought the older man was the marshall but there were subtle differences in the face, I determined it must be his father, and he the young child. The other two pictures were of women. One was a beautiful young human woman with yellow hair in a long dress, she was smiling. The last picture was a scabarethen woman, middle-aged sitting on a bench, looking slightly away. I didn't want to snoop further, and resigned myself to just sit on the couch and wait. My nerves had calmed for the most part by now.\n\nIt was about an hour before there was a knock at the door. I jumped, instantly reminded of the knock that had awoken me earlier this morning.\n\n\"You got my key, open up, kid.\" Came the marshall's muffled voice.\n\nI got up and opened the door, stepping aside to let the man into his home.\n\n\"What the hell did you get yourself into?\" He asked as he moved past me and directly into the kitchen.\n\n\"What did they tell you?\" I asked anxiously in return.\n\n\"Nothing. They were obviously paid well to keep their mouths shut.\" Responded the marshall as he found a bottle that still had liquid inside. He took a swig.\n\n\"Are... are they getting locked up?\" I asked nervously.\n\n\"Yeah, of course they are. Assault, breaking and entering, destruction of property, hell, maybe attempted murder. No proper jail on Ganymede so they're getting shipped off within a day or so. Penal colony maybe, in the belt.\" He said nonchalantly. \n\n\"Good.\" I stated flatly.\n\n\"I need you to tell me who those men were, kid. Actually, come to think of it, I need to know your name first.\" He added after some consideration.\n\n\"I'm Cheynex, son of Cerasbek. Everyone calls me Cheyne though.\" I offered.\n\nThe marshall walked back to me and stuck his rough hand out to me. \"Henry Deacon, everyone just calls me Deacon.\" \n\nI shook the man's hand. It was big and warm, kinda nice. \"Hi Deacon, thanks for earlier.\"\n\nHe shrugged. \"It's my job. It's lucky they made so much noise ripping your place apart, and then I heard you yell as I was on my way downstairs to check out the racket.\"\n\nI winced as I remembered. \"You saw my place? Is it really bad?\" I asked tentatively.\n\nHe frowned. \"Well, yeah, I mean the door isn't even on the hinges and the door frame is all screwed up. Your living room looks like it exploded, there's a big dent in the floor and it looks like there were power cables underneath that got damaged.\" He finished.\n\n\"Well that's fucking great.\" I responded. I had no idea how I would afford the repairs, I was positive that our landlord wouldn't help in the slightest.\n\n\"Yeah, it's pretty bad. Sorry kid.\" He took another drink. \"You want some?\" He offered.\n\n\"Actually, yeah. Hey, guess you got me that drink after all.\" I added.\n\nHe gave something of a laugh. \"Yup, although I'd say you owe me at this point.\"\n\n\"Guess so.\" I admitted.\n\n\"So who were these guys?\" He inquired as he poured me a small glass.\n\n\"Hired men. They said they weren't going to kill me, just... beat the shit out of me.\" I sighed.\n\nDeacon handed me the glass which I accepted gratefully.\n\n\"And why would they want to do that?\" He asked seriously.\n\n\"I uh, because of what I do, and who that might bother.\" I replied. I wasn't sure if I should tell him everything or not but, he seemed to be the only person on my side at the moment, and he was a lawman after all. There was a chance he wasn't corrupt. I didn't really have any choice, it was painfully clear I couldn't take care of myself.\n\n\"Because you're a prostitute?\" He asked pointedly.\n\nI blushed. \"Yeah.\"\n\n\"You owe someone money or something? Is it that woman who runs the Rose Thorn?\" He inquired further.\n\nI was visibly shocked. \"How do you know all that?\"\n\nHe shrugged again and scratched through his short black and grey hair. \"She would have the resources to hire men. I just saw you there what? A week ago? Give me some credit, I'm a station marshall, this is sort of what I do, figure things out.\"\n\n\"I don't actually owe her money, I do this on my own. She, Tetha, just thinks every man who comes here automatically owes her any credits he might spend.\" I shook my head in frustration. I took a drink from the glass Deacon had given me, hoping it would start to calm my nerves.\n\n\"I know the type.\" Said Deacon, taking another pull from his bottle. \"Well her boys are gone now and she'll realize that you went to the law. She should leave you alone.\"\n\n\"I hope so.\" I replied, though I honestly wasn't convinced.\n\n\"Is there anything else I should know?\" He asked with a tilt of his head.\n\n\"No, I don't think there's anything else to say.\" I said with a shrug.\n\nHe nodded absently and entered some information into his device.\n\n\"Okay, well, this was pretty open and shut then, so that's good. Less crap for me to fill out.\" Deacon said as he walked over to his chair and sat down heavily. The recliner groaned from the added weight.\n\n\"Thanks again, Deacon, and for the drink.\" I said as I set the mostly empty glass on the counter and headed toward the door.\n\n\"You got somewhere to go, Cheyne?\" The big fellow asked.\n\nI paused, I thought hard on his question. \"I... guess back to my apartment.\" I said uncertainly.\n\n\"Kid, there's no fucking door. Well, there is, but it's wedged halfway into your kitchen counter. Where else can you stay?\" He asked again. \"Hotel?\"\n\n\"I can't afford that. There's not really anywhere else for me to go.\" I said quietly, looking at the floor. In this whole isolated station I had no one to turn to, I was alone as I had always been since my father left.\n\nDeacon set his jaw, contemplating. After a few moments he said. \"I don't think you're a bad kid, Cheyne. Shit happens, especially out here. If you promise not to bother me or get underfoot, you can stay here for a little while, until your place gets fixed up.\"\n\nI gave the marshall a baffled look. \"Why? You don't need to do that. You don't, owe me anything.\"\n\nDeacon leaned forward in his chair and regarded me. \"Well, look. It shouldn't take too long to fix your door and whatnot, I'll talk with Ford tomorrow. You were decent to me, the other night, I'm not a total asshole. Just, let me do something I feel good about.\"\n\nI considered what he was saying. He had his reasons I supposed, and there was no way I could turn down his offer, unless I wanted to sleep in the street.\n\n\"You need anything from your place?\" He asked. \"I thought you might want to finish getting dressed.\" \n\nI looked down at my bare legs. \"Yeah, I'll go get it. Bathroom stuff, some clothes, I don't have much. I doubt our neighbors would think twice about grabbing what they can out of there if I leave it though.\" I replied unhappily.\n\n\"Well, I'll grab your stuff, you just stay here.\" Said Deacon as he stood and went into his kitchen. He retrieved a large box which he carried in one hand. \"Clothes and bathroom stuff. Anything else?\"\n\n\"I said I can get it.\" I mentioned again.\n\nHe strolled past me and opened the front door. \"Well, you can come with me then. I'm a big guy, handy for me to carry everything right?\"\n\n\"Sure. Uh, thanks.\" I said. It was unsettling for me to have someone trying to help me with anything in my life, and hearing myself saying thank you so much was also a first. It worried me that he must have ulterior motives.\n\nI let out a sigh as we reached my apartment with its missing door. We moved single-file into the common room and I surveyed the damage. The small living room was destroyed. Even the couch had been crushed, probably from the augmented guy jumping on top. The wall and viewscreen were smashed to bits. The front door, which was nearly folded in half had been thrown aside and become embedded in the kitchen counter. There was a huge dent near the door where the pipe had struck and some of the metal floor grating was jutting up around the impact. This would not be an easy or inexpensive fix. Seeing my small home this way, it should have filled me with sorrow, and perhaps it did, but more than that I found I just didn't really care. I couldn't summon the energy to give a shit. Just one more thing in my life gone wrong. ",
        "Deacon moved to the small bedroom. \"Clothes first?\"\n\n\"Yeah, okay.\" I said dismally as I followed him. \n\nI began going through the small closet near the bed, tossing all of my clothes into the large box that Deacon held. I made certain that my two extra warming jackets and heated blanket were accounted for. Just then I remembered my sketchbook and pencils and tucked them into the side of the container.\n\n\"What's that?\" Deacon asked.\n\n\"Just, it's nothing, just something I do when I'm bored.\" I replied quickly.\n\nWe moved to the washroom where I grabbed my toothbrush, shampoo, bodywash, supplement bottles and a couple other items. \n\n\"Anything in the kitchen?\" The marshall asked.\n\nI poked around the kitchen, grabbing the couple plates, cups and utensils I owned, careful to avoid the broken glass of the bowl I had thrown. \"Just these.\" I answered, tossing them into the box.\n\nDeacon looked down into the container he held. \"This really everything?\"\n\nI dropped my gaze. There were other things I could grab but they were mostly junk anyway, I didn't care if our neighbors looted them.\n\n\"Yep, my life barely half fills a moving box.\" I responded, feeling uncomfortable, judged.\n\n\"It's not your life, kid, it's just some stuff.\" The man responded. \"Let's head back up and find some space for it.\"\n\nWe returned to Deacon's apartment and he went back to his chair, clicking his wallscreen on and expanding it before he plopped down.\n\n\"Should I unpack?\" I asked cautiously. \"It might be simpler if I keep everything in the box.\"\n\n\"Up to you.\" He called from where he was reclining. \"Probably easier to keep it in the box. No point in getting our socks all mixed up or whatever. Plus I don't think you'd want me accidentally using your toothbrush, leaving moustache hairs in it.\" He chuckled to himself.\n\nI pushed the container out of the way against the wall under the kitchen counter near the front door. I glanced around the small apartment, a strange mirror of my own, not really sure what to do now that I was here. \n\nDeacon caught me looking around and motioned for me to take a seat on his couch.\n\n\"There's not much to do in here. I was just gonna watch some shows, have a drink or two.\" He lifted a bottle with amber liquid sloshing around inside. \"Want any?\"\n\nI shook my head and gave a weak smile. \"No thanks.\"\n\n\"Suit yourself.\" He said taking a drink. He nodded toward the screen beside the couch. \"I like these dumb, dramatic reality shows. They're mostly garbage, I can't get enough. You want to watch something else?\" \n\n\"No, that's fine. I can just play something on my smartscreen if I need to anyway.\" I said as I took a seat in the middle of the couch. \n\n\"Good, I sort of wanted to see tonight's episode. This lady has been dating this one guy and the other guy's about to find out. It's gonna be ridiculous. I'm excited.\"\n\nI gave a short laugh as I regarded the large man. He must be in his forties, I decided, based on all the grey around his temples and some flecking in his black moustache as well. He was in good shape, thick with muscles, although his beer belly was sizable. The eyepatch and facial scar notwithstanding, he wasn't ugly, just unfortunate maybe. I would have thought a man of his age would just watch the news or something more... educational? My father always had. It seemed silly to watch such frivolous stuff.\n\nWe sat for hours watching trainwreck after trainwreck of uncomfortable, fabricated human relationships fall apart and get cobbled back together. Without any prompting, Deacon filled me in on storylines and who each character was and what they wanted. I couldn't say that I cared at all, but it was pretty funny to hear him laugh. He made some instant cakes and added some hot sauce for dinner. He offered me a beer which I accepted. I played around on my personal device for a while when I couldn't handle the reality programs any more. Deacon still watched and laughed sometimes but was otherwise pretty quiet. He seemed to be in a good mood and once I began to feel a little more comfortable in his company I will admit that my own disposition had greatly improved over the course of the day too.\n\nWhen Deacon began yawning I glanced over at him.\n\n\"Yeah, I think it's about time to sleep.\" He commented lazily. \"I usually just crash out here in my chair with the screen on. I'll wake up later and move to the sofa, so that means you get the bed.\" He said.\n\nMy eyebrows furrowed. \"Come on, I'm not taking your bed. I'm fine on the couch, seriously.\"\n\nDeacon gave me a frown. \"I wasn't kidding, I sleep out here, have for years. You must have noticed the blanket and pillows. You're sleeping in the bed.\"\n\n\"If that's really the case, I guess...\" My voice trailed off, it still felt unlikely.\n\n\"Well, good night then, Cheyne. Might be fun having a roommate for a little bit, huh?\" He asked. There was a hint of eagerness in his voice.\n\n\"Yeah, maybe. Anyway, I appreciate you letting me crash here, really.\" I replied earnestly.\n\n\"Think nothing of it, I miss having someone around sometimes.\" He gave me a slight smile.\n\nI nodded, thinking about his words. I moved into the marshall's room and sat down on the edge of the bed. It felt awkward being here. Don't get me wrong, I had spent plenty of time on strange men's beds before but this was different. There was no sex implied here, I didn't really understand what was expected of me. Deacon was just being kind, accommodating, and I should try to do the same. Ultimately, I got the feeling he had been lonely for a long time. In truth, I guess we both had been. I lay down and pulled the covers up over my body. I kept the heating jacket on, I wasn't sure how cold he kept his place at night. I couldn't smell Deacon on the bed, he really didn't sleep in here it seemed. Again I went to sleep completely ignorant about what the next day would bring. But at least, for the first time I had the knowledge that maybe, even after the surprising events of the day, I might have made a friend.\n\nCHAPTER 4.\n\nMy body stretched of its own accord as I slowly woke and rolled up into a sitting position. I was forced to squint my eyes tightly closed. Light streamed in from buzzing neon signs outside the window, illuminating the small bedroom in harsh yellow light. I shielded my eyes as I looked out the nearby glass. At first there was a wave of confusion while I tried to understand why the blanket over my window had disappeared and there was now a view of a street outside. Then I remembered the one-eyed lawman and the events of yesterday. I glanced around the room, feeling out of place. The holographic display on my device said it was just after seven in the morning, apparently the same time that the large blinding sign outside flickered to life. I rolled onto my side, facing the door, keeping my eyes shut tight. Light still seemed to permeate my eyelids and now that I had been rudely awakened, I wasn't sure if I could get back to sleep. \n\nI lifted the covers and climbed off the squeaky bed. My feet touched down onto a pile of the marshall's dirty clothes. This wasn't my apartment, I didn't really know what to do with myself. What was Deacon's morning like? I didn't want to get in his way. I decided it would be best to ask him and pushed open the bedroom door into the common area. I had expected to find him awake, but instead he was lying on the couch snoring softly. He had shed his boots, jacket and pants and was now wearing only his eyepatch, a t-shirt and briefs. Over part of one arm was a tattoo of some kind of bird. Deacon had the same body type of many of the space truckers I took to bed, and I couldn't help but look him over. It occurred to me that if he awoke, he wouldn't want to find me creepily staring at him so I decided to take a shower instead. \n\nI quietly rummaged around in my box of belongings near the front door until I found my bathroom supplies and carried them with me into the washroom. It was weird to take a shower in the morning, but I had been preoccupied last night and forgotten. I suspected there would be more allowances to make as I became accustomed to sharing this small living space. I hoped it wouldn't be for very long. \n\nWhen the water warmed I stepped into the stall and pulled the small curtain across behind me. I cleaned my dark violet hair and soaped my taut body. The heat of the water felt fantastic and actually lasted, even the pressure was better than in my shower downstairs. I brushed my teeth while I bathed and scrubbed myself from the tops of my ears down to my tail. When I emerged I felt like a new man. I found a towel that was mostly dry, patted myself down and wrapped it around my waist. \n\nAs I stepped into the main room of Deacon's place I noticed the marshall had awoken and was now sitting on the edge of his couch, tucking his pillow and blanket to one side. He appeared to have a new glass already poured sitting on the table next to him.\n\n\"Oh hey, morning.\" He said groggily. \"You get up pretty early, huh?\"\n\nI moved over to my box to find some clothes for the day. \"Yeah, I guess. More that sign shining light into my face. Couldn't really stay asleep.\" I muttered.\n\n\"Damn, sorry kid. I didn't really think about that.\" He mentioned as he gave his balls a scratch through the light grey fabric of his underwear. I watched him carefully. He was lifting his glass to take a drink, I think the scratching had been unconscious and not purposefully trying to draw my attention there. I looked away before I could spring an erection.\n\n\"Shower was good though.\" I commented. \"It heats up faster than mine and you actually have some decent pressure. I uh, didn't think to bring any towels up, I hope you don't mind I used one of yours?\" I asked.\n\nHe waved my question away with a hand. \"Naw, it's fine. If you're staying with me for a while, use what you like.\"\n\n\"Thanks, Deacon.\" I said gratefully.\n\nI grabbed a fresh pair of underwear and pants from my box near the front door and was about to take them into the washroom to change when I decided instead to try something. Deacon's behavior was odd to me, but a man's eyes don't lie. I dropped my towel to the floor and stood in my naked glory before the man. I would pull my underwear on slowly and get a feel for his reaction to my body. Deacon's eye grew wide and I noticed some pink flush his cheeks.\n\nThe marshall's gaze dipped down my body, taking it in, but only for a moment. He turned his head to the side and took a gulp of his drink. \n\n\"Not that you have anything to be ashamed of kid, but if this is going to work out, you need to try to be a little more modest around me.\" He stated, clearing his throat.\n\nI tugged up the tight underwear around my waist. \"Oh sorry. I didn't mean to make you uncomfortable, it just didn't occur to me.\" I replied innocently.\n\nDeacon gave me a look that told me he wasn't buying what I was selling. \"I know it's a small place, not much privacy, but you can get changed in the bedroom or bathroom. I'll do the same.\"\n\nI shrugged. \"Whatever you want.\" I said plainly as I finished getting dressed. I felt vaguely annoyed that I hadn't gotten a reaction I wanted from the man.\n\nDeacon took a small heap of clothes and his holster from the common room with him into the washroom while he had his shower. He emerged shortly thereafter in his normal attire: jeans, boots, shirt, and a marshall's jacket and hat. His sidearm was tucked into a holster strapped to his belt and thigh. He cut a powerful image when he wasn't passed out drunk. He headed into the cluttered kitchen and threw a couple instant cakes into the small oven.\n\n\"We have the same eating habits, or at least, the same diet.\" I mentioned.\n\nHe looked up at me. \"Heh, well, hard to beat the price you know?\" He snorted.\n\nI nodded. \"You're telling me.\" \n\nWhen the food was done cooking he dropped a patty each onto two plates and handed me one. \"You got any plans for today, Cheyne?\" He inquired.\n\n\"I don't know actually.\" I sighed. \"I should go look for work, though I'm still a little bit shaken from yesterday. So fucking annoying.\" I grumbled.\n\n\"Look for work like, find a guy to get with?\" Deacon asked.\n\nI felt flummoxed by his straightforward demeanor. Why did I feel uncomfortable when he asked about my job?\n\n\"Yeah.\" I said shortly. \"I mean, it's how I pay the bills. We can't all be station marshalls.\"\n\nHe gave a deep laugh. \"Hey kid, if I had a body like yours, I might do the same thing. And trust me, marshall does not pay overly well either.\" He stuffed a bite of the patty into his mouth.\n\n\"You have a good body.\" I said in response. He stopped chewing to regard me before I continued speaking. \"I mean, for an older guy, and anyway, I would do something else if I could but the job market in this place pretty much sucks.\" I chomped into my own patty, swallowing quickly to avoid most of the flavor.\n\n\"Well listen,\" Deacon began. \"If you're still feeling rattled from yesterday, and I don't blame you, just stay here today, okay?\"\n\n\"There's not much to do here.\" I griped.\n\n\"You got shows and stuff you can watch, I get most of the channels. Maybe you could unpack your stuff a little, I mean, I don't really go into the bedroom so just put your stuff in there.\"\n\n\"Why don't you use your bedroom? I mean, there's nothing wrong with it right?\" I asked.\n\nThe marshall straightened and I watched his eyebrows furrow. \"There's nothing wrong with it, I just, don't go in there anymore.\" He said quietly.\n\nI was tempted to press him further but something about his body language told me to leave it alone.\n\n\"Well, I got work.\" He said simply. His voice sounded distant somehow. He left his plate on the counter and moved toward the door. \"I'm gonna get you a keycard to the place so you don't have to wait around for me to get in. I should be back tonight around six.\" He turned and left before I even had a chance to reply.\n\nFor the first couple hours while I was left to my own devices I was listless and couldn't figure out how to spend my time. I wasn't especially good at being cooped up like this, however, the thought of going out and running into more of Tetha's goons was even less appealing. \n\nThe wide screen on the wall in the common room flashed to life as I tapped a button on Deacon's remote. I watched a program about scabarethen life and culture through space stations and asteroid belts as I sat curled up on the couch. The program covered the ways that my people handled the colder temperatures, found work and raised families, integrating into human-dominated societies. I didn't think it really scratched the surface on how alienating it can be for my kind to live in large human populations with few of their own species for company.\n\nThe show ended and I became restless. I surveyed the apartment, noting the bottle-covered countertops, dirty dishes, piles of clothes and dusty floors. I was a guest here after all and the guy was good enough to let me remain in his home. I determined the least I could do while I was staying here was clean up a little. The kitchen seemed like the most logical starting point so I set up shop there, piling the dishes strewn over the counter into the sink. The bottles were another matter altogether. I found a trash bag under the sink and placed bottle after bottle inside. It was full in no time and I hadn't made much of a dent. \n\nI propped open the front door with one of Deacon's heavy boots and began making trips to the trash chute at the end of the hall. It must have taken half an hour to remove all of the empty bottles from the counters, floor, cupboards, bedroom window ledge and under the couch in the living room to dispose of them. I actually lost count as I was bagging them up and removing them. \n\nWhen I returned to the sink I started cleaning up all of the dishes, bowls, flatware and glasses. There was liquid soap under the sink along with a sponge and scrub brush. When that task was finished I was able to tackle the grimy counter and oven. The sponge seemed to be the best option for the filthy kitchen floor so I got down on my knees and made my way from one side to the other. I took a little breather after, drank some water and headed for the washroom next.\n\nThe bathroom sink area was more or less covered in whiskers and the mirror and tile had soap residue everywhere. I gave a sigh as I set to work. Somehow, it actually felt good to get a little grubby and do some chores with my hands and sweat from my brow. I hoped the big man would be pleased when he got home. \n\nDeacon's underwear and t-shirt from this morning were shoved into a corner behind the door. Laundry wasn't an option for me today as it cost money and I wasn't ready to venture out to the nearby laundromat. Even so, I could gather up his dirty clothes and take care of them sooner or later. As I picked up the marshall's grey briefs I felt a twinge in my cock and had a sudden, dirty thought. I brought them to my face and shoved my nose into the material, breathing in the scent deeply as I closed my eyes. There was the unmistakable smell of man, but there was also something uniquely Deacon in the scent. It wasn't terribly strong, he hadn't worn these for a handful of hours, but thinking about his dick and balls being cradled in the soft material was getting me hot. \n\nI lay down on the cool, metal tiled floor of the small washroom and tugged my pants open. My eyes were still shut as I pictured the marshall sitting on the couch scratching at his manhood while I kept his briefs shoved roughly into my nose and open mouth. I let my tongue explore the fabric, picturing Deacon looking down at me with a lustful expression on his face. My hand jerked and tugged my cock to fullness while I writhed on the cool floor. Soon I picked up the rhythm and bucked from the hips as I stroked the full length of my maleness in time to my sniffs and licks of Deacon's underwear. The grip from my fingers, the scent of man, the slickness from my oozing cock felt fantastic. It took me almost no time to reach climax and I soon began spurting thick, hot streams onto my hand and arm. I turned my dick at the moment I started shooting so I didn't cover my jacket, instead letting most of it splatter onto the small diamond-shaped floor tiles. \n\nAs my orgasm subsided and my breath slowed, I pulled the marshall's clothing from my face and wiped up the cum from my hand and floor. I lay there, staring at the lights recessed into the ceiling overhead. Was I just so horny from not having been with a guy for a week? I had masturbated since then, but not since relocating to Deacon's apartment. I suppose it wasn't too surprising that I found the big guy somewhat desirable. He denied my advances twice now, it probably made me want him more. Lying here, smearing my semen into his dirty underwear was definitely a turn-on for me, but the guilt afterward was frustrating. These weren't exactly the actions of a friend, but then, it's not like I even knew what that entailed.\n\nAfter I had fully recovered from my afternoon jerk-off session I finished scrubbing and cleaning the washroom. The mirror was free of smudges, the counter and sink showed no trace of shaving or toothpaste globs, the floor wasn't perfect, but it certainly looked better. I smiled to myself at a job well done and headed back into the living room. Flopping onto my stomach on the couch, I decided to find something to watch until Deacon got home.\n\nIt was just after six in the evening when I heard the keycard reader for the front door beep and the marshall pushed inside. Deacon stepped past the door and closed it, giving me a nod when he saw me looking in his direction. He could tell something was different immediately and I watched as he slowly scanned his apartment. His eyebrows raised in surprise.\n\n\"Did you clean the apartment?\" He asked incredulously.\n\n\"Well it wasn't the maid.\" I replied.",
        "He moved into the kitchen and whistled. He rubbed his hand over the clean counter surface. \n\n\"Geez, Cheyne, you did a real nice job!\" He remarked.\n\nHis praise felt good. \n\n\"I did the washroom too.\" I added.\n\nHe headed back across the apartment and moved into the small room, flicking on the light as he did.\n\n\"Damn! Looks great!\" I heard him call.\n\nWhen he reappeared in the living room he had his hands on his hips and was nodding appreciatively. \n\n\"I don't know the last time I came home to a clean place, this is really something.\" He smiled.\n\nI blushed. \"I was just bored, and figured if I was staying here too, couldn't hurt to tidy up right?\"\n\nHe came over and sat next to me on the couch. He patted my knee. \"Well it was real nice of you, kid.\" \n\nI liked the feel of his big hand on my leg although he removed it all too soon.\n\nHe reached into his jacket and produced a keycard. \"As promised, had another one coded today, so you don't have to feel like a prisoner.\" He handed it to me.\n\nI chuckled. \"I don't feel like a prisoner, Deacon.\"\n\n\"Well that's good at least. I'm pretty sure I'm a terrible host.\" He joked.\n\nI rolled my eyes at him.\n\n\"Talked with Ford today. He wanted to charge you rent while you weren't staying there. Such an asshole.\" Deacon grumbled.\n\n\"Well, is he?\" I asked.\n\n\"No, I sort of, persuaded him not to.\" The marshall said, pleased with himself.\n\n\"Did you threaten him?\" I asked.\n\nThe big man gave a shrug. \"I just reminded him that I stopped two criminals on the premises and that it was probably illegal to charge someone for a place that's not fit to inhabit.\" He informed me.\n\n\"That was nice of you.\" I said honestly.\n\n\"It's nothing.\" He said. \n\nDeacon searched through channels as he made himself comfortable in his weathered-looking chair. He had brought home a few new bottles, one of which he now opened. \n\n\"Drink?\" He asked.\n\n\"I'm good.\" I replied.\n\n\"Come on, don't make me drink alone.\" He insisted.\n\nI gave the man a thoughtful look. \"I'm really okay, Deacon.\" I repeated.\n\nHe frowned. \"Okay then.\" \n\nHe found one of his shows, this one seemed to be featuring a wedding between the man and woman from the night before. Deacon quickly changed the channel. \n\n\"You want to watch something?\" He asked.\n\n\"It's your place.\" I responded. \"You should pick.\"\n\nHe tossed the small black remote to me. \"I'm not gonna make you watch this crap, at least, not all the time. Find something.\"\n\nI shrugged and picked up the remote, scanning through the options. After a few minutes I found an old documentary about Earth. I switched over to that, expanded the screen into three dimensions and leaned back on the sofa. The program showed the natural beauty of the human homeworld, the way it used to be, animals that used to cover the globe and fantastically tall trees.\n\nDeacon shifted in his chair. \"Why'd you pick this?\" He asked.\n\nI didn't turn around and kept watching the screen. \"I don't know. I like seeing outside, I mean, nature and stuff. We don't have much of it here so it's always interested me.\" I explained.\n\n\"It's just trees and stuff, it's not that great.\" Deacon said matter-of-factly.\n\nI looked at him over my shoulder, giving him an earnest look. \"Yes it is. It's life, it's really pure life that just, quietly does its own thing. It doesn't try to hurt anyone else, it just grows and coexists with everything around it.\" I said.\n\nDeacon ran a finger over his moustache. \"That's a nice thought, huh?\"\n\nI looked back to the screen where a camera was panning through an extinct grove of trees called redwoods. \"It is to me.\" I said.\n\nWe had a simple dinner and watched some more shows as it grew late. Deacon started to snore quietly in his chair while I cleaned up after the meal and washed the dishes. He had drained the bottles he brought home over the course of the evening so I put them in an empty bag near the door. I set them down beside the box of my belongings. While I had been cleaning most of the day I had somehow neglected to unpack into the bedroom. I carried the box in and set it next to the bed. Over the next hour or so I took my clothes out and folded them into the closet. I had expected to have to make room but none of Deacon's clothes or belongings were on the shelves or rack inside. I hung up my extra heating jackets and folded my shirts, pants, socks and underwear onto the narrow shelves. I pulled my sketchbook out and traced my fingers over the cover. It brought a smile to my face that it hadn't been damaged downstairs. I carefully slid it into the alcove by the bed alongside Deacon's framed pictures.\n\nCHAPTER 5.\n\nTen days had passed since my apartment had been torn apart and I was forced to move in with the marshall upstairs. I wasn't ruled by worry and fear anymore and left the apartment sometimes. I did all of the marshall's laundry and mine. He was grateful but asked if I wouldn't mind leaving his clean clothes on the end of the couch. \n\nI should have been looking to pick up some men to make a little extra money but I wasn't super excited by the notion. I was anxious that my new friendship with Deacon was sending my brain mixed signals. I wasn't stupid, I knew that I probably had a crush on the first man to look out for me. I needed to clear my head and for that I needed a good fuck.\n\nI hung around the docks during the late afternoon as a few freight and mining ships arrived and began unloading. I unzipped my puffy jacket to expose my firm chest and stomach underneath. I waved timidly at a few of the workers moving freight around. Most pretended not to notice although I finally caught the interest of a short, burly guy with a patchy dark brown beard. He showed me to a toilet stall in the bottom of his ship, careful to lead me there when none of his shipmates were around. The stall door was barely shut behind us before his heavy work pants hit the floor and his belt buckle made a loud clank. I followed suit, pulling my tight-fitting pants down to my ankles.\n\n\"Turn around, bend over.\" He ordered in a gravelly voice.\n\nI pulled a small tube of lubricant from one of my jacket's inner pockets and squeezed some liberally onto my fingers. My tail lifted itself up over my back as I reached down to slip the cool gel around and into my exposed asshole.\n\n\"All ready, stud.\" I purred as I parted my legs and leaned against the wall on my forearms over the toilet.\n\nThe short fellow gripped my butt cheeks hard as he lined up his fat little prick to my anus. He leaned into me and I felt him pop inside. I clenched my jaw, I wasn't that loose. It still hurt at first, every time, when I wasn't able to fully prepare. He rammed into me at full speed after only his third thrust. I bit my lip and was repeatedly shoved against the wall as he hammered into my ass. He pulled my tail upwards hard. I let out a yelp.\n\n\"Just wanted to see your hole.\" He said. Not much of an apology, I thought.\n\nHe banged me into the filthy wall of the toilet stall again and again until I heard his breathing begin to speed up and I knew he would cum soon. He reached up and wrapped his fist in my hair, before tugging it forcefully. I still had my hands on the wall even as I was suddenly jerked backward.\n\n\"Ouch! Fuck, man, take it easy!\" I cried out in pain.\n\n\"Here it comes, you little bitch.\" He grunted into my ear. \n\nI could feel his testicles lift as he emptied them into my guts. He licked and sucked at my neck as he came, I didn't care for the feel. When his climax had diminished, he flopped out of my asshole and gave me a rough shove. I wasn't prepared for the sudden push and I bashed my forehead into the metal wall. It was enough to hurt but not daze me.\n\n\"What the fuck?\" I said angrily as I turned around.\n\nThe husky man shrugged. \"I like it a little rough, don't get bent out of shape.\" \n\nI stopped myself from spitting in his face. \"Pay me so I can get out of here.\"\n\nI charged him a little extra for the abuse treatment. He had gotten annoyed by that, but in the end agreed to terms. My head felt like it was going to bruise which would make it challenging for trying to attract any other men in the short term. I might be able to hide it with my hair if I brushed it partially over my face.\n\nOn the way back to the apartment I stopped by the grocery store. I had a little extra money and wanted to treat myself, and Deacon too. He had been nothing but decent to me in his gruff way since I had been staying with him. We always ate cheaply and it was never something we relished. I hoped he would enjoy the surprise, I knew he would. It made me feel good, thinking about doing something to make him happy. I bought groceries that would last the two of us at least a few days. I considered buying him more booze but didn't like the idea of encouraging his obvious alcoholism. \n\nBack in Deacon's apartment I started cooking up some food. It was still more or less instant but this stuff was made with actual pronounceable ingredients and tasted much better. There used to be a time when people could prepare meals using meat from animals they had slaughtered and vegetables harvested out of the ground. This was not a luxury one could enjoy in space. Food had to be able to travel and have nutrients infused often after the fact. To get the rest of the vitamins necessary to stay healthy everyone was on nutritional supplements, taken every morning. It wasn't that much of a hassle honestly, just something we all did by habit.\n\nThe meal was ready and when I heard the familiar sound of the keycard at the door I started to move it from the oven onto plates. Deacon pushed into the room and shut the door behind him. \n\n\"Hey, something smells good!\" He said, sniffing the air.\n\nI moved around the counter holding the plates in front of me. \"Thought I'd do something kinda special, had a few extra credits. Anyway, this should taste better than what we normally eat.\" I said happily.\n\nHe carefully dropped the bag of bottles he had brought home onto the counter.\n\n\"Come here.\" He said.\n\nI walked over and cocked my head to the side. \"What?\" I asked.\n\nHe took the food from me and set it on the counter beside us. He pulled me closer by the arm until I was nearly against him. I felt my heartbeat quicken with the proximity.\n\n\"What the hell happened to your head, Cheyne?\" He asked as he pushed some hair out of my face.\n\n\"Oh that, well, I hit it I guess.\" I tried to distance myself from him but he still held me firmly.\n\n\"You guess? That is a serious bruise. How did it happen? Tell me the truth.\" He said sternly.\n\nI let out a long sigh. \"I was with some guy, he got a little rough. It's not a big deal.\" I tried to sound reassuring.\n\nHe let my arm go and gave me a serious expression. He almost looked angry. \"Dammit, kid. I work to keep the folks of this station protected and you go out and get paid to let assholes beat you up?\" \n\nI shot him an offended look. \"He didn't beat me up. He fucked me and then shoved me a little. I got paid extra, it's fine.\"\n\nDeacon's face reddened with anger. \"It's not fine, Cheyne! You think I like seeing you hurt? You think I like the thought of strange men fucking you?\" His fists were balled up now, it made me feel nervous.\n\nI was confused and somewhat taken aback by his reaction. \"What the fuck do you care? This is my life, I can make whatever stupid decisions I want!\" I shouted back at him.\n\nHe pounded his fist on the counter next to him, causing me to jump in surprise. \"I care, alright? You're my friend, of course I care! How can you think so little of yourself, huh? You're smart and funny... you think you need these men to make you feel good? That's bullshit!\"\n\nI opened my mouth to respond but there was nothing there. \n\nDeacon continued, but his face had softened and his tone had calmed. \"It's not my place, but, I don't want you to do this anymore. It's not safe, it scares the shit out of me that something's gonna happen to you and there won't be anything I can do.\"\n\n\"You're right, it's not your place. You're not my parent, you're not my boyfriend, it doesn't really concern you at all.\" I shot back.\n\nHe gave a sort of sad, defeated expression. It made my heart ache to look at him.\n\n\"Look, Cheyne, I worry about the people close to me, okay? What if I could find you another job? Would you try it out? Please?\" He pleaded.\n\nI moved uncomfortably in place, my tail switching behind me. \"I-I guess. It depends on the job.\" I answered uncertainly.\n\n\"Good. Thank you. There's a desk job at the precinct. It's just filing and making schedules on the computer and maybe some dispatch work, it shouldn't be anything too tough for you. If I put in a good word I can probably get you an interview at least.\"\n\nI really didn't know what to say. \"I can check it out.\" I managed.\n\n\"It's not a sure thing, and it doesn't pay real well, but it's honest work and I can stop worrying about you.\" Deacon said.\n\n\"You don't need to worry about me, Deacon.\" I said, looking into his face.\n\nHe gave a modest smile and put a hand on my shoulder. \"Someone needs to worry about you.\"\n\nMy heart pounded again.\n\nThe marshall turned back to the counter and picked up the plates. \"Now let's eat before it gets cold!\" He said enthusiastically.\n\nWe ate while watching more of Deacon's reality shows. I still wasn't much of a fan but I was beginning to see what he got out of them. He was interested in the human drama, even with its gross exaggeration. I had come to learn that he quite liked people, getting to know them, finding out what made them tick. It was probably part of what made him a good marshall. Though in the time I had spent with him he never mentioned any friends or significant others in his own life. I wondered, not for the first time why he let me into his little world. It seemed like he had taken a paternal role with me, wanting to take care of me and make sure I was safe. He did make me feel safe, it was not something I could remember ever feeling. When my dad had been around he had never taken much interest in me or my life, he had just been present, and even that didn't last. \n\nDuring a lull in the program, Deacon mentioned to me: \"Talked with Ford again today, about your apartment.\"\n\n\"Oh?\" I responded.\n\n\"Really slow going, don't even think maintenance has made it out for their initial inspection. You're stuck here for a while longer.\"\n\n\"Enh, you're not so bad, I can tough it out.\" I smirked at him.\n\nHe nodded and gave me a smile. I found it hard to meet his gaze when he smiled like that. \n\n\"Dinner was real nice. Thanks for doing that.\" He said.\n\n\"Hey no problem, glad you liked it.\" I replied.\n\n\"Keep taking care of me, cleaning up around here, I'm not sure I'll be able to let you leave!\" He laughed.\n\nI felt the start of a knot forming in my stomach. \"Guess I'll cross that bridge when I come to it.\" I responded.\n\nAfter Deacon had passed out drunk in his chair I headed to my room. Though it was late and I should have been tired, I couldn't quite fall asleep. Deacon telling me he liked having me here, in his own way, kept running through my head. I sketched for a time, read a chapter of a book on my smartscreen and tried to lie still and shut my eyes but sleep wouldn't find me. I decided to go out to the kitchen for a drink of water. I quietly opened the bedroom door so I wouldn't disturb Deacon, although he was not a light sleeper by any means. As I moved through the small common room my eyes swept over the large sleeping man on the couch. He was on top of the blanket again wearing only his eyepatch, briefs and white t-shirt, straining to hold in his round gut and massive chest. Below his belly, tight grey briefs had rolled up his muscular, hairy thighs, making his cramped genitals look even bigger. I stopped walking and unconsciously moved closer to him for a better view.\n\n\"Damn.\" I whispered appreciatively into the still room.\n\nI knew I should get my water and go to bed, that had been the goal after all, but here and now, this was the first opportunity I had gotten to really take in the big man's body. As I watched the bulge between his legs I noticed the material begin to tent outwards as he started to become aroused in his sleep. Staring at his growing erection, my own cock had stiffened painfully in my underwear. I knelt down beside the snoring man and moved closer to his side. I was nervous he might wake up at any second and yet, I was unwilling to move away. My tongue moved across my dry lips as I leaned my face close to his maleness. I could smell him in the air, I was so close I could see the shape of his full cock and even the crown of his swollen head. I dipped my nose down and gently inhaled, just barely letting the fabric graze my nostrils. The scent his body produced, especially here, was nearly overpowering me. My own underpants now sported a widening wet spot from the precum oozing out of me. \n\nI was dizzy with lust. I had wanted this man on some level since that first day when he saved me from my attackers and brought me into his home. My body was actually shaking with nerves and excitement as I gently, painstakingly, pulled the front of the cloth fly open. I could see the warm pale flesh of his cock as I nervously pulled the fly further apart and lifted. He was too big and bent up under the waistband. I pushed my fingers through the opening and slowly hauled him out. Deacon was large, even bigger than I had fantasized about. I had been with numerous men in my young life but he was easily one of the girthiest. I stroked him slowly, and as softly as I could manage, still terrified of waking him. With my other hand I dipped inside the fly to feel his heavy, hairy balls. I moved my face over him again, standing up on my knees. I inhaled deeply again but allowed my tongue to slip out and take a furtive lick of his hot manhood. I felt a shiver down my spine as I finally got my first taste of Deacon's sex. When I moved slightly up his body to take his fat cockhead into my mouth I thought I might die from my heart exploding in my chest. My body trembled with excitement and fear of being discovered but I would rather be caught and thrown out of the apartment than not experience his body, at least, that was how I felt in the moment. I sucked down his chubby dick and swirled my tongue all over, delighting at the taste.\n\nDeacon moved slightly in his sleep and let out a low groan. \"Uugh, mmm.\" He murmured.\n\nI froze with his thickness halfway down my throat. I waited like this until the snoring began again. I continued my ministrations, gulping my way down his length until I barely succeeded in getting his entirety into my throat. I forced my face all the way down to the wild greying pubic hair over his crotch and pushed my tongue out to lap against his hairy sack. The gentleness of my sucking had been replaced with my need to drain him into my hungry mouth. I made him fuck my face as I forced him into my throat repeatedly. I could taste the early flavors of his semen as it seeped from his piss slit across my tongue. I pulled my own underwear down in a swift movement and jerked myself in a frenzy. I would make a few quick strokes then let go completely, I knew I could cum at any second. So focused on my task was I that I hadn't noticed the snoring subside.\n\n\"Eilie?\" Came a groggy voice to my side. \n\nI looked up to Deacon's face, my mouth full of his bulging dick. His eye was red and cloudy from drink and sleepiness. He looked at me but still seemed to be miles away, unfocused. I continued to suck him, also using my hand to caress and knead his heavy balls through a leg opening. I watched his face above his stomach as I blew him for all I was worth. He still watched me drunkenly but said nothing more. Within another few seconds I felt him jerking spastically in my mouth and was rewarded with full shots of the marshall's hot spunk. It covered my tongue and splashed into my throat as I struggled to take it all down. It was so thick, and the sheer volume took my by surprise. His flavor was salty and bitter and I loved every second. In my hand I brought myself to orgasm a moment later and shook as I squirted against the couch between my legs. I buried my face into his groin again as I was jolted by the concussive power of my ejaculations. I gulped and licked while I fondled his hairy, drained bag. I laid my head across his thigh as I lapped at the final drops that seeped from his rounded head. ",
        "I was completely out of breath as I watched Deacon's face in the low light of the room. He closed his eye and opened it again sleepily. He was staring right at me but might still have been asleep and dreaming for all the reaction he gave me. I was finally tired myself and tucked his softening cock back into his briefs before I headed back to bed.\n\nThe following morning, I'll admit to being incredibly nervous about facing Deacon. Would he remember anything? Would he be angry? I had taken to sleeping with my head under my pillow so the morning neon wouldn't bother my sleep, but today I was awake before the sign even buzzed to life. In spite of this fact I laid where I was. I couldn't make myself face the man. If I had ruined our friendship, if he remembered everything I had done... I had no idea how he would respond. Why couldn't I just control my damn libido? I stayed in bed, playing out every imaginable scenario until I heard the shower running. He hadn't stormed into my room to throw me out, maybe it was okay?\n\nI dressed and moved out into the living room. I poured myself some of the juice I had purchased the night before and drank some. It didn't go down smoothly on account of my nervous stomach. At last, while I waited, Deacon emerged from the washroom wrapped in a towel. He didn't notice me right away and was whistling a tune. He seemed to be in a cheerful mood. Though what really caught my attention was his chest and eye. The most I had seen him undressed was in a shirt and underwear, this was the first time I had seen him with a bare torso and without his eyepatch. He was furry, thick black hair covered much of his front, but his right pectoral muscle was silver and flattened. I realized he was augmented in some way, it looked like there had been a massive amount of replacement surgery performed on his chest. It didn't look like a clean job either, pink scar tissue surrounded the metal pieces. His right eye was missing and instead there seemed to be more scar tissue there as well. At last Deacon noticed me leaning against the far side of the kitchen counter.\n\n\"Cheyne!\" He exclaimed in surprise. \"I thought you had left for the day, you never wake up after me! Sorry, I uh, need to get dressed!\" \n\nHe quickly scuttled over to the end of the couch, opposite his chair where he had his clothes piled. As he poked around the heap I noticed that there was more scarring on his shoulder and some extending to his back. I had never seen damage like that before, I didn't even know how Deacon could have gotten so injured. When he found some clothes he quickly dashed back to the washroom to dress. He re-emerged shortly after, fully clothed and wearing his signature black eyepatch.\n\n\"Sorry.\" He said bashfully. \n\n\"It's okay, Deacon.\" I said sincerely. \"What happened?\"\n\nHe frowned and sat down heavily on the sofa. He folded his hands in his lap. \"An accident, a long time ago.\" He stated.\n\n\"Everything alright? It looks like it was pretty bad.\" I ventured.\n\n\"I'm fine. I just, don't like people seeing it. I can't fully hide the one on my face, but at least I can wear a shirt over these.\" He said, indicating with his hand the scars over his chest and shoulder. \"I don't... really like talking about them.\"\n\nI nodded my understanding. \"That's fine, I won't make you.\"\n\n\"Thanks.\" He replied.\n\nI still stood in the kitchen while Deacon sat on the couch. Silence filled the small apartment for a handful of long minutes. I hesitated, but I couldn't stand not knowing about last night. I decided to try to be direct.\n\n\"How did you sleep?\" I asked candidly.\n\n\"Fine.\" Was the short reply.\n\n\"Oh good, I slept pretty well too.\" I felt relief wash over me.\n\nDeacon folded his fuzzy arms over his chest, leaned back and gave me a knowing look. \"Yeah? All that cum in your belly make you sleepy or something?\"\n\nMy eyes widened and embarrassment flooded over my face.\n\n\"What?\" Deacon asked. \"I might be a drunk, but you think I don't know what it feels like to have my dick sucked?\"\n\nMy mouth gaped open and closed, like a fish. \"W-what do you... are you mad?\" I stammered nervously.\n\n\"Kid, you've made it clear to me that you're interested, though I don't really get why. And look, I'm kind of a hermit, I don't get that much sexual attention. It felt good, I let it happen. That's pretty much it.\" He explained.\n\n\"I see...\" I said slowly. \n\n\"You had fun too right?\" He asked, catching me off-guard. \"Saw your stuff on the front of the couch this morning.\"\n\nI let out a startled laugh. \"Yeah, of course I did! I'll, clean that up. So is that... something you might want to do again?\" I asked hopefully.\n\nDeacon scratched his stubbly chin thoughtfully. \"Maybe. I mean, if it made us both feel good, why not?\"\n\nIt was all I could do not to dance with glee. I settled for clapping my hands together. His head snapped over to look at me quizzically.\n\n\"Heh, sorry.\" I said in the calmest voice I could manage. \"Just, I'm looking forward to it.\"\n\nThe rest of the day suddenly felt brighter to me, more exciting than any had previously. Deacon went to work, I also decided to leave the apartment, taking my sketchbook with me. There was one spot in Ganymede where I liked being when I wasn't overly worrying about money or anything else in my life. Before reaching the spaceport there is a small area the original developers had left to add some natural beauty to the station. It wasn't more than a quarter of a block in diameter, but there was real grass, some shrubs and three tall trees I think I read were Alder. There was rarely anyone here, folks on Ganymede were too caught up in their own daily routines to come out here, hell, I usually was too. There were two benches at the edges of the parklet, but that wasn't where I liked to spend my time. The Alder tree in the back grew up very close to a one-story high hardware store. I scaled the tree easily, we scarbarethen are very dextrous, and landed on the sloped roof of the shop. I was mostly hidden by the leafy treetop here and could lie down on the warm metal roof. Overhead there were bright sun-mimicking lights that helped the plants grow.\n\nI opened the art book into my lap and sighed contentedly to myself. When was the last time I had felt this good about anything? I liked living with Deacon, he was kind to me, but it was more than that too, he cared about me. I recognized that he was lonely and wouldn't refuse my advances anymore, well, hopefully. I realized I came on pretty strong and might have to pull back a little to let him be more comfortable. He didn't feel about me like I did about him, I didn't even think he liked men in the way that I did. I remembered the pictures of women in his bedroom, I should ask him about them at some point. I had let it go this long without asking, I think, because I didn't want to know who they were to him. It was naive and immature of me to want him all to myself, but it didn't stop me from feeling the way I did. Not only had Deacon become my friend, he took care of me, something I had always wanted. There was nothing more attractive to my way of thinking.\n\nAs I sat there, a leaf tugged away from a bending branch overhead and drifted down, landing between two open pages. I blinked and lifted it in my slender, clawed fingers, rotating it and marveling at its bright green coloring. I tucked it into the book and pressed the cover down, then I reopened the book to that page and started to sketch the tree before me. There wasn't real wind in Ganymede, but there were large air filtration systems pumping oxygen and nitrogen through that caused the trees and grass to dance, ever so gently. It was the only thing close to natural beauty here and I had missed stopping by occasionally. Beneath my perch a man and woman stopped into the tiny park, holding hands. They sat down on a bench, side by side and she laid her head against his shoulder. There was a sharp pang in my chest as I quietly observed them. Was that something Deacon would let me try, I wondered. I decided I wouldn't force myself on him tonight, unless he initiated. Whatever it was that I had with the marshall was becoming increasingly important to me. I hoped I could keep from screwing it up for at least a little while longer.\n\nCHAPTER 6.\n\nThe next morning I was excitedly bouncing around the apartment while Deacon was making breakfast. He gave me a shake of his head when he caught me staring at him for the twentieth time in the last half an hour.\n\n\"Cheyne, what is up with you this morning?\" He asked in a sleepy voice.\n\nI made a sort of dumb smirk and shrugged, holding my hands behind my back.\n\n\"Maybe I was wondering when you wanted to fool around with me again?\" I mentioned hopefully.\n\nHe looked at me in disbelief as he poured a drink for himself. \"Well, I don't know, I guess when I'm in the mood again.\" He responded.\n\n\"When is that? You ready now?\" I asked, goading him.\n\nHe frowned. \"I'm not rising to your bait, kid. Look, I just woke up, I'm not usually in the mood in the mornings. You need to just calm down a little. I'm still not totally sure about this.\" He said, leveling a serious glare at me. \"Anyway, why don't you come down to the precinct with me today? Maybe see about that interview?\"\n\nI scratched behind one of my large ears thoughtfully. \"Sure, I didn't know it would be so fast.\"\n\n\"Well, I don't want you to get bored, and hey, nice to get a real job, right?\"\n\n\"It's just an interview.\" I reminded him. \n\nDeacon's eyebrows raised. \"Weeell, it is, but it might be a sure thing. The police chief sort of owes me a favor so I called it in.\" He explained.\n\nI tilted my head, curious. \"You called in a favor for me? With the chief of police?\"\n\nHe waved his hand in my direction. \"Not a big deal. Be ready to go in twenty minutes?\" Deacon asked as he shoved his breakfast into his mouth.\n\nA few minutes later I heard the shower running and couldn't help myself. I pushed my way into the small room as steam clouded up the mirror. I had a wide, nervous smile on my face. I could hear Deacon whistling as he washed himself in the stall. I tugged the shower curtain back and he gave a small jump in surprise. I looked him over as thoroughly as I could before he snapped the curtain closed again. I was able to take a mental picture of his soapy body, so I was pleased with myself. His face was astonished.\n\n\"Dammit, Cheyne! Allow me some privacy! You can have me when we get back later, before bed!\" He barked.\n\n\"Fine.\" I whined.\n\nHe stuck a beefy arm over the top of the shower curtain, pointing toward the bathroom door.\n\n\"Out!\" He commanded.\n\nI sighed loud enough for him to hear and stomped out of the cramped washroom. I could hear him chuckling behind me.\n\nWhen Deacon was dressed and ready to go, I had already been waiting for several minutes. The big man looked me over and glowered.\n\n\"That what you're wearing?\" He asked.\n\nI ducked my head to verify I was in fact fully clothed. \"Uh, yup. Shoes, pants, shirt, jacket. That's me dressed.\"\n\nDeacon made a sound like exasperation. \"Look, I don't know how to say this delicately but, you look like you have sex for money.\"\n\nI shrugged and lifted my hands at the comment. \"Well, I do Deacon. So... there's that.\" I said.\n\n\"You don't have any other, more, professional-looking clothes to wear?\" He asked expectantly.\n\n\"Nope, sorry. I've never had any reason to wear anything else and can't really afford to buy clothes just for fun.\" I shot him a look of annoyance.\n\n\"Well, we're getting you something to wear then.\" Deacon said with finality.\n\n\"If it's that important I guess. Seems dumb to me.\" I groused.\n\n\"Just listen to me, okay?\" Deacon said as he pulled the front door open, motioning me out of the apartment.\n\nDeacon took me to the local department store where we found our way to the clothing section. Scabarethen sizes for clothes were near the back of most of the racks. We're usually leaner and taller through the legs and arms although slightly shorter than humans overall. Nothing was especially expensive or high-quality fabric. Just as well, I wouldn't feel like myself in anything too formal, and then of course there was the price to consider.\n\nDeacon found a pair of beige pants near my size and held them out to me.\n\n\"No, I won't be wearing those.\" I sniffed.\n\n\"What's wrong with them? They're nice.\" Deacon said in a confused voice as he looked them over.\n\n\"They're ugly.\" I replied. \"If I need new pants, I can get some jeans.\"\n\n\"Jeans aren't really interview clothes.\" Deacon informed me.\n\n\"I don't care. You wear them every day to work!\" I countered.\n\nHe rolled his eye. \"Fine, but a nice pair then.\"\n\nI crossed my arms, pleased with the compromise. \"Done.\"\n\nIt took a little over an hour to find a couple pairs of jeans we could both agree on and two shirts that buttoned up, had collars, and weren't too tight-fitting or suggestive. I was allowed to keep on the shoes I was already wearing. The new clothes were going to eat up the rest of my money situation but Deacon wouldn't allow me to pay. It pissed me off. \n\n\"I'm the one that made you get new clothes, it's only right that I buy them for you.\" He said stubbornly.\n\n\"You don't need to buy me clothes! It's not like we're a couple.\" I said petulantly. I wondered if he would correct my statement.\n\n\"Well regardless, I'm paying for them. If you still feel you have to pay me back, we'll wait until you get your first paycheck.\" He said firmly.\n\nThe lady at the counter eyed us carefully. She didn't know what to make of the pair of us, the big brute with the scarred face and the young scab dressed like a slut. I shot her a venomous look and she turned away to focus on ringing up the purchase. \n\nOn the way out of the store Deacon had me stop at the restrooms to change. I tucked my old clothes into the large bag with the other shirt and pants Deacon had purchased. When I emerged again he broke into a wide smile.\n\n\"What's with the smile?\" I asked. \"Yay, I look like everyone else.\" I added sardonically.\n\n\"You look nice, Cheyne, handsome.\" He said.\n\nHis words took me by surprise and I blushed.\n\n\"Thank you.\" I said quietly. \n\nDeacon tousled my long hair in a fatherly way.\n\nDeacon took me to the precinct, the marshall and police headquarters on Ganymede. It wasn't terribly large, a two-story dark grey and blue building nestled at the end of a short road about halfway between main street and the shadier parts of town. He lead me inside where a uniformed officer sat behind a desk. He looked us over as we approached.\n\n\"Hey Deacon, pretty late in today aren't you?\" The shorter officer asked.\n\n\"Had some errands to run.\" Deacon responded. \n\nThe fellow behind the desk shifted his attention to me. \"This the guy for the assistant's position? Doesn't look like a cop to me.\" He gave me a skeptical once-over.\n\nDeacon rubbed the back of his neck as he gave the man an uncomfortable look. \"Well, he's not, but Abby says she needs an assistant. At this point, she just needs someone who can handle the work, they don't necessarily need to be a cop.\"\n\n\"If you say so, Deac.\" Replied the man at the desk dubiously.\n\n\"Give me a break, Reynolds, just let her know we're here.\" Deacon said sternly.\n\nReynolds pressed a button on the console before him and informed the chief that I would be interviewing with her. While they had a brief exchange over the intercom, Deacon turned me away to speak with me privately.\n\n\"Okay, listen, it's going to be just like any other job interview more or less.\" He said.\n\n\"Right, well, I've never been on an actual job interview.\" I responded.\n\n\"Crap.\" Deacon said. \"Well, be respectful, but don't suck up. Just be yourself, well, be a nicer version of yourself.\" He decided.\n\n\"Thanks for that.\" I said dryly.\n\n\"You'll be fine. Oh, here she comes. I'll keep your extra clothes with me, I have a locker.\" Deacon said as we both turned around.\n\nThe chief was a human woman who looked about fifty. She was quite tall and looked imposing. She was smartly dressed in a police uniform and moved with a strong presence. She was intimidating to behold.\n\n\"Chief Abigail Holden.\" She introduced herself, rigidly offering her hand.\n\nI reached out and shook it, she had a strong grip. \"Cheynex, son of Cerasbek.\" I informed her. \"Most people call me Cheyne.\" I added.\n\n\"That's fine. What happened to your head, Cheyne?\" She asked, nodding to the greenish bruise on my forehead. \n\nI was taken aback by her candor. \"Oh, I, well--\" I started but was cut off by Deacon.\n\n\"Those men that I brought in a while ago, one of them did this.\" He said.\n\n\"Hm, it looks fresher than that.\" She mused. There was no pulling the wool over this woman's eyes.\n\n\"Guess I'm just a slow healer.\" I offered lamely.\n\nHolden regarded me but didn't push further. \"Follow me to my office, Cheyne. Deacon, you can see me after.\"\n\n\"Good luck, kid.\" Deacon said. He tilted his hat to the chief and left us in the front of the building.\n\nChief Holden lead me back to her office which was a fairly cramped room with a large desk, her seat on the far side where she moved now and two seats on this side. I sat in one of them and glanced around the office. It wasn't very comfortable feeling to me, that is to say, it felt official, impersonall. There was one sad-looking plant in a corner of the room, struggling for life, a fan overhead droning quietly and a stack of papers towering on one side of the heavy desk. As my eyes made their full sweep I noticed that there were papers on the floor in boxes at the sides of the desk as well.\n\n\"So, what do you know about the job?\" She asked, getting straight to the point.\n\n\"I just know it's an assistant job?\" I asked.\n\n\"Glorified secretary.\" She corrected me. \"My bosses have been on my case to stop filing my reports in paper, really, doing everything on paper. Well, I like paper. I like the way it feels, I like that you can't hack into it.\" She explained.\n\n\"Actually I do too.\" I said.\n\n\"Oh?\" Chief Holden asked.\n\n\"I, like to draw sometimes, I have a sketchbook, I guess it's not the same.\" I said quietly. I felt stupid for bringing it to her attention.\n\nShe gave little reaction. \"Well, what you would be doing here is helping me transfer files onto our computers since apparently that makes more sense to everyone else.\" She informed me.\n\n\"Sure, that shouldn't be difficult.\" I said easily. \"Though if it's everything in this office it will take time.\"\n\n\"There's also a storage room in the back full of boxes.\" She gave me a level gaze.\n\n\"That's no problem, just take even more time.\" I shrugged.\n\n\"You don't have any law enforcement background do you?\" She asked, folding her hands on her desk, she leaned forward expectantly.\n\n\"Uh, no, I don't.\" I admitted.\n\n\"Pity.\" She frowned slightly. \"There will be a lot of jargon in much of this that you won't understand and I don't have time to explain it to you. The whole reason I need an assistant is because of how busy we are here, and understaffed.\"\n\n\"Isn't the reason because the reports weren't handled by device and input into your computers at the time they were written?\" It wasn't until after I had said it that I realized it sounded like I was openly insulting her.\n\nChief Holden set her jaw and leaned back in her chair. \"Maybe so, Cheyne.\"\n\n\"Sorry!\" I said. \"I didn't mean to be rude, I was just thinking out loud!\" I was hot with embarrassment.\n\n\"I appreciate honesty, I also appreciate your apology.\" She remarked. \"In case you were wondering, this interview isn't going well.\"\n\nI let out a sigh. \"I know. I don't know why Deacon was pushing so hard for this.\"\n\nShe tapped her fingers together thoughtfully. \"Well, it's fortunate that he did, young man. You can have the job, until you screw it up, if you want it.\"\n\n\"I'm sorry?\" I was incredulous.\n\n\"In all my years I've never met anyone with better instincts than Henry Deacon.\" Holden explained. \"When he said you'd be perfect for the job, I was skeptical, since you don't have the background, but I trust him, so, you can start next week. I'll have to get another desk moved in, set you up with a console.\" "
    ],
    "authorname": "Dudebulge",
    "tags": [
        "gay drama",
        "gay science fiction",
        "gay sci-fi",
        "gay rimjob",
        "rimjob",
        "science fiction",
        "prostitute",
        "alien11111",
        "sci-fi",
        "ganymede"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/ganymede-station-pt-01"
}