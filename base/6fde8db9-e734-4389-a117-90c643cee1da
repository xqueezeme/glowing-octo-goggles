{
    "title": "The Sultanah Ch. 07",
    "pages": [
        "Dear Reader, thank you so much for reading this story. It has taken nearly a year of my writing life to get the whole thing finished. This is Chapter 7 of 14 chapters and the total is over 250,000 words. It is my Dirk Diggler/Jack Horner act of hubris: my attempt to write an erotic adventure story that pulls you in with a story you want to read, even when there isn't any sex going on (though there is a lot of sex. Crazy, weird, fun sex). It is the most ambitious piece of erotic fiction I have ever attempted. So I hope you enjoy it.\n\nWith that said, this book is not for everyone. It will be too long for many people (no shame in that, it is a big time investment). Some of the sex scenes are intense and include themes like hermaphroditism, non-consensual activity, incest, etc. For some people, that will likely be the appeal. In fact, while this story is definitely not for everyone, I think for a select group of people this story will essentially have everything you could ever ask for. So if that is you, congratulations, you found that thing you have been searching for. You can skip ahead to the sex and I won't be offended, but I think this story is more than the sum of its parts. If you read this whole story, you will not be disappointed. \n\nIn Chapter 1, our main character, Princess Varis, finds that her father has died and that, by virtue of the fact that she is a hermaphrodite and can father a child, she is now the Sultanah. In Chapter 2, Varis unearthed a conspiracy to destroy her Empire led by Rahip, the Cardinal of the \"New Religion\" and later she received her coronation. In Chapter 3, Varis humiliated the New Religion and raised the morale of her besieged people. In Chapter 4, Varis lifted the siege through a daring midnight raid. In Chapter 5, Varis survived an assassination attempt and visited her harem. In Chapter 6, Varis faced a challenge to her authority and seduced a noblewoman to maintain it.\n\nSome recurring characters you might want by name are Varis (the Sultanah and narrator), Cin (the head priestess of Gunes), Arkadas (Varis' friend and servant), Kardes (Varis' older sister), Nislani (Varis' younger sister), Rahip (a Cardinal of the 'new religion'), Duke Hain (an important lord opposing Varis), Lord Sadik (a minor lord who has spoken in support of Varis); King Sican (the leader of Dusman, a rival kingdom), Prince Lider (Sican's son); King K\u00f6yl\u00fc (the leader of Temsilci, a rival kingdom); Agiz and Got (Subordinate Sun Priestesses); Saygili (Varis' guard); Soyguncu (a pickpocket and spy for Varis); Tutuklu (the head concubine of the harem); Kukla (a noblewoman). Further, Gunes is the name of the Sun God, Tanri is the name of the 'new god.' The city where the story is set is \u015eehir in the country of \u00dclke and the Empire of B\u00fct\u00fcn D\u00fcnya. If you need more...reread the earlier chapters.\n\nPlease, please, please, please, please tell me what you think after you read this. I put an embarrassing amount of work into this and I want to know what you think. Especially if it is good things.\n\n*****\n\nPart IV: Breaking the Stranglehold\n\nChapter 7: The Body of the Empire\n\n\"Sultanah, please we must rest!\" a voice said from behind me. I turned quickly and placed my finger to my lips, unable to hide my annoyance with the source of the complaint. We were traveling on a narrow forest path near dusk, our horses traveling in single file. The forest path was flanked on either side by steep, wooded hills. I had no military training and was certainly no expert, but even I could tell we were in a prime location for an ambush.\n\n\"It is getting late,\" another man behind said, in a whisper. Saygili and his top two lieutenants were the only soldiers ahead of me. He turned and looked at me, shrugging. I knew that he was at least as annoyed as I was with the pace and tenor of this expedition.\n\nWe had set out from \u015eehir almost a week earlier under cover of night and with the highest hopes. The goal of our expeditionary force was to find raiders from Dusman and engage them in battle. Since the collapse of King Sican's siege, many professional soldiers had stayed behind to keep pressure on my Empire. They worked in small bands and seemed to have no interest in taking or holding territory. They sought only to disrupt trade and make life miserable for my subjects who lived outside the protective walls of the city. They posed no existential threat to B\u00fct\u00fcn D\u00fcnya on their own, by they were weakening us a little each day. They were severely limiting food entering the city, which would leave us with few, if any, reserves when King Sican returned to resume his siege with new levies.\n\nAll of our various efforts at finding ways around the raiders had gone nowhere. The various alternative paths that Soygyncu had skillfully and bravely mapped out were rejected by merchants for various reasons. In fact, the attacks were getting worse. The cavalry from Dusman was becoming wealthy from attacking villages outside of \u015eehir and sexually sated by taking scores of peasant women against their will. This kind of activity attracted mercenaries and other unsavory types, eager to join in the plunder. That meant that even if we could avoid them now, the problem was only going to get worse. \n\nThe only alternative to avoiding the raiders was taking them out. But this looked like it might be even more difficult. About a month after Lord Sadik was elected chancellor on a 3-2 vote (to the astonishment of nearly everyone), the Executive Assembly had issued a report estimating that there were no fewer than 15 armed cavalry groups within 20 miles of \u015eehir and that they varied in size from 15-25 soldiers a piece. The total number was estimated at 315 armed men. I feared that this considerably under counted the total number. The report also listed the Empire's mounted forces, which consisted of the three members of the city guards. On the other hand, the Peers had considerable numbers of horsemen at their disposal. Not counting the actual Peers themselves, lesser lords and common mounted soldiers numbered close to 600 men. The issue, of course, was that I had no right to these men and could only use them if their Lords permitted. \n\nSaygili, as Constable of \u015eehir, was present in the Executive Assembly chamber when the report was read aloud by Sir Sak\u015fak\u00e7\u0131 (who had insisted on holding the title Executive Speaker, an office he invented. I wondered what Kukla thought of that.). Having heard the report, Saygili had made a suggestion. He offered, as one of the three members of the guard with a horse, to lead an expeditionary force. The force would not need to number even close to the 315 armed men present estimated in the field. If he could get around 65 men, he would vastly outnumber enemy troops as he found them in squads of 15-25. If he could manage to find and destroy even a few of the squads, it would become too dangerous to keep them in the field. They would return to Dusman.\n\nI, of course, wholeheartedly endorsed this plan. I had come to trust Saygili's instincts. If he was not a brilliant soldier, he was at least determined and loyal. This seemed the perfect task. The only problem was getting access to 62 additional soldiers. No one seemed willing to offer any men. Mounted troops were highly trained and exceptionally expensive. Even Loyalists were afraid that sending out troops would only result in a major loss in investment. Lord Sadik offered a handful of soldiers and several other Loyalists added one or two. In the end, Saygili's force amounted to no more than 40 men, hardly the overwhelming number needed to put his plan into action.\n\nFinally, I made a momentous decision. Above the objections of Cin, Kardes, Arkadas and Saygili, I promised that I would accompany the soldiers on their mission. Soldiers who knew that I was out in the field would fight harder. Some, because they loved and respected me. More, because they recognized that I controlled an immense amount of wealth and would be able to reward them handsomely if I witnessed any acts of bravery. Further, I knew from my experience during the siege that if I went with the troopers, I would be given credit for any successes we had. However, I promised I would only go if I could raise 70 mounted troops. Several more Loyalists contributed troops. More importantly, several shrewd Collaborationists, hoping I would die on the mission, sent enough men to ensure we reached the requisite 70 but no more. \n\nI assured Cin that I would keep these Collaborationist men split up amongst the loyal troops and sleep as far from them as possible. I avoided my sister and my friend, not wanting to hear their objections in private. Instead, I asked Soyguncu to go into my chambers, collect my clothing, and fetch me a horse. And so it was that the next morning, before news could spread, I left the city with my small force.\n\nFrom that point forward, nothing had gone right. We moved slowly, despite the small size of our company. The mounted troops we had were used to posing handsomely in their expensive armor for ladies at court, not tracking enemies through rough terrain. Or trying to track, at least. We have extreme difficulty finding any of our quarry. We would stumble into burnt out villages days after an attack and find traumatized citizens (who loved their Sultanah) trying to come to terms with their loss. They would point in the direction their attackers had left, but the trail would already be cold. We rapidly became low on food and were forced to forage from the country side, taking scarce food from people already scarred by war.\n\nFinally, four days into our expedition, we encountered an enemy unit. We had no so much tracked them as happened to run into as we approached a bridge from opposite directions. Our scouts had seen 20 enemy soldiers approaching the bridge through the forest. Rather than returning and allowing Saygili to plan an ambush, they had blown their horns, indicating an attack was appropriate. I had tried to hold the men back, but they were so excited to finally find an enemy that they charged.\n\nThe enemy had superior discipline. Rather than attempting to cross or trying to run, the raiders massed on the end of the bridge. By doing so, they created a bottleneck on the road. They essentially capped the bridge and prevented my troopers from crossing. In so doing, they turned Saygili's strategy back on us: they eliminated the strength of our numbers. Our troops backed up onto the bridge. Worse, pressure from behind pushed the front ranks directly into the swords and pikes on our enemies. \n\nLuckily, I suppose, my soldiers were so poorly prepared for battle that it did not take long for them to break and run. Only five soldiers, all in the very front rank on the bridge, were injured. Two died of their injuries, dropping our number to 69 (counting me). The enemy suffered no losses. However, once my troops returned to me on the far side of the bridge, they could not advance. Our numbers were too great. Essentially there was a stalemate and we both slinked off in the night, avoiding further engagement.\n\nThe defeat had absolutely destroyed the morale of my troops. Whereas they had started overly confident and almost buoyant, they now seemed completely listless. It was not the death of their comrades (no one, apparently, was very close) but the crushing of their egos that seemed to destroy them. Now we were moping around the countryside at a snail's pace. We were tracking several different groups of raiders but we did not seem to be getting any closer to any of them. Worse yet, the men seemed frightened about the possibility of another engagement.\n\nNow, nearly a week in, we were slowly making our way through the forest and, despite the fact that the sun had not yet set, the troopers were begging for a rest. Saygili and his two fellow guards were likely willing to push on, but we were vastly outnumbered by complainers. We had already discussed the possibility of being abandoned, or worse, by the noble troops and we had reasoned that it was best not to antagonize them.\n\n\"We cannot stop here,\" I hissed back, \"We are surrounded by high ground on either side. The next time we reach a plain or clearing we will stop for the evening.\" The men grumbled something about this, by they seemed to realize that, in reality, they had won. \n\nI slumped down on my horse and kept my eyes down. My morale was starting to flag as well. I had grown tired of exhorting the men to work harder and to be brave. I was losing faith in the success of the mission. In fact, I was considering returning now to the city. If I received all of the credit for successfully lifting the siege, what would be my share of the blame for failing to capture any raiders? Maybe it wouldn't matter; maybe my troopers would abandon me to my fate forty miles from the city.\n\n\"Fuck they are on us!\" one of the soldier's shrilly cried behind me.\n\n\"Up on the ridge!\" another screamed. I felt my blood run cold. I looked quickly to the left side, at the top of the ridge. The sun was setting in that direction and my eyes burned. But I saw no enemy on the crest. As I turned to my right I felt Saygili and the other two guards return to my side to offer me protection. I looked at the crest of the hill and for a moment I saw nothing. I felt my heart slow slightly; it had been a false alarm. Then, out of the corner of my eye, I saw something small and white moving on the side of the hill. The first of many soldiers? Once again on edge, I turned and looked.\n\nFor a moment, it was hard to see what was going on. My troopers were in an absolute panic. Many were trying to climb the opposite ridge on their horses. Others had turned and were running back along the path we had just traveled. The braver ones were turning toward whoever or whatever was climbing done the steep Western slope. The forest was alive with the sound of near panicked screaming and the various metallic sounds of bouncing swords, armor, and horseshoes. Finally, through the tumult I was finally able to see what had caused the commotion. Instantly my body and mind grew calm. In fact, my former fear was replaced with rage and embarrassment.\n\n\"Settle down you fucking fools,\" I yelled as loudly I could above the din. Some men near me, shocked by my language, go a hold of themselves. But there was still a large amount of commotion in the forest. I placed my hands in a cone around my lips, \"Damn you cowards, it is nothing but a fucking girl,\" I screamed out so loudly that my voice cracked slightly. In just an instant, the tumult came to an end. The horses stopped stamping and swords were hastily returned to sheaths. Deadly silence fell over the forest. Half of the soldiers (many quite a ways down the path) turned and looked at me with sheepish looks on their faces. The remaining soldiers were already looking at the girl.\n\nShe was a thin slip of a peasant girl, though undeniably beautiful. Like most peasant girls, she was shorter than most noble woman, probably only 5'0. She had very long, dark hair that, at the time, looked quite wild. She had very large, innocent brown eyes with long lashes. Her nose and ears were quite small in a way that made her eyes and red, sensual lips look larger. She was very thin with small breasts, a narrow waist, and a small round butt. Her hips flared slightly, more girlish than womanly. She had small, bare feet. \n\nAt the time she was wearing an unsightly collection of rags and nothing more. It was apparent after a moment of observation that she had once been wearing and simple, yet elegant, white dress that fell to about her knees, accentuated her slim frame, and was supported by two thin straps over the shoulder. The dress had been torn completely around the bottom so that it was ragged and uneven at the hem and barely fell to cover her cunny and her bottom. The dress itself was caked in an orange dirt and torn in at least a dozen places, exposing her youthful skin. Most dramatically, the thin strip of material holding the dress over her left shoulder was torn away entire. The flap of fabric covering her chest was flopped forward, exposing a firm young breast with a small, brownish-red nipple.\n\nIt took a moment for the troopers to fully recognize what was happening. The girl's eyes looked almost blank and she continued to move awkwardly down the side of the hill apparently oblivious to the chaos she had briefly caused. After a moment, there was some nervous laughter.\n\n\"You fucking women, running from a little girl!\" one trooper yelled. I noted that his voice seemed to come from a slight distance and I wondered whether he was, perhaps, covering for his own flight. I smiled at this, but I felt my pulse quicken at the next outburst.\n\n\"I didn't fucking run,\" a voice called, just a few feet from the girl, \"The slut belongs to me!\" I heard the man's horse start to make in the girl's direction.\n\n\"Not so fast, I saw her first!\" a closer voice replied.\n\n\"I haven't had a piece in weeks!\" Still another soldier claimed. Then, once again, there was tumult. Except this time, rather than running from the girl, everyone was heading in her direction. Angry words were exchanged as horses bumped into one another and men were knocked from their horses. Horses slipped up the sides of the steep hill as the girl began to move closer to the crowd, seemingly oblivious.\n\n\"Form ranks damn you!\" Saygili cried over the noise of the crowd. But whatever military discipline the soldiers may have once had was completely dissipated now. Some men had broken out into fighting, less over a desire to have the first opportunity to rape the young girl, but because they were scared and tired and wanted to take it out on someone. But whoever did reach the girl would claim a victory and would want to take the spoils of war. That man would get the ultimate prize in transferring his frustration to someone innocent and weak.\n\nI stood and watched, paralyzed by the situation. I knew this girl was no threat to us in any way and that she was in obvious distress. Further, given our location and the fact that she was barefoot indicated she lived close by and was one of my subjects. Therefore, she had my protection. I desperately wanted to offer her that protection, my heart hurt for her obvious troubles. But I also knew I had no control over the men. If I tried to assert myself now they might simply ignore me and demonstrate my impotence. Worse, they could turn on me. Despite the fact that Varis, the woman, felt her conscience screaming at her to act, the Sultanah waited for something to change.\n\nOne of the troopers had now managed to dismount and was climbing up the hill towards the girl. He had an almost deranged look on his face. Another soldier grabbed at his ankle but he kicked his mate in the face. Finally, he made it to the girl and grabbed harshly on her wrist, dragging her down. At that instant it was like a fog was lifted from her eyes. She looked up at the soldier holding her in a moment of disbelief. She looked around and saw the other soldiers all around her. Her eyes grew wide.\n\n\"Come here you little slut. You are too thin, I have a nice big piece of meat for you,\" the solider laughed. As soon as the words were out of his mouth, the girl's lips split. From somewhere deep inside of her, a piercing screech poured forth without warning. It did not build louder and louder toward a burst. Instead, she seemed to start in mid-scream. Her voice was high and quavering. There was an unmistakable note of sadness underlying the scream, everyone present could hear it.\n\nThe man holding the girl stumbled backward slightly, letting her go. His hands flew to his ears. Many of the other men closest to him followed suit. Farther back the noise was bearable, but heartbreaking. All of the men instantly froze, even those who were fighting their friends. Their heads turned once again to the girl, whose lungs seemed to hold limitless air to match the depth of her sorrow. Finally, her voice began to crackle. After another moment, she went silent. Her eyes rolled backwards and she collapsed in a small bundle on the ground. The echo of her voice was the only remaining sound in the forest.",
        "\"Saygili,\" I said now, my voice at a normal level carrying easily through the crowd now, \"Please collect my villager and bring her to my horse. She appears quite pathetic and weak, she reminds me of your young sister.\" I had put a lot into the sentence. I had not-so-subtly informed the soldiers that, as a peasant, the girl belonged to me. It did not matter who saw her first or any other possible justification, peasants belonged to the Sultanah. \n\nMore importantly, I had referenced a \"young sister\" that Saygili did not, in fact, possess. He came from a family of sons. He knew enough at this point not to say anything. Instead, many of the soldiers around me began to reflect on their sisters and their daughters as the word rang in their ears. Many men dropped their eyes to their feet and many others placed their foreheads in their own palms. Whatever animalistic craze had come over them in their sudden fear followed by sudden relief seemed to dissipate. The man who had grabbed the girl nearly jumped backwards.\n\nSaygili did as he was told. He quickly climbed up the side of the hill and scooped the small girl in his arms. She looked like a rag doll and I wondered if she had suffered something more than a faint. He carried her briskly down the hill and set her in gently in my saddle. He placed her in front of me straddling my horse. Her head lolled forward against the neck of my animal and looked for a moment like she would fall. I quickly wrapped my arms around her, holding her up. She felt completely limp and fragile, but I could hear her breathing. I threw a lash around her, tying her to me tightly.\n\n\"Form ranks you little shits,\" Saygili called out. This time, his orders were followed. The men silently reformed. Saygili looked at me imploringly and then at the girl. I nodded and he returned to the front of the line, \"You've all wasted enough time now. Let's get somewhere to rest.\" He urged his horse on and we all began to follow. \n\nThe girl rocked gently in the seat without stirring. She continued to breathe and eventually settled into a stable position. Closer, she looked even smaller and more beautiful than she had from a distance and I was inwardly glad that I had managed to save her. Of course, she had largely saved herself with her scream and I had nearly allowed her to come to harm. But I had done what I could, when I could. The role of a Sultanah.\n\nAbout half an hour later, we excited the thick forest and entered onto a wide plain with a small creek running through the middle of it. On the banks of the creek was a moderate sized village of two dozen hovels with a large meeting house in the middle. Surprisingly for a village of that size, it appeared to be entirely intact. There was no indication that Dusman raiders had bothered anyone. They were apparently not even on guard, as my troopers entered the valley without the slightest alarm from the village. Still, there were no signs of enemy troops and the area felt very safe.\n\n\"You men, camp down near the creek. The grass is dry, so keep your fires carefully,\" Saygili said. It was traditional when reaching a village for the men to camp outside and for the Sultan to stay in a place of honor. We had not yet reached a settlement where a standing hovel remained. Therefore, I spent every night in the bush. I was inordinately excited by the prospect of a bed and had to suppress a smile. The men grumbled and then made their way over toward the creek. Saygili, his lieutenants, and I turned and headed off toward the village.\n\nWe did not speak as we went forward, Saygili had a thoughtful look on his face and I decided to give my captain a chance to work out whatever he was thinking. The girl continued to bounce limply on my saddle and I wondered whether she had come from this village. A few moments later we moved our horses past the first of the hovels in the village. They were simple buildings of clod brick and thatched roof. They were a bit larger than they seemed, probably large enough to hold several families a piece. There were no windows cut in the walls and cook fires sent gray smoke up from holes cut in the centers of each roof. The roads between the hovels, such as they were, were simply dirt affairs that likely turned to mush in the rain. It was far beyond anything in my experience, worse than the slums in the city. But it was a paradise by comparisons to the burned down ruins we had experienced so far. We could hear people moving about in the village but did not see them yet. Finally, we entered the main square and stopped directly in front of the town hall.\n\nFor the most part the main square was empty. Calling it a square gave it more dignity that it deserved. It was a large muddy area directly in front of the town hall. Many homes opened up on the square, presumably the homes of the town's most important people. In fact, one of those important people was in the square when we arrived; a middle aged man nodding off on a bench next to the town hall door. His arms were crossed on his narrow chest and his head was drooping.\n\nIn the past, villages in B\u00fct\u00fcn D\u00fcnya were administered by Imperial Clerks. Those clerks wore large red hats to denote their status. Many town mayors continued to wear the hat, despite the fact that they no longer answered directly to the Empire. This man wore one such hat, faded and cracked.\n\nWe waited for a moment for the man to recognize our presence. Instead, his head began to droop more deeply and I heard a snore. Saygili grunted and dug his heel into his horse's side. The horse gave a low groan and the man's eyes shot open instantly. He turned and looked at us.\n\n\"Hey what the fuck kind of thing is that goddammit?\" He asked angrily. He was shaking his head to the side annoyed. Then he recognized that armed soldiers were standing in the middle of town. \"Oh fuck, raiders...\" he said suddenly and then jumped up. He moved so quickly that his legs tangled and he fell to the ground screaming and became coated in mud.\n\n\"Shut up you idiot, we aren't raiders. If we were you'd already be dead!\" Saygili said loudly. Nonetheless the man's scream had alerted the town and in a few moments men, women, and children poured into the street. They looked alarmed and many of the men carried whatever they could find handy, mostly shovels.\n\n\"Who the fuck are you and what kind of thing is that to do to a sleeping man? With raiders all about you nearly made me shit myself...\" the mayor continued. I suppressed a smile. I could see why the people of this hamlet had selected him as their leader. \n\n\"You fool...\" Saygili began, shaking his head. My commander was one his last nerve and I decided to step in.\n\n\"I am called Varis,\" I said simply, \"Your Sultanah.\" The man's eyes grew very wide as they strafed me. I heard a loud buzz go through the crowd.\n\n\"Gunes fuck me sidewards!\" the mayor said nervously. He jumped up from his spot on the ground quickly and saluted me. Then, recognizing that this was inappropriate, he dropped down to his knees and laid his hands down flat on the ground. The other people in town followed suit, humbling themselves before me.\n\n\"That won't be necessary,\" I said dryly, \"Just show me to my quarters.\" I decided to simply act as though I had been expected. The man sat up on his knees for a moment and then bounced up quickly to his feet.\n\n\"Yes...Oh yes of course. Of course. It is my honor to welcome you to our village Sultanah. I must admit we did not expect you. Not that you aren't welcome. It is just we have never been honored with a visit from any Sultan in the history of the Empire. That is not to say we are not prepared, your quarters are ready and...\"\n\n\"Just take her in you moron,\" Saygili said.\n\n\"This way of course,\" the Mayor said, not looking at Saygili. Instead, his eyes remained on me. I could feel eyes all over the village on me. But I had long since grown used to that feeling. I did not turn or look. The best way to act before provincials was haughty and entitled. The mayor turned toward the hall and walked through the door. I dismounted easily and walked to follow the mayor. Saygili walked closely behind me.\n\n\"Grab the peasant girl,\" I said, \"I will allow her to sleep on the floor in the chamber.\" Saygili followed my instructions \n\nInside the chamber was very dark, the only light coming through the smoke hole cut in the center of the thatch roof. I could barely make out the chamber in the growing darkness. It was simply a long, empty hall with mats on the floor for sitting. People in the town would meet regularly here to discuss pressing matters. My chamber (one such chamber was kept in all town halls) was located in the back of the hall. No one was allowed to enter the chamber except for the mayor and for the Sultanah's retinue. The mayor was only allowed to enter once a day to ensure that the room was ready in case the Sultanah arrived.\n\nAs we walked through the chamber, the mayor continued to chatter on nervously about the village and the possibility of raiders. I barely listened. I could sense the bed in front of me and wanted nothing more than to sleep. Saygili walked slightly behind me, easily carrying the young peasant girl. Finally we crossed to the back of the long room. A narrow door opened up leading back into my chambers. The mayor stopped outside of it and turned. He did not look me in the eye but instead reverentially bowed his head.\n\n\"It is not much, I admit. But I do my part, it is ready for you,\" he said nervously. I peeked my head briefly into the door. The room was lighted by a single torch hanging from the wall. It was otherwise without adornment on the walls. There was a large round bed on the floor taking up most of the space. The blankets appeared clean. There was a small table in the corner with an earthenware jug of wine and crude cups. It was simple, but it contained no mopey soldiers. It was perfect. \n\n\"You have done well,\" I said the mayor. He beamed excitedly. He opened his mouth to speak but I heard the sound of low moaning instead. I turned towards Saygili. The girl was stirring slightly in his arms, though her eyes were still closed, \"Put her on my bed. She can gain her senses there.\" Saygili nodded and moved her inside the door. The mayor watched the girl pass (her breast, after all, was still exposed).\n\n\"These are wicked days,\" the mayor said, shaking his head.\n\n\"I nearly forgot,\" I said, \"Does that girl come from your village?\" I asked. Saygili returned to my side, the girl safely placed in the bed. The mayor shook his head.\n\n\"No, she is not one of ours,\" he said. I figured as much. The mayor furrowed his brow slightly, \"Though, I must say I recognize her.\" \n\n\"How?\"\n\n\"I have seen her. In the next village over to the West. I occasionally trade with the mayor there. I recognize her. The miller's daughter,\" he clucked his tongue and looked genuinely upset, as though he just realized something terrible, \"I suppose they are not well.\"\n\n\"Due west?\" Saygili asked, \"Or south by southwest?\" I turned to him, searching his face for some sort of hint. What an odd question. He looked nearly white and his eyes looked slightly wild.\n\n\"You have the right of it, south by southwest it is I suppose,\" the Mayor said. Saygili grew silent, once again calculating. I had to find out what he was concerned about.\n\n\"How far away as the crow flies?\" Saygili asked after a pregnant pause.\n\n\"Seven miles maybe.\"\n\nThank you for your assistance,\" I said quickly, \"I am exceedingly tired. Please leave me now.\" The mayor jumped slightly. He looked at me searchingly, apparently trying to figure out if he had somehow offered an offense. I smiled at him dutifully and nodded.\n\n\"Oh yes, of course. I am sorry,\" he said. He then turned and moved quickly towards the door. I should say he was nearly running. Saygili turned as well, his countenance still quote troubled.\n\n\"Wait,\" I said, looking at my captain meaningfully. We both turned and watched as the mayor walked out of the chamber. I waited a few more moments to ensure he was out of earshot. Then I turned to Saygili.\n\n\"What is the significance of south by southwest? How did you know that?\" I asked, in a hushed tone. Saygili looked nervous, \"What are you keeping from me?\"\n\n\"Oh nothing!\" Saygili said quickly, \"Or, at least I am not going to keep anything from you. I never would Sultanah. It is just...I wanted to confirm on the map my suspicion before I brought anything to you.\" I trusted Saygili implicitly and took him at his word.\n\n\"Well tell me now nonetheless, it seems you are at least relatively sure of the situation,\" I said. Saygili nodded slowly.\n\n\"We have been tracking several groups of enemy troopers the last few days,\" he said.\n\n\"I am aware.\"\n\n\"Yes Sultanah. Well, I have also been keeping track of burned out villages. Their locations and the dates in which they are burned. I have noticed a pattern,\" Saygili stopped for a moment and took a large breath, \"The villages being destroyed in this area...I have been matching destroyed village to the raider group that I believe caused it. There are various hints based on the method of destruction used, the size of groups reported by survivors, even hoof prints offer some confirmation...\"\n\n\"What is the pattern, spit it out!\" I said. I could tell from his demeanor that he was not going to give me good news. He had not determined a way to track our enemies more effectively. I was growing nervous.\n\n\"If I had the map, I could show you,\" he started, \"But...they are converging. The raider groups are hitting villages closer and closer together. Coming from all directions to a centralized area. I think at least 12 groups moving.\"\n\n\"Where are they converging?\" I asked, but I already knew the answer.\n\n\"They have been funneling us in this direction all week, letting us get close and then pulling us in this direction. The stand at the bridge...that kept us moving here. They know we are out here. Maybe they even know that you are out here. And they are concentrating their numbers here. In this village.\" I felt a chill but tried not to show my concern. This was worse than I expected. We were not just facing a failed mission. We were facing destruction. We have only 69 active soldiers with terrible morale and surprisingly poor fighting ability. If we faced several hundred crack raiders...we would be dead. I ran my hand through my hair loosely and looked at Saygili.\n\n\"They are only seven miles away...\" I said, remembering the location of the girl's village. Saygili nodded.\n\n\"The closest group, I think,\" he said, \"Farther groups won't get here until sometime tomorrow, probably midday. I imagine they will wait until they are all massed.\" What was I to do? There was no way to fight. We had to figure out a way to run.\n\n\"Are they coming from all sides?\" I asked, \"Are we completely surrounded. Is there any gap in the noose?\" Saygili shrugged as though he had been considering the question for some time.\n\n\"There still is now. They are too spread out. There are several ways we could go. I have been trying to figure out the areas where we would be most likely to avoid detection. If we are quiet and lucky, we can slip through and they will converge on an empty village,\" Saygili said.\n\n\"Not empty,\" I said, looking toward the main door. Saygili looked as well. I thought about the villagers standing outside at that very moment, gossiping about me excitedly.\n\n\"No,\" Saygili agreed, \"They will die when we go in the morning. The raiders will unleash their fury on them and attempt to find out where we are going. But if we stay, we will die and they will fall with us. They will face the enemy's fury for daring to oppose them. This village is already dead and burned. I could see in the mayor's eyes, he already knew it.\" Saygili shrugged helplessly. I knew that everything he said was correct and I sighed. What good could we do for these people? If we stayed alive at least we might avenge them.\n\n\"Should we ready the men to leave?\" I asked uncertainly. Saygili snorted.\n\n\"Those lazy bastards would mutiny if we roused them now. Besides, it is getting dark and we would get lost in the woods attempting to slip between enemy troops.\"\n\n\"Now that I think of it,\" I continued, \"Leaving now would alert the townspeople that something was wrong. We can't afford that. They might try to follow us, slow us down.\" I felt an intense sensation of guilt as I said this, but I shook my head and reminded myself that there was no other way.\n\n\"We will wake before first light and slip out quietly. The enemy will still be getting into formation and the village will be sleeping,\" Saygili said.\n\n\"I agree. That will be the plan,\" I said solemnly, \"Tell as few men as possible what we intend, I don't want word getting out. Set several watchmen so we do not sleep in. And get some rest yourself, we will need all the cunning we can muster come morning.\"\n\n\"As you wish Sultanah,\" Saygili said quietly. He bowed his head in obedience and turned to walk from the town hall. I watched him as he walked, his shoulders hunched slightly in thought or perhaps defeat. As he reached the door leading outside I placed my head in my hands. How had this all gone so poorly so quickly? And was I doing the right thing? Could I really leave without at least warning these people of what would come? So many questions that I could not begin to answer.\n\nI sighed deeply and turned toward my quarters. I looked at the bed, barely noticing that the young girl was still lying under the rough covers. I suddenly realized how exhausted I felt. The dust from the path hung heavy on my skin and my knees felt weak. I had already given my orders. The plan was to turn tail and run. To give up for now and return to the city. Sacrifice this town because I could not save it. I couldn't change that now. I flopped down, exhausted, onto the bed. It felt like I was asleep before my head hit the rough pillow.\n\n* * * * *\n\nI was awakened sometime later with the sensation of hands on my shoulders. As my bleary eyes opened, I felt myself being handled roughly, tossed side to side in the bed. I groaned slightly, not remembering where I was or what I was doing there. I felt a hand grab at my face slightly, scratching me. I let out a surprised shriek and tried to move away from the flailing hands. \n\nThe pain focused my mind. I remembered where I was, in the obscure village town hall, sleeping in my appointed quarters. The enemy was closing in around me. From the feel of things, they had already finished closing. Saygili had miscalculated, the enemy had snuck into the town in the middle of the night and were capturing me now. Someone knew who I was and where I was located, I was going to be taken prisoner.\n\nWhatever paralysis had frozen me upon waking quickly dissipated. I felt a shot of adrenaline race through my heart and my skin began to tingle all over. I started to move. Not with any plan or goal, but simply to flail away. I thought of the assassins who had once climbed in through my window and tried to kill Arkadas. I could almost sense the knife at my throat. I tried to call out, but I felt a forearm against my neck. I began to kick my legs and to toss myself around on the bed. I began to feel panic rising in my ears.\n\nWhile I was thrashing and struggling, I gradually became aware of a sound near me. My attacker was speaking. At first, I was too scared to tell exactly the content of the words. But, after a few moments, I began to hear the sound of the voice, if not the message. The voice of my attacker why high, tinny, almost scared. It sounded like a small wounded animal. At first I felt confusion, wondering what strange creature had been sent to kill me. But my confusion slowed my panic and I began to hear the words for what they were.\n\n\"Where am I? How did I get here? What did you do to them?\" And various other, similar questions. Finally, I felt the fear drain from me entirely. I sensed the small size of the hands grasping me and I turned towards the source of the words. The girl in the tattered white dress. She had apparently awakened and had been trying to attack me. Or maybe just rouse me. I stopped all struggling and took a deep breath. That, however, was difficult because the girl was still attacking me.",
        "\"Move your arm!\" I gurgled finally, \"I will explain everything, just stop.\" I could barely understand what I was saying, but the girl seemed to sense that I had relaxed. I was no longer fleeing from her and she wanted to know what I said. Her forearm eased back from my throat and I heard her breathing quietly.\n\n\"Thank you,\" I said.\n\n\"How did I get here? Where am I? Are you one of the raiders from Dusman? Where are you taking me? There are women in the raiders? Why did you do that? Oh Gunes!\" The girl blurted all at once. I slowly pulled myself up into a sitting position on the bed. The girl's arms had become weak and they seemed to slip off of me now. She placed her face in her hands and cried.\n\n\"Please calm yourself and remain quiet,\" I said, \"I will explain whatever I can, but you must get a hold of yourself.\" I said. The girl's breath hitched. She looked at me coolly, but nodded her head. I took a deep breath and quickly explained where we had found her and where, generally, we had taken her. I did not know the name of the village I was in, but I explained it was apparently 7 miles from where she lived. I said that she had been unconscious and had allowed her to sleep in my bed. She looked confused as I spoke.\n\n\"Are you here to destroy this village too? Will you burn it to the ground in the morning? Will you kill everyone?\" she asked. Her words poured forth bitterly and tear raised in her eyes as she spoke. Her body was shaking with rage.\n\n\"Destroy?\" I said shaking my head, 'No...No of course not. We are not raiders from Dusman.\"\n\n\"Well who in Gunes name are you to be here? Mercenaries? My family once had money, for ransom. If you have not already stolen it,\" she said, looking around nervously. It was clear that she was still very much on edge, trying to figure out what had happened to her. But her anger was also apparent.\n\n\"I am Sultanah Varis, I bring a contingent of soldiers from \u015eehir to rout the raiders,\" I said, but I felt sick as I spoke. Whatever the goal had once been, I now intended to participate in a rout. Regardless, the girl's eyes grew wide.\n\n\"Sultanah?\" she asked, her eyes strafing me and her mouth hanging open.\n\n\"That is correct,\" I said. For a brief moment a hint of a smile flashed across her face, then an expression of mortification.\n\n\"Oh Gunes, what have I done?\" she asked herself. Instantly she threw her head forward onto the bed, holding her hands out in front of her. She pressed her forehead into the blankets, her body was shaking all over, \"Forgive me Sultanah, for the offense I have given you. I did not know it was you when I attacked. I thought you were an enemy. I apologize for the familiar way in which I have spoken to you...I have never been taught how to speak to one so...exalted. Please forgive me, oh Gunes...\" All the while she spoke, I tried to calm her, patting her gently on the back.\n\n\"I took no offense, I brought you here. I knew that you were ignorant of my identity and reasonably scared,\" I said, trying to soothe her. Finally, she began to calm herself. I could still hear her crying, but her breathing calmer.\n\n\"I apologize nonetheless. Please, allow me to leave this lace and I will never bother you again,\" she said, starting to rise slightly, with her head still bowed.\n\n\"No!' I ordered and she stopped moving instantly, \"You are not permitted to leave.\"\n\n\"Whatever your wish Sultanah. You may take my life for the offense I gave you. I no longer desire it anyway,\" she said, her body shaking slightly. I let out a soft sigh and placed my hand girl's arm. She flinched slightly.\n\n\"I do not desire your death,\" I said calmly, \"I simply did not want you to run off. I want you to sit up, I want you to speak to me calmly. Speak to me familiarly, I will not be offended.\" The girl stayed cowering for a moment, as if she was not sure if this was some sort of trick. She turned her head to the side and let out a low breath.\n\n\"Perhaps I am already dead,\" she said more to herself than to me, \"nothing this day has felt real.\"\n\n\"Then you are in no danger from me,\" I said, \"Sit up, look me in the eye, tell me your name, and then tell me what happened to you this day? What has caused this turmoil in you?\" The girl's body went stiff for a moment and I heard a ragged, crying breath. She sat up slowly, onto her knees next to me. Her hair was slightly disheveled and her breast was still exposed in her dress, but she did not seem to notice it. She looked forward with glassy eyes, seemingly unsure of what to do next.\n\n\"That is an order from your Sultanah,\" I said calmly. If I had known then the story I had just ordered her to relate, I would not have forced the issue. Nonetheless, the girl nodded slowly and turned towards me. She was still shaking but her voice, as she spoke, sounded less high-pitched and terrified. In fact, she seemed almost mechanical in her speech.\n\n\"My name is M\u00fclteci, and I awoke this morning expecting a double celebration. Today was the occasion of my 19th birthday and, as decided in the contract my family had signed with the Mayor, it was to be my wedding day,\" she started. As she spoke this, she hung her head slightly and shrugged her shoulders. It seemed only the knowledge that I had ordered her to speak kept her speaking.\n\n\"My family, while somewhat prosperous, had made an exceptionally good bargain in marrying their eldest daughter to the son of the Mayor. He might have married a wealthier woman, a woman with property. But K\u0131r\u0131k and I had been friends since childhood. He believed me to be the most beautiful girl in the village. He had demanded that his father arrange a marriage to me when we were still children. We had never wavered in our dedication to one another.\n\n\"Many girls with marriage contracts have, at best, mixed feelings on the day of their wedding. I was elated. I felt as though I had been waiting for that day my entire life. I awoke early and my mother braided my hair. She was happy as well. She was excited for grandchildren and for the prestige that would come with my match. She had spent months sewing me a beautiful white dress for the occasion, far finer than anything I had ever owned before,\" as she said this M\u00fclteci looked down at the tattered remains of her clothes. A tear fell from her eye and landed on the grayed fabric. She wiped the tear away with her thumb, showing the bright white color that it had once possessed. She shook her head and continued.\n\n\"Before donning my dress, a traditional family breakfast was prepared. My father had slaughtered a goat the previous day. He was so proud of me, I had always been his favorite. And he toasted me shamelessly while we ate. My younger brother and two younger sisters seemed infected by my parent's enthusiasm. Whatever rivalries we had in the past had slipped away as we enjoyed the bittersweet moment as we ate one last meal together before I left the family to join my husband.\n\n\"After eating, my mother and sisters helped me into my dress and we exited my house. The entire village was invited to my wedding and as we emerged on the street, familiar faces surrounded me on all sides. Everyone was so excited about the party and the women complimented me on my beauty. The men congratulated my parents on the match they had negotiated. I floated on air through the narrow streets of town. Everything was decorated for the wedding. Every home held a wreath and the streets were strewn with flowers. As I moved toward the town hall, the people followed behind me, as was tradition. My father and mother stood at either side and my brother and sisters followed closely behind.\" M\u00fclteci seemed almost in a trance now, her voice building toward something. It was not so much that she was telling me a story, instead she was reliving it. I felt myself holding my breath, unable to do anything but absorb the intensity of her story.\n\n\"We turned into the main square in town. I could see the mayor standing by the town hall, wearing his ceremonial robes. He was smiling broadly. If he had ever wanted a 'better' match for his son, he had long since reconciled himself to me. He was a good man and his son's happiness was far more important that advancement.\n\n\"His son, my K\u0131r\u0131k, was standing by his side,\" M\u00fclteci's voice caught as she said his name, \"Was standing beside his father. He look uncomfortable in his formal clothing but excited nonetheless. He was looking down at his shoes, nervously. He must've heard the commotion as the villagers followed me into the square. His head rose. I saw his bright eyes and his knowing smile play across his face and...\" M\u00fclteci paused for a long while now. I could see the candlelight in my quarters playing across her eyes and I watched the tears slip down over her cheeks.\n\n\"And I saw the arrow pierce that smile. I watched as it emerge from his mouth, shattering the four teeth in his mouth. I watched as his eyes grew wide and blood poured from his lips. I saw him fall to the ground. No longer moving.\" Once again she paused, her shoulders shaking wildly. I could not speak, I waited for her to continue.\n\n\"It took a long time to understand what had happened. After a moment, I heard my voice scream, but it sounded like it was coming from someone else. I began to run. I ran pell mell across the square, running toward K\u0131r\u0131k. His father had already dropped to his knees next to him. But before I could take more than few steps out towards my fallen fianc\u00e9, they were upon us.\n\n\"Riders seemed to come from every direction. Their swords and clubs were drawn and they descended on us all at once. I heard the clatter of hooves and the laughs of evil men. Then I heard the screams. We had all been massed together for the wedding. It seemed like we had acted purposefully, to make it easy for them. Whatever those raiders did, wherever they thrust their blades, they seemed to hit someone. I saw people falling to the ground around me, their guts spilled by sharpened blade. I turn around quickly. In time to see my mother and father killed by different men at nearly the same moment. My father's throat was cut and he fell forward quickly. My mother was not as lucky. A blade pierced her stomach and she fell forward into the dirt, screaming wildly. A horse trampled her head underfoot,\" As M\u00fclteci spoke, she seemed to withdraw inside of herself.\n\n\"My siblings...\" she paused, \"I never saw what happened to them. I pray to Gunes that they are still alive. I wanted to run to them. Or to my fianc\u00e9. But all was confusion then. Horses were everywhere and the ground grew churned and muddy from the free flowing blood and dirt churned by hooves. Without thought, I began to run. I did not know where I was going, I was just trying to leave the village. The panic...I couldn't even think. I was thrown to the ground several times, but I kept rising and trying to escape. I saw friends and neighbors falling dead all around me.\n\n\"After a short time, I made my way out of the square and into the streets beyond. My eyes began to burn and my vision became blurred. I felt heat all around me. I realized that the village was being razed. The raiders were fanning out in the streets behind me, so I tried to run faster. \n\n\"I reached the edge of the village and made my way across a field leading towards the woods. I knew the woods from childhood, if I could make it there I could elude anyone. But just as I reached the edge of the forest, I felt a hand slap against my back. It was a man on horseback. He hit me at full speed and I fell on my stomach onto the ground. The man was a leader of a squad and several other horsemen were standing with him. He dismounted quickly while I was still disoriented, trying to rise again. The other men followed his lead.\n\n\"I remember the leader, the man who knocked me down, said something lewd about my white dress. The dress my mother had made for me,\" M\u00fclteci spoke in a way that indicated she remembered what the man had said, but could not bring herself to repeat it.\n\n\"While I was still dazed the man jumped on me. He grabbed at my ankles, pinning me to the ground. The other men ran to me as well. I felt their hands on my arms and stomach. They tore at my dress and laughed as I screamed. I tried to wiggle away, but the men were too strong. I could smell the alcohol on their breath and I knew they were drunk. They traded jokes back and forth and after a moment, while I began to wail, they started to pull their cocks from their trousers. I felt panic rising inside of me and vomited in the grass next to the men. Rather than slowing them, this seemed to entice them further. They began to pull my legs apart.\n\n\"I do not know how it happened, but they began to argue over who were rape me first. The captain claimed some right by virtue of his leadership. A larger man argued that he had not been given the opportunity to 'have' any women during their previous raid. The drunk men began to physically fight with one another. Pushing and shoving. Other men released me, their hard cocks bouncing obscenely, and they moved towards the fight, to break it up. The men on both of my arms released me. \n\n\"There remained only one man crouching against one of my legs. He held me tightly so that I could not leave, but his eyes were averted. He was watching the fight. In fact, he was laughing at the altercation. I do not know where the impulse came from. But as the men began to pull the fighting soldiers apart, I crossed my free leg across my body and kicked the remaining man on his erect cock. He screeched loudly and moved his hands to cover his cock. But I quickly kicked again. He groaned, grabbing himself. He rolled over to the side, tears welling in his eyes. He started to roll around on the ground. He barreled into the quarreling soldiers and they all fell in a pile onto the ground, swearing and confused.\n\n\"I did not wait to see if I had any chance for escape. I simply rose and darted into the woods. I could not tell if the men chased after me or if they even noticed immediately that I had gone. Regardless, I sprinted through the underbrush, keeping to paths that I knew. Eventually, my mind went blank to everything except the impulse to keep moving. To keep moving and keep working so that I could stay alive,\" M\u00fclteci finished her story now. Her voice just sort of faded out, just as she had faded out of her wits after her ordeal. Until we found her in the woods and terrified her again.\n\nI sat on the bed next to the young bride, too overcome by the depth of her sadness and pain to think clearly. My eyes were wet and I felt stunned by the power of the girl's words. There was no doubt about her authenticity. She spoke with such fervor, I felt like I could feel see what she saw. It felt so fresh for her, a completely raw wound. In fact, it had only been a few hours earlier. M\u00fclteci's life had been destroyed while I was just a few hours march away, trying desperately to find the enemy. Now they were on their way to this village, to wreak the same horror on still more of my people.\n\nI decided at that time that M\u00fclteci's suffering was over. My soldiers could not outfight the enemy, outnumbered and dejected as they were and so I could not save this village. But I would not leave M\u00fclteci there to suffer the same fate again. If I could save this one girl from further damage, I could maybe accept the necessity of my coming flight.\n\nWithout thought, I draped my arm around M\u00fclteci's shoulders, pulling her in towards, me, hugging her close. Her skin felt slightly cool, the after-effect of the shock that had clearly ravaged her body and mind. She was still shivering slightly, and she leaned heavily into me, placing her head on my breast. I wrapped my other arm around the girl, encompassing her in what little warmth I could provide. M\u00fclteci was now sitting on her bottom on the bed and I was up on my knees, above her like a sentinel.\n\n\"I cannot begin to understand the pain that you feel,\" I whispered to her, \"As your Sultanah, I will do what I can to protect you now. I am sorry there was nothing I could do before.\" Even as the words poured from my mouth, they felt weak and insufficient. What good was my protection now? It had already failed. What good was my protection to M\u00fclteci? I could not offer it to all of my citizens, as they deserved.\n\n\"Please, just hold me now,\" M\u00fclteci said through tears, \"Part of me wondered if I would ever feel a loving touch again.\" My heart broke for her again, and I held her closer.\n\nFor a long while, we simply sat like that on the bed. I held M\u00fclteci closely and offered her comfort as a woman, because I could offer her nothing of value as a Sultanah. Eventually, her crying ceased and her tears dried. But she remained leaning against me, her body warming slightly. I felt her head turn to look up at me. I bent down to look at her, to return her gaze. Her large, brown eyes looked impossibly deep. Her mouth opened slowly and I saw a red tinge rise in her cheek.\n\n\"You are as beautiful as we were told. We heard a lot about you,\" she said significantly, \"But you are far warmer than I expected. Not at all distant or proud,\" As she spoke, her right hand slipped up and reached around to the back of my neck. She pulled me down slightly as her eyes closed. I did not even have time to react before I felt her soft, pink lips press into mine. My heart fluttered and I felt the electric feeling of a new lover's kiss. I was overwhelmed by it, allowing myself to melt into the feeling.\n\nHer kiss was virginal, but my no means chaste. She did not part her lips or expose her tongue, but she nonetheless unleashed her passion. Her soft lips moved in-expertly, but enthusiastically, against my own and I heard a low moan in her throat. Her hand was soft but firm against my neck, holding me in place. She pressed into me more forcefully, making me hold her more tightly. \n\nAfter a moment, I realized what was happening. My eyes shot open. I saw M\u00fclteci's beautiful face directly in front of me, her eyes closed in an almost prayer-like fashion. I was terribly confused and uncomfortable. I had definitely not intended this when I began comforting her. How had it happened? Had I done something that had taken advantage of this damaged 19-year old girl in her hour of need? I pulled back from her quickly, our lips breaking. M\u00fclteci's hand, for a moment, tried to hold me in place, but I pulled free.\n\n\"M\u00fclteci... I am sorry,\" I said, unsure of what the appropriate response would be. M\u00fclteci shook her head and gave me a wan smile. She leaned forward again, closing her eyes and attempting to kiss me. I placed on of my hands on her shoulder, holding her back, \"M\u00fclteci, it is not appropriate.\" I explained. I still had no idea where from this had impulse had implanted in the girl's mind, but I needed to knock it loose. \n\nA primary cause of my concern as that I could sense that my resolve was in danger. I could feel my own body reacting to her innocent beauty. Her lips were so soft, her body so small and shapely, her eyes so earnest, and her spirit so enticing. And I felt like I could provide some comfort with my touch. I knew that if I did not stop this now, I might not be able to in the future.\n\n\"I apologize, Sultanah,\" the girl said, her head dropping. Guilt at her apparent discomfort flooded me now and I rubbed her shoulder gently.\n\n\"You have done nothing wrong,\" I replied.\n\n\"It is true what everyone said,\" M\u00fclteci replied, \"Everyone in the village said that the Sultanah loves us all deeply. I thought that it was just peasant talk. But here you are, caring for me. I just felt...something just told me...It seemed right,\" She said. My guilt grew deeper. It was just a few hours now before I would ride from this place with my forces, abandoning the peasants to their fate. This thought choked me, I was unable to speak. M\u00fclteci continued.\n\n\"This night was to be my wedding night,\" she said slowly, almost entranced, \"I was so ready for that. My mother had told me everything that would happen. I believed this night I would be in the arms of one who I loved and who loved me back. I thought I would experience...\" Of course, I knew to what she was referring. My palms grew sweaty and I felt my cheeks flushing. \"A communion of love. A final, physical binding to my K\u0131r\u0131k.\"",
        "\"I cannot imagine...\" I started to console her, but she kept speaking.\n\n\"And then those men tried to take that from me. What was to be a gift to one I loved was nearly snatched from me by a gang of stinking drunks,\" she said, her lip curling. She spat onto the floor as she spoke, her anger rising in a way that it had not when she initially told the story. Her face grew somewhat florid and red, her appearance growing more beautiful. My breathing grew shallow. She turned now and looked me directly in the eye.\n\n\"No matter what happens after tonight, there will be more enemy soldiers,\" she said, \"They are everywhere. Everyone knows it. We know you are trying to stop them, but you cannot. Once I leave this place, there will be more raiders. Someday I will not be as lucky today. Someday they will take what was promised to my fianc\u00e9.\"\n\n\"That is not true, we will stop them,\" I argued, M\u00fclteci shrugged her shoulders.I felt a pang and knew her ambivalence was correct.\n\n\"Maybe. But then, maybe not. Maybe not before it is too late,\" she replied, \"I want to give myself to someone I love. But he is gone and there is no one left, save one.\"\n\n\"That will happen one day, I am sure of it,\" I said, but I was certain of no such thing.\n\n\"When will I ever have an opportunity to find another that I can love? My village...other villages the same. The whole world is falling apart, Sultanah,\" M\u00fclteci said, her voice breaking. I was no more experienced in these matters than she was, but I felt the need to offer comfort, to say the things that people always say.\n\n\"In the fullness of time, your heart will mend. The world will put itself back together. You will always love your fianc\u00e9, but there will be other loves,\" I tried to sound convincing, but knew that I failed. I didn't even know if I believed it. \n\n\"My friends and family are gone. There is only one who I love now,\" she said.\n\n\"Who do you love?\" I asked softly, not yet willing to admit to myself what she would say next. I knew there was no good answer to this question.\n\n\"Sultanah I owe you my love,\" M\u00fclteci replied. I felt icy fingers all over my skin, my nipples grew hard against the fabric of my clothing. My emotions doubled back on themselves, contradicting themselves and freezing my mind. M\u00fclteci reached up to me again, draping her hands of my neck.\n\n\"You do not have to love me in that way. An intimate love is different form the love you must bear your Sultanah. You do not owe me this,\" I said, my voice cracking.\n\n\"No, you owe this to me. If you cannot stop these raiders, protect my virtue by taking it for yourself, so that an enemy will not. My life and my honor belong to you, Sultanah. As the lives of all your subjects belongs to you. I do not feel alive now. I feel like I died in that square with my parents. With my fianc\u00e9. None of this feels real to me. I have given you the devotion owed to you as my Empress. You owe to me your protection. And I am so alone...please make me feel alive.\" \n\nEverything she said made sense to me. She wanted a choice, to give what she had rather than being forced to give it up. She wanted to be with someone...someone who recognized her as a person. Was I even really doing that? Did I really think of any of my peasants as people? Or just abstractions? And would giving her what she asked for here mean what she thought it did? Would I be giving her the affection she needed? Or would I just be taking something I briefly desired, accepting it cheaply? I didn't know. But I felt the obligation now, to steel my resolve once again.\n\n\"I owe you much, but I cannot...\" I began. She looked at me with a withering stare, a mixture of hurt and disappointment I could hardly stand to witness.\n\n\"You must. I cannot risk losing this again...\" She replied. Whatever resistance I had remaining melted as I gazed into M\u00fclteci large eyes and heard her plea put so simply. Her absolute need for comfort. The questions slipped from my mind, the consideration of what was right and proper disappeared. My reasons for stopping seemed foolish and impractical. Court and noble emotions down amongst the earthy peasants. I felt the need to touch this peasant girl and I accepted that feeling in the moment for what it was, powerless to resist. \n\n\"A Sultanah must always fulfill her obligations,\" I whispered and I bent my head down toward M\u00fclteci. As I moved toward her, I heard a soft squeal emit from her throat and her hand tightened slightly on my neck. Our lips pressed together once again. This time, I took charge, being more knowledgeable than the young girl (a new experience for me). \n\nAs our lips pressed together, I parted mine and slipped my tongue free. I grazed it along the ridge of M\u00fclteci's mouth. I felt her body shiver and she enthusiastically opened her mouth as well. In a moment, I felt her tongue pour from her mouth and crash delightfully into mine. Her tongue was thick, wet, and warm. She moved it wildly around against my tongue and probed into my mouth. Her excitement and was contagious and her lack of polish in no way limited the pleasure of her touch. I allowed her tongue to enter my mouth, sucking on it and tasting her sweet mouth.\n\nWe had both abandoned ourselves in the instant to the animal passions swirling around us. The events of the day and our strange situation melted away entirely. M\u00fclteci needed to be enveloped in the protective power of love and I needed to feel like I was not completely powerless to help. Because of those powerful feelings, we experienced no hesitation, and dove headlong into a passionate embrace.\n\nWhile our tongues continued to wrestle messily on our mouths, my hands rose and found M\u00fclteci's body. Her skin felt firm and hot through the tattered fabric of her wedding dress. I could feel her bare breast pressed against my body and I felt an uncontrollable need to feel her skin. Quickly my hands seized on the dress fabric and began to pull on it. I lifted the torn dress quickly up M\u00fclteci's body. She lifted her arms above her head to make the movement easier. Our kiss broke only for a moment while I pulled the dress over M\u00fclteci's head and threw it into the corner. Our mouths then crashed back together, kissing more desperately than before. My hands made their way back to M\u00fclteci's hips and I felt the hot smoothness of her skin under my hands.\n\nAfter a few moments of reckless kissing, my curiosity grew too great; I had to see M\u00fclteci's compact body. I slowly broke our kiss and pulled away slightly. M\u00fclteci let out a slight mewling noise and her eyes opened quickly to register her disappointment. I ignored her, promising myself I would rectify her disappointment directly. \n\nI now leaned back slightly and gazed at M\u00fclteci. Her beauty took my breath away. I had already seen her small feet and lithe legs, but I now saw clearly that those legs were attached to small, tight round bottom. The way that she was sitting made it difficult for me to see her cunny, but I could see she had fashionably shaved herself bare for her wedding night. Despite her thin build, I saw that her hips flared dramatically and then tapered quickly to a narrow waist. Her stomach was thin and well-toned from work in the fields. My eyes continued to flutter up her body and I saw that her newly exposed breast was a mirror image of the other. The two small, perky teardrops sat high on her chest and her nipples, hard, pointed directly out from her chest. I groaned involuntarily, amazed that this beautiful girl had fallen into my lap.\n\nAnd into my lap was correct. M\u00fclteci was essentially sitting on me at that point, as I had pulled her on top of me slightly when I leaned back to get a look at her. As a result of this position, M\u00fclteci could feel the rapidly growing evidence of my admiration of her body. My cock was pressing into her hip and straining against the fabric of my riding pants. M\u00fclteci's wide eyes gazed down at my lap. I had no reason to doubt that she was a virgin before, but her excitement seemed to confirm the fact. But as she said, she had been taught what to do on her wedding night and was clearly excited by my arousal. \n\nNow it was M\u00fclteci's turn to let her curiosity carry her away. She slipped quietly off of my lap (maddeningly brushing my cock as she did so) and positioned herself in front of me, on her knees. Now I could see her tight red gash of a cunny, already glistening slightly with arousal. Her clitoris was quite large for her small body and I could actually see it, even from a few feet away, aching red from her body. But M\u00fclteci did not give me much time to admire her body. She leaned forward quickly, her hands on my clothes. She pushed me back onto the pillows on the bed. I lay in a sort of upright position while she moved about me.\n\nM\u00fclteci disrobed me with incredible efficiency. In just a few moments, my various shirts, undershirts, pants, and other garments lay in a pile on the floor. As she pulled the last of my undershirts off, my breasts stood exposed to the air. M\u00fclteci smiled at them slightly and placed her hand on one. She felt its firmness and seemed surprised by the way it shook on my body as I moved. But M\u00fclteci was excited about something else and her attention could not stay long on my breasts. \n\nThe only clothing I was still wearing was a thin piece of fabric wrapped around my waist and covering my cock. It was not drawn tight over my body to hold my cock in place the way I had done in the past. As a result, it did not restrict my swelling arousal. Instead, my cock stood up high on my body, draped in sheer fabric. As M\u00fclteci leaned back away from me, I saw her eyes stay on my cock.\n\nI decided to let her go at her own pace. I kept my eyes on her sweet face and tried to control the overwhelming urge I felt to pounce on her. M\u00fclteci lifted both of her hands up to her mouth, creating fists. She seemed to be biting both of her thumbs excitedly while her elbows and forearms covered, and pressed firmly against, her pert breasts. \n\nFor a while, she just looked at me, too nervous and excited to move. My hips felt like they were going to start rotating on their own and instead I tightened the muscles at the base of my cock. My cock twitched heavily and M\u00fclteci almost jumped. But this seemed to shake her out of her stupor. She leaned forward now, placing her left hand on the bed next to my hip. Her perky breasts hung down (but only slightly) over my knees and her round bottom stuck up in the air. \n\nM\u00fclteci lifted her right hand and began to move it towards my cock. Her hand was trembling slightly and she moved slowly. My body was almost vibrating with excitement and I my head felt light. After a few moments, I realized that I was holding my breath and did my best to breathe. M\u00fclteci looked up at me nervously and bit her lower lip. I nodded slowly and smiled at her.\n\nThis seemed to give M\u00fclteci the last push she needed. I felt her palm land on the fabric covering the tip of my cock. I groaned loudly and writhed on the bed. M\u00fclteci giggled and then finally pulled the fabric away from me, slipping it off my body and throwing it on the floor. M\u00fclteci gasped as she stared at my cock. My erect shaft ached and pointed directly up toward M\u00fclteci. My balls were heavy and I spread my legs slightly so they could slip down between my thighs.\n\nM\u00fclteci's curiosity overcame whatever nerves she was feeling. Her right hand reached forward now and touched the tip of my cock. Her fingers felt soft and delicate against my sensitive skin. I groaned and my cock twitched again. M\u00fclteci looked into my eyes again, smiling. Her eyes were twinkling with excitement and she quickly turned her gaze back to my cock. Slowly, her fingers wrapped around the width of my cock, just below the tip. She squeezed a little tighter than I would have liked, but I did not dare stop her. Her palm felt too delicious against my cock.\n\nDespite whatever lesson she had received regarding her wedding night, it was clear that M\u00fclteci did not know what she was doing. Regardless, her innocent fumblings were extremely pleasurable. Her right hand moved around on my cock, sometimes squeezing it and stroking it and other times running her fingertips against the length of it. Still other times, she would gently grasp the tip of my cock between her thumb and forefinger, feeling it gently and moving it. The pads of her fingers found my balls at times, stroking and pressing on them as they grew fuller and fuller. All the while her ass swayed behind her and her breasts jiggled slightly over my knee.\n\nAfter several minutes of innocent play, a fortunate accident occurred. M\u00fclteci's hand was wrapped around my shaft and her pinky finger was pressed all the way down into my balls. She was pulling down and squeezing me tightly. Her actions forced a single, fat bead of clear liquid to drip from the tip of my cock. I groaned slightly as the liquid spilled down my tip and raced down the vein on the bottom of my shaft toward M\u00fclteci's hand. M\u00fclteci saw it moving towards her and, seemingly without thinking, she leaned forward quickly and pressed her tongue against my shaft. She got the little dribble seed before it could reach her hand. I groaned loudly and my hands rose involuntarily to find my breasts as I felt the hot wetness of M\u00fclteci's tongue against my shaft.\n\nMy noise woke M\u00fclteci to the implications of what she had done. Her eyes opened and remained very wide, looking at me nervously. Her tongue stayed frozen against my cock and I saw my shaft pressed against her face when I looked at her. I groaned again at the continuing pleasure of M\u00fclteci's tongue on my cock and my hips ground involuntarily. M\u00fclteci seemed now to recognize that, far from making a mistake, she had stumbled onto something pleasurable. A wide smile grew on her face and her tongue licked at me devilishly.\n\nM\u00fclteci threw herself entirely into this new course of action. Once again, her lack of knowledge was more than compensated by her enthusiasm. M\u00fclteci made her tongue fat and wet and began to run it up and down the length of my shaft. My cock was coated in her warm saliva. She licked every inch of my cock, moving her neck and head so that she could lap at all sides. Each tongue of her warm, soft tongue made my entire body bounce. My hips felt like they were melting and my legs were shaking involuntarily. Eventually, M\u00fclteci's tongue found the top of my cock and even my balls. She would move her tongue around on the tip of my cock wildly, even rubbing it on the slick, smooth underside of her tongue. When she reached my balls, she lapped at my skin forcefully, letting her tongue sink into my scrotum. Each touch was more alluring than the last.\n\nAt no time did M\u00fclteci ever placed my cock inside of her mouth or let it slip into her throat. I suppose it never occurred to her. A large part of me wanted to take M\u00fclteci's head in my hands teach how to properly suck a cock. I wanted to feel her tight throat close around my shaft. \n\nBut while M\u00fclteci was lapping at my cock, I felt something that changed my mind. M\u00fclteci's cunny was directly over my knees. While M\u00fclteci's tongue was pressed into my scrotum and her nose was rubbing against my shaft, I felt a peculiar sensation: a slight drip onto my knee. The liquid felt warm and thick. For a moment, I did not realize what it was. But I could heard M\u00fclteci's ragged breath and I could see her bottom shaking in the air. I realized, it was M\u00fclteci's cunny. She was so aroused that she was literally dripping wet on top of me. I breathed deeply through my nose and I could smell her arousal thick in the room, a warm, savory aroma. I remembered that we were not engaged in this just for my pleasure. M\u00fclteci needed something and I was obligated to provide it.\n\nSummoning all of my will, I slipped my hands from my breasts and found M\u00fclteci's shoulders. I pulled her up gently. For a moment her tongue remained stuck to my shaft, but then she seemed to notice I was pulling her up. She looked up at me quickly, wondering if she had done something wrong. I gave her sultry look and pulled her toward me more forcefully. M\u00fclteci smiled at me and started to move forward. I guided her while she crawled carefully over my body. \n\nAfter a few moments her knees were on either side of my hips and and my cock was sticking up between her legs. It was not touching her, but it was just a few short inches from her cunny. Further, her breasts hung towards my face, her small, hard brown nipples pointing at me. I could not help myself. I lifted my head slightly and opened my mouth. I let M\u00fclteci's hard nipple enter my mouth. Her soft, silky flesh pressed against my face as my lips closed around her. I heard her moan loudly as my tongue found the dense flesh of her nipple. I sucked deeply on her nipple and flicked it with my tongue. \n\nM\u00fclteci's whole body became weak and her knees buckled. Her cunny dropped slightly and it grazed the tip of my cock. We both moaned together and M\u00fclteci's eyes shot up quickly in surprise. Her nipple popped from my mouth as M\u00fclteci's rose so that she was erect, straddling my hips with my cock almost touching her red clit. She was looking down at me, the innocence drained from her eyes. I saw only need now. M\u00fclteci's red cunny was dripping down her thigh and her face was flushed. I knew there could be no more delay.\n\nI lifted my hands and placed them on M\u00fclteci's hips. They felt warmer than before and my fingers tingled. I looked up at her and she bit her lip, nodding. Slowly, I placed pressure on her hips. M\u00fclteci's began to sink very slowly. After a few seconds I gasped as the tip of my cock pressed against M\u00fclteci's hot, dripping cunny. M\u00fclteci's body went incredibly tense and I stopped pulling on her briefly. M\u00fclteci looked nervous and enticed at the same time. I kept her in place, my cock pressed against her. But I rubbed my hand gently her hips and her soft ass. I did not want to hurt her, and I was trying to be reassuring. \n\n\"You are ready,\" I said slowly, seductively, \"Go at you own pace.\" I said. M\u00fclteci's moaned slightly in response. But after a moment, I felt her lowering herself again. M\u00fclteci's cunny was incredibly tight. As my cock pressed into her dripping body, it squeezed me tightly. M\u00fclteci's panted and groaned as the tip of my cock pressed into her. She moved slowly, instinctively rocking her hips to lubricate me with her juices. Finally, the tip of my cock slipped inside of M\u00fclteci. \n\n\"Oh Gunes!\" I groaned and I made my hands into fists on M\u00fclteci's hips. She was so soft and warm inside and almost unbearably tight. But now the hardest part was over, the tip of my cock was inside of her. With slightly more speed, M\u00fclteci lowered herself farther and farther onto my aching cock. She grew tighter and tighter as she went and occasionally, she would stop, panting, while grew accustomed to the feeling. But her cheeks were red and her eyes were totally alive. It was clear she was enjoying the feeling. I was just as well, I had never felt anything as soft as the caress M\u00fclteci's cunny provided.\n\nAfter what seemed like a blissful eternity, I felt M\u00fclteci's ass settle onto my thighs and I felt her hard little clit press into my pelvis. I was entirely inside of M\u00fclteci. For a moment we just stayed still, staring at one another in awe. The connection between us felt almost mystical and the physical pleasure we already felt was intense. The smell of my arousal mixed with that of M\u00fclteci, now that our cunnies were so close together. If perfumed the air in the room and made it feel more humid somehow. \n\nMy cock twitched involuntarily inside of M\u00fclteci's cunny. She shivered and then offered a giggle. Her hips rocked slightly, tugging deliciously on my cock. It was clearly time for more. I softened my fists back out and placed my palms flat on M\u00fclteci's hips. I pushed her hips slightly, making her rock slightly.\n\n\"Sultanah, oh my!\" M\u00fclteci's moaned. Her hands instantly shot to her mouth. Once against she placed her fists in front of her mouth, biting on her tongue. But I could see her smiling behind the coy posture. I rocked my hips slightly, thrusting my cock deeper into the warmth of M\u00fclteci's cunny. M\u00fclteci moaned lasciviously and rocked her hips in motion with mine. She gave no hint of pain and it seemed her wet cunny and our slow start had served her well. That was lucky for her, because I could no longer contain myself.",
        "My hands clenched more tightly around M\u00fclteci's hips and I dropped my hips down in the fabric of my bed. An inch or two of my hard cock slipped out of M\u00fclteci's soft cunny. The air felt cool against the wet skin of my shaft. M\u00fclteci trembled as I moved. After waiting a bare second, I thrust my cock up, back into M\u00fclteci's cunny. She felt even tighter before as I drove my body into hers. M\u00fclteci's body trembled and she continued moaning loudly. She smiled while her voice called out in ecstasy. I did not give M\u00fclteci's time to react; instead I quickly slipped my cock out again and then rammed it home. I repeated that motion, again and again and again. I thrust my cock in and out of M\u00fclteci's impossibly tight cunny and felt as the tension built inside of her body with each thrust and felt her grow weaker and more enslaved to her passions.\n\nAfter a few minutes of thrusting, M\u00fclteci became too weak from the pleasure and the tension she felt to hold herself upright any longer. Her fists came down from her mouth and M\u00fclteci pitched forward. Her hands came out in front of her to catch herself and I had a small amount of wind knocked out of me as M\u00fclteci's hands landed in my breasts. This motion pushed her hips back, driving my cock more deeply into M\u00fclteci's cunny. M\u00fclteci's was smiling and panting now as she looked up into my eyes. Her hands squeezed tightly on my breasts for stability and I groaned at the sensation of my hardened nipples digging into her palm.\n\nM\u00fclteci now began to rock her hips now. My cock was buried deeply inside of her and her hips bounced up and down on it. She groaned and arched her back now, feeling my cock slip ever deeper inside of her. M\u00fclteci's hands remained on my breasts, squeezing them and playing roughly with my nipples. She was panting loudly and punctuating her breaths with soft moans. She was grinding her hard clit into my body, building herself towards something she had been waiting for her entire life. Her body shook on top of me and I kept my hands tightly on her hips.\n\nIf M\u00fclteci was getting carried away by the excitement of the moment, I was even worse. I could barely stand the intensity of M\u00fclteci's squeezing cunny. The room was filled with the thick scent of arousal and my hold body was growing stiff from anticipation. I was holding my breath again, but I lacked the will to breathe, I wanted the lightheaded feeling. Every move of M\u00fclteci's tight young body seemed to tug at my cock, bring the tension closer and closer to its finale. Adding to that was the tingling feeling that spread throughout my chest from M\u00fclteci's manipulation of my nipples.\n\nM\u00fclteci and I had been rocking our hips together for several minutes when she finally did something that pushed me over the edge. M\u00fclteci's hips were shaking on top of me and suddenly, I felt the muscles inside of her tighten. She looked at me mischievously, clearly realizing she had stumbled onto something new. If M\u00fclteci's cunny was already almost too tight to bear, her sudden clenching put it past all reason. I felt her cunny wrap tightly around me, milking my cock.\n\n\"Holy Gunes, fuck me!\" I moaned loudly, my fingers sinking more deeply into M\u00fclteci's hips. The sudden addition of just the right amount of pressure was more than I could bear. My eyes closed instantly and my mouth opened. I left it open, making a hollow croaking sound. I felt all of my muscles tighten in my body and my toes curled on the bed. All of my attention was focused on the tight grasp of M\u00fclteci's cunny wrapped around my cock. I felt my balls seizing underneath of M\u00fclteci's body. I felt like I could not stand to feel anymore, like every inch of my body and every fragment of my soul was consumed entirely by an unbearable, immovable, and constant tension and then...suddenly...it burst. \n\nThe tension broke and a wave of absolute pleasure radiated out from my cock, covering my entire body in a quivering warmth. All of my muscles released and I collapsed back onto the bed. My balls seized more quickly and I felt the vein at the base of my shaft expanding and contracting as it shot thick, white loads of seed deep into M\u00fclteci's willing body. I heard her yelp in surprise and felt her squeeze the muscles in her cunny tighter. She was pulling more of my seed into her body and trying to hold it all inside of herself. Her hands squeezed more forcefully on my tits as she was laughing and moaning with delight.\n\nFinally, the orgasm subsided and I lay, sated, on the bed. M\u00fclteci still sat on top of me, my still-hard cock buried in her body. She could tell something important had happened and that her cunny was filling with my seed. But she was not done; instead she was smiling at me and trying to move her hips. I winced slightly at the sensitive. It was not that it was a bad feeling, on the contrary it was too much of a good feeling. My cock was far too sensitive to keep going. She sensed my discomfort and stopped.\n\n\"Have I done something wrong Sultanah?\" she asked nervously, and once again she leaned back so that she was erect while kneeling over me, \"I sought only to give you pleasure.\" I reached my hand up quickly and found M\u00fclteci's cheek. I rubbed her smooth skin gently with my thumb and shook my head.\n\n\"Not at all, that felt wonderful,\" I said softly. M\u00fclteci and looked slightly embarrassed. But I could still feel her body trembling under me and I could sense her cunny vibrating with continued desire. M\u00fclteci had already given me so much, she needed satisfaction now. It was my responsibility. And also my pleasure. I wanted to do something for her.\n\nI scooted back slightly and sat up quickly on the bed. M\u00fclteci's small body was easily moved with me. She let out a surprised yelp and started to roll backwards, towards my feet. I had been hoping for this and I spread my legs slightly while I jerked my hips back forcefully. I felt my cock slip out of M\u00fclteci's tight cunny, it felt delightful. She let out another, pleasured yelp at the sensation. A large blob of my seed spilled from M\u00fclteci's cunny and landed on the bed. M\u00fclteci now fell backward completely onto the bed, her breasts jiggling alluringly as her back sank into the covers.\n\nIt did not seem wise to wait to see what happened. Instead, I rolled over quickly onto my stomach. While M\u00fclteci was lying on her back, giggling contentedly at this sudden turn of events, I scrambled over so that I was facing towards her on the bed. M\u00fclteci's legs were slightly open and I quickly slipped on belly in between her knees, my face just a few inches from her red cunny. My breasts landed in the patch of warm seed that had spilled from M\u00fclteci's cunny and landed on the bed and she felt wonderful as it pressed against my nipple.\n\nI placed my hands on M\u00fclteci's thighs, prying them open farther. M\u00fclteci had not realized I had been moving and her body froze with the recognition that I was so close to her. M\u00fclteci's cunny was close to my face and I could smell the mixed aroma of her savory cunny juices mixed with the tart undercurrent of my seed. M\u00fclteci's cunny was as tight as ever and her little red clit stood out hard at the top. She was leaking from the bottom of her cunny, a mixture of my seed and her own juices. There seemed to be more of my seed and it was a milky color pooling on the bed.\n\nI knew then, as I had always known, that it was not appropriate for me to be in this position. I was a Sultanah, it was my place to receive pleasure, not to give it. I would be lowering myself from my regal bearing if I went any further, especially with a mere peasant girl. And yet, these concerns, which had stopped me even in the heat of passion, seemed totally irrelevant now. I felt so deeply for M\u00fclteci at that moment, that I did not even really consider stopping. And it wasn't just M\u00fclteci, the affection I felt for her was tied up in something else, something I couldn't put my finger on at that moment. She represented something to me, a joyous duty or a cheerful obligation. And I wanted to fulfill that obligation. Somehow, by lowering myself to her, I felt that I was not lowering myself at all. If anything, I would rise higher.\n\nAfter that, I pushed myself forward on the bed, I felt my hair push against M\u00fclteci's thighs and felt her body tremble at the touch. The scent from her cunny grew more and more intense as I grew closer to it. I was surprised by how well her scent and mine mixed together. It made my eyes roll slightly and I felt my cock twitch against the fabric of the bed. In a few moments I was a mere half inch away from M\u00fclteci's lovely cunny. The tights red lips of her cunny looked even more enticing here and her clit begged to be touched.\n\nI waited a half second, giving M\u00fclteci just a few moments of torture. I titled my eyes up at her. M\u00fclteci was looking down at me, excited. She was biting her knuckle and her eyes were sparkling. She pushed her hips towards me, begging for further action.\n\nFinally, I complied. I leaned forward slightly and let my tongue spill from my mouth. In a moment, I felt it sink in to the wet folds of M\u00fclteci's cunny. Immediately my mouth and my nose were filled with an incredible flavor. I hadn't even really been thinking about the fact that I would, for the first time, or my own seed. But the salty, savory flavor of my own seed, mixed with M\u00fclteci's juices gave me an electrifying feeling. I wished I had not waited so long to try. And there were still big, milky globs of it overflowing from M\u00fclteci's tight cunny.\n\nFor the next few minutes, my tongue flew around M\u00fclteci's, seeking out her juices and my own seed. I would hold it in my mouth and swish it around my teeth, savoring the flavor. My tongue flittered across M\u00fclteci's sensitive skin while I swallowed them down. M\u00fclteci's moaned loudly while I did so and after a few minutes, her hands found their way to my head. Her fingers sunk into my hair, holding onto me tightly and panting while I sucked our juices from her cunny.\n\nAfter a while, my face now glistening with juices, I found that I had cleaned M\u00fclteci's cunny entirely. I could sense the sexual flavors still on my tongue and knew it was now on my breath. All of our delicious seed and juice was now inside of me, giving my stomach an exquisite warmth. M\u00fclteci's head was hanging back and she was moaning loudly, she didn't want me to stop. \n\nI opened my eyes now and I saw M\u00fclteci's little red clit staring me in the face. I was ready to finish M\u00fclteci's agony. I opened my mouth and wrapped my lips around M\u00fclteci's clit. M\u00fclteci's body jerked and she let out a high pitched scream. Her hands squeezed and pulled at my hair, pulling me more tightly into her lap. I did not need any more encouragement. I kept my lips wrapped around the girl's clit and quickly flicked my tongue against it. M\u00fclteci's body bounced in time with my flicking tongue. After a moment, I made my tongue thick, soft, and flat and lapped at M\u00fclteci's clit.\n\nI stayed in this position for some time, lying on my belly between M\u00fclteci splayed legs. I kept my hands on her hips to keep her spread wide. And I licked and sucked on her clitoris with all of my ability and energy. I followed the motions of her body, sensed her reactions, and tailored the movement of my tongue to maximize her pleasure. As I licked, M\u00fclteci's body got more and more rigid and her hands squeezed tighter and tighter on my hair. Finally, I heard a loud croaking noise coming from M\u00fclteci's throat and I felt her cunny tightening against my chin.\n\n\"Oh fuck, Varis!\" M\u00fclteci called out loudly as her body began to shake. I kept licking, sucking more of her flavor into me and breathing in her scent. Finally, M\u00fclteci's body locked up entirely and, after a further second, went completely limp. She collapsed backwards onto the bed, panting and almost completely oblivious to the world. For a moment, I simply stayed down, between her legs, and caught my breath. \n\nAfter a while I lifted myself with great effort. After sidestepping M\u00fclteci's legs, I collapsed down next to her on the bed. As I lay down next to her, M\u00fclteci turned and looked at me, smiling. Her face glistened with sweat and she looked completely relaxed. I wrapped one of my arms around M\u00fclteci's should, pulling her in closely. She rested her head on my breast, burrowing into me.\n\n\"That was better than I could ever had dreamed,\" She said sleepily, \"Though I am sorry I called you Varis, Sultanah,\" she added. I smiled and shook my head.\n\n\"Think nothing of it here,\" I said, \"As lovers, I believe we were equals.\" She smiled more broadly now and looked up at me. She was so much more beautiful than the haggard girl who had been carried into the room. I felt for a moment like I had done something right that night. We both grew more comfortable in the bed and I enjoyed the feeling of M\u00fclteci in my arms. \n\nBut my thoughts would not be still. As the euphoria from the encounter began to fade, I wondered what it mattered. What good did it do for one night of passion with M\u00fclteci? She still faced depravation tomorrow. What difference if she was briefly happy now? She had already lost everything. After a long pause, I spoke.\n\n\"What will you do? Tomorrow? Thereafter,\" I asked. M\u00fclteci did not look up now. Instead, she gave a long sigh and sat quietly for some time. When I began to suspect she had no intention of answering me, she spoke.\n\n\"Go on living I suppose,\" was all she said. She spoke no more. And in a few minutes. She was asleep. I thought deeply of her answer and their meaning and was unable to follow her into sleep. Sometime well before dawn, I rose, got dressed, and headed out to find Saygili.\n\n* * * * *\n\nSometime around 4:00 p.m., much later after the sun rose and was once again beginning to set; I was standing in the center of the village, right next to the town hall I had slept in the night before. The noose had already tightened, our enemies no longer made any pretense of stealth. They were swirling around the outside of town, mounted and armed. I could hear their taunts and I knew that they were aware of my presence in town. They were slowly getting closer. They were making noise, trying to make their overwhelming numbers seem more intense. \n\nAnd there numbers had become even more overwhelming since I had arisen that morning. The number of troopers at my disposal had fallen from 69 the previous night to 42. That morning, when I had announced to the troopers that the enemy had surrounded us and that I had made the determination that I would stay in fight, I gave my soldiers the option. Those who wished to stay and fight with me could stay. Those who wished to flee would not be punished. All of the Collaborationist lords had, as well as a handful of demoralized loyalists. \n\nOur numbers were swelled, however, by the townspeople. They were not trained for war, but they stood arrayed in the town square, ready to protect their homes. I had given them no options when I roused their mayor. I simply explained that the enemy was closing in and that I needed their help in prosecuting the war. I was more than a little surprised and impressed with the speed at which the town mobilized. Each man and woman now carried some weapon, even if it was just a shovel, and possessed a grave visage that indicated a willingness to fight to the death.\n\nSaygili had, likely, been surprised by my unilateral change in the plans. However, his loyalty prevented him from raising any objection. When I told him that I would be staying and fighting, he asked simply what I had in mind. I immediately laid out my plan of action for the coming day. \n\nI did not, however, actually tell my trusted soldier my thoughts. I was thinking only of M\u00fclteci's words the night before, \"go on living I suppose.\" A simple, peasant statement of permanence. There was no option to quit, no ability to simply cease going. M\u00fclteci had experienced an unimaginable level of pain and confusion, but she not only kept on living, she desperately wanted to live. She wanted to feel alive even if doing so meant risking future pain. I reflected on this strength while I lay awake at night. It reminded me of the history of the Empire, the famous legions of B\u00fct\u00fcn D\u00fcnya. Legions that were made of common men, trained hard, and taught that there was no option but victory. I thought of my troopers, all of noble birth. So weak, so willing to quit when they did not experience instant victory. Likely they would be happy to sacrifice a town of innocents to save themselves. \n\nI asked myself about my role as the Sultanah, the Empress. I wanted to know what I believed my primary task would be in my office. Would it be to preserve myself and my blood? To make nobles wealthy? Or would my purpose be to preserve and foster the people of the Empire? To treat all of my subjects, even the peasants as human beings with dignity, importance, and something to add to the life of the Empire? In short, I asked whether was the Sultanah I wished to represent the strength and the body of the old Empire, or if would continue to align with the decaying, noble rot that had eaten it from the inside out. It was not a difficult decision.\n\nAnd so I was handily outnumbered (at least in terms of actual soldiers) and totally surrounded by well-trained enemies. I, like all of my troopers, was dismounted. I had my blade in my hand and was facing towards the largest road leading into the town square, the location I assumed most of the enemies would choose as an entrance. My heart was fluttering and I continually asked myself whether I had made a mistake in failing to flee. But it was too late for that now. And I drew strength from the grim calm exuded by the peasants all around me.\n\nI do not remember the exact time it occurred, but I will never forget the sound of the trumpet blasts that peeled out through the late afternoon air. They came from all sides. Each enemy crew seemed to know that the attack was to start at the same instant, and they all ordered the charge at the same time. \n\nRaiders came pouring into the village from all directions. I could see a large mass of horseman entering the main street of the village from the fields beyond, heading directly towards me. If I looked to either side or peered into any number of side alleys, I could see the same sight. Soldiers, moving closer and closer towards the center of town, their sabers draw and their lips peeled back in terrifying grimaces. I saw also the thin line of peasants and remaining troopers that stood inside of town square, preparing to seal off each entrance to the town center with their fragile bodies.\n\nAs I watched the enemy raiders get closer and closer to me, my feet felt heavy and my head felt light. I felt very much like I was going to vomit or collapse. The sword felt unbearable in my hand and I knew that I had no knowledge of how to wield it. It felt as though my body was trying to pull me backwards, towards the center of the square, where the most bodies would stand between me and my enemy. But, just when my courage was about to fail, a voice rang out from the square.\n\n\"For B\u00fct\u00fcn D\u00fcnya and Sultanah Varis!\" the voice called out. I instantly recognized the voice as M\u00fclteci's. Before I could react, the crowd responded.\n\n\"Huzzah!\" they cried, a mighty roar from the peasants that made them sound more fearsome than I thought possible. I felt their courage wash over me, soaking down into my bones and I stood still, my face becoming grimmer and fiercer. \n\nThe enemy raiders were closing at the same speed, their immense discipline allowing them to approach the town square from all quarters instantaneous. I saw the horses grow more and more defined as the came closer and closer. I held my sword up as they closed the distance nearer and nearer to our location. The sound of the hooves grew so loud it overwhelmed everything else; the vibrations seemed to shake inside of my stomach. They passed the last few houses on the outside of the square. I could see the decorations on the raiders' uniforms and I could nearly feel the heat of their horses' breath as they closed the last few feet between us. Murder was in the eyes of the raiders as they lifted their swords towards me and...they dropped.",
        "The village was suddenly filled with new noises. The awful screams of dying men and horses rang out even over the din of hooves. I turned quickly and saw that the same result had occurred everywhere. The horses had dropped. I smiled. The plan had worked.\n\nAs soon as I had told the villagers about the attack, I had put them to work implementing my plan. I set crews of broad-shouldered peasant men to work digging massive, three-foot-deep holes at the very edge of each road leading into the main square. While they dug, their wives and children were encouraged to gather every fencepost or wooden stake they could find and hone both ends into spikes. As the spikes were completed, they were sunk deeply into the muddy holes dug by their husbands. When each hole was filled with spikes, a blanket (usually several blankets) was to cover it. This blanket was then covered in mud. A quick moving horseman would never notice the difference. While the villagers worked, my remaining troopers loudly maneuvered in the fields outside of town, ensuring that prying eyes did not notice. The peasants were used to work and worked quickly and, at around 3:00 p.m., each hole was finished and the troopers were brought back to town and (carefully) helped into the square with everyone else. We then prayed that we had done enough.\n\nNow it seemed that, as usual, Gunes was good. Our enemies were tumbling into the pits we had dug, moving at full speed. Men and horses were pierced by spike and then crushed as more men and horses fell in after them. Even after the front ranks of raiders realized the trap, their attempts to stop moving were in vain. The men behind them pushed them forward, toppling them into the pits. After the initial shock wore off, resourceful raiders tried to jump the pits and reach the town square. Most were unable to clear the growing piles of their dead brethren or could not cross the entire distance of the pit and fell in anyway. Occasionally, a single man would make it across but such a man would be no match for our massed numbers. Each man who came across piecemeal was quickly swarmed and killed. \n\nThe raiders had not been expecting any real resistance. They knew we had only a fraction of the troopers they possessed and expect the rabble to break instantly when they entered the square. Now faced with determined, deadly resistance, the men in the rear ranks turned and fled. They were confused and scared, something they had never expected. \n\nI anticipated that the enemy would regroup quickly and attempt to take us again. Therefore, I had no men to spare for the holding of prisoners. I ordered my peasants and troopers into the pits to finish off any men and horses still alive and ordered that their weapons be taken for our use. This bloody order was rapidly heeded. However, once it was done I looked down the road toward the fields outside of town. I saw no enemy troops. Their fear and confusion had been complete, they had routed entirely. The battle had lasted a mere half hour. And we had won.\n\n\"Victory!\" I called out in my loudest voice and heard my loyal troopers and my loyal peasants scream out the word as well, swelling loudly (and no doubt scaring any enemy soldiers who remained close enough to hear). We would later learn that 75 enemy soldiers lay dead in the pits, crushed by their horses. Among their number were two high ranking Dusman lords who had led the charge. This represented nearly a quarter of the total troops and roughly half of the senior leadership of the raiders. Upon hearing reports of the battle, King Sican was stung by the fact that his elite troops were killed primarily by peasants. More importantly, he realized that he could afford the risk of losing so many men in what was, essentially, tactically unimportant raiding. He quickly called his troops back, ending for that time the deprivations of the raiders.\n\nBut we did not know that then. All we knew was that through our strength and ingenuity we had defeated an enemy far more organized and disciplined. Their arrogance and certainty of victory had allowed us to outwit them. We had survived (losing not a single man, woman, or child) and preserved the town.\n\n\"To Sultanah Varis,\" M\u00fclteci cried now as we stood in the town square, \"The People's Empress!\"\n\n\"Huzzah!\" was the reply. Once again, M\u00fclteci's words triggered an idea. This was one I had been playing with since at least the night before. But now, it seemed, was the correct time to put that idea into action. I raised my hands in victory and walked over to the town hall. I climbed up onto the Mayor's chair and held my hands aloft until the crowd grew silent.\n\n\"The People's Empress is right!\" I called and the people cheered again, \"Because this is an Empire of the people.\" More cheering followed. I paused for a second to collect my thoughts. I had not prepared for what I was going to say next. But once I began speaking, it came naturally, \"Every inch of ground that B\u00fct\u00fcn D\u00fcnya gained through the centuries was taken by the legions. By citizen-soldiers. When this proud Empire ceased to rely on its farmers and its merchants and its artisans as soldiers, it began to wither. I, Sultanah Varis, am no longer content with this atrophy and this rot. This Empire is glory and will always remain glorious. It will only fail if we fail to live up to the glory of its name. Fulfilling this responsibility to the Empire is the right, the duty, and the privilege of all who dwell within its borders. It is not only for me. And it is certainly not only for the Peers. So this I say: Any man who finds that life in this village is too small or that life lacks adventure follow me to \u015eehir and take an honored place in the renewed legions of B\u00fct\u00fcn D\u00fcnya! And see all our enemies join these. Dead and buried!\" The cheers were deafening. I looked around at the people around me and I felt the strength of the empire in their faces, none more so than in the face of M\u00fclteci, who cheered loudest of all. \n\nWhen we returned to \u015eehir (to the shock of the deserters, who had brought news of our imminent death the day before) we came with 25 new soldiers, the core of a new imperial citizen-army. M\u00fclteci was not among them, she went on to live her life.\n\nEnd Chapter 7 - End First Half!\n\n*****\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "epic",
        "medieval",
        "tranny of female",
        "shemale on female",
        "hermaphrodite",
        "oral",
        "serial",
        "adventure",
        "virgin",
        "first time"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sultanah-ch-07"
}