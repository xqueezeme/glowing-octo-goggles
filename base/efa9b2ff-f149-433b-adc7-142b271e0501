{
    "title": "Ready Ch. 03",
    "pages": [
        "Author's Note: For those who might be jumping into Ch. 3 and hoping for a quickie, sorry. What you're looking for is in here, but you have to dig. This is a little unconventional for Lit, but it's what came out of my mind! I really want to thank those who've voted, commented and sent me feedback, and Asylumseeker for editing.\n\nThanksgiving\n\nKevin leaned on the doorjamb. Having secured third place in the shower line-up and only running out of hot water the last two minutes, he was feeling pretty good about himself. Ah, the joys of a large family! He was watching Deonne interact with Becca and Camille as they laughed and joked while chopping, stirring and washing, doing the early preparations for Thanksgiving dinner, still hours away. He was amazed at how domestic and utterly feminine Deonne really was.\n\nDid her fellow naval aviators ever see this part of her? Did they know she loved to sew or that baking was her passion? Did they know she painted her toes hot pink? And that her khaki uniform coveralls hid a lacy white thong and see through bra? Pulling his mind back out of his dick before he got in trouble, Kevin announced his presence.\n\n\"Morning ladies. Anything I can do to help?\"\n\nWith a start, all three heads turned to stare, three jaws dropped.\n\nBecca, rarely at a loss for words was the first to recover and stated with wide eyes, \"Did you just volunteer to help? As in 'help in\n\nthe kitchen'?\"\n\nStarting to realize the lay of this land in McNeil Territory, a small dimple formed in his left cheek. Seeing it, Becca nearly swooned.\n\n\"Quick! Someone put an apron on that man before they come and liberate him!\"\n\nComing up behind her, Kevin put his arms around Deonne. He stuck his finger into the pumpkin batter then licked.\n\n\"Seriously, what can I do to help?\" he asked, sticking his finger back in the batter.\n\n\"Seriously?\" Deonne asked.\n\n\"I wouldn't offer if I didn't mean it.\" \n\nHe held his finger to her lips and without thinking she opened them and sucked and licked. As he started to slowly pull his finger out of her mouth Deonne felt a little quiver between her legs and a sigh escaped her lips.\n\n\"Okay. We could sure use someone to check the bathrooms and pick up all the towels and clothing lying on the floor, then take them down to the basement for us to wash later. That way nobody'll kill themselves trying to get to the toilet!\"\n\n\"No problem.\"\n\n\"Deonne, where did you find this guy?\" Camille asked with a smile as they heard Kevin's feet on the stairs.\n\n\"Don't worry. I think it's all an act,\" she answered with a wry grin. \"I'm pretty sure he'd rather be outside with the guys. He's not a farmer, but he spends a lot of time crawling around in the woods being up close and personal with nature!\"\n\nChuckling, Becca replied, \"Well, don't tell Dad. There's a lot of nature out in the barn that I'm sure he'd love to let Kevin get personal with!\"\n\nMucking out was a never-ending chore on a dairy farm, and now that everyone had left home their father did most of it himself with the help of Ernie, the once-a-week hired hand.\n\n*****\n\nComing down the upstairs hall with an armload of towels and clothing, Kevin bumped into Paul as he was coming out of a bedroom. Long and lean, with wavy auburn hair coming just over the ears and a quick smile, Paul, except for his height, least resembled his brothers. Kevin saw some of their mother in him. Phil and Marc took after their father, even Deonne and Becca had strong hints of their father in the face and coloring, albeit a much more feminine form.\n\n\"Dude! What have they done to you?\" Paul asked, chuckling. \"Let me take that from you.\"\n\n\"Nah, really I'm okay, but you can show me to the basement.\"\n\n\"Sure,\" he agreed and they took off for the basement.\n\n\"You better be careful, they'll have you cookin' and settin' the table next! We try and not get too pussy-whipped around here,\" he stated with a grin.\n\n\"I can tell. Don't you guys ever help out?\"\n\n\"Sure, when we have time, but we try to be discrete about it and all, don't want 'em to catch on, you know?\" Looking over his shoulder, he winked at Kevin. \"Dad usually has so many projects waiting for us when we visit, we barely get in the house to eat and sleep. This morning I gave him a break by doing the morning milking, then Marc and I repaired some roofing that was loose on the barn. Oh, and Phil fixed the chicken wire on the coop.\" All this before 10:00am, Kevin noted. Farm days start early.\n\nMaking their away through the house, they negotiated various toddler toys and dodged running children.\n\n\"Alex! Walk,\" Paul called to his nephew, \"You don't want to get busted by your mom!\"\n\nFinally in the basement, the men sorted the clothing from the towels and shoved a load in the washer. Leaning on the dryer Paul turned towards Kevin and watched as he dumped in some laundry detergent.\n\n\"You know, while I'm home I should grab Marc's laundry and wash it for him. It's starting to take over the house like a giant fungus and I fear the girls are wearing retreads, if you know what I mean.\"\n\n\"He seems to have a lot on his plate,\" Kevin acknowledged. Deonne had told him of Marc's recent divorce and he knew the man was a veterinarian and helped with the farm.\n\n\"Yep. I told him to bring in some help, but he hasn't got it done yet. Maybe he's not ready.\"\n\n\"So, Paul. Deonne tells me you're back in school.\"\n\n\"Yeah, the long lost prodigal has returned to the fold,\" he said with a chuckle.\n\n\"How's that?\"\n\n\"Dad was a high school dropout and he was going to make damn sure that didn't happen to us. Matter of fact, he had to improve on that idea; we were going to fuckin' college if it killed him. I mean, there are no college funds or anything, but by sheer force of his will we were going.\n\n\"So, I headed off to the local U. after high school, partied my ass off for two years, and realized I had no idea what I wanted to do with my life. So I quit, headed to California and became a deck hand. To say Dad was pissed would be an understatement.\"\n\n\"Must have been a hell of an adventure for an Ohio boy.\"\n\n\"Oh, it was! For a while at least.\" He shrugged and stuck his hands in his pockets. \"It finally got time to move on.\"\n\n\"What are you studying?\"\n\n\"Marine biology.\"\n\n\"Can't get away from the water, huh?\"\n\n\"I love the ocean. This huge expanse of green, it all seems so simple, but hidden underneath is so much power and mystery. I never get tired of it.\"\n\nThere was a lot more going on in the head of this shaggy-haired, blue-eyed beach bum than appeared on the surface, just like his beloved ocean.\n\n\"So, General, you up for a little touch football?\"\n\n\"Absolutely!\"\n\n\"Good, how are you at quarterback?\"\n\n\"Not bad.\"\n\n\"Yeah?\" Things were looking up. John was their only real quarterback, though everyone swore they were an undiscovered Tom Brady. \"First, we've got to catch us some chickens. Let's see if we can con those girls into lettin' us have Deonne. She's the best kicker we have, and besides she's the only one not afraid of Delbert.\"\n\n*****\n\nKevin stood, hands on his knees, bent over gasping for breath. Three hours of P.T. a day hadn't prepared him for this. He was standing in the front yard and seven McNeil's were staring at him, waiting. Five minutes earlier he had failed to find an opening for his pass. Deciding to run the ball himself, he was making good progress only to look up and see Deonne coming at him like a rat terrier after a fresh ankle. The next thing he knew, she had her arms wrapped around both his feet bringing him down for the second time this weekend.\n\n\"Hey! This is supposed to be touch football!\"\n\n\"What are you talking about? I touched you!\" \n\nShaking his head, he knew when he was being schooled. In this family, girls got to tackle, guys didn't.\n\nNow he looked up at his teammates, hoping not to let them down. It wasn't the tussle with Deonne that had done him in. It was the fifty or so wind sprints he had made running after chickens, or from chickens as the case may be.\n\nDelbert, it turned out, was a rooster. And he had taken one look at Kevin and pegged him immediately as a city boy. Every time Kevin, who had decided it was unfair to leave Deonne all by herself chasing the impressive-looking rooster, got within fifteen feet of him, Delbert would charge at him and do a little wing-flapping jump baring his claw. Goddamn!\n\nEventually Deonne, with a broom and trashcan lid, was able to get Delbert corralled. Kevin secretly renamed him Dinner and vowed a covert op to make it reality. Shortly afterward the hens followed their leader into the pen and the serious annual Thanksgiving Day McNeil Bowl began.\n\nKevin received the ball from Marc, and arm cocked, was looking for cousin Sam McNeil, his intended receiver, when all of a sudden Deonne's youngest brother, Andrew, yelled out, \"Silvia!\"\n\nKevin looked towards the dirt road leading up to the house and saw an ancient black Oldsmobile plowing up the driveway, shocks and springs groaning as the old boat gently careened over the potholes like a ship cresting and dipping on the waves of the ocean.\n\nKevin could not see a driver until the car stopped and out stepped a small man with slicked-back, thinning brown hair. From the other side a small, round woman emerged and moved to the back of the car where she handed the man a large brown department store bag, a large white bag, two plastic bags and a cake holder before she slammed the trunk, leaving the man to juggle his way to the house. Turning towards her audience she started waving and tottering over on unstable ankles in a pair of four-inch heels.\n\n\"Yoo-hoo! Yoo-hoo! Kids!\" she called, her arms waving, numerous metal bracelets jangling and the large sleeves on her black chiffon cape fluttering and waving like bat wings.\n\nKevin felt Deonne move to his side and put her fingers through his.\n\n\"Drew, better go help poor Uncle Buster,\" Phil murmured and Andrew took off at a trot.\n\nWith that Phil and Marc moved towards their aunt, cutting her off at the pass.\n\n\"Aunt Silvia! You made it!\" Phil proclaimed. \"Did you have a good trip?\"\n\n\"I don't know if you'd call it good. You know your Uncle Buster. Like t' thought we'd never make it, he drives so slow!\"\n\n\"Hi, Aunt Silvia,\" Marc piped up. Putting an arm around her shoulders he attempted to turn her towards the house. \"Why don't we get you in the house? Becca is probably looking forward to some help,\" he lied through his teeth.\n\nBut Aunt Silvia was not to be persuaded.\n\n\"So, Marc,\" she looked up at him, \"that woman ever gonna come back to ya? I never thought I'd see the day a woman would ever leave you, Marc McNeil, bein' such a ladies man and a doctor and all, and what those girls must think of their mama runnin' off with that man on the internet!\"\n\nFor a moment not a sound was heard. Kevin felt Deonne squeeze his fingers and looked over to see her slowly close her eyes and take a deep breath. Marc dropped his arm from Silvia's shoulder and just stood there, still, his face a blank.\n\n\"The girls are doing fine,\" Phil answered for his brother, hoping to relieve the instant tension, \"and Marc's divorce was final last week. Now, why don't we go into the house and see if there's any coffee?\" Phil suggested, moving over to her other side and carefully taking her arm.\n\n\"No, no, not yet. I want to meet Deonne's young man she brought home first. Is he here?\" she asked while looking around, jerking her head from side to side trying to look past the brothers. Her movements reminded Kevin of the chickens they had dealt with earlier.\n\nFinally breaking free, Silvia turned and saw Deonne holding Kevin's hand. Startled, Silvia stopped and blinked first, then moved over to the couple.\n\nPointing a bony scarlet-tipped finger at Kevin she gasped, \"This? This is your young man?\" and glared at both of them, waves of Jean Nate rolling off of her.\n\n\"Aunt Silvia, this is Kevin Banning. My boyfriend,\" Deonne spoke up. Her academy training served her well and her face was calm, but Kevin recognized the rigid set to her shoulders and felt the grip of her fingers.\n\nUnable to stop himself, Kevin took the older woman's small shriveled hand in his and brought it to his lips, \"It's a pleasure to meet you Aunt Silvia. Deonne's told me all about you.\" As he placed a small kiss on her hand he heard her quick snort in as she jerked her hand back.\n\n\"Hmp.\" Her eyes were wide and she looked at her hand as if it might fall off before looking back at Kevin, her mouth opening and closing, at a loss for words. Kevin gazed back at her with a small innocent smile, a look of mild expectation turning to concern as she seemed to struggle.\n\n\"Careful. Are you all right, Aunt Silvia?\" Kevin questioned, reaching out to steady her, nothing but concern for her complete welfare showing on his face.\n\nNot answering him, she almost fell over in her haste to turn and clomp towards the house. Silence filled the air for several moments as they stared at her retreating back.\n\n\"Priceless. Just priceless!\" It was John, wiping tears of mirth forming in his eyes as he bent over trying to control his laughter, hands braced on his knees.\n\n\"John!\" Deonne was looking at her brother in horror.\n\n\"No, no. Sorry. It was terrible, but it's just, dude, that old bat has been pinching my cheeks since I was knee high to a grasshopper. The look on her face!\" he crowed, \"I'll never forget it.\"\n\nTrying hard to keep his own smile off his face Phil turned to Kevin, \"If I weren't so ashamed, I'd pay you to do that every time you saw her. Seriously, man, I'm sorry. I wish I could say that's the worst of it, but ya never know what's gonna come out of her mouth.\"\n\n\"Don't worry about it,\" Kevin replied. \"I shouldn't have provoked her.\"\n\n\"Man, provoke away!\" John implored him.\n\n\"Food must be ready by now. I'm going to find the girls and get us cleaned up over at my house. See ya in a little while,\" Marc announced before heading off.\n\nLooking after him, Kevin replied, \"That man's the walking wounded.\"\n\n\"That man's much better than he was six months ago,\" John replied.\n\nTurning, she put her arms around Kevin's middle. \"I'm sorry, Kev. I knew she'd be a piece of work.\"\n\nKevin snorted, \"You ain't seen nothin'. If my Louisiana relatives ever catch sight of you, sweetheart, it'll be a hellava lot worse than this.\"\n\n\"Yeah?\"\n\n\"Yeah. But it ain't gonna happen,\" he decided while holding her tight. No way in hell would he put Deonne through that, or himself.\n\n\"I gotta go get cleaned up and help Becca and Camille. They've got to be going crazy in there.\"\n\n\"I think we both need to get cleaned up. Together.\"\n\nGiggling, she replied, \"If we do that we won't even make it for dessert and we'll look worse than when we went in!\"\n\nBut she couldn't stop from pulling him down for a kiss. While her lips nursed at his, she ran her hands down to his neck. God, she loved his strong neck, his close-cropped hair. She continued running her hands over the collar of his sweatshirt onto his shoulders. God, she loved his back. Closing her eyes, she allowed herself to shut out everything but his lips moving over hers, his tongue doing a lazy dance with hers. God, she loved him. Pulling back she slowly opened her eyes.\n\n\"I lo-,\" her eyes widened and she cut herself off. What did she almost do? Was she losing her mind? Oh, God. She almost told him she loved him! Someday she would have to get her nerve up, but today wasn't that day. Kevin was looking at her intently.\n\n\"What was that?\" This is what happened when you dated a special operator. They never missed anything.\n\n\"Nothing,\" she said before looking away. Kevin put his hand under her chin and lifted her face to his.\n\n\"Oh, no. It was something. What?\" His gaze was steady and Deonne couldn't look at him, she turned her eyes away and pulled back.\n\n\"I really need to help Becca.\"\n\n\"Okay.\" He let it go and put his arm around her shoulders, turning them towards the house.\n\nAt the bottom of the stairs he parted from Deonne. She headed upstairs and since he'd been banned from the bathroom, he remembered the towels that needed to go into the dryer. They would definitely need them tonight. As he approached the kitchen doorway he could hear voices rising.\n\n\"Well, I never! My sister must be turning in her grave, her bringing that, that man into her house!\"\n\n\"Aunt Silvia!\" Becca snapped. \"I will not allow you to talk about my mother like that! My mother never kept anyone, anyone from her house. She welcomed everyone!\" \n\nThough he couldn't see her, he could hear her voice catch.\n\n\"My mom loved everyone, she was kind and loving and full of life. If she were here, she would have been the first to rush out and welcome that man! Don't you dare drag my mother down to your level.\"\n\n\"'Down to my level?' Shame on you! We weren't raised to mingle, let alone marry another race! She would be heartbroken to see what her daughter has done!\" With that Silvia threw down her dish towel and stormed out of the kitchen nearly knocking Kevin down. Moving out of her way, he stood in the doorway.\n\n\"God, she drives me crazy!\" Becca proclaimed, her voice shaking.\n\nKevin, unsure of what to do, decided to clear his throat and step into the kitchen. Both women looked up, startled, and worry filled their eyes when they saw who it was.\n\n\"Kevin, did you hear all that?\" It was Camille, speaking softly. Becca visibly took a deep breath, trying to calm herself.\n\n\"Hear what?\" Playing innocent seemed the best role, sparing them mortification. \"I'm just going to put the towels in the dryer. Dee will be down in a minute to help.\"\n\nCamille gave him a shrewd look and decided to buy it. \"That would be great. And, Kevin, I hear you're a fantastic coffee maker. Could you help us with that when you come back up?\"\n\nA smile broke across his face. \"Love to. Dee taught me. She's promised to show me how to boil water next.\"\n\nDeonne hurried into the kitchen a few minutes later. \"Did you get it done? Where is it? Where's Kevin? He didn't see, did he?\" she said in a rush, \"Darn! I should have taken him up on his offer to clean up together; it would have kept him busy!\" Oops. Shouldn't have said that last part.\n\nChuckling, Becca replied, \"Relax. It's all under control. He hasn't seen a thing and he just went downstairs. It's in the fridge on the back porch.\"\n\nDeonne had called Kevin's mother to find out how to make his favorite Thanksgiving dish, orange fluff fruit salad. Taking a peek in the fridge, she was about to peel the plastic back for a finger full when Kevin stuck his head around the corner.\n\nSlamming the door, her face full of guilt, she straightened.\n\n\"Kevin!\" Wrapping her arms around his neck she gave him a kiss.\n\nPulling her off him he said with a smile, \"Keep out of the food little girl, you'll ruin your dinner. Where do you keep the coffee filters?\"\n\n\"Oh! Oh. They're right in here.\" She pulled the porch door behind her closed and turned to open the cabinet above the coffee pot.\n\n\"Becca, where's Dan?\"\n\n\"He's on Dad's bed sleeping. He got in late last night.\" She had an odd look on her face, was it guilt? Deonne noticed that Kevin, his back turned putting coffee into the basket, had a huge grin on his face.\n\n\"Maybe I ought to go get him up. Can you put these potatoes in the serving bowl and get the sweet potatoes out of the top oven? Oh, and we've elected you to make the gravy.\"\n\nDeonne groaned. Their mother always made the gravy and none of them had mastered it. It had been decided that Deonne's was the least frightening. \"Sure. Someone tell Paul to get in here. He knows more about biological disasters than any of us.\"\n\n*****\n\n\"I declare Thanksgiving dinner a success!\" Becca proclaimed as they were putting things away. \n\nThe kids were playing games or watching a movie upstairs in Andrew's room, which had a spare TV in it and the men had moved into the living room to catch the rest of the Cowboy's game. ",
        "\"I agree!\" Deonne added, wrapping up the rest of the turkey leftovers. \"Did you see how much of that orange stuff Kevin put on his plate?\" All three of them laughed.\n\n\"That was a good recipe, I need to get that from you,\" Camille added.\n\nComing into the kitchen Phil went up behind his wife and put his arms around her. Marc came in trailing him, hunting for pie.\n\n\"You all will have to get by on your own. My wife has been in this kitchen since morning and I'm taking her out of here,\" Phil proclaimed.\n\n\"Phil! I can't just leave, there's too much to do!\" but he was pulling her out the door.\n\n\"You can and you will. I recommend you girls go recruit some help. We're going out.\"\n\n\"Where you going?\"\n\n\"We're gonna hang out with some of my redneck high school friends,\" he replied with a twinkle in his eye. Camille rolled her eyes.\n\n\"If we're late,\" he continued, \"put George to bed for us.\"\n\n\"Phil's right, Becca, you've been at it non-stop, too, since you got here on Tuesday. Go in and watch the game with your husband,\" Deonne said.\n\n\"I'm not leaving you with this!\"\n\n\"Go on, Becca, she's right. I'll help Dee with the rest,\" Marc joined in.\n\n\"Okay, you've talked me into it. I wanna see Green Bay beat the Cowboys.\"\n\nQuietly Marc and Deonne worked side-by-side finishing up the pots. Night had settled over the farm and a cold front had moved in causing the kitchen window in front of Deonne to frost. She noticed the kitchen curtain was dirty and vowed to take it down tomorrow and wash it.\n\n\"He's met someone,\" Marc said quietly.\n\nDeonne turned her head towards him with a question on her face before realization set in. Her dad. Unexpected and unbelievable pain moved through her.\n\n\"She's real nice. She works at the Kroger's in town. You went to school with one of her sons, Mike Connolly.\"\n\n\"Mike Connolly! Mike Connolly? He's one of the biggest jerks who ever walked the face of the planet!\"\n\nChuckling, he reminded her, \"You know, we all grow up. Even Mike Connolly. He's a pretty decent guy from what I can see. And his mom's really nice.\" His face grew serious again.\n\nDeonne was blinking rapidly. She did not want to cry. The idea of another woman with her dad almost made her ill. As she looked around the kitchen, she imagined some other lady making this room her own, putting in her own touches. The pain was so sharp, she almost doubled over.\n\nMarc dried his hands and turned towards his sister. Seeing her fighting tears he wrapped his arms around her.\n\n\"I know it's hard Dee, but you have to work through this,\" he told her as he rubbed her shoulders, massaging them. \"You're the reason he didn't invite her here today.\"\n\n\"Me?\" Then it dawned on her. \"I'm the only one who doesn't know, huh?\"\n\nHe nodded.\n\nHer forehead wrinkled as she tried, and failed, to control her emotions. Fresh tears began to fall and she wiped at them with the back of her hand. She felt so awful that her Dad was compelled to keep it from her, but the thought of another woman was unbearable.\n\n\"He knew it would be hardest for you.\"\n\n\"Why? Why is it hard for me and not anyone else?\" Her tears were still dropping and she wiped her hand across her nose before placing it over her eyes.\n\n\"Because, honey, you haven't worked it all out yet. We were here and you weren't. We are here and you aren't. We've all pretty much grieved and we still miss her, but we're used to it, or we've dealt with it, whatever. But, Deonne, when you come home you still look around like you expect Mom to walk in from the other room. You stand in front of that damned piano and look at it and her picture like it was yesterday she passed.\" Pulling her closely he pressed her head to his shoulder, his own eyes shining from unshed tears.\n\n\"She never blamed you.\"\n\nDeonne glanced up at him with questioning eyes.\n\n\"For not being here. She was so proud of you. When anyone came to visit, she would tell them about her daughter at the Naval Academy who was going to fly jets. She didn't want you here, watching her die. Let go of the guilt, Dee.\" He continued to rub her hair, letting her think.\n\n\"I wanted to be here. I didn't get to say good-bye,\" she whispered into his chest. \"I wanted to hug her one last time.\"\n\n\"You were home at Christmas Deonne, and you said goodbye then. You knew it was goodbye. She said her goodbye to you then. After you left her meds just kept going up, she was hardly awake and barely coherent when she was. Let it go.\"\n\nThey stood like that for long moments. John came to the door and stopped. Realizing what was happening he nodded to his brother and quietly backed away.\n\n\"You have to deal with this and soon. You have to let him feel free to have this woman. He deserves it. Eventually he'll bring her around anyway, whether you like it or not, but Deonne, do you really want that?\" Marc looked her in the eyes, the joking, happy-go-lucky guy was nowhere to be seen.\n\nDeonne looked at him and pulled her lips in, trying to get it together, and nodded. \"I'll try.\"\n\n\"That's all you can do, but with you, it'll be enough.\"\n\n\"They put you up to this, didn't they?\"\n\n\"Who else?\" he replied with a smile.\n\nYes, who else? They all knew that Marc was her favorite, that they had always had a special bond. When she was little, Marc would put up with her following him around with good humor. Because he played the drums, she had wanted to learn and he had spent hours working with her. Marc had loved animals and she had loved animals, so they often partnered for barn duties. When their mother had died, Marc had flown in to tell her in person, so she wouldn't have to be alone and had traveled with her back home. Who else?\n\n*****\n\nDeonne was standing in the living room beside the piano. It was late, and almost everyone had gone home or to bed. Some were still in the kitchen sharing time and coffee. Her eyes were resting on the photo of an auburn-haired woman. Her mother smiled back at her from the past. She was tall, slightly heavyset. Not beautiful, but full of life, the twinkle in her eyes could not be hidden behind large glasses. Had it really been five years?\n\nEvery time she came into this room she could see her mother sitting at the piano. Every Tuesday and Thursday afternoon kids would traipse in and out for their weekly lessons, bringing in much needed cash for their large family. Deonne had been her worst student, refusing to take it seriously and goofing off during practice times. Finally, after two frustrating years, her mother had let her quit.\n\n\"Honey,\" she recalled her mother warning her, \"when you're older you'll wish you had stuck with it.\"\n\nShe wished she had stuck with it. Her finger pushed down on a single key, its lonely sound echoed the emptiness in her heart as it weakly floated around the quiet room.\n\nComing up behind her, Kevin slipped his arms around her. Pulling her into a tight embrace, he saw what had her attention.\n\n\"I still miss her so much.\"\n\n\"I know you do, baby.\"\n\n\"My dad has a girlfriend.\" She almost choked on the words.\n\nKevin waited. Deonne remained silent and still as a stone.\n\n\"And you can't imagine someone taking your mother's place?\" he finally asked.\n\nDeonne shook her head, unable to speak.\n\n\"How long's it been, Deonne?\" He knew the answer, but she needed to say it.\n\n\"Almost five years.\"\n\n\"That's a long time, babe. It's not like you just buried her and he's brought in a quick replacement.\"\n\nHis comment angered her.\n\n\"You don't understand...\"\n\n\"What's not to understand? Five years is a damned long time for a man to be rattling around all alone.\"\n\n\"You don't get it,\" she tried to make him understand in a raised voice. Hurt at his lack of sympathy she pulled away and turned towards him.\n\n\"How can he bring another woman into this house? Look,\" she pointed to the couch, \"my mother picked that out! And those curtains! She made those! How can he bring another woman into this house, see her sitting on my mother's things, touching them? How can he take that woman into her bed?\"\n\n\"Where the hell else is he going to take her, Deonne? The man's a damn farmer! He's tied to this place and a ghost is no comfort on a cold night.\"\n\nHer eyes snapped at him, shooting daggers. Why was he being so mean? So offensive? She started for the door. She didn't need this. But he stepped in front of her, cutting off her exit. Grabbing her arms, he looked hard into her face.\n\n\"Listen, Deonne. I understand how you feel, but you have to think of your father. Do you want him to spend the rest of his life alone? He's not that old. You want him to be here by himself for the next thirty years just so you can come home and see your mother's things untouched?\"\n\nDropping his voice, he went on, \"Is that what your mother would want? Would she want her husband to sit around pining for her year after year? That's not the woman I hear everyone talk about, the generous woman who put others ahead of herself. I know that if something happened to me, I wouldn't want my wife to spend the rest of her days alone. It's his life, and he's ready to move forward with it.\"\n\nTurning her head away, she stared at the floor. She couldn't respond, but he was right. They stood there in silence. Kevin continued to hold her arms, waiting. Finally he stepped backward, pulling her to the couch with him. Sitting down he pulled her down next to him and wrapped his arm around her. Looking down he picked up her left hand with his. Her fingers were thin and long, the nails cut short, practical. They looked so frail next to his. He rubbed his thumb up and down her ring finger before folding her fingers carefully in his hand and laying them on his thigh, unwilling to let go.\n\n\"Tell me a memory you have of your mother.\"\n\nHer response was immediate. \"Coming into the kitchen after school. She was always baking something. Cookies, a cake, maybe a pudding...\"\n\n\"Banana pudding. From scratch,\" Kevin added. He knew because Deonne had made it for him once.\n\n\"Yes!\" she agreed with a smile.\n\n\"You'll always have that Deonne. That memory. And you carry on that legacy; it's a piece of your mother that lives on in you. You shared it earlier today with all of us in those pumpkin pies. It will never go anywhere, even when this couch falls apart and gets replaced, the curtains get taken down. And all of you carry something of your mother with you.\"\n\n\"I never thought of that,\" she admitted as she wiped at the tears forming at the corners of her eyes. \"When did you get so smart?\"\n\n\"Girl! I keep tryin' to tell ya, but do you listen? Babe, you gotta listen ta the brotha!\"\n\nWith that he bent down and placed a gentle kiss on her lips.\n\nA throat cleared. Jerking their heads back Deonne and Kevin looked up to see Becca standing in the doorway, Dan behind her, a big grin on his face.\n\n\"Sorry to break this little love fest up, but Deonne, you need to get your stuff out of the bedroom. Dan and I need to go to bed and there isn't another room for us. You get the couch, I guess. Sorry.\" Not so much, not from the look on her face.\n\nTen minutes later she plunked her stuff on the floor by the couch. It wouldn't be the first time. Looking at the coffee table she saw two mugs of hot chocolate.\n\n\"I thought you might like some.\" Kevin smiled at her.\n\n\"I do! How sweet.\"\n\n\"That's me. Sweet Kevin,\" he grinned down at her. Spreading his legs, he pulled her next to him and wiggled his dick back and forth on her stomach.\n\n\"Sweet, huh? More like rotten.\"\n\n\"That's not the impression I get when you're lickin' and slurpin' on my dick!\" He rubbed his hard cock against her for emphasis. He grinned at the small blush that formed on her cheeks.\n\n\nHer shyness amazed him. Even now she was always slow to get comfortable with him after a lengthy separation. Bending down he rubbed the side of his nose against hers, nuzzling before kissing her.\n\n\"Maybe I need to demonstrate just how sweet I can be,\" he whispered and smiled into her mouth.\n\n\"Not on your life, Big Daddy. Not here, not now, no way.\"\n\nSmiling at her, he asked, \"Why baby, don't you know you're in the love parlor?\"\n\n\"What?\"\n\nRunning his tongue over his teeth, he continued smiling.\n\n\"Well, last night the front door opening woke me up. I didn't realize anyone would be coming in late, so I listened. I decided maybe one of your brothers had gone out late and was just coming in. But after a while I realized there was still noise coming from downstairs, so decided maybe I should check it out, just in case. I get down here and what do I see? Well, some man and Becca are gettin' real busy here on the couch.\"\n\n\"That's why she was acting so odd in the kitchen! And you were grinning! I wondered what that was all about.\" She shook her head, a big smile splitting her face. \"Those two have never had any discretion. They've been goin' at it like rabbits all over this place since she brought him home the first time. Welcome to the Becca and Dan Voyeur Club.\"\n\n\"You're kidding?\"\n\nDeonne took a sip of her chocolate and licked her upper lip.\n\n\"I wish I were. We've caught them everywhere.\" Digging into her cup she pulled out a large marshmallow and sucked off the creamy bottom. Kevin nearly groaned out loud.\n\n\"Well, we'd better get busy if we're going to catch up!\"\n\n\"Ho, no, bubba. I'm not going to be the laughing stock of the family. Becca can keep her position.\"\n\nShe popped the rest of the marshmallow into her mouth and Kevin couldn't take it any longer. Carefully he took the cup from her and set it on the table before picking up her other hand and put the sticky thumb and two fingers in his mouth. She watched as he sucked and licked his tongue around her fingers before spreading them and sucking each one into his mouth.\n\n\"Mmm, baby. So sweet. Let me have some of that sweet little mouth now.\"\n\nHolding her arm, he pulled her sticky hand out, bringing her mouth up to his. His lips barely touched hers before she was opening up to him, eager for his thrust.\n\nDear God, how did he do it? Moisture was running out of her, her pussy instantly ready, no need for a warm up.\n\n\"Damn. As much as I'd love to take you on the couch, you're right. I can't do this with your daddy at the top of the stairs. It would be a hell of a way to go, but the idea of it all being over when the buckshot hit my back is just enough to stop me.\"\n\n\"He hasn't shot Dan yet,\" she giggled.\n\n\"That's one lucky dude is all I can say.\"\n\n\"Well, let's finish our chocolate like good little children then.\" It was her turn to pull him to the couch. When he sat next to her, she handed him his chocolate, now cool.\n\nKevin looked over at her as an open, mildly amused look lit his face.\n\n\"What?\"\n\n\"I was just wonderin'. Why you so short? Your family are fuckin' Amazons.\"\n\nShe burst out with a laugh. Nobody called her short. Then she looked at him with a straight face, \"Because I prayed to God everyday that he wouldn't make me a giant.\"\n\nHe laughed.\n\n\"You think I'm joking? It was my most fervent prayer. It was either that or recessive genes. Both my grandmothers aren't tall.\"\n\nWhen they finished their drinks, Deonne reached behind her and pulled the quilt off the back of the couch, covering them. After a while Kevin stretched out along the back and tucked Deonne next to him, adjusting the blanket. Within minutes she was asleep.\n\nAs she lay against him he felt her breathing grow slower and deeper, the delicate skin of her waist rising and falling under his hand. He shifted his leg into the curve of hers and wondered at the perfect fit of their bodies. Inhaling the soft, fresh scent of her shampoo, a feeling of deep contentment settled over him. He pulled her tighter to him. How the hell was he going to let go of her at the airport on Sunday?\n\n*****\n\nDeonne woke in the middle of the night to the feeling of Kevin's hand gently rubbing and fondling her breast. Almost casually it meandered up over her chest and back down again, squeezing and lightly tugging on her nipple through the thin satin bra before moving down to caress her stomach in a slow circle under her bellybutton then taking a leisurely path back to her breast.\n\nWith each pass his hand would travel just a little closer to the heat that was growing between her legs and Deonne's insides tingled at the thought of his hand moving lower, his fingers sliding in her pussy juices, dipping into her quivering lips. Rub, fondle, up, over, squeeze, tug, caress and circle. Over and over his hand repeated its lazy route and with each pass of rough, warm skin over soft, gentle curves the small ripple of desire grew stronger until it was a rolling wave of wonton need across her body. Deonne felt his growing hardness against her bottom as she wiggled and rocked against him, her body silently begging for him to take her.\n\nGod, he was driving her crazy. She desperately hoped this wasn't his only plan when she felt his smile on her neck before his wet tongue moved to her ear. His hand slipped inside her pants and down into her creamy folds, cupping her before stroking a large middle finger into her wetness. \n\n\"Fuck me,\" she whispered. Her hands found her buckle and the snap of her jeans as she and Kevin showed amazing coordination skills getting them off and his cock free.\n\nKevin ran his hand down her pelvis, placing her leg over his. She was giddy with the need to feel his cock spread her quivering pussy lips. And then he was there, his blunt, hard head spreading and stretching her, his thick length filling her. Slowly, he pushed into her slick warmth before drawing back, each thrust sliding deeper, each trip taking him further and further into her channel until finally his hips rested against her ass.\n\nDeonne lay still, allowing her excited inner muscles to clutch and release his hard length as the feeling of completeness washed over her. Never had Deonne felt with anyone like she did when Kevin took her. She wondered if Kevin felt the same way, or was she alone in feeling this unique bond?\n\nSoon they were rocking gently together and Deonne sighed as she felt him moving in and out of her; the mandate for silence somehow making this tender coupling more exciting. Kevin swirled his fingers over her clit, circling the tender flesh and Deonne bit her lip to keep from moaning. She was growing more engorged, more sensitive to the fullness and friction of his cock deep within her and was desperate for him to speed up, to stroke faster.\n\nSplitting those fingers down either side of her swollen clit, Kevin grasped the little nub and pulled, stretching it before they slipped over the super-sensitive tip. A small unstoppable cry erupted from Deonne. Back and forth his fingers tugged and pinched the vulnerable flesh, teasing and tormenting, pushing her higher and higher. She was close, so close.\n\nThe rhythm of Deonne's hips picked up as her climax started to pulsate out from her wet pussy. Kevin's short, deep thrusts bumping against her grew more intense and his fingers on her more demanding.\n\n\"Oh, yeah, that's it. You feel so good, babe,\" he whispered into her ear between stuttered breaths.\n\nDeonne grabbed her tits and twisted the agitated tips as pleasure ran down every nerve, bending her forward, drawing her body taut. Kevin wrapped his arm tight against her hips to keep her on the couch and stop the thrusting friction from driving him over the edge.\n\nLittle by little she calmed though they were both still breathing hard and Kevin released his death hold. Inhaling the lavender scent he had come to expect whenever she was near, he gave himself a moment to recover before starting a slow pump into her again, this time allowing the tempo to increase and his cock to drive deep with each thrust. \n\nThe old, well-worn and practiced couch gave off a tale-tell rhythmic creak, but Kevin was too overcome with need to do anything about it or to care. Her wetness was all over him, running down his sac. His soaked pubic hair stuck to her ass as he moved against her, giving him a gentle massage. Hot breath rushed out of his lungs as he felt her soft inner walls slide against him and the pulsing tightness pull him to deliverance. Shifting, Kevin grasped both hips in his shaking hands as the sweet pain of denied release demanded he start ramming his cock up into her. ",
        "As he felt her shuddering and jerking with her second orgasm, need tore through him and he thrust hard, driving into her over and over, shot after shot of come erupting from him, coating her insides.\n\nSpent, Deonne leaned back against his chest feeling it rise and fall as Kevin finished pumping, his dick softening inside her. Reaching one arm over her shoulder seeking his head, she tenderly rubbed the side of his face.\n\n\"I can't take you anywhere, you naughty boy,\" she whispered and they both snickered.\n\n\"I do seem to recall the farmer's daughter ordering me to, and I quote, 'Fuck me'. So, better get your pants on, slut, before someone comes to investigate,\" he whispered back.\n\n\"Oh, gee.\"\n\n*****\n\nMama Don't Live Here Anymore\n\nDeonne inhaled. She had been looking for the right moment all day, but there just hadn't been one, this was as good as it was going to get and she couldn't put it off any longer. It was time to talk to her Dad.\n\n\"Daddy?\"\n\n\"Hey, Deonne,\" her father replied, looking up from the twenty-four hour news station over his shoulder to where she stood by the door.\n\n\"Where's that man of yours?\" her father asked. She decided to take that as a good sign.\n\n\"Oh, he's off with Phil and Little George, getting a local tour.\"\n\nDeciding to forgo the small talk, she started with Kevin. Funny how this seemed like a big deal on the way here, but now talking to her father about him wasn't much of a concern. The other thing she had to discuss was much harder.\n\n\"Daddy, what do you think of Kevin? Can I keep him?\" she joked.\n\n\"I don't know Deonne, I figure that's up to you,\" he replied seriously to her joke. \"Do you want to keep him?\"\n\n\"I think so. What do you really think?\"\n\n\"Deonne, are you really asking?\"\n\n\"I guess I am.\"\n\n\"He seems like an alright boy. Anybody willing to put his life on the line for his country like that always stands higher in my book, any day of the week, but that's just me. Especially now when there's lots of other opportunities out there for an educated young man and it ain't popular right now to be in the military. I think your mother would a' liked him real well, too. But then,\" he smiled at her, \"she liked everybody, didn't she?\" He got quiet for a while.\n\n\"I guess you're plannin' to get out then?\" he asked.\n\n\"I've always thought I would get out after my obligation, but my job is so exciting. If I didn't have Kevin or a future to think of, it would be really tempting to stay in. They've offered me post-grad school, or maybe test pilot school if I re-up.\"\n\nHer dad chuckled. \"They sure know how to bait the hook, don't they? You know, I always figured you'd end up staying in.\"\n\n\"Really?\" She was surprised.\n\n\"Yep. You always did like a cheap thrill. You like anything that moves: cars, tractors, roller coasters... bikes... horses, you name it! And the faster the better. I remember finding you plowin' 'nat cornfield down by the river s' fast it was nothing but a big dirt cloud! I didn't think a single seed would make it. None of those boys worried me like you did.\"\n\nThey both laughed at the memories and Deonne found she was comforted by the easy cadence of the local dialect as her father spoke, realizing how much her own speech had changed since leaving the area.\n\n\"But I've never known anyone who likes security more 'n you,\" her father continued. \"You like knowing how things are going to be, you like it predictable and safe. You don't like change. I think going off to the Naval Academy was probably the bravest thing you've ever done. But now you understand the Navy, you're part of it, so it's safe for you. I thought you might just take the easy road. 'Course, I didn't figure a man into the equation, thought you'd just find yourself some safe, easy Navy guy.\" He smiled at her.\n\n\"Yeah,\" she said quietly as she let what had to be one of the longest conversations she'd ever had with her dad settle into her brain.\n\n\"So, I hear you have a girlfriend.\" Deonne was proud of how well that came out.\n\nHer father leaned forward in his chair and stared at her. She tried to not wiggle from the tough scrutiny.\n\n\"They finally told you, huh?\" He scratched his forehead.\n\n\"You like her a lot?\"\n\n\"Yep, I do.\" He was never short for words, she thought wryly, grinning.\n\n\"Not going to give me any more than that, huh?\" she chided.\n\n\"Nope.\"\n\n\"Well, I hope she gets more out of you than I do!\"\n\nThe smile fell from her face.\n\n\"I'm sorry you didn't feel you could invite her to Thanksgiving because of me.\"\n\n\"It's okay, Dee. I would like you two t' meet, but I'm not doing that until I know you can behave.\"\n\n\"Daddy!\"\n\n\"Seriously, Deonne. I know how you can get sometimes. That mouth gets ahead of your brain. She's a nice lady and doesn't deserve it.\"\n\n\"Okay, okay! I think I can behave if you bring her over for dinner tonight, or tomorrow.\"\n\n\"That's not good enough.\"\n\nSighing, she tried again. \"Alright. I swear on the grave of John Paul Jones I will be on my best behavior.\"\n\n\"Good,\" he decided with a grin, settling back in his recliner, \"'cause I believe that's her car I hear pulling up right now.\"\n\n\"Daddy!\" She jumped up and looked down at her finger-paint splattered t-shirt and realized she hadn't brushed her hair since morning.\n\nThe doorbell rang and her father went to answer it. She watched as a thin woman of average height with short light brown hair just starting to gray stepped through the door. A small knot formed in Deonne's stomach.\n\n\"Helen, you know you don't have to ring the doorbell! Come on in and meet Deonne.\"\n\nHer father gave the woman a small hug and Deonne tried to tamp down the feeling of betrayal that overwhelmed her. Her mother was the only one who should get those hugs, but her mother was gone, he was betraying no one.\n\nDeonne found herself rooted to the floor, the knot was now a large stone. The older woman walked over to her with a warm smile and an outstretched hand.\n\n\"Deonne! It's so nice to finally meet you. Your father's told me so much about you. It's nice to see more 'n a picture. I think it's just wonderful how you're servin' our country!\" She continued to smile at Deonne.\n\nShe sure is a talky thing, Deonne thought as she took the woman's hand. She realized she was staring at Helen's Toby Keith t-shirt. Her father loved country music. Her mother had not appreciated it, preferring classical.\n\n\"Mrs. Connolly, I just realized how late it's getting. I need to get to the kitchen and start supper.\"\n\n\"Oh my! Call me Helen, honey! And I'd love to help.\"\n\nDeonne looked at her father with an earnest look on her face. Please don't leave me alone with this woman!\n\n\"You ladies go ahead. I need to go call the cows in,\" and with that he headed towards the door.\n\n\"We're not having anything special, just spaghetti,\" Deonne mumbled.\n\n\"Anything that doesn't look like a Thanksgiving leftover sounds wonderful to me!\" Helen replied.\n\n\"Well, it's easy to feed a crowd with it and it's pretty quick.\"\n\nSoon they were sitting at the table sipping soft drinks, the sauce simmering and everything waiting for the returning masses.\n\nDeonne ran her finger through the condensation on her glass.\n\n\"How did you meet my dad?\" She wasn't sure she wanted to hear the answer, but she needed to push herself, to make herself accept it.\n\n\"I had a flat tire out on Route 923. He pulled over to help and I swear to God I almost passed out from fear! I thought I was about to be attacked by a giant ex-con!\"\n\nDeonne laughed. Her dad had always had that effect on people. He looked like he would be more comfortable on a Harley than a John Deere.\n\n\"But he was really s' nice. He was a perfect gentleman. My spare had dry-rotted and he ended up driving me into town to get a new tire. That man wasted half his day on me!\"\n\nHelen looked down at her hands on her glass then back at Deonne.\n\n\"I know this is hard for you all, your dad bringing another lady around and all. You're mother seems like she was just a wonderful woman. Like someone I would've loved to have known.\"\n\nDeonne could only nod, her throat had clogged up and no words would come to her.\n\n\"I'm no replacement for your mother. I couldn't be that. I wouldn't want to be that. But I like your dad a whole lot. I've been divorced a long time and I thought I'd never meet anyone. I didn't realize how lonely I was until you're dad came along. You kids are real important to him. I just hope you all keep letting me share him.\"\n\nDamn it all to hell, how could she hate this woman?"
    ],
    "authorname": "driphoney",
    "tags": [
        "interracial romance",
        "interracial novella",
        "black male",
        "bm/wf",
        "military",
        "farm",
        "biracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/ready-ch-03"
}