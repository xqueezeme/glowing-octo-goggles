{
    "title": "My Little Ventrue Pt. 04 Ch. 07",
    "pages": [
        "~~Jack~~\n\n\"Um, sure. Is that ok, my Prince?\" he said.\n\n\"... oui, mon amour. But, return to my side when you are done.\"\n\nHe gave her his best 'I love you' smile, and with a small bow, turned and walked off to join Athalia. As he turned, he took a glance at everyone's gaze, to see what they thought of this strange development. Bunch of raised eyebrows. People were as confused as him.\n\nIt took a little bit for the two of them to find a place that was a little quieter, a little further away from everyone else. With so many people around, a private conversation was basically impossible, but Athalia took them up the balcony stairway, and as they passed the symphony, Athalia guided them along the wall into a corner near a balcony railing. Best they were going to get.\n\n\"Jack,\" she said, \"I understand that you've been a bit of an ambassador for the Kindred to the Uratha.\"\n\n\"Um, not exactly. I'm just a middle man, exchanging information between the two. If I was an ambassador for the Kindred, I'd have a little decision making power. Got none of that.\"\n\nShe nodded, stroked her chin a few times, and turned to lean against the wall. And, much like Beatrice would, she folded her arms across her chest, and sneered as she looked out over the balcony.\n\n\"Your bosses tell you what they did?\"\n\n\"... no.\" Uh oh.\n\n\"Well, fuck em. They put explosives in the tunnels where Azamel lives. Remote detonators too. If she does anything to upset them, they blow the tunnels.\"\n\nWelp, shit.\n\n\"I... I'm sure they're just trying to deter\u2014\"\n\n\"Don't even say the word.\" Athalia sighed, and threw up her hands like she was ready to scream, but folded them under her bosom once more. \"Now you know how serious the situation is, when I say Azamel wants a way to communicate.\"\n\nOf course she did. \"And that way is me.\"\n\n\"Seems to be the 'in' thing to do. No fights between the vamps and werewolves yet, so that's a plus in your court. And you're in deep with the Prince, so that's a valuable angle right there.\"\n\nDon't ask her why she hates Kindred, don't ask her.\n\n\"... why do you hate the Kindred so much?\"\n\nGod damn it Jack. If there is one way you're going to die, it's pissing off a monster with your big mouth.\n\n\"Christ you got balls. But, I am being pretty rude here. Not that I'm going to stop, but it warrants explanation. I lost important people to vamps.\"\n\n\"Lost?\"\n\n\"Yeah, lost you little fuckwad. Dead, killed, gone. I was just a little girl, and I lost a lot of important people to Viktor. You know, your grandsire?\"\n\nOh shit. Shit shit shit. \"I... I'm s\u2014\"\n\n\"Stow it. I was just a kid then, long time ago. I was in my late twenties when I became a Begotten, and that was over twenty years ago,\" she said. He took a moment to look her up and down. Begotten definitely aged slowly then, cause the woman looked no older than thirty.\n\nHe wanted to ask her what Viktor did to those people, specifically, but it could have been anything, including some seriously nasty shit better not asked about. Daniel would know, but he wasn't sure he wanted to pry. But, dead loved ones because of vampires? Yeah, he could understand hating a people, a race, because of that. He wasn't even that close with his family when he was alive, and the thought of his sister or mother being murdered sent a chill down his spine.\n\n\"And the Uratha?\"\n\n\"Fuck the dogs. I've been to other cities, and the dogs there are fucking pricks. Call everything their territory. I try to be nice, and all I get is suspicion. Suspicion turns to a fight, and before you know it, I've got a pack of wolves on my ass. Killing a werewolf is not easy, let alone three.\"\n\nHe blinked at her, a few times, and then stepped over to the balcony railing to look down at the socializing people. The buffet was getting a little heated, with more than a few of the kine there now naked save for some underwear, and hands rubbing them as a couple Kindred pinned many of them down onto chairs, or held them tight onto tables. The kine seemed more than happy to let the Kindred indulge, the Kiss being an enjoyable experience when the Kindred made it so, but he was surprised to see how loose everyone was getting with it. \n\nStop avoiding Athalia. She'd killed three werewolves? Her? The hell kind of monster was inside this woman?\n\n\"Well... Viktor's dead, and the Uratha here are\u2014\"\n\n\"Viktor's dead, the Invictus aren't. And far as I can tell, none of you give a shit about your kine.\" She raised her fingers to quote the word 'kine'. \"As you can see from the orgy below, they're just bloodbags to you. So, fuck your vampires. And the wolves? Just angry dogs waiting to bite anything that gets too close. So fuck them too. And... and I don't have to justify my anger to you, that's not why I invited you to chat.\"\n\nHe'd expected someone a little more closed off, brooding and quiet, not this loud mouth ready to yell at anything that moved. This woman would have pissed off a tree, given time to shout at it enough.\n\n\"Then\u2014\"\n\n\"I invited you up here to tell you Azamel wants to speak with you. Alone.\"\n\n\"But\u2014\"\n\n\"Don't tell your giant girlfriend with the tits hanging out. Don't tell your bosses or friends either. If you do, this whole ambassador idea is shot, and you vamps can go to hell.\"\n\nVolatile. He sighed, but nodded, and rubbed his buzzed hair as he considered the implications. Talk to Azamel, alone, without telling his boss or Antoinette? They'd be pissed. And now that the Invictus were apparently trying to control Azamel, they'd be super pissed if he talked to her without telling them.\n\nBut the other options were to tell them, and piss her off, or not go, and piss her off. Azamel seemed reasonable enough last time he spoke with her, and that meeting hadn't exactly been planned, dropping by randomly like he did. But he trusted Julias, and Julias told him to stay away from her.\n\n\"... when does she want to see me?\" Fuck it. Nothing risked, nothing gained, right?\n\n\"In a week. Show up around two, and be alone. No friends either.\"\n\n\"Two AM, next Saturday. Got it.\"\n\nAthalia nodded, sighed, and moved toward the balcony stairway.\n\n\"Leaving?\"\n\n\"Course I'm leaving. I don't want to be here.\"\n\n\"Kind of thought maybe Daniel had convinced you.\"\n\n\"He offered, and Azamel saw an opportunity to get a feel for the situation here.\" She shrugged, but at least she'd stopped and turned to face him. \"Idiot is just trying to make it up to me.\"\n\n\"It? What happened?\"\n\n\"Wouldn't you like to know? Fuck, you are a nosy kid. Want to know, go ask him.\" And again, she turned to leave. But he stepped forward, and grabbed her wrist. \"... what the fuck?\"\n\nYeah, what the fuck Jack? Stop playing with fire, and let the volatile explosive in heels leave.\n\n\"Not everyone is like Viktor.\"\n\n\"Kid, you have to have a death wish. Let go before I\u2014\"\n\n\"I'm doing you a favor, Athalia, because everyone in a ten-mile radius can see how deep you are in your hatred, to the point you can't see out of it. You're at the point of reflex, where it's a part of how you think, how your subconscious works, to hate. If you pulled your head out of the black water drowning you for a moment, you might see that many of us are just good people trying to get by.\"\n\nShe twisted, yanked her arm free, and approached him. Oh good god she was going to break his neck. Could a Kindred recover from that? Sure, but he didn't want to feel what that was like.\n\n\"You talk like you know me, you little brat.\"\n\n\"Don't need to be a psychologist to see someone trapped inside their assumptions, Athalia, someone afraid to look outside their prejudices, in case they might be wrong.\" Stop talking stop talking stop talking.\n\n\"You think cause your big bad girlfriend is here I won't rip your arm off?\"\n\n\"I think you wouldn't get so defensive if I wasn't hitting so close to home. I know, I'm just a stranger, some kid you don't know, but I've known people just like you. Viktor's gone, and if you took a second to look around, you'd see how much better things are now that he's dead. No one's sad he's dust, and if you swallowed your hate long enough to look down over the balcony, really look, you'd see everyone, Fiona, the wolves, the humans too, are all enjoying themselves. Could be you.\" Yeap, he was a total idiot. He had no reason to say this to this woman, no reason to try and yank her out of her pit of self-inflected despair. Let her rot in her own misery, let her stew in the pain she brings on herself. Why the fuck do you want to open her mind, when you barely know her?\n\n\"... you have serious balls, kid. And you love to open your mouth when you shouldn't, don't you?\"\n\n\"Yeah, I do. Bad habit, and I know it's going to get me killed one day. Just... some things need to be said, you know? And no one else says them. So I say them.\" And he's been saying them more, and more, with more confidence each time. Or cockiness. Hubris, Jack, hubris. \"Kindred are sneaky creatures by nature, lot of lying, manipulation, misdirection. I'm... not a fan of that.\"\n\n\"... neither am I.\" The sneer on her face didn't go away, but at least she walked over to the balcony, and took a long hard look at the people laughing, drinking, socializing. More than a few people had joined Fiona, and were chatting with the increasingly drunk woman; poor girl was going to need a chaperon.\n\nJack came over and stood beside her. This woman was dangerous, and he could feel the alien power coming from her, something dark and haunting and more than capable of tearing him to bits. It didn't stop him. Maybe he was just getting used to that feeling, being around deadly predators so often.\n\nHe smiled down at the sight of four Kindred standing around one of the tables, with a kine lying upon it. A beautiful woman to be sure, with a black dress that barely covered anything. The four vampires were drinking her from different places, and holding her down as they did. It might have warranted interruption, if the kine's face wasn't smiling bliss. One of the Kindred slipped her hand underneath the woman's skirt, and the kine's moans joined the increasingly boisterous noise of the party. More hands reached out for her body, sliding into the cleavage and pulling it down to expose her breasts. Fingers all over her, massaging, groping, fingering the trapped woman into a very obvious slew of orgasms as the vampires very, very slowly drank her.\n\nYou could taste the difference in the blood, he knew, from his time with Ashley and Julee.\n\nHe'd never seen one of these balls get this physical, this sexual, despite knowing full well it was a very real possibility. Not a ball, it was never a ball. This was a party, just like Bloodlust, and the Kindred called it a ball in some weird sense of superiority. When the rubber hit the road though, the vampires jumped on the opportunity to get physical. If there'd been rave music and darker lighting, he was sure half the people in the room would have been fucking or dancing naked. \n\n\"Christ you vamps are fucking horny.\"\n\n\"I, um... I mean they keep telling me Kindred often lose their sex drive as they get older, and the bliss of the Kiss replaces it. So far, that does not seem to be the case for almost anyone I know.\" Maybe Jacob, maybe Maria, but as far as he knew, Dolareido kept nearly every Kindred's sex drive sky high at all times.\n\n\"I can see why you're making the impact you are, kid.\"\n\n\"Impact?\"\n\n\"Yeah. Azamel described to me what this place was like, before I was born, and what it's like now. A lot due to you,\" she said. No mention of Jack's direct influence over the fate of three elders though, thank god. \"You do speak your mind. And you've got this cute thing going that makes it hard to want to hurt you for your big mouth.\"\n\n\"... thanks.\"\n\n\"And, it's the whole sincerity thing, genuine... giving a shit. Only vamp I've ever met who talks like that.\" She shrugged again, and gestured to yet another kine. \"Fuck, utterly shameless.\" A man, one of Jennifer's ghouls, standing, with four Kindred around him. A woman undid the man's loincloth, and let it fall away, before she wrapped her fingers around his length, and started to stroke it. All the while, she was pressing her side to the man's chest, and sinking her teeth into his shoulder, while the other three found spaces to bite along his neck and other shoulder.\n\n\"Shameless, but harmless,\" he said. \"The kine are enjoying themselves. Hell, even the Uratha and Fiona seem to be enjoying the show.\" Fiona in particular had come to stand close to the four Kindred feasting on Jennifer's ghoul, and Jack could see her blushing as she watched the man struggle to stay standing with four sets of fangs slowly draining him of blood. Girl was also very obviously staring at the hand stroking him off to a quick orgasm. It made sense, being Begotten and not Kindred, that it wouldn't be the biting that'd interest her.\n\nNone of the Kindred got naked, or started having sex, or touched themselves. That'd be crossing a weird line. No, this was about Kindred indulging in the utter decadence of having a literal buffet at their beck and call. The worst any of them had to worry about these days was a disagreement over the Mirrden district, or maybe Azamel or Avery causing trouble. And the overwhelming majority of Kindred in the ball weren't even alive, let alone embraced, when those two had caused issues for Dolareido.\n\nEveryone was ignoring the danger Barry's death represented.\n\nSo, like carefree teenagers, they embraced the deliciousness laid out before them. And Jack couldn't blame them. And he couldn't understand why anyone would. Hell, with the fucked up world they lived in, Kindred, Begotten, Uratha, they all in the shadows so the near eight billion humans didn't discover them and annihilate them. Yeah, some harmless sex wasn't just acceptable, it was encouraged.\n\nAthalia kept watching, and he took a few peeks at her as she did. Girl could hate them for what Viktor did to her, what the Uratha did to her, all she wanted, but he could tell there was more going on there in her mind, whether she realized it or not. That was what spurned his random outburst to a stranger. He could see there was more. \n\nAnd on top of that he could see she was getting aroused. Poor girl was no vampire, who could simply refuse to blush life to hide their arousal; unless they'd just ate of course. So he forced himself to look away as she squirmed a little, and her nipples started to harden against her dress. Considering how many Kindred were drinking the kine below, hard nipples poking through dresses were everywhere.\n\n\"Sorry I got into your face,\" he said. \"Normally I'd wait until the fourth time meeting you before violating your personal space like that.\"\n\nShe laughed. A real, fun laugh, and turned to face him. \"Yeah, watch where you step. But I appreciate it. Just, hearing that come from one of you was a bit of a shock. Guess there's a reason Azamel's asking for you.\"\n\n\"I'll do my best to see her, and not tell anyone. Got a real nice thing going here in Dolareido, and it'd really suck if something broke that.\"\n\n\"I admit, it's definitely not the place I remember. I\u2014oh god look at that.\" She motioned to one of the darker corners in the ball room. The lighting was never very bright, when Kindred had the option, and the ballroom's lighting was soft enough for some shadows to exist. In one of those shadows, two male Kindred, Carthians, were getting very hands-on with one of the kine. \"Surprised that wolf doesn't just tear them apart.\"\n\n\"Wolf?\" He squinted his eyes to try and see. Wait, the woman being touched by the two Kindred, he recognized her. She was one of Avery's pack. \"You can really tell just by looking? From this far?\"\n\n\"Fiona told me she explained it to you.\"\n\n\"She did, it's just... hard to imagine that you can literally see the beast in us. For us it's something hidden in the shadows of the mind. We can't see it, only feel it.\"\n\n\"I can see it, these wisp of black with fangs inside you. Sneaky, fast, a shadow with a bloodlust.\" She shrugged, and leaned forward on her elbows a little further, eyes on the woman. \"Begotten don't crave blood, usually. We feed on... well, it's different for each Begotten. But, I can imagine a werewolf's blood must be pretty tasty.\" The two Kindred were in front of the distant woman, hands on her, pulling down the straps of her chest and letting her breasts slip free of the black dress. One was leaning in, and was definitely Kissing her neck. The other was fingering her, hard enough to make her body shake lightly, for her legs to tremble, and for her to hold onto the two men lest she fall.\n\n\"They lost one in that whole Azlu incident,\" he said. \"You were there.\"\n\n\"I was. Saw the remains. Pretty horrible.\"\n\n\"I'm guessing she's trying to find some comfort, after losing a pack mate.\" He nodded toward the werewolf.\n\n\"Yeah, some people do that, turn to sex when they're sad.\"\n\n\"Is that bad?\"\n\n\"It can be, but... in this circumstance?\" She shrugged, smirked, and started to head back toward the stairway. \"Looks fine to me.\"\n\nHe smiled after her, and followed. Really shouldn't have tried to get through to her, stupid of him to think he could break through years of her walls of hatred in twenty seconds. He was a stranger to her, and he didn't have any of the details about what'd happened to her. Really, really stupid of him.\n\nStill kind of hoped he did get through to her, though.\n\nHe stepped back down into the ball. Party. Rave? Well, no rave music, but the setting was becoming more heated by the minute. And as he walked past yet a few more kine giving their blood to various Kindred, he took more than a few peeks. Cause, wow, he really hadn't expected to be seeing so much genitalia at this party, but there they were. A lot of humans, and one werewolf, enjoying the Kiss and having a set of fingers stroking or fingering or whatnot.\n\n\"I see the stress and tension of my city has built to a staggering amount.\" Antoinette reached out for him, set her hand on his shoulder, and pulled him in until he was snug against her side, her arm wrapped around his shoulders. \"There have been balls such as these before your time, my little Ventrue, where this display also occurred. Always, such lascivious delights followed times of stress, when Kindred battled Kindred, and Dolareido suffered.\"\n\n\"Understandable, for people to relieve stress this way.\" He looked over his shoulder at the werewolf in the corner. Another Kindred, a woman, had come to join them, and she was leaning in to suck on the werewolf's breasts. The Uratha was definitely drunk, and being taken advantage of, and loving every minute of it, based on the noises.\n\nVampires, standing around in leather, corsets, fancy suits, revealing dresses, while their sources of food squirmed in pleasure as they gave their blood to the fangs awaiting them, all to the soothing yet jovial sounds of string instruments, violins and cellos and double basses. If a crueler, twisted soul was Prince, he could imagine there'd be far less moans going on around him, and far more screams of despair as kine were Kissed to literal death. Much preferred Antoinette's version.\n\n\"One of the few things the Prince and I agree on.\" Jacob. Old eyeless came up to them, grinned one of his trademark twisted grins, and gestured to one of the thralls being drained, a male, who also had a vampire's hand wrapped around his shaft. \"I encourage this! Kindred are animals, beasts, and the beast in us all craves satisfaction.\"\n\n\"When is the last time you engaged in such animal lust?\" Antoinette mimicked his hand gesture, and returned his smirk with her smile.\n\nJacob's grin faded, and a pause followed that forced a wince from Jack. Dancing on a dangerous topic, and the Nosferatu didn't appreciate it. But after a few seconds of deafening silence from the man, he smiled, and shrugged.",
        "\"Been a while, I must admit.\"\n\n\"There are plenty of women here who would enjoy a night with you, old friend, kine or Kindred.\"\n\n\"But would I enjoy it with them?\"\n\n\"Perhaps,\" she said.\n\nYeah, dangerous topic. Jack tried to step back a little, but Antoinette's hug around him was secure. He wasn't going anywhere as these two gods traded veiled barbs and references he didn't understand. It had to do with Minerva, that much he knew, but the nature of that relationship was a mystery, beyond its importance to Jacob. Jack was actually pretty surprised Antoinette took the conversation in this direction, knowing it'd poke the witch in a sore spot. Maybe she was trying to goad a reaction out of him? Sometimes the best way to come to terms with something that was eating at you was to have a spontaneous reaction about it, make some painful revelations.\n\nNo way that was going to work with Jacob.\n\n\"Don't worry about me, Prince. I'm fine. And, considering the amount of sex that goes on in my home, I am surrounded by moans at all hours of the night as is.\"\n\nThat wasn't exactly a counter point, but Jacob seemed satisfied with his response. And it certainly put images in Jack's head. Othello and his ghoul, Jennifer and her ghouls, and Beatrice? Shark mouth had a great body, and he'd seen her breasts, and\u2014yeah, this party was warping his brain. Couldn't think about anything but sex.\n\n\"Jennifer certainly has her eye on Beatrice,\" Antoinette said.\n\n\"Does she?\"\n\n\"Oh do not play coy, old friend. Look at her now, how she glances Beatrice's way every few seconds, and looks the woman up and down. Even with such delights around her, she seems utterly focused on your new project's derriere.\"\n\nNew project? Whatever that meant, it was enough to stir a tiny frown from Jacob before it vanished behind his sly smile again.\n\n\"The love lives of my subordinates are not my concern.\"\n\n\"With how close you witches are, I thought perhaps it would be.\"\n\n\"A little drama only adds to the spice of unlife, non?\" he said, complete with a fake French accent. Jacob shrugged, and gestured to the sheriff. \"Perhaps you should turn your eye to Daniel. Forever on the sidelines, I fear he's been neglected a woman's touch far more than I.\" \n\nThe sheriff had moved to the side of the room closer to the entrance, and was watching. The tux wouldn't fit a sword, but Jack doubted the man didn't have at least two hidden knives on him. His eyes were drifting between the members of the ball, and Natasha. Keeping a close eye on her, and the Uratha around her. \n\nAnd keeping an eye on Athalia too. The Begotten had stopped closer to the middle of the room, and was looking around at the display of blood and skin that surrounded her. But she caught Jack's eye, and he shrugged. Could be her, right? Could be her, just letting loose and getting Kissed, or having sex, or both.\n\nNo way she was going to abandon decades of hatred in a single night, just because he didn't know how to keep his mouth shut. Still, she offered him a small wave of her fingers, before walking out the front door.\n\n\"Daniel is as stubborn as you, old fool.\" Antoinette rolled her eyes, but the smile remained. \"I must speak with Mire and Damor. I will see you at the next Primogen meeting, Jacob.\"\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~\n\n~~Julias~~\n\n\"Jacob is going to cause trouble,\" Triss said.\n\n\"No doubt. He's your boss though, think you can stop him?\"\n\n\"Nope. I'm surprised he's as calm as he is, with Uratha around.\"\n\nYeah, Jacob really hated the werewolves, no doubt about that. \"And Athalia looks like she hates everyone.\"\n\nTriss laughed, and slipped her arm under his, behind him and around his waist. At least she'd taken off her veil, as no one outside could see into the ball. Not really a ball, just a party pretending to be a ball. And as he looked around at the nearby Invictus, he found less Invictus than before as people switched places, more Carthians coming to join them. Many were drinking blood in excess, and some were drinking from ghouls or thralls, kine that were not their own. Some were drinking of ghouls at the same time, and that was making the kine very aroused; Kindred too. That much blood, flowing, pouring, it got to the point some Kindred were purposefully letting blood slip free of their lips, so it dripped down onto the bare skin of their meals.\n\nMost of the Kindred in Dolareido, or any city truly, were young. Ultimately, neonates were the overwhelming majority of Kindred, and neonates had very little sense of self control. Presented with food, with sin and bliss, they were at the mercy of their desires. And, he could see the itch on Beatrice's face. She was young, so such needs were always bubbling at the surface for her as well.\n\nSometimes he felt like an old man, indulging in a woman far too young for him. He laughed, and shook it off when Triss raised a curious eyebrow. If that's how he felt, how did Antoinette feel about her relationship with Jack?\n\nSpeak of the devil. The Prince escorted Jack over until the two of them were standing with them. Jack made occasional glances at the vampires drinking of kine sitting in chairs; one kine was even lying on a table and having four Kindred bite into her. At some point, the woman's shirt had come undone, breasts exposed, and no one made any effort to cover her as she squirmed under the pleasure of a quadruple Kiss.\n\n\"Prince,\" Julias said.\n\n\"Prince,\" Beatrice said.\n\n\"You look lovely, Miss Damor. I am both intrigued and surprised at your choice of attire. It is perfect.\"\n\nTriss squirmed, and hugged Julias's waist a little tighter. Even when she was being nice, sociable, the towering woman made all neonates feel uncomfortable, and intimidated. She radiated power, strength, and a 'fuck with me and I'll kick you out of my city' aura. And, she was showing enough cleavage to have everyone nearby staring with desire. Triss was no exception, but it was hard to stare at someone without being noticed when they were only a few feet in front of you.\n\n\"Thank you, Prince. Jennifer helped me.\"\n\n\"Ah, Jennifer. Lovely woman. Perhaps a little quick to indulge in her feminine wiles.\" To prove her point, Antoinette nodded her head back toward Jennifer, who was obviously enjoying the eyes of the men and women on her. The girl raised her elbows a little higher than necessary when reaching for a glass of blood, so everyone could see how the flimsy fabric hanging around her chest raised as well, exposing her breasts.\n\n\"I'd be remiss if the women weren't so eager to show off said features,\" Julias said. And, winced when Triss elbowed him in the side.\n\nBut Antoinette laughed, and nodded. \"As would many.\" She turned her head, enough so she could look down toward Jack, and set her hand to his chin. With at least a hundred people watching, she guided the shocked boy's face toward hers, and set her lips upon his. The act earned a momentary quiet from the crowd, as they watched in awe at the very tall woman kissing her short boyfriend. The two couldn't be more different, and no one had expected the relationship to last.\n\nJulias was glad it was still happening. He couldn't deny Antoinette had really helped the kid through his fledgling months, probably more than he did. Couldn't help but feel a bit jealous about that, being the kid's sire, but at the same time he was happy the woman was able to help him in ways he couldn't. Though, she did love to put him on the spot, to make him squirm. Kissing him in front of everyone, almost every single Kindred in the entire city? Might as well have been shining a spotlight on him.\n\n\"How has your time been with the Circle of the Crone, Miss Damor?\" she said, pulling away from the long kiss with a smirk. Poor Jack, still shocked, caught between smiling and glancing around at the staring Kindred.\n\n\"My time? You mean, with Jacob? It's been pretty... well, scary sometimes.\"\n\n\"Yes, the old man can be terrifying when he wishes to be.\" She glanced over her shoulder toward Jacob, who was talking with Jennifer, and the three werewolves. Natasha was caught in the middle, but no doubt was listening to every word. Spying overtly. \"But it is not he I wish to speak to.\"\n\n\"It isn't?\"\n\n\"Non. Come with me Miss Damor. I desire to talk, away from our other halves.\" She pat Jack on the head, kissed it, and started to walk toward the balcony. The music was being played from there, but it was a large balcony, and Julias was sure Antoinette would find someplace the two of them could talk.\n\nWhy she wanted to talk to his girlfriend though, he didn't know.\n\n\"Um, yes Prince.\" Raising a brow at Julias, she shrugged, and followed after the Daeva.\n\n\"It's the talking balcony,\" Jack said, once the women were out of earshot.\n\n\"Magically imbued to make people talk.\" Julias nodded, pat Jack on the shoulder, and started to guide him around the ball, like before.\n\nBut he could tell Jack was distracted, and it wasn't by all the thighs and breasts surrounding them. A buffet of blood and a treat for the eyes, and Jack's mind was elsewhere. What did Athalia say to him?\n\nAnd he had to ask. Before he was in the council, he'd have let the boy have his secrets, but he didn't have that luxury anymore.\n\n\"What did the Begotten tell you?\"\n\n\"I... shouldn't tell you.\"\n\nWell, that was a lot better than lying to him at least. Kid avoided eye contact, but he didn't have the squirmy look he used to have when he was avoiding saying what was on his mind. Working on his poker face. Good.\n\n\"Shouldn't tell me? Because it's personal, or because it's Invictus business and it'd damage the Invictus to tell me?\"\n\n\"Bit of both?\"\n\nJulias frowned. He didn't like not knowing, and if it was from Athalia and had to do with the Invictus, that likely meant Azamel was involved. Not knowing was dangerous. But, he was trusting Jack with bigger and more important tasks all the time, and the kid was doing good work.\n\n\"Alright, I trust you.\"\n\n\"... thanks.\" Kid nodded, scratched his head a few times, and sighed as he looked to the front door. \"Pity she left. Woman really hates us.\"\n\n\"I understand Viktor caused her great strife, but I don't know the details.\"\n\n\"I... shouldn't talk about it, I guess. It was really personal, and she didn't give me all the details either. And it seems like she's had a hard life in general.\"\n\n\"Fair enough.\"\n\n\"I'm kind of surprised about this party, er, ball. I mean, Barry's dead, and there's a genuine possibility he was murdered, with four humans as potential threats out there. But we're all here, drinking, having fun, socializing.\" To make his point, the kid gestured to Amanda and Gloria. The two women had a male thrall between them, a new one, and both were suckling on his wrists. Gloria, older, more bold, was doing more than that, with her hand on the man's crotch and rubbing him through his pants.\n\n\"How's your history?\" Julias said.\n\n\"Academically? Awful.\"\n\n\"In times of war, life affirming acts often increase in frequency, not decrease.\" He sighed with the reality; Kindred were dead after all, but the philosophy still applied. \"Keep looking for clues about Barry though.\"\n\n\"I am. More evidence pointing toward those four humans.\"\n\n\"Good. And, we're not ignoring Master Barry Tellern's death. Every Kindred in the city is finding more secure places to sleep from now on, as are you I assume.\" And if he guessed right, Jack would be sleeping at Antoinette's tower from now on. Kid hadn't asked him for help yet, and it wasn't like he wouldn't if he needed it.\n\n\"Antoinette offered, and I think I'll take it.\"\n\n\"Be careful. Cross a line and the Invictus may have to intervene,\" he said. Jack looked up at him, but he offered a small, dismissing shrug. \"I doubt there will be an issue, but the closer you get to Antoinette, the more difficult it becomes for you to grow in the Invictus covenant.\"\n\n\"Because she's a dragon.\"\n\n\"Yes. The Ordo Dracul are not our enemy, but they are not our friends, Jack. And while I'm happy you and the Prince are happily in love, there's a fine line you're approaching.\"\n\n\"A fine line. Any hint as to where that line is?\"\n\n\"If you move in with her, as a permanent arrangement that your living den is her tower, that will greatly compromise your position in the Invictus.\"\n\nJack sighed, but nodded. He knew it, and the Prince did as well. The realities of the covenants, like bickering children that didn't like sharing their stuff.\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nOh god, this again. Last time she'd had a one-on-one with the Prince, Antoinette had told her she loved Julias. And she'd been right. Kind of took the fun out of the juvenile charm of not knowing, the mystery of romance, but it was a good thing Antoinette had told her anyway. Kindred could be stubborn.\n\nBut, just being near the ancient vampire was making Triss's muscles tense. So much like Jacob, and so different. No getting around the two were masters of deception, manipulation, and every tool Kindred had at their disposal to control others. And ultimately, she was one of those tools, someone they could break and mold, or twist and misdirect, someone they could have dancing in the palms of their hands without her ever knowing. She fully expected this conversation to be such a manipulation.\n\nOr maybe Antoinette just wanted to be nice, and help her out like she did last time? Could happen.\n\nThe two of them stepped onto the balcony where Jack and that asshole monster chick had been a moment before. No idea what that was about, and she was tempted to ask the kid. Maybe next time when she visited him.\n\n\"Miss Damor,\" she said, once they found a cozy little place on the balcony to speak, \"I wanted to speak of Jacob.\"\n\n\"Jacob? What about him?\"\n\n\"Now that the Uratha have returned, I know Jacob has been pursuing his own agenda. Of course, the old bastard has never stopped, but Avery's arrival has sparked his interest in some of his older, more sinister goals. And I am concerned for him.\"\n\n\"... honestly, I picture the two of you as rivals more than friends.\"\n\nThe Prince frowned at her, and Triss froze. Jack could probably get away with being so direct with her, but she couldn't.\n\n\"I have known Jacob and have worked with him for longer than the whole of your life and unlife, Miss Damor. Such a friendship transcends petty labels and pettier generalizations. It would sadden me to see him hurt, and I fear his hatred for Avery will ultimately lead only to pain. For him, and for others.\"\n\nBeatrice rubbed her arm, and remembered the Black Blood of Dolareido thing. Jacob's hidden agendas were beyond her imagining, if the man was conspiring with alien entities like that.\n\n\"I don't know\u2014\"\n\n\"Of course you do not know. Sweet child, I am not here to ask for information. You have little to share with me... except, perhaps, that is not entirely true anymore, is it? I know that Jacob has taken interest in you, and has invited you into his shadows, into the dark corners of the Earth where he weaves his webs. Where bodies pile high and he chases that which should not be chased. Should not be named.\"\n\nGod fucking damn it, how did she know that?\n\n\"I still won't tell you anything.\"\n\n\"Of course not dear. And if I truly wanted it, I would take it from you, not ask.\"\n\n\"You\u2014\" She stepped back a little when Antoinette turned to face her, and met her eyes. Red eyes. Fuck, it was like looking into the eyes of a real fucking dragon, Ordo Dracul or not. \"... then what do you want from me?\"\n\n\"To ask a favor.\"\n\nSighing, Beatrice stepped back in again, and stood beside the towering woman. And, standing beside her, she couldn't help but take a few peeks at her body, and how the open cleavage exposed her nipples a little. Hell, from the side like this, Triss could see them pretty obviously. Each tit was as big as her head. Bigger! Fucking hell, Jack was sleeping on those puppies nearly every day too, and\u2014holy fuck stop thinking about sex for one minute. Can't, can't stop, not with a dozen kine below her groaning and moaning as vampires drank and fingered and jerked them off.\n\n\"What favor?\"\n\n\"I expect Jacob will move against Avery, in some way not obvious. Your leader is a crafty individual, and for all my powers, my sources, my abilities, I know I will not be able to stop him. I could deal with him now, but I have faith the man will change, if someone was to give him an open ear.\"\n\n\"You... want me to be his friend.\"\n\n\"After a fashion. Would you? I know the man can be twisted, and he holds a tiny porcelain doll of a soul, hidden deep in the shadow of black talons, inside his tainted shell. But, I knew him from long ago, and there is a wise, sincere man with a shred of humanity remaining, buried within that broken husk.\"\n\nHoly shit. The Prince of Dolareido was laying some pretty heavy personal views on her, and asking her to try and break through to this old friend of hers. Break through to that twisted freak who stuck her in the gut with knives, who summoned fucking demon things from the beyond?\n\n\"... I can try.\"\n\n\"Merci. I would hate for my old friend to become my enemy.\" She leaned forward enough to put her elbows on the railing. Yeap, tits just hanging there in her dress, nipples almost out. God fucking damn those were some massive pillows. \"Your friend Jennifer has quite the infatuation with you.\"\n\n\"I... wait, what?\"\n\nShe nodded in Jennifer's direction. \"The girl embraces sexuality with a familiar zest. But tonight, much of her display has been aimed at grabbing your attention, and yours alone.\"\n\nBeatrice raised a brow, and looked in the Ventrue's direction. The girl was with a stranger, some thrall or ghoul Triss didn't recognize. Looked like they belonged to the Invictus, considering the kine was surrounded by suits. And the suits were either watching, or leaning in to Kiss the poor, mewling woman, while Jennifer fingered the shit out of her. Triss could almost see the juices from the balcony.\n\nJennifer wasn't drinking the stranger though, she was watching, and her eyes were glancing around, occasionally flitting up to find Triss. Eventually their eyes locked for a while, and as they did, Jennifer fingered the girl hard enough to have her body shaking. Whoever she was, the only thing that kept her from falling backward onto a table were the other two Kindred with their fangs in her neck. Why Jen wasn't partaking, Beatrice couldn't figure, but the vampire seemed to not only be having fun making the helpless woman cum her brains out, now she was happy to keep looking at Triss from a distance while she did it.\n\nJen raised her free hand, and slid into the open cleavage of the woman's dress to lift and pull one breast, and then the other free of the clothes so they spilled over the dress's chest. The Ventrue kept her hand upon her victim's breasts, squeezing one of her nipples maybe a little rougher than she should have. The poor human didn't seem to mind. And with Jen's arm raised like that, one of her breast was exposed as well for all to watch, jiggling with the inertia of her arm moving up and down while she fingered the kine into what must have been a fourth orgasm.\n\nJen grinned at Triss, and looked back to her target, to continue forcing the now exhausted creature to cum yet again.\n\n\"... yeah, I guess she has been trying to grab my attention.\"\n\nAntoinette laughed, and turned to look across the way to other people, other Kindred who were enjoying a more laid back experience, drinking from glasses and sitting at tables.\n\n\"An enjoyable little minx, isn't she?\" she said. \"Such brazen confidence. And yet, she serves Jacob loyally.\"\n\n\"Yeah, I guess. Damn girl has been trying to get into my bed for a while now.\"\n\n\"Oh? She wishes to share you with Mire? A pleasant image, I must admit.\"\n\nAntoinette didn't find her shark mouth unappealing? Heh, points for her.",
        "\"I mean, yeah, it is, but... not sure I want it.\"\n\n\"And why is that?\"\n\n\"... you want to talk about my sex life?\" Weird thing for the Prince to be asking about.\n\n\"Look around you, Nosferatu. This is the utopia for Kindred I fought for, for so long the memories are but a haze. Here we group, share stories, and indulge each other our desires with our kine to satisfy them. I expect most Kindred, and Uratha and Begotten, to go home once the ball is done, to enjoy climaxes of their own. No judgment, no fear, simply Kindred being Kindred, letting the blood flow into their mouths.\"\n\n\"Your vision for Dolareido was... to turn it into the sluttiest city in the world?\" Well, she'd succeeded, far as Triss could tell.\n\n\"No. My goal was to create a city where Kindred could exist without a constant, night-to-night struggle to survive, outwit each other, outwit hunters, or outwit our prey. And, to create a city where we may give in to our beastly urges in safety. Where the prey need not die, and where we need not as well.\" She sighed, an almost longing sigh, as her gaze came back to the woman Jennifer was fingering into a coma. \"I have not achieved that goal, not quite yet, but I will continue to try... and, I suppose, this was a rather long-winded explanation as to my interest in your sex life. Yes, it interests me.\"\n\nAntoinette really had a thing for this sort of sexual atmosphere in the party then, almost like she had personal attachment to it. Like, she was seeing her dreams manifest before her eyes. Interesting dream to have, but, it was a pretty damn nice dream.\n\n\"I'm hesitant to let her in the bed, because I'm afraid it'll damage the closeness I have with Julias.\"\n\n\"Ah, that is a fear worth considering. Were you older, I would say it was unfounded, but you are young still, and Jennifer younger yet again.\" A nod and smile later, she gestured with her head toward Julias and Jack beneath them. \"Consider this. While you may worry for how it will affect your relationship, Julias is only concerned for you. The man is wholly in love you with, Nosferatu. For him, it would be to see your pleasure, that would bring him the greatest pleasure. And, as long as you did not betray that love, the man would be overjoyed to sit by the bed, and watch Jennifer and you enjoy each other's bodies.\"\n\n\"I, um... I mean I'd really prefer if he was in the bed with me.\"\n\n\"As would I, were I you. I always have my love in bed with me, to join me in feasting upon the sexual delights my precious ghouls bring to the act.\" And of course, the scary woman didn't even blink.\n\n\"... you really love the little twerp don't you?\" Ah shit she called him twerp. Sure, calling him that around Julias, or the kid himself, was fine. But in front of Antoinette?\n\nAnd she offered Beatrice a tiny frown as well. Shit shit. But, it passed, and the woman nodded before she reached up to pull her mane of hair over a shoulder. Combing it with one hand, she continued to scan the room beneath her, probably taking a hundred mental notes about each Kindred, and the Uratha and Begotten too.\n\n\"I do, with all my heart. For reasons that I am sure are obvious to any who know him.\"\n\nYeah, she could understand that. Kid was a weird combination of honest to a fault, and good-natured, while also being analytical. Probably a welcome change for the Prince, being with someone who just didn't know how to stop being genuine like that. Even if it did land him in hot water.\n\n\"You... you said your ghouls join in?\" Well, if the scary elder vampire was willing to talk about it, and was impartial \u2014 unlike Jennifer \u2014 then she might as well ask her for advice. Girl was as old as Jacob, so she must have had some wisdom. Maybe twisted and biased wisdom, also like Jacob's, but wisdom nonetheless.\n\n\"That they do.\"\n\n\"You... feel comfortable? Sharing Jack? Don't think it kind of ruins the closeness you have?\"\n\nAntoinette stood a little straighter, and looked down at her from her great height. \"My pets understand that Jack is my love, and that, while they are great friends of mine, the closeness between my little Ventrue and I is not to be challenged. They do not kiss him, or at least, not his lips.\" The succubus grinned a small, sly grin with that. \"They would never touch him without my presence, and I no longer touch them without his presence as well. But, when the four of us are together, it is an enjoyable experience, as my ghouls are my pets, and I wish for them to experience the physical pleasures he and I share. And, perhaps, give them a peek into the love he and I have.\"\n\nWhat a beautiful way of describing a foursome. Triss returned to looking back out over the crowd, and took a little longer this time watching Jennifer. The kine she'd been fingering was now utterly spent, comatose on a table. At least the Kindred were kind enough to pick her up and set her down in a chair off to the side, out of the way. Still mostly naked though, but it was the thought that counted. Heh.\n\n\"The details of your relationship with Jennifer are unknown to me, though it is not upon her I lay my confidence. Julias will hold you in his arms, Beatrice, and love you completely, whether it is you two alone, or with Jennifer undoubtedly trying to... well.\" Again, she gestured out into the crowd. Jennifer had found a new target, another woman. Not so aggressive this time, Jen was giving the woman what appeared to be a rather gentle clit massage underneath her skirt, while the kine got comfortable between a couple more vampires. And, of course, she peeked up at Triss and smiled while she did it.\n\n\"Dog with a bone.\"\n\nAntoinette chuckled, and turned her head enough to catch Beatrice in the corner of her eye. \"Please, keep an eye on Jacob for me? He has taken an interest in you. And, he too is a dog with a bone, in this case with his desire for revenge.\"\n\n\"I... don't think he... yeah, I'll keep an eye on him.\" The fuck was she going to do, or say to the man? She'd been a witch, a member of the Circle of the Crone, for what, half a year now, and Jacob had only just now started to show her some of his secrets. None of them were personal.\n\nThe Black Blood thing, that stuff of nightmares, was happy one of the werewolves had died. It and Jacob were discussing it. Connection? Did the weird death entity thing \u2014 god, that was never going to be something she could easily accept \u2014 and Jacob somehow plan for the second Azlu to screw over the Uratha? How the fuck could they have done that?\n\nChrist, she didn't know how any of it worked. Werewolves, transforming into titans, monsters coming out of literal nightmares, spider mutation things taking over human bodies, and now Jacob's friend? Some literal incarnation of... of... fuck it, too much to think about right now. She could think about it later, the next time she let Jacob 'teach' her cr\u00faac rituals. What would he do next time, drag barbed wire over her naked skin?\n\n\"Let us return to our men,\" Antoinette said.\n\nRight, yeah, the men. Right. Stop thinking about Jacob's shit, and enjoy the party. Easier said than fucking done.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~\n\nIt was not her ball, and yet, the ball was progressing just as she had hoped. Just as she had planned. Months of subtle hints, directing the Invictus toward this sort of gathering, baiting them with bits of candy. Good for relations, she would say. And it was good for relations, to remind the Carthians and Invictus, and others, that paranormals need not be enemies.\n\nCooperation was the way of the future; if, perhaps, a little guided, controlled, by someone such as herself.\n\nShe slipped by Jack, and kissed him on the delightful, buzzed head of his. \"I will go mingle with the others. Come, join me.\"\n\n\"Yeah! Ok.\"\n\nAnd just like that, she had stolen Jack away from his sire, and back into the hook of her arm as she took him around the room. Showing him off, though she knew the boy did not strike a good first impression. That was then, long ago, when people were surprised that the great Julias had sired a tiny childe, her included. But now, her little Ventrue was known to others for his dangerous stunt in the tunnels with the Azlu creature. And for that, he was admired.\n\nThey need not know of his trials against Viktor, Tony, and Lucas. Her alone was enough. And Jacob, as she was sure the old devil would be able to piece together some of his exploits.\n\nFor his growing prowess, abilities, and reputation, she could not help but feel pride and joy. To show him off on her arm? Such a vain, amusing indulgence, and she smiled at nearby Kindred as she took him toward a group of the hungry vampires. Many stopped what they were doing, greeted her with the utmost respect, and offered some respect to the little Ventrue as well. And more than a few eyes lingered on her love with hungering gazes. Power was attractive, but also, there was no denying her love was adorable, cute, and as delicious as blood fresh from helpless, exhausted, thoroughly spent prey.\n\nThe Daeva who had brought ghouls of their own did not taste of the others. Such was the way of Daeva, to become obsessed with those they fed from regularly, to make such targets a part of their lives. The thought of feasting upon kine other than Ashley or Julee made her frown, and she wiped it away quickly as she watched the other Kindred indulge in the orgy of teeth and moans. \n\nThere was no ruling that the Kindred would not join the kine in the mess of sexual delights, but the ball did imply that the Kindred were to remain above such base physical desires. Antoinette did not consider sexual urges to be base or somehow beneath Kindred, and she strongly encouraged Kindred in Dolareido to embrace how their unlife allowed them endless sexual satiation. Perhaps, one day, when any and all traces of tension between the covenants were gone, and perhaps when the Invictus were less obsessed with suits, they would encourage such joys as well. It would please her greatly, to see the Kindred bathe in sexuality during such balls, to penetrate and be penetrated, to enjoy climaxes along with their meals.\n\nShe laughed, a quiet and wispy thing, as she let her imagination roam. In the future, perhaps there would be a day when she would sit upon a circular bed, in the center of the grand ballroom, with her two ghouls and her love Jack. And the four of them would perform a grand display of sexuality while hundreds of kine and Kindred watched. The crowd would give into their lust, and would begin to masturbate, or touch each other, as they watched the Prince pamper her lover's shaft between her breasts. Once his seed coated her heavy bosom, she would mount him and sit upon his cock while Ashley and Julee devoured her breasts, massaging and licking, until they were clean and ready to be suckled upon by her love. And through it all, the sounds of moans and mewls would be their music.\n\nA silly fantasy to be sure; but perhaps, not so distant from a possible future. Carthians were enjoying Jessy's ghouls, after all. Strange of the brutish woman to extend such an olive branch, but she had, and it worked. Not only worked, but a rather large amount of the female Kindred, and one male, had included heavy petting while indulging Kisses upon the gifts.\n\nShe stopped before one such display. Three Carthian women were sitting about a table, and a male ghoul lay upon it, naked. He was an impressive display of meat to be sure, and the women looked upon their meal with hungry eyes. One woman sat by his neck, where his head dangled over the table's edge, another beside his chest where she indulged in both kissing, and Kissing his broad muscles, while the final woman sat between his legs. And she was not Kissing him. Rather, she had both her hands on his shaft, and was stroking the man's length, while holding his shaft only an inch from her lips.\n\nAnd, when she put a slow, succulent kiss on the human's glans, the poor kine groaned his pleasure. Two sets of fangs already in him, very, very slowly draining him, meant there was plenty of time for the woman between his legs to have fun with her prey, before inevitable exhaustion and bloodloss would take away his ability to remain erect. Not all the time in the world, but more than enough.\n\n\"Prince!\" The woman performing fellatio tried to stand up, but Antoinette waved a dismissing hand.\n\n\"Please, Caroline, continue, enjoy yourself. I am not here to stop you; in fact, I find this sight quite appealing.\" She grinned down at the three women, and the meal they were sharing.\n\nCaroline, Darla, and Linnea. Carthians, and dressed for a cocktail party. But the ball was no ordinary ball, and the three fit in quite well. While Darla and Linnea were lean, fit looking creatures, Caroline was a more curvaceous woman similar to Antoinette, without her great height. And, like Antoinette, the dark-skinned beauty wore a dress that highlighted her large breasts.\n\nShe could not blame Jack for staring. A man's cock was in Caroline's hands, and with how the woman was sitting, leaning forward slightly so she could kiss the man's shaft, it made her heavy breasts hang forward from her dress and threaten to spill out of the loose cleavage. \n\nHow often had the two of them enjoyed such a position, Antoinette and her little Ventrue? Dozens of times.\n\n\"Are you sure, Prince?\"\n\n\"Yes, please. This feast of flesh has been a joy, and I am both delighted and encourage such pleasures. To see the Kindred of my city feeling comfortable, safe, to this degree? To partake of such pleasures in the presence of others, and other covenants? By all means, continue.\"\n\nAnd she did. The girl was ravenous, Antoinette could see it in her eyes and her body language; she wanted blood, and more. The fact the woman was going to pleasure the kine as her two friends drank from him, was oddly sweet.\n\nPoor Jack. She kept the boy close to her, and could not help but find a strange glee in bringing him close to such public, salacious acts. Despite the unending bombardment of sexual delights she buried him with, it was still easy to bring a surprised, gawking stare from him whenever she wished it.\n\nThe women noticed he was staring, and they grinned with their eyes at Antoinette. The power of the little Ventrue's gaze was a very real force, and she returned their grin with her smile, knowing full well how intoxicating the boy's eyes were. Intoxicating to the point that, a woman might find herself wanting to show off.\n\nCaroline combed back her short, black hair, turned her head just enough so she could see Jack's blatant staring, and smiled around the kine's shaft as she took his length into her mouth. Soon the man was buried to the hilt within her lips, a small distension on the woman's throat showing where his shaft filled her esophagus. And she kept him there, nudging her head back and forth in slow, sensual motions. The poor kine was left a mess of quiet groaning and trembling as Caroline deepthroated him.\n\nAntoinette watched for perhaps a minute more than she should have, but could not help herself. Jack beside her looked so uncomfortable, and the genuine surprise on his face was like sweet blood to her palette. And she had to have more.\n\nShe offered Caroline a nod of approval, and with a slow, lingering turn, guided Jack toward another corner of the grand ball.\n\n\"Are you trying to break me?\" her little Ventrue whispered.\n\n\"Of course.\"\n\n\"Whyyyy?\"\n\n\"Because, the expressions you make are too adorable to not, my love.\" \n\nThey both laughed; her lover, a little more nervously however. But that only made her enjoy it all the more, and she kissed his head once again as they explored the sensual displays around them. At least, until Antoinette found one particular person she was not hoping to find.\n\nDamien Burksen.\n\nShe offered him steel eyes, and waited for the man to make his move. He met her glare for only a moment before his eyes lowered, and turned to look at the flood; and yet, not with the awkwardness of a shy individual. No, with Damien, it was because he knew she did not like him, that the man took his gaze to his shoes.\n\nHow soft had she become? Once, she marched upon Lucas, his churches, and slaughtered Kindred by the dozens with her own hands, with Daniel at her side and Garry as her back up. She was feared, and she was respected. Now? The respect was there, but it had changed as the fear vanished. People were happy with Dolareido, and happy with her. That was good, was it not? That was what she had always wanted, a peace where she ruled with a gentle touch, not an iron grip.\n\nA gentle touch was dangerous. It invited idiocy from those with courage spilling into foolhardiness, and imbecility. It was why Damien had revived Lucas from his torpor when he did.\n\nBut the boy had changed, and that, she could not deny. Changed, and was perhaps never the cruel assassin she had though him to be. He was only a boy, a young man barely older than Jack when he was turned, and fifty-years deep in ignorance at the hand of Lucas's dogma. Both Natasha and Jack vouched for him, and she was not so petty as to hold a baseless grudge.\n\nStill, the memory of his sword severing her limbs was not a pleasant one.\n\n\"Mister Burksen,\" she said. \"You hide well.\"\n\n\"Not a fan of crowds... my Prince.\"\n\nNo, she imagined not. Much like Natasha, or Daniel. A common trait among Mekhet, one they continued to perpetuate with their selection of childe. Lucas was an exception, and yet, his protege was not. Strange, and perhaps prophetic that it was the exception that had to be killed.\n\n\"Damien,\" Jack said, complete with a tiny nod, a knowing nod.\n\n\"Jack,\" Damien said, returning the gesture.\n\nShe should have waited for Maria, before interviewing the boy; the Nosferatu had decided to represent the young man after all. But a few harmless questions would not upset her. Much.\n\n\"I understand that Maria has asked you to begin sermons? In the Dolareido Grand Cathedral no less.\"\n\n\"... yes, my Prince.\" He looked surprised. Good. Maria had not told her, and Damien had certainly not told her. She had learned of their sermons through her own means, and it was a sweet indulgence to remind the man indirectly that she knew what he was up to, without him knowing how she knew. Fifty years he had hid from her eyes, and she would allow that no longer. \"Is... that a problem?\"\n\n\"Your means of acquiring followers has been passive enough to satisfy me. Keep it as such, and I see no issue.\" Not that it guaranteed there would be no issue, but as long as the man acquired his followers through nothing more than a few words of encouragement from Maria, she felt it would be fine. The boy had proven he was not Lucas, and she had to respect that. \"Are you enjoying the Invictus ball? I felt, perhaps, its inevitable sexual nature would offend you.\"\n\n\"The First Estate's... openness, to adding this... icing upon their meal, is definitely shocking.\"\n\n\"Is it not? I must admit, while it pleases me the Kindred of my city are familiar enough to engage in such sexuality, I did not expect the ball to escalate to this degree.\" She started walking. And, when Damien did not accompany, she gave him a look. The look.\n\nHe winced, and fell into step beside her. \"The Second Estate... or at least, Lucas's version of it, would not approve of this.\"\n\n\"And you?\" she said, as she came closer to a delicious scene. A male Kindred had pinned a female kine to the wall, and was drinking of her neck while fondling one of her breasts. The woman's dress had been pulled down to let them spill out, and she was doing nothing to cover herself as the man groped her. Perhaps, squeezed a little harder than he should have, but the woman responded with only moans, and set her hands on the man's chest and arm as he drank her.\n\nIt was a bit cruel, to force Damien to be near such sights, when she knew the man was conditioned to find it unappealing, or repulsive, for Kindred to enjoy sexual pleasures with kine. But she had earned the right to be cruel, after losing her two previous ghouls to Lucas's tyranny and sword.",
        "Damien watched the male Kindred fondling his prey, and then turned to look toward a table, where two Kindred were drinking from the wrist of another kine. Far less sexual, except that the kine being Kissed was looking rather blissful. Still, far tamer.\n\n\"It's hard breaking half a century of... brainwashing. But, I try.\"\n\nBrainwashing. That, was an accurate word, and she raised a brow as she looked down at the dangerous man beside her. Jack did as well. A powerful word indeed, and she nodded as she accepted it, its weight, its finality.\n\n\"I am glad that you understand that, and that you try. I am.\" She continued walking, away from the sexual displays, with no more urge to torture the brooding Mekhet. Softness, thy name is Antoinette.\n\nShe glanced around. Jacob was speaking with Fiona, as the Begotten was no longer with Natasha. Which put the young woman in a strange position, feeling awkward, looking intimidated, and trying to avoid staring at where the man should have eyes. Why was the old monster talking with her? The old man had undoubtedly spoke with Azamel, in pursuit of his agendas, but Fiona was of little value to the fossil. And perhaps Jacob was simply trying to misdirect Antoinette, convince her Fiona was of importance to the old man, when in fact she was not. A wild goose chase, perhaps, to have Fiona monitored.\n\nOr not. Such games took careful maneuvering, and she would play them.\n\nHer wandering eventually took her toward her subordinate, and she smiled down at the beautiful little woman. The dress was lovely. Plain, but it hugged Natasha's body tight enough that every curve of her petite figure was visible, including a subtle hint of her nipples, and to the observant eye, that she was not wearing underwear. Perfect, and fitting the tiny, secretive creature.\n\nAnd then there were the two beasts, the wolves, Arturo Ibarra and Matthew Wilson. Dressed nicely, but not too nicely, much like the Carthians; it fit them. And the two men hung around Natasha, often with a habit of setting a hand on her shoulder. They towered over her, and while Antoinette was eye level with Arturo, perhaps an inch taller, Matthew was a giant, and one of the few people she had ever had to look up to to meet his gaze.\n\nTiny Natasha, between these two titans of muscle? The image was a delicious one, and Antoinette raised a finger to graze her lip as she looked down at her subordinate. The girl knew what she was thinking, and she managed a tiny, sheepish grin before she squirmed and fiddled with her fingers.\n\n\"P-Prince,\" she said. \"Are you enjoying the... b-ball? And you, D-Damien? You haven't been... mingling.\"\n\n\"Yeah, not really here to mingle. Just here cause Turio assured me it would be important for... relations.\"\n\n\"Relations,\" Antoinette said, \"are created by mingling. Though you need not be a butterfly, such as... Jessy Herrington, for example.\"\n\nThe group of them followed her guiding glance, and took a peek at the aggressive Gangrel. Indeed, the woman was socializing, though she had moved on from the Carthians, to instead speak with her fellow Invictus, some of the younger ones engaged with prey. Two female and one male Kindred, and a male kine who sat between them. Through the crowd and music, Antoinette could make out the woman's loud voice, giving instruction on how to both Kiss a male kine, and have sex with him, without compromising his ability to maintain an erection. The Kiss was, essentially, blood loss for the kine after all.\n\n\"Um, I think maybe... something a little more subdued might make for an easier first contact,\" Damien said.\n\nShe laughed. Quite true. Damien, despite his age and strength, had hid from their kind for all those years.\n\nFiona, returned from Jacob's grasp, poked her head out from behind Matthew, glass in hand, and teetered left and right as she looked at the man. \"Damien! Ah lied.\"\n\n\"Fiona, hello... what?\"\n\n\"Ah lied! About the sex. Just wanted tae seem older, right? And... and...\" She stood up straighter, and looked around at the people staring at her. \"Hullo.\"\n\nThis girl, was ridiculous. She had marched into Antoinette's tower, and had asked for Daniel to speak with Athalia. The girl had been \u2014 and continued to be \u2014 so naive and bubbly that Antoinette could not help but entertain the silly child's request.\n\nAnd then there was Clara. A beautiful woman to be sure, and her box braids were exquisite. The tan skin, dark brown eyes, and the strength to her bare shoulders were all delightful, beautiful, and compelling. It was easy to see the woman was doing her best to not look at Jack, and Jack was doing the same with her.\n\nBut, Clara had no trouble looking Antoinette in the eye. Defiant, in a subtle and silent way, a way Antoinette could not call her out on despite its blatant nature, as if someone had taught her in the ways of the Danse Macabre.\n\nShe liked Jack, this beautiful wolf. And despite herself, Antoinette hugged the obviously uncomfortable boy closer to her side. He was hers, and she was not giving him up.\n\n\"I am surprised your pack leader has not come, Clara Moreno,\" she said. Yes, I know your name, wolf. \"I understand with Jacob here, it would have been difficult. But, her presence may have generated some good will.\"\n\n\"Maybe, Prince.\" Clara nodded, before offering a small shrug. \"I'm second in command. I'll relay anything I learn.\"\n\nThe smell of alcohol was on her breath, and Antoinette could see the woman's stance was a touch unbalanced. As far as Antoinette knew, an Uratha had to drink quite a bit to experience the effects of alcohol, which meant that Clara had been drinking plenty, along with her two companions Matthew and Arturo.\n\nAnd that made Antoinette content. And maybe a touch nervous. Content that the wolves, once her enemy, were comfortable enough to risk themselves so, getting drunk. Nervous, as a drunk werewolf could perhaps be a rowdy werewolf. \n\n\"What will you tell your leader, if you do not mind the asking?\"\n\n\"I'll... tell her that you're all a bunch of very horny vamps, but mostly an amiable bunch. You know, for vamps.\"\n\nShe laughed once again. \"Yes, that is an accurate statement, I must admit. And please, feel free to indulge. Dolareido is a city of peace once more, with vices flowing through the streets, ready to be gobbled.\" The blood of her city, after all. \"I am sure many Kindred here would be glad to share their thralls or ghouls with you for the night. Or themselves, in some circumstances.\" A glance for Natasha, who smiled a tiny smile.\n\n\"You offering?\" Clara said.\n\nAntoinette's smile faded, and her arm around Jack tightened a touch more, enough so the boy went still. \"No.\"\n\nShe, the wolf, and the people around her went silent, as Clara and Antoinette looked at each other. At first, Antoinette had thought Clara's fondness of Jack had been nothing more than mere flirtatious interest. But the wolf's gaze did not break, spurred by courage or alcohol or both. Perhaps it was not simple, passing interest in Jack then.\n\nFiona stumbled forward, no longer with drink in hand, and leaned against Clara's side. \"Ah vote we bring a few of th' sexy Kindred 'ere back tae Bloodlust, an' we don't go home until I've got a man atween mah legs.\"\n\nThis Fiona, silly child, was a confused woman, to be sure, a woman who wanted to explore her sexuality but seemed blocked by her own choices. She reeked of a woman secretly insecure about herself, who did things such as lie to Damien about having sex, in order to carry the impression she was a sexual woman. And, the petite, curvy creature was plenty attractive; the only thing stopping her sexual exploration was herself. But why?\n\nBegotten were strange creatures. But, Fiona had disarmed the situation well enough, by accident, or perhaps on purpose. Perhaps, the delicious ginger creature was not as drunk as she let on? ...no, the little woman was indeed quite drunk, and young, and naive, and Antoinette could not help but feel herself brighten for being in her presence. A touch of similarity, Fiona and Jack, genuine and honest and young.\n\n\"Can I speak to you alone for a moment, Prince?\" Clara said.\n\nAlas, not entirely disarmed then.\n\nAntoinette held her steel gaze, neither a smile or frown, and nodded. \"Jack, if you do not mind?\"\n\n\"Uh, sure, yeah.\" The boy slipped out from underneath her arm, and walked over to stand beside Natasha. Damien followed.\n\nWith a gentle sigh, Antoinette walked with Clara. The two of them moved for the exit, side by side; and Antoinette did not like that. Others would have followed a step behind, while remaining at her side, but not the werewolf. No, Clara kept beside her shoulder to shoulder, and glanced around at the nearby Kindred as the two of them garnered gazes from others. No doubt this little excursion the two of them were making would be the focus of conversation for many.\n\nOutside. With a more annoyed sigh, Antoinette tapped into the ocean of vitae in her core, and blanketed the two of them in the cloak of night. Not a natural discipline of a Daeva, but even a minor learning was of use to keep their voices from carrying out to be heard by nearby, passing humans. The two of them stood underneath the archway of the enormous building, and faced each other.\n\n\"This isn't about Jack,\" Clara said.\n\n\"Of course not.\"\n\n\"... he is a great kid though. Bit young for you, don't you think?\"\n\nAntoinette's frown returned. So this is how it would be? To parley with barbs and poison.\n\n\"Are you not older than you appear, wolf?\"\n\n\"Yeah I suppose. Got a couple decades on me I don't carry on the face yet. You're what, four or five centuries older than you look?\"\n\n\"All the better, so that I may protect that which I love with power, and wisdom. And, pleasure him with experience.\" Antoinette's frown faded, replaced with a tiny smile that made her feel dark, sinister, and reminded her of Tony. \"And unlike yours, my beauty will never fade.\"\n\nIf she were not intoxicated, Antoinette felt the wolf would have kept her composure. But alcohol destroyed many things, including one's patience, and Clara's frown scarred her beautiful face.\n\n\"... Avery wanted to tell you, she knows you've been fucking with the Shadow more than usual.\"\n\nAntoinette brought a hand up to her chin to rest a single finger, and adopted a pondering expression. \"Have I?\"\n\n\"Like you'd know. You've never been to the Hisil, never seen the blood tower you've created there. And the black rivers haven't left either, still here, still fucking shit up whenever anything touches it.\"\n\nAntoinette absorbed the words carefully, though each marked with feigned obliviousness. Each name and noun was more information for her to use, but ultimately Clara was correct about her lack of exposure to the other side of what Uratha called the Gauntlet. She had never seen the tower of blood, and had only heard mention of the black rivers from Simon.\n\n\"I am not Minerva, Clara Moreno. I do not, and will not make the same mistakes that she did. And, should fate conspire against me and such folly befall me, you would not be able to stop me.\"\n\nClara snorted, and wiped her lip with her thumb. Uncouth creature. \"Me, alone? No, I doubt I could take you in a fight, Miss Big Bad Elder Vamp. Avery could. And the fuck would you do if the whole pack came marching to your door?\"\n\nShe almost grinned. Since Lucas's ridiculous kamikaze attempt, she had taken the time to increase the defensive measures of her tower. What would these wolves do once they realized the twenty thralls armed with fully automatic assault rifles in the lobby were firing silver bullets? Or, when Daniel and she exposed their silver swords?\n\nDo not underestimate Avery, Antoinette. The woman had learned from Simon's mistakes no doubt, and would not simply bash her head against your door in the same way. And perhaps a little compromise would possible.\n\n\"... be specific with me if you would, Clara. What exactly is it about my experimentations that is risking Avery's retaliation?\"\n\n\"Spiritual activity that's pretty chaotic around the blood tower is causing weird interactions between spirits. Clashes of... You ever seen a Magath tear through the Gauntlet, vampire? Ever seen someone spirit ridden try and resolve a need to heal and a need to consume at the same time? Or maybe a\u2014no, course you haven't, I'm wasting my time.\" Aggressive, the wolf was growing, and she stepped in a little closer to glare up at her. \"Nothing bad's happened yet. But then...\"\n\nA pause in the werewolf's aggression peeked Antoinette's interest.\n\n\"Yes?\"\n\n\"... you're not the only person fucking with shit in the Shadow, Antoinette. Someone else is, and... Avery wanted me to ask if you know who.\"\n\nWell, this was a surprising turn of events. Clara, this obviously aggressive woman who had an eye on Antoinette's love, was asking for her help. And she did not seem too happy about it either. And it was an important question, dealing with things outside the Danse Macabre. Were the Uratha asking for information about other Kindred, or the covenants, Antoinette would have mislead her. But, with monsters like that Azlu tearing through her tunnels, she had no choice but to accept the reality. For all her exploring, for all her experiments, for all her attempts to understand what lay across the Gauntlet, it was the purview of the Uratha.\n\nAnd that infuriated her. When glorious creatures such as Safe came through an invisible barrier she could neither see nor touch, to grace her with its presence? Large and small, entities of passion and grace and wisdom and love, with wings and hooves and glass and fur and metal. And other entities, dark and twisted things with many limbs and teeth, or things that defied description, with skin, scales, rusted iron, and bleeding eyes. For years she had dabbled, summoned these things in a controlled environment, and scratched at things that threatened to shatter a Kindred's understanding of reality. And, outside of the tower, she had journeyed to other locations. With methods beyond her understanding, spoke with yet more entities, creatures subtle and hidden on the wisp of shadow, and others as grand and towering as the oldest trees.\n\nAll of it, beyond her grasp of understanding, of experiencing. But not these Uratha, these brutes of strength, with 'wisdom' as meaningless as the ancient assumption that without sacrifice to the gods, the Nile would not flood that year, and Egypt would starve. Fools, blind, ignorant fools. And yet...\n\n\"I know of no one, Clara, that knows much of the Hisil, except for my subordinates. And Jacob.\" \n\n\"Yeah... Jacob.\" Clara sighed, turned to put her back to the wall of the grand building, and sighed. \"Don't think it's him. We don't know who it is, but someone else is... reaching, poking holes, causing problems.\" She laughed, and kicked at the concrete beneath her a couple times. \"You think vampires are bad? Try playing politics with a bunch of spirits. It'd be easier to negotiate with a child.\"\n\nIt was difficult to make use of her vague words, but Antoinette doubted she would be able to pull anything more specific. That spirits, those both wondrous and terrifying, played at politics was known to her, but to what degree, was a mystery.\n\n\"I am sorry, Miss Moreno. I do not know.\"\n\n\"Yeah... thanks anyway.\" Sighing, the wolf pushed herself away from the archway wall, and started back toward the entrance. \"Your boy Jack is pretty damn cute.\"\n\n\"He is. Utterly delicious, is he not?\" And he is mine, animal.\n\n\"And if I convinced him to take a younger woman?\"\n\n\"If you\u2014\"\n\n\"Yeah, if I convinced him. Would you be that greedy? Hold onto the kid even if he wanted to leave? You wouldn't be the first Daeva that plucked the flower, killing it, in their desperate need to own it.\"\n\n\"Jack is m...\" Mine. Mine! No one else's. She would never let him go, could never let him go. Never!\n\nShe grit her teeth until her fangs came to bare, and she forced the rising inferno in her dry, withered insides to settle. Clara was not incorrect. Daeva grabbed things precious to them, held them close, held them tight, until the life was wrung out of them.\n\nDizzying images, blurry memories assaulted her, ripped the rock from her stance, rendered her asunder. She closed her eyes for only a moment, but a moment was enough to bury her in hazy pictures of a time long ago, when that which she held precious burned away, and those she clung to with all her might withered into dust. Tony, once upon a time. Others before him she had buried in her unabashed need to own them, until they were but a shell of their former selves.\n\nJack. He would have made the comparison to the Phantom of the Opera; a silly story that failed to capture the nuance of obsession, Antoinette felt. But, ultimately, the musical did capture the overwhelming emotion, the need to turn the target of your desire into your possession. To own them, consume them, integrate them into every part of you, until they were wholly yours. The fear of losing that thing so precious was tantamount to damnation, and any Kindred, Daeva or otherwise, would be broken by such loss.\n\n'You will curse the day you did not do, all that the phantom asked of you.'\n\nShe turned away, and put her hands to her arms. \"Nothing would hurt me more, but I would let him go.\" No longer the child she once was, no longer the neonate or the ancilla. She had learned her lesson, painfully, time and time again.\n\nClara smirked at her, and dismissed the avalanche of pain her question had wrought with but a simple flick of the wrist. \"Relax. Kid loves you, he made that clear.\"\n\n\"... yes... thank you.\"\n\nThe wolf's smirk grew, and she reentered the ball.\n\nAntoinette took a moment longer. A night before and she was perfectly confident in herself, in her love, in her position, in everything about her romance with her loving, precious Jack. And this werewolf damaged it with a single question. Would she give Jack up, could she at all?\n\nShe shook out her hair, took a second to comb it with her fingers, and brushed herself off. Some others on the street nearby were talking, but their eyes would slide over her, with the cloak of night hiding her. And she kept it that way as she touched her face \u2014 do not ruin your face \u2014 and attempted to wipe away the crease upon her forehead. She was the Prince of Dolareido, a monolith of strength, a beautiful, sexual goddess, seductress, and towering presence of intelligence and wisdom. You are Prince, and it is upon these virtues that you hold that position.\n\nAnd yet, Jack did not treat her as such. Jack treated her like a person, once the shock of her presence passed. He treated everyone like a person, when given the opportunity. And she loved that about her little Ventrue. She needed that in her life, needed to hold him and hear his words settle her scarred heart. Needed to hear the honesty and sincerity in his voice, and see the depth of his genuine soul through the windows of his beautiful eyes.\n\nIf only her city knew the ridiculous, juvenile, disgustingly poetic thoughts going through her mind. There would be an uprising within the week. Sighing all the more, she adjusted her dress, checked her hair again, released her cloak of night, and returned to the ball.\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\n\"Wonder what they're talking about,\" he said, once Antoinette and Clara were outside. Please don't be talking about him. He didn't want to go back to the Elysium tower and have a weird conversation about Clara. Antoinette wouldn't be that insecure of course. Right?\n\nHe looked around. Beatrice and Julias were enjoying each other, holding each other as they drifted; almost looked like they were ready to dance. No one was dancing though. In fact, as far as Jack could see, almost everyone was getting far more into drinking the shared kine than anyone could have predicted. Jennifer and Jessy were no doubt a part of that reason, as the two women seemed almost in competition for who could be the most sexual, without actually having sex on the ballroom floor.",
        "Around him were Natasha, Arturo, Matthew, Fiona, and now Damien. Could have been awkward, but Fiona drifted between them, and reached out to put a hand on Damien's shoulder.\n\n\"Sorry ah lied.\"\n\n\"Um, it's ok.\"\n\n\"Na it's nae! Ah was just trying tae be... ah don't know... Vrall was nae like this! Vrall had orgies in 'er honor!\"\n\nVrall, the spider goddess nightmare entity thing inside the bubbly little redhead. Still hard to imagine, but Jack did his best, and smiled as he watched Fiona struggle with her turmoil. To be upset about lying about not being a virgin? If that was the worst thing she had to feel bad about, she was a strange girl. She'd killed people, a lot of them, to feed her hunger. Didn't feel bad about them? Very strange girl.\n\n\"Damien,\" Arturo said, still standing behind Natasha with his hands on her shoulders. \"I understand you tried to take down the Prince?\"\n\nWow, right to the sore spot.\n\n\"... Lucas did, and I aided him, yes.\"\n\n\"Hey, not looking to start anything. Just thought that was worth bringing up, cause damn, that must take balls. Avery has some stories about the Prince and the sheriff getting into a fight with Simon and his pack. Scary stuff.\"\n\nJack must have been going insane, cause he thought he spotted a smile on Damien's face.\n\n\"Well... we had the sheriff trapped. So it was just me and our companions against the Prince.\"\n\n\"Sheriff trapped?\"\n\n\"I\u2014\" Damien stopped himself as he took a glance to Natasha, and Jack did as well. She managed to, without moving any part of her face, show that she didn't tell the two werewolves the sheriff was her sire yet. \"I had something precious of his, and private. He had no choice but to stand down.\"\n\n\"Something so precious the sheriff let you fight the Prince?\" Matthew said.\n\n\"Can we have it?\" Art said. \"For... you know, peaceful purposes.\" A joke, complete with a chuckle.\n\nEvery bit of training Julias gave Jack about the poker face went into action. Damien as well. Natasha as well, though she didn't have the steel to her gaze that Damien had.\n\n\"Sorry, he has it back,\" the assassin said.\n\nThe two wolves nodded, and took a few more sips of their drinks. Good, the more alcohol the better.\n\nAntoinette returned, as did Clara, and the two of them walked back to join the group. Neither of them looked happy.\n\nJack took a step toward his love and slipped in under her arm. Not usually his place to be the first to engage, but something was bothering her, and for some stupid reason he couldn't help but feel responsible, if Clara was involved. And she hugged him with that arm, with a little more weight than usual.\n\n\"If you will excuse me, Kindred, Uratha, Begotten, I have preparations to make for the future. Jack my love, please come join me before the sunrise.\"\n\n\"Sure you don't want me to come with you now?\"\n\nThe goddess smiled down at him, leaned down to plant a kiss on his lips, and let him go. \"Non. As I said, work to be done. Please enjoy the party.\" She traced her finger along his lips, turned, and left.\n\nIt wasn't unusual for the Prince to leave the ball before others. Hell it was expected. They all watched her leave, and Jack took a few extra peeks at her before looking back to Clara.\n\n\"You\u2014\"\n\n\"Don't worry Jack,\" she said. \"Just... yeah.\" Another shrug, and she gave her pack mates some gentle punches on the shoulders. \"I'm out of here. Don't break your girl tonight, ok?\"\n\n\"Sure boss,\" they both said, and both turned to look at Natasha with evil grins abound.\n\nNatasha shrank against Arturo's stomach, and gulped.\n\n~~~~~~~~~~~~~~~~~~\n\nThe party continued for a little while longer, before everyone started to leave. Kindred here and there helped their exhausted kine get dressed and such, and many Kindred went home with another Kindred by their side; and some kine between them too. If any of the vampires in Dolareido were not planning on having sex tonight before they'd gone to the ball, that probably changed. Bellies full of blood and plenty more to be had from the many thralls and ghouls being shared had turned the air into a veritable ocean of sexual energy.\n\nBut, after Antoinette's departure, the night lost its zest for Jack. Halfway through the party, he was thinking Antoinette was going to do a host of nasty things to him when they went back to her tower. Now, he wasn't so sure. Something had shaken her, and seeing Antoinette shaken was weird.\n\nHe didn't stick around the whole time. Julias told him he could go, and so he went after saying goodbye to Natasha, Amanda, Beatrice, Fiona \u2014 all his friends were girls apparently \u2014 and just as he was about to say goodbye to Damien, the assassin approached him first.\n\n\"Can I talk to you, Jack?\"\n\n\"Yeah sure.\" Hopefully not as heavy a topic as Athalia's.\n\nThe two of them decided to walk home. Not far to get back into the main city district, or at least it shouldn't have been, but Damien nodded toward a dark alley, and Jack, like an idiot, followed him. He trusted Damien, but dark alleys weren't exactly doing him any favors. Memories of Rebecca were fresh and painful.\n\n\"Making me nervous, Damien,\" he said, giving the Mekhet the opportunity to make a joking chuckle. He didn't.\n\n\"Those your two crows watching the ball?\"\n\n\"I... oh damn it, how did you know?\"\n\n\"Two crows hanging out by the front entrance of a building for that long, when no other crows were around, were bound to be noticed.\"\n\n\"Damn it.\"\n\n\"Though, only a Mekhet would be able to see that the crows had indeed been touched by the animalism discipline.\"\n\nHe sighed, put his hands in his pockets, and let his head droop. \"How'd you know they were mine?\"\n\n\"... I've been watching you.\"\n\n\"... why?\"\n\n\"I wasn't watching you at first, I was investigating some unusual people. Four people, two men, two women, visited the Dolareido Cathedral at one point.\"\n\nThose four again, at Maria's Grand Cathedral? \"... I guess if you've been talking to Maria, you know about Barry.\"\n\n\"I knew about Barry before you did.\"\n\nOf course he did, cause the man was forever sneaking and monitoring everything.\n\n\"Any information to share?\"\n\n\"No. Except that those four were at the burned down building the day after you were.\"\n\n\"Shit, really? They were there not long before the fire too... Fuck, I knew I should have reported the new evidence before the ball.\" He threw up his hands, groaning. \"I already reported about the four, but there wasn't enough evidence to really get the whole Invictus up in arms about it.\"\n\nThe two of them nodded, and they both sighed. With both of their sightings combined, the pile of evidence was too big to ignore.\n\n\"What did they do at the Cathedral?\"\n\nThe assassin shrugged and looked out to the street. People walked by, but they wouldn't be able to see the two of them with Damien covering them in the cloak of night. And yet he was still being cautious, about humans. Scary thought.\n\n\"They didn't stay long, just long enough to realize it wasn't actually abandoned. No dust on the pews.\" The assassin sighed, combed the half head of hair, and met Jack's gaze. \"You know what this means.\"\n\n\"Humans following us around? Barry's dead and no one knows why? I... it's probably... hunters.\"\n\n\"Yeap.\"\n\nThe two of them looked around again. They were in a dark alley, so damn dark they might as well have been hiding in a closet. And yet, he felt exposed. So did Damien, a vampire fifty years his senior, who was strong for his age at that. Strong enough to fight the Prince; when she had a handicap of course, but, still. Jack should have felt safe with Damien there to watch his back.\n\nHe didn't feel safe. The stupid little nagging feeling in his gut just kept growing, and had been for days now. It was in everyone's gut, and everyone was ignoring it; the near orgy in the ball was proof of that. People were getting so into it because it was easier to pretend everything was fine.\n\nKine were sheep. Kindred were the wolves in sheep's clothing. Then what the fuck was a hunter? A sheep with a stake and a flamethrower?\n\n\"I'm going to go tell Maria,\" Damien said. \"You should just... go to the Prince's.\"\n\n\"What? Why? I should report this to\u2014\"\n\n\"Think about it Jack. Youngest Kindred in the whole city, and the Prince's lover? You don't think hunters would make you a prime target?\"\n\n\"If these hunters have been here all this time, then\u2014\"\n\n\"Then either they're waiting to make their move, or they just don't know about you yet. Until we get rid of them \u2014 if they're even hunters at all \u2014 you should be beside a Kindred capable of defending you.\" Damien winced, looked down, and then back out from the alley to the street to watch the kine walk by. \"You remember what... I did with Natasha, against Daniel.\"\n\n\"... yeah, I do.\"\n\n\"Imagine the Prince in that position, with you.\"\n\n\"I'd prefer to not.\" Because either way, that was going to end badly. Jack dead and Antoinette devastated, or Antoinette dead and him devastated, or other horrible possibilities involving a lot of dead Kindred. \"I get your point though. Ok, code red then.\"\n\n\"Maybe not red yet. Code... orange? What's before code red?\"\n\nJack raised a brow as he looked at the Mekhet. Was he making a joke? Didn't look like it.\n\n\"I get you. We're not at war, yet. And we don't have proof, yet.\"\n\n\"Yet.\"\n\nYeah, yet. He sighed, for the millionth time, and rubbed his buzzed hair. \"Telling them about this is going to have the entire city freaking out.\" And with the Uratha here, and the Begotten wanting to meet him, it couldn't have been worse timing. Wait. \"... you think... the Begotten or Uratha caused this?\"\n\n\"You mean, their arrival caused the hunters to show up?\" He shrugged, and pat his leg once, likely checking to make sure a knife or sword was still there. \"Maybe. People hunting vampires is more common, but, Dolareido is pretty low on that radar I imagine, with how low the death rates are here to Kindred. Monsters and werewolves? I... don't know. Fiona did let her hunger get out of control for a while.\"\n\nRight, Damien was friends with Fiona. Hard to imagine that, considering how different they were, Damien with unending bitterness and Fiona with her unending sweetness.\n\n\"We don't have a choice,\" Jack said.\n\n\"We don't.\"\n\n\"This really sucks.\"\n\n\"Yeah.\"\n\n\"We just had a party celebrating how peaceful Dolareido had become.\"\n\n\"Yeah.\"\n\nThis must have been what it was like for Antoinette and Daniel. Getting blood from a stone.\n\n\"I'll head to Antoinette's then, tell her what's up, send a message to Julias, and tomorrow night, see how badly shit hits the fan.\"\n\nDamien nodded, and pushed off the wall. \"I'll tell Maria... Keep an eye open, Jack. Any hunter who knows what's going on in this city is going to have their eyes on you.\"\n\n\"Right... I'll call up an Invictus driver, instead of walking the rest of the way.\" Lovely, just lovely.\n\n\"Good idea.\" Damien disappeared around the corner back onto the street. No goodbyes or anything. Was it a Mekhet thing? Couldn't have been, Natasha was far more expressive than Damien; when she let her guard down anyway. Maybe Damien and Daniel were always on guard? Must have been exhausting.\n\nJack sighed, took another deep breath, and headed toward the street.\n\nA sharp pain shot out from his chest. Before he could cry out, something covered his mouth and nose, tight, leather gloves, and strong.\n\nSomething was stabbing him in his back. In his heart. And, he couldn't scream, couldn't yell, couldn't do anything as his body started to slip into torpor. A face was looking down at him, someone with gray hair, and a scar along their nose ridge. Someone alive, and not one of the four.\n\nAs the darkness and paralysis took him, he had only one thought: you have got to be shitting me."
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "orgy",
        "paranormal romance",
        "slow",
        "squirting",
        "story",
        "vampire",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-04-ch-07"
}