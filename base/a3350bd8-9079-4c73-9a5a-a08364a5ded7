{
    "title": "Sense of Smell",
    "pages": [
        "\"Doctor Martin. That was a superb presentation. As usual.\"\n\n\"Thank you. The theory of Computation of Protein Structure Function Relations isn't exactly a barnburner for most people,\" she replied pleasantly.\n\n\"Let's just say it's a whole lot more interesting when presented by someone so...pleasing to the eye.\"\n\nConstance Martin, who preferred to be called Connie, earned her PhD in the narrow field of Theoretical and Computational Chemistry at the age of 26. Now 38, she was a tenured professor at UCLA and had published numerous scholarly, peer-reviewed papers in her chosen area of study. \n\nShe and her team had spent the last year carefully putting together the data for this most recent paper which she'd just presented at a prestigious seminar attended by other PhDs interested in that narrow branch of chemistry.\n\nThe man who was flattering her was one of the most well-know scientists in the profession, and he, like nearly every other man who'd ever met her, had been intrigued by her combination of intelligence and beauty.\n\nConnie Martin was brilliant. Math and science had always come easily to her. In terms of looks, she was a natural blonde who wore her hair between chin and shoulder length, hair which framed a beautiful face with alabaster skin and clear, blue eyes, and perfectly straight, white teeth. She was a shade under 5'8\" tall, and weighed somewhere around 120 pounds, give or take, on any given day. \n\nThe lab coat she religiously wore tended to hide some of her finer feminine attributes such as a pair of nearly symmetrical, C-cup breasts, a narrow waist, and most of her long, shapely legs and nicely-curved ass, a word she occasionally used to describe that part of her anatomy. \n\nShe wasn't a prude by any means, she just agreed with the old saw about profanity being the domain of the weak-minded. Then again, she was well aware that the occasional, well-placed expletive could say in one word what would otherwise require an entire paragraph of prose. On rare occasions, she would shock those who didn't know her as she flatly delivered one.\n\nA two-word combination came to mind to express her disinterest in this older man's interest in her, but saying 'fuck off' to someone of his stature could be detrimental to her own career so she only smiled and chose something more polite.\n\n\"You're always the charmer, Edward.\"\n\n\"Charming enough to perhaps finally convince you to allow me to take you to dinner?\" he asked, pressing his luck.\n\n\"Edward. You know I don't date,\" she told him, even though she knew he was aware that wasn't true. \n\nShe did, in fact, date. She was just very selective in her choice of men when it came to dating, and Edward had no chance of never make the cut. \n\nShe was even less a snob than a prude, but there were lines she wouldn't cross, and dating a man she found completely unattractive was one such line. Even a man who could help her career in many ways.\n\nHe smiled in spite of the sting of rejection then said, \"You are still the epitome of Churchill's take on tact, Doctor Martin. I must admit that while you essentially just told me to go to hell, I rather enjoyed the trip.\"\n\nHis blunt acceptance of his fate made her laugh but only politely, and caused her to momentarily think about even the possibility of going to dinner with someone like him\u2014assuming it was just dinner\u2014which it clearly wasn't.\n\nThe truth was, work took up most of her life. That part was true. Edward was not only a good fifteen years older than her, time had not been kind to him, and it was doubtful he'd ever been even close to her in terms of looks when he was younger and in his prime. Looks weren't everything, of course, but they were most often the catalyst that allowed for things like attraction, love, and romance to bloom, and the simple truth was, there was no attraction there whatsoever.\n\n\"I would never say such a thing to someone as distinguished as you, Edward,\" she told him, flashing that amazing smile of hers that always served to lessen the blow.\n\n\"Once again, I find myself much less disappointed by your most recent rejection than I normally would.\"\n\n\"There's someone for everyone, Edward. You know that, right?\" she said in a way he wouldn't take as either patronizing or condescending.\n\n\"Perhaps next year?\" he said with the slightest modicum of hope.\n\n\"Ask me then, okay,\" she said politely before excusing herself.\n\nShe pulled out her phone and took a quick look. It wasn't surprising to see a large number of texts, but there were also a dozen phone call notifications, and almost no one called her anymore. She opened the app and realized all of them were from her mother. \n\nA sense of dread washed over her as she hit 'redial' and waited. Two minutes later she hung up the phone, too overcome with shock and grief to even move.\n\nThe next morning, she was on a plane to Charlotte, North Carolina, the city where she'd grown up and gone to college as an undergraduate before earning her masters and PhD at Duke University in Durham, 140 miles to the northeast of her hometown.\n\nAs she winged her way east, Connie fought back tears as she fondly recalled her life at home with her mom and dad. Her mother could often be cold, but she was mostly...aloof. \n\nIn sharp contrast, her father had been warm, genuine, and always interested in his only child, no matter how busy he was. And his sense of smell was unparalleled, at least in his world where perfume had supported their family, and her specifically, all the way through graduate school. \n\nShe'd been a daddy's girl growing up, and now, without warning, he was gone. It had been her turn to call that Sunday, but she'd declined in favor or putting the final touches on the paper she'd just presented. As a result, she'd missed the last chance she would ever have to hear her father's rich, baritone voice and the laugh she so dearly loved.\n\n*****\n\nOne Day Later. Mint, Hill, NC. Just East of Charlotte.\n\n\"Okay, Sweet Pea. Go see Nana.\"\n\n\"Good morning, Lexi! How's my favorite girl in the whole world?\"\n\n\"Nana? Can I go play?\" the two-year old, who was closer to three, asked without answering her grandmother's question.\n\n\"Of course you may. I need to talk to your father anyway.\"\n\nOnce the little girl was out of sight, Marilyn Lane could tell her son needed to say something.\n\n\"Is everything okay?\" she asked.\n\n\"I don't know, Mom. I'm not sure if you've heard, but I just found out Mr. Martin passed away.\"\n\n\"Oh, my heavens! When?\"\n\n\"Yesterday from what I was told. He was in his office at work, and evidently he had a heart attack.\"\n\nHe didn't need to add, \"Just like Dad.\"\n\nHis mother had been with his father when he passed away from the same thing a little over a year ago. And as awful as that had been, her son, Adam, lost his wife, Kristi, during childbirth a little under three years ago himself. Women weren't supposed die giving birth in 2015, but as he later learned, it still happened more often than most people knew, and Kristi Lane had been one of them.\n\nAdam Lane had spent four years in the US Marine Corps, mostly to get the GI Bill to put himself through college, although out of no small sense of patriotism and giving back. \n\nHe was a very good-looking young man who'd dated often in high school and just as often on active duty less the year he spent in Afghanistan. Marriage had never even entered his mind, but just before leaving the service, he'd met the most amazing woman; a woman who stole his heart from the moment he saw her. For both of them, it was truly a case of 'love at first sight'. \n\nJust six months later they were married, and within another three months, she was pregnant.\n\nKristi Lane was just 23 and as beautiful as any woman he'd ever met, and she was also everything Adam ever hoped to find in a woman. Like him, marriage had been the last thing on her mind until she came to Southern California to visit her brother, a good friend of Adam's. When his buddy introduced her, both she and Adam knew it was 'game over', and Kristi fell just as hard for the handsome young Marine who just happened to also be everything she'd ever dreamed of in a husband.\n\nShe willingly went with him back to North Carolina where his family grew roses, most of which were purchased by a perfume maker in nearby Charlotte. \n\nNorth Carolina has the kind of climate where various kinds of roses such as Noisettes, Teas, Chinas, and Tea Noisettes grew quite well. There was even a pretty decent chance of growing Camellias. \n\nThe company that bought nearly 90% of the family's flowers was called Dynex, and David Martin had been the company's owner and master perfumer until his untimely passing. The company's only other master perfumer had been lured away just over a year ago, leaving only the owner to do the work of two men and run the business.\n\n\"Oh, my. His poor wife and children,\" his mother said almost somberly.\n\n\"I agree. I'd say I can't imagine what they're going through, but we know that all too well.\"\n\n\"Yes. Sadly, we do,\" his mother said. \"Listen. I think we should offer to help. I don't know whether they need or even want it, but we should make ourselves available regardless, don't don't you think?\"\n\n\"I agree. Any ideas on what to even suggest? Food maybe?\"\n\n\"That's always welcome, but they're a very well-off family, so it's unlikely a casserole would be of much value. I'm thinking more in terms of lending a sympathetic ear. I didn't really know him all that well, and I only met his wife once, but she seemed like a nice enough lady. A little...cold...perhaps, but in a time like this, everyone needs all the friends they can get.\"\n\n\"Dad said that several times about her. The coldness. He also mentioned the entire family was otherwise very well grounded and down to earth in spite of whatever fortune they've amassed.\"\n\n\"Not to talk out of school, or to contradict myself, but I've heard they've had a rough go of it the last year or two. I have no idea how true that is, but it could be they're not as well off as we've always assumed.\"\n\n\"Well, rich or poor, losing a loved one\u2014especially when it's unexpected\u2014is never easy. So just let me know how I can help.\"\n\n\"I will, and I also know what this potentially means to us. And now that you're running the business, to you and Lexi.\"\n\n\"We'll be fine, Mom. Whatever happens, we'll be okay. In the meantime, we'll keep growing the best roses possible, and keep our fingers crossed.\"\n\nHe turned to leave then stopped and sniffed.\n\n\"What are you baking that has nutmeg in it?\" Adam asked.\n\nHis mom laughed then said, \"That nose of yours is incredible. It's pumpkin pie. As if you couldn't tell.\"\n\nAdam's keen sense of smell had been a longtime source of fascination, amusement, and entertainment in the Lane household. From a very early age, he'd been able to detect the faintest of odors around the house to a degree that was downright scary at times. \n\nMost humans have about a thousand olfactory receptor genes and around five million olfactory receptors in their nose. By comparison, a dog has some 2,000 genes and around 220 million receptors. So while dogs can be trained to detect cancers, find bombs or sniff out drugs, and track scents, humans tend only to notice scents to the degree that something smells good or bad to them. \n\nHowever, with practice, human beings can detect the subtle differences in thousands of scents. David Martin was one such person. Adam Lane was another, but no one, to include himself, knew just how sensitive his sense of smell was beyond what others jokingly called 'a freak of nature'.\n\n\"Dad often told me I should get into the perfume business,\" Adam reminded his mom.\n\n\"Right. He said that quite a few times. He told me if he had your nose, he'd been making perfume instead of growing the products that went into it.\"\n\n\"It's a little too late for me now, I suppose,\" her son said. \"I'm kind of knee-deep in the growing part.\"\n\n\"Never say never, honey,\" his mom replied.\n\nAdam laughed then assured her he was too busy growing roses to worry about turning them into perfume. He also let her know he was heading to work to tend the flowers, the ones he might no longer be able to sell. And while he'd never tell his mother, he was more than a little concerned about what might happen to their business should Dynex close its doors.\n\nWhen Connie landed in Charlotte, she wasn't surprised her mother wasn't there to meet her. What was a surprise is not having the limo waiting for her. But life 'in the real world', as much as academia and research could be called 'real', had accustomed her to the way everyone else lived. She made a generous salary and bonuses but was nowhere as well off as her parents, so not traveling by limo was her norm since leaving home. \n\nThen again, some of the things her father had told her over the last year made her wonder if the company's future might be in danger with the limousine and driver early casualties. \n\nThat aside, she knew her mother had no interest in taking over and running the company, and would almost certainly want to sell it as soon as possible. But Connie was now a 50% owner, and had as much right to decide the future of Dynex as her mom. She just had no idea what she wanted to do yet. For now, the business of saying goodbye to her beloved father was her primary concern. \n\nWhen she walked inside her parents' 5,200 square foot home, she had to walk around to eventually find her mother.\n\n\"Oh, Constance. It's so good to see you,\" her mom said, the ever-present sort of half smile permanently in place.\n\n\"Hi, Mom,\" she said as she hugged her mother who eventually hugged her back.\n\n\"How are you holding up?\"\n\n\"Just fine,\" her mother informed her. \"After all you can't unring a bell.\"\n\nRather than lash out, Connie accepted her mother's cold indifference as something she was powerless to change. It didn't make it any easier to accept, but it was as fixed in place as was the 'smile' that never seemed to wax or wane.\n\n\"We'll be sitting down with Roger this evening and discussing the business,\" her mother informed her without so much as asking if her daughter had plans or how she was doing.\n\n\"Oh. All right. That makes sense,\" Connie said, hoping to sound agreeable.\n\nJust as matter of factly, her mother announced, \"As you know, your father wanted to be cremated, so we'll hold a memorial service this weekend rather than a funeral.\"\n\n\"Okay,\" was all her daughter could say as she pushed the thought of flames and ashes out of her mind even as the equally macabre image of 'being' in a closed box where worms eventually ate one's flesh, tried to creep in.\n\nConnie shuddered at both options then tried to focus.\n\n\"So were there any warning signs with Daddy? Any prior complaints about chest pains or arm pain or...\"\n\n\"No. Nothing at all. He seemed perfectly well that morning. He was up at 5am and headed to work by 6:30. And that afternoon...he was gone.\"\n\nThe slight hitch in her mother's voice was the closest thing Connie saw to real emotion that day or even at the memorial. She was truly an 'Iron Maiden' but not in the sense of the late Margaret Thatcher.\n\nThat evening, Roger painted a very bleak picture for the new co-owners.\n\n\"So as you can see, Dynex is in dire straights financially. This new order would have restored the company to fiscal health, but without your father, synthesizing this new scent for the largest order in many years seems like an impossibility.\"\n\n\"What new scent?\" Connie asked.\n\n\"It isn't new, per se. Your father came up with it some 30 years ago, but that was before the age of computers. The formula was written down on paper, and the fire...\"\n\n\"Right. I was what? Maybe...seven...back then?\" Connie said as she recalled the fire that destroyed her father's office and a good portion of the old building.\n\nThey'd used the insurance money to rebuild and came back better and stronger and until two years ago, Dynex had been 'in the black'.\n\n\"But when our only remaining master perfumer left for a very lucrative offer in the south of France... Well, you can imagine the turmoil. I'm no doctor, but the stress that heaped on your father had to be...enormous.\"\n\nConnie fought back tears even as her mother rolled along without a hitch.\n\n\"What's it worth? If we sell right now?\"\n\n\"Well. That's a big 'if'. There are a lot of factors involved such as...\"\n\n\"No. Stop. Just work up the various possibilities and present them to me as soon as possible,\" she said.\n\n\"To...us,\" Connie added, politely but firmly.\n\nHer mother gave her a glance from the side then said, \"I had no idea you were even interested.\"\n\n\"Mother, that's not fair. I love my job, but I love my family, too, and...\"\n\n\"Ha!\" she said quietly before saying more loudly, \"You loved...half...of it, anyway.\"\n\nConnie ignored the dig then politely reminded her mother she was the co-owner.\n\nRoger wanted to say, \"Yes, that's right,\" but he'd been on the receiving end of one too many tongue lashings from 'the Iron Maiden' over the years.\n\n\"Fine. Present the options to...us,\" she said coldly. \"Unless you have something else, that'll be all, Roger.\"\n\nConnie walked him to the door then asked for a quick summary.\n\n\"What's the bottom line, Roger? How bad is it?\"\n\n\"If you could develop the new scent and get the perfume ready by the deadline, it would turn everything around and then some. Otherwise, I'm afraid you'd be lucky to get out without losing money. I mean, after paying off all of the outstanding debts, I don't see there be a whole lot left over for you and your mother.\"\n\n\"Okay. Thank you for the honesty, Roger. That gives me a feel for where we are.\"\n\n\"It doesn't look promising, Connie,\" he told her truthfully.\n\n\"No. And finding a new 'nose' is a monumental task even without a looming deadline,\" she said knowing he was well aware how difficult that would be.\n\nRoger hadn't noticed the tiny vial around her neck, but when he saw it, he said, \"May I ask what's in the vial?\"\n\n\"Oh, it's a perfume Daddy gave me when I turned nine. I forgot all about it until I left home. I started wearing it and haven't taken it off since.\"\n\n\"Do you by any chance know the name of the perfume?\" Roger asked.\n\n\"Of course,\" she said.\n\n\"It wouldn't be Sandalwood Fire, would it?\" Roger asked, the hopeful expectation in voice clear and obvious.\n\n\"Yes. How did you know that?\" Connie asked, completely bewildered by what she knew couldn't be a lucky guess.\n\n\"Oh, my Lord,\" Roger said, reeling from the revelation. \"That is the perfume your father created.\"\n\n\"How can you be sure?\"\n\n\"I can't. I don't have the nose to tell by scent. But that's the name of it. Your father had the tiniest amount, and that's what he used to sell the product. The buyers were, well...gaga...over the scent, and your father spent his days trying to recreate it exactly. I had no idea you had some yourself.\"\n\nConnie touched the tiny vial and said, \"I used to smell it every now and then, but I've never used it before. It's utterly unique, and if what you're saying is true...if we could recreate this...\"\n\n\"Yes. Exactly. But without a 'nose' to tell you the ingredients...how can you possibly do that? Even your father was struggling to come up with two notes he couldn't pin down or recall from what he'd put on paper three decades earlier.\"\n\n\"I don't know, Roger, but I do know we need to put out a worldwide notice that we're willing to pay top dollar for someone who can do just that. Can you work with advertising and marketing to start that ASAP?\"\n\n\"Yes. It'll be my top priority,\" he told her. \"Just keep in mind that department is down to one person.\"\n\nThe look on his face told Connie something else was wrong so she asked.\n\n\"I suppose I'd caution you not to get too overly enthused about the possibility of finding someone on such short notice.\"",
        "\"I understand. The odds are extremely long. But if we don't try, the odds are zero, right?\"\n\n\"Always the scientist, eh?\" Roger said a little more cheerfully.\n\n\"Numbers aren't sexy, but they never lie,\" she told them. \"And right now the numbers are saying we have our work cut out for us.\"\n\n\"Does this mean you'll be staying?\"\n\n\"Short-term, anyway. If we try and fail, we'll be selling what's left of the company. If we somehow succeed, I should also be able to find someone by then to run the business; a business that'll once again be profitable. Worst case, I can stay until we have to declare bankruptcy, and I guess we'll figure things out from there.\" \n\n\"I do like your spirit, Connie,\" Roger told her. He thought about adding, \"Your mom, however...not so much,\" but knew that was both unkind and unnecessary albeit true.\n\n\"Thank you. And how can I not try? My father figuratively and now literally gave his life to this business, and not to be overly dramatic, but he gave life to me, too. So I really do owe it to him to try. And if I try, I have to be 'all in'.\"\n\n\"Okay, then I'm 'all in', too. If I can do anything else, anything at all, you just let me know.\"\n\n\"Get that notice out as fast as possible, and I'll take it from there,\" Connie told him, even though she had little hope of actually taking it anywhere.\n\nWith Roger gone, and the information he provided fresh on her mind, Connie was torn about what to do next. She'd never run the business, and yet she felt compelled to at least go in and do whatever she could. The employees would all be deeply concerned about their jobs, and rightly so. Most of them would also want to know about plans for a memorial service, so she decided to go in and start by talking with everyone.\n\nTo her surprise, every person, without exception, was working as though nothing had happened. Until she walked in, that is. From the moment the first person saw her and stopped working, the remainder of them did the same thing until all of them were gathered around her.\n\n\"Hello, everyone,\" Connie began. \"I wanted to take a few moments and tell you as much as I know. Unfortunately, that isn't much, but I'll share everything I have with you.\"\n\nFive minutes later, her father's employees, who were now hers, knew as much as she did.\n\n\"How can we help?\" was the first question.\n\n\"Well, by attending the memorial service for starters. Beyond that, if you know anyone in the business who knows anyone, ask them to help us find a new 'nose'. This order is quite literally a make-or-break issue for us.\"\n\nUntil she told them no one knew how serious this order was as her late father hadn't shared that information with anyone other than his longtime friend and attorney. That wasn't unusual as their jobs were to do their individual parts and leave the final product up to their longtime employer and owner of Dynex.\n\nConnie spent some time explaining the ramifications of failing to comply with the order, which, in effect, meant bankruptcy. That, in turn, meant the end of the company and their jobs. \n\nThe remaining time of four months seemed more than adequate to anyone not familiar with the difficulties involved, but in reality, Connie knew full well even six months would be pushing it. They quite literally needed a miracle of some sort, and not being one to believe in such things, Connie knew the only answer was to push as hard and as fast as possible to find someone to create this 'mystical scent' then get it into production ASAP.\n\n\"Gee, no pressure,\" she said to herself as everyone went back to work.\n\nShe really didn't know any of them well, but it was obvious her late father had done a fantastic job of recruiting quality people. She also knew they would be putting out feelers in the very near future as a way of hedging their bets. After all, they had families to support, mortgages to pay, and the same financial obligations everyone else had.\n\nAlready feeling under water, Connie spent the rest of the day with her mother working on the details of the memorial service, and in spite of her cold attitude, they somehow managed to agree on what needed to be done.\n\nThe following day, Connie spent most of her time sorting through the replies from Roger as to the leads he had where it came to finding a new 'nose'. \n\nIt was both encouraging and discouraging in that there were quite a few replies. The problem was that most of them didn't have the credentials. Virtually every master perfumer on earth was well known within the community, but there were a few 'sleepers' out there with the raw talent who hadn't been given the opportunity to prove themselves.\n\nShe immediately set up interviews with the three that looked most promising, and those would begin several days after her father's memorial service which was now just 24 hours away. \n\nThat thought caused her to do some further reflecting, knowing full well his body was being cremated sometime that afternoon. Once again, she did her best to fight off tears of sadness, all the while feeling completely helpless, and now, as the hours passed\u2014hopeless.\n\nThe memorial service was held at the Episcopalian Church where the Martin family had been members for decades. Like every other woman in attendance, Connie wore black to the memorial where a beautiful, shiny, dark-wooden casket, covered in flowers, was on display with a small urn in front of it containing all that remained of the only man who'd ever made her feel safe and loved. \n\nUnlike her mother, she didn't wear a veil, but each time she teared up during the service, she almost wished she had. In the end, her mascara held, and her eyes were barely red and only slightly puffy as she shook hands and hugged all those who offered their condolences.\n\nThe Lanes also attended, and patiently bided their time until nearly everyone was gone before approaching Connie once she was alone. That she wasn't near her mother wasn't something they'd planned, but they couldn't help but feel relieved.\n\nAs they walked up, Connie's brain searched its memory banks for the name, and when it came to her, she smiled and accepted the hug the older woman was offering her.\n\n\"Mrs. Lane. It's so good to see you again!\" Connie said sincerely, as they hugged one another for several seconds.\n\n\"You, too, Connie, and I can't tell you how sorry I am you lost your father.\"\n\n\"Thank you. That means so much coming from you. I know you're all too familiar with the pain of loss.\"\n\nAs she spoke, she glanced down and noticed the little girl in the tiny black dress. \n\nConnie knelt down and said with a smile, \"Hi there, pretty girl. What's your name?\"\n\nShe reached for her father's leg and held on tight as he answered for her.\n\n\"This is Lexi,\" Adam told her.\n\nConnie stood up, smiled, and extended a hand, then the smiled faded.\n\n\"Are you're...\"\n\n\"Adam,\" he told her.\n\n\"Yes. Of course. Now I remember. The last time I saw you, both of us were home visiting. I remembered meeting you before that, but didn't know your name. I did, however, most definitely notice your beautiful wife at the company Christmas party. Is she here by any chance?\" Connie asked politely and innocently.\n\nAdam briefly lowered his head before looking back up.\n\n\"No. She um, she...passed away when Lexi was born.\"\n\nConnie was so shocked she covered her mouth with both hands then, without thinking, put her arms around Adam.\n\n\"Oh, my goodness. Adam, I am so, so sorry.\"\n\nBefore he could reply, she bent back down and hugged Lexi who was still clinging her to her daddy's leg.\n\n\"I...I don't know what to even say,\" Connie said after standing back up.\n\n\"I believe you just said everything anyone could say,\" Adam told her with a polite smile. \"And right now the focus is on you\u2014not us.\"\n\nHis mother chimed in in agreement and asked how they could help.\n\n\"Oh, my gosh. I don't really know,\" she replied honestly. \n\n\"Well, as people who've been through this, we're available. Anytime,\" Marilyn told Connie.\n\n\"That is so very kind of you, Mrs. Lane. Thank you so much.\"\n\n\"Of course, and please call me Marilyn.\"\n\nConnie promised she would then there was a moment of silence.\n\n\"So there's nothing we can do?\" Adam asked. \"Nothing at all?\"\n\nConnie thought for a moment then said, \"No. Not unless you know where we could find a 'nose'...\"\n\nShe stopped then explained, assuming they might not be familiar with the term.\n\nAdam smiled and told her he'd heard the term a time or two.\n\n\"Oh, yes. Of course. I'm so sorry. You've been around the growing end of the business all your life, so you've certainly heard all of the jargon.\"\n\nAdam only smiled politely while his mother spoke.\n\n\"And while my son may not be that good with scents, he has this uncanny ability to detect pretty much anything that no one else even notices,\" Marilyn told her.\n\n\"Wait. Seriously?\" Connie asked, now at least mildly interested.\n\nAdam smiled then told her, \"When we hugged I could tell there were floral and musky notes in your perfume along with a hint of something woody.\"\n\nIn the world of perfume, there are eight main olfactive families: green, fruity, herbal, floral, woody, musky, and oriental. Each of them has about a hundred different ingredients. There are further 'notes' or hints of scents, and being able to differentiate them was what made a 'nose' so valuable.\n\n\"That's...incredible,\" Connie replied. \"Have you ever been tested?\"\n\nAdam laughed and told her his late father had suggested it several times.\n\n\"I just never took him very seriously,\" he told her. \"As you said, we're the growers and not the makers.\"\n\n\"Would you at least be willing to stop by and let us find out just how good this 'uncanny sense' of yours is?\" Connie asked hopefully.\n\n\"Well, we are here to help, and if that helps in any way, then yes, I'd be glad to.\"\n\n\"Oh, my goodness. Adam, that is so wonderful!\" she replied, her voice picking up. \"Let me give you my number, and please call me at your earliest convenience, okay?\"\n\nAdam entered her information and asked if the next day was too soon.\n\n\"Oh, heavens no! That would be perfect, actually.\"\n\nHe wanted to ask if they could also talk business\u2014meaning his end of their business arrangement\u2014but that was seemed so inappropriate he didn't mention it. But he would tactfully bring it up after this testing was over.\n\nAdam was up at 6am and went out for a run at seven. Unlike nearly all of his friends he'd stayed in touch with after leaving active duty, he was the only one who continued to run and work out. Early mornings were the best as that let him get it out of the way before getting Lexi ready to go then heading to work. Having his mother available and even thrilled to help out with her granddaughter made it all the more easy.\n\nFive miles later he was back home feeling on top of the world, and after a hot shower and a warm breakfast, he was ready to start his day.\n\nHe waited until around 11 o'clock before texting Connie, and although he expected a prompt reply, he was surprised when his phone 'dinged' before he could set it down.\n\n\"Yes, that's perfect,\" she replied immediately to his suggestion of stopping by anytime after lunch.\n\n\"In fact, it would be my pleasure to take you lunch, if that works for you,\" she added.\n\nAdam smiled when he read her reply then texted back, \"I'd like that. But you don't need to pay for my meal.\"\n\nHe added a smiley face to let her know he wasn't being indignant like some men might after a woman offered to pay. If she insisted he'd let her, but it just went against his nature to let a woman pay for anything. 'Letting' her pay for her own food was hard enough, but allowing her to buy his was out of the question.\n\n\"A traditional man, I see,\" she texted back. \"I actually like that.\"\n\nAs he was reading those lines another text came in.\n\n\"Sorry. I didn't mean that the way it sounded. I hope you didn't think I was implying anything.\"\n\nAdam laughed quietly before texting her back.\n\n\"First of all, I suppose I am a traditional kind of guy. Or at least I try to be. So unless you stop me, I'll open doors for you and help you get seated. And no, I didn't think you were implying anything.\"\n\nHe hit 'send' then thought about and made a 'what the heck' decision and added, \"But I wouldn't be offended if you were implying something.\"\n\nJust as he hit 'send' again, her reply came back, and this time he laughed a little louder.\n\n\"Oh, good. I was sitting here trying to imagine what a nice-looking, younger guy like you would think if a woman my age was implying something. So I'm glad we cleared that up!\"\n\nConnie realized they were out of synch, and when she sent that reply, his came in and she momentarily experienced something she hadn't felt in quite some time.\n\n\"He...he has to teasing,\" she said to herself when she read his words about not minding if she was making some sort of implication.\n\nThe feeling quickly passed after she assured herself he was only being polite. Even so, the fact that it had rattled her, even momentarily, came as a huge surprise. She sat there for a few more seconds to make sure no other follow-on texts came in then suggested a time and place to meet.\n\n\"Have you been to 300 East?\" she texted.\n\n\"No. I've heard of it but never been. Is that where you'd like to meet?\"\n\n\"If that's okay with you, yes. Maybe...12:30?\"\n\n\"Great. See you then,\" Adam replied.\n\nSince he spent quite a bit of time outdoors, Adam normally wore jeans to work, but today he'd thrown on some Dockers and a decent shirt just in case he ended up at Dynex. \n\nAt the time he made the choice it was purely out of looking somewhat more professional. Now, however, after their brief-but-pleasant exchange of texts, Adam found himself thankful he'd worn something nicer. \n\nHe fully realized this was a business lunch and that Connie was home for the worst of all possible reasons. And yet as he drove toward the east side of Charlotte, he found himself thinking about how beautiful she was even when dressed all in black. He almost felt slightly guilty for even thinking that way, but he understood it was a normal thing for a single man to do; even one who'd been forced into being single by having lost the love of his life less than three years ago.\n\nAdam was habitually early to everything, and this was no exception. He found a place to park then walked up the steps of the restored house that was now a restaurant with the look and feel of a home.\n\nThe hostess opened the door for him and welcomed him, but Adam let her know he was meeting someone. She told him she understood then left him near the door where he kept watch for this woman he barely remembered from the past. He found it strange he didn't recall seeing her the last time he'd been home with his late wife, but then, Kristi was so beautiful he never had cause to look. It wasn't that he never noticed other women, they just rarely made an impression on him unless they spent some talking because he was head-over-heels in love with his wife.\n\nAnd yet Connie Martin was every bit as attractive as Kristi had been, albeit quite a bit older. So once again he was slightly conflicted about wishing he had noticed her even as he worked through the reason he hadn't.\n\nAnd just as he finished wrapping up in his internal dialogue, he saw her walking toward the front steps. \n\nAdam walked out onto the porch, smiled, then said, \"Hi.\"\n\nConnie looked up, smiled back, and said, \"Good afternoon!\"\n\nTrue to his word, he extended a hand as she walked up the 4-5 steps then opened the door for her.\n\n\"So you really are a gentleman,\" she said with a warm smile.\n\n\"I uh...I do try,\" he told her as the hostess approached them.\n\n\"All set now?\" she asked Adam.\n\n\"Yes. I believe we are,\" he replied as he looked at Connie.\n\nThe truth was he hadn't stopped looking since he first saw her. She was still wearing black, but she otherwise looked entirely different. The dress was wearing was knit and clung to her very shapely figure in a way the dress she'd worn to the memorial hadn't. Even though the other dress didn't cling, even it couldn't hide her better feminine features. This one, however, displayed them in the most flattering way possible, and Adam was doing his best not to stare.\n\nHer blonde hair had been worn up during the memorial, and while it had also looked nice, the difference in the way it looked today was just as stark in the difference between the two dresses. The former had been very formal while the latter was nothing short of...sexy. That hadn't been her intent, but it was indeed the final result.\n\nConnie was also wearing a shiny coat of lipstick, something else she'd felt was inappropriate for a solemn occasion, and further changing her overall look. As he helped her get seated, Adam again noticed the distinctive scent of her perfume and commented about it.\n\n\"I didn't notice the oaky tone in the woodiness yesterday,\" he said as he went around the table.\n\n\"Oh, my goodness. That's incredible,\" she told him as she watched him sit down.\n\n\"Thank you, and may I say you look...incredible.\"\n\nConnie's expression brightened as she replied.\n\n\"You may. And thank you very much. I'm trying to be...traditional...with the black, but I'm not sure why.\"\n\n\"Well, whatever the reason is, you look...amazing,\" he told her in a way that gave rise to that same kind of feeling she'd had when they were texting.\n\n\"You look very nice yourself,\" she told him as their server took their drink orders, both of which were for 'sweet tea'.\n\nAdam smiled then decided to do something he just didn't do. He flirted.\n\n\"Thank you. And for the record, you're not...implying...anything by that, are you?\"\n\nHis smile was happy and playful, and evidently contagious.\n\nConnie opened her eyes widely then smiled back just as brightly.\n\n\"Um, noooo. I wasn't...implying...anything,\" she informed him.\n\nHer words were just as playful as his so Adam said, \"Oh, okay. Just checking.\"\n\nShe both slightly lowered and tilted her head in a look of mild disapproval before being unable to hold it. She smiled then laughed quietly before asking him what looked good.\n\n\"Um...everything,\" he said as he glanced at the menu.\n\nAs they ate, Connie explained the situation at work to Adam the way she had to her employees.\n\n\"So that's the urgency in finding a new 'nose',\" she said concluding the 'brief'.\n\n\"That sounds downright daunting,\" Adam told her directly.\n\n\"Yes. Yes, it is. And with the short amount of time to meet our deadline, it's starting to seem impossible.\"\n\n\"And it's all locked up in that tiny little vial around your neck?\" he asked just to make sure he'd heard correctly.\n\nConnie reached up and touched it almost reverently then said, \"I probably shouldn't be wearing it, huh?\"\n\nShe felt foolish for not having thought of that already. It was the only sample of the perfume anywhere on earth, and yet she'd worn it nearly every day of her life since her father gave it to her, so she tried not to be too hard on herself.\n\n\"When we get to Dynex I'd like to smell it. If you don't mind, of course.\"\n\n\"No. Not at all. In fact, I'm hoping against hope you'll be able to detect whatever we'll need to be able to recreate this perfume in the quantity needed.\"\n\n\"And all by the deadline,\" Adam said in a way that told her he understood the gravity of the task.\n\nThere was a fairly long lull at one point, and Adam could see she wanted to ask him something.\n\nWhen he mentioned it, she shook her head then said, \"No. It's nothing.\"\n\n\"I don't mind,\" he told her. \"You can ask me anything.\"\n\nHis voice was gentle and kind, and it made her feel that she could.\n\n\"I...I was so saddened by what you told me yesterday. I also don't know why I hadn't heard about, you know, the loss of your wife, but I really didn't know.\"\n\n\"You and I both moved away from here, so it seems reasonable to think it wouldn't come up during a call or a casual visit home,\" he suggested.",
        "\"Still, I'm so deeply sorry, Adam.\"\n\nHe could tell there was still something else and encouraged her to ask.\n\n\"I...I was wondering how she, you know...\"\n\n\"Died?\" he gently filled in.\n\nHe explained what happened, and Connie felt her eyes welling up. She knew people died every minute of every day and often in ways she didn't think about, but sitting across from someone who'd experienced this kind of tragedy was very new, and very unsettling, to her.\n\n\"May I ask what her name was?\" she asked very sweetly.\n\n\"Kristi.\"\n\n\"That's a beautiful name,\" Connie told him sincerely.\n\nAdam came close to choking up himself as he asked if she'd like to see some photos.\n\n\"Yes! I would love to,\" she said without hesitation.\n\n\"May I?\" he asked, as he looked at the empty chair next to her.\n\nHer purse was on it, so she picked it up immediately and said, \"Of course. Please!\"\n\nAdam slid around and took the seat then opened 'Photo's on his phone and scrolled around.\n\n\"Here. This is our wedding photo. Well, one of many.\"\n\nConnie looked at it and saw just how beautiful Kristi had been. She also realized she'd either never known or forgotten why Adam moved away as she saw him in his dress blues.\n\n\"Oh, my goodness! Adam, you are so handsome in your uniform.\"\n\nHe smiled then told her that uniform could make anyone look good.\n\n\"You're both such beautiful people,\" she said as he shared several more. \n\nA couple of them were at the beach, and Kristi was wearing a bikini while Adam was in a bathing suit. Connie definitely noticed his late wife's gorgeous body, but it was Adam's that took her breath away.\n\n\"At the risk of being utterly corny, I'm going to ask you this anyway,\" she said as she smiled and turned toward him. \"Do you work out?\"\n\nAdam laughed politely then told her he did.\n\n\"Just not like I did back then. I was in the gym four days a week and running the other three, but yes, I still work at it the best I can.\"\n\n\"Well, you do have a daughter and a job, so it can't be easy.\"\n\n\"I do stay busy, but raising Lexi is the biggest joy in my life.\"\n\n\"She is SO cute! Oh, my goodness! I just wanted to pick her up and squeezed her little cheeks and love her to d...\"\n\nShe stopped talking and apologized just as quickly.\n\n\"Connie? I do appreciate your sensitivity, but it's been nearly three years. You're the one I'm concerned about.\"\n\nShe looked over at him again, and the look of concern on his face matched the tone of his voice, and she quickly looked away.\n\n\"Thank you, but as much as I loved my father, and as unexpected as it was, your wife...Kristi...was so young and...\"\n\n\"No, I understand,\" Adam told her. \"I was a complete basket case for the first six months. The next six were nearly as bad, but after a still-difficult second year, I'm finally starting to recover these last few months.\"\n\n\"That's a good thing, right?\" she said, still not sure she could look at him again after seeing his gorgeous, nearly-naked body. This 'thing' she was experiencing was unsettling to say the least.\n\n\"It's a whole lot better than laying awake all night wanting your life back and feeling utterly helpless to change a thing,\" he told her truthfully.\n\nConnie's momentarily uncomfortable feelings gave way to genuine human compassion as she turned to look at him.\n\nShe gently put her hand on his forearm and said, \"I am so sorry, Adam.\"\n\nOnce again, he had conflicting feelings as he realized the way she, and now her gentle touch, made him feel even as he realized the reason her hand was on his arm; a reason that had nothing to do with anything romantic. He was even further conflicted when he felt a stirring that shouldn't be happening as the result of being so close to such a beautiful woman.\n\nHis discomfort won out, and this time he looked away, but not until he looked down at her hand. Connie quickly pulled it away just as Adam said he should probably move back to where he was.\n\nShe told him she understood but was convinced he was moving because she'd made him feel uncomfortable, which, ironically, was true, but for a very different reason than the one she was envisioning.\n\nShe managed to recover and asked about his time in the military, and he, in turn, asked about her career in the field of chemistry.\n\n\"I'm gonna have to go research that online,\" he told her when she explained the specific area in which she'd received her PhD.\n\n\"Don't bother,\" she told him. \"That's about as exciting as watching grass grow.\"\n\nAdam smiled then said, \"I like grass. Quite a bit, in fact.\"\n\nThe way he smiled and the way he said it seemed to smooth over the negative feelings she'd been experiencing since the 'unwanted' physical contact, and once again, that other feeling once again made its presence known.\n\n\"I uh, I should really get back to the lab,\" she told him, suddenly ending the conversation.\n\n\"Right. Yes. Definitely,\" Adam said in agreement, feeling like he'd said something offensive.\n\n\"Did you want to follow me there?\" she asked, causing him to remember why they'd met in the first place.\n\n\"Sure. That sounds good,\" he told her. \"We can get this testing over and you can move on to actually finding someone with the qualifications you need.\"\n\nThey each paid for their own meals, and after opening the restaurant door for her, Adam walked her out to her car and once she unlocked it, opened that door for her, too.\n\n\"Thank you. I can't remember the last time someone did that for me,\" she told him as she got in.\n\n\"You sound like you date about as much as I do,\" he told her with a smile.\n\nBefore she could answer, he said, \"Or you're dating the wrong kind of men.\"\n\nConnie laughed openly then said, \"I think it's a little of both.\"\n\nAdam laughed, too, then told her he'd be right behind her as he shut her door.\n\nHe was a little surprised at the setup inside of the Dynex building. He'd always pictured dozens of cubicles with people sitting behind computer screens, but most of it was open and didn't make a lot of sense to him. \n\nConnie was focused on testing him and didn't bother taking Adam around to meet people or explain what they did. Then again, she barely remembered a handful of names, and that would have been rather embarrassing, and she'd had enough of that for one day.\n\n\"Okay. We have a couple of hundred different swatches. Initially, you'll identify only one smell per swatch then be given swatches with two then three, and so on,\" Connie explained as Adam looked at the eight-inch-long pieces of thick paper containing the various scents.\n\n\"They have to remain uncontaminated so you can only take one out at a time. You'll tell me what you smell, I'll make some notes, and we'll move on to the next one, okay?\"\n\n\"You're the boss,\" Adam said with a smile as they sat down in a small room together.\n\nConnie gently removed the first swatch from its plastic protector then asked Adam to waft it under his nose and showed him how.\n\n\"I can't just sniff it?\" he asked.\n\n\"Gee, I don't actually know. I suppose getting the scent right is what really matters. I've only ever seen people do the wafting thing, but...sure. Sniff away,\" she told him as she handed the first one to him.\n\n\"But only touch the bottom three inches,\" she warned.\n\nAdam aced the basic scents calling out 'fruity' or 'woody' with a perfect score. He did the same thing were two basic scents were combined, and when he got all of the 'triples' correct, Connie's heart started pounding.\n\nThe 'quads' or those with four scents slowed him down, but after taking back a guess on several swatches, he aced them, too.\n\n\"Oh, my goodness. This is amazing,\" she told him.\n\nOnce the overall 'families' were exhausted, the swatches began containing 'notes' which was where the rubber met the road or 'the nose' earned its keep.\n\nTwo hours later, Connie had all of the data, and although he'd missed quite a few notes, it was a very impressive display of talent.\n\n\"So what now?\" Adam asked. \"Is there a practical phase?\"\n\n\"Yes. Actually there is,\" she told him as she picked up the vial hanging around her neck then gently raised it over her head.\n\n\"The bottom line, at least in this case, is to identify every scent and note in this vial. Of course, we have to mix them in the right proportions, but if we can get all of them identified...\"\n\n\"We're back in business?\" Adam asked with a smile.\n\n\"Yes. Or maybe we get to stay in business,\" Connie told him as she carefully laid the vial on the table. \n\n\"I'm going to clear everything that has any trace of scent out of here, to include myself, so why don't you take a few minutes and give your nose a rest?\" she suggested. \"You can hang out in my dad's...in my office...if you'd like.\"\n\nAdam managed not to laugh at the thought of giving his nose a rest. He was picturing a detachable snout he could remove and lay down on the sofa in her office when he realized he never did that kind of thing anymore. He used to goof on all kinds of things, but since Kristi's death, goofing had lost its charm. By the time he got to Connie's office, he was smiling, and he knew the reason why.\n\nAs he waited, Adam sat there and for the first time in years he allowed his mind to wander in places it had almost forgotten existed. It didn't go very far, but he did allow himself to imagine asking this beautiful, older woman to go out with him, and to imagine her saying, \"I'd love to.\"\n\nHis pleasant daydreaming was cut short when the door opened and Connie told him she was ready for him.\n\nHe smiled at the unintended double entendre of her words but didn't say anything as followed her back to the 'sniffing room'. \n\n\"We have a powerful air-vacuum system that pulls air out of the room to ensure there are no other smells in here. That means I can't go back in with you or my perfume will contaminate it now that's had time to clear out any remaining scent.\"\n\nAdam smiled at her then said, \"I've smelled your perfume, and it's anything but contaminating.\"\n\nConnie smiled back then said, \"Be that as it may, even the shampoo or soap smells could interfere. The vial is on the table, and...\"\n\n\"I'll be extremely careful,\" he told her. \"I know it's the only one in the world as well as how valuable it is to you.\"\n\nHe paused then changed the wording.\n\n\"To...us.\"\n\nConnie was deeply touched by his concern and understanding, and the way he said 'us' gave her goosebumps. As she watched him go inside she found herself wondering what it would be like to be with him. Not as in 'being with' someone but rather to be in his life and to have a beautiful little girl like Lexi as a part of it.\n\n\"Get real,\" she told herself seconds later as she forced herself to go back into her office and wait.\n\nAdam felt like he was in a movie where the camera was in tight on the vial; a vial filled with either nitro glycerin or maybe some kind of rare-but-deadly disease. He picked it with extreme care then put his thumb and index finger on the cap and slowly applied pressure until it gave way.\n\nFrom there he carefully unscrewed it making sure to keep it perfectly upright as he set the cap down on the table. Ever so slowly, he moved the vial toward his nose until he got the first faint sense of a smell. He detected several things immediately then moved it away as he picked up the pen from the clipboard it was laying on and jotted down what he'd smelled.\n\nAdam moved the vial slightly closer this time and picked up several other scents which he also wrote down.\n\nThe third time he took a long, deep breath then several shorter sniffs while his brain tried to sort through everything it had just taken in via his olfactory receptors. Two other recently-sampled scents came through, but there were two others he couldn't place.\n\nHe gave his nose a 'rest' then tried again. This time, he was able to associate one of them with something he'd smelled during the test and managed to recall the name of it. \n\n\"Sandalwood,\" he told himself.\n\nThe remaining scent wouldn't come to him, but after two additional wafts, he realized it was something he'd smelled among the many swatches his nose had sampled.\n\nSatisfied he could get no more from further sniffs, he carefully closed the vial and gently laid it back down in front of him. Then, with clipboard in hand, he went to get Connie.\n\n\"So? Any luck?\" she asked with hopeful anticipation.\n\n\"Quite a bit, actually,\" Adam told her as he handed her the clipboard.\n\nHe watched her facial expression as she read his notes, and as she got to the last line, her eyes opened in surprise.\n\n\"Adam. This...this is...unbelievable!\"\n\n\"Not quite. I still can't remember what the last 'note' is.\"\n\n\"But all we have to do is go back through the swatches until you find it, right?\"\n\n\"I'm hoping that's all it's going to take,\" he told her.\n\nTo his surprise, he noticed her eyes were glistening as she turned away.\n\n\"Hey. You okay?\" he asked quietly.\n\nShe nodded but didn't speak as she pulled a tissue from the pocket of her lab coat and gently dabbed her eyes.\n\n\"I was just thinking about all the years my father spent right here in this building, much of it in this room behind this very desk.\"\n\n\"Memories can be very powerful.\"\n\n\"Yes. Very,\" she agreed.\n\n\"So can our imaginations,\" Adam said before he realized he'd said it.\n\n\"Our imaginations?\" Connie asked as she turned back to look at him.\n\n\"Sorry. I think I let mine run away with itself a little earlier.\"\n\nAssuming he was referring to 'cracking the code' of this mysterious scent she told him she didn't see any harm in that.\n\n\"We just can't get too excited until we actual get this last note. Even then, getting the blend right will be an enormous challenge. But with four months to go, what would have been nearly impossible could be very doable.\"\n\n\"Right. The 'code',\" he said, parroting her word rather than admit what he'd really been thinking.\n\n\"So...are you ready or do you want to maybe start fresh tomorrow?\" she asked, not assuming either way.\n\n\"I'm here and as they say, 'Time is money', right?\" he said with a smile.\n\n\"Yes. So they say,\" she replied with a smile.\n\nWhat she really wanted to say was how much she enjoyed being with him, but that seemed wholly inappropriate for obvious reasons.\n\nConnie went back to the safe and retrieved the swatches and the two of them headed back to the testing room where Adam carefully and methodically went through them one at a time.\n\nIt was nearly 5pm when Adam's nose detected something familiar. He moved the swatch away then brought it back.\n\n\"It's this. Right here. This one. There's a kind of...leathery...smell to it. Here. Take a whiff.\"\n\nConnie's hand was shaking as she reached out for it.\n\nAdam watched her do what he'd been doing off and on for several hours, and on the second pass, Connie said, \"I just don't have the um...nose...for it, but if this is what you smelled...\"\n\n\"It is. That's what I remembered from the testing when I was checking the perfume. It's this one for sure.\"\n\nConnie's mind was whirling out of control. She knew building a perfume was like a house of cards. Change one thing in any quantity and the whole thing could fall apart. Too much of the 'right' scent could take the smell of fresh grass to the smell of stinking trash.\n\nBut if she now had all of the necessary scents, she had the expertise to blend or even create them depending on the specific scent. \n\nThere were some flowers that were called 'mutes' because they don't deliver any oils. Lily of the Valley, Lilac, Peonies, and Sweet Peas were all mute flowers. Perfumers have to recreate them in the form of an 'accord'. The perfumer fakes nature by blending different types of materials to reproduce their scent. And most of those formulas were right there in the lab, and her employees knew how to make them.\n\n\"So...is that it?\" Adam asked.\n\nConnie stood up then told him, \"For you, yes. For me, it's just the beginning of many long days trying to find the perfect mix to recreate this scent exactly then start producing it in bulk. But without you, we'd have never even been able to try.\"\n\nShe came around the table and put her arms around Adam and thanked him sincerely. He willingly let her and also put his around her body and held her. Neither of them moved for a long enough time that when Connie finally did slowly pull away, there was a momentary feeling of awkwardness.\n\n\"Well, I...I should let you go and get to work,\" she said almost nervously as she moved back a step or so.\n\n\"Right. I need to get home and see how my Lexi-Loo is doing, and give my mom a break.\"\n\nConnie smiled then said, \"Every single time I think of her it makes me happy.\"\n\n\"Me, too,\" Adam told her as their eyes met.\n\nThe stare lasted several seconds until Connie could no longer hold it.\n\n\"So...again, thank you so, so much, Adam! You're a lifesaver.\"\n\nWithout being overly grim he said, \"I wish that was true. But if I can at least be a...business saver...then I'll feel pretty good about all of this.\"\n\n\"You should. You may have just saved this company and a lot of jobs. In fact, would you like to meet...\"\n\nShe stopped then said, \"Sorry. You need to get home.\"\n\n\"Yes, but not immediately,\" he told her. \"If I can hang out with you a little while longer...I'm game.\"\n\nConnie had that same feeling again and quickly turned around and said, \"Well, then follow me. Since we have such good news, I'll gather everyone around and we can share it with them together.\"\n\n\"Together. That has a nice ring to it,\" Adam told her with a smile.\n\nConnie tried to smile back, but it felt like her face wouldn't 'work'. It seemed frozen or somehow disconnected from her brain. All she could do was briefly look at him then turn away again.\n\nConnie put out the word for an 'all-hands' meeting, and within minutes, everyone once again gathered around. With Adam by her side, she began explaining who he was and what had just happened.\n\n\"I know some of you know this man's father who grew the lion's share of the roses we use here each year. Adam has been running the business, and although we'd met before, we didn't really know each other until the memorial. Oh, and I want to thank all of you for attending before I forget. I'm a little excited right now, so if I'm all over the map please forgive me.\"\n\nEveryone understood but they appreciated her explaining the 'helter-skelter' talk.\n\n\"Anyway, he and his mother, someone else most of you know, offered to help out, and I kind of glibly said the only thing that would help would be to find a new 'nose'. I had no idea that Adam could even possibly be that person, but something his mom said led me to ask him if we could test him, and...\"\n\nConnie looked around excitedly then finished explaining.\n\n\"I'm a math and science girl. I understand probability quite well. Finding someone with this ability is very hard. Finding them by chance is astronomically difficult. But...we found that someone. Adam was able to determine the missing elements to the order, so we are now months ahead of schedule.\"\n\nShe saw some looks then corrected herself.\n\n\"Okay. That's not exactly right. But we just shaved off weeks or even months of finding someone able to do what this...\"\n\nShe looked at Adam, smiled, then said, \"Very handsome young man just did.\"\n\nA woman his mother's age said, \"I'm recently divorced if you're looking!\"\n\nThere were some chuckles and then some groans from those who knew. The woman who made the comment obviously didn't and someone who did leaned over and whispered the truth to her about his late wife.\n\n\"I don't even know what to say,\" the woman said so sincerely that Adam walked over and hugged her.\n\n\"It's okay. And who knows? Maybe we can have a cup of coffee one of these days.\"\n\nThe woman was grateful beyond words for his understanding, and knew full well he was only being nice, and she hugged him again then stood quietly and waited.",
        "\"I believe everyone here knows what all this means, so the only question is whether or not we can come up with the right balance in time.\"\n\n\"I'll work overtime for free,\" the same woman offered. Several more said the same thing and Connie waved them off.\n\n\"No, that won't happen. You'll all be paid for your time or none of us will get paid. For now, we have enough cash on hand to make payroll, pay expenses, and purchase ingredients. But if we don't have this done in 90 days or less, I'm afraid we'll be running on fumes.\"\n\n\"We have four months so if we're close, we'll all pitch in,\" the woman said as others nodded in agreement.\n\n\"Okay. Everyone go home, talk to your families, and let's get at this tomorrow morning first thing,\" Connie said almost cheerleading in her tone.\n\nWithout exception, every person there walked by Adam and either shook his hand or hugged him as they thanked him.\n\nHe wasn't sure what to say since this wasn't a talent he'd worked at to develop, but he wished them all the best as sincerely as he could.\n\nOnce everyone else was gone, Connie thanked him again profusely then reached out to offer him another hug. This one wasn't quite as long, but it stirred something in both of them, and when it ended, Connie saw him looking at her in a way that once again made her ask if everything was okay.\n\n\"Oh, sure. I guess I was just doing some more imagining,\" he told her.\n\n\"Should I ask what the imagining is about?\" she asked with raised eyebrows.\n\nFor all of his internal bravado and confidence, Adam was suddenly paralyzed and couldn't speak.\n\n\"No?\" she asked after he didn't reply.\n\n\"I...I'm not sure I should say because...\"\n\n\"That's okay. Your private thoughts are yours, and you've already done so much. I have no way to thank you, but if you think of something, I hope you'll let me know,\" Connie told him with a warm smile.\n\nAs much as he wanted to ask her to go out with him, all he could find to say was, \"I hope you'll keep buying our roses.\"\n\n\"If we get this done, you can count on it,\" she told him. \"In fact, we're going to need a huge amount in short order if we can get the balance right, as roses are the primary ingredient.\"\n\nAdam smiled politely then said, \"They'll be ready. Anytime you need them.\"\n\nConnie walked with him out to his car and thanked him yet again.\n\n\"My pleasure. I just hope I got it right,\" he told her.\n\n\"We'll know soon enough,\" she said before quickly saying, \"or maybe not all that quickly, but I do hope we'll know in time.\"\n\nHe opened the door and went to get in when Connie said, \"I had a really nice time today, Adam.\"\n\n\"Yeah. Me, too,\" he told her. \n\nHe sat down then looked up at her and said, \"It might be nice to do that again sometime when it isn't just business.\"\n\nHis words took her back to that same feeling she'd experienced several times so fast it startled her.\n\n\"I...that...that would be very nice,\" she told him, as butterflies swirled in her tummy.\n\nAdam realized he'd somehow said what he'd wanted to say, and yet it all seemed so jumbled up, he wasn't sure what to say next.\n\n\"Can you maybe keep me in the loop as to how things are going?\" he asked, not sure what else to say.\n\n\"Yes. Of course,\" Connie told him, now realizing he wasn't actually asking her out, but saying the polite thing that any decent guy would say. \n\nShe also realized it was somewhere between wishful thinking and ridiculous to imagine this very handsome, much-younger man would ever see her like that. She was 38 years old, and he...wasn't. He didn't even date, and whenever he was ready, she knew it would be with someone in her early-to-mid 20s, not her late 30s. And with that, she pushed the thought out of her mind as he closed the door and started the car.\n\nShe stood there and waved goodbye as Adam drove off then forced herself to focus her attention on how to go about finding the perfect amount of each necessary ingredient in the shortest time possible. The task was still daunting but not impossible, and as she walked back inside, she looked up and asked her late father for his help, not knowing whether or not he could even hear her.\n\nFor the next two weeks, Connie spent close to 14 hours a day in the lab seven days a week. They had all of the elements they needed ready to go, and now the hardest part began.\n\nIt wasn't that she'd completely forgotten about Adam, it was more that work had required all of her attention. And now that some time had passed, she realized the mild fantasies she may have briefly had were just that\u2014fantasies. \n\nBut the one thing those fleeting moments did was to awaken a part of her that had always taken a back seat to science. Once this mystery was solved and Dynex was back on its feet, she promised herself she'd at least be open to finding love or possibly letting it find her.\n\nThat short mental conversation with herself reminded her she hadn't even called Adam as she'd promised. She finished what she was doing then went to the office where she sat down and called his number. He picked up on the second ring, and his greeting made her laugh.\n\n\"Uh...what's up, Doc?\" he said like Bugs Bunny.\n\nConnie laughed then answered, \"You have no idea how much I needed to laugh!\"\n\n\"I take it's been pretty intense?\"\n\n\"You can say that again,\" she told him.\n\nThen, before he could actually say it again, she quickly said, \"But don't.\"\n\n\"I believe someone is onto me,\" Adam told her as though she'd just stolen his thunder.\n\n\"I had no idea you were so funny,\" she said, the surprise genuine.\n\n\"I'm not sure I am, but when we initially met, joking around didn't seem appropriate.\"\n\n\"No. No, it wasn't. And shame on me for not realizing that.\"\n\n\"So, what is up, Doctor Martin?\"\n\nConnie gave him a quick rundown of what they'd done, and where she planned to go from there.\n\n\"You sound optimistic,\" Adam told her.\n\n\"Maybe I am or it could just be hopefulness masquerading as confidence.\"\n\n\"I have complete confidence in you, Connie. I know this is going to sound clich\u00e9, especially coming from someone you probably still see as a kid, but, your dad would be very proud of you.\"\n\nConnie felt the lump in her throat appear out of nowhere, and she realized she didn't actually know his age. She knew he was a lot younger than her, but he spoke with this kind of quiet confidence she found comforting and reassuring.\n\n\"I promise you that's not how I see you, Adam. In fact, I see you as some kind of...\"\n\nHe could tell she was smiling and thought she was about to make a joke of her own. But her words caught him off guard as much as his had her.\n\n\"Some kind of knight in shining armor. A kind of hero of sorts.\"\n\nNow he was the one with the lump in his throat, but for a very different reason as he thought about the two friends who'd been killed in Afghanistan while he was there. \n\n\"I'm not a hero,\" he told her quietly. \"But I did know a few.\"\n\nConnie didn't understand, and Adam didn't explain.\n\nShe sat there for a moment not sure what to say then told him she should get back to work.\n\n\"Right. Of course. The clock is still ticking, isn't it?\"\n\n\"And getting louder by the day,\" she told him.\n\n\"I'm glad you called, Connie. It was great to hear your voice again.\"\n\nThe way he spoke those words spoke to her, and she found herself back to where she'd been two weeks earlier after assuming all of this had passed.\n\n\"You too, Adam,\" she told him sincerely. \"I'll call you again. Soon. I promise.\"\n\n\"I'll look forward to it,\" he told her.\n\n\"Okay. Well...I guess I'll talk to you then.\"\n\n\"You take care, Connie.\"\n\nAs she hung up, she just sat there for a good five minutes trying to understand how such a short conversation with someone she barely knew could have such an effect on her. They'd spent less then five minutes on the phone, and yet she felt such a powerfully strong connection with him that she found herself unable to even think.\n\n\"Think,\" she said to herself. \"Everyone here is depending on me to think, and I can't shake the feelings this...man...stirs up in me every time we talk.\"\n\nConnie concluded these feelings of hers were almost certainly driven by some sense of gratitude for possibly saving her family's business. Or maybe she was right before. It could be that Adam was helping her see she should start looking for someone her age with similar interests and maybe even start a family before that ship sailed forever.\n\nMarriage had been way, way in the back of her mind all of her adult life. And kids were something she'd never seriously thought about. But since returning home to Charlotte, both of those things had moved way up her priority list. And after seeing Lexi, having a child of her own seemed like just about the most wonderful thing that could ever happen to her. Unless, of course, she could fall in love with someone who would love her completely and also be the kind of person she could love that way in return. Perhaps someone like...\n\nA knock on her door brought her back to reality.\n\n\"Connie? We have a mixture we'd like you to take a look at,\" the head of production told her.\n\nShe followed him out to the floor then into a smaller room.\n\n\"What do you think?\" he asked as he handed her a paper swatch with the scent on it.\n\nShe took a sniff then realized that without a 'nose' on site, they'd get there because her nose wasn't nearly sensitive enough to distinguish okay from good or good from 'that's the one'!\n\n\"Give me a minute, would you?\" she told him as she went back to the office to use the landline.\n\n\"Adam? Hi. It's...\"\n\n\"I know your voice,\" he said in a way that told her he was smiling.\n\n\"Right. We just spoke, didn't we?\" she said, a smile now on her face.\n\n\"How may I help?\"\n\nShe explained what was going on, and before she could finish, Adam told her he'd be right there. The roses were looking spectacular, and he knew he could well afford to take the time off. More importantly this gave him another opportunity to see this beautiful, older woman he now found himself thinking about\u2014a lot.\n\nConnie met him at the front door and thanked him for coming over so quickly.\n\n\"We're going to have to get you a building pass,\" she said as they walked toward the lab.\n\n\"If I'm going to be stopping by fairly often, that sounds like a good idea.\"\n\nFeeling the best she'd felt since learning her father had passed away, Connie cheerfully told Adam he could stop by anytime he liked.\n\n\"Be careful what you wish for,\" he replied just as cheerfully.\n\n\"I'm always careful,\" she told him with a look that told him she might not just be kidding.\n\n\"Okay, so what have we got?\" he asked once they were back in her office.\n\n\"Our first stab at the formula,\" Connie told him after explaining what they'd done.\n\n\"Let's go give it a whirl. Or maybe a sniff.\"\n\nStill happy, Connie laughed and smiled at him, and that smile, along with the earlier look, told him something had changed.\n\nThe production chief's name was Bill, and they shook hands again as they met in the testing room. He pulled the swatch out of the plastic bag it was in and said, \"Here's to success.\"\n\nConnie stayed outside as Adam took it then gently moved it back and forth letting the scent make its way to his nose.\n\n\"Wow,\" he said before moving it closer and trying again.\n\n\"We're too heavy on the leather smell. And we're missing some of the woodiness in the original.\"\n\n\"Can you try and quantify that?\" Connie asked, knowing all he could do was say things like 'a little more' or 'a tad less' or 'a whole lot less'.\n\n\"The leathery smell should be the faintest of scents. So reduce that and add in a bit more of the wood smell and let's try again.\"\n\n\"Got it,\" Bill told them as he replaced the swatch in the bag marked Trial #1.\n\n\"How long will it take to change the mix?\" Adam asked Connie when Bill left the room.\n\n\"We should have it within a day,\" she told him. \"Was there anything else at all?\"\n\n\"That's tough. I don't really know. All I can say for sure is that's not a bad first try, in my very inexperienced opinion.\"\n\n\"Getting close isn't hard. It's getting it right that takes so much time and effort.\"\n\n\"Right. The 'house of cards' thing,\" he said, remembering what she'd told him before about any change, no matter how small, affecting everything else.\n\n\"You uh, you don't have to stay, Adam. I've already taken up enough of your time for one day,\" she reluctantly told him.\n\n\"I don't consider any time I spend with you to be 'taken up',\" he told her. \"I see more as time pleasantly spent.\"\n\nHis smile warmed her heart, and her good mood got even better.\n\n\"That's interesting. I was thinking the same thing about the time I spend with you.\"\n\nConnie was trying to remember the last time she flirted with anyone, and the only answer she could come up with was her senior year in high school. She'd had the worst crush on the cutest guy in school, a guy was completely wrong for her in every way, and yet she'd been inexorably drawn to him like the proverbial moth to a flame. When she finally got up the nerve to tell him how she felt, he'd unintentionally crushed her by saying, \"Oh, wow. That's pretty cool.\"\n\nShe was amazed at how just the thought of that moment could alter her mood, and for the briefest of moments, that sting of rejection was right there. But when she looked at Adam again it melted away.\n\n\"Then maybe we should spend more time together,\" he told her, pleasantly surprising her.\n\nShe looked at him to make sure he wasn't just saying that, and once she was convinced he meant it she told him that sounded very nice.\n\n\"Do you take time off for dinner?\" he asked, again not joking.\n\n\"Oh, my. We've been working late every day, but if you can hold out until say...8 o'clock...I can leave here at seven and be ready by then.\"\n\n\"I could probably do that,\" he replied with a smile. \"That's Lexi's bedtime, so it works out perfectly.\"\n\nJust the mention of that sweet little girl made her heart soar.\n\n\"I wouldn't mind doing something with both of you sometime,\" Connie told him, now feeling much more confident.\n\n\"We'd both like that,\" he told her, that smile of his setting off all kinds of chemical reactions in her brain.\n\n\"Can I walk you out?\" she asked, aware she should have used 'may' instead of 'can'.\n\n\"I don't think I'd mind too much,\" Adam told her trying not to smile.\n\nHe was now certain things had changed, so he offered her his arm which she took without hesitation.\n\n\"I know I sound like a broken record, but I can't thank you enough,\" Connie told them as they walked toward the front of the building.\n\n\"Being able to see you is thanks enough,\" Adam said in a tone of voice that made her stomach flip-flop.\n\n\"We...we should stop by personnel and get you that badge,\" she said, her heart now beating noticeably faster.\n\n\"Right. The old mugshot,\" he said, aware of the sudden change which caused him to think he was pushing things too fast.\n\nLess than 20 minutes later, Adam had his own pass complete with the 'mugshot'.\n\n\"It's not that bad,\" Connie told him when he showed it to her.\n\n\"Try and tamp down the enthusiasm, would you?\" Adam teased.\n\nConnie laughed then said, \"What I mean is, the photo isn't nearly as nice as...the real thing.\"\n\nAdam saw her looking up into his eyes, and he held her stare for a couple of seconds before breaking eye contact.\n\n\"I like looking at...the real thing...too,\" he told her after looking at her again.\n\nThis time she stopped at the door to say goodbye and asked where to meet him.\n\n\"I was hoping I could stop by and pick you up.\"\n\n\"That would be even better,\" she said. \"Do you know where I live?\"\n\n\"Of course. And I'll be there at 8 o'clock sharp.\"\n\n\"And I'll looking forward to that,\" she told him, the smile on her face saying it all.\n\nThe look in her eyes let him know the answer to what he was thinking, so without a word, he leaned down and gently kissed her on the cheek.\n\nConnie felt a surge of emotion when he did. Kissing him was out of the question, even though she wanted to with every fiber of her being. But the fear of rejection and the inappropriateness of doing so prevented it. But had he tried to kiss her, there was no doubt she'd have let him or that she'd have kissed him back.\n\n\"Bye, Adam. And thank you again.\"\n\nHe raised his arm in a wave as he walked away, and Connie stood there amazed at the way life sometimes worked. \n\nLosing her father was horrible. Losing the business would be traumatic. But had her father not passed away, she'd never have met Adam, nor would she be standing there feeling like her life was about to change yet again only in a very different kind of way.\n\nWhen Adam let his mom know he was going out that evening, she was pretty sure she didn't need to ask with whom.\n\n\"Anyone I know?\" she asked without any hint of knowing.\n\n\"As a matter of fact, yes,\" Adam told her.\n\n\"Suit and tie. She must be important.\"\n\n\"She is. And I think I really like her.\"\n\nHis mom smiled because that's what she'd meant by 'important'.\n\n\"Well, whoever this lucky girl is, I'm happy to see you taking some first steps. If, of course, this is actually a date.\"\n\nWhen Adam didn't answer she asked, \"Is it?\"\n\nHe only smiled then said, \"Thanks for watching Lexi, Mom.\"\n\n\"You know I love having her with me, so that's never an issue.\"\n\nHe looked at her then asked her a question.\n\n\"Are you ever going to try and find someone?\"\n\n\"It's different for me, honey. I'm in my late 50s and I have you and Lexi. So it's not like I feel the need to...find someone. And it's only been a year, so I need some more time, okay?\"\n\n\"Okay, but if you ever do, I could probably stay home with my daughter,\" he told her with a smile.\n\nHis mom laughed then Adam hugged her and thanked her yet again for being such a great mom.\n\n\"Tell Connie hello for me, okay?\" she said as he started to walk out.\n\nHe nearly stopped and asked how she knew, but she was his mom, and he was pretty sure she just did, so all he said was, \"I will.\"\n\nWhen he arrived at Connie's, or rather\u2014her mom's place\u2014he was so shocked by her appearance it took him a few seconds to recover.\n\n\"Is this okay?\" she asked as he continued looking at her.\n\n\"It's...wow!\" he told her unable to come up with anything else.\n\nThe dress was a kind gold lace with an open back and a mock neck. The edges were scalloped and the sleeves were sheer. It was short not but not shockingly so with the hemline falling to about three inches above her knees.\n\nAdam had no idea what color her heels were, but he knew they went perfectly well with the dress and the matching clutch she was carrying. Her long, beautiful hair was worn down, and he could see the dangling gold earrings she wore with it.\n\n\"You look very nice yourself,\" she told him, snapping him out of his dream world.\n\n\"Oh. Thank you. That's very kind, but you look...amazing!\" he told her as he continued to look.\n\n\"Thank you. I'm glad you like it,\" she told him with another smile. \n\nAdam nearly asked about her mother and if she was home, but he really didn't want to have to deal with her coldness, so when Connie told him she was ready to go, he was more than a little relieved.\n\n\"Have you been to The Fig Tree?\" he asked once they were on the road.\n\n\"Not for several years,\" she replied. \"It's one of the nicer restaurants in town.\"\n\n\"So I did okay?\" Adam asked with a smile.\n\n\"Yes, but it's also very expensive, and we don't have to go somewhere that pricey,\" she said as politely as possible.\n\n\"I'm paying so no worries, okay?\" he told her.\n\n\"Wait. You're paying for me, too? Adam, that place charges $40-$50 just for one entree.\"\n\n\"Is there a point?\" he said with a smile.\n\nShe started to explain that there was, but when he reached over and took her hand, she very quietly said, \"No. No point.\"\n\nConnie hadn't been kidding about the prices, but Adam didn't care. He never spent money on himself, and what little money he did spend was for Lexi. So he waited to order the most expensive entree, the Elk Chops for $44, until after Connie ordered to make sure she wasn't going to try and get by with a dinner salad with crackers and tap water or some such thing.",
        "She chose grilled lamb tenderloin over fig and almond risotto which was a 'mere' $38.\n\nAdam then ordered them a bottle of red wine, and Connie couldn't help but try and stop him.\n\n\"Adam, that's $25 a glass!\" she tried to whisper to him.\n\n\"Then don't have more than three, okay?\" he whispered back.\n\nConnie gave him a playful nudge with her elbow then accepted the fact he was going all out to impress her.\n\n\"This is very nice,\" she told him as their wine came.\n\n\"I haven't really been on a date since...\" he began.\n\nThere was no need to finish as Connie understood.\n\n\"I'm honored. And flattered,\" she told him as they toasted to the success of their new fragrance.\n\n\"After I left Dynex today, I was wondering if 'kismet' or any such thing exists,\" Adam said.\n\n\"Oh?\" she replied, her heart already beating faster.\n\n\"Yeah. I mean, is it just pure coincidence that you and I met? Or rather...met again?\"\n\n\"Honestly? I was thinking the same thing. I couldn't help but wonder if there's something or some...one...out there helping people get together.\"\n\nAdam smiled at her then took her hand again then spoke rather softly.\n\n\"I like being...together...with you.\"\n\n\"So it isn't just me?\" she asked sweetly.\n\nAdam stared into her eyes for several seconds, and at one point the feeling was so intense Connie had to look away.\n\nHe gently moved her hand a little closer to him then asked, \"Do you think you and I might...do you think it's even possible we could...\"\n\n\"I believe anything is possible,\" she told him just above a whisper, even though there were many things she knew were impossible. But this wasn't a science class. It was real life with a real person, and this real person was incredibly handsome and nice and also...very young.\n\n\"Even though I'm a little bit younger than you?\" Adam asked, trying not to smile.\n\n\"I've been pretending it's only a few years, but we both know it isn't,\" she replied.\n\n\"So...it does bother you? That I'm...a lot younger?\"\n\n\"What? No. I thought you were getting ready to tell me the problem was with me being so much older.\"\n\nAdam smiled and nearly laughed as he said, \"That never even crossed my mind. What did is that you're a very successful chemist with a PhD while I have a high school education and...grow roses.\"\n\nAll of that was true, but at that moment, none of it mattered.\n\n\"I do love chemistry, but it's never made me feel the way being with you makes me feel,\" she told him as their eyes darted back and forth. \"I've never had a covalent bond hold my hand or a chemical reaction tell me I'm...beautiful.\"\n\nAdam reached up and put his other hand on her cheek then quietly told her, \"You are beautiful, Connie. And you're also kind and patient and I see the way you interact with the people who work for you. It's obvious they like you and trust you, and that kind of loyalty isn't just handed out.\"\n\n\"They're all dedicated, hard-working people who really enjoy what they're doing, so that makes it easy.\"\n\n\"But that's not the reason why they like you so much,\" he told her.\n\nConnie's heart was pounding as he leaned closer then whispered, \"Or the reason why I like you so much,\" just before kissing her for the first time.\n\nShe was aware they were in public, but she didn't care at all, and although the kiss was neither long nor formal, she definitely kissed him back.\n\nAs Adam pulled away, their eyes met again, and Connie said, \"I really like you, too, Adam.\"\n\nTheir romantic moment was broken by the arrival of dinner, and while the food would was excellent, every bite tasted almost...heavenly...as they ate, talked, and sipped wine.\n\nIt was nearly 10 o'clock when they realized how long they'd been there. But both of them understood how time had this ability of getting away from someone when he or she is doing something pleasant, and both of them found the other's company very pleasant indeed.\n\nThey covered a wide range of topics in the roughly two and a half hours they were together, and although they didn't get into anything too deeply, both of them realized they shared similar views on the kinds of questions that tended to help a relationship grow. \n\nThe topic of sex came up briefly, and while very little was said, it seemed that was yet one more area where they had a lot in common. That, along with politics, religion, and money were areas where they were very much in synch. And although they still didn't know one another all that well, both of them realized the feelings they were experiencing were very real and growing stronger.\n\n\"Would you like to come inside?\" Connie asked when Adam walked her to the door.\n\n\"I really should get home,\" he told her. \n\nShe knew he had a daughter and even though she was sleeping, his place was with her. She not only wasn't offended by his polite refusal, it only made her respect him even more.\n\n\"Okay. Well...goodnight then, Adam. I had a really wonderful time.\"\n\n\"Me, too,\" he said as he took both of his hands in hers.\n\nHe stood there looking at her, and Connie began wondering if he was going to kiss her goodnight or even worse, if his feelings had somehow changed.\n\n\"Is everything okay?\" she asked, trying not to let her worry show through.\n\n\"Uh-huh,\" he told her.\n\n\"Then...what is it?\" she asked.\n\nAdam smiled at her then again put his hand on her face again.\n\n\"I just want to remember this moment forever.\"\n\nConnie didn't reply, she just stared up into his eyes, as he stared into hers.\n\n\"You are SO beautiful,\" he said quietly.\n\nNow confident nothing had changed, Connie let go of his hands and slid her arms around his neck and kissed him just as he was about to kiss her.\n\nAfter a second or two, she offered him the tip of her tongue, and Adam did the same in return. The tip turned into much more and what started off as a soft kiss goodnight became a thing of passion before Adam gently pushed away.\n\n\"If I don't stop now...\" he said with a shake of his head.\n\n\"Sorry,\" she said. \"I didn't mean to get so carried away.\"\n\nHe smiled at her then told her he wasn't complaining.\n\n\"I'm just wishing I had the time to come inside,\" he said, causing her to smile.\n\n\"Maybe another evening?\" she suggested.\n\n\"Yes. Definitely,\" Adam told her before kissing her again but only for a second before wishing her a good night.\n\n\"You, too, Adam,\" she said as lowered her arms.\n\n\"Let me know when you need me, okay?\" he said referring to the next time his nose would be required.\n\nConnie smiled a devious smile then said, \"I'm tempted to say 'right now', but that might not come across the way I want it to.\"\n\nAdam smiled happily then told her, \"That sounds really nice no matter how you intended it.\"\n\nAs Connie went inside, she felt happier than she'd ever been. She was getting ready to go upstairs when she heard her mother say something to her.\n\n\"Are you sure you can trust that boy?\" the cold voice said.\n\n\"Excuse me?\" her daughter replied.\n\n\"Well, with you on the verge of getting this perfume ready, let's just say...there's a lot of money to be had by getting involved with a woman of your stature.\"\n\nConnie's good mood turned sour, and she was tempted to lash out at her mother. Instead she moved closer then put her arms around her mom and told her she loved her.\n\nTaken aback to the point of being speechless, her mom stood there like a statue as her daughter turned and walked up the marble staircase to her bedroom.\n\nHer sour mood lifted a few minutes later when she got a text from Adam.\n\n\"Did I mention how beautiful you looked tonight?\"\n\nThe incident with her mom was suddenly irrelevant as she smiled then lay down on her bed and kicked her feet like she was ten years old again then typed her reply.\n\n\"You might have said something about that, but I wouldn't be upset if you reminded me.\"\n\nShe added some heart emojis then hit 'send'. Expecting a text reply, she made a happy noise when her phone rang.\n\n\"Hello?\" she said, knowing who it was.\n\n\"Hi. I just didn't want you to forget how beautiful you are,\" Adam told her.\n\nBefore she could respond, the phone went dead, and Connie lay there for a moment before kicking her feet again as fast as she could on the mattress.\n\nShe quickly typed out a follow-on then sent it.\n\n\"I really do love chemistry, but I love the way you make me feel even more. Love, Connie.\"\n\nAdam read it then smiled, too.\n\n\"I barely made a 'B' in chemistry, but I do know what it's like to be in love. I'm not sure this qualifies\u2014yet\u2014but I do know it feels pretty amazing.\"\n\nHe didn't sign it 'Love, Adam', but Connie didn't care. What he did say meant just as much to her as she quickly wrote him back.\n\n\"Yes. Yes, it does feel amazing.\"\n\nAdam was also laying on his bed and realized he was getting hard, something else that happened very often in the last three years. Not sure, but deciding to press his luck, he typed:\n\n\"If this goes any further, it's going to turn into pillow talk, and we can't have that!\"\n\nConnie read his reply and realized she was wet for the first time in ages. She bit her lip then decided to be playful, too.\n\n\"We can't?\"\n\nWhen Adam read those two words...or was it three...he threw his head back and put the phone down.\n\n\"This woman is driving me crazy!\" he said to himself. \"Crazy in the best possible way.\"\n\nHe sat up then typed his reply.\n\n\"Okay. We CAN pillow talk\u2014or rather pillow 'text', but wouldn't it be more fun to wait and do the actually talking...for real?\"\n\nConnie read it then looked up at the ceiling and said, \"Oh, my God!!\"\n\nShe too, sat up then started typing.\n\n\"As much as I'd love to 'pillow text', I'd enjoy the real thing much more, too. So I'm going to be a good girl and let you go to sleep.\"\n\nShe added some sad-faced emojis then sent it.\n\nAdam was disappointed even though he was the one who'd stopped the 'pillow train'.\n\n\"That's okay,\" he wrote. \"As long as you promise not to be good ALL the time.\"\n\nConnie's heart melted when she read his reply then typed.\n\n\"I won't. I promise.\"\n\nShe added a devil holding a pitchfork emoji and hoped it wouldn't be too much.\n\nHe laughed then wrote:\n\n\"I'm going to hold you to your promise, you know.\"\n\nConnie smiled happily then wrote:\n\n\"As long as you hold me, that'll be fine.\"\n\nAdam ended the conversation with:\n\n\"Oh, my. This HAS to stop now, or I'll be driving back to your place.\"\n\nConnie knew it had to end, but still sent more sad emojis along with just one letter.\n\n\"K.\"\n\nAround midnight, Adam realized he wasn't going to fall asleep unless he relieved some pressure. He'd been rock hard since they texted, and it wasn't getting any better.\n\nUnprepared for this 'event' he found the best lubricant he could in the bathroom then lay back down and relived the night, only this time he said 'yes' to her invitation to come inside. Just minutes later he envisioned 'coming inside her' and his body released a massive, pent-up explosion of goo, some of which flew over the tissue in his other hand. The explosion was so fierce some of it hit him in the face causing a groan of displeasure along with a loud laugh he hoped his mom didn't hear two rooms down the hall.\n\nAfter cleaning up the mess, he was sound asleep within minutes.\n\nConnie hadn't been with anyone in several months, and while that seemed like a very long time to her, she thought about Adam and tried to imagine going three years. The reason he'd had to so made her sad to the point where any interest she'd had in finding her own version of release faded away. So rather than massage 'the boy in the boat' while fantasizing about him, she fell asleep dreaming about what it would be like to pillow talk with him in person.\n\nThe following morning, Connie's day began with a smile when she saw a text from Adam. It got better when he took her to lunch, and even more wonderful when he invited her to have dinner with him, his mom, and Lexi.\n\nUnlike her mother, Adam's mom was thrilled to have her over. She tried her best not to monopolize the conversation, but it was just so pleasant to have another adult woman to talk to. She did occasionally get out, but taking care of Lexi was her life; a life she loved, but one that left her little time to talk to other adults. Adam wasn't exactly a talker, so Connie was a godsend.\n\n\"I don't understand a word you said, but it sounds fascinating,\" Marilyn said after getting an explanation to her question about the branch of chemistry Connie loved so much.\n\n\"It's a little nerdy, but that seems to fit me just fine.\"\n\nAdam laughed then said, \"You don't look like any nerd I've ever seen.\"\n\nBefore she could answer Marilyn agreed.\n\n\"Oh, heavens no! You're anything but nerdy. In fact, you're a very beautiful woman.\"\n\nShe started to thank both of them when Lexi said, \"You're so pretty!\"\n\n\"Okay, I'm starting to love this family. A lot!\" Connie said, the smile on her face genuine and wide.\n\n\"This family is starting to love you,\" Adam told her.\n\nHis words were amazing, but the look in his eyes was even more telling.\n\n\"Thank you. That makes me very happy,\" she said, as feelings of one possibly day being a part of it swept over her.\n\nMarilyn leaned her way, then after a quick glance at Adam said, \"It's no wonder my son is so sweet on you.\"\n\nAdam only shrugged as if to say, \"She's right. What else can I say?\"\n\nShe hadn't heard the phrase 'sweet on you' in years, but it was a very Southern thing to say, and because of the context, it was perfect for the situation.\n\nConnie smiled at Adam then leaned Marilyn's way and told her she was kinda sweet on Adam, too.\n\n\"I'm sweet!\" Lexi said, having no idea what the adults were talking about.\n\n\"Yes, you are!\" Connie told her after laughing happily. \"You are so sweet I could come over there and just eat you all up!\"\n\n\"But then you wouldn't want dessert,\" the little girl who was almost three informed her.\n\nHer grandmother laughed while her father said to Connie, \"She's got a point. And my mom makes some killer desserts.\"\n\n\"I believe you,\" Connie said. \"This meal is delicious!\"\n\nBut the best part of the day came around 7:45 when Lexi came out of the bathtub 'all fresh and clean'.\n\n\"Connie? Can you read my a story?\" she asked so sweetly it made the chemist tear up.\n\n\"I would love to read you a story, sweetheart!\" she told her as the little girl took her hand and led her to her bedroom.\n\n\"Can we do Winnie Pooh?\" she asked, omitting a word.\n\n\"I think that could be arranged,\" Connie told her as Adam sat on the floor next to them.\n\nShe began reading, and tried not to laugh as Lexi constantly interrupted by either pointing to a character like Roo to tell her who that was or by trying to 'read' with her. Lexi had some of the book memorized, and as Connie read, she'd repeat the parts she knew.\n\n\"You are a very smart girl!\" Connie told her when she closed the book.\n\n\"My daddy says I'm a genie-us,\" Lexi told her.\n\n\"I agree. You are a genius,\" Connie told her, correctly modeling the word without correcting her. That wasn't lost on Adam who loved the way she interacted with his daughter.\n\nThe 'icing on the cake' came when Connie stood up then bent over and got the sweetest hug ever as Lexi put her little arms around her neck and hugged her.\n\nThinking life couldn't get any better, it did when Lexi said, \"G'night! I love you!\" to her.\n\nConnie blinked hard several times as she said it back to her.\n\nAdam then hugged his daughter and got the same response.\n\n\"I love you too, Lexi-Loo. You have a good sleep, okay?\"\n\n\"Okay, Daddy!\" she said as she grabbed her Winnie the Pooh stuffed animal and clutched it tight.\n\nAdam saw Connie wiping her eyes and asked if she was okay.\n\n\"I think so. That was very...emotional.\"\n\n\"She can do that to you, huh?\" Adam said with a warm smile.\n\nConnie stopped him in the hall then, when he turned toward her said, \"Adam? Thank you for sharing this with me.\"\n\nHer eyes were glassy again, and when the next tear fell, he gently wiped it away then said, \"I'm glad you enjoyed it so much.\"\n\nShe looked to make sure Marilyn wasn't looking putting her arms around his neck and kissing him.\n\nAs she pulled back, the tears were gone, and their place was a smile.\n\n\"I've enjoyed everything about this evening.\"\n\nAdam pulled her close again then said, \"Me, too. Everything,\" before kissing her again.\n\nNeither of them heard Marilyn approaching. She saw them kissing and stopped and waited, hoping not to startle Connie when she realized she was there.\n\n\"Oh. Marilyn. Hi,\" Connie said as she quickly pulled her arms down. \"I...I didn't know you were there.\"\n\nShe glanced at the older woman then quickly looked away, not sure how she'd react.\n\n\"I wasn't trying to snoop. I was just going to my bedroom to retrieve a photo album I wanted to show you. But when I saw the two of you...getting along so well...I stopped and...well, I quietly gave thanks.\"\n\nHer words touched Connie deeply, and she once again wondered what it would be like to really be a part of this loving family. This time, it was less 'wonder' and more 'hope', but it was still a very pleasant feeling.\n\nMarilyn sat between them as they paged through a thick album that chronicled her life with her late husband, Adam's birth and childhood, his time in the service, his wedding with Kristi, and baby pictures of Lexi.\n\nThe obvious missing event was losing Kristi, something that didn't need to be shown to be felt.\n\n\"This was so wonderful, Marilyn,\" Connie told her sincerely when she turned the last page. \"I fee so...connected...somehow.\"\n\nMarilyn reached over and took her hand then said, \"You are connected. And you will always be welcome here.\"\n\n\"That makes me very happy,\" Connie told her as she squeezed her hand.\n\n\"Well, I should be getting to bed,\" Marilyn said, even though it wasn't quite 9 o'clock.\n\nShe stood up and wished them both a good night before first hugging her son and then her new friend.\n\n\"Good night, Marilyn, and thank you for dinner and the lovely hospitality.\"\n\n\"It was my pleasure, honey. Please come back often, okay?\"\n\nConnie glanced at Adam who smiled and nodded.\n\n\"I will,\" she said, hoping that would be true.\n\nOnce she was gone, Adam moved next to Connie who said, \"Your mom is everything I wish mine was. Don't get me wrong. I love my mother in spite of her difficulty showing it back, but your mom is just so easy to love.\"\n\n\"I can't argue with that,\" Adam said as he put his arm around her.\n\nConnie pulled her legs up and curled up close with him.\n\n\"This has been the nicest evening I've had in many years,\" she said quietly.\n\n\"I'm glad, because this is the nicest evening I've had in...well, at least three years.\"\n\nConnie understood and put her hand on his chest.\n\n\"Each picture of your wife was so beautiful and special. I...I couldn't help but feel like I'm somehow intruding.\"\n\nAdam pulled her even closer then said, \"You're not only not intruding, you're exactly what she'd want for me. And for Lexi.\"\n\n\"Do you really think so?\" Connie asked hopefully.\n\n\"I know so. We never had a chance to say goodbye or talk about this kind of thing, but I knew her well enough to know that my happiness was very important to me. And since I lost her, I haven't been happy.\"\n\nConnie looked up into his eyes just as he said, \"Until I met you.\"\n\nThe warmth and love of the entire evening washed over as his words bathed her in a feeling of love; the kind of love she'd always wanted but never thought she'd find. In its place, work had filled the void, and until she found the thing she most wanted, it had seemed like enough. But now work was a distant second to the way Adam and his family made her feel, and all she wanted was to feel like this forever.\n\n\"I am so happy, Adam,\" she told him as more tears fell.\n\n\"Oh, good. For a second there, I thought my ugly mug scared you so badly it made you cry.\"",
        "His playfulness made her laugh and the tears stop as she gently pushed him.\n\n\"Ugly mug. You are so handsome it's hard to take my eyes off of you,\" she told him truthfully.\n\n\"Oh, so you understand how I feel when I look at you then. Nice,\" he replied.\n\n\"Ha! My 38-year old face isn't exactly like your...\"\n\nShe sat up then asked, \"Exactly how old are you?\"\n\nAdam laughed then told her.\n\nHer eyes opened wide in disbelief even though she expected a number below 30.\n\n\"Oh...my...goodness,\" Connie said as she looked at that handsome face.\n\n\"Is that a game changer for you?\" he asked, hoping she was exaggerating.\n\n\"I...you're...are you really only...26?\" she both said and asked.\n\n\"I'm pretty sure that's right. I could check with my mom if you'd...\"\n\n\"Shhh! Stop talking, okay?\" she said, her eyes back to normal size. \"Don't say another word about your age or...your mom. Please!\"\n\n\"If I agree, will you stop looking at me like that?\" he teased.\n\nConnie shook her head a bit then apologized.\n\n\"I knew you were a lot younger than me, but hearing that out loud was...wow!\"\n\n\"Wow as in 'scary' or wow as in 'lucky me'?\" he said continuing to tease her.\n\n\"For a second it was the scary thing, but, if you really don't care about my age...\"\n\n\"Nope. Not one bit,\" he told her even before she could finish speaking.\n\n\"Really? You honestly don't look at me and see...old?\" she asked, genuinely needing to know.\n\n\"Let me tell you what I do see, okay?\" Adam said as he turned toward her.\n\n\"The first thing I see is beauty. Not age. Connie, you're gorgeous. But beyond that I see kindness and caring. I see intelligence. A whole lot of intelligence. And honestly? That's the one thing that intimidates me a little about you.\"\n\nShe was smiling happily as he spoke and didn't interrupt.\n\n\"I also see someone who loves her father...and her mother...and someone who's proving that by carrying on his legacy. And the way you interacted with my...\"\n\nConnie laughed as he remembered his promise not to talk about his mother for a while.\n\n\"And my daughter, all I could think about was how wonderful it would be to have you in our lives.\"\n\nAnother tear fell as he spoke those words, then Connie found the strength to say, \"I can't think of anything that would be more wonderful than being a part of your lives.\"\n\n\"So I don't see your age. I see you. And I hope I don't scare you off, but when I see you, I see a beautiful woman I'm...falling in love with.\"\n\nMany more tears fell as she fell into his arms and said, \"I'm falling in love with you, too, Adam. And Lexi is the sweetest little girl ever.\"\n\n\"Yes, she is,\" he agreed as he held her while she buried her head in his neck.\n\n\"So...what's next?\" she asked once she regained control.\n\n\"I don't mean to rush things, but my folks have a beach house up on the Outer Banks. I was thinking maybe we could spend a weekend there soon. If you can afford to get away, that is.\"\n\n\"This order is much bigger than just me with a lot of people depending on it, but I don't see why we couldn't get away for a couple of days.\"\n\n\"Really?\" Adam asked, almost surprised by her answer.\n\n\"Yes. Really,\" she said with a smile. \"And if 'us' means you, me, and Lexi, that's just as fine as you and me alone.\"\n\n\"I think I really do love you,\" Adam said as he stared into her eyes.\n\n\"I'm so glad, because...I love you, too.\"\n\nAdam took her in his arms and kissed her softly then more passionately before they realized where they were.\n\n\"Mmmm. That was so nice,\" Connie told him.\n\n\"I wish it could continue, but as they say 'patience is a virtue', right?\"\n\n\"Normally I'd agree, but right now I'm not feeling very patient,\" she told him, a happy smile on her full lips.\n\n\"Soon, right?\" Adam said quietly as he brushed her hair back.\n\n\"Soon. Very soon,\" she agreed before they agreed it was time for her to go home.\n\nThe next week Adam spent as little time as he could tending the roses and as much time as possible at Dynex. It was as much a practical decision as it was romantic, and Connie was thrilled to have him there.\n\nIt was obvious to her employees something had changed, and at the close of business on Thursday, she called everyone together and let them know. There was nothing but support for both of them, and they were glad not to have to sneak around anymore.\n\n\"One more thing,\" Connie told them before they left. \"Bill tells me the latest remix will be ready tomorrow just after noon. So let's keep our fingers crossed that this one is it.\"\n\nThat comment drew ever more support than her relationship revelation, and rightly so. The people who worked for her genuinely cared about her, but her romantic life didn't put food on their tables.\n\nConnie spent the evening, like she had all but one evening since that first dinner with the Lanes, at Adam's house. They sat around and played board games starting with Candy Land before Lexi had to go to bed. Connie helped her make her moves, but the little girl caught on pretty quickly for someone so young.\n\n\"I'm gonna be three years old in two more years,\" she proudly told Connie.\n\n\"You mean two more months?\" her father said with a smile.\n\n\"Uh-huh. In two more months!\" Lexi said as though that's what she'd said the first time.\n\n\"Oh, my! You'll be so big then, huh?\" Connie said as she pulled Lexi up onto her lap.\n\n\"I'm already big. But I'll be bigger when I'm three!\" she announced.\n\n\"Yes you will!\" Connie said as she put her arms around her and hugged her and kissed her cute little cheeks.\n\n\"That tickles!\" Lexi said as she giggled when Connie made 'bubbles' in her neck.\n\nAdam loved watching her, and Marilyn was taking it all in, too. She went to bed early again to give her son and his beautiful girlfriend time alone, but the next morning she mentioned it to Adam.\n\n\"You're in love with her, aren't you?\" she asked her son with a smile.\n\n\"I am,\" Adam said immediately. \"And that reminds me. We were thinking about spending the weekend at the Outer Banks.\"\n\n\"You know where the key is,\" his mother said with a happy smile. \n\n\"So...you're okay with that?\" he asked, not sure why he was surprised.\n\n\"In case you couldn't tell, I love her, too.\"\n\n\"Yeah, she's pretty great, isn't she?\"\n\n\"I think so, and it's obvious Lexi loves her.\"\n\nAdam walked over to his mother and extended his arms.\n\n\"You know I love you, too, right, Mom?\"\n\n\"Of course I do. I've never doubted it.\"\n\n\"So today's our next test batch,\" he told her.\n\n\"I have been so worried about that. All those jobs and the company. And yours, too.\"\n\n\"Once you meet the people who are depending on you it becomes very personal,\" Adam told her. \"You can't look at it as 'no big deal' after that.\"\n\n\"Well, I'm just grateful you have this...gift.\"\n\n\"I just hope my 'gift' is good enough not to get 'close but not close enough'.\"\n\n\"Have faith, Adam,\" she said with as much encouragement as she could.\n\nHe gave her another hug then got ready to leave after saying goodbye to his other favorite girl.\n\n\"So...are you ready?\" Connie asked after he kissed her hello in her office.\n\n\"I am,\" he told her.\n\nBill repeated the same ritual he'd gone through several times, and this time Adam sensed something was different. After doing what he always did, he asked Bill to put the swatch away then stepped out and asked Connie for her vial.\n\n\"Is it...did it...\"\n\n\"I'll let you know,\" he said, as he carefully carried inside the room which was pulling out air at a constant rate.\n\nSatisfied the room was clean, he opened the vial again and took a first sniff and then another. He moved it away then realized his hand was shaking.\n\n\"Steady,\" he told himself as he brought it up for another check.\n\nHe took two slow, deep breaths then screwed the cap back on and opened the door.\n\n\"Well?\" she asked as he gently draped it around her neck.\n\n\"That's it,\" he told her. \n\nConnie's hands began trembling.\n\n\"Are you sure?\" she asked, knowing that he was.\n\n\"Yes. As sure as I can be.\"\n\n\"Oh, my gosh. We need to make a sample batch and send it off for approval,\" she said.\n\n\"I'm on it,\" Bill told her, knowing the ball was now in his court.\n\nAs he walked away, Connie threw her arms around Adam's neck and told him she loved him.\n\n\"Enough to spend the weekend with me at the Outer Banks?\"\n\n\"Yes. Definitely that much,\" she told him before hugging him again. \"Are we brining Lexi?\"\n\n\"We can, but I think this first time I'd like to spend a weekend alone with my beautiful girlfriend.\"\n\n\"Hmmm. Well, I would love to spend some time alone with my handsome boyfriend,\" she told him.\n\n\"We'll have plenty time to spend with our little girl after this,\" Adam told her as he looked deeply into her ours that immediately welled up with tears.\n\n\"Our little girl?\" she asked, barely able to speak.\n\n\"That's how I feel,\" he told her as he gently wiped away the first tear to fall.\n\n\"I...I can't think of anything I'd like more,\" she told him.\n\n\"I'll pick you up at 6 tonight if that's okay?\"\n\n\"Yes. Now that we have the formula, there's nothing more I can do. Bill will get it ready for us and we'll send it off to see if it meets the buyer's specifications.\"\n\n\"It's a six-hour drive so that'll put is in around midnight,\" he told her.\n\n\"Midnight at the Oasis sounds perfect,\" Connie replied as she realized it was possible to be even happier than she'd recently been.\n\nIt was 12:30am when they arrived, and although Adam hadn't been there in many years, nothing had changed. He opened the door, turned on the lights, and took a look around.\n\n\"What do you think?\" he asked Connie who was holding his hand.\n\n\"I think it's perfect. I love the rustic feel.\"\n\nThere was one large living area with two small bedrooms. The larger of the two was the 'master' and had its own small bathroom which was a shower, a toilet, and a sink. \n\nConnie sat down on the bed that was covered with a quilt and said, \"This is perfect, too.\"\n\nAdam walked over, took her hands, and helped her stand back up.\n\n\"I think...you're perfect,\" he told her before kissing her softly.\n\n\"Mmmm. That was very nice,\" she said with a smile. \"And this time we don't have to stop with a kiss.\"\n\nHe went to kiss her again when she laughed then said, \"But I do have to pee first.\"\n\nAdam chuckled then told her he'd turn down the covers.\n\n\"Close your eyes,\" he heard Connie say a couple of minutes later. \n\nHe heard the water running and knew she'd brushed her teeth, but didn't know she'd grabbed a small bag on her way in.\n\nAdam stood up, closed his eyes, then turned around. He heard her bare feet walk across the wood floor and turn off the bedroom light. She left the one on in the bathroom with the door open just enough to let her lover see her then told him he could look.\n\nConnie stood before him with her hands together at her hips in front of her with a hopeful smile on her face as she said, \"Is this okay?\"\n\nShe was wearing a white, see-through top with long sleeves that hugged her figure while leaving very little to the imagination. She also wore a pair of white, lace panties, and Adam was so surprised he could barely speak.\n\n\"Holy...wow!\" he said as he looked at her.\n\n\"So...you like it okay?\" she asked as she moved a little closer.\n\n\"Oh, yeah. More than just okay,\" he told her as he put his arms around her and kissed her.\n\n\"I've been so worried about what you'd think. I was almost dreading coming here because of that, but you've told me enough times you think I'm beautiful that I felt like I could risk...exposing myself.\"\n\n\"Honey?\" he said, calling her that for the first time.\n\n\"Yes?\" she asked, with a big smile on her pretty face.\n\n\"Nothing could make me not love you. Nothing. Okay?\"\n\n\"K,\" she said sweetly as she began unbuttoning his shirt.\n\nShe didn't stop with the last button on the shirt, but kept unbuttoning his Levis while he pulled the shirt off then helped with the jeans and underwear.\n\nConnie gently pushed him back on the bed then knelt between his knees.\n\n\"It's not polite to point,\" she teased as his manhood grew right in front of her.\n\n\"It has a mind of its own,\" he informed her. \"And it obviously likes you as much as I do.\"\n\n\"Ah. Oka. Well, I like him just as much,\" she said with a happy smile before taking him into her warm, wet mouth.\n\nConnie brought him to the edge several times before he pulled her up on the bed and returned the favor.\n\nIt had been three long years, but Adam knew when a woman couldn't take anymore, as he climbed on top of her and asked, \"Are you ready?\"\n\nShe smiled up at him then said, \"Unlike some women, that's a question you'll never have to ask me again.\"\n\n\"Oh, my. So are you saying there's someone else living inside my sweet scientist?\"\n\n\"Uh-huh. And she's a very, very bad girl,\" Connie told him, trying not to laugh.\n\n\"Oh. I see. I uh, I think I'm in love with her, too.\"\n\n\"Would you stop talking and...fuck me?\" she said, the perfect time for one of those rare 'bad' words, as she reached for his swollen member and lined it up with her own body.\n\nAdam entered her effortlessly, and for the next two hours they made love three different times. They also showered together, but even his 26-year old body couldn't pull off a fourth performance, and that was fine, as Connie loved just being close to him as they continued exploring one another's bodies under the warm water.\n\nThey spent about half of their time on the beach not caring about the awful weather. They walked and talked, held hands, kissed, and sat and watched the waves crash. When they tired of that, they went back to the cabin to eat and make love and then talked some more.\n\nBy the time they drove home Sunday afternoon, it seemed to both of them like they'd known each other forever. And although neither of them mentioned it, they both wanted to spend forever...together.\n\nThe next few days were tense as they FedEx'd the package with the tiny vial in it to Paris where the best 'noses' in the business would make their decision.\n\nIt was Thursday morning when the phone rang in Connie's office. She looked at Adam then at the clock and knew it was 4pm in Paris.\n\n\"This is Connie Martin speaking,\" she said as she looked at Adam who was sitting on the couch in front of her desk.\n\n\"Oui, this is Marcelle Dujois. From Paree?\"\n\nConnie was too nervous to say there was no need to explain.\n\n\"Yes, yes. Oui, oui, monsieur,\" she said.\n\n\"So. I have zee very good news,\" he began.\n\nConnie's eyes opened so wide Adam feared they might explode.\n\n\"Yes. Please, go ahead,\" she told him then listened as he said the sample was perfect.\n\n\"So...you want us to fill the entire order?\" she asked, barely able to contain herself.\n\n\"Yez. Of course,\" he said. \"It is zee most bee-yoo-tee-ful scent in zee world!\"\n\nConnie knew that wasn't true, but she was so happy it didn't matter.\n\n\"Thank you, thank you! Merci beaucoup!\" she said. \"We'll get started immediately!\"\n\nShe hung up the phone and flew around the desk, and just as Adam stood up she jumped into his arms.\n\n\"You did it! They loved it!\" she said as she held him.\n\nAdam pulled back then said, \"No. WE did it. You and me. Us.\"\n\n\"Yes. We did it. Us,\" Connie said, on the verge of crying again.\n\nSuddenly she said, \"Oh, wait! We have to get everyone together. Right now!\"\n\nAdam let her down and enjoyed watching her go crazy at work for the first time. As she left the room he called his mom and let her know this was the time.\n\n\"Bill! Get everyone together right now!\" she called out.\n\nAs people gathered around, Connie was beaming.\n\n\"I just hung up with Paris,\" she said as eyes opened wide.\n\nShe looked around then said loudly, \"And...they loved it!\"\n\nEvery single person hollered and hugged the person next to them as the significance of her words sank in.\n\nThey all came over to hug her and shake Luke's hand and congratulate them both.\n\n\"Okay, everyone back to work! Chop, chop!\" Connie said happily.\n\n\"Hold on!\" Adam called out as people began turning away. They all stopped, turned back around, and waited.\n\nAdam cleared his throat then said, \"I want to thank everyone personally. I'm not an employee or anything else, but I've grown to care about each and every one of you.\"\n\n\"Dittoes!\" someone called out. That was followed by, \"Same here!\" and other such things.\n\nJust then, Marilyn came in wearing a temporary badge and holding Lexi in her arms. They walked over next to Adam who took his daughter then continued speaking again.\n\n\"It's no secret that Connie and I have grown very close since we first met. And it's probably no secret that I love her very much.\"\n\nSensing something big was happening, Connie's already-excited body began to shake.\n\n\"I honestly wondered if I'd ever be able to love again after my wife passed away, but I knew I could because of this little girl and...\"\n\nHe put his arm around his mom and said, \"And this beautiful woman.\"\n\nHe looked at Connie then said, \"But that's a different kind of love than I had with my late wife, and, well, I now have that again with this amazing, beautiful woman.\"\n\nHe handed Lexi back to his mom, who in turn, handed something to him before he stepped over in front of Connie.\n\nShe saw the little box change hands and shrieked. As he knelt in front of her, every woman in the room was wiping away tears as they smiled.\n\n\"Connie? I don't need to repeat what I just said about fearing I'd never find love again because that's all behind me. I found it because you showed it to me. You made me realize I could love again, and I've fallen in love with you so deeply it sometimes scares me, and I never want to lose that.\"\n\nHe opened the box then removed the ring and said, \"Connie Martin? Will you marry me?\"\n\nConnie wasn't tearing up. She was crying. As tears streamed down her face, she held out her left hand and choked out the word, \"Yes!\" as he slipped the diamond on her finger.\n\nAdam stood up then kissed her as the room broke into applause and cheers. He turned around and stood beside his fianc\u00e9 then waited for everyone to file back by and congratulate them.\n\nOnce everyone else was gone, Marilyn came over and hugged her future daughter-in-law and said, \"Welcome to the family, honey.\"\n\n\"I've felt like I was part of it for sometime now, but thank you...Mom,\" she said as the tears continued to fall.\n\n\"Speaking of Mom,\" Adam said as he took Lexi back.\n\n\"Can you tell Mommy you love her?\" he said to Lexi as he handed her to Connie.\n\n\"I love you, Mommy,\" the little girl said as she put her arms around Connie's neck as she fought not to cry.\n\n\"I love you, too, sweetie. With all my heart!\"\n\nThe days flew by as production went into full swing. The order was filled and delivered ahead of schedule, and the amount of money that was deposited into the Dynex account brought them back to solvency and then some.\n\nConnie had no interest in running the business, and neither did her mother. But someone with an amazing 'nose' did, and he and his the woman he married bought out her mother's share as they found someone to take over the business of growing roses.\n\nConnie gave notice at her former job, and took a position on the faculty at the University of North Carolina, Charlotte around the time she and her handsome young husband bought a home of their own in the suburbs where they lived and loved.\n\nConnie Lane was surprised one more time when she learned yet again there was still room for more happiness, when, one month shy of her 40th birthday, she gave birth to a beautiful baby boy they named David.\n\nAs Connie and her new family, and even her own mother whose stony heart had been melted by the arrival of her grandson, gathered around her hospital bed to share her joy as she held her baby, she reflected on the events that had made that moment possible. \n\nFor some reason, the words to an old song came to mind; words that seemed to sum up what was a swirl of thoughts in her mind:",
        "\"To everything there is a season, and a time to every purpose, under heaven. A time to be born, a time to die. A time to plant, a time to reap...a time to laugh, a time to weep.\"\n\nShe and her husband had both mourned losses; losses which had set in a motion a series of events that led them to each other and to this most most joyous of events. But were it not for her husband's incredible sense of smell, it seemed unlikely any of this would have happened. \n\nAnd yet it had, and Connie laughed and smiled as all them took turns holding the new life that had been the result of it all."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/sense-of-smell"
}