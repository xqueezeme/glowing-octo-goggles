{
    "title": "Up, Down and Away!",
    "pages": [
        "<center> This is my entry for the National Nude Day contest.\n\nI hope you enjoy it!\n\n+</center> \n\nNo trees. That was critical. \n\nWell, at least, no big ones. \n\nOK, nothing big enough to make me have to climb eight stories of spikey branches in my altogether. That was for certain. \n\nAnd not blazing hot or much below room temperature for most of the year. \n\nAnd not many people there. OK, maybe some, just to make it sporting. \n\nGood scenery would be nice during the runs. Quiet. Open. \n\nGrass - grass would be nice, too.\n\nThat's a lot to ask for, I know. It took me a long time to find it. Where, you ask? Nope, find your own. Suffice it to say that the Bureau of Land Management has like megacres of prime real estate under its thumb. Once you know your way around the database, it's amazing what you can uncover. \n\nDoing the necessary cross-checking into weather records, aerial photographs, topographical maps and so forth -- well, it took time.\n\nBut, hey, I found the place I needed. \n\nBy some miracle, it wasn't even on the far side of the country. Open, surrounded by mountains in the far, far distance, it had a few major piles of rocks and a lot of streams and creeks. It was, I thought, ideal for my purpose.\n\n.\n\nBack up. \n\nI never was much of a girly girl. My tomboy nature was Momma's despair at times.\n\nHeaven knows that I'm pretty enough. I like boys and I've had boyfriends. I'm no blushing virgin - I certainly enjoy sex. Let's just say that, at this particular point of my life, I preferred my own company to trying to cope with half-drunk louts in bars.\n\nThere'd been too many of those.\n\nAnd too many limp-wristed mama's boys. Since when had 'masculine' become something to be ashamed of? If I wanted feminine, I'd have been walking the other side of the street.\n\nAnd, while we're at it, let's get one more thing straight. I am darned well not going to apologize for being an engineer. Lady engineers are not all nerds, you know.\n\nOK, that's not quite true, I admit. All engineers are nerds, almost by definition. But, looking in the mirror, this was one lass who didn't look it. Not until she put her white helmet on, anyway.\n\n.\n\nTo cut to the chase, I'd been doing the public nudity thing for a couple of years. No, not flashing. 'Audacious unobserved bareness', maybe? That would be a better way to put it. I'd been on a couple of Nude Day bicycle rides and the idea of free-hiking was something that turned me on. But generally, it was a private gig.\n\nI had, on a couple of occasions, stripped off and left my clothes under a bush in a public park before timidly walking around in the darkness for a while. The first time, it was just a few minutes before I freaked out and scrambled for my knickers. I got bolder with more experience, but it was always at night when nobody could possibly see and I never strayed too far from my clothes.\n\nI'd gotten really ambitious once and locked my clothes in my car six blocks away from my apartment in the wee hours of the morning, leaving me with just my house key and the pressing need to get home without being caught. I made it, just barely ahead of a slow-moving police car. I don't think they saw me; they certainly didn't speed up to catch me. \n\nI'd been scared out of my mind until the door lock clicked solidly behind me, then I racked up about six orgasms. \n\nIt was the excitement, the daring that mattered to me, I suppose. \n\nIt had all been fun, some more so than others. But it was also a bit dangerous -- more than just the danger of getting caught. Even in my peaceful, dinky town, parks and late-night streets were frequented by both cops and criminals, neither of which would be good company for my, um... experiments.\n\nAnd I really didn't want to upset anybody. Or get my naked tush splashed on the social media for Momma's bitchy friends to see. Or -- shudder - my \u00fcber-straight department manager at work. The thought of what that Monday morning would be like had kept me awake once or twice after some especially risky episode. Not that it ever stopped me, but I knew that there had to be a better way. And I was an engineer -- a problem-solver, right?\n\nSure.\n\n.\n\nThen one day I'd seen a weather balloon being launched and had been inspired. As I watched it soar upwards, my libido had followed. With that in mind, I started my search for the right wilderness spot. \n\nIn between looking for a suitable location, I also starting searching for the technical stuff. The Net gave me a source for balloons - biodegradable ones at that. More research found me a source for cheap, lightweight time-delay relays. And battery-powered electromagnets, lightweight but strong enough to hold a payload until the relay cut the power.\n\nIt didn't take an engineering degree to figure out. Any high school dumbass with a soldering iron could have done it. But this was me.\n\nWell, me and my supercharged, just-slightly-bent sex drive. \n\nAlong the way, I discovered that a couple of federal agencies had regulations about balloons, but I figured I could stay under their radar if I kept mine under six feet in diameter. With helium, that would give me just about seven pounds of lift to cover the weight of the balloon, the parachute and the release mechanism - as well as my clothes. (See where this is going?) Actually, the regulations said I wasn't allowed to drop anything from a high-altitude balloon, but I figured I could work around that because I wasn't intending to send anything very high at all.\n\nThen there was the regulation giving a hard limit of six pounds max for the payload. That limit I figured I could tap-dance around if I kept close to it. \n\nThe bottom line was, I decided, that what I was planning wasn't too illegal, nothing too likely to get Momma's little girl into trouble - provided that I built it right and kept everything on the QT.\n\nBut six pounds... Weighing an outfit at home, I decided that wasn't very much, considering that it had to cover clothes, a parachute and everything else.\n\nSo, unless somebody official-looking was likely to be around, both 'six feet' and 'six pounds' became moving targets, so to speak.\n\nAnd it turned out that helium wasn't cheap, either. Once I got some prices from suppliers, I was surprised to discover that it would cost me about $100 per launch. OK, in one sense that was a lot. On the other hand, what would getting ready for a night on the town cost me, with a visit to the stylist, maybe a new dress and maybe, eventually, really crappy sex? I figured $100 was no worse than that. In any case, this was something catering to my fantasies, not somebody else's. It was worth trying, at least once. \n\nGetting more and more excited, I experimented in my garage as the bits and pieces arrived in the mail.\n\nAn electronic time-delay release would control a one-inch electromagnet holding on to a simple iron washer fastened to the balloon. I was confident of getting a virtually certain release of my package, with timing accurate to a tenth of a second. \n\nTogether, the wiggly-amps parts, including the battery, would all weigh less than half a pound and cost maybe $50 on top of what the helium would set me back. If things went as planned, I would be able to reuse just about everything but the balloon itself. If not, well, that would be the cost of doing business, so to speak.\n\nAnd I could make my own parachute. The commercially-available ones used Kevlar cord and ripstop nylon. I did some number-crunching and figured a trimmed-down industrial-strength orange garbage bag and some 20 lb fishing line would do just fine. After all, if it failed, there would only be non-breakable stuff falling, right?\n\nI started doing dummy runs in my garage.\n\nI covered the window first, of course. I wanted to make a point of being naked when working on the project. It was the principle of the thing, right? But years of household nudity had me very aware of potential neighbourly sensibilities. Oh, and very real neighbourly snoopiness, too - what is it with some people?\n\nLaying out the pieces, I assembled them and hung them from the beams. Everything worked per spec in my garage, everything but inflating the balloon and I couldn't try that inside. I was ready for real-world trials.\n\nI headed out to the area and did a dry run with a dummy load. It worked. The balloon soared away with amazing strength and speed as it drifted to the east. I watched it go, my heart beating.\n\nTwo minutes later by my watch, precisely on time, I saw the balloon jerk and shoot steeply upwards as the payload cut loose. \n\nThe simple home-made parachute opened very nicely, thank you, and I had no trouble following the descent of the bright orange canopy. It floated down out of sight several hundred yards away.\n\nThe winds were light and while the heaven-bound balloon was soon out of sight, the parachute and its attached bundle hadn't gone very far; it only took me maybe 15 minutes to get to where it had landed.\n\nLooking around, triumphant, as horny as I'd ever been, I thought of rubbing one off right there. In the end, I decided not to ruin the opportunity for a perfect first time -- the real thing, without clothes. I waited until I'd got off Bureau land before I pulled over.\n\nAs a bonus - time spent in research never being wasted - I'd also found a good camping spot. \n\nI was ready.\n\n.\n\nThe weekend after that was solid rain and I was frustrated beyond belief. I decided to keep my fingers off myself and left Big Bob, my battery-operated boyfriend, sulking and neglected in my drawer for the weekend. \n\nBut it rained the weekend after that, too, and I almost lost my mind.\n\nThe forecast for the third weekend looked perfect -- sunny, reasonable temperatures. I had the car loaded on Thursday night and was able to leave right after work. It was a long drive, but I was in a hastily-pitched camp before 10. \n\nI didn't sleep well, to be honest. Opening night nerves, I guess.\n\nI'd checked the Bureau website the night before and was fairly certain I would be the only one out here, but after having had breakfast and stowing my camping gear, I got on top of the Jeep with a pair of binoculars to make sure. There was nobody in sight, leaving me relieved, but also just a little disappointed. I'd been wondering what I would do...\n\nThe sun was well up and the nighttime coolness was fading rapidly. It would be a hot day.\n\nI'd decided not to move the launch site away from my camp. I was as far out in the middle of nowhere as you could get and there was no reason to carry the gear any further than necessary.\n\nI unloaded the big Rubbermaid tub and laid it all out on the ground: the empty balloon, a hose to connect it to the helium tank in the Jeep, the parachute, the electronic release rig, its battery and finally a light bag to hold my clothes. Some paracord, a knife and a handheld anemometer completed the array.\n\nI looked in my side mirror for reassurance and smiled nervously at my twin. I actually took a few minutes to put on some light makeup and brush my hair. I was going to be ready  - the spirit of adventure, right?\n\nI looked around again. The winding road into the area was visible for miles; absent photographic satellites, I was as alone as one girl could get.\n\nThere was no time like the present. \n\nI stripped off my clothes and, this being no time for a sunburn, slathered myself with sunblock. \n\nI fastened the time release and parachute below the balloon and set the timer for five minutes. \n\nThe always-strange-always-welcome feeling of the morning breeze on my bare skin was both reassuring and exciting.\n\nI folded my clothes and tucked them all into the bag, together with a valet key and a 'reward package' for myself when I found it. I carefully hooked the bag under the parachute, double-checking the knots. All that was left for me to wear were sunglasses, a ball cap, shoes and socks. (Sure, barefoot looks great in videos, but there were sharp rocks, critters and cacti out there. Crippled isn't sexy.)\n\nI was left staring at the last item -- my keys. Those I put down carefully on the hood of the Jeep.\n\nReturning to the uninflated balloon and the payload assembly, I cut a length of cord and fastened them to the spare tire mount on my Jeep. Giving both ends a tug to ensure they'd hold, I checked the weather conditions. \n\nThe winds were calm, about 5 knots. Fair enough. The sky was clear and I was happy about that.\n\nTaking a deep breath, I pulled the end of the helium hose over to the balloon and hooked it up. \n\nIt took a surprising amount of time to fill the thing. The limp bag on the ground slowly started to take form, wrinkles snaking across the fabric and the center slowly trying to lift itself. In time, it hauled itself off the ground and, more quickly now, started tugging at the cord. \n\nAnother minute had the whole assembly fighting for release from my Jeep, the balloon dodging back and forth in the light wind. Below it hung the parachute, timers and, finally, the all-important bag with my clothes. \n\nI made one final check of the access road -- clear. \n\nI put my keys in the car ash tray before locking the doors. If things went seriously south, I could break a window with a rock to get in. The prospective cost of that repair would keep me from giving up too soon - or so went the plan. \n\nA bit of a breeze had come up, enough to make the cords shudder a little. On reflection, I decided the sound was exciting. I liked it. I was shuddering a little, too.\n\nThe moment of truth... \n\nRefusing to acknowledge my nervousness by again checking the access road, I gave the car door handle a tug to verify it was locked.\n\nI slid the switch to start the release timer and stood back from the now-quivering cord. Picking up the knife, I took a deep breath and gave the straining rope a swift slash. \n\nThe balloon took off like a homesick angel. I watched it carry away my clothes and car key with it, leaving me stark-naked on the ground below.\n\nWatching it soar away, I felt liberated, I felt abandoned. I felt amazingly sexy, I felt totally vulnerable. I'm still not sure what all I felt, to be honest, but it was everything I had dreamed of. \n\nIt was perfect.\n\nI was super turned-on. My abdomen was tight. My nipples were hard as the pebbles under my feet and, checking, I found a trickle of ladydew on my thighs. \n\nI had never felt so free. \n\nSkyclad indeed! \n\nI started following the dot in the sky, jogging slowly on the open ground. My boobs bounced as I ran, not hard enough to be uncomfortable, but hard enough to remind me why I was here. I even found the swaying of my ponytail behind me to be a turn-on. The warm breeze on my bare skin was as gentle a caress as that of any possible lover.\n\nGetting more and more excited, I whooped in my exultation. I felt as free as the balloon. It wasn't just my clothes soaring away from me up there. With them were fleeing my inhibitions, society's restrictions and any shame. It was such a load falling off me that I felt I could fly!\n\nI hooted as I ran, jumped and twisted in mid-air in my happiness.\n\nThis was how I was meant to be!\n\nI suddenly realized that I had forgot to trip the stopwatch on my wrist when I cut the balloon free. At least I hadn't forgotten to trip the timers on the electromagnets.  Wouldn't that have been a pain!  I realized that I needed to build in a fail-safe process for that the next time.\n\nAfter a while chasing the still-rising sphere, I started getting a little worried. Hadn't it been more than five minutes already? Had something gone wrong? What if...\n\nWithout fanfare, the balloon lurched upward as its load cut away; the orange hemisphere of the parachute blossomed in the morning air. \n\nI shrieked again and dashed to where I thought it would land. I watched it all the way down. \n\nWith no more trouble than that, I found it. The parachute was draped nicely over a bush and the bundle beside it on a patch of soft leaves.\n\nIt had worked! \n\nI suddenly realized that I hadn't been checking for other people. I took a frantic look around and was relieved by the absence of rangers, boy scouts or Marines on survival exercises. Another lesson learned...\n\nI pulled open the bundle. Everything was safe -- and Little Bob was waiting for our date. Big Bob would have been too heavy, but this little guy was no bigger than a finger. And, let's face it, what girl doesn't get turned on by knowing she has a date with an aviator?\n\nI looked around. There was a patch of grass in a nearby patch of shade which had a good view of the access road. I made an improvised pillow of my clothes and lay down.\n\nThis was like a dream come true! My primo sexual fantasy had just played out precisely as I had dreamed it. My nipples were like bullets and I was as wet as I had ever been. Little Bob was, in other words, not going to have a hard time getting me off.\n\nSometimes I might close my eyes when Big Bob and I were alone, but today was special; I wanted to be able to take in the scenery, the stage on which my play had been performed. I deliberately kept my eyes open, watching the clouds drift by, the birds overhead, the rolling countryside which had proved such a wonderful stage for this play.\n\nI relaxed my body as much as I could, allowing it to adjust to the soft grass. I ran a hand slowly down from my neck to my stomach, lingering briefly over one breast, then the other.\n\nBending my legs, both hands ran over the smooth skin of my thighs, skimmed across the outside of my bum cheeks and then slid up to my stomach again. I deliberately dodged the one obvious spot screaming for attention. \n\nMoving up from my tummy, my hands cupped my boobs, pulled on my nipples. Such was my excitement that I found myself already close to cumming, just from that. I slowed down, wanting to drag it out, especially on this exceptional morning.\n\nBut I wouldn't allow myself to stop entirely. One hand gently played with one nipple after the other. The other hand slid down to my pussy. With one finger, I stroked slowly up the crease between labia slick with my juices.\n\nWetting both forefingers, I brought them up to lube my nipples and spent an endless, hours-long few minutes slowly stimulating them -- rubbing, twisting, pulling. \n\nI began to switch hands, with one middle finger circling and toying my clitoris and the other keeping my breasts amused. \n\nI began to pant and moan in my arousal.  Damn! This is precisely what I'd been dreaming of all this time!  I so wanted -- needed - this!\n\nI slid a long finger inside my pussy, drew it across my G-spot, out and across my clit. And again. And again.\n\nGod, but I was so turned on, so ready!\n\nI made myself relax, stopped all stimulation but a very slow circling of my clit. I lay back and watched the scenery, allowing myself all day for this. There was no hurry and, as the saying goes, getting there was definitely going to be half the fun.\n\nPutting my almost-orgasm on hold, I fumbled for Little Bob. Nothing sophisticated, he was just a rigid plastic cylinder with a variable speed control. Holding him in my right hand, I gave his tip a little kiss and smiled at the imagery.\n\nI turned his control to half-way, felt the vibration start. I ran his tip lightly up and down my torso, between my breasts, over one inner thigh and then the other, up across my mound and back to between my boobs.\n\nI held him first against one nipple, then the other.\n\nMy arousal boomed back up.\n\nReaching down, I pressed his tip against my clit and felt my back arch in response. I could hear myself moaning in pleasure.\n\nI slid the tip just inside my opening, moving it in and out. Waves of pleasure swept over me. \n\nContinuing Little Bob's seduction of my pussy with my right hand, I brought my left hand back to squeeze and play with my boobs.",
        "Periodically, I moved him out of my slit and held him directly on my clit. I couldn't do that for very long as it pushed me almost to orgasm and I still wanted to prolong this.\n\nReturning the vibrator to inside me, I began to twist it around in a spiral, all the time working my clit with a finger.\n\nI felt my orgasm build, demanding, compelling. I gave one hard push on my button and screamed in joy as a tide of joy swept across my body.\n\nIt faded, just a little, as I lay there panting. I took a moment to turn Little Bob up to high speed before returning to my play.\n\nI ran him over one nipple, then the other, first just brushing lightly against my little nuggets, then using a thumb to hold Bob firm against me. While I did that, I returned to stroking my G-spot with a finger and, boom, another major orgasm hit me. \n\nIt was like I was a spectator as the filming of some porn video. It was like I could just stand there and watch my torso as it bounced up and down off the grass between my head and my feet. I could hear my shouts, my screams and my whimpers as ultimate pleasure ricocheted within me from scalp to toes.\n\nI wasn't going to let this end. I didn't care how loud I was. I didn't care about anything, provided this ecstasy could continue.\n\nAs this one ebbed just a little, I took Bob and slid him inside me, up against my G-spot. I found that I could hold him there -- hard -- while still being able to work my clit with my thumb. The other hand began twisting a nipple -- vigorously this time.\n\nAnd that did it -- orgasm number three. While not as spectacular as the earlier ones, it was deeper, more rounded, fuller. And if this one was silent, it was only because I no longer had any breath left to cry out.\n\nI was utterly drained, so amazingly satisfied. I pulled Bob out of me, turned him off and gave him another kiss. No flesh-and-blood man had ever been able to please me as much as this simple battery-operated boyfriend. No man had ever understood me so well, had ever played along with my fantasy to this degree.\n\nI felt like I should frame Little Bob when I got home.\n\nExhausted, I lay there for it must have been an hour. Sometimes I dozed, sometimes I just watched the clouds or the wind in the grass. It was complete serenity. I was completely content. Not only had I just had some amazing orgasms, but the entire chase-the-clothes plan had worked perfectly.\n\nAnd, yeah, there was some professional satisfaction at having had my design work well, but far more important were the emotions I'd had while watching all my 'civilized' shoot away under the rising balloon, leaving me naked and entirely dependent on catching up with it, knowing that I was until then totally exposed to anybody who had bothered to come by. \n\nIt was an entirely amazing feeling and I knew, just knew, that it would happen again. \n\nLike the next weekend.\n\nEventually, gathering up my clothes and the 'deployment assembly' (can't stop being an engineer, right?) I decided not to dress heading back. This type of freedom was too rare to miss.\n\nMaking my way back to the Jeep, it occurred to me that there might be another problem. If I got focussed enough on following the balloon, I might lose track of where I was -- and where the vehicle was. That could be a real issue, for there was nobody else in a hundred miles.\n\nOK, post-test review point -- get a GPS watch, something small and handy, capable of guiding me back to my car in a pinch.\n\nA second point went through my mind as I walked -- helium was expensive. I was prepared to swallow the cost, given the (yippee!) results, but I knew hydrogen was cheaper. How much cheaper, I would have to check. It would also provide marginally better lift and the idea of a bigger payload was tempting, but then I remembered those federal laws limiting the weight of the package. Meh -- it would still be cheaper. The only downside was the extreme flammability of hydrogen. I would have to be supersupercareful if I didn't want to restage the Hindenburg disaster with a cast of one girl engineer / charred idiot.\n\nI was back at the Jeep before noon. It was hot, very hot and I was grateful for the water I'd left there.\n\nSo, another point -- definitely get a canteen or something.\n\nMy only regret was that I hadn't bought a second balloon.\n\n.\n\nFor the next while, I spent maybe every other weekend chasing my clothes across the open land. It was the best time I'd ever known, let me tell you.\n\nI'd got the watch, bought a canteen and sling and rigged an automatic cutaway switch as a backup for the package release timers. I'd decided that hydrogen was not going to happen. Yeah, it was about half the price of helium but I had serious concerns about explosions, especially with me in my altogether. \n\nI'd been expanding the experience however -- generally setting the timers to take longer before the releases cut in. Some of the other options -- launching at night, for instance -- more-or-less amounted to not having a clue where my clothes would be and having to hunt for them come dawn. That sort of concept might be fun in a safe, urban escape room with help at hand. In the middle of absolutely deserted wilderness, risks to life and limb were more substantial. \n\nI kept thinking about it, though. A radio tracker, maybe?\n\nIt didn't matter and I didn't care. I was free as a bird -- bare as one, too -- for longer and longer, forcibly naked and unable to get dressed until I chased down the parachute. \n\nI'd never been so happy. I lived from weekend to weekend. Even my office friends noticed the difference. Several of them asked me my secret. As if...\n\nThen one day the wind took a sudden shift and dropped the parachute on top of a huge, house-sized boulder all by itself in the middle of the rangeland. \n\nI knew where it was. I could even from time to time see the parachute fluttering on top. I just couldn't get to it.\n\nRemember I said 'no trees'? Rocks - same-same. I hadn't thought that one through.\n\nI sat in the shade of the damned rock for an hour, periodically getting up and walking around it. I could actually see the Jeep in the distance.\n\nOn one walk around it, I noticed a dust cloud far off on the access road, one obviously raised by an approaching vehicle of some sort.\n\nOh, poop! I really didn't want to get caught like this.\n\nI thought about running back to the Jeep in time to smash a window and get access to the clothes inside. I still didn't want to foot the repair bill. And I wasn't entirely sure I could make it back there in time. \n\nIn desperation, I circled the rock again, this time noticing a couple of barely-perceptible fingerholds and one decent crack the width of a finger. Fear lent skill to hands unaccustomed to rock climbing and I shinnied up to the top like a squirrel being chased by a fox.\n\nI lay there panting in the middle of the rock top, already hot in the mid-morning sun. It was flat and, like I said, quite large. I rolled over, feeling the rough surface on my skin, and looked for the incoming vehicle. I was just in time to see it pull up by my Jeep in the distance.\n\nIt was a long way off, but it looked to be a white crew cab -- quite possibly a Bureau vehicle. I could see it pause by my car before moving on, away from me. \n\nI found myself both a bit scared and a bit turned on by the incident. The risk of losing my gear had of course been included in the plan -- and of course was one reason it was so exciting. That said, it was a little less thrilling when it was actually happening.\n\nExciting, yes. Thrilling? No so much.\n\nI was still panting a bit as I lay there, but soon got my breath back. Looking around, it struck me that I had a magnificent view from on top of the rock. The trail of dust from the white truck was heading off to the North. Barring that disappearing presence, it was absolutely clear that I was the only human being for as far as my eyes could see. \n\nThe sun was shining brightly and I could feel the perspiration beading up on my bare skin. It was going to be a scorcher, but I didn't care. I had water and I had sunblock.\n\nAnd Little Bob. \n\nI pulled open the cloth bag, trying not to tear the parachute as I did so. Bob emerged as I unrolled my clothes.\n\nLying back, I stroked my pussy slowly with a fingertip. Slowly, gently, that's what this girl needed. With my other hand, I teased my nipples, twirling around them, pulling and gently twisting them. I was ready to ramp things up and turned Little Bob on.\n\nSuddenly, I once more heard the sound of a vehicle approaching.\n\nI poked my head just over the rim of the rock top and saw the white pickup truck coming back, a plume of dust in its wake. I pulled my head back down.  Oh, poop - again! \n\nI didn't think they would be able to see me -- the top of the boulder was maybe 15 feet off the ground and I didn't think they'd try to get up there in any case, considering the trouble I had had. Why would they? Their heading back this way had to be coincidence. In any case, I could slip on my clothes in just a second and I wasn't committing any crime by being here.\n\nI held my breath as the truck slowed and coasted to a stop beside the rock. Two doors opened and I could hear footsteps on the gravel before the doors closed.\n\n\"Damn, but it's going to be hot today,\" a male voice remarked.\n\n\"Sure enough,\" a second man replied. \"But it sure is pretty out here.\"\n\n\"Wonder what that woman is doing out here. Camping, maybe?\"\n\n\"Well, the licence plate came up clean and she's not on any list. Free country, I guess.\"\n\n\"Yeah. Got the thermos?\"\n\n\"Still in the truck. I'll get it.\"\n\nI lay still. I apparently wasn't in any trouble, but really didn't want to explain anything to anybody.\n\nAs the two below on the ground settled in for what seemed to be a casual cup of coffee in the shade of the rock, I became aware of Little Bob, still vibrating gently in my hand.\n\nI realized that I was as safe as one could be up here.\n\nI grinned to myself. Never waste an opportunity! \n\nI turned Bob up to high and ran it across one nipple, then the other. I found myself giving a low moan of enjoyment and realized that my getting vocal could blow this whole thing right out of the water.\n\nI paused for a second and decided that would be part of the challenge. Rub one off just a few feet from a pair of cops without being caught. Perfect!\n\nI bit my lip, took a deep breath and slowly slid Little Bob into my vagina with my left hand, moving it in and out slowly, focussing on the most sensitive area at the front. My right hand played with my boobs -- squeezing them, cupping them, pretending that one of those ever-so-masculine men two steps away had climbed up to join me and join in the fun. \n\nTheir voices below fueled my excitement.\n\nI could feel another moan growing within me and bit it down, being as silent as I could be. Within me, a very nice orgasm was building, coming closer and closer.\n\nI shifted Bob with my left hand to run up one lip and down the other, while at the same time focussing more and more on my anxious and waiting nipples with my right hand.\n\nI couldn't stop myself from panting in my arousal, but opened my mouth as wide as I could in hopes of keeping the sound down.\n\nThe orgasm was so close, so very close. Usually I would stall, delay, extend the pleasure. Today however, I decided to go for it as quickly as possible. I switched Little Bob from my labia to my clit, putting two fingers inside me to work my G-spot.\n\nThat's all it took. Within seconds, I had to clap one hand over my mouth to keep from squealing. It was a wonderful orgasm, strong and full. It went on and on until I thought I would faint. \n\nSomehow, I managed to keep from screaming.\n\nAs it faded, I turned Little Bob off and lay on top of the rock, shaking and quivering with the after-cum echoes.\n\nI had lain there, exposed to anyone who cared to look, for about three minutes, when the two below on the ground got into their truck and left. \n\nI almost cried in my happiness. Such was my bliss that I was almost -- almost - tempted to flag them down to say thank you. \n\nI was simply triumphant! Not only was the solosex really good, but I felt just amazing that I had pulled the whole thing off -- from watching my clothes leave me behind, to running stark naked across God's wilderness, to finding the package, evading the cops and all the rest. So, yeah -- 'triumphant' is the right word.\n\nI doubted it could ever happen that way again, but damn!\n\n.\n\nThree weeks later, things went kind of weird. \n\nIn a good way. \n\nSort of.\n\nI felt the usual rush seeing my clothes skyrocket away from me. I watched the balloon drift eastwards, then suddenly shift to drifting more or less south; presumably it had risen into a different wind layer. On the ground, I changed my own course to compensate.\n\nChecking the timer on my wristwatch, I was delighted to see, right on time, the package drop and the parachute open. It was a lot further away than it had been ever before and appeared to be drifting towards a bit of a valley, presumably containing one of the many creeks crisscrossing the area.\n\nAs I jogged towards it, it drifted out of sight, down below ground level.\n\nThe day was getting warmer and I was getting quite thirsty with all my exercise. I took a sip from the canteen.\n\nSuddenly it hit me -- running water. Although the creeks around here were all shallow, scarcely knee-deep at most, I wasn't sure what an immersion would do to the electronic part of my Jeep key. Worse, I could see the potential for even a small stream to drag both parachute and payload away downstream for God knows how far. I started to sprint. My boobs started bouncing uncomfortably as I raced across the uneven ground and I had to hold them in my hands, which didn't make running any easier.\n\nEventually, I reached the edge of the valley. Those criss-crossing the area were typically at most maybe 50 yards across and 10 feet deep. Some of them I could almost jump across.\n\nAs I darted over the lip of this valley however, a number of things immediately became apparent to me. \n\nFirst, this valley was much larger, much deeper than the ones I'd seen before. I was facing a 100-foot drop.\n\nSecond, the slope I now found myself on was far steeper than I had anticipated. \n\nThird, I was now facing a matter of survival. If I couldn't keep my footing, I was very likely to break my sweet ass. And if that happened, even if I was still alive, I wouldn't be able to crawl all the way back to the car. It'd be 25 years before anybody found my splintered bones.\n\nThe valley bottom was filled with low trees and grass, but unless I could somehow sail over to land softly in them, they'd be of no help whatever.\n\nThe slope was steep, covered in sand and loose stones, with withered bushes sticking out precariously every few yards. I grabbed at one of them and, after the briefest tug, it came away in my hands leaving me even more off-balance. No more of that!\n\nSlowing down was impossible and gravity had me running faster and faster down an increasingly treacherous slope. I'm not all that ashamed to admit that I screamed in my fear.\n\nI'd almost made the bottom when I had to start swerving to dodge the trees and large boulders littering the valley floor. At least the ground cover was grass now instead of sand and flint-edged stone.\n\nMy foot rolled on something -- I couldn't tell if it was rock, stick or a bleached femur from the last bonehead to try this - and I lost my balance. Tripping, I did a complete somersault and wound up, miraculously unhurt and with my nose about six inches from a pair of sandals.\n\nSandals encasing a very masculine pair of feet.\n\nI scrambled backwards to my feet and, somewhat to my shame, instinctively went into that appalling 'embarrassed naked female' pose, trying to cover breasts and pussy with my arms and hands.\n\nWhen I looked up, I had to reconsider. The owner was as bare as I was. \n\nAnd laughing his head off.\n\nBroad-shouldered, with a narrow waist and standing about 5' 10', he had the body of a man accustomed to heavy exertion. Good muscle definition, I guess you'd say, without being chiselled or anything. \n\nHis dark brown hair and a short beard were sun-bleached. This was a person who spent a lot of time in the sun.\n\nAnd he had a good package. Hey, even Crazy Balloon Girl was entitled to notice, despite my recent activities.\n\nAs I stared at him, I realized that I wasn't seeing any tan lines. Either this fellow was natually dark or else he and I had, to some degree at least, something in common.\n\nHe stopped laughing, but made no attempt to shield his own nudity or look away from mine.\n\n\"It's my lucky day!\" he smiled. \"A bundle of girl's clothes falls out of the clear blue sky, literally on my lap. Now, here's the girl.\"\n\nI glared at him, but got over my initial embarrassment and stood up straight.\n\n\"How about you just give me my stuff back?\" I demanded. \"And what in heck are you doing out here anyway?\"\n\nHis grin grew broader. \"I could ask you the same thing,\" he laughed. \"Me? If a ranger were to ask, I'm just camping here in a quiet place to do some writing and, oops, was I supposed to register, officer? Oh, I am sorry.\" \n\nWithout taking his eyes off me, he stuck a thumb over his shoulder and I could see a small trailer tucked in between two low trees, with a dusty pickup truck parked nearby. There was a small folding picnic table by an improvised firepit. A solar panel was staked out on a post to one side.\n\nOn the table was my missing parachute package. My clothes were laid out beside it.\n\nAs was Little Bob.\n\nI found myself turning scarlet.\n\nI pushed by him and grabbed my things. When I turned around, he was sitting on a rock, still grinning.\n\n\"Take a picture, perv!\" I said loudly, looking around for the best way out of the valley.\n\nThe bastard had the audacity to actually snicker at me. \n\n\"Hey!\" he snorted. \"I was just quietly minding my own business, miles from nowhere, when a stark-naked woman literally throws herself at my feet in search of her vibrator. And I'm the perv?\"\n\nI stood there, quivering in anger - knowing he was right, but still boiling. Then the absurdity of the entire situation hit me. In spite of myself, I couldn't stop my own smile from forming. A second later, we were both laughing.\n\nHey -- it was one heck of an icebreaker, right?\n\nOK, in for a dime, in for a dollar.\n\nI took a deep breath, held out my hand. \"I'm Kate,\" I said.\n\n\"Duncan.\"\n\n\"Well, sorry to just drop in like this, Duncan. I'll get out of your hair.\"\n\n\"No worries, Kate.\" He seemed about to ask the obvious question, but said nothing. His eyes swept over my body. I could hardly fault him, all things considered.\n\nHe pointed behind me. \"The foot trail's over there, but would you like a coffee or something before you go?\"\n\n\"Or,\" one of his eyebrows rising, \"a short swim to cool off?\"\n\n\"I wouldn't refuse a coffee,\" I said, \"but I don't see a pool around here.\"\n\nI was about to say that I hadn't brought my swimsuit, either, but stopped myself just in time. Instead, I shrugged and looked at him expectantly. Lead on... \n\nHe held out his hand to one side, as if inviting me to go in that direction, but instead led me down a faint trail. In spite of myself, I found myself getting a bit turned on by the sight of his solid manbuns in front of me.\n\nIt was, I realized, a very odd situation. Half an hour ago, I was engaged in some kinky but entirely private activities, thinking I was the only person for a hundred miles. \n\nNow, all of a sudden, I was not only visiting a previously unknown neighbour, but I was naked with a man I'd only known for a few minutes. And I knew very, very little about him. For all I knew, he could be an escaped serial killer.",
        "Societal norms told me to wary, prudence reinforced that, the Sisterhood back in what masqueraded for civilization these days was screaming for me to run. For some reason however I felt quite safe with Duncan. Don't ask me why, but I was becoming more relaxed by the moment.\n\nThe creek which had in its glory days formed the valley was now only a few feet across, but here and there it widened to several yards across. In one place, it had formed a pool and it was to this that Duncan led me.\n\nNot pausing when we reached the bank, he simply walked out into the water, stopping in the middle. The water came to his upper thighs, leaving his manhood in the sunlit air.\n\nNot to be outdone, I followed. I had been bracing myself of the water of an icy mountain rill, but the crystal-clear pool was surprisingly warm. \n\nI stopped just short of Duncan, who was gazing up at the cliff faces surrounding us.\n\nIt was a hidden Eden. No doubt the original native dwellers in this area had known of it, but it was certainly not shown on the topographical maps I had consulted. OK, the maps I'd brushed over, truth be known; it was probably marked. If I'd actually studied  them, I wouldn't have almost fallen, yes?\n\nBut I doubted anybody else has actually been down here recently -- aside from Duncan, of course. Would the two rangers have taken a break by that sunburnt rock if they'd known of this little paradise?\n\nI was truly impressed with the place, its tranquility and -- yeah -- its privacy. Duncan had even hung up a mesh hammock off to one side.\n\n\"Thank you, Duncan,\" I said, softly. \"This is wonderful.\"\n\nHe turned to me, smiling. \"You're most welcome, Kate. After all, it's not every day that I get a beautiful lady just drop in.\"\n\nWith that, he slid down under the water. A moment later, he stood back up, brushing water out of his hair and eyes.\n\n\"Make yourself at home,\" he said. \"I promised coffee -- how do you take yours?\"\n\n\"Black, please.\"\n\nWith that, he was gone, returning a few minutes later with two tin mugs. \n\nIt was hot and I almost burned my lips, but it was good coffee and I was grateful. We sat in silence for a few minutes on a log by the creek before he spoke.\n\n\"So?\"\n\nI avoided his eyes. I knew what he meant. And at this stage of the game I quiet literally had very little to hide.\n\n\"So?\" I countered, hoping he would let it all just drop. Fat chance.\n\n\"So, are you going to tell me why your clothes dropped in five minutes before you did, attached to a parachute?\"\n\nI really didn't want to get pulled into that. Getting caught had always been a risk, part of the excitement, but now that it was here, I just wanted to pretend it had never happened.\n\nRight. And I was skinny-dipping with a total stranger...\n\n\"Well, what were you doing out here dressed like that?\" I asked, hoping to deflect the question.\n\nIt didn't work. \n\n\"Officially, I'm probably not here at all,\" he smiled. \"But if pressed, I'm writing a novel and needed some quiet space. If pressed really hard, I might admit to some informal, unofficial, hobby prospecting.\"\n\n\"You already said that, Mr. Sandals.\"\n\n\"Well, being the only person around,\" he said, \"I can indulge my own... inclinations about clothes.\" His voice was soft -- and got softer. \"Like you, apparently.\"\n\nThat did it. I found myself blushing like crazy.\n\n\"Anyway,\" he continued, his voice gentle, \"I watched what seemed to be a weather balloon go over a few minutes before the parachute landed. I'm guessing that you like watching your clothes drift away from you.\" \n\nBusted, in detail. \n\n\"Two plus two, Katie...\" he said.\n\nI could have lived with that, but then he made the mistake of adding, \"And how many women have a balloon-launched vibrator?\"\n\nThat did it.\n\nMy Irish temper got the best of me again. I stood up, my face crimson. \"You didn't have to say that, asshole. I'm leaving.\" I turned around and tried to stomp away. Starkers didn't leave me much dignity, but I tried.\n\n\"Kate,\" he called from out of sight.\n\nI stopped and turned. \"What?\"\n\n\"Dinner is served nightly at seven, with cocktails at six. We generally don't dress up.\" With that, I heard a splash as he dove back into the creek.\n\nGod damn the man! Not only had he figured out precisely what I'd been doing, but he hadn't even had the decency to be a proper perv. It was his nonchalance that pissed me off the most.\n\nI stamped my foot in fury, which only set my boobs bouncing again. The only saving grace there was that he wasn't there to see them quiver.\n\nI waited until I was out of the valley before I got dressed. \n\n+\n\nI was, let's face it, a mess by the time I'd hiked back to my Jeep.\n\nI was embarrassed -- no, mortified. I might have got away with anything, might have even had a pleasant time - except for the presence of Little Bob. \n\nAnd I was seriously pissed at Duncan. Yes, I'd got myself into that mess and no doubt it had been hilarious from his point of view, but how dare that arrogant son of a bitch laugh at me so casually?\n\nI knew I wasn't thinking straight. In spite of my very real anger, I realized that I was both intellectually intrigued by him and physically attracted at a level my supposedly-sophisticated superengineergal self was having a hard time admitting to. He was very handsome.\n\nThere was another thing. Aside from the most understandable -- and, let's be honest, reciprocated - ogling, he hadn't made the slightest move towards me.\n\nAnd, while, I knew I would have been offended if he had done something, his behaving like a gentleman had pissed me off as much as anything. How dare he not at least drool a little over the helpless nude woman so unexpectedly presented?\n\nI hadn't felt this mixed up since I'd been 14 years old.\n\nEventually, anger won the day and, tossing everything into the back seat, I drove back to the city.\n\n+\n\nI stewed about it for the rest of the week. \n\nEven though I'd done nothing wrong, much less illegal, I still was very gun-shy about my exhibitionism becoming public knowledge. \n\nI'd had such a good thing going! And now that man had to come along and mess it all up.\n\nBut, hard as it was for me to admit, I could intellectually acknowledge that Duncan hadn't done anything wrong either. I knew that I would have freaked had he actually tried to take advantage of my nudity. If you could overlook his attire -- or lack of it, rather -- he'd been a perfect gentleman. And why shouldn't he go bare in such an isolated spot? It had been me who invaded his space, not the other way around.\n\nAnd he'd been as charming as he was handsome. That, in my experience, was a rare mix.\n\nAnd there was nothing to stop me from going somewhere else for my balloon gigs.\n\nOn the other hand, there was nothing to stop me from going back, either. Nothing except my own pride and insecurities. \n\nI flipped. I flopped. And again.\n\nAnd decided.\n\nChanged my mind.\n\nAnd went back to the original decision. I was doing nothing wrong. I was enjoying myself. \n\nI would continue.\n\n.\n\nThe weather forecast being favorable, I packed the Jeep on Thursday night, as usual. This time I added a couple of other things, almost on spec. It's not just Boy Scouts who know the value of being prepared. \n\nI was in my camping spot at 10:05 and, this time, slept very well.\n\nI woke up to fog -- rare but not entirely unheard of here. Frustrated, I considered launching blind, so to speak, but quickly returned to sanity. Around about 9:30, it started to burn off. I was starting to lay out my launch assembly when the wind came up.\n\nWay up.\n\nDarn it -- this wasn't on the weather forecast!\n\nThe winds were high enough that my balloon would have blown itself to pieces before I could have launched it - and who knows what would have happened to it even if I could have released it. And, even if everything went well, there was a really good chance that, once on the ground, the parachute would have become a sail, dragging my clothes off past the horizon faster than I could run after it.\n\nFuming, I stowed the kit.\n\nSitting in the Jeep, I tried to find some sort of forecast on the radio. I could find one very faint station but it faded out to mush before a weather report came on. I cursed my persistent refusal to upgrade the Jeep's radio, cursed again when I confirmed my phone had no coverage.\n\nFine, then. Option One - I could sit here all day in hopes of the weather improving. I was no meteorologist, but it didn't look all that likely.\n\nOr I could admit defeat and just go home. Not a happy choice. \n\nOr I could be a different kind of daring and take Duncan up on his offer. It'd been a week since he asked, but it wasn't like he'd have to arrange a caterer. \n\nI was still feeling seriously annoyed at him, but at the same time knew that that was completely unreasonable. Objectively, it must have been really funny from his point of view.\n\nMore flipping. More flopping. I finally pushed the irrational anger away. \n\nDoor Number Three, please. \n\nI dug out the two additions to my packing list. \n\nOne was a bottle of red wine, a nice California vintage. I put that on the front seat.\n\nThe other was a chunky necklace. Rounded and polished olive-size stones, some turquoise and some soft-brown, were separated by gold links and discs. I liked it and thought the colors looked good against my skin, especially with my recent all-over tan.\n\nI put it on, took off my blouse and looked at myself in the rear-view mirror. The necklace fit in with the way I had originally imagined this whole adventure -- not frilly, girly and delicate, but solid, colorful and confident.\n\nMy shoulders sagged. Confident? Really? \n\nI was feeling anything but confident. Kathrine had come out here to spend some time getting kinky on a solo basis. Now she was getting ready to drop in on a strange man wearing just sandals, sunscreen and a necklace.\n\nI looked at my image in the mirror, pulled my shoulders back, licked my lips and smiled.  Confidence, kid, I told myself. You can do this. It's just dinner. \n\nMy eyes strayed down to my bare boobs.\n\nJust dinner - right. Who was I trying to kid?\n\nI started to put the blouse back on, stopped, took it off again. Looking in the side mirror, I put my hands under them, lifted the Girls. I turned this way and that, inspecting their reflection. Deep breath. I took off my shorts and panties, rolled them into a ball with my blouse and tossed the lot onto the front seat of the Jeep.\n\nI touched up my minimal makeup, brushed my hair. I again examined myself in the mirror. Guess who's coming for dinner, Duncan?\n\nI took another deep breath, sat down behind the steering wheel.\n\nAnd immediately bounced out -- the damned seat was hot!\n\nI reached across, unrolled my clothes and laid them on the seat. With some caution, I sat down and found it was bearable.\n\nI sat there for a moment. Was this what I really wanted to do?\n\nAnother deep breath and I decided to walk.\n\nExhibitionism? I'll show you exhibitionism, Duncan! \n\nLeaving my clothes in the car, I started hiking the mile or so to Duncan's valley. I figured I needed the exercise to deal with my indecision and it was a chance, sort of, to recreate the experience the winds had denied me. I kept my eyes open for any approaching vehicles, ready to dive into a nearby gully if necessary. It wasn't.\n\nWhen I got there, I stepped over the rim, not on the almost-sheer spot where I'd made my first entry, but further to the south, onto the steep but safe path he'd shown me a week ago.\n\nOn reflection, after a few steps, I kicked off my sandals. Leaving them by the trail, I continued my descent dressed in nothing my necklace. There'd been no shoes in Eden.\n\nStrangely, there seemed to be nobody around. Duncan's trailer was there, but his truck was gone.\n\nOut prospecting?\n\nNot wanting to stay, I left the wine on his table, holding down a note scrawled on a scrap of paper: I accept your kind invitation. See you tonight. K \n\nWith that, I headed back to my camp in hopes of the wind dying. It didn't and, as 3:30 drew near, I gave up. Not every day can be a balloon day.\n\nInstead, I had a nap in my tent and then took a sponge bath. Not enough, but better than nothing.\n\nI arrived back at Duncan's valley just before 6:00. This time, as my head came over the rim, I could see his pick-up.\n\nI could feel a certain, shall we say, tension in my body. This wasn't an accidental encounter; this was a deliberate nude visitation. \n\nWhat if he was dressed?  I hadn't thought of that. \n\n What if he had other company?  I almost turned back at that thought.\n\nPausing on the trail, I heard his voice from below, under the trees. \n\n\"Kate? Come on down!\"\n\nAnother deep breath and down I went. The necklace bounced just a little at each step.\n\nAnd there he was, a smile on his face and a tin cup of what I presumed was wine in his hand. Well, I could hardly expect crystal out here, could I?\n\n\"Glad you could make it, Kate! Where've you been all week?\"\n\nI tried to smile back. \"Office drudgery. Money. Rent. Bleh.\" \n\nI tried to seem calm, but I was pretty nervous inside. Actually, I was more flustered that I'd care to admit. While I'd been among hundreds of other naked cyclists for Nude Day bike rides, I'd never deliberately been individually nude in front of anybody but a lover -- and Duncan wasn't one.\n\nYet. \n\nYet. Was I hoping? Merely curious? Afraid?\n\nI had a sudden and very graphic mental image of him on top of me, the hair on his chest against my nipples, his length deep inside me. \n\nThe image was exciting, but also deeply disturbing. Frankly, I didn't know what I should be feeling. Or doing.\n\nYet here I was, dressed only in a necklace, with a man dressed in one necklace less than that.\n\nAnd I was enjoying myself. I was enjoying the feelings this weird situation was creating. Sexual excitement, yes, a little. A bit of anticipation, a spinoff of my original exhibitionistic plans? Maybe. But pride, too. Nudity was, I knew, my most natural state. And Duncan's admiring glances confirmed I could be proud of myself like this. \n\nI took the cup from him, smiled and took a sip. \n\n\"Thanks.\"\n\n\"It was a pleasant surprise when I got back from rock-hunting,\" he smiled. \"I'd kind of given up hope.\"\n\n\"Look, Duncan, I want to apologize.\" \n\nHe held his hand up in a dismissive gesture. \"Nope. Never happened. I pushed some buttons. Even-Stephen at worst.\"\n\n\"But...\"\n\n\"Nope. Let's drop it, OK?\" \n\nI closed my eyes, nodded briefly. Opening them again, I tried to change the conversation to something less charged. \n\n\"Is the pool still open?\" I asked. \"It's been a long day and I could do with a rinse. Or, if the offer of dinner is still open, do you need a hand with anything?\" \n\n\"No need,\" he said, then smiled. \"but it's been a while since I've been shopping and you sort of caught me by surprise. Hope you're up for burgers and three-bean salad.\"\n\n\"Sounds fine,\" I assured him. \"Are you sure I can't help?\"\n\nHe shook his head and pointed down the trail. \"Enjoy your soak.\" \n\nWith that, he turned and headed for the table, where I could see a propane stove already set up. I took a moment to again admire his buns as he walked and felt the beginnings of a growing hunger deep within me.\n\nAfter a day of aggravation, the water was divine, not only for a chance to get clean, but also for a chance to relax. Sitting on the bottom, submerged up to my neck and leaning back against a convenient rock with my hair in a bun to keep it dry, I could feel the frustration draining away. I closed my eyes and simply floated in rippling relaxation. \n\nI hadn't thought I was actually sleeping, but when I opened my eyes a moment later, it was to see him sitting on the other side of the pool.\n\n\"This place has that effect on me, too,\" he said with a gentle smile.\n\nI looked at the sun. Oh, no! I really had fallen asleep - great guest behaviour.\n\n\"I'm sorry,\" I stammered again. \"It's been a hard day and...\"\n\nHe got up, waded across -- all of three steps. His finger came out and touched my lips, silencing my apology. It was a surprisingly intimate gesture, but under the circumstances, a perfectly reasonable one.\n\n\"You were tired and this place is... kind of magical,\" he smiled. He looked down at my mug on a rock beside me. \"At least you didn't spill your drink.\"\n\nI got up and noticed his eyes dip down to my boobs. I could hardly be offended. His package had been at eye-level to me and I hadn't been not looking, if you follow my drift. \n\n\"I decided to let you sleep,\" he said. \"Hope you don't mind, but I was enjoying the view.\"\n\nUnder other circumstances, his remark would have been really rude, bordering on creepy. Here, it seemed perfectly reasonable. And I was the exhibitionist, right?\n\nIn for a penny, in for a pound, Gran used to say. I smiled, arched my back a little to emphasize the Twins. His eyes automatically flicked down at the movement.\n\nI decided to go for broke. I turned my head just slightly so that I was looking at his groin, maybe all of 18 inches in front of my face.\n\n\"Why would I mind?\" I asked quietly. I glanced up at his face before deliberately moving my gaze back to his package. \"Provided you don't mind, that is.\" \n\nHe gave a low chortle and, to my amazement, his penis gave a small twitch and grew, just a little.\n\nGrinning, I looked back at his face. \"I'll take that as an OK, yes?\"\n\nHis chortle became a belly laugh, deep, rolling and funny in itself. My uncle had had a laugh like that. I missed it and was delighted to hear it here.\n\nThe two of us began laughing our heads off. \n\n+\n\nDinner was simple, but pleasant. Under the circumstances, pretences were hardly possible. Duncan was agreeable company and entirely masculine, which was a pleasant change from some I had been forced to mix with. He had good manners, a wicked sense of humor and was totally able to laugh at himself.\n\nWe wound up sitting side by side and I was very aware of his presence. As we were finishing our meal, he turned to me, his head bending down. I thought for a moment that he was staring at the Girls, but his gaze was a bit higher.\n\n\"Very nice,\" he remarked, looking at the necklace. He stretched out his hand, stopped before touching it. \"May I?\" he asked, his eyes on mine.\n\nI nodded. \n\n\"Turquoise and agate,\" he said, the beads slipping one by one through his fingers. \n\n\"Agate? Brown agate?\"\n\n\"Trust me on that one,\" he smiled. He looked closer, rolled a bead under his finger. The skin over my throat tingled under his fingers. \"Probably Montana,\" he mused.\n\n\"How can you tell?\"\n\nHe looked up at me, smiled. \"I really am a geologist,\" he said, \"even if most of my time here is spent writing.\"\n\nHe let the necklace fall. My skin still tingled where his fingers had brushed along it.\n\n+\n\nAs the sun sank lower, he brought a pair of old-fashioned kerosene lanterns down to the pool, hanging them in the trees. We sat silently, our feet in the water. It slowly got cooler but the evening was very pleasant.\n\nIt was a very odd experience. Like I said, I was no blushing virgin, but this was unlike anything I'd ever been through. I'd been buck-naked for hours, alone with a man I barely knew. Thinking back, any boy I'd ever known would have made some sort of pass by now. Yet Duncan had done nothing but look. \n\nCould it be that this beautiful man was gay? I could hear generations of female ancestors protest such a loss to womanhood, but reconsidered when I saw the looks he was giving my figure and remembered that little twitch. No, maybe bi, but definitely not entirely on the other team.\n\nAnd we had been like this for hours. I'd been nude this long a lot in my own house or with lovers long-past, but never like this. It felt relaxing, fulfilling even. Maybe even exciting? Yes, absolutely. The usual physical signs of arousal weren't there. My nipples were normal, I wasn't feeling any excitement in my ladybits, my pulse was pretty normal. Yet I was increasingly becoming mentally turned on by Duncan. Call it what you will, I knew against my better judgement that if he made a pass, I wouldn't object. ",
        "We watched the stars come out. There were, for some reason, quite a few shooting stars and we vied to see who could notice them first.\n\nEventually I yawned. \n\n\"Sorry,\" I murmured. \"Long day.\"\n\nI put my hand on his forearm. \"Thank you, Duncan. It was a lovely dinner, but I am rather tired and I should go.\"\n\nI could sense his disappointment. Well, I could feel my own as well.\n\n\"I'll see you up to your car,\" he offered.\n\n\"No need,\" I replied. \"I walked. But I'd appreciate borrowing one of these lanterns, please.\" \n\n\"You plan on walking back how far in the dark? No way, Kate. May I drive you?\"\n\n\"No, thanks. I don't want to put you out and I'm already in your debt for dinner.\"\n\n\"Won't hear of it, ma'am!\"\n\nFrom some men it would've been irritating. On the other hand, I was aware by now that Duncan was a real gentleman, in the best sense of the word. Oh, he'd been openly admiring my body, but that was hardly unexpected and I'd been admiring his, too. Looks cost nothing and we both had much to look at.\n\nI found myself not entirely ready to go. I also knew that staying meant kicking this all up a notch -- or six. Did I want that? Was I ready for it?\n\nLike a supersaturated solution, my thoughts suddenly crystalized.\n\nInstead of getting up, I upped the ante, leaning against him and putting my arm around his bare waist.\n\nI felt his arm slip around mine and give a tentative hug in response.\n\nI turned to look up at him, felt his chest hair against my cheek. His eyes were dark in the flickering lamplight. His hand gently brushed my hair off my cheek.\n\n\"Duncan,\" I said softly, \"it's too nice here to leave. I've really enjoyed myself. Would you... would you mind if I didn't go home tonight?\"\n\nThere was a long pause, then Duncan's arm gave my waist a much stronger hug before his hand slid gently down to my bum and gave that a squeeze, too.\n\nI stopped talking as his lips came down to meet mine. His tongue licked my lips and I eagerly opened at its touch, pushed mine forward to meet it.\n\nMy hand stroked his abs, down his thigh and back again. His masculine smell filled my nostrils and I breathed in deeply, feeling real arousal build within me. That boomed higher as I felt his hand cross my stomach, linger on an underboob and then slide upwards to enfold a nipple.\n\nBoth nipples sprang to attention. My heart was pounding. This was what I had been searching for, this is what my balloons had led me to.\n\nHis mouth left mine and his tongue began licking the side of my face, my ear and down to my throat. I moaned just a little. Without thinking about it, my hand dropped into the curly mass of hair at his groin, grasped his dangling sack and rolled its fragile contents in my fingers. It was his turn to hiss, then strong fingers pulled at my nipple and I gasped with pleasure.\n\nLeaving his scrotum, my hand moved up to his now-stiffening cock, stroked lightly back and forth along its length, teased its swelling head. His lips returned to mine, hard, demanding.\n\nI felt wetness between my thighs, opened them to greet his exploring fingers, murmured in delight as they slowly, gently swept the slippery length of my ladylips. My hips rose to meet his hand and I heard his quiet laugh in the lamplight.\n\nRising suddenly, he lifted me away from the creek and led me to a patch of soft grass a few feet away. \n\nBefore he could lie down, I knelt in front of him. He was hard now, balls and cock swollen with his desire. I took his pouch in my hands, gently pulling it away from his body and fondling the tender eggs within it. I looked up, smiling, to see his smile, his eyes watching as I leaned in and, with just the tip of my tongue, teased the slit in his fleshy crown.\n\nLeaving one hand to play with his balls, I began running the fingertips of the other over his thigh, bum and abdomen. Dropping my eyes from his, I took his length -- as much as I could of it -- into my mouth, sucking gently and pumping the loose skin on the still-exposed base of his shaft. I felt his hands running through my hair and sucked harder.\n\nMy head bobbed back and forth, my nostrils filled with his male scent. From time to time, I pulled off of him and instead licked his length with the breadth of my tongue, base to tip.\n\nPeriodically I would look up to see his face, always remembering to smile broadly as I did so.\n\nI was enjoying myself, enjoying the look of delight on his face, enjoying my ability to please him.\n\nAll too soon however, his hands on my head pushed me away.\n\n\"You're very good, Katie,\" he said softly. \"and I'm very close.\" \n\nI would have been happy to continue, but he was already pulling his slick and swollen hardness out of my hands as he lay down beside me on the grass.\n\nI reached for him, tried to recapture his cock, but he slid down out of my reach, pushed me to lie on my back.\n\nI gulped as I felt his beard inside my knees. His first licks on my inner thighs were very light, inflaming before they became harder, more demanding. His tongue traced its way up towards my centre. I felt my labia swell still more in response. As his one hand mounded, gently squeezed and pulled at my breast, I felt my nipples throb in their demand for his attention.\n\nAgain and again his tongue-stokes on my sensitive skin stoked the fire of my own desire, but each time stopped just short of my pussy. I was panting, almost desperate for him to finish me, to release me.\n\n\"Dammit, Duncan!\" I cried. \"Do me!\" \n\nIn response, he pulled back entirely. I moaned in complaint, but he paid no attention. Instead, I felt strong hands on my hips. He rolled me over onto my stomach, lifted me onto my knees. \n\nKneeling behind me, I felt his hardness probe between my thighs. As he slowly pulled me back onto his kneeling lap, I reached down and aimed him into my opening. I leaned back onto him, my bum on his thighs, my back against his chest. \n\nI felt him slowly slide into me, stretching my walls and filling my depths. I gasped in pleasure, gasped again as his hands swept up my side, then over my stomach to cup and hold my breasts.\n\nFully seated on him, I rested for a moment before beginning to rock back and forth on his cock. His arms came around me and, at each stroke, his strong fingers pulled on my nipples, pushing my passion still higher, still hotter.\n\nI was gasping, moaning, giving short wordless cries as my orgasm approached. As it burst within me, I felt his hands pulling my hips back against him, pushing him as deep into me as he could go.\n\nHe held me there, motionless, for a minute as the wonder and joy of it burned its way through me. Eventually I sagged forward onto my elbows, still impaled on his organ. Dimly, I realized that he had not cum himself.\n\nI could have fallen asleep right there, but his hand in mine lifted me up and walked me to a nearby tree. Sitting on a rock at its base, he leaned back against the trunk and pulled me towards him, onto his lap.\n\nI straddled his legs and lowered myself onto his thick manhood as it glistened in the flickering lamplight. I was almost crying at the pleasure of his re-entry. He began lifting himself on his heels, but couldn't get much movement. Instead, I began rocking my hips and could feel the rim of his crown brushing up and down along the walls of my pussy.\n\nMy hands grasped his head and dragged his face into mine for a hard, passionate kiss. Our tongues probed and wrestled inside each other's mouths. His hands played with my boobs, teasing, pleasing and worshipping them.\n\nI could hear Duncan begin to pant under me and realized I was close to cumming again myself. I reached between my legs and began circling my clit with a forefinger. I came, softer, more rounded than before perhaps, but more loving. At the same time, I squeezed inside with all my might.\n\nDuncan groaned, froze. In the flickering light, his eyes were closed. His head dropped to my shoulder. I could feel his cock throbbing, pulsing inside me.\n\nStill locked together, we sat under the tree, panting almost as one. Eventually we separated, lay down on the grass. I put my head on his shoulder and we dozed that sweetest of sleeps in the warm night air.\n\nLater, after cooler air had driven rove us into his tent to spoon, he whispered into my ear. \"Going to tell me about the parachute?\"\n\nI realized that I was more at home with this man than I had ever been with another person. If I couldn't share this saga with Duncan, I could share it with nobody.\n\nFeeling at ease, as relaxed as I had ever been in my adult life, still in the afterglow of our lovemaking, I told him, starting at the beginning.\n\nThe two of us wound up giggling, then chuckling, then laughing our heads off.\n\n\"I had a thought,\" he said in the darkness behind me. \n\nI waited.\n\n\"Have you ever thought of putting a camera on that payload of yours?\"\n\n\"A camera?\"\n\n\"It'd be interesting footage of you chasing after it.\"\n\n\"Can we talk about it in the morning?\"\n\n\"OK.\"\n\nI could feel his strong hand on my waist as we spooned and realized I felt, not only relaxed, but as at peace as I ever had.\n\nIt would do.\n\n<center >+\n\nI hope you enjoyed yourself - thanks for reading. Please remember to vote, if not for this story, then for one you think is better.</center>"
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "enforced nudity",
        "exhibitionism",
        "naked in wilderness",
        "nudity",
        "public nakedness",
        "public nudity",
        "skinny-dipping"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/up-down-and-away"
}