{
    "title": "Table for Two Ch. 11-12",
    "pages": [
        "The moment Emily Bailey walked into their room, she knew something was wrong. She stopped mid-stride, a sinking feeling enveloping her stomach as she looked at her desk.\n\n\"Fuck,\" the older sister swore under her breath.\n\nStephanie looked up from where she was working on her bed, \"What?\"\n\nEmily silently closed the door to their room, \"Dad cleaned up.\"\n\nThe room was definitely cleaner than it was when they left for Sam's. Usually, Dad insisted on the girls keeping their bedroom tidy by themselves, but occasionally, he might vacuum the whole apartment when he had a free day, picking up pieces of discarded clothing and other items littering the floor of their room.\n\nHe rarely cleaned their desks and Emily's desk was still as messy as before.\n\nStephanie's eyes widened when she saw her portraits laying prominently on Emily's desk, the two erotic ones clearly visible.\n\n\"You left that there?!\" she almost screamed.\n\n\"I had other stuff to worry about, OK?\"\n\nShe shoved the artwork into a large folder behind her desk where she kept her older art. It was the borderline panic apparent in Stephanie's voice that scared her most.\n\n\"Do you think he saw it?\" Stephanie asked.\n\nEmily shrugged helplessly.\n\n\"He seemed normal. Maybe he didn't,\" Stephanie continued. They met dad in the living room moments ago.\n\n\"But what if he did?\" Emily asked.\n\nStephanie's eyes turned hostile. \"God, this is so you!\"\n\n\"Don't try to pin this on me!\" Emily spat out.\n\n\"If you just put it away, we wouldn't have to deal with this,\" Stephanie gestured at Emily's table.\n\n\"He was going to find out anyway. You were the one who started-\" Emily argued, \"All this stuff.\"\n\n\"Yeah, well, you were supposed to be straight, I thought you'd put a stop to it.\"\n\n\"I tried to-\" Emily said quietly. Seconds later, she continued, \"Do you regret it?\"\n\nStephanie shrugged, \"I don't think so. Do you?\"\n\nEmily shook her head.\n\n\"Maybe except for what happened at Sam's yesterday,\" Stephanie voiced her mind.\n\nEmily groaned, \"I thought we've been through this one.\"\n\n\"I know. I just feel like-\"\n\n\"Wait,\" Emily stopped her, \"It happened. Just accept it, OK?\"\n\n\"Yeah, I still don't like it though,\" Stephanie shook her head.\n\n\"There's other stuff to worry about now,\" Emily said.\n\n\"Right,\" the younger girl spoke up, \"So what are we going to do?\"\n\n\"We'll figure something out.\"\n\n-\n\n'Anything'. That's what Stephanie said she would do last night, right after Emily gave her a really good one.\n\nLooking up into the darkness of their room, Emily recalled her sister's words, her naturally high voice still shaky from sexual euphoria. Her state made the girl willing to go beyond her usual limits, to explore with the person who made her feel so exceptional.\n\nLike last night, Emily's thoughts went places, places where her mind didn't dare to wander outside of fantasy. She never imagined what she would be allowed to do with this girl. To this girl. And she was right there, tender and impressionable, giving Emily an opportunity she never expected to have in her life.\n\nIt was a shame their session ended the way it did. Moments after her limitless offer, Stephanie's eyes slowly closed and seconds later, the teen was sleeping peacefully. Being the good sister she was, Emily didn't have the heart to wake her. A decision that Stephanie still didn't live down. In a way, it was sweet how she insisted on returning the favor.\n\nHowever, to her surprise, today's shock didn't temper Emily's sexual appetite. Thoughts about Stephanie's offer made her skin crawl with delicious depravity, aside from the incredible arousal they called forth within her body. Her hair stood up all over her body and her sex was making a mess between her legs in mistaken anticipation of intercourse.\n\nA part of her still craved a man, but Emily was focused on the beautiful teenage girl, laying just feet from her. The closeness and compatibility the sisters shared made the prospect appealing alone. With just a twinge of guilt, Emily realized that what made Stephanie even more alluring was her innocent malleability. If properly encouraged, the young girl might even let Emily-\n\n\"Em? You asleep?\" came a voice from the dark.\n\nEmily was glad her sister interrupted her fantasies before they slipped into areas she might regret.\n\n\"Nah,\" she replied, \"You want to come over?\"\n\nEmily's sense of duty was back, the overwhelming responsibility for this girl. That didn't seem to stop her from extending an invitation she wasn't sure was entirely for Stephanie's benefit.\n\n\"... I just want to talk if that's OK with you.\"\n\n\"Yeah, I-, of course, sorry.\"\n\n\"You don't have to apologize for that. It's sweet. I love cuddling.\"\n\n\"Yeah,\" Emily giggled, \"Cuddling, that's all I wanted.\"\n\n\"You know how to push my buttons,\" Stephanie laughed too, then sobered, \"but maybe we should slow down with this stuff for a while.\"\n\nA twist in Emily's stomach. Someone wanting to slow down meant bad things for a relationship.\n\n\"We should? What's wrong? Is it about the pictures?\"\n\n\"Yeah, kind of. I'm a bit freaked out. I need to tell you something.\"\n\n\"What?\"\n\n\"Dad came over while you were in the shower. He wanted to talk.\"\n\nA cold shiver came over Emily's spine.\n\n\"Uh-oh.\"\n\n\"Right.\"\n\n\"What did he say?\" Emily inquired, \"Was he angry?\"\n\n\"I don't know, he didn't seem like it. But I think it really was about the paintings. Can you imagine dad being sensitive, or subtle?\"\n\nEmily had to smile, \"Nope.\"\n\n\"Well, he tried. He was almost sweet in his dorky way. But he asked me how I was doing, and how I think you're doing.\"\n\n\"And? What did you say?\"\n\n\"I tried to play it cool, like nothing was happening, but God was I nervous. I hope he couldn't tell, but he seemed really concerned. The worst was when he asked if I'd like my own room. He said we were old enough for our own rooms. For privacy. And safety.\"\n\nThe last sentence hit Emily like a brick. Dad thought Stephanie wasn't safe sleeping with Emily in the same room. The worst part was, Emily wasn't sure either. She did try to seduce her little sister again just moments ago.\n\n\"Fuck,\" was all Emily could say.\n\n\"Yeah, but I'm not sure he was talking about that. Maybe just the stuff that happened after the club.\"\n\n\"He saw that pic of you masturbating. Steph, he obviously thinks you're not safe with me.\"\n\nSaying it didn't relieve Emily of the pain she felt realizing that her father didn't trust her with Stephanie. Her heart was in a vice, especially with a single thought creeping in from the back of her mind. That he might be right.\n\n\"Maybe he does,\" Stephanie answered, \"but I tried to act like nothing's happening. That I really didn't mind us sharing a room.\"\n\n\"... maybe you should.\"\n\n\"Relax Em, I know you better than you do yourself,\" Stephanie said.\n\n\"You do?\"\n\nIt seemed Stephanie still had her back. Emily looked to her left to observe the silhouette of the girl who gave her so much, and continued doing so.\n\n\"Yeah, you're worrying that he might be right, that I'm not safe with you.\"\n\n\"And are you?\" Emily argued, \"I just invited you into my bed.\"\n\n\"Em, you're not a monster that eats innocent girls. Or are you?\"\n\nThe older sister scoffed, \"Well, not innocent ones.\"\n\nStephanie giggled, \"Oh shit, I'm in trouble.\"\n\n\"Thank you for believing in me,\" but Emily couldn't let it go, \"But ... what if I just manipulated you somehow? Like seducing you to pose for my pictures, and using you for sex.\"\n\n\"And what if I manipulated you, huh?\" Stephanie replied, \"You were right to say that I started this.\"\n\n\"Steph, we really aren't in the same position here. You've always looked up to me, even admired me. Maybe just because I'm older.\"\n\n\"That's not the reason why-\"\n\n\"My point is, I think it's easier for me to influence you than the other way around.\"\n\nStephanie groaned, \"Will you stop treating me like a little child? We're equals in this, OK?\"\n\n\"Sorry, but I just don't think that's true.\"\n\n\"Look, and be honest now, you wanted sex tonight, right?\"\n\n\"Now who's not being subtle?\" Emily joked.\n\n\"Just answer the question.\"\n\nA tingle in Emily's pussy reminded her of what her body desired.\n\n\"Yeah, I did,\" Emily admitted with a sigh.\n\n\"And I decided it's not going to happen, so I'm making my own decisions, right?\"\n\nSomehow, Stephanie not giving in made Emily want it all the more, \"I guess so, but I'm still your big sister. I always will be. I always want to be.\"\n\n\"I want that too,\" Stephanie said longingly.\n\nThis bond they shared emboldened Emily. She wanted to fan the flame, express how she really felt about her sister.\n\n\"In fact,\" Emily stated, \"I think I'll start what I call, Stephanie Bailey appreciation club.\"\n\n\"Really? What's that?\"\n\n\"It's a very exclusive club with strict rules. I'm the founder and sole member.\"\n\n\"And what are those rules? I want to hear them,\" Stephanie turned to lie towards her sister. A smile was audible in her words.\n\n\"First of all, the safety and well-being of Stephanie are our most important goal,\" Emily declared.\n\nStephanie laughed. \"That sounds like a very important goal.\" \n\n\"It is. I will protect her from everyone and everything. Everything else is secondary.\"\n\n\"Even when she's annoying the club owner?\"\n\n\"Sure, but then I annoy her back,\" Emily smiled, \"Like a good sister.\"\n\n\"Are there any other rules?\"\n\n\"Lots. Like I always make time for my sister. I make sure to always be there for her, no matter what. Always.\"\n\n\"You're never too busy? How is that possible?\"\n\n\"No, I'm not,\" Emily explained as Stephanie shuffled, \"I mean, I am often busy of course. But Steph, you have to understand that really depends on who is asking. And I'm never too busy to spend time with my little sis-\"\n\nThat's when Stephanie stood and walked over to Emily's bed. Without a word, the young girl slipped under the covers, except she was too low on the bed, being covered head to toe as she crawled on top of her sister.\n\nEmily froze. There was a hill in the covers where her sister was laying astride Emily's legs. Stephanie's warmth and weight upon her made her heart hammer.\n\nAnd Stephanie's head must have been close to her intimates. She was glad for the thin layer of her pajama shorts preserving the last of her modesty. Even so, the smell of her arousal must have been apparent.\n\nStephanie laid her head upon her lower stomach, hands hugging her hips. The older sister's instinct was to push the girl away. This was as unnatural and wrong as ever. Emily felt it, and she knew her sister did as well. If this was a joke, Stephanie went too far. It didn't help that she could even imagine dad's disapproving reaction. Would he scream, or even hit her?\n\nBut neither moved. Did it mean it might happen? It's already been days for Emily, and just the thought made her pulse fast, her body once again involuntarily preparing for sex. Stephanie's body felt electric against hers, even without movement. Breathing deeply through her nose, Emily was cold and sweaty at the same time. Hormones boiling, every fiber of her body was ready for whatever her sister would do.\n\n\"Em?\" Stephanie's muted voice came from below.\n\nEmily opened her mouth, but no sound came out. Swallowing, she was successful the second time.\n\n\"Y-yeah?\"\n\n\"I'm waiting,\" came a tiny voice from below.\n\n\"F-for what?\" Emily stuttered.\n\nWith Stephanie hugging her lower half, she wondered what her sister expected her to do.\n\n\"You were explaining the rules of your club. You always have time for your sister. I want to hear more.\"\n\nThe older sister was in no condition to argue.\n\n\"Oh. OK, yeah,\" Emily collected her thoughts, \"I always have time for my sis-\"\n\nHer heart skipped a beat when Stephanie's thin fingers grabbed the waistband of her bottoms, pulling them lower. She couldn't believe her luck. But then the fingers stopped. Emily got the message.\n\nShe took a deep breath and closed her eyes, \"It doesn't matter what I do, or if I have any plans, nothing is as important as my sister.\"\n\nAnd the fingers traveled lower, pulling the intimate barrier with them.\n\n\"Yes.\" Emily lifted her bottom to allow the girl beneath her covers to do what had to be done, \"Another rule is, I always go out of my way to entertain Stephanie. To spend good times together.\"\n\n\"That one's quite easy actually,\" Emily continued her monologue as her garment slid down her thighs, shins and feet. Free of it, she went on as her sister spread her legs, lifted her knees, and laid down between her thighs, \"Sometimes we go out, to do sports, or into the city. Sometimes we just stay in and play games or something. Or we just talk.\"\n\n\"The talking. Yeah, you wouldn't believe how much fun you can have just with-\" Emily went on as Stephanie's warm breath caressed her sensitive spots. Then came a soft kiss on her inner right thigh. And another. She shivered and finished, \"-with your mouth.\"\n\nShe couldn't help but breathe out, \"Oh God, Steph.\"\n\nStephanie's gentle but commanding voice came from below, \"Don't stop.\"\n\nEmily rolled her eyes and smiled. This was silly, yet she was more than happy to oblige her sister.\n\n\"OK, I- I always try to make her life better. When she needs help with homework, I sit with her and we... we do it together,\" Emily breathed out involuntarily as she felt the first connection, soft warmth of Stephanie's lips against her own. Moments later, her nose joined in as well as the girl sunk deeper into Emily's folds, a part of the older sister's body that should have forever remained forbidden to the girl, \"Sometimes, she just needs a shoulder to cry on, or someone to distract her from a problem in her life. I'm happy to provide those too. Always.\"\n\nEmily found it increasingly hard to concentrate. It still felt weird when she remembered who it was down there, but when her sister slowly slid her face around, the discomfort melted away, replaced by pure physical stimulation. Stephanie was using her nose, lips, tongue and chin to gently massage Emily's sex, lightly at first, then with increasing pressure once the area was thoroughly lubricated.\n\n\"I- I know she looks up to me, and I do my best to fulfill every expectation she has. I can only hope I'm doing as good a job as she is.\"\n\nThe older sister couldn't help but fall back into her pillow. She clutched her sheets and enjoyed what was happening to her. If someone were to enter their room in that moment, all they would see was a young girl laying in her bed, in her pajamas, her covers bunched up over the lower half of her body. Few would realize she was lost in sexual pleasure, particularly because of her own sister's actions.\n\n\"And I'm also in awe of her skills. She's so much better at sports, and social stuff too.\"\n\nAnd no one would ever come close to Stephanie's amazing oral skills.\n\nIt was beautiful, yet completely effortless. It seemed just as natural to move her hips, to gyrate against the teen's face. In a way, this was as much of a conversation like any other between them. She felt Stephanie's care and affection with every stroke. In turn, she responded with sounds of appreciation, while giving the teen's motions a natural rhythm, pushing herself closer to her inevitable climax.\n\nShe rambled freely between breaths, as thoughts came to her, \"I think sex would count as both sports and a social activity, right? Of course, it doesn't hurt that she's got the perfect body of an underwear model. Even though we've grown up together, and I haven't really looked at women in that way, I think as an artist I can appreciate the aesthetic qualities of the woman she's become.\"\n\nLost in the pleasure, she trailed off as she enjoyed their intimate dance, Stephanie's face massaging her most sensitive spots rhythmically. Soon, her body told her to pick up the pace. Beautiful feelings grew in intensity and threatened to overwhelm her. Instinctively, she held the girl's head against herself and ground her hips faster and faster. Her pussy made wet sounds against her sister's smooth face, the two sets of lips never breaking contact, the nose stimulating her clit again and again.\n\nAs the pleasure enveloped her, her breath grew shallow. Both girls knew the twenty year old was on the verge of a powerful orgasm, quickly approaching the point of no return. A brief thought about her sister's limits crossed her mind. It was quickly dispelled when the teen's hands gripped her bottom to press her face deeper into her sex. This physical proof that Stephanie wanted what they were doing, maybe even enjoyed it, started the avalanche.\n\n\"Shi-\", was all Emily could utter before the pleasure skyrocketed into blinding heights, drowning out everything. Face contorted in orgasmic ecstasy, she arched her back. Her bottom rose from the bed as her instinct forced her to close her thighs around the girl's head, holding her close with her hands as if her life depended on it. She froze in that pose for a second, muscles tight, her whole body shivering.\n\nThe shivers gave way into spasms and she found herself breathing and squealing in sync with her body moving involuntarily. Her hips moved to maximize the pleasure, riding the girl's face wave after beautiful wave. More fluids escaped with each contraction as her pussy worked around the teen's face, bathing Emily in pure pleasure.\n\nWhen the euphoric waves receded, her bottom returned to the bed. She relaxed her arms and legs, freeing the girl who was so dear to her, now more than ever. Stephanie was in no hurry though. Emily swallowed and breathed deeply. Her face and breasts flushed as she enjoyed her afterglow while her sister's loving tongue slowly licked up Emily's effusions, avoiding the most sensitive areas.\n\n\"Jesus, Steph,\" she said between breaths, \"Why?\"\n\nStephanie's face emerged, framed by the covers like a hood, \"Why what?\"\n\nEmily smiled at her sister's adorable appearance.\n\n\"Why do you have to be so good at this?\" she asked just as the scent reached her, leaving little doubt about what it was that was glistening on her sister's cute face.\n\n\"I just imagine what would feel good and-\"\n\nThere was a knock on the door.\n\nThe sisters shared a split second of sheer panic.\n\nIn quick succession, several things happened. Stephanie threw up Emily's covers and bolted to her own bed. Emily, realizing she was laying bottomless just feet from the door, scrambled to pull her bunched up covers over her nude midsection.\n\nJust as Stephanie landed on her bed, the door opened. Their dad's face, barely visible in the dim light, met the girls' gaze.\n\n\"Guys?\" he said, hushed, \"Everything OK?\"\n\nEmily's heart was pounding. She wanted to scream, but managed only a weak, \"Yeah.\"\n\nShe could feel a cool breeze on her legs and prayed she had enough cover to hide the fact she was bottomless.\n\n\"Steph, everything OK?\" dad asked.\n\n\"Yeah,\" Stephanie managed to reply, \"What is it?\"\n\n\"School tomorrow,\" Dad said in a strict parental voice, \"Stop fooling around and go to sleep. Night.\"\n\n\"Night, Dad,\" Stephanie replied.\n\n\"Yeah,\" was all Emily said just before the door closed again.\n\nThe sisters looked at each other and whispered the same word, \"Fuck.\"\n\n-\n\nSamantha couldn't take her eyes off Emily. Her friend was sitting across the table in a vacant section of the mall's food court, looking down at her chicken nuggets. She didn't move since she finished her story about being caught yesterday. With a pale face and rings under her green eyes, she looked like a ghost.\n\n\"Don't stare, you're making me feel even worse,\" Emily objected.\n\nSam looked away. \"Sorry, but. Do you think he... saw?\"\n\nEmily shook her head, \"I don't know. I'm pretty sure he could have seen my bottoms on the bed. And he might have smelled something.\"\n\n\"He still might not figure it out.\"\n\nEmily threw her a withering glance. She leaned in close and continued in a low voice, \"He probably heard me when I came. Then even after knocking he probably saw Steph jump on her bed, while I was barely covered. The smell of sex, the pics I painted... Sam, he's not stupid.\"",
        "\"Right, sorry.\"\n\n\"No, I'm sorry. I know you're just trying to help,\" Emily sighed, \"I'm just so tired. Didn't really sleep well afterwards. Then the stuff in the morning.\"\n\n\"What happened? Did he talk about it?\"\n\n\"Not directly, thank God. But he said we need our own rooms. One of us would move into his room and he'd sleep on the couch until we found another solution.\"\n\n\"Did he say why?\"\n\nEmily shook her head, then added grimly, \"I think he doesn't trust me with her. I've always been the broken one. Makes sense I'd be the one to pervert and defile her.\"\n\n\"That's bullshit, Em.\"\n\n\"I could never hurt Steph!\" Emily was on the brink of crying.\n\nSam stood and walked around the table to sit next to Emily. She hugged her from the side, \"I know, Em. Stephanie knows it too, right?\"\n\n\"I hope so,\" Emily looked in front of her, \"Thanks for being here, Sam.\"\n\nSam shook her head and held Emily's shoulder, \"It's nothing.\"\n\nEmily took a deep breath. She looked calmer already, \"So how are things with you and Matt?\"\n\nSam let go and leaned back, sighing.\n\n\"About the same,\" she shrugged, \"Not amazing I guess. I've been thinking about calling it quits, but I guess I still love him despite everything.\"\n\n\"You should talk to him about it,\" Emily suggested, \"Give him a chance to clean up his act.\"\n\n\"I guess so,\" Sam replied, \"I just didn't have the heart-\"\n\n\"Do you think Steph and me is wrong?\" Emily interrupted. Sam didn't mind, Emily was clearly still occupied by her current crisis.\n\n\"Of course not,\" Sam shook her head.\n\n\"So it's OK for us to be together, as more than sisters?\"\n\nSam giggled, \"Sorry, but I'm so biased I would say it's OK no matter what. You know how I feel about your relationship with Steph.\"\n\n\"How?\" Emily briefly looked at her friend.\n\nShe knew, but she obviously wanted to hear it. Sam was glad to oblige.\n\n\"You two are perfect together,\" she had to look away, sheepishly grinning, \"Maybe I was getting a bit jaded about relationships and stuff. With Matt too. But when I see you and Stephanie together, I feel like there is still true love around. Even if you're not in love, romantically I mean. I've just never seen such a perfect couple.\"\n\n\"Well, it's a strong feeling of... affection I guess? But I don't think I could really fall in love with her. If we're talking romantic. It's a bit of a crush. Maybe. In the right moments.\"\n\n\"Really? You have a crush on Stephanie?\"\n\n\"Don't read too much into it. I just don't know what to call it. But she can be so cute sometimes, and I care so much, my heart just responds,\" Emily shrugged, \"I don't know. Maybe it's just a big sister thing. I want to hug her and be close. And it's important what she thinks about me. It's kind of like you want the person to think highly of you. But maybe I just want to be a good role model.\"\n\n\"I'm not sure I can tell you what it is, Em.\"\n\n\"That's OK, just listening is enough,\" Emily said. A gentle smile crept into her face, \"See, there's the way she acts towards me. She looks at me like she really admires me. It may just be her being a little sister, but it's beautiful to be looked at that way. I love it. And when I'm affectionate towards her, she takes it all and gives it back too.\"\n\nEmily brightened, \"Did you know humans release oxytocin during sex?\"\n\n\"Uh-uh,\" Sam shook her head.\n\n\"Yeah, I read about it when I tried to figure this all out. It's called the love hormone, because it helps with bonding. Maybe that's what's been happening with Steph and me.\"\n\n\"You think that you, what, bonded with Steph?\" Sam wasn't sure she understood.\n\n\"It's strange when you put it that way, but think about it. I'd never have sex with her if it wasn't for that mistake. I still can't believe it sometimes. But it happened, and it was so good, it made us try it willingly. I think it changed something in both of us. Like, I've started noticing things about her I never did before, the way she moves, how she smiles, how beautiful she is.\"\n\n\"And you think that's the hormones?\"\n\nEmily nodded, \"It has to be.\"\n\n\"But that doesn't make it any less valid,\" Sam argued, \"I mean, biology works on all of us. So what?\"\n\n\"My point is it wasn't supposed to happen,\" Emily said, \"If it had been anyone else at the club, I might have fallen for them.\"\n\n\"That's how all relationships start, it's just a coincidence I met Matt and fell in love with him.\"\n\n\"Yeah, I guess,\" Emily nodded, \"But can I still be her big sister?\"\n\n\"Why not?\"\n\n\"I don't know, it's still weird sometimes. The old image is still there.\"\n\n\"Old image? Sorry, this is all so confusing,\" Sam admitted.\n\n\"Yeah,\" Emily laughed, \"Welcome to my world. What I mean is sometimes all I see is my little sister and I wonder how I could ever view her as anything else. And I've told her that. I want to stay her sister.\"\n\n\"How did she take it?\"\n\n\"She liked it.\"\n\n\"Really? Wait, I mean, isn't that like a rejection of all the sexy stuff?\" Sam replied, then couldn't hold back a grin, \"Or are you now into the incest stuff like I am?\"\n\nEmily scoffed, but smiled, \"Come on. No, it's not about that. I just value our sisterly relationship. I want to be her big sister. It's a good thing to be. We're definitely not into, uh, it, like you.\"\n\n\"Can't blame me for trying,\" Sam shrugged apologetically.\n\n\"For trying to make two sisters into lovers?\"\n\n\"Hey. If we had more of such relationships around, the world would be a better place,\" Sam gestured with wide arms, \"At least as far as I'm concerned.\"\n\n\"But then you'd never come out of your room, cause you'd be jilling it to all that depraved porn. Which would just be documentary at that point,\" Emily grinned.\n\n\"Case in point,\" Sam laughed, then sighed blissfully, \"A girl can dream.\"\n\n\"Well, you've done your part of making it reality,\" Emily teased.\n\n\"I did good, didn't I? Or do you regret what you two did?\"\n\n\"No, I don't,\" Emily said, \"We have our downs, but I don't regret anything I did with Steph. God you should have seen it yesterday.\"\n\n\"I'd have loved to,\" Sam smiled.\n\nThough despite her support, Samantha wasn't sure how she would react to actually seeing the sisters get into it. She never wanted to do it with another girl, let alone her best friend. But there was something incredibly enticing about Emily and Stephanie. Would she really enjoy being there?\n\nAs if to fuel Sam's fantasies, Emily leaned back and closed her eyes, saying in a dreamy tone, \"The way she moved, how she used not just her mouth, but her whole face.\"\n\nSam was getting wet just from the talk, in a public place no less.\n\n\"And her hands?\" she asked.\n\n\"Not her hands,\" Emily shook her head, \"She used them to hold onto my bottom as she pushed her face-. Well anyway, I've never had a guy do that. We were so in sync.\"\n\n\"This has to be because you're sisters, right?\"\n\n\"Why would that make a difference?\"\n\n\"Just think about it, you've known each other for a long time. And she's similar to you, physically, right? Makes sense if she wanted to make you come, she'd be the perfect person to do it-\"\n\n\"There's more than just the physical side, Sam,\" Emily interrupted.\n\n\"Sure, there's the understanding, compatible personalities, caring for each other. All stuff you two have loads of.\"\n\n\"But what about the mystery? The unknowns in a new relationship? That's kind of interesting too.\"\n\n\"It's not that long that you've been having sex with her,\" Sam said, \"And you've not been in an actual relationship with her at all.\"\n\n\"I can't even imagine how that would go,\" Emily sighed.\n\n\"See? There's plenty of new ground to be discovered,\" Sam grinned.\n\n\"Wait, you're just saying all of that because it's your fetish,\" Emily smiled at her, then looked away, \"I don't think I'm ready for a relationship. But it's true that there is, well, stuff, I'd like to try with her still. And maybe one day I will be ready to commit long term, not just as a sister.\"\n\n\"But you may have to keep the two of you a secret. Some people might not understand.\"\n\n\"Like Dad.\"\n\nSam nodded.\n\n\"I mean, the sex alone would be enough.\"\n\n\"That's the spirit,\" Sam smiled.\n\n\"I just hope he won't throw me out of his apartment. He's always liked Steph more, and if he thinks I'm still a bad influence-\"\n\n\"You could come live with me.\"\n\nEmily looked at her silently.\n\n\"Would that be so bad?\" Sam continued.\n\n\"No, actually that sounds pretty good. But I'll have to think it through. You know how I am.\"\n\n\"Take as long as you like, I'm just saying it's an option. Besides, it's basically my fault that the two of you, um, got involved. Makes sense for me to do something to fix it.\"\n\n\"Thanks Sam, I think you've really helped,\" Emily hugged Sam, \"And thanks for getting me involved with my sister.\"\n\n\"Hey,\" Sam spread her arms theatrically, \"Isn't that what friends are for?\"\n\n-\n\nFriday evening, Emily plopped down on Sam's bed and relaxed.\n\nIt felt good not having dad breathing down her neck all the time. These days he stayed home more often than not, especially when the girls were home as well. As if he was watching them. Watching her.\n\nBut she could get used to this. Even now, minutes after Sam left to spend the night with Matt, Emily was wearing nothing but her green T-shirt and black panties. She was sure Sam would approve. It was warm and Emily was getting used to this apartment surprisingly quickly, and to Sam's company.\n\nNow though, Emily was left alone and with not much to do.\n\nShe quickly dialed Stephanie, hoping her sister would come over. They had an apartment for themselves, the things they could do together were too good to imagine.\n\n\"Hey Em, Dad says you went to Sam's?\"\n\n\"Yeah, for the weekend, I needed to get out of there.\"\n\n\"It hasn't been the same since Monday, has it?\"\n\nEmily hummed in agreement, subconsciously tracing her right nipple with the fingers of her left, \"I'm thinking of moving in with Sam for good. Want to come with me?\"\n\n\"With you?\"\n\n\"Yeah, maybe just for the weekend, but if we all like it, maybe something permanent could be arranged,\" Emily said, smiling.\n\nBut Stephanie's voice stayed neutral, \"He's not a bad guy you know.\"\n\n\"Who?\"\n\n\"Dad.\"\n\n\"I know, I'm not saying he's bad,\" Emily replied, \"What does it have to do-\"\n\n\"Then why are you doing this?\" Stephanie interrupted her, \"Why are you running away?\"\n\nStephanie's words felt like a punch to Emily's stomach.\n\n\"I'm not- I... where is this coming from, Steph?\"\n\n\"Don't be like that,\" Stephanie said in a disappointed voice.\n\nEmily could barely believe her sister's reaction. She expected Stephanie to be overjoyed at the possibility of jumping that shipwreck and be together with her sister, for however long and in whichever ways they wanted. Instead, Emily felt like the subject of a criminal investigation.\n\n\"You didn't stop for one second,\" Stephanie said, \"to think of how dad would feel if you, or even both of us, left him? Abandoned him? Over, you know what?\"\n\nEmily was silent.\n\n\"Do you even think about anyone else but yourself?\" Stephanie said, breathing deeply. She was on the verge of crying.\n\nEmily wanted to comfort her sister, regretting she wasn't with her. She swallowed uncomfortably.\n\n\"First mom dies,\" Stephanie went on, \"then the stuff after the club and now you just want to go, like it all meant nothing?\"\n\nStephanie started sobbing, \"I just want to be a family again. Say something already.\"\n\n\"Stephanie, I'm sorry,\" Emily said, \"I wish I could make it better somehow. Tell me what to do.\"\n\n\"I don't know,\" Stephanie said quietly.\n\n\"I'll come home, we'll talk it out.\"\n\n\"No, you already said you'll be gone for the weekend. I think I need a bit of space now.\"\n\n\"Of course,\" Emily said, \"Just tell me that you'll be OK.\"\n\n\"I think so, thank you,\" Stephanie replied, \"Bye.\"\n\n\"Bye,\" Emily said, adding, \"Love you.\"\n\nDid Stephanie even hear her? She felt like calling her again, but what could she say?\n\nStephanie wasn't usually this emotional unless something really bothered her. She remembered all the joy she experienced with this girl in the past weeks, but now a terrible notion came over her.\n\nWhat if Stephanie really just wanted to be a family?\n\nPerhaps everything that happened after the night at the club, all the time they spent together, all those intimate night talks, the closeness, even the sex, was just a way for Stephanie to hold their shaky family together - to keep her sister from leaving, one way or another.\n\nSurely Emily would be able to tell the difference.\n\nShe sat back and idly browsed on her laptop as she recounted the times they crossed the border.\n\nThe encounter at the club was strange, yet amazing. She barely believed it really happened. And every time since then felt like that. Still, it would always remain separate from the rest of their relationship.\n\nBut then there was that night Emily first made Stephanie orgasm. It was as weird as it was beautiful to connect on an intimate level. Emily had realized Stephanie had a sexual side just like everyone, and it wasn't scary or disgusting, but rather teasing and sweet, just like the girl.\n\nBut what about the night after their \"date\" at the amusement park? They had a wonderful time, then later brushing each other's hair, but Emily got excited and made it sexual. It was the first time Emily took the reins of the sexual happenings, pushing for more. Stephanie simply went along. Back then Emily wanted it so much, she was willing to get into a sixty-nine with Stephanie, to kiss another girl's sex for the first time, just to get that high in return.\n\nThen there was the time the girl stripped just to be with Emily during their painting sessions. Was the first session Stephanie's idea? She wasn't sure, the older and younger sister just naturally fell into their roles of artist and subject. Only this time it was with a distinctly erotic tone to their activity. Emily couldn't shake the feeling she was taking advantage of Stephanie.\n\nThe second time it was under the pretense of Stephanie losing a bet. Was it a pretense? Stephanie said she knew she didn't have to do it, but Emily was confident and commanding by that time. The younger sister might have felt like she didn't have another option, not if she wanted their family to stay together. Emily was dominant enough to order Stephanie to delay her orgasm until she was done painting. Thinking back on it, Emily realized how much control she really exerted over the teen to be able to do that.\n\nLast Sunday at Sam's, it happened again. They stopped when Stephanie was uncomfortable being touched in front of Emily's friend, but finally gave in at night when Emily tried a second time. Emily told herself at the time that Stephanie must enjoy receiving pleasure. But even if her sister did, Emily may still have been forcing herself on her.\n\nBecause just this Monday, Stephanie clearly didn't want to do it, she even said so. But Emily enamored her by telling her what an amazing bigger sister she would be, how she would always be there to protect Stephanie, until the teen yielded. The girl even wanted her to continue saying how much Stephanie meant to her, all while her little sister went down on her. What Stephanie did felt much better than just going down, but whatever it was, she shouldn't have to do it to receive a confirmation of their sisterly relationship, or a promise to keep their family together.\n\nNo matter her sister's motivations, Emily found herself wet, her body responding to the thoughts of all the stuff they did together. At the same time, the growing uneasiness about what she did to Stephanie was overtaking her. The beginnings of a panic attack stirred deep within, but this time, she kept her emotions in check. This wasn't about Emily, but her sister.\n\nGetting up, she walked to the window and noticed her own reflection in the falling darkness outside. Her erect nipples made bumps against her shirt. They reminded her of Stephanie's, except Stephanie's were cuter, just like everything about her.\n\nShe opened the window to get rid of the intrusive thoughts and take in the fresh evening air. Aside from sounds of traffic, a pattering murmur caught her ear. The reflections of streetlights flickered on the street below. It was starting to rain. She took a deep breath as she leaned against the window sill. The summer air was rich in scents of grass and warm pavement. It helped clear her head.\n\nWhat if Stephanie really went through all of that just for the sake of her sister?\n\nThe idea was almost unbelievable, but was quickly gaining a frighteningly plausible dimension. While Emily was fond of dad, Stephanie was always closer to him. After mom's passing, she'd do just about anything to save what remained of their family, including sleeping with her sister apparently.\n\nShe knew Stephanie didn't want to talk, but couldn't resist texting her anyway.\n\n\"Sorry about leaving. Dont want to hurt you or dad. I will do whatever to make it better. ILU\"\n\nA few minutes later, Emily was still watching the rain, when she got the reply.\n\n\"TTYL\"\n\nTalk to you later, that's all she says. Now at least Emily had it loud and clear, Stephanie was in no mood to talk. A few seconds later, another message came in.\n\n\"ILU2\"\n\nEmily couldn't help but smile, a warm tickle spreading above her stomach. Stephanie still loved her. She remembered how Stephanie beamed when Emily revealed she'd stop dating Stephen.\n\nWas this how Stephanie felt too?\n\nEmily closed the window and walked back to the bed to sit in the same place Stephanie was when she received the message about Emily being available. This was the best she could do at being close to her at the moment.\n\nShe kept looking at the last text message, enjoying the tickles. Sex with Stephanie was unlikely from now on, but she could deal with that, as long as they stayed sisters.\n\n-\n\nEmily jerked awake at the sound of a buzzer.\n\nShe looked around, confused for a few seconds until realizing she nodded off on Sam's bed. According to her phone, she had slept for less than half an hour.\n\nAgain the buzzer sounded.\n\nIt was almost ten, could it have been Sam?\n\n\"Hello?\" she said into the intercom.\n\n\"Em?\" said a high voice, \"It's Steph, can you open the door?\"\n\n\"S-Steph?\"\n\n\"Yeah, Stephanie, your sister, remember? The annoying brat?\"\n\n\"I remember,\" Emily smiled and pressed the button to let the cheeky teen inside.\n\nShe opened the door to the apartment. Moments later Stephanie came bounding up the stairs and tackled her in a hug.\n\n\"You're wet,\" Emily protested.\n\n\"Jeez, cool down, I'm barely through the door,\" Stephanie replied.\n\n\"And yeah, you're cold too.\"\n\n\"Oops, sorry,\" Stephanie let go and closed the door, \"It's pouring out there.\"\n\nHer hair was dripping wet, as were her clothes, but her smile was brighter than ever.\n\n\"Sorry for barging in like this,\" she said, \"but where's Sam?\"\n\n\"No it's-\" Emily trailed off, \"She's gone out, with Matt... Steph, what are you doing here?\"\n\nShe still couldn't believe her sister was there.\n\n\"I-\" Stephanie started, then shivered.\n\n\"Wait a sec, you need to get out of those clothes now. You're soaked.\"\n\nStephanie lifted her eyebrows suggestively, \"But you look ready for bed.\"\n\nEmily remembered she had no pants on. Despite their no-bra rule at home, walking around in panties was uncommon. She was severely underdressed, especially compared to her sister in shoes, jeans and jacket.\n\nBut Stephanie was more important.\n\nEmily rolled her eyes, \"Shut up. Shoes off. To the bath. I'll get you dry clothing.\"\n\n-\n\nTen minutes later, Stephanie returned from the bathroom, freshly showered and dressed in Emily's spare clothes, a white T-shirt and gray sweatpants.\n\nThe sisters often borrowed clothes from one another so Emily wasn't surprised to see both items fit her sister well.\n\nEmbarrassed to realize she's been sizing the girl up, she looked down at the laptop on her legs.",
        "\"Do I need these too?\"\n\nThe teen was holding up Emily's white panties.\n\nEmily groaned, \"Don't be squeamish, they're clean.\"\n\n\"I'm not squeamish,\" Stephanie grinned, \"You know that.\"\n\nEmily felt a drip of arousal when she realized what her sister meant. Did Stephanie do that on purpose, or was Emily so damaged by now?\n\nWhen the older sister didn't reply, Stephanie sighed. \"OK then, if you don't want me to soil your sweatpants with my dirty privates, I'll put them on.\"\n\nShe grabbed the hem of the sweatpants, ready to strip in front of her sister.\n\n\"Wait, no!\" Emily shook her head, \"I mean, your privates are not dirty. Nothing about you is dirty.\"\n\nStephanie rewarded her with a sweet smile.\n\nFlustered, Emily continued, \"I mean, it's unhealthy not to wear them.\"\n\nHer sister scoffed and waved her hand.\n\n\"That may not be important to you,\" Emily argued, \"But it is to me. Please go back to the bath and put them on.\"\n\nAnother mysterious smile.\n\n\"Well, as long as we're talking health,\" Stephanie put up a finger, \"It's actually unhealthy to wear them for bed.\"\n\nEmily's heart skipped a beat, \"What?\"\n\n\"You wouldn't want me to catch a fungal infection, right?\" the teen asked innocently.\n\n\"No, of course not,\" Emily replied, \"but you're not going to spend the night.\"\n\n\"But it's pouring out there! You can't send me home in my wet clothes!\"\n\n\"Yeah, that's right,\" Emily nodded, \"OK then, you can stay. But don't get your hopes up, no fooling around.\"\n\nEmily would try to keep her hands off her sister for a while. She had to.\n\nStephanie scoffed, \"You're the one who keeps bringing that up. Besides, you called me to come over.\"\n\nLooking away, Emily took a deep breath to relax. Her horny body wasn't helping her win these playful arguments with Stephanie.\n\n\"Hey, you get to wear shorts!\" Stephanie said when she sat down next to Emily. \"It's not fair.\"\n\nEmily had put on her loose black shorts while Stephanie was in the bath. Her legs were still uncovered, but it was better than sitting next to her sister in just panties. She actually liked how the shorts made her legs look, contrasting with her pale skin and showing off her curves. In a bit of sibling rivalry, she didn't mind proudly displaying those in front of Stephanie.\n\n\"You want to wear shorts, you should have brought some,\" Emily stuck out her tongue.\n\n\"It's OK, I don't need no shorts to show off,\" Stephanie ran her hands along her sides, \"I can look good in sweatpants too. And if you want to compare legs, I can have them off in no time.\"\n\n\"You slut!\" Emily shook her head.\n\nStephanie froze. Emily immediately regretted her words.\n\n\"Wait, y-you know I was joking, right?\" She looked into Stephanie's green eyes until the girl smiled, \"You are very selective about who can see you with your pants off.\"\n\n\"I am,\" Stephanie returned her gaze.\n\nEmily, her heart beating fast, looked to her laptop and started a fail compilation video on YouTube with the sound turned low. In a way, Stephanie was acting just the way Emily had hoped for. But from a different point of view, things were going badly.\n\nSeconds later, Stephanie's shoulder pressed against her, \"Hey Em, sorry for being an asshole on the phone earlier. Mood swings, you know. Anyway, that doesn't mean it's okay to be an asshole.\"\n\nWas it that time of the month for Stephanie already? Emily didn't feel it yet, even though they were usually in sync. But the girl sitting next to her did sound entirely different than the one earlier - with her warmth and gentle scent coming from her still damp hair and skin. She loved this one.\n\nEmily took a deep breath and felt invigorated. She glanced to her side to see Stephanie looking back, lips seductively parted. She turned back to the laptop and frowned. Was it in the air?\n\nShe started feeling it as soon as Stephanie sat down next to her. Was it possible their pheromones had this effect on each other? Even now, she felt stronger for her, more positive about everything. It was almost a physical attraction. This was crazier than Emily's oxytocin theory. Her glance kept wandering to her sister's face.\n\n\"What are you thinking about?\" Stephanie asked.\n\n\"Oxytocin and pheromones?\"\n\n\"What?\" Stephanie frowned.\n\nEmily shook her head, \"Forget about it. You were right on the phone. I wasn't thinking about dad at all. Or even you in a way.\"\n\n\"You weren't?\"\n\n\"I mean, I didn't realize you just wanted to be a family.\"\n\n\"I do... is that bad?\"\n\n\"No, I-\" Emily started, \"I mean, I thought you wanted to be with me, like-\" She trailed off.\n\n\"You thought I was in love with you?\"\n\n\"Maybe, I don't know. The point is, it's wrong for us to... you know, do it, if you just want me and dad to be with you. Like a normal family, you know?\"\n\n\"I guess, but what do you want?\"\n\nEmily shrugged, \"The thing is, you were always closer to dad. But you also need me to be your sister.\"\n\n\"I do. I thought that's what you wanted.\"\n\nEmily still wasn't making herself clear. It was hard to focus with her sister this close.\n\n\"Yeah, but what if you only did the, uhm, non-sisterly stuff to keep me around? You know, after I almost went away that time. It would be wrong if that's the only reason.\"\n\n\"No, it's not like that,\" Stephanie reacted, then went on slower, \"I did the naughty stuff because I wanted to, I think...\"\n\n\"But what if you were just scared I'd be gone,\" Emily continued, \"And did whatever you thought I wanted to keep me around?\"\n\nStephanie sounded uncertain, \"I am scared of that, but I don't think I did it just for that-\"\n\n\"What if I pushed you into it every time?\"\n\n\"Wait,\" Stephanie said, \"This is the manipulation talk again, right? I can make my own decisions.\"\n\n\"And stick to them?\"\n\n\"Sure.\"\n\n\"On Monday you said the same thing, and that you decided we won't do it.\"\n\n\"Well, yeah,\" Stephanie said, looking past Emily, \"But you were so sweet I couldn't help it. I wanted to-\"\n\n\"Reward me for being a good sister?\"\n\n\"Uh-huh,\" Stephanie hummed.\n\n\"With sex?\"\n\n\"Uhh-huh,\" she hummed again, slower, \"but it felt good, right?\"\n\n\"That's not the point. I seduced you. And if you stay the night, it might happen again. Dad was right to worry. Does he even know you're here?\"\n\n\"Wait, back up Em, the thing with dad was my fault,\" Stephanie said, \"I think I was only offloading my worries onto you.\"\n\n\"But you were right, I wasn't thinking of him.\"\n\n\"I can be both right and an asshole at the same time.\"\n\nEmily hugged her sister from the side and smiled, \"Anyway, I think neither of us was a good daughter recently. But what we do is between us, right?\"\n\n\"Now you're making sense,\" Stephanie smiled back.\n\n\"But are you sure you weren't just doing all of this to keep me as a sister?\"\n\nStephanie shrugged, \"I don't know. I don't think so. I just want to be close to you, what else do you want me to say?\"\n\n\"I want to make sure I didn't take advantage of you.\"\n\n\"You didn't,\" Stephanie laid her head on Emily's shoulder and closed her eyes, \"I liked everything we did as much as you. Maybe more.\"\n\nStephanie breathed in deep through her nose.\n\n\"I love your scent. What are you wearing? It's amazing.\"\n\nEmily remembered she hadn't put on deodorant after her shower. She fidgeted, trying to move her armpit away from her sister's nose.\n\nThe girl looked up, \"What is it? What's wrong?\"\n\n\"Sorry,\" Emily explained, \"I'm not wearing anything. I don't want to make you uncomfortable.\"\n\n\"You're not,\" Stephanie giggled and held on to Emily's waist, \"This is weird, but I guess I like how you smell.\"\n\n\"It is a bit weird,\" Emily breathed out. Stephanie's closeness was having an effect on her.\n\n\"Deal with it, cause I'm not letting you go. It's high time I gave you one of my tight hugs.\"\n\nEmily groaned.\n\n\"Oh shut up,\" Stephanie said, \"I came in unannounced, stole your clothes and I'm currently doing my best to squeeze the crap out of you. While I sniff your armpits like a creep.\"\n\nEmily nodded, \"Let's call it a sweet creep.\"\n\n\"But the point is you love it,\" Stephanie said, \"and we both know it.\"\n\nHer breath was wonderfully warm through the shirt.\n\nEmily rubbed her sister's side with her hand, \"Yeah, I kind of do. I like being close to you.\"\n\n\"Same here, except a weird part of me also likes your scent. That's not really normal for sisters, right?\" Stephanie wondered, \"And it's strange I never noticed before.\"\n\n\"I also like yours, I don't know if it's normal. Then again, I also kind of like my own, you know? Maybe we're just similar and that's what works here. It's like home. It's relaxing.\"\n\n\"I guess so.\"\n\n\"Or maybe-\" Emily trailed off, biting her lip. She was uncertain whether Stephanie would appreciate her other theory.\n\n\"Go on,\" the girl encouraged.\n\n\"Maybe it's pheromones. You know, chemical signals between close people.\"\n\n\"Is your body trying to tell me something?\" Stephanie teased.\n\nEmily thought for a second, then nodded.\n\n\"Yeah, it's trying to tell you,\" she said, \"I'm your sister. I love you and you're safe with me.\"\n\nStephanie rested her head on Emily's shoulder and breathed in deeply, \"I like that message.\"\n\n-\n\n\"Em?\" Emily heard from her left.\n\nLike most siblings, they argued who would sleep where, until Emily agreed to take Sam's bed in the corner of the room. Stephanie would sleep on the mattress right next to it. Both had wanted for the other one to take the comfy bed.\n\n\"Yeah?\" Emily replied and opened her eyes.\n\nThe moon must have come out from between the clouds, because the silvery light entering through the big window lit the room enough to comfortably move around, while still keeping it dark enough to sleep in.\n\n\"I just remembered...\" Stephanie paused, \"Did you take off those black panties you had on earlier?\"\n\nWhat kind of question was that? Was Stephanie about to make this sexual? One part of Emily definitely hoped so.\n\n\"No, why?\"\n\n\"I think we agreed it's unhealthy to wear them to bed,\" the teen argued, \"Especially under those shorts.\"\n\n\"Nah, it's fine.\"\n\n\"No it's not,\" Stephanie said firmly, \"Either you take them off or I'll do it for you.\"\n\n\"Maybe that's what I'm hoping for?\" Emily joked, then caught herself, \"Wait, sorry, that was dumb.\"\n\n\"Don't spoil it!\" Stephanie stopped her, \"I was hoping for it too. But it's OK. If you don't want me to touch you, I won't. But I need to know that you're not damaging your health.\"\n\nOnly now Emily understood how her sister felt when she was being overprotective.\n\nStephanie's concern was a bit ridiculous, but it was also touching. It felt beautiful to know her little sister cared for her, warmth spreading deep inside her.\n\nWhat was this feeling? She wasn't falling in love. This wasn't the breathless abandonment of reason, the idolization she experienced when crushing on guys. It was more like endless comfort, safety and affection. She wanted to cuddle up to Stephanie and never let her go.\n\nExcept if she did, she might want much more than that.\n\nShe heard rustling from below and looked to her left. Stephanie's cute face was sticking out from beside the bed, her chin resting on the edge. Her gaze was towards Emily's midsection.\n\n\"I'm waiting for you to take them off,\" she explained, \"But I'll wait like this until I know you're safe. No touching, I promise.\"\n\n\"I want you to touch me,\" Emily finally admitted.\n\n\"Really? Why didn't you say so?\" Stephanie asked, curious.\n\n\"I guess I'm still a bit worried.\"\n\n\"About dad?\" her sister suggested.\n\n\"No. Well, that too, but mostly that I don't take advantage of you,\" Emily explained, \"I mean, how do I know you're not just yielding to my desires, just doing it all for me not to... panic, or even kill myself?\"\n\n\"Isn't it enough if I just tell you that's not how it is?\"\n\n\"Not really. You could be saying that so I'm not worried.\"\n\n\"Oh God,\" Stephanie groaned and flopped onto her mattress.\n\n\"Sorry if I'm being difficult,\" Emily said, \"I only want to be sure I'm doing what's best for you.\"\n\nEmily took a deep breath. She was growing more frustrated by the second, but was adamant that it had to be done for her sister.\n\nThen Stephanie's head was on the bed again, framed in her short pixie hair. Was she smiling?\n\n\"Is it about the panties?\" Emily asked.\n\n\"That too, but I've got another thing for you to ponder,\" Stephanie said deviously.\n\n\"What would that be?\"\n\n\"On Monday, how scared were you when dad caught us?\" Stephanie asked.\n\n\"Pretty bad. Why are you asking?\"\n\n\"Just bear with me. When Dad separated us, you said he might be right to worry about you doing something bad to me. How did you handle that?\"\n\n\"I felt so guilty I couldn't think straight,\" Emily said, \"Steph, I'm getting worried again.\"\n\n\"And you're still thinking I might have had sex with you just to support you when you made a move on me, right?\"\n\nThe teen's questions were making Emily more and more uncomfortable.\n\n\"I mean, it's a possibility,\" Emily argued, \"What are you on about, Steph? I really don't like this.\"\n\n\"Is it bad enough for a panic attack?\" Stephanie asked.\n\n\"I don't know, maybe.\"\n\nShe felt Stephanie's hand on hers, barely touching.\n\n\"But your breath is stable and your hands aren't cold,\" Stephanie said, \"You look quite calm to me, Em.\"\n\n\"So I'm heartless, is that what you want to say?\" Emily was irritated.\n\n\"I'm saying,\" Stephanie replied and gently squeezed her hand, \"You are stronger than you think.\"\n\n\"You said that before. Back when you took me skating.\"\n\n\"What a day that was, right?\" Stephanie said affectionately.\n\nEmily smiled, \"Yeah, it was. It was perfect. Except for that panic attack.\"\n\n\"You managed that well too, but you are much stronger now.\"\n\n\"I still feel like shit when I worry.\"\n\n\"That only means you're a good person. And you are, Em. But no trouble breathing, no shakes. You've made a lot of progress.\"\n\n\"You're right,\" Emily smiled with relief.\n\n\"And I will still support you whenever you need me,\" Stephanie continued, \"And you will support me.\"\n\n\"Of course, I promise I will.\"\n\n\"But my point is, you're not dependent on me. I could reject you if I wanted to and I know you'd be OK-\"\n\nEmily finished her sister's thought, \"Which means you went along because you really wanted it, not just for us to stay a family, or because I couldn't handle rejection.\"\n\n\"There you go,\" Stephanie said.\n\n\"Did you just use logic and rationality to convince me that we really should have sex again?\"\n\n\"Well, they do say people evolved brains to talk themselves into fucking each other,\" Stephanie replied, \"And I had a good teacher.\"\n\n\"Aw you, with that sexy brain of yours.\"\n\nSeconds later, Stephanie added, \"Yeah, you could say your intellect rubbed off on me. Of course that's not the only thing of yours that rubbed off on me.\"\n\n\"God, here come the puns,\" Emily groaned, but the image was arousing.\n\n\"Ready?\" Stephanie continued, \"Your, ehm, logic, rubbing off on my face, that's pretty close to the brain too. At first at least. Because they say love goes through your stomach. And yours definitely did go through mine.\"\n\nEmily giggled, more aroused by the second. She wasn't sure if this was going where she wanted to, but wordplay, even sexual, felt natural with her sister.\n\n\"And how did my love taste?\" Emily asked.\n\n\"Not bad actually...sweet and salty, spicy too. I could go for seconds. Did you enjoy ... serving it?\"\n\nEmily rolled her eyes. \"I always enjoy serving my little sister. On a platter.\"\n\n\"So am I tasty?\"\n\n\"Steph, everyone wants a piece of you,\" Emily said honestly.\n\n\"Do you?\"\n\nEmily's heart was beating quickly by now. It was happening again, and her body wanted it so much.\n\n\"I do,\" she answered.\n\n\"Then act like it!\"\n\n\"Are you sure you want that?\" Emily doubted herself again.\n\n\"Em, I walked through a fucking storm to get here tonight.\"\n\n\"Good point.\"\n\n\"Go for what you want, Em, be assertive, take charge,\" Stephanie encouraged, \"I promise I'll love it.\"\n\nEmily bit her lower lip, looking at her sister's face. She swallowed.\n\nWatching those full lips, she said, \"Watch out what you wish for. You know I have a good imagination. I might push you to your limits.\"\n\n\"That's good, you're my big sister, who else should I be exploring my limits with?\" Stephanie declared, \"I'll do whatever you tell me, no questions.\"\n\nA pleasant shiver went over Emily. Her sister was offering herself. She could do whatever her heart, or another part of her body, desired. And some parts really needed the attention right now.\n\n\"I'll go down on you for as long as you want,\" Stephanie trailed her fingers gently over Emily's thigh.\n\nStephanie may have had more sexual experience, but her mind was still so delightfully innocent. Emily, for her part, had an active imagination, now working on full throttle. She always hoped to find someone to enact these fantasies with and as it happened, that turned out to be Stephanie. Who ever knew she would be Emily's perfect mate? Her mind reeled at all the twisted things she could do with her.\n\nBefore her imagination went into places too dark to mention, Emily stood and directed Stephanie to sit on the edge of the bed with her feet on the ground. Emily kneeled on the mattress before her so that her head was level with Stephanie's.\n\nThe older sister spread the girl's knees and crawled forward, placing her hands on the bed to each side of her sister's thighs. Instinctively, Stephanie reached to touch her sister. Emily guided them back to the bed, saying, \"Don't move.\"\n\n\"OK.\" The teen's breath was deep and slow in excitement. She offered no resistance, especially when Emily brought her lips against the side of her sister's neck, brushing aside her hair, but only almost touching the skin. She breathed in Stephanie's sweet scent.\n\nBreathing out, Emily felt the teen shiver as she said, \"Trust me. You will go down on me. But you are my little sister.\"\n\n\"What does that mean?\" Stephanie played along beautifully.\n\nEmily moved to look into the girl's eyes. \"Little sisters come first.\"\n\nThe teen bit her lip. An adorable smile lit up her whole face. Watching this uninhibited expression of love and affection spread warmth throughout Emily's body. She would try to hold this moment in her memory forever.\n\n\"But first,\" Emily smiled, \"You'll have to do something.\"\n\n\"I'll do anything,\" Stephanie replied, \"What do you want me to do?\"\n\n\"I want you...\" Emily brought her lips forward and Stephanie closed her eyes. She felt the warmth of Stephanie's face in a near-kiss. She could once again smell the soft scent of her sister and she knew Stephanie felt her as well - she heard her breathe in, then hold her breath.\n\nEmily held the pose, then breathed out again, nearly touching her sister's lips as she said, \"...to be patient.\"\n\n\"You monster,\" Stephanie breathed out with a smile as Emily withdrew again.\n\nBoth relaxed and giggled uncontrollably.\n\nIt was amazing, but once Emily was confident that she wanted this, and that Stephanie wanted this just as much, it all fell into place and she could be decisive and caring at the same time. This girl trusted her absolutely, but for the first time, Emily trusted herself as well, comfortable to be both a sister and a lover to Stephanie.\n\nOnce they calmed down, Emily spoke, \"What kind of sister would I be if I didn't torment you from time to time.\"\n\nStanding, she walked around Stephanie. Her sister watched her movements, \"Please don't stop tormenting me.\"\n\n\"Eyes forward,\" Emily instructed gently.\n\nStephanie did as she was told. A pleasant shiver when went over Emily's spine when she was reminded that her sister would follow any orders. The slow pace took as much restraint on her part as it did on Stephanie's, if not more. But her sister was worth it.\n\nShe crawled onto the bed and sat down on her heels right behind the sitting girl.\n\nFeeling inspired, she took hold of the bottom of Stephanie's white shirt.",
        "\"Arms up,\" she said and the girl followed.\n\nShe lifted the shirt off the teen and threw it to the side.\n\n\"Straighten your back and lean against your arms,\" the older sister ordered.\n\n\"Like this?\" Stephanie straightened. The silhouette of her slim and beautifully shaped naked upper body stood out in front of the silvery moonlight.\n\nEmily lifted her right hand.\n\n\"You know, this reminds me of the first time I realized how beautiful you are,\" Emily stroked the top of Stephanie's right shoulder. Just one finger, but the teen shivered even so.\n\n\"You think I'm beautiful?\" the girl asked.\n\n\"I do. I mean, I've always seen how pretty you are and how other people look at you, but I couldn't really feel it myself until then.\" Emily traced the finger downwards along on the outside of the teen's shoulder, \"But I clearly remember the moment I saw you sitting on your bed, in your white bra, with your back to me, against the golden sunlight. I wanted to paint you so much.\"\n\n\"I would've loved that,\" Stephanie replied.\n\n\"Zero point seven,\" Emily said, her finger touching her sister's side, just above the hemline of the sweatpants, slowly moving up the sensitive skin.\n\n\"What's zero point seven?\" Stephanie asked.\n\nEmily felt goosebumps and stopped. \"Are you cold?\"\n\n\"No. Just excited. It feels amazing. Please don't stop.\"\n\n\"Zero point seven,\" Emily explained as she trailed her fingers higher, \"is considered the perfect waist to hip ratio. And I'm pretty sure that's what I'm looking at here.\"\n\n\"Well, I'm glad you can appreciate perfection when you see it,\" Stephanie teased.\n\n\"Cheeky,\" Emily replied and squeezed her sister's bottom. Stephanie burst into happy giggles.\n\nEmily slid her hand under the sweatpants, grabbing the bottom underneath. After a moment, she slipped her middle finger right down the middle. She bit her lower lip and felt Stephanie stiffen as she moved the intruder lower, between the warm cheeks. Finally, the finger reached the sensitive opening, making Stephanie take in a sharp breath.\n\nThat was the reaction Emily was after. She withdrew the finger and her sister relaxed, breathing regularly again. Emily sniffed the digit. Nothing but Stephanie's soft scent. The girl was good at cleaning up. She put it into her mouth and licked off whatever might be there. No taste but a bit of sweat.\n\n\"Did you just lick that finger?\" Stephanie asked, \"Kinky.\"\n\nEmily smiled, \"Says the one who had her tongue up my butt.\"\n\n\"Yeah, still-\"\n\nEmily pressed her body against her sister's naked back and embraced her with both hands, squeezing her bottom between her thighs. The girl was wonderfully warm and she was sure Stephanie enjoyed it just as much, just like she could feel Emily's hard nipples, her own shirt being the only thing now separating them.\n\n\"Steph, you are as clean as can be, no smell or taste, but I just had to be sure that if I put that finger into you, you will be safe.\"\n\n\"Thank you,\" Stephanie said, \"I do feel safe with you.\"\n\nEmily moved her hands higher until she met the bottom side of Stephanie's firm breasts, the crease underneath barely present as they gently sloped up. She tested her fingers against the lower side, more to satisfy her curiosity than to excite Stephanie. The fat underneath was soft and pliant, but her skin was smooth and firm. She was pretty sure they would stay perky for years to come.\n\n\"Appreciating more perfection?\" Stephanie asked.\n\n\"I think there isn't a part of your body that's not perfect,\" Emily moved her fingers higher, \"But some parts are more special.\"\n\n\"Yeah-\" Stephanie moaned in anticipation.\n\nJust before she made contact, she moved the hands away. Her sister groaned in frustration.\n\n\"Patience,\" Emily moved her fingers between her own legs, dipping it into her lips and collecting fluids on one finger, then another one. With a wicked grin she did the same with her other hand to get it on other fingers too. She could now feel the fingers of her hands sticking together as the smell of her sex reached her nose.\n\nShe moved the hands back, but before making contact, she moved her right higher until it was level with her sister's mouth. Stephanie opened her mouth obediently to accept the digit.\n\n\"Close it,\" Emily ordered and the teen did so. Emily would massage Stephanie's nipples with her juices, like Stephanie did to her weeks ago, but with a delicious twist. She smeared the slippery substance under the girl's nose, \"I want you to smell me the whole time.\"\n\nAs Stephanie breathed deeply though her nose, Emily kissed the side of her neck and used the lubricated middle finger of her left hand to slowly circle her sister's left nipple, soon to be joined by her right hand on the opposite breast.\n\nThe fingers slid over the hard nubs smoothly, and with just enough resistance to elicit a response.\n\n\"Oh God, this is crazy,\" Stephanie moaned. Her body melted against her sister as Emily continued.\n\nStephanie enjoyed Emily's scent, she said so herself. Now the girl would associate the smell of her sister's sex with pleasure, if she didn't already. Emily had to admit a similar effect probably already worked on her, helping her overcome her waning doubts about her sexuality, back when they first joined in a sixty-nine, then again when she went down on her sister, right in this room. \n\nShe continued peppering Stephanie's neck with gentle kisses, enjoying the slightly salty taste and her sister's scent, while circling the girl's nipples at a languid, but deliberate pace.\n\nEmily still didn't feel attracted to girls in a sexual way, but by now they were so tuned into each other that seeing Stephanie's body or smelling her would make her think back on all the pleasure associated with it, making her body crave sex with this girl. The final protests of Emily's mind were overwhelmed by their exceptional emotional connection. She felt so much love for her sister, she almost didn't care about the physical side.\n\n\"I don't know if I can come with just nipples,\" Stephanie breathed.\n\n\"You can. Relax and breathe in through your nose,\" Emily replied between kisses, \"Remember, it's my love you feel with each breath you take.\"\n\nEmily wasn't planning to make her sister orgasm like this, but the girl seemed intent on it so she seized the opportunity and ran with it, maintaining the dominant persona.\n\nSoon Stephanie's breathing accelerated. The girl tensed. Emily did her best not to speed up as she felt the growing need in the teen's body, knowing the reward will be all the sweeter.\n\nWhen it seemed her sister's body reached peak pressure, Emily whispered, \"Everyone will see you're mine.\"\n\nShe bit down on the side of Stephanie's neck, sinking her teeth into the sensitive flesh, deep enough to leave a mark, starting the avalanche of the girl's release.\n\nHer sister took in a deep breath and froze, hands grabbing the bed, thighs pressed together hard. It was clear she was over the edge now and in for the full ride as her body was flooded with pleasure. She started shaking, then convulsing, her pelvis instinctively thrusting forward, seeking penetration that just could not happen.\n\nIt was beautiful feeling her sister writhe around in ecstasy. Emily could almost feel it herself. She tried to hold onto the orgasming teenager, never letting up on the stimulating massage as she whispered into her ear, \"I will always love you.\"\n\nSlowly the girl's movements receded. Emily used her hands to cover the perky breasts, keeping them warm, slowly licking the teeth marks to help them heal. Stephanie moaned in relief as she returned to Earth. She swallowed, her body relaxing, almost melting into Emily's embrace.\n\nAfter moments of silence, Stephanie spoke in a languid tone between breaths, \"Well, didn't know that was possible.\"\n\n\"You did the same thing to me, remember?\" Emily replied, \"You think I'm not as good as you?\"\n\nSibling rivalry aside, Emily's shaky sexuality started rearing it's head as she wondered if getting her sister off just by touching her nipples could be a long term solution for them. On some level, she knew she'd always be reluctant to get closer to the girl's naughty bits.\n\nAt the same time, the older sister wanted Stephanie to go down on her, or at least her body did. There was nothing like feeling Stephanie's mouth down there. A nipple massage, even to the point of orgasm, just couldn't compare. What sort of sister would she be if she denied that pleasure to Stephanie?\n\n\"I guess smelling you might have helped,\" Stephanie interrupted her thoughts.\n\nEmily's heart skipped a beat at the perversion of that thought. Beneath Stephanie's scent, Emily could still smell a hint of her own sex coming from her sister's face. Maybe some of Sam's fetish had rubbed off on Emily, but just the idea that smelling her own sister's sex would help the teen reach a climax made Emily's body scream for release.\n\nThe teen's urges had been sated, but Emily's were just flaring up. It sounded like Stephanie wanted to say more, but Emily couldn't wait any longer. She had to act now, before her cravings overtook her.\n\nShe scooted back, then guided her sister by her shoulders, \"Lie down. We're just getting started.\"\n\n\"I think it's your turn,\" Stephanie protested.\n\n\"Lie. Down.\" Emily wasn't done with the girl, and excited as she was, she just might be able to go through with this.\n\nStephanie did as she was told, laying on her back and spreading along the length of the bed in front of the kneeling Emily, head on the pillow. She rested her hands above her belly button, her hip almost touching her sister's knees.\n\nEmily took a deep, shaky breath as her gaze followed the slim body from left to right. The small breasts almost invisible in this position, rising and lowering with each breath, the flat stomach with a cute belly button, shivering, forming a small dip beneath the ribcage. Lower still, the girl's pelvis, flaring into womanly sides still hidden by the sweatpants, a shadow forming in the forbidden triangle between her sister's legs.\n\nStephanie continued, \"But you only had a small one when I did this to you back then, right? Like a few twitches.\"\n\n\"Yeah, so? All the better for me to give you another one, a proper one,\" Emily replied, transfixed by her sister's lower body, \"I said that you come first. I'm going down on you and that's that. Don't you want that?\"\n\n\"I really do, it's just-\" Stephanie replied.\n\nGiving in to the call of her hormones, Emily went to explore the hidden area. Almost unconsciously, she grabbed the hem of the sweatpants, trying to pull them off. For the first time in her life, she sexually craved a pussy. She found herself salivating. Even her mouth was getting ready for its job.\n\nStephanie lifted her bottom on her sister's insistence, \"It's just that I just had a proper one.\"\n\nEmily finally took off the sweatpants, then sat back, heart pounding. She spread the girl's knees and swung her leg over the girl's chest, straddling her in a sixty-nine. She closed her eyes and lowered her head between the thighs. With her first breath, the smell hit her like a sledgehammer.\n\nLifting away, she breathing through her mouth, trying to suppress a gag.\n\n\"Jesus Christ, Steph.\"\n\n\"I tried to warn you,\" Stephanie said, \"I had a good one. I wasn't sure with the pants on, but I must have squirted a bit.\"\n\n\"A bit?\" Emily remembered why she didn't want to make her sister come before she went down on her.\n\nWith Stephanie's thighs spread, the light revealed her sister's crotch. The whole area around her sex glistened, with fluid collected in the creases of her inner thighs and between the swollen lips, forming a thick, white substance.\n\n\"Sorry,\" Stephanie said.\n\nEven from arm's length, Emily smelled the heavy, sweetish flavor of her sister's sex, released at once when the sweatpants came off. She swallowed, instinctively shaking her head as she imagined the taste. She was supposed to get her tongue in that?\n\n\"You don't have to do it,\" her sister tried to close her legs and cover up with her hands.\n\nEmily stopped her, \"I know I don't have to, Steph. But I want to. And I will. You're beautiful, and I love how excited you are.\"\n\n\"You mean it's like a juicy peach?\" Stephanie asked with an audible smile.\n\n\"You want me to suck on your peach?\"\n\nStephanie giggled. \"Yes, please.\"\n\nEmily reexamined the soaked lips. There really was nothing scary or disgusting about Stephanie's sex. Her first reaction was just instinct. When she realized who the owner was and what it meant that she was this ready, she found herself wanting to kiss them, juices and all. Stephanie was worth it.\n\nSomething poked between Emily's legs through her shorts. She gasped, her body jerking in response.\n\n\"Sorry,\" Stephanie said, \"I just want to smell you again.\"\n\nThat broke the dam.\n\nEmily gave in to her perversion and sat down, pushing her crotch against Stephanie's face. The cotton shorts and panties were in the way, but she could still feel her nose press its way between her lips. Stephanie held on to Emily's bottom and took a deep breath. Emily knew the girl smelled everything, whether she wanted or not. With that thought, the older sister did what, on some raw level, felt natural.\n\nShe closed her eyes and went down on her sister. Letting her senses guide her, she followed the heat and smell until her mouth felt contact. She pushed through the layer of thick juice onto the soft, warm and slippery flesh right underneath. Opening her mouth wide, she covered the swollen lips with her own, Stephanie's folds yielding as Emily sunk deeper. Stephanie closed her thighs around Emily's head as wet sounds escaped along with the last bits of air between their lips until the seal was perfect.\n\nThey spent the next seconds frozen in this most intimate of positions, hands holding on to ass cheeks, faces buried between each other's legs.\n\nThe warm pressure of Stephanie's face and breath against her sex felt wonderful, but most of Emily's attention was focused on what was happening at her end. Her ears covered by supple thighs, Emily could hear and feel her own heartbeat as she took deep breaths through her nose, smelling powerful sex with a hint of fish and sweat. Fluids collected in her mouth. She wasn't sure whether it was due to her salivating to the taste of Stephanie's flavor or it was her sister's body producing more of what was already copiously spread over her crotch and Emily's lower face.\n\nShe didn't have the capacity to think about whether this was right or wrong, or even to decide if she liked it. All of Emily's senses were reeling at the most intense experience of female sex she ever had, stronger than any of their previous sessions. So she just held on, content to fully experience whatever was coming.\n\nFinally, she had to close her lips to swallow, tasting more of the salty spice. The motion obviously felt good to Stephanie, because her sister's hips pushed upwards, thighs flexing. Getting used to the smell and taste, Emily repeated her actions. She pressed her open lips against Stephanie, then closed them while sucking and swallowing. Each time her sister reacted and pressed her crotch against Emily's face, her body releasing more liquid.\n\nEmily was happy to stimulate her sister for as long as the girl liked. But already the girl started tensing up, her breathing and moans quickening. The older sister didn't want to keep the bow taut for too long. She moved lower and picked up the teen's clit between her lips, just holding it as she pushed her face against the wetness in front of her. Her nose pushed the soft folds aside with a wet sound as it entered Stephanie's center. As she brought the girl higher, she added her tongue, flicking it over the bud in her mouth. It wasn't long before her sister's motions grew frantic, a clear signal of her incoming orgasm.\n\nJust as it was about to happen, in a swift move that caught Emily by surprise, Stephanie took hold of her sister's head, pushing it against herself as she thrust her hips. Her wet sex mashed against Emily's face repeatedly. Emily didn't struggle. Her sister acted on instinct and couldn't control her actions on the cusp of her climax.\n\nThe peak of her voice announced her orgasm as much as the sudden change of pace. The girl pushed her sex against Emily in slow and deliberate motions, a high moan coming with each thrust. She was clearly in heaven, shivering and squealing into Emily's crotch as her pussy repeatedly squeezed Emily's nose, releasing yet more fluids.\n\nEmily doubted she would ever get used to the experience of Stephanie's orgasm. The feeling was overwhelming, but also beautiful. Still, she did her best to keep up her side of the deal, stimulating the clit and pussy with each contraction. Whether it was because this was her sister, or because they were both girls, Emily knew exactly what Stephanie wanted her to do to keep flying as long as possible.\n\nStephanie's desperate moans lowered in frequency, replaced by a content murmur as her thighs fell apart and her hands let go. Emily released the sensitive clit and moved to nuzzle the swollen lips with her nose and mouth. She raised her own hips from the teenager's face to let the girl's breathing return to normal. Stephanie's satisfied sighs were beautiful.\n\nEmily wouldn't mind staying like this for a while, but her own loins demanded attention. She also recalled their last time in this apartment. Back then, Stephanie was so content she fell asleep before Emily got her turn. With that thought, the older girl gave her sister's sex one last kiss, then rolled away onto her back. In a swift move, she took off both her shorts and panties. The fresh air told her she was more than ready, and she knew exactly what she wanted.\n\n\"So I heard you like my smell,\" Emily crawled up Stephanie's body.\n\n\"Yeah, I think it just made me come.\"\n\n\"That, and my face between your legs,\" she hovered over Stephanie.\n\nA soft chuckle, \"That helps too.\"\n\n\"How about getting a taste as well?\"\n\n\"Sounds good.\" Stephanie started getting up.\n\nEmily touched her shoulder. \"Lie back and close your eyes.\"\n\nStephanie, like a good sister, obliged.\n\nEmily tried to keep calm, but her breathing betrayed her excitement about what she was planning. She swallowed. The lingering taste of Stephanie, as well as the smell sticking to her face gave her all the resolve she needed as she crawled forward. She straightened her body when she reached the wall, holding onto the small wooden headboard. It offered excellent support for her upper body as she knelt above Stephanie. With her last step she put each knee next to Stephanie's ears as she mounted her sister's head.\n\nHer sister's breath from below tickled and teased her moist pussy. Stephanie's eyes were still closed, but the girl had to smell what was coming. Emily bit her lip and lowered herself, sitting down on the teen's face.\n\nA wet sound escaped as the two sets of lips finally connected and Emily released a shaky breath. She still couldn't believe they were doing this. Her sister's face was neatly framed by Emily's thighs, her trimmed pubic hair laying just below Stephanie's nose. Briefly she wondered if her hair tickled Stephanie, or how strong the smell was down there, but when Stephanie opened her mouth under her, Emily could only moan, her thighs reflexively closing around the girl's head.\n\nSitting on her sister was so wrong, but it felt every bit as good as Emily hoped. Maybe it was the perverse nature of feeding her own sister Emily's most intimate area in this way, or just the enhanced blood flow to her nether regions thanks to the position, but the soft warmth of her seat was incredibly stimulating. She could only hope Stephanie liked what was happening, because Emily felt herself leaking more fluids than usual. It all flowed over and into her sister's mouth.\n\nWithout thinking, Emily rocked her hips. Forward and backward, then in a circular fashion. They were slow and tiny motions at first, the flesh of her soft folds and Stephanie's face were firm, but flexible enough that the movement didn't actually result in any sliding action at all. She felt Stephanie extend her tongue, licking between the lips, slowly moving deeper. In regular intervals, Stephanie closed her mouth, swallowing everything her sister's sex gave her.",
        "With minutes ticking by, Emily's movements grew faster and more pronounced, her pelvis acting out an intimate dance on top of Stephanie's face. The most intoxicating thing about this, apart from Stephanie's smell lingering all over her, was the level of control Emily had. What they were doing wasn't that different from when Stephanie massaged Emily's pussy with her face on Monday, but this time, Emily herself decided on where and when she would be stimulated.\n\nThat meant she could slow down or move away from sensitive areas when the pleasure threatened to overwhelm her. She wanted to delay her orgasm, to squeeze every bit of enjoyment she could out of this perverse activity. A couple of times, she even lifted her hips, leaving trails of sticky fluids between the two sets of lips, then sat back down with a nasty sound.\n\nAside from the physical stimulation, she found herself enjoying the domination of the teen beneath her. The girl lifted her hands to hold Emily's bottom as she moved around, but there was no doubt who was the boss in this scenario. As the older sister, it was natural for Emily to take initiative.\n\nWith a hammering heart, she decided it was time to cross another border into perversion. She started sliding her sex up and down, all over Stephanie's face, enjoying the contours of her nose and eyebrows, slowly at first. She remembered her boyfriend's attempts to go down on her. His rugged face scratched every sensitive area. With Stephanie the problem was just not there - her smooth face was perfect for this, one of the benefits of being with a girl. Emily wondered if she could ever enjoy sex with a man this much.\n\nSoon, the teen's whole face was coated with a slick layer of fluids. Emily's pussy moved around with just the right amount of resistance and the room was filled with wet, sloppy sounds along Emily's deepening breathing.\n\nSliding over her sister's lips and nose massaged Emily's clit as well. She wouldn't be able to hold out much longer. Already the warm pleasure spreading from her sex was starting to peak, traveling up her spine and making Emily sweat all over and forcing the occasional moan out of her.\n\nAnother flare of pleasure convinced the girl the time has come. She let herself fall forward, laying her forearms and head on the headboard of the bed. In this position, Emily's shirt obscured her sister, but it brought Emily's clit in direct contact and she could find her way by touch alone. She closed her eyes as she slid her hips back, moving her sex onto her sister's mouth. Giving into her instincts, she started thrusting quickly, from chin to nose and back.\n\nShe was well aware of the perverted nature of this action. Her breasts bounced up and down, the whole bed creaking as her body moved by itself in ways designed to achieve maximum penetration and a successful impregnation by a man. Instead, she was facefucking her own sister and loving every second of it. At this point, she only cared about one thing in the world, her release.\n\nThe exquisite ride didn't last a minute. Emily's body was primed for orgasm in all possible ways and soon the warm pleasure overwhelmed her. Her motions slowed as her autonomic nervous system took control of her functions. Grabbing the head between her legs with both hands to hold it close, she sat down hard. Her pelvic floor muscles contracted repeatedly around Stephanie's tongue, bringing Emily into her own personal heaven. She could barely squeal with every thrust, more fluids escaping with each contraction.\n\nWhen she came back to Earth, warmth spread through her face and chest. Another couple of good rubs. Starting to feel too sensitive, she moved her hips backward, leaving trails of stickiness behind. As her breathing returned to normal, she looked down to see a smiling Stephanie watch her, face messy with fluids, short hair matted to her cheeks and forehead.\n\nStephanie said between breaths, \"Nice.\"\n\nEmily had to laugh at that understatement. After Stephanie spoke, the smell hit the older sister. Stephanie's mouth smelled like Emily's sex.\n\nFired on by a perverted thought as much as her afterglow, Emily dismounted her sister and laid down next to her, bringing her face closer. Stephanie watched her with innocent eyes and parted lips as Emily brushed the teen's hair from her cheeks.\n\nEmily asked, \"May I kiss you?\"\n\nWhen Stephanie didn't react, Emily added, \"Just a peck. As a sister?\"\n\nStephanie scoffed.\n\n\"I don't know, Em. You just sat on my face and rode it until you came all over me. But a kiss from my sister, even a small one? I'm not sure I'm up for such intimacy.\"\n\n\"Shut up,\" Emily said with a smile and closed the distance.\n\nTheir lips touched, slightly open, brushing over one another, before pressing together more firmly, gently sucking. Stephanie's lips were soft, full, warm and wet. Just like a pussy, including smell and taste. Emily however, held herself back. No tongue, no hasty make out, or search for pleasure. This was a confirmation of affection and intimacy.\n\nThe lips stuck together, then separated with a wet sound.\n\nStephanie opened her eyes and whispered, \"Nice.\"\n\n\"Again? Does that mean you like that as much as when I sit on you?\" Emily teased.\n\n\"First kiss or being sat on by big sister? Tough call. Which one did you like more?\"\n\nEmily froze.\n\nStephanie grinned. \"You liked the facesitting more, didn't you?\"\n\n\"No! I just thought the best moment for our first kiss would be with each other's juices on our lips.\"\n\n\"Aw, you always were the romantic type.\"\n\n\"After all we've done together, I thought it was high time I've shown you how I feel.\"\n\n\"Damn, that actually was romantic,\" Stephanie said. \"So, which one did you like more?\"\n\nThis time, Emily was prepared.\n\n\"You know, I can't make such an important decision just like that.\"\n\n\"And what would help you decide?\"\n\n\"Let's just say.\" Emily pressed her lips against Stephanie's, before she grabbed the headboard and crawled up once more above her sister, then sat down.\n\n\"The night is young.\"\n\nEPILOGUE\n\nSamantha Norwood was sitting at an outdoor table with her friends, listening to an animated Stephanie telling a wild story from school. The others, including Emily, jumped in occasionally with jokes and remarks.\n\nIt was easy for Sam to forget what set the sisters apart. A smiling glance here, a brush of a hand there, the two girls acted like any close siblings would. There wasn't any pretense either. Their physical similarity made it immediately obvious they were related, but everyone who knew them saw the emotional connection the girls shared.\n\nIt had been over two months since Emily moved in with Sam, and with Stephanie spending a lot of time at her place too, Sam gained insight into the sisters' relationship. The girls could talk for hours if the mood hit them, or just sit next to each other for just as long, shoulder to shoulder, never saying a word. They were just like Sam always imagined good sisters to be - their interactions in private were on the caring side of casual, but genuinely loving and romantic, with the occasional argument to balance it out.\n\nSam's phone chimed with a text message and her heartbeat sped up. She excused herself, getting a twinkling glance from Emily as she walked towards the exit of the park, glancing back at the group one last time. Stephanie was at it again, with Emily's gentle eyes upon her. Sam could only hope she'd find someone who looked at her like that.\n\nDuring the day, the sisters usually did their own thing, as they had to. But when together, they always watched out for each other. They were like best friends, but also comfortable to express physical affection - touching each other's hands when talking, hugging or laying a head on the other's shoulder when relaxing - behavior, which for opposite sexes would mean a couple. Even with two girls, people might give them looks. But for sisters, this was normal. More than one person even expressed envy about their relationship, or swooned at the sweetness of it.\n\nCould other people feel how deep the connection between the sisters goes? If they knew, would they feel same way about their relationship as Sam did? It was still difficult to classify what the two girls had. Even Emily never figured it out.\n\nOf course, they also needed time for themselves, which Sam gladly provided. Emily, in turn, would sometimes tell her about their trysts. Her descriptions weren't as detailed as Sam would like. In fact, sometimes Sam wouldn't even be able to tell if anything sexual happened at all. But Emily's glowing eyes alone made it clear how strong the sisters' bond was and how genuinely happy they made each other, as friends, as sisters, as lovers.\n\nIt was the apparent innocence of their relationship that made Sam wonder. If the Bailey sisters acted like any other pair of siblings, wouldn't that imply that many other close family members might be in happy and intimate relationships as well? Sam personally knew both several mixed and same-sex siblings that acted just like Emily and Stephanie. Was she fooling herself into believing what she wanted, or was this kind of relationship more common than people thought? She thought those confessions all over the Internet were just fiction, but maybe there was some truth to them after all.\n\nSam crossed the road next to the park and headed for the small cafe she had her meet up at. She had finally split from Matt a month ago. The split was amicable and more liberating than she had expected, but still left her a little lonely. This, as much as the experience of Emily's and Stephanie's happiness led Sam to look up her father's daughter from his previous marriage.\n\nShe had barely known her half-sister previously, only seeing her a few times when they were little. In the past weeks, they started talking again and Sam found it incredibly easy to connect with the girl. They shared so much and already Sam considered her a friend. Sam's sister was three years older, single and didn't live that far from Sam. Today, they would meet for the first time in years. She even had butterflies in her stomach, wondering if this was how Emily felt back on the fateful night with Stephanie at the nightclub.\n\nShe saw her sister sitting at a small table for two, looking down at her phone. Though taller and slimmer than Sam, the sisters still shared some resemblance, a physical proof of the innate connection she already felt deep inside. Sam wasn't sure where this was going, or where she wanted it to go, but she was eager to find out.\n\nShe took a deep breath and walked towards the table. Her sister looked up. Warm smile, gentle eyes.\n\nEmily and Stephanie had made it.\n\nNow, it was Sam's turn.\n\nTHE END\n\n*****\n\nSpecial thanks to Mythos for editing and advice and to R. for story consultation.\n\nAuthor's note: A big thank you to everyone who made it this far. With this chapter I consider the story of Table for Two complete - I couldn't have done it without your feedback and support.\n\nI do have more ideas which might translate into stories, so if you liked this, look out for more from me in the future."
    ],
    "authorname": "JessicaS",
    "tags": [
        "lesbian",
        "lesbian incest",
        "sisters",
        "orgasm",
        "cunnilingus",
        "sixty nine",
        "facesitting",
        "female ejaculation",
        "domination",
        "romance"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/table-for-two-ch-11-12"
}