{
    "title": "The Collision",
    "pages": [
        "To be honest, the accident was my fault as much as hers. My Mazda-6 was idling in the left lane, waiting for the traffic light to turn from green to amber to red. I was trying to squeeze in a quick left turn between the time the oncoming traffic stops and the side street traffic starts up. Because of that two-second delay in lights changing, you know. But I was rummaging for a CD at the same time, and may have started to turn a few seconds too early. \n\nAnd she was trying to beat the light, probably speeding and talking on the cell phone too. You know the type. She hit her brakes too late. Just as I was turning, her Acura slammed into the rear passenger side of my car with a sickening 'THUNK! sound. The sound that you still hear in your head months later because you don't merely hear it, you feel it down to your bones.\n\nShaken by what had happened, I pulled over to the side street and stopped. The other car followed and parked behind me. The woman who got out was maybe a little younger than me. She was mad as hell. \n\n\"You stupid bastard!\" she screamed, \"I had the fucking right of way! Didn't you see me!\"\n\nMy nerves on edge, still hearing that painful crunch, I just lost it then. \"You crazy bitch!\" I screamed back at her, \"you ran a fucking red light, didn't you see that!\"\n\nHer hair was dyed ash blonde and cut so short she looked like one of those inmates in a concentration camp after the Nazis have given them a haircut. Deep red lipstick, dark eye shadow. Mini skirt and black lace up boots. I kid you not, a walking horror show. Everything I hate in women's fashion.\n\nBy now we were just feet from each other. \"You stupid jerk!\" she hissed, \"if it took an IQ test to get a driver's license, you'd have to ride a fucking bicycle.\"\n\n\"Yeah, and it's a good thing the fashion police aren't around, angel! Jeez, who picked out your outfit, a color-blind hooker?\" \n\n\"Kiss my fucking ass!\"\n\n\"Gladly! It's bound to be an improvement over your face, honey!\" We were now inches from each other, and I was wondering if she was going to punch me. \n\nBut then everything just kinda stopped. We looked at each other, sensing that something strange was going on. And the next thing I know I'm grabbing her and kissing her. I still don't know how it happened. Kissing her as if those full ripe lips are a pool of fresh water and I'm dying of thirst. Pressing my lips into hers, wanting more and more. Tasting the sweetest most unbearably delicious woman in heaven or on earth.\n\nFor a second she was startled; then, she grabbed and held me, moaning with unbridled pleasure. But without warning she broke away and pushed me back. \"You crazy bastard!\" she exclaimed, \"I oughta...\" Then she just stopped, a dazed look on her face.\n\nAnd with that she seized me like an octopus, and once again came the indescribable taste of her. There was love and lust and want in that kiss. There was moonlit beaches and peach cobbler and chiming bells and rollicking brooks. I wanted to kiss this woman and never ever stop. \n\nMy brain was reeling, stunned by all her subtle flavors. So many nuances of taste and aroma and feel! A man could kiss this crazy bitch a thousand times and each would be different from the others and delightful beyond words. This crazy bitch who had wrecked my car and wrecked my day. \n\n\"Excuse me, what's going on here?\" came an official sounding voice.\n\nThe woman shoved me away again and we both looked at the traffic policemen in his spotless pressed uniform. How do they always look so neat? A small crowd had gathered as well.\n\n\"This lame-ass jerk pulled in front of me!\" she cried, pointing at me.\n\n\"And she ran a red light, dammit!\" \n\nThe cop eyed us skeptically, trying to figure it out. I suppose he normally doesn't see people involved in a traffic accident suddenly start making out like oversexed teenagers. But then he hadn't tasted this woman's lips. I had. \"Do you two know each other?\" he asked.\n\n\"Ha!\" the woman laughed, \"yeah, like I'd know a miserable twerp like him!\"\n\nThe ball in my court, I said, \"God in heaven, I pity anyone who knows this bitch, or has the misfortune to be around her!\"\n\n\"Okay!\" said the cop, \"that's enough with the profanity! Now, are both your cars functional? Can you still drive them?\"\n\nAfter that came the usual song and dance. Mr. Spotless wrote us up; her for speeding and me for making an illegal turn. We exchanged names and insurance companies. She was Lacy McKie. What a slut. But I ached for her. The accident and what it would cost me was no more than an annoying gnat buzzing around my face. I just wanted those soft lips again.\n\nHer eyes told the same story. But Mr. Spotless stood between us, and after the routine was finished said, \"Now, I want you to move on and let the insurance companies settle this, okay?\" He sensed the tension, the electricity between us. Probably made him nervous.\n\n\"Get outta my way, asshole,\" she snapped at the cop. With that she pushed him aside and was in my arms again. And I was in seventh heaven, kissing her hungrily, just getting off on the taste of this woman who was so crazy and oh so delicious.\n\n\"Now quit it!\" yelled the Law. \"I could arrest both of you on several charges already, but I won't if you'll just break it up and be on your way!\" He pulled us apart, pushing me away like he was her father or something. He shook his head, not understanding it any more than we did. Lacy stared furiously at me, I at her.\n\nThen without a word or backward glance she got into her Acura and sped away, leaking radiator fluid. \"Good riddance!\" I yelled. By the time I had driven a few blocks the spell was wearing off. It was only then that I realized that my cock was so hard it was painful. And I knew why. \n\nTwenty minutes later I was at my job: assistant manager at Borders bookstore. That's right, I'm one of those bright eager tellers who wears a sweater vest and maybe a polka-dot bow tie. You know, the guys who are so cheerful and helpful. I can tell you exactly where to find that book of Wallace Stevens poetry. Or any other book you may come across to waste your time. I mean, there are girls out there who taste like Lacy McKie, and you want to read a book? Please!\n\nThe funny thing is that I was still fuming over what a crazy bitch Lacy McKie was. There was this weird dichotomy toward her in my mind. The woman really was a silly wench. But oh those lips. My god, the taste of her.\n\nYou know how sometimes on a mountainside you'll take a rock and set it free just to watch it roll down the mountain? I felt like that rock when evening came, rolling helplessly toward Lacy's apartment in my poor banged-up Mazda, unable to stop myself. I needed to tell her what my insurance agent had said. But not really. That's not what I needed at all.\n\nWhen I rang her doorbell, this skinny girl in horn-rim glasses, about six feet two, answered. Barely noticing her, I said evenly, \"I'm here to see Lacy McKie.\"\n\nThe stork invited me in. \"Lacy!\" she yelled to the kitchen, \"guy here to see you.\"\n\nLacy emerged from the kitchen. Black satin pants and a thin cling sweater: pure unadulterated pussy. She came to me and slapped me across the face with all her might. It stung like hell. Then came another blow, equally hard, from the other hand. \n\nI grabbed the right arm that was going to hit me again. I even thought about giving her a smack.  Nothing would have made me happier than to slap this silly tart. But I didn't.\n\n\"What the hell took you so long to get here?\" she snarled. And with that she grabbed me and I was kissing her, feeling her melt into me, once again savoring the delicious taste and feel of her. What I felt then made everything else that day and maybe my whole life seem dull and trivial by comparison.\n\n\"Hey, what's going on here!\" said the stork. \"Lacy, who is this guy?\"\n\nLacy broke off our kiss long enough to say, \"Fuck off, Dawn. Just get out of the way!\" With that Lacy began to kiss me and at the same time drag me toward a short hallway and her bedroom.\n\nWe were still trying to kiss each other as she slammed the door shut. Then she pushed me back and with a vicious look started tearing my shirt off, literally ripping it away. Not to be outdone, I grabbed her sweater and ripped it in half, just like that. Both of us had the strength of wolverines.\n\nI suppose we didn't have to tear every single item of clothing off each other, but we did. For a split second I wondered how I would get home with nothing to wear. But do you think that mattered to me? \n\nThe crazy bitch was wearing these pink tanga panties. Ripping them off her just made my day. She may have been clean-shaven beneath or maybe not. I don't remember. But I recall that when I ripped away her bra, her breasts were small, pointing straight out. And her nipples and areolae were pure pink, not a hint of brown pigment. As pink as rose petals. As pink as the prairie sky at dawn.\n\nNow naked, we stared at each other, panting like sled dogs. Then I grabbed her and pulled her down onto the bed. Once again came the sheer ecstasy of her lips. Then I was mounting her and she was saying, \"Hurry up, dammit, don't make me wait all night!\"\n\nGrabbing my butt with her hands, she literally pushed me into her, and I gasped in stunned amazement. The feel of her soaking wet pussy was if possible even more mind-blowing than her lips. It was silk and steel and velvet all in one. My cock had been waiting for this pussy all its life. At last it was home.\n\nI drew up slightly from her as I sank into her to the hilt, over and over. With a crazed grin she looked at me, saying, \"Can't believe you've got an nice dick! I thought it would be the size of a little vienna sausage!\"\n\n\"Uh huh. And I expected you to be like the fucking Grand Canyon down there.\"\n\n\"Does this feel like the goddamn Grand Canyon?\" she snarled. With that she used her powerful muscles to tighten down on my cock as in a death grip. Then she released it a bit, then clamped down upon me again. Finally her pussy kneaded my cock; I swear she was giving it a massage. I didn't know it was physically possible to do that, but her tight little puss did it anyway. Amazing.\n\nAbout that time Dawn knocked and opened the door, saying \"Lacy, what th' heck's going on? Are you all right?\"\n\nLacy pulled away from me just enough to grab the alarm clock and throw it at her roommate. It hit her on the shoulder but did little harm. \"Yesss, dammit,\" she screeched, \"now get the fuck outta here!\"\n\nThe woman beat a hasty retreat, I think, but in truth I was kissing Lacy and driving my manhood into her without missing a beat and hardly noticed. They could have brought in the Notre Dame marching band and we wouldn't have stopped. Couldn't have stopped.\n\nTogether Lacy and I climbed the mountain. We came together and most of our brain shut down, leaving the id, the base reptilian part of us, in complete control of the situation. We screamed and grunted like the animals we are. Cum gushed out of me like the Jamestown flood. Lacy ravaged my back, at the same time arching and twisting her body in seemingly impossible ways.\n\nIt was as if the laws of nature were somehow abrogated that night. Of course I couldn't stop after that first time. And somehow my cock remained fully hard. It knew better than to go soft on me now. I soon brought the woman to a second keening climax. Once again my back was flogged. She bit me as well, no more in control of herself than a lioness in heat.\n\nFor long minutes afterwards we lay gasping for breath, my cock still buried deep inside her. Her hair and skin were so wet with sweat that she looked as if she had just gotten out of the shower. Her pupils were the size of quarters, her lips bruised and swollen red. She was utter perfection.\n\n\"Will you marry me?\" I gasped.\n\nLacy's eyes arched in surprise. Smiling and shaking her head, she murmured, \"I'll be damned. I can't believe you had the balls to ask me before I asked you. I was sure you'd dork around for a week before you finally got up the nerve!\"\n\n\"Is that a yes or a no?\"\n\n\"It's yes of course! Do I have a choice?\"\n\n\"Not if you feel the way I do.\"\n\nNow her eyes blazed anew and the flush on her cheeks reddened. Back to work, I thought. Once again I began to thrust into her, slowly at first but with increased vigor. Through willpower alone my cock stayed hard enough, long enough to bring the woman to a third climax, as brutal and tumultuous as the first two. I climaxed with her as we screamed and moaned uncontrollably. You should have been there. \n\nAching from bites and scratches and a cock that had been mercilessly overworked, at long last I withdrew and lay beside her.\n\nLacy sat up on the bed, coming down from the endorphin high. Shaking her head, she looked as if she was hung over. Her jaw was slack, as was her pussy. Cum seeped out onto the bedspread. At that moment she was so damn beautiful, the most amazing creature I had ever seen.\n\n\"Wow!\" she whispered. \"Double wow.\"\n\n\"My thoughts exactly.\"\n\n\"Has this ever happened to you before?\"\n\n\"Are you kidding!\"\n\nFor the first time ever she looked at me with neither anger nor desire. \"I can't imagine being married. Don't you want to know some things about me first? Where I'm from, where I work and all that?\"\n\n\"I already know what I need to know.\"\n\n\"I'll have to get a wedding dress.\"\n\n\"You can walk down the aisle stark naked for all I care.\"\n\nThen I heard the woman laugh, warm and a bit throaty. Like her kisses, it made you think of things. Lazy summer days; the wind in the pines. \"At least you're easy to please.\"\n\nI rose up and gazed at Lacy, spellbound by her eyes. I just wanted to sink into those sky blue pools to the point of total oblivion.\n\nSuddenly Lacy's expression darkened. She slapped me again, not as hard as before, but it got my attention.\n\n\"Hey, what was that for!\"\n\n\"What took you so long to find me!\" she cried. \"I'm almost 25! Why couldn't you have found me years ago!\"\n\n\"You're only 24? You look older.\"\n\n\"Go to hell!\"\n\nWith that I grabbed her and once again melted into the woman, savoring the sweetest lips on this or maybe any side of paradise. She kissed me wantonly as our hands roamed where they chose. Whatever fury had been released by our collision this morning was still running the show. We were no more able to control ourselves than puppets. I caressed her wonderfully smooth butt, and miracle! My cock swelled like a balloon. \n\n\"Can you take me again?\" I asked.\n\n\"You must be joking!\" came her hoarse reply. \"If you stop now I'll kill you!\"\n\nI saved my life by bringing her to a fourth climax. My painful back took more abuse. I didn't want it to end; I kept easing off, and finally the woman was reduced to begging me. \"Please!\" she whimpered, \"let me feel it now! Don't make me wait!\"\n\nAfterwards we lay silently on the bed, still reeling from all that had happened. Finally Lacy rose up and walked out to the bathroom, taking small mincing steps, so sore was her pussy. \n\nShe returned a few moments later and said, \"I'd better put something on and go apologize to Dawn.\" But she saw that our clothes were now little more than rags. With a gesture of resignation she limped out again, still naked.\n\nI staggered to the bathroom and washed myself off; then, returned to her bedroom. I turned off the lamp beside her bed, and was reclining, my back against the pillows, when she slowly walked into the room and sat cross-legged on the bed. \n\nThere had been a faint rumble of thunder during our lovemaking, and now the first drops of rain spattered against the windowpanes. The room was dark except for a shaft of light that illuminated Lacy's breasts, as if we were in a movie scene or something. She was holding two glasses and a bottle of chardonnay, and wordlessly filled the glasses, handing one to me.\n\n\"My roommate's not very happy with me,\" she remarked.\n\n\"You'll soon have a new one.\" \n\nMore silence. \"I have an Irish temper,\" she said.\n\n\"So I've noticed.\"\n\n\"What did you say your name was?\"\n\n\"Brett.\"\n\nTo be so far from Lacy was unbearable. I moved down the bed so that our bodies were now just touching; to where I could enjoy the scent of her and caress her smooth skin.\n\nLacy took a sip of wine. \"That outfit I was wearing this morning, that's part of who I am. I like alternative rock. Barenaked Ladies, the All-American Rejects. I'm half owner of a used clothing and costume shop; I like to sleep late on Sunday mornings.\"\n\nI pondered this information, then replied. \"I like progressive jazz, above all Stan Kenton. Thai food but not Chinese; I like old movies, especially film noir; I'm assistant manager at Borders; I love to read books, even poetry.\"\n\nI could just make out her eyes, luminous in spite of the dim light. \"Yes,\" she smiled tiredly, my words confirming what she already knew, \"you really are a total dweeb, the complete geek.\" \n\n\"Oh stop it, you seductress!\"\n\n\"And that little bow tie you had on this morning! You were such a nerd. But then you kissed me and it was like a thousand volts of electricity went though me and I thought omigod, I gotta have this man!\"\n\nAnother wistful smile, then she went on, \"All day you were like two people in my mind. This hopeless geek, and at the same time the most scrumptious desirable man I've ever met. I had to have you. Did you feel that way too?\"\n\n\"Uh huh. I thought you were a crazy bitch, but I couldn't stop wanting to be with you and kiss you. I never dreamed anyone could taste and feel the way you do.\" \n\nShe bent forward and kissed me, for the first time tenderly. \"C'mon, husband-to-be,\" she chuckled. \"I want to put on a clean bedspread.\"\n\nI removed the soiled bedspread as Lacy rummaged through the closet and brought a new one to replace it. Afterwards we snuggled under the cover. She lay beside me, her right arm and leg draped over me. I gently caressed her and could tell by the sound of her breathing when she fell asleep.\n\nI was exhausted but not yet ready for slumber. I just wanted to savor the moment: the rain falling outside, the delicious feel and aroma of this woman beside me. And the thought crossed my mind. All my life I've been riding the carousel, around and around with nice music. \n\nBut today I got on a roller coaster. Not just any one either, the American Eagle maybe, or the Raging Bull. I knew that starting tomorrow, with Lacy McKie at my side, I'd be laughing and screaming and sometimes scared out of my wits. And I couldn't wait. "
    ],
    "authorname": "CAP811",
    "tags": [
        "satire",
        "compulsion",
        "woman's temper",
        "man's obsession",
        "opposites attract"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-collision"
}