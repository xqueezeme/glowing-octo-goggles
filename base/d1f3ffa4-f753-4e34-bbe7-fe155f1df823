{
    "title": "A Femme Domme Tale Ch. 07",
    "pages": [
        "Author's Note: This story is a collaboration with my friend and editor, Harvey. We both contributed equally to its content and we hope you enjoy it.\n\n- - - - -\n\nEdith slapped his stomach hard and he let out a little groan. \"That tongue had better be deep in my ass, or else,\" she growled.\n\n\"Don't make me put you back on the rack,\" I added for good measure. A little smile broke across my mentor's face when she heard my little quip.\n\nBefore Edith called and invited me to participate in this spur-of-the-moment Sunday-evening session I had spent the time since our scene with Karen the night before assessing my own reactions and feelings about what had transpired. I'd anticipated the session being with George, and I'd initially been discomfited by the switch in submissives, but I'd definitely enjoyed co-dominating Karen. I'd learned some things that would enhance my control of Chris, but I'd also realized how I needed to manage our growing relationship with Liz. I loved her as a friend and as a submissive, but I knew I wasn't in love with her and I needed to keep my emotional distance and prevent her from thinking she and I could have an exclusive relationship except for my husband. So when Edith asked me to join her for this scene with her male sub, I was more than ready for it.\n\nWe were about two hours into a very intense session with one of Edith's submissives. He was on his back and his hands were restrained to the large oak bed in her playroom. She was mercilessly riding his face while I was between his open legs.\n\nI humped my hips forward, sending the long, thick, strap-on dildo deeper into his ass, and he emitted a low, deep groan. His open legs showcased the deep red welts I'd put on his thighs earlier with one of Edith's floggers. The crimson-colored lash marks were just slightly more severe than the ones I'd put on his stomach and back.\n\nI heard muffled slurping sounds emanating from between Edith's legs as she continued to mercilessly ride his tongue. \"Keep it in my ass, nice and deep,\" she said while her fingers began to furiously rub her clit.\n\nTaking me by surprise, she leaned forward, pulled me to her, and gave me a deep, hard kiss. Her tongue slid into my mouth, and suddenly her breathing changed and her body began to climb. Edith's tongue slipped out of my mouth and her body convulsed violently as her orgasm overwhelmed her.\n\nI looked down and noticed his testicles were turning a deep shade of blue from the small piece of leather that was latched tightly around his sack. Even though this type of ball torture was common, I didn't have any experience with it and I trusted Edith to know how far to let it go so it didn't cause our submissive any permanent injury.\n\nI continued to drive the big phallus in and out of him as hard as I could, which produced muffled moans and grunts from between Edith's legs.\n\n\"I bet you're ready to come for me, aren't you, little boy,\" she said menacingly.\n\nI heard a few garbled moans. I couldn't be certain, but my best guess was he'd answered in the affirmative. She reached down and began stroking his cock. Instantly, his breathing changed as his body began to climb.\n\nI knew he was just seconds away and I drove the cock into him to the hilt and held it there, putting maximum pressure on his prostate. Edith gave me the signal and I reached down and unsnapped the clasp on the leather strap, allowing normal blood-flow to return to his testicles.\n\n\"Oh, God... oh, God... oh, fuck,\" he screeched after Edith slid back several inches and was no longer impeding his ability to speak.\n\nThick ropes of semen sprayed onto her breasts and stomach, effectively coating her upper torso with his seed. A full minute elapsed as he struggled to regain his breath. I slowly moved backwards, which removed the large phallus from his now obscenely gaped asshole.\n\nEdith untied his hands, and as if on cue he climbed into her waiting arms and began licking his come from her breasts and stomach as she lovingly ran her fingers through his hair and held him like a small child. It was one of the more interesting and shocking scenes I'd experienced since entering the lifestyle.\n\nJust as he took her nipple into his mouth and began to suckle, our eyes met and she gave me a little nod. I slipped out of the bed, which gave them privacy and allowed her to provide him some aftercare.\n\n- - - - -\n\nAfter removing the strap-on harness I collected my corset and thong and put on my trench coat. Even though I was fully covered, I felt deliciously naughty knowing I was naked under the long coat. I grabbed a bottle of water out of the small refrigerator in her playroom and made my way towards her office.\n\nWhen I opened the door, I saw Geoffrey standing at attention next to her desk. \"Would you like a drink, Ma'am?\" he asked in a shaky, uneven voice.\n\n\"Jack Daniels, neat,\" I replied after taking a seat in the chair in front of the desk.\n\nI watched as his unsteady hand poured the whiskey into the glass and my eyes slowly traveled over his body. He was wearing skin-tight white Spandex boxer shorts that accentuated his sizable basket and the large gold hoop rings were prominently displayed in his pierced nipples. As my eyes traveled upward I noticed his dark, shoulder-length hair, which seemed to shine in the moonlight that was coming in through the large window behind him. As he stood before me, he could only be described as beautifully handsome.\n\n\"H-h-here you go, Ma'am,\" he stammered while handing me the glass.\n\n\"Do I make you nervous?\"\n\n\"Yes, Ma'am.\"\n\n\"Why, boy?\"\n\n\"You... I... I...\"\n\nHe was so anxious his brain could barely form words. Still, I wanted to mess with him a little. \"You'd better find your tongue, and quickly, boy.\"\n\nHe took a deep breath and attempted to calm himself enough to speak. \"I see what you do to those submissives, how you use them, how you break them, how you...\" His voice trailed off and he looked down, unable to meet my intense gaze.\n\n\"And you want to experience that for yourself?\"\n\nHe quickly looked up into my eyes. \"Yes, Ma'am.\"\n\n\"You're not mine, Geoffrey, I don't have a say in what your Mistress allows you to experience.\"\n\n\"It's just... you're so beautiful... maybe you could... you know... talk to her for me...\"\n\nI took a sip of my drink. \"It's not my place, you're her property. This is something you need to discuss with her.\"\n\n\"Yes... but--\" He was cut off by a voice that came from behind me.\n\n\"You're a house slave, and you're not ready to be used in the way you've seen us use others.\"\n\nI turned and watched Edith walk into the room. The look of shock on his face from being in the presence of his Mistress was quickly replaced by one of dejection when he heard the answer to his request.\n\n\"Yes, Ma'am,\" he said solemnly.\n\n\"Now leave us,\" she snapped. We waited while he expeditiously left her office and closed the door behind him. Edith sat at her desk and poured a drink from the bottle.\n\n\"I want to thank you again for agreeing to this session on such short notice, I really appreciate it,\" she paused for a moment, \"he's one of my best clients and it really does mean a lot to me.\"\n\n\"It was no problem, really.\"\n\nShe reached inside her desk, pulled out a thick envelope, and slid it over to me. After taking a sip of her drink, she exhaled deeply and our topic of conversation turned to Geoffrey.\n\n\"He's so young and impatient, I'm not sure what to do with him,\" she said.\n\n\"How long has he been with you?\"\n\n\"A little over a year.\"\n\nI was very curious and wanted to ask more questions about their relationship, but decided against it. I waited patiently in the hope that she would open up and tell me more. She took another sip of her whiskey before speaking.\n\n\"He's the only child of my best friend and my godson, actually. She was transferred to the east coast by her employer and she asked if he could live with us so he could graduate from high school with his friends.\" I took a sip of my drink while processing this new information. \"It didn't take him long to figure out what I did for a living and he asked to be trained in the lifestyle.\" I nodded my head in acknowledgement. \"He'd just turned seventeen when he moved in with us and I made him wait a year before I began training him.\"\n\nThrough my research on Fetlife, I knew this was a common 'hard limit' among dominants. Legally and ethically, submissives had to be eighteen before they could enter the lifestyle and choose to submit.\n\n\"He's very docile and I know he'll respect your wishes,\" I said.\n\nShe shot me an apprehensive look. \"He's young and impetuous. He wants to experience everything he sees me doing to others.\"\n\n\"He doesn't realize how good he has it as your house slave. People would pay a fortune to see what he sees, what goes on in your playroom.\"\n\nShe took another sip of her drink, which drained the glass. \"It's more than that... he's quite smitten with you, I can tell.\"\n\n\"He's like a puppy chasing a car, he wouldn't know what to do with it if he caught it.\"\n\nShe laughed, then a serious look broke over her face. \"I could use your help training him.\"\n\nMy eyes widened. \"I thought he was only going to be your house slave.\"\n\n\"He wants more, and like all submissive men he'll either get what he wants from me or he'll look for it elsewhere.\"\n\nI thought for a moment. \"Perhaps we could trade services, then.\"\n\n\"How so?\"\n\n\"Chris would benefit from submitting to a more experienced Domme.\"\n\nThere was a comfortable silence while she refilled our empty glasses. \"I'm open to the idea, but are you sure about this? Giving your husband, your property, to me for a session, it's a big step.\"\n\n\"I want to give him the opportunity to broaden his horizons and experience everything this lifestyle has to offer. I know he'd benefit from your knowledge.\"\n\n\"What types of activities do you want him to experience?\"\n\n\"I'll leave that up to you.\"\n\n\"And his limits?\"\n\n\"I want to give you a free hand. If things become too intense, he knows to use his safewords.\"\n\n\"He's tapped out before, correct?\"\n\n\"Yes, when I caned him, but that's the only time... so far.\"\n\nWe took a sip of our drinks and there was a comfortable moment of silence. \"What about Geoffrey? He appears to have much less experience in the lifestyle than Chris,\" I said.\n\n\"I've really only used him for sex, aside from his house-slave training. Your husband has endured much more than Geoffrey, but you'll change that.\"\n\n\"Can I ask you a personal question?\"\n\n\"Of course, dear.\"\n\n\"Your husband... he's okay with Geoffrey and... you know... everything else?\"\n\n\"Yes, he is. My husband is vanilla and wants no part in the lifestyle, but he knows it's an integral part of my sexuality as well as my profession. They say opposites attract and that must be true, because we have a very happy marriage despite being polar opposites.\"\n\nI smiled. \"As long as both of you are happy, that's all that matters.\"\n\n\"Exactly.\"\n\nI felt so comfortable around her. We were kindred spirits and it was as if I could feel our relationship deepening. I'd chatted online with other Dommes on Fetlife, but she was the only one I'd met face-to-face, and that had created a deeper personal experience.\n\n\"I want to apologize for that kiss earlier,\" she said. \"I got caught up in the moment, in the intensity of the scene... it was just a spontaneous act... and--\"\n\n\"Please... don't apologize... it was intimate... and... you know... really nice.\"\n\nLittle smiles broke across our faces. \"So, Geoffrey,\" I said while looking seriously into her eyes.\n\n\"Mind his safewords, of course...\"\n\n\"Of course... that goes without saying...\"\n\n\"Use him and break him, understood?\"\n\nA devious smile broke across my face. \"Yes, Ma'am.\"\n\n- - - - -\n\nI was exhausted when I got home Sunday night. The long, intense session with Edith had really taken its toll on me physically. Chris was already asleep, and I slipped into bed beside him and fell into a deep restful sleep. We both had to get up early the next day, and it made more sense to talk to him about the plans Edith and I had made when I got home from work.\n\nI got to work at six a.m. on Monday and Liz led me through an intense free-weights workout. We were concentrating on a different muscle group each morning and that day it was biceps and triceps. When we were done I could barely lift my arms. We showered, dressed, and retired to my office with our fresh-fruit smoothies so we could have a little privacy. I'd been dreading this moment because I knew I'd have to talk with her about my sessions with Edith. This isn't going to be easy.\n\n\"So, how did it go on Saturday night, what was the guy like?\" she asked.\n\n\"When I got there the plan changed, somewhat.\"\n\n\"Changed... changed how?\"\n\n\"The session was originally going to be with him, like I told you, but it ended up being with his wife while he watched.\"\n\nShe cut her eyes at me. \"What did you do with her?\"\n\n\"She likes pain and we flogged her while she was restrained.\" I paused for a moment in an attempt to find the right words. \"We also made her go down on us, and we used strap-on dildos on her.\"\n\nThere was a look of pain on Liz's face that quickly turned to anger and I could see tears beginning to form in the corners of her eyes. \"Did you go down on her?\"\n\n\"No.\"\n\n\"Did you want to?\"\n\nI tried to keep my voice calm and even. \"I know this is difficult to understand, but It wasn't about sex, it was about a woman whose husband paid us to dominate her.\"\n\nLiz was crying openly. \"Did you kiss her?\"\n\nI didn't want to admit that, but I wasn't going to lie. \"Yes, I did.\"\n\nShe clenched her fists and slammed them down on my desk. \"It wasn't just a detached dispassionate act, you felt something for her.\"\n\nIt took me several seconds to formulate my response. \"We had a connection and I did feel something for her.\"\n\n\"You bitch,\" she snarled, \"how could you do this to me?\"\n\nNow tears were streaming down her face. I'd tried to be patient and understanding with her, but I wasn't going to tolerate this type of disrespect from anyone, much less her. All I saw was red and I started giving back as good as I was getting.\n\n\"And just how many women have you been with... how many girls have you fucked two and three at a time? I know you, so don't play the virginal innocent with me. You're the biggest slut I know and I don't remember taking any oaths of exclusivity with you,\" I said with venom in my eyes.\n\nShe clenched her fists again and for a moment I thought she was going to hit me. Then she broke down and began weeping uncontrollably. It took her a full minute to get her emotions under control enough to begin speaking.\n\n\"I haven't been with anyone or even thought about being with anyone since the night the three of us were together.\"\n\nTears were forming in my eyes and I began regretting everything I'd said to her. I reached out and gently took her hand. \"Can we talk about this calmly and rationally?\"\n\nShe pulled her hand away from mine and stood up. \"No... we can't. I love you, Greta, and you've broken my heart.\" She turned and walked out my office door.\n\nImmediately, I wished I could take back every harsh word I'd said to her and I regretted losing my temper. However, the more I reflected on the situation, the more I realized I wasn't ready to commit to anyone besides Chris. Liz had been with a lot of women and men, and after all that sexual exploration she was at a point in her life when she wanted to settle down and be in a devoted relationship. We were just at different places. Unlike her, I was just beginning to explore the joy and wonder of being with women and of exploring BDSM, and as much as she tempted me I wasn't willing to give her what she wanted.\n\nIt had been a horrible day. That evening, for the first time in months, Liz and I didn't work out together. She needed space and I had to give it to her. On my way home I stopped by 24 Hour Fitness and purchased a gym membership so I could continue my exercise regimen before and after work.\n\n- - - - -\n\nIt was Wednesday evening. Because of the intense fight with Liz, I hadn't been in the mood to talk to Chris about anything Edith and I had discussed, but now it was time. After dinner, Chris joined me on the couch with our wine glasses and the remainder of the bottle that we hadn't finished at dinner. Like most evenings, when I got home I'd given him the key to his chastity device so he could unlock it.\n\n\"I'm sorry again about Liz,\" he said.\n\nI'd told Chris everything that transpired in my office with her on Monday morning and the harsh words we'd exchanged. In addition, I'd given him a graphic account of my two sessions with Edith over the weekend. At that moment, I realized that Chris was my rock, my stability, amidst the upheaval with Liz. I was so deeply in love with him, and our marriage felt so strong, so solid, that the tender feelings were almost indescribable. I reached out, took his hand, and gently squeezed.\n\n\"You know, I guess it happens. I hope at some point we'll be able to be friends again.\"\n\n\"Just give her time, you never know, she may come around.\"\n\nThere was a gleam in his eyes and I knew he was thinking about our night with her. \"You liked being with her, didn't you?\"\n\n\"It was a fun night for all of us.\"\n\n\"Yes, it was, and I miss her, she was my best friend, and...\" I felt a little tear come to my eye and I quickly wiped it away. He pulled me in and held me tight, and we exchanged a soft, romantic kiss.\n\n\"Just give her time and be patient, everything will be okay.\"\n\n\"I love you so much, baby,\" I said while wiping away another tear.\n\n\"I love you too, Greta.\"\n\nI took a sip of wine and attempted to get my emotions in check. \"There's something else we need to discuss,\" I said.\n\n\"Okay, what's up?\"\n\n\"On Sunday night Edith asked for my help in training one of her submissives.\"\n\n\"Another client... that's good.\"\n\n\"Not exactly... it's her personal house slave.\"\n\nA stunned look broke over his face. \"Geoffrey?\"\n\n\"Yes.\" Since the beginning, I'd told Chris everything and gone into minutiae about my scenes with Edith. I felt that it was very important to share every detail with my husband regarding everything I did in the lifestyle because I never wanted there to be secrets between us or have him think I was keeping something from him.\n\n\"Why would she need your help?\"\n\n\"To be honest, I'm not sure. So far she's only had sex with him, but he wants more experience in the lifestyle and she wants me to be the one to give it to him.\"\n\nHe thought for a moment and reflected on my words. \"She has feelings for him,\" he said.\n\n\"I think that's a possibility.\"\n\nA little grin broke across my husband's face. \"I think you should do it and... you know... do as much as you want with him.\"\n\nThe cuckolding thing again. Since we'd entered into the lifestyle Chris had been adamant that I have sex with another man and I'd always resisted it. I couldn't be certain how opening up our marriage in that way would affect my relationship with my husband. With all the upheaval with Liz, now more than ever I needed a stable relationship with my husband. Our marriage was so very good... dare I say, perfect. I couldn't help but think that adding another man into the mix was an unnecessary risk that I wasn't sure I was willing to take.\n\n\"I haven't decided yet what I'll do with him... but, there's more if you want to hear it.\"\n\n\"Okay,\" he said simply.\n\n\"When she brought up the idea of me training Geoffrey, I asked her if she'd be willing to do a session with you.\"\n\nHis hands began gently shaking. It was his tell, his reaction when something was too exciting for him to handle. \"What will she do with me?\" he asked in a voice barely above a whisper.\n\n\"To be honest, I don't know,\" I paused for a little dramatic effect, then said, \"I told her she was free to do whatever she wanted to you unless you chose to tap out.\" I reached down and gently began to rub his erection, which was straining against his tight trousers.",
        "\"I never dreamed I'd have the opportunity to be with a professional dominatrix,\" he said huskily.\n\nIt was as if I could see the wheels spinning in his mind as he pondered the possibilities of what his session with her could entail. I stopped rubbing his cock and and gave his balls a rough squeeze, which instantly brought his attention back to me.\n\n\"Settle down and listen to me,\" I said sharply, bringing him back under heel.\n\n\"Yes, Ma'am... I'm... I'm... sorry.\"\n\nI took a deep breath before continuing. \"I need you to be cognizant of the fact that Edith's style of play and mine are different.\"\n\nHis eyes widened. \"How are they different?\"\n\n\"She loves humiliation and that's not something we've experienced during our scenes.\" I thought for a moment. \"I know you experienced some humiliation during our scene with Liz, but generally speaking I haven't gone there with you very often.\" A little blush broke over his face and I knew he was thinking about our evening with her and how much he'd loved it.\n\n\"What will she do to me?\" he asked hesitantly.\n\n\"Again, I've given her complete freedom to do whatever she wants. Her only limit is to mind your safewords, so you'll have to decide just how far you let her go.\" His hands were gently trembling again and I was beginning to realize just how much this excited him. Then I felt I needed to give him one more warning.\n\n\"She can be vicious, I've seen it first-hand. Mind your safewords and use them if you need to... because there's no shame in tapping out.\" I continued to gently rub my husband's cock through his pants.\n\n\"If I need to... I will... I promise.\"\n\nI leaned in and we shared a white-hot, passionate kiss. \"Go to our bedroom, take off your clothes, and wait for me.\"\n\n\"Yes, Ma'am,\" he said before jumping up and running into our bedroom.\n\nI rode Chris's face for quite a while before we made love with him coming inside me, cleaning his semen from me, and swallowing it. I was still very hesitant about giving my husband to Edith for a session. Additionally, I still wasn't sure how far I was willing to go with Geoffrey. What I knew for certain was that the weekend couldn't come fast enough.\n\n- - - - -\n\nIt took us almost an hour to get from Lake Las Vegas to Summerlin in the heavy Friday-evening freeway traffic. Chris's hands gently trembled during our entire drive and I knew he was just as excited about what this evening would hold as I was. I took the Summerlin Parkway exit and got off the freeway and drove to the exclusive community of Queensridge. Fortunately, my name was on the security guard's clipboard, and he let us in without incident. My husband's mouth dropped open as we drove past the multi-million-dollar homes. Our house was nice, but it paled in comparison to these mansions.\n\n\"She really lives here?\" he asked incredulously.\n\n\"She does. Do you think we should call our realtor?\" I teased.\n\nHe laughed. \"You never know; if you keep bringing home those fat envelopes every weekend it might be something worth considering,\" he joked.\n\nI smiled. \"I don't think I'm quite there yet.\"\n\nIn all honesty, it was something that I'd been thinking about. When Chris agreed to enter into this lifestyle with me, I never thought of BDSM as anything other than a way to enhance our somewhat boring sex lives. However, after I'd met Edith and she started to instruct me and invited me to work with her I began to realize just how lucrative doing scenes with submissive men could be. I knew that I still had a lot to learn, but I couldn't help wondering if the possibility of making a career change might, at some point, be in my future.\n\nWe pulled into Edith's driveway and parked in one of the guest spots. Once we'd exited our Land Rover Evoque, my husband's eyes widened as he took in her enormous house. \"What do you think?\" I said.\n\n\"Like I wasn't intimidated enough already.\"\n\nI giggled, took his hand, and gently squeezed it. \"I was intimidated too last week, but don't let her know that, okay?\"\n\n\"Okay.\"\n\nWe walked up to the front door and I rang the doorbell. Instantly, Geoffrey opened the door. \"Good evening, Geoffrey,\" I said somewhat sternly.\n\nHe lowered his eyes. \"Good evening, Ma'am, it's good to see you again, please come in.\" He paused for a moment. \"The Mistress is waiting in her library.\"\n\n\"Lead the way then, boy.\"\n\n\"Yes, Ma'am.\"\n\nHe walked in front of us to the wide ornate door and opened it for us. Just like last week, I heard the heels of my Stewart Wietzman black leather dominatrix boots click on the white marble floor. When we walked into the large room she was sitting behind her desk and she stood up to greet us.\n\n\"Greta, it's so good to see you again,\" she said. We exchanged a little hug and a quick kiss on the cheek.\n\n\"It's so good to see you too, Edith.\"\n\nHer eyes moved up and down my husband and he quickly lowered his. \"And this must be Chris.\"\n\nHe kept his eyes lowered as he answered her. \"It's nice to meet you, Ma'am.\"\n\nShe gave me a little smile. \"He's quite a specimen, I feel like I already know him.\"\n\nA little blush broke over my husband's face. What she'd said was true, though. At one time or another during our frequent lunch dates I'd told her everything I'd done with Chris concerning the lifestyle. At first, sharing that intimate knowledge with my mentor was somewhat difficult. However, I knew she'd use everything I'd told her to orchestrate a scene that both of them would enjoy.\n\n\"I have a slightly younger model, but he'll do quite nicely. Speaking of which, you've both met Geoffrey?\n\n\"Yes we have,\" I said, while Chris nodded his head in agreement. Just like both times before, Edith's house slave was wearing skin-tight white Spandex boxer briefs that accentuated his prominent basket. The large gold hoop rings highlighted his hard nipples and his long black hair was pulled back in a tight ponytail. \"You have a very striking young man yourself.\"\n\nShe smiled. \"He's been very anxious all week since I told him that I was going to allow you to do a scene with him. Isn't that correct, Geoffrey?\"\n\nHis face broke into a little heated blush. \"Yes, Ma'am.\"\n\nMy eyes traveled over his hard, chiseled chest. It was obvious that Edith made him work out because he had very toned arms and legs in addition to his solid core. When my eyes traveled further south, I broke into a little smile when I noticed that he was already semi-erect and a little dollop of pre-cum had soiled his boxers.\n\n\"From the looks of him, I'd say he's more than ready.\"\n\nEdith's eyes followed mine and her little grin told me that my observation concerning his aroused state wasn't lost on her. \"He's quite smitten with you, Mistress Greta, aren't you, boy?\"\n\n\"Y-y-yes, Ma'am,\" he stammered.\n\n\"We'll see if that's still the case two hours from now,\" she said menacingly.\n\nNow she's challenging me. A week ago she'd told me that she wanted me to break him, as she put it, and her words gave me a new insight into their relationship. Chris was right, she cared for this boy. I got the sense that she was afraid of losing him if he remained a house slave, a sex slave, for her personal enjoyment. So she wanted him to have a harsh experience, yet she wasn't willing to do the dirty work and break him herself; she needed me for that. It was almost as if she wanted me to give him an unpleasant experience so he'd turn away from the BDSM aspect of the lifestyle and be happy being only what she wanted, a submissive sex slave.\n\n\"Before we begin,\" Edith said sternly, \"are you both comfortable with your safewords?\"\n\n\"Yes, Mistress,\" they replied in unison.\n\n\"Good. So, are you ready to get started, Mistress Greta?\" she asked commandingly.\n\n\"Yes, I am.\"\n\n- - - - -\n\nAs soon as we entered Edith's playroom I saw that she'd added a new piece of dungeon furniture. Standing near one wall was a very sturdy-looking black-painted St. Andrew's cross; the cross-pieces looked like they'd been made from two-by-six lumber. There were suspension cuffs dangling from the upper ends of the arms; in addition to the leather cuffs for the bottom's wrists there were handles he could grasp so if his knees weakened he could support his weight with his hands rather than having it all hanging from his wrists.\n\nWe had entered the room two-by-two, me with Chris and Edith with Geoffrey, but as soon as we were all inside Edith turned and pointed to Chris. \"Step over here so I can look at you more closely,\" she commanded. I made a similar gesture and Geoffrey immediately walked over and stood before me with his eyes lowered to my feet. Right away I knew this evening was going to be a challenging balancing act; as his Domme I should keep my focus on Geoffrey, but at the same time I wanted to watch and listen to what was happening with Edith and my husband.\n\nI took off my trench coat, exposing my black strapless leather corset. It had spiral steel boning that came up right below my breasts and left them exposed. I was also wearing a tiny black thong and I could already feel the moisture begin to build between my legs in anticipation of what was to come. I assumed she'd be using her new St. Andrew's cross for Chris, and I was thankful she'd installed it about ten feet away from the bed; that close proximity would allow me to keep an eye on my husband while I dominated Geoffrey. His eyes were still lowered and I gently raised his chin with my fingers.\n\n\"Go stand at the foot of the bed,\" I ordered.\n\n\"Yes, Ma'am.\"\n\nWe walked over to the large four-poster bed together and I slid onto the red mattress, resting my back against the headboard. I didn't really have a blueprint of where I wanted our scene to go, but I decided to start slowly and build some heat between us. \"Get into the bed, boy,\" I said sensually.\n\n\"Yes, \"Ma'am.\"\n\nHe slid into the bed on his knees and I raised my leg up and ran my foot over his chiseled stomach. \"Remove my boots, boy,\" I demanded gruffly, and he slowly, lovingly, slipped them off and placed them on the floor beside the bed. When he'd finished, I used my toes to roughly pinch his belly flesh. \"What do you want to experience this evening, Geoffrey?\"\n\n\"I... I... ummm... I don't know, Ma'am.\"\n\n\"You've seen me and your Mistress do so many things to others and you have no idea what you want to experience?\" I said sternly. His face broke into a little blush and I was beginning to realize just how much I intimidated him.\n\n\"I... I...\"\n\nHis powers of speech were taken from him when I slid my foot lower and ran my toes against his very prominent erection, which was now straining inside his tight white boxers. He closed his eyes and reveled in my gentle ministrations. \"You like that, don't you, boy?\" I teased.\n\n\"It feels so good, Ma'am,\" he moaned.\n\nI used the sole of my foot and ran it up and down his shaft and he began taking short little sips of breath. \"And you think you deserve all this pleasure I'm giving you?\" He was lost in the sensual moment and didn't answer me. To bring him back to me, I slid my foot lower under his testicles and pushed up, pressing his balls against his perineum. He let out a loud yelp of pain and slid back a few inches to break contact with my foot. I shot him a displeased look.\n\n\"I'm... I'm sorry, Ma'am.\"\n\n\"You think you can get away from me that easily?\" I taunted.\n\n\"No, Ma'am... I... I...\"\n\nI slid off the bed and pointed imperiously. \"Come here, boy, get your back against the headboard.\" Hesitantly he moved into position. \"Extend your arms.\" When he did I grabbed the large leather cuffs that were attached to cable ties that were securely fixed to the large oak posts of the bed. After securing both of his wrists I grabbed two items from the wall of implements, stuffed them into my corset, then sensually straddled him. \"Do you think you'll be able to get away from me now?\" I whispered into his ear.\n\n\"No, Ma'am.\"\n\n\"I think you're right.\" I pushed my breasts into his chest and my nipples instantly hardened. My vagina was a hot, wet mess and I gently ground myself onto his erection through his boxers.\n\n\"Oh... oh... God,\" he moaned.\n\n\"Do you like the way my pussy feels on your hard young cock?\" I cooed.\n\n\"I love it, Ma'am,\" he said huskily.\n\nI slid back about a foot to create some space between us. \"I've always loved these, your jewelry,\" I said while gently pulling the gold hoop nipple piercings away from his body, and he winced in pain. \"Your Mistress has decorated your body beautifully.\"\n\n\"Ummm... thank you, Ma'am.\"\n\n\"Something just isn't right, though, I think those sexy nipples are missing something,\" I teased. His eyes got wide. \"I think I may have just the thing.\" I reached into my corset, pulled out two 10-ounce weights, and held them up so he could examine them. I loved the terrified look in his eyes. \"Oh, the little house slave is scared now?\" I taunted.\n\n\"N-n-no, I'm not scared, Ma'am.\"\n\nI smiled. \"Before our scene is over, you will be.\" I fastened one of the weights to the gold hoop and he let out a loud groan. \"Oh, I think you like that,\" I teased. \"Let's try another.\" When I attached the second one to his other hoop, the corners of his eyes began to water. The weights were pulling his nipples south an inch or so and the look of extreme discomfort on his face was quite evident. \"And you thought this evening was going to be all about pleasure, didn't you, boy?\"\n\n\"N-n-no, Ma'am, I didn't.\"\n\nI smiled wickedly. \"Whether or not your beautiful body receives any form of pleasure will depend on how well you please me, little boy,\" growled.\n\n\"Yes, Ma'am,\" he stammered.\n\nI looked down, between his legs. \"Oh, that nice big cock that you were so proud of just a few seconds ago seems to be a little deflated now, what could the problem be?\" I said sensually.\n\nHe was taking short little sips of breath in an attempt to find his way through the pain and he didn't answer me. \"Oh, do you need a little help, because you know I want to see that nice big erection again?\"\n\nLittle beads of sweat were forming on his forehead. I moved my hand lower and sensually rubbed him through his boxers for several seconds before shooting him a look of disgust. \"You mean to tell me a strapping 18-year-old boy with a beautiful, nearly naked woman on top of him can't get it up?\" I growled.\n\n\"I... I can't, Ma'am, it hurts too much,\" he said while grimacing.\n\n\"I want to see that hard cock again and those weights aren't coming off until you please me, little boy.\"\n\n\"I can't, I just can't.\"\n\n\"Awww, do you need some help?\" I devilishly taunted. He didn't answer me and I gave his face a hard slap. \"You'd better answer me, boy,\" I screeched.\n\n\"Please, Ma'am, take them off.\"\n\n\"Oh, are you ready to tap out on me already? Your Mistress told me how strong and tough you are, but she lied to me, didn't she?\" I said sensually.\n\n\"I don't want to tap out, but I need help, please,\" he moaned.\n\n\"I like how weak you are, how well you beg, little boy, and I'll take pity on you.\" I reached into his boxers and took his flaccid penis into my hand. I had to admit that even soft it was still impressive. He let out a little moan when I began to stroke him. Slowly, his cock was coming back to life; however, I didn't want to make it too easy for him and I pulled a weight down an inch or so with my free hand, which elicited another low groan from his lips. \"Don't quit on me now, you're almost there,\" I said mercilessly.\n\nTears were running down his face and he was hyperventilating. I pulled the weight down further while I increased the tempo as I stroked him. After about a minute, he'd finally become fully erect for me. \"See how easy that was, I think you actually enjoyed that,\" I teased.\n\n\"It... it hurt so much,\" Ma'am.\"\n\n\"Your Mistress has treated you so gently, she's only used your beautiful body for sex, but this is what you really want, isn't it? You want to be used, to feel pain. You told her you wanted to experience everything you've seen her do to submissive men.\"\n\nHe looked at me questioningly. I knew he was now second-guessing himself. \"I... I don't know, Ma'am.\"\n\n\"You don't know what you want at all, do you?\" I said sternly.\n\nThere were a few seconds of silence as he contemplated my words. I sensually resumed stroking his shaft and he let out another deep moan. When I looked down, his pre-cum had begun to leak onto my fingers. \"I have a little rule in my house, boy. Whatever comes out of your cock goes back into your mouth.\" His eyes widened. I took his penis at the base and gave it another hard pull; more liquid oozed out onto my fingers, and he let out another loud groan.\n\nHe gave me an apprehensive look when I held my wet fingers up to his lips. \"I... I... I've never done that, Ma'am.\"\n\n\"But I'm willing to bet you demand that women do it for you. Am I correct?\"\n\n\"Some women have,\" he admitted in a mortified tone.\n\nI leaned in and whispered sensually into his ear, \"Your other Mistress does, right?\"\n\n\"Yes, she does.\"\n\n\"Your decision to obey me or not will dictate how the rest of this evening goes, little boy.\"\n\nHe shot me another apprehensive look and I could see the terror in his eyes. Then his facial expression changed and I saw he was resigning himself to the fact that this was going to happen. He extended his tongue and began to lick his secretions from my fingers.\n\nI smiled. \"Good boy.\"\n\n\"Thank you, Ma'am.\"\n\n\"So tell me, how do you taste?\"\n\nHis face broke into a deep blush. \"It tasted a little salty, Ma'am.\"\n\nI had to admit, in that hedonistic moment, I was tempted to taste him as well. But I resisted that strong impulse. It's time to move on, I thought. The weights had already been on his nipples for quite a while and I needed to get him out of the restraints. I removed the weights and he let out a low groan. Then I unlatched the cuffs. Before we proceeded, I wanted to provide him with some aftercare.\n\n\"Sit here, on the bed, next to me, okay?\" He slid over to me and our thighs gently touched. \"Are you okay with everything we've done so far?\"\n\n\"Yes, Ma'am, I am.\"\n\n\"We're out of the scene temporarily, you may call me Greta.\"\n\nHis eyes got wide. \"Okay, Greta.\"\n\n\"Is there anything we need to talk about?\"\n\nHe thought for a moment. \"This is all so new to me, I've never experienced anything like this.\"\n\nI smiled. \"That's what this evening is about, right? You wanted more experience with the lifestyle.\"\n\n\"It's just so different... I mean... watching it and then... you know.\"\n\n\"Watching and doing are two different things, aren't they?\"\n\nHe smiled. \"Yes, they are.\"\n\n\"I want you to remember something, you have safewords and you dictate how you want the evening to go, Geoffrey. It's your body, and what I do with it is up to you, okay?\"\n\n\"Okay.\"\n\n\"Do you want to continue?\"\n\n\"Yes, I do,\" he said confidently.\n\n\"Good, get down, between my feet. You can show me gratitude for our scene thus far by worshiping my feet.\"\n\n\"Yes, Mistress,\" he responded. He slid off the bed and knelt before me. I raised my leg up to his mouth and proceeded to kiss my feet, lightly, delicately, and sensually.\n\n\"Now my toes, boy, lick and suck them,\" I commanded.\n\nWhile Geoffrey was ardently worshiping my feet, alternating between kissing them, gently massaging them, licking them, and sucking on my toes, I was able to pay some attention to what Edith was doing.\n\n\"Strip down for me,\" she commanded. Hesitantly, my husband removed his clothes and stood naked in front of her.\n\n\"Most men have cocks, but I see you don't,\" she sneered.\n\nMy husband broke into a deep blush. \"I'm wearing my device, Ma'am.\"\n\n\"Your mistress keeps you locked up, does she?\"\n\n\"Yes, Ma'am,\" he said in a mortified tone.\n\n\"If I didn't know better, I'd say that you have a vagina.\" Chris didn't say anything and I was sure he was too embarrassed for words. \"Well, the majority of the time, I only dominate men, little boy, and I want to be certain that there's a cock attached to you.\" My husband looked down and was unable to meet her intense glare. \"Mistress Greta, can you give me the key to this device? I want to be certain of the gender of this specimen.\"",
        "I reached into my corset, pulled out the key, and threw it to her. \"I've been told that you're quite proficient at putting yourself into and out of chastity, so I'll let you do the honors,\" she said. After she handed him the key, Chris unlocked the device and removed the inner clasp from around his balls, and his penis extended to its normal length. Then he gently pulled the four-inch silicone tube out of the head of his penis.\n\n\"Well, you do have a cock after all, I stand corrected.\"\n\nHe was still looking down, unable to meet her intense gaze. \"Yes, I do, Ma'am.\"\n\n\"Well, now that I know that I'm not dominating a woman, I don't have to go easy on you, do I?\"\n\n\"No, Ma'am, you don't.\"\n\n\"Go over to the cross, boy.\"\n\nOnce he was there, she fastened the suspension cuffs on his wrists. Then she started flogging him on his upper back with her lightest deerskin flogger. After a dozen swings his skin was noticeably pink in a rectangular area from his shoulder blades to the center of his back, and she shifted her strikes to his ass cheeks, occasionally hitting his upper thighs as well. When those areas were equally pink she switched to a heavier cowhide flogger and repeated the areas of focus until his skin was bright red. She continued, using an increasingly intense combination of even heavier floggers and stronger swings, and Chris was making a lot of moans and groans as the skin of his back, butt, and thighs became more and more reddened. His cries of pain became louder and I could see tears running down his cheeks.\n\nEdith stopped her flogging and put her face close to Chris's head.\n\n\"Are you okay? Do you want me to continue?\"\n\n\"Yes, I want more,\" he said huskily.\n\nBut after only a few strokes of her flogger with the fall made from thin plastic laces had added streaks of even darker red to his ass he screamed yellow and Edith immediately stopped striking him. She took a big swatch of rabbit fur from the wall and began soothing Chris's skin while whispering to him; I couldn't hear her but I was sure she was giving him some verbal aftercare to accompany the gentle sensations from the fur.\n\nWhen Edith had Chris calmed down she released him from the cuffs. \"I'm thirsty, and you're going to serve me a beverage.\"\n\n\"Of course, Mistress, whatever you desire.\"\n\n\"I want you to look the part, though,\" she said sternly. \"What size shoes do you wear?\"\n\nThat's a strange question, I thought, but Chris answered immediately. \"Size nine, Ma'am.\"\n\n\"Good,\" Edith said, and then she went to a cabinet in one corner of the room and returned holding a little maid's apron and a pair of mules with two-inch heels. \"These are women's size eleven, which is the same as a man's size nine. Put the apron and the shoes on and then get me a bottle of water from the fridge.\"\n\nThe horrified expression on Chris's face was priceless. I'd never thought of sissifying him, and the thought of wearing a woman's attire was obviously humiliating to him, but the idea of having him dress as a maid was outrageously fascinating to me. Chris shot a pleading look in my direction, and I forced myself to assume a stern, unsmiling demeanor and to shake my head in a way that signaled don't look at me, this is her scene.\n\nHis face now showed resignation. He slowly reached out, took the apron from Edith's fingers, put it in place in front of his body, and tied the straps in a bow behind his back. Then he took the shoes, set them on the floor in front of him, and slowly slid first one foot and then the other into them. He moved gingerly towards the fridge, teetering on the unfamiliar heels and mincing his way in a caricature of a child taking his first steps. I had to smother a giggle, and I saw that Edith was watching Chris and grinning from ear to ear.\n\n\"Bring back four bottles of water,\" Edith called after him. Chris took them from the fridge and made his way back to stand in front of her. \"Let's see you curtsy when you present them,\" she commanded.\n\nChris's face was bright red from embarrassment, but he gamely bent his knees and bowed his head as he held up one of the bottles for Edith to take. She took it and then waved him in my direction. When he approached me he again did a little dip-curtsy and proffered two bottles for me and Geoffrey. I gestured for Geoffrey to rise and he did, but only to rest on his knees beside me. After we had taken the bottles from him, Chris turned and looked to Edith for direction, and she waved for him to return to her. She opened her bottle and took a big drink, then gestured for Chris to do the same and he did. He was still embarrassed, standing there in his apron and heels, but he was obviously trying to compose himself.\n\n- - - -\n\nAfter we all finished our water, Edith had Chris collect the empty bottles and it was time to move my scene with Geoffrey along. \"Go stand underneath the cable.\"\n\n\"Yes, Ma'am.\"\n\nOn the other side of the bed there was a long metal cable that was attached to a winch on the ceiling. The other end of the cable had a pair of thick leather cuffs so I could restrain him. We walked to the cable together and I fastened his wrists in the cuffs. Then I went to the wall and hit a button, and that took the slack out of the line, holding him taut.\n\nSensually, I ran my hand over his hard, chiseled chest. \"Your Mistress makes you work out, doesn't she?\"\n\n\"Yes, Ma'am, I spend about two hours each day in her gym.\"\n\n\"It shows. She wants a fit sex slave, doesn't she?\"\n\nHis face turned red in embarrassment. \"Yes, Ma'am.\"\n\n\"I'm going to have fun, torturing your beautiful body.\" His breathing became more ragged and his muscled legs began to quiver. \"It's the anticipation, isn't it?\" I teased.\n\n\"Yes, Ma'am.\"\n\nI ran my hands sensually over his face. \"Perhaps I should start with a cane. That way we'll find out together how much pain you'd like to experience.\"\n\n\"Please, Ma'am, not a cane, I can't handle that.\"\n\n\"You have no idea what you can handle until you try. Your beautiful, sexy body, covered in welts and bruises, do you know how much that would please me?\"\n\nTears were beginning to form in his eyes and I inwardly smiled. Psychological BDSM was even more thrilling to me than anything I'd make him endure physically. \"I'll let you do whatever you want to me.\"\n\n\"Anything, boy?\"\n\n\"Yes, Ma'am.\"\n\nI walked over to the wall and picked up a large, thick wooden cane. \"I think this will do quite nicely.\" The fear in his eyes was unmistakable. \"Can you handle this one?\" He was speechless and tears were running down his cheeks. He looked to be two seconds from tapping out and I took a little pity on him. \"I'm just not in the mood for a cane this evening,\" I said playfully. \"But this... this looks like it could be fun.\" I picked up a three-foot split-leather black riding crop and walked back over to him.\n\n\"Open your mouth, boy,\" I hissed. He opened his mouth and I placed the handle into it and he bit down, holding it. I used both of my hands to gently pull his hoop nipple rings down and he let out a little moan. \"Don't drop it,\" I warned. I sensually ran my hands down his stomach and he took another deep breath. \"Well, you must like this,\" I cooed, noticing that he'd become erect. \"Let's see what you're working with down here.\"\n\nI slid his tight little white boxers down his thighs and he stepped out of them. My eyes widened when I looked between his legs. I had to admit he was impressive. His cock looked to be about seven inches long and it was incredibly thick. I'd known he wasn't small after feeling it earlier, but I had no idea he was that well endowed. Pre-cum was already seeping out of the head, and I was tempted to make him eat it again. However, I decided against it.\n\n\"Open.\" When he did, I took the crop out of his mouth. I walked behind him and began gently tapping the crop against his tight little bottom. Slowly, I increased the intensity until both cheeks were a nice shade of pink. I heard little moans and pants and I could tell he was enjoying his first cropping. Sensually, I ran my hand over his ass and felt the heat coming off of it.\n\n\"Do you like how I touch you?\"\n\n\"Yes, Ma'am,\" he said huskily.\n\nI started slowly again and gradually increased the intensity. Little moans and grunts were emanating from his mouth and his ass was turning a very bright shade of red. Sweat was starting to collect on his back and run down to the crack of his bottom. His body was almost rigid and I knew he was close to his limit. Part of me thought of following my mentor's instruction; Edith had told me to break him. But in that hedonistic moment I decided against it. He was her slave; if she wanted him to tap out, she'd have to be willing to do it herself.\n\nWhen I walked around and faced him, he was hyperventilating and it was as if he couldn't take in enough oxygen. Sweat was dripping off his body and his face looked haggard and broken. His large erection that had been prominently on display for me was now withered and shrunken. I gently ran my finger over his face and his tired eyes met mine. \"Have you had enough, or do you want more?\"\n\n\"I want to please you, Ma'am, but I don't know if I can take any more.\"\n\n\"You did well, Geoffrey, and I'm proud of you.\"\n\nHe smiled. \"Thank you, \"Ma'am.\"\n\n- - - - -\n\nWhile I'd been cropping Geoffrey Edith had put Chris back on the cross, this time facing outward, and I'd listened to her with part of my attention.\n\n\"That's really not much of a cock,\" she taunted as she touched the head with her pinky finger. \"Unlike Geoffrey, there's not a lot here for me to work with.\" She sighed theatrically. \"Oh, well, I'll just have to make do.\"\n\nShe walked over to her wall of implements and returned shaking out a long whip. She swung it back and forth a couple of times, holding the four-foot-long whip by the knob at one end, and I could see that Chris was scared shitless. She snapped her arm and the whip flashed by his body; it sounded like she'd fired a gun. Chris was shaking his head hysterically, and Edith gave him an evil grin.\n\n\"Do you know the damage I can do to your body with this whip, little boy?\" she said menacingly.\n\nMy husband looked like he was moments away from breaking out into tears from the intense fear I knew he was feeling. Chris shook his head even more emphatically and whimpered, \"Please, no, Mistress,\" he whispered.\n\nEdith took the fringed end of the whip in her hand and ran it lightly over his skin from shoulder to waist. He'd completely lost his erection when she'd cracked the whip, but she took his cock in her hand and stroked it, restoring a partial stiffness to it. Then she slid the whip across his chest and he moaned. She backed away and began swinging the whip back and forth horizontally. The whip made soft popping sounds as it moved and then she slowly inched forward until the fringed end was just grazing his chest. From the expression on his face it was clear that Chris was surprised by the sensations he was feeling; even when the whip started to leave red streaks on his body he was just moaning softly. She smiled when she noticed his expression and approached him.\n\n\"You like the way that feels, don't you?\"\n\n\"Yes, I do, Mistress. I thought it was going to really hurt.\"\n\nShe reached down and slowly stroked his cock, bringing it to full hardness. \"Do you want more?\" she said sensually.\n\n\"Yes,\" he said lustfully.\n\n\"Good, boy.\"\n\nShe backed away from him and started the whip moving again, this time alternating between his chest and his thighs. The speed and the intensity of her swings increased steadily, and soon Chris was groaning and moaning and crying out as the pain worsened. He hung his head and I saw tears start to drip from his eyes, and I wondered how much more he was going to be able to take.\n\nWhen he raised his head and looked like he was about to speak, Edith stopped whipping him. He lowered his chin to his chest in obvious relief. \"You like pain, don't you boy?\"\n\n\"Yes, I do,\" he said through deep gasps of breath.\n\n\"You've never been whipped like this, have you?\" she said sensually.\n\n\"No, Ma'am, I haven't.\"\n\n\"You've only been caned, and that was for punishment, correct?\"\n\n\"Yes, Ma'am.\"\n\n\"You must just be a pain slut, boy.\"\n\nHe broke into a little tired smile. \"Yes, Ma'am, maybe.\"\n\n\"Do you want more?\"\n\n\"Yes,\" he whispered.\n\nShe went to the wall of implements and brought back a riding crop and a thin, flat, foot-long piece of wood. His cock had deflated from the intense whipping but when she reached down and stroked it he quickly grew to full hardness. \"Do you like my hand on your cock?\" she teased.\n\n\"Yes, I love it,\" he whimpered.\n\nWhen she turned and I got a better view, I noticed that the piece of wood was actually an old-fashioned wooden ruler, the kind kids used to have in grade school. I watched avidly as she used the crop on his thighs while at the same time slapping his cock with the ruler. I noticed she was being careful to hit only the sides of his cock and not the underside where the big vein was visibly pulsing. Despite the intense pain he had to be feeling, his erection never abated and he began to groan and moan at the dual sensations she was letting him experience.\n\n- - - - -\n\nAfter I untied Geoffrey, I took his hand and led him back to the bed and he sat on the edge. He looked so tired and beat. I didn't want to appear weak to Edith, but I took a little mercy on him. \"I'll get us some water, okay?\"\n\n\"Okay.\"\n\nI walked to the corner of the room and pulled two bottles of water out of the fridge and then joined my submissive back on the bed. Again, I wanted to provide some aftercare.\n\n\"Are you okay? Do we need to talk about anything?\" I said after handing him the bottle of water.\n\n\"I'm okay with everything,\" he said after taking a sip of his water.\n\n\"You handled your first cropping well.\"\n\nHe smiled. \"You didn't go easy on me.\"\n\n\"No, I didn't. You wanted to experience everything you saw me and your Mistress doing to other men, and now you have.\"\n\n\"It's so much different, having it done to me.\"\n\n\"Being a voyeur isn't anything like experiencing it for yourself, is it?\"\n\n\"No, it's not.\"\n\n\"More than anything, this is a learning experience. It's up to you to decide what you want to experience in this lifestyle.\"\n\n\"You've given me a lot to think about.\"\n\nI smiled. \"I hope I have, kid.\" We took a long drink, which drained the bottles. \"Do you wish to continue?\"\n\n\"Yes, Ma'am, I do.\"\n\n\"Lie back on the bed.\"\n\n\"Yes, Ma'am.\"\n\nI propped two pillows at the head of the bed and he lay flat with his head on them. Then I reached under the bed and retrieved the leather cuffs that were attached to the bed posts. After I strapped the thick cuffs to his wrists, I stood beside him next to the bed. My pussy was a hot wet mess after conducting a scene with this handsome young man for an hour and a half. More than anything, I just wanted some relief. Slowly, I slid my little black thong down my thighs and got it off. His hungry eyes took me in and his cock began to thicken as he looked at my nearly naked body. I slid into bed and then sat on his chest.\n\n\"Now you're going to show me how a sex slave services his Mistress,\" I taunted.\n\nHe smiled. \"Yes, Ma'am.\"\n\nI slid forward so my vagina was directly above his mouth and I roughly pulled his hair. \"Get your tongue out,\" I growled. He extended his tongue and I lowered myself onto it and it slid deep into my soaked pussy. Instantly, bolts of electricity coursed through my body. \"Yeah, just like that, boy, long and flat, make me feel it,\" I moaned. My wetness was now soaking his face and getting into his hair. There were muffled groans and grunts coming from beneath me as I mercilessly rode his face. My body was rapidly climbing and I lifted my pelvis a couple of inches. \"Now my clit, boy, get me off,\" I growled.\n\nHe attached his mouth to my hard little bud and alternately licked and sucked. In an instant, my body exploded and a powerful orgasm washed over me. When I was coming back down and my senses were back about me, I slid back several inches and realized he was gasping for breath. My secretions covered his face and a little of my liquid was matting his thick dark hair. \"Not bad, not bad at all, boy.\"\n\n\"Thank you, Ma'am,\" he said between gulps of breath.\n\n\"I want another, are you ready to please me again?\"\n\n\"Yes, Ma'am, anything for you.\"\n\n\"Tongue out.\"\n\nHe extended his tongue, I slid forward, and the tip split my wet lips and again found its way inside me. I ground my pussy down hard on his face, cutting off his oxygen. Again, little electric shockwaves coursed through my core. I spent the next minute or so roughly riding his face but also ensuring he was able to somewhat breathe. \"Yeah, keep it out, boy, just like that,\" I moaned. I slid forward a couple of additional inches and his tongue pierced my asshole. \"Work it in there, boy, nice and deep.\" He lifted his head slightly and buried his tongue deep into my bottom, and my body began to climb. \"Yeah, just like that,\" I growled.\n\nHe kept his tongue extended and I began roughly bouncing on it, sending it deep within my body. I reached down, rubbed my clit, and my body convulsed as another powerful orgasm washed over me. When my senses were somewhat back about me, I slid back and sat on his stomach, ensuring he was once again fully able to breathe. His face was even more wet than before and his long hair was a ratty mess. When I looked behind me his cock was engorged and taking on an almost bluish-type tint.\n\nIn that hedonistic moment, I thought of sliding back and taking his long, thick member inside me. It had been years, during my college days before I'd met Chris, since I'd taken one that big. What further tempted me was the fact that I knew it was what my husband wanted. His utmost desire since we'd begun our journey together in the BDSM lifestyle was to be cuckolded and for me to have sex with another man. However, I was unsure how this would affect our marriage, and as much as I might have wanted it, I wasn't ready to let it happen.\n\nThat being decided, I knew Geoffrey had earned some special treatment. I'd mercilessly tormented him, cropped him to his breaking point, and then harshly ridden his face for my own pleasure. During our entire scene he'd taken everything I'd thrown at him in stride. Even if I wasn't willing to have sex with him, I was willing to do the next best thing.\n\nI looked down into his eyes. \"I'm willing to bet you'd like to get out of those restraints now.\"\n\n\"Yes, Ma'am, I would.\"\n\nI unbuckled the thick leather cuffs from his wrists and he rubbed them to try to get some feeling back into them. \"Have you enjoyed everything I've done to you?\" I said sternly.\n\nA tired smile broke over his face. \"I've loved it, Ma'am, all of it.\"\n\n\"Do you think you've earned some pleasure?\"\n\nHe thought for a moment. \"Yes, Ma'am, I have.\"\n\nI slid back and felt his engorged cock slide through the wet lips of my vagina and then I nestled between his open legs. There was a large pool of pre-cum that had dripped out of his penis during our face-sitting scene and I sucked it up and then looked directly into his eyes before I swallowed it. He let out a low, deep, guttural moan when I took the head of his cock into my mouth. Slowly, I worked it in deeper until the head hit the back of my mouth and bumped the top of my throat. I ensured my mouth stayed warm and wet and my saliva began to drip out and run down his thick shaft. Tenderly, he weaved his hands through my long blonde hair and I could hear more heavy grunts as I relaxed the muscles in my throat and took him down to the root.\n\nSlowly, I began to bob my head up and down. My saliva was now dripping onto his inner thighs and his breathing began to change. I'd been working this young boy up for over two hours and I knew he wouldn't have much control. I thought of stopping to settle him back down, but I didn't.",
        "While I was pleasuring Geoffrey I saw that Edith had started lightly stroking my husband's cock while she taunted him verbally. \"Look at that, Chris. Geoffrey has a much bigger cock than you do, and your wife is taking all of it and enjoying the hell out of it.\"\n\nChris was red-faced with embarrassment but his cock was harder than it had been all evening; it was obvious that he was excited by what he was watching. I wasn't going to actually have sex with Geoffrey, I wasn't willing to take him into my vagina, but I was fulfilling at least part of Chris's fantasy and I took solace in the fact that it was what we both wanted. Then Geoffrey brought my attention back to him.\n\n\"Oh, God... it feels so good,\" Geoffrey moaned. \"I can't hold it back.\"\n\nI had him so deep in my throat I didn't even taste the first heavy spurt that shot directly into my stomach. I backed his cock out a couple of inches and several thick, heavy ropes filled my mouth. I waited until he'd somewhat recovered and our eyes met. Then I took a little breath and swallowed. Edith was frantically stroking Chris's cock, and when he saw me swallow Geoffrey's semen Chris erupted, sending a huge shot of cum a couple of feet out from his body. Edith kept pumping him until he'd ejected several more spurts, then pushed him down onto his knees. \"You made a mess on my floor,\" she said gruffly. \"Now lick it up.\"\n\nChris dutifully got on his hands and knees, extended his tongue and began to lick his semen up from the floor and swallow it.\n\nEdith smiled. \"Yes, make sure you get it all, boy,\" she taunted.\n\nI ran my tongue over Geoffrey's cock and he looked at me with adoring eyes and broke into a little smile. \"Thank you, Ma'am,\" he said sincerely.\n\n\"You're welcome, Geoffrey.\"\n\n- - - - -\n\nGeoffrey and I rose out of the bed and we all began getting dressed. \"May I talk to you for a couple of minutes before you leave, Greta? Edith said.\n\n\"Of course.\" I looked at Geoffrey. \"Can you see him to the front door?\"\n\n\"Yes, Ma'am,\" of course.\n\nThen I looked at Chris. \"Wait in the car for me, honey.\"\n\n\"Yes, Ma'am.\"\n\nGeoffrey took Chris to the front door and Edith and I made our way into her library. I sat down in the chair in front of her desk and she removed two glasses from the bar and poured two fingers of Jack Daniels into each of them.\n\n\"So, I think that went very well,\" she said.\n\n\"It did,\" I agreed. \"You had a good time with Chris?\"\n\nShe smiled. \"You've done a good job with him, he's very well trained.\"\n\n\"He is.\" I thought for a moment. \"He still has his moments of rebelliousness, but overall he's very docile.\"\n\nShe took a sip of her drink. \"What did you think of Geoffrey?\" she asked.\n\n\"I think he got a little taste of the lifestyle this evening. It will be interesting to see where he allows you to take him.\"\n\n\"You went easy on him.\"\n\n\"Yes, I did.\"\n\n\"Why?\"\n\n\"He belongs to you, not to me, and I was a little apprehensive about taking him too far too quickly,\" I admitted.\n\n\"I have a long way to go with him.\"\n\nI took a sip of my whiskey. \"Maybe you do, but I think I gave him a good first experience and I hope you were pleased with our scene.\"\n\n\"I was, and I'll be talking to him more about where he wants to go in the lifestyle.\"\n\n\"Can I be honest with you?\"\n\n\"Of course.\"\n\n\"Keep an open mind. I get the sense that he wants to be used for more than just sex. Like any submissive man, if you lead him, he'll follow you.\"\n\nShe smiled. \"You're very intuitive, who taught you to be such a good Domme?\"\n\n\"I'm looking at her.\"\n\nWe each took another sip of our drinks, which drained the glasses. \"So, lunch on Monday? If you're available, I need your help next Saturday night.\"\n\n\"It's a date, both times.\"\n\nWe both stood up and exchanged a little hug. Even though I didn't follow her request to break her slave, she was happy with me and my relationship with my mentor was as solid as ever. I walked out of her office, made my way to our car, and got into the passenger's seat.\n\n\"Did you enjoy the evening, honey? I asked.\n\n\"I loved it, it was amazing,\" he gushed.\n\nSince I didn't get a chance earlier, I wanted to provide a little aftercare. \"Is there anything we need to talk about?\"\n\nHe thought for a moment. \"I didn't like wearing the apron and heels,\" he admitted.\n\n\"I know, I didn't like that either. Male feminization apparently doesn't do much for either of us, so that's an area of the lifestyle that we won't ever explore together; but for one evening, I'm glad you experienced it and tried something new.\" I gently rubbed his thigh. \"What was your favorite part of your scene with her?\"\n\n\"When she put me on that cross and whipped me, God, that was intense,\" he gushed.\n\nI smiled. \"I'm glad you enjoyed it.\"\n\n\"We need to get a cross like that, but I have no idea where'd we'd put it.\"\n\nWe both laughed. \"I guess we need a bigger house and a playroom like hers, huh?\"\n\n\"Yes, we definitely do.\"\n\nThere were a few moments of comfortable silence. \"Are you okay with everything I did with Geoffrey?\"\n\n\"I loved it, but... ummm... you didn't go far enough with him,\" he teased.\n\n\"I'm not ready for that, baby,\" I said gently.\n\n\"I know you're not, but maybe someday?\" he asked hopefully.\n\nI smiled. \"Maybe.\"\n\nHe gently rubbed my thigh. \"It was hot as hell, watching you with him.\"\n\n\"I'm glad you liked it,\" I said shyly.\n\n\"Loved it, I loved it, honey.\"\n\n\"So no regrets?\"\n\n\"None at all.\"\n\n- - - - -\n\nIt was 8:00 on Monday morning when I stepped into my office. Before I got to work I spent two hours at 24 Hour Fitness doing an intense leg workout and a core workout. I still had a couple of stubborn areas of cellulite around my thighs, but they seemed to be gradually improving, which kept my motivation high. As I sat down behind my desk there was a knock at the door. When it opened, my jaw dropped open; it was Liz.\n\n\"Can I come in?\" she asked hesitantly.\n\n\"Yes, you can.\"\n\nShe stepped into my office, shut the door, and sat down in the chair in front of my desk. There were a few moments of silence; it was as if she didn't know what to say to me or how to begin our conversation. So I stepped in.\n\n\"I'm glad you're here and we need to clear the air, but there isn't going to be any yelling by either of us, okay?\" I said somewhat sternly. \"Unlike the last time we spoke, we're both going to behave like adults.\"\n\nShe smiled. \"Okay.\"\n\nNormally, I was the one who took charge, but she'd come to me and I waited patiently for her to continue.\n\n\"I've missed you, Greta,\" she said shyly. \"Over the past few months you've become such a big part of my life, and I want that back. I want you back.\"\n\n\"We have a lot to talk about, don't we?\"\n\n\"Yes, we do.\"\n\n- - - - -\n\nTo be continued..."
    ],
    "authorname": "melanieatplay",
    "tags": [
        "female dominant",
        "male submissive",
        "bdsm",
        "las vegas"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/a-femme-domme-tale-ch-07"
}