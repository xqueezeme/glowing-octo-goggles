{
    "title": "There and Back Again Ch. 043-044",
    "pages": [
        "Chapter Forty-Three: Best Laid Plans\n\n\"So, I had something to ask you.\" His tone was strange, but I couldn't place it.\n\nI stepped across the room, gathering up the pile of clothes I'd left at the foot of the bed when I'd unpacked earlier. \"Keep talking. I'm going to change my clothes. Why don't you change out here?\"\n\nI ducked into the curtained area, forcing myself to take a deep breath to calm my nerves. As if spending my first night in a bed with a man wasn't enough to make me anxious, the plans I'd hatched with Leliana left me almost hyperventilating. I need to focus. Changing took me only seconds. I planned to spend however long it took Alistair to change trying fervently not to pass out.\n\n\"So, you were saying? You had a question for me?\"\n\n\"Well, sort of. I...Hmm. How do I say this? You'd think it would be easier, but every time I'm around you I feel as if my head's about to explode. I can't think straight!\"\n\nI froze in the middle of running my fingers through my hair nervously. It couldn't be.\n\n\"I don't know whether to be offended or flattered, Alistair.\" My voice was wavering, my nerves showing through, and I hoped he wouldn't notice.\n\nThere was a strange hitch in his voice too. \"I...uh...please don't be offended. It's definitely a compliment. Here's the thing. Being near you makes me crazy, but I can't imagine being without you. Not ever. Maybe this is too fast -- I don't know -- but I know what I feel. I wanted to wait for the perfect time, the perfect place...but when will it be perfect? If everything were perfect, we never would have met.\"\n\nIt couldn't be, but it is. Maker, but we have ridiculous timing. I was briefly proud of myself for thinking in Fereldan curse words. I stepped out from behind the curtain. He was wearing only his soft sleep trousers, as I knew he would be. My plan was always to catch him off guard and half dressed, but when I had imagined it, he wasn't propositioning me at the same time. The realisation that he wanted me -- really, really wanted me -- sent tendrils of heat racing up and down my spine.\n\nAlistair's back was to me, his skin practically glowing in the candlelight, his glorious muscles shifting as he searched through his pack. I knew what he was looking for, knew he wouldn't find it.\n\nI cleared my throat, interrupting him as he opened his mouth to continue. \"Are you looking for something, love?\"\n\nHe jumped a little, but didn't turn around. \"Huh? Oh. Yeah, my tunic. I swear I had put it on the bed, but I can't find it anywhere. Have you seen it?\"\n\n\"This tunic?\"\n\nAs he turned, I held out my arms, waiting. My gaze was glued to his face, and I couldn't breathe. When he caught sight of me, he froze, staring, his mouth slightly open.\n\nI was wearing nothing but his sleeping tunic, the last piece of relatively clean laundry he had kept out when we sent our clothes to be washed. It was off-white, though I guessed it probably started out actually white. It was enormous on me -- it hung down past mid-thigh, could have wrapped around me twice if I'd cut the seam, and it smelled of him. From his vantage point, with the candle behind me, I was sure he could see the outline of my body through the well-worn fabric. One shoulder protruded through the neck of the garment, peeking out through the mass of my hair which was down, for once, still curly after my bath earlier.\n\nI was feeling self-conscious and afraid, and I had to actively think about breathing, drawing slow breaths in through my mouth, trying not to faint. I was debating what to say -- try to break the ice? Try to pull off the seductress act? -- and completely blanked. I might as well have been mute. When Alistair didn't speak for a while either, I dropped my eyes, looking away and biting my lip anxiously.\n\nMaybe he doesn't want this. Maybe I misunderstood, heard what I wanted to. I was having a panic attack. All of a sudden I knew. In the game, Alistair only ever fell in love with a female Grey Warden. And what was I? A stupid, helpless, useless girl. I had been fooling myself.\n\nI heard quick steps, and then Alistair was there, his gentle hands on my face, lifting to look him straight in the eye as he hunched over to be closer to my height.\n\n\"Hey, hey. Sierra. Come back to me. Stop thinking about that guy. It's just me.\"\n\nI was completely confused. I'd expected him to either touch me, or to reject me...not to ask me about some other guy. \"What? What guy?\"\n\n\"That other Alistair. The one from your performance. I'm not that guy, okay? I'm right here. The one who makes an ass out of himself at every opportunity. Pricks his thumb on the thorn of a romantic gesture. Who's loved you since the day we met.\" He straightened, his expression frustrated. \"I'm not that other guy who doesn't know you. I can always tell when you're thinking about him. You go all distant, and I can see you're a million miles away. And it's always when you're feeling insecure about us. You think about him, expecting a certain response because it's how he would respond. But I'm not that guy! I'm real. I'm right here. I love you. I just...I need you to stay here, with me. I'm sure the reality doesn't measure up to what you expected, but I need you, Sierra. Please.\"\n\nI had tears in my eyes by the time he was done. He knows me so well! How did that happen? Because he was exactly right. My Alistair wasn't the game Alistair. Things had changed. I had changed them, for better or for worse. And this Alistair...he deserved more than constantly being compared to someone who didn't really exist. He'd been living in a shadow, a shadow of my own making, and it was a shadow that made me insecure and keep trying to push him away. From the first moment we met, I was hiding behind that shadow. I squared my shoulders, resolving not to do it again. This was my Alistair. I would take him at face value, not assume he'd suddenly become the shadow. I would take my life back and make it what I wanted, what I always feared I'd never have, and I wouldn't let the fear get in my way.\n\n\"You have to understand.\" I swallowed nervously, and continued. \"This was hard for me.\" I turned, unable to look into his eyes for this. \"I loved him before you and I even met. Or, I suppose, I would have, had I known he was real. I was lonely, and he was...perfect, in a word. But fairy tales don't come true, you know. I spent twenty-four years learning that the hard way. So when I met you...I knew it couldn't be real. It was just a fantasy, and one that would get me hurt. It wasn't real. It couldn't be.\"\n\nI turned back, taking his hands and replacing them on my cheeks before covering them with my own, smiling softly. I went up on tip toes, leaning in to kiss his lips lightly. \"You're right about me. I'm sorry. I've been so afraid of him, of what it would mean to be with him...I didn't see that I'm not. I'm with you. But you're wrong about something.\" I kissed his cheek gently, leaning in further. \"The reality is so, so much better. Better than I ever imagined. I love you, Alistair Theirin. You. Not him. I'm sorry I didn't see it until now.\"\n\nI rubbed his nose with my own, and he smiled. He really is my own personal sunshine. When he was happy, everything was right with the world. Suddenly I didn't care -- not about what anyone else thought, not about what would happen in the future; not even about whether we were about to have sex. As long as I could be with him, I'd take what I could get and be thankful for every second of it. And I knew -- my Alistair loved me. Wanted me. And I wanted to hear what he had to say next, instead of fearing it.\n\nI prompted him. \"I interrupted you, earlier. You were asking me something.\"\n\n\"I was?\" He'd gotten entirely distracted, which had been the point, though it didn't turn out the way I had planned.\n\nI giggled. \"Yes. You started by telling me I make your head explode. Then you told me something about how the timing isn't perfect. I was hoping you might finish that line of thought, or was that all? I make you crazy, and it's not perfect?\"\n\nHe flushed, dropping his hands in embarrassment, though I held on to them so he couldn't get away. His smile faded a bit. \"...Oh. Right. That. Um.\" He gulped, nervous, and examined my face for a long, serious moment. I saw an echo of my own fear of rejection, and watched him over-ride it. His smile returned, a smirk really, as his gaze travelled from my face, down over my scantily-clad torso and my bare legs, then back to my face. \"I think you know where I was going with that.\"\n\nI grinned, face flushing under the smug scrutiny. \"I know where he would have been going with that. You, I can't be sure.\"\n\nHis eyes twinkled and his grin widened. \"What's that the Orlesians say? Touch\u00e9.\" I giggled. \"I deserved that. So allow me to pick up where I left off. You do make me crazy, but I can't imagine being without you. Not ever. Watching you downstairs, when that man grabbed you...and having Isabela leering at me like that made me realise. You know I've never,\" he licked his lips, nervous again, \"done anything like this before. But...Maker's breath. I love you. More than I thought possible. Anytime anyone else even looks at you I want to run them through with my sword. I can't wait, hoping against hope no one will steal you out from under me. But even if I lose you tomorrow...I want to be with you. Here. Tonight.\"\n\nI watched his face closely. Nervousness, undoubtedly, but no hesitation. No reluctance. \"Are you sure?\" I smiled softly and touched his cheek, the way I had the first time he'd told me he loved me. \"Because I'm not strong enough to say no.\"\n\nWe both grinned, the memory sweet. Suddenly he reached out for me, pulling me into a tight embrace. He cradled my head against his chest, his arms locked around me, and I stroked my own hands down his back. I breathed in deeply, smelling only soap and a man-smell I'd associated with him from the first time I'd ever hugged him. His bare chest was almost scorching against my cheek, and the heat of his hands on my back was noticeable through the thin fabric of my only clothing. My breasts were mashed up against his belly, and I could feel a bulge against my own abdomen. I groaned softly, my amusement turning to arousal in seconds.\n\nHe leaned down to kiss me, and I extracted my arms to wrap them around his neck. It started soft and sweet, but then I felt his tongue hesitantly touch my lip and I opened for him, allowing my own tongue to be drawn into a complicated duel. His hands roamed down my back, and he swallowed my moan as he cupped my almost-bare ass in his big hands, pulling me closer to him.\n\n\"Bed,\" he gasped, turning us to try to back me towards the furniture in question.\n\nEqually breathless, I made a negative noise low in my throat. \"Lose the pants.\"\n\nHe pulled back, surprise written on his handsome features. \"But...I'd only have my smallclothes on, then.\"\n\n\"And I'm not wearing any smallclothes. You're overdressed, Chantry boy.\" I stroked my hand over the bulge in his trousers just once, and he growled, sending shivers up my spine.\n\n\"Sierra...\"\n\nHis voice was low and consumed with lust, and it sent sparks straight to my nether regions. Maker, I love his accent. Especially when he says my name like that...I squirmed slightly, and with a groan he grabbed the ties to his trousers, pushing them off in one hurried motion. I watched unabashedly, staring at his almost naked body. His skin was still slightly luminescent in the candlelight, only a light dusting of coarse, blond hair in a trail disappearing beneath his smallclothes. He'd shaved his face before we entered Denerim, and was now sporting just a little bit of stubble on his chin, which suited him well. The muscles in his legs, which I'd never seen unclothed before, matched his shoulders and chest for definition. And the bulge barely hidden by the scrap of linen he called smallclothes was sticking out proudly. Oh my! Overall, he made my mouth water.\n\nWhile he stripped, his eyes never left me. When done, he reached down, and before I could object, picked me up bridal style, my head on his left shoulder, his right arm under my knees. I gasped and wrapped my arm around his neck.\n\n\"Don't drop me.\"\n\n\"Seriously? I've carried you all over Ferelden while you were wearing armour. I think I can make it four steps to the bed.\"\n\nI nodded apologetically. \"Still not used to it. No one, where I came from, is strong like you. It's...impressive.\"\n\n\"Why, thank you, my lady.\"\n\nHe strode to the bed, examining it for a brief moment before adjusting his hold and pulling the covers back. He lifted his leg and levered himself onto the high mattress, not even jiggling me slightly me as he bent to lay me down on the soft satin sheets. He slid down beside me, and suddenly we were lying, side-by-side, on a bed.\n\n\"That was...you're really good at that.\"\n\nHe snorted. \"I should be. I've practiced it enough.\"\n\nMy confusion must have been plain, because his own expression grew puzzled. \"When do you practice putting a woman to bed, Alistair?\"\n\n\"Well, I suppose a bedroll is technically different, but the process is pretty much the same.\"\n\nI stared at him, eyes widening in shock. I never dreamed...\n\n\"You? Put me in my tent all those times?\"\n\n\"Well, yeah. Who else? It wasn't Sten.\"\n\n\"I just assumed it was Aedan.\"\n\n\"He did a few times, but it was tougher for him. He's not as strong, he kept bumping you. You'd usually wake up. You really never knew?\"\n\n\"I...\" I trailed off, seeing yet another side of Alistair I'd not expected. \"You thought I was sleeping around, betraying Duncan, and you carried me into my tent without waking me?\" He nodded. \"Whatever for?\"\n\nHe blushed. \"I liked you. I wasn't happy with the situation, but you needed rest, and you wouldn't go. I didn't understand it, and I couldn't ask without revealing my interest, but...I wanted to help you.\"\n\nI finally laughed. It was too ridiculous. I chortled, and Alistair looked at me like I was crazy.\n\n\"It's too late to change it now, but oh, how I wish you'd said something.\"\n\nHe smiled hesitantly. \"Likewise! You never did either.\"\n\nI rolled to my side, facing him. \"Yes, but...everyone knew. Except you, that is. Clearly I didn't hide it very well.\"\n\n\"You told the others?\"\n\n\"No! Of course not. But Duncan figured it out before we even met you -- I was trying to make a good impression on him, and over-volunteered information about you. Aedan guessed that first day. Well, I suppose technically, the second day, after I spent the night crying on Duncan's shoulder in the woods. Leliana and Morrigan both knew by the time we reached Redcliffe. I don't know when Sten realised, but he's not dumb. Even Cailan, as self-absorbed as he is, realised, and Teagan knew by the time you left for Kinloch Hold.\"\n\nHe blushed. \"Really?\"\n\n\"Why do you think Leliana was so frustrated with us? Maker, Alistair, everyone had been trying to get me to tell you. I was too scared.\"\n\n\"Well...they all knew how I felt, too, I'm sure. I didn't get teased like it sounds you did, because I'm guessing they thought I'd run away. Too inexperienced.\"\n\n\"I don't know about that. They certainly didn't figure it out within minutes, the way they all seemed to with me.\"\n\n\"So...this is going to sound really conceited, I'm sure, but if you were so certain, so soon, how did you...\"\n\n\"Resist you? Sheer terror.\"\n\n\"I still have trouble understanding why you were so afraid. I'm not very intimidating.\"\n\n\"Are you crazy? The best looking man in all of Ferelden? The heir to the throne? Strong enough to carry someone all over Thedas without complaint? You underestimate yourself. But that's not really what I was -- am -- afraid of.\"\n\n\"You still are?\"\n\n\"Think about it from my perspective. My possibilities aren't stellar, really. Either I'm insane, and none of this is even happening, or it's real and we have no idea how or why. I could get yanked back at any time, never to return, in which case I never get to see my brother or the man I love again. And even if it's real, and if I manage to stick around...who am I? I'm a liability, politically, and no one of real importance. Aedan may believe that I'm his sister, but no one else will. I have no skills, can't even go to the bathroom without the risk of picking the wrong leaf and giving myself a very unfortunate rash. If I disappear in front of the wrong person, I'll be arrested as an apostate. And if somehow I manage to make a life for myself despite all of that -- in thirty years, give or take, I'll be alone. You and Aedan will head into the Deep Roads, and I'll be left behind in a strange world with no family.\"\n\nHis expression was what I'd call 'shocked and appalled'. His mouth hung open, and I could practically see the wheels turning.\n\n\"Maker, Sierra. I never...I never thought about it like that. I'm an idiot. You must have been so scared!\" He crushed me to his chest, one hand stroking my hair, the other pressed against my back. I snuggled there comfortably for a minute, just enjoying the feeling.\n\n\"It's okay. I've come to terms with it, really. I realised -- staying away from you wouldn't actually make any of those options better; I'd just be lonely while I was here in addition to all the rest. Once I realised that, I was staying away from you for your sake, or at least I thought I was. And anyways, I said this to Aedan way back when, and it was true -- if you'd spent five minutes trying to convince me, I'd have crumbled. I did, in fact, if you recall.\"\n\n\"Why didn't I try sooner?\" His face looked aggrieved. \"We've wasted so much time!\"\n\n\"That's exactly it. Like I said -- I wish you'd said something sooner. I wish I wasn't such an idiot.\" I giggled, and he flashed me an embarrassed grin. \"We're ridiculous.\"\n\n\"Yep. Now, speaking of, are you going to tell me what this is all about?\"\n\nHe gestured down at my near-nakedness, and I giggled again.\n\n\"I was trying to tempt you.\"\n\n\"What?\"\n\nI sighed. \"It's Leliana's fault, really. She was teasing me about us sleeping together, and I told her I didn't think you were ready and I wasn't going to push you. She insisted that you were, but that you were afraid I'd turn you down. She convinced me that you would have taken me making you put your shirt on the other night as a bad sign. So she talked me into trying to...tempt you.\"\n\nHe raised his eyebrows, not saying a word. I continued. \"I was trying to make myself hard to resist. And Leli tells me there's nothing sexier for a man than a woman wearing nothing but his shirt. It was supposed to give you an unsubtle hint that I was...receptive.\"\n\n\"But I beat you to it.\"\n\n\"Yeah.\"\n\n\"I win!\"\n\n\"Yeah.\"\n\n\"Leliana's sort of smart.\"\n\n\"Oh?\"\n\n\"You do look amazing in my shirt.\"\n\nChapter Forty-Four: The Night Before\n\nLying side-by-side on the bed, he smiled. \"You do look amazing in my shirt.\"\n\n\"It was the only clean one you had.\"\n\n\"It's perfect. You're perfect.\"\n\nHe stayed there, looking awkward for a moment, smiling at me but clearly nervous. I reached up to stroke his cheek.\n\n\"Hey. You're overthinking things. Just relax, okay? It's going to be okay.\"\n\nHe leaned into my hand, his eyes closing momentarily. \"I just don't want to do something wrong.\"\n\n\"What's the worst that could happen?\"\n\n\"I could hurt you. Or embarrass myself.\"\n\n\"You won't hurt me. And seriously, with all the embarrassing things I do on a daily basis, it's really only fair if you do something at least mildly silly.\"\n\nHe grinned at me, a flash of the more confident Alistair that I'd been getting used to breaking through. He leaned down and pressed his lips to mine, softly at first, his hand stroking my hair. He brushed my ear, making me shiver, and then my neck, which elicited a gasp. The kiss rapidly deepened, and then his tongue sought entry, stroking alongside my own. His hand splayed across my stomach over the tunic, and he rubbed softly, just shy of tickling. His other hand wiggled underneath my head, grasping a handful of my hair and tilting my head back. We kissed for an eternity, wrapped up in each other, mostly even oblivious to our states of undress. My hand was on his chest, enjoying the feeling of his firm muscles underneath the smooth skin.",
        "Anxious, and feeling like perhaps Alistair was procrastinating just a little bit out of fear, I finally grabbed the hand that was stroking my hip and stomach and impatiently pulled it upward. Not fighting me, but not taking any initiative either, I had to cajole it all the way up until he cupped my small breast with his hand. My own hand stilled on his chest as I was distracted by the sensation.\n\nI moaned softly as his fingers curled around the mound of flesh, and his thumb stroked over my nipple; it crinkled and tried to gouge a hole in the palm of his hand, and his breath hitched, pulling him out of the passionate kiss. He moaned my name, sending a wave of heat down to my centre, and I squirmed, pressing against his hand and biting my lip to stifle my own feral sounds. He'd touched my breast before, it wasn't a first for either of us, but there had never before been so little in between his skin and mine. He teased lightly across my nipple again, and I gasped and arched my back, pressing harder against his hand. He switched breasts and repeated his actions, drawing an approving sigh.\n\nMy head turned to the side, pressing my forehead against his shoulder as I tried to relax and just let it happen; he took the opportunity to press a kiss to my jawline, and I shivered. Emboldened, he did it again, then sucked softly and fluttered his tongue against the skin. My voice cracked as I moaned and I turned my head further, exposing my neck and more of my jaw to his swollen lips. He obliged, shifting a little further towards my ear and repeating the process.\n\nEach time he did it dragged a response from me, either a shiver, moan, or gasp, and he moved closer and closer to my ear. Finally reaching it, he gave my earlobe an experimental lick before leaning in further to kiss the sensitive area just behind it. I whimpered, and could feel his grin and hear his chuckle as he did it again.\n\n\"You like that?\" He punctuated each word with a kiss or lick, and a caress. My nipples could have carved glass.\n\n\"Um. Yeah. What was your first clue?\" Sarcasm was the only defense I could come up with; there were unshed tears threatening in my eyes, and my only alternative was to start crying and beg.\n\nIt felt like punishment for being flip when he left my ear alone, but when he attacked the corded muscle in my neck with his lips and teeth instead, I cried out, belatedly stuffing my fist in my mouth to muffle the noise. I could feel wetness dripping down to dampen the back of his tunic under me, and I writhed purposelessly under the combined assault on my breasts and neck. His stubble tickled my skin, and everywhere he touched felt like he'd set me on fire. He bit my neck sharply, just above where my armour would sit, marking me, I was sure.\n\nHow is he even doing this? I thought he was the virgin. I gasped and shuddered as his hungry mouth reached the fold where neck met shoulder, and couldn't take it anymore; I reached up to grab a handful of his hair, pulling hard enough to get his attention, dragging his lips away from my inflamed skin and up to meet my own in a desperate, violent kiss. His tongue plundered my mouth and I sucked on it hungrily, still marveling at his skill. If he was just a shade more assertive with his hands, anyone would have thought he was as experienced as Zevran.\n\nThinking about his hands on me triggered a sudden, insane need to feel them on my bare skin; I couldn't wait any longer. I laced my fingers through his, then dragged his hand, unresisting, down to brush against my leg below the tunic. We both gasped as he made contact; the heat of him felt like it would melt me. He pulled out of the kiss abruptly to stare, enthralled, at where his hand lay still on my thigh. I held my breath, letting it out explosively as he gently, softly stroked my skin.\n\nHe groaned. \"You're so smooth. How do you make your skin so soft?\"\n\nI struggled to think; my head was foggy with lust, until I figured out what he was asking. \"Laser hair removal. I got rid of all the hair not on my head.\"\n\nHis raised his eyebrows. I shook my head, too aroused to have the discussion. \"I'll explain later.\"\n\nHe nodded, and went back to tracing patterns with his fingertips. I watched his face, his jaw tense, his eyes dilated and a little bit wild, and was suddenly worried he was on the edge of a panic attack. Hoping to forestall it, I released his hand, which kept caressing my leg with whisper-light touches, and reached up to cup his face with both of my hands. We locked gazes, and I held him there until the wildness faded a little from his expression. When he kissed me, my Alistair was back.\n\nI realised that so far, our interaction had been very one-sided. I had laid and wriggled while he played with my body; I wanted to return the favour. I pushed playfully on his chest, and surprised, he fell back, losing contact with my thigh. I rolled towards him, pulling my knees up under myself to raise me up so I could look down on my handsome templar.\n\n\"My turn,\" I whispered, and his eyes darkened.\n\nHe nodded once, and I leaned across him to press my lips down on his, my hands on the bed on either side of his head, supporting me as I kissed him almost lazily. And then it was my turn to drive him crazy with teasing licks and kisses along his jaw, my hair dragging along his collarbone making him hiss. He reached up at one point to try to guide me, but I slapped his hands away playfully and punctuated it with a bite on the tense muscle in his neck. He groaned but subsided and let me continue to play.\n\nAs I sucked on his neck, I began running my hands down the hard planes of his chest. I'd seen him shirtless before, even cuddled against his bare chest for a few minutes, but this was different. I was allowed to touch to my heart's content, and I could have stayed there for days. His muscles shivered underneath the skin as my hands passed over, and I explored every ridge and valley methodically. He had a number of small scars that I could feel, and I traced them gently, reverently.\n\nHe gasped as my hand brushed the waistband of his smallclothes, and I leaned back and grinned wickedly. I deliberately examined him from head to toe, not avoiding the obvious bulge tenting up his smallclothes, and he flushed, a combination of arousal and embarrassment, I guessed. I stroked the skin of his belly just beside his smalls, then proceeded to follow the lines of his hips with my hands, down over the fabric. It was his turn to stifle a groan with his hand. There was a damp spot forming, and I smiled, pleased with my work.\n\nIn my previous experience, I'd never really had the chance to explore -- in fact, before Alistair, I hadn't even been fondled. My first time, we were in a hurry, hidden in a rarely-used storage room at our school; I laid back on a dusty table while he lined himself up and pressed in. I was wet, both from anticipation and nervousness. There was a brief pain, followed by a vaguely warm feeling that seemed to be growing until it was suddenly cut off when he came, quickly pulling out and helping me to my feet as we tidied ourselves up and snuck back out. I never really even saw his penis, never mind touched it.\n\nI had no intention of letting the opportunity pass me by this time. \"Off,\" I demanded, blushing furiously as I grabbed the waistband of his smalls, tugging insistently.\n\n\"Wait. What?\" Alistair grabbed my hands, stopping me. His face, I assumed, was a perfect match for the colour of mine. \"But it's not fair,\" he whined.\n\nI stopped, still kneeling beside him, and bit my lip for a brief minute. I'm the more experienced. I can do this. I raised my hands out to the side, like I had earlier. I waited until he met my gaze.\n\n\"Would you like to do the honours, then?\"\n\nHis mouth fell open a little, and his eyebrows tried to climb right up into his hairline. He scrambled up to his own knees, facing me, with the tips of our knees not quite touching.\n\n\"You want me to...are you certain?\" He searched my face, and I smiled as he suppressed his obvious arousal to worry about me.\n\nI nodded impatiently. \"I've never been more certain of anything.\" I'm done with waiting for this.\n\nHe reached down hesitantly to grasp the hem of the long tunic, brushing my knee lightly, making me squirm. With one last questioning look, he lifted and I raised my arms further, turning the tunic inside-out as he pulled it over my head. My hair tumbled down around my face as it pulled through the opening, and it took me a moment to brush it out of my eyes. Vision unimpeded again, I glanced up to see Alistair staring at me, naked appreciation written all over his strong features. He still held the tunic in his hands, and his gaze roamed over my body like mine had done to his earlier.\n\nI giggled as I took the tunic from his unresisting fingers and tossed it off the bed to land, unheeded, on the floor. When I looked again, his gaze had focused firmly back on my face, and his smile was achingly handsome. He reached out and cupped my face, tugging me up onto my knees to meet him, wrapping one arm around my back, pulling me against his chest firmly.\n\n\"Maker's breath, but you're beautiful.\"\n\nI tried to reply, but he silenced me with a soft, perfect kiss. Without breaking contact, he lowered me down to lie on my back, and I felt him wiggle around as he shucked his smalls. When he joined me, he laid beside me carefully, raised on one elbow, pressed against my side. I could feel the hardness and heat of his erection against my thigh. I put one arm under his, wrapping behind him to stroke his strong smooth back. With a sudden blaze of unexpected confidence, he took my other hand, bringing it up above my head, patting it in place with a gesture that I could only interpret to mean 'stay'.\n\nHis hand stroked down my arm, skipping my ticklish armpit but ghosting his fingers across my sensitive collarbones and neck instead. He played there for an eternity as I moaned softly. I gasped into his mouth as he finally continued exploring south until he once again cupped one of my breasts, now without anything between us. My nipple, already erect from the previous activity and the slight chill of being exposed, hardened further as he rolled it gently between thumb and forefinger, pinching it deliciously at random intervals. He switched sides and did it again, with much the same response.\n\nI moaned softly in disappointment as his kiss-swollen lips left mine, but when he brought them down over the pulse-point in my neck and sucked, hard, I forgave him. And then I was breathless in anticipation as he slowly, achingly slowly descended further to lave kisses and licks on the tops of my breasts. He paused there, teasing me, until I couldn't take it anymore. The hand he'd put above my head moved of its own accord, tangling into the rumpled sandy mess of hair on his head and dragging him to my aching nipple.\n\nHis tongue tentatively flickered out to graze the over-wrought nub at the same time that he flicked the opposite one with his fingers, and I writhed. He chuckled low in his throat, and the sound was sexy as hell. Applying himself more assertively to the task, he began to lick and then suck first one nipple followed by the other, and I lost my mind entirely as I floated in a sea of need and desire and lust. His stubble abraded my skin just lightly, and provided an interesting counterpoint to the sensations sending waves of desire to my core.\n\nWhen his hand started creeping down my stomach, I realised that between panting and writhing I'd begun whispering prayers to Alistair, God, the Maker -- anyone who would listen -- begging for...something. I couldn't even have guessed what specifically I was pleading for, and all I could do was hope Alistair would soon figure it out.\n\nWhen he allowed my tortured nipple to escape his mouth to be able to watch his hand, the intense look on his face made me crazy. I couldn't have imagined Alistair ever looking at me like that; I couldn't have imagined anyone looking at me like that, before I arrived in Thedas. I watched him as he watched his fingers creep towards my centre. First contact with my mons had me jumping, and he leaned in to capture my lips in a kiss, somehow soothing me. His fingers stroked my smooth skin, and when he pulled out of the all-too-brief kiss, he looked at me with an eyebrow raised.\n\nI felt weirdly defensive; I was aware that shaving legs and armpits wasn't something women did, in Thedas, typically, and my own laser-induced baldness must have seemed strange, but somehow it embarrassed me to have attention drawn to it. I met his gaze only briefly, looking away and squirming uncomfortably.\n\n\"I told you.\" When he looked questioningly at me, I clarified. \"All of the hair not on my head.\"\n\nI looked away, face now pink not just with arousal, trying not to feel self-conscious. Alistair obviously knew me well; he abandoned his exploration to reach up and cup my cheek, turning me to face him.\n\n\"Sierra. Just because I'm surprised, doesn't mean I'm bothered.\" I risked a look up, and his serious, gorgeous hazel eyes locked me in place. \"You're beautiful. And that...\" he tilted his head, gesturing downwards, \"...is sexy. Don't ever doubt that.\"\n\nI'm sure the wattage of my smile could have melted stone. He kissed me again, sighing softly into my mouth as our tongues met, but pulled away as I grabbed his hand. More confidently, now, I tugged his hand away from my face and down, back to where he'd been before my little freak-out. He watched my face as his fingers softly touched again, and I pressed his hand harder against me.\n\n\"Please.\" I nodded, and he smiled before turning his attention back to where his hand lay. Slowly, carefully, he reached further until the very tip of one finger softly stroked over my lips. I spread my legs involuntarily, inviting him to explore further, and he licked his lips nervously before taking advantage. His finger slowly traced the cleft, and I gasped and he groaned when his finger slipped in the wetness he encountered and suddenly pressed in just a little.\n\nI hadn't had an orgasm in months -- since before that first, horrifying encounter with darkspawn in a random farmer's field -- and it took every ounce of my willpower not to just grind against that finger, get it where I wanted it to go, and finally, gloriously get the release I'd been craving since the first time Alistair had kissed me. My experience with a partner was limited, but I knew from solo experimentation and extensive, furtive reading that I peaked easily.\n\nDespite my attempt to hide my desperation, I still twitched slightly, and his finger sank in to my cleft further. I could almost feel the weight of his gaze on my face, but I couldn't see -- my eyes sank closed and I tossed my head back, overcome by my first experience of foreplay. There weren't even similarities between how it felt when he touched me, and how it felt when I touched myself. The slight trembling in his hands transmitted vibrations to my sensitive folds, and his lips on my extended neck just ramped up my level of arousal even further.\n\nHe held his hand still, and my eyes finally opened, frustrated that he hadn't moved. His expression looked puzzled and slightly ill.\n\n\"Alistair?\"\n\n\"I, uh...I don't know how to...Listen, will you show me?\"\n\nI bit my lip, torn between embarrassment and need. I nodded, and slid my hand from his wrist down over top of his calloused fingers. Pressing his pointer and middle finger slightly, I trailed them through my folds, picking up moisture. Once his fingertips were damp, I pressed harder and allowed him to explore me, from my small opening up to my erect, yearning clitoris. I teased myself with his hand, allowing him to see my reactions as he brushed against it or slipped one finger a few centimetres into my tight channel.\n\nUnable to hold out any longer, I pressed and encouraged until he got the picture and slowly, cautiously sank one finger into me as far as it would go. I groaned; I'd never experimented with toys or anything else, and his fingers were much thicker than mine. I had to stretch to accommodate him, and I could feel my muscles contracting around the invader even as I welcomed it. After a few moments to adjust, I shifted my grip and pulled on his hand, then pushed it back in in small strokes. Getting the picture, he continued on his own, gradually increasing the depth of the stroke.\n\nAs he moved faster, his hand relaxed, and his thumb naturally fell into place on my clit. At least I assume it was an accident -- if not, he's a natural! The groan and my uncoordinated hip thrust must have gotten the point across, and he began circling the little bundle of nerves with each stroke. I wasn't going to last long, it was obvious, and while I had wanted my first orgasm with a partner to be during actual intercourse, I couldn't stop. It felt too good, and I was too desperate, and some small part of me whispered that, based on every book I'd ever read, I should expect the first time we actually had sex to be...unsatisfying, so I selfishly wanted some sort of relief first. Regardless of why, all I could do was writhe in my handsome templar's arms as he brought me closer and closer to the edge.\n\nThe last vestige of rational thought I had was that I'd need to be stretched a little more to accommodate him, and now was probably the best time for it. I managed to gasp \"More, please more,\" and he complied, stopping his strokes to insert a second thick finger inside me. The extra stretch was both incredibly arousing and ever-so-slightly uncomfortable at the same time, and I rode that line higher. Returning to his previous strategy of deep, full strokes and circling my clit with his thumb, he soon had me right on the edge. As I started to crest the wave, I cried out his name and heard him groan mine. His voice, tight with intensity, low and gravelly with arousal, sent me over and I came, hard. I flooded his hand as I twitched and thrust at his fingers, ruining his rhythm as I spasmed, and suddenly felt scalding liquid on my right hip at the same time as I felt his teeth sink into my neck.\n\nI shuddered through several aftershocks as Alistair continued to move inside me, until I finally had the presence of mind to clamp my legs together, trapping his hand and stilling it. I was completely stunned at what had happened; I'd never dreamed that my Chantry virgin of a boyfriend could have undone me so easily. I clung to him desperately, panting, waiting for my head to stop spinning and my muscles to stop twitching. His lips pressed kisses to the bruise he'd left on my neck with his teeth as he caught his own breath.\n\nIt took me a few moments to realise that he was trying to free the hand I had trapped with my thighs, and I released the tension. I shuddered again, violently, as his fingers slipped out of me, and he whispered apologies in my ear.\n\n\"Are you joking? You have nothing to be sorry for.\"\n\n\"I bruised you. And I think I hurt you, not that you'll ever admit it. And...I, uh, made a mess.\" I could feel the heat of his blush.\n\n\"Did you expect sex to be a particularly neat activity? Mess-free, as it were?\"\n\n\"I guess I never thought about it.\"\n\n\"On Earth there's entire...uh...performances based on arguments over who would have to sleep in the wet spot. I'm fairly sure it's meant to be messy.\"\n\n\"What sort of performances are those?\" His eyebrows rose up his forehead in what looked like horrified fascination.\n\n\"It's hard to explain. It's sort of like when we were talking about Zevran. Making jokes about sex makes people feel less alone and helpless, I think.\"\n\nHe shook his head. \"You were raised in a culture of perverts. That's just wonderful. What did I get myself into?\"\n\n\"Hey now, perverts they may be but it was you who just turned my entire spine to jelly.\"",
        "\"Which reminds me...\"\n\nHe hopped off the bed, grabbing a washcloth off the washstand and dampening it slightly. I watched him with half-lidded eyes, his muscular body and bronze skin reflecting the candlelight slightly. I finally got my first actual look at a real-life, naked penis, and my mouth dropped open. Standing up proudly from a thatch of blond hair, he was still hard, and I certainly was no expert, but that thing looked enormous. I pried my eyes away as he climbed back onto the mattress, and noticed his face was beet red again -- clearly he'd noticed where I was looking.\n\nHe proceeded to wash his mess off my hip, and I bit my lip. He remained somewhat mottled, and was clearly embarrassed about his orgasm. I debated briefly, but curiosity won in the end.\n\n\"So I'm a bit...confused.\"\n\nHe glanced at my face briefly. \"Oh?\"\n\n\"I sort of thought...that this only happened with, you know, some sort of direct stimulation.\"\n\nHis blush deepened. \"Normally. But watching you, feeling you...Maker's breath, Sierra, I'm not made of stone.\"\n\nI reached down to gently brush against his erect length with the back of my hand, tentatively, and it bobbed once. \"Are you sure?\"\n\nHe chuckled, and I flashed him an impish grin.\n\nI stroked his cheek, and he leaned in to my hand. \"I'm flattered. Or you're just sheltered. I'm not entirely clear which.\"\n\n\"Both, probably. Can we talk about something other than me humiliating myself?\"\n\n\"Honey, hey. I'm not offended. In fact there's a warm feeling in an unmentionable place thinking about it.\"\n\nHe raised his eyebrows again, and I waggled mine back making him laugh again. He turned to kiss my palm, before turning his attention back to wiping off my hip. The gentle touch and cool damp of the washcloth raised goosebumps on my skin where he touched, and he seemed fascinated by the reaction, expanding in wider circles watching the little bumps form. After a few extra minutes, by which time the mess was long gone and it was obviously no longer about clean-up, he tossed the washcloth carelessly over his shoulder and just started stroking my skin, from my hip, over my belly, up my side to my shoulder, then down to softly cup a breast. He stifled a groan when my nipple crinkled.\n\n\"Sierra...\"\n\nI wondered if he had any idea what it did to me to hear him say my name in his killer British accent. I pulled him in for a kiss with one hand while with the other, I felt around until I reached his hard length. I wrapped my hand around him, and he groaned into my mouth. It felt like velvet covering steel, the contrast between the soft skin and the firmness interesting, and I explored gently for a few moments. His hand, still stroking my breast, was trembling, and I recognised signs that he was having trouble maintaining control. That suited me fine; control wasn't what I was looking for.\n\nDeepening the kiss and releasing his erection, I shifted and poked and prodded until he was on top of me. Ever the gentleman, he kept his weight on his elbows -- beside my head -- and his knees, which were wedged between mine. I could feel his cock resting on my belly, and my nipples brushed slightly against his chest. The provocative position had me burning to be filled, to make love to the gorgeous man hovering over me. I explored his back, shoulders, and chest briefly with my hands as he continued the kiss, sweeping his tongue into my mouth to engage mine. His only reaction to my hands was some goosebumps of his own, and his tremor felt a bit more prominent. Knowing he was as anxious, as desperate as I, was a huge turn-on. I want him, now.\n\nI reached down between us to grasp his erection again. I tugged gently and he slid his knees down until he was more directly lined up for the next event. I swiped the tip through my now-sopping folds, and he pulled out of the kiss to hiss in pleasure at the heat and damp. I placed him against my opening and released him, awaiting the first thrust with some trepidation. When nothing happened, I glanced up to make eye contact with a very fearful-looking templar.\n\nHe bit his lip, and he looked so much like a scared little boy, but at the same time so incredibly sexy. I had to laugh, and he frowned. I shook off the laugh -- inappropriate timing, Sierra! -- and wriggled underneath him. When he still hesitated, I finally found my voice, though I barely recognised it, low and husky with need.\n\n\"Please, Alistair.\" I gripped his ass, pulling him to me, though I knew I had no hope of moving him if he didn't cooperate. \"Please.\" My knees pulled up beside his hips, my legs wrapping around so my heels brushed his thighs.\n\nWatching my face with incredible intensity, I finally felt him move. He flexed, and the very tip of him entered me an inch. The delicious spreading of my wet channel had me groaning in pleasure, and he paused. I thrust my hips towards him, and he gasped as I gained another inch. I was momentarily surprised by a sharp flash of pain, which felt like...Oh, good God, this body was a virgin. I decided to think about it later, distracted as I was by other things. Fortunately, within a few seconds, the pain disappeared as though it had never happened.\n\nHe moved again, slowly claiming me. I'd never felt spread so far -- I was now more than sure that my only previous experience had been much less well endowed -- but instead of the pain I expected, there was only a mild stretching sensation, which wasn't unpleasant.\n\nEncouraged by my expression, I felt his muscles tense as he pulled out a tiny amount and then pressed back in more firmly, claiming two more inches. I felt incredibly full, and I knew I was going to be much more so before we were done. Anticipation made me clench, teasing the length inside me. He groaned and thrust again, and then again as I urged him on with my legs.\n\nMy eyes were closed as I experienced the new sensations coursing through me, but they popped open as I felt Alistair take a handful of my hair and tug lightly.\n\n\"Keep your eyes on me, Love. I need to see you.\"\n\nI nodded, though keeping them open seemed a major chore. Somehow, though, everything was much more intense as I watched his face while he slowly, gently stretched me. Every time he gained new ground my eyelids would flutter, and I would struggle to open them again. I kept trying, his hazel eyes drawing mine in every time, and he gasped softly every time our gazes met.\n\nHe finally bottomed out, and I grunted as he bumped against my cervix. He instinctively pulled back a fraction of an inch, relieving the discomfort, while his gaze searched my face.\n\n\"Okay?\"\n\n\"Maker, yes, please.\" I shuddered, unable to hold still. I never dreamed this could feel this good, and we've barely started. Only a tiny portion of my brain noted my Fereldan curse; the rest was too busy urging me to move, to beg, to do whatever it took to get him to take me hard and fast.\n\nHe growled, possessively, as he claimed my mouth in a heated kiss, and I finally let my eyes drift shut. He nibbled and sucked my lip, then his tongue swept through to stroke mine. His hands were in my hair, kneading and tugging, and all I could do was writhe and moan under him. After an eternity, he pulled back, locking gazes with mine again, and finally started to move.\n\nWhen he withdrew, I whined in disappointment, only to cry out as he plunged back in to my stretched opening. Helpless, I could only grip his hips and cling with my legs as each thrust took me higher and higher. The angle must have been perfect, somehow, because he rubbed against my clit with each thrust, and my hips met his with abandon. His slow pace kept me from peaking, and the pleasure just built and built until I was writhing and shuddering under him, not quite there but so close.\n\nHe sped up, and finally howled out my name as he found his release; I was so close that his sexy voice, calling my name out, and his hard, irregular thrusting as he spent were enough to send me over as well. I bit his shoulder to stop myself from screaming or doing something else embarrassing, not hard enough to break the skin but definitely hard enough to bruise. He gasped and thrust into me again, hard, triggering a cascade of aftershocks ricocheting between us. When it finally settled, he collapsed down onto me, swooping down to kiss me with bruising force. My legs were still wrapped around his hips; I didn't have the energy to move them. Still buried inside me, I could feel him softening as I clung to him, tears I couldn't explain leaking from the corners of my eyes. His strong fingers slowly kneaded my scalp, and he lifted his head to make eye contact again.\n\nWhen he spotted my tears, his response was immediate; he rolled off me, extricating himself from my leaden limbs and cradling me in his arms.\n\n\"Oh, Maker, I knew I was going to hurt you. Should I go get Wynne?\"\n\nI giggled, sniffling and wiping my tears. \"You didn't hurt me. Honestly. And besides, what would we even say to Wynne? 'I fell down the stairs and hurt my-'\"\n\nHe cut me off with a snort of amusement. \"She'd never see through that excuse, certainly. But...are you sure I didn't hurt you?\" I nodded and cuddled in closer to his side. \"Then why, by Andraste's knickers, are you crying?\"\n\n\"I vote we leave Andraste's knickers entirely out of our sex lives, okay?\"\n\nHe snorted again. \"Point taken.\"\n\n\"I'm crying because...I don't know. I'm just happy.\"\n\n\"Maker! Women are strange. I'll never understand you, will I?\"\n\n\"Nope.\" I grinned. \"Which is exactly how it was meant to be.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-43-44"
}