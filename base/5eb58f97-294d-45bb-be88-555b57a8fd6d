{
    "title": "A Touch of Grace",
    "pages": [
        "In loving memory of Grace. Gone too soon, but not forgotten.\n\n~~~~~~~\n\n\"That's terrible.\"\n\n\"Yeah.\" Claire nodded, taking a sip of her whisky. She'd already downed three more before that, trying to forget that she was single again. Had been for the last week or so, when she'd packed her stuff and left, no clue where to find a place to stay at two in the night, until her brother had come and taken her to his place.\n\n\"I can't believe it,\" Pauline shook her head, her eyes still wide.\n\n\"I can,\" she said to her sister-in-law. \"We were having problems for a while.\"\n\n\"There are problems in every relationship. Doesn't mean a person can just go ahead and...\" She plonked the glass back down on the table, her brow scrunching in anger. \"How could he do this to you?\"\n\nClaire lifted her glass to her mouth, tipped her head back, and necked the last of the drink. \"He could.\" She tried to form words around the lump in her throat. \"He's always around these gorgeous models, taking photos of them with their clothes off. Gotta be better than what he's got at home.\"\n\n\"Don't be stupid. You're more gorgeous than any of those underwear models.\" A hand patted hers. \"He was a fool to not see what he had.\"\n\n\"Thanks.\" She rolled her eyes. She'd held off telling anyone why she'd left her boyfriend so abruptly, wanted to get her head wrapped around the idea before she tried to put it into words. So she'd sat at her brother's house, staring at the TV and not talking to anyone, until Pauline had dragged her to the pub. She'd probably regret having so many drinks but at least Pauline was distracting company.\n\n\"Come to think of it.\" Claire laughed hoarsely, the alcohol finally starting to work. \"I'm close to thirty and single again after three years. I feel like I'm destined to die alone.\"\n\n\"No. You've got us.\" Pauline clumsily wrapped her in a hug, seeming more drunk than Claire was. \"And you're only 27. You'll find someone better.\"\n\n\"You said that the last time I had a breakup,\" she snorted.\n\n\"Brad was definitely better than Flynn.\"\n\n\"Yeah. And he cheated on me.\" She closed her eyes, trying to shake the thought out of her head. It seemed to have made permanent place in her memory since she found her boyfriend of three years sixty-nining on their couch with a blonde bimbo. No matter how hard she shook her head, the image refused to leave her.\n\n\"Bastard.\" Pauline made a half-growl, leaving the stool. \"I felt like running over Flynn after what he did to you. I could run over Brad too, if you like.\"\n\nClaire grimaced. She needn't have reminded her of what Flynn had done. Called her to dinner one night and explained that he had wife and kids back home. That too, after more than six months of being with her, during which she'd fallen for him.\n\n\"Thanks.\" she laughed. \"But if you get nicked for randomly murdering my exes, I'm not to be blamed.\"\n\nPauline laughed as well, giving her another hug. Then she was walking away.\n\n\"Where are you going?\" Claire asked, looking behind her at the crowded bar.\n\n\"I'm going to get us something stronger.\"\n\n\"You don't ha\u2014\"\n\n\"We're getting shitfaced.\" She assured her. \"I'm going to get you tanked and we're going to bitch about everything that we hate about men, and believe me, I have a list.\"\n\nShe winked, disappearing into the crowd, leaving Claire laughing to herself, staring at the empty glass. That was probably the first time she was laughing in a week. Brad had called her almost incessantly for the first three days since she left, sent her several text messages trying to explain it was nothing. That he loved her and wanted her back. Seriously? After she caught him red-handed in the act? She didn't know who the girl was, but she was sure it was someone from work and that it had been going on for a while. All those excuses about being late at work or stuck in traffic were lies, now she saw it.\n\nClaire wasn't sure she could believe in that thing called love ever again. Two breakups in four years was a big deal. All she knew was that she'd loved both of them with her all, and they'd gone and cheated on her. Both of them.\n\nShe felt like a fool. For choosing jerks and wasting her youth on them.\n\n\"Right.\" Pauline plonked back down with a raft of shots sloshing precariously between her hands. \"These are for you.\" She pushed five over her way. \"These are mine.\" She looked at her excitedly, \"Ready?\"\n\n*\n\nThe ringing phone rudely woke Claire up from her Saturday morning snooze. She groaned, hid her face in the pillow, felt her head splitting from a monstrous headache. The phone continued ringing in the meanwhile, like drilling a nail into her head. She dug her toes in the bed, felt tears forming in her eyes.\n\nThey had returned from their girls' night out past midnight. The shots had turned into more shots, as they bitched about everything wrong with men. Then they'd stumbled out of the pub, managed to hail a passing taxi since Pauline had very generously turned down her husband's offer of coming to pick them up, and then giggled like drugged pigs all the way.\n\nPeter had been asleep by then, but not long after Claire settled down between the covers, almost unconscious from all that alcohol, she heard the bed thumping in the other room.\n\nShe hadn't known her brother was that loud. Or that his wife was so inventive when it came to the swearing. Not that she'd ever wanted to hear them going at it like rabbits. She'd tried to cover the sound with a pillow over her ear, reminding herself to start looking for a place. It was nice, staying with her brother after a while and having someone to look after her through this bad time, but as grateful as she was to Peter and Pauline for being kind enough to let her stay as long as she wanted to, she still had to find her own place. She had to move on, and she also couldn't put up with noisy coitus for too long. Not when she wasn't getting any.\n\nThe phone started ringing again.\n\nClaire flailed her arm awkwardly without opening her eyes, making contact with the table on the third attempt. Phone in hand, she rubbed her eyes, trying to clear her vision. Her head was throbbing, like about to burst apart.\n\n\"Claire?\" The kind female voice on the other end spoke affectionately. \"Did I wake you up?\"\n\n\"Umm... Hi Melanie...\" She struggled to sit up, her head and stomach both complaining now. Sunlight trickled in through the gap in the curtains, shining directly on her face. She closed her eyes again, clumsily flopping back into bed. \"I'm just...\"\n\nHungover. Really hungover. Although Claire guessed from the smile in her voice she already knew that.\n\n\"Late night?\" she asked. Claire felt embarrassment creeping on to her skin. She moved auburn hair out of her face, her mouth contorting in an inaudible groan. Melanie was the last person she wanted to hear her hungover.\n\n\"I'm fine.\" She managed to drag herself into a sitting position, leaned against the pillows. \"Just...\" She wondered how to explain, even though there was none required. \"I was out last night, so...\"\n\nMelanie laughed now, making Claire's skin break into goosebumps. \"I'm afraid, Claire, but you have to come and meet me today,\" she said. \"Can you do that, please?\"\n\n\"What for?\" she asked, really hoping it was something that could be postponed. She didn't think she could be decent that day.\n\n\"About a new kid,\" she explained. \"I'll tell you everything when you come and see me.\"\n\n\"Can't we do it some other day, please?\"\n\n\"The child joins next Saturday. I want to talk to you before that. Look I know you had a late night but--\"\n\n\"Okay, okay... I'll be there, Mel.\" Claire pinched the middle of her forehead, as if that would make the pain go away. \"Make it noon, yeah?\"\n\n\"Sure. Take your time.\" She smiled again, sounding relieved. \"Meet me in my office, okay?\"\n\n\"Okay.\" Claire rolled over and flopped down on her belly when the call ended, phone dangling from her hand.\n\nIt wasn't until ten that she managed to appear in the kitchen, after a shower and an aspirin. Peter was sitting at the kitchen island, reading the paper and drinking his coffee. Claire realised he'd leave late that day. He smiled when he saw her enter.\n\n\"Good night, then?\" he chuckled, as she pulled a stool and planted herself on it. She hung her head until her forehead was touching the counter top, hoping the cold marble could do something to alleviate the unease in her system.\n\n\"Here. This will help.\"\n\nShe lifted her head to find Peter pushing a cup of tea towards her. She didn't know if it would help, but it looked tempting for sure. She took a sip, realised it was ginger tea.\n\n\"Thanks.\" She held the cup between her palms, looking around her. \"Where's your wife?\"\n\n\"Asleep.\" Peter chuckled again, going back to his stool. \"Whatever you girls drank last night.\"\n\n\"Shots. Probably vodka.\" She covered her face with her hands, shook her head. \"I don't remember.\"\n\n\"Good for you. At least you went out of the house. I was thinking you'd want to get married to the TV.\"\n\n\"I'll pay the bill, don't worry.\"\n\n\"That isn't what I mean.\" He moved closer, touched her arm lightly. \"You look miserable all the time. It makes me sad to see you like this.\"\n\n\"Anyone would be miserable if they found their boyfriend cheating.\" Pauline entered, tying the belts of her night robe. Claire winced inwardly at those words, a shot of anguish stabbing her heart. A moment later, she felt Peter's arm around her.\n\n\"Brad was cheating on you?\" His voice was thick with surprise. \"God, that's...that's awful.\" The arm around her squeezed. \"Why didn't you tell us? I thought you had a fight or something...\"\n\n\"Pete, no girl likes to announce to the world that her boyfriend cheated on her.\" Pauline poured herself a cup of tea, then popped an aspirin. \"Can't you see she's still so raw?\"\n\n\"So this is why you got her drunk last night?\" Peter crossed his arms against his chest. \"You wanted to know the truth.\"\n\n\"Exactly.\" She sat on the stool next to Claire's, then yawned. \"If I wasn't so plastered last night, I would've told you about it. I knew something bad must've happened.\" She sipped her tea, held up the cup to feel the vapour on her face. \"Can you imagine the person you spent three years of your life with cheating on you with a lingerie model? I would've beaten the shit out of him.\"\n\nOf course she would. Pauline was a robust woman, something of a control freak. She was outspoken, blunt, and never hesitated to speak her mind. Considering that she had actually beaten up a snatcher once, it wouldn't be too surprising if she did the same with her sister-in-law's ex.\n\n\"I never expected this from Brad,\" Peter shook his head, his hand coming up to tousle Claire's hair. \"You sure you'll be okay? Do you want to go and spend a few days with mom and dad?\"\n\n\"Please.\" She groaned, taking a long gulp of the tea. \"That will not make me feel better.\"\n\n\"It'll distract you at least.\"\n\n\"I'm distracted enough, thank you very much. I don't want mom to constantly remind me how I still don't have a proper career, or how making wall hangings will never get me through life.\" She pushed the tea cup away, as tears filled her eyes. \"She'll probably think Brad cheated on me because I'm not ambitious enough.\"\n\n\"Claire, you're great. Trust me.\" Pauline said, giving her hand a squeeze. \"You do what makes you happy, not what others want you to. Isn't that the hallmark of an independent woman?\"\n\n\"Independent.\" A dry laugh escaped her. \"And I don't even have a place to live.\"\n\n\"This is your place too.\" Peter hugged her again, stroking her back. \"Stay as long as you want. We like having you around.\"\n\nClaire closed her eyes to make the tears go away. Peter was the ideal older brother, always looking out for her, caring about her. Despite being the associate director of a leading pharmaceutical company, he devoted considerable time to his home, making sure everything and everyone was okay.\n\n\"Yes. Had it not been for you being here, you would've starved yourself to death by now.\" The stool screeched as Pauline rose and made her way towards her. Suddenly she had her brother and his wife on either side, smothering her with affection. More like sympathy. \"Staying alone after three years sucks. Really.\" She took over from Peter, pulling Claire into a hug. \"Stay here, please. Give yourself time. You'll be okay.\"\n\n\"I hope so.\" Claire swiped the rim of her eyes with a finger, found it slick with tears. She looked into her brother's blue eyes, saw his concerned stare. \"I'll be okay,\" She nodded at him, leaving the stool. \"Just...\" She shrugged, not finding the words. \"I'm going out. Don't be worried if I'm late.\"\n\nShe turned and headed upstairs, pressing her hand to her mouth to stop a sob.\n\n*\n\n\"Tell me I don't have to meet any parent today,\" Claire pleaded, sinking into the comfortable, cushioned chair. She'd reached Blooming Buds five minutes past noon, her head still throbbing, her stomach still in knots. She'd had a couple of croissants and some bacon for breakfast, then proceeded to throw up most of it. Although she'd pulled on a pretty dress and a silk scarf, she knew she still looked horrible.\n\n\"You don't. Relax.\" Melanie leaned forward in her chair, smiling. \"I haven't seen you hungover in a while.\"\n\n\"That's because I haven't got drunk in a while,\" she explained. \"I'm sorry I'm like this today... I'm just....\" she hesitated, wondering if she should be telling her that she was going through a breakup.\n\n\"Are you okay, Claire?\" She asked, her smile giving way to concern. \"You weren't here last Saturday, and I didn't hear from you the entire week. Is everything alright?\"\n\nClaire kept her gaze low, swallowing to make the lump in her throat disappear. Did she look that miserable? She did probably.\n\n\"I'm okay.\" She forced a smile, tried to forget how bad she felt. \"What did you want to talk about?\"\n\n\"Oh. Right.\" She kept her entwined fingers on the desk, looking at her. \"There's a new child joining the toddler program next week. She's a little different from the others.\"\n\nClaire wanted to laugh at that. Every child there was different. That's what made them special. Blooming Buds was an institute for specially-abled children, where she volunteered every weekend, singing, playing, reading stories with several little humans who were different from other children. She wondered what could be more different with this child.\n\n\"She isn't visually challenged then?\" she asked, since she mostly worked with the blind kids. Melanie shook her head.\n\n\"She isn't mentally disabled either.\" She pushed some papers towards her. \"Grace has a rare heart condition. She's only six and she's undergone three major surgeries so far. She's frail and fragile.\"\n\nClaire took a look at the papers. Grace Fielding. Six. Dark curly hair. Quiet brown eyes. A trail of freckles down the neck. She looked really pale and small, quite understandably.\n\n\"So why an institute for special children?\" she asked, her eyes leaving the papers.\n\n\"Because she isn't active or healthy like normal children. She's shy, takes time to talk to strangers, and could be difficult to engage.\" Melanie leaned back in the chair, her face thoughtful. \"She's older than the age limit of the program but we still took her in. Other toddler programs have turned her down because she's....\" She sighed. \"Different.\"\n\n\"I haven't worked with kids like that in a while...\" Claire shook her head. \"I mostly work with\u2014\"\n\n\"Claire, the little girl needs you,\" Melanie put her hand on hers. \"We have to make her comfortable with other kids, get her ready for school. She needs a lot of work.\"\n\n\"You think I'm the one?\"\n\n\"I wouldn't have called you to meet otherwise.\" She smiled, patted her hand. \"You might be the youngest staff member here, but you've also been a longtime volunteer with us. You're an asset. You have a way with kids. And this child really needs you. I know you can do it.\"\n\nThat was typical of Melanie. As the special needs coordinator, she had seen Claire since the last five years, handling several challenging kids and getting them ready for the world. It was natural for her to put her trust in her.\n\n\"Can I have some time to think?\" Claire sighed, giving back the papers. Given her mental condition, she didn't know if she was even capable of handling a new child. She also didn't want to make any decision when she was still hungover.\n\n\"Sure.\" Melanie smiled. \"And another thing: Grace doesn't have a mother. So...you have to be careful when talking to her.\"\n\n\"Oh.\" She felt a pang of sadness inside her. \"Did she die or leave?\"\n\n\"I don't have details. But her dad's her sole parent.\" Melanie left her chair and came up to her. \"She's the first child here who's got a single parent. I see the other children here, and how difficult it is for both parents to cope with their child's condition. I can only imagine how hard it must be for someone to handle all this alone.\"\n\nShe put her hands on Claire's shoulders. \"Grace is going to be with us until she joins school,\" she explained. \"It will not be easy, but you have handled more challenging children.\"\n\nShe had. Only she wasn't going through an ugly breakup then.\n\n\"Just give me some time.\" she rubbed her temples with her fingertips, felt the nerves throb against her fingers. She was pretty sure by now it wasn't vodka that they drank last night. \"I'll let you know by tomorrow.\"\n\n\"That's okay.\" The honey-blonde, middle-aged woman returned to her chair. \"Did you drive here?\"\n\nShe nodded. \"You don't look good to me, Claire,\" Melanie said. \"Should you be driving?\"\n\n\"Can't help it.\" She rolled the chair backwards, grabbed her bag with both hands. \"I'm not fit company today. I should...just go home and...\" She scratched her hair, trying to remember any pending order that she had. She couldn't. \"I'm going,\" she rose, forcing a smile. \"I'll see you next Saturday, okay?\"\n\nMelanie nodded with a smile. Claire raised a hand in greeting. \"I'll call you,\" she said, turning to leave the room.\n\nThe sun seemed brighter than usual today as it shone on Claire's face while she made the short walk to the parking. She rummaged in her bag for her shades, put them on when she found them after a full minute. She hadn't asked Pauline what they were drinking when she brought the shots. They were green. That's all she remembered.\n\nApparently, the aspirin she'd taken wasn't doing much to relieve her.\n\nShe managed to drive out of the parking, rolled down the window to feel the breeze on her face. Saturday traffic wasn't heavy, but it still made her want to yell at the vehicles in front of her every time she had to stop at a red light. It was probably the hangover, because there was no hurry to reach home. She'd be going to an empty house anyway. Pauline had said lunch would be in the fridge and that she should remember to heat it before eating. Claire didn't think she could push food down her throat, not when her mouth still felt like sandpaper.\n\nShe reached for a gulp of water, almost immediately realising it was a mistake when she felt her stomach churn. Less than a minute later, she was throwing up by the side of the road, wishing she'd die already.\n\n\"You okay, ma'am?\"\n\nThe gentle male voice came from behind her. She turned her head, wiping drool from the corner of her mouth. Embarrassment burned into her when she saw a tall, sandy-haired man standing there, looking eager to help. She turned her face away as another bout of vomit escaped her in high velocity. She crouched by the roadside, trying to hold her hair in place while she puked.\n\n\"Of course you aren't okay,\" the man answered his own question. Claire looked up again, a little confident of not throwing up anymore. Wiping her mouth with the back of her palm, she turned around, too embarrassed to even thank him for stopping. She wished he hadn't.\n\n\"I'm fine.\" Her vocal chords barely seemed to work. \"I...I should go.\"",
        "She hurriedly turned, then realised the man had stopped his car right behind hers. Without bothering to look at him again, she got in and started the car.\n\n\"Take care!\" The man called out. She didn't care to respond. She felt sick to the pit of her stomach, and it wasn't just because of last night's alcohol. No matter how much care she took, her heart would still remain broken.\n\n*\n\nPauline's husky voice screamed Teenage Dream from the kitchen, where she was supposed to be making spring rolls. If Claire's hands weren't full, she was sure she would've shut her ears. It was so bad, she didn't even feel like laughing.\n\nPauline had returned from work a little after six, which was early, considering she usually came home around the same time as her husband. After ranting about how many times she'd thrown up that day, she'd complained of hunger, and gone ahead to cook.\n\nClaire glared at Brownie as she eyed the ball of yarn she was wrapping around a Styrofoam wreath form. She had tried to shoo her away twice before, but she kept coming back, pacing around the sofa, looking for an opportunity to pounce upon the yarn and drag it away.\n\n\"She likes you.\" Pauline came into the living room with two plates of steaming spring rolls. The sofa bounced as she sat beside her, put the plates in the space between them since the table was cluttered with craft items. Brownie snuggled close to her, then came around and rubbed her cheek against Claire's arm.\n\n\"I'm not giving you the yarn no matter how much you bribe me,\" she told her, laughing. \"You can have that empty box, though.\"\n\nClaire didn't know if she understood, but she got off the sofa and circled the cardboard box on the floor for a while before stepping in and curling up in a ball. Before they knew it, she was giving herself a bath. Pauline laughed.\n\n\"She understands you,\" she said, nudging her to eat while taking a bite of her own spring roll.\n\n\"At least someone does,\" Claire replied flatly, her eyes barely leaving the task at hand. Christmas was three months away, but she already had about half a dozen orders for door wreaths. People rightly said she made them the best, although she also enjoyed making other stuff.\n\n\"Did he call you again?\" Pauline asked with a soft sigh. She shook her head, heard the fork scrape against the plate. Once the yarn was wrapped around the wreath form, she glued the end and put it aside. Then she accepted the food Pauline was offering her.\n\n\"Do you think he's going to turn up here and try to take you back?\" Pauline asked hesitantly. Claire shook her head again.\n\n\"He isn't insistent.\" She took a bite, found herself hungry for the first time that day. \"If I know him well, he's probably with that blonde bimbo right now.\" She closed her eyes, felt rage boiling within herself at her own words. A hand fell on her knee.\n\n\"Don't keep reminding yourself, please,\" Pauline said gently. \"You deserve better.\"\n\nClaire shrugged. \"I just feel so pathetic. Wasn't I enough? Why did he have to...?\" She trailed off, stuffing her mouth with spring roll. \"At least I still have my kids,\" she said, once she had swallowed the food.\n\n\"So tell me about this new kid,\" Pauline turned herself towards her. \"Have you made a decision?\"\n\n\"I'm not sure I can do it. A new child means a lot of work. You know...breaking down walls, getting friendly, developing the trust...\" Claire sighed, poking the food with the fork. \"I can barely concentrate now. This last week has been shit.\"\n\n\"Maybe this is the end of your shitty week,\" Pauline flipped her brown streaked locks across her shoulder. \"Maybe this new child will keep you busy. They always do.\" She smiled, patted her arm. \"I can't believe you've been doing it for so many years and have only kept it part-time. You could've made a career out of it.\"\n\n\"This has always been something I do in my spare time. Making a career out of it would mean a lot of effort...\" She leaned back in the sofa, found Brownie fast asleep inside the box. \"Mom and dad would've been very happy though. At least that would be a proper career where I'd be slogging my proverbial off. Not sitting at home and spinning yarn.\"\n\n\"Stop beating yourself up,\" Pauline grabbed her shoulder, gave her a little jerk. \"It isn't your fault that he cheated. It isn't your fault that your parents are demanding. You can't make everything okay or everyone happy. So stop being miserable and get out there and live, for god's sake.\"\n\n\"I'm trying my best,\" she mumbled.\n\n\"You're not. Who are you fooling?\" Pauline moved away and crossed her arms. \"All you do is sit at home and ruminate. Like you're responsible for what he did. How are you responsible if he chooses to shag someone else?\"\n\n\"Pauline,\" Claire squeezed her eyes shut. \"Please.\"\n\n\"I'm sorry.\" She exhaled deeply. \"I'm just trying to make you see reason.\"\n\n\"I loved him, okay?\" Tears sprouted in her eyes as she spoke. \"And I felt loved by him, at least until the last six months or so.\" She looked at her. \"I'm allowed to mourn, right?\"\n\n\"Mourn what? If he loved you he'd be faithful. There's nothing to mourn.\" An arm came around her, pulled her into a hug. \"I know you need time. But please, stop blaming yourself for what happened. It could've been worse.\"\n\n\"Can it get worse than catching your boyfriend in the act with someone else?\" She snorted.\n\n\"It can. Imagine if you were pregnant. Or had two little kids. Or were broke. Or\u2014\"\n\nClaire raised a hand, her face contorting into a grimace. Pauline laughed. \"See?\" she raised an eyebrow. \"You're much better. I only wonder what you'd have done if you found him shagging a guy.\" She laughed aloud, almost falling over her. \"You'd be scarred for life.\"\n\n\"I would.\" Claire finished the last piece of spring roll. \"I am. Seeing him with his...\" She shook her head, trying to clear that memory. \"Can we talk about something else?\"\n\n\"Like what?\" Pauline smirked. \"Setting you up for a blind date? I can do that.\"\n\n\"More like finding me a place.\"\n\nPauline's eyes widened. \"You still want to move out?\" she asked. \"You've been here just a week. What-- are we not entertaining enough?\"\n\n\"You are, you are,\" She sighed, not telling her that late night coitus in the next room was more entertainment than she could handle. \"I have to move on, you know? Get a life, get used to living alone again. I like it here, but this isn't forever.\"\n\n\"Maybe not, but give yourself time, please. I don't think you can go house hunting when you're nursing a broken heart. You'll just end up choosing the wrong place.\"\n\n\"So choose something for me,\" she told her. \"You know the kind of places I like. I'm not hooked on anything particular. I only want to live on my own, that's all.\"\n\n\"Pete and I can go on a holiday, then. Leave the house to you, so you can be on your own.\" Pauline laughed, collected the empty plates and rose from the sofa. Brownie, who had just woken up, followed her into the kitchen. \"Either way, you're not moving out so soon. Not until you're done, ahem, mourning the end of your relationship.\"\n\nClaire sighed deeply, shaking her head. Removing the clutter on the coffee table, she fished out a large piece of felt paper.\n\n\"Did you decide anything?\" Pauline asked from the kitchen, her voice mingling with the sound of plates and Brownie's purring.\n\n\"About what?\"\n\n\"The new child. You're going to do it, right? Poor thing, three heart surgeries in six years is awful. I cannot imagine what I'd do if that happened to my child.\"\n\n\"It doesn't happen to everyone,\" Claire reasoned, sizing the paper for the flowers she needed for the wreath.\n\n\"But it has, to that child. And her family.\" She returned, and even without looking Claire sensed her leaning her elbows against the backrest. \"She needs you,\" she said softly. \"More importantly, you need her.\"\n\n\"What do you mean?\" Claire asked, a slight frown on her brow as she folded the papers. Pauline leaned, until her face was next to hers.\n\n\"Maybe she's been sent to you for a reason,\" she smiled. \"Maybe she'll change your life.\"\n\nClaire only laughed, as her hands continued making flowers out of the red paper.\n\n*\n\nNext Saturday was better in many ways. Claire definitely wasn't hungover, had had a good sleep the night before, and delivered several orders to happy customers. She'd even woken up before Peter or Pauline and made tea and breakfast. No, there was no immediate plan to move out, although she often found herself browsing rental listings in her spare time.\n\nAnd then there was Grace.\n\nAs shy as she was, there was no denying her sweetness. The first day she came in wearing a pink dress, her hair tied with a ribbon, it pained Claire a little to think that a small, sweet girl like that had a life-threatening condition like Taussig-Bing syndrome, a rare congenital heart malformation in which both vessels of the heart are connected to the right ventricle, resulting in not enough oxygen-rich blood being pumped around the body.\n\nGrace was frail and small, much paler and smaller than other children her age. She was really underweight, lacked vitality, and a couple of her fingers were clubbed. Claire was already reading to a few other special kids when she was brought in, her gaze on the floor, her body stiff and resistant.\n\n\"Hello there.\" She smiled, rising from the chair to welcome her in. When she kneeled in front of her, Grace looked at her for a fleeting moment, before hanging her head again.\n\n\"What's your name?\" Claire asked, holding her tiny hand. She didn't reply. The volunteer who'd brought her in had opened her mouth to gently prod her, but Claire gestured with her eyes that it was okay.\n\n\"My name is Claire,\" She extended her hand towards her. She didn't accept it. Claire motioned at the volunteer to leave Grace with her. She nodded with a smile, gave Grace a gentle pat on the head, and left the room.\n\nClaire took her hand, leading her to the middle of the room. The other kids were staring at the new member.\n\n\"Say hello to Grace, everyone,\" she said to the fifteen odd children in the room. The next moment there was a long chorus of 'Hellooooo Graaace.'\n\n\"Introduce yourselves, please,\" she asked them next. Anything to make Grace talk.\n\nThe children obliged. But Grace remained silent. \n\nClaire wasn't unfamiliar with such situations. Having handled different types of children over the years, she knew it was normal for newcomers to take time to adjust to the surroundings and the various other kinds of kids there.\n\nSo she seated Grace close to herself while she resumed the story, the children laughing and clapping as she imitated the actions of the characters. The kids there were no more than four years of age, making Grace older, but she still looked as small as them. For a good fifteen minutes Claire tried to make her smile, laugh, or talk, asked her questions, and gently coaxed her to participate. But all she got in return was a cautious glance or a headshake.\n\nShe sat there staring at the floor of the beautifully decorated room, unwilling to sing the songs or take part in the games. Claire stopped coaxing her after a while. Instead she hoped she'd become interested after watching the others.\n\nAt the end of two hours, she'd accomplished nothing. The children hugged her and waved her goodbye as they left for home with their moms or dads. Some of the parents talked to her like always, asking about their child's progress and if there was any concern, and also thanking her for her work.\n\nClaire held Grace's hand and led her out, searching for her parent. Grace looked like she didn't want to remain there one bit, like the last two hours had been a torture. Not surprisingly, she let go of her hand when she saw her dad getting off his car.\n\nClaire stared. Then froze.\n\nIt was the man who had seen her throwing up by the side of the road.\n\n\"Oh.\" The man stopped in his tracks, staring. Then he looked at his daughter and smiled. Grace walked over to him, put her arms around his hips.\n\n\"Hey, sweetheart,\" the man kneeled, hugged her. \"How was the day? Do you like it here?\"\n\nClaire stared at them. Grace did not reply to his questions. Her dad held her lovingly, stroked her hair, checked if the ribbon in her hair was okay. Like a doting dad. He would be in mid to late thirties, sandy hair, brown eyes, short stubble. He was a big man, tall and broad. Grace looked a lot like him, especially her eyes.\n\n\"Umm...hi.\" He rose, smiling at her. \"Weren't you...that day...?\"\n\nShe nodded, gave an embarrassed smile. \"Yes,\" she said. \"I'm Claire, the program coordinator.\"\n\n\"Bryan Fielding,\" he shook the hand she was offering him. \"I'm Grace's dad.\"\n\n\"Nice to meet you.\"\n\n\"Nice to meet you too.\" He looked down at Grace, still clinging to him. \"How was she?\"\n\n\"Quiet. She didn't utter a single word the whole time.\" She saw the disappointment and concern on his face as he looked at his daughter again and then picked her up. \"It's okay. Children take time to adjust.\"\n\n\"Yeah,\" he sighed. \"Is there anything I can do to help? You know...any way I can make this easier for her?\"\n\nClaire thought for a while. \"Uh...Is she interested in anything?\" she asked. \"Anything she loves, is fond of...?\"\n\nBryan smiled, nodding. \"Airplanes,\" he said, gently kissing his daughter's forehead. \"Airplanes will be your way in. She loves them.\"\n\n\"Oh...okay.\" It was a little relieving. Knowing a child's interests always made it easier to break the ice. \"Is she always this quiet?\"\n\n\"Around strangers, yes. She's the most comfortable with me.\"\n\n\"I can see that.\" Grace still hadn't spoken, was replying to her dad's queries with her head. But she looked less resistant now.\n\n\"Say bye-bye, Grace,\" he said to her, pointing at Claire. When she didn't oblige, he held her hand and waved it at her. \"We'll see you next week, then,\" he smiled at Claire. She nodded, waving at Grace, watched Bryan head over to his car- the same one she had seen the other day- and put Grace in the backseat, securing her with the seat belt. Then he got in behind the wheel and looked at her through the window.\n\n\"Thanks for your patience,\" he said gratefully. She nodded in reply, smiling when he waved and drove off.\n\nClaire loved children, particularly the smaller ones, the toddling, babbling kind. She'd been doing this for years now, since she was in high school. Parents were busy, sitters were expensive, and most children had little to do other than watch TV. Things were more difficult with special children. For a couple of hours every week, parents of such kids could entrust the little ones with them and breathe easy for a while.\n\nWhen she went in to see Melanie, she was greeted with a smile and an expectant look.\n\n\"How did it go?\" She asked her eagerly. Claire lifted a hand, seesawed it back and forth.\n\n\"She's very shy,\" she observed. \"Doesn't look comfortable at all.\"\n\n\"I'd told you.\"\n\n\"Yes, you had. But...can she make it? I mean, she's severely resistant to everything. She doesn't even seem to acknowledge anyone's presence.\"\n\n\"You're giving up?\" Melanie raised her eyebrows. \"You're the program coordinator.\"\n\n\"I know. I'm not giving up.\" Claire sighed. \"I'm just wondering if she'll be any better next week. She doesn't look eager at all. I'm aware her condition doesn't allow her to be active or energetic, but she doesn't even reply when spoken to. I felt like I'm talking to a wall.\"\n\nShe found Melanie staring at her, eyes narrow.\n\n\"Claire?\" She tilted her head. \"Is this you? You're never frustrated with children.\"\n\n\"I'm not frustrated,\" she tried to explain. \"It's only her first day. I'm merely stating what I observed.\"\n\n\"Is everything okay with you, Claire?\" Melanie asked gently. \"You look...different these days. Look, if there's anything wrong, you can share it with me. I'm not just the coordinator here, I'm also your friend.\"\n\n\"I know. Thank you.\" Claire tried to look normal, forced a smile to prove it. \"I'm fine,\" she lied. There was no way she was telling her what was wrong. \"Grace indeed requires a lot of work.\"\n\n\"Did you speak to her dad?\"\n\n\"I did. He said she's fond of airplanes.\"\n\n\"She is?\" Melanie smiled. \"That's great. Maybe do something with airplanes with her... You could teach her to make airplanes too. You know how to make such things.\"\n\n\"You mean, work individually with her?\" Claire enquired. \"Not in a group?\"\n\n\"If required, yes.\" Melanie leaned back in the chair. \"We can assign somebody else in your place so you can work with Grace alone. Would that be okay?\"\n\n\"But we're trying to make her comfortable with other kids,\" Claire shook her head.\n\n\"She needs to be comfortable with you first,\" Melanie explained. \"When that happens, we can try to introduce her to other children. Right?\"\n\nClaire sank back in her chair, swinging left and right. Melanie had a point there. She had many times worked with certain children individually, just to be able to help them better. She could do it with Grace as well, although she wasn't sure how helpful it would be. All her hopes hinged on airplanes now.\n\n\"Okay,\" she relented. \"I'll work with her individually from next week.\" She pushed the chair back, proceeding to get up. \"I can't promise anything, Mel. But I'll do my best.\"\n\n\"I know. Come here.\" She stretched out her arms, beckoning her for a hug. Claire smiled and walked up to her, and was being embraced a moment later. \"You always do your best,\" Melanie said, patting her cheek. \"You're a wonderful woman.\"\n\nClaire nodded and turned her face away, feeling the pressure of tears behind her eyes, wishing her cheating ex-boyfriend had seen what everyone else seemed to see.\n\n*\n\nClaire returned home pretty late that evening. After lunch with a few other volunteers, she'd driven to a caf\u00e9 and sat there making ribbon roses for a bridal bouquet. Then a young couple had walked in and taken the table next to hers, snuggling and talking, the guy playing with her hair, the girl reaching to kiss him every two seconds. Claire had tried to not stare, but it was impossible to ignore someone sitting right across you. Soon, her roses had started turning more into ribbon balls and her vision blurred.\n\nShe'd sat in her car for almost thirty minutes, crying.\n\nQuite naturally, she found three missed calls from Pauline when she looked at her phone while waiting in traffic. She worried about her. Both of them worried about her, always feared she'd go into depression or do something stupid.\n\nShe wouldn't, though. Her kids needed her. Grace needed her. It was funny because the child hadn't even spoken to her yet. But Claire did know that she required a lot of work. And the look on her dad's face had been a little heartbreaking. Like he was tired but still holding on because of his child. Claire wondered what had happened to his wife.\n\nWhen she finally made it home, Peter was snogging his wife. He was early that Saturday, said he'd come straight home after two board meetings. Claire couldn't deny she felt a tad jealous whenever she saw them wrapped up in each other. She'd never feel that way when she was with Brad. She'd only feel good for them then. She still felt good for them, but somewhere it also made her more aware of the yawning emptiness inside her.\n\n\"Are you okay?\" Pauline asked when she entered the kitchen and poured herself some water. \"I called you many times but you didn't receive. Where were you?\"\n\n\"I'm a grownup. I can go wherever I want to.\" Claire put the glass down on the counter and walked out. \"Just because I'm staying here doesn't mean I'm accountable for everything I do.\"\n\nShe sensed two pairs of eyes on her as she walked up the staircase. Not that she cared. She undressed, got into the shower, and cried the whole time there. At night, she didn't go down for dinner. Peter had tried to coax her into eating but she wasn't hungry.\n\nPauline came in to see her that night, while she was still working on the bridal bouquet.",
        "\"Hey.\" She said quietly, sitting beside her on the bed. \"You okay?\"\n\nClaire didn't reply. Instead, she continued working with the ribbons and beads. The bouquet was to be delivered in two days. She had to complete it by then.\n\nPauline's arm came around her. \"Did anything happen?\" she asked. \"You were okay when you left this morning.\"\n\n\"I am okay.\" Claire didn't want to talk. She had too much going on inside her head already. \"Why are you here, anyway?\"\n\n\"To check on you. Something doesn't seem right.\"\n\n\"You don't have to bother.\"\n\nPauline sighed, moved her arm away. \"You know, you're worrying me,\" she said. \"It's over, okay? He cheated on you. You're not going back to him. So what's the point in being miserable? You're bumming me out.\"\n\n\"I'm sorry. Is my misery bumming you out? I'm so selfish.\" Claire's body stiffened, her fingers clenching around a strip of blue ribbon. She felt a sudden rush of anger. \"You have someone to come home to, sleep with, have sex with. Well, congratulations. Not everyone's that lucky. I'm not that lucky.\"\n\nShe swung her legs off the side of the bed, trying her best to stop the sudden surge of tears. She expected Pauline to leave her alone after that, but she only came around and sat next to her on the other side.\n\n\"I'm sorry,\" she said softly, cautiously reaching to hold her hand. \"I didn't\u2015\"\n\n\"Just....\" Claire shook her head, pulling her hand away. \"You push me. It's nice sometimes. But...not about this. Please.\"\n\n\"We just want you to be okay,\" Pauline explained. \"You seem like you're always blaming yourself for what he did. I hate to see that.\"\n\n\"So don't see. I want to move out anyway. Perhaps when I'm gone from here you guys can be in peace again.\"\n\nPauline's eyes widened, her mouth parting. \"You...you've found a place?\"\n\nClaire sighed. \"No. But I will. I'm looking.\" She looked at her, smiled through the tears in her eyes. \"I'll move out soon. You don't have to be bummed out by me anymore.\"\n\n\"Claire, we like having you here, okay? You don't have to feel bad about staying here. We just...want you to be normal. Go out, meet people. Just live.\" She put her arm around her again. \"Why are you pissed off? What happened?\"\n\n\"Nothing happened. Please.\" She jerked her hand away, rising from bed. \"It's late. Aren't you supposed to be shagging your man now?\"\n\nPauline frowned, looking a little offended. Then she slowly stood and turned around. \"Dinner's in the fridge,\" she said. \"Just microwave it if you feel like eating. Goodnight.\"\n\nThe door shut quietly. Claire gathered the craft items from the bed, put them in their proper places, and then crept into bed. As the tears rolled down onto the pillow, she reminded herself to find a place as soon as possible. And then Brownie hopped in through the small opening in the window, her eyes glowing in the dark as she made her way towards the bed and climbed in.\n\n\"Hi there,\" Claire tried to smile, lifting her blanket to let her in. \"You want to sleep with me?\"\n\nThe cat purred, stretched, and then snuggled against her body, her fur soft and warm. Claire stroked her, pulling her close. At a time when everyone had somebody to be with, she was glad that someone still wanted to snuggle with her, even if it was a cat.\n\nShe wiped the tears off her temple and closed her eyes, feeling Brownie breathing against her chest.\n\n*\n\nThe black sedan stopped in front of the gate of Blooming Buds sharp at ten. Claire looked up from the books she was arranging on the table, found herself smiling. She had reached early that Saturday, having a lot to do before Grace arrived. It would be just the two of them for the next couple of hours, and Claire knew she would have to come up with new ways of fun since she wouldn't be able to run, sing, or play like the other kids.\n\nClaire went out to receive Grace when she saw her dad walking her up to the front door. She waved at her, hoping she'd reciprocate, but she didn't. Instead, she just leaned closer to her dad.\n\n\"Say hello, Grace,\" her dad gently coaxed her. Grace barely looked up, her gaze fixed on the marble steps. Bryan sighed and looked at Claire. \"I'm sorry, she's\u2015\"\n\n\"It's okay,\" Claire smiled. \"I'm sure she'll be better today.\"\n\nBryan's face showed a spark of hope for a moment. \"Really?\" he asked, his eyes wide. Claire nodded.\n\n\"Come on, Grace,\" she said to the child, clad in a blue dress that day, a butterfly clip in her hair. \"We'll have a lot of fun today.\"\n\nShe reached out a hand. Grace looked up at her dad questioningly, like thinking if she really had to do that again. Bryan smiled, kneeled, and kissed her.\n\n\"Go on. You'll have fun,\" he said to her. \"I'll be here to pick you up, okay?\"\n\nGrace unwillingly left her dad's hand and walked up to Claire, taking the hand she was offering. \"Say bye-bye to daddy,\" she smiled down at her. Grace obliged with a feeble, half-hearted wave of her hand. Bryan waved back, smiling.\n\n\"Umm... Ms...?\" he said from behind just as Claire had started to walk away with Grace. Claire turned.\n\n\"McFadden,\" she said. \"But call me Claire, please.\"\n\n\"Oh...okay.\" He hesitated, shoved his hands in the pockets of his dark jeans. \"Just... They have my number. Give me a call if there's anything wrong...\"\n\nClaire nodded. \"Although I don't think there will be anything wrong,\" she smiled. \"She's safe here. Don't worry.\"\n\nBryan nodded, waved at Grace one last time, and turned and walked down the steps. By the time Claire brought Grace inside, the car had driven away.\n\nGrace lifted her eyes, saw the stack of books on the table. She looked up at Claire, who smiled.\n\n\"Go on,\" she encouraged. \"Take a look.\"\n\nGrace took small hesitant steps towards the table until she could see the books properly. And then Claire saw her face light up. She walked up to her, put an arm around her frail body.\n\n\"What are they?\" she asked gently. A faint smile tugged at Grace's lips as she raised a hand to touch the illustration on one of the books.\n\n\"Airplanes.\" Grace's voice was soft and wondering. Claire felt a surge of relief inside her as she saw the child run her hands over each of the books, their bright, colourful covers leaving her entranced. Claire had been to the library that week, collecting children's books on airplanes. Then she'd dropped in to a bookstore and bought a couple of colouring books.\n\nHer first word with her made Claire believe she was going the right way.\n\n\"Do you like them?\" Claire asked quietly. Grace nodded. \"So let's sit and read these stories, shall we?\" she asked her. Grace nodded again. So Claire sat her on a chair, pulled one for herself, and then opened the first book. Grace looked delighted, her smile broader now.\n\n\"I know her,\" she pointed at the cover of the book. Claire smiled.\n\n\"You do?\" she said. \"Who is she?\"\n\n\"Amelia Earhart. She was the first woman pilot to fly across the Pacific Ocean.\" She grabbed the book with both hands, turning the glossy pages excitedly. \"She disappeared while flying an airplane.\"\n\nGrace was adorable with her words. Without any external prodding or coaxing, she kept turning pages, pointing to images and describing them. Soon, the table was covered in open books, all bright and colourful.\n\n\"Have you ever been on an airplane, Grace?\" she asked, while they read a story about the Wright brothers. She nodded.\n\n\"Last year,\" she replied. \"Daddy and Grandpa were with me.\"\n\n\"Where did you go?\"\n\n\"To a hospital. Daddy said I should sleep or I'd be tired. But I wanted to see.\" She looked at her, eyes bright. \"I saw clouds. They were big and fluffy. I could touch them!\"\n\nClaire laughed. \"So did you touch them?\"\n\n\"No,\" Grace shook her head, trying to explain. \"You cannot touch the clouds through an airplane.\"\n\n\"Why not? They're so close, aren't they?\"\n\n\"You don't open the windows!\" she looked horrified, like Claire was stupid if she didn't know that. \"Airplanes break down if the windows are opened.\"\n\n\"Oh.\" Claire nodded in understanding. \"Why do you like airplanes so much?\"\n\n\"Because they make us fly.\" Grace did a flying motion with her hand that Claire couldn't help but smile at. As frail and weak as she was, Grace was adorable in her demeanour. With her curly hair, pretty eyes, and a missing front tooth, she resembled any other six-year-old. Claire wondered if she even knew how sick she was, or how devastating it would be for her family if anything happened to her.\n\nShe immediately kicked the thought out of her head, shifting her attention to Grace who had gone over to another book by then.\n\n\"That's a seaplane,\" she remarked, pointing to a picture. \"Have you ever been on one?\" She asked Claire. She shook her head.\n\n\"I have,\" she said, a delighted grin appearing on her face. \"Daddy has a friend who owns one. He gave us a ride one day.\"\n\n\"It must've been great?\"\n\n\"Yes! It was fun!\" She clapped her hands, giggling. Claire laughed, leaned over to give her a gentle hug. The two hours that day flew by at the speed of light. Grace kept talking, the words refusing to stop. She shared about the plane rides she'd taken in her young life, the things she'd seen at airports, and what differentiates one type of plane from another. It would have sounded enthralling to anybody, a six-year-old talking incessantly about airplanes like a pro, except that all the flights she'd taken so far had been to some hospital or the other.\n\nA few minutes past noon, Claire looked out of the window to find Bryan stopping in front of the main gate. She turned her gaze back to Grace who was busy colouring an airplane, brow scrunched in concentration as she tried to paint the nose yellow without spilling colour on to the rest of the page.\n\n\"Grace, I'm going to be back in a moment,\" she said to her. \"Is that okay?\"\n\nGrace nodded, without looking up from the book. Claire gently tousled her hair and rose from her chair, walked out of the room quietly. Bryan, who had spotted his daughter and Claire through the window, smiled shyly when he saw her.\n\n\"Hi,\" he said, raising a hand in greeting. Claire smiled back. \"Is she okay?\"\n\n\"Oh, she's great,\" she nodded, turning to look at the window, from where they could see her at the table, colouring. \"Thanks for letting me know about airplanes the other day. It truly helped.\"\n\n\"It always does,\" Bryan laughed softly, his eyes full of fatherly affection as he watched his daughter. \"Did you get her....?\"\n\nClaire nodded. \"She was fascinated by the books on airplanes I got her. The words just kept coming. Look how engrossed she is, colouring.\"\n\n\"Yeah,\" Bryan sighed. \"Thank god, right? I was worried she wouldn't like it here and then we'd have to find another centre.\"\n\nHe stopped to gaze at the flurry of children leaving with their parents. That was the group Claire usually worked with. Some of the kids saw her and waved, one of them hobbled up to her for a hug. When the child had gone away, Claire noticed Bryan staring at her. Their eyes met, and for a moment, Claire thought he'd be a calm person.\n\n\"How many programs did you try before this?\" She asked.\n\n\"Three. Two were for normal kids and the other for kids with cerebral palsy. We were turned away from both.\" He ran a hand through his hair, the look of frustration clear on his face. \"She isn't really disabled and she isn't completely normal either. So she didn't fit anywhere.\"\n\n\"To be honest, most of the kids here also suffer from some kind of disability. We haven't really had anyone like Grace in a while. Not that I know of.\"\n\n\"Yeah. I'm glad Ms Cameron took her in.\" He laughed bitterly. \"Maybe she took pity or something...but at least she's in.\"\n\n\"Melanie is nice. She usually doesn't turn people down unless she really can't help it.\" She looked at the window again, saw Grace pick up a different crayon. \"If you don't mind... Is she sick from birth?\"\n\nBryan nodded. \"She had her first open heart surgery when she was four days old.\"\n\nClaire visibly flinched, at which Bryan only sighed. \"Yeah. Another at six months, and another at two years. We've crisscrossed the country with her through the years, just trying to make her heart keep working for longer.\"\n\nClaire hunted for the right words but none came out. She only wondered how a child that young could go through so much.\n\n\"You know, it was nice of you to stop for me that day by the side of the road,\" she said hesitantly. \"But I kind of wished you hadn't. I...didn't...\"\n\n\"Want me to see you throwing up?\" he completed the sentence. \"It's okay. It isn't a bad thing to be vulnerable sometimes. But you did look like you needed help. Were you sick?\"\n\n\"No. Just hungover.\" Claire laughed, so did Bryan. After going through so much, the man still knew how to laugh easily. It spoke volumes about him.\n\n\"I'll get Grace,\" she said, turning around. \"It's time.\"\n\nBryan nodded as she headed inside. When she brought her out, one hand was held by Claire, and in the other she had two books. But most importantly, she had a big smile on her face.\n\n\"Hey.\" Bryan received her with a hug, picked her up in his arms. \"What's this?\"\n\n\"Colouring books,\" she said. \"These are mine.\"\n\nBryan looked at Claire questioningly. She nodded with a smile.\n\n\"It's alright,\" she said. \"I bought those for her.\"\n\nBryan's eyes widened. For a moment he looked like he wanted to say something, but then he smiled at his daughter.\n\n\"Did you have a good time?\" he asked her. She nodded.\n\n\"We read about airplanes,\" she explained, both hands holding the books now. \"There were so many pictures.\"\n\n\"That's great,\" her dad laughed, looking relieved. \"Do you want to go home now?\"\n\nShe nodded. Bryan kissed her forehead, looked at Claire.\n\n\"Thanks,\" he said with a smile. \"I hadn't expected her to do so well today. It's...it's really great.\"\n\n\"Don't thank me,\" Claire shook her head. \"She's a good child. Now that the ice is broken, we'll have a lot of fun. Right, Grace?\"\n\nGrace nodded, giggling. Claire looked at Bryan, opening her purse that she'd brought along when she went to fetch Grace. \"Here, this is my card,\" she reached it out to him. \"If you have anything to discuss about her, just give me a call.\"\n\nBryan took the card from her hand, perused it. \"You're also a handicrafter?\" he asked, surprised. Claire laughed, nodding. Bryan was looking at the card again. Grace tried to take it from him, but he was prompt to put it inside the pocket of his jacket.\n\n\"We'll see you next week, then?\" he smiled, looking at Grace. \"Say goodbye, baby.\"\n\nUnlike the other day, Grace smiled and waved at her. Claire waved back, staying put until Bryan had secured Grace in the backseat, got behind the wheel, and waved at her before driving away. Then she slowly turned and walked inside to prepare the room for the next group of kids, feeling more relieved than she had in the last few weeks.\n\n*\n\n\"It's too crammed.\"\n\n\"This one?\"\n\n\"It's in the middle of nowhere.\"\n\n\"This one then.\"\n\n\"Looks like a hundred years old.\" Pauline moved the cursor over to the next listing, turned to look back at the kitchen when she heard Peter chuckle. \"What?\"\n\n\"You haven't liked any of the places she's picked in the last two weeks,\" he laughed properly now.\n\n\"She hasn't picked anything worth liking,\" she shrugged, turning her attention back to the laptop on Claire's lap. \"I guess breakup withdrawals have rendered her inept to even choose a proper house.\"\n\n\"So I'd asked you to choose for me,\" Claire retorted. \"But you don't want me going, so you refused to do it.\"\n\n\"Of course, I don't want you to move out.\" She looked at her husband again. \"Neither of us wants her to go. Right, Pete?\"\n\nPeter sighed. \"She's a grownup, Pauline. I don't understand why you want her to stay here when she doesn't want to.\"\n\n\"You want her to go?\" Her eyes widened. \"She's your sister. You're supposed to take care of her until she is over her heartbreak.\"\n\n\"I think I can do that even if she stays somewhere else?\"\n\n\"You can't. How on earth will you know if she's starving herself again? Or if she's being bothered by that cheating arsehole?\"\n\n\"No one's bothering me, Pauline,\" Claire finally decided to speak up. \"And stop fighting, please.\"\n\n\"Fine.\" Pauline moved away and crossed her arms against her chest, sulking like a child. \"Go away. I don't care. You have no idea how much I like spending some girl-time with you. A much deserved break from...this.\" She pointed her thumb behind her. Peter, who was beginning to walk up the stairs, looked around.\n\n\"Excuse me?\" he said.\n\n\"I'm just saying,\" Pauline replied. \"All this while she used to live elsewhere, and I'd call her up every time I had a fight with you or was down or pissed off. I can't share everything with you, right? With her living here, I can at least save on phone bills.\"\n\n\"I'll pay for your phone bills,\" Claire chuckled.\n\n\"That's not the point,\" Pauline shook her head. \"There's a huge difference between the convenience of sitting on the couch and talking, and picking up the phone to talk.\" She leaned closer, looking over Claire's shoulder at the laptop screen. \"I like that one.\"\n\n\"This one?\" Claire moved the cursor over one of the listings. \"It's....it's two bed, one bath.\"\n\n\"It's close by from here,\" Pauline said. \"One of my friends lives on this street.\"\n\n\"I don't want two beds.\"\n\n\"Why not? There's not much difference between one and two beds. Both are small.\"\n\n\"Pauline, we're leaving in thirty minutes,\" Peter announced from upstairs.\n\n\"Oh, geez. I forgot.\" She giggled, searching for her slippers.\n\n\"Date?\" Claire smirked.\n\n\"He's planned something,\" she gushed like a school girl. \"I can't explain how romantic he is sometimes.\"\n\n\"Sometimes?\"\n\n\"Yeah. He can also be a big bore sometimes.\" She laughed, giving her a quick hug. \"What are you going to do?\"\n\n\"What I'm doing right now.\"\n\n\"Claire, it's Friday night,\" she tsked. \"Go out, get a drink. Meet a guy or something.\"\n\n\"Next thing you'll say I should get laid.\"\n\n\"You can. But only if you want to. If I were you, I'd have hooked up with someone by now, and sent pictures to that cheating bastard. Rubbed it in.\"\n\n\"You'll never change, will you?\" Claire laughed softly, realising she was quickly losing the ability to become annoyed. Pauline giggled again.\n\n\"You said Grace has a single dad,\" she mentioned, a wicked smirk on her face. Claire frowned at her.\n\n\"Aren't you supposed to be getting ready for your date?\" she narrowed her eyes at her sister-in-law. Pauline laughed.\n\n\"Going,\" she said, finally leaving the sofa. \"Christmas is a month away, and all you do is work on orders or spend time with the kids. I'm not saying they're bad things, but Claire, you weren't like this. You used to be so excited about Christmas shopping from as early as August.\"\n\n\"I'm just having a bad time, Pauline.\" She clicked on a listing, hovered over an image when the page opened. \"I'll be glad if I manage to find a place by Christmas. Everything else can wait.\"\n\n\"Choose something good, yeah? Something that suits you.\"\n\n\"I'll try,\" Claire mumbled. Pauline patted her head and headed upstairs. Twenty minutes later, they came down all dressed, told her about dinner being in the kitchen, and kissed her goodbye. Claire saw the door shut, heard the car drive off. She sighed, looking around the empty living room. Brownie was nowhere to be seen either. She dropped her head back, sighing again.\n\nShe'd been looking at rental listings for a while, but hadn't been able to make a decision yet. Peter and Claire wanted her to stay, she knew. But she'd always lived on her own, and for the last three years with Brad. As much as she wanted to be on her own again, finding a good place was proving to be a task. One bedroom, one bathroom, garage, modern kitchen, office. And reasonable prices. Except that she hadn't yet figured out the definition of reasonable.\n\nClaire looked down at herself. Friday night, and she was in her pyjamas, on her brother's couch, looking at rental listings. And less than two months ago, she had a life, a boyfriend.",
        "The boyfriend who cheated on her.\n\nAbout an hour later, she was still on the couch, looking through pictures on her laptop. Brownie had appeared from somewhere and was now asleep by her side. Claire occasionally reached out to caress her while looking through the photos. She wasn't entirely sure why she was doing this to herself. Pauline had said she was having breakup withdrawals, so that probably had something to do with it. \n\nShe clicked through a slideshow of photos from their holiday to Paris, the two of them smiling at the camera, even though it had been a pretty terrible experience all over. A last ditch attempt at a bit of romance when they'd spent the whole time bickering and blaming each other for stupid things like misreading the map and not packing the phone charger.\n\nClaire paused on a picture of the two of them, arms around each other in front of the Eiffel Tower. It was painfully clich\u00e9d, like a stock photo of a happy couple. Her finger hovered for a second, and then she clicked down on the delete button, feeling a sudden thrill of panic when the trashcan appeared on the screen.\n\nShe stared at it for a minute, not sure how she felt. Not too bad. Like a little weight had lifted off her back. She clicked through to the next one, looking at a shot of Brad wearing Mickey Mouse ears at Euro Disneyland.\n\nDelete.\n\nDelete delete delete.\n\nHalfway through, she realised there were tears rolling down her cheeks. She closed the laptop, not able to go any further. Knowing, despite herself, that the photos weren't really gone, were just sitting in the recycling bin waiting for her to delete them permanently. She couldn't do it. Just couldn't...\n\nHer phone rang. She wasn't sure where it exactly was, but when Brownie meowed and moved away from her lap, she realised it was in her pyjama pocket.\n\n\"Unknown number,\" she mumbled to herself, staring at the screen. She wasn't in the mood to talk to anybody. Despite that, she received the call.\n\n\"Ms McFadden?\" The male voice on the other end was gentle and warm. Claire wiped off her tears, trying to remember if she knew that voice.\n\n\"Yes,\" she replied, realising her voice had turned hoarse from the tears.\n\n\"Hi, I'm Bryan Fielding. Grace's dad.\"\n\nClaire's heart missed a beat, although she wasn't sure if it was from excitement or fear. \"Oh. Hi. What's up?\"\n\n\"I'm calling to ask if Grace can come at noon tomorrow, instead of ten.\" His voice was hesitant, like he was expecting to be turned down. \"She has to be at the doctor's in the morning, so...\"\n\n\"Is she okay?\" Claire recognised the panic in her voice as she said that. Grace had been doing really good the last three weeks or so. She had opened up, liked to talk about her favourite things, and looked forward to every Saturday. The other week she had made her dad wait for full fifteen minutes because she wanted to complete her airplane craft before going home.\n\nClaire would hate to know she was unwell.\n\n\"Yeah, she's okay. Her doctor was talking of changing her medicines so a checkup is required.\" He paused, and Claire found herself swallowing out of relief in the meanwhile. \"It was unscheduled. I'm sorry\u2014\"\n\n\"It's fine,\" Claire nodded, even though he couldn't see it. \"I'll make it noon. Or if you want, she can skip tomorrow altogether.\"\n\n\"Oh no, she'd hate that.\" Bryan laughed, and Claire found herself smiling at the sound. \"We'll be there straight from the hospital. You won't be inconvenienced, right?\"\n\n\"No, it's okay. I...I can't imagine how you do that.\" The words were out before she could stop them.\n\n\"Do what?\" Bryan asked.\n\n\"Just...you know...deal with your child's condition. You must have an enormous reserve of strength.\"\n\n\"Don't know about that. But she's my child. If not me, then who?\"\n\n\"Yeah. Right. How is she doing?\"\n\n\"She's good. A little annoyed when I told her she'd be late tomorrow.\" He laughed again. \"She's never been to any toddler program or play group. This is her first. I'm amazed at how well she's doing. After that first day, I was really worried...\"\n\n\"Oh, she's great,\" Claire smiled fondly. \"I'd thought she'll remain shy, but she made a rapid turnaround. When she starts talking, the words refuse to stop.\"\n\n\"She only does that with people she's comfortable with, so...congratulations. You've really got to her in these four weeks. She likes you.\" She could sense the smile in his voice. \"You must be used to it, right? Every child seems to like you so much.\"\n\n\"I'm blessed, I guess,\" she said. \"Although what I do is nothing compared to what their parents do for them.\"\n\n\"It's indeed a blessing to be loved by children. Okay, so I'll hang up now. We'll be there at noon, tomorrow.\"\n\n\"Yes. Okay. Umm...say hi to Grace from me.\"\n\n\"I will.\" Bryan smiled again. \"Thanks. Have a good night.\"\n\n\"You too.\"\n\nClaire realised she had been holding the phone to her ear long after the call had ended. Brownie meowed, hopped back on to the sofa, and nudged her foot with her head. Claire checked the time, realised it was her dinner time.\n\n\"You hungry, baby?\" she put the phone down on the sofa and picked up the brown, furry feline, stroking her as she rose from the sofa, stretched her legs, and headed to the kitchen. Brownie had always liked her. And ever since she started living here, she had become her favourite member in the house. More often than, Claire woke up with Brownie sleeping in her bed, either next to her, or underneath her blanket, or near her feet. She didn't know about Peter or Pauline, but Brownie would sure miss her if she moved out.\n\nShe ordered Chinese takeaway for dinner and settled in front of the TV, preparing for another empty night ahead.\n\n*\n\n\"He dreamed a dream of swimming\n\nup to see the sky above,\n\nLit up by the sun in colours\n\nhe just knew he'd love.\"\n\nGrace moved her finger over the illustration of the orange fish as Claire read, her eyes round and full of awe. She was seated on Claire's lap, book open in front of them. Even though she'd arrived there straight after seeing the doctor, she seemed to be in high spirits, eager to read the stories and make paper crafts.\n\n\"But gnarbles never swam that high, their fins were much too small,\" Claire continued to read, passing her index finger over each word. \"Their tails were thin and floppy, which didn't help at all.\"\n\n\"That's too bad,\" Grace pouted. Claire kissed her cheek, laughing.\n\n\"Let's see what happens, shall we?\" she asked her, to which Grace nodded.\n\n\"This gnarble liked his fins and had no problem with his tail,\n\nSo when he woke he knew that he just couldn't, wouldn't fail.\"\n\n\"Yay! He can't fail.\" Grace clapped, giggling. Claire turned a page, her concentration drifting. She'd spent the night watching meaningless TV, and then completed an ornate jewellery box. Peter and Pauline had returned pretty late, and had also peeked in to check on her, but she'd pretended to be asleep, hiding her face in the pillow and trying to stifle the sob that she'd been fighting all evening.\n\nShe'd tried to be her usual cheerful self when working with her group of tiny-tots that morning, but her attention had drifted many times. And then Grace had arrived, and she'd put on her brightest smile when receiving her.\n\n\"I'm swimming up above the waves to see the sky of blue;\n\nI've never seen it even once, and now it's time I do.\"\n\nGrace gasped, her tone wondering and full of anticipation as to what would happen next.\n\n\"But the other gnarbles warned him that he shouldn't swim so high,\n\nAs did the blyfish family that always swam close by.\n\n\"No gnarble's ever swam that high, it simply isn't done,\n\nA blyfish....might just make the trip...but...we know...\"\n\nThe rest of the words got lost somewhere. Claire pressed her hand to her mouth, her body hiccupping as the tears ran down her cheeks. She let go of the book, covered her mouth with both hands, trying in vain to bring herself under control. The tears kept flowing, her body trembling.\n\nGrace turned to look at her, stared blankly for a moment. And then Claire felt her small arms around her neck, warm and soft against her skin. On an impulse, Claire held her back, unable to gather herself quickly. Neither of them said anything. The silent connection between them was unlike anything Claire had ever experienced, like Grace knew what she was feeling.\n\n\"Daddy.\" Grace spoke softly. Claire jerked away, hurriedly wiping off her tears with both hands and smoothing her hair. But one look out of the window, and she realised Bryan had seen everything, even though he was far outside the front gate and pretending to not look.\n\n\"My bird isn't done yet!\" she scrambled down her lap, going over to the other side of the table, where they'd put the cardboard bird to dry. \"I have to paint it.\"\n\n\"I can ask your dad to wait awhile,\" Claire said, her voice all garbled and croaky. \"Would you want that?\"\n\nGrace nodded, pulling out paint from a box. Claire got up from the chair and turned to leave the room, feeling the tear stains on her cheeks. She should be past caring now. Bryan had seen her throwing up, he had seen her crying. She didn't think she could embarrass herself any more than that.\n\nShe found a young volunteer outside and asked her to watch over Grace for some time. Then she ventured outside, waved when Bryan smiled at her.\n\n\"Hey.\" She realised her nose was still a tad runny when she attempted to talk. Bryan had come in, was standing at the foot of the steps. \"Grace wants to finish colouring her bird, so...\"\n\n\"It's fine,\" Bryan nodded. \"Umm...are you alright?\"\n\nClaire did what came naturally to her: nodded.\n\n\"Didn't look so from the way you broke down there,\" he said calmly. Claire folded her arms around herself, trying to soothe the sudden appearance of goosebumps on her skin. \"Your eyes are still puffy,\" he added.\n\nClaire climbed down the steps so she was face to face with him. Then she looked up at him.\n\n\"I'm sorry.\" She said softly. \"I shouldn't have. Not in front of a child...\"\n\n\"You think crying is a bad thing?\" Bryan smiled at her. Claire just stared, not knowing what to say. \"Sometimes there's no better catharsis.\"\n\n\"I'm fine...\" She said, raising her left hand to move hair out of her face. For a fleeting moment, she saw his eyes darting at her ring finger. \"I'm just....having a...rough time...\"\n\nShe found Bryan staring, arms folded across his chest. Grace was still painting, and the young volunteer was helping her.\n\n\"I'm going through a breakup,\" she blurted, realising she needed to share it with someone who was not her brother or his wife. Then she managed a laugh. \"Just breakup withdrawals, I guess.\"\n\nBryan's face saddened. \"I'm sorry,\" he said quietly. \"Anything I can do to help?\"\n\n\"No,\" she laughed again. \"No...umm...it's okay. It's close to two months now, and I initiated it so....I guess that doesn't give me the right to...you know...be sad.\"\n\n\"It's hard, all the same.\" Bryan was still gazing at her, occasionally glancing at the window in the distance. Grace waved once, and he fondly waved back. \"It's tough to be happy around kids when you're actually sad. I know. I do it all the time.\"\n\n\"You're not happy?\"\n\n\"When you know your child will never have a complete life?\" He shook his head, like he was talking to himself. \"I can't let her know, right? I mean, she doesn't even know what's wrong with her... She just knows she's sick... Everyone eventually gets better when they're sick, don't they?\"\n\n\"She...she won't get better?\" Claire spoke the words with difficulty, like not saying them would change the reality. Bryan smiled wistfully, glancing at the window again. Claire followed his gaze, realised Grace was almost done.\n\n\"I'll get her,\" she said, hurrying back up the stairs. Grace showed her the bird excitedly, said she was going to hang it from her window. The paint was fast-drying, so she could easily hold her craft in her hand, showing it to everybody on her way out. Grace had opened up in those weeks. Claire had learned from her that they lived on Seventh Avenue, that she had a very helpful set of grandparents, and that her room had stars on the ceiling at night.\n\nShe also wanted to do something with airplanes when she grew up. Claire felt a pang of sadness every time she heard her say that. She always smiled and told her that she'd do big things in life, but deep inside she doubted the truth of those words. And whenever she looked into her dad's eyes, she saw pain\u2014 the kind of pain she'd never experienced. Never wanted to.\n\n\"We're going Christmas shopping tomorrow,\" she said to her dad once she was outside. \"Ask Miss Claire to join us,\" she tugged at his hand.\n\n\"Ummm...\" Bryan looked a little flabbergasted, like he hadn't expected her to say that. Neither had Claire. \"She might have other work tomorrow, Grace...\"\n\n\"I actually do.\" Claire remembered. \"I'm going to see a house tomorrow.\"\n\n\"There.\" Bryan looked down at Grace, who was sulking and pouting, hiding behind her dad like she didn't want to see her face. Bryan obviously hated to see his daughter sad, his face reflected it. When he looked back at her, Claire saw him struggling to find a way to make her understand.\n\n\"I'll be done in a couple of hours or so,\" Claire added, saw Bryan's face look up. \"If you want...\"\n\n\"You...you're willing to join us?\" His eyebrows stood up. Claire hadn't expected to give in either, but it was Sunday and she didn't have much to do except complete a few orders, which she could easily do in the evening.\n\n\"If you don't mind,\" she smiled. Bryan laughed out of relief. Grace appeared from behind her dad, the pout gone. \"I'm not going to shop, though. I can just....tag along.\"\n\nGrace giggled, came up to her and put her arms around her hips. Bryan stared fondly as she picked her up, gave her a cuddle.\n\n\"It's early shopping,\" he explained. \"We usually shop till Christmas Eve.\" He laughed. \"Grace loves to go shopping.\"\n\n\"Uh-huh?\" Claire smiled, looking at her face. \"Typical girl, huh?\"\n\n\"Yeah. Totally.\" He looked around, found other kids leaving the building. \"It isn't against the rule, right? You won't be in trouble for seeing us outside the institute?\"\n\n\"No.\" Claire put Grace down. She walked up to her dad and held his hand again. \"It's fine. There's no problem.\"\n\n\"Okay.\" Bryan nodded. \"Can I pick you up from somewhere?\"\n\nClaire thought for some time. \"There's a Starbucks a few metres from here,\" she pointed to her right. Bryan nodded. \"I'll be waiting there. Or if you're early, you can wait.\"\n\n\"Sure. By when will you be done?\"\n\n\"About eleven. Would that be okay?\"\n\n\"Yes. I'll pick you up at...eleven thirty?\"\n\n\"Okay,\" she nodded. Bryan smiled, looking down at Grace. She was still smiling, delighted.\n\n\"We'll see you tomorrow then,\" Bryan said, beginning to walk out. \"Say bye, Grace.\"\n\n\"Bye-bye,\" Grace giggled, waving at her. Claire waved back, smiling. Bryan smiled, turned around with a very happy Grace, and walked out the gate. Once Grace was secured in the backseat, Bryan turned to look at her. Claire found her heart suddenly beating faster. There was nothing unusual in his gaze, just fondness and relief. But it wasn't that.\n\nClaire didn't know what it was. Only she found herself standing there smiling stupidly long after the car had disappeared from sight. Then she turned and walked back in, hardly feeling like she'd broken down only minutes ago.\n\n*\n\nThe house was cute. It was smallish, okay for a single person or a retired couple, but it was cute. Claire felt so herself, although she did think sometimes she was only echoing Pauline.\n\n\"Fireplace!\"\n\nShe heard her voice in the living room, wandered in to find Pauline staring at the fireplace like she had never seen one before. Claire rolled her eyes.\n\n\"You've got one at yours,\" she smirked. \"Please don't look like you want to take this home.\"\n\nThe rental agent smiled brightly and started to waffle on about how it was gas and would be nice and easy to run. Pauline was already poking around the kitchen. \"You like this one?\" she asked.\n\nShe had little to dislike about the place. Two bedrooms, one bathroom, kitchen, garage, and a slice of open space in front. Pauline had picked the house for her, said one of her friends lived close by, and then reasoned that she wouldn't get another furnished house at the rate. Claire was eager to move out and be on her own, and given this was under eight hundred a month, she could just as well end up choosing this one.\n\n\"I like the rooms,\" she said, peeking into the main bedroom. The windows were big and had planters.\n\n\"I like everything!\" Pauline came back out of the kitchen, looking excited as she hopped from one end of the house to another.\n\n\"I'm the one who's going to live here, though.\" Claire said, poking her head inside the bathroom. Neat, light-filled, and not smelly.\n\n\"You don't like it?\"\n\n\"I do. It's reasonable.\"\n\n\"It's cute.\"\n\n\"Right. Cute.\" Claire went over to the large window of the living room, overlooking the street. Pauline shook her head.\n\n\"If you're choosing a place, you might as well look excited about it.\" Pauline sighed, coming up to stand beside her. \"I remember how excited you were when we were buying our house... It feels forced if you aren't happy about what you're doing.\"\n\n\"I'm okay.\" Claire looked at the time. She hadn't forgotten Bryan was picking her up at eleven thirty. \"I choose this one,\" she finally said. \"It suits me.\"\n\n\"It does!\" Pauline lunged forward and hugged her, squealing. Then they talked to the agent, confirmed the booking, and then Claire paid a month's rent in advance after filling the forms.\n\n\"Congratulations,\" Pauline smiled as they walked to her car. \"This is your new home. When do you want to move?\"\n\n\"I don't have any furniture, so, anytime.\" Claire got into the passenger seat, fastened her seat belt. \"You've got to drop me at Starbucks on Wood Street. I'm meeting a customer.\"\n\n\"Oh. Okay.\" Pauline started her car. \"Peter and I are having a couple of friends tonight. You'll be there, right?\"\n\nClaire shrugged. \"I'll probably just stay in my room and work. I wouldn't like to flaunt I'm living at my brother's house at 27.\"\n\nPauline only shook her head, like tired of hearing and telling the same thing. So was Claire. Tired of a life that still wasn't sorted.\n\n\"Shit.\" Pauline gripped the steering wheel, closing her eyes for a fleeting moment. She suddenly looked pale.\n\n\"Are you okay?\" Claire reached out a hand, steadying her. \"Just...stop by the side. Stop.\"\n\n\"I'm fine,\" she said, stopping nevertheless. \"It's just...you know...\"\n\n\"You're a little sweaty,\" Claire observed. \"What's happening?\"\n\n\"Cramps.\" She patted her abdomen, took deep breaths as she bit her lip. \"I'm due in a few days, so...\"\n\n\"Can you drive?\" She asked. \"I can take your car. Ask Peter to get you home.\"\n\n\"I'll be okay,\" she nodded. \"I've to meet a few friends.\" She smiled, started the car again. \"Starbucks, right?\" Claire nodded. \"Great. Let's go.\"\n\nIt was a few minutes to eleven-thirty when Claire was dropped at Starbucks. She had asked Pauline to inform her once she reached wherever she had to. She looked pale and sickly, and Claire was certain she was coming down with something.\n\n\"Hey there!\"\n\nThe familiar black car stopped in front of the glass door of Starbucks. Grace waved vigorously, while Bryan smiled, beckoning her to come in. Claire walked up to the car with a smile on her face, had Bryan unlock and open the passenger door for her.\n\n\"Hey.\" She smiled at him, fastening her seat belt. Then she turned to look back. \"Hi Grace. How are you?\"\n\n\"Good!\" she beamed, excited about going to shop. \"You want to share my ice-cream?\" She held up her half-eaten, partially melted ice-cream cone. Claire laughed softly.\n\n\"No, thank you, Grace.\" She looked in front again, squinting when the sun shone on her face. \"I think you should finish that fast. It's melting.\"",
        "\"I've been telling her that ever since she started eating it.\" Bryan shook his head with a soft laugh. \"She's treating it like the last ice-cream left on this planet.\"\n\n\"She's really sweet,\" Claire smiled, looking out of the window.\n\n\"She is,\" Bryan said. He was a slow driver, the main reason, she understood, was the little person in the backseat. \"You look nice.\"\n\n\"Me?\" she looked at him, eyes wide. \"Oh...umm...thank you,\" she smiled, looking down at the black cardigan and jeans she had on. She never took much care dressing up ever since she left Brad. Pauline had been telling her to get a haircut before Christmas but she wasn't sure she wanted it.\n\n\"How was house hunting?\" he asked, his eyes on the road ahead.\n\n\"Good. I picked the place.\"\n\n\"Really? Congratulations,\" he smiled, giving her a sidelong glance. \"Housewarming party, then?\"\n\nClaire laughed quietly. \"I don't have anyone to invite, except my brother and his wife. But I'm living with them right now and they'll probably help me move...so they're not guests...\"\n\n\"I know how it is when a relationship ends.\" He sighed, tapping his fingers on the wheel as they stopped at a red light. \"I understand your state of mind. You don't have to explain.\"\n\nClaire glanced back, found Grace wiping her hands on her top. Bryan shook his head.\n\n\"That's what the napkin is for, sweetheart,\" he said.\n\n\"This is more fun,\" Grace giggled. Claire laughed.\n\n\"Where are we going?\" she asked, as they got moving again.\n\n\"There.\" Bryan pointed at the shopping mall in the distance which Claire realised was the Hamley's toy store. When she smiled and shook her head, Bryan laughed, nodding.\n\n\"Yup. I promised her a toy helicopter.\"\n\n\"Remote-controlled.\" Grace added from the backseat.\n\n\"Yeah, remote-controlled.\" He sighed, then laughed again. \"We come here every year. I usually let her pick and choose, and we go home with a bag full of toys.\" He looked at her. \"You don't look like you get bored around kids, do you?\"\n\n\"Never,\" she smiled. Bryan smiled back.\n\n\"Well, that's a comfort. It's so hard to find women without kids who actually love being around them. Ummm...\" He turned left, slowing down, looking for the parking. \"I'm right, I hope?\" he said, hesitantly. \"You don't have kids?\"\n\n\"Nope. I don't.\" She found herself laughing again. \"Can you imagine the disaster it'd be if I had a child and then found my partner cheating on me?\"\n\nHer heart lurched in her throat when she realised what she'd said. She swallowed, looked out of the window as they went inside the underground parking.\n\n\"I'm sorry.\" Bryan's voice was soft, comforting. Claire swallowed again, trying to make the lump in her throat go away.\n\n\"No, I'm sorry.\" She shook her head, feeling really bad about having said that. \"I shouldn't have...\"\n\n\"It's okay.\" Bryan turned off the combustion, looking totally nonchalant. Claire was kind of grateful to him for not asking anything more. He got off, opened the door on her side, shut it when she'd got off. Then he went over to Grace.\n\n\"Gosh, your top is all sticky,\" he exclaimed, picking her up from the seat. \"You'll have ants crawling over you.\"\n\nGrace only giggled, holding on to the end of her dad's jacket as he properly wiped her hands. Then she came over to Claire and held her hand as soon as Bryan let her go.\n\n\"Let's go,\" Bryan smiled at them. They went inside the huge store, full of other people who were also on an early Christmas shopping. Grace seemed to know every part of the store; where the best airplanes were to where the cutest dolls were displayed. She was the first child who loved both automobiles and dolls.\n\n\"So what do you do?\" Claire asked Bryan as they wandered through the aisles, trying to locate the helicopters.\n\n\"I manage the finance department at Fielding Furniture,\" he said, stopping when Grace stopped before a display of toy boats. \"It's our family business.\"\n\n\"Oh. That's your family business?\" Claire smiled softly, remembering an armchair she and Brad had once bought from that store. \"I like the designs. Very refined. Contemporary.\"\n\n\"Hmm. My dad started the business. My brother and I became part of it later.\"\n\n\"You have a brother?\"\n\n\"Yes. Younger.\" Grace located the helicopter display, stood awestruck in front of it. Bryan smiled fondly.\n\n\"If she didn't like dolls,\" he whispered to her. \"I'd think she was a boy in a girl's body.\"\n\nThey laughed together. It caught Grace's attention, and she turned to look at her dad.\n\n\"Daddy, I want this one.\" She pointed to a big, life-like helicopter that looked like it would start flying anytime. Bryan went closer, took a good look at the toy.\n\n\"That one?\" he asked. Grace nodded. Bryan called one of the storekeepers patrolling around, requested him to show her how to operate it. The man happily obliged, a delighted Grace beaming the whole time. Claire looked up at Bryan, noticed the fondness on his face. Bryan turned his head, met her eyes.\n\n\"She's so happy,\" Claire said to him, smiling at Grace.\n\n\"Yeah. She's always happy.\" Bryan sighed, shoved his hands in the pockets of his jacket. \"While it lasts, right? I kind of know this isn't forever, so...\"\n\n\"Please. Don't say that.\" Her hand involuntarily reached out to touch his shoulder. She quickly moved it away when she realized she shouldn't be doing it. The helicopter was mid-air, as Grace looked on in wonder. Bryan went closer, held her hands as she attempted to operate the remote. After a few wobbly attempts, the helicopter started to fly.\n\n\"You want this one?\" He asked her, got a vigorous nod in response. The store attendant put the toy back in the box, and Bryan put it in the trolley.\n\n\"That's a lovely toy,\" Claire said to her when she came back to her and held her hand. Grace giggled, holding her dad's pocket with the other hand.\n\n\"Thank you, daddy.\" She beamed. The smile on Bryan's face conveyed everything. They walked around the store, seeing the thousands of different toys on display and excited little children wandering about trying them out. Grace picked up an Elsa doll, and Bryan put it in the trolley. She chose a large teddy bear, a penguin, and a talking bird, and Bryan obliged her by putting them in the trolley. At the end of an hour, she'd chosen about a dozen toys. Needless to say, she was sleepy.\n\n\"It's okay. I have her.\" Claire picked her up while Bryan paid the bill. Grace put her head down on her shoulder, visibly tired.\n\n\"Let's go.\" Bryan turned, motioning at the exit.\n\n\"Has she had lunch?\" She asked carrying her while Bryan carried the bag. He nodded.\n\n\"The ice cream was her dessert,\" he smiled, as they took the elevator to the parking. \"She usually cannot stay awake for too long, so I make sure she's fed before we go out anywhere.\"\n\n\"What happened at the doctor's yesterday?\" she asked, as they exited the elevator and walked through a maze of cars in the parking.\n\n\"He changed her medicines.\" Bryan located his car, beckoned her to follow with a tilt of his head. \"There can be side effects if she takes one medication for a long time, so it's imperative to change them every couple of years.\"\n\nHe put the bag under the backseat, and then picked a sleeping Grace from Claire's arms. She watched his gentleness as he reclined the seat, laid her back, secured her with the seat belt, and covered her with a blanket. Then he shut the door quietly.\n\n\"Would you want to have lunch somewhere?\" he asked, opening the passenger door for her. The idea stopped Claire in her tracks. This wasn't supposed to be anything. She didn't even know Bryan. There was something likeable about him, but then...\n\n\"You haven't eaten?\" She managed to ask.\n\n\"I have. I was asking for you.\" He smiled, motioning her to get in. \"You look hungry.\"\n\nClaire laughed nonchalantly, got into the passenger seat. \"I'm fine. I'm supposed to be meeting friends in a while, so... Drop me where you picked me up?\"\n\n\"Cool.\" Bryan got behind the wheel, fastened his seat belt. Claire noticed his hairy arms when his jacket sleeve rode up, turned her face away and smiled to herself. Brad liked to manscape, to the point of weeding out every single hair strand from his body. Whenever they made love and she felt smooth skin against hers, she'd wonder if it was a man's or a woman's body.\n\n\"So how long have you been doing this?\" Bryan asked, shaking her out of her thoughts.\n\n\"Since high school,\" she replied. \"That's when I started to volunteer with summer camps, and while in college, I did a training on how to work with special children, and joined Blooming Buds at 22.\"\n\n\"Why special children?\" Bryan slowed as they approached a red light. \"I mean, normal children are hard enough to manage. Special children would require more effort, right?\" He looked at her face. \"Why would a young girl want that?\"\n\n\"Maybe because I'm different?\" Claire laughed. \"Or maybe because I always wanted to do something for the differently-abled...you know...the people who don't get included everywhere... And I loved children since my camp days, so I didn't find it all that different.\"\n\n\"To tell you the truth, when I took her there for the first time, I thought the staff there would all be like Ms Cameron,\" Bryan laughed. \"You know...middle-aged, greying.\" Claire laughed too. \"I hadn't expected to find you there, or girls younger than you. When Ms Cameron said that the program coordinator was really adept at handling challenging children, I thought it must be someone older.\"\n\n\"Yeah. Like a granny.\" They turned their heads at the same time, met each other's gaze. They laughed quietly. Claire glanced at the backseat as they started to move again, where Grace was fast asleep.\n\n\"When will she wake up?\" she asked.\n\n\"In a couple of hours. We were supposed to go clothes shopping too, but...\" He looked at her reflection in the rear view mirror. \"She needs regular naps or she runs out of energy.\"\n\n\"I understand.\" She leaned back, gazing at the other vehicles, the buildings in the distance. It was bright and sunny. Didn't seem like Christmas was only a month away.\n\n\"You know...I don't know why she asked you to come along,\" he said. \"But I liked having you with us. You're good company. Maybe you could've bought something for yourself if we went clothes shopping.\"\n\n\"It's okay. I'm not much of a shopper.\" She smiled, finally checking her phone. Pauline had texted to say she had cancelled meeting friends and gone home, adding that she was making lasagna for the first time that night. \"I liked coming along as well. It was a good change from a typical Sunday.\"\n\n\"Yeah? What do you do on other Sundays?\"\n\n\"Make stuff. With Christmas coming up, my hands are full with orders.\"\n\n\"I wish I could be that creative,\" he sighed with a smile. \"You pack a lot of talents in your slender form. Maybe I should hang out with you more, hoping some of it rubs off on me too.\"\n\nShe laughed, shaking her head. She wanted to say her talents were never appreciated by anybody but kept quiet anyway. He didn't need to know her soppy life story.\n\n\"Starbucks.\" The car slowed again in front of the caf\u00e9. \"Ooo, looks packed.\"\n\n\"Sunday crowd.\" Claire smiled at him. \"I'll see you guys on Saturday, then?\"\n\nBryan nodded. \"Thanks for today,\" he smiled, glanced at his daughter. \"She had a great time. So did I.\"\n\n\"Me too.\" Claire shook his hand, noticed how warm and soft it was. \"Take care. Both of you.\"\n\n\"You too.\" He nodded, smiled, opened the door for her. She got off quietly, shutting the door as gently as possible.\n\n\"See ya,\" he waved at her. She waved back, staring as long as she could see the back light of the car.\n\n*\n\nIf there had been anybody home they probably would have closed Claire's laptop, taken the bottle out of her hand, and engaged her. Instead she was doing something that was objectively stupid but had ceased to matter around the halfway point of the bottle of Jack Daniels.\n\nStalking her ex-boyfriend on the internet. That was a quality idea.\n\nShe'd just started out looking for some movies she could download. All her orders had been delivered, and even though she was richer by a few grands, she had no other order in the next few weeks. So she needed to find something to do at home. She was anyway moving next week. This was her last Thursday evening at Peter's house. She'd got home thirty minutes ago, was sitting on the sofa still wearing the flannel dress and leggings, the car keys still in her pocket.\n\nAnd then she'd just started clicking around.\n\nShe'd found Brad's work page first. It was the same as always. Lots of pictures from shoots he'd done, though there were a few new ones. Then she started poking around and ended up on his Facebook page. She still didn't have an account, but Brad always did.\n\nThe picture of him was cute. Smiling away and waving at the camera. He had it set to private, so all Claire could see was a bunch of profile picture updates. She clicked on 'About', wondering if she could find anything there.\n\nBradley Mathews is in a relationship with...\n\nWell... fuck.\n\nThe phone was to her ear before she even knew she'd dialled it. She was past the point of caring now. Voicemail kicked in and when she heard the familiar voice she almost fell off the sofa.\n\nIt beeped.\n\n\"Hi. So. Fuck you.\" She managed, then paused, staring at the screen. A cheerful face looked back at her, hand raised in a wave. \"You fucking...prick. In a relationship, right? The day after we...\" She couldn't finish, knew this sounded bloody ridiculous, and she wanted to throw up a little bit. She thunked her head against the coffee table.\n\nWhatever. The girl Brad was with was better looking than her anyway. Of course she was. She had seen her naked, sitting on his face, eating him out.\n\nDamn.\n\nThe phone beeped. An upbeat female voice came on the line.\n\n\"To save your message, press one. To delete and record again, press two.\"\n\nClaire pressed two, ended the call, and buried her face in her hands. She knew there would probably be a missed call showing on Brad's screen but couldn't bloody care.\n\nShe was about to close the laptop when she paused, setting the bottle down on the table. She hovered over the recycling bin for a long moment, full with the pictures she'd deleted a few weeks ago and hadn't been able to get rid of for good.\n\nRight click.\n\nAre you sure you want to permanently delete these 147 files?\n\nShe pressed yes. Sat back, staring at the screen for a long time while it glowed pointless and blue back at her.\n\nThen she closed the laptop, picked up the bottle, and was about to head upstairs, when the doorbell rang. She discarded the bottle in the bin, shuffled to the front door and opened it to find Pauline standing there, looking...strange.\n\nWithout a word, she walked past her and collapsed on the sofa, leaving Claire to look on like an idiot. She closed the door and walked back to the sofa, sitting beside her.\n\n\"What's up?\" she said, staring at her face. Pauline closed her eyes and shook her head, like she'd just woken up from a nightmare.\n\n\"What?\" She put a hand on her shoulder. \"Is everything okay? You look like you saw a ghost.\"\n\nPauline opened her mouth, fumbled for a moment. \"Claire...I...\" She held her hands, and Claire flinched when cold palms made contact with her skin. \"I...I think...\"\n\n\"What's the matter?\" Claire moved closer, put an arm around her. \"Did anything happen?\"\n\n\"I think...\"\n\n\"You think...?\"\n\nPauline quietly folded her arms around her belly, then looked back at Claire and faintly nodded. Claire's mouth dropped open.\n\n\"You...you are?\" Her eyes were so wide, they would roll off her face any moment. Pauline nodded quietly again.\n\n\"Oh my god!\" Claire laughed, wrapping her in a crushing hug. \"I can't believe this! You... Oh god... You know what that makes me? An aunt! Pauline...Oh god, this is great...!\"\n\nWhen she pulled away, there were tears in Pauline's eyes. That was surprising. She hadn't seen her crying in....ages.\n\n\"Are you okay?\" Claire cupped her face. \"What are these tears for?\"\n\nPauline only bit her lip, kept nervously fidgeting with her fingers as the tears welled up and rolled down her cheeks. Claire sighed.\n\n\"Pauline, what's happening?\" She put her arms around her again. \"Tell me?\"\n\n\"Peter doesn't know...\" She mumbled.\n\n\"Not yet, but when he comes home tonight, you have some surprise to give him.\"\n\n\"No...he...\" She looked away, wiped off her tears. \"He doesn't know I had gone off the pill last month.\" She turned back at her, her face dark with worry. \"What if...what if he doesn't want this? I never cared to ask him...\"\n\n\"Why did you go off the pill?\"\n\n\"Because...\" She swallowed audibly. \"I'm 33 now. I want a baby.\"\n\n\"And Pete doesn't?\"\n\n\"He'd said he wanted to wait awhile... When we got married...\"\n\n\"You got married four years ago. You've had enough of waiting.\" Claire stroked her hair, smiling. \"Knowing how my brother is, he'll be overjoyed. Maybe you can have some celebratory sex tonight?\"\n\nThat got her a small laugh. Pauline sniffed back tears, looked at her with eyes that were slightly red.\n\n\"I'm so nervous,\" she whispered. \"I don't know how to tell him he's about to become a dad...\"\n\n\"Did you see a doctor?\"\n\n\"No...I...\" She glanced at her bag. \"I took a home test.\"\n\n\"Seriously?\" Claire laughed. \"In the office toilet?\"\n\nPauline nodded shyly, laughing. Claire laughed louder.\n\n\"So when he gets home, hand him the pee stick. And then make him take you to the doctor tomorrow.\"\n\nPauline laughed, then nodded. \"He won't be pissed off, will he?\" She asked hesitantly. \"I didn't even tell him I wanted a baby. I just went off the pill without consulting him. Thought it'd be a nice surprise.\"\n\n\"It is. Trust me.\" Claire squeezed her hand. \"He loves you. He'll be delighted. What---aren't you delighted?\"\n\n\"I am. It's just a little unexpected.\"\n\n\"It's brilliant.\" She hugged her again, patted her back. \"Congratulations. I couldn't have asked for a better Christmas gift.\"\n\n\"Thanks.\" Pauline's voice was quiet, different from what she was like on other days. \"I hope it goes well.\"\n\n\"It will. Don't worry.\"\n\nThe doorbell rang. Pauline froze.\n\n\"Shit.\" She looked at the door and bit her lip again. \"Is it him? He's early.\"\n\n\"Of course he's early.\" Pauline winked. \"He wants you.\"\n\nPauline reached out to smack her but she gave her a miss, giggling all the way to door. It was Peter.\n\n\"Hi girls.\" He smiled as he came in, briefcase dangling from his hand. \"What's up?\"\n\nClaire looked alternatively at her brother and his wife. Pauline still seemed frozen. Peter was blissfully unaware.\n\n\"I'm going to cook tonight,\" he announced, dropping his briefcase on the coffee table. Claire moved her laptop, put it on the sofa. \"I learned a new recipe today.\"\n\n\"Oh.\" Pauline shifted uncomfortably on the sofa, like there were bugs biting her. \"That's...that's... umm...\"\n\n\"Are you okay?\" Peter narrowed his eyes at his wife. \"You look....\"\n\n\"I'm going for a drive,\" Claire piped in, turning around. \"You guys need a...moment.\" She giggled quietly, heading for the door. From the corner of her eyes, she could see Peter's confused look and Pauline's nervous one. As much as she wanted to witness the moment of revelation, she decided it was better to leave them at it.\n\nShe drove aimlessly for a long time, stopping at traffic, and then driving again. There were lights and decorations everywhere, stores offering huge discounts, people looking happy and excited. Claire didn't seem to notice anything. She drove on, trying to bring her racing mind back under control.\n\nSo her brother's life was sorted. He had a good job, a great wife, and would soon have a family. In comparison, she was still living in a rented house, was still making nonessential stuff like wall decor and jewellery boxes, and was single. And miserable.\n\nShe couldn't complain, though. She chose this life. She chose this career despite knowing it would never make her rich. She chose to leave Brad when she could've just forgiven him and taken him back. It was her fault that she was miserable.",
        "The traffic was crazy. Rows of cars stuck at a red light. Claire still didn't know where she wanted to go. She already had the keys to her new home, but she knew better than to go to an empty, unfamiliar house.\n\nShe sighed, looked out of the window. Something caught her eyes. The glowing red banner of a coffee shop. Claire found her eyes misting at the familiar sight of a very familiar place. She hadn't come there in a while, definitely not after she left Brad.\n\nThe traffic had started to move by then. Claire drove to a side, parked her car at an empty spot. Then she got off and locked her car, eyes staring at the glass door of the coffee shop, trying to think beyond the blur of tears. There were people inside, talking, laughing, having coffee. Just like she and Brad would. She saw their favourite seat by the window where they'd spent several cosy evenings. She remembered where he'd kissed her for the first time, where she'd fed him a birthday cake. She remembered every damn thing.\n\nClaire opened the door and walked in, not sure why she kept doing this to herself. She found their favourite table empty, sank into a chair. Before she knew it, she was crying bitterly, tears blinding her eyes and clogging her nose. She buried her face in her arms on the table, sobbing, little hiccups running through her body.\n\n\"Hey.\"\n\nThe voice seemed vaguely familiar but she couldn't care to look up. She wasn't there to order anything. She was there just to be bloody miserable.\n\nThe chair next to her scraped, and then a hand fell on her head. She looked up with difficulty, cleared her eyes as best as possible.\n\nIt was Bryan.\n\nFuck.\n\nShe broke into renewed sobs when she saw him, tears turning his face cloudy in front of her eyes. She buried her face in her hands, her body jerking as she wept. A moment later, she was being pulled into a hug, strong arms coming around her, a broad chest supporting her face. Almost involuntarily, she put her arms around him, clinging to him like he was the only anchor in a stormy sea. She felt his gentle hand on the back of her head, stroking her hair, trying to steady her. Claire couldn't believe she had such bottled up emotions inside her for so long.\n\nWhen she began to calm down, she felt his embrace slacken slightly, allowing her to lift her head. She met his gaze, kind and warm and so comforting it made her want to cry again.\n\n\"I'm sorry.\" The trembling words came out in a hoarse murmur. She tried her best to wipe off the tears, her head reeling slightly from all the crying. \"I'm sorry,\" she repeated vaguely, covering her mouth with her palms.\n\n\"It's alright.\" He moved away, gathered his hands on the table. \"Do you want something? Some coffee or...\"\n\n\"No...I...\" she pressed her hands to her quivering lips, trying in vain to stop the fresh tears from sprouting in her eyes. \"I better go.\"\n\n\"No. Stay.\" He held her arm, stopped her from standing. \"You aren't okay yet. Just sit here for a while.\"\n\nClaire obeyed, feeling too tired to do otherwise. Bryan remained seated beside her, staring at her face, but Claire didn't even have it in her to be uncomfortable anymore. Her head was low, hair all over her face, her hands still trembling. Bryan put his hands on hers, warming them up, stopping the trembling.\n\n\"What happened?\" He finally asked. Claire didn't know where to begin. She sniffed back tears, wiped her eyes with the sleeves of her dress.\n\n\"My brother's going to be a dad,\" she mumbled, even though that wasn't the problem.\n\n\"So that makes you an aunt. Congratulations.\" His hand patted hers. \"Why are you crying then?\"\n\n\"I...\" Claire shook her head, covered her face with a hand as fresh tears took over her. \"I feel so worthless,\" she croaked. \"My life is going nowhere. My brother is so well-settled, and look at me.... I'm so fucked up, so miserable...\"\n\n\"Why are you comparing yourself to your brother?\"\n\n\"Because...\" Because everybody had always done that. Growing up, she'd heard the same refrain: why can't you be more like your brother?\n\n\"He's got everything.\" She spoke, her voice throaty. \"We're siblings, right? Why couldn't I be like him? Why couldn't I have a proper career, a loving partner? Why am I still single?\" God...\" She started to sob again, her fingers coming back slick when she used her hands to cover her face. \"I'm pushing thirty and I'm still single. And that fucking bastard has moved on! He's in a bloody relationship again, can you imagine?!\"\n\n\"Hey, calm down. Please.\" He moved closer, put an arm around her. \"Look you can't change what happened. Give yourself time. You'll eventually get over it.\"\n\n\"I mean, what? Wasn't I enough?\" Claire didn't seem to have even heard what Bryan just said. \"Wasn't I giving him what he wanted? He once said he was just going out with friends. Just going out. And then three hours later he comes home and he smells like some fucking...fucking whore's cologne. And I say, what, did you trip and land in a fountain of Coco Mademoiselle? And a month later he comes home two hours late with the same smell and says he was stuck at work. Stuck at work!\"\n\nShe moved hair out of her face, bit her lip to stop the sobs. Bryan moved his arm away from her shoulders, held her hand instead. \"Did you confront him?\" he asked softly.\n\nClaire shook her head. \"Until that evening, when I returned home to find him sinking his tongue into somebody else's....\" She closed her eyes, trying to make the image go away. \"He had definitely been with her for a while. So every time he'd kiss me, make love to me... I now cringe to think where his tongue had been, where his...thing...had been...\"\n\nShe looked at his face. \"Maybe I should have just brushed it off... Taken him back...\"\n\n\"No.\" Bryan frowned. \"You caught him cheating. Why would you forgive that?\"\n\n\"Because I'm so miserable thinking everyone's sorted and I'm not.\"\n\n\"Who's everyone? I'm not sorted yet.\"\n\n\"You have Grace.\"\n\n\"You have her too.\" Bryan held her right hand between his big palms, the warmth soothing her skin. \"If she makes you feel better, you can always spend more time with her. She usually remains home all day, so you're free to drop in and be with her. At least you'll be distracted and not sitting at a caf\u00e9 crying over things that don't matter.\"\n\n\"It matters to me.\"\n\n\"Really? How does crying over a man who cheated on you help? Unless of course you're a closet masochist.\"\n\nClaire wiped off her tears, feeling the stains making her face all crusty. She rubbed her hands together, looked out of the window.\n\n\"I'm ordering coffee,\" he announced, looking for a waiter. Claire was about to protest but he shut her gently.\n\n\"You're cold. You need it.\" He called a waiter, placed an order for two coffees. \"You want to eat anything?\" he asked her. She shook her head. \"Okay, two coffees then,\" he told the waiter.\n\n\"Why are you here?\" She was finally making sense of her surroundings again.\n\n\"Came with a couple of friends for a laugh,\" he explained. \"Saw you sitting here while leaving. Stopped by.\"\n\n\"Grace?\"\n\n\"My parents are keeping her for a couple of days.\" He smiled, leaned closer. \"She talks about you so much. Remember she used to be so reluctant earlier on? Now she wants every day to be Saturday.\"\n\n\"I wish I had someone like her in my life...\" She murmured, drawing circles with her finger on the table.\n\n\"Why someone like her? You have her.\" Bryan held her hand again. \"Like I said, you can have more time with her if you want to.\"\n\n\"I don't want to use her like a crutch to get over my heartbreak.\"\n\n\"In that case, I've been using her like a crutch the whole time to forget how pathetic my life is.\" He shrugged, then laughed. \"She makes life better, for me, for you. That isn't a bad thing.\"\n\nThe coffee arrived. Steaming and delicious, like molten warmth in a mug. Bryan pushed one towards her.\n\n\"Warm yourself up,\" he said. \"You look pale.\"\n\n\"I'm fine,\" she said, wrapping her palms around the mug.\n\n\"No. You said you're miserable.\" He picked up his coffee, took a sip. \"How far is your Christmas shopping?\"\n\n\"I haven't shopped this year,\" she took a long swallow of the coffee, felt warm and toasty inside. \"Not for myself at least. Just bought gifts for my family and the kids.\"\n\n\"I know a breakup is hard. But you're being unkind to yourself.\" He shook his head, sipped on the coffee. \"You deserve better.\"\n\n\"I...\" She paused, swallowed around the lump in her throat. \"How's Grace?\"\n\n\"Fine. Busy with her new helicopter. She did have a little breathing trouble yesterday after playing for a long time, but it wasn't serious.\"\n\n\"Is there no cure? I mean...you know...like a pacemaker or something?\"\n\nBryan shook his head. \"She was just four days old when she underwent open heart surgery,\" he explained. \"An eight hour operation. Six months later she needed to be airlifted for a second operation on her heart. Then just after her second birthday Grace's body became weak again. She underwent the final operation they could offer us.\"\n\n\"Final....as in?\"\n\n\"As in there's nothing more that can be done. Sooner or later her heart will tire and fail.\" He heaved a long, heavy sigh, staring into the coffee mug. \"A heart transplant is the only option now. We are looking for a match since last year, but a child heart donor is very rare. If she doesn't find a donor, she'll lose her life.\"\n\n\"Please.\" Claire involuntarily reached for Bryan's hand, squeezing it. \"Every time you say that, it breaks my heart.\"\n\n\"We've been asked to be prepared for anything.\" He put his hand on hers. \"I just want to make things as easy for her as possible, give her everything she wants, just keep her happy always. Grace is oblivious to the magnitude of her condition. She never complains. She...\" He laughed fondly, even as his eyes turned moist. \"My mom breaks down sometimes thinking about the future, and she puts her arms around her to comfort her, tells her that she'll never leave us...\"\n\n\"She will never.\" Claire looked into his eyes, nodding. \"Believe it.\"\n\n\"I wish it could change things.\" Bryan finished his coffee in a few long gulps, then looked at her. \"Finish that. It'll turn cold.\"\n\n\"Oh.\" She sipped on the coffee, found it indeed a little cold. \"I'm moving to my new house next week.\"\n\n\"That's great,\" he smiled. \"So something'll keep you busy, huh?\"\n\n\"I have enough to keep me busy.\" Claire finished her coffee.\n\n\"But you still manage to feel sad.\" Bryan gathered the mugs, rising from the chair. \"Stay here. I'll be right back.\"\n\nShe nodded, not finding enough strength to get up. It was getting late. But she didn't feel like going home. Peter and Pauline would probably be wrapped in each other, and they had good reason to tonight. It wasn't their problem that seeing them so in love just made her pity herself all the more.\n\n\"So.\" Bryan returned, sat down again. \"You want to go home?\"\n\nShe shook her head. \"Don't feel like it.\" Bundling her hands in a single fist, she kept her forehead against it. \"I'm sorry about saying all that. You didn't have to know it.\"\n\n\"I probably didn't. But you needed to vent.\" He was smiling when she looked up. \"I'll get you home. Come on.\"\n\n\"I have my car. I can go.\"\n\n\"Yeah, but you don't want to. So someone has to get you home. The caf\u00e9 will shut in a while.\"\n\nClaire smiled for the first time. \"Do you usually stop for people throwing up by the roadside or crying in a coffee shop?\" she asked. Bryan laughed.\n\n\"I stop for people who need help,\" he said. \"Do unto others as you would have them do unto you.\" He checked the time. \"You want to have dinner somewhere? I'm kind of hungry.\"\n\n\"I don't feel like eating.\"\n\n\"So you're going to go home and cry yourself to sleep on an empty stomach, right?\" He raised an eyebrow. Claire hung her head low, feeling uncomfortable suddenly. For some odd reason, Bryan got her. He gauged her emotions even before she could process them.\n\n\"What about dinner then?\" He asked again.\n\nAnd now he was asking her out for dinner...\n\n\"You don't have to if you...\" he began to add.\n\n\"Okay.\" Claire relented, realizing she didn't want to go home to find her brother making out with his wife. \"I'm not sure how much I can eat, but...\" She looked at him, smiled shyly. \"I like your company.\"\n\n\"And I like yours.\" He smiled, rose from the chair. \"There's a Chinese restaurant close by. Let's go there.\"\n\nClaire rose from the chair, feeling like she hadn't walked in ages. Bryan held her when she faltered, steadied her with a hand on her waist. They headed out into the night, mostly quiet. But once in the restaurant, the mood changed. Bryan joked and laughed, and Claire found herself laughing easily. The man had gone through so much, just like his daughter. But neither of them had lost their ability to enjoy life and be happy with what they had. In the middle of dinner, Peter called to ask if she was okay. She told him the truth, that she had met Grace's dad on the way and had decided to spend some time together. She could sense Peter's smile when she asked him about their big news. He said both of them had shed tears of joy for a while, making Claire wish she'd been there to capture the moment. She hung up after assuring him she'd be home soon.\n\nDinner was nice and easy. They shared about their professions; his furniture business and her handicrafts e-store. He spoke about Grace, her antics, habits, quirks. He also told her about his parents and younger brother, who was due to get married next year. Claire really wanted to ask about Grace's mom, but didn't. Spoiling a nice dinner with a nice man wouldn't be a clever move.\n\nShe drove Bryan home since he didn't have his car with him, despite his protests.\n\n\"Feeling okay?\" he asked her while they made the journey. \"You ate little.\"\n\n\"I'm fine,\" she smiled. \"I lost my appetite after crying so much.\" She gave him a sidelong glance. \"When are you meeting Grace?\"\n\n\"Tomorrow morning. She usually remains with mom while I'm away at work, and I pick her up on my way back.\"\n\n\"I miss her when I don't see her.\"\n\n\"I know. She's infectious.\" He laughed softly. \"Everyone at the hospital loves her so much. They spoil her rotten. Right turn, please.\"\n\nClaire turned, noticing a nice, single-story house at the corner. \"This one?\" she asked. He nodded.\n\n\"My parents live there,\" he pointed behind him to the lane they'd just crossed. \"You sure you can make it back home?\"\n\n\"Yes.\" She saw Bryan get off, discreetly adjusting his pants. \"Thanks for today. I didn't think the evening would end this way.\"\n\n\"Neither did I, but...\" He smiled, leaned against the open door. \"Take care of yourself, yeah? There's no use wasting your energy on someone who couldn't value you.\"\n\nClaire nodded, like trying to follow his words. \"I'll see you Saturday, then?\"\n\n\"Yeah.\" He shut the door. \"Drive safe, okay? You have my number, right? Mind letting me know once you reach?\"\n\n\"I'll be okay.\"\n\n\"I'll be worried.\"\n\nClaire sighed. \"Okay,\" she nodded. \"Goodnight.\"\n\n\"Goodnight.\"\n\nShe drove off, smiling to herself all the way home. She crept quietly inside, Peter and Pauline already asleep. Then she undressed, brushed her teeth, and climbed into bed, phone in one hand and Brownie next to her.\n\n*\n\n\"This is for me?\" Claire asked, eyes wide with pleasant surprise. Grace nodded, then giggled. Claire held the card in her hands, innocently hand-drawn with crayons and colouring pencils. The picture had a big green Christmas tree in the middle, decorated with bells and stars and every possible thing one had ever seen on a Christmas tree. There were colourful gifts scattered around the base of the tree, and at the bottom of the card was written 'Merry Christmas to Miss Claire' with a red crayon, and then Grace's signature.\n\n\"It's so pretty,\" she smiled, pulling her into a hug. Grace giggled again, her brown eyes twinkling. \"You're only getting better at painting. This is so nice.\"\n\nShe kissed her forehead, fondness filling her heart. \"Thank you. I'm going to hang it in my new home.\"\n\nShe was moving the next day. There was not much to be moved, though. Just a few bags and boxes and it would be done. While leaving Brad, she had only taken her own stuff, leaving behind all the furniture and appliances that she'd bought for the house. Her new house was already furnished, so she had bought a couple of mattresses and some bed linen. Slowly she'd get around to decorating the place.\n\n\"Well, actually, I have something for you too.\" Claire reached for the other chair, where she'd put down her bag. She opened it, fished out a box wrapped in glossy, red paper. Grace stared, like she knew there was something fun inside.\n\n\"Here. This is your Christmas gift from me.\" She smiled, as Grace reached her small hands out to hold the box. \"Go on, open it.\"\n\nGrace put the box on the table, stood up from the chair, and proceeded to remove the paper. With a little help from Claire, she managed to unwrap the box, then lifted the flaps to find her gift inside.\n\n\"Airplanes.\" There was a look of wonder on her face as she stared inside the box. Then with gentle hands she fished out the two toy airplanes one by one. \"For me?\" She asked just to confirm. Claire nodded.\n\n\"Thank you,\" she giggled, looking at the toys on the table.\n\n\"What are they?\" Claire smiled.\n\n\"This is a glider.\" Grace expertly held up one of the planes. \"This is its canopy,\" she started pointing to parts of the plane. \"This is the rudder, this is the fin, these are the wings, this is the flap, this is the elevator...\"\n\nClaire stared, impressed by her perfect knowledge of planes, even though she was yet to begin school. In the last few months, she had impressed and surprised her in many ways, whether talking about airplanes, or analyzing the characters of the stories she read to her, or ruing how lonely her daddy was. Claire had never seen her sad. She wondered if anybody had. Despite how frail she was, her spirits were always high.\n\n\"This one is a jet,\" Grace continued, moving over to the other toy. \"It's very similar to a glider, but has winglets on the tips of the wings, turbine engines under the wings...\" She looked up at her. \"I'll have my own airplane when I grow up,\" she said. \"Like this,\" she held up the glider. Claire smiled.\n\n\"Of course you will,\" she nodded. \"You'll fly your own plane. Who will be your passenger?\"\n\n\"Daddy.\" She said promptly, playing with two toys in two hands. \"Grandpa, grandma, uncle Rory. And you.\"\n\nClaire raised her eyebrows. \"Me?\"\n\n\"Yes.\" She looked at her, eyes narrow. \"Won't you come?\"\n\n\"Oh, I will,\" she laughed, kissing her cheek. \"I will.\"\n\nShe looked out of the window to see if Bryan was there yet. It was the last day before Christmas, and the younger volunteers had organised a small program for the kids where the parents were also invited. Grace had worn a pretty princess dress, a small tiara in her hair. Bryan had stopped to speak to her for a while when he came to drop Grace, asking if she'd been okay after that day.\n\nShe actually had. Now when she thought of it she realised she'd only been polite and discreet about her breakup, had avoided trashing the man she'd spent so long with. But after that attempted voice message and then crying in front of Bryan, telling him all the nasty details, she indeed felt a lot better.\n\n\"So what are you doing on Christmas day?\" Claire asked her, keeping her engaged until Bryan arrived and the show started.\n\n\"We give gifts to children who don't have parents,\" she answered, checking if her dress was alright. \"In the evening, daddy's friends come over. Sometimes we go to visit them. And we eat ham.\"\n\n\"Do you decorate the tree?\"\n\n\"Yes. Daddy does the top because he's big, I do the bottom.\" She smiled at her, a new tooth coming out from the blank space. \"Grandma makes cake. I love it.\"\n\n\"Sure you do.\" She looked out of the window again, found Bryan arriving. \"Daddy's here,\" she said. \"Come on, let's put these back in, and then we'll go to the hall.\""
    ],
    "authorname": "Cynthia W.",
    "tags": [
        "love story",
        "breakup",
        "new love",
        "fatherhood",
        "being brave",
        "grief",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/a-touch-of-grace"
}