{
    "title": "Lost and Found Ch. 02",
    "pages": [
        "Chapter 2 as requested -- I hope it lives up to expectations.\n\nIf you haven't read the first chapter then I would suggest that you do so first in order to understand the storyline and character dynamics.\n\nMany thanks to my friend Anne for finding time in her hectic schedule to help with proof reading this story, I really appreciate it.\n\nFor my special friend Callie, who doesn't like loose ends -- the epilogue is all yours Babe.\n\nCat xx\n\n*\n\nI left St. Ives the next morning. I still had a couple of days of annual leave left and much as I would've loved to spend them in Jo's arms it made more sense for me to leave. Jo had lots to sort out in preparation for taking the caf\u00e9 over officially and was going to immediately close it down for a few days for refurbishment. She may have chilled out significantly in the 3 years we'd been apart but the old control freak was still hovering just under the surface, so she wanted to be around to monitor the progress of the contractors.\n\nI also had lots to do. I needed to decide whether to sell or rent my flat out and I also needed to start packing and make all of the necessary arrangements for moving my life from London down to Cornwall and so, after a tearful and drawn out goodbye, I climbed into my car and started my long journey home. Although it didn't feel like going home; how strange!\n\nThe drive was an absolute nightmare! There were road works on the A30 which slowed me down to a crawl before the feeling of Jo's last kiss goodbye had even left my lips and the temptation to just turn around was almost overwhelming but I mustered my self control and kept the car pointing north east.\n\nThere had also been an accident on the M4 and I sat in stationary traffic for so long that I had to turn the radio up as loud as I could bear to stop me thinking too deeply as I sat in the car twiddling my thumbs. The further I drove away from Jo the sadder I became and on more than one occasion I had to mentally kick myself to stop the tears flowing down my face; reminding myself that it was ok, I would see her again soon.\n\nEventually I pulled up outside the converted Victorian town house that comprised my flat and two others, standing in the darkening evening and looking at the building in a new light. I loved my 2 story ground floor and basement flat. I loved it's quirky design with the bedrooms in the basement and the living space upstairs; I loved it's small, easy to maintain garden where I could sit and pretend not to be in a city; I loved the original Victorian fireplace, sash windows and mouldings. But now? Now, while I could still appreciate these things on a rational, aesthetic level and could still find them pleasing, there was an undercurrent of something else. An irritation that this flat was going to tie me to London for at least a while longer when all I wanted was to run away; to run back to the arms of the woman I loved and who, miraculously also loved me and had invited me back into her life.\n\nI had left my tent and almost everything else I'd taken to Cornwall at Jo's as it seemed silly to bring it home to London just to take it back again, so I grabbed my almost empty rucksack from the boot of the car and wearily climbed the steps to my front door. I was both emotionally and physically drained from the long drive, so I ignored the messages on my answer machine, sent Jo a text to tell her I'd arrived safely and fell gratefully into bed where sleep claimed me immediately.\n\nAs soon as I awoke the next morning, rolling over to find myself in my own empty bed, I had to call Jo immediately. The loss I felt was palpable and I had to lift my heart before I attempted to start my day. She answered quickly but from the sound of her voice it was obvious I'd woken her and I cursed myself for not checking the clock first -- it was only 6.30am.\n\n'Hey you, I'm sorry to call so early I didn't realise the time and I missed you when I woke up.'\n\n'Hey Baby, that's ok you can call me anytime, you know that.'\n\n'I'm still sorry I woke you.'\n\n'Yeah, well I didn't sleep very well last night. I've already got used to having you in my bed and it was lonely without you. Buster makes a very poor substitute and he snores even louder than you do!'\n\nIt was nice to hear that Jo had missed me too. I had no doubt that she loved me but given our history it wasn't surprising that I felt a little insecure about our newly rediscovered relationship sometimes.\n\nWe talked for a while about inconsequential things, about what the day had in store for us both and as we talked my free hand had unconsciously moved to my breasts, casually stroking and toying with my nipples. It was all quite innocent until Jo asked me if I was still in bed and the tone of her voice sent shivers down my spine.\n\n'I wish I were there with you. Do you still have our old bed, with the brass headboard?'\n\n'Uh huh, why?' \n\n'Cos if I was there with you right now I think I'd be tempted to tie your hands to that bed and keep you there all day.' She was practically purring down the phone and I couldn't help moaning at the thought. My nipples were now hard and puckered, aching for her mouth to claim them but I had to make do with my own fingers as they pinched and twisted and pulled.\n\n'Where are your hands right now Jo?'\n\n'Well, I'm holding the phone with my left hand......'\n\n'and the other one?'\n\n'Is slowly stroking it's way down my tummy, I've been wet for you since the moment I heard your voice; being away from you until you move down here is going to be torture!'\n\n'I know Babe, I'm so horny for you right now I could jump straight back in my car and come and ravish you!'\n\n'Well for now we'll have to make do with the phone Vicki, I'll have to imagine that the fingers that are stroking my lips are your fingers and when I touch my clit I'm going to pretend it's your gorgeous tongue.'\n\nI could hear her breathing get heavier and could imagine the sight of her in bed, her hand buried between her legs as she brought herself relief. My own hand deserted my nipples and headed south, spreading my puffy lips and finding the copious wetness gathered there, strumming my clit as I gripped the phone so tightly my knuckles were white.\n\n'Oh Jo' I groaned 'I want to have my mouth on you; I want to suckle you and lick you and touch your whole body. I want to make you swear and buck and writhe under me until you can barely breathe.'\n\n'Oh god Vicki yes!'\n\n'Imagine me there Babe, my head between your thighs as I suck your clit into my mouth, my fingers slipping in and out of you, caressing you inside, softly to start with but getting harder and firmer the more your hips move with me.'\n\n'Grnnnnff' \n\n'Just the thought of devouring you as I play with myself has me so turned on Jo and I'm so close to coming; come with me Baby, let me hear you.'\n\nThere were squeals and whimpers and moans from both us as we let our imaginations carry us along with the moment, the image of my beautiful Jo's face in rapture fuelling my own release as a powerful orgasm ripped through my body, leaving me breathless and sweaty.\n\n'Mmmmmm morning gorgeous, that was a nice way to start my day!'\n\n'Oh yeah, back atcha Babe!'\n\nWe'd been on the phone for an hour before we finally managed to tear ourselves away and when I finally stepped into the shower I had a huge grin on my face. Not just because I'd just had it confirmed in the nicest way that Jo was missing me and needed me as much as I did her, but because it seemed that she'd gotten a little more adventurous than she used to be.\n\nJo had travelled regularly when she was working in the corporate world, often staying away in hotels for a few days at a time and much as we'd spoken on the phone every night, declaring how much we loved and missed each other, we had never once indulged ourselves with phone sex.\n\nThis was an interesting development and I couldn't help wondering what else she'd be willing to try. Damn I couldn't wait to be with her again to find out!\n\nThe next few days were a whirlwind of activity. After consulting with several estate agents I decided to sell my flat in London as even though the property market was slow right now, I had bought it enough years ago and at a good enough price, that even with the slump I could almost double my investment.\n\nIt wasn't going to be enough money to live on forever but it would provide me with a big enough comfort zone that even if I didn't find work in Cornwall for a couple of years I'd be ok if I was frugal; and if I did find work fairly quickly then I could invest the rest in Cornwall where property prices were much cheaper.\n\nThis was fine in itself except that it meant dealing with estate agents. I'm sure there are some very nice people who happen to be estate agents -- unfortunately, none of them operate in my local area and the unending stream of slightly slimy, arrogant young men that traipsed around my flat, sucking their teeth and trying to convince me that their agency would do the best job was infuriating!\n\nI eventually managed to negotiate a suitable agreement with 2 estate agents (a little bit of competition never hurts!) and crossed my fingers that the sale would happen quickly and with a minimum of fuss as I wasn't in a chain.\n\nDuring phone calls with Jo we worked out what furniture we would keep and move to Cornwall and what I would get rid of. Most of it was functional and had no sentimental value but the bed was definitely coming with me -- especially as I still had Jo's comments about tying me to it running though my head!\n\nOn the Saturday night I went out for a meal and drinks with some close friends so that I could break the news to them. Most of them were happy for Jo and me but one of my friends was initially furious with me. She couldn't understand how I could make such a drastic move and leave myself open to Jo dumping me again. She'd never really forgiven Jo for the way she deserted me and wasn't at all happy that I was making myself vulnerable to her again.\n\nI knew her argument had it's merits and that she was only trying to look out for me, I was taking a gamble after all but isn't every major choice we make in life a gamble to some degree? Eventually after I'd explained our reunion in more detail she came to accept the fact that it was a chance I had to take, whilst making me promise that if it didn't work out I'd come back to London and stay with her while I sorted myself out. It was good that I had such wonderful friends who were willing to support me, especially since they'd seen the mess I was in the last time Jo and I broke up.\n\nWhen Monday dawned I made a point of getting into the office early. I knew I'd have a weeks worth of emails to catch up on and I also had an important task to perform -- I had to write my letter of resignation!\n\nBy the time I sauntered into see Zoe, my manager, at lunchtime I had just about caught up with the backlog and was feeling quite relaxed. She looked at me curiously, her head tipped slightly to one side.\n\n'Hey Vicki, good holiday?'\n\n'Yeah, great thanks. In fact that's why I'm here; I need to talk to you about something.'\n\nShe ushered me into one of the comfy chairs around her coffee table, poured us both a cup of the obscenely strong coffee that seemed to be her staple diet and sat opposite me.\n\n'Ok spill the beans.'\n\nI removed the envelope from my pocket and handed it to her, trying to hide the smile that was creeping across my face as she pulled the typed sheet from inside.\n\nAs she read it her mouth gaped open in shock and surprise. She looked at me, read the letter again and then looked at me again, finally managing to regain her composure.\n\n'What the hell? Vicki, why didn't you tell me you were looking for another job? There are openings coming up here in a few weeks that you'd be eligible to apply for if you need a change or more money, I'd be happy to put in a good word.'\n\nShe looked hurt that I hadn't spoken to her and I understood why, we'd been working together for 5 years and we got along well; we worked well together as a team and we had a good personal relationship too. She may have been my boss but she was also my friend, so I knew this would come as a bolt from the blue.\n\n'I wasn't looking, in fact I don't have another job to go to but I am having a bit of a lifestyle change.'\n\n'Oh Christ! Don't tell me you've turned straight and you're marrying a sugar daddy?!' \n\n'Hardly!' I snorted with laughter 'I bumped into Jo when I was on holiday and, well, we're getting back together and I'm moving to Cornwall to be with her.'\n\nOnce again she sat there slack jawed as the news sunk in and I could see the cogs turning in her head as she considered the news. I expected a similar reaction from Zoe to the one I'd received on Saturday, as she'd also witnessed the fallout from last time and had covered for me admirably when I wasn't able to do my job properly.\n\nEventually she leaned back into her chair and looked straight into my eyes. There was no anger or resentment but she did have questions.\n\n'Are you sure about this Vicki?'\n\n'Yes, I am. I have a second shot at happiness and I'd never forgive myself if I didn't give it my best shot.'\n\n'And you're absolutely sure that Jo loves you as much as you love her?'\n\n'Yes, I'm sure.'\n\n'And you know she's not going to break your heart all over again?'\n\n'No --I can't know that for certain but I do know that she's prepared to try and she's even willing to upset her parents to give our love the best chance possible.'\n\nZoe climbed out of her chair and came to kneel in front of me, wrapping her arms around me and enfolding me in her embrace.\n\n'Then all I can do is wish you both the very best of luck and I hope you'll invite me down to visit some time. God I'm going to miss you Vicki and where the hell am I going to find someone to replace you?'\n\nI realised that Zoe was crying and I was immensely touched to have her understanding and her support. By the time I left her office we had agreed that if I could find a suitable replacement and get them trained early enough, then I could shorten my notice period, allowing me to move to Cornwall earlier than expected.\n\nThe week flew by. My days were full of recruitment activity and organising everything to make sure that my handover to the new starter would go smoothly; my evenings invariably involved showing at least one prospective buyer around my flat.\n\nBy the time Friday afternoon rolled around I was wound as tightly as a spring, knowing that in a few hours I would be in Jo's arms again. I left work at lunchtime, running down to my pre packed car that was waiting in the car park and started the long drive down to where my love was waiting for me.\n\nMercifully the journey was uneventful and by 5.30 that evening I was pulling into Jo's drive. I let myself into the cottage to be greeted by Buster in that enthusiastic way that young Labradors do, barely managing to stay on my feet as he jumped up and licked my face.\n\nThere was a note in the kitchen from Jo informing me that if she was still out when I got there, to either make myself comfortable or join her at the caf\u00e9, so I took a quick shower, dressed and towel dried my hair and took off down the road at a jog, eager to see the woman who held my heart.\n\nWhen I got there I could see her through the windows and a pang of intense jealousy flooded my body. The furniture had all been removed to facilitate the redecoration and she was stood in the middle of the empty caf\u00e9, her arms wound tightly around a tall man who was hugging her back tightly, his head resting against Jo's very intimately.\n\nI felt like a voyeur as I watched him lift Jo's chin and plant a kiss on her mouth. It wasn't a deep kiss but it was definitely more than a friendly kiss and I felt my stomach twist into knots as I stood watching.\n\nI didn't know what to do. Part of me felt like turning around and fleeing back to London but another part, thankfully a stronger part, demanded an explanation for this blatant display of affection, so I opened the door to the caf\u00e9, the little bell above the door announcing my presence.\n\nI think I expected them to spring apart guiltily but they didn't, they just moved so that they were standing side by side with their arms around each other's waist until Jo turned fully enough to see who had entered, at which point she covered the short distance between us in a few strides of her long legs and threw her arms around my neck, kissing me in a much more passionate way than she had kissed him.\n\nMy emotions were all over the place and I didn't return the kiss in the way Jo had expected, causing her to pull back from me and look into my eyes, her eyebrow cocked in a quizzical manner.\n\n'Hey Babe, what's up?'\n\n'Hi' I muttered back, looking over her shoulder at the man, now busying himself clearing up dust sheets and paint pots.\n\nJo frowned at me, kissed me briefly again and then smiled, grabbing my arm and dragging me across the room to where the man was tidying.\n\n'Vicki, I want you to meet Dan. I've told you about Dan -- he's the man I was engaged to briefly and he just happens to be the best painter and decorator in this area; he also gives me a good discount!'\n\nOk, so now I was thoroughly stumped! I had just caught Jo kissing her ex boyfriend and she seemed so blas\u00e9 about it that I was completely confused; I had no idea what was going on and therefore had no idea if I should be upset, jealous, angry, indignant -- or if I was making a big deal out of nothing.\n\nTo my surprise Dan took the initiative and walked over to me, shaking my hand briefly before pulling me into a hug I wasn't expecting.\n\n'Hi, you must be Vicki, it's really nice to meet the woman who's stolen Jo away from me!' he said with an enormous grin on his face! This was getting more confusing by the second!\n\n'Urm hi, nice to meet you too.' I stammered, at a loss for anything else to say.\n\n'Jo just told me that you two have got back together again and I'm really happy for you both. I admit that when Jo broke up with me I wasn't exactly pleased but when she explained about the love you two shared I knew I couldn't compete and I'm so glad you've found each other again. I'm sure I'll see you around soon.'\n\nHe kissed my cheek, kissed Jo's cheek and walked out of the door, leaving the little bell tinkling in his wake as I stood there completely dumfounded, my mouth hanging open.\n\n'What the hell just happened Jo?'\n\n'Well, you walked in at a badly timed moment, jumped to all the wrong conclusions and got all jealous. Now can I have a proper kiss please?'\n\nIt wasn't a question and she gathered me into her arms and claimed my lips once more, her tongue leading mine in a dance that gave me no option but to reciprocate. She had one hand in the middle of my back and the other on my arse, pulling me tightly against her and I melted into her body, sighing deeply as Jo broke the kiss and started nuzzling my neck.\n\n'I'm sorry if I upset you Babe but you have no reason to be jealous. Dan is a good man and we broke up on good terms and are friends; you looked like a deer caught in headlights when you walked through the door.'\n\n'I'm sorry Jo but it was a shock. I came running down here to meet you and found you in the arms of a man who proceeded to kiss you; what the hell was I supposed to think?'\n\nI knew I'd come across as a bit stroppy but damn! How the hell was I supposed to react?\n\n'Vicki, you have to trust me. There is no one else that I want -- just you. Dan is a friend and I think you two are going to get on like a house on fire when you get to know him; you actually have a lot in common. Now can we drop this and go and eat? I'm starving!'\n\nThe rest of the evening was wonderful and I started to feel ashamed of the way I had reacted with such a lack of trust. I was going to have to start really believing that Jo loved me and only me and show some faith in her.",
        "Jo regaled me with her plans for the caf\u00e9 -- it was to remain a caf\u00e9 during the day but she knew a young, talented, local chef who was looking for his own restaurant, so she had come up with the idea of installing some clever lighting and decoration that allowed the caf\u00e9 to be turned into a cosy and intimate restaurant in the evenings. The chef got his first restaurant at a reasonable rent while Jo got extra income from the premises without having to work longer hours -- genius!\n\nAfter we'd eaten we wandered back to Jo's place via a local pub where we had a few drinks and by the time we got in through the front door I was shattered from the long day and the drive down.\n\nI had been looking forward to making love with Jo all week but I fell into bed and by the time she emerged from the bathroom I was already asleep.\n\nI awoke in the morning to a very pleasant sensation. I was lying on my back and Jo was tucked tightly into my side, licking and suckling gently on my left nipple while caressing the other one with her fingers. I could feel the wetness between my thighs and couldn't help but wonder how long she's been paying me this wonderful attention while I slept.\n\n'Morning Honey, I thought you'd never wake up.' She purred on seeing my eyes open.\n\n'Mmmm good morning to you too' I grinned as I indulged myself in a long and satisfying stretch that had the added bonus of arching my back and pushing my nipple back against those sweet lips.\n\nJo rolled on top of me and kissed me deeply as her hands caressed my sides and hips. I enfolded her in my arms, holding her naked body as close to mine as was possible, wrapping my legs around her thighs and trapping her in place as our tongues performed a sensuous waltz.\n\nJo broke the kiss and started to move down my body, planting little kisses and nips along my neck, collar bone and the tops of my breasts but I knew where she was headed and suddenly I was starving. The need I had felt all week rushed back in a tidal wave of lust and I wasn't content to merely receive; I hungered to have my fill too.\n\n'Turn around Jo' She looked into my eyes and smiled a wicked smile that had me quivering like jelly, before sitting up on the bed and swinging her leg over me to straddle my face.\n\nI gazed up at her puffy lips, already slick with nectar, her scent drawing me in as a moth to a flame, shoving another pillow under my head to allow me to reach better as I extended my tongue and took a long swipe from her exposed clit down in between her lips, tickling her perineum with the tip and making her squirm above me.\n\nI pulled her hips down so that I could suck her labia into my mouth, manipulating them with my lips but releasing them after a while to drive my hot, wet tongue deeply into her waiting pussy just as her lips found my clit and sucked it deeply into her mouth; her tongue lashed my bud viciously, wonderfully, magically, making it hard to retain any concentration on what I was doing.\n\nHer taste as I wiggled my tongue inside her was amazing and I felt her shiver as I groaned into her gaping sex, but I needed to come badly and I wanted Jo there with me when I did, so I moved my mouth to her engorged clit and suckled hard as I used 2 crossed fingers to caress her inner walls, grazing her sweet spot on every other pass and making her hips buck against my face.\n\nMy own body was receiving similar treatment with Jo's mouth and fingers lifting me higher and higher as she played my body in the way that only she could.\n\nIt wasn't long before we were both clinging onto each others hips for dear life as we humped and writhed against each other and as I heard and felt Jo begin to moan in earnest I let go, my orgasm tearing through my body like a tidal wave as Jo's thighs tensed above me, drenching my face in her essence.\n\nWe snuggled back under the covers together, our mouths sticky as we kissed slowly and lovingly, our passion abated enough for now to allow us do doze off again wrapped securely in each other's arms.\n\nJo and I spent a lot of time talking that weekend, trying to work out the logistics of my escape from London coupled with the impending launch of Jo's revamped caf\u00e9 and restaurant.\n\nJo understood that I wasn't going to be able to travel down from London every weekend as the journey was just too long and tiring and I had to concentrate on wrapping things up at home, but now also wasn't a good time for her to be leaving Cornwall either, so we were going to have to cope with being apart for a little while.\n\nWe also decided that it was best if Jo waited until after the caf\u00e9 opening to tell her parents about us. She wanted to be able to invite them to the launch so that she could show them that her decision to leave the corporate world was a sound one and it would be easier if their thoughts weren't clouded by other issues.\n\nThe rest of the weekend was spent walking hand in hand along the beach with Buster bounding in and out of the surf and harassing the gulls, sampling the local seafood, or in bed. Sometimes just laying snuggled up together and chatting and at other times mercilessly driving each other to heights of ecstasy.\n\nOn Sunday lunchtime our parting was even more painful than the week before, as we knew it would be at least 2 weeks until we saw each other again. \n\nBy the time I pulled up outside my flat in London I was tired and emotional; I was beginning to resent my previously loved home as it represented time that had to be spent away from Jo and even though I had previously enjoyed my own company, now I craved the companionship that could only be supplied by a lover and partner.\n\nDuring the next week at work I had some good fortune. I was chatting to the manager of our finance department during lunch on the Monday and he mentioned that his sister was looking for work. Having quizzed him about his sister's previous experience I was keen for her to apply for the position I was leaving and having received her CV on the Wednesday I was happy to offer her an interview.\n\nShe turned up a few minutes early for her appointment on the Friday looking every inch the part and after 30 minutes I was convinced that she could do the job, so I arranged for her to have a follow up interview with Zoe on Monday. She was keen to start as soon as possible, so if all went well and Zoe approved of her, I could possibly leave in 3 or 4 weeks!\n\nI had to miss out on drinks with the girls on Friday evening as I'd had a call from an estate agent who had someone desperate to view the flat, so with some resentment I rushed home to tidy up prior to their arrival.\n\nThe woman arrived early and before she'd even seen half of the rooms she was already showing signs of being seriously interested and by the time she'd seen the whole flat she was hooked! I didn't want to get too excited just in case she changed her mind but as I showed her out of the door 45 minutes later she was already talking about how she would redecorate and was referring to the place as hers. The icing on the cake was finding out that she was a cash buyer due to divorce and wasn't in a chain. YES!!!\n\nI walked back into my kitchen and stared disconsolately into the fridge, trying to locate enough ingredients to create some sort of a meal but as I hadn't had time to do any shopping my options consisted of a cheese omelette or a pot noodle, neither of which was overly appealing.\n\nAs I was rummaging around in a kitchen drawer for take away menus I was distracted by the doorbell, so I walked to the front door cursing under my breath about all the things I was going to do if it was someone trying to sell me something.\n\nI pulled the door open ready to be combative if necessary to find Jo on my doorstep! She rushed into my arms, pushing me backwards, kicking the door closed behind her and smothering my mouth with hers in one fluid movement -- all before I'd had a chance to say a word!\n\nEventually we broke the kiss due to lack of air and I stepped back and held her at arms length, grinning like a Cheshire cat.\n\n'Why didn't you tell me you were coming?'\n\n'I missed you and it was a spur of the moment decision, you don't mind do you?'\n\n'God no, of course I don't mind. It's fabulous to see you! I was just about to order something to eat, are you hungry?'\n\n'Starving! Is that excellent little Turkish restaurant still down the road, can we go there? I'm buying!'\n\nThere was an immense sense of d\u00e9j\u00e0 vu as we walked to the restaurant arm in arm. It was a journey we had made many times together in the past and I felt very smug to have the opportunity to do it again.\n\nJo deciding to drive for 5 hours and turning up out of the blue to surprise me had filled my heart will glee and we all but skipped down the road we were so happy to be in each other's company.\n\nWe ate well and drank far too much wine, leaving the restaurant a little tipsy, so we decided to get a cab home with Jo snuggled up against my side for the short journey and by the time we got home she was asleep on my shoulder.\n\nI paid the driver and woke her gently, leading her inside and straight to bed. Once under the covers and naked in each other's arms she kissed me gently.\n\n'You know I was quite cross with you last week when you fell asleep without making love to me but I'm so tired after the drive I understand now. Would you mind if we just cuddled and slept tonight?'\n\n'Jo my love, I was expecting to sleep alone tonight so just holding you in my arms is a massive bonus!'\n\nShe kissed me sleepily, her tongue lazily playing with mine as her eyes started to droop, so I gathered her into my body and lay her head in the crook of my shoulder where she fell asleep almost instantly. I followed her almost immediately, lost in the feeling of having my soul mate snuggled up in my arms.\n\nLast Saturday I had woken up to Jo sucking my nipples, this Saturday I was woken up by her leaping onto the bed and squashing me!\n\n'Hey sleepy head, I've been up for ages come on wake up!' she squealed like an excited child as my eyes tried to focus.\n\nI could smell a combination of the cafetiere of strong coffee that Jo had set on the bedside table, mixed with shower gel and shampoo. Suddenly my eyes flew open as Jo leaned down to kiss me, her long, cold, wet hair landing on my sleep warmed face, neck and chest -- a rude awakening indeed!\n\nI obviously didn't respond quickly enough and her hands shot under the duvet and tickled me until I was begging for her to stop before I wet myself.\n\nEventually I squirmed out from under her, laughingly scolding her to pour the coffee as I ran to the bathroom to relieve my bladder.\n\nJo had got back into bed so I climbed in with her, gratefully accepting a mug of coffee and we sat there chatting until the coffee was gone.\n\nI asked her what she wanted to do today -- I had assumed that as she rarely visited London that she might want to catch up with some old friends, maybe go to a museum or go shopping on Oxford Street.\n\n'Actually I'd rather stay here if that's ok? I can help you pack some things and take them back with me tomorrow if you like? Before that though..........' And she pounced!\n\nShe must have brought the silk scarves with her because they sure as hell weren't mine! I'm stronger than Jo but she was a woman on a mission and she had the element of surprise in her favour. In mere seconds she had secured both my wrists to the ornate bed frame, a mischievous grin on her face.\n\nShe yanked the duvet cover off onto the floor and stood there appraising me as I lay helpless on the bed. As for me -- I was instantly soaked! I had no idea what Jo had in mind for me but I knew I was going to like it!\n\nI in turn was watching her naked form as she prowled around the bed like a panther deciding on how to devour her prey; just the look in her eyes was enough to send shivers of delight up my spine.\n\nShe sat next to me on the bed, lightly tracing patterns all over my body with her finger tips until I was shivering in anticipation, my whole body covered in goose bumps. \n\nShe lay down on top of me, parting my thighs so she could rest in between them, her breasts against mine as she kissed me slowly, sensuously; moving just out of my reach every time I tried to deepen it.\n\nI wanted to hold her, to wrap my arms around her and press her naked body against mine but the scarves were tied tightly and my arms were held fast.\n\nShe sucked on my neck, knowing that I loved the feeling but hated having visible hickies, leaving her mark on me as if to claim me as her own, watching my eyes as if daring me to challenge her.\n\nShe moved lower, kissing my throat and all over my tits, briefly running her tongue over the tips of each nipple but moving on too quickly for me to savour the sensation.\n\nShe licked down my stomach and around the tops of my legs; a quick lick that swept the length of my slit, flicking my clit teasingly before she moved on.\n\nI was trying not to moan, or beg, or writhe but damn! The woman was driving me insane!\n\nShe left the bed and padded over to my chest of drawers, opening the top drawer and reaching into the back, knowing what she would find there.\n\n'Hmmmm this one I think' as she selected one of the three toys that were nestled in the back of the drawer. She turned the base, checking that the batteries were fresh, running the vibrating phallus over her nipples as her eyes bored into me.\n\nThe sight was mesmerising and as she slipped the toy lower and allowed it to play lightly between her lips I could see her own need as clearly as I felt my own. She pulled the toy away and I saw the plastic glistening and knew she was as wet as me.\n\nShe walked back to the head of the bed and held it just in front of my mouth, allowing me to lick her juices from it, knowing it would drive me insane, before running the toy over my body as she had hers.\n\nKneeling between my legs once more she played the vibe over my nipples in turn until they were so hard it was almost painful, at which point she sucked them alternately into her mouth, biting them gently until I cried out in a mixture of joy and pain.\n\nWhen she moved away again I was ready to beg, to cry, to do anything she asked just to have her touch me again, for her to make me cum.\n\n'Please Jo, PLEASE!' I whimpered, my breath catching in my throat.\n\nShe continued to suckle at my nipples as she played the toy down my body, over my tummy, between my legs but never with enough pressure! I tried to lift myself up, to press my skin against the roving toy but with my hands tied above my head I had very little leverage and she easily pushed me back down again with her hand.\n\nShe teased me in this fashion for an eternity. Ok, it was probably only a few minutes but it felt like forever until she finally took pity on my trembling, quivering body and pressed the head of the vibe against my lower lips, resting it just against my opening.\n\n'You want this?' she asked cockily with an arched eyebrow.\n\nI nodded enthusiastically, my mouth too dry to form words.\n\nSettling herself on her knees between my thighs she watched as if fascinated as the 8 inch toy slid into my well lubricated snatch, eliciting a moan of pure desire as I felt it fill me, the gentle vibration causing me to clench around it as if I never wanted it to leave -- which I didn't.\n\nShe sat watching as she gently pulled it most of the way out then slid it back in again, over and over and over again. \n\nI was on fire. I needed to cum, I needed her to fuck me hard, and yet I never, ever wanted this slow, exquisite torture to stop.\n\nI heard Jo moan and lifted my head to see Jo's fingers gently rubbing her clit in time with her slow thrusts into me, the sight pure deliciousness as I watched her smear her juices all over her hard nub.\n\nHer breathing was almost as fast as mine and when she knew she wasn't far away she increased the speed of the hand on her clit and pushed the toy in and out of me faster and faster, deeper and deeper until I was crying out, calling her name, desperate for release and when I thought I could take no more she lowered her head and sucked my clit into her mouth.\n\n'FUCK! Christ Jo, yes, don't stop, don't stop, aaaarrrggghh!!!' as I convulsed so hard I thought I would shoot the toy across the room, her mouth on my clit sending vibrations from her own orgasm straight through me and prolonging my high even further.\n\nJo collapsed with her head on my thigh and the biggest fucking grin on her face that I'd ever seen.\n\nEventually, as our breathing returned to normal she crawled up my body and kissed me; a searing kiss that had me wanting her again, had me needing to free my hands and possess her body as she had done mine. She saw me starting to struggle at my bonds and admonished me.\n\n'Tsk, tsk! What makes you think I've finished with you yet?' her tone cocky and playful.\n\nI was about to answer her when we were rudely interrupted by the doorbell.\n\n'Expecting company?'\n\nI looked over at the clock and nearly had a heart attack!\n\n'Shit Jo, I'd completely forgotten, there's a couple here to view the flat!'\n\nWe stared at each other for a long moment before we burst out laughing. Jo jokingly threatened to leave me tied to the bed but she undid one of my wrists, leapt off the bed and into my dressing gown and rushed up the stairs, leaving me to untie the other arm and make myself presentable.\n\nBy the time Jo had let them in and shown them into the kitchen, inviting them to show themselves around and suggested that they view the upstairs and garden first I was dressed, so I ran upstairs so Jo could also dress.\n\nI thought we'd got away with it until some time later when they emerged from the bedroom smirking to themselves. It wasn't until after they'd left that I ventured into the bedroom and realised that the scarves were still tied to the bed and my bright purple, sparkly, 8 inch vibe was laying in full view on the bed!\n\nWatching Jo drive away the following morning, her car packed with my belongings, was just as painful as me leaving her in Cornwall. We had had a wonderful time together and I was even more determined to make the move as fast as possible -- I just couldn't stand the pain of parting from her after every weekend.\n\nThe next week was a blur. Zoe was very happy with the way the interview went on Monday and arranged for my replacement to start on Wednesday. I had 2 weeks to train her and then I was free!\n\nThe woman who viewed my flat on Friday rang the estate agent and placed an offer. It was a little less than the asking price but not too low, so I accepted as long as we could complete quickly.\n\nI talked to Jo every night and she was pleased with the way the caf\u00e9 / restaurant design had worked out. The launch was the following Saturday and her parents would be attending but as they were used to a little luxury they had opted to stay in a hotel, leaving it clear for me to stay with Jo -- result!\n\nWhen I arrived in Cornwall on Friday evening with another car load of my belongings Jo was running around in headless chicken mode. She had always been so calm, organised and in control that it was hilarious watching her flapping over last minute details for the opening.\n\nDan arrived to help us move all of the tables and furnishings into place and by 9pm we were finished, so we all went to the pub to celebrate.\n\nJo was right -- Dan was a really nice guy and we did have a lot in common. We were both passionate rugby supporters and both rode Honda motorbikes; I found chatting to him so easy that after a while Jo told us off because she was feeling left out of the conversation!\n\nJo was still pretty keyed up about the next day when we got back to her house, so I made her strip and lay on the bed while I gave her a massage. It was sensual rather than sexual and soon enough it had the desired effect and I could hear Jo's breathing change as she relaxed into much needed sleep, so I wiped the excess massage oil from her back, undressed and climbed into bed with her, pulling the duvet up to cover us both.",
        "Jo spent most of the next day cooking the new dishes that she'd added to the caf\u00e9's original menu. She was doing this at home as the chef was using the caf\u00e9 kitchen and the whole house smelled amazing!\n\nShe kept me usefully employed washing and chopping vegetables, loading the dishwasher and walking Buster who was also enamoured by the cooking smells and kept getting under her feet.\n\nBy 3pm all of the preparations were complete and we took everything down to the caf\u00e9 and started setting out trays of champagne glasses ready for the opening later. There was a brief panic as the wine merchant hadn't arrived yet but a short and curt phone call by Jo had him on the doorstep in minutes -- he even threw in some free wine as an apology!\n\nWe just about had time to run home to shower and change and having promised Jo I'd help out by making sure the guests all had something to eat and drink I thought I'd better look the part; I walked downstairs in a tailored dinner suit, complete with cufflinks and dickie bow and when I found Jo in the kitchen feeding Buster she looked up at me and wolf whistled.\n\n'My god you look hot in that!' and she walked around me in a circle, scrutinising me from every angle and straightening my tie, a big smile on her face.\n\n'You don't look so bad yourself!' Jo was wearing a stunning, red, evening dress that reached almost to the floor. Her back was almost completely bare and there was a daring slit up her right thigh that stopped just low enough to make you long for more.\n\nI tried to run my hand up her stocking clad thigh but she slapped my hand away.\n\n'Please don't start anything now Baby or I'll be late for my own launch party!' she laughed as she kissed me noisily on the lips, leaving her lipstick on my mouth.\n\nWe had only just entered the caf\u00e9 when the guests started arriving. She had invited all of the local business people, the local press, the mayor and a smattering of local councillors. There was also a board outside of the caf\u00e9 inviting anyone that passed by to come in for a free glass of champagne and to sample the food on offer.\n\nThe promise of free food and booze had obviously paid off and the space was filling quickly so I didn't actually notice that Jo's parents had arrived until I offered them a fresh glass of champagne from the tray I was carrying.\n\nI had only met them a couple of times and Jo's dad didn't recognise me at all but her Mum did; she laid a hand on my shoulder to stop me as I was about to walk away from them.\n\n'It's Victoria isn't it? Joanna's flatmate from London?' I fucking hated being called Victoria as it wasn't my name! I had been Christened Vicki, so it really pissed me off when people assumed I'd shortened it from Victoria.\n\nBite your tongue girl; this is not the time to annoy Jo's folks!\n\n'Vicki, yes. You're Jo's parents right? We met a couple of times about 3 or 4 years ago.'\n\nI knew exactly when the 2 times we'd met in the past were but I wasn't going to make a big deal of it, especially as Jo's mum was eyeing up my eminently male attire with a pretty unfriendly look in her eye.\n\n'I didn't realise you two were still in contact.' There was a definite tone of dislike in her voice but as she looked down her nose at everyone who didn't earn a six figure salary -- I tried not to take it personally.\n\nI was aware of a presence behind me and turned to see Jo, grateful that she had come to rescue me.\n\n'I bumped into Vicki on the beach a few weeks ago when she was here on holiday and it was lovely to catch up with her again. Now come with me Mother, there's someone I'd like you to meet.' And with that she steered her parents across the room to introduce them to the mayor, who was bound to impress them a whole lot more than I was!\n\nDan tapped a fork against a champagne flute, the crystal ringing out across the room and causing a hush. I looked up at Jo and found she was smiling at me like she knew something I didn't. I smiled back and waited to hear the announcement that Dan was making.\n\n'Ladies, gentlemen and local dignitaries -- please gather outside the front door, it's time to unveil the new signage.' And with that everyone shuffled out through the door and stood looking expectantly at the tarpaulin that was covering the caf\u00e9 name.\n\nJo stood under the sign and announced as they'd been so many changes to the caf\u00e9 it seemed fitting to have a new name as well. She then came to stand directly behind me and I felt her fingers lace through mine, hidden by the crowd of people, as she signalled to Dan to pull the rope.\n\nThe tarpaulin fell away with a swoosh revealing the new name -- JoVial\n\n'Jovial! What lovely name for a caf\u00e9 where you want people to enjoy themselves!' was the general chorus. The only dissenting voice came, of course, from Jo's mum.\n\n'You'll have to get the sign writers back -- they've put a capital V in the middle of the word!' she said with horror in her voice; you'd think someone had died by the look on her snobbish face.\n\n'I know Mother, It's deliberate! It was suggested by the designers as a way of having my name (\"and yours\", she whispered into my ear as she squeezed my hand) as part of the caf\u00e9 name, without changing the word too much. It's artistic Mother!'\n\nFortunately, everyone else seemed to like it so the evil witch (as I'd come to think of Jo's mum) was forced into silence. I on the other hand was astounded that Jo had incorporate me into her caf\u00e9 in this way and I wanted so badly to hug and kiss her so much but now wasn't the time.\n\nWe were swept apart as the crowd moved back inside and I resumed my role as waiter as Jo schmoozed the local hierarchy with promises of how good the new menu was going to be.\n\nAlthough we didn't manage to talk much, all through the evening I felt Jo's eyes burning into me and I often caught her looking at me with so much love in her eyes and more than a little lust. At one point as we passed each other we managed to grab a quick word.\n\n'You need to stop looking at me like that you know or the wicked w...., sorry -- I mean your mum will catch on!' but I was smiling as I said it, I loved the looks she was giving me and the promise they held.\n\n'I know but you look so good in that suit I just want to eat you!'\n\n'Hmmmm later Babe, later.' And with that we were parted again as someone quizzed Jo about her recipe for blueberry cheesecake.\n\nBy about 10pm people had started to drift away and as is often the case with these things, once a few people leave, everyone else takes it as a sign to go.\n\nJo, Dan and I were standing chatting when her parents walked up to announce their departure.\n\n'Joanna darling' crooned the witch 'It's been a lovely evening but your Father and I are tired now so we're going back to the hotel to rest.'\n\nI was silently cheering but I managed to keep my face passive.\n\n'I have to say it's a very nice little caf\u00e9 if you like that sort of thing.' She kissed the air about an inch away from both of Jo's cheeks and moved aside to let her husband say goodbye.\n\nJo's dad obviously wasn't quite as stuffy as her mum. He gave her a genuinely big and hearty hug, holding her tightly as he quietly said his farewells.\n\n'Don't mind your mother Jojo; you know how she can be. I think it's a great little place and I know you'll make a huge success of it but you have to promise me, if things go wrong and you need money you come to me first, ok?'\n\nJo hugged him back and nodded her assent before he was almost forcibly dragged out of the door by her mum.\n\nDan had volunteered to stay and help clear up and he did a fantastic job of ushering the last few stragglers out of the door, tactfully leaving Jo and I alone for the first time in hours while he cleared the outside tables.\n\nWe stood in the middle of the caf\u00e9 amongst the chaos of dirty plates and glasses, wondering where to start first, as Jo wrapped her arms around me from behind and kissed the back of my neck.\n\n'You were fantastic tonight Vicki, you did a damn fine job of making sure no one had an empty glass all night -- I think there may be a few sore heads in the morning.'\n\n'Glad to help Babe, the way you were networking I think you're going to be fully booked for months to come!' and I leaned back against her tall frame, wrapping my arms around hers as they encircled my waist.\n\nShe turned me around and looked into my eyes, the love she felt for me written all over her face, making me feel so cherished.\n\n'You mean we'll be fully booked. Vicki you own a 30% share in this place.'\n\n'Huh?' I stammered in a most unintelligent manner.\n\n'I was trying to find a way to prove to you that I really meant what I said about making this work and never letting you go again, so I've given you a part of my business. I don't expect you to work here, I know it's not really your cup of tea, but it was the only thing of real value that I had to offer you.'\n\nI knew I had tears rolling down my face but I was unable to remove my hands from Jo's waist to wipe them away. I tried to talk but I was so overwhelmed that all that came out was a croak, so I kissed her instead.\n\nIt was a gentle kiss, a loving kiss, a kiss that I hoped would portray all of the emotion that I was finding it impossible to verbalise at that moment, and as Jo wound her fingers into the short hair at my nape and kissed me back, it turned into something truly beautiful.\n\nJo and I had kissed so many times in the past but never, ever like this. It was as if our entire souls were being shared in that one moment, a true bonding of hearts and spirit that left us both speechless for a long moment when we finally parted to breathe.\n\n'Jo, I don't know what to say!' \n\n'Say that you'll stay with me forever. Say that we'll grow old together. Say that even if times get tough we'll always fight through it together as a team. Just say that you love me Vicki.'\n\n'Oh Jo, I'll always be here with you and I will always love you with all my heart and soul. I'm nothing without you, you complete me and together we're invincible!'\n\nWe held each other tightly, clinging onto each other as a drowning man would cling to driftwood, never wanting to let go but eventually Jo pulled back slightly and smiled at me.\n\n'You'll love me with your heart and soul huh?'\n\n'Yep!' I grinned back\n\n'And what about you body, will you love me with that too?'\n\n'Oh yes, especially with my body!'\n\nWe kissed again but it was en entirely different kiss to that of moments ago. That kiss held the promise of a long future spent loving and cherishing each other. This kiss held the promise of extremely hot sex in the very immediate future, our tongues dancing together as our hands started to roam. We were interrupted by the tinkling of the bell above the door as Dan burst into the room, his eyes wide with panic.\n\n'Jo! Your Mum forgot her........' but it was too late.\n\nWe turned to find Jo's parents standing the other side of the plate glass window watching us. Her Dad just looked somewhat bemused but her Mum! My god, if looks really could kill I would have been a pile of ash on the caf\u00e9 floor!\n\nIt was as if time itself stood still as we watched the witch's face turn puce as she fumed. We could see her lips moving but couldn't hear what she was saying -- I think we could probably guess though, as the animosity emanating from her body language spoke volumes.\n\nEventually, Jo moved forward just as her mum shoved the door open and stormed into the room, her husband trailing meekly behind as if unsure of what to do.\n\n'Get out now!' she spat at me 'you too!' as she included Dan in her tirade.\n\nI looked at Jo but she shook her head gently, reaching out for my hand and pulling me into her side. Dan, bless him, came and stood behind both of us, offering an obvious sign of moral support that was very much appreciated.\n\nThe witch grabbed my arm and tried to pull me away from Jo but I shook her off and stood my ground.\n\n'Mother, you can say what you like but there's no reason for Vicki and Dan to leave, I have no secrets from either of them so you can say your piece in front of them, if you have to say anything at all.'\n\n'How could you?' she roared 'what is this, some kind of kinky m\u00e9nage a trios? You were brought up better than this my girl!'\n\nI could feel Jo shaking at my side but her voice was strong, controlled and clear when she answered.\n\n'No Mother. Vicki and I are a couple and she's the love of my life. Thanks to your overbearing and controlling nature I lost her for three years but fate brought us back together; you're not tearing us apart again. Dan is a very good friend who fortunately is a lot less judgemental than you are.'\n\n'You did this!' she hissed at me, her forefinger jabbing into my shoulder as she spoke 'You've turned my daughter against me!'\n\n'No she hasn't Mother. I'm not against you but I won't have you trying to dictate who I am, how I live or who I share my life with. I'm still your daughter. I'm still the same person that I've always been, except that I refuse to lie any more. I'm sorry you found out this way but you had to know at some point. I'm an adult and I'm quite capable of making my own decisions.'\n\n'You stupid bitch! You think you can make a successful business being queer? You're an unnatural aberration, no one will want to know you let alone do business with you!' she was like a cobra spitting venom and Jo recoiled visibly.\n\nI took a step forward but Dan pulled me back, standing in front of Jo and I, his tall frame towering over Jo's mother menacingly.\n\n'Fortunately you're wrong woman. I don't know what archaic era you get your values from but the people around here know and love Jo for who she is and Vicki is a lovely person too. They are very, very much in love and their friends will see this and recognise it for the pure emotion that it is. The only aberration going on here is your outdated opinion that anyone who doesn't conform to your ridiculous standards is in the wrong, when actually it's you that needs to change!'\n\nThe witch was dumfounded. She stood still, her eyes smouldering at Dan but momentarily lost for words, her jaw working but no sound coming out.\n\nI had forgotten all about Jo's Dad until I heard his quiet voice.\n\n'I think we should go back to the hotel, don't you?' and he grasped the witches arm and tried to steer her away.\n\n'I'm not going anywhere until we sought this mess out!'\n\n'What mess?' he actually looked slightly smug at standing up to this dragon of a woman, I suspected he didn't do it very often 'As far as I can see our daughter seems perfectly happy. She has good friends, a wonderful new business and has been reunited with the person she loves; what's to sort out?'\n\nShe spun around to face him, her anger deflected from us briefly. \n\n'You lily livered excuse for a man! For once in your life stand up for something you believe in and make the girl see sense.'\n\n'I am standing up for what I believe in. I believe that every adult has the right to live their life the way they want to as long as they're not harming anyone else. I also believe in Jo's happiness and until you came storming in here like a rogue elephant she looked very happy indeed. Now either come back to the hotel with me now or take the car keys and drive all the way home on your own; either way leave Jo alone and let her enjoy the rest of her night.'\n\nThe witch obviously wasn't used to this treatment and certainly wasn't expecting it from her husband; she looked even more stunned when he elbowed her out of the way and came and stood in front of Jo and I.\n\n'You don't make my life any easier Jojo!' but he was smiling 'I wish you all the luck and happiness in the world my darling.'\n\nAfter giving Jo a huge hug and a big kiss on her cheek he came and stood in front of me, shaking my hand warmly.\n\n'Nice to meet you Vicki, it's just a shame it was under these circumstances. Look after my baby girl for me.' He kissed my cheek and moved to shake Dan's hand.\n\n'You're a good man Dan, look after them both.'\n\nHe then turned to his wife and held out the car keys.\n\n'Do you want these or are you coming to the hotel with me?' and we all stood and watched as the witch stormed out of the caf\u00e9 followed by Jo's dad, who sauntered after her with a wave over his shoulder.\n\nThere was a huge sigh of relief from all three of us as they walked away and Jo sagged against my shoulder.\n\n'Jesus, that was intense! Ladies, I think I'm going to go home and pour myself a large scotch and go to bed; I wish you both a very good night.'\n\nWe both hugged Dan and thanked him for his support and soon enough it was just the two of us once more.\n\n'Oh Babe I'm so sorry that happened and ruined the end of your special evening.' As I held Jo tightly in my arms, her chin resting on my shoulder.\n\n'I'm not, she had to know. It really wouldn't have mattered where, when or how she found out -- the reaction would've been the same. I love my Mum but I don't actually like her very much most of the time, I'm bloody proud of my dad though, I never knew he had it in him!'\n\n'You know this won't be the end of it though; she won't just let this drop.'\n\n'I know Vicki, but at least now it's all out in the open and I don't have to hide anymore. I can deal with the rest when it happens as long as I have your support.'\n\nWe decided to leave the rest of the clearing up until the morning and headed back to Jo's house, ambling up the cobbled streets holding hands in comfortable silence.\n\nExhaustion overtook us almost as soon as we got through the front door, so having let Buster out into the garden we fell into bed, wrapped in each other's arms.\n\nWe kissed deeply, our hands gently caressing each other until lust won out over our tiredness. It wasn't the torrid and carnal tryst we'd anticipated earlier but it was a sweet and gentle coming together, laying facing each other and kissing as we fingered each other slowly and deliciously.\n\nThere was no hurry or urgency, just tender touches as we wrapped our legs around each other and ground our pussies against the fingers that were buried deep inside, rocking together in a mellow unison that was reassuring in it's loving softness.\n\nThe gentle pressure on our clits applied by thumbs or palms bringing us oh so slowly into a state of arousal that seemed so much more intense for the soothing tenderness that brought it about, until finally we lay staring into each others eyes as we came. Not earth shattering, breath defying climaxes but a long, slow, drawn out release that conveyed so much love and happiness that I felt sure that my heart would melt.\n\nWe were back at the caf\u00e9 early the next morning to meet the chef, Dan and a couple of Jo's friends who had volunteered to help clear up from the night before. Fortunately, with several pairs of hands it was all done by late morning and the caf\u00e9 was all ready for its official opening on Monday.\n\nDan was a sweetie, fussing over Jo and I and making sure we were ok after the debacle with Jo's parents the night before. We invited him to lunch with us but he happily told us that he had a date and took off with a spring in his step.\n\nOnce everyone had gone and the dishwashers were finally unloaded, Jo looked into the fridge at all of the leftovers from the launch party.\n\n'It seems a shame for these to go to waste, how about we take them down to the beach and have a picnic?'\n\n'Now that sound like a good plan!'\n\nWe gathered up plastic containers containing all sorts of sweet and savoury goodies and headed home to collect Buster.\n\nThe day was gloriously warm so we changed into shorts and t-shirt and headed off to Jo's favourite little cove, praying it would be deserted.\n\nWe weren't disappointed. Apart from a few gulls the golden sand was empty as we laid out the blankets near some rocks to shelter us from the breeze. Buster insisted that we ran around the beach with him playing ball and Frisbee, which was fine with us. He'd been a bit neglected recently and it was fun to watch the young dog frolicking in the surf but he wore us out after an hour or so and we collapsed back onto the blankets to enjoy the sunshine.",
        "We lay there in silence for a while, just holding hands, until I rolled over to kiss the woman I had every intention of spending the rest of my life with. In fact I'd decided that I would propose to her, but not until I'd moved to Cornwall full time and we'd been living with each other again for a while.\n\nJo squinted up into my face against the sunshine and giggled.\n\n'I know that look Vicki!' \n\nOf course I tried to feign innocence, but she knew me far to well.\n\n'We're on a beach, it's a public place!'\n\n'Yeah but it's not very public right now is it? We're the only people here and I'm sure that Buster will let us know if anyone comes to disturb us.'\n\n'Yeah, but even so.' Her argument was weak and I knew I had her attention because her body language gave her away. Her voice may have been saying 'no' but her eyes shone with lust and she had unconsciously wrapped one of her long legs over mine, holding me tightly against her body.\n\n'So you'd object if I was to touch you like this?' and I palmed one of her boobs, trapping her nipple between 2 fingers and squeezing gently. She wasn't wearing a bra and I could feel the nipple harden instantly as I manipulated it through the flimsy material of her top.\n\nShe closed her eyes as she pushed her chest against my hand, inviting me to carry on.\n\n'Or maybe if I was to kiss you like this?' and I nibbled her neck from behind her ear, down underneath her jaw line and across the little bit of soft shoulder skin that was exposed by the loose neck of her t-shirt; all the while manipulating her tit with my hand as the nipple betrayed her excitement even further.\n\n'Oh stop it, stop it.' She moaned playfully whilst holding my head against her neck to make sure I carried on.\n\n'and what if I was to do this -- would that be too awful?' as I slid my free hand up her bare thigh and under the hem of her shorts, grazing her slit with my finger tips and applying just enough pressure to her clit to leave her wanting more.\n\n'You are so brazen woman!' and she grabbed my face and mashed her lips against mine in a bruising kiss, her hips arching up against my hand, the damp material of her panties telling me just how much she wanted me to continue.\n\nI broke the kiss long enough to make sure we really were alone, pulling Jo up into a sitting position and stripping her top over her head before she had a chance to change her mind. She lay back down on the blanket as I removed my own top and bra before laying my body on top of hers, both moaning as our sun-warmed skin melded together as we resumed kissing, our tongues and lips performing a perfectly harmonious duet that fuelled the rapidly building fire.\n\nI slipped my hands between us and popped the button on her shorts but I had to sit up to pull them off her, gazing into her lovely face just to make sure that she really was ok with this. 3 years ago Jo would never have allowed herself to be naked in a public place but now? -- she just smiled at me and lifted her hips to make life easier for me, so I stripped off her shorts and panties, quickly followed by my own, once again glancing around to make sure our solitude was complete.\n\nShe wound those long legs around my thighs as I lay back down on top of her, our pussies and breasts connecting in a sublime way that sent little sparks coursing through my body as we moved together as one, our juices mingling as we pushed against each other and our kisses turning sloppy as our breathing became more ragged.\n\nI had to taste her. She whimpered slightly at the loss of contact as I moved but they soon turned to moans as I took one of her nipples into my mouth on my journey south, slipping 2 fingers into her sopping snatch to keep her on edge.\n\nI lavished attention on both of her small, hard, tight nipples but not for too long; there were other places I was neglecting and I rapidly kissed my way down her torso until I was settled comfortably between her thighs.\n\nI removed my fingers and took long licks with my broad, flat tongue; up and down her full lips, sucking them into my mouth and delighting in the taste of Jo's essence, before stiffening the hot, wet muscle and inserting it as far as it would go into Jo's gloriously wet pussy.\n\nHer hips arched as my tongue invaded her and the unintelligible mutterings that were issuing forth from her mouth were music to my ears, so I slipped my fingers back into her and fastened my lips around her swollen clit, sucking on it gently while lashing it with my tongue.\n\nI thought Jo was going to kill me when I stopped and stood up, stepping over to the bag I had discarded earlier on the sand and she gave me a 'look' that her Mother would've been proud of!\n\nHer own hand strayed to her clit as she glared at me, although the look on her face changed immediately when she saw the double ended dildo that I retrieved from the bag. She watched me intently as I inserted my portion into my aching pussy and she could barely contain her laughter as I walked toward her with the bright blue phallus jutting proudly from my groin.\n\nI knelt down between her thighs again and teasingly ran the head of the dildo up and down her slit, removing her hand from her clit and replacing it with my own, massaging gently as I teased her.\n\n'Oh Fuck Vicki please!'\n\n'You want this huh?'\n\nThe growl that was her answer, coupled with the fire in her eyes was enough for me and I drove the dildo into her in one movement until the whole thing had disappeared and I had a delicious pressure against my own clit.\n\nI lay over Jo, supporting my weight on my arms as I started to thrust gently but deeply, her hips rising to meet my thrusts as she moaned and panted beneath me.\n\nJo croaked 'Harder' and I upped the tempo, slamming my hips against hers and driving the toy deeper and deeper, rotating my hips slightly to change the angle and loving the screams it provoked as I hit Jo's sweet spot, over and over again.\n\nThe stimulation of my own pussy and clit was driving me to fever pitch and watching the woman I adored thrashing around beneath me almost made it too hard to contain my own imminent orgasm.\n\nI kissed her fiercely as her nails dug into my arse cheeks and her legs locked around my thighs and with just a few more thrusts we were there. I felt her stiffen beneath me and she screamed into my mouth as it hit her. I let go too and we pushed against each other, wringing the last scrap of joy from each other as we were swept away on a tidal wave of carnal bliss.\n\nWe lay wrapped up in each other's arms and legs; a sweaty, heaving mass of sated woman, our heart beats gradually descending to a safe level as we caught our breath.\n\nI Gradually eased out of Jo and removed the toy, tossing it onto the sand where it was instantly covered in fine, golden sand as it adhered to our combined wonderful stickiness.\n\nI looked down at Jo, her hair tousled and sweaty, her face a mask of serene pleasure, her body limp and replete and I swear that in that moment I loved her more than I ever loved her before, more than I thought it was possible to love another.\n\nAs she opened her eyes and smiled at me sleepily I leaned down and kissed her gently, lovingly, tenderly.\n\n'Hey You'\n\n'Hey You'\n\n'I suppose we should get dressed but hold me once more first.' So I wrapped my arms around her and crushed her against my chest, holding her as tightly as I could, safe in the knowledge that there was nowhere either of us would rather be and no one we would rather be with.\n\nWe did get dressed and eat our picnic eventually and as the afternoon waned we walked back up the rocky steps to the car, turning back at the top to look over the beach, watching the sun dancing on the waves as the tide rolled in.\n\nJo turned to me and took me in her arms, sighing contentedly as she laid her head on my shoulder.\n\n'We're going to be ok this time aren't we?'\n\n'Yes my love, I really think we are.'\n\n---------------------------------------------------------\n\nEpilogue: \n\nOver the next couple of months, as Spring turned to Summer, life for Jo and I was busy but almost idyllic. Thanks to Jo's dedication, skill and some very clever marketing, the caf\u00e9 / restaurant took off in a big way and proved to be even more successful than even Jo had envisaged, with her being asked to cater for several external events, including 2 wedding receptions, a christening and several birthday parties.\n\nOther than a couple of very acerbic emails, we didn't hear from Jo's mother at all, but she had frequent texts and emails from her dad, all of which were supportive and full of love and allowed Jo to cope with the vitriol from her mother.\n\nMy flat sale completed amazingly smoothly and the woman even bought some of the furniture I needed to get rid of, so after a very tearful farewell party, I said bon voyage to my job, friends and life in London and settled into Cornwall.\n\nI didn't have a job but I was financially secure due to the profit I'd made on my flat and besides, Jo was keeping me very busy with all the extra work generated by the caf\u00e9 being so successful; I even found that I enjoyed it as long as she didn't try to get me involved in the cooking! We had also decided to buy the cottage Jo was currently renting once her lease was up and in celebration of this decision we set about 'christening' every room in the house where we hadn't already made love. Yep -- life was good!\n\nThe date that Dan went on the day after what has become colloquially known as 'Parentgate' was apparently a huge success and after just a couple of short months he and Libby were seriously thinking about moving in together as they spent all of there time in each other's company anyway. Jo and I were secretly hoping for wedding bells in the near future; we both loved Libby to bits and were extremely pleased to see Dan happy and settled; especially after the way he had accepted me so magnanimously and supported us so whole heartedly. \n\nWhen Libby's birthday was coming up, Dan decided he wanted to throw a surprise party for her, so Jo and I immediately offered to help with the food and drinks. It was going to be a fairly intimate affair with a group of about 25 close family and friends and Dan wanted to make it as romantic as possible, so it was decided that we'd hold it on the little beach that Jo and I had come to think of as our 'special' place.\n\nWe arranged to meet Dan there late one afternoon so that we could decide where to place the gazebos, bar, bbqs, and seating, so Jo and I went down there a bit early to take Buster for a walk and play Frisbee.\n\nWe arrived in bright sunshine but almost as soon as we descended the steps to the beach the weather started to turn. The wind started to gust and we could see big, black clouds rolling in across the sea at an alarming rate, making the sea wild in it's path.\n\nJo threw the Frisbee for Buster and the wind took it. It flew off into the distance and over some rocks, heedlessly followed by the young dog who disappeared over the outcrop of rocks in chase. We waited for a few moments, expecting to see him bounding back with the Frisbee proudly held in his mouth but after a couple of minutes Jo turned to me, the worry obvious on her face.\n\n'I'm going to go and get him' and she trotted off in search of the errant hound.\n\nI followed along at a leisurely pace until I heard a shout from Jo, at which point I sprinted across the sand and scrambled up the rocks. Jo was standing on a small outcrop frantically gesturing toward Buster who was desperately trying to climb out of the sea, the bloody Frisbee in his mouth not helping his efforts as the waves repeatedly crashed him against the rocks before carrying him away again.\n\nI was closest and I managed to climb down so that I was up to my thighs in the churning waves, clinging onto a rock for dear life to stop me joining the dog in the roiling water. It took a few attempts but eventually I judged it right and as Buster was thrown toward me I managed to grasp his collar and haul the exhausted dog to safety, scrambling up the rocks behind him.\n\nI turned back to make sure Jo had seen that Buster was ok just as an enormous wave swept her off the rocks and into the angry sea below.\n\nI stood stock still for a moment, seemingly unable to process what I had just seen. One minute she was there and the next she was just gone! I wanted to be sick but somehow without conscious thought I was once again scrambling over the slippery, jagged rocks to where she had been standing.\n\nI stared into the waves, their crests getting whiter as the storm got closer, the water now dappled with big fat rain drops which made it almost impossible to see through the surface. I knew she had to be there but I couldn't see her. I also knew that Jo was a decent swimmer so why wasn't she surfacing, where the hell was she? Fuck! And then I saw something. A barely discernable white shape that seemed to be rolling under the waves.\n\nI tried to dial 999 but my phone had got soaked when I rescued Buster and wasn't working, so I stripped off my now wet and heavy clothes and jumped into the sea, not daring to dive as I couldn't be sure if there were rocks below.\n\nI swam the few feet to where I thought I'd seen Jo and dived under the waves, the salt stinging my eyes as I wheeled around under the water trying to catch a glimpse of her. The current was fierce and it was almost impossible to maintain any deliberate direction. Again and again I surfaced for huge gulps of air before descending again. I was tiring fast as I fought the current that was tossing me around like a washing machine, crashing me against the rocks; it was only the raw power of adrenaline and fear that kept me going.\n\nI was almost at my limit and decided to try once more before trying to get help when I saw her, just under the surface a few feet away; she didn't seem to be conscious and she was sinking. I forced my arms and legs to work until I reached her, managing to get my arms under her shoulders and kicking hard for the surface, my lungs burning and stars bursting in front of my eyes as my need to breathe forced me into one last furious burst of effort.\n\nWe broke into the air and I filled my lungs with air and water as the rain and spray hit my upturned face. Coughing hard I rolled Jo onto her back, desperately looking for signs of life but I was fairly sure she wasn't breathing. I tried to remember my lifesaving training from when I was a child but it eluded me so I bobbed on my back in the water, holding Jo on her back against my chest to keep her face out of the water, trying to squeeze her chest with my arms to force air into her lungs but it wasn't working.\n\nI had lost her.\n\nI stared disconsolately at the outcrop of rocks, knowing that even if I wasn't tired out, in shock, and numb from the cold water -- there wasn't a chance in hell I could drag Jo's limp frame up the steep and slippery surface. I also knew I didn't have the strength to fight the waves and current to swim out around the rocks and then back into the beach -- it was all I could do just to keep us both afloat and stop us being dashed against the rocks.\n\nI cried, I screamed, I railed against the world for being so unfair. I sobbed as I apologised to Jo over and over again for not being able to save her and at that point, the lowest moment in my life so far, I vowed to uphold my promise never to leave her. \n\nI became quite calm, almost peaceful, as I resigned myself to dying here with my beloved. At least we would be together, at least it had all ended when we were happy.\n\nI don't know how long we floated there being tossed around by the surf but I could feel my eyes closing and with Jo's weight above my chest I was struggling to hold my head above the water, regularly swallowing mouthfuls of salt water as the waves crashed over us. My arms and legs were heavy and unresponsive but I clung to Jo with everything I had left. I thought I heard Buster barking. I also imagined that I heard Dan's voice. I remember vaguely thinking that at least Dan would look after the dog. Then it went black.\n\n-----------------------------------------------------------\n\nI knew I was alive because I hurt. Everywhere. All at once.\n\nI managed to open my eyes and then shut them again immediately, the harsh glare too painful to bear. My other senses started to kick in and I could smell disinfectant and hear a low murmur of voices and the rhythmic beep of a machine.\n\nI opened my eyes again, squinting against the light and immediately there was a flurry of activity around me as I was surrounded by people, some in uniform.\n\n'She's conscious, call the doctor now!'\n\nI looked up to find Jo's dad staring down at me with such concern in his eyes that it broke my heart. How could he afford me this emotion when I had failed his daughter so badly? When I had lived and she had not.\n\nI tried to speak but nothing came out. He moved to the side slightly and I could see Jo's mum stood just behind him, tears and grief contorting her usually staid expression.\n\n'I'm so sorry' I finally managed to croak 'I tried to save her, I really did' and then the world went blurry as my eyes filled with tears that I was too weak to wipe away.\n\nJo's dad wiped them away for me and I was momentarily bewildered by his expression -- he was smiling!\n\n'Vicki honey, you did save her. You nearly died in the process but you saved my baby's life, you're a bloody hero girl!'\n\n'Huh?' was all I could manage. I couldn't even begin to process this information. My heart was broken; I was grieving for my love. She was alive?\n\nA doctor came along and ushered everyone else out of the room. She examined me and allowed me to drink some water, explaining that my sore throat was probably due to the tube that had been inserted into my throat to keep me breathing.\n\nShe explained that I had a fractured arm, a couple of busted ribs and had sustained some pretty bad cuts and bruising from connecting with the rocks but I was going to be ok; I just needed time to rest and heal.\n\nI wasn't really listening. I didn't really care.\n\n'Jo?' I croaked\n\n'Your friend is going to be fine thanks to you, in fact ironically she sustained less damage than you did.'\n\nI tried to sit up, I had to find her; I had to see her with my own eyes before I could allow myself to believe she was alive let alone ok.\n\nThe doctor easily pushed me back down into the bed and I felt a sharp sting in my arm. Within seconds I was woozy and then the drugs took effect and I was gone.\n\nThe next time I came around it was dark outside and I thought I was on my own until I moved my head and saw Jo's mum sat reading in a chair across the room. She seemed to sense me looking at her and lifted her head, jumping up out of her seat and crossing the room to the bed as soon as she realised I was awake.\n\nShe brought a beaker of water to my lips and helped me drink a little, admonishing me not to gulp too greedily, before setting it down again and sitting on the edge of the bed.\n\nI didn't know what to say or how to react; my last encounter with this woman hadn't exactly gone too well. I was groggy but the morphine was doing its job and I was relatively pain free, if a little high. I glanced down at the cast on my arm and groaned.\n\n'Guess it had to be my right arm huh?' I was useless with my left arm.\n\n'Don't worry Vicki; they'll be plenty of people around to lend a hand. In fact the local press have been hanging around trying to get a glimpse of the fearless woman who jumped into the sea in a storm to save the woman she loves. You've become quite a celebrity in the last few days.'\n\n'Few days?' I asked incredulously\n\n'You were out cold for nearly 3 days; it was touch and go there for a while.'\n\nIt suddenly hit me that she had acknowledged my love for Jo and wasn't taking a swing at me; she didn't even sound pissed off.",
        "'Is Jo really ok?' and those tears sprang into my eyes again.\n\n'Yes Vicki, she's going to be fine. She's sleeping now but we've had to battle with her for the last 2 days to stop her coming in here and trying to wake you. She's very worried about you and she won't believe you're ok until she sees it for herself.'\n\n'What happened?'\n\n'When Dan arrived at the beach he couldn't find you but he heard Buster barking. He saw you trying to stay afloat with Jo and he called the RNLI who were there in a few minutes with a boat. They only just got there in time; you'd just lost the battle and were slipping under the water.'\n\n'I thought she was dead.' And now the tears came in earnest as I remembered my heartbreak at losing the woman I loved so cruelly.\n\n'She was breathing but it was very shallow; she had a lot of water in her lungs, as did you. I'm so sorry Vicki; I misjudged you for no good reason. I nearly lost my daughter and you saved her for me, for us all, but you know what -- I nearly lost her anyway just because I was too pig headed to allow her to do her own thing. Ironic really, all the time I wanted her to stay with Dan but if she'd been with him rather than with you she would've drowned -- he can't swim!'\n\nShe was grinning at me! I almost laughed but it hurt my ribs too much.\n\n'I need to see her.'\n\n'I know, and you will tomorrow I promise; right now you need to rest.'\n\nShe was right and within minutes I was once again oblivious to the world -- morphine is goods like that.\n\nI was woken the next morning by a nurse bustling around me, changing my drip and checking my vitals; it's hard to sleep through the expanding of a blood pressure cuff and a thermometer being stuck in your ear.\n\nI was clearer headed today and far more determined.\n\n'I need to see Jo and I need to see her now.'\n\n'Oooh someone's feeling better today!' smiled the nurse. 'She's clamouring to see you too so just sit tight for a minute and I'll see what I can do.'\n\nI'm sure it was only a few minutes but it seemed like an eternity before the room to my door opened again and in walked Jo! She looked pale and was walking stiffly but my god she was the most gorgeous sight I had ever seen in my life.\n\nShe stopped just inside the door, looking at my battered form with an expression of pain and concern, but then she was moving again and in a few short steps she was by my side, her lips were on mine and our tears flowed together in an unrestrained outpouring of joy and relief.\n\nI clutched her to me with my good arm, her solid form reassuring me that it was real, she was here and she was ok.\n\n'Oh Jo I thought I'd lost you!' I sobbed, choking the words out as her kisses peppered my face.\n\n'Vicki you saved my life Babe, how can I ever thank you?'\n\n'I'm sure I'll think of something' I grinned at her 'but for now, just take me home Jo, take me home.' "
    ],
    "authorname": "LiveCat",
    "tags": [
        "lesbian drama",
        "lesbian romance",
        "fingers",
        "dildo",
        "beach",
        "drama"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/lost-and-found-ch-02-4"
}