{
    "title": "The Mountain Ch. 09",
    "pages": [
        "This is chapter nine of a longer series last updated in (so embarrassing) 2018. You'll probably want to read the whole thing if you read it at all.\n\n---\n\nWhen Warder's knot finally ceased inside of her, she lifted herself up, bracing her hands against his chest. He watched her.\n\n\"You didn't have to tear my dress.\"\n\nWarder raised one eyebrow and cast his gaze to the scraps of sodden fabric scattered around them. Then, without comment, he felt for the jacket she had left on the beach--his jacket--and wrapped it around her before dragging her back down to his chest. He smelled of salt and heat and the same spicy, male scent that clung to the leather jacket. It was unbearably intimate to be held close against his chest, skin to skin. She was more aware of him now than she had been even when they were having sex, or, at least, she was more lucid.\n\nShe struggled away from him again and this time, he let her go. She collapsed on the beach an arm's length away, staring out at the gray nighttime sea. \"What happened to the islanders inside the mountain?\"\n\n\"You ran away.\"\n\nShe wanted to ask him about the tunnel collapse, but she was afraid to direct his attention to Sheera. \"Is Persephone...when she came after me, the tunnel collapsed. She was trapped.\"\n\n\"Persephone is injured, but alive.\"\n\nLucy felt the slightest bit of tension leave her body. If Persephone had survived...\n\n\"Your friend is alive,\" said Warder. \"Do not try to obscure the direction of your thoughts.\"\n\n\"You are stronger than me, so you can command my body. But you cannot control my thoughts.\"\n\nWarder turned his head. He looked deceptively relaxed, still lying on the rocky beach, his skin beaded with water. \"Mates have no secrets from each other.\"\n\nLucy actually laughed. \"You have all kinds of secrets. What happened to the islanders? What about Hadren and Ysabel?\"\n\nWhy can I suddenly summon light from nothing?\n\nWarder sat up, his movements unhurried. \"As I said, we will discuss it.\"\n\n\"I really dislike your dictatorial attitude.\"\n\n\"Do you?\" asked Warder with mild interest. \"It seems to appeal to you when we lie together.\"\n\n\"What?\" Lucy managed, her voice an embarrassed squeak.\n\nWarder leaned over, using one large hand to cup the side of her face. \"You respond to me, not only as my mate, but as an omega who is naturally inclined to appreciate the strength and confidence of an Alpha.\"\n\nLucy blinked up at him, squirming with embarrassment. \"You're crazy.\"\n\nWarder watched her a moment longer before he stood, brushing sand from his skin. She wouldn't have thought that she could continue to find his body so intimidating after he had just been inside her. But as he stretched his huge, powerful arms over his head and began to dress, she hugged her knees more tightly, feeling small and vulnerable next to his massive form. He lifted her to her feet and cast an eye around the beach.\n\n\"Where are your shoes?\"\n\nLucy smiled wryly and pointed a finger over her shoulder, indicating the general direction of the mountain. \"I wasn't wearing any when I left.\"\n\nWarder gave a short growl of disapproval before scooping her up into his arms.\n\n\"I can walk without shoes!\" Lucy protested.\n\nWarder ignored her.\n\n#\n\nAt the top of the path, Lucy could see Cenia waiting at the entrance of the cave. She was leaning one shoulder against the rock, watching the night sky with a pensive look on her face. When she felt Warder's presence, her gaze shifted and she stood at attention, acknowledging the presence of her commander.\n\n\"Report,\" said Warder.\n\n\"All is well, Sir,\"\n\nWarder ducked as he walked past her, setting Lucy on her feet next to what turned out to be a pile of blankets. Aware of her general state of undress, Lucy snatched one of them and wrapped it around herself. Warder took advantage, wrapping his arms around hers where they were trapped under the blanket. His heat seeped into her skin and she resisted the urge to lean into him.\n\n\"Cenia?\" Warder said, his voice vibrating through Lucy's body where they touched.\n\n\"Yes, Sir?\" Cenia came into the cave.\n\n\"When I leave you with instructions to watch over my mate, I expect you to do so.\"\n\n\"I told her to leave me,\" said Lucy, trying to turn in his arms to look at his face. \"And I wasn't trying to drown.\"\n\nWarder and Cenia both ignored her.\n\n\"Yes, Sir,\" said Cenia, her musical voice subdued, her head bowed.\n\n\"Go outside and keep watch.\"\n\nCenia obeyed, leaving them alone in the dark cave. As Lucy's eyes adjusted, she realized that the blankets were not the only new item in the space. There were several large bags that had not been there before. Warder pushed her towards one of them. \"There are clothes for you in that bag.\"\n\nLucy stumbled in the direction indicated, kneeling and sifting through the bag. The clothes had the smell of the mountain--damp and dust. But they were clean and warm. She uncovered another pair of fleecy leggings and a heavy cotton sweater. She started to pull them on, trying to keep the blanket around her. Soon, she was tangled up in the blanket. With a frustrated sigh, she let it fall, hurrying into the clothes.\n\nShe checked the bag again and was grateful to find socks and boots. She sat and pulled those on as well. No need to give him a reason to carry her around.\n\n\"It is time to discuss what happened,\" said Warder as she finished tying the shoes.\n\n\"It is decreed,\" said Lucy.\n\nWarder didn't seem to realize that she was making a weak joke. \"Things have changed, mate.\"\n\n\"The islanders shouldn't have attacked. It is my fault. They did it on my behalf.\"\n\n\"Reminding me of the ways in which they have implicated you is not the right way to manage my anger.\" His voice belied his words. He didn't sound angry at all. He sounded almost disinterested.\n\n\"It's difficult to keep up with what's making you displeased at any given moment,\" said Lucy, faintly aware that she shouldn't try to provoke his temper. The way he could be so calm and unmoved at every moment while making decisions that affected her life made her incautious. \"Are the rebels alive?\"\n\nCenia had told her that they were, but she needed to hear it from Warder.\n\n\"They live,\" said Warder. \"A few died in battle. An honorable death.\"\n\nLucy doubted that would matter to their families. \"Are you going to let them go?\"\n\n\"Do you not want to know what became of your attacker? Of Ysabel?\"\n\nLucy looked down at her boots. \"I killed her.\"\n\n\"You wounded her, but you did not kill her,\" said Warder. \"You could have, but I suspect you did not truly desire to do so, despite your anger.\"\n\n\"Ysabel is alive?\" Lucy's heart careened crazily in her chest. A weight lifted at the thought that she had not killed the vulnerable woman. Because despite her power, she was undoubtedly vulnerable. But fear swept in to weigh her down. Cruel, empty blue eyes and long, tangled hair and the terror of that power directed at her. Power that might lurk inside her own body, too.\n\n\"Ysabel is alive,\" Warder repeated. \"However, she is not likely to be alive for long.\"\n\n\"Isn't she receiving medical care?\"\n\n\"She is not responding.\"\n\n\"So I did kill her. If it weren't for what I did--\"\n\n\"Did you have any control?\" asked Warder. \"It was instinct.\"\n\n\"I never had the instinct of a killer before.\" Lucy knew that what she had done had come from fear for Warder's life. She thought he knew, too, but she chose not to enlighten him further. Of course she did not want him dead. She did not want Ysabel dead. She did not want anyone dead, but neither did she want to be tied to this warrior and these people who created situations that invited that kind of danger.\n\n\"You never had the opportunity to realize it, perhaps.\"\n\n\"You think I am a killer?\"\n\nWarder ignored the question. \"Grace convinced Ysabel that you were a threat.\"\n\n\"Grace wanted her to kill me?\" she asked. \"Why?\" It was getting cold in the cave, even now that she was dressed. Lucy hugged herself and Warder, noticing, pointed to the blanket folded next to him. Lucy shook her head. Undeterred, Warder sat up, reaching out to grab her arm, and pulled her down next to him. Lucy angled herself away from him, tugging the blanket around her. Their silent battle ended, she looked at Warder expectantly.\n\n\"We were lovers,\" said Warder. \"She blamed you for the loss of my attentions.\"\n\nLucy stared at him, the confession about Grace rattling her more deeply than she could tolerate. \"She can have your attentions,\" she said after a while. \"I won't fight her.\"\n\nWarder growled low in his throat. \"If you continue to wound my Alpha pride, there may be little of me left for either of you.\"\n\n\"Are you--was that a joke?\"\n\n\"Hardly,\" said Warder, but in the dim light, she thought she saw the faintest ghost of a smile. Lucy hated the way it made her heart flutter.\n\nShe lowered her gaze, working hard to tune him out and think through what she had learned. She would not let Warder know that his revelation about Grace had rattled her. She did not want him. She should not care. \"Why would Ysabel believe Grace and worry that I would be so powerful? I had never shown any hint of power until she attacked me. It doesn't make any sense.\"\n\n\"Ysabel's mind has not been right for some time,\" said Warder. \"However, the two of you share a trait that made it easier for Grace to manipulate her thinking on the matter.\"\n\nLucy waited, expecting Warder to enlighten her as to what she and Ysabel could possibly have in common. \"What trait?\" she asked, prompting him.\n\n\"You were both born human,\" said Warder.\n\n#\n\nHis anger at finding Lucy struggling in the water had been matched only by the satisfaction he felt at mating her once more. When he had come to her, he had been aware of his failure to protect her. That had been forgotten in his terror and rage. Now, it came flooding back. Not a wild emotion--that was indulgence. Rather, a clear certainty.\n\nIt was an Alpha's duty to gather and process information. To make decisions, sometimes profoundly difficult decisions. To set aside emotion to fully understand those, like omegas, who were ruled by it. He had not realized the depth of Grace's jealousy, of Ysabel's brokenness. He had allowed the island to become unsafe, not only for his mate, but for every soul within its borders.\n\n\"I would know if Ysabel was an islander,\" said Lucy, breaking into his thoughts. \"I know everyone on the island.\"\n\n\"I did not say she was an islander,\" said Warder. \"She is human, but she came from the mainland when the rest of us did.\"\n\n\"Why? I mean, for Hadren,\" his mate said, trying to make sense of what she knew. \"But why would he come?\"\n\nThere was much he would not tell her, even now. Not the real reason he had come to this island or the danger of what was to come. \"Hadren and I were seeking a place where our people could live peaceably among humans,\" he said, giving her a half-truth to satisfy her curiosity. \"Your island was that place.\"\n\n\"I guess it's a little late now,\" said Lucy, \"but you could have blended a bit better somewhere else.\" She laughed, but it sounded bitter. \"New York City, maybe. Or L.A. Or...Utah. I wish you had asked me before you went to all the trouble of coming here.\"\n\n\"This is irrelevant,\" he said, letting the Alpha growl flow under his words. \"We are here.\"\n\nThe island was supposed to be safe. Before he had taken Lucy as his mate, he had believed it still was. He had kept himself distant and failed to see the rebellion coming, from Grace or from the islanders. If Lucy had not been the catalyst, something else would have been. He had been like a man asleep, wrapped up in his past. He had indulged himself, keeping apart. Even when he took Lucy for his mate he had been blind to the full consequences.\n\nHe was awake now. He would face what was coming. And the next step required him to do something that went against every Alpha instinct he felt in his mate's presence.\n\n\"Lucy.\" He said her name to get her attention, as if she were the one who had been lost in her own thoughts. She tipped her face up to him in the dark and he resisted the urge to kiss her, distract her from what needed to be said. \"We are going back to the mountain.\"\n\nHer reaction was intense. \"No! Please. Please, I'll suffocate in there.\" She placed her small hands on his chest. Instinct. Touch meant to soothe him, whether she realized it or not, as she begged her mate for his favor.\n\n\"Not you,\" said Warder, placing his hands over hers so she could not pull away until he was prepared. \"Cenia and myself.\"\n\nTo survive the loss of Ysabel and Hadren required a truce with the islanders. If the price was being away from his mate, he would pay it.\n\n#\n\n\"What?\" Lucy felt her stomach drop, as if she were leaping from a very high height. She faced him, searching for the lie in his features.\n\n\"Where--where am I going?\"\n\n\"Back to the town,\" said Warder.\n\nThe town where she had nearly been attacked. For so long, she had been fighting him, this man who had claimed her. He had teased her, fucked her, reminded her of the inevitability of their bond. Now, he was dismissing her.\n\nShe let the words come slowly, desperate to control whatever emotion was clutching at the back of her throat. \"You're letting me go.\"\n\n\"You will be safe,\" said Warder. \"I am sending the surviving islanders with you and the delayed offerings of supplies.\"\n\n\"Good,\" said Lucy. \"Where are they? Do we go now?'\n\nPractical questions, because she would die before she asked what she truly wanted to know.\n\nShe had been railing against Warder's dominance for so many weeks, she had failed to consider what it would mean if he did not want her any longer. If he cast her aside. Suddenly, the things she felt for him had come crashing through her defenses. Desire. Need. She wanted to ask him what had changed, if it was Ysabel or the rebels or something else. Something about her that had made it easier for him to cast her aside.\n\nWarder was doing her a favor. Sending her away before she lost her mind completely and convinced herself that she wanted to be tied to him. The raid must have made him realize how inconvenient it was to have her for a mate. How dangerous. She had been indulging herself by wondering amidst her fear and turmoil if she could come to care for this strange warrior who had tried to claim her.\n\nShe had been a fool.\n\n\"You will go at daybreak when it will be easier for the group to travel,\" he said.\n\n\"I guess that's soon enough.\"\n\nOn the beach, he had called her his mate. He had threatened her for risking her body because it belonged to him. He had thrust himself inside of her with the intent to mark, to claim. He did not care for her. It had been nothing but pride.\n\n\"In a few days, I will lead a delegation to town to discuss a new treaty. You will encourage your people to come to the table in good faith. And it is important that you keep some distance from our delegation to encourage their trust. It would not be prudent to remind them of our connection.\"\n\n\"Of course.\" She had a role to play if she could make the other islanders trust her again. \"I'll keep my distance.\" The words felt hollow, a weak performance. She could not allow him to see how he had affected her. This was what she had wanted. What she wanted still.\n\nWarder looked away. \"Good.\"\n\n#\n\nHer parents cried. The other islanders had mixed reactions. Some avoided her. Some expressed joy that she was alive. There were no signs of outright anger like there had been the day she went to see Ioanni. She had noticed Lori Crisp among the crowd, her son returned to her side. His face was bruised and bloodied, but he was alive.\n\nAll that time inside the mountain, wishing she could be home, and now she wanted to be almost anywhere else.\n\nNot inside the mountain with Warder. Of course, she didn't want that. Or, she didn't want to want it. She wanted to go back to before he had changed her. She remembered what it felt like, so recently, to have been drowning. She wondered if she was, still.\n\nInside the mountain, Lucy had thought of little else but coming home. That, and the wilder, secret desire that she might come home to a place that was changed. With the antenna, their captivity might finally end. The town no longer felt like the sanctuary she had imagined it to be. She had seen the desperation lying close under the surface. As for the antenna, Ioanni claimed that it would work when the dense fog covering the island had cleared a bit. The placement of the antenna on the mountain had been necessitated by the strange mist that always hung just offshore. If Warder was to be believed, that mist was maintained by Ysabel. Perhaps it would fade if she died. The fog covering the island now climbed halfway up the mountain. The weather was not unusual for the end of summer, but Lucy still took it personally. As if the island itself wished to cling to its inhabitants. As if the land under her feet was on the warriors' side.\n\nBack in her own bed, she found she could not sleep. She wanted to be free of Warder. Of course she did. But she did not feel free. She felt as if she had lost a limb, off balance and numb. She couldn't stand to be in her bed alone. For the second night in a row, she found herself on the large rocking chair front porch, gently moving the porch swing back and forth with one foot as she stared into the persistent fog.\n\n\"You're a fool,\" she said, trying to banish thoughts of Warder.\n\n\"I agree.\"\n\nThe familiar voice seemed to float on the fog. A moment later, it's owner strode into view, stepping lightly onto the other end of the porch.\n\n\"Persephone?\"\n\n\"Who else?\" She made a gesture as if to brush her long red hair over her shoulder and stopped short due to the fact that her arm was in a cast.\n\n\"What are you doing here?\"\n\nPerspehone rolled her eyes. \"Guarding you,\" she said. Then, she looked over her shoulder into the fog. \"Well, guarding your guard.\"\n\n\"What?\"\n\n\"One of Warder's Alphas is on duty tonight. A man. He won't let an unmated male guard you without supervision.\"\n\nLucy looked in the direction Perspehone had indicated for some sign of life. She didn't see anything, but Warder managed to move silently, so she imagined his Alpha soldiers could as well. \"And you just couldn't help stopping by to say hello?\"\n\n\"I won't apologize again.\"\n\n\"I didn't ask you to.\"\n\n\"I wanted to know what you're doing outside. If you're planning to try to drown yourself again--\"\n\n\"Warder told you that?\" Lucy felt a sharp stab of betrayal. Not only because Warder had shared something about her with Persephone, but also because he had not believed her when she said she wasn't trying to hurt herself that night on the beach.\n\nMaybe that was why...\n\nPersephone shrugged. \"We are always briefed before we go on a mission. Right now, the mission is to keep you from killing yourself. Either intentionally or through utter stupidity.\"\n\n\"Ah. So you did miss me.\"\n\n\"What?\" asked Persephone, wrinkling her brow. Warder and his people struggled with sarcasm.\n\n\"Nothing.\"\n\n\"He always protects his people,\" said Persephone. \"It's what an Alpha does and Warder is the strongest Alpha I know. And, of course, when it comes to you, he has to think of his own safety. Even if he won't admit it.\"\n\n\"What do you mean?\"\n\nPersephone looked at her with a look Lucy recognized. It was the common and infuriating, \"aren't you stupid?\" look that Persephone used when Lucy failed to understand some arcane aspect of her people's lives. Of the Sylphen.\n\n\"I really don't know, Persephone,\" she said, shooting her a look of her own. \"Explain.\"\n\n\"You're mated,\" said Persephone, as if that were explanation enough.\n\n\"So?\"\n\nPersephone looked once more into the fog. This time, Lucy thought she might be looking towards the mountain. \"If one member of a mated pair dies, their mate will die, too.\"",
        "The information should have been startling. It was, but mostly because it so easily made sense of things that had been just beyond her grasp. Warder had hesitated to kill Hadren not out of mercy but out of a desire to spare Ysabel. Moreover, Warder had reacted to her near-drowning with violence not because he cared for her, but because he feared for himself. He regretted their bond, and even if it made her angry despite herself, that regret should mean that he would eventually leave her alone, fade away so that her awareness of him faded as well.\n\nBut if his life were tied to hers, she would never be free of him.\n\n\"He must be upset that he tied himself to someone like me.\"\n\n\"I'd think so,\" said Persephone.\n\n#\n\nWarder knew there were those inside the mountain who felt his subservience to Hadren had been shameful. The strongest Alpha should rule, and even with Ysabel, Hadren's power had never truly eclipsed Warder's potential.\n\nWarder had not known when the charade would end so he had never truly let down his guard. Hadren and Ysabel controlled all the tech inside the mountain. Because of that, Warder had always been prepared to lead his troops without it. He accepted the ever-threatening storm that was Hadren and Ysabel as the price of escaping the never-ending tempest that was his father.\n\nOrin, like Hadren, was not a better strategist than his son. He was, however, willing to do things that Hadren could not imagine and that Warder's own morals would not allow.\n\nNow, with Hadren and Ysabel both near death, his troops were moving through the island, preparing for the game ahead. The defenses on the island were going to fall. To keep his people and his mate safe, he could no longer hide.\n\nStrategy, even when it came naturally, often required sacrifice. Every part of him had raged at the idea of letting his mate out of his sight. Lucy had a role to play, but it felt unnatural to have her so far away. She would be ready to mate again soon. It pleased him, but the timing was poor. The island that had been his haven was perched on the edge of a storm.\n\nThe inevitability of mating was one of the things he had fled to the island to escape. His father had urged him to take a human mate. Orin had taken one very soon after the breach, a choice that had aided him in coming to power. He was among those who sang the praises of the human omegas even as he treated his mate with none of the reverence that would have been afforded to a Sylphen omega in their homeland. Omegas were always meant to bend to an Alpha's will, but some said the human omegas were even easier to dominate, unaware of how to fully inhabit their power, or unwilling to do so.\n\nHe had still been in mourning for Lyric. In mourning for the son he was forced to ignore so that he would not draw the eye of those who would use him in their games of power. And his father had continually thrust potential mates into his path, powerful and pretty human girls unaware of what he was and what it meant. He had avoided them, rejecting them cruelly and finally if they tried too hard to move him. His father had matched his behavior with equal cruelty, threatening the few friends he had left.\n\nStill, he had not been inclined to trust Hadren when the man had approached him. Hadren had always been a rival. Jealous of his father's power and not powerful enough himself to do anything about it. Warder had humored him with the meeting only because he assumed word would reach his father. It would be another petty blow. Then, Hadren told him of his plan to carve an exit route from the world Warder's father was building.\n\nHe had given up everything to finally feel that he was out from under his father's power. He had turned his back on power itself, letting Hadren rule their small society, even as the man grew increasingly unstable. He had denied his nature to punish his father. Until the slip of a girl who had become his mate had torn through his defenses and brought his true self roaring to the fore.\n\nFor all that he had fought, he had ended up tied to a human omega after all. And soon, he would fight to protect her. He would risk failing her as he had failed Lyric.\n\nFor a brief moment, he was glad that his mate was distant. His disquiet threatened to consume him, a poison that his mate might feel if they were close. This was the sharp edge of the mating bond, the danger he had visited upon Lucy. If the storm about to descend on the island didn't kill her, he might yet tear her apart from the storm that raged inside him. The need to protect his mate called him back to himself. The other side of the coin. The painful beauty of his need to possess and protect her.\n\nA knock sounded at the door and Rader entered a moment after. \"Sir.\"\n\nWarder nodded and Rader gestured for a small contingent of soldiers to enter the room behind him, carrying supplies. They began setting up the small comms systems that could be powered only by the small amounts of light in each individual soldier. It was nothing like the power available to them when Ysabel was functioning, but it would have to be enough.\n\nWarder's unflappable beta took in his surroundings. He carried tactical maps of the island. \"I'll just clear a space for these, shall I?\" He swept a collection of glass bottles off of a wooden table, wrinkling his nose at the combined scents of their perfumes.\n\n\"I am as frustrated by the state of our war room as you are,\" said Warder cooly.\n\n\"Oh, no,\" said Rader, a wry smile on his face. \"It's charming.\" And then, before Warder could growl at him, he added, \"Our people are pleased you are here. They have wanted you here for a long time.\"\n\nWarder had moved once again, taking over Grace and Hadren's quarters at the top of the mountain. It was a declaration of the way things were going to change. These were the finest quarters inside the mountain and so they belonged to the ruling Alpha. Any who wished could challenge him, but he knew that none would dare. The Sylphen who hid on the island all had different reasons to escape, but Warder was the only one who had been marked to lead if he had stayed. Now, he would take up that role to protect his people and his mate.\n\n\"If we were staying on this island, I would redecorate these rooms as a matter of urgency,\" he allowed, unfurling one of the maps.\n\n\"It's truly over, then?\" asked Rader. \"Everyone is making guesses, trying to decide if there is any way the barrier could stand. If you and your mate--\"\n\n\"Lucy is not strong enough yet. I will not risk her. Our only choice now is to decide how the outsiders will find us when they come.\"\n\nThoughtful, Rader turned to the collection of perfumes and soaps he had just discarded, shuffled through them, and retrieved a cut-glass bottle. He sniffed it and handed it to Warder. \"Bubble bath,\" he said. \"I'm almost certain. You can meet them freshly bathed and smelling of flowers.\"\n\n\"Let them believe we have become so soft at their own peril.\"\n\n\"You have a plan no matter who comes.\"\n\nIt was not a question. Rader was loyal. \"My plans account for the reality that beyond the mists, my father is a King among our people. That he will not hesitate to seek me here if he realizes something has been hidden.\"\n\n#\n\nThe atmosphere in the church was tense. Even though the pews were packed with people, no one spoke above a whisper. Lucy noted that there were some people missing--mostly women. As if staying home would keep the warriors at bay. The warriors had not told the islanders when they would arrive, but the church had been mostly full at dawn. After years without electricity, the islanders were used to making the most of daylight.\n\nNo one wanted to admit that they had not slept.\n\nLucy found a seat in the back row on the ground floor. She wanted to hide in the balcony or the choir loft, but her leg was still tender from where it had brushed against the strange barrier in the water. And besides, she would be easily cornered if her only escape was via a flight of stairs. Less practical, her pride demanded that she avoid looking like she was trying to hide. Eventually, the church was so full that she gave her seat to someone else and moved to stand in the back corner.\n\nFrancine Monroe, the choirmaster and the groundskeeper for the church, bustled through the crowd, looking for all the world as if she were preparing for a concert or a special church service instead of the arrival of the warriors keeping her island home captive. She announced to anyone who would listen that she had arranged snacks for whenever it seemed appropriate to take a break.\n\nLucy was grateful for Francine's ability to pretend that everything was normal.\n\nThat morning, she had given her parents giant hugs goodbye in the churchyard, but she had insisted they sit apart from her. She could just make out the tops of their heads on the far side of the church, her father's silver head bent close to her mother's. She could not risk them drawing the warrior's attention. Warder would protect her to save himself. She understood that now. But she had no reason to expect he would extend the same protection to her family.\n\nThere was a sound outdoors and the islanders turned almost as one. Everyone expected the warriors to enter through the doors at the back of the sanctuary. Instead, there was a booming knock on the small wooden door that led out into the garden from behind the pulpit. Francine bustled to the door, motioning for two men sitting nearby to help her. In a moment, they had flung the door open to reveal the warrior's delegation on the other side.\n\nThey were forced to duck to enter through the small door and Lucy wondered why they had chosen the entrance--perhaps to avoid moving through the crowd. Perhaps simply to throw the islanders off balance. Lucy did not recognize most of them--she remembered the man called Liall from the Great Hall and a few other faces looked vaguely familiar.\n\nHer heart gave a funny leap when the delegation had all entered the room and Warder was still absent. Things were complicated inside the mountain. He might not come.\n\nFrancine began to close the door and then jumped back as it was flung open again. Cenia ducked into view, smiling at the crowd as if all of them were old friends. And then, behind her--Warder.\n\n\"Well,\" said Francine. \"Is that everyone?\"\n\nWarder gave a curt nod and Francine shut the door. \"Wonderful,\" she said, with the tone of someone presiding over a tea party. \"Let's begin!\"\n\n#\n\nThe warriors were arranged at a folding table at the front of the room--it looked like dollhouse furniture set so close to them. In their midst sat the islanders leadership--the mayor, Dr. Linn, Gino, who rationed the food, and a few others. Lucy noted that the islanders were all men while Cenia was joined by two other female warriors. She studied all of them closely--except for Warder.\n\nShe was afraid to draw his gaze. But after a while, she realized that she didn't need to be. Warder didn't bother to search the crowd. Likely, he still had others assigned to watch her as Persephone had revealed. He chose to keep himself distant. After a while, she indulged herself in staring at him, trying to will away the confusing sense of longing she felt deep in her stomach. Her staring wasn't exactly noticeable--everyone in the hall was staring at Warder, with looks that ranged from rage to fear, and even frank desire on more than one face. Lucy took a deep breath trying to shake a new feeling. Jealousy. Possession.\n\n\"That is the end of our account,\" said the warrior who was speaking--he had introduced himself as Roan. His story had been brief, clinical, from Lucy and Sheera's breach of the fence through to the attack.\n\nAt the front of the room, Mayor Edwards nervously cleared his throat. \"Well--I suppose it's--our turn, then.\"\n\nIt sounded like a question.\n\n\"Yes,\" said Warder, his commanding voice rumbling throughout the room. \"Begin.\"\n\n#\n\nThe next hour was tense. At first, the rebel version was a bit more--colorful--than the warriors' clinical accounting of the captured and the dead. But under Warder's steady gaze, the rebel spokesperson backpedaled, sweat on his brow, ending with, \"of course, it was mostly as the warriors--as they said.\" And then gratefully taking his seat.\n\nWarder spoke into the silence that followed. \"Now, we will hear what you wish from the new treaty.\"\n\nHe had not declared himself the leader of their proceedings. He did not have to.\n\n\"You may speak freely,\" said Warder. \"No one will come to harm during this meeting.\"\n\nThe words were an invitation, but the tone was one of command. Lucy assumed that he had meant to be reassuring so that negotiations could progress. He sat stiff in his chair, his face carefully blank. However, his powerful body seemed to spark with a barely concealed intensity. The people in the pews shifted uneasily, low murmurs rising and fading as they tried to make sense of the dangerous warrior presenting himself as a patient diplomat. Finally, Warder seemed to notice that no one was coming forward.\n\n\"Speak,\" he said. He didn't have to raise his voice for it to carry across the church. Mayor Edwards stared at him owl eyed. It was Mrs. Monroe who finally spoke. \"Why don't you go first, dear?\" She gestured to Drew Ohanian in the front row. He had been a vocal critic of the negotiations, favoring a renewed attack on the mountain. Now, he looked a bit green around the gills at the thought of facing Warder even in a supposedly civil conversation. Lucy thought it was probably the censure in Francine's eyes that finally spurred him to speak. His first words were halting, but he gained steam as Warder remained silent. His speech became more and more demanding the longer he spoke without Warder's interruption. Warder nodded when he was done and this time, a line formed behind the small lectern that had been set up for the proceedings.\n\nAt ten-thirty, Mrs. Monroe interrupted a droning speech by the Mayor on the needs of the town to declare that they were going to take a break.\n\n\"I was speaking, Francine,\" said Mayor Edwards.\n\n\"Yes,\" said Francine. \"And you were doing it very well. Now,\" --she clapped her hands-- \"lemonade and cookies in the front hall.\"\n\nLucy almost laughed at the idea of Warder or even Cenia enjoying tiny paper cups of lemonade and Mrs. Monroe's delicate almond wedding cookies. She loitered in the corner while she waited for the warriors to leave the room, looking straight ahead towards the front hall, as if she planned to make her way to the snacks as soon as there was a break in the crowd. Once Warder preceded her into the front hall, she quickly headed in the opposite direction out the front doors of the church, desperate for some air.\n\nShe gasped as strong hands grasped her shoulders and pulled her into the shadows of the large oak that bent towards the front doors of the church. She reared back, ready to fight, and Warder caught her hands in his own, circling them with a single fist.\n\n\"Calm yourself,\" he said. \"You will scare the islanders and they are all near to panic without your assistance.\"\n\nLucy's breathing was fast as Warder let go of her and braced his hands on either side of her body, hiding her from the view of anyone walking by.\n\n\"Are you hurt?\" he asked abruptly. He reached for her again and she swatted his hand away. He sounded concerned, but he had cast her aside. He only cared if she was injured because it might affect his own safety.\n\n\"I'm fine,\" said Lucy. \"Please, don't touch me.\"\n\nWarder growled, catching her hand as she tried ineffectually to push him away. His gaze slid down her body. \"I saw you limping.\"\n\n\"I hurt my leg when I--when I was in the water. The doctor already looked at it and he says I probably won't lose it.\"\n\n\"What?\" Warder bit out. He reached for her jeans and Lucy placed both of her hands on his before he could tear them away and inspect the damage for himself.\n\n\"Warder! It was a bad joke. I'm fine. He said I'll be fine. I didn't even need stitches.\"\n\nWarder glared at her. \"Have you had enough to eat?\"\n\n\"Yes. The rations that were sent were very generous.\"\n\nWarder nodded.\n\n\"Are--are things very bad inside the mountain? I mean, with Ysabel injured and everything.\"\n\n\"All is well,\" said Warder. \"They have their work to do while we handle things here.\"\n\nShe wouldn't tell him what she had learned from Persephone. In his arrogance, he would not assume she knew anything he had not elected to tell her. She had been turning over the right question in case she captured his attention. \"I've been thinking about it,\" she told him. \"If Ysabel and Hadren are both out of commission, things are going to change. You can't live inside the mountain without any light or communications.\"\n\n\"No.\"\n\n\"So is that what this negotiation is really about?\"\n\n\"The negotiations will help us determine how to coexist with each other.\"\n\n\"If the warriors leave the mountain and we intermingle with each other, it will not go well.\" The warriors would take over the island.\n\n\"Can we not find some common ground?\"\n\n\"Perhaps,\" said Lucy. \"But it will not change the past. And we are different. We live differently. You can't just make all of that go away. What are these negotiations meant to accomplish?\"\n\n\"We can find ways to coexist.\" Warder took his hands off the wall and ran them down Lucy's body, resting them ever-so-gently on her hips. She jumped at his touch and he growled, holding her still. She was instantly wet, suddenly so aware of him that she felt completely exposed.\n\n\"Stop!\" She hated him for doing this to her just to show that he could.\n\nWarder laughed, a low, rumbling laugh and looked pointedly at where her nipples strained against her sweater, sniffed the air, as if he could smell her arousal. He leaned in. \"Are you cold, Lucy?\" His breath was warm against her ear.\n\nShe brushed his hands away with a growl of her own, and he let her. Then, in a single motion, he took his jacket off and settled it on her shoulders. She wanted to hurl it back at him, but she was still trying to catch her breath. \"This is why the negotiations will fail,\" said Lucy. \"They aren't going to trust you when they realize you're just waiting for an opportunity to dictate how things are going to be. Were you even listening to what they were saying this morning or were you just waiting for opportunities to stare menacingly at everyone in turn?\"\n\n\"I was thinking about the next time I will feel you around my cock,\" said Warder.\n\n\"They're going to be able to tell.\"\n\n\"That I am thinking about bedding you?\"\n\n\"No!\" Lucy said, hating how she blushed, wishing she could tell him not to pretend. \"That you aren't really listening. You wouldn't be bothering with these negotiations if you didn't want something. If you don't really give them anything, even your respect, you'll fail.\"\n\nThere was a long moment of silence. Warder looked as if he might be considering what she said, but more likely he was ignoring her the same way he had the people in the church. \"Don't try to avoid me again,\" he said. Without a backward glance, he walked back into the church.\n\n#\n\nWarder sat back and listened with an eerie calm. Cenia was equally stone-faced in the front row although once, when she turned and caught Lucy looking, she broke ranks and gave her a genuine smile and a little wave.\n\nLucy wasn't able to summon her own smile in answer before Cenia looked away. She was preoccupied by Warder. He hadn't looked at her since their confrontation outside and she was taking advantage of the opportunity to study him. She had taken off his jacket as soon as she managed to stop trembling outside the church, but she was sitting on it now, trying to ignore the fact that it smelled like him.\n\nHer mate.\n\nWhat game was he playing? The man she had known inside the mountain had dominated everything. Told her where she could go, what she could eat, when she could bathe or dress or sleep. He had confessed his abandonment of Elias, his own son, as if it were commonplace.",
        "Now, he was pretending to be merciful. Diplomatic.\n\nWas it all a ruse to lure the islanders into a false sense of security so that the warriors could murder them in their beds? And what of her? Had his comments about bedding her been meant to intimidate? Or, worse, did he truly intend to take advantage of her body when he wished despite casting her aside?\n\nAs if he could sense the direction of her thoughts, Warder looked at her, raising an eyebrow when he found that her attention was already focused in his direction.\n\nThe Mayor was fielding comments from the crowd.\n\nLucy realized that Cenia had moved into the empty seat to one side of Warder--no one among the islanders had been brave enough to sit directly next to him. She and Warder were discussing something quietly. Or, at first, they were quiet. But then their voices got louder and louder.\n\n\"It's important that they know the whole truth,\" said Cenia.\n\n\"If you think they will believe it, be my guest.\"\n\nCenia stood and Mayor Edwards looked at her in shock. \"Is there something you would like to share?\" he stammered.\n\nCenia gifted him one of her beautiful smiles.\n\nWe must seem like monsters to you,\" said Cenia, looking out at the crowd with tear-bright eyes that made her seem the farthest thing from a monster. \"In truth, we are refugees. We had nowhere to go when we came to this island and it has always been our desire to let you live your lives as you wish. A long time ago, our leader made a decision not to tell any of you what brought us here.\"\n\nLucy noted that Cenia was careful to call Hadren a \"leader\" rather than a king.\n\n\"We have a new leader now\"--here, she stole a glance at Warder-- \"and while he is willing to let me tell you the truth about why we came here, he also thinks that you won't believe me.\"\n\nThere were murmurs in the crowd. A brave--or foolhardy--voice from the back: \"Tell us!\"\n\n\"We came here as refugees because we knew that others of our kind planned a siege on your world. You saw how easily we took our place on this island. Days after our arrival here, our people out there\"--Cenia gestured to the world outside the island-- \"did the same.\"\n\nThere were gasps in the crowd, a wave of whispered questions. Lucy stood stock still, staring at Cenia.\n\n\"We came here because we did not agree with the decision to rule over humans. We were not strong enough in our numbers to put down the siege, but we were strong enough to escape and to hide this island from view. It may not seem like it, but as far as we know--you are the last free humans in the world.\"\n\nCenia finished and sat down. Lucy was certain that her mouth was hanging open. Warriors--everywhere. Could what Cenia said really be true? That their kind ruled the world outside the island? That, in fact, the mountain dwellers were peaceful and kind compared to their kin on the mainland? Her mind raced and she thought of the antenna. It had seemed like such a small rebellion. If the warriors were lying, connecting with the mainland might tell them so. But if they were not--trying to reach the mainland could put everyone in danger.\n\n\"How can we believe that?\" Sheera stomped down the aisle towards Cenia. \"How can we believe you, when you're talking about him?\" She pointed an accusing finger at Warder. \"He was the one who held Lucy captive inside the mountain. He terrorized her. He hurt her.\"\n\n\"What harm came to your friend?\" asked Cenia. \"According to the treaty, we had the right to kill her. But Warder treated her as a guest.\"\n\nLucy almost laughed aloud at that. Still, she couldn't let Sheera speak for her. Couldn't allow her story to be the thing that turned the islanders away from an alliance with the warriors. Because, despite everything--she believed them.\n\n\"I'm not hurt.\"\n\nThe first time she said it, almost no one heard her. A few people in the back row turned to look, nudging the people sitting near them. But Sheera and Cenia were still focused on each other.\n\nHer face flaming, Lucy stood up on the pew and cleared her throat loudly. \"I am not hurt,\" she said. This time, her voice carried. \"I was frightened. It was strange. But--they didn't hurt me. He--Warder--didn't hurt me. Their customs are different than ours, but what they say...it could be true.\"\n\nSheera spoke into the silence. \"You aren't recovered, Luce,\" she said. \"You don't know what you're saying.\"\n\n\"I can speak for myself,\" said Lucy. \"I don't know that we should believe everything they say,\" she added, afraid to look at Warder, \"but if they say it's dangerous to contact the mainland, I think we should hear them out before we insist on doing it.\"\n\nOnly Sheera and her father knew how close they might be to doing so.\n\n\"Thank you,\" said Cenia, her eyes still bright.\n\nLucy snuck a glance at Warder and what she saw made her sit down hard in her pew. For a moment, she had been certain she saw approval on his face, and it made her want nothing more than to take back everything she had just said if only to spite him.\n\nLucy's outburst had riled the crowd. People were talking now without any concern for protocol. Lucy heard conversations bursting to life around her, some agreeing with her and Cenia, others suggesting that they were both crazy. As the talking reached a fever pitch, Mrs. Monroe stood on her own pew and clapped her hands. Then, when the roar of talking failed to cease, she clapped again, using one foot to tap Horace Greenlee--a particularly loud talker--on the side of the head.\n\n\"This is a lot to take in. I'm sure the Mayor will suggest that we take a break for today. It's very late and no one wants to be wandering the streets after dark. For now, we should do nothing. The temporary truce stands. And as a sign of goodwill, I hope that you will open your homes to our...visitors...so that we can resume first thing in the morning.\"\n\n\"Thank you,\" said Cenia softly, \"but we brought tents.\"\n\nThe crowd trickled out of the church, still discussing all that had happened. Lucy waited--not because she was heeding Warder's orders not to avoid him, but because she wanted the warriors to leave first. She wouldn't lead them directly to her parent's house even if they did already know it's location.\n\nBut while Mrs. Monroe finally finished tidying up the church pews, Warder motioned to her and they engaged in a quick conversation before the tiny woman took his arm and led him up the aisle.\n\n\"Lucy,\" she said, catching sight of her houseguest. \"Commander Warder has taken me up on my offer of housing as a show of good faith. He says you're staying with him.\"\n\n\"What?\"\n\n\"I did wonder if you knew that,\" said Mrs. Monroe tactfully.\n\n\"It might be better not to draw attention to my parents with the warriors in town,\" Lucy allowed begrudgingly. \"But we cannot share a room.\"\n\nMrs. Monroe didn't flinch. \"He can sleep in the guest room and you can have the couch.\" She caught the look on Lucy's face. \"Well, I can't give him the couch, dear. He won't fit.\"\n\n#\n\nLucy arranged the blankets and pillows Mrs. Monroe had given her on the couch. It was fairly comfortable, but it didn't matter. She wouldn't sleep at all knowing Warder was upstairs. The stairs of the tiny farmhouse had creaked so loudly at his ascent, it seemed possible he might even come crashing through the ceiling.\n\nLucy rearranged her pillows so that she was facing the stairs. Easier to see if anyone came down. She was only Warder's prisoner under the terms of the treaty--and the treaty had been dissolved.\n\nBut--she was still his mate.\n\nShe could feel it in her body, especially when he was so close. Could feel the claim he had on her. The desire she felt for him.\n\nShe heard footsteps over her head--Mrs. Monroe, readying herself for bed, completely unconcerned with the monster in her guest room. Of course, if Lucy were going to put her money on anyone in the town standing up to Warder and winning--it was probably Francine Monroe.\n\nLucy lay on the couch, her shoulders stiff, ready to spring up at any moment. She ran through the events of the day, culminating in Cenia's speech. Cenia had seemed to speak against Warder's orders. They had argued, hadn't they?\n\nShe turned the events over in her head. She realized that she knew Warder better than that now. He wouldn't have allowed Cenia to speak if she weren't saying something he wanted said. Which meant that Lucy had been manipulated into backing her up.\n\nThe realization gave her the anger she needed to master the fear. In a moment, she was quietly climbing the stairs, testing each one for creaks before she settled her weight.\n\nThe door to Warder's room was open.\n\nAnd...she lost her nerve. She was about to creep back down the stairs when he called her name.\n\n\"Lucy.\"\n\nShe turned towards the door to find Warder filling the frame.\n\n\"What do you want?\"\n\nIt was a difficult question. He wasn't wearing a shirt.\n\n\"You'll scandalize Mrs. Monroe,\" she said.\n\n\"I don't think she can be scandalized,\" said Warder. He stretched his arms over his head--as far as he could manage, considering the low roof--and then sat on the end of the bed that took up most of the guest room.\n\n\"I came because I figured out what you were up to today. You and Cenia.\"\n\n\"Oh?\" asked Warder, his tone unreadable.\n\n\"You probably wrote that little speech of hers, for all that you pretended to be annoyed.\"\n\n\"And if I did tell her to speak?\"\n\nLucy clutched the door frame, as if it could help to center her. To keep her from running back downstairs--or from slipping into the room and into Warder's arms. \"I don't know. Is it really true?\"\n\n\"I told you that my people didn't always live inside the mountain,\" he said. \"You saw that our existence is--difficult. We would not live that way without reason.\"\n\n\"And you left because you didn't want to take humans as prisoners?\" asked Lucy. \"Yet you made me one when you found me on the mountain.\"\n\n\"Because I knew what you were. And I wasn't the only one. My soldiers are loyal, but word would have spread. And someone else might have come down the mountain to claim you.\"\n\n\"You were the better option?\" said Lucy bitterly. \"You were trying to save me?\"\n\n\"I am an Alpha,\" said Warder. \"I did what my instincts were screaming at me to do. And I did not claim you until you asked me to do it.\"\n\n\"Until I was out of my mind with sickness and would have said yes to anyone.\"\n\nWarder let out a low growl that rumbled through the darkness. The sound went to Lucy's core, her body responding even as she felt a thread of fear. \"Anyone,\" he repeated, his voice dangerously low. \"What did you plan to do? Endure that 'sickness' for the rest of your life? You chose to come to the mountain that day, knowing the consequences. It could have been worse for you.\"\n\n\"And now you want me to believe that the entire world outside this island is worse? That you're here to save us?\"\n\n\"I'm no one's savior,\" said Warder. \"But I will protect as many of both of our people as I can.\"\n\n\"Why save the islanders?\"\n\n\"You consider them your people,\" Warder growled. \"Do I need another reason?\"\n\n\"Don't pretend you are doing it for me.\"\n\nShe felt the silence that followed, felt him taking her in. He had a frustrating way of shrugging off things she meant to be serious and capturing other things, things said in anger, and turning them over and over, until she wanted to reach out a hand and ask for the words right back.\n\n\"Are you sleeping well, Lucy?\" he asked finally. Purred.\n\nShe blinked. Of course, he would have noticed the circles under her eyes along with everything else. And no one would sleep well in a cave. Or with a hidden Alpha guard outside their house. Or on a strange couch.\n\n\"What are these negotiations really about?\"\n\n\"I will open negotiations with you right now,\" said Warder, his voice a rough purr. \"If you go downstairs, I won't follow you. You can sleep soundly. I give you my word.\"\n\n\"Your word?\"\n\n\"I will not lie to you, Lucy,\" said Warder. \"I never have.\"\n\nShe stood very still, turning over every word he had ever said to her. Searching for lies. She realized that her fingers were still biting into the doorframe. As if to hold herself upright. To keep herself still.\n\n\"You--\" she stopped, biting her lip. \"That's not a negotiation. I didn't ask for anything.\"\n\n\"What would you like to ask for?\"\n\nHis gaze felt heavy, but he didn't say anything else. Probably because he knew that to speak would be to rescue her. The world seemed to tilt in the silence. To expand and contract with each breath--only she couldn't tell if she was breathing at all.\n\n\"You're trying to prove that what I said before isn't true. That it wasn't the sickness that made me want you.\"\n\n\"Do you want me, Lucy?\"\n\nThe words were silky, almost a whisper. Nothing like his command in that moment before she had jumped inside the mountain.\n\nSlowly, Lucy took a single step into the room. Her throat was on fire. No, her entire body. She was--was she sick again?\n\nBut this wasn't that. Or, it was some kind of temporary thing. She was drifting this time instead of falling.\n\nShe took another step and images of her and Warder together flashed unbidden through her mind. His body, powerful and beautiful. His scent of spice and ash and mountain air. His hands--\n\nAnother step. And then another and he seemed to know when she was as close as she could stand to go--close enough that he could reach out and gather her into his arms. He did so with a low growl, pulling her up between his legs and dragging them both backwards on the bed so that she was resting against his broad chest. She was immediately ready to bolt, but instead of trapping her there, he began to knead the muscles in her back, his hands moving gently, relentlessly up and down her spine. She leaned into him the slightest bit and she felt him tense and then relax backwards at her touch, as if he were afraid to frighten her away. His arms came around her, tangling in her hair, brushing up and down her arms, toying with the seams on the battered old t-shirt Mrs. Monroe had lent her to wear to bed.\n\nTentatively, she turned her head, inhaling his scent before she hid her face in his chest, embarrassed at how it felt to be near him. He pressed a gentle kiss to the top of her head, stroking her hair, and Lucy relaxed further, letting go of tension she hadn't known was there. She knew that any minute now, her body would burst into flame, giving way to that frantic, uncontrollable desire she felt for him when she was lost to sickness and heat. Knew that this comfort was nothing more than another manipulation.\n\n\"Lucy,\" Warder, speaking softly, close to her ear. \"I will reopen negotiations once. You may go, if you go now.\"\n\nShe turned to face him, feeling for the planes of his face in the dark. She thought of the time he had shown her the stars. She thought of every moment they had spent together--every tear and sigh and moan.\n\nShe kissed him.\n\nIn the dark, she sort of missed.\n\nHe growled softly as she captured the side of his mouth and then his nose. He kissed her back, grazing her ear, her eyebrow, the curve of her neck. She moaned and he growled again in response and she realized that she was desperate to feel him closer and closer and--\n\n\"Mrs. Monroe,\" breathed Lucy. \"She'll hear.\"\n\nWarder slid her gently onto the bed and rolled so that he was looming over her, hiding her from the open door. \"Then we must be quiet.\"\n\n#\n\nIn many ways, he was still a stranger. But he knew her body intimately. He rolled over her, trapping her on the inside of the bed, as if he was afraid she would run. But she couldn't even think with his body so close. Quickly, he removed his pants, as if she might change her mind. Then, he helped her out of her pajamas, taking every opportunity to touch her--her shoulders, her wrists, the sensitive skin at the curve of her hip. Lucy blushed, wishing he would touch her breasts. Instead, he lowered his mouth, sucking at one nipple. Lucy gasped and Warder moved away from her.\n\n\"Quiet,\" he commanded.\n\nIn response, she reached for him, reveling in the feel of his skin under her hand. Slowly, she lowered her hand, boldly reached for him. He stopped her, gathered her other hand and held them against her stomach. When she was caught, he lowered his mouth to her core. He breathed against her and then his tongue pressed against her clit, rough and hot. Lucy bit her lip, but a small moan escaped.\n\nInstantly, he stopped.\n\nShe lay still, trying to catch her breath, knowing that he would stop every time she disobeyed.\n\nQuiet.\n\nBut his touch made her want to scream.\n\nHe seemed to know every time she was about to tip over the edge. He held her so still, demanded silence, and her body seemed to burn with every movement she didn't make, every sound swallowed in a soft gasp.\n\nJust before she shattered, he rose up over her, pressing one strong hand against her mouth to capture her cries as an orgasm ripped through her body. She was still reeling from the sensations when he entered her in one, smooth stroke. He kept his hand over her mouth as he moved inside her, even when his knot grew, locking them together, filling her so completely that she couldn't remember what it felt like to be without him. He moved slowly so as not to rock the bed, and the leashed power of it thrummed through her body like the waves that had so recently tried to swallow her whole.\n\n#\n\nHis mate grew tired, but Warder couldn't bring himself to let her sleep. Something had shifted between them, small, but significant. Things were still complicated. Nothing was resolved. But she had come to him even through her fear, even as her town rejected her and his people threatened everything she had ever known.\n\nWhen she tried to speak, he captured her mouth--sometimes with his own, sometimes with his hand. He felt her breath catch each time he mastered her, owning her breath and her body. She placed both hands around his wrist and tugged. Once. Twice. Reluctantly, he let her speak.\n\nShe leaned up as far as she could with his cock pinning her to the bed, whispered in his ear. \"It's the bond that makes it this way, isn't it? It's not--we don't have a choice.\"\n\nFor once, he found that he was unwilling to instruct her, to soothe her or explain. \"I told you to be quiet,\" he purred into her ear. He pulled out of her and dragged her onto her knees, looming over her as his cock stood proudly between them. \"Perhaps we can find something else for you to do with that mouth.\"\n\nIn this, he found he was willing to instruct her.\n\n#\n\nThe next morning, Lucy awoke in the familiar tangle of Warder's arms. Light filtered through the lace curtains on the window. She kept very still, hoping that her mate would sleep while she sifted through the feelings that swept in on her as sleep fled.\n\nShe had chosen him. Again.\n\nShe remembered how she had given herself to him amidst the fever of that first sickness under the mountain. He had been demanding, dominant. But he had leashed himself until she asked him--begged him--to take her. Afterwards, she had been willing to explain it away. She hadn't been in her right mind. But last night...\n\nEven after he had rejected her, she had been willing. She was more lost than she had realized. More trapped than she had been inside the mountain.\n\nWarder shifted beside her and one hand tangled in her hair while the other slid down her body. She froze and Warder stilled.\n\n\"Are you afraid of me again, little mate?\"\n\nShe blushed as she remembered how he had been forced to muffle her cries last night. \"I'm tired,\" she said. It was an understatement, she felt empty, as if every ounce of energy and emotion in her body had been depleted.\n\n\"I would let you sleep--\" he stopped when Lucy raised an eyebrow, remembering how he had kept her awake. \"I would, but we must be at the church in an hour.\"",
        "A thought occurred to Lucy. \"We can't go to the church together.\"\n\n\"I will not make a secret of what is between us,\" said Warder. \"Why do you think I chose your Mrs. Monroe for a host? She will tell the entire town that we are mated.\"\n\nLucy turned over the realization that, even in this, Warder had calculated a plan that suited his needs. \"She wouldn't say we were mated,\" said Lucy. \"It's not a term we use.\"\n\n\"Fucking, then,\" said Warder coldly.\n\nLucy changed tactics. \"It's not about hiding,\" said Lucy. \"People are emotional after yesterday. I already don't have much pull with the islanders because of how long I was away and everything. If they see the two of us strolling into church together, they'll assume I only spoke up for you yesterday because I'm under your control. I know there are people in the church who believed what Cenia told them, but they'll be afraid to say so if they think their only ally is really one of you.\"\n\n\"You are one of us now,\" said Warder.\n\nLucy rubbed a tired hand over her eyes. \"Sure,\" she said. \"But, as a strategist, you see my point?\"\n\nWarder reached out to play with a lock of her hair. Lucy kept still, recognizing that he was thinking about what she had said. He tugged lightly at the hair, not painful, and sighed. \"What you say has merit. I will go ahead of you to the church to ensure things are safe. You will follow. Do not be late.\"\n\n\"Thank you for listening.\"\n\n\"Mmm.\" Warder pulled her closer, lowering his head to press a possessive kiss to her lips that left her breathless.\n\nThrough the closed door, Lucy heard soft footsteps in the hallway and Mrs. Monroe's familiar voice.\n\n\"Time to wake up, dears. I'm making pancakes.\"\n\n#\n\nThe bright sunlight in the town square felt oppressive. After her time inside the mountain, the world felt unusually bright. Lucy stood at the edge of the crowd and watched people file into the church. Warder had instructed her not to be late. She was not brave enough to openly defy him. She hadn't had enough sleep. Instead, she intended to wait until the very last minute. It was childish, but it gave her a small sense of control.\n\nHer own small world has been so twisted lately, it was hard to grasp that the world outside might also have changed beyond repair. She had always imagined returning to things as they were. It had seemed like a dream as time went by. It almost made sense that the world outside had been torn apart by the Sylphen. It felt so far away, it made sense that it no longer even existed.\n\n\"Penny for your thoughts.\"\n\nLucy startled, recognizing Ioanni. \"You wouldn't want them,\" she said. \"I'm glad you came today.\"\n\nHe hadn't attended the negotiations yesterday. Ionni was eccentric, but people still respected his opinion. He was the go-to repairman on the island. It was possible that Ioanni might believe the warriors more easily than most. His mind was open to extraordinary things. Unless Sheera had convinced him of her skepticism. It felt strange to be so distant from her best friend.\n\n\"No, no,\" said Ioanni. \"I'm not coming to the church. I came to find you.\"\n\n\"Is Sheera okay?\"\n\n\"Yes, yes,\" said Ioanni, waving his hands to dismiss her concern. \"She is in the church. I came because I've got the antenna working. I thought you would want to be there when I make contact.\"\n\nLucy's stomach flip-flopped, wild hope quickly tangled with defeat. \"Did Sheera tell you what happened yesterday? It might not be safe to contact someone off the island.\"\n\n\"No better way to know if what they've said is true than to listen in to what's being said on the air.\"\n\n\"You can do that without alerting anyone?\"\n\n\"What can I not do?\" said Ioanni teasingly, gesturing to the clock on the far side of the square.\n\nThe clock had stopped not long after the island was taken. Ioanni had been the one to repair it when it stopped working a few years after the breach. It ran entirely on springs and gears.\n\nThe negotiations were scheduled to start in five minutes.\n\nWarder would not expect her to be late. Not after last night. Even if he came after her--and she expected he probably would--he would not immediately know her direction. Ioanni's house was isolated and she wasn't sure Warder even knew he existed. By the time he found her, she would know if what he and Cenia had told the islanders was true.\n\n\"Let's go.\""
    ],
    "authorname": "MariLeigh",
    "tags": [
        "reluctance",
        "alpha",
        "omegaverse",
        "captive",
        "mate"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-mountain-ch-09"
}