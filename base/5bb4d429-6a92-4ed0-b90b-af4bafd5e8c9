{
    "title": "Victoria Pt. 01: The Girl Next Door",
    "pages": [
        "Rick had just graduated High school and was enjoying his summer. He wasn't sure what he was going to do as he hadn't signed up to go to any college's and didn't really even have a plan except for relaxing the summer and then worrying about his future in September. He was still living at his parents house so it was easy for him to take it easy, plus he was pretty excited because they were going to Europe for most of it so he had the house mostly to himself for the next two months.\n\nRick was sitting out back by the pool listening to his Ipod trying to get a tan. He heard a loud bang all of a sudden the made him jump as he looked over and saw a moving Van pulling into the driveway next door. The house had been empty for years so it was surprising that someone was actually moving in there. As he looked his first thoughts were of some old retired couple living there who would do nothing but complain about noise if he decided to have any friends over or have a party which he was totally planning on doing.\n\nHe rolled out of his lounger and took a walk towards the front if the house to get a look at the new neighbors or anything that could tell him anything about them. As he got closer he saw the moving company open up the back of the van so he got a little closer to see. One of the first things they pulled out was what appeared to be some sort of statue wrapped in bubble wrap with fragile stickers all over it. The shape made it look like it could be an angel statue because he was sure there were wings. As he looked up he saw an old looking couch and some other items that just screamed old people. \n\n\"Great!\" he said to himself sarcastically. \n\nShaking his head now a little worried about his summer plans turned away as he headed back inside the house unaware there was someone watching him from the window of the house behind him. He headed upstairs to his room and grabbrd his phone before sending a group message to a few friends seeing if anyone else would be able to have any sort of party because he wasn't sure how this new neighbor would affect his plans.\n\nAs they days went by all the moving vans eventually stopped but he never saw his new neighbor. He was a little surprised because he was expecting to be heading to his car and see some old lady who was deaf as a haddock waving and smiling at him but for the most part the house always seemed to be quiet. The only reason he knew someone lived there was because the lights would come on at night but that was it.\n\nAt one point he thought he saw one of them. It was a quick glance but he hear a car pull up and a door close so he quickly went to his window. By time he got there he could see a woman with blonde hair walking in to the front door but he didn't get a good look at her. She didn't seem old but he also figured maybe it was their daughter or something going to see their new house. The car was very nice looking, looked like a brand new camaro which he liked so he knew their daughter had good taste.\n\nAfter a few more days he noticed the car had not left which just raised more questions. He really wanted to know who was living there but he didn't want to just walk over and knocked on the door. One day he finally heard something about his neighbor as his Mom was doing some last minute packing for their trip.\n\n\"Oh hey Ricky, have you met the new neighbor yet?\" She asked seeing him walk past the bedroom.\n\n\"Huh? No, I think I saw their daughter stopping by to visit or something but no I haven't met them.\"\n\n\"It's only one person, a young woman named Victoria.\"\n\n\"Really?\"\n\n\"Yeah, your father and I went over to welcome her to the neighborhood.\"\n\n\"Oh, I thought it was an old couple or something.\"\n\n\"Nope, actually she seems pretty young, I was surprised when I saw her.\"\n\n\"How young is she?\"\n\n\"Oh I dunno, at first glance I'd say she was in her twenties but the way she spoke made it sound like she was older.\"\n\n\"How do you mean?\"\n\n\"Just things she said, made me think she was more mature than she looked, but I guess some people age better than others.\"\n\n\"Mom I've seen documentaries on the beaches in Europe, you'll probably the hottest woman there.\"\n\n\"Though I know you are being a wise ass, thanks.\"\n\n\"Love you mom.\"\n\n\"Uhuh, I don't have to worry about you while we're gone do I?\"\n\n\"What do you mean?\"\n\n\"I made friends with Victoria, maybe I'll have her keep an eye on you.\"\n\n\"Trust me I'll be fine, no need for babysitters.\"\n\n\"I know, make sure you introduce yourself to Vicky when you see her.\"\n\n\"Vicky?\"\n\n\"She said we could call her Vicky.\"\n\n\"Will do.\" He said as he continued back to his room.\n\nLater that night he was lying in bed watching TV. His parents had gone to bed early as they had an early flight to catch so Rick was just trying to relax because he wasn't really tired. He flipped through channels but nothing good seemed to be on which was getting him aggravated. Suddenly he saw a light come on out of the corner of his eye. He turned his head out the window and saw the window across the way light up as the curtain was open a few inches. He almost got up to close his shade when he saw something interesting.\n\nThrough the small opening in her curtain he could see her standing at the end of her bed. She was wearing a strapless black dress and it looked like she had just gotten home from a nice party or something as she placed her purse down on the bed. She turned her back towards the window and grabbed the zipper behind her and started pulling it down as she was getting undressed.\n\nRick rubbed his eyes to make sure he was seeing what he was seeing. He hadn't actually seen what she looked like yet but from the small bits he was looking at she seemed to look amazing. The dress slipped off her falling to the floor. He could feel himself getting hard but was also starting to feel a little guilty like he shouldn't be watching this. He continued to watch as he realized she was not wearing a bra and he could just see the smooth skin of her back and her panties hugging what looked to be a finely toned ass. She pulled a pin out of her hair letting it fall against her back.\n\nRick's mouth was dry as he watched this. She suddenly turned around facing the window and he caught a glimpse of her breasts and he almost jizzed in his underwear at how amazing they looked. She was still looking down and hadn't noticed him yet but he suddenly started to panic a little so he rolled off his bed and onto the floor hiding behind it. \n\nVictoria heard the thud and looked up realizing the curtain was open. She walked over to the window and grabbed the two sides staring out into his bedroom with a smile on her face before she pulled them closed. Rick poked his head up from the floor and saw that she had closed the curtain which made him feel embarrassed thinking she had realized he had been watching.\n\nHe went to the end of his bed away from the window going to close his shade when he noticed he could still see her shadow through the curtain. It was a perfect outline of her figure as she continued to undress which was odd because the light didn't seem positioned like that before. He watched as she put her leg on her bed and started to pull off her stocking but she did it very slowly. She did the same with the other one and then she bent over and slid off her panties also in a slow fashion. If he didn't know any better he would think she was doing it all on purpose. Once the underwear was off she held it in the air letting it hang off her finger before dropping it on the bed.\n\nRick watched from the side of the window trying to stand out of the line of sight if she opened the curtain again. He watched her naked shadows stretch before getting down on the bed like a slow crawl. He could see the shape of her breast as the hung from her before she rolled on to her back bending her leg and sticking it in the air like she was stretching even more. Rick's jaw was on the floor as he watched all of this before the light finally turned off and the show was over. He still felt a little ashamed of himself but also shocked that he hadn't noticed sooner that his bedroom window was directly across from hers. \n\nHe soon closed his curtain halfway and laid back down in bed trying to get some sleep. As he shut his eyes the curtain across the way peaked open as Victoria glanced across to his room. She could see him lying there with his back to the window and she knew he had been watching and also how turned on her was. She smiled to herself before closing the curtain again and heading to bed.\n\nThe next morning Rick awoke after having some very strange but erotic dreams. They were all a little scrambled and hard to make out but it was like he was getting brief images of sexual activity. It was like one moment he felt like he was getting his dick sucked followed by breasts in his face as someone bounced in his lap. He never saw her face just her body, he wasn't even sure it was the same woman every time. He slid his comforter over and went to get up but noticed the wet spot on the front of his boxer shorts. Apparently he had jizzed himself over night soaking his boxers and his blanket.\n\n\"What the fuck.\" He said heading to the shower and throwing his comforter and boxers in the hamper. \"Okay so don't watch your neighbor strip and go to bed with a boner, got it.\" He said to himself before hopping in the shower.\n\nHe cleaned himself off and gotten dress before heading downstairs. There was a note on the fridge from his parents with some emergency contacts and a few meal idea and notes, where to reach them and so on along with some cash. He reached over and grabbed an apple before heading back upstairs when he heard the doorbell ring. He turned and headed for the front door not sure who would be stopping by.\n\nRich opened the door and said \"Hello?\" When he felt his heart start racing as he realized it was Victoria standing there.\n\nHe felt a pit in stomach as she stood there wearing sunglasses. He couldn't tell if she was angry or what but he couldn't help but notice how nice she looked even though she was wearing a t-shirt and jeans instead of the dress he watched her remove last night.\n\n\"Hi, it's Richard right?\"\n\n\"Um, yeah Hi?\"\n\n\"Thought so, I'm Victoria I'm your new neighbor.\"\n\n\"Oh okay,\" he said shaking her hand. \" I knew someone had moved in but I hadn't seen you yet.\"\n\n\"Yeah, your parents stopped by the other day, nice people.\"\n\n\"Yeah they're pretty great.\" He said before he stood there awkwardly silent for a moment. \"Um I'm sorry would you like to come in?\"\n\n\"Sure!\" She said smiling and walking past him into the living room. \"Nice home you got here.\"\n\n\"Thanks, can I get you anything?\"\n\n\"No I'm fine, I just wanted to talk to you about something.\"\n\nHis heart sank a little not sure what she was going to say as he thought about last night. \"Really, about what?\"\n\n\"Well your Mom asked if I could check in on you from time to time while they are away.\"\n\n\"Oh, really?\"\n\n\"Yup and I told them no problem.\"\n\n\"I see....... \"\n\n\"Look Richard, or should I call you Dick?\"\n\n\"Um, most people call me Rick.\"\n\n\"Oh, I like Dick better, but alright.\" The way she said it hit him in a way he couldn't tell if she was joking or not. \"I'm not here to be a babysitter or watch you through the window, you're a teenager and I'm sure you have some big plans for the summer and as far as I'm concerned have fun, hell maybe I'll even join you some night if you want.\"\n\n\"Well um...... you're definitely welcome to use the pool any time you want.\"\n\n\"Thanks, I'll probably take you up on that. Listen I just don't want you to think I'm spying on you for your parents or anything, and honestly feel free to come over any time you want if you're just bored or lonely, I don't know anyone in town and I'm sure we can keep each other entertained this summer, I want us to be friends, if that's alright with you?\"\n\nHe was listening to what she was saying and kept hearing little things that made think. She made a comment about watching him through the window, how she said she liked Dick better, and wanting to hang out with him, he was starting to wonder if she was flirting with him or if he was just hearing things.\n\n\"Um sure, I'll definitely come over and hang out Victoria\"\n\n\"Sounds good, and you can call me Vic.\" She said with a smile as she headed towards the door opening it before she turned back and said \"oh and about last night, I won't tell your parents.\"\n\n\"Last night?............ what um.... what do you mean, what happened last night.\"\n\n\"Ha, you're cute but you aren't very subtle.\"\n\nRick was a little nervous but didn't want to say anything until he knew for sure what she was talking about. \"Subtle about what.\"\n\n\"It's fine really, I should have checked my window before I started taking my clothes off, and honestly it was kind of nice having someone want to watch me for a change, hasn't happened in a while.\" She said sliding her sunglasses down and giving him a wink before shutting the door behind her.\n\nRick stood there shocked for a second. She had seen him last night and on top of that she didn't seem to care. Who was this woman and how could she afford a house by herself. He realized his Mom was right and she didn't look any older than maybe 25 and she was gorgeous too. He tried to convince himself that she wasn't flirting with him and just tried to calm himself down a little. He ran up to his room and looked across the way seeing her shades closed and quickly closed his. He looked around and grabbed his car keys to go for a drive just to clear his head for a while.\n\nA few days went by and he hadn't seen her or heard from her at all. Her car was gone most of the day so he assumed she worked or whatever and didn't give it much thought. He had rationalized his conversation with her and realized there was nothing there and he shouldn't overthink it. He decide.to throw on his bathing suit and hit the pool to cool off as it was a warm day.\n\nHe walked out the back door and stopped as he realized there was someone sitting in one of the lounge chairs by the pool. It was Victoria wearing an amazing looking red bikini just soaking up the sun as she looked like she had just gone for a swim.\n\n\"Oh, um.... Hi Victoria, I didn't know you were here?\"\n\n\"Please call me Vic. I'm sorry I should have called or something first, my apologies.\"\n\n\"No, none needed it's fine, I said you could use it anytime you wanted and we're all adults here right.\"\n\n\"Yes we are.\"\n\n\"Okay than.\" he said as he turned back towards the house.\n\n\"Oh hey, don't let the fact that I'm here change your plans, go for a swim, I can leave if you want?\"\n\n\"No no, you're fine right there.\"\n\n\"Once again I'm sorry, I didn't mean to surprise you.\"\n\n\"No worries, Honestly it's the best surprise I've gotten all week.\" He said before thinking to himself \"stop flirting you idiot.\"\n\nHe was using his towel to hide the issue growing in his shorts trying to get into the pool before she noticed. He walked to the other side placing his towel down and climbing in via the ladder with his back towards her before letting go and feeling the cool water hoping it would shrink him back down to size. Usually he would pace himself before getting in that quickly but he was more nervous about her seeing his shorts than the temperature of the water.\n\n\"Water's nice isn't it.\" She said.\n\n\"It's great, especially on a hot day like today.\"\n\n\"Here, I'll join you.\" She said standing up and walking to the edge before diving in.\n\nShe swam under him before coming up behind him sliding her hair back as she emerged. Rick was worried because despite the coldness of the water he was still hard as a rock and was desperately hoping she wouldn't notice.\n\n\"So, what are your plans now that you're out of school?\" She said floating closer to him.\n\n\"Um, not sure, just trying to enjoy my summer and worry about the future in the fall.\"\n\n\"Oh really?\"\n\n\"Yup, and I know it sounds irresponsible or whatever but I just needed a break you know.\"\n\n\"No I get it, high school can be rough, you need time to clear your head and just have fun you know, that's how I live my life, just having fun.\"\n\n\"Wow, sounds like um..... fun.\"\n\n\"You don't have to be so nervous around me you know.\"\n\n\"What do you mean?\"\n\n\"When I came over the other day you practically wet yourself wondering if I was going to scold you for watching me undress.\"\n\n\"Oh..... you noticed that?\"\n\n\"And I see you desperately trying to hide your boner from me now, you don't have to.\"\n\nRich blushed a little as she mentioned the issue in his shorts. \"I'm sorry, and what do you mean?\"\n\n\"I mean if I caused It I at least want to see my work.\"\n\n\"What?\" He said shocked.\n\n\"Calm down, I'm just screwing with you!\"\n\n\"Oh?\"\n\n\"You think you're the first young guy who has been like this around me?\"\n\n\"Wow you're just very um......\"\n\n\"Look I've been dealing with guys drooling over me most of my life, it gets annoying being this beautiful sometimes.\" she said whipping her hair back in an over dramatic fashion.\n\n\"A bit full of yourself I see.\" He said jokingly..\n\n\"You joke but it gets exhausting sometimes, and like I said the other day I'm not here to babysit you and I really want us to be friends.\"\n\n\"Really? But I don't even know what you see in me, I'm just a dumb teenager and you're.......... how old are you again?...... Wow I'm sorry that's a horrible thing to ask a lady.\"\n\n\"A lady? See right there, you try so hard to be polite, and felt bad when you asked my age, I don't meet a lot of guys who don't introduce themselves by saying hey Baby.\"\n\n\"Just I feel like it's been very awkward since the window and everything.\"\n\n\"If you want to know a secret, after I shut the curtain I knew you could still see my shadow, and I admit I put on a little show for you.\"\n\n\"Really?\"\n\n\"I know, I'm actually a little embarrassed by it, but it felt nice that a guy was checking me out, like I said it hasn't happened in a while.\"\n\n\"Bullshit, you're a stone cold fox, who wouldn't check you out?\"\n\n\"Are you flirting with me?\"\n\n\"Um....... I uh...\"\n\n\"Haha, relax, I won't tell you my age but I am older than I look, but I am serious about hanging out though, like why don't you come over Wednesday night and I'll make you dinner.\"\n\n\"Um, okay, sure.\"\n\n\"Like I said you need to relax, we'll eat and watch a movie or something, it will be totally casual.\"\n\n\"Sounds good, Netflix and chill.............I mean........... you want me to bring anything?\" he said hoping she didn't get that reference.\n\n\"Just your sweet ass!\"\n\n\"Um.....\"\n\n\"Ha, I love the look on your face when I do that.\"\n\n\"Yeah well.........\"\n\n\"I can stop if it makes you feel uncomfortable.\"\n\n\"No, It's okay, we're adults right, we can joke around about anything...... just don't be surprised if I start joking back.\"\n\n\"Looking forward to it, I'll see you Wednesday.\" She before climbing out of the pool.\n\nHe watched the water dripping off her skin as she walked up the stairs. It was almost like she was walking in slow motion. It was going to be hard with her if she kept flirting like she was he might ruin his pants during dinner. He did start to think though that if she was that open with sexual humor maybe he could start to feel comfortable around her.\n\n\"No shows tonight right?\" he said hoping she'd understand he was joking.\n\n\"Ha, In your dreams maybe.\" she said grabbing her towel and heading back home.\n\nRick floated in the water watching her walk away. He was nervous about hanging out with her at her house and having dinner. He was worried about whether or not he would be comfortable and also didn't want to insult her by taking a joke too far. He also began to wonder what if they did end up having sex. It was far fetched but still he was a bit nervous thinking about it.\n\n----------------------------",
        "That night as he laid down for bed he glanced out his window for a moment just to see if there was a show tonight. He looked and saw her curtain closed and the light off. He figured she had probably already gone to bed. He rolled over and shut his eyes letting himself fall to sleep. It didn't take as long as he thought it would before he was out cold.\n\nIt was around 1:00 am when he heard a noise that pulled him from his sleep. It was the sound of a woman moaning but it was loud enough to wake him. He looked over towards the window and his curtain was moving like it had gotten windy all of a sudden. There was also a blue light shining into his room that didn't look right as he rolled out of bed and went to shut his window.\n\nAs he approached it he realized the light he was seeing was being caused by the moon which was full and seemed much larger than usual. The trees and everything seemed to be blowing hard which was strange because there was no storm or anything which would be causing this. He then looked up at the window across the way seeing as her curtain seemed to be blowing as well.\n\nIt was dark in her room but he thought he saw something when the curtain moved. He kept looking and when the wind blew and the two pieces of cloth moved he saw someone standing in her room just staring out the window right at him. It was hard to see but he saw someone there and it was Victoria. She was wearing what looked like black silk pajamas and she was just staring straight ahead right at him with a strange look in her eyes. \n\nThe blue light reflected off her eyes making them glow a little so even in the dark he could still see her staring at him. Rick wasn't sure what she was doing but she could obviously see him which made this whole situation even stranger. He could see a smile on her face but it seemed almost devious or naughty. She stepped forward and the wind was hitting her shirt making the fabric press against her chest as her hand came up and she began to rub her herself. She grabbed the fabric pulling it aside a little showing off her breast for him. He could see it glisten in the moonlight and it looked amazing. She took her finger and licked it before she began running circles around her nipple getting herself turned on as well as Rick.\n\nHe couldn't help but stare as his cock grew pressing against the cloth in his boxers. He felt like he shouldn't be watching but she was looking right at him like she was doing this for him. Who was this woman and what did she want from him. It was hard for him to think straight as she grabbed her shirt and ripped it open grabbing and squeezing her breasts as she stepped even closer to the window. Her body looked amazing covered in blue light and her shirt was blowing to her sides keeping her chest out in the open for him to see.\n\nShe rubbed her chest with one hand as her other hand slid into her pants feeling herself and moaning loud enough that others in the neighborhood could probably hear her. She grabbed her waist band before she turned around and slid her pants slowly showing off her ass to him. He watched as she had no underwear on underneath and her ass looked so fit and smooth. As she bent down to the floor she spread her legs showing her slit to him as she ran her hand along her ass looking back at him before her finger slid inside herself feeling her pussy and moaning again.\n\nShe stood up and turned back around stepping into the window and looking down at his boxers. She could see his hardened cock through his shorts and she looked up at him motioning for him to take off his boxers. Rick was so turned on his cock was practically twitching with anticipation as he grabbed his waist band and slid off his shorts. He stood back up and looked across the way but suddenly she was gone. He looked all around but she was nowhere to be seen and he was standing in front of his window with his cock sticking out fully erect. Realizing someone my see him he quickly turned around and almost jumped when Victoria was standing right there in his bedroom right in front of him. \n\nWhen he tried to yell out of shock he realized his voice didn't work. He could not speak which didn't make any sense but neither did her being in his room. She smiled at him before lowering himself down in front of him taking his cock in her hand as her tongue began making circle on his tip. It felt so good but when he tried to moan nothing came out. She wrapped her lips around his member slowly engulfing his member whole. Rick was finding it hard to stand as his knees felt weak at her touch. He never liked to admit it but he was a virgin so this was all really exciting for him and he was honestly surprised he hadn't blown in her mouth yet but it was like he wasn't going to cum until she let him.\n\nShe let go of his member and pushed him down on his bed before climbing on top of him. She pressed her lips against his before she pulled herself up and pressed her breasts against his face shaking them and rubbing them against him. It almost seemed similar to the dream he had the other night. She lowered her soaking wet pussy down on his cock making his whole body jerk as she started sliding herself up and down his shaft. Her eyes still had a strange blue glow to them even though the moonlight wasn't reaching the bed. She bit her bottom lip as she as she writhed on top of him.\n\n\"Touch me!\" She said grabbing his hands and placing them on her breasts as she continued to work her hips.\n\nRick tried to speak again but he couldn't for some reason. This all felt so amazing but something didn't seem right about all of this. It almost felt like none of it was real but he could still feel his orgasm building as she continued to ride his cock moaning louder and louder.\n\n\"Oh yeah, you want this Richard, you want this so bad, why are you waiting, why are you resisting me.\" She said leaning forward placing her hands on his chest as she continued to milk his aching member. \"I could be yours, I'm right next door waiting for you, and you can have me any time you want.\"\n\nRick was so confused by what was happening and still couldn't talk. He could feel himself ready to pop at any moment as she moved faster. She felt so good around his cock and things started to get even stranger. He realized as she was speaking he could still hear her moaning like there were multiple voices all speaking at once.\n\n\"Take me Rick, walk next door and fuck me like you know you want to. My pussy is wet and waiting for you. Come to me, come to me!\" She said to him as he turned his head towards the window and could see her lying in her bead moaning with her hand between her legs but how could she be there and in his room at the same time?\n\nHe couldn't hold on much longer as everything became distorted and strange. he could hear multiple voices which were all hers, some moaning, some whining, and some begging him to go over and fuck her. it was getting hard to handle all of the voices and the feelings happening all at once. He looked up at her as her eye's suddenly turned a solid black. It was a little unnerving as she looked down at him. \n\n\"FUCK ME!\"\n\n\"Oh shit!\" Rick said finally as his voice returned and he shot up in bed as his cock erupted shooting cum up in the air as it was sticking through the hole in his boxers.\n\nAll the warm goo came splashing back down all over his shorts, shirt and blanket. His cock went for quite some time soaking everything. He head never cum that much before but what was even stranger was the sun was up and he was alone in his bed. It had apparently been all a dream and hadn't really happened. It had felt so real all he could do was sit there confused still reeling from his orgasm. He looked out the window across the way but her window was closed with the curtains drawn.\n\n\"Jesus!\" He said looking at the mess he had made before getting up and heading to the bathroom to shower and throw his clothes on the wash.\n\nRich stood there letting the warm water hit him in the face. He was exhausted and wasn't even sure what had happened last night. It was so real and strange he thought it was really happening until he woke up jizzing all over himself. He thought back to the dream he had that night he saw her stripping and how he woke up in a similar situation but this time the dream was much more intense and much more frightening. At the end he almost felt like he was having sex with some sort of demon or something. It left him a little shaken to say the least.\n\nAs the day went on he was sitting in his living room watching a Star Trek marathon and had a pizza on the way. He was finally a little relaxed and wasn't thinking about Victoria when his phone went off. He grabbed it and saw he had a text message from her.\n\n\"Hey, everything alright over there?\"\n\nHe was a little confused but he wrote back \"fine, why did you hear something?\"\n\n\"No, that's why I was worried, teenager home by himself and it's way too quiet.\"\n\n\"Sorry to disappoint, just pizza and Star Trek tonight.\"\n\n\"Star Trek??????\"\n\n\"Don't hate.\"\n\n\"Lol, still sounds better than my plans.\"\n\n\"Which are?\"\n\n\"Nothing at the moment.\"\n\n\"Well I can share some pizza, if you're bored come on over.\"\n\nRick was a little surprised with himself just inviting her over like that but it would give them a chance to hang out a little. He did not get any response and was starting to think maybe this was getting to awkward. Maybe she didn't know how to respond which just made him feel anxious. Suddenly there was a knock at the door that surprised him. He hopped up and opened the door seeing Vic there smiling at him and waving almost like she was nervous or something.\n\n\"Hey, wasn't sure if you got my text, come on in.\" He said inviting her in.\n\n\"Thanks, so Star Trek huh, original or next gen?\"\n\n\"Right now it's original, tomorrow is next gen.\"\n\n\"Sweet, I love the original.\"\n\nHe was shocked that she said that as she sat down on the couch. \"Really? You watched the original Star Trek?\"\n\n\"So have you, why is that so strange?\"\n\n\"I watched it with my Dad, I'm just shocked that someone as bea............ like you would be a treky.\"\n\n\"Hey, only we are allowed to call ourselves that.\"\n\n\"Ha, okay, wait I am a treky?\"\n\n\"Then there's no issue.\"\n\n\"Right.......\"\n\nThey sat down and watched the show together. The pizza arrived and they ate and he was laughing as she seemed to know every episode by heart. This was the first time he was around her and wasn't trying to hide a boner from her or anything. He was actually having fun with.\n\n\"So I have to ask, how are you single?\" She asked.\n\n\"Why does that surprise you?\"\n\n\"Well you're not a bad looking kid if I may say so, and you just graduated high school with the house to yourself all summer, you couldn't ask for a better set up.\"\n\n\"I dunno, just haven't met the right girl I guess.\"\n\n\"The right girl? sounds over rated to me.\"\n\n\"Sounds like a woman scorned, that explains why you're single I take it?\"\n\n\"That's a long story.\"\n\n\"I see.\" He said just staring at her for a minute.\n\n\"What?\"\n\n\"Nothing, just never thought it be this much fun hanging out with my baby sitter.\"\n\n\"Baby sitter? Ha! If your parents only knew, besides isn't it past your bed time?\"\n\n\"Planning on tucking me in?\"\n\n\"Are you trying to get me to follow you to your bedroom?\" She said with an eyebrow raised.\n\n\"But I'm scared to go up there by myself,\" he said in a baby like voice before things felt a little awkward.\n\n\"Well that killed the mood.\" She said laughing out loud a little.\n\n\"Yeah, not sure what the hell I was doing there.\" He said as they went back to watching the show.\n\nAfter an awkward silence that lasted only a few moments they began chatting again. She laughed at his jokes but he wasn't sure how much of it was pity. She talked about her favorite episodes of Star Trek and it actually turned in to a fairly fun and relaxing evening.\n\nThe later it got they both eventually got quiet as he was starting to doze off. At one point she appeared to be asleep and he just stared at her. He thought about the dream he had last night and how hot it was but seeing this version of her even though she was absolutely beautiful she almost didn't seem like the same person from the dream. That version of her seemed different, almost supernatural in a way, maybe even a little evil but the real her was much more interesting than he thought.\n\nWhen he finally fell asleep laying his head back on the couch and closing his eyes Victoria opened hers. She looked over at him and got up off the couch walking over to him. She had a devious smile on her face as she placed her finger on his head and spoke a strange language as her finger began to glow and a light flowed in to his head.\n\n\"There we go,\" she said before she leaned in close to him. She could feel the pleasure sweep over her body as she began to fill his head with sexual images before she went home to relax and invade his mind even more while enjoying the effects.\n\nShe looked him over a little smiling to herself before she leaned close to his ear and said \"I know you can't hear me, but I want you to know this is nothing personal, in fact it's almost a shame what I have to do to you,\" she continued as she rubbed the side of his face with her hand, \"you really are a great kid, but I promise you this, from now until the end you will enjoy every second of this, I am going to drive you wild until you finally give in and come crawling to me, and then....\" she stopped a moment biting her bottom lip and straddling him getting very turned on while rubbing herself against him. \"Well, then the real fun begins.\"\n\nShe began to grind herself against him without really thinking as she began to feel the effects of the visions in his head. She was so horny that just the feeling of his hard cock through his pants rubbing against her felt so good as she slid back and forth.\n\n\"Oh fuck!\" She said as she gave herself a small orgasm falling forward and wrapping her arms around him for a moment as she hadn't been this turned on by anyone in a long time.\n\nShe took a minute to catch her breath before she planted a kiss on him biting his lip a little while he was still enjoying his dream. She climbed off of him and was about to head home when she stopped and looked back. She walked back over before she kneeled down and became curious about something. Knowing he would not wake because of the magic she was using on him she began to open up his jeans as she wanted to take a look at her prize. She got them open and slid his underwear off seeing his cock fully erect and her eyes widened at how big it was.\n\n\"Wow, you and I are going to have some fun!\" She said smiling to herself as she took it in her hand and examined it closer before. She began to rub it a little making him moan even more as he got more turned on. She wanted to just pull off her pants and fuck him right then and there but she stopped herself before saying \"No, not yet.\" And planted a small kiss on the tip of his cock leaving it out in the open to pulse all night before it erupts.\n\nRick was seeing a dream similar to before involving Victoria but he was still in his living room on the couch with her bouncing in his lap. He could see her amazing breasts bouncing in his face with her begging him to touch her and kiss her. It was very intense and he was enjoying it very much until her eye's and voice changed again and he began to feel a little bit of fear growing inside him until he was once again awoken by his orgasm. He opened his eyes and looked down seeing his pants open and his cock sticking out as he had just jizzed all over the floor and coffee table.\n\nHe was confused, sweating and still reeling from the experience. He looked over and Victoria was gone probably leaving after he fell asleep or so he thought. He did not remember anything that had happened or anything she had said to him after falling asleep but he was starting to worry a little about these erotic dreams and the affects they were having on them.\n\nAfter he cleaned up he began to wonder if this was all in his head. Maybe Victoria was just a really cool person and wasn't trying to seduce him or anything and this was all just his young mind screwing with him because he thought she was hot. He tried to make himself believe this so dinner wouldn't be awkward later. He wanted to feel loose and relaxed and not trying to hide a boner or feel anxious.\n\nHe got dressed and ran downstairs looking in the liquor cabinet and saw a bottle of wine he figured he could bring over as a gift. He was pretty sure it was customary to bring wine to a dinner so he grabbed it and put it aside.\n\nAs the day went on and he got closer to his dinner with Victoria he found himself getting anxious again. He was pacing back and forth and didn't know what to do to calm himself down as his heart was racing a mile a minute. Time went on and he wasn't getting any better and then he suddenly got an idea that may solve most of his issues with her at least for the evening.\n\nHe ran upstairs to the bathroom closing the door which he realized seemed pointless considering he was the only one home. He realized if he jerked off before going over there it would help him relax and not spend the whole time thinking about having sex with her.\n\nHe unzipped his pants and tried to think of something that would turn him on. He hadn't grabbed a magazine or anything so he was just using his imagination. He closed his eyes and tried to picture something but the first image that popped in to his head was Victoria. He began to remember that dream he had and how amazingly hot it was. The images flashed through his head with almost the same detail as his dream. He could almost feel her skin and smell her scent as he rubbed his member. He rubbed himself harder and harder until he could swear he actually heard her moaning in his ear.\n\n\"Come find me!\" Her voice said in a sultry whisper. \"You know where I am, you know what I want, come to me, let me finish you myself.\"\n\n\"Oh Fuck!\" He said as seconds later he exploded in to his hand feeling an amazing orgasm as his dick spasmed and squirted everywhere just like this morning as he came more than he expected, he not only had to wash his hands but the floor and counter as well.\n\nAfter cleaning everything he stood there for a moment trying to figure out what was happening to him. He had never had sexual fantasies like this before and it was starting to freak him out a little. He began to think that maybe if he just got laid these dreams would stop but that wasn't an easy solution, or so he thought.\n\nHe threw on a button up shirt and headed over. He wasn't sure how well he should dress but he didn't want to look like a total slob when he got there. It was a short distance from his door to hers but the walk felt like a mile until he finally walked up the steps and knocked at the door.\n\nSeconds went by until the door opened and she stood there wearing the same dress he watched her remove the other night. She smiled at him as he was just blown away by how amazing she looked. He could even feel himself getting a little hard again and sighed a little knowing he was in trouble.\n\n\"I um..... I brought you this.\" He said handing her the bottle of wine.\n\n\"Wine? Aren't you a little young?\"\n\n\"It was in my cabinet so.\"\n\n\"Oh, so your trying to get me drunk are you?\"\n\n\"No..... No I um.\"\n\n\"Ha, I love it, come on in.\" She said leaving the door open for him before turning and bringing the bottle to the kitchen.\n\n\"Hey Vic what time did you leave last night?\"\n\n\"Um, not sure, I fell asleep and when I awoke you were out cold so I just came home.\"\n\n\"Oh, everything seemed fine though?\"\n\n\"What do you mean? You do snore but there was nothing out of the ordinary.\"\n\n\"Oh, okay just checking.\"\n\nRick was looking around while he stood in her living room. Her style was strange at best as her couch did seem old fashion but her TV was brand new. She had some strange nick nacks but one thing that caught his eye was a statue on the mantel in the living room. It was at least two feet tall and appeared to be some sort of female demon with large wings. The statue was naked and there was nothing covering any inch of her private areas. Seemed to be an interesting piece to display in a living room.",
        "\"You like it?\" She asked walking back in to see him staring at the statue.\n\n\"Sorry, yeah it's interesting, I'm assuming you don't entertain much?\"\n\n\"You are the first since I moved in, it's a succubus, a sex demon.\"\n\n\"Really, you into sex demon mythology?\"\n\n\"Does it make you feel uncomfortable?\"\n\n\"No, just wasn't expecting you to have a naked demon statue in your living room.\"\n\n\"I just love a good art piece when I see it. I've had her for a while now.\"\n\n\"Her, so she has a name?\"\n\n\"Yes its Nessira the daughter of Lilith..... so ready to eat?\"\n\n\"Yes Ma'am.\" He said walking towards the kitchen with her.\n\n\"Yeah, don't call me Ma'am, makes me feel like an old lady.\"\n\n\"Yes Ma....... um Vic.\"\n\n\"That's better.\"\n\n\"Trust me, nobody would mistake you for an old lady.\"\n\n\"You'd be surprised.\"\n\nThey sat down for dinner in the dining room eating and talking for a while. She had made him an excellent steak that he really enjoyed. Rick was just telling stories about stupid things him and his friends did during school and she laughed enjoying the way he told them. She got up at one point grabbing the bottle of wine and bringing it back to the table with two glasses pouring both.\n\n\"You know I'm only 18 right?\"\n\n\"I won't tell if you don't.\"\n\n\"Ha, I've actually never had wine before.\"\n\n\"Well I have and this is the good stuff.\"\n\n\"Nice.\" He said taking a sip which she could tell by the look on his face wasn't his thing. \"Not bad.\" He said choking it down.\n\n\"I guess it's an acquired taste.\"\n\n\"I guess, so is this my Mom asking you to make sure I'm eating?\"\n\n\"No, just want to get to know you better.\" She said before getting up and leading him to the living room.\n\nShe sat down on the couch and invited him to sit next to her which he did. She turned on the TV and searched for a movie to put on while they continued to just chat away. She suddenly remembered the Star Trek Next Gen marathon was on so she turned to that instead. He was starting to become more comfortable around her which made it easier for him to relax bit it also made him more attracted to her.\n\n\"So tell me about yourself.\" He said.\n\n\"Not much to tell I'm afraid.\"\n\n\"Come on you have a story written all over your face, young woman, who can apparently afford a house by herself, you don't seem to work at all so what's your secret?\"\n\n\"Secret?....... well we all have our secrets don't we.\" She said glancing at the statue for a moment before looking back at him and smiling.\n\n\"Hey that's cool if you don't want to tell me, I just can't believe a woman like you is single.\"\n\n\"Like I said last night, its over rated and let's just say that it's more of a personal choice.\"\n\n\"Well when it does happen I hope he is everything you need him to be.\"\n\n\"Nope, sorry, been there done that.\"\n\n\"So never again?\"\n\n\"Like I said before, it's more about having fun, why should we deny our basic instincts?\"\n\n\"So is it a women thing now? Like you switched sides?\"\n\n\"No nothing like that, men still have their uses.\"\n\n\"I see, so who was he?\"\n\n\"Who was who?\"\n\n\"The guy who broke your heart?\"\n\n\"What makes you think anybody broke my heart?\"\n\n\"Like I said, its written all over your face, who was he?\" He asked as she sat there silent watching the TV. \"Well whoever he was, he was an idiot who didn't see you for what you are worth, just saying.\"\n\nShe stared at him for a moment surprised by what he had just said. \"Thanks, so tell me your story?\" She said trying to change the subject.\n\n\"Me? I guess I'm just old fashion.\"\n\nShe stared at him wondering if he was going to be as easy as she originally expected. \"Old fashion? You're not deformed or something are you, afraid to show off to the ladies?\" She said teasing as she knew exactly what he was packing.\n\n\"No nothing like that.\"\n\n\"So tell me, it can't just be because you haven't found the so called one yet.\"\n\n\"Like I said, I'm old fashion.\"\n\n\"Oh come on you can tell me.\" She said smiling and trying to act a little sexy and get him turned on.\n\n\"Nah, it's nothing important.\"\n\n\"Oh but now I want to know.\" She said almost pouting a little.\n\n\"It's just, I see my parents and even some of my friends and I just...... I want a partner you know?\"\n\n\"A partner?\"\n\n\"Yeah, not just someone I can make love to or whatever, I want a teammate, I want to meet the love of my life, I know I'm young and have plenty of time to meet someone but..... I guess I want someone I can grow old with.\"\n\n\"Wow......\"\n\n\"Problem?\"\n\n\"No it's just... not what I was expecting from an 18 year old.\"\n\n\"Hey, you asked, even though you didn't want to tell me anything about you.\"\n\n\"It's not that...........\"\n\n\"It's not what?\"\n\nRick I do want to tell you, I want to tell you a lot, which is funny because I haven't wanted to tell anyone about myself for a long time.\" She stopped after realizing what she had just said because she wasn't sure why she said it.\n\nRick stared at her for a moment seeing a bit of conflict in her eyes before he broke the silence. \"Well, I'm always around if you need a friend or want to talk about it.\"\n\n\"Friend?\" She said a little disconnected for a moment.\n\n\"Hey if you murdered your husband for the money your secret is safe with me.... for a price of course.\" He said winking and laughing a little.\n\nHer expression turned serious for a moment as she just sort of stared off blankly like there was something serious on her mind.\n\n\"I'm sorry if I...... I didn't mean to.....\" he said thinking he said something wrong.\n\n\"No it's not you, just reminded me of something.\"\n\n\"Something I assume you don't want to talk about?\" He said as she sat there silent and didn't seem to be planning on saying anything more. \"Well I um..... it's getting a little late I guess so I'm going to head home.\"\n\n\"You don't have to leave yet, I'm sorry I didn't mean to put a damper on the evening.\"\n\n\"No it's not that, I have to get up early to get stuff for um............\" he paused because he didn't really want to leave but he didn't want to stay and try something he might regret. \"Actually saturday evening I'm having some friends over for a pool party, I'd love if you could come.\"\n\n\"Really, I may tell your parents about it.\" She said smiling and joking seeming like herself again.\n\n\"You wouldn't.\"\n\n\"Maybe, but do you really want me hanging around you and your friends?\"\n\n\"Yeah, honestly you'll probably be the best looking girl there and........ I like hanging out with you.\"\n\n\"You do?........... okay sure, I'll definitely stop by.\"\n\n\"Great, and hey like I said I'm right next door if you ever want to talk okay.\"\n\n\"Thanks Rick,\" she said standing up and kissing him on the cheek before she pulled back and stared at him for a moment. \"What?\" She asked as he stared back at her.\n\nRick looked into her eyes and could see a conflict in them that made him even more curious about her. There was something about the way she looked at him and he could feel himself starting to feel something for her. Without really thinking he leaned in and kissed her. This was a surprise to her but she ended up kissing him back and they just stood there for a moment enjoying each others taste until he eventually pulled away from her.\n\n\"I'm so sorry I um....... I shouldn't have done that, it was stupid and I....... I gotta go.\" He said letting her go and heading out the door in a hurry.\n\nShe walked over to the window and watched him walking home as she was still tasting him on her lips. Something was wrong but it wasn't anything she wanted to admit to herself or anyone else for that matter. She definitely didn't want to admit it to her master who had been there watching the whole time.\n\n\"That was a very passionate kiss.\" A dark female voice said from behind her.\n\n\"Yes it was.\"\n\n\"What are you doing? You should have taken him last night, and you could have easily had him now.\"\n\n\"Don't worry, I've already started invading his dreams and his fantasies, and as you can see he is almost ready to give in, I will have him soon.\"\n\n\"You still need him three times, are you sure your head is clear in this matter.\"\n\n\"Don't question me, have I failed us yet?\"\n\n\"No, but something is different with this one, he is starting to like you.\" \n\n\"He's a horny teenager, that's all.\"\n\n\"Perhaps, but you are starting to like him as well.\"\n\nVictoria turned to the statue watching it's eyes glowing red as it spoke. \"Don't be ridiculous, he is the final virgin and my plans have not changed.\" She said walking over and turning off the TV. \"I admit that he is definitely more attractive than the other two but that is all.\"\n\n\"You treat him differently than the others, it's no wonder he's falling for you.\"\n\n\"Well I'm not going to get him into bed by being a total bitch now am I?\"\n\n\"Just remember, once you have drained him 3 times and complete the ceremony your transformation will be complete and I will be free, we've come too far to mess things up now.\"\n\n\"I'm allowed to have a little fun aren't I, like I said I will have him soon, he will come crawling to me, begging.\"\n\n\"I hope you are right, I would hate to have to make you do it.\"\n\n\"I promise you, soon our plan will be complete, but for now I am going to enjoy myself.\"\n\n\"Have your fun than, but don't waste too much time. He looks delicious.\"\n\n\"If it's anything like the dreams, oh yes he is.\"\n\n---------------------------------\n\nRick moaned in bed as the sun came up shining through his window. He was covered in sweat as his cock pulsed while he was having a very similar dream to the one he had the night before. He cock erupted pulling him from his sleep as he shot up once again covered in his own juices but luckily his comforter was on the floor and had not been hit.\n\nHe placed his head in his hands as he struggled to catch his breath wondering why he was having these dreams over and over again. He began to wonder if maybe he just needed to get laid and lose his virginity already, maybe then he would stop fantasizing about Victoria. He thought about it and realized that losing it to her wouldn't be bad at all. He kept getting mixed signals from her and wasn't really sure if she wanted him or not, and then he kissed her which he felt extremely embarrassed about and was hoping it wouldn't make things weird between them.\n\nHe looked at the time and picked up his phone. He began writing a text message to her hoping he could nip this in the bud before things got weird or more awkward.\n\n\"Hey, I'm really sorry about last night, hope we can still be friends and just forget it happened, still hope to see you at the party saturday.\"\n\nHe hit send and waited for a while with no response. He headed to the bathroom and after cleaning himself up he suddenly had a thought about something that happened last night and he turned on his computer. He typed in the words \"succubus statue\" and \"Daughter of Lilith\" as he began searching for information on the sex demon statue she had in her house. He couldn't find anything specific about the name of the statue mainly because he didn't know how to spell it but he did find an article about how ancient civilizations would speak of these demonic sexual creatures who would corrupt women to do their bidding to hunt down Virgins in order to sacrifice them so that they can be reborn. Lilith's name did come up but it was such a common name in succubus lore it didn't surprise him.\n\nThe more he read he began to wonder if that's what was happening. What if she was a Succubus and was slowly trying to seduce him to feed off of his life force for that statue in her living room. It would explain the dreams and his lust for her. He read a little more and saw something that talked about how succubi can easily corrupt someone suffering from a broken heart. Even though she didn't seem to want to talk about her past she didn't exactly act like someone who had just gotten her heart broken. She seemed strong and in control and even playful and happy. \n\nHe soon brushed it aside saying to himself \"this crap isn't real, she couldn't have known I was a virgin anyway.\" He said as he stopped his search and tried to forget the whole thing.\n\nHe shut down his desktop and thought about the way she looked at him last night. There was something there behind her eye's, a conflict of some sort like she wanted him but at the same time didn't. He wasn't sure how to describe it but he knew there was more to her than she let on. He heard his phone buzz and looked over to see he had a new message.\n\n\"It's forgotten, see you saturday.\"\n\nHe felt a small relief when he read that but he knew it wasn't going to be easy to just forget about it. He got dressed and grabbed his keys before heading out to get supplies for the party.\n\nA few days went by and saturday had arrived. He hadn't seen or heard from Victoria since the dinner and was hoping she was still coming over. The evening approached and his friends started to arrive filling up his yard. He went out back and had begun mingling with everyone, some of which he hadn't seen since graduation.\n\n\"So Rick, how's the dating life going?\" His friend Eddie asked.\n\n\"Why do you want to know? Sorry dude you're not my type.\"\n\n\"Shut up, I just heard a rumor that Cindy over there has had a crush on you for a while now.\"\n\n\"Really?\"\n\n\"Yeah, you should go for it, you're never gonna find a hotter girl than her.\"\n\nRick looked over at Cindy who was chatting with some of her friends. She did glance over at him at one point smiling before returning to her conversation.\n\n\"Maybe I will.\" He said to his friend as he looked back at him.\n\n\"Yeah man, tap that ass......... hey what you looking at?\" Eddie asked as he noticed Rick was looking behind him with great concentration so he turned around to look.\n\nWalking towards him with a smile on her face was Victoria wearing a sundress that was thin enough that he could see her bikini through as she moved.\n\n\"Woah dude, who is she?\" Eddie asked.\n\n\"Oh, that's Victoria, my new neighbor.\"\n\n\"Wait I thought you said you weren't seeing anyone?\"\n\n\"We aren't dating, just hung out a few times.\"\n\n\"Really? How do you live next door to that without doing something about it?\"\n\n\"Hey Rick!\" She said walking over to him. \"nice party.\"\n\n\"Glad you could come Vicky, you look......... um this is my friend Eddie.\"\n\n\"Nice to meet you.\" Eddie said practically drooling over her.\"\n\n\"Now that is what I was talking about the other day.\" Victoria said to Rick while pointing at Eddie with her thumb.\n\nRick couldn't help but laugh a little knowing exactly what she was talking about from their conversation in the pool the other day. Eddie just stood there confused not aware of the inside joke they were chuckling about. She looked around at all the teenagers chatting and swimming all around her.\n\n\"Wow, makes me feel old.\" She said.\n\n\"What are you talking about, Like I said you're probably the hottest girl here.\"\n\n\"Oh really, what about that sexy little brunette over there that keeps smiling at you, or at least did until I got here.\" She said pointing over at Cindy who seemed a little disgruntled that Rick was talking to Victoria.\n\n\"Oh, um well maybe.\"\n\n\"She your girlfriend?\"\n\n\"What? no.......\"\n\n\"But you were thinking about asking her out weren't you?\"\n\n\"Maybe........ I don't know, do you think I should?\" He said wondering what her response would be after what happened the other night\n\n\"Hmmm. Well she definitely seems attracted to you.\"\n\n\"Would it be a problem?\"\n\n\"Why would it be?\"\n\n\"I um....... I don't know, but do you think I have a shot?\"\n\n\"Rick, you could have whoever you want, but the question is what do you want?\" She said winking at him.\n\n\"Um....\"\n\n\"Ha, I love doing that to you, you make it so much fun!\" She said as she slipped off her dress showing off her amazing body that made many of his guests stop and stare for a moment before she jumped in the pool.\n\n\"Dude, you have to put in a good word for me.\" Eddie said standing next to him.\n\n\"She's older than us.\"\n\n\"I don't care, I want to check her for wrinkles then.\"\n\n\"What is wrong with you?\"\n\n\"What, it's been a while okay.\"\n\n\"Yeah, a while.\"\n\nHe couldn't help but stare at Victoria as she swam. No matter how hard he wanted to go talk to Cindy he just couldn't help but stare at her and want her.\n\n\"Hi Rick.\" A woman's voice said to his left as he turned and saw Cindy standing there with a smile on her face.\n\n\"Oh hey, Cindy, how have you been.\"\n\n\"Just fine, so who's your friend there?\"\n\n\"Oh Vicky? Just my neighbor.\"\n\n\"Neighbor, I don't remember her going to our school.\"\n\n\"Oh no, she's older than us but....... she's cool.\"\n\n\"I don't know if cool is the temperature I'd use to describe her.\"\n\n\"Yeah well, my Mom asked her to keep an eye on me.\"\n\n\"What like a babysitter?\"\n\n\"No not like........ anyway what have you been up to?\"\n\n\"Oh you know just a little of this and a little of that..........\" Rich suddenly couldn't hear her anymore as he stared at Victoria who swam to the other end of the pool before she turned around and stared back at him with a smile on her face.\n\nShe looked at him licking her lips and he could hear his heart racing. There was nothing else going on around him and it was like they were the only ones there. She was the only woman in the world that mattered to him at the moment and he couldn't deny it anymore.\n\n\"Rick? Hello Richard?\"\n\n\"Huh, oh sorry, I was distracted.\"\n\n\"Yeah I can see that.\" Cindy said before she turned and walked in to the house.\n\nRick felt bad for not giving Cindy the attention she wanted. He looked back towards the pool and suddenly noticed that Victoria was gone. He looked around and didn't see her anywhere and shook his head confused.\n\nCindy went in to the kitchen grabbing a drink from the fridge feeling a little aggravated with Rick. She thought to herself that maybe she needed to try a more aggressive approach if she was going to compete with that hottie that showed up and was distracting Rick from her.\n\nShe closed the refrigerator door and nearly jumped out of her skin. \"Holy crap!\" She said as the door closed and she saw Victoria standing there glaring at her. \"You scared me.\"\n\n\"I'm sorry, sometimes I step more quietly than I realize.\"\n\n\"Okay? I'm Cindy by the way, and you're Vicky right?\" She said putting her hand out to greet her. \n\n\"I am.\" she said looking down at her hand before she smiled at her.\n\nVictoria put her hand up in front of Cindy's face putting her under some sort of trance. Cindy's eye's began to glaze over as she suddenly didn't seem like she was all there anymore and just stared blankly as her body wobbled a bit.\n\n\"Now listen to me, Rick is mine do you understand?\"\n\n\"Yes.\"\n\n\"Good, you are quite an exquisite thing aren't you?\" She said looking Cindy up and down.\n\nShe reached out and popped her top open a little taking a closer look at her. She was a very nice looking girl and Victoria knew she could mess up her plans if she let her so she got an idea that would make Rick forget about Cindy. \n\n\"Okay now listen to me, I have a job for you.\"\n\nRick was still looking for Victoria and Cindy when he walked in to the kitchen. \"Vic, hey have you seen Cindy?\"\n\n\"I think she just went back outside\" \n\n\"What?\" He said looking out the window\n\n\"What's wrong?\"\n\n\"I wanted to talk to her, I was kinda rude to her and........\" He stopped when he looked out the window and saw Cindy outside making out with his friend Eddie. \"Son of a bitch!\" He muttered under his breath as Victoria stood behind him with a smile on her face seeing what was happening.\n\nRick was a disappointed and a little mad at her, at Eddie and even himself a little.\n\n\"I'm sorry, what a bitch.\" She said standing there in her bikini still glistening from being in the pool as he turned and stared at her. \"Rick you okay? You seem distracted.\"",
        "\"I......... I just um......\"\n\n\"Hey.\" She said patting him on the cheek a little. \"I'm sorry that Cindy didn't work out, but I'm going to head home okay? I'll be up for a while if you want to come by after the party.\"\n\n\"Come....... come by?\"\n\n\"If you want to talk.\" She said giving him a small peck on the cheek before she headed towards the front door.\n\nRick wasn't sure why she was leaving or what she was trying to do but he couldn't help but watch her as she walked away. Her body looked so amazing and he almost didn't even care about Cindy anymore. He was extremely horny and almost just followed her but he thought about everyone out back and regained himself before head back to them. He saw Cindy all over Eddie still as they both headed for her car out front.\n\nThe party went on for a while and Rick tried his best to mingle and have fun with his friends. He put on a good show but his mind was somewhere else the whole night. Some of Cindy's friends even tried to apologize to him for the way she acted saying how confused they were because she never really liked Eddie. He kept glancing up at Vics window seeing the light still on and wondering what she was doing.\n\nHe hung out until everyone took off. He wasn't sure how to feel or what to think as he head up to his bedroom. He had been distracted all night after that moment in the kitchen and seemed distant to everyone there as he had little interaction with the people he spoke to. He sat down on the bed and glanced out the window towards Vics. The wind was blowing a little and when the curtain moved he could see her sitting on the bed. It looked like she was reading a book or something until she looked up at him. She stared at him for a moment before she smiled at him.\n\nHe stood up and walked out of his room and down the stairs almost angrily thinking maybe she had something to do with what happened to Cindy. He went outside and headed to her front door and rang her doorbell. After a few moments he heard someone walking down the stairs and towards the door. As it opened she was standing there wearing nothing but a bathrobe.\n\n\"Rick? everything alright?\"\n\n\"Why did you........ what are you.......\"\n\n\"I'm sorry what was that?\"\n\n\"What do you want from me?\"\n\n\"Excuse me?\"\n\n\"It's just, ever since....... and then.....\"\n\n\"Rick, slow down and think about what you want to say because right now you're just babbling.\"\n\n\"That's because around you I........... I can't think straight and......\"\n\nShe stared at him waiting for him to complete a sentence. He stared at her as he tried to figure out what he wanted to say but he couldn't. His brain was a jumbled mess since the day he met her and there was only one thing he could do at that moment. She stood there with her eyebrow raised waiting for him to respond until he just stepped towards her and pulled her close planting his lips against hers.\n\nShe was taken by surprise for a moment but wrapped her arms around his head pulling him in tight against her. This was exactly what she had planned and had been waiting for for a while. They stepped back into the house and he used his foot to shut the door behind him. She jumped up wrapping her legs around his waist as he carried her upstairs trying not to drop her or hit her against anything. He wasn't sure what he was doing but he knew everything had been building to this moment, it was inevitable and he was tired of fighting it. \n\nAs he took her upstairs he didn't notice the statue in the living room's eye's begin to glow as Nessira was happy that it had finally started. Rick was ready to burst as Victoria had spent this time getting him ready and now the process could begin.\n\nHe took a quick guess and turned left at the top of the stairs hoping it was her bedroom based on the layout of the house in comparison to his window. Luckily it was and he walked in laying her down on the bed. She opened up her robe showing that she had been wearing nothing underneath. Seeing her body in person was a sight to behold, he was starting to worry that this was just another one of those dreams but that wasn't going to stop him.\n\nShe grabbed him and rolled him over climbing on top of him shedding her robe completely before she started opening up his pants. She was extremely turned on as it was finally happening. She found herself much more excited for this one than she had been with past virgins. She tried to convince herself she was just really turned on and this didn't mean anything more but at this moment the only thing she cared about was getting his cock inside her.\n\nShe got his pants off and he was already rock hard and ready to go. She skipped the foreplay and straddled him as she wanted him so badly. His cock entered her and she let out a satisfied moan as if it was everything she had been waiting for. Rick was so horny and ready he didn't even care that she didn't stop to make him put on a condom. \n\nShe moved her hips thrusting her pelvis as she began to milk his cock whining and moaning as she did. She grabbed his shirt pulling it off of him as he pulled himself up towards her wrapping his arms around her waist sliding them down her back and grabbing her ass which made her jump a little as it felt so good. She placed her hand on the back of his head pushing his face in to her breasts to which he grabbed them and squeezed them while exploring and tasting her skin with his tongue. \n\nVictoria had imagined this moment using it to project the visions in to his dreams as she prepared him for this. It felt better than she expected it too as his cock filled her better than anyone before. Despite being a virgin he seemed to know his way around her pretty well which only enhanced her experience.\n\nDownstairs the statute could sense the first feeding happening upstairs as its eye's began to glow even brighter. Victoria could feel the statues power affecting her as her eye's began to glow as well. She shut them and tilted her head back trying to make sure Rick didn't notice the strange supernatural event this sex had lead to. She could feel the energy growing as she prepared to suck out part of his life force as orgasm approached.\n\nRick clenched his arms around her tighter as he could feel the pressure growing in his cock. He was ready to cum at any moment as she continued to squeeze his member inside her and he couldn't hold on much longer. He tried his best to distract himself and make this last as long as he could. As turned on and as inexperienced as he was he still wanted her to enjoy it as much as she could.\n\n\"Oh fuck! I can't........ I can't hold much...... longer.\" He said as she bounced faster and faster.\n\nShe grabbed his face and pulling it in to her chest before she whispered in his ear. \"Then don't.\"\n\nHe let out a loud moan as he finally erupted inside her filling her with his seed as she pulled energy from him as well. His cock squirted more and more and it felt amazing but he could also feel something else like a warm feeling all over his body flowing down to his cock and into her. The feeling was so intense he held on as long as he could before he started to lose his balance. She held him and lowered herself with him making sure he landed gently and didn't hit his head or anything. She kissed him even nibbling on his lip as he fell unconscious and the world went dark around him.\n\nVictoria was still reeling from the sensation feeling both very satisfied but also a little guiltier than usual after a feeding. She looked down at his sleeping body as he laid there after to process. She climbed off of him and was going to leave him but she felt so good after the sex that she didn't want to move, instead she laid down next to him and rested her eye's for a while until she fell asleep with him.\n\n---------------------------------\n\nThe next day Rick awoke with a bit of a headache. It was hard for him to focus at first but he saw someone sitting up in the bed staring at him. He blinked a few times until he saw Victoria sitting there smiling at him wearing his t-shirt.\n\n\"Hey you.\" He said seeing her there.\n\n\"Hey yourself.\"\n\n\"Is that my shirt?\"\n\n\"Yes, but I think it looks better on me.\"\n\n\"I'd have to agree..... so last night?\"\n\n\"Yeah, it was going to happen at some point, I think we both knew that.\"\n\n\"Yeah, I think you're right. So now what?\"\n\n\"First, drink this.\"\n\n\"What's this?\" He said looking at the glass she handed him. \"Poisoning me now? I don't have any money and we aren't married so.....\"\n\n\"Poison? It's orange juice you idiot.\"\n\n\"Oh, that sounds better, but anyway like I was saying....\"\n\n\"I have some errands I have to run today so I won't be around but um..... maybe I'll stop by tonight?\" She said sliding out of bed.\n\n\"Okay, I guess.\"\n\n\"Your clothes are folded right there, well except for your shirt, I'm going to take a shower and I'll see you later.\"\n\n\"Alright............ hey can I confess something?\"\n\n\"What's that?\" She said turning back from the doorway.\n\n\"This was my first time.\"\n\n\"Really? I never would have guessed.\" \n\n\"Well was it.......... you know, For you?\"\n\nShe walked back over him and kissed him before she said \"It was exactly what I wanted.\" Before smiling at him as she walked away into the bathroom shutting the door.\n\nRick couldn't tell if she was being sarcastic or not but he found his pants and slid them on followed by his shoes before heading downstairs. He felt a little light headed at first and had to regain his balance before heading out. As he walked through the living room he looked over at the statue and rubbed his eyes as it almost seemed a little bigger than he remembered. He didn't give it much thought before he headed out the door and back home. \n\nVictoria stood in her bathroom listening to make sure he was gone. She walked over to the mirror and looked at herself as she was still feeling the effects of her night with him. As she looked herself over she noticed a small tear begin to roll down her cheek. She watched it for a moment shocked at the sight before she wiped it off and headed back to the bedroom to get dressed.\n\nRick walked into the house heading to the bathroom to get showered. It took him a bit to climb the stairs as he felt exhausted and tired like he had been up all night. Once he got to the bathroom he turned on the light and could see dark circles around his eyes showing how tired he was.\n\n\"Holy crap, well it was definitely worth it.\" He said to himself.\n\nHe decided to skip the shower and instead laid down in his bed to rest a moment. He turned the TV on and that was the last thing he remembered before falling asleep. There were no dreams of any kind sexual or other, he just rested for hours and hours.\n\nWhen he awoke later he finally felt rested and a bit better. He looked out and realized it was night time again. He had slept the day away and was wondering why Victoria hadn't come by to see him, or did she and just not wake him up. He rolled out of bed and checked the window but her bedroom light was off. Her car was in the driveway so he knew she was home but she must have been asleep because the whole place seemed dark and quiet. After a few minutes he decided to lay back down and turn on the TV until he fell asleep again which turned out to be easier than he thought.\n\nAfter a restful night he awoke to the sun shining. He felt much better and hopped up and got cleaned up before he headed next door to see Vic. He knocked on her front door and waited a few moments. Nobody answered so he pulled out his phone and shot her a text message to which he also got no response.\n\n\"What the hell?\" He thought to himself as he turned and headed back home.\n\nRick was starting to wonder if it was a mistake to have have sex with her. She seemed pretty eager to get him out of the house the next morning and he hadn't heard from her since. He was starting to think maybe he wasn't that good and she didn't know how to tell him. He spent the day pretty much lounging around the house never hearing a peep from next door. It was bothering him a lot more than it showed but he was trying to keep his cool about the situation.\n\nAs the day went on and the sun went down he eventually went to his bedroom and laid down turning the TV on and trying to go to sleep. He looked out and her window was dark so he just closed the curtain and went to sleep.\n\nHours later he suddenly felt a hand on his shoulder shaking him awake. \"Hey, wake up sleepy head.\"\n\nHe opened his eye's looking up and seeing Victoria on the edge of his bed smiling at him. \"Oh, hey.\"\n\n\"Told you I'd come by.\"\n\n\"Yeah, yesterday, but I think you wore me out the other night cuz I slept most of the day away.\"\n\n\"I stopped by but you didn't answer the door, makes sense though if you were asleep.\"\n\n\"Oh, sorry, wait how'd you get in now then?\"\n\n\"You left the door unlocked silly, you should be careful, you never know what kind of predators roam the neighborhood after dark.\"\n\n\"Well it's a good thing you got to me first.\"\n\n\"Is it?\" She asked before she stood up and pulled her shirt off.\n\nShe was not wearing a bra or underwear which he noticed as she slid her pants off as well before climbing on top of him. She smiled as she just rubbed herself against his crotch making sure he was good and hard for her. He was still tired but he couldn't help but get turned on by the attention he was getting from her.\n\n\"Woah, again? Already?\"\n\n\"Well I just figured the cat's out of the bag so we might as well play with it, or I can leave if you want.\" She said slowly starting to climb off of him.\n\n\"No no, stay.\" He said grabbing her waist and pulling her back down on to him.\n\n\"Thought so.\"\n\n\"I thought maybe you didn't enjoy it as much as I did.\"\n\n\"Well you thought wrong, besides it's much better than a dream huh?\"\n\n\"What did you say?\"\n\n\"Weren't you having erotic dreams lately?\"\n\n\"Well yeah but I never said anything about it.\"\n\nVictoria froze for moment realizing her mistake and quickly tried to cover her tracks. \"I heard you moaning a lot through the window, so unless you were up all night masturbating.\"\n\n\"Oh, sorry I didn't realize it was that noticeable.\"\n\n\"Well now we can moan as loud as we want together.\" She said as she slid his pants down.\n\nShe pulled them off his feet before leaning down close to examine his cock which was fully erect before she began lightly caressing it. Ricks eyes rolled as he enjoyed the sensation and even moaning a little.\n\n\"You enjoying that?\"\n\n\"Very much.\"\n\n\"Well I've already taken your virginity, what other firsts can I take from you?\" She said as she lowered her head and started to trace her tongue along his shaft.\n\n\"Oh shit!\" He said as she continued to pleasure him.\n\n\"You taste so good.\"\n\n\"Oh fuck! I never thought it would feel this good.\"\n\n\"You haven't seen anything yet.\"\n\n\"Can't wait, Vicky I was wondering um.........?\"\n\n\"Do you really want me to stop?\" She asked before taking his cock in her mouth giving it a few slow sucks making it hard for him to concentrate.\"\n\n\"Fuck no..... but...... why me?\"\n\nVictoria stopped for a moment and thought about how to answer that. She could feel her heart racing a little as she tried to come up with an answer. \n\n\"Um.... what do you mean?\"\n\n\"Sorry it's just, It feels like a dream you know, beautiful girl moves in next door and....... just feels like the script for a porno. I think what I'm trying to say is where is this going?\"\n\n\"Going?\"\n\n\"Yeah, am I just a fling to you or........ what is this?\"\n\n\"How about we enjoy the present, and worry about the future when it happens? It's about enjoying life remember, that's what you told me when we met.\" She said crawling up and lowering herself on to his cock letting the pleasure distract him from his questions.\n\n\"Oohh, okay.\" He said starting to breath heavier as she motioned her hips massaging his cock and trying to enjoy the feeling.\n\nShe bit her bottom lip as she started out very slowly enjoying the sensation and making sure he did as well. She knew what was coming and she knew their plan was almost complete so the least she could do was make sure he enjoyed every second of it. \n\nVictoria had been planning this for a long time with the guidance of her master. She had taken the lives of two virgins before Rick and the more she did the easier it got as she let herself become more corrupted by the statute but something about Rick was making it hard to want to finish him. She was ready to take his life at first but he was different than the others and she was struggling with her decision which confused her.\n\nAs much as her emotions were in turmoil she still wanted to enjoy the process as she fucked him. She wanted to feel him inside her and enjoy the sex with him and she wanted him to enjoy it as well despite what she was doing to him. She began moving her hips even faster making his bed shake a little. Rick was still weak but he tried to move his hands and make her feel as good as possible pulling himself up towards her. He placed his hand on her cheek rubbing his thumb across her lips before pulling her in for kiss. There was a bit of passion there that neither one of them were expecting making it last a little longer than they had planned.\n\n\"I....... I think I.\" He said.\n\n\"Shhh, don't speak, just enjoy yourself.\" she said leaning back as he leaned down kissing her stomach and chest.\n\nHe pulled her back up in to his arms caressing her skin with his hands, \"I think I'm falling for you.\"\n\nVictoria suddenly stopped and looked at him wide eyed with almost panic in them. \"What did you say?\"\n\n\"I think I'm........... falling for you.\"\n\n\"No...... no you're not, you just think that because I took your virginity.\"\n\n\"No it's more than that.\"\n\n\"Shut up, no it isn't!\" She said in a stern voice that surprised him a little.\n\n\"Then why are you here?\"\n\n\"Because I wanted to fuck you again, the other night was fun and I wanted more.\"\n\n\"Really? You spent weeks teasing me and hanging out with me just so we could do it?\"\n\n\"Of course, what else could it be.\"\n\n\"Do you know why I'm an 18 year old Virgin.\"\n\n\"Does it matter, you want to fuck or not?\"\n\n\"It's because as lame as it sounds I didn't want to just fuck some cheerleader or some girl in the back seat of a car.\" He said raising his voice a little. \"I wanted it to mean something, I wanted it to be an amazing experience, because contrary to what you may think I wasn't a loser in school, I had options.\"\n\n\"I never said I thought you were a loser, but then why huh? Why didn't you just fuck Cindy or some other dumb girl, It could have saved.......\"\n\n\"Saved? Saved what?\"\n\n\"It doesn't matter, none of this does.\"\n\nHe looked at her as she seemed to refuse to look him in the eye. \"What happened to you?\"\n\n\"It doesn't matter\"\n\n\"Who made you like this, Victoria the reason I went to your place the other night was because I couldn't get you off my mind, you mean something to me and I thought ............ I thought maybe I did to you too.\"\n\n\".............Rick, I was hurt once, I was hurt very badly, to the point where I have done terrible things since then.\"\n\n\"Doing bad things doesn't make you a bad person, there is more to you than you let on.\"\n\n\"You don't know anything about me.\"\n\n\"I know the way you look at me isn't the look of a woman checking out a piece of meat, and I know that as bad as a broken heart is, nothing is better than when you meet the person who helps you put it back together.\"\n\n\"Stop please............. I can't.\"\n\nShe sat there in his lap staring at him feeling a rush of emotion. Tears began to fill her eyes but she suddenly felt a surge of power inside her as Nessira was getting ready to feed. She closed her eyes and began to move her hips again milking his cock trying to finish as quickly as possible so she could get away from him. Rick was in no position to protest and soon it began to feel too good to try.",
        "It didn't take long to make him cum even though he wasn't exactly ready for it but she felt him drain his semen in to her as she pulled energy from him as well. He held her tight as she sucked the life from him and she heald him as well until he was out cold in her arms. She sat there straddling him as he slept against her shoulder and she had her arms around him. After a moment she laid him down gently and dropped her face into her hands as she burst out crying. She knew it was too late to turn back but she also didn't want to go through with the final part of the ritual. She didn't know what to do.\n\n--------------------------\n\nRick awoke almost halfway through the next day feeling drained and barely able to get out of bed. As tired as he was though he needed to get up, he needed to go and talk to Victoria. He fell to the floor next to his bed trying to will himself to get up, it took a little while but he got to his feet before grabbing his pants and his shoes. He walked out the front door and headed to her house but he noticed her car was gone. He knocked on the door anyway but of course there was no answer. He was still so dizzy and tired but he looked through the window and saw something very strange.\n\nStanding in the living room was a statue that looked exactly like the small one he saw the other day only this one was life size. It was turned away from him but he recognized the wings and a few other features. He also saw a table in the middle of the room with straps on it like it was designed to hold someone down on it.\n\n\"What the fuck?\" He said out loud as he backed away and headed back to his house.\n\nHe got back inside and locked the door before heading up to his room. He turned his computer back on and went to find that article he read about the succubus statue as he was starting to wonder if it was true. He found the article still up on his browser and went back to read the rest.\n\nIt stated that the soul of a succubus would live in the statue and corrupt a woman to hunt down Virgins. Three of them to be exact where she would make love to each of them 3 times draining their life force before sacrificing them to the succubus. Once the final virgin has been found and the process begun the statue would grow to its true size ready to be reborn once the ritual was complete. The women who give themselves to the succubus would become their demonic sexual servant gaining eternal beauty and life.\n\n\"No, it can't be true, no fucking way.\" He said to himself as he heard a car pull up outside his window.\n\nHis heart began to race a little thinking she was back to finish him off. He decided to wait for her to enter her house then he would head to his car and get the hell out of here. He heard her car door open and close and waited to hear her enter her house but then he heard something much worse, a knock at his front door. His stomach turned as he didn't know what to do now. He heard a knock again moments later as he got up and grabbed his keys thinking maybe he could slip out the back door and escape. He went to leave but was stopped when he opened his bedroom door and Victoria was standing right there.\n\n\"Holy shit! Vicky you scared the hell out of me.\"\n\n\"Sorry, the front door was unlocked and I wanted to check on you.\"\n\n\"Really?\" He said knowing he had locked the door. \"I got a different impression last night.\" \n\nShe glanced over at his computer seeing the article he had been reading and now knew that he suspected what she truly was.\n\n\"Where are you going?\" She said seeing the keys in his hand.\n\n\"Just to meet a friend, that's all.\"\n\n\"Which friend?\"\n\n\"What are you my mother?\"\n\nShe looked at him with a serious expression before she said \"Can I make a suggestion?\"\n\nRick swallowed a little nervous as to what her intentions were. \"What's that?\"\n\nShe reached into her pocket and pulled out an envelope handing it to him. \"Take this.\"\n\nRick grabbed it a little confused looking at it and pulling out what looked like a plane ticket. \"What's this?\"\n\n\"Leave, go spend the rest of the summer with your parents.\"\n\n\"Wait.... what?\"\n\n\"Get away from here, get away from me.\"\n\n\"What the....... I don't understand?\"\n\n\"You were right, and I know you have figured it out by now, what I am and what I've been doing.\"\n\n\"But then...... why? This was all just a plan to kill me? After everything we...........\"\n\n\"You need to get away from me so I don't, that's why I bought you this ticket you idiot.\"\n\n\"But, this is all so.......?\"\n\n\"It doesn't matter, now run, run away and forget about me, you are a great guy Rick and...... you deserve more than this, But you need to leave before.......\"\n\n\"Before what?\"\n\n\"Before I lose control.\"\n\n\"What do you mean lose control?\"\n\n\"Nessira will soon figure out what I am doing and take control of me, that's why you need to leave and leave now.\"\n\n\"Wait, what about you?\"\n\n\"It doesn't matter what happens to me.\"\n\n\"It does to me!\"\n\n\"You don't get it, I made a deal with the devil.\"\n\n\"Yes and now you're risking your life to save mine, I can't just leave you.\"\n\n\"You have to.\"\n\n\"No, come with me!\"\n\n\"It's not that simple, I can't just leave, if you are with me you will still be in danger, you have to run.\"\n\n\"No, I won't leave you, I can't.\"\n\n\"Rick I am struggling right now, I want to rip your clothes off and fuck your brains out, and if this conversation keeps going I may not be able to stop myself.\"\n\n\"And my motivation to run is?\"\n\n\"This is no time for jokes, you have to go.\"\n\n\"I can't.\"\n\n\"You have to!\" She shouted at him as her eye's glowed red in front of him and her voice changed as well becoming darker. \"Oh god, it's too late.\" She said looking at her hand watching her fingernails extend a little.\n\nRick was watching her for a moment as she seemed to be transforming but he soon got his wits about him and ran passed her heading for the front door. He thought he may have a chance but when he opened the door something hit him from behind knocking him to the floor. He looked up and saw Victoria her eyes were now red and two small horns sticking out of her forehead.\n\n\"I warned you, and now it's too late.\" She said grabbing him by the throat picking him up and throwing him to the floor.\n\nRick struggled to catch his breath as she was suddenly down close to him staring in to his eye's with her cold black stare. He was afraid to move as she looked him over smiling to herself before she pulled him in kissing him. As scared as he was he still enjoyed the kiss with her as she seemed to have some feeling and passion behind it.\n\n\"I'm sorry about this.\" She said to him before he began to feel dizzy and he fell to the floor blacking out.\n\n-------------------------------\n\nWhen he awoke he looked around but it was hard to focus. He knew he was laying down on something but he wasn't sure what but he soon realized his arms and legs were strapped down and he could not move.\n\n\"What the fuck..... where am I?\" He asked.\n\n\"He is ready my child, it is time to finish him and take your place at my side.\" A demonic female voice said as his eyes began to focus.\n\nHe saw Victoria standing there like he saw her before with red eyes and horns. She seemed to be wearing some sort of red skin tight dress which left little to the imagination as a piece of cloth covered the front and back but not her sides. He then noticed the statue which had the same glowing eyes but seemed to be able to move as it had its hands on her shoulders.\n\n\"He is ready, the time has come.\" She said letting her go before Victoria walked over to the table..\n\n\"Do you still find me beautiful?\" She asked in a voice a little deeper than normal.\n\n\"Oh yeah, the whole I am the Gatekeeper look really does it for me.\" He said jokingly seeing how she'd respond.\n\n\"Yes boy,\" Nessira said. \"Look at this exquisite creature you helped create, and soon I will be free to return to this world and Victoria will have everything she ever wanted, you should be proud, we couldn't have done it without you.\"\n\n\"It is time.\" Victoria said as she climbed on to the table with him lifting up the dress showing the she was not wearing any sort of panties and took his cock sliding it inside herself.\n\n\"Oh fuck!\" he said as the feeling was very nice.\n\n\"Relax Rick, it will be over soon.\" She said as she pulled a knife out from behind her dress.\n\nIt had a gold handle and a curved metal blade with some sort of ancient writing on it. He knew there was nothing he could do to stop this from happening as she motioned her hips starting to milk his member again.\n\n\"Woah that looks sharp!\" he said getting more nervous.\n\n\"I'm sorry.\" she said in almost a whisper like she didn't want Nessira to hear her.\n\n\"Victoria, I want you to know I forgive you.\"\n\n\"What?\" She said looking down at him.\n\n\"I forgive you, I don't know who broke your heart but he was a fool, and if this is what you need to do to heal or feel justified than so be it, I will die happy knowing I died to giving you what you needed.\"\n\nShe stared at him with a look of sadness in her eyes as she listened to his words. Rick closed his eyes and enjoyed the sensation of what he knew would be his final orgasm as it built.\n\n\"You see, he has accepted his fate, now finish him and become a goddess who answers to nobody but me!\" The statue said as Victoria continued to rhythmically move her pelvis.\n\nRick was enjoying the sensation as she moved on top of him. Her moans grew louder as she milked his cock with the knife in hand ready to stab him in the heart the moment he finished releasing Nessira on to this world and becoming the creature she looked like now.\n\n\"Yes, it is almost time.\" Nessira said as she stepped behind her watching the ceremony closely.\n\nRick opened his eye's to see what was happening as Victoria wiggled and writhed on top of him with the demonic statue behind her ready to be reborn. Rick wanted to say something but wasn't sure what. If this was the last thing he ever said to her what would it be. Then it finally came to him.\n\n\"Victoria.............. I love you.\" He said as he felt it coming to an end.\n\nVictoria took the knife in her hand ready to strike but was surprised by what he had just said to her. She slowed her motions as Rick shut his eyes bracing for his death. Victoria was struggling but then something came over her as Nessira used her power to control her. She was suddenly not in control of her body and began to move faster. She was enjoying the sensation but knew what would happen when it ended which left her torn. She moved harder and faster until his cock erupted inside her. She slammed the knife down right into his chest stabbing him directly in the heart. Blood poured from his body even from his mouth as he coughed. With his final breaths he glanced up looking at her with sorrow in his eyes. \n\n\"NO!\" she yelled out seeing what her master had made her do. She leaned down and whispered in his ear \"I'm so sorry, I'm so sorry.\" she said watching the man who said he loved her cough up his own blood. \n\n\"It is done, finally!\" Nessira said while Victoria ignored her and focused on Rick who was still dying beneath her.\n\n\"Oh God no.\" She said trying to comfort him the best she could. \"I'm sorry Rick.\" She continued before she leaned down and whispered in his ear \"I love you.\" Before squeezing his hand in hers. \n\nShe looked over at her master who was beginning to emerge from her statue like shell. The pieces fell off revealing her skin as she watched herself become free at last. Victoria slid off the table while Rick struggled to stay alive almost refusing to let go of her hand. She looked back at him and and bent over kissing him as his vision began to fade. \n\n\"It will be better soon, I promise.\" She said to him.\n\nHe coughed a few more times before his hand fell from hers. He laid there lifeless and Victoria focused her attention towards her master as a rage began to fill her. She walked over to her to examine her masters new body. Nessira spread her wings stretching with a smile on her face as she was finally free.\n\n\"You did it my child, now we will rule this world and you can have anyone you choose.\"\n\n\"Funny you should say that because I've actually had a thought about that.\"\n\n\"Good, bring him to me and we will have him on his knees ready to worship me and be your pet.\"\n\n\"Yes, worship.......\" she said looking down at the knife she had made her use to kill Rick moments ago. \"I had a different idea master.\"\n\n\"And what is that my child?\"\n\nVictoria took the blade which still dripped with Rick's blood as his body lay lifeless on the table behind her. She had one chance for this to succeed so she mustered her strength and before Nessira even knew what was happening she had plunged the blade into her chest. Nessira looked down in shock as he blood began to pour from her wound. Victoria pushed the knife in deeper as her master fell to her knees in pain.\n\n\"Why? I gave you everything you wanted?\"\n\n\"Yes you did, but then you took away the only thing that mattered to me.\"\n\n\"You fool, all men are alike, he will break your heart just like all the others.\"\n\n\"Maybe, but I'm willing to take that chance.\" She said pulling the knife out of her and licking the blood from it feeling a power enter her body and knowledge that she knew could help Rick.\n\nNessira fell to the floor before she began to turn to dust crumbling at her feet screaming in pain until she was nothing but a pile needing to be swept up. Victoria turned back to her fallen love and ran to his side. She checked him over knowing he had passed. She placed her hand on his chest where the wound was and began to chant something in a demonic language no human could understand or speak. A red light began to form under her palm as she spoke with a darker voice. Her eyes glowed bright red as she sprouted her own wings after succeeding in receiving some of Nessira's power from tasting her blood. The house began to shake and her voice grew louder as she continued to chant hoping the spell would work. \n\nThe blood began to pull back along his skin slithering back into the hole in his chest as his wound began to shine brightly. Whatever she was doing seemed to be working as she waited until Rick finally took a breath and she stopped the chant.\n\n----------------------\n\nRick awoke to the sun once again shining brightly through his bedroom window. It took him a moment to focus until he suddenly jerked upright looking all over the room surprised to be alive. He looked down at his chest which didn't even have a scar where the blade pierced him. He had no idea how he was still alive or what had happened. He jumped out of bed looking over at Victoria's house which seemed dark and quiet.\n\nHe soon realized he was naked so grabbed whatever clothes he could find getting dressed before he ran downstairs and out the door rushing to her house. He stopped out front looking through the window seeing the table he had been strapped to and a pile of what looked like dust on the floor. He knocked on the door frantically but nobody answered. He tried the handle which turned as the door was unlocked. He ran inside looking all over the room and at all the evidence that suggested it all really happened.\n\n\"Victoria?\" He called out searching all over the house for her. \"Victoria?...... Vic?\"\n\nHe searched and searched but the home was empty. Her car was still in the driveway but she was nowhere to be found. He pulled his phone out and tried to call her but soon heard a vibrating noise as her phone was on her bed.\n\nRick felt a little heart broken that he couldn't find her. He did one last look all around the house but there was nothing. He cleaned up the living room the best he could so there would not be a mess if she came back. After he finished he stepped out the front door locking it so no one could get in there except for her if she came back. He slowly walked back home not sure how to feel at the moment.\n\nAs days went by he began to feel a little strange. He wasn't sure exactly what the problem was but he felt hungry and weak. He would eat and eat but it seemed like nothing could satisfy the hunger he was feeling. He began to think it was a broken heart he was suffering from from how much he was missing Victoria. With each passing day he began to feel weaker and weaker on top of being hungry. He had no idea what was going on with him and honestly wasn't even sure how he was still alive to begin with. He didn't know how he survived that night and he knew if there was something wrong with him that Vicky would know what it was but she had vanished and there was no sign that she was coming back.\n\nOne night as he was becoming more and more tired he did have a vision. He didn't know what was happening at first but he awoke to a bright light shining into his bedroom from the same large moon he had seen before in his dreams. He was a little excited thinking Victoria may have returned but as he looked all over he saw nothing. The was no sign of her anywhere so he got up and went to the window looking across the way to her room only to see it empty as well.\n\n\"Victoria?\" he called out hoping for some answer. \"Victoria I need you!\"\n\nHe turned as he heard his bedroom door creek as it opened slightly. He walked over looking out into the hallway not sure what was going on. He headed downstairs as he began to hear a voice. It was very faint like a whisper but it got louder as he went. All it was saying was one word over ad over again but it was definitely Victoria's voice.\n\n\"Feed.\"\n\n\"What? Victoria where are you?\"\n\n\"You need to feed.\"\n\n\"What do you mean? Please, I don't feel right, I need your help.\"\n\nHe turned and saw someone sitting on the couch in the living room with their back to him. At first he was excited thinking it was her and moved quickly until he realized this woman had dark hair and not the beautiful blonde of Victoria's. He stepped towards her slowly at first not sure who it was or what was going on exactly.\n\n\"Hello?\" he asked hoping for a response as he stepped even closer putting his hand on her shoulder. \"Hello who are you?\"\n\nThe woman turned to look at him but he was confused when he realized it was Cindy but something was off. Her eyes were pitch black like Victoria's in dreams before. She didn't move or say anything for a while as he backed away slightly not sure what was going on. Finally she opened her mouth and said only one word to him but in Victoria's voice.\n\n\"Feed!\"\n\nRick awoke in a bit of a panic breathing heavily as the next morning had arrived. It was a cloudy and rainy day and he was a little freaked out by what he had just seen and was trying to rationalize it. He still didn't feel right and was still hungry and weak as he pulled himself out of bed and tried to prepare for the day.\n\nAfter he was up and showered he went to the grocery store seeing if he could find some energy bars or anything that might give him the pick me up he needed when he ran in to Cindy who was there shopping as well. He was a little shocked and even freaked out a little, this was the first time he had seen her since the party and it was odd given the dream he had just went through the night before. She was a embarrassed when she first saw him given her actions from the party but she still said hi.\n\n\"Hey Rick, how are you?\"\n\n\"I'm alright I guess, you?\"\n\n\"I'm ....um ....... look I really want to apologize for what happened at the party with me and Eddie, I don't know what came over me.\"\n\nRick thought about it for a moment and realized that maybe Victoria had had something to do with it. It made sense now given what she was and what she had been trying to accomplish. Realising this he was able to easily forgive her but he also saw her a little differently.\n\n\"It's no problem, really.\"\n\n\"I'm sorry I just feel like I should make it up to you.\"",
        "As she went on he began to look her over. Something about her seemed different to him all of a sudden. He suddenly wanted her very badly, like if they weren't in the grocery store he would almost rape her.\n\n\"Rick? You feeling alright?\" She asked looking concerned.\n\n\"Huh? Sorry I haven't been feeling well lately.\"\n\n\"You don't look well, if you want I could come by this evening and cook you supper, you look like you could use a home cooked meal, knowing you you've been living off hot pockets and microwave pizza. I mean as long as you don't have other plans?\"\n\n\"Um... No, no plans, sure that would be cool.\"\n\n\"Okay, I'll see you around 5ish?\"\n\n\"Sounds good.\" He said as Cindy smiled at before they parted ways.\n\nWhen he got home he jumped in the shower again trying to get himself cleaned up even though he still looked tired and drained but he did the best he could. 5:00 got closer and closer and he was getting anxious waiting for Cindy to come over but he wasn't even sure why. He was still hurting over Victoria and even felt a little guilty about inviting Cindy over but it was like he needed her and badly.\n\n5:00 finally came and Cindy arrived with groceries in hand ready to cook dinner for him. He opened the front door and let her in but he never even heard a word she said as he just seemed to stare at her like she was a piece of meat ready for him to devour. He tried to clear his head but he felt like he was no longer in control of himself as he was just filled with this hunger he didn't know how to fill.\n\n\"So, I'll start cooking if you want to help me?\" She said as she headed for the kitchen when she began started taking things out of the bags and placing them on the counter. \n\nRick followed her into the kitchen almost circling her and stalking her like a predator. He walked around behind her as she turned back and smiled at him. He couldn't hold himself back any more as he wrapped his arms around her waist and began to kiss the side of her neck.\n\n\"Woah there, Rick what are you?\" Cindy was confused at first but she began to feel something strange come over her. \n\nShe began to feel wet between her legs and her breast began to feel very sensitive like she wanted him just as much as he needed her but had no idea why. She didn't know what was wrong with her but she turned around and kissed him as he picked her up placing her on the counter before ripping her shirt open. He grabbed her bra and broke it in half with ease before he began sucking on her breasts getting her even more turned on. Cindy needed him badly as she began to feel the way she did the night Victoria made her make out with Eddie like she couldn't control herself. He slid his tongue down her stomach as he pulled off her pants throwing them on the floor. He grabbed both her legs placing them on his shoulders before he grabbed her panties with his teeth and ripped them open.\n\nCindy laid back as Rick's tongue began to poke and explore her slit tickling her clit a little. Rick was tasting her and she tasted amazing like she was what he needed. He teased her more and more making her squirm before wiggling his tongue further inside her.\n\n\"Holy fuck!\" She yelled out as he continued to pleasure her.\n\nHe licked her all throughout making her moan and writhe uncontrollably. She grabbed his hair squeezing her hands as she wanted more from him. He pulled his tongue out before he pressed his lips against her clit and began to suck on it as she screamed out her pleasure. She bucked her hips trying to get him to give her even more attention like she was begging for it. Her pussy was dripping wet as he pulled his mouth away. She looked down at him watching him remove his pants and underwear.\n\n\"Oh fuck yes, oh God I want your cock inside me so fucking bad!\" She said as she couldn't wait for him.\n\nRick finally got his clothes off as Cindy was squirming on the counter waiting for him to fuck her. He grabbed her legs and pulled her close lifting her up and lowering her down on his cock. She let out a primal scream like his cock was the greatest thing she had ever had as it slid inside her aching pussy. He pushed her up against the refrigerator as she wrapped her legs around him. She lifted her hands over her head grabbing the top of the fridge holding on as Rick unmercifully fucked her. She arched her back holding on as Rick thrust his cock in and out of her. The pleasure was almost too much for her to handle.\n\nCindy was too distracted to notice that Rick's eyes had suddenly turned pitch black while his fingernails began to grow. He ran his hand up her leg and grabbed her breasts caressing her nipples a little making her squirm even more. Horns began to sprout from his head as he didn't really feel human anymore. Cindy opened her eye's looking down at him.\n\n\"Holy fuck, Rick... what the? What the hell are you?\" She said seeing his appearance and being frightened but still so stimulated that she wasn't sure what to do.\n\nShe screamed in half fear and pleasure as Rick continued to fuck her until he let out a roar that sounded demonic and Cindy finally gave out her own scream of passion. Her orgasm surged through her body stronger than any she had ever felt before. She could feel Rick's cock squirting inside her and the warmth of his cum just making her experience even more pleasurable. She didn't care what was happening to Rick or anything else as her whole body quivered as waves of pleasure flowed through her over and over again while at the same time she felt a warm feeling sweep through her like it was flowing through her pussy and then in to Rick.\n\nThe last thing she felt was one last amazing orgasm before everything went dark and she was out cold. Rick held her limp body up before placing her back down on the counter. He slid his cock out of her seeing many different types of goo drip from her as he backed away feeling amazing. She was still breathing but she probably wouldn't awaken for a while. Rick looked at his reflection seeing the creature he had become but he finally felt the best he had in days.\n\n\"What the fuck!\" He said as he saw himself.\n\n\"Wow it really worked.\" He heard a voice say from behind him as he spun around and saw Victoria sitting on the opposing counter wearing a little red nighty.\n\n\"Victoria, Is that...... What the fuck?\"\n\n\"You were dead, it was the only way to save you.\"\n\n\"What the hell am I?\"\n\n\"You are like me now, you are an Incubus.\"\n\n\"I'm a............. and Cindy, will she be?\"\n\n\"She'll be fine after some rest, but she tasted so good didn't she?\"\n\n\"She was amazing, I almost want more.\"\n\n\"No, you'll kill her if you do.\"\n\n\"Where the hell have you been?\"\n\n\"I had to let you complete the transformation on your own.\"\n\n\"Transformation, but that dream?\"\n\n\"I'm sorry, I couldn't let you die, you........................ you mean too much to me.\"\n\nHe walked over to her as she had a look of concern in her eye's. She wasn't sure how angry he was with her and she was a little worried until he took her and pulled her close kissing her and holding her tightly in his arms. As many question as he had he didn't care, he missed her so much and was just happy she was back.\n\n\"I missed you so much!\" He said.\n\n\"I'm sorry I did this to you but I had to save you.\"\n\n\"I don't...... I don't know what I am or what you did to me, just............... just please don't leave.\"\n\nShe placed her hand on his face \"I will never leave you again.\" She said before kissing him again as he picked her up in his arms and carried her to the living room.\n\nHe dropped her on the couch pressing his lips to hers as she wrapped her legs up around him. He had just fucked Cindy but he still had lust for Victoria that needed to be quenched. He turned her over lifting her nightgown to see her amazing ass before he slid his still hard cock between her legs. Victoria gave out a moan of approval as she leaned back towards him. He ripped her gown open grabbing her breasts and squeezing them in his hands while kissing the side and back of her neck.\n\nRick and Victoria fucked in the living room while Cindy remained unconscious in the kitchen covered in sweat and other juices. She was breathing but wouldn't awaken for a while so they could be as loud as they wanted. Both of them were now in their mostly demonic form as the passion continued. Victoria had sprouted a tail that had curled around Rick's balls making his pleasure even more intense as it squeezed them. His sprouted as well curling up between his legs and tickling her from the front as he continued his thrusts. She kept her wings retracted while he continued to do her from behind enjoying every moment now that she had returned to him.\n\n\"Oh fuck!\" She said. \"I've wanted to fuck you on this couch since the night we watched Star Trek together.\"\n\n\"So you're the reason I jizzed all over the coffee table?\" He said licking her earlobe\n\n\"I just wanted to see my prize.\"\n\n\"We could have just fucked that night.\"\n\n\"You weren't ready, I wanted you ready to pop when we finally did it.\"\n\nHe pulled her up even closer to him as he whispered in her ear. \"You could have had me the day you introduced yourself if you wanted.\"\n\n\"OH FUCK!....\" She said as he thrust a little harder into her. \"Don't stop, just fuck me forever!\"\n\n\"As you wish\" he said nibbling her ear and kissing her neck as his fangs grew a little before he even bit her making her moan even louder.\n\nThe continued until he began to thrust even harder as she started to whine as the pleasure grew between her legs. Her tail squeezed his balls even tighter making him moan as well. The sex had been very good when he was human but now they were both like this all she wanted was his cock inside her for eternity. He was even better now that he was an Incubus and it wasn't long until her pussy began to quiver spasm before he began squirting into her as she screamed her lust as loud as she could.\n\nThey both collapsed on the couch wrapped in each other's arms still reeling from their orgasms. They sat there for a little while just enjoying each other's scent and touch. After a few moment they both started to return to normal as their horns retracted and their eye's changed back to their normal color. Rick looked down at the beautiful woman in his arms as he held her as tight as he could almost afraid to let her go. He moved a strand of her blonde hair away from her face to get a better look at her as she smiled up at him.\n\n\"So what happened to you?\" He asked staring into her eye's.\n\n\"What do you mean?\"\n\n\"Why did you sell your soul, so to speak?\"\n\n\"That's kind of long story.\"\n\n\"I have time, I have nothing but time for you.\"\n\n\"Well, I was married once.\"\n\n\"I had kinda figured that.\"\n\n\"I married the love of my life, or so I thought. We were together for 35 years and things were going great until I found out he was cheating on me with a younger woman.\"\n\n\"35 years?\"\n\n\"Yeah, told you I was older than I look. Anyway when I discovered this I told him I was leaving him and taking him for everything he was worth. So instead of losing his fortune he hired someone to run my car off the road with me in it.\"\n\n\"That dick!\"\n\n\"To say the least, but I found myself at the bottom of a ditch barely alive when I heard a voice in my head. It reached out to me healing my wounds and making me young again.\"\n\n\"Nessira?\"\n\n\"Yes, and I used my new strength and beauty to find him and well, basically fuck him to death!\"\n\n\"Really? He didn't deserve that.\"\n\n\"Excuse me?\"\n\n\"I mean, I've had sex with you a few times now and dying like that would be a blessing, I know because I have.\"\n\n\"That's disturbingly sweet, but I didn't just fuck him, I used my new found beauty to lure him into bed before I went full demon and terrified him until he died of a heart attack.\"\n\n\"Really? I find your demon form sexy.\"\n\n\"Well Maybe you haven't seen my full form yet.\" She said leaning in close to him teasing him a little.\n\n\"Looking forward to it.\"\n\n\"But do you understand why I didn't want to tell you?\"\n\n\"Victoria, what he did to you was horrible, I don't blame you at all for what you've done, he deserved it if not worse for what he did to you!\"\n\n\"What about the other two virgins? They didn't deserve any of this.\"\n\n\"You feel bad about that?\"\n\n\"Of course I do, I'm not a monster!\"\n\n\"Look, yes they probably didn't deserve what you did to them but if they died underneath you looking up at your beautiful face just like I did, maybe you gave them the greatest moment of their life.\"\n\n\"Interesting way of seeing it.\"\n\n\"All I'm saying is I forgive you, you just need to forgive yourself.\"\n\n\"I love you so much, and that's something I never thought I'd say to anyone ever again.\"\n\n\"I love you too, and now that we are both like this I think it's safe to say we are going to have some fun, and that's what life's all about right, having fun?\"\n\n\"As long as it's with you.\"\n\n\"Yeah, maybe let's not tell my parents about this?\"\n\n\"You think? Yeah I don't really want to tell them how I seduced their son all summer and then turned him into a sex demon thank you very much, or about our victims either.\"\n\n\"You mean like sleeping beauty over there on the counter?\" He said referring to Cindy who was still passed out.\n\n\"Yeah, we should probably bring her home or something?\" She said looking over at her.\n\n\"Later.\" Rick said placing his hand on her face before he leaned down and kissed her again.\n\nThey shared a moment of passion before the rolled off the couch together and began to fuck again on the living room floor. He could have fucked her a hundred times that night just out of how much he had missed her. It didn't take long before they both went full demon spreading their wings, horns, claws and everything else as he thrust himself into her again. they pleasure each other, clawed and bit each other screaming out their demonic lust for each other. If anyone saw or heard them they would have probably run away screaming in terror but they didn't care. They were together and there was no plan, no master, or anything to keep them separate anymore. Rick had found his partner in life and Victoria found the man who fixed her heart."
    ],
    "authorname": "maestro84",
    "tags": [
        "succubus",
        "erotic dream",
        "absorb",
        "virgin",
        "corruption",
        "blonde",
        "teenager",
        "blow job",
        "seduction"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/victoria-the-girl-next-door"
}