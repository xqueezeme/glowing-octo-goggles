{
    "title": "My Plus One",
    "pages": [
        "This one is for the \"\" As always, your votes and comments would be much appreciated. A lot of you have asked for longer stories. Happy to oblige, this is longer than what I usually write and a bit of a slow burn, and I hope you enjoy it.\n\n\"Aw, mine looks like a dick, a big fat dick.\" Marina looked down at her phallic-shaped cake she'd been carefully trying to decorate, wondering if she should even bother to try and finish it, it looked like such a disaster.\n\n\"What's it supposed to be?\" Silver-haired Irena smirked from across the table as she artfully added the finishing touches to her perfect, sparkly pink, butterfly-shaped cake.\n\nSmoothing her palette knife up and down its twelve-inch length, Marina wrinkled her nose. \"It's supposed to be a rocket ship for my nephew's fifth birthday. But no way can I let the kids get a look at this, unless I want to scar them for life.\"\n\nHer pretty blonde sister Annika laughed as she added the highlights to the comical googly eyes on her ghostly white cake, that looked good enough to be in a bakery showcase. \"Yeah, I'm sure mom wouldn't find it too funny if you pulled out a big, honking penis cake at the end of the party.\" Then she tipped her head and asked, \"And why is it black, because it's so big?\"\n\nAs the others all joined in and giggled, Marina rolled her eyes as she worked at making the tip a little pointier, and less smooth and helmet shaped, as she tried to explain. \"I was going for a shiny gray, like a spaceship, but I guess I got carried away with the food coloring, and it turned out a deep, dark black. Mind you, since this is the closest I've been to one in months, I might just take it home and eat the whole thing myself... really slowly, inch by inch.\"\n\nThe ladies were still snickering, when their tall, dark uber hunky, instructor Henry walked back into the room, caught the tail end of what they were saying and sidled up to take a look. Chuckling the moment he saw it, he shot Marina a grin and told her, \"It might not be too bad if you could make the rocket boosters at the bottom look less round and more cylindrical, because right now they look a pair of...\"\n\n\"Yeah, I know.\" Marina agreed, smirking back at him, as she realized that the foot long dick, she'd inadvertently created, also had a pretty impressive looking pair of gonads dangling from the base.\n\nThe heat in his piercing, silver-blue gaze was nearly enough to melt her panties as he looked into her eyes and quietly murmured, \"Why don't you stay after class, and we'll see if we can fix it.\"\n\nSwallowing past the lump in her throat, she nodded. \"Sure.\"\n\nHer sister looked positively giddy as she caught the interaction going on between the two; flashing a teasing grin at Marina as Henry began to make his way around the table to look at the other cakes. Ignoring her sister's pointed look, Marina went back to smoothing the icing, while her mind wandered off, wondering what it would be like to enjoy a little alone time with someone so insanely hot.\n\nEyeing him carefully in his perfectly fitted chef's whites, as he stopped to comment on each cake, she guessed he stood about 6 foot two, a nice height she thought, to her five foot seven. With the most gorgeous, long-lashed slate blue eyes she'd ever seen. And such thick, lush dark hair, that she could just imagine running her hands through, while he was busy between her legs getting her off, making her cry out, 'Oh god, Henry, yessss!'\n\nThen her mouth fell open and she looked around the table as she realized that last part about her fantasy of having her come on his tongue, just kind of slipped out. While the rest of the ladies giggled at her outburst, she noticed the object of her desire, was cocking an eyebrow, and giving her a very naughty grin.\n\nHer cheeks feeling like they were burning up, Marina wished she could crawl under the table and disappear. Straightening her spine, trying her best to resume her composure, she had to force herself to try and pretend that she hadn't just invited him to do a helluva lot more than take a longer look at her naughty cake.\n\nHoping the laughter would die down once she left the room Marina decided to go and wash up in the bathroom to try and get the food coloring off her hands. When she came out, she realized everyone was gone. Well, everyone except for hot stuff, who was still quietly chuckling as he looked over her kinky cake.\n\n\"I've got an order for a big, black penis cake for a bachelorette party that would love something like this,\" he told her as he built up the tip to make it look even more like a phallic symbol, even giving it a slit. As he worked on spicing it up even more, Marina joined in and laughed; glad he wasn't rubbing in the fact that she was still terrible at cake decorating, even after a half dozen classes.\n\n\"Can it be fixed?\" she asked, stepping in beside him.\n\nShaking his head, he put down his palette knife. \"I think it might be better just to start over. And you can take this one home and enjoy it. I've got some plain white cake slabs in the fridge that we can cut into shape, and it shouldn't take long to decorate.\"\n\n\"But I hate to waste your time.\" Watching him get the other cake out, Marina felt guilty about making him stay after the class, wondering if she shouldn't just go buy a cake and forget about going to the trouble of trying to make another one.\n\nAs he set down the new cake, he just shrugged. \"No worries. I've got four dozen cupcakes to decorate for a kids' party at the local women's shelter, so we can work on those while we're at it.\" She watched as he pulled over a big bowl of white icing and added a few drops of orange food coloring, mixing it all together as he explained, \"And I can show you a quick way to decorate a bunch of them at once, using a star tip, so they don't have to be so precise.\"\n\nOnce he'd filled a piping bag, Marina watched amazed, as he quickly piped perfect little orange stars over six of the tiny cakes. \"Wow. They already look like pumpkins. You're just so good at that.\"\n\nHenry just smiled as he kept squeezing out the little stars. \"Once we add a brown stem to the top, a green leaf for contrast and some darker icing for the eyes and a gap-toothed smile, they'll be done,\" he said as, one by one, he added the finishing touches to show her what he meant.\n\nWhen he had six of them done, he handed her the piping bag. \"Now, why don't you give it a try?\"\n\nFeeling like she had two left thumbs, Marina bit into her lip and tried to remember how to hold the bag, without having the icing shoot out the back end, deciding she'd embarrassed herself enough for one day without coating herself in orange frosting.\n\n\"Here, let me help you.\" Seeing her hesitate, Henry got in behind her and slipped his arms around her. \"Remember, you twist the bag in the middle, pushing the icing to the end, making sure to get all the air out. Then you hold it closed with your thumb as you pipe, directing the tip with your other hand.\"\n\nAs he helped her manage the piping bag, Marina was so hyper aware of his big, hard body pressed against her back, she could feel her breathing getting choppy as her heart began to pound. Breathing him in, she liked that he smelled like a man should smell, kind of musky with a hint of something sweet, possibly vanilla, considering that he was a pastry chef.\n\n\"Like this?\" she asked, wrapping her thumb around the bag, to try and keep it closed to hold it all in, while also trying to remember how to breathe.\n\nHe leaned in even closer to guide her hand. As he wrapped his hand around hers, she couldn't tear her eyes off of his darkly matted forearms or the little dark hairs on the top of each long, lean finger. She'd always loved the sight of a man with body hair, especially dark and thick like his, it made him look so manly.\n\nHer mind wandered off, imagining how hot he'd look naked with a thick patch of dark chest hair trailing all the way down his body, to what she already knew would be something she'd love to explore.\n\nThen he spoke again, and her head snapped up, and she remembered where she was and what she was supposed to be doing, when he said against her ear, \"That's it. Now keep a steady pressure on the bag, and squeeze out a star. But then ease up, so you don't put a point on it.\"\n\nWhen she finally managed to turn her focus off of her instructor and his nice, hard body and back onto icing the cupcake, when she looked down, she couldn't believe she'd actually done it!\n\nInstantly, her face lit up with a smile, she just looked so pleased with herself after she'd managed to create a single, perfect little star. When she turned her head and looked back at him, the way she was grinning from ear to ear, Henry was tempted to touch a kiss to the end of her nose. She just looked so adorable and so thrilled that she'd managed to accomplish such a tiny little feat.\n\nSuddenly, realizing how close together they were standing, he took a step back, and cleared his throat. \"Looks like you've got the hang of it. Just try and keep the stars close together and nice and even, while I put a base coat on your cake, so the crumbs won't ruin the icing.\"\n\nWatching her hunch over each little cupcake, she looked so tense. Without even thinking he stepped behind her, ran a hand over her shoulders, and gently massaged his way down her spine as he told her, \"Relax. Don't get so tense, Marina. This is supposed to be fun, remember?\"\n\n\"I know.\" She nodded, fighting the urge to shiver. Just the feel of his hands on her was enough to get her all tingly and get things heating up down below. It had been so long since she'd enjoyed the touch of a man, she barely remembered what it felt like. But knowing he was just being kind she knew there was no point in letting her imagination run away with her.\n\nAfter doing as he'd suggested and shaking out her shoulders, she reached for the larger tipped piping bag with the chocolate icing and tried to add a stem to the cupcake. \"Uh, oh,\" she said, biting into her lip and wincing when she saw she'd created something obscene looking again.\n\n\"What's wrong?\"\n\nMarina covered the cake with her hand, almost afraid to show him. \"Promise you won't laugh?\"\n\nTrying to keep a straight face, he said, \"I promise.\"\n\nFlinching, she looked up to see his reaction as she uncovered what she'd done. \"It looks like a bum hole on a big orange butt. I think I pushed it in too far, and even gave it a crack.\"\n\nHenry threw back his head and laughed. \"Looks like you've got a real knack for creating dirty cakes.\"\n\nMarina broke up, too, as she studied her handy work with a shrug. \"It's a gift, I guess.\"\n\nThey kept laughing as Henry got into it and piped two big boobs on another cupcake, then added a pair of very erect brown nipples. \"So, what do think of that, naughty enough for you?\"\n\n\"I think we'd better make sure that none of these get to the shelter, or they'll be calling the cops.\"\n\nStill chuckling, he agreed. \"I think you're right.\" He nodded at the bag with chocolate frosting. \"Pick up the bag again, and I'll show you how to make a stem.\" With his hand wrapped around hers, he gently helped her squeeze the bag to show her how it was done. \"I just push the tip in where I need it to go, kind of deep, and then I slowly drag it out.\"\n\nLifting her gaze to meet his, her eyes dancing with amusement, he realized what he'd said. \"Nothing lewd about that,\" she quipped as he helped her drag out a short, brown stump. \"It's not very long though, is it?\" she remarked, as she studied the little nub.\n\nChuckling, Henry rolled his eyes. \"It's only meant to be a little stem on a pumpkin, and not something that could get me arrested.\"\n\nTrying to pull herself together, her eyes still glinting with amusement, she smirked. \"If you say so. Guess I'd better try and keep them short and stubby, so they won't be confused with anything else.\"\n\nHe pulled out his phone. \"You mean something like these,\" he said, as he went through his naughtiest collection of cakes. Showing her everything from a naked, very well-endowed woman jumping out of a cake, to a pair of bare breasts barely covered in a lacy white bra, to his most requested design for bridal showers and bachelorettes; a huge, over-sized penis cake.\n\nHer eyes popped when she saw the last one. \"Oh, wow! And I thought mine was dirty. That looks like the real thing,\" she said, pointing wide-eyed at a picture of a long, thick, skin-toned cake that looked good enough to lick, it was just so lifelike.\n\n\"The ladies at the bridal shower all seemed pretty happy with it,\" Henry said, chuckling.\n\nWhen he went to put down his phone, Marina grabbed his wrist. \"Wait, what was that last one?\" Henry brought up the picture again and showed her an absolutely gorgeous, intricately decorated castle that had to be the prettiest cake she'd ever seen. \"Holy smokes! That's not just a cake, that's a work of art. It's just so beautiful,\" she said, turning her head to look at him, she was just so blown away by his talent.\n\n\"The governor's daughter had a medieval themed wedding, and she wanted me to create a fairy tale castle for their cake.\"\n\nAs Marina studied the intricately piped leaded glass windows, soaring towers and wooden drawbridge, complete with a moat, surrounded in shrubbery and tiny little flowers, she remarked, \"It must have taken days to put in so much detail.\"\n\nHenry nodded, recalling all the back-breaking hours he'd put into it. \"It paid off, though. She was so thrilled with it, they insisted on doubling the bill. And a year later they hired me to create a cake for her baby shower.\"\n\nWhen he showed her the cherubic baby in a basket cake, with a big pink bow on top, Marina sighed. \"Oh, that's so sweet. I'm sure she must have loved that, too.\" But then she looked up at him, curious. \"With your high-end clientele, your business must be booming. So, why would you want to waste your time teaching classes to hopeless cases like me?\" Then things got a little awkward when she noticed he went quiet and wouldn't meet her gaze. Wondering if she'd gone too far, she jumped in and said, \"I guess you've got your reasons, no need to answer.\" Picking up the piping bag again, she went back to decorating the cupcakes, hoping to let it drop.\n\nTrying to build up his decimated his bank account was his main motivation, but he wasn't about to tell her that, or he'd have to open up and tell her everything. As sweet as she was, he wasn't ready to bare his soul to anyone, just yet. Not even his brother knew what his situation really was, although they were as close as twins.\n\nKnowing she hadn't meant to pry, and hating how uncomfortably quiet things had gotten between them, he was glad when she finally lifted her gaze and looked at him. Brushing a few loose reddish blonde hairs back from her eyes, he tucked them behind her ear and decided, despite how much fun they'd been having, that they'd better stop fooling around and get back to work on the cakes. Her big green eyes locked on his, she nodded when he said, \"We should probably put these aside and get a start on your cake now.\"\n\nThough he let her do most of the work, he stayed right beside her until she'd created a pretty impressive looking rocket ship. Iced in shiny, silver frosting, he imagined it would thrill her little nephew, who she'd said was crazy about everything to do with outer space. Just to finish it off, he carefully added an astronaut waving from the cockpit, making it look even more life-like.\n\nSmiling down at their creation, Marina squeezed his arm and gushed, \"Thank you so much for taking the time to help me with this, Henry. I know Nathan's going to love it, and so will all his friends.\"\n\n\"Well, you did all the work, so no need to thank me. You've just got to relax and try to enjoy what you're doing, and you can make anything you want.\"\n\nAs they boxed up her two cakes, Marina laughed as Henry made sure to mark the one that was for her nephew's birthday with big black letters that read: Rocket Ship! so she wouldn't embarrass herself by accidentally showing up with her kinky cake. After he'd finished the last details on the cupcakes, they boxed those up, too.\n\nWhen everything was cleaned up and put away, Marina took a look at her watch and flinched when she realized it was getting late. \"I just remembered my sister was my ride today, so I'd better call an uber if I want to get these cakes home in one piece.\"\n\nHenry shrugged. \"Or I could drive you. The kids' party is tomorrow, so I've got to drop these off tonight.\"\n\n\"If you're sure it won't be out of your way. I live just north of here.\"\n\nHe winked. \"Then luckily, we're going the same way.\"\n\nGood god, after he'd gone and changed, Marina had to bite into her lip to keep from moaning. How was it possible that he looked every bit as hot in jeans and a cable-knit sweater as he did in his chef's whites?\n\nWhich had her wondering if she shouldn't just call an uber after all, unless she wanted to embarrass herself by drooling all the way home.\n\nSitting beside him in his van, she had to force her gaze out the window so she wouldn't get caught staring at his profile. He was just so good to look at, especially with that sexy five-o'clock shadow lining his jaw. Licking her lips, she imagined how amazing he'd be to kiss.\n\nShe was so deep in thought, that when Henry's phone rang, he gave her a curious look when he noticed her jump in her seat as he answered it with his blue-tooth. \"Hey, Chris, how's it going?\" he said, when he saw it was his brother.\n\n\"Okay, I guess. Though, Jenn's making me a little crazy; she's so hyped about the wedding. Now she's decided she wants everyone in costume. And I'm sure mom won't be too thrilled to hear that, after she hunted everywhere to find the perfect dress. I know she wasn't too happy about us getting married on Halloween, especially at the old Beaumont Estate that's supposed to be haunted.\"\n\n\"At least it'll be a wedding no one will ever forget.\"\n\n\"Yeah, hopefully because they had fun; and not because it was the creepiest thing they'd ever been to.\"\n\nMarina could see the amusement in his gaze as Henry grinned at her, while they listened to his brother. Changing the subject, Henry said, \"I got the sketch Jenn sent me for your cake this morning, and I've been thinking about the design.\"\n\n\"Yeah, guess you noticed, even the cake is pretty out there. I don't have to tell you, being an actress, Jenn's got a real flair for the dramatic. So, naturally she wouldn't go for anything traditional like a typical, three-tiered white cake with a pair of love birds on top.\n\n\"She had to go all out with the creepy haunted house theme, complete with a spooky grave yard, and a pair of vultures staring down at the tombstones. But since Jenn loves the way it looks, vultures and all, if that's the cake she wants, then that's the cake we're having.\"\n\nHenry chuckled at the face Marina pulled, when she turned her head and looked at him wide-eyed as Chris described their gruesome wedding cake.\n\n\"Well, I can make it for you, no problem, with vultures, bats, ghosts and goblins or whatever you want.\"\n\n\"Thanks, bro', we really appreciate it. Don't forget, Jenn wants you to come with a date, or she's threatening to sit you beside her cousin Deandra.\"\n\nHenry's brow wrinkled as he tried to think back. \"Which one was she?\"\n\n\"Remember that curvy goth chick you met at our place at Christmas, who wouldn't leave you alone. Head to toe in black, right down to her Doc Martins, with long, jet black hair, dark heavy makeup and a deep, sinister laugh that's scary as hell. If I were you, I'd find someone to bring, or you'll end up spending the night with the mistress of darkness glued to your side.\"\n\n\"Thanks for the warning.\" Looking across the car, he noticed Marina pretending to be staring out the passenger window. But the way her shoulders were shaking, obviously she was trying her best not to laugh at what sounded like the fix-up from hell.",
        "Dragging a hand over his face, and watching her out of the corner of his eye, he wasn't exactly thrilled to be discussing his private life in front of one of his students, especially her. \"I'll do what I can, but no promises.\"\n\nAll sense of fun gone his brother's tone suddenly grew serious. \"Henry, it's been nearly two years now. Don't you think it's time you got back in the game?\"\n\nThough he hated to get into it, especially in front of her, heaving a sigh he said, \"Not that it's anyone else's business, but I like my life the way it is. I'm doing just fine on my own. And I sure as hell don't need anyone screwing with my head. And have any of you even considered the fact that maybe I don't want back in the game?\"\n\n\"We just want to see you happy, Henry. And we hate to see you alone.\"\n\nHenry glanced over at Marina, anxiously biting into her lip, obviously uncomfortable with the turn in the conversation, he softened his tone. \"Chris, I've got friends I hang out with. I've got my classes, and I'm always busy. So, you don't have to worry about me.\" When the light turned green, a little embarrassed at his outburst, he muttered, \"Anyway, traffic's starting to move again, so I should go.\"\n\n\"Even just for the wedding, try and find someone to bring, okay? Mom's worried about you, too. She thinks you're on your own too much. And she's even talking about finding you a date. And I know you don't want that. Or you could wind up with one of our cousins, and probably one of the weird ones. If you do decide to show up with someone, if nothing else, it'll get everyone off your back for a while.\"\n\n\"If I thought it would work, it might be worth it.\" Deciding he'd heard enough, Henry blew out a breath and said, \"I'll talk to you later, Chris. Say hi to Jenn for me.\"\n\n\"Oh, one more thing before you go. Sounds like my stag is on again, and it's going to be tomorrow night. I know it's short notice, but I really hope you can make it. I didn't care if I had one or not, but my buddies insisted, said there was no way was I getting hitched without one last night out with the guys.\"\n\n\"So, where's it going to be held?\"\n\n\"Um... at a strip club,\" Chris said sheepishly.\n\nHenry eyebrows shot up. \"And Jenn's okay with that?\"\n\n\"Yeah, she's cool. She said as long as I look and don't touch, she's fine with it. She also told me that I should go and enjoy myself, knowing it'll be the last time I ever look at another woman naked.\"\n\nGlancing across at Marina, Henry chuckled. \"So, what's the name of this place.\"\n\n\"It's The Boom-Boom Sha-Boom Room, on one of the back service roads, out by the airport.\"\n\n\"Sounds classy.\"\n\nChuckling, Chris said, \"Yeah, I thought so, too.\" \"So, can we count you in? The foods supposed to be good. And there's a card room in back. So, we can play poker after the guys have had their fill of teasing me about getting married and forcing lap dances on me.\"\n\nMarina smirked, as Henry looking none to thrilled, shook his head and said, \"Yeah, I'll be there. So, guess I'll see you tomorrow.\"\n\nWondering what she'd thought of his outburst, Henry drove in silence for a while trying to decide what to say. Until Marina looked over at him and quietly admitted, \"I haven't dated in over a year. Just got tired of it. Tired of all the lies, and trying to impress people I didn't even know, who I mostly never wanted to see again. My family is after me too, always trying to make sure I get out. Which is why my sister Annika keeps dragging me to all these different classes, trying to prevent me from turning into a crazy cat lady if I'm left on my own, I guess.\"\n\nBrow raised, he turned and looked at her. \"Why, how many cats do you have?\"\n\n\"Right now, I've got three, but I had four till one passed away last month.\" Turning her gaze out the window, she let out a sigh, as she thought of her. \"Precious had a good life, though. She was seventeen, and pretty healthy till the end. I had her since I was seven, when I found her abandoned as a kitten in a parking lot.\"\n\nHenry reached over and squeezed her hand. \"Sorry to hear that. But I don't think three qualifies you to be a crazy cat woman, at least not yet.\"\n\nHe felt relieved when she smiled across the car at him, though he was surprised to learn that she was only twenty-four. Since he was about to turn forty, he decided, even if he was interested -- which he wasn't -- that she was way too young to even think about asking out.\n\nThen he smiled back at her when she said, \"Guess because I work from home designing interior spaces, they all worry that without a man in my life, I might also turn into a shut-in that never leaves the house.\"\n\n\"Sounds like we have that in common. I know my family worries about me. But they don't realize that I'm happy as I am, whether I've got anyone in my life or not.\"\n\n\"I hear you. My grandmother used to say you have to learn to enjoy your own company, or you'll never be good company to anyone else. And I believe that, too.\"\n\nHenry looked across at her and just stared for a moment, deciding they really did have a lot in common. For someone so young, she had a good head on her shoulders, and was really fun to be with. And she didn't take herself too seriously, unlike Tatyana, who even from the start, had never been very easy going.\n\nMarina looked up as they pulled into the driveway of the two-story yellow brick shelter, decorated top to bottom for the season. Covered in fake spider webs with two big, fat pumpkins on the front porch, and hand-crafted witches, ghosts and skeletons hanging from the eavestroughs.\n\nShe noticed Henry pulled out his phone and called to let them know that he was outside with the cupcakes. Probably because they wouldn't appreciate some strange man showing up unannounced and knocking on their door, especially at night.\n\nMarina watched the front door open, as an older lady with salt and pepper hair swept up in a bun, stepped outside to meet him. She smiled as Henry walked over to meet her, her eyes shining with delight as she accepted the big, long box of carefully decorated treats. \"Oh, the kids are going to love these, Henry. Thank you so much for taking the time to make them. You're always so kind to us.\"\n\nHenry just shrugged. \"It's the least I can do. And I hope the kids enjoy their party.\"\n\nWhen he got back in the car, Marina was eyeing him quietly as he pulled out onto the street, till finally she patted his hand and said, \"That was nice of you.\"\n\nHe shrugged. \"I like to help out wherever I can.\"\n\nShe just nodded, deciding he was even nicer than she thought.\n\n\"Have you had dinner yet?\" he asked as they drove along a busy street, lined with restaurants and shops, as they headed towards her house.\n\n\"No, I didn't have time. I was almost late for class tonight, thanks to one of my long-winded clients who wouldn't get off the phone. So, I'll probably just fix myself a sandwich when I get home.\"\n\nHenry put on his turn signal, pulled up in front of a quaint little bistro, leaned in and whispered against her ear, \"Or, while we're out, we could grab a bite to eat, so neither of us has to settle for a sandwich.\"\n\nShe was still grinning at him as he came around and opened the van door for her. She noticed as he walked her inside, with his hand at her lower back, the owner's face lit up with a smile the moment he saw them walking in together. \"Hey, Henry, long time no see.\"\n\n\"Yeah, I've been busy.\" He nodded at his lean, dark-haired friend, dressed in a fitted black suit with a narrow red tie. \"Marina, this is Nando, who runs the best bistro in town. And Nando, this...uh, my friend Marina.\"\n\nThough she grinned at his awkward introduction, Marina liked to think they were friends, because it seemed he really was a nice guy that she was hoping to keep as a friend even once the class was over.\n\nOnce he'd seated them in a quiet corner near the back, Nando lit the candle on their table, and smiled as their faces were bathed in a warm, romantic glow. \"How about a tasting plate, for the two of you to share?\" Nando suggested, as he spread white linen napkins over their laps.\n\n\"Anything you don't like?\" Henry asked Marina while Nando waited to hear what she'd say.\n\nShe shook her head, looking back and forth between them. \"No, I'm easy. I like pretty much everything.\"\n\nThat was a relief, considering how many women he knew who always seemed to be on some kind of special diet, or were just plain fussy.\n\nLooking pleased, Nando winked. \"Then I'll be back soon with some wine and your dinner.\"\n\nMarina thought it might be awkward having dinner with Henry, since they only knew each other from class. But soon they were talking about everything under the sun, and laughing a lot, too. She realized, he was just so easy to be with and so much fun, she kind of wished it wasn't going to be just a one-time thing.\n\nPlacing a platter brimming with grilled meats, vegetables and seafood between them, Nando smiled proudly at his offering as he poured them both a nice glass of dry red wine. Her mouth watering as she eyed all the delectable looking morsels on the overflowing platter, Marina just hoped that Henry wouldn't be able to hear her empty stomach growling from across the table.\n\nThe moment she tried the baked shrimp nestled in a bed of creamy, melted goat cheese, her eyes rolled skyward, and she actually moaned out loud. It was so unbelievably tasty she realized she could have happily eaten a whole plate of just the shrimp.\n\nPleased to see she was enjoying her meal, Henry carved them both a slice of medium rare steak, that he watched her savor with a side of saut\u00e9ed portobello mushrooms. That she seemed to be enjoying just as much, judging by the sexy little moans coming out of her after every bite.\n\n\"Everything's just so good. I can see why you enjoy coming here. I know I'll be back,\" she told him as she reached for a slice of warm, crispy-crusted baguette to dip into the melted garlic-laced butter from the escargot they'd already polished off.\n\nAs he topped up her wine glass, Henry agreed. \"I know, right? It's nothing fancy, but the food's always amazing.\"\n\nEven after she swore that she couldn't eat another bite, when his friend Nando came back and tempted them with three little desserts to share; a cr\u00e8me caramel, a chocolate-raspberry fudge cake with fresh whipped cream, scattered with fresh, tart raspberries and a warm, caramel-nut tart, she smirked as she reached for her fork. \"Guess I'll just have to spend an extra hour on the treadmill tomorrow.\"\n\nChuckling at how much she was obviously enjoying a little taste of the three sweets, Henry was glad now that he'd decided to stop for something to eat. Or he would never have had the pleasure of sharing such an intimate meal with her.\n\n****\n\nWhen he pulled up in front of her house, they'd had such a nice night, Marina leaned in and impulsively pressed a quick kiss to his cheek. \"Thanks for that delicious dinner, and for the ride, and especially for the help with the cake, Henry. I never could have done it without you.\"\n\n\"No worries\", he said, as he reached up and touched a hand to his cheek, surprised that she'd actually kissed him. Finally, remembering where they were, he looked out at her tidy little house, illuminated by the street lights, and remarked, \"You've got a nice place.\"\n\nFollowing his gaze, Marina shrugged. \"It's not much, but it's mine.\"\n\nIt was a comfortable looking house in a nice neighborhood. And he thought she was lucky at her age to have put down some roots, which was something he was still hoping to do one day, once he finally got his life back on track again.\n\nAlthough she said she could manage, he still got out and helped her carry the cakes up to her front door. Then he smiled the moment she turned the door handle, when they were greeted by three mewling little fur balls that seemed pretty happy to see her. After giving them each a little pat on the head, he stood back up, feeling a little awkward, he shrugged. \"Well, I guess this is goodnight.\"\n\nTempted to at least give her a kiss goodnight, even just on the cheek, he decided against it, because they hadn't really been on a date, they'd just shared a meal. Walking back to his van, he turned his head and gave her a wave, as she picked up the little white cat and waved back.\n\nFunny, they'd been having such a good time that he kind of hated to leave. Though he definitely wasn't interested in starting anything with anyone new, he had to admit, he couldn't remember the last time he'd laughed as hard or enjoyed himself as much. She was just so funny and sweet, and so easy to be with, and pretty easy on the eyes, too. Which had had him thinking about things he hadn't thought about in a long time. Like what it would feel like to get naked with her and trace his tongue over every inch of her sweet little body...\n\n****\n\nBack at his place, sitting in his boxers on the edge of his bed, Henry picked up his phone, took a look at the time, and seeing that it was almost ten, tried to decide if he should call her or not. Then a shudder went through him as he considered the alternative. Just the thought of Jenn's cousin Deandra, all in black with that hideous laugh, had him deciding that he might as well try his luck.\n\n\"Hey, Marina, it's Henry. I got your number off my class list, and I hope I'm not calling too late.\"\n\n\"Oh, hi, Henry. No, I'm still up. I didn't forget anything, did I?\"\n\n\"No. I was just thinking. I'm sure you heard the conversation I had with my brother about them wanting me to show up with a date. Since neither of us is seeing anyone, I wondered, if you didn't already have plans, what you'd think of coming to the wedding as my plus one. No one has to know that we normally don't see each other outside of class. And who knows, a Halloween wedding might even be fun, especially in an old haunted house.\"\n\n\"But am I expected to wear a costume?\"\n\n\"I'll take care of that. You decide what you want to wear, and I'll pick it up.\"\n\nMarina bit into her lip, smiling. \"So, are we talking naughty nurse, or something a little classier, like a fairy princess?\"\n\nHenry Chuckled. \"Personally, I like the sounds of a naughty nurse, but I'll have to look into the dress code. I'm pretty sure Jenn, being the bride, wouldn't want anyone in anything too sexy or over the top. So, I'll have to ask.\"\n\n\"It does sound like it'll be more fun than your average wedding.\"\n\n\"I bet it will be, knowing those two. So, what do you say, Marina, will you come?\"\n\n\"Sure, I'll come.\" Sitting up in bed, with a silly grin on her face, she stared down at her phone, half-wondering if the whole thing was just a dream. And that her hot as sin cake decorating instructor hadn't just asked her to join him at his brother's wedding, as his plus one. \"If you're sure there's no one else you'd rather ask?\"\n\n\"No. I just thought since we're both flying solo lately, it might be fun to spend a few hours together. We had some laughs after class tonight, so I'm sure we can get through a wedding together, especially one as crazy as this.\"\n\nThough he couldn't see her, she just nodded, feeling slightly disappointed that he didn't sound like he had very high expectations for even a pretend date with her. \"Okay,\" she agreed. \"Sounds like a plan. Once we figure out what we're wearing, I'll be there.\"\n\n\"Thanks, Marina. You're a life saver.\"\n\nAfter they hung up, Marina put her phone down, flopped back on the pillow, reached for the remote and turned on the TV. She'd been yawning and ready for bed when he called. But now her mind was racing as she wondered what it would be like to even have a fake date with someone as hot as Henry Wilde, who she'd secretly been crushing on from the moment she'd first seen him.\n\nA little curious about his past, after the conversation she'd overheard in the car, she picked up her tablet and decided it might be a good idea to google him to see what she'd find, especially if they planned to spend an entire day together.\n\nThe week before, when she'd been channel surfing, she was surprised to see him on TV as a judge in a baking contest. Then all she'd done for the entire program was wait for the camera to turn back on him, because she thought he was so much nicer to look at than any of the cakes.\n\nScrolling down the page on her tablet, she found an article about his television appearances. And no surprise, scrolling down a little further there were loads of pictures of him with beautiful women. Including a famous ballerina, who was clinging to his side smiling up at him, looking like they were way more than just friends.\n\nWhich made her realize why he had decided to ask her to be his date for the wedding, since she didn't stand a chance against any of the models and actresses that seemed to be his type. So obviously, there was no danger of them getting involved.\n\nPutting aside her tablet, Marina turned out the light, wondering what she'd gotten herself into by agreeing to be Henry Wilde's companion, even for a single day.\n\nJust starting to drift off, she nearly jumped out of her skin when her cell phone chimed again. Her heart pounding, wondering if it was Henry calling back hopefully to say something dark and sexy, she groaned when she turned on the light, reached for her phone, checked the call display and saw it was just her sister. Knowing she'd want a play by play of what happened between the two of them once they were on their own, she decided not to share anything more than what they did with the cakes.\n\n\"Hey, you,\" Annika said. \"Hope I didn't wake you. I just got home from mom's and I couldn't wait to hear what happened.\"\n\nMarina shrugged, because the truth was, there wasn't much to tell, although they did have fun. And he'd also shown her that he had a pretty good sense of humor, at least once the two of them were alone. \"Henry helped me decorate another cake that actually looks like a spaceship. And I brought the other one home, if you want to come over for coffee tomorrow to help me eat the nasty thing.\"\n\nAfter Annika laughed at that, she said, \"So... that's all that happened? And I was so hopeful. I've noticed the way he looks at you, and I was sure he was interested. I just can't understand why he wouldn't try anything when he had you all to himself.\"\n\nDeciding to keep quiet about the dinner they'd shared and the invite to the wedding, since even Henry had said that it wasn't really a date, Marina basically told her the truth. \"Sorry to disappoint you, but nothing happened. Except that he taught me how to use a star tip.\"\n\n\"On you, or on a cake?\"\n\nThough she laughed, Marina wondered what would have happened if they had gotten busy with the icing, because she knew exactly where she'd like to ice him, before she took her time and slowly licked him clean. Heaving a sigh, she said, \"Sadly, just on some cupcakes. I helped him decorate some little pumpkin cakes for a kids' party at a women's shelter.\"\n\n\"Oh, how sweet of him to do something like that. But that was it? Not even a kiss goodnight?\"\n\n\"Nope. He drove me home. I thanked him. We said goodnight, and that was it.\"\n\n\"Then I think you'd better dress a little sexier for our next class, and show some cleavage, and see what happens.\"\n\nNot that she'd tell her sister, but Marina had already been thinking about finding a sexy Halloween costume to wear to the wedding, that would really show off her girls. Still, she couldn't imagine giving him a show of cleavage at their cake decorating class. \"I don't think so. If he's not interested, he's not interested. And I don't think flashing the twins is going to do anything to change his mind.\"\n\n\"Could be he's not into women, and that's why he didn't try anything with you. Though he looks pretty straight to me.\"\n\nStarting to yawn, Marina decided to change the subject. \"So, will I see you for coffee tomorrow?\"\n\n\"Hopefully, I'll be there sometime in the afternoon. I've got brunch with Ryan tomorrow, that hottie I told you about that I met at the gym, that's all tall, dark, handsome and nothing but muscle. So, don't put the coffee on till I phone to confirm, just in case lunch turns into something more,\" Annika said, with a naughty laugh.",
        "\"Okay, then I'll wait to hear what happens. I hope you enjoy your lunch, while I snack on my naughty cake. Talk to you soon, sis.\"\n\nAfter she'd put down her phone and turned the light out again, smiling to herself, Marina decided she'd wear a turtle neck to their next class, if for no other reason than to piss off her meddling sister.\n\nSaturday morning, about to sit down to a plate of scrambled eggs, Marina had to run to get her phone from the bedroom when she heard it chiming. Assuming it was her sister, she automatically said, \"Hey, you.\"\n\nThen she laughed, when Henry said, \"Hey you, too. You sound a little breathless. Hope I'm not getting you at a bad time.\"\n\nShe always felt a little breathless around him, but he didn't need to know that. So, she said, \"No. I just had to run and get my phone that I forgot in the bedroom.\"\n\n\"Well, I thought I'd let you know that my brother's fianc\u00e9e Jenn has got the costumes arranged for us. Her friend's a costume designer and he said he'd be happy to fix everyone up. We just have to go down to his studio and decide what we want to wear, whenever you have the time.\"\n\nKnowing the wedding was only a few days away, she suggested, \"Well, I'm free for most of the day, if you are. As long as I get to my nephew's birthday party by around four, I should be okay.\"\n\n\"Yeah, I could pick you up, say around eleven?\"\n\n\"Sure. I'll see you then.\" She imagined her sister wasn't going to make it for coffee, if she was out swooning over her hot new guy. So, it sounded like she'd be spending another few hours she wasn't expecting to spend with hunky Henry.\n\nHer doorbell rang just before eleven. When Marina answered, she was surprised to see, that in addition to looking hot as hell in snug black jeans, leather jacket and body-hugging sweater, that he'd also come bearing gifts, at least for the cats. After she'd thanked him for the three bags of cat treats, Patches, Dolly, and Buddy warmed up to him pretty quick, when he crouched down to let them eat out of his hand, while stroking their furry little heads. Chuckling at the sounds of the three of them purring their little hearts out, he looked up at her and explained, \"Thought I'd better start off on a good footing, so they'll know they can trust me.\"\n\nMarina laughed as Buddy her big, black twenty-five-pound monster, stood up on his hind legs and tried to snatch the bag away from Henry, after he'd already eaten most of what he had in his hand. \"Well, I'd say you've definitely made a friend with Buddy, who as you can probably tell, really enjoys his food.\"\n\n\"He is a big cat. But I think he's big all over, even his paws.\" He shook out a few more treats for him, and stroked his back. \"I think Buddy's just a big boy, aren't you, big guy?\"\n\nTouched that he'd take an interest in them, Marina expression softened as she watched him warming up to her cats, since she knew not everyone liked them. But he seemed pretty happy to be making friends with her furry little roommates.\n\n****\n\nDarius's studio was in a massive second floor loft down by the waterfront. The moment they walked in, Darius's face lit up with a smile when he set his gaze on Marina, pointed a finger at her and announced, \"I know just what you'll be wearing, you sweet thing, with all that gorgeous strawberry-blonde hair, and those big, beautiful green eyes.\"\n\nThen he winked and said, \"But I think we'll keep your boyfriend guessing until the day of the wedding.\" Surprised at first, she laughed when he reached out and cupped her chin in his hand, looked into her eyes and said, \"You're such a pretty young thing, I just hope he knows how lucky he is to have a gorgeous woman like you for his lady.\"\n\nHenry chuckled too, since Darius seemed to be a natural born tease, and obviously not exactly into women. Mincing his way over to a row of men's costumes, he looked back over his shoulder at Henry, narrowed his big brown eyes, and quickly sized him up. \"And I think a drop-dead hunk of man like you would make a very dashing James Bond, or perhaps an even more stylish Great Gatsby. What do you think?\"\n\nNot really into dressing up, Henry glanced at the rack of costumes, and shrugged. \"You're the stylist, so I'll wear whatever you think works best.\"\n\nDarius smile grew wide, as slowly, he let his gaze slide over Henry from the tips of his black leather boots to the top of his sexy head of thick, dark hair. \"Personally, I think you'd look amazing no matter what we dress you in, big guy, even just a sheet,\" he said throwing back his head and letting out a throaty laugh.\n\nLaughing right along with Darius, Marina agreed. With his looks, Henry didn't need a fancy costume to try and look good. Still, she thought he would look incredibly hot dressed as a very dashing 007.\n\nWhen Henry tried on the perfectly fitted jet black suit with a black bow tie, crisp white shirt and polished black shoes, the moment he walked out of the fitting room, Marina and Darius grinned at each other, nodding their approval. As a straight-faced Henry did the classic pose, pointing his arm, pretending he had a gun in his hand, both Darius and Marina laughed and said, \"I think you've got your costume.\"\n\nThen it was Marina's turn. But before he took her back to see the dresses, Darius crooked his finger at Henry, smiled and suggested, \"Why don't I get you comfy on my big mauve couch with a cappuccino, and a magazine to leaf through, now that we've got you settled. And I can help your lady find something guaranteed to please you.\"\n\nSitting with his coffee, his brow raised, Henry gave Marina a teasing smile as Darius led her away to a room at the back of his studio that looked to be filled with rows of colorful floor-length gowns.\n\n\"This,\" Darius said, pulling a red sparkly dress off the rack with a flourish, \"is what I picture you in.\" Pointing out her features, he said, \"With that sweet set of curves, and all that long red hair swept over one shoulder, and those big emerald green eyes made up to show how just lovely they are, no one will be able to tear their eyes off you, you'll look so enticing.\" He winked. \"And I guarantee,\" he leaned in and whispered in a throaty purr, \"that hunk of a man of yours, won't be able to keep his hands off you.\"\n\nNow that he put it like that, although at first, she'd thought the dress might be just a little too over-the- top. With its thigh-high slit, and cut almost as daringly low in the front as it was in the back, knowing she'd definitely get a rise out of Henry, she decided to try it on.\n\nHoly smokes! Was it ever sexy; probably the most daring thing she'd ever worn. Since she was quite slender, but still fairly curvy, the dress was a little loose, especially in the waist. But wow, with it's built-in bra, did it ever make her 34C's pop, like she'd never seen them pop before.\n\nShaking his head, smugly grinning at how incredible she looked in the sexy, red sparkler, Darius assured her, \"You're such a slender little thing, I can see it's a little big on you. But I could have my seamstress take it in while you wait, and then it'll fit you like a glove.\"\n\nAfter having the dress fitted and pinned into place, while waiting for the alterations, Marina looked through a few more dresses. She had to agree with Darius, as she rifled through the racks, though most were quite pretty, there was nothing nearly as eye-catching, or quite as daring, as the flame red dress he'd chosen for her.\n\nOnce he'd bagged it up, she and Darius both strolled out grinning at each other like they were sharing a naughty secret. As Henry cocked an eyebrow, while eyeing the bag. \"Don't I even get to see it?\"\n\nShaking a finger at him, Darius told him, \"You'll see it soon enough, big guy,\" as he slyly winked at Marina.\n\nKnowing her sister had the perfect pair of hot-pink high-heels, and Darius had been kind enough to include a pair of long, purple gloves to finish the look. She knew all she had to do was go on-line and practice some dramatic makeup to give it the full effect. With her long, reddish-gold hair curling down over her shoulder, Marina was pretty sure she could pull it off. And she just hoped that Henry would like what he saw, once she'd transformed herself into what she hoped would be a very sexy little vixen.\n\nTraffic was slow on the drive back. After he'd stopped to pick up the cake at Marina's place and then dropped her off at her mother's house for her nephew's party, Henry knew he had to hurry, if he was going to get out to the Boom-boom Sha-Boom Room in time for dinner and the show.\n\nAs he walked in the door, once he got used to the dim lighting, and the near deafening pulse of the bass pounding from the speakers, he noticed the place was packed. Up on the stage he saw there was already a very well-endowed topless girl, sliding her curvy body up and down along a stripper pole, licking her lips and smiling coyly at the crowd.\n\nHe came up behind his brother, seated front row center, and gave his shoulder a squeeze.\n\nChris turned in his seat and flashed a smile. \"Hey, Henry, glad you made it. Dinner's in back, so grab yourself a plate and pull up a seat.\"\n\nAs Henry dished himself up some lasagna and Caesar salad, and a few wings along with some garlic bread, though he was happy to be there for his brother, he just wasn't feeling it. Probably because he could picture Marina from the night before, smiling at him from across the table, and decided he'd much rather be out with her, than sitting watching a bunch of strippers flashing the crowd.\n\nPulling up a seat beside his brother, Henry was just about to have pull on his beer, when a pretty young Asian lady, with shimmering black hair down to her waist, dropped into his lap and slid her hands through his hair.\n\nThe crowd all laughed and cheered, and Henry played along, smiling as she rubbed her pert little tits across his chest.\n\n\"I think she likes you,\" Chris said, laughing.\n\nResisting the urge to roll his eyes, Henry just nodded, wishing she'd crawl onto his brother and quit grinding on him, considering that it was his stag.\n\nEven when he was younger, he'd never been into strip joints. It just felt so fake to have a strange woman grinding her pussy in his lap, trying to act like she was enjoying herself, when neither of them was getting anything out of it.\n\n****\n\nAt Marina's mother's house, the party in full swing, her nephew smiling from ear to ear with everyone gushing over the beautiful space-ship birthday cake, surprised that she'd actually made it. Though she admitted that she'd done it with a lot of help from her instructor. That had her sister teasingly wiggling her eyebrows at the mere mention of Henry.\n\nWith the kids running around playing games, laughing and squealing, as the two of them started cleaning up, Marina leaned in an asked, \"So, how was your brunch with Ryan?\"\n\n\"Oh, I think I'm in love,\" she said with a little shiver as she giggled. Keeping her voice down, Annika confided, \"We talked for hours, and he wants to see me again tomorrow. It just felt like we clicked, and now I can hardly wait to see him again.\"\n\nMarina nodded as she thought of Henry, and the fun they'd had over dinner as she wondered if he was enjoying his naughty night out with the boys.\n\nWhen she got home that night, she agonized over it for a bit, till finally she sent him a text:\n\nThe cake was a big hit. Nathan loved it! Thanks again.\n\nThough he had a lousy hand, he was glad to be playing poker in the back room without anyone sitting in his lap, when he heard his phone ping with a text. He put down his cards and smiled as he read her message.\n\nHe texted back:\n\nGlad to hear it.\n\nHis fingers hovering over the keys, he was tempted to say more. He reconsidered, and put his phone away, deciding they'd have plenty of time to talk at the wedding, now that he'd been told that it was a bigger event than he'd thought.\n\n****\n\nIt was the day before Halloween and Marina had everything packed, ready for the wedding. Though she could hardly believe that Henry had only just learned that it was a three-day event, and he'd sheepishly called her the night before to tell her. Which meant they'd be sleeping at the inn together, but unfortunately in separate rooms.\n\nAt least they'd have a few days together before it all came to an end. Hopefully three fun-filled days, so she'd have something to look back on, when she was back to being on her own again.\n\nMarina took one last look around before locking up, finding it odd that there were no furry little bodies winding around her legs as she reached for her bags, ready to go. Lucky for her, she had a neighbor who treasured every chance she got to watch her cats, after losing her twenty-year old Persian to old age just the year before.\n\nShe'd just stepped out of the house when Henry hopped out of his van and strode up to help her with her bags. Flashing her a smile, he held open the van door for her, and told her, \"I really appreciate you helping me out like this.\" Then he surprised her when he pressed a quick kiss to her cheek, before he went to stow her things in the back.\n\nOnce they were both buckled in, brow raised, he reached over, squeezed her hand and asked, \"Ready?\"\n\nShe smiled back him. \"As I'll ever be.\"\n\nThe drive was absolutely beautiful, the bright afternoon sun shining down on nothing but mile after mile of brilliant orange, red and golds. An absolute riot of fall colors, every hillside and valley looked as pretty as a picture post card as they made their way north along the highway to the old Beaumont Estate.\n\nHenry glanced across the car at her and smiled to himself, deciding she was the perfect combination of sexy and sweet and just so down to earth. Which was a nice change from the type of women he usually dated.\n\nShe looked pretty sexy too, in skin-tight deep brown leather pants that really showed off her long, shapely legs with a tiny matching jacket and snug white sweater, that perfectly showcased her perky breasts. He found he was having a hard time keeping his eyes on the road, she was such a distraction.\n\nHe reached over and turned on the radio, and tuned in to some soft jazz, so they wouldn't be sitting in awkward silence as they made their way up the highway. While he did his best to keep his gaze focused on the road.\n\nCurious about what he'd told his family, Marina looked across at him. \"So, does your family think we're involved, or do they know that we're just friends.\"\n\nHe looked kind of guilty as he fessed up. \"I hope you don't mind, but I told my brother that we've been seeing each other for a few months, just to get the heat off me, so they'll stop trying to fix me up.\"\n\nShe smirked. \"Guess we'll have to put on a bit of show then, so they'll think we've got something going on.\"\n\nChuckling, he wiggled his eyebrows as he smiled back, since he had no problem engaging in a little PDA with someone as delightful as she was. He could already imagine how incredible it would feel to hold her close on the dance floor and maybe even have a taste of those sexy lips, while his hands wandered down her back, till he was cupping her shapely little backside. Of course, just to keep his family off his back, he reminded himself again.\n\nOnce they'd made their way up the winding road that led to the estate, as they passed through the tall, wrought iron gates, Marina eyes went wide as she looked around trying to take it all in.\n\nThe Beaumont Estate itself was absolutely beautiful; a large stately two-story stone and glass, slate roofed mansion, fully restored to its former glory. But the surrounding grounds were just bursting with color, the jewel-toned fall leaves shimmering on the trees in the light breeze, and the lush green lawn scattered with groupings of autumn-hued mums adding even more color to the well-tended gardens, were what really caught her eye.\n\nAs her gaze settled on a pair of majestic white swans floating side by side in the pond centred in the middle of the grounds, surrounded with even more colorful flowers, she murmured, \"This is just so beautiful, I can see why they chose a setting like this for their wedding, even if it is supposed to be haunted.\"\n\nOnce he'd parked the van in the lot beside the estate, leaning over to look out her window, Henry nodded as he followed her gaze. \"It really is something, isn't it? And I'll bet the wedding pictures will be amazing in a setting like this.\"\n\nThey noticed the inn where they'd be staying was conveniently located at the back of the estate with a walkway connecting the two buildings. As they walked in, Marina was so busy admiring the Halloween d\u00e9cor, with hay bales, pumpkins, gourds and colorful mums in pretty groupings around the lobby that she didn't notice the shocked look on Henry's face. She finally looked over when she noticed he'd stopped dead in his tracks muttering, \"I can't believe my father's here.\"\n\nHis father, a tall, good looking man with salt and pepper hair, looked over and noticed his son just then, and gave him a hesitant smile. As they watched him making his way over to join them, Henry muttered to himself, \"I just hope he hasn't been drinking.\"\n\n\"Good to see you son,\" his father said, awkwardly extending his hand, looking uncomfortable as he waited for Henry to accept it.\n\nWhen it finally dawned on him what he was doing, Henry quickly put down their bags and reached for his father's hand, gave it a firm shake, and patted his shoulder. \"Good to see you, too, Dad.\" Then he glanced around and quietly asked, \"Does mom know you're here?\"\n\nAfter taking a cautious look around, his dad shook his head. \"Not yet, I don't think. I only decided last night, after talking to your brother, that I have as much right to be here as your mother does. Chris said he wanted both his parents here for his big day. So, your mother's just going to have to accept the fact that I'm part of the family, whether she likes it or not.\"\n\nNot sure how to introduce them, Henry looked at her and shrugged. \"Marina this is my dad, Hank Wilde. And Dad, this is uh...my girlfriend, Marina Jansson.\"\n\nTrying to hide her smirk, Marina gave him the side-eye over the 'girlfriend' comment, but still smiled at his dad, and shook his hand. \"It's a pleasure to meet you, Mr. Wilde.\"\n\n\"Oh, you can call me Hank. My father was Mr. Wilde, but I'm just plain old Hank.\"\n\nWhile his father worked his charm on Marina, Henry took a moment to look him over, glad to see he was clean shaven for a change, and that his clothes were clean and there were no stains on his shirt or his navy-blue sport coat. What really struck him though, was that he couldn't smell any booze on his breath, when he normally reeked of cheap whisky. Seeing as he'd managed to clean himself up, he just hoped he could stay sober long enough to get through the wedding without embarrassing himself or his family, especially his brother, who'd been brave enough to invite him.\n\nHank nodded at their suitcases sitting on the floor. \"Well, guess I'd better let you two get settled in, while I get a drink... of soda water,\" he said with a pointed look at his son. \"Just so you know, I haven't had a drop to drink in over six months. So, you don't have to worry about me tripping up and ruining your brother's big day.\"\n\n\"Glad to hear it, Dad. Then I guess we'll catch up with you a little later.\"\n\n\"Sure thing,\" he said with a wistful smile as he turned and headed, thankfully towards the restaurant, instead of the bar.\n\nThey were in line checking in, when Henry spotted his tall, sandy-haired brother Chris, waving and smiling from across the lobby as he made his way over to them.\n\n\"Hey, glad to see you're here early,\" he said as he joined them in the line up.\n\nWhen Chris smiled at Marina, waiting for an introduction, Henry looked at her, gave her another awkward smile, and said, \"Marina, this is my brother Chris, the soon to be groom. And Chris, this is my girlfriend Marina.\" Marina noticed he didn't trip over calling her his girlfriend this time, or his brother might have picked up on it.",
        "Obviously happy to see his brother with someone, Chris's looked back and forth between them beaming, once he heard that they were a couple. Reaching out, he shook Marina's hand with both of his, and said pointedly, \"It's really nice to meet you, Marina.\"\n\nSmiling as she eyed Henry, Marina said, \"You, too.\"\n\nThen Chris, looking a little anxious asked his brother, \"So, did the cake make it here in one piece? Jenn can hardly wait to see it.\"\n\n\"I was going to get us checked in first, then I'll drive it around to the kitchen, so they can find a cool place to store it. But it should be fine, I had it boxed in to keep it steady on the drive up. And I brought some extra icing in case it needs a touch up.\"\n\nChris nodded, then eyed his brother for a moment, and finally looking a little uncomfortable, drew in a breath and said, \"Uh... before you go to check in, I should probably mention that dad's here.\"\n\n\"I know, we saw him when we came in. And thought he was looking pretty good.\"\n\n\"Yeah, he is. He's really cleaned himself up.\" Then Chris hesitated before he told him the rest. \"The thing is, the place is fully booked. So, when dad finally agreed to come, I had to give him the extra room you asked for. And I hope that won't be a problem.\"\n\nNot expecting that, Henry and Marina just stared at each other for a moment, till Marina realized that Chris was waiting for an answer. She decided she'd better try and explain away the need for an extra room, so he wouldn't wonder why they weren't sharing, considering they were supposed to be dating. \"No, it's fine, Chris. We just thought it would be fun to dress in separate rooms, so we wouldn't see each other in costume till right before the wedding.\" She gave Henry a teasing smile. \"But I guess one of us will just have to get dressed in the bathroom.\"\n\nRelieved that she'd played along, Henry reached out and squeezed her hand, hoping she could see how grateful he was that she was keeping up the ruse. Even though they'd just been told that they'd have to share a room, which neither of them had planned on.\n\n\"Well, I'm glad you're okay with it.\" Then Chris took a look at his watch, and took a deep breath. \"Now I've got to go and meet with Jenn and the Minister. The wedding rehearsal is at six, and the dinner will be right after in the main dining room. And I've still got to get dressed. I just hope it all goes smoothly, especially with mom and dad.\"\n\nNoticing how rattled he looked, Henry put a hand on his brother's shoulder. \"Just take a few deep breaths, Chris. Everything'll be fine. Why don't you go and find your bride and try and have some alone time with her before the rehearsal, while we get settled in.\"\n\nAfter his brother nodded and walked away, as soon he was out of earshot, Henry turned to face Marina, hoping she was really okay with it. \"Marina, I'm really sorry about the room. But if there's a couch, I can sleep on that, or I could even crash in the van, if I have to.\"\n\n\"Henry, I'm sure we can share a room. It's not like we're...\" she waved her arm around trying to decide how to put it. \"You know, actually involved or anything. And there's no way you're sleeping in a van when you're here for your brother's wedding.\"\n\nRelieved, Henry managed a smile, deciding he liked her feisty side, and the fact she was cool with them sharing a room.\n\nOn the ride up in the elevator, the air was crackling with tension. Neither saying a word, as they wondered how it was going to work, with the two of them having to share a room for two whole nights, especially considering the fact that they weren't even dating.\n\nAfter Henry unlocked the door to their room, and they stepped inside, you could have heard a pin drop in the carpet as they both stood and stared at the single queen size bed sitting in the middle of the room, feeling like it was staring back at them. Then they both looked around and noticed there was no couch, only two red ornate wing-backed chairs on either side of the window with a little table in between.\n\nSuddenly, Marina started to laugh, and finally the tension broke, and Henry laughed, too. \"Looks like we'll be sharing more than just a room,\" she said, eyeing the bed with the beautiful burgundy and white hand-stitched quilt, as she wondered what side of the bed he preferred to sleep on.\n\nAfter he'd put their bags down, glad she was okay with it, Henry took a look at his watch. \"I'd better go take care of the cake.\"\n\n\"Oh, how did it turn out?\"\n\nHe shrugged. \"I think Jenn will be pretty happy with it. It sure looks scary enough.\"\n\nMarina grinned. \"Have you got a picture of it?\"\n\n\"Actually, I do.\" He patted his pocket. \"I've got a couple of them on my phone.\"\n\n\"I'd love to see it.\"\n\nChuckling, Henry took hold of her by the chin, and dropped a kiss on the end of her nose. \"You'll see it probably about the same time I finally get a look at that dress you'll be wearing to the wedding.\" He laughed at the way she narrowed her eyes on him, as he winked and said, \"I'll be back soon.\"\n\nSmiling to herself as she unpacked her things, Marina realized though it wasn't much of a kiss, and was only on the end of her nose, it was still the second time that he'd kissed her.\n\nWhen Henry came back with two cappuccinos and a couple of pastries to tide them over till dinner, Marina was impressed that he was so thoughtful. He could have just had a coffee on his own, and she'd have never known. But the fact that he'd thought of her, made her really want to thank him with a kiss, but smack on the lips this time.\n\nAs he handed her the coffee, she settled for stroking her hand over his cheek and murmuring, \"Thank you, Henry. It's really sweet of you.\"\n\nHe shrugged out of his jacket, and had to clear his throat to tell her, \"The wedding cake looks good. Now I just have to hope that it makes it to the reception room in one piece for the cake cutting and the pictures.\"\n\nThey enjoyed their coffee together sitting by the window, looking out over the grounds. But when Henry glanced back at the bed, although so far, he'd manage to keep everything platonic, he almost dreaded the idea of crawling into bed with her.\n\nHe had a pretty strong feeling if she so much as touched him, once they were in bed together, his resolve would crumble faster than a dried-out cake.\n\n\"I think I'll get a shower, and change for dinner. Unless you want to go first?\" he said, as he got to his feet, deciding he needed a distraction so that he'd stop staring at the damn bed.\n\n\"No. You go ahead. I'm sure I'll take longer than you, and I don't want to keep you waiting. I might even have a soak in the tub to try and unwind, before we have to put on a show for the rest of your family.\"\n\nHenry shook his head, resisting the urge to groan. Just the thought of her warm and wet and covered in bubbles was enough to get things stirring in his boxers. He could just imagine how sexy she'd look lying back, soaking in the tub with her nice full breasts just barely peeking out above the water.\n\nGazing down at her, he picked up a lock of her silky, red hair and slid it through his fingers as he said, \"Well, at least we like each other. So, we won't have to fake that.\"\n\nLooking up at him, her gaze softened because the more she got to know him, the more she liked him. Smiling into his eyes, she agreed, \"No. We definitely won't have to fake that.\"\n\nAfter he'd had his shower, while Marina was in the bathroom getting ready, Henry got dressed in his new charcoal gray suit and burgundy tie. Taking a look at himself in the mirror on the back of the door, he wondered what she'd think of him dressed-up for a change. Turning to the side, taking a longer look at the cut of his fitted suit, he thought he cleaned up pretty good, but he'd find out pretty quick if she thought so, too.\n\nTaking a seat on the edge of the bed, he turned on the TV and anxiously waited.\n\nA few minutes later, when she strolled out of the bathroom, he could hardly believe his eyes. She just looked so enticing in her silky, black body-hugging dress with sexy red heels, that he could barely get a word out.\n\nHe got to his feet, walked over to her, and cleared his throat as he did a slow perusal over every inch of her. \"Wow. You look beautiful,\" he murmured, once he finally remembered how to speak.\n\nMarina reached out and straightened his tie, smiled into his eyes, and almost touching his lips, whispered against his mouth, \"And you look very handsome.\"\n\nWhen she stepped away to get her purse, Henry was tempted to pull her into his arms and finish what she almost started. Now all he could think of was having a taste of that sexy mouth.\n\nThen he looked at the bed, that seemed to be looming in the middle of the room, and thought they'd better go down for the rehearsal dinner before things went any further.\n\nStill, the way she smiled into his eyes in the elevator on the way down, he couldn't resist lacing his fingers through hers, lifting her hand to his lips, and pressing a kiss to her knuckles. Winking, he said, \"Thought we'd better practice a little PDA, before we have to spend the night with the family.\"\n\nFeeling a little breathless, just from the touch of his lips, Marina just nodded, wondering again, what she'd gotten herself into by agreeing to spend three whole days with him.\n\nBoth of them were smiling into each other's eyes as the elevator doors opened to the lobby as they stepped out arm in arm.\n\nHenry spotted his mother, who saw the two of them approaching her together and her face lit up, at least at first. But up close, he could see she looked upset.\n\nStill, she smiled and warmly shook Marina's hand as Henry introduced them, before she leaned in and whispered to her son, \"Did you know that your father was here?\"\n\nHenry nodded. \"Yeah, we saw him when we got here. He's looking good, though. Said he hasn't had a drink in months.\"\n\nAnxiously wringing her hands as she looked around the room trying to spot him, she murmured, \"I just hope it's true. I'd hate for him to cause a scene and ruin the wedding.\"\n\nHenry noticed the small group of close family and friends gathered at the door and nodded his head. \"I think the rehearsal's about to start, so we should head outside.\"\n\nHenry looked up and noticed his father Hank chatting with his brother and fianc\u00e9e Jenn. When his dad looked back and saw him with his mother, his expression softened and he gave her a watery smile that Henry noticed she returned, though her bottom lip was quivering. She just looked so emotional seeing her husband again, he squeezed her arm, and whispered, \"It'll be okay, Mom.\"\n\nMarina picked up on it too, and searched Henry's gaze wondering what was happening between them. When he whispered against her ear, \"I don't think they're over each other.\" As she looked back and forth between them, she gave him a hopeful smile, since they both seemed pretty emotional.\n\nThen she looked up and her mouth fell open when she realized exactly who his brother was marrying. Wide-eyed, she turned and looked at Henry. \"Your brother is marrying Jennifer Wakefield? I had no idea. Didn't she just win an Academy Award and a Golden Globe for that Studio 54 movie?\"\n\nHenry shrugged. \"Chris is a lighting technician that does a lot of work in movies. They met on a shoot a few years back, and they've been together ever since.\"\n\n\"Oh,\" Marina said, feeling a little stunned as she watched his brother and his celebrity fianc\u00e9e approaching.\n\nBut the way pretty blonde Jenn's smile lit up her face as she pulled her in for a hug, kissed her cheek, gave her a little squeeze and said, \"You must be Marina, it's so nice to meet you,\" instantly put her at ease.\n\nThen Henry leaned in, pressed a kiss to his soon to be sister-in-law Jenn's cheek, and told her, \"Only a few more hours now.\" Nodding his head at his brother, he teased, \"There's still time to back out. You sure you want to do this?\"\n\nJenn's bright blue eyes glittered with a mixture of affection and amusement as she smiled at her soon to be groom. \"I know it's crazy, we've been together so long, but I can hardly wait to finally be able to say that he's mine.\"\n\nChris wrapped his arm around her waist, pulled her to his side, and the emotion in his eyes as he looked into hers, before he leaned in and tenderly kissed her, had everyone blinking back tears. Clearly, they were madly in love.\n\nSlightly embarrassed to be getting so caught up, when Marina turned her head to wipe away a tear, out of the corner of her eye, she noticed Henry's parents were off on their own quietly talking. She tapped Henry's arm and subtly pointed towards them.\n\nAfter watching for a moment Henry tipped his head in their direction so his brother could see what was happening.\n\nChris nodded. \"Well at least they're talking.\"\n\nWhen everyone had walked up the garden pathway to gather around the rose covered arch for the wedding rehearsal, the minister had everyone laughing, she was so much fun. She told everyone that it was the first time she had to go out and get herself a pointy hat to officiate a wedding. Then she cupped her hand around her mouth and joked in a stage whisper, \"Though if you ask her, I'm sure my wife thinks I should be wearing one all the time.\"\n\nThe laughter subsided when she looked at Jenn and Chris, smiled and said, \"I feel so honored to be marrying such a lovely young couple, that I can tell are very much in love.\"\n\nThen looking out over the small crowd, she asked, \"Who will be giving away the bride?\"\n\nWhen Jenn's mother and father walked up together both tearfully smiling, the rehearsal got under way.\n\nMarina barely noticed that Henry had his arm around her the whole time, she'd gotten so comfortable with him.\n\nWhen she smiled up at him, the way he looked down, winked and smiled back, she felt her heart squeeze. And she decided even if he was only pretending to have feelings for her, she was happy to be enjoying every minute of it.\n\nLater, as the dishes were being cleared away after the soup course at dinner, Henry, smiling deep into her eyes, stroked a finger over Marina's cheek. Though a casual observer would be fooled into thinking that he actually cared, knowing it was all for show, had her wishing so hard that what they had between them was real. And that maybe, he'd finally seal the deal and kiss her.\n\nHer breath hitched as he slowly dipped his head, his breath warm against her lips, her pulse racing as he inched closer. Sure, that he was finally going to touch his lips to hers, she let her eyes drift shut.\n\nThen a man came up behind them, and shocked them both when he tapped him on the shoulder and told him, \"Henry, your brother's out in the lobby, and he needs to go over a few details about the wedding tomorrow.\"\n\nAs her heart sank, the only consolation was that Henry looked as disappointed as she felt, at being interrupted when he was about to finally go in for a kiss.\n\nWith a shrug he said, \"Be right back.\"\n\nChris was pacing out in the lobby, and the moment he saw his brother, he gestured for him to follow him outside. Once they were out in the garden, he looked around before he asked in a hushed voice, \"So, did you put the opening where I told you?\"\n\nHenry nodded. \"Yeah, the biggest tombstone lifts up and the opening is about 2 inches square, just like you asked for.\"\n\nChris dug into his pants pocket, pulled out a small blue velvet box, popped it open and showed him. Henry smiled as he looked down at the gold class ring before looking back up at his brother.\n\n\"Jenn's one regret is that she never finished high-school, because she got into acting so young. So, I phoned her old high-school. And after I explained, the principal decided to give her an honorary degree. Apparently, she was tops in her drama class and only needed two more credits to get her diploma. She would have gotten it too, if she didn't have to go on location for her first movie shoot, making her miss the last few weeks of school.\"\n\n\"That was nice of him to do that.\"\n\nChris nodded. \"I thought so. He said he's a big fan of hers, and the whole school's pretty proud that she went there.\"\n\n\"It's probably their only claim to fame.\"\n\nChris chuckled. \"Yeah, probably.\" Then he looked at the ring again. \"When Jenn and I cut into the cake and she finds this, I'm going to show her the diploma. I just hope she doesn't break into tears, when she realizes that she's finally managed to graduate.\"\n\nHenry clapped his brother on the shoulder. \"It's a really nice gesture, Chris. I'm sure she'll be thrilled.\"\n\nChris nodded as he handed him the ring. \"Jenn said she didn't want any jewelry or anything for a wedding gift. But I'm sure this'll mean way more to her than any fancy necklace or bracelet I could have bought her.\"\n\n\"I'm sure it will.\"\n\nAbout to go back inside, Chris stopped and looked at his brother. \"Hey, Jenn and I were wondering how come you've never mentioned Marina before. When we talked on the phone the other day, you never said you were seeing anyone when I asked you about bringing a date.\"\n\nHating to lie, especially to his brother, Henry decided it might be best to more or less tell him the truth. \"Marina is in one of my classes. We stayed late to work on a cake one night, and I offered to drive her home. We'd both skipped dinner so we stopped for a bite to eat, and we just kind of hit it off.\" Looking past his brother, as he thought of her, he said, \"But I noticed her the first night she walked in the room. It was kind of hard not to, with that long, red hair, and those big green eyes. And she's really sweet and pretty down to earth, too.\"\n\nChris chuckled. \"Sounds serious.\"\n\nHenry thought on that for a minute, shrugged and admitted, \"I really do like her. She's like no one else I've ever met. But I'm not looking for anything long term. So, I don't think it would be fair to her to lead her on. She's pretty young, and she's got her whole life ahead of her. So, I don't want her wasting her time on me.\" Then he smiled at his brother, and patted him on the back. \"But I just want you to know that I'm really happy that the two of you are living your dream and finally getting hitched. You're really good together, and I'm happy for you, bro'.\"\n\nChris smiled, as he heaved a sigh. \"Yeah. Sometimes I can't believe that she actually wants to share her life with a guy like me, when she can have almost anyone she wants. But I'm just glad that whatever it is she sees in me, makes her happy.\"\n\n\"Hey, don't sell yourself short. I'm sure most of the people she meets are just hoping to ride her coattails, to see where it can get them. But Jenn knows you love her for who she really is, and not because she's famous.\"\n\nChris nodded thoughtfully for a moment, then he looked his brother in the eye. \"And I hope if you and Marina are meant to be, that it works out for you, too.\"\n\nHenry didn't answer, mostly because he didn't know what to say. Maybe if he hadn't gone through what he had with Tatyana he'd be open to something new, especially with someone as sweet as Marina.\n\nDeciding to let it drop, Henry put the ring box in his pocket, tapped it and said, \"I'll hide this in the cake tomorrow.\" Then he nodded towards the door. \"Now we'd better get back inside, or they'll be wondering what happened to us.\"\n\nWhen he sat down at the table beside her again, brow raised, Marina looked over at him and asked, \"Everything okay?\"\n\nHenry smiled, reached over and squeezed her hand. \"It's all good.\"\n\nBy the time coffee and dessert were being served Marina and Henry were both eyeing each other, looking a little anxious. Sliding his hand into the back of her hair, gently massaging her nape, he leaned in, touched his lips to her ear and whispered, \"You know I could still sleep in the van, and let you have the room.\"\n\nMarina could feel her breath hitch as her nipples grew achingly hard, just from the heat of his breath, and the things he was doing to her poor quivering body as he continued to work his fingers into her scalp.",
        "He had her feeling so blissed out, licking her lips, she was about to tell him, 'I'm sure we'll be fine sharing a bed,' when Chris came up behind them and cleared his throat to get their attention.\n\nHis eyes narrowed, Henry turned his head and waited to see what he wanted. Chris was smirking as he leaned closer and said, \"Sorry to interrupt. But Jenn and I kind of felt bad about you two losing the extra room. And the thing is, she's starting to feel a little superstitious about me seeing her tomorrow before we're married. So... we wondered what you'd think of the two of us sharing a room. Then Jenn and Marina could have your room. And they can both get dressed tomorrow without us seeing them before the wedding.\"\n\nHenry held Marina's gaze trying to gage her reaction. But knowing it was probably for the best, before she could even think of what to say, he shrugged and said, \"Sure, I'd be okay with that.\"\n\nMarina managed to force a smile as she agreed. \"I'd fine be with it, too.\"\n\nWhen Marina unlocked the door to their room, and flung her purse on the bed, she noticed that Henry's suitcase was already gone, replaced by a trolley cart with everything Jenn would need for the wedding.\n\nTaking her makeup off in the bathroom, muttering to herself, as she tossed each tissue into the waste basket; she noticed it sure as hell hadn't taken him long to decide that she wasn't his type.\n\nShe couldn't believe how fast he'd said, 'Sure,' when his brother had suggested that he bunk in with him and let Jenn share a room with her.\n\nAfter she'd stripped off her clothes, and got into her pink boy shorts and matching T-shirt, Marina wrapped herself in one of the fluffy, white hotel robes hanging on the back of the door. She'd just reached for her toothbrush to brush her teeth, when she heard someone knocking.\n\nHalf-wondering if it might be Henry reconsidering, she opened the door and found Jenn standing on the other side in the hallway, looking a little sheepish. She looked so young and vulnerable with her face scrubbed clean and her blonde hair up in a pony-tail, that she barely recognized her. \"I hope you're really okay with this,\" Jenn said, before she even stepped inside.\n\n\"Of course,\" Marina assured her, as she pulled the door open to usher her in.\n\nJenn walked over to the bed, sat down, and explained why she thought she should stay in another room. \"I was talking to my grandmother this morning, that sadly won't be coming because she's not very mobile anymore. And she said she hoped Chris wasn't going to see me in my dress before the wedding tomorrow. According to her, it's really bad luck. Her brother saw his bride before they were married, and they broke up a few months later. Ever since, she and her sisters always wondered if that was why.\" She looked up at Marina and smirked. \"I know it sounds crazy, but she kind of spooked me when she said that.\"\n\nMarina got on the bed beside her, and they both scooted up to rest their backs on the headboard, like two old friends.\n\n\"I don't think it's crazy,\" Marina said, as she shifted the pillow behind her back.\n\n\"Anyway, that's why I asked Chris about Henry and I switching rooms.\" Jenn grinned. \"I just hope I don't snore and keep you awake, or you'll be begging Henry to come back.\"\n\nThen Jenn reached into the pockets of her robe and started to dump bag after bag onto the bed. She winked at Marina. \"My naughty little secret. When I'm nervous, I indulge. Though, even Chris doesn't know how bad I am.\"\n\nMarina's eyes flared as she thought about all the drug use amongst celebrities that she'd heard about. Nervously eyeing the little pile of paper bags, she winced as she admitted, \"I'm sorry, Jenn, but I don't do drugs.\"\n\nJenn looked at her confused, then she looked down at the bags and threw her head back and laughed. Finally, she pulled herself together, and told her, \"Neither do I. I know way too many people who've gotten into trouble, so I've never touched the stuff.\"\n\nThen she opened a bag, held it out and said, \"Look, it's just gummy bears and sour worms.\" Opening another one, she looked inside. \"And I've got marshmallow bananas and strawberries and mint leaves, black balls and all kinds of good stuff.\" She shrugged. \"I always brush my teeth after, but I still feel guilty.\"\n\nNow that she knew it was just candy, when Jenn held open a bag, Marina dug in and took out a few gummy bears and worms. \"I haven't had these since I was a kid,\" she said as she popped one in her mouth.\n\n\"There's an old-time candy store near where we live that's sells all my favorites. But Chris doesn't know that I'm in there every week topping up my stash.\" Grinning, she pointed at her as she chewed on a gummy. \"So, this had better stay between us girls.\"\n\nMarina made a gesture of zipping her lips, before she smiled and reached for a marshmallow banana.\n\nThen she felt Jenn watching her, and she looked back at her wondering what was up.\n\n\"I'm sure Henry's glad that you're not into drugs, after the disaster with his last girlfriend.\"\n\nNot sure what to say, Marina waited to see if there was more.\n\nFinally, Jenn heaved a sigh, and looked her in the eye. \"I probably shouldn't be the one telling you, but from what I've heard, he went through hell with her. Tatyana was a ballerina, and very pretty. I think he met her at a party. And they hit it off.\n\n\"She'd stopped dancing by then, because she'd been hurt. Her leg was broken in a fall, and she had a few surgeries to try and fix it. What Henry didn't know was she'd that gotten addicted to her pain medication. And when the doctor's cut her off, she started buying whatever she could find on the street.\n\n\"When she finally told him what was going on, he offered to put her in re-hab. I heard he had to spend a fortune to get her in a descent place. But she didn't like the rules and wouldn't stay, so she walked out. But he didn't find out, until after she was dead.\"\n\nMarina eyes went big. \"Did she die from an overdose?\"\n\n\"No. Someone saw her trying to score some drugs, an argument broke out and she was pushed onto the road, and got killed by a taxi.\"\n\n\"Oh, how awful, to die like that. And poor Henry,\" Marina said, as thought back to the conversation in the car with his brother.\n\n\"I think they'd been done for a while, but he still took it pretty hard. I think Henry's the type who never gives up on anyone he cares about, like his dad.\"\n\nMarina nodded and patted Jenn's hand. \"Well, thanks for sharing that. I kind of wondered what happened, but didn't want to ask.\"\n\nSince they'd both gone quiet, Jenn grabbed the remote off the night stand. And as they snacked on the little bags of treats, trying to put their dark conversation behind them, they laughed themselves silly over a hilarious old Britcom, aptly called One Foot in the Grave, considering where they were staying. It was so funny they were nearly rolling on the bed and wiping at their eyes as one ridiculous scene after another unfolded.\n\nWhen a commercial came on, Jenn looked over at Marina and remarked, \"As you can imagine, Chris and I were really happy to see Henry with you tonight. And I was wondering how you two met, since he's never mentioned you before, and yet Chris said you've been dating for a few months.\"\n\nMarina wrinkled her nose as she picked out another candy. \"My sister keeps enrolling us in different classes, because I work from home and she thinks I don't get out enough.\" She looked up at her, and pointedly said, \"Probably because I've basically given up on dating. And right now, we're doing cake decorating with Henry.\"\n\n\"Oh, then you must be good for the two of you to have clicked, he's such a perfectionist.\"\n\nMarina laughed. \"Hardly. I think I'm the worst in the class. Which I think is why he took pity on me and helped me out. I guess we kind of connected over how awful I am with a piping bag.\" She reached for her phone. \"Wait, I think I've got a picture, and I can you show what I mean.\"\n\nWhen she showed her a picture of her horrible dick cake, Jenn's eyes went big and she looked at her and blinked. \"Oh, my god. Is that a...\"\n\nBefore she could finish, Marina chuckled and shook her head as she took a look at it, too. \"I know what it looks like, especially with what's dangling from the bottom. It was supposed to be a rocket ship cake for my nephew's birthday, but obviously it didn't turn out that way. Which I think was why Henry was kind enough to help me do another one that I could show my family.\"\n\nLooking across the bed at her Jenn wiggled her eyebrows. \"Well, Henry seems to really like you. I can tell from the way he looks at you. And it's been a long time since he's been interested in anyone. So, I'm really glad you two are together.\"\n\nMarina hated to lie, especially since Jenn was being so open. So, she took a breath and told her the truth. \"Henry just asked me to come to the wedding as his plus one. And we're not even dating.\"\n\n\"Oh.\" Jenn looked a little confused. Then a light bulb went on and she pulled a face. \"So... you two have never...?\" When Marina shook her head, Jenn nodded thoughtfully. \"No wonder you asked for separate rooms.\"\n\nWhen Marina didn't say anything, Jenn eyed her for a moment, then decided she'd test her. \"Then I guess you're glad that you won't have to sleep with him, at least for tonight.\" Waiting for her reaction, Jenn picked up on the fact that Marina didn't jump right in and agree, which had her slowly starting to smile. \"Or, maybe you were looking forward to spending the night together. And now thanks to me and my silly superstitions, Henry's sleeping with his brother and you're stuck having to share a bed with me.\"\n\nMarina looked up and met her gaze. \"I really don't mind sharing a room with you, Jenn. But...\"\n\n\"But Henry doesn't know that you're into him, does he?\"\n\nMarina looked down at her hands, shook her head and quietly said, \"No.\"\n\nJenn's face broke into a smile, as she excitedly reached out and squeezed Marina's arm. \"Well, then I think we're going to have to do something to get Henry to sit up and take notice, before he crawls back into his shell and we lose him again.\"\n\n\"I'm not about to chase after him, if that's what you're thinking.\"\n\nJenn flashed a sly little grin. \"You won't have to. Once he gets a look at you tomorrow, he'll will be the one doing the chasing.\"\n\nThe little spark of mischief in Jenn's eyes as she grabbed her phone and started texting, had Marina wondering if she should just play along, if only to see what would happen.\n\nAfter they'd turned off the TV, they still laughed and talked for a while, till Jenn took a look at the clock, pulled a face and decided it might be time to get some sleep.\n\nIn the bathroom, side by side, sharing their guilty secret, they grinned at each other in the mirror as they gave their teeth a good hard brushing.\n\nThough Marina had wondered what it would have been like to share a bed with Henry, she was glad now that she and Jenn had gotten a chance to get to know each other. It felt like they'd already bonded. She realized too, that though Jenn was pretty famous, she was also surprisingly down to earth and someone she'd enjoy having as a friend.\n\nOnce they turned out the lights, Jenn surprised her again, when she crawled across the bed, pressed a kiss to her cheek and quietly whispered, \"Thanks for this, Marina. Not very often I get a chance to kick back and have fun and just be myself. And I really had a good time with you tonight.\"\n\nShe felt kind of sorry for her, as she realized the life of a movie star wasn't always a bed or roses, Marina patted her hand and murmured, \"I had a good time with you, too.\"\n\nHeaving a happy little sigh, Jenn curled up on her side of the bed and started to drift off almost as soon as her head hit the pillow.\n\nIn the morning, as they cracked open their eyes, they both looked at the door and groaned at the sound of someone impatiently knocking, like a woodpecker, relentlessly tap, tap, tapping, demanding to be let in. \"Oh god, whoever the heck that is, make them stop,\" Jenn pleaded, pulling her pillow around her ears to try and drowned out the sound.\n\nSince she was closer, Marina grabbed her robe, tugged it on, brushed the hair out of her eyes and went and looked through the peep hole.\n\n\"Oh, it's Darius,\" she said smiling over her shoulder at Jenn who was sitting up in bed rubbing at her eyes.\n\nDarius's face broke into a big broad smile when Marina pulled open the door to let him in as he looked back and forth between them. \"Just look at you two lovelies, all fresh-faced and ready to be transformed.\"\n\nHanding a tray with two coffees and a bag of biscotti to Marina as he glanced around inspecting the room, he informed them, \"Hair and makeup people are on their way, so I thought you could use a little something to wake you up, before we get started.\"\n\nWaggling his eyebrows, he eyed the bed, with a naughty laugh. \"Oh, if I were into women, the fun we three could have in that nice, big bed.\"\n\nJenn just laughed as Marina handed her a coffee, and she took her first sip and rolled her eyes. \"Thanks for being such a life saver, Darius. Sometimes, I don't know what I'd do without you.\"\n\n\"Well, lucky for you, sweet thing, you'll never have to find out.\"\n\nAfter she'd had her shower, Marina could barely believe what was happening, when \"the team\" went to work on turning her into the sexy vixen that Darius envisioned.\n\nThere was such a buzz of activity going on around them, that she couldn't see what was happening with Jenn, until they were both done, and staring amazed at their reflections in the mirror.\n\n\"Holy smokes, look at you,\" Jenn said, flashing a grin as her gaze swept over Marina. \"Wait till Henry gets a look at you. I think his eyes are going to pop right out of his head.\"\n\n\"And you look absolutely gorgeous, Jenn. I never would have thought that Marie Antoinette would be a perfect costume for a bride. But wow, I've never seen anything so beautiful. And your hair looks amazing, all swept up in that nest of curls.\"\n\nJenn smirked, as she tucked in a tendril. \"Well, some of it's mine, and some of it's extensions, but I think it turned out okay. I almost got to play her in a French Historical Drama, but they picked a French actress instead. But I fell in love with the era and all the elaborate clothing and hair pieces they wore. So, I decided it might be fun, since I've only got a little time off at Halloween between shoots, if we had a costume wedding instead of going traditional. We also decided that having it over three days would give our two families a chance to bond, while they're here to celebrate.\"\n\n\"I think it's was a wonderful idea. And I'm sure everyone will have fun.\"\n\nDarius came up behind them, admiring their reflections in the mirror, he heaved a satisfied sigh. \"I think you both look absolutely divine.\" Then he checked the time on his phone, and his eyes popped as he said, \"Now, you'd better get a move on, Miss Jenn, or your groom is going to wonder if you've changed your mind.\"\n\n\"Well, I can't have that,\" she said laughing, as she picked up her full skirt, took Marina by the arm and headed for the door.\n\nJenn made her way to her parents' room first, so they could all head downstairs together.\n\nThe moment her mother opened the door and saw her daughter, she instantly burst into tears. \"Oh, sweetheart, you just look so beautiful. I can't wait to see the look on Christopher's face when he sees you in that gown.\"\n\n\"You look really pretty too, Mom.\" Smiling, Jenn looked over her mother, dressed in pale pink as a nineteen-twenties flapper with a little feathered head band and her blunt-cut blonde hair softly framing her pretty face.\n\nHer father smiling proudly, walked out to join them, dressed as an old-time mobster in a black pinstripe suit with a wide burgundy tie and white rose on his lapel. Pressing a kiss to his daughter's cheek, his voice cracked with emotion as he told her, \"You look like an angel.\"\n\nThen his eyes grew wide, as he gave Marina a once over and told her, \"You look incredible, too. I think that boyfriend of yours won't know what hit him, when you walk up and take his arm, dressed like that.\"\n\nThey were at the door leading out to the garden, the string quartet striking up the first notes of Here Comes the Bride when Jenn gasped, and looked at Marina in a panic. \"Oh, no, I forgot my bouquet!\"\n\nDarius, rushed up to her murmuring, \"Calm down, sweetie. Darius has everything under control.\" He pressed a kiss to her forehead, as he handed her the bouquet of white lilies, tied with a white satin ribbon. After slightly adjusting her low-cut bodice, heaving an elated breath, he smiled into her eyes. \"You look absolutely stunning. Now, go and marry your man.\"\n\nThen he winked and said to Marina, \"And you, my darling, are coming with me. I want to try and shield you as best I can till the ceremony is over. So, that man of yours has nothing to distract him when he gets his first look at you, in that gorgeous, sexy red dress.\"\n\nMarina felt a shiver go through her as she looked up and got her first look at Henry. He made such a dashingly handsome James Bond, standing beside his brother as his best man, just to the right of the white rose covered wedding arch.\n\nHenry flashed Jenn a warm smile as she began the walk up to meet her groom. She looked gorgeous in her off-white gown, clutching her father's arm as she wiped away a tear. As she took the last steps to join them at the archway, Henry had her grinning and blushing as he whispered to her, \"You look beautiful.\"\n\nAs Chris stood waiting for his bride to join him, Marina decided that the only way to describe the groom was absolutely resplendent. He looked so regal in his pale blue, heavily brocaded velvet suit, gold silk waist coat and buckled shoes. And with his white knee britches and high-necked lace shirt, he really looked the part of Marie-Antoinette's husband, King Louis XVI.\n\nJenn and Chris tenderly smiled into each other's eyes as they joined hands to commit their lives to each other.\n\nOut of the corner of her eye, Marina noticed Darius wiping away a tear and sniffling into a lace hanky she'd seen him pull from the pocket of his purple velvet disco suit. Seeing her smirk, he just shrugged, gave her a little smile and pulled a second one out of his other pocket and offered it to her.\n\nThey were seated behind a group of people that all seemed to be wearing either very tall hats, or big elaborate wigs. Marina quietly laughed, seeing the way that Henry was tipping his head, trying to find her in the crowd. Though she realized, she had to carefully peek around their big heads, just to be able to watch the ceremony.\n\nThe wedding itself was short and sweet, though filled with emotion. Everyone seemed to be wiping at their eyes as Jenn and Chris read the vows, they'd written to each other. Not only promising to love each other in good times and bad, and for as long as they both shall live, but as expected, taking the opportunity to playfully tease each other a little, too.\n\nChris looked into Jenn's eyes and trying not to laugh, solemnly told her, \"And I promise to try and keep you safe from falling equipment, even if I owe this day to a light that nearly crushed you.\" Then he pointedly eyed her as he grinned. \"I also promise to try and tame your sweet tooth, at least as much as I can.\"\n\nJenn giggled as she looked over her shoulder and spotted Marina quietly laughing.\n\nThen Jenn's expression sobered, as she gazed up at her groom, and the crowd hushed as she kept a straight face as she told him, \"And I promise to love you... and your Star Wars Collection, and even give it its own room in the basement once our new house is finally finished.\"\n\nEveryone laughed out loud at that, and Chris just shook his head, though Henry could see his brother was laughing, too. Since anyone who knew him, knew that he was a total Star Wars geek from the time he was a kid.",
        "After their vows, as they slipped the rings on each other's fingers, the minister smiled and pronounced them man and wife, telling Chris that he could now kiss his bride.\n\nThe way Chris looked into his bride's eyes before he pulled her into his arms and claimed her lips, had everyone clapping and a few of the men whistling, as the kiss seemed to go on and on.\n\nFinally, they pulled apart, both of them beaming at their family and friends, now that they'd done the deed and were finally married. Laughing and smiling, Chris offered his bride his arm as they made their way up the petal strewn path, back into the hotel for the reception.\n\nWhen Marina finally stepped out from behind the people blocking his view, the moment Henry got his first look at her, he actually froze where he was standing and just stared. \"Wow,\" he said, his lips curling up in a slow appreciative smile as he approached her. \"You are one sexy looking Jessica Rabbit and that is an incredible dress.\"\n\nSmirking, as she looked him over in his perfectly fitted suit, she reached up and tweaked his bow tie. \"Darius picked it out for me, thought it would be a good fit with my red hair.\"\n\nHenry slipped his arm through hers, covered her hand with his, winked and said, \"Then remind me to thank him.\"\n\nThe Ballroom was magical, transformed into a Halloween Wonderland. Oddly spooky and romantic at the same time, Marina thought as she gazed around at the white silk covered walls with subdued blue lighting shining up from the floor. Which worked perfectly with the tiny, sparkling fairy lights nestled in the black billowing ceiling and bright orange pumpkins and groupings of fall flowers tastefully scattered around the room.\n\n\"Oh, I've got to see the cake,\" she said, pulling him along when she noticed everyone oohing and awing as they gathered around it.\n\n\"Henry, you've really outdone yourself.\" Marina squeezed his arm, her eyes going everywhere at once. \"There's just so much detail. And somehow, you've managed to make it look as spooky as it is sweet. You're just so talented. The old haunted house with the web-covered windows looks amazing. And I love those red-eyed buzzards, staring down at the tomb stones. You've made them look a little comical and not so scary, sitting close together on the long, dark branches, like a couple of love birds. It's absolutely perfect.\"\n\nHenry just shrugged as everyone kept patting him on the back and telling him what a great job he'd done, as he muttered, \"I just hope they like it.\"\n\nHe didn't know that Jenn and Chris were coming up behind them to take a look. The moment she saw it, Jenn gushed, \"Oh wow! I love it!\"\n\nHenry chuckled at the way she threw her arms around his neck and dusted kisses all over his face. \"Thank you so much, Henry. It's everything I'd hoped for and more.\"\n\nGiving him a wink, Chris patted his brother's shoulder and quietly said, \"Thanks bro'.\"\n\nJust then the band struck up, leading off with a jazzy rendition of \"That Old Black Magic,\" as tuxedo clad servers began wending their way through the costumed guests, offering hot hors dourves and cocktails.\n\nChris swept his bride into his arms and onto the dancefloor, everyone smiling as they held each other's gaze and had their first dance together as man and wife. Gradually, as the song wore on, the floor filled up, as a few others joined them.\n\nMarina smiled and thanked the waiter as she accepted a glass of white wine, then leaned in and whispered to Henry, \"Look who's out there dancing cheek to cheek.\"\n\nSmiling, as he watched them, Henry remarked, \"And they look pretty happy, too.\" His father turned his head just then and gave him a wink as he hugged his mother a little closer and brushed a kiss to her cheek.\n\nNice as it was to see his parents getting along, Henry was having a hard time thinking of anything but Marina. Wondering how he could process even a single thought that didn't involve getting her naked, when she was standing beside him looking like sex on legs.\n\nTaking a quick look around, he noticed he wasn't the only one. It seemed every guy in the room was taking their time looking her over. Though he couldn't really blame them. She just looked so incredibly sexy with her long, red hair curling down over her shoulder. Her perky breasts almost spilling out over the top of her dress and the long slit at the side, giving him a nice view of her shapely legs. He could feel himself getting hard just imagining how good it would feel to peel off the little red sparkler, so he could take his time doing a little exploring.\n\nAmazingly, what really impressed him though, was that she was happy to join in the fun, although she'd never met his family before, she seemed to fit right in. She'd even been fine with sharing a room with Jenn, to keep her from feeling anxious about the wedding, while he'd had to put up with his brother's snoring.\n\nHe noticed a few people leaving the dance floor as the band began to play the sultry, When I Fall in Love. Gazing into her big green eyes, as the singer crooned; \"When I fall in love, it will be forever.\" Henry knew it wouldn't take much to find himself falling under her spell, unless he already had.\n\nEager to have a chance to hold her, Henry took her drink out of her hand, set it down on a table, and nodded his head at the other couples. \"How about we take a turn on the dancefloor, and show my folks how it's done.\"\n\nAs he slipped his arms around her, the teasing sparkle in her eye as she smiled up at him, already had him thinking ahead to them finally getting a chance to share a bed.\n\nPulling her tighter into his arms, his hand sliding down over her back, he couldn't believe how silky soft her skin felt as he traced his fingers along the edge of her dress, barely ghosting the curve of her shapely little backside.\n\nAs the lights began to dim, their eyes met. Mesmerized by the look of wonder in her eyes, Henry tipped up her chin, dropped his head, gave in, and touched his lips to hers. A sweet little whimper escaped her as she tightened her arms around his neck, and pushed up on her toes, as their tongues slipped between their lips to deepen the kiss. Tugging her against him, splaying his hand across her lower back, till they were hip to hip, he knew she had to be able to feel what she was doing to him.\n\nBreathless, Marina studied his face as they broke apart, hoping the kiss was just the start of a night to remember.\n\nThe slow, teasing smile he gave her as he raised an eyebrow, felt like he was asking her where she wanted things to go.\n\nIf she was going to be honest, what she wanted, if only once, was a night of hot, sweaty, mind-blowing sex, that would live with her forever. Especially since she knew it might have to, if they were going to be done with each other after the weekend.\n\nAs the song came to an end, and the lights went up, almost forgetting where they were, they looked around and noticed that dinner was being served. With his dark, heated gaze on hers, Henry lifted her hand to lips, pressed a kiss to the back of her hand, and nodded at the table. \"I think we'd better take our seats.\"\n\nSitting close, side by side, there was a definite crackle in the air between them. The sense of anticipation almost palpable as Henry slipped his arm around her shoulder and began to gently stroke a finger across the tender skin above her breast, sending a shiver down her spine. As the servers, oblivious to what was playing out between them, were busy placing salads on the table.\n\nSuddenly, a nagging feeling of being watched had her skin prickling. Turning her head, Marina looked around to see if someone was watching. Over at the next table a heavily made-up Elvira, Mistress of the Dark was glaring her down, the intensity in her gaze enough to nearly bore a hole right through her.\n\n\"I think we have an audience,\" Marina whispered in Henry's ear.\n\nHenry looked up, groaned and muttered, \"It's Jenn's cousin, Deandra.\"\n\nHer eyes dancing with mischief Marina reached up and stroked her hand along his clean-shaven jaw. \"Guess I should let her know that we're involved, or at least pretending to be.\" Surprised when she touched her lips to his ear and even gave him a little lick, Henry could actually feel his dick jump in his pants.\n\nNot done teasing, the little minx drew his earlobe between her lips, making him shudder. And just as she was giving him a playful little nip and tug with her teeth, his mother sat down beside her at the table, smiled and said, \"Nice we're seated together, so we'll have a chance to talk.\"\n\nMarina instantly sat back in her seat, her cheeks a deep scarlet as Henry winked at her, trying not to laugh.\n\nUgh, almost getting caught by his mother had her feeling like she was sixteen again, messing around in her boyfriend's basement, learning how to French kiss. She rolled her eyes remembering Mrs. Landry showing up to surprise them with a big bowl of popcorn that she nearly dropped on the floor. When she'd gasped at the sight of her son with his girlfriend on her back on the couch, dry humping her through their clothes while they kissed like there was no tomorrow.\n\nLuckily for Marina, Henry's mother hadn't picked up on the fact that her son and his lady friend were practically getting it on at the table when she'd pulled up a seat to join them.\n\nLooking up, his father, dressed as a very debonair Count Dracula in a white shirt and long black cape, smiled, nodded hello and sat down next to Henry. Marina was glad he hadn't arrived any earlier, or he would have had a front row seat to her naughty shenanigans.\n\nHenry's dad passed the bread basket over to his son, cleared his throat and whispered in his ear, \"Thought you might want to know that I'm working again. It's nothing like the position I had before, but it's a good job with benefits. And now that I'm sober, and have been for a while, your mother has agreed to give me another chance.\"\n\nHenry looked over at his mother, a little surprised that she'd be willing to try again. Giving him a pat on the arm, he gave his dad a smile. \"I'm happy for you, Dad.\"\n\n\"I know I fell apart when I got let go from my job, when the company decided to downsize. But I gave them almost thirty years of my life, working my way up the ladder. Then when all they did was thank me with a crappy watch and a handshake, and showed me the door, it felt like the bottom fell out of my world.\"\n\n\"I remember, that was pretty brutal.\"\n\n\"Well, now that I know what I almost lost, I'm not going to screw up again, that I can promise you.\"\n\nHenry clapped his dad on the shoulder. \"I think you'll do it, too.\"\n\nGazing across the table at his mother, his father smiled. \"Yeah, now that I've got this one last chance, I'm going to do everything I can to keep her.\"\n\nWatching Marina talking with his mother, had Henry wondering if she just might be the wakeup call that he needed, to get him to re-join the land of the living. Especially after the disaster he'd been through the last time he'd had the courage to put himself out there.\n\nHe's dad nudged his elbow. \"Your lady friend seems nice. She's a pretty one, too.\"\n\n\"That she is,\" Henry agreed, smiling at the way Marina was already hitting it off with his mother as they chattered away, laughing like they'd known each other forever.\n\nMarina thought his mother looked stunning in her midnight-blue sheath dress, long black gloves and little tiara tucked in her upswept sandy brown hair, with a double string of pearls adorning her neck. \"I love your dress. It's so pretty, it hardly looks like a costume.\"\n\nHis mother leaned in and told her, \"Darius said it's the Audrey Hepburn Look from Breakfast at Tiffany's. And he thinks it makes me look like a cougar on the prowl.\" Both of them laughed as they agreed that Darius was a lot of fun.\n\n\"Have you heard about the ghost that's supposed to be haunting this place, apparently he's a flasher,\" his mother whispered to Marina.\n\n\"Really?\" Marina giggled. \"That's hilarious. Doesn't sound like your typical ghost.\"\n\n\"I think it might be fun to run into him, just to see if it's true.\" Marina nodded in agreement, as she reached for her wine, then she nearly choked on it when his mother remarked, \"Imagine coming back from the dead, just to wave your willy around at poor unsuspecting people. Of course, he might be on the small side, and has issues.\"\n\nStill laughing with his mom, Marina caught Henry looking. And he could actually feel the warmth of her smile, as her eyes lit up as she gazed into his, making him smile back and reach for her hand.\n\nAll he could think of now was finishing what they started once they were alone in their room.\n\nIt helped that dinner was amazing, and his dad was in fine form, making them all laugh, like he used to do in the old days.\n\nWhen it was time to cut the cake, Henry said to Marina, \"We should go and get a picture.\"\n\n\"Good idea.\" She reached for her purse.\n\nPosing for the photographer and videographer, Chris had his arms wrapped around his bride, while they held the knife poised over the cake. Then with a wink at his brother, he loosened his grip and let Jenn push the knife in, till she realized she'd hit something solid. \"There's something buried in the cake,\" she said, taking a closer look, she used the knife to pull out the ring box.\n\nThen she turned, and her mouth fell open as she looked at her new husband. \"Oh my goodness, what did you do?\"\n\nChris shrugged. \"Why don't you open it and see.\"\n\nJenn quickly wiped the icing off with a napkin. When she popped it open and saw the school ring from her high school, engraved with the year she would have graduated, eyes brimming with tears, her bottom lip trembling, she mouthed, \"Oh, Chris, thank you.\"\n\n\"You've graduated, sweetheart,\" he told her as he pulled her diploma out from under his jacket.\n\n\"This is the nicest thing anyone's ever done for me,\" she said, throwing herself into his arms, clutching her diploma.\n\nHolding her close, Chris kissed her cheek and she squeezed him tight with happy tears running down her face as she laughed.\n\nMarina was looking confused and a little worried, so Henry explained about her missing out on graduating because of her career.\n\nAs she realized what he'd done, Marina smiled up at him. \"That was a really nice thing to do.\"\n\n\"It was Chris's idea. I just hid the ring.\"\n\nShe noticed he was pretty humble, which was another thing she liked about him. A lot of guys she'd known loved to brag about themselves. But not Henry. Although, with a thriving career like his, he had plenty to brag about.\n\nThe band took a break after dessert was served, and everyone got a chance to taste Henry's delicious red velvet wedding cake.\n\nThe disc jockey waved at the happy couple as he took over, playing nothing but disco, as requested by the bride.\n\nJenn and Chris took to the floor, and everyone followed shaking their booties and laughing. The baby boomers really got into it, belting out the words to all the disco hits, as they danced to Donna 'Summers Last Dance,' Earth Wind and Fire's classic, 'September' and Harold Melvin and the Blue Notes, 'Don't Leave Me this Way,' and of course Le Freak's, 'Chic.'\n\nWhen Kool and the Gangs, 'Ladies Night' belted out from the speakers, the men all stepped off and circled the dancefloor, to let the ladies have some fun.\n\nJenn and Marina, dancing with the two mothers, were laughing like crazy, as they hip-bumped each other.\n\nSmiling, Chris nudged his brother, \"Hey, mom's got some moves. Never really seen her dance like that. She's really letting loose.\"\n\nHenry was too busy watching Marina shaking her sweet little bootie, to notice anyone else. Already, she looked like she was part of the family, and everyone seemed pretty happy that he'd decided to bring her as his date. He was glad he'd decided to ask her, too, or he never would have realized how easy going and fun she really was.\n\nIt was late by the time the music was winding down and the newlyweds were waving goodnight, so they could head up to the honeymoon suite. Tomorrow after brunch with the family they'd be heading off for a romantic little getaway in a secluded cabin somewhere off in the woods.\n\nConsidering that they could go anywhere they wanted, Henry knew they must really be in love, if all their idea of a perfect honeymoon was spending some quiet time alone together.\n\nAfter Henry had hugged his brother, with an affectionate thumb on the back, and he'd kissed his new sister-in-law goodnight, as Jenn and Marina squeezed each other tight, grinning like old friends, Henry was more than ready to finally head up to their room.\n\nAs they rode up silently in the elevator, Henry laced his fingers through hers, lifted her hand to his lips and pressed a kiss to the back of her hand, with both of them thinking ahead to what was about to happen once they got to their room.\n\nHenry had barely unlocked the door, and things heated up fast. He had her pinned up against the wall, sliding his hands under her dress, and over the back of her thighs as he claimed her mouth in a smoking hot kiss.\n\nMarina feeling as lost as he was, desperately sucking on his tongue, had him groaning, as he cupped her ass in both hands and squeezed.\n\n\"I need you naked,\" he breathed against her lips.\n\nShe could only nod as Henry's mouth descended on hers, their tongues teasing, their hands roaming, as their hearts nearly pounded out of their chests.\n\nHer voice ragged, she gasped. \"Henry, I need to feel you inside me.\"\n\nHis pulse racing, he swept her off her feet, and carried her over to the bed. Dropping her onto her back, he unfastened his tie, tore off his jacket, and tossed it aside. His eyes blazed with desire as she stared up at him wide-eyed, trembling with anticipation.\n\nShe felt a shiver go through her as she watched the rest of his clothes disappear, as he kicked off his shoes, tugged away his socks and finally unbuttoned his pants. Then he reached for his fly, with his eyes locked on hers, and he cocked an eyebrow -- and waited.\n\nMarina licked her lips, screaming inside her head for him to please drop his pants. She needed to see, to touch and oh god to feel every last inch of that magnificent body, or she felt she might actually die.\n\nHis gaze was teasing as he watched her tremble, as slowly, inch by inch, he tugged down his fly, till his pants were pooled at his feet. Eyes wide, she zeroed in on what was bulging in his skin tight, black boxers as it fought to break free.\n\nThere was no mistaking the need in her voice as she whispered, \"Henry, please...\"\n\nFinally, he relented, pushed down his boxers, kicked them away and his cock sprang free. Watching her expression as her eyes grew even wider, and her mouth fell open, he smiled, fisting himself in his hand. \"This what you want?\"\n\nThough she nodded her head that it was, she just kept staring. Wondering how it would ever fit, as she took in the sight of him so incredibly thick and long, and fully erect, and already weeping with a bead of pre-cum oozing from the slit.\n\nBlinking her eyes, she murmured, \"God, you're huge. I think you're even bigger than my cake!\"\n\nChuckling, Henry shrugged, sliding his hand along his shaft. \"Maybe a little above average.\"\n\nMarina rolled her eyes skyward. Not that she'd been with that many men, but she'd seen enough to know, that what he was fisting in his hand, was nowhere near average.\n\nThen she jumped when he broke into her thoughts, and told her, \"I need you on your front,\" as he took her by the shoulders, helping her roll onto her stomach.\n\n\"Why?\" she asked, looking over her shoulder at him, sounding slightly panicked.\n\nKnowing what she was thinking, he smiled against her ear as he whispered, \"So, I can unzip your dress.\"\n\nSliding the zipper down, she shivered as he dropped his head and dusted kisses across her shoulder blades and down the length of her spine. Groaning, as he pressed a kiss to her lower back, he savored the sensation of licking his way across the tops of her soft, warm cheeks.",
        "Tugging off her dress he tossed it aside, mesmerized at the sight of her, enticingly bare, save for a tiny red lace thong that barely covered her sweet, tight ass. His cock lurched in his hand as he inhaled the heady scent of her arousal, imagining how good they'd be together once he was finally pushing his way inside her.\n\nAs he helped her roll onto her back again, gazing down at her beautiful bare breasts, so full and round, her dusky pink nipples fully erect, he just had to have a taste.\n\nBut first, he tipped up her chin, and enjoyed taking his time savoring the feel of kissing her soft, warm lips. Then with her softly smiling into his eyes, he began to trace a slow, sensual path with his tongue across her collar bone, and down over the swell of her breasts, licking around each one, while carefully avoiding her nipples.\n\nThe way she narrowed her eyes, and nearly growled made him laugh as he kept up the torture, sliding his tongue into her cleavage, lapping and teasing, knowing exactly what she wanted.\n\nSlowly, lashing a warm, damp path around each breast, tickling the undersides with the tip of his tongue, he soon had her giggling. At least until he latched on and sucked one of her nipples into his mouth. Throwing her head back, she twisted her fingers through his hair, softly mewling as he made slow, sweet love to each breast in turn.\n\n\"Every inch of you is beautiful,\" he whispered as he gently flicked at her nipples with his tongue, smiling at how hard and pebbled they were getting as he traced circles around each diamond hard tip.\n\nShe had a such a lean, tight body, but with a nice set of curves. And the inviting little of tuft of red curls over her pussy had him eager for a taste. Spreading her legs open wide, he trailed his tongue over her belly, her mound, and inhaling her honeyed scent, he parted her lips and lashed out his tongue to discover that she was every bit as sweet as he imagined.\n\nMarina nearly bounced right off the bed the second he licked her. Smiling against her sex, he realized how responsive she was, as he dragged his tongue from her tight little back pucker all the way to her swollen clit, murmuring, \"You're so sweet, you're like honey.\"\n\nEyes wide, every inch of her shivering, she could hardly absorb what was happening. No one had ever gone down on her quite like this before. Usually, it was just a quick lick and they were done, thinking they'd done their duty. But now that he'd shown her what he could do with that tongue of his, she absolutely loved it! The heat of his mouth, the touch of his probing tongue, ooh and his fingers sliding their way inside her, had her shuddering all the way to her toes.\n\n\"Oooh, Henry, yessss, yessss, yessss,\" she hissed as he kept sliding his tongue through her folds, tracing circles around her clit, till he had her dissolved into a quivering mess.\n\n\"You like this?\" He asked, smiling, as he pressed hot, open mouth kisses to her heated flesh.\n\n\"No,\" she gasped, breathlessly.\n\nHe looked up at her, confused. \"No?\"\n\nSmirking, she stroked his head. \"No. I love it. No one has ever made me feel like this before.\"\n\n\"In that case, I'll try and make it really good for you.\"\n\nOh, god. What could he possibly do to top that, she wondered, considering she'd never come so hard in her life.\n\nBut thoughtful man that he was, he soon showed her. \"Oh, it's good. Hmmm, so good. Just like that,\" she murmured as Henry went back to lapping and licking and suckling, like she was the best thing he'd ever tasted. Till he had her nearly sliding right off the bed, sure she'd never felt as utterly boneless.\n\nApparently, intent on making her come and come hard for just as long as he could, he had her tossing her head on the pillow, her back arching right off the mattress, as she came again in a blinding rush, crying out, \"Oh, yes, Henry, yes! Please don't ever stop... please!\"\n\nHe chuckled as he slid two fingers inside her to give her a little more of what she needed, and watched her breathlessly writhe as he located her g-spot, and carefully nursed her through her orgasm. Looking up at her pretty face, she just looked so blissed out, he knew he'd never seen anything as sexy as watching her fall apart as she came.\n\nAs she began to slowly come back down to earth, her breasts still heaving, Marina watched, feeling a little spellbound as he plucked a condom out of his wallet and offered to let her do the honors. She blinked at him. \"You trust me?\"\n\nHis lips twitching, he nodded. \"Maybe not with a cake, but I trust you with me.\"\n\nThough he'd been teasing, he realized then that he really did trust her, maybe even with his heart, which was something he never thought he could do again.\n\nEyeing his pulsing erection staring her in the face, licking her lips she looked up at him. \"Would it be better if I wet it first,\" she smirked, \"like with my tongue?\"\n\nHenry could feel his eyes rolling all the way back in his head as he imagined her sliding her hot little tongue over every long, hard inch of him. But still, she had him chuckling with the teasing way she'd asked him. \"If you're asking for permission, the answer is yes.\"\n\nGiving him a naughty smile, she circled him in her hand, leaned in and barely touched him with the tip of her tongue. \"Fuck, Marina, that feels good.\" He groaned, throwing back his head and sinking his hands into her hair.\n\nWow, was he ever sensitive. If that little lick was enough to nearly get him off, she decided to see what he'd do when she really had a taste of him.\n\nReally getting into it, now that she saw how good it could make him feel, she took her time, slowly licking all around him. Tracing her tongue up and down, she lapped a little longer around the head, noticing he really seemed to like that, the way he was tightening his hands in her hair and starting to groan even louder.\n\n\"That feels incredible,\" he said, as his legs began to shake.\n\nSmiling up at him, she liked that he was into giving feedback, and voicing what he was thinking. Since she'd never considered herself much of an oral aficionado, it was good to hear what he liked. Especially, since this was the first time she'd ever really enjoyed doing this for anyone. Probably because he was almost levitating in mid air, he looked so blissed out, just from a little teasing with her tongue. That and the fact, that she realized she was more than a little in love with him.\n\nLetting her gaze roam over his firmly muscled body, she noticed that he was every bit as sexy as she imagined, too. With a nice matt of thick, dark chest hair trailing all the way down his perfectly toned abs and then lower still to his nicely trimmed package.\n\nAs she licked around him, and gave him a little more suction, gently rolling his balls between her fingers, she wondered if he'd shaved with her in mind, or if it was just part of his normal routine to keep himself tidy.\n\nRunning her hands up over his body and burying her fingers in his chest hair, as she sucked him a little harder, she liked to think the manscaping was done just in case he found himself like this, with her.\n\nLetting out a low deep growl as he twisted her hair in his fists, what she was doing just felt so fucking good, Henry knew if she kept it up, he'd be losing it before they even had a chance to make love. Considering all he could think of was sliding into her tight little body, as amazing as it felt to have her mouth on him, he knew he had to pull out.\n\nHe tried not to laugh at the look on her face when he said, \"Marina, you've got to stop.\" Her lips still stretched around him, blinking her eyes, she looked up at him, confused.\n\nBut when he said, \"I need to get inside you,\" she let him go of him with a 'pop', giving him a little smirk.\n\nShe held out her hand. \"Then you'd better hand me the condom.\"\n\nWatching the look of concentration on her face, like she was being tested, and really needed to pass, as she carefully rolled the latex down over his shaft all the way to his balls, made him smile. He'd never met anyone like her, absolutely adorable, quirky and sexy and so much fun. Already, this felt like so much more than just sex.\n\nFor their first time together, he decided it had to be missionary, so he could look into those pretty green eyes while he claimed her body with his.\n\nHer eyes were glimmering with a mix of amusement and hopefully a hint of affection too, as she lay on her back, looking up at him expectantly.\n\nSmiling down at her, Henry knelt between her legs, crawled up on his hands, bent and kissed her chin, gently nipped at her bottom lip and then sank his tongue past her luscious lips. Deepening the kiss, he mated with her mouth as he took hold of himself and carefully began to inch his way inside her.\n\nMarina's eyes grew wide at the size of him stretching her insides to fit, but she still kept her gaze on his as he pulled back and kept thrusting in a little deeper, till he'd finally bottomed out.\n\nOh god, she just felt so tight, clenching around him, and drawing him in even deeper. \"You feel so good,\" he whispered against her lips. Definitely the best thing he'd ever felt. She was such a perfect fit, and not just her body, but the way she made him laugh, even now, giving him a playfully wiggle of her eyebrows as he thrust into her body. Nothing ever felt like this before.\n\nShe would be so easy to love.\n\nThat thought ran through his mind as they kissed and he thrust and she squeezed him inside her, till he could feel he was getting close. And judging from the way she was panting and gasping for air, so was she.\n\nWhen he pulled out of her, still hard, she looked up at him, surprised. Until he lifted her legs over his shoulders, one after the other, pressing kisses to the sides of her knees as he pushed into her again, giving it to her right where she needed it.\n\n\"Henry, that feels incredible,\" she gasped, licking at her lips, shivering, as he filled her right up, till he was flush against her.\n\nShe didn't have to tell him, when it felt like he was sinking into heaven with every thrust. Clutching her ankles, his heart pounding, he groaned as he felt a jolt run down his spine straight to his balls. Still pumping hard, he switched up the angle till he could see that she was really starting to shudder and fisting the sheets in her hands, \"Oh, I'm coming so hard!\" she cried out, clenching around him so tight, he could feel his cock lurching inside her, like it was ready to explode.\n\nGritting his teeth, he growled as his release pulsed through him, like a volcanic eruption spewing his seed deep inside her as he came. Still gently thrusting, the way she smiled into his eyes, had him wishing they could be like this forever.\n\nHis knees trembling, he finally pulled out and dropped onto the bed beside her, as they fought to catch his breath.\n\nWrapping his arms around her, and brushing the hair back from her eyes, as he gazed at the elated smile on her gorgeous face, he almost told her that he loved her. Somehow, he held back, wondering if she'd think he was crazy. A few days away together, and already he was thinking of her as his.\n\nComing on morning, still half asleep, sensing her in bed beside him, Henry reached for her in the dimly lit room, pressing kisses to her back. When he felt she was awake, he lifted her leg and slid his hand over her sex till he had her nice and wet, and starting to shiver.\n\nHer nipples tingling, she smiled at him over her shoulder. \"You know, I'm clean and on the pill.\"\n\nHenry was happy to hear that, knowing that he was clean too, he began to nudge his way inside her. \"Good to know.\"\n\nBareback was even sweeter. She just felt so warm and tight, he wished they never had to move a muscle and could just stay locked in carnal bliss. Reaching around, tugging at her nipple as he flexed his hips and filled her up, the sexy little sounds she was making told him she was close, and it wasn't long till he was following right behind her.\n\nShuddering as they came, he framed her face in his hands and kissed her as they slid into the abyss, both of them softly sighing, as slowly, breath by ragged breath, they came down from the peak.\n\nHenry had had plenty of sex in his lifetime, but had never felt anything even close to this before. With her, it was like they were connecting on so many levels.\n\nWrapping her in his arms, pressing a kiss to her shoulder, he couldn't remember ever feeling as good. It was like magic with her, every time.\n\nStill, before he got ahead of himself, and they got too involved, he thought he should at least bring up the subject of their age. He didn't think it was fair to hide the fact that he was more than a few years older than her. Slipping his arm around her waist, he kissed his way up to her ear and whispered, \"You know, in a few weeks I'll be forty.\"\n\nShe turned her head and flashed him a grin. \"You sure don't feel like it.\"\n\nProbably because his dick was still semi-hard, even after he'd come. And he had no desire to pull out, and why would he, when it felt so good to be wrapped around her, and still warm and snug inside her.\n\nNuzzling her neck, he asked, \"You don't think that sixteen years is a lot?\"\n\nWith a little shiver running down her spine, from the feel of his lips tickling her, trying not to giggle, she shrugged and answered, \"You're not that much older than I am, it's not like you're ninety.\"\n\nChuckling, he agreed, \"Not quite.\" But as he realized where they would have been at the different stages in their lives, sixteen years felt like a lifetime. \"But if you think about it,\" he mused, \"it is a lot of years. You were just being born, the year I started driving. And while I was graduating from high school, you were just starting to take your first steps.\"\n\nHeaving a sigh, Marina looked a little sad as she looked back at him, realizing what he was doing. \"It doesn't really matter how old we are, if we're only going to have this weekend. Then life will go on, just like before.\"\n\nNot sure what to say, Henry just nodded. He'd kind of thought, now that they'd connected, once they were back home, they could at least go out once in a while, even just for dinner. But obviously, this was just a fling for her, and she couldn't see any future for them.\n\nStill, when she lifted his hand to her lips and pressed a kiss into his palm, it felt so good, he thought she had to at least be feeling something for him.\n\nUntil he'd brought up the difference in their age, trying to give her a reason why it would never work out between them, Marina had been hoping that this might have been the start of something for them. And maybe they could see each other once they were back home, even just to see where things might go.\n\nBut it could be, after going through such an awful experience with his last girlfriend, he wasn't willing to risk getting hurt again.\n\nThe sad thing was, she knew they'd be good together, if only he'd be willing to give them a chance.\n\nDeciding to get a shower, Marina pulled out of his arms, got out of bed and walked towards the bathroom. Smiling back at him, she said, \"I'm getting a shower. And if you want, you can join me.\"\n\nHenry shot out of bed, and made her squeal and laugh when he picked her up and kissed her as he carried her into the shower.\n\nSince she hadn't decided just to go in and wash on her own, but had invited him to join her, he still had hope that maybe she felt even a little something for him. At least, he could work with that.\n\nBoth of them were smiling into each other's eyes as they soaped each other up under the warmth of the pelting water. As Henry enjoyed the feel of soaping up her warm, soft breasts, he wished now that he'd kept his thoughts to himself about the difference in their ages.\n\nBut as she turned and let him scrub her back, he realized she might have had her mind made up even before they got here, that they'd have a few days of fun together, and that would be it.\n\nAt least they were showering together, and still seemed pretty happy with each other.\n\nTo test the waters, he pressed himself against her ass, and smiled at the way she thrust back. And when he touched his hand to her back, to get her to bend at the waist, the way she started clawing at the tiles as he bent his knees and pushed his way inside her, gave him hope. Because if they were this good together, maybe they could work through whatever had her shying away from him.\n\nAlready, he could tell from her body language that she was about to climax. Reaching around her, massaging her clit, they both began to groan as a wave of indescribable bliss swept over them, as they both began to shudder.\n\nStill buried inside her, Henry wrapped his arms around her and pulled her against him, pressing kisses into her hair, wishing she could feel what she did to him.\n\nAs he realized, for the first time in his life, that he was in love.\n\n****\n\nDownstairs, the family was already gathered around a few tables in the dining room for the brunch buffet. Henry's mother was beaming, sitting beside his dad, as he smiled into her eyes, gently stroking her hand. Which had Henry thinking that if they could make it work, after all they'd been through, maybe he and Marina stood a chance, too.\n\nChris and Jenn had saved seats for them at their table and waved them over when they saw them walking in. As the waiter poured them coffee, Henry chuckled at the look his brother gave him, teasing him with his eyes. Probably could tell that they'd connected. Though he'd have no way of knowing just how deeply.\n\nThey were talking about the wedding and Jenn was showing them some pictures on her phone that some of the guests had sent her. When they all turned their heads, when someone started gasping, sounding like they were choking.\n\nMarina jumped out of her chair and ran to his father, frantically pointing at his mouth and struggling to breathe. His mother was waving her hands around, panicking. \"I think he's choking.\"\n\nMarina got behind him, wrapped her arms around him tight, bent him forward, and with her hands fisted together, thrust up sharply under his ribs. Then they all watched as an olive shot out of his mouth and landed across the room. Hank was trembling as he drew in a breath, clutching the chair beside him. Looking back at Marina, he murmured, \"I think you just saved my life.\"\n\nHenry was stroking his father's back asking him, \"Are you okay now, Dad?\" As his father nodded, Henry asked Marina, \"How did you know to do that?\"\n\n\"Last class Annika and I took, was life saving. And luckily, I did really well in that.\"\n\nHe was glad she'd taken that course, or his father might not have lasted long enough for anyone to call an ambulance.\n\nAs his mother helped his father back into his seat, Henry said to Marina, \"I don't know how to thank you.\"\n\nShe just shrugged, and went to see if his dad was okay.\n\nAfter everyone had calmed down and went back to their tables, a bleary-eyed Darius wandered into the dining room, looking like he could really use a coffee.\n\nJenn called over the server holding a coffee pot, as she pulled out a chair for Darius. \"You, okay?\" she asked him, squeezing his hand once he'd sat down.\n\n\"Oh, last night there was just too much food, and too much dancing, and maybe a little too much to drink, too,\" he said, smirking. \"But it was a wonderful wedding, and everything was perfect. And you looked like a queen.\"\n\nWatching Darius close his eyes and moan as he took his first sip of coffee, Marina remembered they had to give back the costumes. \"On our way home, would you like us to bring the costumes back to your studio, Darius?\"\n\n\"Oh, I've got my big old cube van that I use for deliveries, so I could bring everything I needed. So, I can take them all back with me.\"\n\nThen he craned his neck to look around Marina, and smiled at Henry. \"And what did you think of your lady love, dressed so fetchingly last night, Mr. Wilde?\"",
        "Henry looked at Marina; even with her hair up in a pony tail, dressed in a simple pair of black leggings and body-hugging white sweater, with over the knee black boots, he thought she looked gorgeous. \"I think she always looks amazing,\" he said, smiling into her eyes. \"Though she did look really beautiful last night, too.\"\n\nDarius chuckled. \"Now, that's the answer of a man in love.\"\n\nKeeping his eyes on hers, Henry squeezed her hand, thinking that he wasn't wrong.\n\nDarius put down his coffee, leaned in and whispered loud enough for them both to hear, \"I just hope I get an invite to the wedding.\"\n\nLaughing, Marina looked to see Henry's reaction, thinking he'd be uncomfortable talking about marriage, especially between the two of them. But he just kept smiling into her eyes, giving her hand another little squeeze.\n\nDarius set his coffee cup back in the saucer and with his brows raised, he looked back and forth between the two couples. \"Just to put it out there, for future consideration, I would like to point out that Darius is a very nice name for a boy.\"\n\nAs everyone laughed, he winked at Jenn and whispered against her ear, \"Soon, I hope your dream comes true, and you'll be blessed with your very own bundle of joy.\"\n\nJenn kissed his soft brown cheek, and whispered, \"Let's hope.\"\n\nAfter they'd all said their goodbyes with lots of kisses and hugs, Henry went to the front desk to settle their bill, so could they start their journey back home.\n\nHe was surprised when the man at the desk, shook his head when he went to hand him his credit card, smiled and said, \"Everything's been taken care of, Sir, courtesy of the bride and groom.\"\n\nMarina standing nearby, was looking closely at a small framed photograph on a table by the front desk. Though it was kind of fuzzy, she could tell it was a young man dressed in what looked like old fashioned waist-coat and britches. As she studied his eyes, she could see that he looked haunted; his expression pained as he stared back at the person taking the picture.\n\nAs Henry put his credit card away, thinking he'd have to call and thank his brother and his new wife, Marina asked the man at the desk, \"Does this man in the picture have something to do with the estate?\"\n\nLooking down at the photo, the young man nodded. \"One of our guests, out for an early morning jog took that picture. That's William McPhee, affectionately known as 'Willie,' our resident ghost. Legend has it, he was a groom here at the estate, and he fell madly in love with the owner's daughter, a very pretty red-head,\" he said, smiling at Marina. \"When the owner caught them alone together in the stable, he had the other servants tie him up, while he went to get a butcher knife from the kitchen, so he could dismember him, to make sure it never happened again. Imagine the terror in his eyes. His heart had to be in his throat as he awaited his fate.\"\n\nMarina's eyes went big. \"Oh, my goodness. And did he actually do it?\"\n\nHe shook his head. \"Apparently not. It seems the other servants took pity on Willie, since he was always friendly with the staff. As the master was looking for a knife, they let him go, and said that he'd over powered them.\"\n\n\"Oh, wow. What an amazing story.\" Then she thought about what Henry's mother had told her about the ghost. \"He's not the willy waving ghost, that everyone's talking about, is he?\"\n\nThe young guy laughed. \"That's our Willie. The theory is, he's just trying to prove that he got away clean, and he still has is uh... equipment intact.\"\n\n\"That's too funny. It kind of makes sense though, he might have lost the girl, but he got to keep the family jewels.\"\n\n\"Well, some think that he is still roaming the grounds looking for his lady love, refusing to believe that he's lost her.\"\n\nLooking over at Marina, Henry could sympathise. \"Too bad we never got a chance to see him while we were here.\"\n\nSmiling, the young man shrugged as he went to answer the phone. \"Maybe next time. Thanks for staying with us. Hope you have a safe trip home.\"\n\nAs Henry was steering his way down the winding drive way, heading toward the gates, he looked over at Marina. \"You believe that story? Or you think it's just something they tell the guests to keep them coming back, hoping to see the ghost.\"\n\n\"I don't know. It sounds like quite a few people have seen him.\" Then she took a glance at the side mirror, and could hardly believe her eyes. She reached over and grabbed Henry by the arm. \"Henry, stop! Look back. It's Willie and he's waving.\"\n\nAs Henry stopped and turned his head, he said, \"Is he waving his willy, or just waving?\"\n\nShe laughed at that, but then she said, \"Oh, look, it's like he's disappearing in a puff of smoke. You saw him, though, right?\"\n\n\"Yeah, I got a glimpse.\"\n\n\"Well, I guess we got our answer, because he looked real enough to me.\"\n\n\"Yep, I'd say they've got a ghost.\"\n\nDriving down the highway, taking in the fall colors, Henry turned on the radio, and he felt Marina giving him the side-eye as Drake and Rihanna's, hit song 'Take Care,' was playing. As Rihanna crooned, \"I know you've been hurt by someone else. I can tell by the way you carry yourself. If you let me in, here's what I'll do, I'll take care of you.\" He thought it might be his cue.\n\nThey drove for a while in silence, till finally he cleared his throat and decided it might be time to open up to her, and let her know where he was coming from.\n\nFirst, he reached for her hand, and pressed a kiss to her fingers and looked into her eyes, before he started. \"I was in a relationship a few years back, that ended pretty badly. It's basically why I gave up on dating.\"\n\nThough she'd heard most of it from Jenn, Marina just nodded, and let him get it out.\n\n\"She was dancer, a ballerina, top of her game when she got hurt.\n\n\"She'd been wanting to move in with me, and I finally agreed, but I didn't realize it was because she was broke, and couldn't afford to pay her rent. I also didn't know that she'd become addicted to her pain meds, and started buying whatever she could off the street. She needed money to keep up her habit, and for a while I didn't notice that money was disappearing from my bank account and that she'd also started to sneak money out of my wallet. But that's when I knew she was in over her head, when I realized she was stealing from everyone she knew. I offered to get her help, managed to get into one of the best rehab facilities in the country. But she barely stayed a week and walked out, and went back to her old ways.\" He shrugged. \"And then she died. Got hit by taxi fighting with a dealer over some pills.\"\n\n\"How sad.\" Marina squeezed his hand, feeling his pain.\n\n\"Yeah, it was pretty bad. We weren't really involved anymore by then, but it still hit me hard, especially since I had to go down to the morgue to identify her body, with all her family in Russia. I had to call and tell them she was dead, too, at only twenty-seven.\"\n\nNot even sure what to say, she wrapped her hand around his and just held it tight.\n\nHe shrugged. \"So, that kind of put me off dating. Didn't feel like I could trust anyone anymore.\"\n\nShe nodded. \"I never went through anything that bad, but I know I've got trust issues. Last guy I was seeing, was trying to convince me that were solid enough that it was time he moved in with me. Though I didn't even know where he lived, even after we'd been dating for over six months. Turned out, he couldn't take me home because he had a two-year-old son, that he'd neglected to mention, along with a baby mama that he was still involved with, considering they were sharing a one-bedroom apartment.\n\n\"A mutual friend told me to steer clear of him, and when I asked why, she told me the whole story.\"\n\nLooking down at her hands in her lap, she murmured, \"It wasn't the first time I'd been lied to, and eventually I just got tired of trying to figure it all out; who was lying, who was telling the truth, or if I even cared enough to want to know. So, I decided to take a break, and...\" She smiled at him across the car. \"That's how I wound up in your class, with my sister dragging me there to get me out of the house.\"\n\nHe smiled back and lifted her hand to lips and kissed her knuckles. \"Well, I'm glad she did, or we never would have met.\"\n\n\"Me, too.\"\n\nWhen they got to her place, he helped with her bags. At her front door, smiling into her eyes, he brushed a kiss to her lips and surprised her when he winked and said, \"Guess I'll see you in class.\" Then he was jogging back to his van and driving away.\n\n\"Yeah, I guess so,\" she said as she watched the van disappear around the corner.\n\nOr maybe not.\n\nMarina was reading a long wordy email for the third time, trying to decipher exactly what her client needed. From what he was saying, it sounded like he had a large open space that he wanted converted into lots of smaller work spaces, while still trying to make the place feel open and spacious. She shook her head, wondering if she'd read it right, and decided to read it again later, or maybe reach out to him to see if he could explain it any better over the phone.\n\nRubbing the back of her neck, she thought maybe a cup of herbal tree and stepping outside for a few minutes, might help her to think.\n\nOf course, it probably would help if she could get a certain tall, dark handsome baker out of her head. She wondered how just a few days away with him, had her wishing for more.\n\nBut he'd made it pretty clear that he thought she was too young for him, and he wasn't interested in anything more than what they'd already shared.\n\nHe didn't even offer to come in when he'd dropped her off, just muttered, \"See you at class,\" and left.\n\nAt the sink, about to fill the kettle, her phone chimed, and she picked it up and noticed it was her sister. \"Hey you.\"\n\nAnnika, chuckled. \"Hey you, too. So, what have you been up to lately?\"\n\n\"Oh, you know, the usual.\" No way in hell was she going to tell her about her few days away with Henry, or she'd never let her hear the end of it. And her mother would probably be calling her next, to ask her what happened with this new man she'd heard about, because her sister could never keep a secret.\n\n\"Well, at least we've got the cake class tomorrow night to look forward to, so that'll get you away from the house for a couple of hours.\"\n\nMarina wrinkled her nose as she tried to wiggle out of going. \"I was kind of thinking that I might not go back. I'm pretty busy right now. And as we all know, I don't exactly have a knack for creating pretty cakes. You saw that disaster I made last time.\"\n\n\"But we've finished everything we've taken so far, even that horrible hot yoga class that we both hated. Frying our asses off every week, and twisting ourselves into pretzels, was no fun for either of us. We got through it though, and stuck it out till the end. And this class is just for fun. It's not like we're being tested, or anything. So what if your cake looked like a dick. We're still learning something, and getting a little better at it every week.\"\n\nExcept, that she was afraid that her heart might actually break the minute she saw Henry again.\n\nAs Marina walked into the classroom with her sister by her side, she was a little afraid to lift her gaze from the floor to look at Henry.\n\nBut he seemed fine, and just smiled and said hi to everyone like he usually did. And told them they'd be working on birthday cakes, which he thought would come in handy for most of them\n\nHe took a few white iced cakes out of the fridge, and explained as he created a border around the bottom of one of them, that there were lots of different trims they could use to finish off a cake.\n\nHe let Annika try and do some of the border, he'd just done. Then Irena smirked, looking smug, when the part she did looked as good as Henry's.\n\nThen it was Marina's turn, which meant she had to go up and stand next to him while trying to create a border, without shaking like a leaf, or breaking into tears.\n\nHenry noticed her hand was pretty shaky, so he wrapped his hand around hers, and explained, \"Just do one loop at a time, and keep the pressure steady. That's it.\"\n\nThough she could feel her heart pounding just from the touch of his hand, Marina just nodded and stepped aside so someone else could do the next part.\n\nAfter they'd all had a turn, he showed them how to create roses, as he spun a few delicate little blooms on a little metal holder, that he transferred onto the cake.\n\n\"Now, let's do it together,\" he said, and walked them through the steps, until they'd all produced something that looked like a flower. A few of them looked almost perfect and some of them, like hers, not so much.\n\nHenry showed them a few of the other specially designed tips and explained how easy it was to pipe leaves or little petals on a cake, which he said they could use to decorate the whole surface.\n\nMarina began to relax when she realized that all they were doing was their usual class, and Henry wasn't doing anything differently, or going out of his way to make her feel uncomfortable.\n\nStill, she kept her eye on the clock, counting down the minutes till she could clean up her work bench and leave.\n\nThen he said, \"Of course, you can't do a birthday cake without writing Happy Birthday across it. So, I'll show you a few different ways to write.\"\n\nHe held up a plastic device that he was slipping little plastic letters into, explaining, \"If you're worried about ruining your cake once it comes to writing on it, this thing's almost fool proof. You just slide the letters across, centre them, push them into the frosting, then...\" as he traced each indention with icing, he said, \"you just fill in each letter. See I've got HAPPY on there now, and I'll change the letters and slide on the letters for BIRTHDAY, and carefully trace those, too. Of course, then you can add any name you want, providing that it fits on the slide.\"\n\nEveryone tried it, and even Marina thought she'd done a pretty good job, especially when Henry stepped beside her and said, \"That's it, looks good.\"\n\nThen he showed them how to write free-hand and a lot of them pulled a face, when they saw how easy it was for him to write beautiful script with a piping bag, knowing how hard it would be for them.\n\nHe suggested they practice writing on their work surfaces, so they could wipe it off and try again, if it didn't come out right.\n\nWhen he told them, \"This is something you should all be able to do by the end of this course, if you practice enough.\"\n\nMarina had her doubts, hers looked pretty awful, and really uneven, no matter how carefully she tried to squeeze out each letter.\n\nHenry came up beside her, and as she waited to hear what he thought of her wonky script, her stomach dropped when he said, \"I think you'd better stay after class, and we can practice a little more.\"\n\nNo surprise, her sister Annika was grinning like a fool, after she overheard Henry asking her to stay. Since Annika was her ride again tonight, Marina knew she had to tell him that she couldn't stay. And she also decided to tell him that this would be her last class.\n\nDeciding she'd try it one more time, she was squeezing the bag of red icing onto her work bench, trying to make a decent letter 'H', but nothing was coming out, so using both hands, she squeezed even harder. Then the tip fell off and everyone laughed at the fart sound the bag made when the icing blasted out of the open end onto the table.\n\nMortified, she looked at her hands, covered in red icing and headed to washroom to clean up. Class was almost over, and she knew she wouldn't be back.\n\nWhen she came out again, everyone was gone, including her sister. Except of course for Henry, who was checking the tip that had fallen off her piping bag and caused the mess.\n\n\"Did you sift the icing sugar, before you mixed the icing?\"\n\nShe shook her head. \"No, I forgot.\"\n\n\"That's why it came off. A solid piece of sugar was stuck in the end, and when you kept squeezing, the icing had nowhere to go and the tip blew off.\"\n\nShe heaved a sigh. \"Okay. Guess I'll know for next time, though I should probably tell you that I don't think I'll be coming back.\"\n\n\"But there's still a few more classes.\"\n\n\"I know. But I feel like I'm wasting your time, when you could be working with someone else who doesn't suck at this as bad as I do.\"\n\n\"I wouldn't say you suck at it.\"\n\nShe gave him an eyeroll, when she noticed that he was trying to keep a straight face.\n\n\"Why don't we practice,\" he said, as he pulled over another plain white frosted cake. \"And we'll take our time, and see what we can do together.\"\n\nHe handed her another piping bag filled with red icing, and got in behind her and wrapped his hand around hers. Then starting at the top, he piped a beautiful letter, \"I.\" Then, he piped \"Love\" and he finished by piping \"You.\"\n\nMarina bit into her lip to keep from crying as she read the message on the cake. \"I Love You.\"\n\nHe turned her in his arms and whispered, \"I do. I love you, Marina.\"\n\nShe wiped at her eyes. \"I love you, too.\"\n\nThen he kissed her, long and slow.\n\nOnce they finally broke the kiss, he looked into her eyes, and whispered against her lips, \"Come home with me tonight.\"\n\n\"Or, you could come home with me, if you don't mind the cats.\"\n\nSmiling, he kissed the end of her nose. \"I like your cats.\"\n\nEpilogue\n\nSmiling up at Marina, warm and naked in their big, comfy bed, with her gorgeous long, red hair splayed around her shoulders, Henry decided that after living together for a year, it was time to finally move things along.\n\nGrasping her around the hips, lifting her up, and shifting her where he needed her, he loved the way she smiled into his eyes as she sank her sweet little body down onto his.\n\n\"Hmm, you feel good,\" she whispered against his lips, grinning as she slipped her tongue into mouth, for a fiery hot kiss.\n\nGroaning, as he thrust up and she pushed down, as their tongues tangled, and they tipped their heads to deepen the kiss, he decided nothing in the world felt better than spending a day in bed with the woman he loved.\n\nThough, it was snowing so hard outside, there was really nowhere they could go. But right now, as she wrapped her warm, soft body around him, as he cupped her breasts in his hands, making her shiver as he tugged at her nipples, there was nowhere else he'd rather be, than with her.\n\n\"I love you,\" he whispered as he trailed his lips up to her ear, to suckle her earlobe.\n\n\"And I love you,\" she said as she clenched around him tight, giggling at the way he rolled his eyes.\n\nThen he flipped her onto her back, making her squeal and laugh as he captured her hands over her head and kissed her hard on the mouth as they gazed into each other's eyes.\n\nHe thought she looked as elated as he felt, her green eyes dark with arousal as they began to make slow, sweet love as he began to slide himself back into her body.\n\nGazing into her eyes, he said, \"I'm looking for someone to help me design a house for those two acres I bought, just north of here.\"\n\nShe nodded, her eyes dancing with amusement as he flexed his hips, did a little grinding and thrust a little deeper.\n\n\"I want it to have at least four bedrooms, and a really good-sized kitchen.\"\n\n\"Of course,\" she said, smiling up at him.\n\n\"But what I really need is someone to spend my life with.\"\n\nMarina stared into eyes, blinking. \"What are you saying?\"\n\n\"I'm saying that I don't want to play house with you anymore, Marina. I want to marry you, and have babies with you and spend the rest of my life with you. If you'll have me.\"\n\nBlinking back tears, she whispered, \"I would love to marry you, Henry.\"\n\nSmiling, he went back in for another kiss as he reached under the pillow and slipped the ring that he'd hidden on her finger.\n\nThey had a Christmas themed wedding. Their horse drawn sleigh jingling as they rode to their reception. The sound of horse's hooves clop, clop clopping, along the old town's road, had people smiling and turning their heads as they admired the handsome couple. As the two nestled in the back under a big blanket, kissed and laughed and smiled into each other's eyes, thrilled to finally be married.",
        "His brother Chris, Henry's best man, teased him at the reception, taking credit for getting them together since he'd forced him to bring a date to their nuptials. As his wife Jenn, nearly nine months pregnant, smoothed her hand over her belly, smiling happily at the bride and groom, who only seemed to have eyes for each other.\n\nAnd Darius, wiping at his eyes, was too emotional to get a word out, though if anyone asked, he felt he'd had a hand in their big day, too.\n\nAs Henry and Marina looked around at all the family and friends gathered to celebrate their union, they decided that had everything they'd ever need. Especially now they'd found the love of their lives in each other and were fortunate enough to have a room full of people who loved them, too.\n\nTen months later, they were both thrilled to welcome their new little daughter Emily Ann into the world.\n\nHenry pressed a kiss to his wife's lips and the top of his daughter's head, as Marina smiled up at him from her hospital bed, realizing he really did have it all. A beautiful wife, healthy baby, a new house that she had designed for them, along with a thriving business. And probably the best friends and family a guy could ever ask for.\n\nHe noticed a big bouquet of pink roses had just been delivered, with a card from their friend Darius congratulating them on their new little bundle of joy.\n\nGesturing at the flowers, he said, \"You told him, there's no way we're calling her Daria, right?\"\n\nMarina winced. \"I was thinking maybe we could smooth things over with him, if we asked him to be one of her godparents, of course, along with Jenn and Chris and Annika.\" She waggled her eyebrows. \"At least until we have a little boy.\"\n\nHenry grinned. \"And when can we start on that?\"\n\nShe smiled back, playfully batting her eyelashes. \"Maybe in a few weeks.\"\n\nCupping her face in his hands, Henry softly kissed her, and whispered against her lips, \"I'll be ready whenever you are, sweetheart.\""
    ],
    "authorname": "Smuttyandfun",
    "tags": [
        "kissing",
        "love",
        "oral",
        "pussy eating",
        "her on top"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/my-plus-one"
}