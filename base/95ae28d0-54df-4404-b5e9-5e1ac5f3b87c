{
    "title": "The Pact Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nSpecial note: all characters engaged in sex acts are at least 18 years old.\n\nPart 12 - Soul of Iron - The Final Final\n\nThe music of Darude's Sandstorm began softly, then got louder and louder as the gymnasium full of Police Officers and a few others began jumping up and down, waving red, white, and blue ribbons or cloths. The energy in the room was tremendous, and I could feel it flowing right right through my very soul.\n\nThis was it. The Police Boxing Matches (Freestyle Division) Championship. It was 10:00am, Saturday, June 2d, and the TCPD Headquarters gymnasium was full of Police Officers and a number of others that were ready to watch the very last Police Boxing Matches battle allowing the use of crowbars.\n\nAs the beat of the music pumped energy throughout the room, to my surprise I noticed Chief Moynahan walk up a staircase made of planks and plywood that brought him to the level of the ring. He stepped into the ring with the match's referee, Lt. Micah Rudistan, who was wearing white plastic with yellow and black stripes, and holding a white football helmet. Chief Moynahan had a microphone in his hand. \n\n\"Bee-forrre we begin...\" he called out. The cheering stopped and the music died down. \"Before we begin this Finals match,\" called out the Chief, \"we have a very special award to give out. Would Commander Troy please come into the ring?\"\n\nThere was a cheer as I walked up the temporary steps to ring level and eased between the ropes, not having a clue what this was about. Chief Griswold's mustaches had been twitching with merriment all morning long, so I knew something was up. Time to find out what, I guess.\n\n\"As you all know,\" said Rudistan jovially, taking over the microphone, \"Commander Troy was going to compete in these Matches and kick every one of our butts... but instead, he took one for the Team and re-injured his back while beating the crap out of the Slender Man and rescuing several children.\" A roar of approval burst out. I remained stoic, still feeling the pain of being unable to compete by order of the Town & County Police Chief.\n\n\"So, to award Commander Troy for his actions on behalf of our children and our Town & County,\" Rudistan continued, \"we are presenting him with this very special trophy!\"\n\nWith that, a cloth covered object was put on the floor of the ring, and Chief Moynahan picked it up. Bringing it to us in the center of the ring, he handed it to me. Damn, it was heavy! I thought as I took it. It was a statue of some kind. The Chief whisked off the cloth, leaving me holding a bronze statue about a foot high, maybe a little more with the trapezoid-cube base.\n\n\"This is the Official, one-of-a-kind 'I Beat Slender Man' trophy, awarded to Commander Troy for showing the Slender Man what a true Boxing Matches beatdown feels like!\" Rudistan explained. Another roar burst out from the crowd as I examined the trophy. \n\nIt was molded into the likeness of The Slender Man, wearing a suit and tie, standing with his feet slightly apart... and holding a crowbar at 'port arms' across his chest beneath that featureless head. Into the base of the statue had been engraved the words \"I BEAT\" and underneath them, the words \"SLENDER MAN\".\n\nThe Heisman Trophy weights 25 pounds, and the 'I Beat Slender Man' statue weighed darn near that. Whoever had paid for this had paid some serious money, too. I held it up for all to see, and the crowd amped up its roars of approval. \n\nNo, it was not the Police Boxing Matches trophy, but it would have to do. It would also generate an acclaim and following on Twitter and 'the Facebook' amongst those who followed the Slender Man legend, and on Cindy's 'Meet Commander Donald Troy' page on Youtube.\n\nI'd mentioned that there was one last appearance of the Slender Man in my Town & County... and this was it.\n\n* * * * * * * * * * * * * * *\n\nThere was a roar when the door to the mat room room on the side of the gym opened, and Your Iron Crowbar came out, leading the Defending Police Boxing Matches (Freestyle Division) Champion through a narrow path in the sea of humanity to the elevated boxing ring in the center of the gymnasium. Sandstorm was playing again, and the cheers got louder and louder as we approached the ring, as if this were a University of South Carolina SEC football game.\n\nTeresa was in her white plastic armor, trimmed with red, and her red football helmet with plastic face shielding. I was wearing my red collared shirt with embroidered TCPD badge, khaki pants... and no crowbar. The red crowbar was in the possession of my Clan Crowbar acolyte.\n\nLike the year before, I had gone in and offered Teresa the red crowbar. She had tried to refuse it, saying she did not want to dishonor it if she lost. She knew she'd come too close to losing a couple of times already, and she'd barely continued the tradition of a past Champion not being defeated before the Final round.\n\nI insisted she take it. \"Win or lose, you will honor the Clan of the Crowbar by giving everything you have in fighting with it. I would be honored if you would use it in my stead in this match.\" Teresa said the correct words of thanks, and accepted the red crowbar as her weapon for the match.\n\nOnce we got to the ring, Teresa went up and in. Everyone turned to the far side of the gym, and another roar went up as the Challenger emerged from the locker room, wearing white plastic trimmed with blue, a blue helmet with face shielding, and of course carrying a crowbar. The gymnasium was vibrating, and then everything stopped cold: the music stopped, the cheering died down into silence as the challenge was issued:\n\n\"Would you like a shot... at the title?\" called out the defending Champion, Captain Teresa Croyle.\n\n\"Don't mind if I do!\" replied the Challenger... Commander Cindy Ross.\n\nYes, Cindy had barely defeated Jerome Davis in the spirited semifinal match. He had trained with me, and he had been an outstanding student. Even with the limited training I had given him, his acumen and 'never quit' spirit had almost won the day. But he had stumbled near the end, and that was too much when the Green Crowbar was on the hunt. She took him down with seconds to spare, and afterwards had words of high praise for him, knowing she'd been in a real battle. Meanwhile, I wistfully thought of what I would've been able to do had the Chief allowed me to compete, bad back notwithstanding.\n\nI had reminded Cindy later in the week that no Commander had ever lost in the Police Boxing Matches Final. Of course, there had only been one recorded instance of a Commander being in a Finals match at all, and Cindy did not need to be reminded who it was that had taken her down on that day. I also don't think I can print in this family environment the 'Canadian' words she might have used in reply to my reminder...\n\n* * * * * * * * * * * * * * *\n\nOnce I took my place with the Chief and with Tanya to watch the upcoming epic battle, the last Police Boxing Matches battle with crowbars, Referee Rudistan made the announcement: \"The rule is suspended... in order to allow the finalists to use their... own... crowbars!\" The gym erupted, and it pretty much stayed that way. Rudistan gave the final instructions, Teresa and Cindy 'crossed swords' with their red and green crowbars, and went to their corners.\n\nDING! The bell rang. Rudistan drew his hands together and yelled 'Box!', and we were underway!\n\nIt was immediately apparent that Cindy Ross was going for Teresa Croyle's vulnerable spot, her right arm and right side. Teresa had been fighting with a two-handed grip on her crowbar throughout the Matches, but this did not do well against Cindy's flanking maneuvers, going for Teresa's far left side, then quickly going for her right side. Cindy had the speed, flexibility, and experience to do what previous contestants had not been able to do.\n\n*WHACK!* *THUD!*\n\nThe green crowbar landed against the red-trimmed white plastic with a sickening crunch, followed by more of the same. And as Teresa's forehand right hand swings were slow, Cindy all but invited them, only to quickly bypass the swings and deliver punishment to Teresa's arms and sides.\n\nEven more, Cindy had figured out that she did not need to make any special martial arts moves like she usually did. Teresa had won all of her contests thus far with Aikido moves, outclassing her competition, including Joanne Warner. But Cindy was a different level, and we all knew it.\n\n*SMACK!* *CRUNCH!*\n\nTwo more hard blows landed. I felt pain for Teresa. She was fighting as gamely as she could, but it was all defensive, it was barely enough to not be overwhelmed. Meanwhile, Cindy was showing no mercy, as little mercy as she would've shown me in the ring had I been opposing her. Cindy was tired of losing the Finals matches, and she fully intended this to be her day of retribution.\n\n*DING!*\n\nIt was the bell to end the first round. Teresa had survived it as they went to opposite corners and got water. Teresa was flexing her arms, trying to keep them loose and active, and I knew that while the armor would protect her body, her arms were going to be hurting, if they weren't already.\n\nThe bell sounded for Round Two. Cindy came right out to the middle. Teresa came forth and acted as if she was going to get a swing in. Cindy sidestepped and swung... and missed! Teresa's action had been a feint, and Cindy had overcommitted. She paid for it as Teresa stepped in and delivered a strong blow to Cindy's side under her exposed shoulder, then repelled Cindy's counter-swing.\n\nI saw something in Cindy's eyes, a slight wildness that showed she was off balance and had lost the mental edge. Teresa's eyes showed that she was still in this fight.\n\nCindy tried to press home her physical advantages, but Teresa was used to her by now, and was able to meet the attacks. The air was filled with the *WHANG!* and *CLANG!* of iron-on-iron as the Finalists thrust and parried, swung and counter-swung.\n\n*DING!*\n\nThe bell to end the round sounded, and the noise in the gym was so loud that I could not hear myself think. Three minutes left. Three minutes to glorious victory or shameful defeat. It was all on the line...\n\n\"Box!\" yelled Rudistan after the bell sounded for the final round. Both Finalists were tired, but I knew that there was an energy running through both of them that would carry them to the end. They'd trained for months for these three minutes, these last three minutes. They would leave nothing behind... and they did not.\n\n*WHANG!* *CLANG!* *WHANG!*\n\nCindy was really picking up the pace, and the pressure. She had been working on Teresa's left arm, her better arm, and her strategy was working. Teresa tried keeping her right arm to the fore, and Cindy would unleash powerful blows to Teresa's crowbar, knowing all Teresa could do was defend, her arm practically immobile.\n\nAnd it was working. Cindy was getting to Teresa now, whacking her armor, and she decided it was time to try to end the match. She went for Teresa's arm in a martial arts move that would become a wrestling takedown. But Teresa spun out of it, and Cindy nearly lost her balance. But Teresa could not move in to take advantage. Cindy recovered, gave Teresa a 'Cindy Cunt' look, and moved in with savage force.\n\nThe Green Crowbar was landing blow after blow, getting Teresa's hips and lower back and even her legs, then when Teresa moved her arms down to defend, Cindy came up with savage blows to the shoulders and sides. She got a couple of thwacks to Teresa's back, and then she made her patented move, ducking and swinging her legs to cut Teresa's out from under her.\n\nIt worked; Teresa went down with a hard *THUD!*. Cindy moved in for the kill, and it looked like it was over.\n\nAs Cindy moved in, Teresa suddenly lunged between Cindy's legs, then lifted up. Cindy jumped up to not get caught up, but still went sprawling. The noise in the gym grew even louder as both women quickly got to their feet. Thirty seconds left. It was the final face-off. Cindy knew she had to outright win to get the trophy. She went for it, attacking. \n\n\"That's it, there's your shot!\" I gasped out, seeing it. I doubt Teresa heard me, but she saw it too. To the shock of the world in that gym, she dropped the red crowbar and ran into Cindy's attack! With lightning speed, she grabbed Cindy's right arm and hurled the platinum blonde over her own right forearm and shoulder. \n\n*WHAM!*\n\nCindy landed hard, stunned. Teresa had used the move I had used on Laura during our exhibition months earlier. Simple, extremely risky, but potentially devastatingly effective. Teresa had remembered it, and had used it in her most desperate moment.\n\nAnd Teresa did not let go of Cindy's arm, but kept hold as she landed on top of her, keeping Cindy's arm pulled back. It was over. Cindy refused to yield, so Rudistan slapped the floor three times. And then the final bell rang.\n\nTeresa still had to get up and wander to a neutral corner. She pushed herself up, picked up the red crowbar, and staggered over. As soon as she did, Rudistan came over and raised her arm high into the air. Against all possible odds and then some, Teresa had won. The Clan of the Crowbar was not broken, this day.\n\n* * * * * * * * * * * * * * *\n\nAfter Chief Moynahan presented the trophies, with Morton won the regular Boxing division, I headed to my office. I put the \"I Beat Slender Man\" trophy on the bookcase behind my desk, where the matchstick Trojan Horse once ruled. It was at The Cabin now. The Slender Man now ruled my office.\n\nAfter her examination by that loveliest of doctors, my wife Laura, Cindy came into my office and sat down.\n\n\"You know that line about 'I can beat you with one hand tied behind my back.'?\" she said, almost in a trance. \"Well, she did. She literally beat me with one arm today. I gave her everything I had, and her right arm is not 100%... and she still plain whipped my ass.\"\n\nI said nothing; there was nothing I could really say.\n\n\"And don't say she wanted it more than I did.\" Cindy said, finally looking over at me. \"Because she didn't. What did I do wrong?... or is she just that good?\"\n\n\"I don't know if she is, physically.\" I said. \"But you were battling against the most mentally tough person I have ever met.\"\n\n\"Could you have beaten her, if you'd been allowed to compete?\" Cindy asked.\n\nI just smiled. \"Yes.\" I said, knowing that Teresa had beaten Cindy in the one place a Warrior's advantage lies... between her ears. And where Teresa had surprised Cindy, she would not have surprised me.\n\nAnd yes, I believe I would've won the whole damn thing, going away.\n\nCindy just glared at me, and I think she wanted to call me a few names, but at that moment I was saved by the opening of my office door. Teresa walked in, followed by my favorite Doctor, then Chief Moynahan.\n\nCindy had gotten up and was hugging Teresa, their friendship restored now that the epic battle was ended. I was shocked at the bruises I was seeing on Teresa'a arms. I looked over at Laura.\n\n\"Needless to say, Darling,\" Laura said, saying it anyway, and in a very acerbic voice, \"Captain Croyle will be our guest at the Mountain Nest, for overnight observation. If she starts having bruises on her body, especially near where her liver and midsection organs are, will will go directly to the Hospital; we will not pass 'Go', we will not collect $200.\"\n\n\"Does she need to go to the Hospital now?\" asked Chief Moynahan, and I knew that was a 'suggestion' more than a 'question'.\n\n\"I don't think so, not yet.\" Laura said. \"But Teresa, you will tell me if you feel anything wrong inside you, any increase in pressure or pain. It is not honorable to hide any problems.\" Excellent choice of words by the world-renowned psychologist, I thought.\n\n\"Yes ma'am.\" Teresa said. She then returned the red crowbar to me, which earned me another glare from Cindy. I just held it up with a 'knowing' look.\n\n\"The good newwwwws, Commander Ross,\" said the Chief, noticing, \"is that this was the last time you will lose to the Red Crowbar in the Boxing Matches.\"\n\n\"Silver lining to this very dark Red cloud.\" Cindy replied. \"I should've stolen that crowbar and had it melted down as part of that Slender Man trophy.\"\n\n\"Speaking of that,\" I said, \"who is responsible for that trophy? It's really cool, but that had to cost some green dollar bills.\"\n\nTeresa spoke up. \"The entire Police Force started collecting money for it after word went out you were forbidden to compete in the Boxing Matches. Ms. Hardbody here made up any differences in cost, possibly with the help of persons with great 'Vision'. Town High School's metalworking department formulated the bronze and sculpted the statue.\"\n\n\"Great job, too. Really, really good.\" I said. \"But whose original idea was it?\"\n\n\"That would be one Timmy Austin, Davie Marsdon's friend.\" said Cindy. \"He got the idea from his chess class. They have a little trophy that says 'I Beat The Coach' if they beat the coach, which Timmy has started to do all too regularly and is now teaching the class along with the coaches. Timmy suggested the trophy based on that, after Susie told him about you beating the Slender Man and rescuing Susie and the others.\"\n\n\"Those Crowbar Crew kids bear watching.\" I said, chuckling. \"They bear watching...\"\n\nPart 13 - Meetings\n\n2:00pm, Saturday, June 2d. We got back to work. All the MCD Detectives met in Classroom 'E', along with Lieutenant Myron Milton, Captain Perlman, myself, and Chief Moynahan. My wife Laura, already at Headquarters for the Boxing Matches, also sat in.\n\nJoanne had the second whiteboard in the room, next to the one from the previous home invasion. She now put up photos of the Radcliffes.\n\n\"Tad Radcliffe worked with the State Department in the past, Diplomatic Corps.\" said Joanne. I glanced over at Laura and she shook her head: Radcliffe was not part of the CIA.\n\nJoanne continued: \"He essentially retired from the State Department and took a job with the University's Center for International Policy, part of their International Studies program. He met his wife Helga while on assignment to Sweden, married her, and brought her back to the States, where they have what seems to be a happy marriage with one child, their son Sven.\"\n\n\"Helga made some good money working as a translator at the University, and teaches Swedish at the University and a German class at County High. She is well-liked by her fellow teachers, popular with the students...\"\n\n\"What Nordic goddess wouldn't be popular with those young, horny high school boys.\" said Tanya Perlman. As an observation, I'm sure.\n\n\"True.\" I said. \"But go on, Joanne.\"\n\n\"I was only going to say that Helga is part of the CTLA tennis league that Marcia Clarkston is part of, so they know each other through that.\" said Joanne. \"And Marcia's daughter Tiffany hangs out with Sven Radcliffe a lot. Many people think they're dating, but they just say they're good friends. Sven and Dave Clarkston are on the football team together and the same Class, as well.\"\n\nI nodded. \"So they're good financially?\"\n\n\"Yes sir.\" said Joanne. \"They're actually renting their house in the Heritage Cloisters, and the University is subsidizing their rent. They have some credit card debt, but not huge amounts, and they seem to be living within their means. Sven is going to Eastern State in the fall, and on a full-ride athletic scholarship. Swimming and Diving.\"",
        "\"Wow.\" I whispered.\n\n\"I got the overnight report from J.R. at the State Crime Lab.\" said Tanya. \"No fingerprints other than the family's, no semen other than Sven's, no saliva or other skin samples giving us any DNA at all. And in the first case last week, no DNA was found at all, other than the family's.\"\n\n\"Laura,\" I asked my wife, \"how is the Radcliffe family coping with this? And do you have any follow-up on the Clarkstons?\"\n\n\"Tad Radcliffe was injured pretty badly.\" said Laura. \"Three broken ribs, one laceration of the lung, severe bruising around the lungs, liver, and pancreas. He's under observation for internal bleeding, but we haven't had to operate on him yet. As part of that, they're keeping him sedated, so no psychological evaluations, yet.\"\n\n\"Helga Radcliffe is putting up a wall, right now.\" said Laura. \"She's focusing on how Sven is doing. I have a feeling she's going to break down and need to let some things out in the next few days, and I hope to be there or get there when that happens, to help her through it. She did notice a lot of things about her attackers, such as the moles on one of them, skin tones, things like that.\"\n\n\"Sven...\" Laura said. \"Well, he's angry about it more than anything else. Thinks he should've done something to protect his parents, angry that they forced him to have sex with his mother. But he's taking most of it in stride.\"\n\n\"Is Helga not worried about her husband in the hospital?\" I asked.\n\n\"You know, now that you mention it...\" Laura said, growing introspective. \"I'm not going to say she doesn't care, but at times she has not even remembered him. She was going to leave the hospital with Sven, then a nurse asked if she wanted to see her husband first, and she said something like 'Oh yeah, we should.'. Kind of strange, now that I think of it...\"\n\n\"Captain Perlman,\" I said, \"did they take a DNA sample for Tad Radcliffe?\"\n\n\"Yes sir.\" said Tanya. \"Since his DNA would be expected to be all over the place, they have to account for it.\"\n\n\"Good.\" I said. \"The next time you talk to our State Crime Lab friends, ask them to do an analysis on Tad and Sven's DNA. Make sure that Tad is Sven's biological father... or not.\"\n\n\"I will do that.\" said Tanya, making notes. And I knew she'd make a point to create a 'next time' to talk to our State Crime Lab friends.\n\n\"Okayyyy.\" I said. \"Anyone have any theories based upon current data?\"\n\n\"We were about to ask you that, sir.\" said Joanne brightly. Everyone laughed, and I chuckled. \n\n\"Nice try.\" I said. \"I want to hear all of y'all's views first. Like always. Okay, anyone?\"\n\n\"I have no answers nor theories, sir.\" said Jerome Davis. \"But I've got a lot of questions.\"\n\n\"Excellent.\" I said. \"What are they?\"\n\n\"First, sir,\" said Jerome, \"what's up with security at the Heritage Cloisters? They're supposed to be the best, most secure gated community in this part of the State. But these thugs are coming and going at will, not being seen by anyone outside the houses, no strange cars at or near the times of the attacks. I'm glad I'm not paying all that money for that so-called 'security'.\"\n\n\"Great observation.\" I said. \"I happen to know that security there is very easy to bypass, and my nephew Todd Burke says he's glad he's married to a Police Officer, because he thinks the security there is crap, as well. But having said that, you're making a great observation... how are these perps moving about so freely and without detection? And I think you have something on that, Myron?\"\n\n\"Yes sir.\" said Myron. \"After the first home invasion, I've had a couple of I.R. drones ready to fly in case of another attack. When the Clarkston domestic disturbance was called in, I launched it and we monitored it downstairs in the I.T. area. Good training, if nothing else.\"\n\n\"True.\" I said. \"Go on.\"\n\n\"We scoured the area, including the golf course.\" said Myron. \"Nothing, except at the Clarkstons and at the guardhouse. When the call came in about the Radcliffe attack, I realized it might be too late, but I launched the second drone. Nothing there, either, until Police arrived at the home. No unidentified perps at all.\"\n\n\"We need to canvass the area some more.\" said Tanya. \"These guys can't be picking the homes at random. They're two-for-two finding attractive women with sons old enough to force into sex. They're not going anywhere near Teresa's; I pity the fool that tries to break into her home. They're not breaking into the homes of elderly people, they're not committing any robberies; they took nothing from either home they invaded, that we know of. So they have to be casing these joints, and selecting these targets ahead of time.\"\n\n\"That's... interesting.\" I said, going towards a reverie. Not yet in one, but towards one.\n\n\"So like Jerome just said.\" continued Tanya. \"Where is the vaunted security there? Where are the patrols that go around every day? Why hasn't anyone seen anything at all?\"\n\n\"Okay, Jerome,\" I said, \"tell me more about this domestic dispute at the Clarkston's.\"\n\n\"Sir,\" said Jerome, \"I watched some of the interrogation tapes from last night. Richard Clarkston is still in a holding cell. He refused to agree to not go back to the home, so he's sitting there. We told him he could call a lawyer at any time to discuss his situation, but so far he has not done that.\"\n\n\"Curious.\" I said. \"So what happened?\" Jerome went through the details, which I'd read from notes and watching the interview tapes myself.\n\n\"Sir,\" said Jerome, \"this would be cut and dried, except that Mrs. Clarkston has defended her husband pretty strongly, and said he didn't abuse Tiffany and never has. She wouldn't press further charges, either. I'm not sure who to believe on this one.\"\n\n\"Sir,\" asked Tanya, \"does this incident have anything to do with either of the home invasions?\"\n\n\"Indirectly.\" I said. \"Tensions in the aftermath of what happened are getting to the Clarkstons... both father and daughter. And if I don't miss my guess...\"\n\n\"And you never do!\" came a chorus. I love my team, I love my team, I love my team...\n\n\"I hope not in this case.\" I replied. \"But I have the idea that a lot of that was exacerbated by the Police presence at the home the other night. Tiffany saw me intervene between her and her father on the night of the home invasion. She and her father don't get along all that great, typical of rebellious teenagers and over-strict fathers or parents. So she sees the light... exacerbates the altercation, says she was physically attacked...\" I went on into Reverie Lake...\n\nWhen I came out, I said \"Okay, I'm going to need to speak to Richard Clarkston, and then to Tiffany. Anything else, Captain Perlman?\"\n\n\"We need to step it up to find these perps.\" said Tanya. \"Detectives... put together some ideas in your minds, and let's talk about them on Monday. In the meantime I'll ask Captain Croyle to step up patrols in the Heritage Cloisters and nearby areas on the northside...\n\n* * * * * * * * * * * * * * *\n\nThe room was now empty, except for me, Tanya, and Laura. I was going through pictures of the crime scenes on my laptop.\n\n\"I'm missing something.\" I said, my voice almost a whisper. \"There's something here, and I'm missing it.\"\n\n\"It'll come to you, Darling.\" said Laura. \"Relax your mind and let it come to you, instead of searching so hard.\"\n\n\"What is it you think you're looking for?\" asked Tanya helpfully.\n\n\"There's a clue here, slapping me in the face.\" I said. \"Something so obvious that it's laughing at me, and I'm just not seeing it...\" Laura continued to stare at me in fascination as I continued to stare at the crime scene photographs...\n\nPart 14 - Fathers and Daughters\n\nI had Richard Clarkston brought into Interrogation-A. Patrolman Barker was the Uniformed presence. I read Clarkston his rights from the card, saying I knew he was already Mirandized, but was doing it again for his protection, and mine.\n\n\"Sir,\" I said, \"I understand your daughter tried to leave the house, and you grabbed her arm. Is that not so?\"\n\n\"I was just trying to stop her from leaving.\" said Richard, who was obviously frustrated. \"I didn't grab her arm hard. I didn't even grasp it and squeeze, more like just pushing against it as she tried to leave.\"\n\n\"Why was she trying to leave?\" I asked.\n\n\"Like I told your Officers,\" said Richard, \"she wanted to go out to some party, but I'd grounded her for disobeying me and not coming home on time the weekend before. She's become really rebellious. She just began yelling that she was going to go, and I stopped her when she tried to leave. What else was I supposed to do?\"\n\n\"I dunno.\" I said. \"Call the Police, have us arrest her, put the fear of God in her.\"\n\n\"The problem with that,\" said Richard, \"is that my wife would say I was overreacting, and I'm not sure what the Police could really do. They might even say she was a runaway and call DFACS. I'd rather join the Army and go to war than have to deal with those corrupt bastards.\"\n\n\"I hear ya.\" I said, having been through my own wars with Town & County DFACS. \"About your wife, you were arguing with her that night?\"\n\n\"Yeah, she was defending Tiffany.\" said Richard. \"We never had an argument for years, until Tiffany became a teenager and started getting rebellious and not listening to me. Marcia always takes Tiffany's side, and Tiffany would take advantage of that.\"\n\n\"Did your arguments with your wife ever escalate?\" I asked. \"Did you ever get physical with her, or her with you?\"\n\n\"No, and ask her, she'll tell you. We argued, we didn't fight. Typical husband and wife arguments.\"\n\n\"Mr. Clarkston,\" I said, letting my voice get authoritative, \"I think I should let you know that I don't like hearing about so-called 'typical' husband-wife arguments. I don't consider them 'typical'. My wife and I have avoided arguments, most of the married people I know don't have arguments, and those that do don't stay married very long. So no, sir, this is not typical, and it never is. I think you have some real problems in your family, and now it's escalated into a domestic dispute and has become my problem.\"\n\n\"I don't know what to tell you, Commander.\" said Richard.\n\n\"Tell me,\" I said, \"how are your relations with your son Dave?\"\n\n\"Dave's a good kid.\" said Richard. \"He's always minded me. He came home on time when I told him to be home on time. He followed the rules, so he got to go out more. He's also a boy, a young man now; he's not a young naive girl that thinks she knows everything and could be preyed upon by young men with no scruples.\"\n\n\"Yes, but are you and Dave close?\" I asked. \"Did you do things together? Go to ball games, go hunting together, anything like that?\"\n\n\"Marcia and I went to all his football games, from Pee-Wee League on up to High School.\" said Richard. \"But he did a lot more things with his mother, growing up. Not that he's a sissy in any way; I know he's had sex with women, and plenty of it.\"\n\n\"Okay, then.\" I said. \"So... why haven't you called a lawyer yet, Mr. Clarkston?\"\n\n\"Uh...\" Clarkston said, his eyes suddenly widening, \"I told Marcia to call our lawyer. I've been waiting for him to show up. I don't know why he's not here yet.\"\n\n\"That tall tale about only getting one phone call is not really true, Mr. Clarkston.\" I said. \"Why don't you call your lawyer on that phone on the wall now...\"\n\n* * * * * * * * * * * * * * *\n\nCindy and I watched from the anteroom. We knew Tanya was in the Monitor Room, listening in on the conversation. Richard had not called his lawyer, but called his wife, so he had no privacy protection. Tanya reported what was said:\n\nRichard: \"Marcia, it's me, Richard. Did you call our lawyer? He hasn't shown up yet.\"\n\nMarcia: \"Yes, I did call a lawyer, Richard. For me. I'm filing for divorce.\"\n\nRichard was obviously stunned. \"What?!\" he exclaimed.\n\n\"I'm sorry, Richard.\" said Marcia. \"But I can't go on like this with you. I have to protect my daughter. I've already gotten a restraining order to keep you away from her. You're on your own getting a lawyer.\"\n\nRichard hung up the phone with perhaps a bit more violence than was necessary. At that point, I went back into the anteroom.\n\n\"Is there a problem, Mr. Clarkson?\"\n\n\"Yes, there is.\" Richard said. \"Can I make another phone call, this time to my lawyer directly?\n\n* * * * * * * * * * * * * * *\n\nMr. Coleman from Lowe, Ball & Lynch, the Town & County's biggest and best business law firm, was talking to Richard Clarkston in I-A. Mr. Coleman had actually asked me to stay in the room with them.\n\n\"Your wife filed divorce papers this morning.\" said Coleman. \"I'm not a divorce attorney, so I recommend Ferguson Stegall of Effim, Goode & Hart, the Men's Divorce Firm. I'll call him for you after we finish here, if you like.\" Clarkston nodded in agreement.\n\n\"The problem,\" continued Coleman, \"and the reason I asked Commander Troy to remain, is because your wife's attorney filed for a restraining order, which Judge Nance immediately granted. You cannot go back to your home. If you have a Concealed Carry Permit, the restraining order revokes it, unless you fight it.\"\n\n\"No, I have no guns. Only Police should have guns.\" said Richard, who then added: \"My God, I don't have any clothes, anything at all.\"\n\n\"My question for Commander Troy is if my client can be released on his own recognizance until his hearing Monday morning.\" said the lawyer.\n\n\"I'm not unwilling to do that.\" I said. \"But Mr. Clarkston, do be advised that if you try to go anywhere near your wife or daughter or son, or your home while they are there, that you will not only be in jail again, you will be in what I call a 'world of shit'. This isn't a request, it's not asking you to promise. Stay away from them. Am I making myself clear?\"\n\n* * * * * * * * * * * * * * *\n\nCindy had agreed to go get Marcia and Tiffany. She all but forced them into her Police SUV, and then began riding around with them. Meanwhile, Detective Jerome Davis and I escorted Richard to his home to pack a couple of suitcases full of clothes. He was allowed to take his company-owned car with him, as well.\n\nAs he packed, I watched him carefully. He was irritated and frustrated, which was to be expected. But just before he left, getting some papers out of his desk in the library room, he looked around, then said \"All of it... all for nothing.\"\n\nOnce he drove away, I called Cindy on my Police iPhone, telling her she could bring the women back. A half hour later, she came into my office at the Station.\n\n\"Tiffany is kind of numb about it.\" Cindy said. \"I think she's realized that she may have pushed things too far, and now her family is breaking up. Marcia seemed stoic about it all, but resolute. She was a little bit pissed that Richard was being allowed to get clothes from their home, but other than that there were no real problems with them.\"\n\n\"Good.\" I said. \"What about Dave? Was he there?\"\n\n\"No.\" said Cindy. \"Tiffany said when I went to get them that he was out with friends.\"\n\nI nodded. Cindy noticed that I was introspective.\n\n\"Canadian Penny for your thoughts.\" she said.\n\nI was looking at the photographs on the side of my desk. \"One day,\" I said, \"my daughters are going to grow up to be teenagers. And my firstborn child is already strong-willed and hardheaded at times. There were moments talking with Richard where I could sense his frustration, that he really didn't know what to do about his daughter. And I wonder what is going to happen when Carole reaches Tiffany's age. And between you, me, and the crowbars... it scares me, it really does.\"\n\n\"From what I know and have seen,\" Cindy said, \"you'll do a hell of a lot better job than Richard Clarkston has. And from what little I've seen of the Clarkstons, you have a lot better help in your wife and your family than he's had.\"\n\nSomething in her words struck a chord with me, and I peered at her for a moment. And then it came back to me that something was there, something that would solve these crimes... but I was simply unable to grasp whatever it was at the moment...\n\nAt that moment, there was a knock on my office door. Captain Damien Thompson stuck his head in and said \"Sir, ma'am, I just wanted to let both of you know... the Press is beginning to get the stories of these home invasions. They're calling the Public Relations Office asking for details...\"\n\nPart 15 - Mothers And Sons\n\n4:00pm, Saturday, June 2d. Marcia Clarkston knocked on the door to her son Dave's room.\n\n\"Come in.\" said Dave. When the door opened, he was shocked to see his mother come in. She was wearing a clingy flower print dress and strappy black high heel sandals. She looked extremely hot, Dave thought. As for himself, he was wearing only a pair of short pants and underwear. The bulge of his 'package' was considerable, and obvious.\n\n\"Honey,\" Marcia said as she approached her son's bed, \"are you okay?\"\n\n\"I'm fine, Mom.\" Dave said, putting his magazine aside. \"How are you?\"\n\n\"I'm... okay.\" said Marcia, sitting down on the edge of the bed, her luscious ass near her son's hips. \"I'm feeling kind of lonely, though. And I was wondering if you and I could do something... together.\"\n\n\"What did you have in mind, Mom?\" asked Dave. \"Want to go out, to dinner? Or watch a movie or something.\"\n\n\"We can do that later.\" said Marcia. \"Right now... I just want to be here, with you.\" With that, the lovely mother lay back, then rolled onto the bed, her body now pressed against her son's. He put his arm around her as she lay her head on his muscular chest.\n\nThen he felt her hand exploring his hard, six-pack abs, sliding lower and lower, towards his loins. He felt his cock stirring, getting harder, thicker, and longer. He knew he should stop this; after all, his mother was in a vulnerable emotional state. Then he felt and saw her hand reach his pants, sliding over his bulging crotch, feeling his hardening cock.\n\n\"Mmm, you're not a little boy any more, Dave.\" Marcia said. She turned her face up, looking into her son's eyes. \"Dave... if I weren't your mother, would you date me? Would you make love to me.\"\n\n\"Yes, Mom.\" Dave said, his voice a whisper. His cock was now throbbing as he looked into Marcia's eyes, his nose filling with the smell of her perfume.\n\n\"Then don't let anything get between us, Dave.\" Marcia whispered as she felt the outline of her son's large cock through his pants. Dave reached down and opened his pants then began sliding them off along with his underwear. Now he was buck naked for the hot woman on the bed with him.\n\nHe leaned his head down and kissed Marcia's upturned mouth, sliding his tongue over hers. Marcia met the kiss, moaning into his mouth, sucking on her son's tongue as it explored hers. Her hand gripped Dave's cock, and she began gently jacking it as Dave's hands cupped and fondled her breasts through her dress.\n\nTheir kiss broke, and they looked into each other's eyes for a moment. And then Marcia slid her body over Dave's until her face was in her son's crotch. She gripped his huge, throbbing meat at the base, then opened her mouth and slid her lips over his cockhead.\n\nThey moaned together as her lips slid tightly down his thick shaft until it was buried almost to the hilt down her throat. Sliding her lips back up, she engulfed her son's cockmeat again, then began fellating him in a steady rhythm.\n\nMarcia was moaning as she sucked her son. Never had anything felt so good to her! She loved the feeling of his manhood throbbing in her mouth and throat, and she loved even more knowing that she was giving her own son pleasure with her body.\n\nDave was caressing his mother's hot body as she steadily sucked him, his hands sliding over her luscious ass and along her abs to her loins, all through her dress. This went on for several minutes, until Dave felt his nut beginning to rise. His mother's mouth was too good, and his youthful body would soon be rushing to a powerful climax if he didn't stop their lewd act.",
        "\"I want to fuck you, Mom.\" he said. \"Take that dress off and lie down.\" Marcia did as her son commanded. She reluctantly let his cock slip out of her mouth, then stood up by the bed and pulled the dress up over her body as Dave slid over towards the wall to give her room. His eyes feasted on her big breasts, her nipples rock-hard and sticking out, her auburn-colored pubic bush, a mound of trimmed, tightly bunched hairs just over her labes, and her pussy itself... the lips swollen, the moisture and heat all but visible.\n\nMarcia eased back onto the bed and settled onto her back. Dave rolled over onto her, mounting her, and Marcia's hands slid onto his hips, guiding her onto him. He reached between them and fit the head of his large cock into her labes, and pushed down, penetrating her.\n\n\"Ohhhh!!\" Marcia cried out as her son's cock slid into her, driving relentlessly down, burying his shaft into the wet heat of her cunt until their pelvises met. \"Oh GOD, that's so fucking GOOD!\" she gasped out as Dave settled onto her.\n\n\"God, you're so tight, and wet!\" Dave gasped. \"Spread your legs, Mom. Let me get into you.\" Marcia complied, pulling her legs up and back, giving her son easier access to fucking her pussy.\n\nDave began fucking his mother in a steady rhythm, slow and first, then harder and deeper as her cunt acclimated to the size of the cock invading it. Her mouth desperately sought his, and she moaned as he slammed his mouth onto hers, their lips sliding together as his tongue seemed to reach to her throat. After a moment of sharing their deep kiss, Dave began kissing and nuzzling his mother's jaw and neck.\n\nMarcia had never felt such pleasure. To have Dave's cock inside her, plunging into her again and again, was the most intense feeling of ecstasy she'd ever known. She had no idea that sex could be this good, could feel like this. She was humping her ass up to meet each of her son's deep thrusts, and the loud *SMACK* of flesh on flesh echoed in the room as mother and son passionately mated.\n\nAs Dave lifted his head and looked into his mother's eyes, then deeply kissed her again, Marcia felt the intense erotic pressure building in her well-filled loins. She was about to have an orgasm, she realized. Before she could really comprehend it, her loins exploded, clamping down hard on her son's pistoning prick.\n\n\"UHHH!!\" she cried out. \"Oh GOD! Oh Dave! UHH!!\" Dave fucked into her relentlessly, powerfully, ruthlessly as his mother shook beneath him, the violence of her orgasm surprising him... and her. Finally, the intense sensations subsided.\n\n\"Oh God, Dave,\" Marcia gasped. \"I've never felt anything like that.\"\n\n\"Want me to keep fucking you, Mom?\" Dave asked, slowly gaining full control over his mother, her body and her emotions, as well.\n\n\"Oh yessssss.\" Marcia hissed. \"Do me with that big thing.\" Dave began fucking her hard and deep again, and Marcia felt her next orgasm already building, already about to overwhelm her...\n\nNeither the mother nor son heard the slight creak of the door as it opened a couple of inches. Eyes looked in on them, seeing Dave's muscular ass bobbing up and down as he pumped his mother, Marcia's luscious legs wrapped around her son's hard body, their mouths mashed together as their tongues twined in a hot, lust-filled kiss...\n\nPart 16 - The Party Never Stops\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded MILF reporterette at 7:00am, Monday, June 4th, from in front of the Courthouse complex. \"Fox Two News has learned that the Police Union has denied Detective Gayle Tunnin's grievance against the Town & County Police Force!\"\n\n\"Detective Tunnin has been in the TCPD Internal Affairs Department for over six years,\" said Bettina, and was a Detective for four years before that.\" said Bettina. \"However, she was passed over for promotion by Commander Donald Troy, who oversees Internal Affairs as well as the Detectives Division and the Uniformed Officers.\"\n\n\"The Union stated that the decision to hire SBI Lieutenant Ted Orosco was not just Commander Troy's, but the TCPD's leadership as well as the Sheriff and Inspector General's. They stated that the process was fair and thorough, and they accepted the reasons for hiring Lt. Orosco over Detective Tunnin. But not everyone is happy with the Union's finding. Roll tape.\"\n\nTape rolled, showing Della Harlow, standing alongside Gayle Tunnin, both in civilian pantsuits. Harlow was shouting \"And once again, Commander Donald Troy has discriminated against a woman, and this time to put one of his lackeys in Internal Affairs to cover up his 'cowboy' actions like shooting up a park with a helicopter at night! When I am Sheriff, these wrongs will be righted, women will have a chance to be promoted after years of unrewarded service, and misogynists swinging crowbars around will no longer be around to humiliate our Town & County!\" \n\nThe audience of nearly all women cheered mightily, yelling \"I'm with her! I'm with her!\"\n\nBack to Bettina live: \"And speaking of crowbars swinging around, Captain Teresa Croyle defended her Police Boxing Matches title last Saturday, defeating past Champion Commander Cindy Ross. Chief Sean Moynahan issued a statement saying that this was the last Police Boxing Matches where crowbars will be allowed, and the Matches will return to utilizing more weaponless skills in order to teach Officers more and better defensive techniques for their safety and the security of our Citizens.\"\n\n\"Also,\" went on Bettina, \"Fox Two News has learned that there have been several home invasions in the Heritage Cloisters subdivision. Police will not confirm that sexual assaults were part of the home invasions, but security for the subdivision has been stepped up in response, and Citizens are urged to be on the lookout for any strange persons loitering in the area, and to call 9-1-1 if any suspicious activity is seen...\"\n\n* * * * * * * * * * * * * * *\n\n\"Hey, congratulations, Captain Croyle.\" I said as we drank coffee in MCD. \"I had no idea you'd won that little contest. No one was saying anything about it at all.\" Laughter erupted.\n\n\"I didn't know Wildcats hibernated all Spring, sir.\" replied Lt. Micah Rudistan, who had dropped in on us, ostensibly to make sure the coffee was being made correctly. More laughter.\n\n\"Glad to have you back, Lt. Rudistan.\" I said. \"But to what do we owe the honor?\"\n\nTeresa spoke up: \"Sir, I'm having a meeting with all the Uniformed Leadership this morning. We need to get a handle on this Heritage Cloisters thing, as well as some intel I got of potential demonstrations against you for this Tunnin thing and for the Mullen thing. I sent you an email about it, that I wouldn't be at the Angels meeting.\"\n\n\"Well, I've been in hibernation all Spring, so I guess I missed that one.\" I said, to more laughter. People were in good spirits today for some reason. And I had gotten and read Teresa's email.\n\n\"Sir,\" asked Theo Washington, \"what's going to happen with Detective Tunnin?\"\n\n\"I don't know yet.\" I said. \"The Chief and Sheriff have asked her to meet with them this morning. She had every right to file the grievance, but now that it's denied, we'll have to see what happens.\"\n\n\"Sir,\" said Rudistan, great joviality on his face, \"are the rumors true about more Detectives coming to MCD?\" It was suddenly silent in the room. All eyes were on me. My eyes had cut to Rudistan, in a manner not dissimilar from the way Carole's eyes would cut to me when I caught her feeding Bowser stringbeans. My eyes also conveyed a lack of happiness at that question being asked.\n\n\"Mr. Rudistan,\" I said, \"you are attempting to start 'trouble'. And you are succeeding.\" I looked around, then said \"Nothing is official yet, at all. But just to stop the rumor mill from getting out of hand, I'll tell you that there is consideration to bring more people into Vice, partially as manpower, but partly to gain experience and be evaluated to be full Detectives. We are also considering bringing in a couple more full Detectives into MCD.\"\n\n\"At what level, under the new system?\" Joanne asked. Joanne was a full near-Supervisor level under the 'old' system, as all the Detectives in MCD were.\n\n\"At least Detective-3. Maybe Detective Sergeant.\" I said. \"But don't think you can pull rank on them. The new Vice people will be Detective-1 or -2, by the way.\" Detective-1 was essentially an entry level to the Detective Track, and was the equivalent of a Corporal. Detective-2 and Detective-3 were higher than Corporal, but not Sergeant-level. Detective Sergeant was the equivalent of a Senior Sergeant.\n\n\"But again, this is all general talk.\" I admonished. \"Nothing has been decided yet. Except Rudistan's demotion... for starting 'trouble'.\" Everyone laughed, seeing me grin, knowing I was kidding Rudistan. And this was how news actually got spread through the TCPD.\n\n\"Who's eligible to apply?\" asked Theo.\n\n\"Everyone.\" I said. \"But I'll probably throw your application, Warner's, Parker's, and Davis's in the trash can.\" More laughter; after all, they already were the MCD Detectives in the House. \"But seriously, anyone can apply as long as they're past the probationary period upon being hired.\"\n\n\"What does the Vice Lieutenant think of that?\" asked Rudistan fearlessly. Yes, he was really stirring the ol' pot today...\n\n\"It was my idea, at least the part about getting more people into Vice.\" said Lt. Mary Mahoney Milton, her hair just a shade brighter metallic red than Marcia Clarkston's auburn-red hair. \"We are really hurting. You guys in there are good, but we need more help when something big starts happening. And of course... we need some good helicopter pilots.\" More laughter erupted at that.\n\n\"Oh I don't knowwwww, Ms. Mahoney.\" said Chief Moynahan as he walked in. \"You've got at least two good pilots right now. And I am very, very tempted to unleash the Iron Crowbar and his Coh-braaaa on some perps right now, just to show the Council what we can dooooo...\"\n\n* * * * * * * * * * * * * * *\n\nTanya Perlman drove into my office for the Angels meeting, joining Cindy and myself. \"What the hell was Rudistan thinking, asking that in front of everyone?\"\n\n\"Don't be upset; it's not a problem.\" I said. \"Rumors are getting rampant around the Precincts. I don't know who is doing the gossiping, but Rudistan came over to get the scoop so he can address it at 2nd Precinct. Teresa is going to say something about it in her meeting this morning, as well.\"\n\n\"Sounds like it's decided upon.\" said Cindy. \"And the Chief's little shot at the Council suggests to me that they're giving him crap about it.\"\n\n\"You should apply to be an MCD Detective.\" I replied. \"I need your skills, there.\"\n\n\"I'm not going to hire her into my MCD.\" declared Tanya. \"After all, she can't even win a boxing match!\" Cindy whirled to stare at Tanya, her ice blue eyes staring daggers right through my Captain of Detectives. I had burst out laughing, and could not stop for a second... well, several sets of seconds. Then Tanya started laughing and even Cindy relented and began shaking her head sardonically.\n\n\"What did Jerome put in the coffee today?\" I asked. Then Priya's broadcast began, and the fun ended.\n\n\"This is Priya Ajmani, Five-Alive News In the Morning, bringing you all the news you have a right to know!\" the beautiful Indian reporterette practically yelled from the southwest corner of Courthouse Square, which put the Police Headquarters building down the street in the background.\n\n\"Five-Alive News has learned that there have been two break-ins in the Heritage Cloisters subdivision!\" said Priya. \"In the first case last week, the home of Richard Clarkston and his family was invaded. Sources tell Five-Alive News that his wife Marcia was raped by the perpetrators while Richard and his son Dave were physically beaten and forced to watch.\"\n\n\"Police are refusing to release the details and Police reports of the crime, and they also are refusing to reveal the names of the second family that was assaulted this past weekend.\" continued Priya. \n\n\"In other news,\" said Priya, \"Five-Alive News has learned that TCPD Detective Gayle Tunnin has rejected a meeting with Police Chief Moynahan and Sheriff Daniel Allgood, who is running for Mayor as a Republican. Sources tell Five-Alive News that Detective Tunnin intends to sue the TCPD as well as Commander Donald Troy personally for passing over her as head the Internal Affairs division, citing Commander Troy's policies of discrimination against women...\"\n\n* * * * * * * * * * * * * * *\n\n\"Let me see if I get this straight.\" said Tanya. \"The Captain of Detectives is a woman. The former Captain of Detectives, now the Deputy Chief, is a woman. The Captain of Operations... is a woman. The Vice Lieutenant... is a woman. What am I missing, here?\"\n\n\"Della Harlow's hunger for raw political power.\" I replied. \"She will say and do anything, regardless of the truth or the integrity of her actions, to attack me, and through me, Chief Griswold. It won't hold up, of course, but that's what's going on.\"\n\n\"And this is why I was so cautious to not question Tunnin about her relationship with Harlow,\" I said, \"as well as to have someone in the room with me during the interview, that being Teresa Croyle, who Todd assures me is a woman.\"\n\n\"Ouch.\" said Cindy. \"I did say something about it. Not to her, but at lunch.\"\n\n\"Let's hope she and Harlow are unaware of it.\" I said. \"Oh well, least of my worries. I am much, much more disturbed about what Priya Ajmani just did in releasing the name of a rape victim and telling the world the woman was raped. I am going to twist that bitch reporter's cap around.\" \n\nTwo women were looking at me in shock at my language. \"What?\" I queried.\n\n\"Er, nothing.\" said Cindy, knowing that she might be in charge of Press Relations, but that even that was not going to save Priya from the Wrath of the Crowbar...\n\n* * * * * * * * * * * * * * *\n\nAt 10:00am, Priya Ajmani came into the Press area of Police Headquarters, which is to the left of the front doors, before getting to the Duty Desk and I-A through I-C rooms. She worked her way to the office of Captain Damien Thompson.\n\n\"Go into the Press Interview Room.\" Thompson said. \"No cameras, just you.\" Priya went next door into the room, which had two leather chairs for comfortable interviewing, good lighting, lots of Police plaques and memorabilia on the walls. As she went in, the door slammed hard behind her, making her jump. \n\nBehind the door were the TCPD's two Commanders: the Red Crowbar and the Green Crowbar. And the Red Crowbar's face was darker red than his hair with anger.\n\n\"What in the fuck do you think you were doing?\" I thundered. Do I even need to say my powerful iPhone bug-killer was on, doing it's best imitation of Slender Man destroying video camera recordings.\n\n\"What are you talking about?\" Priya said haughtily. She did notice that Cindy had the door blocked, while I was between them, my gray eyes boring hard into the Indian reporterette.\n\n\"Putting out the name of a rape victim? Telling the god-damn world she was raped?\" I growled.\n\n\"We reported the news.\" Priya shot back. \"The Public has a right to know----\"\n\n\"STOP WITH THAT GOD-DAMN BULLSHIT!!\" I yelled as hard as I could right into her face. \"There is NO prurient Public interest in the name of that rape victim being broadcast! There is NOTHING that will help me solve that case that will come of blabbing her name all over God's creation. The Public does NOT have an automatic right to know!\"\n\n\"It might help if someone hears about it and knows something----\" Priya tried, her face going from anger to desperation.\n\n\"BULL SHIT!!\" I yelled into her face again. \"*I* am the one working on this case, and *I* am the one who decides what helps my cases! And I'll put my record of solving cases up against your 'the public has a right to know' horse shit any god-damn day!\"\n\n\"Furthermore!\" I shouted, \"all you've done is humiliate that woman and her family. Needlessly. Now everyone she knows will look upon her as a defiled piece of trash! She's been humiliated before her friends, her family... by YOU! YOU, Priya, are the one who did this to her! And you want to hide behind your fucking excrement about 'the public has the right to know'...\" I said that part in a cynical, whiny voice, then returned to blast mode.\n\n\"And you didn't do it to help anyone!\" I thundered. \"You did it to hurt that woman, to cause her and her family PAIN!\"\n\n\"No I didn't!\" Priya tried to yell back. She was near to crying now. \"I was reporting the news----\"\n\n\"BULL FUCKING SHIT!\" I screamed. \"You're just like all the other god-damned reporters. You don't give a shit about anything or anyone, you just want to cause people pain! You want people to be hurt! And then you hide behind your worthless 'journalist' badge, calling it 'news'! Jesus fucking Christ!\"\n\nI had her all but sobbing now. I just looked down at her. \"My God.\" I said, my voice now unnervingly quiet. \"Right now, I wish I could go back in time, so I could just leave you to die at the hands of the CIA. I am sorry I rescued you from them. I should have let them kill you. You are absolutely fucking worthless. You're just one of the Haters, one of those that enjoy the pain of others. May God damn you. I truly wish I'd left you to die that night.\" (Author's note: 'Pink Lemonade', Ch. 03.)\n\nWith that, I stalked out, slamming the door behind me.\n\n\"It's not like that!\" Priya wailed at Cindy, whose ice-blue eyes were boring into her.\n\n\"Well...\" Cindy said, her voice much quieter and calmer than mine; this was a 'good cop, bad cop' routine if ever there was one. \"Within the extent of his knowledge... he is right. Remember, Priya... one of your fellow reporters tried to murder that man's daughter, and for nothing but sheer hatred of the good Commander Troy has done.\"\n\n\"That wasn't me!\" Priya cried. \"I had nothing to do with that! I was just as upset as anyone about it! And I was as happy as anyone when she was saved! Ask everyone at the station!---\"\n\nCindy held up her hand. \"You're missing the point, which is that it was really bad to release that rape victim's name like that, and that Commander Troy is not forgiving at all about reporters after what happened on Christmas Eve. Why can't you just do your job without the propaganda, without trying to leave broken people behind as you drive by and drive off?\"\n\n\"We're reporting the news, which is our job.\" Priya replied, trying to get her wits back about her.\n\n\"No you're not.\" said Cindy. \"Don is right about that.\" She turned to go. \"I'll talk to Don, get him to calm down about you. But you need to tell your fellow journalists to clean it up, report accurately and fairly, and drop the propaganda and agendas in your reporting, especially of him.\" She went through the door and left the room, leaving a broken soul behind her...\n\n* * * * * * * * * * * * * * *\n\nI met Laura at her favorite Soup & Salad place. She had secured an indoor table by the large window, with a great view of the man-made lake. Also with her was Mrs. Myrtle L. James, in some ways the Town Matriarch.\n\n\"Oh, yes,\" said Mrs. James as we ate our bowls of delicious potato soup, \"Mrs. Clarkston applied to be part of the Investment Club. We haven't had any openings in a good while, so there has been no reason to talk about her potential membership.\"\n\n\"We should tell my husband,\" said Laura, \"that the process has changed. After Jeanine Burke died, we decided to have two-woman control of the list of names instead of one. Care to guess who those two are?\"\n\n\"You, and Judge Lorraine McGill.\" I said simply, then ate another spoonful of soup.\n\n\"Nothing gets by the man, Mrs. James.\" Laura said.\n\n\"Yes, we're all used to that by now.\" said Mrs. James. \"And how did you know, Commander?\"",
        "\"Oh, I can't reveal sources.\" I said. \"But don't worry, I found out in a benign way.\" Indeed, Jeanine Burke's law partner Virginia Madison had told Todd, who told Teresa, who did not keep important information like that from her boss. \"So were you going to admit Mrs. Clarkston into your club?\"\n\n\"This is the part that I told Mrs. James we needed to tell you, on account of your investigation of the home invasion.\" said Laura.\n\n\"And I agree, if reluctantly.\" said Myrtle L. James. \"A few of us had talked to her about her potential membership not very long ago. One of our older members is in failing health, and we anticipate a vacancy in the next few months, maybe even weeks. Our membership was not keen on admitting Mrs. Clarkston, as many of our members do not like her husband very much. However, she suggested that that might not be a problem for very much longer, especially after her daughter Tiffany graduates and goes to college.\"\n\n\"Couple of years out for that.\" I said.\n\n\"We also have some other information for you, Commander.\" said Mrs. James. \"A number of our members have learned through what Laura calls 'gossip' that the Press in this Town is going to attack you by revealing what they call 'dirty secrets' about you. They are going to do this in conjunction with that odious man Robert Mullen accusing you of crimes you have not committed.\"\n\n\"Any idea what those dirty secrets are?\" I asked. \"Besides the secret that I have the most beautiful wife in the County?\" Laura smiled at that, and Mrs. James chuckled.\n\n\"No, we don't know exactly what it is.\" said Mrs. James. \"I can assure you that whatever dislike of Richard Clarkston the members of the Ladies Auxiliary have, their disgust with Mr. Mullen is far worse. We were all very happy when he resigned from our Inspector General's office.\"\n\n\"Especially Judge McGill, I would bet.\" I replied.\n\n\"And you'd win that bet.\" Laura said with something resembling a sigh.\n\n* * * * * * * * * * * * * * *\n\n\"Daddy!\" My favorite sound occurred as I came through the front door of the Mountain Nest at 6:30pm, and it was followed by my daughter running up to greet me. I knelt down to let her give me a hug, as picking her up was starting to be a strain on my back. Kneeling also allowed me to hug Jim, who ran up behind his big sister, and then to pet two outstanding dogs that were in attendance.\n\n\"We'll have supper in half an hour.\" my mom Phyllis said. \"I got a phone call from one of the Community Center ladies, telling me to watch the KSTD broadcast at the end.\"\n\n\"Okay.\" I said, hugging my mom and kissing her on the cheek. Then Laura came out of the 'Puter Room', as Carole called it, and I kissed her full on the lips, which made Carole giggle.\n\nI poured a Scotch and Soda, not too strong, and took the dogs out. I sat on the metal mesh seat on the back porch and watched the dogs sniffing around the place, finally doing their business and then sauntering back. I was thinking about the cases, straining to see the clues I knew I was missing...\n\nGoing back inside some minutes later, we settled down to watch the KSTD broadcast. They always had Sports last, teasing it throughout the hour to keep most people watching through the whole broadcast. This time, though, they had an 'editorial comment' from Editor-In-Chief Dan Walther.\n\n\"I am coming to you today,\" Walther said, \"to apologize for an unacceptable error in judgement. We previously revealed the name of a rape victim. Doing so was needless, and served no valuable purpose. We apologize to the family for the humiliation they have suffered as a result of this mistake.\"\n\n\"I have always been honored to be a journalist, and to bring you the news as quickly and as fairly and as openly as we possibly could.\" said Walther. \"I tended to my duties with the same values I learned as a part of the United States Marines. But I have not upheld those values in allowing that erroneous reporting, and also in keeping John Hardwood on our Staff when it should've been clear to me that his mind was warped by hatred, leading to his unforgivable actions on Christmas Eve, which put a little girl and a Police Officer in mortal danger.\"\n\n\"Therefore,\" finished Walther, \"I have announced to the KSTD Staff that I am retiring, effective this Friday, June 8th. There will be fundamental changes at KSTD, and I am assured, and will assure you, that their reporting going forward will meet the high standards I've always expected of them. I appreciate your support and viewership for the last several years. Goodnight, and 'peace'.\"\n\n\"Wow.\" I said as the broadcast ended.\n\n\"It is all over Town that you reamed Priya for broadcasting Mrs. Clarkston's name.\" said my mother. Fortunately the kids were not in the room to hear that potty-mouth language. \"Do you think that is why he's leaving?\"\n\n\"I don't know.\" I said. \"Cindy talked to Priya after I left the room, and Cindy told me that Priya was badly shaken up after I'd finished with her. Walther takes great pride in having been a U.S. Marine, as well. But to retire over that? That's... a 'strangeness'.\"\n\nThe 'strangeness' did not prevent me from catching Carole trying to feed Bowser her stringbeans at dinner. Her next trick was to put her stringbeans on Jim's plate when I went to get second helpings of everything. Jim ate the stringbeans, but Carole still went to timeout... mostly so that she would fully understand that she was not dealing with an Agency of the Weak-Minded...\n\nPart 17 - Third Time's The Charm\n\nTuesday, June 5th, 9:30pm. Kate Kane disconnected her cellphone. \"That was your dad.\" she said to her daughter, Nikki Kane. \"He's staying in Washington until Friday.\" Michael Kaine officially worked for the University's Institute for Political Policy, but he was a rabid Democrat and was in Washington for consultations with other Democrat 'backbenchers'... people who worked behind the scenes on behalf of Democrat politicians.\n\nKate had raven black hair and a shapely body that she kept fit through exercise. Her daughter Nikki was a rising Sophomore at Eastern State. She was a beautiful young woman, also black-haired, with a saucy body and great legs. She had no problem getting a lot of cock, and often attended Frat parties just to pull a train and fuck as many men a night as she could.\n\nHer brother Tom Kane had been the County High School football quarterback the previous Fall, and was attending the University this Fall. Tom and Nikki despised each other; Tom was an arrogant, mean-spirited young man that had no problem treating women like sex objects and using them, and he surprised himself sometimes how many girls tolerated the abuse to be with the Big Man on (the County High) Campus. He had no problem getting a lot of pussy. Nikki saw Tom for what he was, and took every cheap shot at him she could.\n\nTom's father, a former football coach and personal trainer, kept him in line when Tom needed it, but otherwise didn't say much to either of his kids when the went out late and partied. He did tell them that drinking and driving was not tolerated, nor were drugs at all, but he didn't seem to notice if Tom or Nikki came home drunk.\n\n\"Make sure to set the alarm.\" said Nikki as she read her magazine, bored to tears with being at home. She wanted to be at a party, or hanging out with Tom's well-hung friends like Sven Radcliffe or Dave Clarkston, but they'd blown her off. And then the news had come out about Dave's mother Marcia.\n\n\"I will, as soon as Tom gets home.\" said Kate. \"He said he'd be home by ten.\"\n\n\"He's a lying piece of crap.\" said Nikki.\n\n\"Nikki!\" Kate exclaimed, more at her daughter's potty-mouth language than her disdain for Tom.\n\nJust then the door to the garage opened, and Tom came in. \"Hi Mom, I'm back.\"\n\n\"See, Nikki?\" Kate said. \"He's even early tonight.\"\n\n\"Too bad.\" muttered Nikki. \"I'll be upstairs, Mom.\" She got up and left the room.\n\n\"It's boring as hell out there.\" said Tom as he came up and kissed his mother's cheek, then sitting down on the sofa next to her. \"Nobody's partying at all. Everyone's at home, scared to death of those home invaders.\"\n\n\"That reminds me,\" said Kate. \"Go set the alarm.\"\n\n\"Don't bother.\"\n\nThe gravelly voice came from behind them. Tom and Kate whirled to see two lean, tall men behind them, with black Spider-Man masks, black spandex suits, gloves... and two bright, shiny revolvers pointed at their heads...\n\n* * * * * * * * * * * * * * *\n\n3:30am, Wednesday, the Sixth of June. I came into the Kane home, which was on the western edge of the Heritage Cloisters. The golf course generally ran north-south through the subdivision. Teresa and Todd's home was near the front (south side) of the subdivision. The Clarkston's home had been not far away but more easterly, and the Radcliffe home was further north.\n\n\"Whaddya got, Washington?\" I asked, seeing Theo talking with Captain Perlman in the main room. \"I'd ask your Captain here, but she's just going to tell me what you're going to tell me.\" Tanya chuckled.\n\n\"Detective Davis is upstairs, sir.\" said Theo. \"He and I were on call tonight. Looks like our Ninja Spider-Men have struck again. But there's some differences this time. We've got the son Tom in the den, getting his statement----\"\n\n\"Sir,\" said Tanya, \"why don't you go upstairs and look for yourself first.\" I took that advice and went into the master bedroom upstairs. The floor plan was not like the other two homes, and this bedroom was relatively small.\n\n\"What's going on, Davis?\" I asked.\n\n\"Sir, Mrs. Kate Kane and her daughter Nikki were taken to the hospital. Mr. Michael Kane is not at home; he's in Washington, D.C. on a business trip. He works at the University. Tom Kane, Mrs. Kane's son and Nikki's brother, is downstairs in the den; you might have seen him already.\n\n\"No, I didn't.\" I said. \"So, give me the timeline.\"\n\n\"According to all three Kanes,\" said Jerome, \"the two perps came into the house about 9:40pm. Tom had just gotten home. They forced Mrs. Kane and Tom upstairs to her bedroom, then one of them went and got Nikki from her bedroom. They were all forced to strip naked and were then duck-taped, the women's hands behind them and Tom's in front of him.\"\n\n\"No cuffs this time?\" I asked. I was looking at the bed. The headboard was a solid piece of wood from the floor up, and there was no footboard at all.\n\n\"They may have brought some, sir,\" said Jerome, \"but as you can see, there's not too many places they can be cuffed to.\"\n\n\"Well that's an assumption,\" I said sourly, \"and one I don't agree with. But go ahead. What happened?\"\n\n\"They forced the mother, Kate, to lie down on the bed on her back, then the forced Nikki to perform oral sex on her.\" said Jerome. \"Then they forced Tom to get behind his sister and penetrate her. Before he came, they forced him to pull out and then have intercourse with his mother, which he did until he climaxed.\"\n\n\"After that, they forced him to sit down in the back corner there, and they raped the two women repeatedly.\" continued Jerome. \"The girl was on her shoulders and knees and was taken from behind, while the mother was on her back. One difference from the previous incidents was that both women's mouths were duct-taped shut. The criminals used condoms, just like previous times, as well.\"\n\n\"Any identifying marks that could be seen?\" I asked.\n\n\"One of them was described as pale-skinned, the other a bit more tanned.\" said Jerome. \"Captain Perlman asked about marks or moles, and neither woman remember seeing anything obvious, other than that both perps were well-endowed, though not as large as Tom. Captain Perlman described him as 'hung like a horse'.\"\n\n\"She does strive to make accurate descriptions.\" I said acerbically. \"Anything else?\"\n\n\"Only that the perps took a lot longer than the previous times. They both raped the mother at least twice, and one of them anally penetrated the daughter. Then they forced Tom to have intercourse with his sister again, and according to the mother, they were really calling Tom and Nikki nasty names, yelling in his ear and her ear a lot. \"\n\n\"And one final thing.\" concluded Jerome. \"In the previous incidents, the son got free of his bonds pretty quickly. But this time, they made all three go into the bathroom and sit in the hot tub in the dark, then damaged the door handle so the door couldn't be easily opened. Took them a good long while to get free.\"\n\nI nodded. \"Okay, I'm going back downstairs.\" I did so, and talked to Captain Perlman, who told me what she'd been told by the woman about their assailants' features, such as they were.\n\n\"By the way,\" she said, \"no signs of forced entry at all; any door, any window. Captain Croyle is at Headquarters. She's already gotten the tapes from the front guard shack, and she's reviewing our patrols's movements. No one reported seeing anything, and she wants to know how these bastards got by us this time.\"\n\n\"Yes, they are remarkably able to move about undetected, aren't they?\" I said. \"Excuse me a moment.\" I went into the back den, where Tom was sitting on the sofa, a sullen look on his face, being attended to by Patrolmen Culver and Hicks.\n\n\"Tom?\" I said, making him look up at me. \"I'm Commander Don Troy. I've already heard the story, and I just want to ask some follow-up questions. Any idea at all how the perps got into the house?\"\n\n\"No sir.\" said Tom sullenly. \"I was talking to my mom, and suddenly they were right behind us, guns pointed at our heads. I didn't hear a thing beforehand.\"\n\n\"You seem angry.\" I said. \"More angry than shocked.\"\n\n\"Yeah, I'm pissed off.\" said Tom. \"I should've figured out a way to stop them, or prevented this from happening.\"\n\n\"You didn't go to the Hospital?\" I asked.\n\n\"No sir, your Officers made me stay here.\" Tom said. I nodded.\n\n\"They didn't physically beat you up?\" I asked.\n\n\"Naw.\" said Tom. \"They slapped my sister's ass a lot until it turned red, but other than that they just yelled a lot.\"\n\nPart 18 - Birthdays and Insights\n\nWednesday, June 6th, 7:30am. I went home to the Mountain Nest to change into my Uniform. I could've done that at work, but today was my son Jim's fourth birthday. My goodness! he was growing up so fast!\n\nEveryone was just sitting down to breakfast when I arrived. We brought out a cupcake for Jim with a candle that he blew out as we sang 'Happy Birthday' to him. We were going to have a bigger party for him later that evening, so we gave him just one present: a big huge container of Legos. He was excited to see these objects that he could use to build things, and I admonished him not to try to eat the Legos.\n\n* * * * * * * * * * * * * * *\n\nAt 9:00am we gathered in Classroom 'E'. Mary Milton was there, having come in and begun the computer work hours before, coming in herself to get it done faster. Mary is very fast with computers and data acquisition.\n\n\"Michael Kane works for the University's Institute for Political Policy.\" said Mary. \"Dunno if this is important, but he's heavily involved in Democrat causes behind the scenes. No money issues, but he expensed a lot of things to either the Institute or various political PACs that favor Democrats.\n\n\"Kate Kane was something of a hostess for her husband's social functions, and sometimes helped University President Wellman's wife with University social events.\" continued Mary. \"Their son Tom was County High's football quarterback, and thus the Big Boy on Campus, and his sister Nikki, one year older than him, attends Eastern State. She has, and has had, a reputation as a very 'easy' girl. She was picked up at a Frat party and charged with prostitution, but her dad got her a good lawyer and they forced the charges to be dropped.\"\n\n\"I, er... 'peeked' into the School records.\" said Mary. \"Nothing on Nikki, except that her grades were bad. Looks to me like she was socially promoted, failing grades changed to barely passing ones. Her daddy and Jack Lewis might've helped a lot to get her into Eastern State.\"\n\nMore Mary: \"Tom has been in trouble for bullying other kids for several years. He has a bad reputation, but his dad was a coach and a personal trainer, and he kept his son in line. Tom was scared of him, but really no one else... except maybe Dave Clarkston. A teacher put a note in Tom's file that Tom groped Dave's sister Tiffany, tore open her shirt and fondled her breasts, and Dave beat Tom down and forced him to apologize. Tom has left Tiffany alone since.\"\n\n\"And nothing done about that by the school, other than a note?\" Cindy said with disgust.\n\n\"No ma'am.\" said Mary. \"Can't have the star quarterback in trouble, dontcha know.\"\n\n\"Dave did the right thing, protected his sister.\" I said. \"Good on him.\"\n\n\"Like many bullies who get beat down, Tom and Dave hung out together some.\" said Mary. \"Seems the teachers were really watching Tom, and made notes of who his friends were.\"\n\n\"Wow, he must've really been a bad seed to be on the watch list.\" Joanne said. \"Kind of like the Ridley's kid Zack.\" Everyone murmured agreement.\n\n\"It's early days, but any forensics?\" I asked.\n\n\"No sir.\" said Tanya. \"Rape kits done, sheets collected, all that. It'll be a while, maybe two days. Since the last two incidents yielded nothing, I'm not holding out much hope for this one giving us anything, but we'll see what comes up.\"\n\n\"Hope never dies.\" I said. \"Okay, so this one was a bit different than the other two home invasions, though there were similarities. This time, the father, who I understand is a bruiser enough to keep his son in line, was not at home. This time the daughter was at home, and she was sexually assaulted, perhaps even worse than the mother. The son was forced to have sex with them, but for the most part he was forced to sit on the floor while the perps repeatedly defiled the two women, switching out several times, climaxing into the condoms several times. Instead of a couple of hours, they stayed three and a half to four hours. And they tied them all up very securely and trapped them in the bathroom afterwards.\"\n\n\"Sir,\" said Theo, \"there were no handcuffs used in this incident, just duct tape. We've gone around to all the hardware stores to see who has bought duct tape as well as plastic handcuffs. No joy on it, at least not in this County.\"\n\n\"It was a try, anyway.\" I said. \"No handcuffs... no handcuffs...\"\n\nSeeing as I was getting introspective, Captain Croyle spoke up. \"Sir,\" she said, \"I've reviewed the tapes and the duty logs of the patrols. It was a weeknight, so traffic in and out was pretty low, especially after 9:00pm. No one but residents came in or out, not even any late delivery trucks. First Precinct patrols have been keying on that area, and nothing amiss was seen.\"\n\n\"And here's a little secret none of you should ever let get out of here.\" said Teresa. \"There are hidden cameras set up all over the place. Most are concealed in the streetlights. The security people and the Police usually don't have them turned on, but since the first assault a week and a half ago, we've been monitoring them. There have been no strangers walking around during the hours from just before the incidents to after them. Nothing. Just residents walking their dogs. It's like these perps are frickin' ghosts.\"\n\n\"That's gotta mean something.\" said Tanya. \"Sir, I'm thinking it may be an inside job... someone that lives in the subdivision.\"\n\n\"Yeah, I thought of that, too.\" I said. \"But they're still getting inside the houses themselves. How are they doing that?\"\n\n\"Sneaking in while the doors are unlocked, hiding somewhere, then coming out and taking the families hostage.\" said Joanne.\n\n\"And then not a trace of them after they leave.\" I said. \"The Police are going through the houses and clearing them, making sure nobody stayed behind, are they not?\"\n\n\"Yes sir.\" said Teresa. \"I did it myself, with Culver, at the Clarkstons. We even pulled down the attic door and looked up there. Hot as hell; perps would not want to hide out there for hours. And Irwin said a couple of guys went through the Radcliffe home, opened all the closet doors and such, looking for dropped condoms or duct tape rolls, stuff like that.\" I nodded.",
        "\"Okay.\" I said. \"I dunno about all of you, but I could use a sugar rush from doughnut fort-i-fi-cations. And I think the Police Boxing Matches Champion should supply a couple of boxes, whadda y'all think?\"\n\n\"Terrible, the price of winning.\" said Cindy Ross, looking squarely at her best friend, the Police Boxing Matches Champion.\n\n\"I can assure you,\" said Teresa Croyle with alacrity as she stood up, \"that it is worth every penny to be the one buying those doughnuts... and having that trophy on my desk. See y'all in half an hour, in MCD...\"\n\n* * * * * * * * * * * * * * *\n\nIt was 2:00pm, Wednesday, June 6th. Laura had called to say that Kate Kane was not severely injured, that Nikki Kane suffered lacerations from being anally raped, and both women were shaken up, Kate more for her daughter than herself, and Nikki more angry than in shock. Not unlike her brother, I thought to myself.\n\nI was trying to pierce the veil. That one clue... that one thing I was seeing, but not observing. And then it hit me... and everything started falling into place. Everything made sense. All of it.\n\n\"Captain Perlman!\" I yelled as I flew out of my office and down the hall. The Detectives in MCD and Vice probably suspected that I was the victim of a sugar rush from the doughnuts Teresa had provided...\n\nPart 19 - Fornication\n\n\"Come on in.\" said Helga Radcliffe to the handsome teen stud. \"Would you like something to drink--- oh, my...\"\n\nThe young man had put his arms around her and drawn her to him. Now he was kissing her mouth... and she was responding. Their tongues twined hotly as his hands explored her firm, sexy body through her blouse and jeans.\n\n\"Mmmm, why don't we go upstairs.\" the young man said. \"Before anyone comes home.\"\n\n\"Don't worry about that.\" Helga said as the stud nuzzled her neck. \"My husband is still in the Hospital, and my son is with his little girlfriend.\"\n\nThe world would be shocked to know that Helga had long been unfaithful to her husband, that she enjoyed cheating on him, especially with young, handsome, virile studs. She would spend her husband's money, and she would get her sexual pleasure from better men than her husband, who could provide that pleasure she craved...\n\n* * * * * * * * * * * * * * *\n\nHelga lay naked on her bed, spreading her legs in welcome as the young man mounted her. He kissed her deeply as he fit the head of his huge, throbbing cock to her labes. He'd eaten her pussy for several minutes, and now she was sopping wet and eager to accommodate his size.\n\n\"Ohhhhh!\" she gasped as he penetrated her and began sinking his long, thick shaft into the steaming wet depths of her hungry snatch. She raised her hips to meet his thrust, and their loins collided with a wet *smack!*. He began pumping her in a hot, fast rhythm, driving deep and hard, sliding back more slowly, then thrusting back in again with raw, male power.\n\nAs they humped lustily, the young stud's nut was rising and he announced he was close to coming. As he raised up some to get leverage and more power, to deliver his load of potent, virile semen as deeply into Helga's vagina as he could get it, the beautiful blonde looked between their bodies, down at their coupled loins... and saw the three moles in a line...\n\nA wave of shock passed through her as she looked up at the young man as he began pumping his full climax into her with a deep groan. \"Oh my God!\" she yelled, \"you're... you're one of the bastards that broke in and raped me!\"\n\nTo be continued.\n\nFinal chapter comes next. What are your solutions to this case?"
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "big cock",
        "drama",
        "crime drama",
        "mystery",
        "police drama",
        "iron crowbar",
        "blowjob",
        "mother son",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-pact-ch-03-3"
}