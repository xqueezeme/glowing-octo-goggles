{
    "title": "Caught in the Crossfire Ch. 05",
    "pages": [
        "For those new to this story, it began as a moderate Non-consent/Reluctance type, but is evolving into something different. It will overlap into a number of different story genres before its conclusion\u2014this being the first 'morphing.'\n\nAs for this chapter, specifically, our lovely 'sexual captive,' Brittany, looking for more answers to her plight, momentarily turns the tables on Jack.\n\nA warning to casual readers, although not nearly as intense as the last chapter, there is a fairly detailed description of anal sex near the end of this chapter.\n\n*****\n\nFor the next four or five weeks, Brittany and Jack settled into a fun routine\u2014well, fun for Jack, at least. Brittany had her moments of joy as well, but she would never admit it outside her loud, orgasmic screams.\n\nThe money was always exchanged first, three thousand dollars, as partial payment of her debt, before they both got down to the real business of their meetings. Their fun-time sessions would usually last between two and three hours, but as the weeks past, they were invariably lengthening. Once they renewed their relationship each week, Brittany was always loath to go home, trying to keep Jack with her for as long as she could.\n\nThere was only a small bump encountered in their routine, and it occurred the following week after Jack told her about Kellen Wilson and Ashante.\n\nBrittany didn't greet Jack at the door that next week when he knocked, leaving the door ajar, instead. When Jack entered the room, Brittany was waiting for him, sitting up straight and rigid on the bed. The brown paper bag with the money lay at her side.\n\nWhen Jack closed the door, she asked him, \"Why did you tell me?\"\n\nHe sat at the small table opposite her. It took him a moment to figure out what she was implying. Finally guessing she had second thoughts about the story. \"Don't get pissed at me. You wanted to know what your husband did. 'I need to know why I'm here.' These were your exact words.\"\n\nBrittany lowered her eyes. Staring at the floor, she responded, \"Last week, I asked him about that Ashante girl...my father, that is.\"\n\n\"Not Santos?\"\n\nShe shook her head at first, and then said, \"I know that Dad always tells me the truth.\"\n\n\"And what did he say when you asked him?\"\n\nShe sniffed back a tear before speaking, \"It's funny, but he remembered. I didn't even have to give him any details. I just said her name, telling him I remembered the papers were full of her and details concerning her murder, and that I was curious to find out what eventually happened in the case.\" She paused for a long moment as her eyes began to water. After wiping the tears away with a hand, she continued, \"Anyway, he looked at me in the way he always did, straight in the eye, and told me her boyfriend was arrested for the murder. Then I asked him if the boyfriend was found guilty. He told me that there wasn't a trial, but justice was handed out just the same. I asked what he meant by that, but he said I shouldn't concern myself with what happens to the lowlifes of the world.\"\n\nJack didn't say anything, thinking there was no point arguing it with her anymore. She would believe whatever she wanted to believe, and he was fine with that. He learned a long time ago that most people deluded themselves about life, about family, about friends. Jack concluded that when they denied reality, it was a coping mechanism most people used to maintain their sanity\u2014best to turn a blind eye to the skunk they married, rather than face the consequences of his nature head on, or think about how it reflects on them.\n\nHowever, Brittany did something unexpected. She threw the bag of money, hitting Jack in the chest with it. Then she asked again, weakly this time, \"Why did you tell me?\"\n\nAngered by her reaction, Jack picked the bag of money off the floor, and responded harshly and with overt sarcasm, \"What the fuck is your problem? Your dad told you what happened, didn't he? Ashante's boyfriend stoved in her skull with a pipe, and even though there wasn't a trial, jailhouse justice was meted out. The bad guy paid for his crimes. Yippee. Three cheers for the boys in blue, they got their man. Daddy told me so, and daddy never, ever lies to...\"\n\nShe cut him off, almost screaming, \"Shut up! Just shut up.\" Her eyes were aflame, radiating green daggers of rage at having her pain mocked. When she saw that Jack was stunned into silence, she finished, \"I looked into his eyes when he told me the story. I looked into his eyes and knew he was lying to me!\" For a moment after her declaration, she just stared blankly at Jack before doubling over onto the floor in abject sorrow and grief.\n\nIt was another, all too common reaction seen by Jack during his twenty years on the force; when the family member finally realizes their spouse, their child, their parent is an absolute evil waste of human flesh, their first reaction is to lash out at the messenger. Brittany, acting out at Jack, was her weak version at striking back at the truth.\n\nShe was nearly inconsolable for an hour after. All Jack could do was pick her up, and hold her in his lap as she wept unceasingly like a little girl, thoroughly dampening his shirt, and his mood.\n\nWhen she finally got control over her emotions, Jack sat her on the bed, and said, \"Let's forget about our fun-time this week. Neither of us is in the mood.\"\n\nAs Jack turned to leave, however, Brittany grabbed his hand, saying, \"Please stay with me. I've nowhere else to go, and don't want to go home.\"\n\nBefore Jack could say anything, she pulled him down and kissed him long and hard, and with a passion she rarely, if ever, displayed with her husband.\n\nThey 'played' together well into the night.\n\n********\n\nNothing more was said about Ashante and Kellen Wilson, and as subsequent weeks passed, Brittany came to view their weekly trysts with a degree of cautious interest\u2014if still not comfortable as Jack's concubine, then, at least, grudgingly accepting of her new role as one.\n\nAlthough she couldn't explain it herself, she liked being under Jack's thumb, particularly since he made her feel special in his own gruff way. Deep down, she knew Jack was a kind man, fucked over by life and circumstance. Consequently, she understood his controlling nature, and made allowances for it. She was being punished for what Santos and her father had done, not just to Jack, but to the others as well. Thus, she accepted the duties she needed to perform as penitence, in order to wipe that sin away.\n\nYet, the money part she didn't care for and it weighed heavily on her spirit. The obvious reason being she had to sell her things to scrape up the money every week, and she was loath to sell off all her 'pretties.' She felt she earned those over the years, rewards for being a good wife and mother.\n\n'Yes,' she told herself, she was a good wife, although flawed for having strayed one time. Just like her husband, who also strayed, and strayed many times with prostitutes, according to Jack. Thus, she felt it unfair she had to pay so high a price\u2014with her belongings, as well as with her body\u2014for her husband's sin.\n\nSeveral times, she tried to persuade Jack to take less, but he wasn't open for a renegotiation of their deal just yet. After that, she rationalized that since the gifts were originally bought by Santos, then the money was really coming out of his pocket, and not hers. In Brittany's mind, then, Santos was really paying Jack to pleasure her.\n\nFun as it all was, particularly being subservient to a powerful man that she was becoming attracted to, there came a point where she wanted to be more than Jack's cash register and plaything.\n\nWas she more than that to him? If so, could she be more than that? So many questions bounced around in her head. She wanted to know more about him as a man. Could he give up control? Did he even trust anyone enough to give up control, and meet him or her as equals? Mostly, she needed to know if he felt the same way about her as she was beginning to feel about him.\n\n********\n\nSo it was that on one of their weekly meetings, Brittany wore that same outfit Jack made her wear on their ride around the city\u2014sans underwear, of course. She knew he liked her dressing this way, but more than that, she liked dressing this way for him. The tightness of the spandex as it molded snuggly to her large breasts and the feel of the fabric of the skirt against her thighs and bare mons, somehow made her feel more womanly.\n\nBrittany gave her buttocks an exaggerated wiggle as she got out of her car and walked toward the motel room. She knew Jack was watching her, she just didn't know from where. Just before she entered the room, she flipped up the back of her skirt exposing her well-formed, bare ass, and bent over as if she were picking up something off the ground. Standing back up, she looked over her shoulder in a seductive manner and winked, before entering the room.\n\nJack smiled as he studied her ass from a neighboring parking lot. He was beginning to like her more and more each week.\n\nStarting to think with your dick, ain't you Jack, he mused, and not waiting the obligatory fifteen minutes to see if she was followed.\n\nBrittany barely waited for Jack to close and lock the door, before asking, \"I know it's not my place and I'm still in your debt, but could we try something a little different this time?\"\n\nJack was wary of her sudden change in behavior; first, her saucy entrance into the motel room, and now a bold request to change plans. Something new was bothering her, and making her act out. It could only mean one of three things. She was having problems with the money, with the sex, or problems at home.\n\nLooking into the paper bag, he saw there was no problem with the money.\n\nWas Santos on to him, and she was trying to hide the fact?\n\nNo, if Santos knew, he would have already corrected the mistake he made years ago when he left him alive.\n\nGuessing it was sex, Jack finally answered, \"Getting bored of me already?\"\n\n\"No, it's not that. I just want to try something different. Do you still carry handcuffs?\"\n\nJack smiled before answering, \"That is different. You want to be handcuffed while I do you?\"\n\nShe ran a teasing finger along his chin, while saying, \"They wouldn't be for me.\"\n\nIf Jack wasn't wary before, he is now. \"I don't think that's such a good idea.\"\n\n\"Oh, come on. What are you, scared?\"\n\n\"Of being handcuffed by the woman I'm blackmailing for money and sex on the side? Yeah, a little bit.\"\n\n\"Oh, don't be such a big baby. I'm not going to hurt you. See, no weapons.\" Brittany lifted her arms above her head and did a slow pirouette. \"Go ahead, frisk me and see that I'm clean.\" Lifting up her skirt at the end of her turn, she added, laughingly, \"See, nothing under here but my bald pussy. Ooh, maybe I'm hiding a shiv in my butt crack.\" Still laughing, she turned around, pushed her rump out at Jack, and spread her buttocks. \"See, nothing there but my tight, little 'winky.' Satisfied?\"\n\nJack was still wary about her intensions, but he couldn't help laughing. \"Hey, that's no joke. You'd be surprised where suspects hide things. Maybe I should check inside your pussy for a weapon.\"\n\nBrittany jacked her skirt up again while putting a foot on the bed. Toying with her outer labia, she said coyly, \"Go ahead and check. Give me a full cavity search. I want you to be perfectly at ease with me. Probe all of me with that meaty nightstick of yours.\"\n\nHe loved it when the housewives wanted to break out on their own and explore the deep fantasies they may be harboring. Desires they were reluctant to reveal even to their husbands, were easier to fulfill with someone like Jack. It usually took a few fun-time sessions to bring their secret wants to the surface, and Jack was always happy to oblige their little perversions. It made sex with them that much more interesting.\n\nFulfilling their fantasies also made them easier to control in the end. Sharing depravities always had a way of bonding people together.\n\nWas that all this was, Brittany testing the sexual waters for herself? Was this just her trying to fulfill some cops and robbers fantasy? Jack still wasn't sure, and that bothered him. \"Let me see your purse.\"\n\n\"Wait...what? I was just kidding about searching me for a weapon.\"\n\nJack examined her purse thoroughly, inside and out, before responding, \"I'm not so much worried about weapons, as I am wires...which reminds me, lift up your top.\"\n\n\"Jesus, you are paranoid,\" Brittany commented as she lifted up her spandex top and pirouetted again. \"See, no recorders, no wires, no weapons...\"\n\nLaughing, Jack grabbed her tits, and said, \"No weapons? What do you call these?\"\n\nAnswering slyly, \"Man-handlers. They're not dangerous, but they are registered.\"\n\nJack remarked, almost as an afterthought, \"You know, Brit, you shouldn't be taking what we do as fun.\"\n\nBrittany stared at him incredulously for his flippant attitude. Then, gathering courage from deep within, she slapped him across the face as hard as she could, and raged, \"Fun! You call this fun! I find out I'm married to a murderer and thief, and I find it out from a man who treats me no better than a goddamn whore, because that's the only way he can get back at my murderer husband. I'm in hell, you fucker! When does this start to get fun? Tell me! When?!\"\n\nBrittany's eyes were still smoldering in rage as she wound up to slap him again.\n\nCatching her arm in mid-swing, Jack wrapped her tight in his arms to keep her from hitting him again. Locked in his embrace, all she could do was cry.\n\nJack waited for her to calm down before responding, \"I'm sorry I said that. It just looks like you're enjoying this too much.\"\n\n\"So what if I am? What am I supposed to do? If I can't enjoy some part of this, I'll go insane. I've no one, now. Don't you see? All I have is you on one side, and my asshole husband on the other. I can't even talk to Alandra anymore...\"\n\n\"It isn't that,\" he said, cutting her off, \"I just don't want you getting the idea we're going to be friends and hang out after all this is over.\"\n\nHe felt her relax.\n\nBrittany nodded her head, almost reluctantly, before saying, \"All I wanted was to feel in control for a bit, and yes, try to have some fun. Is that so bad? Is that so wrong?\"\n\n\"Is that the reason for changing things up and asking for handcuffs? You want to feel more in control?\"\n\nBrittany nodded her head, again.\n\nJack studied her face for a long time, looking for some clue of any possible, hidden intentions. Brittany just stared back at him, unemotionally. Finally, Jack added, \"It would be better to see our relationship as a short term business arrangement, and nothing more. Think of it this way: I'm keeping the elements in your life from spinning out of control while you pay me for that arrangement.\"\n\n\"I can't do that. This has to be more than some business transaction for me. I can't be Whore Incorporated waiting for our weekly mergers. I-I have to feel like I'm more than just a cum dump to you.\"\n\nHe could think of a half dozen good reasons not to go along with her plan, and only one reason to let her have what she wanted\u2014but what a reason!\n\nStill thinking with your dick, huh Jack.\n\nHe smiled while rubbing his face where she slapped him, and said, \"Okay, I can understand that, and because you throw a wicked right cross...\"\n\n\"I'm sorry I hit you,\" she interrupted.\n\n\"No you're not, but thanks for the apology, anyway. I can understand your feelings, so...\" Jack took his cuffs out of his suit jacket and handed them over to Brittany. \"It's your show. What do you want to do?\"\n\nBrittany looked at him with surprise. Jack had caught her off guard. Taking the handcuffs from him, she babbled a bit, \"Really? Ah...okay...I, ah...take your suit coat off and lie on the bed.\"\n\nJack teased, \"Just my suit coat? Nothing else?\"\n\n\"Uh-huh. It's more of a turn on for me if you keep your clothes on; at least to start. Now lie on the bed and put your arms up and against the headboard.\"\n\nBrittany looped the cuffs around a wooden crossbar at the top of the headboard before cuffing Jack's wrists.\n\nBrittany joked, as she stepped back, \"There, now I finally feel safe.\" Striking a coy pose, with one hip jutted to the side and a finger to her lips, she began, \"Let's see, what should I do first? Hmm...I know, it's awfully hot in here. I should really get comfy.\" With that, she turned away from Jack and undid her skirt.\n\nShe didn't let it fall to the floor, however, but teased Jack as a stripper might. With her head cocked around so that she could watch him out the corner of an eye, she slid her skirt slowly down her backside, gradually revealing her buttocks. She stopped when the top half of her bottom was uncovered, and said, \"You're an ass man, aren't you?\"\n\nJack was smiling at all her coy teasing when he answered, \"I'm an everything kind of man.\"\n\n\"That may be, but I noticed you haven't even tried to fuck my tits. I mean, Santos is always begging me to fuck my tits, but you haven't.\"\n\n\"Oh, that will change. I can assure you. I've just been preoccupied with the other gems of your anatomy.\"\n\n\"But you are an ass man, aren't you?\"\n\n\"I guess. If I had to choose between a woman with a nice set of jugs or one with a perfectly formed behind, I'd probably pick the lady with the great ass.\"\n\nBrittany let the skirt fall all the way to the floor, and remained facing away from Jack. Putting her hands on her hips, she gave them a little wiggle while saying, \"You told me I wasn't your type because I had a fat ass. That was mean of you.\"\n\n\"I may have been overly critical.\"\n\n\"So, you really don't think I have a fat ass?\"\n\n\"It's a bit wide from my taste, but overall, you have a lovely ass.\"\n\nTurning around, she slid the bottom of her spandex top above her breasts. The tightness of the fabric coupled with her arms pressing her breasts together at their sides, made them bulge forward, obscenely. Bending over so that heavy orbs pointed toward the floor, she asked, \"Don't you think I have nice tits?\"\n\nJack just smiled.\n\nBrittany could see the lump in Jack's pants growing. She smiled back at him, \"Would you like to fuck my tits?\"\n\nJack's smile broadened as he cocked an eyebrow.\n\nTurning around quickly, she spread her buttocks slightly while saying, \"Or would you like to fuck my ass again?\" Then, facing him again, she put a foot up on the bed and ran her hand along her inner thigh. \"Or is it pussy time. I love pussy time.\"\n\n\"There's no reason we can't do all three, and don't forget about your sweet lips.\"\n\n\"Oh yes, a little oral delight. You guys and your blowjobs, how could I forget.\"\n\nBrittany straddled Jack's chest. Leaning forward so that her firm tits brushed against his face, she said in a teasing manner, \"But I think I'll decide what we do, now that I'm in the driver's seat.\"\n\nEven through the dress shirt he was wearing, Jack could feel the heat radiating from her groin, and was surprised by how turned on she made herself with her own, slutty banter.\n\nShe bent close to his ear so that he could feel the sweet caress of her warm breath against his cheek. Whispering, she commanded, \"Suck.\"\n\nAfter dropping one of her breasts close to his mouth, Jack deftly pulled it in. Holding it gently by his teeth and lips, he ran a firm, quick tongue across the nipple. Instantly, the little peg of flesh stood out stiff and hard. Jack grabbed it gently between his teeth, sucking and licking it with abandon.\n\n\"Nibble,\" she moaned, deeply.\n\nJack bit and scraped his teeth gently across her nipple and dark red areola. It wasn't long before he could hear her breath coming as sweet, short and shallow pants, close to his ear.\n\nBrittany moaned, \"Yes, suck and lick and bi...oh my...y-yes. The other, now.\"\n\nFor the longest time, Brittany sat straddling Jack's chest with her back arch forward, holding both her breasts steady as Jack continually shifted lips, tongue, and teeth between them. Unconsciously, Brittany began shifting her hips forward and back in a short, fucking motion, making her pussy and clit to rake across the buttons of Jack's shirt.",
        "Pushing her tits even further forward so that Jack's head ended up between them, she breathed close to his ear, \"You're such a naughty bad boy. You've got me so wet. I'm making a mess of your shirt. Here, let's do this right.\"\n\nRemoving his tie, she unbuttoned his shirt, kissing his chest and abdomen each time a button was undone. Slowly making her way down, her lips stopped just shy of the belt of his pants as she kissed and licked about his navel.\n\nShe asked, \"You asked me the first time what I liked better, sucking or fucking, and I told you it depends on the man, remember?\"\n\n\"Uh-huh.\"\n\n\"Well, I love all of it with you. Yet, there is one thing we haven't done, and I'm curious...\"\n\nBrittany didn't finish her thought as she turned around. Still straddling Jack's chest, she backed herself up to where she could feel his warm breath caressing her groin.\n\nJack caught her musky scent even before she put herself close to his face. Now that her pussy was no more than an inch from his nose, her scent was overwhelming and intoxicating.\n\n\"Lick me,\" she commanded, softly.\n\nJack didn't\u2014right off, anyway. Instead, he toyed with her, teased her, and played with her pussy, nuzzling it all around with his nose while taking small, gentle bites with his lips and teeth to her hairless, outer labia. He made sure to concentrate more in the area near the top of her vulva, pressing and biting his lips firmly to the fleshy covering just above her clitoris.\n\nHis little teases to her clit weren't lost on her, as she moaned quietly and wiggled her ass ever so slightly in pleasure.\n\nBefore long, her arousal moistened Jack's attentive lips and chin. Only when he felt a little backward pressure, as she was pushing her pussy onto his mouth, did he part her folds with his tongue. Once inside, Jack concentrated more on tonguing her opening, while taking great sucking bites with his lips to her inner folds and groove.\n\nAs Jack fell deeper into the heady mixture of her warm and wet sex, unexpectedly, Brittany asked, \"Peter Hansen isn't your real name, is it?\"\n\nJack stopped his nibbling for a moment. So that's her game, he mused.\n\nResponding around a mouthful of pussy, he said, \"Sure it is. Why do you ask?\"\n\nShe didn't respond right away, and instead, softly commanded, \"Nibble me right there...no there...ooh, that's it. Now tongue my hole. Slide it deep.\" She pressed her bottom further into his face. Only when she felt Jack's tongue sliding deep into her pussy, did she respond, \"I looked up all the Pete Hansen's, P. Hansen's, or just plain Hansen's on line and in the phone book, and I don't think any of them are you.\"\n\nJack answered as he continued to kiss and lick all around her vulva, \"Maybe I don't like my first name, and use my middle name for everyday use. Maybe I have an unlisted number, as well.\"\n\n\"Maybe,\" she loudly moaned, \"But I don't think so.\" Suddenly, she pulled away from him.\n\nHe asked, \"Where are you going?\"\n\n\"My turn,\" she answered, giggling. Undoing Jack's belt and zipper, she continued, \"I'm going to leave your pants on. So, you had better be careful not to make a mess. Now, where is that big, bad boy? Come out; come out, where ever you are.\" She fumbled around in his pants until she found her treasure, and then stated brightly, \"Oh, there he is.\"\n\nJack already had a full-blown\u2014pun intended\u2014hard-on, so it took Brittany a little effort getting his cock and balls out through the opening in his boxers and pants. When she did, she kissed his cockhead, and said, nonchalantly, \"Such a fat, big boy. Momma's going to make you feel so good.\"\n\nBrittany pulled Jack's cock into her mouth as far as she could, and began bobbing her head while gently sucking.\n\nAfter some time, she pulled his cock out and asked, \"How many women have you done this to?\" Before he answered, she quickly slid his cock back into her mouth.\n\nJack had to think for a moment, as Brittany's tongue and lips were becoming an impediment for clear thought, \"More than a few.\"\n\nShe sucked on him a big longer, before pulling him out again to ask, \"What happened to them after your time with them was over?\"\n\nRenewing her head bob along his cock, Brittany heard Jack clear his throat before answering, \"T-They went back to their marriages, their h-husbands none the wiser.\"\n\n\"And that's it, you never saw them again?\" she asked as she kissed and licked all around his cockhead. \n\n\"Some t-tried coming b-back for seconds, but I refused. Jesus, what's with the questions?\"\n\nBrittany ignored the second part, and asked, \"Why did you refuse?\" Then she pulled him all the way inside her mouth and shifted her head about waiting for an answer. It wasn't until she pulled him back out, leaving heavy strands of her saliva dripping down his shaft, did she hear his disconnected answer.\n\n\"I...I-I d-don't do...Jesus...s-seconds.\"\n\nBrittany stopped her expert sucking. She stopped everything as a heavy silence descended between them. Only Jack's deep, staccato breathing could be heard.\n\nFinally, she asked, \"Is that what happens to us after all of this, we go our separate ways?\"\n\nJack didn't answer.\n\n\"And Santos will never know, even though you'd love to humiliate him?\"\n\nJack's breathing returned to normal as he responded, \"If you do as you're told and pay me what you owe, Santos will never find out from me what you've done.\"\n\n\"What about us...after?\"\n\nJack answered with quiet force, \"There is no us. You be a good girl and do what you're told, you can go back to your family. We'll never see each other again.\"\n\nBrittany felt a little pang of regret hearing Jack's tone of finality, but understood it. She renewed her interest in his member by nibbling at his cockhead with her moist lips.\n\nFeeling his cockhead expand even further to her treatment, she went low, teasing at one of his testicles with her fingers and tongue. Seeing his sack tighten, she smiled while asking, \"Getting back to the others, did they all like sucking your cock as much as me?\"\n\nJack's breathing became labored, again, as he asked, \"You like sucking my cock?\"\n\nShe rolled one of his balls around in her mouth, slathering it thickly with her saliva before answering, \"You have no idea; almost as much as I like you pounding it into my wet pussy.\"\n\n\"H-How about...p-pounding that tight ass...o-of yours?\"\n\n\"Mmm, now you are making me wet.\"\n\nDropping his balls, she pulled his cock back into her mouth. Gripping his shaft tightly with her lips, she continued her slow head bob while laying down another healthy amount of saliva. Backing off, she continued to stroke his shaft as she kissed and licked his cockhead, tasting his salty pre-ejaculate. She smiled seeing his cockhead swelling further while becoming a deep purplish hue. Then, she asked, \"How do I compare to the others?\"\n\nBefore he could answer, Brittany pressed her vulva against his mouth. It was dripping wet and so very warm. He slid his tongue deep into her opening as she pressed her bottom back even more firmly into his face.\n\nBrittany giggled at his lack of response, and asked, \"Pussy got your tongue?\"\n\nJack moved his mouth toward her clit, and said as he continued to lick and nibble at her vulva, \"Better than most, but not the best.\"\n\nJack felt her hands grip hard at his thighs when he sucked her clit into his mouth. Holding it firmly between his lips, he flicked at it with his tongue, making her moan softly.\n\nBreathlessly and with just a hint of sarcasm, she said, \"I'm sad I'm not the best. Are you just saying that to be mean?\"\n\nJack didn't answer as he continued to work over her clitoris. His face was well smeared with her arousal, particularly his nose as it tickled her about her opening. Like a pig wallowing in mud, Jack was in heaven, and he was putting Brittany there, as well.\n\nShe pulled away again, saying, \"My turn,\" and proceeded to slide his cock back into her mouth.\n\nThis time she nearly pulled him all the way in as she worked her fingers around his still tightening balls.\n\nJack finally answered, his voice coming in short, gasping intervals, \"No...I-I'm not being...mean. I'd put you just b-behind only a couple of...\"\n\nBrittany pushed back again, forcing her pussy into his face, while saying, \"Your turn.\"\n\nJack happily continued where he left off.\n\nAs he sucked, nibbled, and flicked his tongue all around her now dripping pussy, Jack heard Brittany say, \"I don't believe you. I think you don't want to admit I'm better than those others; however, if what you say is true, I'll prove it to you that I'm better. Let's have a contest like before. I bet I can make you come before me.\"\n\nJack stopped his nibbling for a moment, and said, amused, \"That doesn't seem fair. I can't use my hands.\"\n\n\"I won't use mine, either.\"\n\n\"It still isn't fair. You can move away from me any time I get you close. While I'm handcuff...\"\n\nBrittany pulled his cock back into her mouth, stopping Jack in mid-thought. She went back to her slow head bob for a minute before renewing her challenge with a mocking tease, \"What were you saying? Oh that's right, you're at my mercy? The big bad blackmailer is helpless against the mommy-whore, and all because the mommy-whore sucks great cock. I think you're chickening out and making excuses. You know I can get you off before I do, but you don't want to admit it.\" She wiggled her ass in front of his face, while saying, \"Come on, big boy, I'm not that short. I bet if you try real hard you can eat my pussy and get your cock sucked all at the same time.\"\n\n\"If only I had use of my hands, I'd spank that ripe ass of yours. All right, you're on, bitch. What do we play for?\"\n\n\"How about the money I owe you this week. I get to keep it if you come.\"\n\nShe didn't wait for an answer as she sank her mouth around his cock and sucked on him as if it were the spigot for the Fountain of Youth.\n\nIt was a strain for him to reach her at first, but Jack was just able to get his mouth onto her pussy with only a small stretch of his arms and neck. Then, pulling his legs up, essentially curling his body inward, he pushed Brittany a little further back and into his face. With that little trick, he was able to work his tongue and lips deftly around her clitoris with ease. While Brittany continued to suck lovingly on his cock and balls.\n\nJust as Jack fell into a nice tempo, unexpectedly, Brittany asks, \"I did some on-line checking into departmental roll-calls using Santos' username and password. It seems three officers left the department around the time of Ashante's murder. One of them is logged as retired, another was transferred to another precinct, and a third is Jack Dorn. Am I sucking Jack Dorn's cock right now?\"\n\nGoddamn internet!\n\nJack knew after telling her about Kellen and Ashante, it would come to this. Playing it cool, he said, \"You could be, and sucking it pretty well, I might add.\"\n\nBrittany wasn't expecting that for an answer. She was sure he was Jack Dorn, but had expected him to lie, or, at least, deflect away from the question. She asked again, this time with a tone of speculation, \"So, you are Jack Dorn?\"\n\nExperienced as he was with interrogation techniques, Jack heard the confusion in her voice. Playing off it, he said, \"Let's not worry about names, but if it will make you happy, then I'm Jack Dorn.\"\n\nBrittany was frustrated now. She thought she had him cornered, both sexually and emotionally, but now he seemed to have gained the upper hand again. \"Are you telling me the truth?\"\n\n\"Probably.\"\n\n\"Goddam it, why can't you be straight with me?\"\n\nPiqued with anger and frustration, Brittany didn't notice that Jack had moved his knees in front of her shoulders, denying her access to his member\u2014a true, cock blocking maneuver. \n\n\"Goddamn it, you're cheating again,\" she said, slapping and punching at his legs.\n\nJack laughed heartily at her frustration, as he continued to dig his tongue deeper into her pussy.\n\nBrittany fought through the cock block, pushing her head further between his legs so that she, at least, could attend to the upper third of his cock with her mouth.\n\nJack squeezed his thighs, pinning her head and shoulders between his legs and making it harder for her to bob her head along his cock. Slapping at his legs again, Brittany mumbled in frustration around his cock, \"ca...m on, iv me s...um woom to s...uck!\"\n\nChuckling, Jack asked, rhetorically, \"Huh? What was that? Cock got your tongue?\"\n\nBrittany continued to fight, now squeezing her shoulders between Jack's thighs, as she pulled his cock almost fully into her mouth. Grabbing his buttocks with both hands, she used her elbows as blocks against his legs. She sucked on his cock with reckless abandon, throwing her mouth down, repeatedly and forcefully, almost down to his balls, then pulling back just enough at times to run her wet tongue firmly around his slickened shaft. It wasn't long before his cockhead was the size of a very large, firm plum against her cheeks. When she tasted his salty pre-cum, she knew he was close to coming.\n\nHowever, Jack had her close as well. She could feel a tremendous wave of ecstasy building ever higher, approaching even faster. It would only be a matter of seconds before she wouldn't be able to hold back the tide.\n\nIt would be close who would come out the victor, except, Brittany had one more trick to pull.\n\nTwo can cheat at this game, asshole, she mused, as she shifted her body forward while dropping her ass down onto his chest, and denying Jack access to her pussy.\n\nShe almost laughed aloud when she heard Jack's groan of exasperation at her maneuver.\n\nSuddenly, Brittany felt Jacks hands gripping hard at her hips and pulling her back. She'd been had.\n\nShe tried fighting her way out of his grip, but Jack was too strong. Wrapping his powerful arms in front of her thighs and clamping his hands onto her ass, he pulled her pussy tightly onto his face. Within seconds of his hard sucking and flicking of her clit, Brittany experienced a shattering orgasm that made her whole body quake and shudder.\n\nScreaming, out of both ecstasy and frustration, she beat on Jack's legs with her fists at having, once again, been tricked, and continued to hit him even after her climax waned.\n\nWhat bothered her the most about the ordeal, besides Jack's cheating ways, was that she didn't learn anything new about him. After all the planning and chicanery, she still wasn't even sure about his name. It made her feel weaker and more impotent than she already was.\n\nJack was more than a little annoyed by her attitude, but when Brittany's slapping got dangerously close to his genitals, he snapped, yelling, \"Enough of this shit!\" while throwing her off the bed and onto the floor like so much dirty laundry.\n\nScrambling to her knees, Brittany turned to face him with eyes on fire and lungs ready to bellow curses, but she bit her tongue when he caught his angry expression.\n\nWith his blood boiling, Jack growled, \"Get that fucking look off that fucking, simpering face before I slap it off, you spiteful cunt!\" When she lowered her eyes, he continued, \"You want to know why you're not the best. Because of the crap you just pulled. You're lucky you didn't punch my balls, or you'd be spitting teeth.\"\n\nStaring her down, his blood cooled after a few minutes. Then with a sigh, he commented with tired frustration, \"You are getting to be way more trouble than you're worth.\"\n\nBrittany continued to stare at the floor and away from his hard gaze, saying, defensively, \"I just wanted to feel in control for a little while. Why couldn't you just go along? Why couldn't you just let me have my way, just for a little bit? Why do you always have to be such a dick?\"\n\nShaking his head in frustration, Jack unlocked the other cuff on his wrist, and laid them on the nightstand. He responded as he removed the rest of his clothes, \"You're certifiable if you think I was going to let you cuff me without having a way out.\"\n\nBrittany began to cry.\n\n\"There it is. I was waiting for that. When the spoiled bitch doesn't get her way, she starts to squirt. Does this routine actually work on Santos?\"\n\nThrough stuttering sobs, she said, \"Goddamn it, you make it sound like I'm faking this. I can't take this anymore. Do you have any idea what it's like to be used as a whore, without any regard for my feelings, wants, or needs. Even though...\" She paused for a moment, deciding if she should really tell him how she felt. Closing her eyes out of weariness and frustration, she continued, \"Even though you've made me feel more like a woman than anyone ever has, or probably will, it still rips me open knowing what you really think of me. I'm just a dirty whore to you, and always will be. I'm just a dirty someone to dump your cum into, but someone not to be trusted. I guess in the end, all I wanted was for you to trust me, and you couldn't even give me that.\" \n\nSeeing and hearing her genuinely, heartfelt confession, Jack's heart softened. Sitting on the edge of the bed, he wrapped his arms around her shoulders and pulled her close to him. She continued crying, her tears moistening his bare chest, as he said, \"Trust isn't easy for me. Being a cop's wife, you should know that. It doesn't help me to find trust, either, when that person needing my trust is Mrs. Medina.\"\n\nShe looked up at him, her eyes a milky green from tears. \"I-I couldn't do anything to you even if I wanted. How could I hurt you without it rebounding and hurting me as well or h-hurting my daughter?\"\n\nHe looked thoughtfully at her before commenting, \"That may be, Brit, but you have no idea what people are capable of. I've seen mothers sell their eleven-year-old daughters into prostitution, just for a fix. I've seen...I've even seen them beat their infants to death because they wouldn't stop crying out of hunger. After seeing that, it's hard for me to put trust in anything, let alone, anyone.\"\n\n\"That's not me. I would do whatever it takes to protect my daughter. Protect her from what I've become.\"\n\n\"What have you become?\"\n\nShe paused for a moment before answering, \"Your whore.\"\n\nNodding his head, Jack offered the handcuffs to her, saying, \"Okay, you want to try this again? I promise to do it completely your way this time.\"\n\nHaving lost their appeal, Brittany shook her head at Jack's offer, saying, \"That's all right. I would have lost, anyway. By the way, how did you get out of them?\"\n\n\"It's easy once you know the secret.\"\n\n\"What's that?\"\n\n\"Make sure you palm the key before handing over your cuffs to the girlfriend you're blackmailing.\"\n\nJack made a major slip that wasn't lost on Brittany.\n\nHer heart swelled a little as she repeated his words in her mind, He doesn't see me as his whore. I'm his girlfriend!\n\nShe didn't let on that she noticed his verbal blunder, saying instead, while hitting his arm playfully, \"You're such a sneak.\"\n\nBrushing her bangs off her face, Jack said, \"I tell you what, because I'm a nice guy I'll give you a different chance. You got my interest up earlier when you were going on about your tits. So, in the interest of good sportsmanship, if you can get me off with those luscious mounds of yours, say within five minutes, I'll let you keep half the money.\"\n\nBrittany perked up. This was actually something right in her wheelhouse. Her tits were a golden charm when it came to Santos coming, and coming too soon. In fact, in the past, she didn't like Santos fucking her tits for that very reason. He would shoot his wad scant seconds after pushing his over-excited dick between her firm, ripe melons; consequently, leaving his dick limp, and her sexually frustrated.\n\nBrittany figured she'd have the advantage. Except, this was Jack, who, so far, exhibited almost superhuman self-control when it came to bed artistry and forestalling his own pleasures. That self-control usually made Brittany's pussy drip every time she thought of Jack and his magic cock pounding into her. Now, however, it was just an endless source of annoyance. This would be a challenge.",
        "\"Okay, you're on,\" she finally agreed.\n\n\"Just a couple of conditions: no touching me with your hands, you can only use your hands indirectly, like to wrap your tits around my cock, but that's all.\"\n\n\"If I can't use my hands, can I use my mouth?\"\n\n\"Yes, just as long as your tits are always touching my cock. Hell, you can even use your eyelashes to get me off, as far as that goes.\"\n\n\"Brittany giggled, and then commented, \"Oh wow, cum shot by butterfly kisses. That would be worth the money.\"\n\n\"Second condition, both of your tits have to stay in contact with my cock. You can't just drop them to go down on me. Agreed?\"\n\nRubbing her hands in a show of mock bravado, she said, \"Agreed, but since I can't touch you with my hands, you have to get that fat cock hard for me first. It's only fair.\"\n\nAs he stroked his cock to full hardness, he reiterated, \"Remember, you only have five minutes, and your time starts...now.\"\n\nBrittany leaned forward, folding her firm tits around Jack's cock. She secured it tightly between them with an arm wrapped across her breasts. She left her other hand resting on Jack's thigh for the moment. Staring into his eyes, she dropped a spit bomb right on his cockhead. Dropping another one for good measure, she let the large pearls of spit ooze down his shaft, before slowly, yet firmly, shifting her massive tits along his shaft.\n\nLong and very thick, though he was, Jack's cock nearly disappeared within her cleavage. The view of his cock swallowed whole by her flushed, luscious mounds was almost more than he could take. He almost came when he saw that smoky look of sensual panache in her eyes as she released another spit wad onto his cock.\n\nJack already decided he'd cut Brittany a break, which is why he suggested the challenge. He wouldn't hold back as long as she did a proper job\u2014and she was doing a very proper job.\n\nThe second thoughts came hard. Thinking with your heart now, huh Jack? It's bad enough with you thinking with your dick. This is worse.\n\nHe closed his eyes to shut out the voice of reason, concentrating, instead, on Brittany's expert use of her tits.\n\nShe was near perfect, sliding her tits at an even and constant rate while applying an even and constant pressure. She never used too much saliva, where she might lose the all-important friction, only occasionally dropping a spit bomb down her cleavage whenever she felt Jack's cock getting tacky against her skin.\n\nJack loved those moments as she hung her face just above his member and took carful aim. Then seeing the large pearl of saliva slowly emerged from behind her pursed lips, momentarily hanging in mid-air, quivering, before she released it at just the right moment onto her intended target. Sometimes she would follow the spit bomb down with her mouth, pausing her mammary massage long enough to suck on his cock as it emerged from between her tits. On one such occasion, an erotic display occurred by happenstance. As she lifted her head off him, a thin strand of saliva remained, connecting her lips to his cockhead. The suspended strand quivered for a moment before breaking and snapping back against her lips. Licking her lips free of the spit, Brittany renewed her wonderful tit massage.\n\nThe visual was enough to make a grown man cry, just before coming. After that, Jack added his own subtle thrusting to match her sliding tits.\n\nSeeing Jack's arousal ramping up nicely, Brittany added sensual dialogue designed to spur him faster. \"God, your cock feels so good between my tits. I swear, looking at it sliding between me is making my cunt drip like a faucet. Come on, baby, fuck them hard. Fuck those big titties. Faster, baby, use my tits like you use my pussy. I want you to shoot a hot load all over them and across my pretty face.\"\n\nAt the same time she's giving Jack her verbal barrage, she brought both hands into play. Placing one on either breast, she crushed her tits together and against Jack's thrusting cock, and then shuffled her tits independent of each other.\n\nFeeling the inevitable, Jack commanded, gutturally, \"Catch it, bitch. Here it comes.\"\n\nShe dropped one more spit bomb at the top of her cleavage, before parking her opened mouth just above his cock. Sticking her tongue out, she rasped, \"Come on, baby. Give it to me. Fill my slutty mouth with your hot load.\"\n\nJack couldn't take his eyes off her, as repeated, hard shots of ejaculate flew up and between her parted lips. After hitting her at the back of her throat, his hard shots fell and flowed downward and out, covering her chin and tits, and his cock. As his ejaculation slackened, becoming more of an oozing, white fountain rather than an Uzi, she lowered her mouth onto his cock, sucking and stroking him gently. Semen continued to leak out the corners of her mouth and from between her soft lips, flowing down his shaft and across her stroking fingers.\n\nWhen it was over, Brittany cleaned all of the semen from him. Only when Jack laid his head back on the bed, did she go to the bathroom and clean herself off with a moist, warm washcloth.\n\nJack noted the time. It took her a little over six minutes. Oh well, he'd forget about that rule for now.\n\nWhen she got back on the bed, she asked, earnestly, \"Well? How did I do?\"\n\n\"Take it, it's all yours.\"\n\nShocked and surprised, she blurted, \"All of it? Really!\"\n\n\"After a tit-job like that, you've earned it. There is one problem, though. No matter how big your jugs are, or how well you use them on my dick, tit fucking is just like Chinese food. You're always hungry for more.\" Pulling her closer to him, he added, \"Come on, bitch, suck that cock and get me hard again. We need to fuck some more.\"\n\nBrittany shot back a sly smile before sliding his cock into her mouth.\n\nShe loved sucking on his cock when it was semi-flaccid. Due to its thickness, it retained that pussy-dripping feel by filling her mouth to overflowing even when soft, but because it wasn't as rigid, she could easily pull it all the way in without fear of choking. Moreover, with him all the way inside, it gave her the opportunity to do another act she enjoyed, playing with his heavy balls against her face as she blew him.\n\nBrittany would never tell Jack directly about her feelings concerning this, wanting to keep it a secret from him. However, as the weeks sped by, it was growing impossible for her to hide her enthusiasm whenever she went down on him. She loved blowing him, and blowing him like the first time he forced her, positioned so her ass was pointing back at him, and allowing him play with her as he wished.\n\nJack easily slid three fingers into her pussy, while commenting, \"You just love sucking my cock, don't you.\"\n\nBrittany only panted a response.\n\n\"I can tell. You're pussy's dripping with excitement. You're just a mommy-whore who loves sucking cock.\"\n\n\"Yes,\" she moaned around his cock.\n\nPlaying his words around in her head, Mommy-whore, she felt another surge of arousal deep within her, and sucked on his cock with even greater enthusiasm.\n\nFeeling his cock stiffen against her tongue and cheeks, Brittany slowly backed away, giving it room to grow.\n\n\"Suck on my balls, mommy-whore. I know how you love cooking up another batch of heavy cream for that hungry mouth of yours.\"\n\nPulling him out, she continued to stroke his slicked-up cock with a hand, while kissing and sucking on each of his balls, in turn. Alternating between his cock and his balls, she soon had him at full hardness.\n\nPulling her head up by her hair, he said to her, \"Well done, mommy-whore. Now, I wonder what we should do with that hard cock of mine? Tell you what, since you did such a great job getting me hard, I'll let you decide. Tits again? Mouth? That dripping cunt of yours? What shall it be?\"\n\nBrittany was on fire and already close to climax. Breathlessly, she asked, \"Did you remember to bring rubbers and lube?\"\n\n\"They're in the bag on the chair.\"\n\nThe whole time she greased her ass, working one, two, and then four of her fingers in, Brittany stared at Jack's cock. She felt her pussy dripping down her thighs with anticipation, and wondered with amusement how it was able to fit the last time without splitting her open.\n\nSlipping the rubber on him, then greasing up Jack's sheathed cock with a thick coating of lube, Brittany turned away from him, waiting on all fours for him to enter her.\"\n\nTouching her ankle, Jack commanded, \"I want you on top, mommy-whore, facing me. That way I can play with your pussy better.\"\n\nBrittany assumed a position a baseball catcher might, squatting directly over Jack's cock as he held it steady for her. Lowering herself down slowly, there was some pain as she inched him inside. As she slid closer to the base of his cock, she had to halt her progress occasionally so that her sphincter could adjust to his thickening size.\n\nJack didn't rush her or push into her, knowing she was at the most delicate part of entry. Staying as still as possible, he occasionally rubbed her thigh in comfort, allowing gravity to do most of the work.\n\nWhen her bottom finally made contact with his pelvis, she closed her eyes to the full blissful feelings. She uttered a garbled, \"Oh fuck, yes,\" sounding more like a long, soft sigh, rather than words as the bliss intensified within her.\n\nKeeping her feet flat on the bed for leverage, Brittany leaned back and propped herself up against Jack's bent legs, as if sitting in a chair, and also placed her elbows on his knees for added support and control.\n\nSeeing a look of pure bliss mixed with animalistic lust on her face, Jack chuckled while saying, \"Mommy-whore loves my cock deep in her ass, doesn't she?\"\n\nShe didn't look at him, keeping her eyes closed as she panted, again, \"Oh fuck, yes.\"\n\n\"All right, mommy-whore, show me how much you love my cock. Let me see it sliding in and out of your greased asshole.\"\n\nEver so slowly, almost as a seductive tease, she lifted her bottom off Jack's body until his cockhead was right at her rim, before slowly sitting down. She continued with her slow, exaggerated rhythm, lifting then sitting, sliding his cock fully within her, as Jack teased her labia with a finger.\n\nThroughout her sensual play, Jack continued to shower her with lustful comments, using them both as praise as well as a mental ratchet spurring her increasing arousal. \"I love it when all of you horny 'hausfraus' start to enjoy it up the ass. Spread your legs wider so I can really see my cock sliding up and inside that tight hole. Oh, baby, that's it. That's so nice. You should see what I'm seeing. Would mommy-whore like to see my cock sliding up her ass?\"\n\nBrittany only moaned a loud reply.\n\nReaching over for his cell phone that he laid on the nightstand, Jack centered her groin in the screen. Moments later, Brittany noticed a flash of light through her closed eyelids and heard the digital sound of a shutter click.\n\n\"Take a look,\" he said to her, as he held the camera phone in front of her face.\n\nBrittany gasped with delight when she opened her eyes to look at the image, and almost came seeing how much Jack's thick cock spread her ass cheeks.\n\nClosing her eyes again, Brittany slid her ass along Jack's cock at a faster rate.\n\nThere was another flash and click.\n\n\"Look,\" Jack commanded.\n\nThis time, he had taken a shot of her face. With her nostrils flared and her lips parted into a wide, open-mouthed grin, it was an image of pure, slutty ecstasy stamped across her face.\n\nClosing her eyes again, she further increased the rate of her fucking.\n\nSeeing and feeling her reaction to the pictures, Jack reiterated, laughingly, \"Mommy-whore just loves it in the ass.\"\n\n\"God, yes!\" she panted.\n\n\"Would mommy-whore like to watch it as a movie?\"\n\nBrittany didn't answer right away, as it now dawned on her what she was agreeing to.\n\nAlthough she thought, prudently, What the fuck are you doing, you stupid twat? Giving him more images to blackmail you with, she heard herself say, excitedly, \"Do it. God, how I want to watch you fucking me deep in my ass!\"\n\nJack set the camera phone to record a short movie. Giving her directions, he said, \"Come on mommy-whore, Brittany Medina, let's see my cock sliding all the way in and out. That's it, push that pussy forward and clamp those tight buns around my cock. Let me hear you say, 'I love your fucking fat cock in my ass.'\"\n\nBrittany went back to her exaggerated, slow slide while repeating the words.\n\nHer head spun as she watched the short movie, hearing him calling her 'mommy-whore,' and her actual name as her ass repeatedly gobbled up Jack's cock whole. The images were so sharp and clear, she could even see her arousal glistening and trickling from her pussy, and bathing Jack's shaft and balls.\n\nWhen Jack hit replay for her, she went back to rapidly sliding along his cock, almost bouncing off his pelvis each time she hit bottom, while exclaiming, \"Fuck yes! Fuck yes! I'm such a dirty mommy-whore, and I love fat cock in my ass. Fuck me! Fuck me hard!\"\n\n\"There you go, emerald-eyes,\" Jack said, \"Bounce along that cock, and get those big tits of yours bouncing as well.\"\n\nChucking any modesty she might still possess, she yelled, \"Mommy-whore! Call me mommy-whore!\"\n\n\"You want to come, mommy-whore?\"\n\nShe had lost all sense of herself, who or what she was, and no longer cared, and screamed, \"Fuck yes! Mommy-whore wants to come! Mommy slut whore needs to come so bad! Make mommy slut whore come, please!\"\n\n\"Then fuck my cock like a good mommy-whore.\"\n\nShe pounded down onto him with fury, as an unquenchable feeling of raw lust ignited deep within her soul. All she could hear were the sharp, slapping sounds of her ass hitting his arousal-drenched pubis, as they reverberated off the walls. \n\nBrittany was close, so very close. Bringing a hand around in order to touch herself, and touch off her climax, she heard Jack growl, \"Keep your hands on my knees, bitch. That pussy is only for me to play with.\"\n\nJack barely placed his thumb on her clit.\n\nBrittany's arousal screamed upward at breakneck speed, driven by her efforts as she continually raked her clit across his steady thumb, while bouncing along his cock.\n\nBrittany found release when Jack added his own thrusting, pushing his cock hard up into her ass each time she dropped herself onto him. \"Oh my god,\" she blurted, as she felt the waves of climax quickly building, \"Jesus...fuck...fuck me...fuck me...fuck me!\"\n\nHer ejaculate, warm and clear, sprayed forcefully across Jack's stomach. Jack increased his pumping while applying more pressure to her clit. Brittany went still, letting Jack pound into her on his own. Wave upon wave crashed into her, sweeping her away and into semi-unconsciousness.\n\nAs the last wave of her climax ebbed, Brittany came to rest on Jack's chest, gasping for air.\n\n********\n\nThey lay like that for a while, peaceful and quiet, until her breathing returned to normal and the dense sexual fog she had fallen into began to lift. Now that her mind was clearing, she thought about the pictures and video Jack had just taken of her, and asked with slight anxiety, \"What are you going to do with that video?\"\n\nHe didn't answer. Instead, he held up his camera phone so they both could watch as he played the video again. During one of her many slut screams, Jack commented with a grin, \"Maybe I'll email it my friends as Christmas greetings next year.\"\n\n\"Oh, don't even tease me about that.\"\n\nWhen the movie ended, Jack pointed at the screen, and said, \"Push that icon.\"\n\n\"What will that do?\"\n\n\"Go ahead and find out.\"\n\nWhen she did, a new message appeared, wanting confirmation from the operator if the images should be deleted.\n\nShe hesitated a moment before pushing, 'Yes.'\n\nLooking up into his face, Jack was looking back at her with a warm smile that always made her feel twelve again and happy. \"Had to think about it first, didn't you?\"\n\nBlushing, she turned away from his stare. He could always read her mind. She was about to make a comment when Jack changed the subject, \"I've been meaning to ask. How's your sex life with Santos?\"\n\nJack rarely asked her about Santos any more. So now, coming out of the blue, his question put her on edge.\n\n\"There isn't one. Hasn't been for a while. At first, because I was fucking you and felt cheap and dirty, and I didn't want to taint our bedroom. Now I can't fuck him because of what you told me,\" she laughed sarcastically before finishing her thought, \"I can't fuck him now because I don't want him tainting me. I suppose that's what you wanted to have happen all along.\"\n\n\"At first, maybe, but not now. I don't want you neglecting him. I don't want him suspecting anything's changed with your marriage. So, go back to fucking him.\"\n\n\"I don't know if I can anymore.\"\n\n\"You have to. In fact, I want you to get friskier with him. Does he like to go down on you?\"\n\nBrittany looked at him with curiosity, wondering where he was going with these questions. \"Not really, he's a bit of a macho fuck in that regard. I mean he'll do it if I ask, but only when I ask, and I usually have to ask him several times. Plus, he's not that good at it.\"\n\n\"Not like me.\"\n\nBrittany blushed again.\n\nSeeing her look of girlish embarrassment made Jack smile, as he said, \"Some guys need encouragement. I want you to ask him to go down on you, and ask him often. Play that little game you just did with me. Cuff him and rub that sweet pussy all in his face. Most of all, let him know he's hitting all the right spots. That he's really making you feel good as he eats you out. Really moan and scream as he's doing it.\"\n\n\"I don't understand.\"\n\n\"It will make him feel more secure in the marriage, and pump up his ego thinking he can turn you into jelly with just his tongue.\"\n\n\"I still don't underst...\"\n\nJack cut her off, annoyed, \"Can you just do it, for fuck's sake?\"\n\nSeeing the stare and hearing the harshness in his voice, Brittany knew any further questions or comments would be unwise. Laying her head back on his chest, she answered, reassuringly, \"Okay, I'll keep fucking him.\"\n\n\"And?\"\n\n\"And I'll beg him to go down on me.\"\n\n\"As much as you can. It's important you make him feel important, and tell him how good it feels having him eat you...\"\n\nBrittany rolled her eyes while saying, \"Okay, okay, I get it. It sounds stupid, but okay.\"\n\n\"Good girl,\" he said, with a satisfied tenor, before covering his eyes with an arm as if he were going to sleep.\n\nAs they fell quiet again, Jack thought about how situations and events in one's life can dramatically change\u2014almost like the weather in their unpredictability.\n\nRevenge is such a tricky thing, almost as tricky as blackmail, and the thought of it consumed much of Jack's time when he was away from Brittany. Moreover, it was revenge not just for himself, but for Kellen and Ashante, as well. Jack felt an obligation to get them some measure of retribution, even if they could no longer appreciate the gesture.\n\nRevenge also had to be personal, and it had to hurt. It wouldn't be enough for Jack to fuck over Santos behind the scenes, as it were. It was imperative that Santos know it's Jack twisting the knife, and not some DA bringing him up on some chickenshit corruption charge. That is, if the DA would bring charges against Santos at all. Jack had his doubts, given the level of city corruption and Santos' political connections.\n\nInitially, Jack considered his only avenue for revenge was to fuck Brittany for a while, make a little money, and then lay the boom on Santos that his wife was banging other guys.\n\nJack knew enough about Santos to know it would severely hurt that macho piece-of-shit. Hurt him like cold, sharp steel slipped deep into his guts, knowing a dick-less punk like Chris was coming in his wife's snatch. Worse, it would just about kill him if the rest of the precinct knew about his wife as well. Pride was a dreadful thing when bruised, unpredictably dangerous in the rage it can foment, and what Jack had originally planned for Santos would have crushed his pride like a grape.",
        "Of course, it would have sucked for Brittany, being ratted out even after keeping up her end of the bargain, but that's the price one pays for marrying a piece-of-shit. Jack just saw her as expendable\u2014collateral damage\u2014a poor unfortunate caught in the crossfire in his quest for revenge.\n\nHowever, that was then. Now, as he started to know Brittany better, Jack was reconsidering his old plan in favor of a new one.\n\nWhen certain information became known to Jack, information that he had neglected to see the first time he looked into Ashante's murder, he saw a slightly different avenue for revenge.\n\nThe new plan was complicated. There was a lot he needed to do in order for it to work, and part of it depended on Brittany doing what she was told, which was no guarantee given her nature. Yet, for the first time since he started blackmailing Brittany, Jack had figured a way he could get even with Santos, make it personal and make it hurt, and take everything he had in the process.\n\nLying next to Jack, Brittany's thoughts ran in a simpler direction. Thoughts about what Jack had said about being good at eating her pussy. Then she thought about what he felt like between her breasts. Touching her chest where Jack's cock had slid. Her nipples hardened as a tingling sensation ran through her body. Her thoughts shifted to the deleted video, what it looked and sounded like as she bounced along his member. A warm moisture began seeping anew between her thighs.\n\nAs the different events of the day played though her mind, she ran a teasing finger along Jack's flaccid cock, and it stiffened from her touch. He still wants her, and she wants him to take her again...\n\nBarely containing her excitement, she begins to say, \"I know it's late, but I'm not ready to leave...\"\n\nBefore Brittany could finish her statement, Jack expertly cuffed her wrists to the top rail of the headboard. Flipping her onto her stomach, he spanked her ass hard, while saying, \"Get on your knees, mommy-whore. Now, I'll show you how this should be done.\""
    ],
    "authorname": "dresbach",
    "tags": [
        "blackmail",
        "light bondage",
        "drama"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/caught-in-the-crossfire-ch-05"
}