{
    "title": "Making Waves",
    "pages": [
        "He awoke in a daze not exactly certain where he was or . . . someone was gently nudging him back to consciousness . . . through hazy eyes a clock on a wall in front of him read eleven, but he had no idea whether it was morning or evening. With greater awareness came answers in the form of something taped to his arm: an IV. That suggested a hospital. The person touching him appeared to be a nurse, quite angelic, with big boobs, not huge, just . . . had he died and gone to heaven? Not likely. \n\n\"Admiral,\" she whispered. \"Time to wake up.\" \n\nHe looked up. She was beautiful. \n\n\"Admiral.\" \n\nHe tried to speak, but his throat was dry. She could see that and spooned a small cube of ice into his mouth. \"Where . . .\" was all he could manage, but he wasn't even certain he'd gotten it out. \n\n\"You're in a naval hospital. You've just had a double bypass. I'm your nurse, Ensign Rebecca Layne. Do you have any recollection?\" \n\nIt was easier to shake his head, but then he wasn't really trying to remember anything. He was merely too dazzled by . . . Rebecca. \n\nBut with her help, over the next couple of hours as he came out of anesthesia, between what she could tell him and what he gradually remembered, he had the full story. He was Rear Admiral George Sadler\u2014that much he already knew\u2014one of the youngest men of his rank in the United States Navy. He had been on an inspection of the nearly completed aircraft carrier U.S.S. Gerald R. Ford when he had a heart attack, which apparently required a double bypass; not a good thing to happen to an up and coming admiral. He'd been airlifted to the Naval Medical Center in Bethesda, Maryland, and here he was. \n\nSadler became very comfortable with Ensign Layne\u2014she never left his side\u2014and so, was quite disappointed sometime later when she told him that he was being transferred from recovery to intensive care. He wanted her to accompany him. \n\n\"Admiral, it would be my privilege to continue to care for you,\" Rebecca said sincerely. \"But I'm assigned to recovery. Besides, I'll be retiring from the navy before you'll be discharged. However, I've seen to it that my best friend, Juliette James, will take as good care of you as I have.\" \n\n\"Will you at least visit?\" he asked, sounding like a lovesick schoolboy, but probably not realizing what he was really asking. \n\nHer smile alone made him feel better. \"Of course.\" \n\n\"So, why are you getting out?\" Sadler asked. \"Navy not taking care of you?\" \n\n\"No, sir. Going back to school. Going to use my G.I. Bill to become a nurse practitioner.\" \n\nThe admiral nodded. \"Good for you. Anything I can do, let me know.\" \n\nSince achieving any rank of importance, Sadler had never been hospitalized, so he didn't know if having a nurse assigned to only him, and then an ensign, not just a corpsman, who was basically at his beck and call was standard or because of his position. While he didn't want special treatment, he wouldn't have turned away Rebecca, and as much as he had wanted her to remain with him, Juliette James turned out to be a worthy replacement. And if that wasn't enough, when Juliette's 12-hour shift was over, Rebecca visited, and the two introduced their third team member, who had the other shift, Natalie Thornton, and she preferred to go by the boyish name of \"Nate.\" And yes, she was as gorgeous as her compadres. What had he done to deserve this? \n\nIn his mid-forties and single, Admiral Sadler liked women as much as any sailor, but because of his position, he couldn't be obvious about it; particularly since he was in that minority of officers who believed that women should be as equal a part of every branch of the military as men. But there was something about this surgery, which provided him with a sense of his own mortality; that uncharacteristically had his eyes a little more sharply focused on the fairer sex. Or was he just still under the influence of too much medication that clouded his thinking? \n\n\"Everything okay, admiral?\" Nate asked after Rebecca and Juliette departed. \n\n\"Nate\u2014I'm sorry\u2014ensign, I'm just wondering how long it'll be before all this medication has completely worn off. I don't believe I'm thinking very clearly\u2014as calling you by your nickname has just proven.\" \n\n\"Well, sir, everyone reacts to anesthesia and pain medication a little differently. You should be over the worst of it. But it will continue to be gradual.\" She offered a smile as warm as Rebecca's. \"And as to what you call me, it can be anything you want. We like to be casual around here, to the extent we can.\" \n\n\"I would imagine there would be some officers who might not like that kind of informality.\" \n\n\"That's what I meant by 'to the extent we can.'\" \n\nSadler nodded his understanding. \"Then you can call me George.\" \n\nWith a smirk, Nate said, \"Thank you, but I couldn't. If my C.O. overheard I would be in big trouble.\" \n\n\"I'm sure I outrank your C.O.\" \n\n\"Thank you, admiral, but I only have a short time before I stand down. I don't want to make waves.\" \n\n\"You too? Ensign Layne is getting out also.\" \n\n\"We all are. Me, Rebecca and Juliette. We're going to become nurse practitioners. But don't worry, Juliette and I will be with you until you're discharged.\" \n\n\"Well, that's good news. Why not stay in the navy and do it?\" \n\n\"It would take too long, not to mention having to commit to more years of service. If we get out, we can use our G.I. Bill and get it sooner.\" \n\n\"I'm sorry that the three of you are leaving, but I understand. As I told Ensign Layne, if there's anything I can do, just let me know.\" \n\n* * * \n\nHe felt the soft hand gently grab his penis. It was divine. And, it had been some time since anyone had done that. He expected an erection to occur, was in fact looking forward to it. But it never did happen. He willed it to grow, but as if it had a mind of its own, it did not. Out of frustration, George Sadler opened his eyes. Rebecca, Juliette and Nate were standing around his bed, more specifically, near his crotch. One of them, he couldn't see which, was holding him. He realized he was dreaming. But why no hard on? \n\n\"He's awake,\" Rebecca noted. \n\nSomeone immediately dropped his dick. \n\n\"I'm sorry, sir,\" Rebecca offered. We were trying to give you a sponge bath without waking you.\" \n\nHe asked, almost comically. \"You hold a man's penis in your hand and expect him to stay asleep? Does it work?\" \n\nShe shrugged helplessly. \"Obviously, not always.\" \n\n\"Sir, sometimes it avoids embarrassment for the patient,\" Juliette explained. \n\n\"When it works,\" Sadler couldn't help but remark. \n\n\"Yes, sir,\" Ensign James replied, obviously now the one embarrassed. \n\n\"And it takes three of you?\" \n\n\"No, sir,\" Rebecca and Nate answered in chorus, joining in the embarrassment. \n\n\"Admiral, we\u2014\" \n\n\"It's okay, ensign. I'm not sure I want to know.\" \n\n\"No, sir, I don't think you do.\" \n\n\"Well, I don't want to stop you from the job in hand,\" he quipped. \n\nAnd they all had a good laugh about it. \n\n* * * \n\nIt was amazingly easy to become accustomed to these gorgeous women frequently touching him, sponge bathing him, checking his incision. And that began an interesting chain of events, starting with covert informality; except they still called him by his rank. Sadler found himself unusually attracted to all three women, not just because they were all beautiful\u2014one no more than the other\u2014but also because they were just nice people. He realized that was part of their job. But he was also a good judge of character, and these ladies were the real deal. Despite the age difference, he felt he could have a meaningful relationship with either of them. \n\n\"So, admiral,\" Juliette said the next evening when they were alone, and she was looking at his chart. \"Says here you're single.\" \n\n\"I would have thought that was obvious since no one has come to visit.\" \n\n\"No family either?\" \n\n\"Mom and dad passed a long time ago,\" he said with no emotion. \n\n\"I'm sorry. But how is a good-looking guy like you still single?\" She phrased it lightly, but really wanted to know. \n\n\"Just too focused on my career, I guess.\" \n\n\"That's sad.\" \n\nAll Sadler could do was shrug. \n\n* * * \n\n\"So, now that you're out of the navy, why are you hanging around an old fart like me?\" \n\nRebecca chuckled and answered in kind. \"'Cause you're a handsome old fart. Besides, you're not really old enough to be medically classified as an old fart,\" she said with a chuckle. \n\nSadler laughed. \"Thanks for that. But you didn't answer the question.\" \n\n\"Sir, yes, sir,\" Rebecca mocked. \"The fact is, we care for a lot of officers. And they all think they can simply command us because they outrank us, regardless of medical protocol. But you haven't done that. You've been an ideal patient; not to mention that you're\u2014\" \n\n\"A handsome old fart.\" \n\n\"I was going to say a really nice guy. But the fact that you are so good-looking doesn't hurt.\" \n\n\"It's easy to be a good patient when I have three very competent and beautiful nurses.\" \n\nThey exchanged a look that went well beyond a regular nurse/patient relationship. \n\n* * * \n\nAdmiral Kenneth Walker, M.D. closed Admiral George Sadler's chart and looked up with what Sadler took to be a grim expression. \n\n\"Don't sugarcoat it, Ken. Give it to me straight.\" The two admirals had been friends for years, having served on a couple of ships together in their younger days, even though Walker was a few years older. The senior admiral was now stationed at the Naval Medical Center, and when he heard his friend was a patient, he had pulled rank and taken over the younger man's case. \n\n\"The fact is, George, you're recovering nicely. Right on schedule. We'll be moving you to a regular room.\" \n\n\"And the bad news?\" \n\nAnother grimace. \"I could actually discharge you in a couple of days, but since you have no one to take care of you, I won't be able to. You're going to need someone almost round the clock until you're fully recovered.\" \n\n\"Can't we hire private duty nurses?\" \n\n\"None that I would be comfortable with.\" \n\n* * * \n\n\"For someone who is getting out of ICU, you don't look very happy,\" Nate observed as she and Juliette wheeled Sadler down the hall from intensive care to his private room. \n\n\"Well, of course I'm glad to be out of there, particularly since you and Ensign James will still be on my case.\" \n\n\"But?\" \n\n\"Apparently, that's as far as I will be going,\" Sadler explained with little enthusiasm. \n\nRebecca was waiting in his new room when the trio arrived. \"What's going on?\" She wanted to know, sensing something amiss. \n\nThe admiral conveyed what he had been told by his doctor friend. \"So, I guess I'll need some personal items from home.\" He thought for a moment, and then hesitantly asked, \"Rebecca, since you now have a little time on your hands, would consider doing me a favor by going to my condo and picking up some things for me?\" \n\n\"Of course, admiral. I'd be happy to.\" \n\n* * * \n\nMuch to Nate's disappointment, Juliette accompanied Rebecca to the admiral's condo because the latter was uncomfortable going alone, not to mention possibly needing assistance with all Admiral Sadler wanted. They were all eager to see how an admiral lived, and more specifically, this admiral, whom they had all become fond of; hence, Nate's frustration. \n\nThe residence was located down in Fort Belvoir, Virginia, near the actual Army post. It seemed odd that a naval officer lived close to an Army installation, but it was also convenient to the Pentagon, which was where he was stationed. \n\nThe admiral knew exactly where everything was in his home, and so, it took the two women very little time to collect the items he had requested. It also gave them a few extra minutes to \"tour\" (read snoop) the condo. It was huge, and they were amazed that a single man, even one of his stature, needed a place so large. \n\nRebecca was quiet on the drive back to the medical center. Juliette picked up on it and questioned her. \n\n\"Just thinking about that incredible condo,\" she responded pensively. \n\n\"Thinking how?\" \n\n\"Nothing in particular, but I can't get over the size. I wonder how much of it he actually uses.\" \n\n\"I know what you mean,\" Juliette agreed. \"He's got that huge master bedroom on the top floor. I could spend a week up there!\" \n\n\"The three bedrooms on the second floor are nothing to sneeze at,\" Rebecca pointed out. \n\n\"And then there's that gourmet kitchen,\" Juliette added. \"It looked hardly used.\" \n\n\"Makes you wonder.\" But Rebecca did not elaborate. \n\n* * * \n\nUpon their return to the center, they found Nate waiting outside in the hallway. \n\n\"Everything okay?\" Juliette asked with some concern. \n\n\"Oh, sure. Admiral Walker is 'visiting,'\" Ensign Thornton reported. \"That usually means guy talk.\" \n\n\"Come on, Ken, I can take care of myself,\" they heard Sadler say in a raised voice. \n\n\"Calm down, George,\" Walker replied. \"This is medical protocol. I can't discharge you without someone to care for you. I've told you this.\" \n\n\"Fuck protocol,\" Sadler argued back. \"Find me some private duty nurses.\" \n\n\"We're looking. Just having difficulty finding someone suitable.\" \n\n\"How difficult can it be to find someone competent?\" \n\n\"It isn't just a question of competency,\" Walker explained. \"You're a navy rear admiral responsible for highly sensitive naval ships. There are issues beyond medical to consider.\" \n\nThe three nurses looked at each other. Juliette and Nate felt awkward, but Rebecca said, \"Come along girls. We're on.\" \n\nThe other two looked at her like she was crazy, but they still followed her into the room. \n\n\"Uh, excuse me, sirs,\" Rebecca said. \"But your voices are carrying into the hallway.\" \n\n\"Thank you, ensign,\" Walker said, then caught himself. \"You don't work here anymore.\" \n\n\"Uh, I sent her to my condo to pick up some things,\" Sadler explained. \"Since it doesn't appear I'll be returning there any time soon,\" he added tersely. \n\n\"Actually, gentlemen,\" Rebecca went on, not fearing reprimand since these men were no longer her superiors, \"not to be eavesdropping, but I think I may have a solution to this dilemma.\" \n\nAdmiral Walker turned to face her, a look of annoyance on his face. He was about to speak, but was interrupted. \n\n\"What is it, Rebecca?\" Sadler asked. \n\nNow suddenly feeling nervous, having not really thought all of this through, Rebecca plowed on. \"Thank you, sir. First, please forgive me\u2014us. We were so awestruck by your home that we couldn't help ourselves looking around.\" \n\n\"That's rather impertinent,\" Walker remarked. \n\n\"Go on, Rebecca,\" Sadler said, ignoring his friend. \n\n\"Well, sir, we couldn't help notice that most of your place appears unused; quite large for a single person.\" \n\n\"And your point is?\" an impatient Walker asked. \n\n\"Don't pay any attention to him,\" Sadler told her. \"Friend of mine was transferred to Pearl and was looking to unload the condo in a hurry. Yeah, it's way bigger than I need, but the price was right and it was available right away, and I was told, it fit with my position, whatever the hell that means. So, how are your obvious observations a solution?\" \n\n\"As Admiral Walker kindly pointed out, and as you know, I no longer work here. As soon as you are released, Juliette and Nate will sign their separation papers.\" \n\n\"Yes, and you're all going back to nursing school. I know.\" \n\n\"And at that point, we'll be in between residences. We would be willing to private duty nurse you at no charge in exchange for a temporary place to live. We would be able to give you around the clock care.\" \n\nSadler didn't get to where he was by not being smart. \"When can you move in?\" \n\n\"We can be waiting for you when you're released.\" \n\n\"That meets with your approval, Ken?\" \n\nAdmiral Walker finally had to break down and chuckle. \"Yes, that will work just fine.\" \n\nThe girls thought they heard the doctor whisper, \"Lucky bastard,\" to his patient before departing. \n\n* * * \n\nNeedless to say, George Sadler was ready to leave the next day, but Admiral Walker kept him a couple more days. Sadler told Rebecca to keep the key so that she and Juliette and Nate could begin moving in. By the time they drove him home, they were all settled in. \n\nThey ushered him up to his top floor master bedroom loft where they advised him he would mostly remain for a few days. They wanted him to gradually start walking up and down the stairs. \n\nThe admiral did not argue. He was so smitten by these three beautiful ladies that he complied, particularly since he knew it was for his own good. Just finally being home was enough to put up with a few inconveniences. He was also so thrilled to see them in regular clothes rather than scrubs, and he felt as though he was seeing them for the first time because they dressed to show off their very shapely bodies. \n\n\"Are you okay, admiral,\" Rebecca asked, seeing the blank look on his face, bending over to look into his eyes after they had him settled in his bed. \n\nHe was simply mesmerized watching her flit around his room, and now he was staring down her low-cut top at her spectacular breasts. \"Nothing. I'm fine,\" he said quickly, quietly scolding himself for getting caught. \n\nShe saw where his eyes were aimed, or where she thought they were, and was secretly thrilled that he was noticing her. Not to embarrass him by calling attention to it, she glanced down at herself and asked, \"Did I spill something?\" \n\n\"Uh, no, I, uh, I, uh, was just thinking, wondering actually, if I needed to stay in bed?\" \n\n\"We're going to gradually work on the stairs. Soon you'll be able to walk down and spend the day. Eventually, you'll be able to go up and down as you please.\" \n\nSadler smiled at being misunderstood. \"No, I know that. I meant, can I sit in the chair?\" \n\nShe turned and glanced at the overstuffed chair in the corner. \"I don't see why not, but not for too long to start.\" \n\nWith a happy grin, he said, \"Thanks. I've been in bed for a few days now and I'm kind of tired of it.\" \n\n\"I can understand that.\" \n\nAfter he was settled in the chair with another enticing look down her shirt, he asked, \"I need to ask a rather embarrassing question.\" \n\n\"Just ask.\" \n\n\"How long will it be before I can, uh, have, uh\u2014\" \n\n\"Sex?\" \n\nThe admiral looked up sharply. \n\n\"I'm sorry,\" Rebecca said, thinking she had misjudged. \"Is that not what you were going to ask?\" \n\n\"Actually, it was,\" he confirmed, feeling his face redden. \"How did you know?\" \n\n\"It's one of the most commonly asked questions, especially from men.\" She took a chance on the next question. \"I didn't think you had a significant other.\" \n\nEyes widening, Sadler realized he might have backed himself into a corner. \n\nSeeing his deer-in-the-headlights expression, Rebecca quickly apologized. \"I'm sorry. That's none of my business.\" \n\nSmirking, he said, \"I kind of walked into that one, didn't I?\" \n\n\"You don't have to explain. And to answer your question, once you can go up and down the stairs with no problems, you can pretty much do anything within reason.\" Then to lighten the mood, she added, \"Nothing kinky, of course.\" \n\nThey both laughed. \n\n* * * \n\nThey awkwardly left it at that, but downstairs in the kitchen, Rebecca told Juliette and Nate about the exchange. \n\n\"Admiral Walker told me that Admiral Sadler got to where he is by working long and hard,\" Juliette explained. \"It's also probably why he ended up needing a double bypass. My point is, even workaholics get horny.\" \n\n\"So, what do we do about it?\" Nate asked. \n\n\"Nothing right now,\" Rebecca pointed out. \"It's too soon. All we can do is monitor the situation.\" \n\n* * * \n\nSadler chose his words more carefully over the next few days, but it didn't stop him from discreetly watching his \"nurses\" every time they came to his room. Sometimes they made his heart beat a little faster, and he wondered if that was good or bad for his health. Of course, he dared not ask. In any event, whatever else it was, it did wonders for his mind. ",
        "It also forced him to further realize some things about his life: like here he was, 45 years old and he had never had a serious relationship with a woman. In fact, upon reflection, most of the women he had dated had been one night stands, set-ups by friends, sex with some, but most looking to be Mrs. Admiral George Sadler. There were one or two who could have been, but none who wanted a workaholic for a husband. So, over the last few years, he'd had little interest in women other than a couple who, like he, only wanted gratuitous sex. \n\nThis heart attack was making him re-think this philosophy. So, the question was, what was it about these three nurses? Was he really attracted to them? Or was it just because theirs were the first faces he saw when he came to? \n\n* * * \n\nHaving dreamt\u2014again\u2014of his three lovely caretakers, Sadler actually awoke with an erection, much to his great satisfaction. Feeling bold and alive again, he arose from bed, slipped his robe on over his boxers and bare chest, and carefully and slowly walked down the stairs. Rebecca was in the kitchen\u2014all he could see was the back of her red hair and a portion of her t-shirt. Fortunately, Juliette was a blonde and Nate a brunette, making it easy to identify them at a glance. Realizing that what he had done would probably not go over well, and that it was too late to turn back, he cheerfully said, \"I'll have two eggs over easy, bacon and coffee!\" \n\nRebecca swung around sharply, but it was a toss-up who was more surprised: her because he had come downstairs or him seeing her braless in a midriff t-shirt, her hard nipples threatening to rip right through the thin material, her lower body adorned only in bikini panties, themselves somewhat see-through. She swung her head around searching for something to cover with, but all she could do was step closer to the counter to conceal all below her belly button. She quickly reasoned that something like this was bound to happen, and would likely occur again so there was no point in being prudish with him, particularly since that was not part of her nature. To compensate, Rebecca responded in kind, \"In your dreams.\" \n\nBut he couldn't take his eyes off of her magnificent tits long enough to retort. \n\nKnowing full well where his attention was, Rebecca took advantage of it and walked around the counter. \"What brings you downstairs, you bad boy?\" She asked in her most sultry voice. \n\n\"I'm feeling good. And seeing you only makes me feel better,\" he ventured. \n\n\"My, my, aren't we brazen this morning.\" The bulge in his pajamas was pretty obvious\u2014and impressive. Forgetting herself momentarily, Rebecca reached out and cupped the protrusion in her palm. \n\nThe women had been \"handling\" him from the beginning and it had quickly become clinical. But this was not one of those moments. This was divine, and it wasn't even a serious hand-job. \n\n\"Well, someone's got some explaining to do.\" \n\nRebecca and Sadler turned sharply; deers in the headlights didn't begin to describe their shock. \n\nJuliette was both amused and concerned at the scene: Rebecca with her hand in the admiral's pants, him with the most contented look on his face, not to mention the fact that he was down here in the first place or the manner of dress in which she found her friend, which was how the three girls comfortably hung out in their previous apartment and here so far. Obviously, that would have to change. \n\nJuliette had been in her room and thought she'd heard someone on the stairs. Knowing that Nate was gone and Rebecca downstairs, she quickly threw on a robe and headed down. \n\n\"I woke up feeling good and well-rested,\" Sadler explained, but of course, not why. \"I felt I was ready to attempt the stairs.\" \n\n\"How do you feel right now?\" Rebecca wanted to know. \n\n\"Fine. Although, admittedly, it was a little tiring.\" \n\n\"Well, go in the living room and sit. We'll bring you breakfast. But for the next couple of days don't go up or down the stairs without one of us with you. Your sternum is not completely healed, and a bad fall would reopen your incision.\" \n\n\"Understood.\" He ambled off to follow orders. \n\nRebecca was actually not too concerned about the admiral walking down the stairs; it was about time he start. Of course, he should not have done it alone, but he made it safely. And he was an admiral, and few people told an admiral what to do except an admiral higher up. This one had actually been quite complicit. \n\nWhat was of more . . . interest . . . to Juliette was: \"So, how was it?\" she asked Rebecca when they were alone in the kitchen. She was, of course, referring to Sadler's cock hard. They'd seen it enough times flaccid. \n\nThe other's eyes widened. A lusty smile appeared on her face. \"Magnificent,\" was all she had to say. \n\nJuliette grinned excitedly. \"I'm going upstairs to shower and dress,\" Juliette said. \"I guess we'll have to start dressing more appropriately around here.\" \n\n\"Yes, we will.\" \n\n\"You behave yourself. Here.\" She took off her robe and handed it to Rebecca, then dashed up the stairs without Sadler seeing her. \n\nAfter Juliette was gone, Rebecca poured the admiral and herself a cup of decaffeinated coffee and brought it to him in the living area. He was sitting on a love seat. After handing him his cup, she asked, \"May I sit?\" \n\n\"Of course.\" He took a sip, and then said, \"Look, I'm sorry. I wasn't thinking. I was feeling good and I just acted on it.\" \n\n\"It's okay, sir. We really can't complain. You've actually been a fairly ideal patient. And you're obviously ready to move around a bit more.\" \n\n\"And about before,\" he said nervously. \"I didn't expect to see you with . . . quite so little on.\" He was embarrassed. \"I'm afraid I reacted improperly.\" He emphasized that statement by glancing down at his groin. \n\n\"And by the looks of it, you haven't gotten over that yet; which suggests you're ready to move on in other areas, as well.\" \n\n\"Maybe it's just my morning wood.\" \n\n\"That's more than just morning wood.\" \n\n\"Yeah, well, sorry. I knew you girls were attractive, but I guess I didn't think you would have this effect on me.\" \n\nWith a warm smile, Rebecca said, \"Well, it's nice to be noticed and\u2014\" she patted his cock \"\u2014appreciated.\" \n\n\"It just won't seem to go away.\" \n\n\"How long has it been?\" She wasn't asking how long he'd been hard. \n\nHe took her meaning. \"A while. I've been very busy with this new carrier. Haven't had time for much else, particularly women.\" \n\n\"Or a proper diet; both of which contributed to your medical issues.\" \n\nAll Sadler could do was shrug. \n\n\"Something that size had got to be uncomfortable.\" \n\nThe admiral took a chance. After all, he was just another horny guy. \"That's not the half of it.\" \n\n\"Oh, yeah? What's the other half?\" Was there really any harm in this? \n\n\"It's like a soldier in the Middle East\u2014he just needs a little relief.\" \n\nRebecca glanced at his cock. \"Yeah, all that standing at attention.\" \n\n\"Yeah, he just needs a hand.\" \n\n\"A hand?\" \n\nHe nodded. \n\n\"Well, give him a hand.\" \n\n\"You want me to give him a hand?\" Sadler asked, thinking that this was getting kinky. \n\n\"I'd love to see that. But be quick. Wouldn't want to get caught again.\" \n\nHoping he was not misreading her, the admiral kept an eye on her as he pulled out his hard cock and began stroking it. He saw her eyes light up and knew he had correctly interpreted her suggestion. \n\nSo mesmerized by the sight of a man jerking himself off was Rebecca that she was forgetting about time. She didn't know if the admiral was taking his time or because of the oddity of this situation nothing was happening. \"I can help you,\" she offered. She undid her robe and raised the cut-off T-shirt up to expose her breasts. Now, his eyes widened. \n\nRebecca then undid his robe and tugged his boxers down to his ankles. She sat next to him very close. He put his free arm around her and she crossed her leg over her other leg and over his bare leg as she fondled her own nipples. \n\n\"This would probably work better if you did this,\" Sadler suggested taking her hand and wrapping it around his cock. \n\n\"I thought you'd never ask,\" she quipped. \n\nRebecca pumped it a bit, delighting in its size and feel. She stopped to remove her robe and her top, but first she asked, \"You mind?\" \n\n\"Are you kidding?\" \n\n\"Oh, that's nice,\" he groaned. He watched as she rubbed her finger all around the head, and then tugged it a couple of times. His cock pulsed almost involuntarily. She then teased the soft underside before grabbing the whole shaft back in her hand. With her lips pursed, she dribbled saliva onto his shaft. That was about all he could take before making high-pitched, throaty sounds. \n\nKnowing he was about to blow, Rebecca cupped his balls with one hand and rolled them around. A second later, she felt his scrotum heaving and a second after that he erupted filling her hand with warm, thick cum. It was a bucketful, to be sure, and she did her best to prevent from getting on the sofa. \n\nSadler plopped back against the sofa backrest. \"That was fantastic!\" \n\n\"Are you okay?\" Rebecca asked. \"Do you feel alright? Any tightness in your chest? Anything like that?\" \n\n\"I feel wonderful,\" he answered with a big smile. \"You have no idea how much I needed that. Thank you. And if this is not out of line, I wish I could reciprocate.\" \n\nShe grinned. \"Oh, you want to fuck me, huh?\" \n\nHe took on a shocked expression at her descriptive interpretation of what he said. But he also knew that that was exactly what he meant and wanted to do. \"I'm sorry. That was incredibly insensitive and inappropriate.\" \n\n\"But no worse than what we just did,\" she said by way of exoneration. \"Besides, admiral, you're an incredibly handsome guy, a very nice person, and with that outstanding tool, what female like me wouldn't want to experience it?\" She lifted his boxers back up to his knees and he pulled them up the rest of the way while she put herself back together. \"Now, what would you like for breakfast?\" \n\n\"I still want the bacon and eggs.\" \n\n\"Sorry. I can only fulfill one dream per day.\" \n\n* * * \n\nRebecca generally took the morning shift, Nate the afternoon, and Juliette the evening. Since the redhead had nothing else to do that day, she hung around keeping an extra eye on her patient to make certain there were no residual effects from their morning activity. She also had to do it without raising either of her roommates' suspicions. Fortunately, she could not detect any physical reaction\u2014other than his obvious enjoyment\u2014and the only mental side effects seemed to be that he was in an extremely good mood all day. \n\nJuliette and Nate wondered what the cause of his affability was, and when the former told the latter what she had witnessed that morning, they joked that maybe they all needed to start walking around in their underwear, thinking that's what did it. \n\nOf course, Rebecca went along with the camaraderie without admitting the truth. \n\nBut the more they talked and thought about it, Juliette suggested, \"Maybe we really do need to dress down. I don't mean undies like you this morning, Rebecca. But not scrubs, either.\" \n\nNate picked up on it. \"Yeah, tank tops, shorts, no bras. Maybe he needs something to get his heart really pumping. What do you think, Rebecca?\" \n\nShe shrugged. \"We could try that. But not all of us at once. During each of our shifts, maybe.\" \n\n\"Good idea,\" Juliette agreed. \n\n* * * \n\nThe next night, Juliette dressed in a mid-thigh length sheer nightgown that was not completely see-through only because of its dark color. It was low-cut, and of course, had matching bra and panties. She went up to the admiral's bedroom to give him his meds, but he was in his bathroom. The running water told her he was brushing his teeth. After setting out the pills, she prepared his bed for sleep, and then checked herself in the mirror, making sure her hair was fairly presentable. At that moment, he stepped out of the bathroom. \n\nSadler was not surprised that Juliette was in his bedroom. She was here every night. But her attire. Wow! \"I guess I'm mixed up on my days. Is today casual Friday?\" he said in jest. \n\nShe looked down at herself as though not realizing how she was dressed. \"Oh, I was all ready for bed when I remembered I hadn't set out your medicine.\" Then, pretending it to be an afterthought, she added, \"Besides, I didn't want to be outdone by Rebecca yesterday morning.\" \n\nThe admiral laughed at that. \"You both are something.\" \n\n\"I hope you mean that in a good way.\" \n\n\"I do.\" Believing her answers to have a playful tone, Sadler said, \"And it's about time. I mean, for all this time, you girls have gotten to see everything I have. Turnabout is fair play.\" \n\n\"So, you like this?\" Juliette lifted the hems of her nightgown and curtsied. \n\n\"I have to admit, it's more appealing than scrubs.\" \n\n\"I can tell by the way you're looking at my tits.\" \n\n\"You said you didn't want to be outdone by Rebecca,\" he shot back. \"Just trying to be fair.\" \n\n\"Well, if we're trying to be fair, then . . .\" Juliette reached out and felt his cock through his pajamas. He was on his way to being hard. \"The look on Rebecca's face said everything.\" She fondled it until it was completely solid. \"And that look didn't lie,\" she said enthusiastically. Tongue in cheek, she went on, \"I'm sorry. Is this bothering you? If so, I can keep on.\" \n\nSadler wondered how much the girls talked and if Juliette knew about what Rebecca had done the previous morning. As concerned as Rebecca seemed to have been, he would labor under the assumption that it was still a secret. So, he said, in kind, \"Yes, I really find this bothersome.\" \n\n\"I thought so.\" Juliette, Rebecca and Nate were not sluts. They didn't sleep around, but each had a man occasionally . . . maybe not as often as they would like. So, to have a specimen like the admiral in her hand, and particularly since he seemed just as eager, there was no way she was quite ready to let go of it. Actually, she did. But only long enough to push him down onto the bed. She then sat beside him, and as he willingly watched her, she pulled his pants down and off. \n\nHe was resting his back against the headboard. She turned to face him and leaned against it also, then regained her grip on his beautiful cock. They both watched as she purposefully stroked it. \"Yes, indeed, Rebecca's facial expression was exactly right. But we should probably just keep this to ourselves.\" \n\nWith a nod and a wink, Sadler agreed, \"Mum's the word.\" \n\n\"I can see why you're an admiral,\" Juliette whispered seductively as she pumped him steadily and moderately. \"You've got all the brass.\" \n\nHe started moaning. \n\n\"That's it. Come for me,\" she urged. \"Do what your nurse says.\" \n\nHe could feel his balls tightening and that was reflected as he groaned faster, but quietly. \n\n\"Let me have it. I want to feel that gooey cream all over my hands.\" Feeling his cock swell, she covered the head of it with her other hand to prevent him from shooting all over the bed. But he blasted more than her hand could capture, and when he finished, both of her hands and his entire shaft were drenched. \"Damn, you came a lot!\" \n\n\"I've been storing it up,\" he responded breathlessly. \n\n\"I can see that. Might have to add this to your treatment plan. Don't want you getting backed up.\" \n\n\"You're the nurse.\" \n\nJuliette cleaned them off, gave him his medicine, and tucked him in. There was nothing she would have liked better than to have climbed in with him, and she wondered how long it would be before that happened. \n\n* * * \n\nDespite what Sadler thought\u2014and possibly what the girls thought, or at least, two of them\u2014unless he had way more sexual fervor built up than he thought, the two handjobs he had received had provided only temporary relief. In fact, it only made him want more, particularly with three gorgeous women waiting on him hand and foot, and now, especially since their attire had become extremely casual. \n\nAs busy as he had been before his heart attack, he wondered if all the stress he thought he'd been under was all just a desperate need for sexual release. He'd have to ask Rebecca. She was the most astute of the three, not to mention the most beautiful. \n\nSadler even thought he was about to the point that he was ready to give himself a handjob\u2014and that was something he hadn't done in many years, probably since he was a young swabbie. \n\nThe problem was, he couldn't just lay in bed and do it because he never knew when one of the girls would suddenly appear. Perhaps a nice relaxing bath would provide both privacy and be soothing, as well. \n\nHe decided he should tell Nate he was going to bathe so she wouldn't come barging in. \n\nHer grimace gave him his answer before she could articulate it. \"I'm sorry, admiral.\" Her voice bled sympathy. \"It's just too soon for a bath. Can't soak the incision just yet.\" \n\n\"I'm starting to go stir-crazy. I just thought it might relax me.\" \n\n\"Just be patient. You're getting there.\" Nate stepped over to him, lifted his shirt and ran her hand up and down his chest over his incision. \n\nShe and the others had done this many times, and either she was doing it more sensually this time, or, in his current condition, coupled with the tank top and short shorts she was wearing, it had a much more stimulating effect. \"Guess I'll have to settle for a shower.\" Then under his breath he said, \"A cold one.\" \n\n\"What?\" \n\n\"Nothing.\" \n\nBut she'd heard him. \"Well, anyway, it's looking good. Want me to run your water?\" she asked as upbeat as she could muster. \n\n\"You girls are taking way too good care of me. I've got to start doing things for myself.\" \n\n\"Okay. Then I'll be nearby if you need anything.\" Nate remembered the admiral's question to Rebecca in the hospital about sex, and his obvious enjoyment when any of them had to touch him to examine him, then his reaction to seeing Rebecca half-dressed the other morning. She believed it explained why he wanted to take a bath, although he could masturbate in the shower just as easily. \n\nWhen she heard the shower water running, she tip-toed over to the bathroom door and listened, feeling guilty for eavesdropping. She couldn't hear anything over the sound of water splashing against the tile walls and floor of the huge shower stall. She couldn't resist easing the door open just enough to see. Fortunately, the shower head was on the same wall as the door, and the admiral was obeying recovery rules by turning his back to the spray. \n\nNate was not surprised to see him grab his cock. And the longer she watched, the more enticing she found it. Rebecca had been correct. His penis was magnificent! As many times as she'd seen it soft, it was truly breathtaking to see it hard. She risked opening the door wider to witness this glorious sight with both eyes. She'd been with a few men, but never such a perfect specimen. This was wrong. She knew it, knew she should back away, but she had never seen a man do this in real life. It was exciting her beyond control; so much so, she found herself inching in, ignoring the consequences of getting caught. \n\nThen there was the look of deep concentration on his face, intense satisfaction. It made her wonder what he was thinking about to achieve it. That was as thrilling to Nate as his body. \n\nBut then, something caused him to halt abruptly. He turned. Their eyes met. It was a toss-up which of them was more shocked. \n\nSuddenly, Nate was torn between turning, running, leaving the house and not stopping until she reached the west coast, or . . . another temptation. She didn't see anger on the admiral's face. Maybe it hadn't come yet. Bad choice of words. Yet, she couldn't quite put her finger on what mood or emotion was portrayed. However, something she was sensing prevented her extreme departure. Something that . . . ",
        "Something hypnotic in his eyes had her removing her top, exposing her breasts, slipping her shoes off and stepping into the spacious shower stall with her short shorts still on. \n\nNo words were exchanged as Nate turned him around away from the spray, reached for the bar of soap, lathered up her hands and washed his back. Using more soap, she pressed her bare tits against his back, reached around him with both hands, her right encircling his wilting shaft, her left cupping his heavy balls. Within seconds, he was as hard as an oak mast on a sailing ship. Slowly and deliberately, she pumped him. He extended his arms to brace himself against the wall. She felt his muscles relax\u2014almost as though this is what he had been waiting for. \n\nRemoving her left hand from his scrotum and wrapping it around his abdomen, her right hand glided his full length, which now included a massage of his balls on her down stroke. She wanted desperately to touch herself, make them both come, but she knew that just what she was doing was way more than she should. \n\nMoans and whimpers escaped his lips, even an occasional shudder. His cock felt like she always thought one should: long, firm, weighty, serious, extremely hard of course, and yet, within that rock solidity, a softness. \n\nAs she continued, Nate decided that it didn't matter that she couldn't do herself as well because she almost felt she would come just through association. \n\nShe felt the admiral's cock pulse a few times, which she took as a signal that he might be ready. She increased her pumping very slightly. He reached around her and pulled her tight against him, and in response, she gripped him more firmly around his abdomen and leaned her head against his back. He made guttural, heaving sounds as though he was raising a sail. \n\nFirst, she felt his buttocks tighten and then the warm, creamy liquid flooded her hand, and flooded and flooded. Finally, he stopped, breathing heavily. \n\nShe stayed with him a couple of minutes with the water beating on both of them until his respiration was almost normal. She then lifted her hand to the spray to wash off the semen. \"You okay?\" she whispered. \n\nHe merely nodded, so Nate quickly stepped out of the shower, reached for a towel, dried herself enough not to drip water anywhere, scooped up her tank top, and hustled down to her bathroom to bring herself off. \n\nNate was somewhat upset with herself for shirking her professional responsibility to feed her own carnal desires. But, damn, it felt great to tame that monster. After doing herself, she quickly dried off, changed and returned to the admiral's room to check on him. \n\nHe was just finishing dressing himself. He looked up at her and smiled. He could see the apprehension in her beautiful face, so he said, \"You were right.\" \n\nThat caught her off guard, which was his intention. \"About what?\" \n\n\"The shower was just as satisfying as a bath would have been.\" \n\nThat further disarmed Nate. The man was good at handling people. No wonder he had made it to admiral at such a young age. \"Glad you liked it,\" she said, for lack of anything better. \"How do you feel?\" \n\n\"I feel great!\" Sadler answered with obvious enthusiasm. \"I like your new treatment plan.\" \n\nNate forced an uneasy smile. \n\nSadler tilted his head to look her in the eyes. \"Now, I didn't get to where I am by ignoring the obvious. You're troubled and we should talk about it.\" \n\n\"Well, even though I'm happy to . . . have helped, it was very unprofessional of me.\" \n\n\"You think so?\" He pretended to think it over. \"You mean that wasn't part of your treatment plan?\" Now, he was smirking. \n\n\"I'm trying to be serious and you're having fun with it, aren't you?\" \n\n\"It was fun.\" \n\nNate responded with a sneer. \n\n\"Look, I'm not complaining,\" Sadler reassured. \"I won't tell anyone. It'll be our secret, and your professionalism will remain intact for all to see. And if we find ourselves in a similar situation, I'll do my best to stop you.\" \n\nAs she turned to walk out, shaking her head, Nate said in a low voice, \"Who's going to stop you?\" \n\n* * * \n\nAnd so it went for the next several days. Once a day, one of the women would give him a handjob. What he was realizing was that he had come more in that time than he had maybe in the last year or more, and as good as it was, it was reaching a point where it wasn't enough. He was ready for more. But with what the women were already doing for him, he feared asking them if he was ready for more would be like telling them he wanted them to do more. He had no right to do that. \n\nSadler was now going up and down the stairs at will, sometimes several times a day. In addition, he had some exercise equipment in his basement and they encouraged him to use the treadmill. By just over three weeks after surgery, he was up to walking a mile. \n\nIt was then that he had a follow-up visit with Admiral Walker. The doctor told him he was progressing on schedule, even allowing him to resume work on a part time basis, though he advised against it. Walker pulled Rebecca aside afterward and explained, \"I've never seen him so relaxed. Whatever you girls are doing for him, I want you to continue.\" \n\n\"Just taking good care of him, sir.\" \n\n\"I was hoping that the longer he remains relaxed maybe when he does return to work, he'll be ready to do it at a less hectic pace.\" \n\n\"I read you, admiral.\" \n\nWhat Walker didn't tell the nurse was the other subject he and Sadler discussed. \n\n\"Ken, am I ready for sex?\" \n\nWalker smirked. \"Those nurses are taking better care of you than I thought.\" \n\nSadler just gave him a dirty look. \n\n\"Which one?\" the doctor asked. \n\n\"Which one, what?\" the patient shot back, though he thought he knew what his friend meant. \n\n\"Which of the three women?\" \n\n\"Oh, get your mind out of the gutter,\" Sadler rebuked with a grimace. \"They're not like that.\" \n\n\"You come on, George,\" Walker said, grinning. \"Don't tell me you don't have your eye on at least one of them.\" \n\n\"That's not the purpose of the question.\" \n\nWith a single nod that was as much a statement of disbelief as an acknowledgment of the other's explanation, the doctor said, \"You are cleared for sexual activity. But keep it simple. Nothing too strenuous. No lifting. Try not to put too much pressure on your arms. Your sternum is still healing. You're still three to six weeks away from that being completely mended. Now, are you going to tell me who the lucky girl is?\" \n\nWith a frown, Sadler said, \"There is no lucky girl. It was just a question for future reference.\" \n\n\"Riiiight.\" \n\nIn reality, it would be Sadler who would be the lucky one to do it with any one of the three women, though his preference would be Rebecca. \n\n* * * \n\nOn the drive home, Sadler was feeling pretty good. \"I want to thank you ladies for taking such good care of me. I'd like to take you all out to dinner tonight.\" \n\n\"Admiral, you don't have to do that,\" Rebecca said. \n\nBoth Juliette and Nate gave her an 'are you crazy' look. \n\n\"I know I don't have to,\" Sadler confirmed. \"But I want to. And I promise to eat responsibly. Where would you like to go?\" \n\n\"Actually, we were just going to order a pizza and watch a movie,\" Rebecca told him. \n\n\"Mmmm. I can't remember when the last time I had good pizza was,\" Sadler noted. \"I had something a little nicer in mind, but if you know a good place, I'm game for pizza.\" \n\nLater, after they arrived home, ostensibly to change for dinner, the nurses gathered in Rebecca's room. \n\n\"Are we really going to eat pizza?\" Nate asked, incredulously. \n\nRebecca looked at her like she was nuts. \"Of course. We were going to have that for dinner anyway. Now, we're just having it in a restaurant. With our gracious host.\" \n\n\"Well, this will be awkward,\" Juliette remarked. \n\n\"Not unless you make it so,\" Rebecca shot back. \n\nNo surprise to Rebecca, but maybe to the others, Admiral Sadler was quite the charming escort. He was funny, had tons of great stories both serious and comical, and he listened to their stories just as intently as he articulated his own. He allowed the wine to flow, but only had a couple of glasses himself, and true to his word ate only to small slices of pizza and a salad. \n\nIf the women had not been enamored of their patient before, they certainly were now. \n\nThe admiration was mutual for the admiral. He already had the highest regard for his caretakers, but beauty aside; they were simply warm and giving women. It would be easy to get closer to any one of them. \n\nWhen they arrived home, they invited him to watch their movie with them, but when he learned it was a chick flick, he diplomatically declined. \"I already interrupted your plans for the evening, so I'll just get out of your way and let you enjoy your film.\" \n\nNeither of the women would admit it to one another, but the movie had made them horny. Rebecca said that she would check on the admiral before going to bed, hoping he might still be awake. She enjoyed her alone time with him. He really was a wonderful man. And then there was the \"extra\" service she performed, which she enjoyed as much as he obviously did. She found him still up checking email on his iPad. \n\nSensing her approach, he shifted his eyes without lifting his head. Damn, she was a beautiful woman: flowing red hair, nice round breasts, toned shapely legs, and a nice round ass. Hell, hair color aside, he had just described them all. From the neck down, they could be sisters. And the icing on the cake was the thin-strapped, low-cut top that barely reached her waist and matching short pants. \n\nSadler quietly sighed. \n\n\"How are we doing this evening?\" \n\nClosing his iPad, he said, \"Better now.\" \n\nShe smiled knowing he was referring to her presence. \"Need anything?\" \n\nHe shrugged hesitantly. \n\n\"You can say it.\" \n\nStill hesitant, he finally said, \"The usual.\" \n\nRebecca started to climb onto the bed, something she had never done before, but her arousal from the movie had her feeling bold. However, she decided to ask first. \"May I?\" \n\n\"After all we've done and been through?\" \n\nShe smiled at his pun. \"I'm glad you put it that way.\" \n\nHe questioned her with his eyebrows. \n\nRebecca reached out and fondled his cock through his boxers. \"We've been doing this for a while, but we don't really talk about 'it.'\" \n\n\"True enough. We can if you want.\" \n\n\"Obviously, you're okay with it.\" \n\n\"Obviously.\" \n\n\"And I can tell you enjoy it.\" \n\n\"I do, and I truly appreciate it. I know that's not part of the job description.\" \n\n\"As long as you realize we don't just do that for everyone.\" \n\n\"I do.\" \n\n\"You received a clean bill of health today.\" \n\n\"All thanks to you, Juliette and Nate.\" \n\nRebecca smiled at the compliment. \"So, I was thinking you were maybe ready for more.\" \n\nHis eyes widened in anticipation. \n\nTaking a deep breath, Rebecca fished out his now hard cock, gave him a look, then went down on it, sucking it into her mouth. He let out a throaty moan and threw his head back. She went up and down slowly to maximize his pleasure. He reached out and rested his hand on her bare thigh. That was electric for her. \n\nShe did not consider herself an expert fellator, not because she didn't like to do it, but rather she didn't believe that a guy should assume she was going to do it\u2014as most of them did. But every now and then, a cock came along that she just couldn't get enough of. So, she lost herself in her own pleasure as the admiral was apparently doing the same. \n\n* * * \n\nJust settling into bed, Juliette glanced at her bedside clock. She hadn't heard Rebecca come down from the admiral's room yet. It shouldn't have taken long unless something was wrong. Care to the wind, she jumped out of bed in tank top and bikini panties, then moved as quickly as she could while still maintaining silence up the stairs. \n\nAlmost to the top, she heard moaning. A male voice. He sounded as though he was in pain. Stealth no longer an issue, Juliette sped up in case he was in some distress. But of course, she halted when she stepped into his room. \n\nRebecca looked up with a mouthful of dick. The admiral lifted his head to see. \n\n\"Oh, shit!\" he said. \n\n\"What the hell?\" Juliette exclaimed. \n\n\"He just had a stiff muscle,\" Rebecca reported, deadpan. \"I was just massaging it.\" \n\nJuliette was frowning. \"That's not the least bit funny, Rebecca,\" she scolded. Sadler tried to cover himself. She looked at him in stupefaction. \"Really, admiral? It's not like I haven't seen it like that.\" \n\nFinally removing her mouth from his still hard cock, Rebecca said, \"What does that mean?\" \n\nRealizing she had given herself up, but also that she was no guiltier than her friend, she lamely explained, \"Well, he's had that stiff muscle before and I've had to take care of it. But I must admit, I didn't think to try your method.\" \n\n* * * \n\nNate always had the afternoon shift, so she didn't worry about the evenings and felt content to go to bed without concern. The movie had left her horny, but since neither of her friends indicated similar feelings, she thought that she was the oddball. Still, she intended to do something about it in the privacy of her bed. As she started to touch herself, her mind naturally drifted to the admiral and the shower they had taken together. She hadn't had any other opportunities like that, but her vivid memory of it had been enough for her to masturbate on several times since. If only she could go up to his room right now. Why hadn't she thought to volunteer to take care of him after the movie? \n\nThen she abruptly realized that she had not heard Rebecca return from the admiral's room. It occurred to Nate that maybe the redhead had been aroused by the movie also and that was why she offered to tuck him in. She wouldn't be doing anything with him would she? That would be most unprofessional. Curiosity now getting the better of her, she slowly got out of bed and slipped a short robe on over her T-shirt and panties and stepped into the hallway. She checked the other girls' rooms. To her complete surprise, both were empty. She walked down a couple of steps, but could discern no activity, so she went up toward the admiral's room a ways. And then she heard Rebecca and Juliette talking. \n\nNate moved quickly up to the top level and saw Rebecca bent over the admiral's wilting cock and Juliette with her hands on her hips as though she had caught the other with her hands in the cookie jar. \n\nNate was not really surprised. Masturbating him as many times as she had, she'd wondered how long she could hold out before graduating to oral. Then it suddenly occurred to her\u2014had Rebecca and Juliette been jerking him off also? It stood to reason that if she had been, they probably were too. They simply beat her to the next level. \n\nNate approached the end of the bed and stood there. Seeing her, Rebecca said, \"Oh, don't look so surprised. You had to realize it would come to this.\" \n\n\"You also?\" Nate asked Juliette. \n\nSince she had already goofed with Rebecca, there was no reason to hide it from Nate. \"I've just been giving handjobs.\" \n\nNate couldn't really become indignant because she had been doing what Juliette was doing and wanted to do what Rebecca was doing. She didn't realize she wore a guilty expression. \n\nRebecca picked up on it. \"You've been doing something also, haven't you?\" \n\n\"Why do you say that?\" Nate asked defensively. \n\n\"Because you're not chastising us. What have you been doing?\" \n\nNate glanced at the admiral, who merely nodded. \"Same as Juliette.\" \n\n\"Well, I always knew it would be a man who would come between us,\" Juliette stated. \n\n\"What does that mean?\" Rebecca asked. \n\n\"The three of us have been together since basic training. I didn't think we kept secrets from one another.\" \n\n\"Apparently, we do.\" This from Nate. \n\n\"Well, it just kinda happened,\" Rebecca gave as her excuse. \n\n\"But you still didn't see fit to mention it,\" Juliette accused. \n\n\"Nor did you,\" Rebecca shot back. \n\n\"Rebecca's right,\" Nate agreed. \"It did just kind of happen.\" \n\n\"I'm not disputing that,\" Juliette clarified. \"But we still should have told one another.\" \n\n\"I agree that we should have,\" Nate said. \"But this is the first time it's been the same guy.\" \n\n\"Doesn't make it right,\" Rebecca argued. \n\nAs they kept at one another, Sadler quietly pulled his boxers back up and slid out of bed. He thought it best to leave them alone to settle this. It was awkward enough being the subject of their disagreement without listening to them hash it out. But he only made it as far as the door, which is where Nate was still standing. \n\n\"You need something, admiral?\" she asked. \n\n\"No. I'm just going to let you girls finish your discussion.\" \n\n\"Now, we've really done it,\" he heard Juliette say as he started down the stairs. \n\n\"He didn't seem pissed to me,\" Nate pointed out. \n\nSadler moved out of earshot to hear any more. \n\n* * * \n\nPerhaps he should have stopped it, Sadler thought as he took a seat on the sofa in the living room. While he didn't think he had done anything to encourage them to start giving him handjobs, that didn't mean that he was blameless. But he didn't stop them, and it didn't really matter why because the damage was done. The question was how could he rectify it if they couldn't resolve the situation. He didn't want to lose any of them at this point. \n\n* * * \n\nThe nurses rehashed the same issues for nearly an hour with no real resolution. Rebecca believed that they were not really angry with one another\u2014that was certainly her sentiment. She felt it was more about the disappointment at not being honest with each other; not that they had lied. They had simply withheld. \n\nRebecca had remained on the admiral's bed; Nate had not drifted far from the entrance to his room, while Juliette, who had seemingly been the most upset, had excused herself to visit the bathroom. That had been nearly twenty minutes ago. No one had spoken in that time. \n\nFinally, Juliette returned and took a seat on the edge of the bed next to where Rebecca was stretched out. \"It's kind of silly, isn't it,\" she pointed out with a giggle. \n\n\"What?\" Rebecca asked. \n\n\"As we said earlier, we've been together since basic training and I don't ever remember us having a disagreement about anything,\" Juliette explained. \"So, why now?\" \n\nRebecca shrugged. \"I don't know. Does it matter? Can we just say we screwed up, learn from it and move on?\" \n\n\"Works for me,\" Juliette agreed. \n\n\"Yeah, we should have told each other,\" Nate chimed in, moving closer to them. \"Then maybe we could have been doing more.\" \n\n\"What's that supposed to mean?\" \n\n\"Oh, come on,\" Nate chided. \"Don't tell me there wasn't one or more times when you had his gorgeous cock in your hand that you wouldn't have preferred it in your mouth or pussy.\" \n\n\"No, I won't tell you that,\" Juliette said, standing. \n\n\"Neither will I,\" Rebecca agreed. She stood also and they all giggled. \n\nThe three group-hugged. \n\n\"Well, I'm glad we got that settled,\" Sadler said, standing in the doorway. \n\nThe women turned sharply to see him standing there with a bottle of wine, four glasses, and a not too subtle erection, though he was not being obvious about it. Rebecca looked at Juliette and Nate. Their expressions indicated that they had noticed also. \n\n\"What's that for?\" Rebecca teasingly asked. \n\nHe held up the bottle. \"To toast making up.\" \n\n\"You trying to get us drunk?\" \n\n\"Yeah, so I can take advantage of you,\" he joked. \n\n\"You don't have to do that to take advantage of us,\" Juliette told him in a sultry voice as he stepped closer and handed them each a glass and poured. ",
        "Rebecca downed hers in one swallow, the fire in her eyes as flaming as her hair. \n\nJuliette had seen that look before. She followed suit. \n\nNate had a good sense about what they were up to and did likewise. \n\nBefore Sadler could drink the half glass he'd poured himself, Rebecca was collecting the bottle and glasses and setting them on the dresser. She returned to the bed and climbed on. Once again, Juliette and Nate followed her lead. \n\nRebecca reached out to pull off his boxers with an assist from Juliette, while Nate lifted his shirt up. Not one to resist such attention, Sadler lifted his arms. When his shirt was completely off, the girls stopped for a moment to view the scar on his chest, each one running a finger over it and smiling at how well it was healing. Ah, the wonders of modern surgical glue. Rebecca and Juliette returned to his pants pulling them and his underwear down to his knees. His cock sprang free and Rebecca was the first to reach out to touch it. Nate rubbed it up and down a couple of times with her fingers. \n\nBut before Juliette could have a turn, Sadler stepped back to step out of his boxers that were gathered around his ankles. Now, she reached out, grabbed his penis and used it to pull him back to the bed and directly into her mouth. \n\nRebecca got off the bed, took his head in her hand and pulled his lips to hers. He put his arm around her allowing his hand to grab her ass cheek. Juliette shared with Nate. \n\nSadler couldn't help but push Rebecca's shorts down as far as he could. She assisted by moving her legs to allow the garment to slide down to the floor where she kicked them off her feet. His hands still on her now bare bottom, his fingers snaked in her ass crack and down in between her legs. \n\nJuliette and Nate were giggling as they licked and slurped the admiral's rigid mast. With his other hand, Sadler put it around Nate's shoulders. She fondled his balls while the other sucked his cock. Upstairs, he and Rebecca were still swapping spit. \n\nSadler twisted his body as much as he dared to devote more attention to Rebecca. Their kisses became more passionate with considerable tongue action. He now lifted her shirt up and off leaving her clad only in her bra. He freed her breasts from their cups and pawed them. \n\nJuliette had become somewhat selfish, not yielding the admiral's dick for Nate to enjoy. The latter finally just grabbed it away. But as she sucked on the head, Juliette slid her lips sideways up and down the shaft. \n\nSadler relieved Rebecca of her remaining piece of clothing, one-handedly unhooking her bra, pulling it off and flinging it out of the way. Seeing this, Juliette and Nate paused from their mouth work to remove all of their clothes. \n\nSeeing all three of the women totally naked now, Sadler remarked, \"How could I have been so lucky as to draw three such incredibly beautiful women?\" \n\n\"You weren't the only one who got lucky,\" Rebecca commented. \n\n\"Yeah, but I haven't been able to do for you what you've been doing for me.\" \n\n\"Well, now's your chance,\" Juliette said, lying down on the bed on her back with her legs spread. \"All those handjobs and right now have made me hornier than I've ever been.\" \n\n\"Ditto,\" Nate said, breathing heavy. She got on her hands and knees next to Juliette wiggling her ass at Sadler. Only inches from his cock, she reached behind her, took his dick in her hand and quickly guided it into her soaked pussy. Naturally, he started pumping. \"Oh, that's good,\" she cried. \n\n\"Hey! No fair.\" Juliette said, her face only inches from Nate's. \n\n\"I'm sorry,\" Nate apologized. \"I just couldn't wait. I'll\u2014\" She was so delirious; she couldn't finish her statement, as her head dropped, her lips nearly touching Juliette's. She opened her eyes halfway, saw a set of inviting lips in front of her and kissed them. \n\nStrangely, Juliette found herself kissing back instead of pulling away. Subconsciously, she understood Nate's frame of mind because hers was in a similar place. \n\nContinuing to perform mindless actions, Nate reached over and stroked Juliette's clit gently. The latter sensed whose hand was on her, but it felt so good, she was beyond caring. In fact, it caused her to intensify their kiss. She'd never kissed another woman before. It was actually kind of nice. \n\nStill pumping away into Nate's tight, wet pussy, marveling at how good it felt and how long it had been since his dick had been in such a delightful place, he returned to kissing Rebecca. She was a great kisser, and that in itself was exciting. He desperately hoped he had the chance to get inside her. \n\nRebecca saw the activity going on between her two friends, and though she knew neither had any lesbian tendencies, it was exciting watching them. It almost made her want to get in on some of that action. But not enough to break away from the marvelous kissing with the admiral. \n\nBut she and Juliette halted when Nate let out a high-pitched cry signaling she was coming. They watched her trance-like behavior as she emitted a variety of sounds until she fell forward on the bed. \n\nSeeing the admiral breathing heavily, Rebecca asked, \"You okay?\" \n\n\"Never better,\" he answered with a wide grin. \n\n\"Can I have a turn?\" Juliette pleaded. \n\n\"Yeah, but let me lie down.\" Sadler laid on his back his cock still sticking up rock hard. \n\nJuliette threw her leg over him and ended up facing away. But she wasted no time in reaching for his rigid rod and jamming it into her aching pussy. \"Ohhhh!\" she cried out. Like her friend, she was in another world riding the monster inside of her. She sat upright and bounced like she was on a bucking bronco. She felt the admiral's hands latch onto her hips. \n\nMeanwhile, Rebecca was kneeling beside her watching. Nate had composed herself and knelt on the other side, and when Juliette saw her, she leaned over and their lips met again. Nate cupped her friend's face in her hands. Rebecca reached down and held the admiral's balls in her hand as he thrust into her friend. \n\n\"Oh, yeah,\" he groaned. Juliette was almost as tight as Nate had been, but other than that, she felt totally different. He turned her around so that she was facing him, and then she went back to bouncing. He reached up to play with her tits. \n\nRebecca straddled one of the admiral's legs in front of Juliette. She reached over and placed her hands on top of his and they both toyed with Juliette's springing breasts. Not wanting to be left out, Nate boldly slid her hand between Sadler's and Juliette's crotches, felt the hot moistness. Now she concentrated on Juliette's clit. \n\nAlso, feeling the effects of the steamy action, Rebecca kissed Juliette's shoulders. \n\nWith all the attention she was now receiving, Juliette could not hold out any longer and she exploded. Her fingers curled into claw-like appendages and her toes bent downward. She, too, cried unintelligible sounds until she fell over on her side.  \n\nSeeing the sweat pouring out of the admiral, Rebecca jogged into his bedroom, grabbed a towel and patted him down. \"Still okay?\" \n\n\"Just keeps getting better.\" \n\nSadler sat up and took a deep breath. Rebecca was staring at him, but he was certain it was to see if he was going to have any medical issues. He, on the other hand, was eyeing her with lust. Finally, he asked her, \"Do I get a turn with you?\" \n\nShe gave him a warm smile that said way more than just fuck me. \"I was hoping you would want to.\" \n\nShe was still squatting on the bed. He assumed a similar position, pulling her to him. He kissed her on the side of her face close to her ear away from the others, then whispered, \"I wanted to save the best for last.\" \n\nIt caused Rebecca to shiver. Sadler then gently laid her down on her back before him, dragging her to him, her legs, draping over his thighs. Still squatting, he entered her. It was divine. While he had enjoyed Nate and Juliette and the differences their pussies felt when he was inside of them, Rebecca also provided yet another experience, but somehow, she felt right. He felt like he belonged inside her. His thrusts were slow and deliberate. \n\nShe had propped her back up on her elbows, but when he slid his magnificent cock inside her it was so glorious she threw her head back. \n\nRebecca tried to hold her head up, but the feeling was so overpowering, she couldn't. She was even oblivious to Nate rubbing her tit. She turned her head when Nate attempted to kiss her on the lips, so the other nurse kissed her neck and shoulders. She could see Juliette sitting behind the admiral rubbing her hand up and down his back. \n\nBut despite what was going on around them, the two could concentrate only on each other. Even when Nate rubbed her thigh and Juliette her clit, she could only focus on this wonderful man making love to her. Yes. That's what she wanted to believe it was. He wasn't just fucking her. He was making love to her. \n\nThen, since they began this session, even during his time with Nate and then Juliette, for the first time, Rebecca saw the pure lust in his eyes and knew that he was ready. The knowledge stimulated her\u2014not that she wasn't already\u2014but brought her to the edge. \n\nSadler was about to pull out of her to finish, but she prevented him. \"It's okay.\" It didn't really matter. He was so close she felt the powerful jets spurting against her inner walls. That triggered her own massive orgasm. Even though finished, he continued to plunge in and out of her until he was certain she was done. He knew this had been an intense climax for him, but what he didn't know was that he had delivered such a massive load inside her that his continued pumping was forcing most of it back out. \n\nSadler collapsed on top of her when they were both finished and breathing heavy. The women were all suddenly concerned, but when he rolled onto his back with the biggest smile they had ever seen on his face, they relaxed. \n\n* * * \n\nJuliette followed Nate into her bedroom. Rebecca and the admiral had drifted off to sleep, so the two nurses covered their friend and their patient and left. They hadn't bothered to dress. \n\n\"Well, that was hot!\" Juliette commented. \n\n\"Yes, it was,\" Nate agreed, eagerly. \n\n\"So, what brought that on?\" \n\n\"Brought what on?\" Nate repeated, though she thought she knew what her friend was referring to. \"Rebecca started it,\" she said, somewhat jokingly, pretending Juliette was referring to the entire foursome. \n\nJuliette threw her a suspicious look. \"You know what I'm talking about.\" \n\nNate shrugged. \"Heat of the moment? I'd ask if it offended you, but you kissed back.\" \n\n\"Heat of the moment?\" She echoed with a grin. \n\n\"Did you enjoy it?\" Nate hesitantly asked. \n\nJust as hesitant, Juliette said, \"It wasn't repulsive.\" Then she smirked. \"It was actually kind of nice. And it's confusing why.\" \n\n\"Yes, it was.\" Pensively, she added, \"the heat of the moment precipitated it, but something else urged it on.\" \n\n\"What do you think that was?\" \n\nNate shrugged and shook her head. She stepped back toward Juliette, who was still standing in the doorway. \"Is it important that we figure that out? Or are we going to ignore it and move on? Or . . . do we need to determine if it was real?\" \n\n\"Determine if it is real?\" Juliette repeated. \n\nNate reached for her friend's hand and led her to the bed. \"I think you know what I mean?\" \n\nJuliette didn't resist as Nate sat on the bed somewhat on her side and pulled her friend down with her in a similar position, like spooning sitting sideways, nor did she pull away when Nate kissed her shoulders and neck and ran her hand along Juliette's hips and waist. Nate gently forced her to lay prone and let her hands explore the others back and rear. She then turned Juliette over onto her back and pressed their lips together. Again, there was no resistance. Nate's arm wrapped around the top of Juliette's head, her hand caressing her friend's neck. \n\nThe kiss was soft and sensual and moved Nate to allow her hand to further explore Juliette's abdomen. As their mouth action became hotter, Nate's hand became bolder traveling between the other's legs. She loved to touch her own pussy, but touching another woman's was a new and exciting experience. \n\nJuliette turned Nate around so that she was sitting on the former's abdomen facing her raised knees. She reached up and wrapped her arms around Nate cupping each breast in each palm and rubbed affectionately. She twisted Nate guiding her to lay on her back. Juliette turned over and crawled to Nate's head and mashed their lips together in another very tender kiss. Nate spread her legs wantonly, and Juliette's hand found the other's opening. She now moved down to gently suck Nate's nipples. \n\nJuliette did to Nate what she would like done to her, and that included sliding down to take soft swipes with her tongue at the other nurse's pussy. The longer she did this, the more active her mouth became. \n\nIt surprised Nate that Juliette had so quickly become the aggressor, but she wasn't complaining. Juliette's oral attention was performed with expertise, as though she had done it many times, though Nate knew this was her first. Nate allowed her to come in a timid but satisfying climax. She than arose to a sitting position, wrapping her legs around Juliette's hips. \n\nAgain the two nurses kissed passionately. The taste of Nate's own pussy juices on Juliette's lips was seductive. Nate pushed Juliette onto her back, kissed her breasts and fingered her pussy. Likewise, Nate's actions were delivered as though with practiced hands. Still with remnants of the taste of her own pussy on her lips, Nate moved lower to taste Juliette. It was quite savory. With tongue on clit, Nate slipped a digit into Juliette and finger-fucked her. Leaving her hand in place, Nate's moistened mouth moved up to give Juliette a taste of herself. \n\nMoaning at the flavor, Juliette forced her hand down between Nate's legs, and the two rubbed each other's pussies until each came, almost simultaneously. After more kissing, they fell asleep arms and legs entwined. \n\n* * * \n\nRebecca awoke the next morning feeling fantastic. She hadn't had great sex like that in quite some time. She wanted to just lay there and enjoy the memory, but scratching an itch revealed that she was totally naked. Though it was very pleasant, she couldn't imagine why she had slept in the nude. \n\nThe room was becoming lighter, yet . . . unfamiliar. This wasn't her bedroom. Then she heard breathing. She whipped her head left. \n\nThe admiral was lying on his side, head propped in his palm up on his elbow. There was a wide, dreamy smile on his face. Rebecca realized she was in his bed\u2014alone with him. \n\n\"Oh, my! I don't know what I'm doing here.\" \n\n\"I'm not complaining.\" \n\n\"Did I just fall asleep last night?\" \n\n\"Apparently, we both did. They just covered us and left us.\" \n\nRolling on her side to mirror his position, she offered, \"I'm sorry.\" \n\n\"I said I'm not complaining; particularly since I can't remember when I have awakened feeling so wonderful. I don't know how to say this without it sounding like something that one should say, but all I remember about last night was you. I can't recall what I did with Juliette and Nate. I mean, I'm sure they were good also. But not like you. I really felt something more than an orgasm.\" \n\nRebecca was slightly embarrassed to hear him talking about this. \"I don't know what to say.\" \n\nSadler took her hand nervously. She felt the slight trembling. \"Rebecca, I don't know any other way to put this, but I think I'm falling in love with you.\" \n\n\"Admiral\u2014\" \n\n\"I baring my soul to you and you still call me by my rank.\" \n\n\"I'm sorry. But I have to tell you, it's not uncommon for someone to think they've fallen in love with their nurse or caretaker. Add sex and it can just heighten that belief.\" Rebecca tried not to show any emotion, but the truth was, she was having similar feelings. But likewise, it was not unusual for a nurse who has taken care of a patient for a long time not to develop some feelings for that person. However, knowing both of those scenarios to be true, she couldn't trust the acuity of either of their emotions. She rolled over to get out of bed. \n\n\"Please don't go.\" \n\nThe only garment she could find to wear was a robe draped over his easy chair. She snatched it and slipped it on. \"Ad\u2014George. I've been taking care of you. We had sex, which was most unprofessional of me; it was great, so of course, you think you've developed feelings. In a few days, you'll feel differently. I promise.\" But will I, she wondered. \n\nSadler forced a grin though he felt nothing like it, \"Well, at least I got you to call me by name.\" \n\n* * * \n\nOn her way back to her room, Rebecca peeked into Nate's and Juliette's rooms. The former was empty, but the two were both sound asleep in the latter's room, just as naked as she had been when she awoke in the admiral's bed, except their arms and legs were intertwined. They had obviously found some new affection for one another that went beyond their otherwise heterosexual nature. Whether it was the alcohol or the heat of the evening didn't really matter. What would be interesting would be if it continued\u2014not that it mattered. Rebecca had no prejudices. \n\nJuliette's eyes opened and she saw the redhead standing there. She offered a sheepish grin and a shrug, and then eased out of bed without awakening Nate, giving no thought to her nudity. \"It's actually kind of nice,\" she told Rebecca. \"You should try it some time.\" \n\n\"Maybe.\" But Rebecca had no interest in a lesbian encounter, even with her best friends. \"I was going to mention this last night,\" she lied, having actually just decided on her way down, \"but since the admiral is doing so well, he doesn't need around the clock care anymore, so I'm going to going to take a few days off to visit my parents.\" \n\n\"Why so sudden?\" \n\n\"Been thinking about it, just wanted to wait until the admiral was okay.\" \n\n\"Okay,\" Juliette answered suspiciously. \"When are you leaving?\" \n\n\"Gonna pack now, so within the hour.\" \n\nJuliette stepped closer, placing her arms on her friend's shoulders, their tits nearly touching. \"Is there something else going on?\" she asked nodding upstairs toward the admiral's room. \n\n\"No, no. Everything is fine.\" \n\n* * * \n\nOver the next few days, Juliette and Nate noticed something amiss when the admiral subtly refused or always seemed to be otherwise occupied when they wanted to give him handjobs, or after that Friday night, more. He never seemed interested. Now that they all knew they were doing these things for him, there was no longer a need for clandestineness. Comparing notes, they both found the admiral's behavior odd. The X factor was Rebecca. They had covered her and him up after the two had fallen asleep following their exhaustive coupling. Had something occurred between then and the next morning, particularly since she departed so abruptly? \n\nOf course, Juliette had questioned Rebecca, who claimed everything was fine. \n\nHowever, that Friday night had left both Juliette and Nate a tad jealous. They had seen that something special had happened between the admiral and Rebecca. And so, their friend's denial that anything was the matter left them not entirely convinced. \n\nThey decided to have a conversation with him and found him in his study working. That was another setback from that Friday\u2014the admiral was working more. \n\nHe looked up, but not with the face of a happy man. \n\n\"Admiral, are you feeling okay?\" Juliette asked. \n\n\"I don't feel bad,\" he responded with a shrug. \n\n\"You just haven't seemed yourself lately.\" \n\n\"I'm behind in my work.\" \n\nNate spoke up. \"Except that it seems your mood change began after Friday night. Are you troubled by what we did?\" ",
        "\"No. I enjoyed it.\" \n\n\"Gee. Well, don't sound so excited,\" she joked. \n\nAgain, he merely shrugged. \n\nJuliette decided to take a proactive gamble. \"What happened between you and Rebecca?\" \n\n\"What makes you think something happened?\" \n\n\"You didn't deny that something didn't. Besides, we've been together since basic. We know each other.\" \n\n\"And that tells me you already asked her and she told you nothing.\" \n\n\"And that tells me something is the matter.\" \n\n\"Well . . . touch\u00e9.\" \n\n\"If you just tell us,\" Nate prodded, \"maybe we could help.\" \n\n\"Or interfere.\" \n\n\"Us? Naaaah,\" she said with a grin. \n\n* * * \n\nMuch to the two nurses' disapproval, Sadler announced the next night that he was going to start going into his office for a few hours every day since Admiral Walker had clear him for light duty. What he really had planned and what he had arranged with his staff was for a car and driver to pick him up at home and a helicopter would be waiting to fly him down to North Carolina to talk to Rebecca. \n\nHopefully, this would demonstrate to her how serious he was. With any luck, she would return with him. \n\nOf course, the first part of his plan was executed with military precision. \n\nAnd then, he knocked on the door to her parents' home. An older woman answered, and it was clear that Rebecca's beauty was handed down from her mother. \"Mrs. Layne?\" \n\n\"Yes.\" \n\nHe was in his dress uniform. \"George Sadler. I'm here to see Rebecca.\" \n\nWith a smirk, Mrs. Layne stepped aside. \"Won't you come in, admiral?\" \n\nRebecca had entered the living room shortly after her mother answered the door. She had a perturbed look on her face. \"You shouldn't be here.\" \n\n\"Rebecca!\" her mother reprimanded. \"That's not very nice.\" \n\n\"He's still recovering, mom. He shouldn't be traveling.\" \n\n\"Admiral Walker cleared me for light duty.\" \n\n\"Not for travel.\" \n\n\"I've just been sitting in cars and a helicopter,\" Sadler said innocently. \"Ma'am, I've fallen in love with your daughter and I just wanted to come here so she would know that I'm serious.\" \n\nThe mildly amused expression on Mrs. Layne's face suggested that she might already be aware of the situation. Certainly, she had not been surprised at the admiral's appearance. \"Then I'll leave the two of you alone to talk.\" \n\nWhen she was gone, Sadler said, \"I should be mad at you for leaving without explanation or, at least, saying goodbye, but I just love you too much.\" \n\n\"Still singing that song?\" \n\n\"What do I have to do to prove it?\" \n\n\"Admiral, I'm just not ready to be in a relationship right now; particularly with a patient infatuation.\" \n\n\"And you're still humming that tune.\" He stepped closer, smiling, attempting to keep the mood light. \"Why can't you at least give me the benefit of the doubt? Just come back. Stay at my place as long as you like and see how things go. You'll need a place to live while you go back to school.\" \n\n\"I'm actually thinking about moving back here for school.\" \n\nHe nodded. \"Tell me. Is it the fact that I'm an admiral in the United States Navy or just a patient?\" \n\n\"Both. But the fact that you're a patient who thinks he's fallen in love with his nurse is usually the right time for the nurse to remove herself from the case.\" \n\nHe thought for a moment. \"Maybe you should.\" \n\nRebecca was taken aback. Was she finally getting through to him? \"You agree?\" \n\n\"Yes. If you are no longer my caretaker, then you'll see that my love is true and not because you were my nurse.\" \n\nShe felt duped. She'd walked into that one. \"I think you should leave now, admiral. It's been my pleasure to have served you, but it's time for us to both move on.\" \n\n\"I know you feel it too, Rebecca.\" \n\n\"Wishful thinking, admiral.\" \n\n\"Tell me you don't feel the same as I.\" \n\n\"It's time to leave, admiral.\" \n\nSadler stepped closer placing his hands on her arms. \"Tell me you don't love me, Rebecca.\" \n\n\"Goodbye, admiral.\" \n\n\"You can't say it, can you?\" \n\n\"Please go.\" \n\n\"You'll change your mind and I'll be waiting.\" \n\n\"You'll find someone else.\" \n\n\"I don't want anyone else.\" He kissed her on the cheek. \"I'll be waiting for you.\" He turned and departed. \n\n* * * \n\n\"So there is something,\" Juliette accused. \n\nSadler let out a heavy sigh. He wasn't used to being questioned about personal matters. Since he'd returned yesterday from North Carolina, the positive attitude he'd shown to Rebecca had quickly diminished. Not usually a defeatist, this was a situation with a bleak outlook. He'd kept to himself claiming to be tired, and of course, Juliette and Nate misinterpreted that as him having done too much by \"going to work.\" Naturally, he denied it. \n\n\"Please?\" Nate asked sweetly. \"Tell us what the matter really is.\" \n\nThese two were like good cop/bad cop. Well, what did it really matter? \"Please don't either of you be upset by this. It's nothing against you two.\" He paused to take a deep breath. \"I think I've fallen in love with Rebecca.\" \n\n\"I could tell something was different when you did it with her,\" Juliette admitted. \n\n\"Well, it wasn't just because of that. I felt it beginning before that.\" \n\nJuliette nodded her understanding. \"And you talked to her\u2014yesterday, I'm guessing? You told her, but she doesn't feel the same.\" \n\n\"She said that was common between a patient and his nurse.\" \n\n\"It's not uncommon,\" Juliette confirmed. \n\n\"I've never had that happen,\" Nate bemoaned. \n\n\"Neither have I,\" Juliette concurred. \"And, as far as I know, neither has Rebecca.\" \n\n\"So, what are you saying?\" Sadler questioned. \n\nJuliette shrugged. \"Maybe it's not that common.\" \n\n\"So, it must have just been an excuse on Rebecca's part, particularly since she suddenly hightailed it out of here the next day to visit family and didn't even say goodbye,\" Sadler deduced. \n\n\"I wouldn't dare speak for her. But I have to ask, admiral. Have you examined your feelings? Are you certain you feel that way? You were infatuated with her, the two of you had good sex, those feelings could easily be confused.\" \n\n\"I'm certain. I've never felt this way before.\" \n\n\"I wish I had a suggestion for you. Nate, can you add anything?\" \n\n\"Nothing except we're still available. Give us a chance. I don't mind being second choice. Better than not being any choice.\" \n\n\"No offense,\" Sadler said, \"but it's not just a matter of sex.\" \n\n\"My point,\" Nate explained, \"is maybe it really is. Rebecca was last. You came with her. Maybe that influenced your feelings without you realizing it. What I mean is that perhaps you do need to do it with us again to see if there is any difference. If there is no difference, maybe you could be just as happy with me.\" \n\n\"Or me,\" Juliette added. \"Nate might just have a point.\" \n\nSadler pondered that. \"I'll give that some consideration.\" But he had to admit to himself, convoluted as it seemed, Nate had made some sense. Could he be just as happy with either of them? \n\n* * * \n\n\"Okay, you moped around all afternoon yesterday once the admiral left,\" Mrs. Layne told her daughter the next morning. \"I'm not going to let you do that today.\" \n\n\"What are you talking about?\" Rebecca asked. \"I wasn't moping.\" \n\n\"No, of course, not,\" Mrs. Layne said flippantly. \"I must have mistaken that sour look on your face. It was really happiness, wasn't it?\" \n\nRebecca shot her a look of annoyance. \n\n\"I saw your face light up, even if only for a second, when you first saw him. Do you really believe what you told him about a patient falling in love with his nurse?\" \n\n\"I've known a couple of nurses it's happened to,\" Rebecca reported. \"In one instance, the patient died; the other he was just using her and it didn't last long.\" \n\n\"Was either of those gents an admiral in the U.S. Navy?\" \n\n\"No,\" Rebecca frowned. \"Why should that matter?\" \n\n\"Are you kidding? A man who has made a career out of the navy and worked his way up to the rank of admiral at such a young age; I think there's a bit more stability there, not to mention integrity. Despite what you told him, I can tell you feel the same about him as he does for you.\" \n\n\"Mom, I just don't see myself as an admiral's girlfriend. I'm afraid that the age difference would make it seem like I'm his mistress.\" \n\n\"Only if he treats you that way. And I don't think he's the kind of man who would do that.\" \n\n\"And you can tell that after being with him for five minutes?\" Rebecca asked facetiously. \n\n\"I'm a pretty good judge of character,\" Mrs. Layne reminded her daughter. \"I'm also going by what kind of patient you say he's been.\" \n\nWith a smile, Rebecca mused, \"He has been a nearly perfect patient.\" \n\n\"Then what makes you think he would be any different as a boyfriend or significant other?\" \n\n\"I don't know, mom,\" Rebecca sighed, indecisively. \"I've never had this happen to me before. I've never been attracted to a patient, never interested in another naval officer, and certainly not an admiral. I can't even remember having a man this attracted to me. I don't know what to do.\" There was misery in her voice. \n\nHer mother sat beside her and draped her arm around her daughter's shoulders. \"This could be a once in a lifetime chance to be with the man of your dreams. Don't think of him as an admiral or a patient. Ask yourself, as a man, is this someone I could be happy with for the rest of my life\u2014if it came to that. If he is, than don't waste time moping around here.\" \n\n* * * \n\nStill disappointed with the outcome of his trip to North Carolina, Nate's suggestion continued to infuse itself into Sadler's thinking. The more he considered it, the more confused he became about his feelings for Rebecca. Her shunning him again became a gateway for notions about more sex with Juliette and Nate to invade. Then he wondered if he was now questioning his feelings for Rebecca because he really was uncertain or because it was a contrived way to convince himself he should have sex with them again. \n\nContinually mulling this over, his overwhelmed brain finally shut down and he drifted off to sleep. \n\nHe awoke in the morning to a strange quietness in the house. Finding this unusual, Sadler got up to investigate. He didn't bother looking in Rebecca's room because he disappointedly knew she had not returned. \n\nThe admiral was further perplexed to notice that Juliette's room was vacant, nor had her bed even been slept in. Moving on to Nate's room he was both bewildered and aroused to see the two nurses asleep together in bed, naked and very close. He wondered if this was a recent development, the result of their foursome, or if they had already been so familiar with each other. It also made him curious about Rebecca. Were there other things about these nurses he should know? \n\nHowever, that all became secondary as he watched the two beautiful woman so innocently sleeping. Nate was on her stomach, her head turned toward Juliette, who was on her back, her breasts standing up proudly and each topped by a hard, pointy nipple. His cock sprung to rock hardness and pressed desperately against his Navy sweat pants. He couldn't help but gently sit on the edge of the bed at Juliette's shoulder, and magnetically lean over and gently nibble on that beckoning nipple. \n\nNaturally, it caused Juliette to stir. She arched her back sending her breasts higher up. Sadler's hand slid down her rib cage and abdomen to her panty-covered pussy. He kissed her good morning, she smiled and kicked away the covers, spreading her legs in an invitation. Pulling aside the leg of her panty, he swooped in with his tongue to taste her sweet pussy. \n\n\"Mmmhmmm,\" Juliette encouraged. \n\nFor added eagerness, the admiral slid his middle finger into her vagina to compliment his tongue on her clit. Juliette squirmed and moaned, though she tried to do it softly not to disturb her still sleeping friend. Sadler hadn't had much experience at cunnilingus, so he lapped at her like a puppy, occasionally pulling her vulva with his lips. A quick glance up showed a smile of enjoyment on her face despite his experience level. It was becoming difficult for her to remain still or quiet. \n\nAs a result, Nate was beginning to stir. If she was surprised to see the admiral's face pressed against her friend's pussy, she didn't show it, except to smirk. Juliette turned her head toward Nate and the two clasped hands. Nate moved in to kiss Juliette, tentatively at first, but it didn't take long for it to progress into full passion. About this time, Sadler started finger-fucking Juliette harder. Nate's hand also found its way to Juliette's nearest tit. \n\nLifting his head, Sadler saw the two women engaged in mouth action, which further aroused him. When Nate saw his face, she couldn't help but swing her head to his until their lips met. She then went down on Juliette, and she and the admiral took turns with their tongues on the other nurse's vagina, their two tongues frequently clashing. They found themselves erotically licking each other's tongues. \n\nJuliette reached out to rub Nate's back and ass, but with all the attention on her pussy, it was hard for her to concentrate. She came most satisfyingly. \n\nNate grabbed the admiral's hand and sucked Juliette's juices off of her fingers. He arose to a kneeling position on the bed beside Juliette and facing Nate. When she finished with his hand, Nate reached out and yanked down the front of his sweat pants allowing his massive hard on to spring free. Juliette grabbed for it, holding it near the base, while Nate homed in on it and slid her lips over it. Working in tandem, Nate sucked, and when she pulled her head back, Juliette moved her hand up. The two eased into a suck and jerk movement. \n\nSadler removed his shirt while enjoying this attention. Juliette sat up and took a turn fellating the gorgeous cock. Nate bent down and licked Juliette's pussy some more until it was her turn to suck him again. While she did this, the admiral leaned over to kiss Juliette. \n\nThe two women then repositioned so they were both on hands and knees taking turns on the admiral's dick. At times, they were both able to get mouths and tongues on his shaft at the same time. It was so pleasureful; Sadler thought he might pass out. \n\nThe two women had so craved attention from the admiral that they could not help but devour his wonderful cock. Before the morning was finished, they hoped to do much more than just suck it. To that end, they maneuvered him to a supine position while one or the other still managed to keep a mouth on his pole. But once there, Nate straddled his face while Juliette sat on his dick, not yet inserting it. \n\nSadler eagerly ate Nate's juicy pussy. \n\nUp above, Juliette was pulled to lean back as Nate's hands reached around and covered her breasts. Twisting her neck, Juliette and Nate engaged in another mouth-watering kiss. As if by magic, with all of Juliette's gyrations, the admiral's cock found it's way inside her desperately yearning vagina. She naturally began bouncing on it. \n\nFor his part, Sadler fucked back eagerly, and despite the euphoria both nurses were feeling, they each managed to keep an eye on his incision. All was good. \n\nTrying not to smother him, Nate couldn't help but pivot her hips back and forth rubbing her pussy against his chin, mouth and nose. He easily kept up with the program. \n\nFinally, as Juliette had stepped up her bouncing, they heard the pitch of her moans changing, and a minute later she was coming vehemently. Nate reached out to tame her. She didn't want this fervor to injure the admiral\u2014at least until she had her turn. She thought that, but didn't really mean it. \n\nWhen finished, breathing heavily, Juliette rolled off and lay beside the admiral. \n\nSadler's sweat pants were still down around his knees, so he kicked them off, then arose onto his knees. Nate crazily sat on Juliette's face and went for the admiral's cock to suck and lick all of her girlfriend's cum and juices off. Juliette did not hesitate to ram her tongue into her friend's twat. \n\nHis dick shiny clean, Sadler slipped off of the bed and walked around to the other side where he got back on, again on his knees and knee-walked to Juliette's head, stopping with his thighs on either side of her pate. He aimed his cock at Nate's hole, made wet by Juliette's saliva. Seeing what he was doing, Juliette spread Nate's cheeks with her hands giving the admiral a clear target. He then slid right in. \n\n\"Oh, yes!\" Nate cried. \n\nJuliette tilted her neck so she could swipe the admiral's penis as he pumped in and out of her friend. She alternated tonguing Nate's clit. \n\nAs sexually charged up as Nate was the stimulation from both Juliette's tongue, and more importantly, the admiral's magnificent cock filling her completely, she came in a torrent, bucking as wildly as she could given everyone's positions. \n\nThe spasms of her pussy acted as additional stimuli for Sadler and he felt that familiar, welcomed tightening in his balls. He would have loved to fill her with his seed, but he erred on the side of caution and pulled out just in time to spray her back and ass. His wild shots produced enough thick semen that some of it rolled down her ass crack and vagina and dripped on to Juliette's mouth. The woman's smacking of her lips suggested she was enjoying the cum cocktail. \n\n\"Well, well, what do we have here?\" \n\nThe three looked up sharply to see Rebecca standing in the doorway. \n\n\"When the cat's away . . .\" It was amusing to see the stunned expressions on their faces and it was a toss-up as to who was most surprised. \"I should hang you all from the yardarm!\" \n\nThey tried to issue a host of lame excuses, but she cut them off. \n\n\"Don't anyone say it's not what it looks like,\" Rebecca warned. \n\n\"You're right,\" Sadler spoke up. \"It is what it looks like. But there is a valid reason, a rational explanation.\" \n\n\"Please, Rebecca, let us explain,\" Juliette pleaded. \n\n\"Nothing to explain. You're all consenting adults here.\" \n\nThe admiral backed off the bed and stood, his cock still dripping the last few drops. \"We need to talk, Rebecca.\" \n\n\"No need, admiral.\" \n\n\"That's an order, ensign,\" he commanded lightheartedly. \n\n\"I've been driving for the last four hours. I'm tired and I'm going to sleep a while. Maybe later.\" With that, she turned and left. \n\nSadler quickly retrieved his sweat pants, jumped into them and followed. In Rebecca's room, he said, \"This will only take a minute. First of all, I'm glad you came back.\" \n\n\"So glad that instead of waiting for me, as you said you would, you came back and jumped into bed with my best friends.\" \n\n\"You didn't give me much hope,\" he explained as non-argumentatively as he could. \"I guess my mood when I returned was such that Juliette and Nate felt it necessary to question me about it. They perceived that I was downcast because of you and they forced me to resolve in my own mind whether my feelings were real or because you were the last one of the three I had sex with and the one I came with and what influence that might have had on me.\" He paused knowing that what he was about to say might sound contrived and he hoped his voice didn't reflect that. \"They further suggested that I have sex with them again to see if . . .\" He trailed off because Rebecca's expression showed . . . what? \"No, they really did. Go ask them.\" \n\n\"Admiral, you really don't have to explain. You said you love me, I blew you off, I went away, and Juliette and Nate were fair game.\" \n\n\"Nothing happened with them until this morning. And it was strictly a test.\" \n\n\"All very clinical? No enjoyment, huh?\" \n\n\"Well, no, of course I enjoyed it. But it was just sex. And that's the point. With you, it's not just about sex. It's much, much more. I felt something with you I didn't feel with them just now. It was always you from the start. Your angelic face was what my eyes first saw when I came out of anesthesia. You're the one I look forward to seeing every day.\" ",
        "\"So, it sounds like it is infatuation with your nurse.\" \n\n\"No, no, it's not,\" he said as sincerely as he could. Sadler paused to think about what else he could say. \"Why did you come back?\" he asked, shifting focus back to her. \n\n\"Look, I'm tired,\" she said, dodging the question. \"I've got to sleep. And think. We'll talk later.\" \n\n \n\n* * * \n\nSadler turned to exit the room and he could hear footsteps scurrying on the carpet. He smirked, knowing that Juliette and Nate had been eavesdropping. On his way back up to his bedroom and through his shower, he wondered how a man who had achieved so much so early in life, rising to the position of rear admiral at a young age, could be so clueless about handling a woman. What was worse, he couldn't for the life of him figure out what it was he had done or not done properly that resulted in this current dilemma. It seemed that the Navy he loved so dearly was becoming a red herring. \n\nSo preoccupied was he with this, he got only as far as slipping on his boxers before planting himself in the reading chair in his bedroom to further contemplate this. When he thought to glance at a clock, two hours had passed. Without further thought, and no consideration for his attire, he walked down the stairs to Rebecca's room. She was still sound asleep, so he took a seat in the chair in her room and watched her. \n\nShe was more beautiful than any woman he had ever known, as intelligent as any man or woman he knew, and based on their one experience, the sex was great. He thought about that night and his threesome with Juliette and Nate. While this morning had been quite exciting and satisfying, the fact that it was a threesome added an unbalanced element that made it unequivocal. \n\nSadler wanted to believe that making love to Rebecca alone would outshine the threesome. Was it merely wishful thinking or . . . what? Of course, he knew there was only one way to find out, and he found himself easing out of the chair. At the foot of her bed, he halted, fearing that this aggressiveness might backfire. However, the more he watched, the more he wanted her. Sometimes, you just had to go after what you wanted, so he threw caution to the wind and crawled softly onto the redhead's bed. She was lying on one end covered to her waist and facing away. \n\nGently, he placed his hand on her back and tenderly rubbed up and down, allowing it to drift under the cover to her rear. He leaned in and kissed her neck, causing her to stir. \"You are so beautiful. And sexy,\" he whispered. \n\n\"I don't feel sexy,\" she mumbled. \n\nNibbling on her ear, he added, \"You are that and so much more.\" \n\nShe shivered from his lips on her lobe. \n\nSadler kissed his way down, pushing the blanket off of her rump. He kissed her cheeks, even spreading them and kissing there. She offered no resistance, even moaning her enjoyment. Aggressively, he gripped the waistband of her panties and tugged them down, his mouth never leaving her inner section. She spread her legs slightly and lifted her rear, offering better access. She tasted delicious. \n\nRebecca grabbed his head urging him up. She rolled onto her back as he scooted forward until their lips met; an even sweeter delight. Again, she let her legs drift apart drawing his hands to her pussy like a magnet. She reached up and cupped his head keeping their lips firmly pressed together. It evolved into something more passionate than either had ever experienced. \n\nAs the kiss escalated, so did Sadler's fingers on Rebecca's pussy. As she squirmed, her hand sought the huge swell in his shorts. It felt divine. In seconds, her fingers had snaked underneath his waistband, pushing it down to expose his hard cock. Having this raw meat in her grip was breathtaking and she loved stroking it. \n\nBut it felt so good and Sadler was already so aroused that he was afraid if he allowed her to handle him much more she'd have a mess in her hands. Instead, he sat up and slipped between her legs. Her pussy was wet and shiny and he couldn't help but touch his hand to her again. Likewise, she wouldn't let go of his raging hard on, and it almost became a contest: her pulling on his cock, him fingering her pussy. \n\nTo prevent any prematurity, Sadler bent down to again enjoy the succulent flavor of Rebecca's tasty lips. The positioning happily caused his ready penis to slide into her waiting vagina as though it had a purpose of its own. Regardless, she purred her delight. Naturally, he began thrusting, slowly, steadily, and purposefully; as though only he could do it. \n\nSadler pumped away to Rebecca's accepting moans. It felt so good, so natural, so much like it was supposed to be that he lost control, pulled out and spurted cum all over her pussy and abdominal area. Surprisingly, his erection did not deflate so he slid his cock back in and continued fucking her, knowing that he needed to bring her to orgasm. \n\nNow, he thrust harder and faster. Rebecca threw her head back loving every moment that he was inside her. She reached down, dipping her fingers in the puddle of semen on her belly and used the gooey liquid to flick her clit. The combination of his penis and her cum-coated digit had her climaxing in seconds. She couldn't help but to manifest that orgasm with loud moaning and groaning. Throwing her head back, something in her subconscious reminded her that they were not alone in the house, but at the moment she could have cared less. \n\nRebecca's coming was an aphrodisiac in itself, and much to Sadler's surprise, he pulled out and dribbled more cum on her already saturated abdomen. The mewling from her throat signified her pleasure over his second deposit. Lifting her head she saw his still hard cock wet and shiny with a cocktail of their juices. She reached out and grabbed the base of his shaft so as not to disturb the coating, and used it to pull him it to her. She guided him directly into her mouth so she could slurp the delicious mixture off of him. \n\nAny notion his cock had of deflating was dashed when she announced, \"I want to come again.\" \n\nSadler was only too happy to oblige, surprised by his own stamina, yet knowing it was because he was making love to the love of his life. She was still on her back, so he lifted her leg and entered again from behind. \n\n\"Fuck me hard,\" Rebecca demanded. \n\nSadler complied causing her to writhe around. He reached for her clit, which was already sensitive, but she had to grab his hand to temper the pressure he applied. Again with no concern for anyone else in the house, Rebecca cried as though in agony, but it was really the sweetest, most intense pleasure she had ever known. In record time, she exploded again, this time more profound, more ardent, more impassioned. \n\nSweating profusely and breathing heavily, having no patience to calm down, Rebecca grabbed the sides of the admiral's head and pulled him up, devouring his lips. \n\nSavoring the kiss, Sadler did not pull out of her. He had no more energy to continue, even though he was still hard, and yet, he felt he belonged inside her. \n\n\"Do you love me?\" Rebecca asked. \n\n\"More than you could possibly imagine.\" \n\n\"Do you still want me?\" \n\n\"There is nothing I have ever wanted more.\" \n\n\"Then I'm yours as long as you'll have me because I do really love you, too.\" \n\nTHE END"
    ],
    "authorname": "RonCabo",
    "tags": [
        "oral",
        "handjobs",
        "girl-girl"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/making-waves-2"
}