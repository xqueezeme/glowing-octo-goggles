{
    "title": "Egg Ch. 03",
    "pages": [
        "The dream shifted around like oil on top of water. Jacob felt the swirling, nauseating him as he spun in it. He didn't grasp what was going on. Even as he cried out in frustrating terror, there wasn't anything he could do. Nothing worked for him. \n\nFalling asleep had become an utter nightmare for him. From watching as the alien snake took Shana, to be terrified of the pulsating cocoon in his parent's shabby room, Jacob found himself alone. For three nights he had lain exhausted in bed, confused as to what his life had become. \n\nWhen he did wake in the morning, it was to a blaring alarm. With a groan, he rolled over in bed and groggily walked through his room to the bathroom. There, he relieved himself before getting into a cold shower. \n\nSleep dissipated rapidly under the torrent of frigid water. With a twist of a knob, the water quickly turned hot and he relaxed a moment before washing himself. As his mind cleared, he became increasingly aware that his first day of school in almost two weeks started today. A sudden nervousness grew in him and so he tried to think of other things.\n\nThe cocoon in his parent's room only came to mind. An alien looking thing for sure, he hadn't gone into the room since it had hissed at him two days ago. As curious as he was, he didn't investigate due to the possibility of unknown dangers.\n\nFinished with his shower, Jacob completed a new routine for his morning. Getting dressed in fresh clothes, eating a healthy breakfast and packing his book bag. He remembered to get his doctor's note that specified today's return. At least the doctor cared. Everyone else had abandoned him. His dad was late coming home, and the alien had forsaken him to become whatever horror it wished. With a sigh, he escaped his home and headed for school. \n\nSilverton High wasn't in any way shiny for its name. Even when one walked past well-manicured lawns and up polished concrete steps, the sole lustrous thing in the place were the trophies that greeted the students in a massive display case right in front of the doors. On each side of the case was a door to the main office, which Jacob chose to use the door on the left. Thankfully no one paid mind to him as he walked through the crowds at the entrance. \n\nThe high school's age was evident in the main office. Built years ago, everything in the office was stained dark as the wood took up almost every seeable surface. The giant counter that greeted anyone looked like a clerks counter one would find in a courtroom. Six openings allowed for school officials to talk to students or parents but currently, these were all taken. Jacob leaned against a wall and grimaced as the bell rang signaling the start of class. His hope had been to be seated in class before anyone recognized him. Now, he would have to walk in with all eyes on him. \n\n\"Next,\" a voice called out. \n\nJacob walked up to the only opening passing a woman who looked disheveled. As he walked up, he saw etched on a golden plaque on the right of the opening the name Grace. The red-rimmed blonde peered up at him. She had emerald green eyes and red shiny lipstick on. To Jacob, Grace looked young enough to pass as a high school student and the reaction in his groin surprised him. He couldn't identify a time looking at a girl or anything in that matter out in society had elicited a response. Becoming aware quickly of how the tightness in his pants increased, Jacob smiled. \n\n\"Hey there,\" she said. \"I don't think I've seen you before.\"\n\nThat stung, and he winced with those words. She didn't seem to notice, and he kept the smile on his face. \n\n\"Yeah, you have,\" he said. \"It's me, Jacob.\"\n\nHis voice couldn't have been any meeker if he tried.\n\n\"Jacob Grand?\" She asked with surprise evident in her voice. He saw her stand and take off her glasses before cleaning them. Once back on she let out a squeal of surprise. The whole office had gone quiet with noise. He apologized, and everyone continued to stare at him. \n\n\"Come around quick,\" Grace told him, but he didn't really hear her. People were staring at him. Each glare a dagger into him, a reminder of how his presence had interrupted the day to day dealings of the office. Feeling exposed, he moved quick to the side where Grace authorize him to go behind the counter. She ushered him into a side room.\n\n\"Are you really Jacob?\" she asked him. \n\nHe pulled out his doctor's excuse and held it out to her. Right now, he wanted to escape the room and subsequently the school. Besides, now that he was isolated with a woman in a conference room, his nerves began to get the best of him. She accepted the note from him and read it. While she did, Jacob drank in the sight of her trying to calm his shaking. \n\nBefore, he could only see the blonde had her hair over her ears and the red-rimmed glasses shielding green eyes. Closer now, he could see that underneath, her hair was dyed jet black. Long and straight the tips of it went past her breasts. Breasts that were concealed by an ornate white blouse. The ornateness evident in the sewn patterns. \n\nThe blouse went down and he followed it gigue line until it changed into a black skirt. The skirt was short and there was scant bare skin as that shown she was wearing stockings. Polished black shoes were on her feet, but her legs enticed him.\n\n\"Ahem,\" Grace said getting his attention. His eye snapped back to her. \"My, I can't think of a time the massive Jacob would dare be seen checking a girl out.\"\n\nHe felt the heat rise in his cheeks at getting caught. The rightness of her statement to expose him to a feeling of embarrassment he wasn't used to. \n\n\"I uh,\" he started. \n\n\"Don't worry about it kiddo,\" she said with a gleeful laugh. \"It's surprising is all. What happened?\"\n\nHer nonchalant dismissal of his staring dalliance made him feel for a second like he should tell her what happened. Something told him that it wasn't the time to. \"I don't know,\" he replied. Trying to stop to keep his voice steady and from failing. \"Just woke up like this one morning. Doctor's couldn't tell me and kept me out of school for the past two weeks.\" A gaze swooped all over his body. He got the impression of being sized up. \n\n\"I hope its permanent,\" she said and then she suddenly blushed. \"I'm sorry, I shouldn't have said that.\"\n\nA compliment, even if it needed to be taken back, hit him in a queer way. Receiving praise from a woman for the first time in his entire life sent a shockwave of confusing emotions through him. \n\n\"At least one thing is still massive,\" she spoke. He looked at her and saw a look of amazement on her face as her jaw slowly dropped. Then realized her gaze was on his crotch. \n\n\"Class,\" he stammered out suddenly to get control of the situation. The office was just a door away. \"I have to get to class.\"\n\n\"Do you?\" she said with a lick of her lips. Jacob saw the sudden onset of wanton lust in her eyes. Unfortunately for him, he realized the situation did need to end for both of their sakes. \n\n\"Yes,\" he said. \n\n\"Very well,\" she said with a look of disappointment on her face. \"Let me get you a pass and call your teacher.\"\n\nShe got up off the chair and went to leave the conference room. \"Whats your teacher's name?\"\n\nJacob though for a second before he responded.\n\n\"Ms. Clemens,\" he replied naming Biology teacher. \n\n\"Bet she'd like to examine you,\" Grace replied before walking back into the office. The double meaning wasn't lost on Jacob and the throbbing of his cock was beginning to become unbearable. \n\nSitting in the room for the moment, he struggled to direct his thoughts from being sexual. Three days of abstinence had been unbearable ever since the alien had awoken it. Shaking in frustration, he waited until Grace came back into the room, the massive door shutting behind her. \"Well, heres your note,\" she said holding it out to him. Jacob took it tentatively trying not to touch her hand. She threw that out the window for him when she was suddenly up in his personal space. \"This piece of paper is my number.\"\n\nHe couldn't move as her hand shoved the piece of paper into the pocket of his pants. She aggressively rubbed the length of his cock through the fabric of his pants. \"I don't typically do direct,\" she said. \"But we are close enough in age where you need to contact me when you can.\"\n\n\"I will,\" he said trying to relax. \n\n\"Now get to class Jacob,\" she said. \"I am genuinely disappointed that we couldn't get better acquainted right now.\"\n\nThen she was gone, and Jacob let out a sigh of relief. Feeling constricted, he waited for a few seconds to get his throbbing cock to dissipate. After thinking of his dead mother, his dick did soften. \n\nWalking out of the conference room through a side door, he found himself thankfully in empty hallways. The walk to Miss Clemens class took him only a few seconds, and when he arrived he again found himself panicking. \n\nWhat would everyone say when they identified him? His thoughts reeled on that one question and after five minutes he almost drove himself mad trying to work the nerve up to go in. With a major sigh, he took the plunge and turned the knob. \n\nMiss Clemens had been talking when he walked in. Standing at the board, she was wearing a red pantsuit that hugged her curves. Her ass looked amazing, but his thoughts couldn't stay on that for long. She was quick to comment on staring and often had presented herself as purveyor of chastity. Jacob had long suspected that the woman enjoyed the stares. He did know for certain she loved to chastise the boys when caught.\n\n\"Can I help you?\" she said walking briskly over to him after getting up from her desk. He kept his eyes locked onto her blue ones as she walked up to him. \n\nHe held out the note to him which she snatched. Jacob seized the second while she read to look over to his classmates, all staring back in earnest curiosity. Not that they didn't know him, but his lumbering frame was no more.\n\n\"Take your seat,\" she said after a moment and that was that. Jacob walked to a seat at a table and she at her desk Evidently everyone was doing textbook work and she had been giving instructions when he walked in. Textbook work was something that Jacob would know easily before completing. \n\nEven though most students occupied personal single seat desks, Jacob never fit into one of them. As such, the school had forced him to sit at a designated table provided in all of his classes. Today he triumphantly sat in one. Taking out his book, he looked to the board where the instructions for the day's assignment had been written. \n\nNo one seemed to care about him and after the class ended. Jacob had been apprehensive as soon as the bell rang. His following class, History, meant that he would have to deal with Billy. Sighing, he moved out of the classroom, with no harassment from anybody. \n\nIn history, Jacob took the chance and sat in a desk. As the class filled and Billy came in, Jacob hoped no one would call attention to him. \n\n\"Mr. Hayes,\" a student called out. \"Who's this kid?\"\n\nHayes, an older man who was chubby and balding, came into the classroom to investigate. \n\n\"Who are you?\" Hayes asked. Jacob felt totally exposed but since he would have to respond, he stood up. \"Jacob,\" he said.\n\nThere were a few audible gasps in the room as students began recognizing him. Hayes squinted at him. \n\n\"What happened?\" Hayes asked. \n\n\"Lard ass got liposuction,\" Billy cried out. The class laughed, but Jacob stood unmoved by it, as he usually would. Something snapped in him, though. Before there would have been shame turning him to stone, but now, anger rose in his chest. A feeling that never had been present before. \"Yeah, from your mom's lips,\" Jacob said turning slowly and defiantly to Billy. He had said it when the laughter had begun dying down.\n\n\"What did you say, fat boy?\" Billy screamed angrily. Jacob noticed Hayes had backed away a bit. \n\n\"I said,\" Jacob issued his retaliatory statement once more. \"Your mom sucked all the fat off me through my cock.\"\n\nThe class may have completely died down after Billy screamed, but now they were roaring in laughter. Billy wore an expression of astonishment. Jacob turned back when the bell sounded and sat back in the desk. With his beating heart, he took out his book, and Hayes had to wait until the class ceased in their laughter before the class could begin. \n\nHistory happened to be something Jacob did enjoy thoroughly. So much so, that he had already the textbook from front cover to back a few times this semester at school. These facts left Jacob quickly bored as the teacher droned on. Hayes maintained a monotone voice which made it difficult to stay awake for class, Jacob began drawing in a private notebook he had. Begrudgingly slow, the bell ending class finally rang and Jacob was out of the class quickly. \n\nHe found himself in broad halls and moved through them trying to get away from the history class as fast as possible. He had forgotten about his frame briefly as his fear overran him. Bumping into people and getting angry comments, he moved through the halls clumsily towards a cafeteria. \n\nInside the cafeteria, Jacob found a corner and practically hid from everyone. His social anxiety in dealing with people eventually overloaded and he left to find the library.\n\nThe library of the high school wasn't extremely big. It contained a main desk once one walked through the doors to it. Off of that, was only about thirty shelving units to support books. Not that it mattered, Jacob wouldn't be wandering through the aisles looking at the \n\nInstead, he planned on sitting at a desk and relaxing. As he walked the librarian nodded at him and he found out quickly he was almost alone in the place. Another student wandered through the aisles and Jacob saw no one else. Going to a secluded corner, he found an empty chair and sat down in it. \n\nThe feeling of sinking into a cushioned chair without breaking it made him utterly relax. The library hadn't been an option to hide in previously with his frame. Now that weight wasn't an issue. He was content to relax through lunch before his next class. \n\nJacob fell asleep in the chair. As fitful as sleep had been lately, he didn't find solace with his current nap. Everything in his dream happened to be black. Various shades of black swirled like oil, but nothing took shape. His mind drifted him out in this ocean of nothingness and it troubled him. \n\nWhere was she? The alien goddess who had promised him untold pleasures and changes. Not in person or his dreams now and it made him feel truly alone. Abandoned even. Like his mother who passed or a father who ran. Mentors who never appeared. It felt as if he should have stayed fat. At least there had been food. Then he was back in the living room, looking at himself and Shana. \n\nSeeing both of them naked made him elated and excited at the same time. The genetic material was present, and the woman now stood ripe for assimilation. A drive of instinct pushed but a hesitation stood in the way. Her mate, its mate, wouldn't understand. \n\nJacob didn't understand the dream. It didn't make sense to him as he watched. His mind clicked as the scene unfolded and he realized that right now, he was experiencing the other side of the action. \n\nHe was the alien. Who hesitated on wondering if the human she had chosen as a mate would be able to handle what was about to happen. Her own basic drives though won out. A gamble for success over failure too much to pass up. \n\nThe human woman had no idea what happened as the strike transpired. An event that needed to be quick in its execution. Any faltering could spell doom to the entire thing. As much as she wanted to keep her mate informed of the biological drives, she did not have the time to explain. With his fragile psyche, that which it was, she worried being absent from him so soon would damage him. Thankfully, she had been able to change is genetics a tad. It's how this woman had come to him. Special pheromones that enticed. \n\nShe dragged herself and the woman quick upstairs. Already she knew the boy's room would be off limits. A pause at one door told her that the room was heavily used. It must belong to the patriarch of the place. Flicking her tongue to test the air, it was apparent to her this room's aura encompassed pain and suffering. Shanda struggled in her coils, reminding her of the lack of time. Whisking down the hall, she discovered a room that held no scents. Even though she scantily saw the furnishings, she did note that the room looked pleasant. With a finality of dismissal of it, she hauled herself up against a wall. \n\nShanda had begun struggling in earnest. A fact attributed to the pliability of her tender flesh. That bothered her a bit as her body currently could sustain damage easily. \n\n\"Relax,\" she said to the woman. When she spoke though it seemed to ignite a serious panic in the woman. She didn't know what to do, so she did the only thing she could think of. \n\nThrough her slit, a tentacle snaked out and it felt to Jacob as if he was clenching his own cheeks. The sensation was weird and he felt like he sported an erection. Instead, with her body, he knew a tentacled appendage sprouted out before snaking around the girl. It honed in on his genetic material in her bowels and due to the looseness of her sphincter worked itself into the orifice with no resistance. Jacob felt like he was sliding his own cock back into the warm sheath of flesh. \n\n\"Now relax,\" she said again and the tentacle surge in circumference. A reverberating moan sounded and the woman went limp in her coils. It surprised Jacob that Shanda did moan. \"Ah yes, such a human with sensitivity. I am delighted to have selected you as my catalyst.\"\n\n\"Please,\" the girl begged. \n\nIn an effort to gain more traction in assimilation, she had to persuade the woman to agree to offer herself to the pleasure. In payment, an earthly form more mutually suitable between Jacob and her would be gained. \n\nJacob tired his best to interpret the dream. What he gathered is that somehow he was getting a play-by-play of the entire scenario. Though as of now, he wished he wasn't experiencing all of the pleasure that he was. Somehow he knew if he was awake, his cock would be straining in his pants and probably close to causing a mess. Hopefully, that didn't happen in his sleep either. \n\n\"What is it that you want?\" she asked Shanda.\n\n\"Don't stop,\" the woman pleaded. Suddenly she felt inquisitive about Shanda. \n\n\"You want pleasure?\"\n\n\"Definitely,\" she said with a throaty moan. \"I can deliver that,\" she replied. \"For a price.\"\n\n\"Whatever you want,\" Shanda replied with a groan .\"Never let it stop.\"\n\n\"Why?\" the alien asked. Jacob found himself bewildered too. Shana never asked what the price was. Even as the sacrifice moaned in enjoyment to the writhing \n\n\"I'm so lonely,\" Shana said once the alien ceased anything to give pleasure. \"Only pleasure makes that go away.\"\n\nJacob understood that mentality. Food used to be to him what sex was for her. A feeling to bury the hurt and pain. Jacob felt guilty that this woman was in the clutches of the monster snake that had her. \n\n\"I will grant you infinite pleasure,\" she replied after a bit. Jacob didn't get any indication that the alien understood. There was a feeling of excitement though that he could.\n\nThe next physical feelings were perverse to Jacob in the way he couldn't describe. An uncomfortable pressure in his anus happened and he knew then more tentacles sprang forth from the sex of the creature. He felt more pressures of pleasure as the tentacles joined in penetrating different orifices now. Nothing was safe, from the mouth, anus, and pussy, to the fact that the tentacles penetrated the ears, eyes and even nipples. The latter being especially exquisite to him as they slid into the hard flesh. The alien woman also felt pleasure with the penetration, but Shanda was definitely getting the best bargain here. The lady was shaking uncontrollably and screaming in what seemed like ecstasy. The sex may have lasted for a bit, but then the real horror for Jacob began.",
        "Jacob can't describe to himself when the change happened. He just felt as the alien's body began hardening on the outside. Sudden pulses of power heralded unknown growth. With a sudden urge, the coils loosened a bit until Shanda's head became exposed. Jaws came apart widely and the alien began the process of swallowing the girl. \n\nThere wasn't any struggle. A gag as the woman's diverse tastes hit the tongue but soon the girl and penetrating tentacles found themselves disappearing into the maw. The alien swallowed, uncoiling herself as she went down the body of Shana. The head then shoulders, which took a bit of twisting to get past, The breasts were the hardest, each round globe needing to be swallowed first. Once past, swallowing the rest of the girl was easy. A change began happening. No longer was sight possible, a sense gone with a sudden onset of black. Then everything began feeling loose as the body dissolved away. Somewhere in it, the feeling of having a form burned away until a numbness took over. Suddenly, like a socket being plugged, Sandra was gone and all that remained was her. Her and the pleasure. \n\nWhite light blinded him in his dream with it. A sensory overload that seemed to take an eternity to dissipate but when it did, he found that in the dream he suddenly discovered himself feeling suspended in liquid. \n\nA warm liquid that beat with the pumping of blood. He didn't feel anything else in the dream for a long time other than some pain as bones cracked and skin melted away. Whatever soup she was in, a lot was going on right now. Then Jacob got a direct address from her. \n\n\"I hunger,\" she spoke. He didn't know how or why, but he could feel an aching in her body. \"I require more material.\" And then Jacob heard his name. \n\n\"Jacob,\" the voice said, a concerned woman's voice. The dream tore apart, and he came out of sleep. \n\n\"Wakey wakey,\" the girl said, and the first thing Jacob saw when he opened his eyes was glossed ruby lips. As his vision cleared, Grace came into focus.\n\n\"What's going on?\" he asked blinking his drowsiness away.\n\n\"You were asleep in the library,\" she said with a smile and leaning down to him. He caught a whiff of her perfume, and it immediately registered not in his brain but throbbing cock of how nice it smelt. \n\n\"And having good dreams.\"\n\nJacob took a moment to think. He knew she had already made a pass at him. In fact, now that she was so close he bet whatever the alien had done to him affected her. The hand now on his leg clued him in on that too. A severe throbbing began in his cock as it strained against the fabric of his pants. Nothing in his life had prepared for a moment of wanton lust from a woman.\n\n\"A gorgeous woman will do that to you,\" he said before he thought about the audacity of it. Who the hell was he to say something like that to an administrator? An upper lip disappeared in succession as a tongue went across as Grace licked her lip. \n\n\"Gorgeous huh?\" she said with a weird glint in her eye. \"You have a lot to learn about women Jacob.\"\n\n\"Why don't you teach me?\" he asked again without thinking. Eyes went wide with the suggestion. His own stared intently at her until her focus came back. \n\n\"I gave you my number to do just that,\" she said with a sudden hiss and seizing his cock in his pants. Her warm fingers around his dick made him groan in impatience. \"Better yet, being that it's so late in the day, meet me out near the track field tomorrow after school and we will get to know each other.\" \n\n\"Why not now?\" he said amused with how she responded. The surge of confidence made him feel unstoppable. He reached out to touch her leg. Much to his astonishment, she let him and he shook as his hand touched bare skin. Fingertips barely stroked the silky skin of her inner thigh, and she moaned while bitting her lip. It didn't unnerve him keeping his eyes locked into green promises. With a sudden surge of bravado, he brought his hand up to touch her heat. Much to his surprise, he found his fingers in a soaked wonderland as he probed around in the unseen treasure.\n\n\"You little shit,\" she said with a laugh but standing straight up and removing her hand from his pants. He followed suit and pulled his hand away from her sex. \n\n\"Better keep it down,\" Jacob said shifting to stand up himself. \"I know, and it's too late. This library is kind of small.\"\n\n\"Somewhere else?\" Jacob asked feeling a drive he hadn't before. \n\n\"Its close to the end of the day. Best I can do is write you a note for your last class,\" she said delivering him a now disappointed look. \"There isn't enough time for us to get properly introduced.\"\n\n\"I agree,\" Jacob said allowing her off the hook. There was always tomorrow. Feeling the boldest yet, he held up his hand to her face. \"Why don't you clean my fingers off?\"\n\nGrace was obviously conflicted to Jacob. The bottom lip disappeared as she bit it. Then she licked his finger, wrapping her tongue around them with a moan. Dizziness washed over Jacob as he imagined her tongue rolling across his cock like that. Cool air caressed his fingers as her warm tongue disappeared.\n\n\"I don't dare myself more,\" she said. \"Let's get you to class.\" \n\nJacob's last class was his automotive class. When he went in with the note, everyone greeted him. The teacher even stopped teaching for the rest of the day as everyone prodded him for answers. Surprisingly to Jacob, he found he liked the attention even if he was shying away from it at many points. Thankfully no one bothered him about his hard cock either, something he hoped couldn't be readily seen by a bunch of guys. \n\nAs class concluded, Jacob left feeling an emptiness creep into him. He didn't realize that getting such positive attention or rather an interest would propel him into heights of acceptance craved since time remembered. Everyone shuffled by him in hallways eager to leave the building. Jacob meandered through the halls until he too found himself outside in the sun.\n\nHis walk didn't take him to the woods. It didn't even veer to a convenience store he frequented many times before for snacks. Instead, he walked a linear path to home. \n\nA brisk walk didn't happen to be on the menu of days activities in any form before. He found that the fresh air and sun uplifted the spirit once more and the sting of abandonment faded away. With a happy gait, it took minutes to reach home instead of an hour or more.\n\nInside his home, Jacob again cringed at looking at how bare and ugly the entrance was. Stained carpet and bare walls told him this place welcomed few. As such, Jacob resigned to himself that with the week, the whole place would be redone. A sense of excitement went through him as hope lifted him. Maybe his father would see an improvement and praise him. \n\n\"That'd be the day,\" he said to himself as he walked through the house. He had pushed the door to close behind him, but then stopped suddenly when he heard it crash against the wall. Turning around he saw Billy facing him with a crazy look in his eye. \n\n\"Guess daddy isn't home huh fat boy?\" Billy said walking and slamming the door behind him. \n\n\"You need to leave,\" Jacob said meekly, cowering as the Bully descended slowly upon him in the hall. \n\n\"Not until I punish you for earlier,\" the boy said. \n\nJacob went to say something, but a flick of a wrist and his mind registered that the shiny object that appeared in Billy's hand was a knife. That is all Jacob needed to see before he turned and ran through the house.\n\n\"Come back here,\" Billy shouted, but Jacob now fit, got farther into the house and even upstairs. At the top of the stairs, Jacob froze a bit, trying to figure out where to hide. Finding nowhere, Jacob panicked and ran into his parent's room. \n\nJacob almost wretched as he opened the door to go in. A smell of horror hit him and made him gag, but he pressed into the room. Humidity hit him and immediately sweet began pouring from his body. He went by the lone window, covered by a dusty curtain and sat against the wall there facing the door. Shaking, he wondered what to do about Billy. That is when he heard the pumping of a heart. \n\nLooking slowly over to his left and over the bed, his parents once slept in, he looked at a horror. A sack of flesh hung on the wall. Its purple body held a yellow sac obviously filled with liquid. Jacob got the impression that it looked like a pregnant woman's swollen belly. Tendrils snaked out from the thing in black lines across the walls, ceilings, and floor. His first thought wasn't on what was going on, but how much his father would freak out with the disaster. Groaning in frustration, he was about to leave the room when Billy had rounded the corner of the hallway.\n\n\"There you are fat boy,\" the bully said with anger. \n\nJacob stood up and held up a hand as the man came down the hall. \"Wait there, I'll come out.\"\n\nJacob knew himself that the words were meant to help. Billy had no idea what was in the room and neither did Jacob. \n\nUnfortunately, though, the bully pressed on with greater speed, making Jacob realize the futility now of negotiation. Dropping his arm in defeat, Jacob waited for Billy to enter the room.\n\n\"Ready to accept your punishment,\" Billy said as he walked into the door frame.\n\nDefeated, Jacob decided then whatever it took to get the scene over with he would do.Billy walked right up to Jacob anger written on his face. \n\n\"If you ever say anything stupid to me in school again,\" Billy said. The knife lashed out and Jacob held his arm before he his mind registered that the knife had dug into the flesh of his arm. Held tight, the pain registered. \n\n\"What the hell did you do that for?\" Jacob shouted at Billy. The look of surprise on Billy's face Angry himself now with the indignation of the attack, Jacob suddenly found himself attacking Billy. First, he punched the bully, a glancing blow on the arm. This turned Billy and Jacob cringed as a spray of blood hit him in the face. The knife had been pulled out. Billy got some lines of blood across his face, but that detail meant nothing as a desperate Jacob moved to hit Billy again. His second thrown punch didn't connect. Instead, Billy had bobbed his head to the side, and Jacob put his hand into the wall. The wind went out of Jacob as Billy thrust a fist into his gut, forcing him to collapse in front of the boy. \n\n\"That's right fat boy,\" Billy said one again. \"Now I'm gonna give you a haircut.\"\n\nJacob's head was suddenly yanked back by his hair. He wheezed with tears in his eyes.\n\n\"Get ready you fat fuck,\" Billy said with a hiss. A hiss responded back, stopping the scene. \"What the fuck is that?\"\n\nJacob felt Billy move away from him right after he let him go. Still trying to catch his breath, Jacob remained hunched over while he wheezed. Then Jacob heard the door slammed closed and breathed a sigh of relief, thinking that the everything was over right now. His arm hurt as his breath returned. \n\n\"Jacob, what the fuck is this?\"\n\nHis attention returning, Jacob looked over to see Bill held in the air by some of the tendrils. \n\n\"I don't know,\" he said, which was the truth. \"Get me down,\" the bully demanded. \n\nJacob stood up and another hiss was his only warning before he was entrapped too by the rubbery feeling tentacles. He didn't find himself suspended, however, instead dragged to the sac. A ripping sound tore into the room, but he barely heard it as the pumping sound became much louder as the sac become closer. Before he knew it, the cool air was across his ass. Then pleasure radiated around his dick, which quickly grew to length before plunging into the yellow sac. \n\nIf Jacob hadn't been already overcome by the pleasure, he probably would have been disgusted as his cock rubbed against the rubbery sac. Everything was warm and his cock felt like it once again had sunk into heaven. \n\n\"Master,\" a female voice spoke. \"Yes?\" \n\n\"I am glad you have finally visited me,\" she spoke, her words dripping with moans. \"I've needed you.\" \"What's going on?\" he asked. A pulsing began around his cock, mimicking the pulses of the heart-beat sounding nose. He went limp as he swam in the pleasure. \n\n\"I am evolving,\" she said. \"But I needed more of your seed to continue. Why didn't you come to me sooner?\"\n\n\"I was afraid,\" he replied. \"This thing you are in hisses.\"\n\nHe groaned as sudden white light overtook him. It didn't register with him that he had orgasmed and subsequently passed out. The room he found himself in once again put him in front of the golden throne. Only this time, she was there.\n\n\"Is this better?\" she asked. He studied her features and saw that they had changed drastically. \n\n\"Is this how you see yourself?\" Jacob asked.\n\n\"I can't see myself, Jacob. You are what I perceive of myself,\" she replied shifting around. There were a lot fewer tentacles now. Mostly it looked like they had taken up to be her hair. Her face looked human, though a bit young. She had curves too, a testament to being a follower of the unknown fertility goddess. Naked now as she was, she didn't look to be pliable like before. \n\n\"You have a frame now,\" he said. \n\n\"Yes,\" she replied. \"The woman you chose for me was more than adequate as a catalyst for myself.\"\n\n\"She was good?\" Jacob asked, genuinely surprised with the praise. \n\n\"Her bone structure sufficed but her body's sensitivity will make worship wonderful,\" she said with a moan. His eyes locked onto her bountiful chest as soon as she moved to where the darker flesh of her nipples shown. \"The only issues I have now center on needing more of your genetic material to finish the change.\"\n\n\"Why?\" he asked, trying to stay engaged while drinking in the view.\n\n\"Well, everything has to be bonded. For this body to stay together and useful to me, I need your material to help me bond on the molecular level. That is until all of this body is me. Plus, without a continual supply of your seed, I can't stay on this plane.\"\n\nIt made sense. \n\n\"So how do I give you my seed?\" he asked. \n\n\"Why you come up to this throne and fuck me,\" she said with a giggle. \n\nThat excited Jacob and his cock throbbed in impatience. Yet he hesitated. \"What are you going to do with the other boy?\" he asked.\n\n\"I have to consume him,\" she replied with a disinterested tone. \n\n\"I find his intrusion annoying and as such he is a good sacrifice to offer up to our goddess.\"\n\n\"Will it be painful?\" Jacob asked, unsure about the prospect of killing his tormentor. In retrospect of the question being asked he surmised that the wrong question had been asked. \"Of course not,\" she said. \"A sacrifice should be welcomed into the folds of our goddess in the way that pleases her the most; pleasure.\"\n\nAn epiphany hit Jacob then. \n\n\"If you kill him, we will have to explain it,\" he said to her. Her body shifted a bit before she got up from the throne. He watched her, mesmerized with her sexuality as her hips swayed walking down the stairs leading up to the golden seat. Her tendril flowed, and he noticed that her hips had some and so did the v of her navel. She walked to him and grasped his cock before leaning up to his face. Frozen, he held his breath for the next words to be spoken. \n\n\"No, we won't,\" she said. \"We, I, are beings of sex and as such, everything is to me will serve out goddess. Even now, I am draining that tormentor of everything.\"\n\n\"Oh,\" Jacob sighed, not at the statement bit because she had begun playing with his cock in earnest. \n\n\"I can't wait till we can do this in person,\" she said. The words weren't heard. Pleasure overrode everything and Jacob soon spasmed in a release. There wasn't anything in the dream, though. No liquid and it was something that Jacob realized.\n\n\"I bet it will feel amazing,\" he said with a whisper. \"How long will you be?\" No answer. \n\nJacob opened his eyes and found himself looking at the yellow sac of the alien pod. The pumping of the heartbeat resounding in his ears sounded like an endless drum being pounded relentlessly. Pulling back, he found himself now disconnected from the thing. His front was covered in a sticky slime. Disgusted, he took a step back. A groan made him turn around and gasp in horror. \n\nBilly looked horrible. Everything about him sang that death approached. His skin hung on his bone, but there was no sustenance in his frame. Muscles were gone, and his head leaned back with his mouth agape. A sucking sound could be heard and Jacob realized now that Billy only wore his shirt now. His pants had fallen to the floor, his body's mass no longer able to support anything. The tentacles, of course, held the body up. He cringed seeing the body being sucked out. Shaking in disgust, Jacob left the room and Billy to the fate of being a sacrifice. \n\nThere was no longer any reason to stay there. Hot water washed down up him as he washed off the filth. Even after scrubbing, he felt dirty. Nothing lifted the growing sense of guilt that he had. Everything now had changed. It wasn't a dream. It wasn't a fantasy. The alien was coming, and it had fed now on two people. Two people, he had essentially offered up to as a way to get not only a purpose but also a promise of acceptance. \n\nAfter dry heaving, Jacob worked to keep himself from collapsing into the tub of the shower. Eventually, he would make it back to his room and sit in his chair. Lost on what to do, Jacob did the only thing he could. He went back to the room.\n\nBilly no longer hung suspended in the room. Jacob couldn't even see the boy at all when he first walked in. It wasn't until he walked into the room and could see over the right side of the bed did he see the skeletal remains of the bully. He almost hurled looking at the husk of skin that looked tightly stretched across the bones. \"I'm sorry,\" he said. There was a shifting and Jacob turned to the pod secured to the wall. The bulbous yellow sac still looked to be similar to the pregnant belly of a woman. Shuddering in disgust, he walked up to it and put a hand on the sac. The pulsing was still there and the flesh felt warm. He noticed that the tentacles appeared to be gone now form the wall. The only tendril snaked out from the pod and Jacob understood they helped anchor the thing to the wall. He wondered when she would emerge, the alien monster in the sack. Was it all for not? Apprehensive, Jacob sulked off to his room to pass out in his bed. His last thought about what tomorrow holds for him.\n\n*****\n\n*Author's Note*\n\nHey everyone. Thank you for reading this current chapter. I have big plans for this story and its arc. I was excited to finish an entire storyline last month and look forward to working on more. As such, the next story to be published will be a collaboration piece and then another chapter to Rule of Woman. I plan on giving focus on the Ring and Sexting too before working on another chapter to this arc. Thank you or the continual support. \n\nDesTodes777 "
    ],
    "authorname": "destodes777",
    "tags": [
        "alien",
        "weird",
        "monster",
        "tentacles"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/egg-ch-03"
}