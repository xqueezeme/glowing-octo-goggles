{
    "title": "The Pirate King Ch. 17",
    "pages": [
        "First things first - I highly recommend going back and reading the rest of the series before engaging with this. We'll still be here when you get back :)\n\nNo sex this chapter. Things are... well. The next few chapters might get somewhat dark. \n\nBut our lovers are strong, and their love is even stronger, and they will endure. Take the prophecy you find in Sybil's eyes and hold it tight. We'll all make it through this; we're stronger than any storm. All storms break; we, by our very nature, outlast. Some days I don't know how good that is. Other times I get to see the sun and I'm so, so thankful. \n\nSo remember that sunshine awaits us all. Even as the days get shorter and the nights colder, there will always be a place for us to find our warmth. Perfectly made first cups of hot cocoa, sweaters that survived the packing of summer and someone to wrap you up tight when you begin to forget where in your body you stored your happiness. Much love, dreams of peace, and as always, a place to call home.\n\n***\n\nI felt the moment we passed into the cracks deep within my being. It was unmistakable, a crackling opening of energy and disquiet that would have been unnerving if I had not known to expect it, or that we were all safe, that Cookie had laid the correct protections and besides all of that I was me and my daughter was waiting and so it felt more like coming home than slipping into the universe untethered. \n\nThe last time we had made this journey I had been too engaged with the feeling of the Captain's arms, the Captain's love, the Captain as family to enjoy this, but this time I was more at peace with the things that I was becoming and in the quiet spaces of my soul I felt the world crack and this time I let myself savor it. We were close. Soon I would be home. My fingers tightened around the form of my love even as my body struggled to contain a shudder.\n\n\"Love?\" The Captain turned to look at me. We were both having trouble sleeping. I knew that the energy pouring from the fissures were sailing into would cause us to feel energized, our souls buzzing with the vibrations of the world over the next few days even as our bodies begged us for sleep and rest. Existing in this place was like taking a stimulant over and over again. Val said it was the best place for him to live and manage his empire. I don't know how he did it. Whenever I left, my body ached from the disconnect. \n\n\"We're close,\" I told him quietly. I knew he could feel it too. The other land boys might not be able to, but the Captain was no simple land boy. He was the sky, forever and always and mine and he would be more sensitive to these types of things. He would be able to feel the world. Or at least feel me. \n\nHe rolled over in my arms and pressed his face to my body. \"Is that why everything is so fucking.\" He sighed rather than finish his thought. \n\nMy finger traced over his shoulder and I watched his skin jump beneath me, wondering if he would continue. I knew that he was verbal when I was not. He might feel better giving voice to the things swirling though his core.\n\nHe laid silent for a stretch of time. It was apparent that he hadn't fallen asleep from the speed of his breathing, from the way his fingers were tap, tap, tapping against my side. When he finally spoke, it did not come as a surprise to me; I had been waiting for some time. \"I feel like the wind is about to shift, only it's inside of me.\"\n\nIt was not a bad description. I often felt like I was constantly at high tide here, pulled up and up and up to the extent of my ability, stretched and not allowed to continue the true cycle until I left and collapsed back into reality. Except, of course, that this was reality. It was the truest form of reality; that was what made it so dangerous. \"It will get easier,\" I told him. \n\nHe peered up at me, eyes narrowed. \"But does it become less?\"\n\n\"Probably not.\" He groaned and collapsed back against me at the truth in my words. My fingers gently traced over his shoulder, assuring him that I was here, that it was okay. That this was something we would pass through, as we had passed through so many things and would pass through so many more. \"Sometimes it helps to be moving,\" I let him know. \"It might also not be a bad idea to try and get some sleep.\" It could possibly be the last sleep he would get while we were visiting; he was not used to this space and would perhaps be more sensitive to the things it held. \n\n\"Fuck sleep.\" His response was immediate and without emotion. Then he turned his head so he was looking up at me. \"We could always fuck.\"\n\nI raised an eyebrow. \n\nHe let his breath out in a sudden puff and went back to the shelter of my embrace. \"Gods, I want to do something. I feel like I should be doing something, like I forgot to be doing something that I'm supposed to be doing, and it's really fucking important and the longer I lie here. Fuck.\" He sat up suddenly, those dark brows nearly fused together. \"This feels awful. What the fuck is happening?\"\n\n\"We're nearly at my home.\" I pulled myself so that I was leaning against the headboard, then opened my arms for the Captain. He frowned at my form. \"This is where my daughter has to live.\"\n\n\"We came this way before,\" he reminded me, ignoring my inviting gesture. \"This didn't happen before.\"\n\nI shrugged. It was worse this time, there was no denying that. But before the world might not have been so invested in us, or perhaps it was that our names had not been held in quite such high relief in the ways such things are known, or perhaps we had simply gotten lucky. Or were distracted. \"Things change,\" I summed up for him, and he sighed and collapsed so suddenly onto my lap I nearly let out a sound. \n\n\"And your daughter,\" he said, ignoring my surprise. \"I mean. You have a daughter. We've never really talked about that, not really, I mean you mention her and all that but you don't talk, you know? Not really. Not about things like this, things that are beyond our ship or really anything that's bigger than just us. And I mean. Family.\" He shook his head, his hair tickling against my bare skin. One hand came up to rest on my stomach, drawing restless circles. I sighed each time his fingers reached their zenith. \"You never cease to amaze me.\" Another circle. \"How can you exist like you do, continue in this way, with everything that you have?\" \n\nHe meant how did I continue to be nameless. \"I do.\" \n\n\"Ha.\" It was more a word than a laugh. \"And you say shit like that, like they just are. Like.\" He looked up at me, those dark eyes tickling at my gaze with mischief and love and just a dash of frustration. \"'There is nowhere you can go that I cannot find you,'\" he mimicked. I raised a brow. \"'I killed a sea god and drank its blood. I'm immortal.'\" \n\n\"I did,\" I said. \"I am.\" He rolled his eyes. \"But it was a long time ago. I'm not that person anymore.\" Probably. Perhaps. \n\n\"Or what about, 'I am the sea',\" he laughed, spreading his arms out wide with the sound. \n\n\"Well.\" I was feeling just a bit put out. \"I am.\" \n\n\"Aye, my love. I know you are. But isn't it a bit, I don't know, more complicated?\"\n\nI frowned down at him. \"No.\"\n\n\"It has to be.\" He frowned right back up at me. \"You can't just say things and then they're true.\" \n\n\"I don't.\" My arms shifted until my fingers could reach his hair; he pressed into my touch even as his head tilted back, frown set in place. \"It is true and then I say it.\" \n\n\"But what does it mean?\" \n\n\"What I say.\" \n\n\"Gods, Sailor,\" he laughed. \"It really is that simple to you, isn't it?\" \n\nCould it not be? I watched him lay in our bed, naked, loved, and tried to imagine some other way of existence. \n\n\"Some of us,\" he told me, those eyes of his dark with a kind of laughter only he could hold, \"need just a bit more explanation.\" \n\n\"Oh.\" \n\nThere was a stretch of time as I continued to cord my fingers through his hair. \n\n\"So?\" \n\nI frowned. \"So what?\" \n\nHe sat up. \"So are you going to explain it to me?\" \n\nI stared at the fingers that had so recently been touching the man I loved. \"Explain what?\"\n\n\"Sailor. Christ, you're hopeless.\"\n\nI stared at him, confused and riled by the winds of the world.\n\n\"Your namelessness,\" he prompted. \n\n\"Oh.\" I wanted to touch him again; my hands were already reaching out. \"I am nameless.\" \n\n\"Sailor!\" He caught my hands and pulled them down. \"I know that. I want to know why, for how long, what made you this way, how is it that you can have things like family and ships and gods, a child. How these things don't name you, how you could lose your name, your identity, and they don't compromise that. I mean, your ex is a godsdamn seer!\" \n\n\"My child is as well,\" I said, which only seemed to agitate him more. \n\n\"Exactly! So how do you do it?\" \n\nI frowned. I did nothing; it just was. I wasn't sure that answer would satisfying him, however, so I merely shrugged and laced my fingers though his. \n\nHe sighed. \"Fine. Can you at least tell me how it came to be?\" \n\n\"What? My family?\"\n\n\"No, Sailor. Gods. I know how families work.\" He seemed to consider that for a moment. \"Your daughter is natural born, right?\"\n\nI blinked at him.\n\n\"I gotta check, you're so fucking -\" He sighed and shook his head. \"You're never what I expect.\"\n\nI squeezed his fingers, feeling slightly worried by that expression of frustration, but he smiled at me. \"That's a good thing, my love.\" Then, without losing his smile, his tone grew more serious. \"Can you tell me about your namelessness?\"\n\n\"Oh. Probably,\" I admitted. \n\n\"Will you?\"\n\nI thought about that. I want being obtuse on purpose, hadn't hidden this information for any reason. I just hadn't seen any reason to say it. Words are useless without purpose, and these had no purpose. I had died. I lost my name. What more was there to say? But if he was asking... \n\nI looked into his open face, his endless love. \"Okay,\" I told him. \n\n\"Like pulling fucking teeth,\" I heard him mutter as I pulled myself up to begin. \n\n\"I suppose,\" I started, knowing it was true but feeling the need to soften it for him for some reason, \"that the sea stole my name from me when I was drowned.\" \n\n\"Drowned? Is that how you were killed?\" \n\n\"No.\" I paused. There was no way to soften this. But we were not soft things, the Captain and I, and death was never soft and it was not right to make mine into something it was not to placate some part of me that was afraid for parts of him that did not exist. And so I took a breath and shaped the truth on my tongue. \"I was drug under the ship until I passed out. Or bled out. I'm not sure which happened first. Then the sea filled my lungs and I was dead.\"\n\nThe room was very quiet. The Captain's hands were very tight in mine. When the Captain spoke his voice was the same, tight and laced around me like he was afraid I might disappear. \n\n\"He keelhauled you?\" \n\nI remembered the feel of irons binding my hands. I remembered the taste of blood in my mouth as barnacles ripped into my flesh, the salt of seawater. The way those parts of me had mixed together and filled my lungs. The light. The blackness. The nothing that had come after it all.\n\n\"Yes,\" I told the Captain. \"He did.\" I glanced up at his face and found it dark, dark, dark. This was why I hadn't wanted to speak of this. It was past; it was done. He had killed me and I would kill him. That was the truth of it, the end and the beginning and as much as anyone needed to know. Any more was unnecessary. And yet I found myself continuing to speak. \"It was a foolish action. He knew what I am. He should have killed me on land. On the sea -\" \n\n\"You are the sea. I know.\" He squeezed my hand and gave me a small smile, his lips tight and still holding all the pain he knew I had been through. \n\nI frowned. I was going to say on sea, revenge is assured. If not from me then from one of the allies who would see what he had done and find him at fault, his soul wanting. On sea, it was impossible to hide the truth of his actions. My death was a known thing. My names were as numerous as the currents. \n\nBut I am the sea did sum it up quite well.\n\n\"So. He.\" His hands tightened in mine just for a moment. I knew he was struggling with this and gave him his space. Keelhauling was a violent death. A painful one. In my lifetime I had seen only one other man meet the same fate that I had, and he had deserved it. \n\nI did not think about what that said about me, or if it said nothing about me what it said about the type of men who used such methods of death on men who were not deserving. It was easier, so much easier to say He killed me. That was that. I wanted to leave it be.\n\nBut the Captain was not yet satisfied. \"And then what? I don't understand why that makes you how you are. You lost your name that way? How? Why?\"\n\n\"I had many names.\" Hundreds, they had said of me. It might have been that many. It might not have been. I had never taken the time to count. \"Some of them had power and some of them did not. When Yarrick pulled me from the sea and pounded the water back from my lungs, they were all gone. I don't know how. I don't know why.\" I shrugged. The sea had seen it fit make me this way; who was I to question the things that I was? \n\n\"Fuck.\" He sat with that for a moment. \"What a violent way to lose who you are.\" \n\n\"I am still who I was. I had only lost the ability for others to understand that.\" My sense of self had suffered at first, of course, but in the end one does not need a name in order to exist. A name only serves to differentiate a person from the others in their lives. And I had already done that in my actions, in my existence. What use was a name to me? \n\nThe Captain was looking at me skeptically. \"I suppose.\" \n\n\"Did you lose yourself when you gave up your name?\" \n\n\"I felt like I did.\" He laid back down and placed his head in my lap. \"It was so. I don't know, the only word for it was lonely. To not even have a way to refer to myself. I only had memories to fall back on to define myself, and.\" He broke off abruptly, brows drawing down. \"I'm not my fucking past.\" \n\nI passed a hand lightly over his forehead, willing him to relax. Slowly I watched his eyes return to now, his body remembering that it was with me and only me. Only then did he continue. \"And I was told you couldn't become too close to anyone, because they would get an idea of who you were and then they might accidentally create a name for you. You know? Because they knew you and all that.\" \n\n\"I know you,\" I told him, my fingers happily back in his hair. \"I don't name you.\" \n\n\"You do too,\" he reminded me. \"Just not to anyone but you.\"\n\nIt was true. I let my hand press against him for a moment and felt him press back.\n\n\"How does it work with your family?\" he asked. \"When you lost your names? How does that. I mean. They still know you.\"\n\n\"It's complex,\" I told him. \"My names are gone. I'm dead. But I'm still me.\" I looked down. \"Understand?\"\n\n\"No,\" he responded instantly, drawing a smile from my lips. \n\nI thought about it, wondering how best to explain something that seemed so simple to me. \"It's like this,\" I began, than shook my head because it was not like that at all, it was like it was and there were no words that were right to explain it if the way that it existed did not innately make sense. But the Captain looked up at me, and asked, and so I tried again. \"Like this. The things that make me up, the things that I am. My family understands that. But a name, especially a name of power, it can sum up those things and allow people to hold the things that you are in their mouth. Strangers, enemies, they can hold your being on their tongue with comfort.\" I had many names of power, once. Not all of them had been comfortable to say. But still men had tried, and some had even succeeded. Those were not moments I enjoyed, when a being that should have been an enemy stood before me and showed that they held my power in their chest. \"My family doesn't need those names to summarize me. They understand me without them. And my enemies, they will now have to come and learn of me in person if they wish to know me.\"\n\nThe Captain was still for the first time since we had come into the cracks of the world. \"So a name is like a shortcut.\"\n\nI thought about that for a moment. \"A shortcut,\" I agreed, \"and a buffer.\" A shield from your true self. \"That's the way I understand it, at least.\" There were a thousand explanations of namelessness. This was just the one that sat in my truth. \n\n\"So then, the prophecy -\"\n\nI blew air from my lips angrily. \n\n\"What?\" he looked up at me in surprise. \"What's the issue with the prophecy?\"\n\nThe buzzing of the world made me feel loose, easy. \"Fuck the prophecy.\"\n\n\"Whoah.\" The Captain sat up. \n\nNow it was my turn to look askance of him. \"What?\"\n\nA smile smile spread over his lips. \"I think that's the first time I've ever heard you curse.\" The smile quirked. \"Besides when you're begging me to come.\"\n\nI waved a hand to spread those words throughout the cabin we shared. The Captain smiled at my expression. \"But in truth. Those are strong words, Sailor.\"\n\nI shrugged. They were strong feelings.\n\n\"So what's your deal with the prophecy? You don't think it's true?\"\n\nIf I had listened, I would perhaps have heard a twinge of fear in his voice. Fear or maybe just an opening, a stretching as he reached for something in me. But I was not listening to him; I was listening to the world, feeling the way it pressed up against me and made me so much more and so much less. Wore thin the parts of me I usually shored up, stirred currents that I had worked so hard to calm. And so when I answered him I did not answer the real question he had asked of me, but instead the words that had passed from his lips, and the call that came from within my soul. \n\n\"I think,\" I began, feeling the buzz of my home, my family, my past so close to my skin I nearly reached up and tried to itch it away, \"that it's nothing but words. That there are a million ways to become nameless and a million more to become named, and there's no way to know which way the original prophetess had in mind when she spoke her words because the King at the time had her immediately killed.\" My father had believed in negative reinforcement and let the whole world know. My father had been assured of his immortality by witches he threatened with their own death. My father had been killed in the night by children and he had deserved to die. \"I think three Kings have been killed or deposed since those words were spoken, and all of their killers or usurpers could have been convincingly argued to have been nameless or named at the time the throne changed hands depending on how you want to spin it or if you want the prophecy to be dead. I think the prophecy is vague and not worth the effort and stress.\" How many hours had I had to sit through of men telling me of this nameless fighter or that nameless child, of this rumor, that folk tale? In the end my brother had drug me beneath my childhood home and, armed with the prophecy, I had not seen it coming. \"I think Dreyfus is a fool for taking it so seriously, especially since he has seen all the same shifts and changes that I have, especially since he might have killed the prophecy himself.\" He might have been nameless when he killed me. He had a name, sure, but was it his? It was given to him by our father. Everything we had was given to us by our father; our ship, our food, our names, our very lives, and he made sure we knew it. Can something ever be yours if you don't make it yourself? Had I ever been anything but a ghost? \"Or the prophecy might have been dead before it passed the lips of the witch, dead with her because she knew she would die for telling the King of his mortality. Or perhaps it was always going to come to pass, and that is a tragedy but everyone dies and what is the point of living with one foot in the future, one foot in the past with a woman who is long since gone? The world exists now. I exist now, with you, here, and isn't that enough? Can't that be fucking enough?\"",
        "I pressed a hand to my face to stop my torrent of thought, pressed from my body by the weight of family so close by. Family I thought, now with more than a hint of sourness. I had not meant to become so riled by the mere question of the prophecy, but I had worn those words on my skin since my father had found me adrift at sea and they were perhaps more tied to my sense of self than I allowed myself to admit. If no one brought up those words to me ever again I would be happy. If I never had to hear about the stupid prophecy I could live out my death in peace.\n\n\"I want to leave it behind,\" I told the Captain now, unable to see how he might have reacted to this tirade with my hand over my eyes. \"I want to be allowed to exist without the strings of others' words, just once. Just once.\"\n\nI felt the Captain's hand tugging at my arm but I resisted, unsure and still feeling raw. It was only when he became more insistent, my name added to the velocity of his movements, that I allowed him to lower my arm and restore my sight. I still did not look down at him, my eyes steadfast across the room. \n\n\"Come here.\" He spoke softly and it was not a command but a wish, and I don't know who's wish it was, mine or his but I followed it instantly, my body sinking into his arms and he held me in the safety of his arms and whispered the stories of the ocean, children's stories, pub talk, incredible tales had drawn my scorn, my ire, my annoyance and amusement, that I had lived once and heard a thousand times over but I had never heard them like that. Never like that, spaced out in the cracks of a world that wouldn't let me die. \n\nI didn't say another word the rest of the night, just laid in the arms of the man I loved as he took my past into his mouth and made it ours. \n\n***\n\nNatch had been warned not to sail into the atoll that was my family's shelter. For one, it was too shallow for our ship; for another, the cracks of the world might splinter under the load of all that we carried. \n\nHe came down in the morning to find the Captain and I still awake, the Captain sitting at his desk writing in the kind of frustration the latent energy of this place brought on, and I, sitting on the floor at his side, shaking with quiet emotion that no words could describe. I simply was. The world here understood that, and it made it so, so much worse.\n\nNatch stepped back when he saw us, a moment of surprise on his face. Perhaps even fear. He was smart, that boy, understood the ways of the world and more importantly the energy of spaces. He knew that we were operating in a different way that we usually did; he saw the sharpening of our cores even as our edges blurred with the speed of our vibrations. \n\n\"We're here,\" he told us, voice hesitant. The Captain waved his hand and he moved on without a fuss. We knew. I think he understood that. \"They're putting down the boat now, you can leave whenever you want.\"\n\nThe Captain stood up immediately. \"Then let's go.\"\n\nI moved more slowly, feeling the way my limbs held echoes of themselves in the promises this place whispered. I silently handed the Captain the knife I had been holding, one of the many blades he wore at his waist, then nodded. My quiet assent was all the Captain needed. \n\n\"Good. We're off.\"\n\n\"Will you be taking -\"\n\n\"Wait for us for three days,\" the Captain told him, not seeming to notice he'd cut off the blonde's question. \"If we're not back by then, head back into the Ephretes for three days, then return.\" We'd discussed this and decided three days was as long as the ship could stay here safely, especially with beings such as Sneg and Ichor on board. I did not mention Alan and the protections he was weaving; there was no need, and my silence had been asked of me. If it became something the Captain needed to know, I would tell him. For now, Alan's secret was safe. \n\nNatch nodded his understanding as we moved through the halls. I saw Ichor leaning in a doorway, arms crossed. He nodded at me as I passed; my chin dipped down in return. \n\n\"Do you need supplies?\" Natch was asking. The Captain ignored him. I'm not sure he even heard him in the swirl of everything else that was existing, spreading, crashing down. The world had never seemed so loud. The universe had never demanded so much. I spared a moment to wonder if it was my connection to this man that made me so much more sensitive than I had been before, or if perhaps the world was truly cracking for real, the ancient mystics proven right, their vindication found in endless darkness as the sea fell through the holes of reality. \n\n\"Ready?\" I came back to this world, to this reality, to see the Captain standing by the ropes that lead down to a small boat. I had once carried him back to the ship, drunk and loving, in a boat like this. \n\n\"Of course,\" I told him. We were going home. \n\n\"You first.\" He motioned for me to climb down. \n\nI took a look down the rope ladder. It would take a long, long time to arrive at the boat in that way. \n\nI smiled at the Captain, placed a hand on his shoulder, and jumped. \n\nWhen the Captain met me in the boat some time later, he was grumbling. \"Have to be so fucking dramatic,\" I heard him mutter. I could have said the same thing for him, replacing dramatic with slow, but I chose instead to concentrate on disentangling our ropes from that of the main ship and getting us on our way. \n\nI rowed, setting our pace at a tranquil version of determined, knowing our direction without having to turn and look. The Captain sat across from me, eyes hard on our destination. I know what he saw but not how he saw it; I had seen this so many times, had taken it in as home, as safety. What must it look like for the first time? It had been so long I could no longer remember. Had I ever not known this place?\n\n\"Do you like it?\" I asked quietly as I rowed.\n\n\"How could I not?\" His eyes were roving the beach. I saw them stop at a certain point and travel up and down and knew he had come to my home, to the boards I had helped erect, the structure my hands had created. \"It feels so much like you.\" \n\nI let myself smile for a moment before concentrating on the task at hand. Surprisingly, the press of everything seemed to lessen the closer we got to the shore; perhaps we had been in a crossroads, a strange slipstream. I hoped those on board who could feel such things would be alright. \n\nSoon we reached the sandbar, the boat sliding up against the crunching sand with intent and a sigh. \"This is as far as we can go,\" I told the Captain, already climbing over the side. He took my hand and followed my lead, eyes dark and careful, mouth pressed tight like he was afraid of swallowing the things this place could make you. \n\n\"There's smoke from the house.\" I didn't turn to see what he was speaking of. It was to be expected that someone would be home. I had not bothered to warn Val of our arrival, but the ocean would have carried my tidings faster than any missive could have and Val would have known I was coming. I pulled the dinghy further onto the sandbar; it was high tide, and where I settled it I knew it would stay. I asked the sea to care for it just in case. \"How old did you say your daughter was?\"\n\nI hadn't. \"Eight.\"\n\n\"Ah.\" He paused for a moment. \"Light brown skin, curly hair like Cass?\"\n\nI whirled just in time to see Sybil splashing towards us, laughing, her little legs struggling to churn their way through the water. \"Pappa!\" \n\nI smiled and spread my arms, only to watch the small blur rocket right past me to latch onto the Captain's legs. I turned to take in his shocked body, muscles tight and face frozen, and tried my best not to laugh.\n\n\"Sybil.\" My amusement caused her name to sound anything but stern. \"That isn't his name.\"\n\nHer reply was muffled by the Captain's thigh. \"He said it was okay.\" \n\n\"He did say, or he will say?\"\n\nNo response. The Captain stared at me helplessly, his hands still held up as if he were surrendering to an enemy. Well, he might well have been. I tried to hide my smile at the expression on his face. \n\n\"You can't just will something into the present because you wish it to be true, little one.\"\n\n\"I'm not.\" She turned her face to look up at the Captain with a smile that I knew was dangerous. \"Am I?\"\n\nThose arms slowly fell, the shock on his body melting in the face of Sybil. \"No. She's right, it's okay.\"\n\nSyb turned back to me, beaming her triumph. \"See?\"\n\nI sighed, but there was nothing but happiness in the motion. \"You can't say something from the future to make it happen in the present.\"\n\n\"Why not?\"\n\n\"It.\" It seemed dangerous. But then again, what did I know? Instead of answering the child, I looked up to the Captain. \"Are you alright?\"\n\n\"I think so.\" He still looked a bit shocked.\n\n\"There are things that are set,\" Sybil was saying, \"and things that are shifty. This was shifty, and I wanted it shifted.\" She beamed up at the Captain, garnering a wary smile in response. \"Shifty things are more fun.\"\n\n\"Who taught you this?\" I asked, genuinely curious. Cass had never mentioned anything like this before.\n\nSyb huffed as if I had just asked the most ridiculous question in the world, then grabbed the Captain's hand. \"Come on. Uvu is making fish for dinner. He'll burn it, but he's making enough cuz I told him you'd be here. I told him that last night, too,\" she confided in the Captain, \"cuz he was making my favorite and I wanted lots.\" She paused, then looked back at me, a sheepish expression on her face. \"Sorry for me eating all of it because now you didn't get any.\" \n\nI smiled and tousled her curls, flipping her smile back effectively and causing her to lurch forward again, the Captain's hand still tight in hers. \"Did you forget I couldn't have any even though I wasn't there yet?\"\n\n\"No, I did not, I just.\" She let out a little puff of annoyance, her brows drawn down in annoyance. \"Maybe? But you are there, Da.\" Those big eyes looked up to me imploringly. \"You're there but you didn't get any of the food because you're here instead.\"\n\n\"Jesus,\" I heard the Captain mutter. \"She's your daughter alright.\" I turned to frown at him, not sure what he meant, but in the momentary lack of concentration I nearly went down in a hole so I went back to focusing on on my feet. \n\nVal met us at the beach, his arms crossed. \"You could have fucking -\" he started, looking annoyed, but I cut him off with a raised hand. \n\n\"Your fish.\"\n\nVal's face fell open from mild annoyance into full-blown panic, his hands flying up and his scarves streaming back as he turned on his heel and raced back into the house. \n\n\"Not in time,\" Sybil informed us sadly. I shrugged and followed Val into the house.\n\nThe smell of smoke greeted me as I entered the main room, small wisps drifting from the kitchen telling me that Val had burned the fish quite badly. The room was much the same as the last time I was there, down the the cross bolts stuck into the wall. I ran my fingers over the feathered ends. \"You left these up.\"\n\n\"Fuck,\" I could hear from the kitchen. The Captain was hesitating in the doorway behind me, his eyes roving all over the interior of my home. I let him have his moment of indecision, or pause, or inspection. Whatever it was, it was important that he feel safe in this space. In my child's home. \n\nOur family's home. \n\n\"Well, that's for shit.\" Val emerged from the kitchen to lean in the doorway. \"I hope you're not starving because it's gonna take me a second to throw something else together.\"\n\nThe Captain's eyes had slipped from the wall of crossbow bolts and moved to the mechanism that fired them, leaning up against the wall. \"So you're the one who shoots trespassers,\" he murmured, almost to himself.\n\n\"It's more dangerous for them to be alive here,\" Val returned without emotion. The Captain's head shot up like he'd forgot Val was there, then he looked over at me as if looking for my opinion on the matter. I merely shrugged. What Val had said was true. \"And it's a good deterrent, the story.\"\n\n\"It is a good story,\" the Captain acceded. \"The crossbow man, the fucking Worm. Christ.\" He ran a hand through his hair, his eyes roving the room again. He didn't seem to notice how Val had gone stiff at the mention of the name. \"Are you just every one of my boogeymen, Val? The impetus for all my foolish nightmares?\" \n\nI think he meant it as a joke, perhaps, or a simple observation, but there was something about the way he said it. A sharpness. And in this space, in all the ways the world was acting and not allowing us to do the same, in all the different spaces Val and the Captain had found themselves interacting before this moment, his words were no simple anything. \n\nVal drew himself up. \"I don't know,\" he responded, his voice the wrong kind of joking. A return of all the sharpness the Captain had sent his way, tenfold. A hundred fold. Cold. \"Do your nightmares also contain beautiful men fucking you? Because I'll have you know, that's about the only threat I pose.\"\n\nBut the Captain didn't even look at him. \"They do, actually,\" he responded. His eyes continued to take in every inch of my home. \"Usually beating me as well.\" He finally allowed his eyes to rest on Val; my brother was standing stock still, the ghosts of his indignation melting at his feet. \"I can cook if you don't want to. I'm not the best, but you shouldn't have to make two meals in one night, especially since it was our arrival that ruined the first one.\"\n\nVal was still staring at the Captain, unsure what to say. I gently moved over and took the Captain's hand in mine, feeling the way he was tense, so tense. \n\n\"Papa.\" I looked down. \"No, Da. Not you.\" Sybil sighed as if my attention was causing her a major inconvenience. \"I said Papa.\" When the Captain didn't respond, she tugged gently at his sleeve. \"That's you.\"\n\nHe looked down at her almost mechanically. \n\n\"We gotta talk,\" she told him solemnly.\n\nHe looked out of place, out of time. Out of focus. I wanted to pull him tight to me until he found himself in the pieces he'd given me for safekeeping, but I wasn't sure he was ready for my touch with the way he held himself so tight, so stiff. \"Now?\"\n\nI headed off that line of thought before Sybil could take it and run. \"It's best just to do what she says when she says it. She doesn't operate in timelines like we do, my love.\" He was staring at me with a look that did not make me confident he was hearing anything I had said. I carefully drew him towards me until his hands brushed my hipbones. He let them rest there, his eyes pointing towards my chest but seeing something else entirely. \n\n\"Papa,\" Sybil repeated. \n\nThe Captain ignored her. \"I don't want to be gone from you.\" His fingers found the briefest purchase on my hips, one hand twining into my shirt. \"I don't want to be separate.\" \n\n\"My love,\" I murmured, my hands over his. \n\n\"I don't trust...time...in this place.\" He said it like he wasn't sure it was the right thing to say. He said it like he couldn't say anything else. \"Every since we got here I feel like the past is so much closer than it has any right to be. Like its just one step away, one fucking. I don't know.\" He glanced behind me as if he was looking for something. \"It feels like it could be here,\" he whispered. \n\nMy hands squeezed on his. \"It can't,\" I assured him. \"It isn't.\"\n\n\"But what if it could be?\" I heard him whisper. \n\n\"Sybil is the only one who can travel like that, and she brings none of it with her.\"\n\n\"Promise?\" \n\n\"Promise.\"\n\n\"Captain-sir-papa,\" Sybil said impatiently. I looked down at her, one brow raised. \"We gotta go now.\" \n\nThe Captain hesitated. I could feel it on his body, in my soul. \"Go,\" I told him gently. \"I'll be right here.\" I meant in the room, in the house, but I also meant at his side. In his soul. Wherever he needed me, whenever he needed me. My lips dropped gently to the top of his head to seal the promise. \n\nHe sighed, once. Lightly. Then he turned and was gone, moving with an air of confidence that I knew to be nothing but smoke. \n\nVal watched him head out the door, hand in hand with my daughter. He pressed a hand to his face, causing his multicolored scarf to flutter. \"That was insensitive of me.\"\n\n\"You couldn't have known.\"\n\n\"I should have.\" Val sighed. \"I did.\"\n\nI frowned at him. I hadn't even known, not so clearly - I had seen the Captain flinch at words, at actions, had watched the way he sometimes drew into himself like he needed space from those around him. I knew what that could mean. What it had meant it men I had met before. So I had an idea, a possibility, and the Captain had spoken words to me about his past, yes, and then there had been the night he had been drunk, but even then, even now I did not know. \"How?\"\n\n\"There is.\" Val frowned like he wasn't sure how much he was supposed to say, then gave a small, graceful shrug and continued as if he hadn't paused at all. \"A certain type of person who knows my reputation. The bad one, the Worm one. And that type of person doesn't have a rainbow and sunshine kind of life. That type of person is the type that someone needed scared. The type someone didn't want running off to find me, a person who could have helped them get out.\"\n\n\"Get out,\" I repeated. \"Out of the industry. The side of the industry that you don't run.\" At Val's nod I leaned back on the doorframe, crossing my arms as the full weight of what Val was insinuating settled on my body. \"You're saying he sold himself.\" \n\n\"More likely that someone sold him. I'm just saying -\" Val paused, hands up, at the sight of my face. \"I'm saying,\" he continued, words very careful, \"that he must have at least been industry adjacent. That doesn't mean he was a worker. He could have been a mule, or a seller, or a bodyguard. Or a really good friend of any of those people. But he was tapped into the industry, and tapped in deep to have reacted that viscerally to just the sight of me.\" He took a moment, his eyes searching mine. \"Do you know how he might have gotten out?\"\n\n\"Does it matter?\" I knew it did not. If it was, the Captain would have already told me. None of this mattered past how the Captain wore it on his body, past how I could gather the worst parts of it, push it away, and make sure he never went back to that place again. My fingers tapped at my leg as I imagined killing slavers and wondered why the Captain had never wished for his own revenge, why he had never directed us to kill any man. \n\n\"No, it's just.\" Val did a small head bobble as he thought about what he wanted to say next. \"It's hard to get out of that life style. You're usually bought out of it, and the price is steep. To go from working - or knowing someone who worked, because even then in that section of the world, they don't let you leave, you know too much shit - to sailing, and not just sailing, but captaining a pirate ship, and under Dreyfus no less, the man who ran that part of the world...\" Val shook his head. \n\nSomething was tasting like metal on my tongue. Like pain. Like confluences that I didn't want to see. Currents that should never touch. My fingers tapped faster. \n\nThe Captain had asked for the death of exactly one man.\n\n\"He knew Dreyfus,\" I voiced. Far from me, in a spot on the sea that I never truly ever stopped paying attention to, two waves hit so hard it sounded like thunder. \n\n\"We all knew Dreyfus. Everyone fucking knew Dreyfus. He's kind of hard to miss, with all the -\" Val froze. \"Knew knew, like knew, or knew?\"\n\n\"He repeats his words sometimes.\" I didn't want to make the conclusions that I was making, so instead I focused on giving the information to Val and hoped he would come to different ones. The waves were growing. The sky would be dark. \"He knows the way he thinks, the names of the men he kept at his side.\"\n\nVal cursed. He leaned up against the wall, his hand worrying at the end of his braid. \"You don't think - you know how he was with -\"",
        "He didn't say any more. He didn't have to. I knew how Drey was with those he fancied. I knew how he treated them like kings, how everyone around envied their clothes, their wealth, their standing. How he had found the woman he had been with when he sailed under me begging, how he had reminded her and all those around them how much he'd done for her. Or the sailor he'd brought on board after saving his life, given him a position of honor. How often he reminded us all that that man owed him, how often that man himself seemed to repeat it. How the way he said it slowly went from glowing praise to quiet acceptance. How often that man seemed to limp, how he stopped coming to arms practice or would pull away if you raised your arm. How that woman did her best to hide her bruises when we left the docks where she lived. \n\n\"It would explain how he got his own ship,\" Val said quietly. \"And the industry was his, in the end. He owned them all.\" My fists were clenched tight. It's better when you own them he'd told me once. He'd been so drunk he couldn't stand, and the sailor he'd brought on board had locked himself in the brig to get away from him. They can't fuckin' run if you own their life.\n\n\"I should have killed him years ago,\" I managed. My voice felt like lightning. My body felt like direction, like rain on the edge of fifty mile an hour winds. \"If I find out he's laid one hand on my Captain -\"\n\nVal waited for me to finish my sentence, eyes already checking the sky for a storm. He wouldn't find it here. Any pain I sent out into the world was gathering far away, on a ship I had once called home, that seemed to bring the world nothing but pain. \"You'll what?\"\n\nI'd what? I'll kill him, I wanted to say, but I was already going to kill him and what good would that do? You can't kill trauma, Sneg's voice called in my head, and I wanted to punch those words out of me, wanted to rip my brother out of time and make it so I had destroyed him when we were only children and he had first shown me he was not a being to be trusted.\n\nBut didn't that make me what my father wanted? Could I have known? Could I have done that at all? Me a child, him a child, and yes I had killed as a child and yes I had killed other children but only when my father demanded and only when it was my life or theirs and this, this was not that and besides, he was my brother - more than that, he was a being who had fought at my side for years, had saved my life, had lived the same things I had. Who understood. In that moment, in the aftermath of my father's death, with Val leaving the sea, leaving me, with Miranda turning on me and forcing me to choose between her death and her exile, would I have been able to give that up? How could I allow myself to lose such an intimacy? \n\n\"Fuck,\" I snapped, and whirled around to punch the wall. \n\nVal, arms crossed, stared with pursed lips at the hole I had created. \"You're fixing that.\"\n\nNo, I couldn't have killed him in the past. He had not yet become the killable being he now was, and I had not yet become the killer. Or perhaps it was the other way around; I was not yet killable enough, and he not enough of a killer for me to take action. And so I had died, and because of that he might have found the Captain and so the Captain had found me and all of that was how it should have been, had been how it had to be to bring me here but that didn't make the knowledge of it, the possibilities surrounding the ways it could have been different hurt any damn less. \n\nStanding there in the living room, in the present, I knew I could not kill him in the past. I could only kill him in the future, and so I would, and when that time came I would deal with the things that motion brought with it. For now, I could only control the things that this moment brought. And so I did the only thing I could think to do. \n\nI turned, walked past Val, and headed into the kitchen to begin making dinner. \n\n***\n\nVal tried talking to me a little more about Dreyfus and the Captain's possible relationship with him as I chopped and fried and prepared, but I ignored him. Not only was it speculative and therefore uninteresting, there was nothing to be done about it even if it was true. Val, used to this type of behavior from me and knowing how useless any further questioning would be, very quickly switched subjects. \n\n\"You know your ship doesn't show up when I try to scry.\" Val was working beside me, his hands just as quick as mine on the onions. He had spent his time in Minnie's kitchen, had learned all the same skills. It was an important part of our childhood - it was possibly why we were still alive when so many other children on that ship had died. \n\nI shrugged. \"It doesn't surprise me.\" Such spells had been Minnie's forte. It made sense that Alan would know of them. \n\n\"Are you putting protection on it?\" Val almost sounded put out. He probably believed he should be able to get past any protection I put down. He probably should. He was the stronger spell weaver of the two of us. \n\n\"No.\"\n\n\"Is the sea?\" There was a familiar edge to his voice; I avoided it with practice.\n\n\"No.\"\n\n\"Then you should fucking show up.\"\n\nI thought for a moment. It was rude of me to do this, but my loyalty to Val came first and I knew he wouldn't let this rest until I explained what was going on. I sent silent apologies to Cookie. \"Do you remember Minnie's brother?\"\n\n\"The one who worked with Urumbu?\"\n\nI had forgotten about Urumbu. He was dead nearly ten years now, Minnie's brother with him. \"No, not that one. Alan.\"\n\nVal paused, then turned to me so quickly his braid nearly hit me in the face. \"The one who abandoned his kitchen? The one who sailed his ship into the Void?\"\n\nI shrugged. That was the story.\n\n\"Gods.\" Val went to press his hands to his face, stopping just in time as he remembered that they were covered in the sweat of onions. \"No wonder you felt comfortable bringing them here again. With that man as crew, I'd go anywhere I wanted too.\"\n\n\"He isn't crew.\" Val peeked around his fingers. \"He's the cook.\"\n\nVal blanched. I saw him, the color draining from his dark skin to make him a sort of grey. \"Gods,\" he whispered. \"Gods. The fucking cook? He went back from fucking captain to fucking cook? Holy shit. Holy fucking shit, are you mad? Are you fucking insane to have him on your ship? You saw what he could do as captain, and you're letting him be the fucking cook?\"\n\nCook was the most powerful position of a ship. I knew it. Val knew it. Alan, now Cookie, had learned it the hard way, had thought he'd lived in power and instead had found his power in anonymity and I was in danger of breaking that now. I frowned, looking out over the sea. \n\n\"Does he know?\" \n\n\"Does who know what?\"\n\n\"The Captain. Does he know who works under him, the fucking power his ship holds?\" \n\nI shrugged, preoccupied with wondering if I was putting our protections in danger by revealing Cookie's identity to my brother. \"Well, he doesn't know Minnie.\"\n\n\"What does that have to do with anything?\"\n\n\"It would be foolish to point out that Minnie's brother was aboard if he doesn't know Minnie,\" I explained patiently. \n\n\"Gods,\" Val repeated. I frowned at him. It was not incredibly smart to call on the gods, new or old, so often in a place where the call might just go through. \"He's a little more than Minnie's brother, don't you think?\"\n\nI shrugged. However powerful Alan might be, whatever stories he might hold on his back, Minnie was still the matriarch. \n\n\"Go-\" Val started. I reached out and placed my finger on his lip before he could finish the thought. He immediately froze, realizing how often he had allowed that usually mundane curse to pass unhindered in this anything but mundane place. \"Shit,\" he finished sullenly, and I removed my finger. \n\nThere was a stretch of silence. Then, \"Does Minnie know?\" \n\nI remembered Alan's words to me when I had first met him, how he had told me he hadn't spoken to his sister in some years. \"I don't think so.\"\n\n\"Shit.\" Val pinched the bridge of his nose. \"She should know this. This changes everything.\"\n\n\"It changes nothing.\" I didn't know what change he might be referring to, but I knew that Alan should be allowed to reach out to his blood on his own time. \"I don't think he wants her to know.\"\n\n\"I don't really fucking care what he -\"\n\n\"Val.\" I turned to him. \"He took on a new name. He came back to the kitchen.\" For all of his power, for all of his well-stocked spells cabinets, he nearly refused to do any of the work I asked of him. He was wary of power in the way only those who understood what true power was could be. \"Give him time to adjust before you throw him back into that family, into the war.\"\n\n\"What war,\" Val muttered. \"There's no fucking war.\" \n\nOf course not, I silently agreed. No war, merely dead kings and stolen loyalties, broken vows and alliances, the children of gods thrust into a world that had places picked out for them while cooks and servants and other beings of power that had chosen their sides bade their time and were now simply waiting, waiting, waiting... \n\nIf there was no war, it was because the time had not yet come for the war to begin. If there was no war, it would be because I would be able to avoid it by doing what all my predecessors had done - silently, successfully kill the king. To do what Dreyfus had done. To do what I had done, what Val had helped me with. What Miranda had done to me because she thought I would do the same to her, because we were children of the sea and that was what we were raised to do.\n\nNo, I thought. There is no war. There is only death. I had been brought into this from such a young age that I knew nothing else; this had been my entire life, watching the slow death of Kings. Participating in my own. Would I ever be free of this cycle?  \n\nI sighed. Only fate could know. Only the stars held the answers. Fate, the stars, and my daughter. I turned my eyes out the window and hoped that perhaps she might hold the key to a brighter future, a better way.\n\n***\n\nFar away from the kitchen, far from the thoughts of dead men and living brothers, farther still from ships that creaked with love and farthest from ships that groaned under fear and the beginnings of a sudden and unexpected storm, a man stood hand in hand with the most powerful seer in the history of the world. \n\n\"Papa,\" she said sternly.\n\nThe man sighed. \"I'm sorry.\"\n\n\"I just need you to be listening.\"\n\n\"I am,\" he told her.\n\n\"No,\" the child told him, her face impossibly open and yet the man did not try to read it, did not think to take this moment and learn. \"You're not.\"\n\nWhat the man did not know, what he had not yet come to understand and perhaps never truly would was that the child was not only speaking to him. Or rather, she was only speaking to him, but she was not only speaking to him now. She held his hand on this bluff, on this island, but she also stood before him at dinner three years from now, and clasped his arm ten years from now, and froze in the middle of laughter eighteen years from now, because this man on the bluff was only here in the now with her and could only see this moment of time and was therefore at a disadvantage. \n\nBut the child could see. \n\nAll of these lines, all of these confluences. Each moment that was the child, or the girl, or the woman stood up and drew towards the man, or reached towards him best as she could, because she had seen something important and this man, this poor, sightless man needed to know. \n\nBecause the world was turning. And it turned on his soul. \n\nAnd the girl, everywhere. She can see. \n\nThree years from now, an eleven year old girl is frowning. She has a better grasp of time then the eight year old girl, but she still struggles. \"Did I already tell you the thing about the king?\" she asks the man seated at the table. He smiles and nods, and she frowns and is left with a feeling of discontent because there was something important and just because she knows she already told him doesn't mean the importance of the thing has gone away. \n\nTen years from now, a young woman tightens her grip on the man's shoulder and freezes up. She takes a moment before shaking her head. \"I already told you that,\" she declares. The man pats her on the shoulder decisively before returning to his fishing; he's used to this by now. \n\nEighteen years from now, the woman barely misses a beat in her laughter. She's used to this by now, too. The man before her finishes his story, then pats the hand of the man beside him, smiling with such fondness the woman melts a bit. These two men are still in love, will always still be in love. She's known this since she first saw her father. Since she first was born, she's lived this moment. \n\n\"More tea?\" The woman is now turning to see a small woman enter the room. Grey is slipping into her curly hair. Sadness keeps slipping onto her beautiful face. This will be the last time she will come to visit this place; something terrible will happen on her way back to the Vault of Sapphires. Cassandra knows it will happen, even if she doesn't know what it will be.\n\nSybil knows. \n\nThe girl has known ever since she could know things. Ever since she first opened her eyes and could see she's seen the end of her mother, no, more, seen the death of men she hadn't even met, mourned the loss of friends she hasn't yet made and loved lovers that haven't even been born. And so standing there on the bluff with the man, she looked at him and will look at him and is looking at him and she knew that he would be okay, that he would live through this, and knew the exact moment when that would stop being true. \n\nBut the man, the man could not see and so he did not think to pay attention. \n\nThe Sybil on the bluff squeezed the man's hand. She knew, from the Sybil three years from now, from the Sybil six months from now, that this is not an easy thing to hear. She knew, from the Sybil eleven years from now when the man would get drunk and cry in her arms, exactly what this man had been through in his past. What he had done to survive. She knew, from the Sybil fifty three years from now, that he would survive so, so much more. \n\nBut she did not tell the man any of this, because she didn't know how to, because she was a child, and because there was something important that the world needed him to know. \"I know you're not listening,\" she continued, because the man one year and six months from now was at that very moment or at least as much as any moment could be a moment to the girl telling her how he wasn't listening until the girl had made him listen. \"And I really, really need you to listen. Please, Papa. It's important.\" She tugged on his hand and felt the man from seven years from now gather her into a hug for the first time in months. \"Really important.\"\n\nThe man sighed and turned his eyes to her. \n\n\"I'm sorry,\" she started with, because that seemed like the thing to say. She never knew how to talk to people, and there were a lot of people with her then. \n\n\"What?\" the man from ten years from now asked, pulled from his fishing. \n\nThe girl shook her head and tried again. \"You gotta know some things,\" she started, and this time she got it right and the man on the bluff was the one who heard. \"The world needs you to know some things.\"\n\n\"I'm listening,\" the man said, and this time he was and she sighed her relief.\n\n\"You're not gonna do it.\" He was staring at her, but she had to say what the world was saying. Had to repeat the things that needed repeated. \"The prophecy isn't for you. You can't do it, he's gonna name you.\"\n\nThe man's hand tightened in her's for a moment, then relaxed. \"I know,\" he said quietly.\n\n\"You won't be able to kill him,\" the girl told him.\n\n\"I know,\" he repeated. He wasn't looking at her, was looking at his feet instead. Three years later he was telling her that he thought he was going to cry. Eleven years later he was. \"I thought... I mean, I hoped...\" \n\nBut the girl wasn't finished. There was something building in the cracks, something slipping out. All through the twists, everywhere she touched, the girl lifted her head and listened. She had to. \n\nThen she sighed and tugged at the hand until the man's eyes raised and met hers. \n\n\"Long live the King,\" she told him softly.\n\nHis head jerked back. \"What?\"\n\n\"Long live the King,\" the woman on the docks said. \n\n\"Long live the King,\" a child seated at dinner said.\n\nIn a living room somewhere in the future, Cass put her hand knowingly on the woman's shoulder as she pressed her hand to her head in frustration. \"Long live the King,\" Cass said for her. \n\n\"Hail,\" finished the child on the bluff. \"For the King will never die.\"\n\n***\n\nThe Captain did not look pleased when he came back into the room. I reached for him when he walked past me, hoping to pull him into me, my body seeking some sense of solidity, safety, comfort, but he dodged my touch and instead settled on a chair on the far side of the room. I saw the look on his face and recognized his need for space and so I drew back, knowing his need was greater than mine. I could find what I needed in his proximity; his comfort was more important to me that his touch. \n\nFor the next few moments I drew the conversation away from him, pointedly keeping Val with me until he grew frustrated with his inability to question the Captain and left the room, probably to try and find Sybil to see if he could get some answers from her.\n\nI waited in the silence Val left, knowing that if he wanted to speak he would do so. The Captain sat quietly for a long time, his eyes on the ground, his hands tight on the chair arms. When he finally spoke it was explosive, fast. \n\n\"What the fuck.\" I turned, happy to stop pretending to do work. I had expected his words some time ago and had run out of things to do long before he spoke. \"Your fucking kid is. And this fucking place.\"\n\nI turned to face him, leaning on the table behind me. \"Did Sybil say something?\" I asked quietly.\n\nThe Captain did not answer. His head was in his hands, hair falling in front of his face. I wished I could see him. I wished I could hold him. When his hand fell out towards me, a motion so helpless and yet so deliberate I thought he had become gravity itself, I was there in an instant. My hands closed around the warmth of his palm as I kneeled before him. Still he did not lift his head. \n\n\"My love,\" I called to him softly. His hand closed tight around mine.\n\n\"Is this the right thing? What we're doing. Is it.\" His hand shifted to cover his eyes, then up into his hair. Still his eyes were obscured. \"Is this going to work?\"\n\n\"Of course.\" Things were true and then I said them; the Captain was always safe with me; I was the sea, and even if I were but a man I would have said those words to him for they were needed, for they were the truth. \"The North is ours.\"\n\n\"Is it?\" He looked up at me, and I almost drew back, his eyes held so much. \"We're going up against a god, Sailor. We're going up against the King.\"\n\nThose words landed in my chest next to the things I had thought earlier, the fears I held for the possibilities of the Captain's past. I breathed in and felt them settle a little too close to what I used to call home. \"I know,\" I told him quietly. \n\nHis eyes searched mine for a moment, and I let him look. Hoped he would see so that I would not have to tell him. But instead he asked me the question that he had been asking me before, back on the ship, the one that I had not bothered to hear. \"Is this stupid? Is this safe? You've heard the fucking stories. Fuck, you sailed with him yourself. You know what the Kings can do.\" His eyes were red and holding something I wasn't ready to name. \"Sailor, what the hell are we doing?\" ",
        "I paused for a moment, hearing the way those words sat raw behind his voice. He feared, feared in a way that was deep, unavoidable, in a way that had been set into his bones and pressed into his muscles so that he would never quite be rid of it, not physically. Not truly. I had known this, had seen it before the night that he was drunk and even then it had made me want to rip the world to pieces and remake it the way I demanded, but seeing it here, watching him wear this ...\n\n\"He hurt you,\" I confirmed aloud, seeing the truth of it in his eyes, his face. \"It was Dreyfus.\"\n\nThe Captain wouldn't look at me, instead casting his eyes down, all those emotions spilling onto the floor. I wanted them to spill onto me where I could catch them up and know they would never again slip into his life. \"He hurt many people,\" he told me. \"I'm nothing special.\"\n\nBut I wasn't going to let him turn from this so easily. \"The man you dream about -\"\n\nHe gripped my hand so tight I made a noise. \"I dream of you,\" he said forcefully. \"I only fucking dream of you, Sailor.\" Then he tipped his head back, as if slowly draining something from his mouth down his throat. \"I only want to dream of you.\"\n\nI gently pulled him forward off the chair until he was resting against my chest, his knees on the floor between my legs. His breaths were fast and uneven; I felt his soul grate against mine and wished I could do more.\n\n\"Fuck that man,\" he whispered into my chest. \"Fuck him to hell.\"\n\nMy free hand moved around him until it found his spine, could trace up that proof that he was standing, of bone and solidity and the ways things could fit together and become something harder than they were on their own. \"We'll send him there,\" I promised, knowing it was true. Praying it would be right. \"We'll kill him.\"\n\n\"We'll kill him,\" he repeated. \"Prophecies be damned.\"\n\n\"Prophecies be damned,\" I echoed, but Sybil spoke truth not prophecy and I could not stop the worry that bubbled up as I began to wonder what it was that she had said. \n\n***\n\nWe headed back to our ship quickly after that. The Captain did not ask to leave but neither did he protest when I told Val that we would be going; his goodbyes were polite and stiff, apologizing to Val for not staying longer, for making him craft a dinner that we would not partake in. \n\n\"The apology is mine,\" Val told him, a beautiful bow sending his scarves fluttering and his braid slipping over his shoulder. \"I spoke out of turn.\"\n\nThe Captain neither accepted nor turned down Val's words. When Sybil came into the room I felt him stiffen before me. \n\n\"Papa.\" She tugged him down until he was at her height, then wrapped her small arms around his neck. I saw his hesitation as he slowly put his arms around her frame. \"It'll be better next time,\" she promised him, and her words held both sorrow and such sweet redemption and I don't know who she was redeeming, but I do know that my Captain slowly melted in the face of it and hugged my beautiful, wonderful, daunting daughter back as only she could demand with such parting words. \n\nAs we turned to leave, Val grabbed my hand and pulled me aside. \"You have to tell him,\" he hissed. I glanced over at the Captain, already moving towards the beach, his eyes on the ship that would take us from this place where he felt so uncomfortable, so unsafe. \"You need to tell him.\"\n\nI didn't know what Val was referring to exactly but I knew he was right. I sighed and gave him a quick hug before hurrying to catch up to where the Captain waited at the edge of the sea. \n\nThe trip back was quick and difficult. The things that spilled from the cracks of the universe tugged at us even as truth ripped at our souls, the Captain sitting stiff and refusing the quiet ways I reached out, and so I settled into turning my shoulder into the winds of the world and rowing us back to the ship.\n\n\"You're -\" Natch started when we got back to the ship, but the Captain was already past him and headed below decks. Natch turned to me, an expression of confusion and concern on his face. \n\nI sighed and shook my head. \"Take us back to the Ephretes.\" As an afterthought, I added, \"And keep the sails trimmed tight. There might yet be a storm.\" \n\nIt had been stupid to send my anger to Dreyfus. He might well lash back. \n\nNatch did not question either my instructions or the way the Captain threw himself into the darkness of the ship, but instead quietly turned and began telling the crew what needed to be done. I was glad for his presence and the trust I could put in it as I turned to follow the Captain to his quarters. \n\nHe was already on our bed, curled up around himself so tight I had to stop myself from drawing in my breath. I quietly closed the door behind me, watching his shoulders move with his breath, remembering the way he had come to this pose the night I had thrown a chair across the room in anger and wondering how much of that night he had lain awake thinking of losing me and how much he had lain awake in fear, but that thought was too much for me and so I put it from my mind and instead began to walk forward.  \n\n\"Love.\" He didn't move at my quiet call. His form shifted at the gravity of my weight settling on the edge of the bed, but that was all. \"Sir.\" \n\nHe did not look at me, but one arm went up in the air, a hand questing about for something. Perhaps contact. I gave him my hand and was immediately pulled towards him until my arm was wrapped around his chest, my face nestled into the tangle of his thick black hair. I used my free hand to reach up and uncover the skin of his neck until he could feel my breath, my lungs giving him warm reminders of my presence, of my calm. He pulled me tighter in response. \n\nWe laid there for a long time, warmth spreading from one body to the other and back, before the Captain spoke. \n\n\"Are we headed North now?\"\n\n\"Just back into the Ephretes.\" I placed a careful kiss on the back of his neck and felt him sigh. \"I wanted to leave that decision to you.\" I paused, wondering how much to say. \"To wait until you felt ready.\"\n\n\"I'm ready,\" he said instantly. We laid in silence a bit longer, my arm rising and falling with his breaths. Then he sighed again, shifting slightly. \"No. I'll never be ready. But fuck him and fuck that and we have to go some time, so we might as well just fucking do it now.\"\n\nThere was such bitterness in his voice I skipped a breath, waiting to see if he would continue. When he did not, I tried a careful approach, wary of his fragility and the way that might explode and hurt him. \"We don't have to go at all, my love.\"\n\n\"Your revenge,\" he reminded me. Still sounding bitter. \"Your death.\"\n\n\"Is less important than you.\" He was silent at that and I pulled him closer. I needed him to hear this. I needed him to know this. \"Nothing will ever be as important to me as you.\" \n\n\"We still sail North,\" he decided. \"I can't keep running from him forever.\" He turned suddenly, his body pulling slightly from my arms so that his head could turn and look at me. \"How did you know? How did you. I mean, I never said anything. And I thought I acted.\" His eyes flicked over my face, dark, his lips twisted with the taste of something I didn't dare to kiss away. \"Was it Val? Did he find out, use his fucking network or whatever, spy on me? Didn't trust that I was on the level having sailed with your mortal fucking enemy?\"\n\nI thought about how to answer that even as I winced at the way he spoke of my brother. It had been Val, partly, but it had been so much more. So, so much more. \n\nYou need to tell him, Val had said. Well. \n\n\"It was the way you talked about him.\" The Captain pulled away slightly more, his brows drawing even closer. \"The way you knew so much. You must have spent time close to him to know him so well.\" Something flitted over the Captain's face, gone before I could pull it away and kill it forever. \"And I recognized the way you talked about him. I'd seen it before, in the people he'd done this to -\"\n\nThe Captain pulled back before I could finish my sentence. \"You saw it before and didn't fucking stop it? You just fucking watched it happen, sat back and fucking -\" I sat up as he pressed a hand to his face, words abruptly stopping with the application of his palm. My stomach was churning uncomfortably; I tried to breathe to settle myself but found the oceans within had other ideas, tied to the Captain, always the Captain. My body waited to see what he would say next. \n\n\"I'm sorry,\" he said, which made me feel no better. He didn't take his hand from his face. He looked defeated, tired. I wanted to gather him to me and keep him safe in my arms. \n\nI didn't move.\n\n\"You couldn't do anything. He's so fucking powerful, he was the King, and I don't know what you were back then. I don't know who else was there and I just.\" He gave a heavy sigh. \"What could you do against your commander?\"\n\nYou have to tell him. My stomach churned. I slowly moved so that my hands pressed against each other, my eyes tracking down to watch them. \"He was not my commander.\"\n\nI could feel the way that made the Captain freeze even as I did not dare to look at him. My hands pressed against each other so tight they looked white. \"If not your commander,\" the Captain said, his voice slow and very, very careful. \"Then what?\"\n\n\"He was.\" I paused. But in the end, there was no way to say this other than the way that it had been, and so I said it. \"I commanded him.\"\n\nThere was silence. Silence and the roaring of an ocean that feared for the first time since I was a child. \n\nThen; \"What?\"\n\n\"I -\"\n\n\"No, I fucking heard what you said. I just.\" I could hear the Captain's voice shaking. \"Sailor. What are you saying? You commanded - you commanded that man? You, you were in charge of him?\"\n\n\"As much as anyone could have been.\" He had always been rogue, had always been prone to mutiny. But he had still sailed under me, had still sworn fealty... \"He was my first lieutenant.\" \n\n\"Your first...\" The Captain trailed off into silence filled with uneven breaths. \"Sailor, were you the fucking King?\"\n\nI had been the Pirate King. I was proud, I was the sea incarnate, I was the Ghost of the North and seawalked to kill those that dissented with me, I rode the crests of waves and my enemies trembled at the whisper of my names. \n\nI nodded, very slightly, and felt like I was going to throw up. \n\n\"Holy fuck.\" The bed shifted as the Captain removed his body from the same space as mine; the sea within me began to keen. \"Holy fuck. When were you going to fucking tell me?\"\n\nI opened my mouth; I am dead, no longer this man. It didn't matter. But it mattered, it mattered so much and so obviously that I closed my mouth again and shook my head, a quiet submission that felt like dying all over again.\n\n\"Sailor, when you going to fucking tell me?\" His voice had an edge that felt dangerous to no one but me; it felt like boiling water, like he would eventually make me dry and nothing but salt to crack and blow away. I shook my head again and heard him begin to pace. \"You weren't going to tell me? At all?\"\n\n\"It didn't seem important,\" I whispered. I don't think he heard me; I was glad for it. \"I just wanted to be.\"\n\n\"You, the fucking King.\" His voice got louder and quieter as he moved around the room. I hated both; louder, his voice hurt more, quieter meant he was farther away, and my soul screamed for him to come back only to have him loud and painful once again. \"You. I should have seen this, I should have. Shit. Do you know what they say about you, about the Kings? Do you know, and the way you use men, the way we're just fucking ants to your games - fuck. Holy fuck. Is that why you're going back North? To claim the fucking crown again? Taking me along for the ride, a convenient ship, some fucking idiot you convinced to fuck along the way? Jesus. Oh my god.\" His words were like knives to my soul; I flinched each time one hit even as I felt the sea swallow them whole, hungry for the punishment, deserving this. \"Am I nothing but an easy ride to you, Sailor?\"\n\nI crossed my hands over my stomach at the edge in his voice. At the things he was saying. \n\n\"Fuck, I'm such a fucking idiot. From the bed of one King to another, a fucking idiot, a fucking. Fuck. I should have seen it in your power, in the way you're so fucking. He can do the same things as you, you know, and I just thought, I just. I wanted it to be better. I wanted you to be better.\" \n\nMy body curled around my arms, bringing my forehead down to the bed. All I had ever wanted to do was be better than Dreyfus. All I had ever tried to be was the version that was better, better than what my father had tried to create, better than the world had set me up to be. \n\n\"Fuck.\" He had stopped pacing now. I could feel his eyes, hard and accusing on my form. I didn't dare look up. \"And why didn't you fucking stop him, then? If you were the fucking King, why didn't you fucking stop him?\"\n\n\"I'm sorry,\" I told the bed. \"I couldn't.\"\n\n\"Fuck, Sailor!\" He was shouting into my whispers. \"Yes you fucking could have! You, the fucking Pirate King, the most powerful man on the sea! The fucking sea itself! You could have fucking stopped him!\"\n\nI turned, then. I had to see him. Had to know what it was that he saw in me. \n\nHis eyes were dark. His face was open, and lost, and there was so much pain I wanted to cry. \n\nBut I didn't. Instead I said, \"My love.\" And I watched the way that made his eyes close and his brows draw closer together, like the word caused him further discomfort and I hated myself for so selfishly saying it. \"I couldn't.\"\n\nHe held my eyes, begging me for something. Asking me for more than I could give, and I wished that wasn't true, hated myself for making it so. \"Why didn't you kill him when you had the fucking chance?\" \n\nI breathed in. I breathed out. You have to tell him. \n\nAnd so I did. \"Because he is my brother.\"\n\nHis eyes flew open as he took a step back, his hand going to his hip and I knew he was looking for a knife and I wished in that moment that he could find one but he had taken off his blades before he had gotten into bed and so he grasped at air and it didn't matter, I found, because just watching him make that motion hurt so bad I made a noise. \n\nWithout another word, the Captain turned and left the room. \n\n***"
    ],
    "authorname": "nakamook",
    "tags": [
        "angst",
        "gay fantasy",
        "gay male",
        "gay novel",
        "gay pirates",
        "gay romance",
        "romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-17"
}