{
    "title": "Graduation Summer Ch. 08",
    "pages": [
        "Waking up to a typical Midwestern mid-summer day. It was one of those oppressive hot and humid days. The kind of day where they say if you go out to a corn field you can hear it grow.\n\nAnswering the phone, \"Hello\".\n\n\"Hey there.\"\n\n\"Hey Rita.\"\n\n\"Got anything planned for this afternoon?\"\n\n\"Nope. Too damn hot. Was going to stay inside. Maybe watch a ball game.\"\n\n\"How about going up to the lake. Lay out. Swim.\"\n\n\"That sounds fine.\"\n\n\"See you in an hour, or so.\"\n\n\"OK. See you then.\"\n\nThe lake is the same one we had gone to play miniature golf, only the beach that we were going to was on the near side. It was a place to hang out. Kind of a family and teen crowd. To be honest though, when Rita first asked what I had planned for the afternoon, the thought of spending the afternoon in her bed quickly entered my mind, but was quickly squashed at the mention of spending time at the lake. Oh well. At least I would be able to see her in her bikini, and apply some sun lotion. Maybe Chris would be joining also. Another bikini clad body that would need some sun lotion. That thought put a smile on my face, and a familiar tightening in my groin, but that would have to wait.\n\nAfter showering and shaving I pulled into Rita's driveway, next to Chris's car. Hmm, going to get to see both of them in bikinis. One of my dreams coming true. This could be a fun day. That would turn out to be the greatest understatement of all time.\n\nRita and Chris met me at the door and stepping in I noticed that they were both dressed pretty much the same: white button-down blouse, thigh length shorts, and bras. Their dark blonde hair pulled back into pony tails; but no bikini tops.\n\n\"We changed our minds. After calling you we went outside and decided it was too miserable to be outside, even at the lake. Thought we would just hang out here. Maybe play some games. Maybe cards. You OK with that?\" Rita asked with a bit of a sly grin.\n\nShrugging my shoulders, \"Sure,\" as we headed downstairs.\n\n\"Everybody else is gone till this evening. So, it is just the three of us,\" she said nonchalantly, and I didn't think anything of it.\n\nThe basement was nice and cool. A radio was on to the local AM rock station that we had all grown up with as we sat on the floor in a bit of a circle.\n\n\"Want to play cards?\" Rita asked.\n\n\"Like what? I don't know that many card games,\" I replied.\n\n\"Well, you're probably going need to learn some. I mean going off to school, it's probably a favorite past-time. \n\n\"How about poker?\" Rita asked innocently.\n\n\"OK. I don't really know what beats what.\"\n\n\"I kind of do. Here let's make our own list. May not be accurate, but close enough for now.\"\n\nSo, we created our own list from lowest to what we thought would be highest: high card, two of a kind, all the way up to a royal flush. We may have gotten some mixed up in the middle, but nobody cared. \n\nAfter about six or so hands with each of us winning a few, but nobody dominated, Rita innocently says, \"You know, we should play for something to make it more interesting. You know like stakes.\"\n\n\"Not money. What about something like toothpicks or something,\" I answered.\n\n\"No, definitely not money, seeing as neither of us has any,\" Rita giggled. \"Noooo, I was thinking of something more interesting.\"\n\nGlancing over at Chris before turning to me grinning and saying, \"Clothes\".\n\nI would imagine the look on my face would have been the same as it somebody had told me I had won the lottery. Going from dumbfounded, to shock, and then to complete hysteria as what had just been said sunk in. I tried to remain cool, calm, and collected on the outside, but I doubt that it came across that way.\n\n\"Really?\" I asked first looking at Rita, and then to Chris.\n\nThey both nodded. I could tell Chris was a little nervous but she grinned back as she nodded.\n\nTaking a deep breath, \"OK\".\n\nFor the next few minutes, Rita explained the rules. When she finished, I realized that before I left later that afternoon, I would not only be seeing Rita naked again, but Chris also. Then there was that part of the rules about once you were naked and having to do whatever the winner of the hand had you do. Me naked... with two beautiful sexy naked girls. My imagination was going into over-drive. My dick throbbed.\n\n\"So, any questions,\" Rita asked, again grinning. \n\nI looked at her, then Chris, then back before asking, \"How long have you been thinking of this?\"\n\n\"That was my first question too,\" giggled Chris, who spoke for the first time since the announcement.\n\n\"For a while. But I needed to make sure Chris was OK with it first.\n\n\"Ready?\"\n\nTaking another deep breath, \"OK. \n\n\"Wait a minute, you both have one more thing on than I do.\"\n\n\"Yeah. So? We're also going to be showing stuff before you,\" Rita grinned back at me. \n\nI just shrugged my shoulders as the first hand was dealt. Everybody picked their cards and looked at them nervously. \n\nNot too bad, a pair of eights, a king, a ten, and a three. Throwing away the ten and the three I got back a queen and a deuce. Each of the girls threw away three cards. I tried to read their expressions and body language as we sat on the floor facing each other cross legged; my mind briefly getting distracted imagining them sitting like that later on. Back to the business at hand. Time to show.\n\nI laid down my pair of eights. Chris breathed a sigh of relief as she laid down a pair of nines. We waited for Rita to lay hers down.\n\nA pair of sixes. \n\nLooking at both of us she casually started to unbuttoned her blouse.\n\n\"I thought there was a rule that the winner of the hand was the one to remove the clothing, or designate someone else to do it,\" I said looking at Chris.\n\nChris and Rita looked at each other for a moment before Rita turned to me, grinning, \"OK. Would you like to do the honors?\"\n\nI smiled back and stood; reaching down taking her hands into mine I pulled her to her feet. She looked back at me with a \"shit eating\" grin. Reminded me of the time when my ex-girlfriend took my keys as I was getting ready to leave her house and put them her blouse pocket right above her right breast where she grinned back at me, daring me to reach in and get my keys. At that point in our dating, we had only kissed as I was too shy to go beyond that. Even then, I was still too shy to reach into her pocket, so I pulled her blouse away from her body and then reached in and got my keys back. She just shook her head back at me and smiled.\n\nRita watched as my eyes fell onto her chest as more skin was revealed. I unbuttoned the top button and moved to the second as I rested the back of my right hand against her firm left mound. Once all were unbuttoned, I moved the blouse off her shoulders as her white bra covered breasts came into view. There's something about seeing a girl in a bra, as opposed to a bikini that is very sexy and erotic. My dick throbbed. Rita grinned back at me.\n\nWe sat back down as the game continued as all of us realized where this was going. \n\nIt soon became apparent that Rita was going to refer all her winning hands to either Chris or I, depending on who had the loosing hand. The next couple of hands, Rita watched intently as I removed Chris's blouse. I could have stroked Chris's breast like I did Rita's but decided to wait. She also watched as Chris removed my shirt and rubbed her hand across my chest. They both smiled at each other. \n\nRemoving Rita's shorts was fun. Again, I pulled her to her feet as I sat down on the couch in front of her. Chris watching from her position on the floor in anticipation of what was going to happen when it became her turn to have her shorts removed. Sliding my right hand up the inside of her smooth right thigh to the bottom of her shorts while looking up, past the rise and fall of her chest as she breathed our as our eyes locked. The only sound that could be heard in the room was her breathing. \n\nMy eyes returned to her shorts as I unbuttoned the one, and only button, before taking the sides of her shorts and easing them down her hips as the top of her white bikini panties come into view before falling to the floor. Stepping out of her shorts she stood there as I took in the barely visible shadow of her dark blonde bush as a few stray strands poked out from the sides. Stepping back I took in her whole erotic image as she stood in just panties and bra. My dick throbbed. She grinned and returned to her spot and sat cross legged again. My dick throbbed again as she continued with the grin.\n\nMy ace high hand lost to Rita's three of a kind and Chris's pair of threes. She grinned first at me and then at Chris and nodded. Chris grinned at me as she stood and sat on the couch. I stood and moved before her with everything at eye level, the bulge was obvious as it sat along right side of my shorts. I wasn't sure how Chris was going to proceed. \n\nShe had rubbed her hands over my bare chest and back like she had in our make-out sessions, but that was all. She had watched as I stroked Rita's thigh earlier. I looked down at her as she licked her lips and moved her right hand to inside my right knee and slowly slid her hand up to the bottom edge of my shorts. Rita watched on intently as Chris's hands move to the top of my shorts to unbutton and then slowly unzip. She looked up at me briefly, biting her lower lip, before returning her gaze to the opening of my shorts. My shorts came down pretty easily as my \"tighty whities\" kept my bulge somewhat constrained as they fell to the floor. They both stared at the outline of the length along with ridge of the crown and the growing wet spot.\n\n\"Oh my,\" I heard Chris as she quietly gasped, keeping her eyes locked on the bulge.\n\nWe returned to our spots on the floor. Chris was on a winning streak as Rita's bra was next; Chris gave me the honors. She scooted over to sit facing me. Leaning in and rubbing my hands over her shoulder then to her back as my fingers found the clasp and got it the first time. Practice makes perfect. I leaned back, we looked at each other as I moved the loose straps off her shoulders and down her arms to reveal those perfect half apples and hard nipples in the light for only the second time. Chris watched me as I took it all in and appreciated her best friend; topless.\n\nRita sat back, brushed her hands over her breasts and across her nipples before raising her arms to clasp her hands behind her head as she looked straight at me with a sultry exotic look that I have never witnessed while she gently swayed. It was all I could do to not lean in and ravish each nipple with my tongue. I had a feeling that would come later. My dick throbbed at the vision in front of me and that thought.\n\nRita and I were both one article of clothing away from being naked. Chris still had on shorts, bra, and panties. She needed to lose some of that, and the next hand she did.\n\nMoving back to the couch Chris stood in front of me as I took in her long smooth legs. I had checked out Chris's legs before, but never this close. They could have been the legs of a runner; lean and firm. Putting one hand inside her knee, I moved up her smooth thigh as my hand touched her skin for the first time. I heard Chris gasp silently, as I looked up to see her eyes closed as she took in the sensation. \n\nMy fingers found the button at the top of her shorts. Once undone tucking my fingers into the waistband of her shorts slid down to reveal another set of white bikini panties. I decided to not just let the shorts fall to the floor on their own. I brought my hands up so that my palms were above the waistband pushing the shorts down as my palms glided down the outside of Chris's smooth thighs until her shorts were pooled at her feet. It was then that we looked up at each other and smiled. My dick throbbed. Rita smiled and was happy how this was going. It had the makings of 'happy endings' for everybody by the end of the day.\n\nNervous hormones were running at high levels as we got ready for the next hand, which I lost to Chris.\n\nThis time they both moved to sit on the couch as I nervously stood directly in front of Chris. Looking down I could see the swells of Chris's half covered creamy breasts peeking out from the bra. Rita's nipples were rock hard, as was I. Rita whispered something in Chris's ear and they both giggled.\n\n\"I think you should put your hands behind your head,\" said Rita as she looked up and grinned.\n\nWhy not. So I did.\n\n\"OK and move your legs apart just a bit.\"\n\nSo, I did.\n\nTheir attention returned to my throbbing bulge and the growing wet spot. Chris's right hand moved slowly up the inside of my right thigh to where her index finger lay against my covered scrotum. Bringing both hands up to the elastic waistband, she looked up biting her lip before first pulling the back of my shorts down to below my butt cheeks causing the front to come down a bit to reveal a line of dark hair. \n\nRita gave Chris a nod as Chris turned to look at her. Taking a deep breath, she slowly pulled down the front; first exposing all of my curly dark hair, then the thick base of the shaft. I watched as my shorts slowly traveled the length, both sets of eyes wide open, stopping briefly as the waistband made contact with the ridge before continuing over the head. It sprang into view as it was released from its confines; my shorts free falling to the floor.\n\nThey both let out a gasp as I stood there naked; my erection horizontal and throbbing with each heartbeat, the outline of each testicle completely defined as they hung in the loose sack, the left one hanging slightly lower.\n\n\"OH MY GOD,\" gasped Chris.\n\n\"I know. This is only my second time to see it like this. In all of this light and I am still amazed.\"\n\n\"It's just like you described it. All of that fits inside of you?\" Chris asked, her eyes taking in every vein along the shaft and every wrinkle of my hanging sac as my dick continued to throb. My eyes went over to Rita's and she just grinned back. More sharing of details. Chris knew everything.\n\n\"Yes. It feels wonderful. So full,\" purred Rita as she thought 'just like you'll find out later today'.\n\n\"Go ahead. Touch it.\"\n\nRita and I watched as Chris tentatively reached up with her right hand, the palm resting along the underside of the shaft as her fingers closed around my hardness. I watched as she seemed to be examining the small hole at the tip, the red ridge that separated my glans from the shaft, the soft sensitive flesh beneath it which she lovingly stroked with her thumb. I groaned as her cool hand made contact.\n\n\"Go ahead. Touch his balls. He really likes that.\"\n\nHer left hand came up and cupped my hanging scrotum and gently massaged each testicle. Again I groaned as her cool hand made contact. My dick throbbed as a drop of pre-cum formed. Chris looked up and smiled. She was having fun, and so was I.\n\n\"I just felt it move in my hand.\"\n\n'Yeah, just wait till you feel it throb when it's inside of you,' thought Rita as she smiled back.\n\nChris reluctantly gave up her prizes as we returned to our spots as we all sat cross-legged again. My turn to provide some distraction; there were two girls here that needed to get naked. This time I noticed, wet spots were visible on their panties that weren't there before. I wondered if they each noticed it on the other, and wondered about themselves. Just then I remembered one of the rules. The one about once a person is naked, they still played, but if they lose again they have to do whatever the person with the winning hand tells them to do. I wondered what that could lead to. With these two, you never know, especially with what has been happening the past few weeks, and especially the last hour.\n\nChris lost to Rita. Rita turned to me, \"Care to do the honors?\"\n\nI stood up and pulled Chris to her feet as she held her hands out staring up at the rigid shaft in front of her. Sitting back on the couch, Chris sat on my knees facing me with my dick laying between us, but not making any contact. It was going to be my turn to have some fun. \n\nRita watched I cupped her best friend's face in both hands as we gazed into each other's eyes as I slowly traced my fingers down her jaw line, along her neck, across each shoulder, over her bare back to her bra unclasping it. Moving the shoulder straps down her arms, the cups fell away from each mound until each was totally unveiled in all their glory. Tossing the bra away. Chris watched, as I sat back and took in the view before me. \n\nSlightly larger than Rita's; each like a firm small orange sitting high and proud with quarter size light coral pink areola surrounding the hard pink eraser size nipple. The slight tan line just above the areola giving a slight contrast between the light gold tan of her chest and the flawless creamy whiteness of each breast. My dick throbbed, and I'm sure more pre-cum formed, but I was too busy with other things to notice, or care.\n\n\"Wow!!\"\n\nShe smiled and proceeded to copy Rita's earlier actions by locking her hands behind her head, pulling her breasts higher and tight against her chest as she peered into my eyes. This time, I gave in to my earlier temptations and leaned in and gave the left nipple a full lick from the base of my tongue to the tip as I heard that unmistakable intake of breath and a noticeable exhale. Pulling back, she offered up her right breast, which I gave the same attention to and resulted in another deep inhale and exhale plus a slight whimper.\n\nChris stood and looked down at my hardness as I took in her topless form, each nipple totally aroused and now shining with wetness. She smiled as my dick throbbed. I could see Rita sitting there smiling as she watched the whole thing unfold. Her wet spot increasing in wetness and size.\n\nSitting back down and getting ready for the next hand, I noticed that Chris's wet spot matched Rita's.\n\nRita threw down two pair as she smiled: fours over eights. Chris also had two pair: sixes over jacks. Rita's smiled dimmed a bit and disappeared momentarily when I threw down my three sevens. We looked at each other and her smile returned. I was going to have some more fun.\n\nRita stood tall in front of me as I sat on the couch looking up past her breasts as she looked back at me with anticipation. Chris had moved over to the side of the floor to get a better vantage point. Sitting up as straight as I could, I first licked the right nipple and then the left. I could sense her hunger as she pulled me into her chest while letting out a gasp. \n\nSitting back down, both hands traveled up the outsides of her smooth thighs and over the sides of her panties to the waistband. Slipping the back of my fingers into the waistband, and moving across the front as the back of my fingers moved across the top of her soft fur before returning to the sides as the panties began their decent. Watching intently the top of her dark blonde triangle came into view as the panties were slowly lowered. A sweet musky scent radiated as they pulled away from her wet lips and pooled around her feet as she stepped out of them before kicking them aside. I sat back on the couch and took in her totally nude form... again... for only the second time. \n\nThe triangle seemed shorter as the crease peaked out from the depths between her legs. Rita parted her feet slightly before moving her hands up over her breasts, rolling each erect nipple between her thumb and index finger before locking her hands behind her head and assuming the \"Pose\" as she swayed back and forth. She watched, and smiled, as my dick throbbed again. Leaning forward, my right hand again moved up the inside of her right thigh, only this time when I came to the juncture between her legs, my finger slid between the wet lips and traveled up the folds to give her clit a gently stroke. Rita's knees almost buckled as she let out a gasp.",
        "Chris sat off to the side, mesmerized, in anticipation of her unveiling.\n\nAs I stood, Rita pulled me into her as she planted the hottest kiss I think I ever experienced. Her tongue probing. Her nipples rubbing across my chest as her mound ground against my hardness.\n\nBreaking away, each of us breathing hard, \"Come on, there's still someone that we need to get naked,\" I said.\n\n\"After what I just saw, Bill, you can get me naked right now. We don't need this game anymore,\" Chris said, her eyes wide with arousal as she walked over to where we were standing. Her pointed nipples leading the way.\n\nRita sat to my left on the couch, our bare thighs touching, as Chris stood directly in front of me. Her cute little navel at eye level. The shadow of her underlying dark blonde triangle visible through the now nearly transparent wet panties as her scent rose in the still air of the basement. Chris watched as my hands moved up her inner thighs to the base of her panties as my hands rested against the juncture of wet fabric and skin. Continuing the journey upward, I had to give those pert breasts one more caress. Chris let out a groan as I rolled her nipples. Returning to the top of the sides of her panties and looping my fingers inside the waistband they began their descent as of the honey blond fur came into view. \n\nThe panties fell to the floor. Sitting back, I took in Chris's complete nude form. OH MY! From beneath that triangle of blondness the outer lips looked back at me. Just like Rita, she had the type of pussy where the inner lips were completely covered by the outer lips. Below her blonde patch she looked beautiful. Her pussy was a tightly sealed seam with two puffy lips on either side. My dick throbbed. Chris then struck the \"Pose\" with her own sultry look. Rita watched as my dick throbbed.\n\n\"He likes what he sees,\" Rita said in a hushed tone.\n\nI had to explore. As my right hand returned to the inside of her upper thigh I felt a hand first cup my scrotum before moving to the base of my dick. I turned to look at Rita, and she just smiled. My probing finger moved along the wetness of the pink folds to the top where the little nub appeared. Tossing her head back, Chris let out a groan, as my finger gently stroked it.\n\nChris looked down and moaned lightly to herself. No one had ever examined her like this before. While she hadn't sex but on once, I had the impression that he spent little time on foreplay and even less exploring and appreciating her sexy body. What a fool. Watching me examine the details of her body was like a new experience for her too and she let me go to my heart's content.\n\n\"I love watching you look at me. Nobody has ever looked at me like this. So intently.\"\n\nI eventually pulled the two labia aside. Her gash parted and her even deeper inner pinkness, glistening wet, showed through. My dick leaked pre-cum, as I pulled her lips open more and now the inner lips parted to reveal her moist pink folds fully to my gaze. The sight of it was the second most exquisite thing my young eyes had ever beheld. I groaned aloud without realizing it as I feasted upon her glorious flesh.\n\n\"You like what you see?\" Chris finally asked, with a huge smile on her face.\n\nLooking up speechless at first, and then said, \"Chris, you're incredibly beautiful.\"\n\n\"hmmm. I'm glad you like it,\" she cooed.\n\n\"It's gorgeous,\" I gasped, now staring back at her open flower.\n\n\"Chris, do you want to cum?\"\n\n\"Yes,\" she whispered.\n\n\"Do you want me to make you cum?\"\n\n\"Yes,\" her breathing becoming labored.\n\n\"Tell me.\"\n\n\"Bill. Make me cum! Please make me cum,\" she panted.\n\nRita squeezed my dick, as she whispered in my ear, \"That was so hot!\"\n\nArranging pillows on the floor, the three of us took up positions with Chris in the middle. Leaning in our lips met as our tongues danced. \n\n\"Close your eyes.\"\n\nLaying on my left side, I watched as my right hand traveled down her chest to give each breast and nipple much welcomed attention. Chris groaned. Teasing her, I lightly stroked the smoothness of her left inner thigh as her legs parted more to give complete access. My hand cupped her mound as my fingers found her wet opening and sank knuckle deep into her warmth bringing about a loud gasp. I watched as Chris lay next to me, eyes closed, mouth open, chest rising and falling. I locked eyes with Rita as she smiled at me and nodded with approval. Leaning in I brushed my tongue over Chris's lips before kissing her deeply as our tongues danced.\n\nSlipping out of her, my finger followed the wet valley to the little nub and gently stroked it before moving to the outside and pressing lightly down as I began to rub circles. Chris let out a loud moan. Looking down, I saw Rita's hand move to Chris's breast and began to toy with her left nipple: flicking, rolling, gently pinching; her head inches away from Chris's left shoulder.\n\nChris was close as she gasped and her hips moved in circles. Rita gave Chris's nipple one hard pinch to send Chris over the edge as she cried out, her body going stiff as she shook. Not letting up, a second one hit her a few seconds later. I was determined to give her another, which quickly followed. Gasping for air, \"ohmygod - ohmygod. Stop. Stop. I'm soo sensitive.\"\n\nWe all lay still, my hand still resting on her mound, fingers moving to rest between her folds, Rita's hand still on her left breast, as the sounds of Chris's breathing returned to normal.\n\nRita leaned in and kissed Chris on the lips.\n\nChris spoke first, \"Oh my. You were right, it does feel better when he does it.\"\n\n\"Wait until he's inside of you,\" Rita grinned first at her best friend and then at me.\n\nMy dich throbbed, as I heard 'inside of you'. \n\nWe lay there in silence for a few minutes before Rita reached over, wrapped her hand around my dick just below the ridge, and started to slowly move my half foreskin up and down just like she was taught. \"Have you ever seen a guy cum?\" looking at Chris.\n\nChris shook her head, as she watched intently. \n\n\"I have, but only at night and then only under the light of a flashlight. This is going to be better. In full living color.\"\n\nA few minutes later, \"I'm not going to last long,\" I said between breaths.\n\n\"That's OK. It's better you not last long now and not when WE are riding this thing, later,\" Rita smiled.\n\n\"Tell me when you're close.\"\n\nThirty seconds later, \"I'm going to cum\".\n\n\"Chris, cup his balls,\" as Rita pointed my dick straight up.\n\nJust as her cool hands cupped my tightened sack I gasped and shot the hardest load that I can ever recall. The first went about two feet straight up, before landing on my chest. The second about a foot before landing on my stomach, and the third drippled down Rita's hand.\n\n\"Oh my god! I've never seen anything like that. I could feel his balls contract with each squirt,\" Chris's eyes wide in amazement.\n\n\"I know, this is way better than watching with a flashlight,\" Rita giggled.\n\n\"Is that the stuff that makes babies?\" Chris asked, as she rubbed her fingers in the white pools.\n\n\"Yup. I need to clean you up.\"\n\nI watched Rita's tight little white bottom jiggle as she ran across the room and up the stairs as Chris continued playing in the pools. Rita returned with a wet wash cloth cleaning my chest and stomach. Chris picked up my softening dick and held up straight up before letting go as it flopped against my inner thigh.\n\n\"It's all soft.\n\n\"What does it look like when it's not completely hard?\"\n\n\"Don't know. It's always either hard or like this whenever I see it,' Rita giggled. \"He says it's about two inches when it's normal.\"\n\n\"I like it hard,\" Chris added, \"How soon will it be hard again? So we can play with it, and put it places,\" she grinned at me.\n\n\"Don't worry, it'll grow back. It's fun to watch it grow. Then we can play some more,\" Rita grinned as she stroked me from the base of my scrotum to the tip. I gave a slight throb. \n\n\"In the meantime, there's one person here who has not yet cum. And she's ready,\" I said looking at over at Rita, as she smiled as she leaned in and gave me sweet tender kiss. \n\n\"Lay back my dear,\" as I curled up next to her as she spread her legs giving me complete access. She needed a much deserved release, but first, a bit of teasing.\n\nFor the next twenty minutes, or so, I would bring her to the edge before backing off. Chris would lightly lick her sensitive nipples as Rita's hips would rise and gyrate while she let out gasps and moans of pleasure. Chris and I would exchange looks before bringing our lips together before Chris would meet Rita's awaiting lips. It was so hot watching those two share a kiss. \n\nRita exploded with a vengeance and a cry that I was sure would bring the neighbors. Chris and I lay on each side of her as she relaxed and her breathing subsided. \n\n\"That was so hot,\" whispered Chris, as she stroked her friend's breast while rubbing her finger over the extended nipple, \"I have never seen you cum sooo hard\".\n\nHmm, 'never seen you cum so hard'? I wondered where that came from. An image flashed through my mind of the two of them naked in Rita's room, watching each other doing themselves, or doing each other. Rita felt my dick throbbed as it pressed against her thigh. She knew what I was thinking, and smiled. She also knew I was ready for round two, as she grasped my hardness and squeezed.\n\n\"I think someone is ready to go again.\"\n\nChris sat up and saw what Rita was playing with, as I rolled onto my back.\n\n\"Chris, I think you should ride this thing first. I want to watch it disappear into your pussy. Are you wet, or do you need some help?\" Rita grinned.\n\n\"After what I just saw, there is probably a wet spot on your carpeting. I don't think I've ever been wetter, but let me check, or maybe. Bill, you might want to check.\"\n\nChris lay back and spread her legs as far as she could. The folds glistened as droplets formed on the ends of the strands of her dark blonde pubic hair as my fingers easily entered her slick opening, which brought about a gasp. \n\n\"I would say somebody else is ready to go.\"\n\n\"Get that condom on,\" Rita said as she handed the foil packet to me.\n\n\"Do you want any help?\" Chris smiled.\n\n\"Hold it at the base,\" said Rita.\n\nClutching the base, and cupping my scrotum, she pointed me straight up as I rolled the latex sheath over the crown to the base, as they both watched intently. Satisfied, Chris leaned in as our lips met and tongues danced. Pulling away, she straddled my hips as my hardness nestled in that dark blonde forest as she reached behind to stroke my scrotum. I throbbed. \n\nOur eyes met as I heard, \"Lift up.\" \n\nChris raised her hips as the tip moved down past her opening and a hand grasped the base and rubbed the head between her wet lips lubricating the length and positioning the tip at her opening.\n\n\"Sit.\"\n\nIn one fluid motion, Chris slowly lowered herself as I entered her tight warmth for the first time. We both let out a gasp - time stopped while we both savored the initial penetration and feeling of closeness. Opening my eyes to take in the sight: our pubic hair melded and blended into each other, her head back, eyes closed, mouth slightly open, nipples pointing straight out. Rita had moved to the side of us and was laying on her side with her head propped up watching her best friend, smiling and toying with her own right nipple.\n\nOpening her eyes, \"My god but you're big. I've never felt so full\", she whispered as she started to move her hips. Leaning down her nipples rubbed across my chest as I came out about half way as we kissed. Sitting back up, she raised herself up to where I was just inside before slowly lowering herself back down, giving out a satisfying groan. My fingers traced their way up her sides to cup each breast before flicking each nipple and rolling it between my thumb and forefinger. Eyes closed, a low primal groan came out. Sitting straight up, arching her back, and locking her hands behind her head, she looked back at me and grinned. My dick throbbed inside of her. She smiled again. I could tell Rita had shared notes.\n\n\"Mmmmm, I felt that,\" she purred.\n\n\"Told ya,\" I heard from the side, as I looked over to see a grinning Rita.\n\n\"Come up here.\"\n\nSitting up, and holding her against my chest, she bottomed out with a gasp as her lips rested on the base the shaft. I couldn't get any deeper. As I lightly bit down on the right nipple another groan filled the room, as she ground her pelvis into me.\n\n\"Let's switch. I want you on top,\" she hissed.\n\nRolling onto her back with her legs spread wide, I buried myself balls deep as a loud inhale and gasp was heard. \n\n\"Go slow. I want to feel every bit of you as you move in and out of me.\" \n\nMore sharing of notes as I remembered this is exactly how Rita and I did it in her bedroom. I wondered how many times Rita had shared that whole afternoon in their sessions in Rita's room. Locking my elbows as I hovered above her, I slowly withdrew, hesitated for a few seconds, before returning to fill her as she let out another exhale. \n\nI decided to copy what I had done with Rita that afternoon; sitting up straight to stare down to where we were joined. Rita sat up, and leaned over to take in the sight of her friend. I moved my hips as we both watched in awe as I slowly entered and pulled back, coated with her juices. Chris watched as Rita leaned in as we exchanged a deep kiss. I felt a squeeze on my dick.\n\nI decided to tease a bit. I pulled out until the tip of my dick rested at her opening before slowly penetrating her with just the head a few times before plunging my full length back into her depths, bringing a gasp. Repeating and repeating.\n\nPulling back, Rita looked at both of us, smiled and simply said, \"Do her,\" before leaning down to give Chris a deep kiss.\n\nBringing Chris's legs to my shoulders I bottomed out with each gentle thrust as I rubbed against her clit. Her breasts gently moving in rhythm with each thrust. It was good this was round two, as I could last longer. I wanted this to be good for Chris. To make her feel wanted, appreciated, and yes, 'loved'. Filling her and withdrawing in smooth, slow strokes that seemed to take forever. It felt wonderful and she moaned long and low as she enjoyed the feeling being filled and emptied, stretching her walls and making her feel complete again. \n\nI don't know how long we went. We were each in our own world and at the same time, each other's. I did feel Chris cum, as she went rigid and cried out a couple of times, each time squeezing me until I felt that familiar tightening of my testicles before driving in as deep as I could and releasing. I collapsed on top of her, both of us panting. \n\nNothing was said for a few minutes, before Rita whispered, \"That was the sexiest thing I've ever seen,\" leaning in to each of us and gently kissing, as I rolled off Chris to lay between the two of them as they each pressed against my sides. My softening dick resting against my inner thigh.\n\n\"Why don't you go and clean up?\" I heard Rita say.\n\nWalking up the stairs to the bathroom I couldn't help but think about how this summer was turning out. Now I had two girls, and two girls that wanted me. My mind again raced through a lot of 'what if's'.\n\nWhat if Cindy and I hadn't had that argument? What if I hadn't gone to the party? What if those girls hadn't embarrassed me and Rita felt bad? What if we hadn't reconciled our past? What if she hadn't asked me to take her home? The list goes on and on. But here I was; naked, in Rita's bathroom after just making love to Chris, with a round three coming up. I was hoping, and praying, that I could do a round three with Rita as I flushed the used condom and cleaned the last remaining sperm cells. Didn't want any of those guys to be around.\n\n..................\n\nBack in the basement; as Chris was laying on her back with her eyes closed, Rita laid on her side watching her.\n\n\"Thank you for sharing,\" Chris whispered. \n\n\"Anything for my best friend,\" as Rita leaned over and gently kissed her wet lips, \"You looked sooo good there. I told you he would really enjoy doing it with you. To make it good for you.\"\n\n\"I can't believe I was just made love to as you watched,\" said Chris as they looked at each other.\n\n\"So, it felt good?\"\n\n\"I have never felt anything like that. So full. So gentle. So fucking sexy. HE, should have been my first, instead of old 'dick head'. I can't wait to watch you getting it. Watching him go in and out of you. Watching you cum. Do you think he can go another round with you?\"\n\n\"Oh, I KNOW he can go another round. Might take a while, but what's the hurry,\" giggled Rita.\n\n\"So, this will be your third time together?\"\n\n\"Yep, and I am ready,\" as Rita opened her legs to reveal her glistening lips.\n\n\"Hmmm, you ARE ready.\"\n\n\"Well, we have the rest of the summer. We just have to find places to do it. The back seat of the car, or pickup truck just doesn't do it after being comfortable here, or in a bed. I don't get the whole house like this very often. How about you?\"\n\n\"No, not really. It seems like if they go somewhere, my little brother is always home.\"\n\n\"We could lock him in his room.\"\n\n\"Yeah, but then we would have to listen to all of the kicking and screaming,\" Chris laughed. \n\n\"That's true; but, it will still be fun to get naked in the car and have him make us cum and then make him cum. We don't always have to 'do it'. Although, that would be fun too.\"\n\n\"Let me look around our farm. Maybe there is a place we can go to 'picnic'.\"\n\n\"That would be cool. Tell the parents we are all going to 'picnic', lay out in bikinis with Bill there. I can see how that would go over,\" as they both laughed. \n\n..............................\n\nI heard laughter as I came back down the stairs and was greeted by the sight of two naked girls: Rita on her side facing Chris, her firm little breasts bunching against her arms and a slight look at the dark blond forest, Chris on her back, her breasts flattened against her chest, nipples erect, full view of the matted bush. My somewhat flaccid dick did a bit of a throb, as they both turned toward me grinning.\n\n\"Did I miss something?\"\n\n\"No, just talking about finding someplace where we could hang out like this more often.\"\n\nMy dick swung back and forth as I walked over and sat on the floor cross-legged across from them, my scrotum resting on the floor.\n\n\"I'll never get tired of looking at all of that,\" giggled Rita.\n\n\"Me neither.\"\n\n\"And, I'll never get tired of looking at the two of you.\"\n\nEven though I had just emptied myself less than ten minutes ago I felt the beginning twangs of another growing erection.\n\nRita with her 'bedroom eyes' toying with her erect right nipple spoke in a quiet sultry voice, \"Will you think about us at night? Will you picture our naked bodies? Our hard nipples? Our dark blonde bushes? Our wet lips?\" as she opened her legs to reveal her wetness. \"Will you think of your hard dick moving in and out of each of us? Coated with our juices? When you lie in bed tonight? While you stroke it, while you cup and massage your balls? When you cum?\"\n\nI looked over at Chris, who was now on her side, toying with her erect left nipple, grinning. \n\nI had never seen Rita like this: this seductive, this sensual. The time entering her bedroom was sensual and seductive, but not like this. Before was a nervous seduction. This was a confident woman who knew what she wanted and how to get it. \n\nThey were each getting me ready for round three with Rita. I responded with another throb which they both noticed as they grinned. They both knew how to get me going. Rita knew from direct experience. Chris somewhat, but more from Rita's passing on the 'details'. I didn't care. I had two naked sexy willing women here. They were not girls to me anymore. They were \"Girls\" in high school. We had graduated. They were women. ",
        "What a summer this was turning out to be. Who would have guessed?\n\nRita rose to her knees and looked deep into me with a hunger I had never seen before. Leaning over to gently brush our lips together. Her tongue probing as I cupped her face in both hands, kissing her deeply. We fell to the side with her partially on top as I moved to my back, my slowly re-hardening dick lying against in the inside of my left thigh. Raising herself up, she offered her right nipple to my awaiting lips. My tongue circled it before engulfing as much of the firm mound as I could as a loud gasp filled the room. \n\nI detected motion out of the corner of my eye as Chris moved to my left before settling between my legs as I opened them for her.\n\n\"I'm going to get him ready for you,\" she purred, her right hand cupping my hanging scrotum to gently massage each testicle. I let out a groan as Rita offered her left breast to my awaiting tongue as my right hand found her right breast. Another gasp filled the room as I firmly rolled the erect nipple between my fingers. \n\nAt the same time, Chris's index finger lightly traveled up the raphe, starting at the base of my scrotum to the base of the erect shaft and upward. My dick throbbed as her light touch moved across the frenulum to the drop of pre-cum that had formed. My dick throbbed again as her finger, lubricated by the pre-cum, and circled the sensitive head. This time it was my gasp that filled the room. \n\nRita pulled her breast away, as she sat up to watch Chris. Their eyes met as each smiled at the other. At that moment, Chris leaned in and planted a gently kiss on the tip before pulling back. They looked at each other before smiling again. \n\nThen Chris did something that surprised both of us. We both watched as her lips pressed into the frenulum, then replaced by her tongue as it traveled along the sensitive valley to the opening where she licked the droplet of pre-cum that had formed. Looking into my eyes, I watched as her tongue traced the ridge before the entire head of my dick as it disappeared into her mouth. I felt the warm, rich moisture of her mouth envelop me. The eager playfulness of her tongue. The strong suction as she took me deeper, toward the back of her throat. From time to time, she allowed me to briefly slip back out, her eyes lowering, studying and admiring, using every sense to assess that swollen object which so ignited her passions.\n\nRita watching her best friend with her mouth open in amazement as Chris sat up, her right hand still cupping the base of the shaft and my entire scrotum.\n\n\"I've never done anything like that before,\" she grinned as she looked at both of us, as we looked back in amazement. It was right there in front of me, so I just kissed it. Just like you did,\" as she looked at her best friend. \"Then, I wanted more, so I licked it... Then something came over me... I wanted it in my mouth... To feel it against my tongue.\"\n\n\"Did you like it?\" she asked looking up at me, grinning.\n\n\"I thought I would pass out.\"\n\n\"I guess you got THAT part of his virginity,\" Rita giggled as Chris looked at her and giggled back.\n\nRita leaned over to give Chris a kiss, \"I'm glad you did.\"\n\n\"Come on. I am pretty sure he's ready for you NOW,\" Chris said looking down at what she held in her hand. \n\nAnd, READY I was!! As Chris continued to hold my hardness and scrotum, they both watched as I unrolled another condom along my length and laid back, my head on a pillow as I watched Rita move to straddle my hips. Chris watched from between my legs as she rubbed the head of my dick between her friend's wet folds.\n\n\"Raise up,\" Rita sat up straight on her knees and leaned forward as Chris placed the lubricated head at her awaiting opening.\n\n\"Sit.\"\n\nRita stared into my soul as she slowly sat back to take my entire length in one motion for our third time of joining. We both gasped as I looked up to watch her breasts rise and fall with each breath. Her head back, eyes closed, nipples erect. Man, I wanted to kiss those. Looking down to where we were joined, I could still see about an inch of my shaft before it disappeared into her dark blonde forest. Chris had moved over to our right, and was intently watching our joining. Rita slowly opened her eyes to smile a sultry smile as she brought both hands above her head and reached for the ceiling bringing her breasts up. I throbbed inside of her. \n\n\"I felt that,\" as she looked down at me, smiled, and gave me a squeeze. \n\nI could hear Chris giggle as she said, \"I liked that too.\"\n\n\"Did you give him a squeeze, like I told you?\"\n\n\"I was soooo into having him inside of me for the first time that I forgot... Next time,\" Chris said as she grinned at me.\n\nI throbbed again. \n\n\"I felt that again. He's looking forward to that. Come up here,\" as she straightened her legs out along side of my head. The remaining bit of my hardness entered her to where her folds encircled the base and rested on the top of my scrotum. Another gasp escaped her lips as her head went back. I sat up to nibble the exposed neck before our lips met, her arms circled behind to pull us together. \n\nChris watched as her best friend leaned back to offer her breasts to my awaiting mouth. My tongue moved over the erect right nipple as Chris moved in to take the left nipple into her mouth. We both pulled away to look at each other. Rita watched as our lips met. Then I watched as their lips met with a passion. My right hand on Rita's left breast, toying with the nipple. \n\n\"Let's switch.\"\n\nWe completed our roll to our left without becoming completely separated a pillow appeared under her butt, raising everything. I settled between her open legs, my elbows locked, buried balls deep as I gazed down at our joining and then back to her smiling face. Our lips met, and then our eyes stared into each other. \n\nPulling back, I watched her as she felt the slow withdrawal leaving an 'empty' feeling only to be slowly re-filled. Her head back, eyes closed, her breathing labored. Chris watched intently as I 'made love' to her best friend, 'was that how I looked?' she thought. The process was slowly repeated a number of times, before sitting straight up, a leg in each arm, to spread her wide apart as I looked down to watch at the withdrawal, her love juices coating the entire length, our pubic hair soaked, before slowly re-entering her.\n\nRita watched as Chris sat up to rest against my left side, looking down she watched her friend's lips follow my hardness as I moved in and out. I looked over as first our eyes met and then our lips. I then watched as Chris reached down to touch my exposed shaft and then to finger along the opened folds up to the exposed clit. A loud gasp filled the room at the touch. Withdrawing her hand, Chris looked directly at Rita before licking her friend's juices from her finger and then leaning and pressing their lips together, their tongues dancing.\n\nLeaning back Chris whispered to me, \"Do her. I want to watch you do her,\" as she sat back on the floor to watch.\n\nLooking down into Rita's bright eyes, her chest rising and falling, we kissed, \"Do it to me\".\n\nLeaning into her I began to thrust, my pubic bone rubbing against her clit as she spread her legs wide and locked her ankles around me pulling me deep into her warmth with every thrust, my hanging testicles slapping her little bottom. We were in our own world as neither of us noticed Chris; now leaning against the couch, legs wide apart, rubbing her nub as she watched our passion. Our breathing intensified. My chest rubbing against those hard nipples. Our lips meeting for an occasional kiss of passion.\n\nThis being my third round, I was able to last. Rising up, Rita watched and smiled as I watched as her breasts move with each thrust before leaning in and taking an erect nipple gently between my teeth. She groaned. She was close.\n\n\"I'm going to cum,\" I panted.\n\n\"Wait for me. I'm close.\"\n\n\"Me too,\" as we both looked over to see Chris facing us, legs completely open, vigorously rubbing her clit, head back, mouth open, panting.\n\nLifting Rita by her hips I drove deep into her sending her over the edge with a loud cry as her body shook the walls of her vagina clamped down on my hardness. I felt that the start of that familiar tightening as my scrotum pulled up just as I erupted with a loud cry of my own as my balls emptied, followed by a cry from our left. I collapsed on top of her as we panted in unison.\n\n\"I felt you cum inside of me,\" Rita whispered in my ear as she kissed my neck, \"I felt your dick throb\".\n\n\"I felt you give me a squeeze. That sent me over the edge,\" as I leaned in and gently kissed her lips.\n\n\"That was the hottest thing I've ever watched,\" we heard from our left.\n\n\"Yeah, I could tell you really enjoyed the show,\" Rita giggled looking over at Chris, who was still sitting with her legs still apart, and her fingers nestled between her wet folds.\n\nAs I rolled off Rita Chris came over to lay against my side. As both women pressed their breasts against my side, my arms went around each to hold them close, each rested a hand on my chest, as my softening dick lay against my inner thigh. We lay there in silence, each taking in what had just happed between all three of us these past few hours. Nobody wanting to break the mood.\n\n\"Bill, why don't you go and get cleaned up. Chris and I will use the upstairs bathroom. See you back here in a few minutes.\"\n\nI stood first and reached down to help each to their feet, but not before taking in the sight of these two naked beauties. I could tell they did the same. \n\nOnce in the bathroom, I discarded the condom and washed everywhere. Also, took a moment to pee before returning to the basement. The basement smelled of sex. Hot sex. Something would have to be done. If Rita's mom came home to this, there would be some explaining to do. \n\nAs they entered the room, each of them picked up on the scent that filled the room.\n\n\"Wow. Going to have to air this out.\"\n\n\"It's all you,\" giggled Rita as she looked over at Chris, who turned red, as we all stood there naked.\n\n\"I don't know if we have a fan big enough to clear this out by the time my mom gets home.\"\n\n\"What if we made some popcorn down here? That way the smell of the popcorn should cover it up and also give an explanation as to what we did all afternoon,\" I offered.\n\n\"It might take two batches,\" giggled Chris.\n\nRita thought for a few moments, \"OK. I think that sounds like a good idea\". With that, she bound up the stairs, her little butt jiggling, as Chris and I stood there, not taking our eyes off each other's body parts. She smiled as our eyes met. My dick did a little throb. It was tired, but not worn out.\n\nRita returned with all of the popcorn stuff. We made two batches - naked.\n\n\"When do you have to leave?\" Rita asked as we sat on the floor, leaning back against the couch.\n\n\"About 45 minutes... Why?\"\n\n\"Just curious, and 'No' I wasn't thinking of going another round. I think it's tired,\" she grinned as she eyed my 'half-mast' dick. \"Besides, I know mine's tired!\"\n\n\"Mine too,\" Chris chimed in grinning, \"I hope it's just tired and not broken.\" They both broke out in laughter as their breasts bobbed up and down. I just sat there looking down at my tired dick. Who would have thought?\n\n\"Maybe you should get some vitamins. We've still got a lot of summer left!\" Chris added beaming back at me, \"I think you're going to need the energy to keep up with TWO horney women.\"\n\nThat got a little stir from down below as I looked over at each of them as her comment about 'a lot of summer left' sank into my brain and visions coupled with that. That caused another little stir below that Rita caught as she smiled back at me without saying anything.\n\n\"I could get used to this,\" said Chris, \"hanging out naked. Making love. Hanging out naked. More sex\". We all laughed.\n\nAs with all good things, it came time for me to leave. They watched as I dressed, and I watched them as they lounged there naked. I needed to sear these images into my brain for later. Man they're sexy. \n\nI was walked to the door by two naked ladies. Once at the door, each leaned in to give me a \"so-long\" kiss; but, before I left there was one more surprise. \n\n\"Give me your hand,\" purred Rita as she place it between her opened legs and guided my fingers into her folds. \n\n\"Take a sample for your drive home,\" she grinned as I moved my finger through her wet folds to her opening before entering her knuckle deep, as she gasped.\n\n\"Give me your other hand,\" whispered Chris as she placed it between her open legs and I did the same thing. We stood there for a few moments, two naked women by my sides, my hand between each of their legs, fingers deep inside each. As I withdrew, they watched intently as I brought each to my nose to take in the scent of each of them before licking them clean. Similar, but not the same. I smiled. They smiled. This was something I was going to have to explore. This time, my dick did a big throb, as I reached in for a \"sample for the road\".\n\n\"I'm never going to wash these,\" I grinned back at each of them. \n\n\"Well you better. Your mom will wonder what that is, and where it's coming from.\"\n\nOne more kiss, and I was out the door."
    ],
    "authorname": "32aa",
    "tags": [
        "18 year olds",
        "group sex",
        "small breasts",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/graduation-summer-ch-08"
}