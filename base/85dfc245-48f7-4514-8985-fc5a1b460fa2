{
    "title": "A Tale of Two Switches Ch. 10",
    "pages": [
        "Firstly, apologies for the delay in getting this wrapped. It was a sort of request that originally came about from a private joke. As I was writing it, the plot developed somewhat my original plan was scrapped and the majority of the chapter rewritten until I was totally happy with the outcome. I just hope that Davina and Brian enjoy reading it. \n\nThank you to Wax for the loan of Kjersten and Maidali. They added a little icing to what has been a fun chapter to write. And you've got to love symmetry. \n\n***** \n\nTaking Care of Business \n\n\"So who's first?\" Alex questioned, her eyes sparkling with humour. \n\nThe question was directed towards Dominic and Zabina as they relaxed over coffee in the plush surroundings of the Peninsula Hotel dining room. They had arrived in Chicago the day before for the opening of Dominic's and Zabina's latest business venture, a restaurant and nightclub just on the outskirts of Little Italy. \n\nThe club had actually been Alex's idea. After the adventure they had, where Zabi had taken Alex around some bars on Sunset Strip while she was practically naked, she had made the comment that it would be fairly cool if someone opened a club where the guests could indulge in a small amount of exhibitionism. \n\nOne thing led to another, and as it was Dominic had just purchased a suitable property in Chicago from a distant cousin. Between them they redesigned the interior with the eatery off the street then members only entrance to the night club above. \n\nAs it had been her idea, Alex had been asked to name the club, and had chosen the name The Tempest after the painting by Giorgione, and also because it was in Chicago, the Windy City. As it followed Dominic's love of all things Renaissance he had agreed immediately. \n\nAs it was the Tempest club was due to open at ten that night, and the four of them had just eaten in the Peninsula. Alex and Zabina planned to head out and check out the local competition, before meeting back up with Dominic and Jinn for the opening. \n\nWhilst they enjoyed the excellent coffees, Mocha for Alex, Latte for Jinn and double Expressos for Zabi and Dominic, Alex was urging Zabina to do her party piece of giving a run down on a stranger just by observing their actions and appearance. Dominic had expressed a rare laugh and confessed that it had been a game they had played when they were younger. This had pricked at the interest of Alex and Jinn and eager to find just who was better at this trick, they proposed a challenge. Alex and Jinn would pick a person out and Zabi and Dominic would take turns in deducing possible facts. \n\nDominic leaned back in his chair, the normal lazy smile painted on his lips. \"Ladies first.\" \n\nThe comment \"Do you know where we can get any?\" From Jinn earned her a light punch on the shoulder off Zabi as Alex's eyes scanned the various tables searching for someone suitable. \n\n\"That one there?\" She asked Jinn as she spotted a woman sitting on her own. \n\n\"About perfect.\" Jinn agreed with a smirk. \n\nZabina glanced around until she spotted the woman Alex had indicated. \"Interesting. She reminds me of how you looked when we first met.\" \n\nThe woman was sat on her own, on a stool by the bar. Coffee cup in one hand and her attention held by sheaf of papers in the other. She was wearing a well cut charcoal suit and a light grey blouse buttoned up to her neck. Chestnut hair hung straight down to her shoulders in a simple and conservative style. In short, she looked quite attractive in a plain sort of way. \n\n\"Well as I am starting.\" Zabi announced. \"I will state the obvious. She is married.\" \n\nAlex admitted to herself that was fairly obvious, as she had also spotted the wedding band on the woman's finger. Her eyes flicked over to Dominic as he gazed attentively at the oblivious woman. \n\n\"Two children.\" Dominic stated quietly and assuredly. \n\n\"Okay I'll bite on that.\" Jinn commented. \"How do you know that?\" \n\n\"I would say the spread of her hips, indicating more than one natural birth, but going off her estimated age of early forties, and the fact she is obviously a professional woman and therefor had children either early or late in her working life, no more than two.\" Zabi interrupted, her stare fixed on Dominic. \n\nTo be fair, Alex mused, if Dominic was impressed he didn't show it. Although Alex did spot that he raised an eyebrow. Jinn on the other hand gaped at how the deduction was made. \n\n\"Skin pigment indicates she is fairly local.\" Dominic said, sounding a little more energised. \"And while the suit is well fitted, it is a few years old. That tells me she is wearing it for an occasion outside normal, so she is away from home. Maybe Wisconsin, but most certainly further North by the lack of Sun exposure to the skin.\" \n\nZabina leaned forward, rising to the challenge. \"She has been married quite some time, the wedding band is well worn, more than likely not long after leaving college.\" \n\nDominic remained relaxed in his chair, his eyes locked on to Zabina's. \"She used to be adventurous, but is now a little stayed.\" \n\n\"Whoa.\" Jinn interrupted. Drawing both sets of Vitelli eyes. \"How do you know that?\" \n\n\"Yes explain to your antipodean lover how you drew that conclusion.\" Zabi goaded. \n\nA slight half smile curled Dominic's lips. \"The suit is expensive, which hints that she was very conscious of her outward looks, but as already stated, the cut and design are a few years old. That tells me although she once felt very attractive, she now is too distracted by her family to consider it an importance.\" \n\nA slight frown creased Zabina's forehead. \"I disagree. Yes, she was adventurous, but she longs to be once more, she just doesn't know how to begin.\" \n\nThis time it was Dominic who frowned. \"And you deduce this from what information?\" \n\n\"Something you will never have, dear brother.\" Zabina answered with a smile. \"Female intuition.\" \n\n\"If you can prove that last statement, you're the winner.\" Jinn announced jokingly. \n\nThere was a second or two of silence. \n\n\"Alex honey, would you assist me in a small task?\" Zabi asked. \n\nFor not the first time since their relationship had started Alex felt a nagging worry that things were going to get out of hand. \n\n*** \n\nDavina Lee leafed through the paperwork she was holding. She really hadn't wanted to make this trip. Her husband, Brian had taken their two boys off skiing to catch the end of the season, a trip she had wanted to make with them, but as it was she had to take the journey to Chicago. It was a necessary evil, she had told herself. A friend of a friend was desperately in need of advice after their visa had expired, and as legal advisor she had reluctantly agreed to file her case to have the visa re-instated. \n\n\"Excuse me.\" \n\nThe voice interrupted her train of thought and she looked up. A woman around her height with glossy, jet black hair, long at the back and shaved close on the sides, stood before her. She was dressed in an elegant looking tuxedo with a close fitting black skirt and a white silk dress shirt. The shirt was unbuttoned to show a fairly indecent amount of cleavage. \n\n\"Sorry to interrupt, but this is our first time in Chicago.\" The woman stated while indicating the taller blonde beside her. \"We wondered if you knew of any good clubs in the area.\" \n\nDavina's gaze flicked over the pair. The blonde looked athletic, but a little nervous. Whereas the darker woman radiated confidence. Her ears and eyebrow were decorated with piercings and a finely detailed tattoo of a black rose blossomed on her neck. The contrast of olive and golden skin was very striking and Davina wondered if they were a couple by how closely they stood together. \n\nWhile she was slightly annoyed by the interruption, Davina was quite taken by the politeness of the question, and if they were a couple, they may not have wanted to ask one of the many males in the room. \n\n\"I am really sorry.\" She answered. \"I actually come from Wisconsin, so I don't really know the area.\" \n\nA brief flicker of annoyance dashed across the darker woman's face. \"That's a shame.\" She pouted, then grabbed the hand of the blonde. \"We had to cancel our engagement party to come here on business and we had hoped to go somewhere friendly. Sorry Alex baby. I guess we can just go back to our room.\" This statement was followed by giving the taller woman a light peck in the lips. \n\nThe hand movement revealed matching Pride rainbow tattoos on the two women's wrists. Very much a couple, Davina validated to herself. Then as she saw the look of disappointment on their faces and idea came to her. \n\n\"I am actually here doing a favour for a friend who is a local, I bet she'll know somewhere.\" Davina told them. \"Why don't you join me for a moment and I'll give her a ring.\" \n\nA wide grin split the shorter woman's face. \"See babe, I told you it would work out just right.\" She said to her partner, who smiled weakly. \n\n\"Zabina Vitelli.\" The speaker offered her hand. \n\n\"Davina Lee.\" Davina replied slightly taken by the firmness of the handshake. \n\n\"My fianc\u00e9e. Alex Rowe.\" Zabina introduced. \n\n\"Hi.\" Alex said as they shook hands. \n\n\"Would you like a drink?\" Zabina offered as Davina pulled her phone out of her jacket pocket. \n\n\"Please, a wine would be nice.\" Davina broke off as her phone dialled through to Kjersten.. \n\n\"Hi Kjer, I've just been speaking to a couple of ladies looking for a good nightclub in town, and I thought you may be able to name one.\" \n\n\"Hi Davina. There are lots of good clubs. What are they looking for? Old? Young? Goth? Cabaret?\" \n\nGlancing back to the two women, Davina noticed for the first time the tattoo sprouting from the top of Zabina's black cowboy boot and snaking up her leg, to vanish under the fairly snug fitting, black skirt she was wearing. Adding the skin art to the clothing and the metal work, Davina made a judgment call. \n\n\"Goth would suit I think.\" \n\n\"Awesome, I recommend the Berlin then. Great place and very Goth friendly.\" \n\n\"Sounds just like what they're looking for. Thanks Hon.\" \n\n\"Anytime, speak tomorrow.\" \n\nAs Davina slipped her phone away, Zabina thrust a glass of deep red wine in to her hand. \n\n\"Hope red is cool. Sorry I ordered it automatically, blame the Italian blood in me.\" She said with a grin. \n\n\"Thank you.\" Davina replied as she accepted the drink. \"My friend says the Berlin should suit your needs.\" \n\n\"Excellent.\" Zabina beamed with happiness. \"Look I know this may be a little forward but why don't you join us for an hour. Our treat for you being so helpful.\" \n\nA small spark of excitement appeared deep inside Davina. It was a long time since she had been out to a night club, but the spark was quickly smothered by the sensible brain she had gotten used to. \n\n\"That's very kind of you to offer.\" She replied. \"But seriously I don't think it would be for me, I'm straight for a start.\" \n\nA girly laugh escaped Zabina's lips. \"That's ok, we won't hold that against you. Honestly you should come with us, let your hair down a little.\" \n\nLaughing nervously Davina took a sip of the wine. Its deep full bodied flavour rolled across her tongue and down her throat leaving a smoky aftertaste. \"That's very nice.\" She commented, trying to change the subject. \n\n\"Thank you.\" Zabina answered. \"It's a Nero d'Avola. A taste of home.\" \n\nAnother sip of wine followed the first, it was a seriously nice experience. \"So are you Italian?\" \n\n\"Sicilian to be precise.\" Zabina replied. \"Alex is from LA, but you have to forgive her she is a little shy.\" \n\nSmiling pleasantly at the tall blonde sitting quietly next to Zabina, Davina noticed for the first time the striking emerald eyes that darted away as soon as Davina looked at her. \n\n\"I think Alex is a little taken with you really.\" Zabina whispered loudly. \"She always goes quiet when she is attracted to someone.\" \n\nDavina coughed as the sip of wine she was taking caught in her throat, and she felt her cheeks begin to burn in embarrassment. \n\nAlex punched Zabina playfully on the shoulder and hissed \"Behave Zabi.\" \n\nThe spark of excitement flared in to existence again, only this time it caught and began to smoulder. \n\nZabina glanced around furtively. \"Can I be honest with you Davina? Alex is a little of an exhibitionist. She has a bit of a kink about being nearly exposed in public places, and I know she would love to have someone else with us tonight to add a little spice to the evening.\" \n\nThis statement drew a horrified squeal from the blonde and another playful slap, although Davina couldn't help but notice Alex blushed furiously. Taking another gulp of the smooth wine, she wasn't really sure she had just heard was serious. Davina glanced over to the still blushing blonde woman, who bashfully looked away once more. There actually may be a little truth in the statement Davina decided. \n\nWhile Davina wasn't ashamed of her figure, she couldn't even begin to imagine what it would be like to risk being caught exposed to the world. Her eyes ran up and down the taller Alex once more. From the expensive looking lace up ankle boots up the long tanned legs, noticing for the first time the scar running from her left knee up her thigh and under the figure hugging dark blue dress. The dress itself was made from very fine material and was fastened at the front by a zip that ran from top to bottom. \n\nThis was all foreign ground to Davina, she had been, what she considered, adventurous in her younger days and even experimented in a little soft bondage with her husband, but that was before the boys had been born, and sexual fantasies took a back seat to raising them. Now here she was being asked if she wanted to be a voyeur while one of the pair was placed in danger of being exposed and while the other aided in that placing. \n\n\"I really don't think I'm the person you are looking for.\" Davina said nervously. \"Voyeurism seriously isn't my thing.\" \n\nZabina expression was like Davina's eldest boy when he was told he couldn't play with his friends. Then abruptly it changed back to cheery smiles. \n\n\"Nonsense, it will just be having a few drinks with some new friends, it isn't like we're going to molest you or anything.\" \n\nWith that statement Zabina drained her glass and looped her arm through Davina's \"Saddle up marines, we're leaving.\" \n\n'Just one drink won't do any harm.' Davina told herself as she felt herself falling in to step alongside the determined Zabina. \n\n*** \n\nThe trio had walked to the Red Line and taken the L train to where Boystown met Lakeview. They had descended back to street level and were walking the short distance to The Berlin nightclub. The slightly wild Zabina walked along with Alex on her left arm and Davina on her right. \n\nAs they walked Zabina was stepping in time to the song she was singing. Her Cuban heeled boots clumped as they struck the sidewalk. \n\n\"You should-a seen me a-windo' shoppin' \n\nA-windo' shoppin' with eyes a-poppin' \n\nAt the sights that you see there, yes sirree. \n\nI just blew in to the windy city. \n\nThe windy city is mighty pretty, but they ain't got what I got...\" \n\nAs she got to the last line she paused and planted a firm kiss on Alex's cheek, and the pair giggled loudly. \n\nDavina's evaluation of the pair of women did a quick about turn. She had originally thought them to be shy and maybe a little intimidated in the unfamiliar city, but know she realised that the two would actually be comfortable wherever they went, such was their confidence in each other. She began to wonder just how much of what she had seen had been put on for her benefit. The extrovert Zabina certainly didn't have to ask exactly where the Berlin was or what was the quickest route to get there. \n\n*** \n\n\"Okay you two wait here I'll get drinks.\" Zabina instructed as she prodded them towards a table in a shadowed corner before darting off through the crowded room. \n\n\"Phew.\" Davina exclaimed. \"Is she always like this?\" \n\n\"Oh no. Usually she is much, much worse.\" Alex replied looking a little more relaxed now they were in the darkened noisy atmosphere. \"I think she is being polite as you're with us.\" \n\nDavina gave a nervous laugh and began to wonder if she knew what she had gotten involved in. \n\n\"Saluti.\" The raven whirlwind shouted as she placed glasses of wine in front of the two women. \"It isn't a great year, but it is proper wine.\" \n\nAs the time flew by Davina watched the interaction between the two women, it was very obvious they were totally devoted to each other, And Davina found herself wondering what else they got up to besides the exhibitionism. One thing was for sure, Davina mused, Zabina's exuberance was a little infectious and she was beginning to enjoy the company. If nothing else the Sicilian's taste in wine was flawless. She would have to get a list of a few labels to try before they parted. \n\nA very familiar guitar riff split through the club. \n\n\"Sweet Child...\" Zabina screeched. \"It's our song. Let's dance.\" She insisted as she began to pull on Alex's arm. \n\nWith a smile Davina remember the song well from her younger days. Guns n Roses had been a favourite, and Sweet Child O Mine was pretty much the band's anthem. Between the buzz of the wine and the sheer enthusiasm for life that emanated off the couple, Davina felt the urge to actually join them on the dance floor. Then her 'sensible' head kicked in. 'You're not in your twenties anymore.' She told herself. \n\nThen strong hands grabbed her arms and she felt herself half dragged away from the table. \n\nAmongst the varied crowd on the dance floor, Davina felt very conspicuous. No one was wearing a business suit, and she wished she had the confidence to at least remove her jacket. She settled for unbuttoning it, and felt a little reckless. \n\nThe loud music bounced around the packed floor, and Davina felt someone accidently collide with her back, shoving her forwards. Before she could recover her balance she found herself pressed against Alex's back and she breathed the other woman's scent deeply. A heady mixture of perfume and musk. \n\nShe made to step away, but as she did so Alex's hands reached back and took hold of hers, pulling her in close again. \n\nBlood began to thump around her body as she felt the closeness of the tall blonde. Try as she might, Davina couldn't think of a time she had been this close to another woman she wasn't related to. \n\nShe felt her arms pulled forwards and wrapped around Alex's stomach as they moved together to the music. \n\nDavina felt another pair of hands run along her arms as Zabina leaned in close and kissed Alex. \n\nSomething moved under Davina's hands and instead of the material of Alex's dress she felt skin. Anxiety flooded through her body as she realised Alex's dress was undone all the way from the bottom up to just above where Davina's hands rested. \n\nAlex's head arched back slightly, and Davina felt rather than heard a long low moan emanate from her. \n\nThe song wound down to its conclusion and the three women moved apart and drifted back to where they had been sat. Davina felt a little dizzy from the unexpected contact and what she had just experienced. She glanced at Alex wondering what her reaction was going to be, but the blonde woman was fairly busy ensuring the zip on her dress was back down where it belonged. \n\n\"See that wasn't so bad was it?\" Zabina voice whispered in her ear. \"Keepsake.\" The voice said as something soft and silky was pressed in to her hand. Davina glanced down and began to blush once more as she realised she was holding Alex's panties. She glanced around quickly, expecting someone to have spotted her and she hastily pushed the small item in to her jacket pocket. \n\n\"That was so good.\" Zabina said loudly. \"I haven't danced to that track in years. Shall we have another drink?\" ",
        "\"Zabi... Hadn't we better get moving if we're going to make the opening?\" Alex asked. \n\n\"Shifezza.\" Zabi cursed. \"I hadn't realised the time.\" Then she turned to Davina. \"How would you like to join us for the opening of my brother's new venue?\" \n\n\"I'm not sure it would be my kind of thing.\" Davina began to say. \n\n\"No I insist.\" Zabina interrupted. \"We were just beginning to get on so well, and it will be VIP treatment all the way.\" \n\nFeeling a little browbeaten Davina managed to nod. She wondered how Alex managed to keep up with the energetic Sicilian as they were bustled back out of the club. \n\n*** \n\nThe Tempest club had been designed with a very specific purpose in mind. For guests to indulge in certain fantasies. To fulfil that specific purpose away from the circular dance floor, there were plenty of dark alcoves and areas where artificial plants had been arranged to create private zones. Lighting was provided by clever LEDs that flickered like candle light casting more shadows. \n\nAll this of course was lost on Davina, as she had no idea about the specific purpose of the Tempest. To her it was just another dimly lit nightclub, just without loud music and there were less people. The delicate silver bangle that was presented to her was something new, and she had slipped it on without any real thought. \n\nThey were then greeted by Zabina's brother, Dominic, who was quiet, charming and refined, totally the opposite to Zabina really. And his partner Jinn, an Australian woman who could easily have been Kjersten's elder, more muscular sister. \n\nGlasses of complementary champagne had been handed out as they entered the main section of the club and small groups of people in various forms of attire drifted around exploring the maze like interior. \n\nOnce again Davina felt totally out of place as the guests were mainly dressed in evening wear. To her it looked more like an Oscars party than the opening of a night club. \n\nThere had been a few moments of silence where Dominic had taken centre stage to announce to opening then the main lights had dimmed and music began playing. \n\n\"That's good.\" Zabina half shouted over the sudden noise. \"He went with your idea of Nightwish.\" \n\nDavina hadn't got a clue what Zabi was talking about, but assumed it was something to do with the choice of music which seem to be a mixture of hard rock and opera. \n\n\"Time to loose ourselves.\" Zabi announced. \n\n\"Midsummer Night's Dream?\" Alex suggested with a half-smile and a dreamy look on her face. \n\nZabi thought for a second or two then nodded. \"Perfect.\" She replied as she grabbed Davina's hand. \n\nDavina shrieked a little as she was half dragged away and cajoled past groups of dignitaries and business persons. Most of which Zabi and Alex either ignored or shied away from, until they passed through an archway made from artificial greenery and entered a very comfortable area surrounded on three sides by panels that looked like willow weave. A statue of a topless woman holding an urn that trickled water in to a small indoor pond. The feature was surrounded by more artificial plants giving the area a garden feel. \n\n\"Finally.\" Zabina said as she fell rather than sat on a comfortable looking sofa. \"The worst part of these things is avoiding the people you don't want to speak to.\" \n\n\"This is really different.\" Davina commented as she dwelled on what she had seen so far. \"I haven't seen a night club that looked like this before. The design is unique.\" \n\n\"Thank you.\" Alex and Zabina replied in unison. \n\n\"We both designed it. The lay out is just how we wanted it to be.\" Alex explained. \"Which is how we know all the best places.\" She indicated the secluded area. \n\nHaving not been involved in the modern nightlife scene for a while, Davina had to admit she was very impressed by how the club felt. It was like being out in a park while having music echo all around. But at the same time the partitions and greenery dampened the music so it wasn't deafening. \n\n\"Okay, who's for another drink?\" Zabi asked. \n\nAlex nodded eagerly. \"Margarita time.\" \n\nA wide grin split Zabina's face. \"Awesome idea. Davina, Margaritas?\" \n\n\"Erm... yes I guess so.\" Davina replied feeling a little out of her depth again. Then her eyebrows raised as she watched Zabina pass a bangle similar to her own, only in gold over a small touch screen monitor set in to one of the couch. The screen popped in to life and Zabi tapped on it a few times. \n\n\"Drinks ordered.\" Zabina announced. \"Are you impressed so far Davina?\" \n\n\"I have to admit, it is a while since I've been in a nightclub, but this is quite something else.\" Davina admitted. \n\nAlex gave a slight laugh. \"You ought to come to LA and visit the Ascension, it makes this place look a little tame.\" \n\nA petite waitress stepped in to the secluded area, and Davina's eyebrows shot up again to see she was wearing a very figure hugging dress made from a dark material that was entirely sheer. The girl's modesty was provided by cleverly placed non see through patches of black material cut to resemble clumps of Ivy. Smiling politely, the waitress placed a large jug of iced cocktail and glasses on a table then filled each glass. A slight bob and the waitress turned and left. \n\n\"Wow. That was unexpected. And more than slightly sexist\" Davina managed to say. \n\nZabina laughed out loud. \"You think that's sexist, you ought to see what the waiters wear. I think the girls get it fairly easy.\" \n\n\"But you're still taking advantage of them as serving staff.\" Davina said still frowning. \n\nAlex smiled to herself. She had followed a very similar train of thought when she had first seen the staff at the Ascension. \"They get paid around four times what they would earn doing the same job in any other club. Dominic values his staff greatly, and offers a very good employment package. You would be surprised at the number of grad students that come to work for him to pay their way through college. Plus, they get excellent health and dental insurance.\" \n\nOnce more Davina did a quick rethink of her surroundings. \"But aren't they open to abuse off the customers?\" \n\n\"Not at all.\" Zabina butted in. \"Every single member of staff is issued with a panic alarm built in to their identity bracelet.\" She indicated the silver bangle at Davina's wrist. \"And they all have body cam's discreetly wired in to their outfits. Any transgression of house rules is met with swift and fairly just retribution.\" \n\nThere was a pause as Zabina let the information sink in. \n\n\"Don't put us in the same category as those locusts out there, we started out with nothing and have worked hard to get where we are. Dominic is a great believer in extracting money from rich people and passing it on to those who need it more. This is his second club and third restaurant, for every venue he opens he starts two homeless shelters or medical drop in centres. We also fund scholarship programmes for two different Universities in LA and are in the process of starting another here in Chicago.\" \n\nFeeling a little guilty for jumping to conclusions about the women and Dominic, Davina blushed slightly. Then an idea popped in to her mind. \"I'm in Chicago trying to help out a friend of a friend who was taken advantage of when her visa ran out. Do you think you could pull a few strings to help her out?\" \n\nZabina smiled, stepped in close and wrapped her arms around the slightly older woman. \n\n\"It would be my pleasure, give me your number and we will talk tomorrow and sort something out.\" \n\nA sense of relief swept over Davina as they exchanged numbers, at least now with that worry off her mind she would be home sooner than originally thought and she could relax a little. \n\nA large glass of iced cocktail was pressed in to her hand as Alex said \"A toast to new friends.\" \n\n\"New friends.\" Zabina and Davina echoed. \n\nAs the night wore on, more Margaritas flowed and Davina felt herself relaxing in the company of the slightly exuberant pair of women. Then, as nature took its course, she needed to use the bathroom. \n\nZabi passed on a few directions and she set off leaving them slow dancing in each other's arms. She rounded a corner and nearly collided with a well-muscled waiter wearing a bowtie and a bulging codpiece. \n\nThe waiter smiled pleasantly and nodded as he side stepped and continued his journey. Davina couldn't help but check out his firm behind as he rounded another corner. \n\n\"Get a grip Davina.\" She admonished herself. \"You're married with two kids.\" \n\nAfter finally finding the bathroom Davina retraced her steps back to the faux garden are where she had left Zabina and Alex. The sight that welcomed her wasn't what she expected and she stopped dead in her tracks. \n\nThe two women were sat on the couch, lips pressed together in a passionate kiss. But that wasn't the surprising thing about the scene. \n\nThe zipper to Alex's dress was undone to her navel and Zabina's right hand was softly caressing a round golden breast. An action that Alex was clearly enjoying. \n\nUnsure as what she should do, Davina remained rooted to the spot, knowing that she should either walk away and give them some privacy, or at the least announce her return. But the longer she hesitated, the guiltier she felt for watching. Which in turn made her even more unsure what to do. \n\nThe smouldering flame that had been flickering inside her began to burn a little brighter. \n\nThe women's lips parted, each one panting slightly. \n\nDavina opened her mouth to let them know she had returned, but no sound came out apart from a little gasp as she witnessed Zabina tug the zipper lower. The couple on the couch gazed in to each other's eyes, each totally rapt in the other, but all Davina could look at was the silvery metal zipper inching further and further downwards, and Alex's breathing becoming more pronounced the closer it got to its ultimate destination. \n\nOver the muted noise of distant music Davina clearly heard a soft moan as the material of the dress parted and fell away from the toned body. Although she wasn't sure if it came from Alex or herself as she felt her own body reacting to the obvious pleasure Alex was receiving. \n\n'This is just so wrong. You're not a voyeur.' Davina told herself as she felt warmth growing in her loins and her own nipples harden at the sight of Alex's very pointed nubs. But she still found herself unable to turn away. \n\nZabina placed her right leg in between Alex's long smooth thighs and eased them apart, giving Davina a perfect view of her shaven, wet entrance. \n\nThis exposure was completely alien to Davina, she was sure that if had been her on the couch, she would be trying to cover up as much as possible, then she realised that Alex's arms were pinned behind her, and she was actually trying weakly to move them. \n\nDavina's memory flicked back to the times her husband her wrapped soft rope around her wrists to leave her helpless as he pleased her. What was happening to Alex was exactly the same. Her arms were obviously restrained behind her, and with Zabina's leg forcing hers apart there was no way the blonde woman could cover up. Although judging by the expression of sheer enjoyment on her face, Davina didn't think she wanted to. \n\nZabina's hands danced across the smooth flesh of the helpless woman. Stroking the skin of her belly then moving upwards to circle one of her breasts, and occasionally tweak a nipple. Every run up and down brought Zabina's wandering fingers closer and closer to her pelvic region and Alex was trying hard to shift her position to move under those fingers. But no matter what Alex did, the teasing fingers stayed clear of the area Alex wanted to feel touched. \n\nThere was a pause in the touching as Zabina lifted a glass of iced Margarita to her own lips and took a dainty sip. The glass was then placed to Alex's mouth so she could taste the chilled liquid. \n\nA single drop on condensation dripped off the bottom of the glass and landed on the bare skin of Alex's chest. The semi-nude woman arched her back as the cold drip made its way down between her breasts. \n\nThe glass was returned to the side table, and Zabina's fingers dipped in to the drink and retrieved a single cube of ice that she placed in her mouth. The raven haired head dipped down and Zabina placed her lips around a pert brown nipple. \n\nThe gasp that sounded in the secluded corner definitely came from Alex, as Davina assumed the ice in Zabi's mouth came in to contact with the sensitive nub at the tip of Alex's breast. \n\nThe raven head bobbed back up again, but the gasps continued as the cube of ice remained perched where Zabi had placed it. \n\nTime froze for a few seconds, then under the duress of Alex's laboured breathing and the precariousness of its location, the ice cube slipped off its perch. As it slid down warm skin, a low moan began deep in Alex's chest. \n\nDavina watched enthralled as the ice made its way further down the semi prone body, pausing momentarily in Alex's navel, but encouraged on its journey by the movement in Alex's body as she began her own journey towards climax. \n\nThe three of them knew exactly where the ice cube would end its break for freedom. Alex could feel it inexorably slipping nearer and nearer to her hot wet sex. And Zabina and Davina watched in rapt fascination of the inevitably of the situation. \n\nZabina moved her leg subtly, then as the ice cube crested Alex's opening, she pulled the desperate woman's legs together, sealing the ice cube's, and Alex's fate. \n\nIf Davina had taken that moment to arrive back she would have sworn that the poor girl was in the middle of some kind of fit, as shudders ran the length of the Alex's body and her back arched then relaxed then arched once more. \n\nThinking back to her 'adventurous' days Davina tried to remember if she had ever been in in that much climatic pleasure, but she was fairly sure if she was, it hadn't continued for as long as this. The thought made her feel a little envious. \n\nWith the climax breaking the spell holding Davina in place, she slowly backed away from the quiet corner and stood out of sight for a while. Her nipples were actually aching in sympathy and the warmth that had begun in her loins had spread much further. Davina was sure her underwear was going to be fairly damp. \n\nTaking a few deep breaths to steady her shaking hands, Davina fixed her face in to what she hoped was a casual smile and walked slowly back around the corner. \n\nZabina was sitting on the couch, her legs crossed comfortably and her drink in her hand. Alex was stood, smoothing her dress down and looking very flushed. \n\n\"Hi.\" Davina said. \"Sorry I've been so long. This place is a real maze.\" Then without knowing why she added. \"Did I miss anything?\" \n\nAlex flushed further as she quickly took a gulp of her cocktail. \n\nZabina on the other hand peered over the rim of her glass, a sly smile on her lips and fixed Davina with her dark hazel eyes. \"No honey, I think you saw just about everything.\" \n\nDavina's heart kicked in to overdrive. \"Sorry, I didn't know what to do.\" She blurted. \n\nOddly enough it was Alex that made the first move. She stepped towards Davina and gently hugged her. \"Hey it's okay, we knew exactly what we were doing. The idea was to stop as soon as you walked away. So I have your indecision to thank for what was a very pleasurable time.\" \n\nFeeling slightly stunned and even more unsure of what to say Davina returned the hug, and heard herself say. \"No problem, it was actually incredible to watch.\" \n\n*** \n\nAn hour later the trio had arrived back at the Peninsula hotel, they obtained their key cards from the reception and took the lift to their floor. \n\n\"What room are you?\" Zabina asked. \n\n\"312.\" Davina answered. \"Just along there.\" She indicated further down the corridor. \n\n\"Hey we're practically neighbours.\" Zabi exclaimed. \"We're 317.\" \n\nDavina smiled pleasantly. It had been an interesting night, and part of her was sorry it was nearly over. \"Well try and keep quiet, I don't want you two keeping me awake all night with your screaming.\" \n\n\"Glad you enjoyed it Davina.\" Alex said embracing her again. \n\nDavina glance at them as they moved off along the corridor arm in arm, and as she opened her door she wondered what they would spend their night doing, and she felt her face glow with heat again. \n\n'Never mind what they're getting up to, I think you need a cold shower.' She told herself. \n\nWith the door to her room safely closed Davina removed her jacket and draped it over a chair, something fell out of the pocket. She bent and retrieved the item, pair of tiny panties that were a light blue silk and fastened by lacy strings at the sides. Davina wondered what it would be like to wear them, and more importantly, what it would be like to have the laces undone and the tiny item removed while out on a dancefloor. A shudder ran through her as she felt warmth well up inside her once more. \n\nA movement caught her eye, and she half turned to see her own reflection in the long mirror. She raised both her arms and pulled her shoulder length hair back, wondering what it would look like cut short like Alex's. With a sigh she let it fall back. \n\n\"Hell I don't look that bad.\" She told her reflection. \"That gym membership was worth taking out.\" \n\nSlowly she began to undo the buttons to her grey blouse, wondering how it would feel to have her clothes removed by another woman. As the blouse fell open, she placed her hands under her breasts and pushed them up a little. \n\n\"Maybe if I got one of those uplifting bras.\" She mused. \"Something a little sexier than my normal.\" \n\nThe blouse joined her jacket as she kicked off shoes, then her suit pants joined the small pile of clothing. \n\nAnother glance in the mirror confirmed her thoughts. \"I really do need sexier underwear. But that's for another day. What I really want right now is a warm shower, then bed.\" \n\nShe removed the remaining items of clothing and walked to the bathroom, cursing slightly as she realised she had automatically covered herself with her hands to do so. \n\n\"I bet Alex wouldn't do that.\" She told herself. The fleeting image of the two women embracing under their own shower stirred her arousal once more. \"Fuck.\" She swore. \"I'm not even gay.\" Although she had the idea if Brian saw her with the two Californian girls he would most likely explode. The thought raised a smile as she stepped under the warm water. \n\nWrapped in a bathrobe Davina was towelling her hair dry when she heard her phone buzz with a text alert. A glance at the clock showed it was gone half one in the morning. No one she knew would be texting at this time. \n\nShe keyed the phone to life and a message flashed on to the screen. \n\nWe are just having a night cap and wondered if you wanted to join us. Clothing optional ;-) \n\nZabi \n\nThat ember of excitement flared up once more as her imagination conjured up the image of Zabina and Alex stood nude in their room while they sent the text giggling. \n\nPart of her wanted to go to bed and sleep. Another part wanted to go along and see if her imagination was correct. A third part of her, that she hadn't even know existed, pictured herself walking down the hotel corridor in the nude and knocking on their door. \n\nShe quickly shook that idea out of her mind. This was Chicago, not LA. People just didn't do that sort of thing in Chicago. Certainly not her at any rate. \n\nDavina stifled a yawn. \n\n\"Seriously, why am I even considering this. I need to sleep.\" \n\nWith a slightly regretful sigh, Davina sent a reply. \n\nSorry I really need sleep. Not much of a night owl anymore. Thanks for a wonderful night. \n\nD. \n\nIn a sudden urge of rebellion Davina decided to sleep naked, she dropped her robe on the floor and crawled under the covers of her bed. She had a vague memory of turning the light out then fell fast asleep. ",
        "I the midst of her sleep an odd dream came to Davina. She dreamt she got out of bed and slipped on the blue silk panties that had belonged to Alex. She panted slightly as the smooth material touched her skin. \n\nWalking on tip toes she crossed to her door and opened it. A quick glance up and down the hotel corridor showed there was no one around. Feeling braver than she had ever been before, Davina half ran down the hallway to the door marked 317. \n\nHolding her breath, she was very aware that she was stood outside the girls room naked apart from the sexy underwear that didn't even belong to her. She knocked on the door and it was opened by Zabina, wearing just the white silk shirt which was now unbuttoned all the way. \n\nDavina gaped at the olive skinned woman's tattoo's that swirled across her belly and encircled her breasts. Something dark and rebellious wanted to reach out and touch those tattoos and explore the extent of them as they wound around the fiery woman. \n\nZabina led her in to the room. Alex was stood wearing only the sexy ankle boots and a wide smile while swirling a glass of ice cubes. \n\n\"Give yourself to us.\" Zabi instructed her as she gently pulled on the tie up laces and deliberately slipped the panties away from Davina's body. \n\nDavina gasped as she became exposed to the two women, and something alien took control of her body. She stood calmly while the Zabina placed her arms behind her and looped soft silk ropes around her wrists until her arms were secured comfortably behind her. \n\nAlex moved in closer and threaded a doubled over rope around her waist, then laced a loose end through the loop. \n\nDavina breathed in the scent of the blonde as she passed the rope between Davina's legs, letting the rope fit snuggly over her labia and up between the cheeks of her bottom. Then yelped slightly as the rope was pulled tight and knotted off to the rope around her waist, then knotted again to the rope around her wrists. \n\nDavina tried to struggle against the bonds, but every movement of her arms tightened the rope across her clit making her legs go weak and her breathing ragged. \n\n\"She looks so delicious.\" Zabina said plucking the ropes and making Davina squirm. \n\n\"Very.\" Alex agreed. \"What do we do now though?\" \n\nZabina had stood for a moment pondering the question. \"Maybe we should take her up to the pool terrace on the roof and parade her around a little.\" \n\n\"That's such a good idea.\" Alex said eagerly. \n\nDavina listen intently and when she heard the plane to walk her around the hotel naked apart from the ropes she felt the beginnings of a climax build up inside her. \n\nAlex attached a short length of rope to waist rope. \"Walkies Davina.\" She had said and tugged slightly. \n\nA small scream erupted from Davina. \n\n\"I don't think she'll get as far as the roof.\" Zabi teased. \"Maybe just back to her room?\" \n\nDavina raised herself on to tiptoes trying to release some of the pressure of the rope while Alex and Zabina led her out of their room and back to her own. By the time they had entered it, Davina's climax had built in to a torrent that threatened to break at any moment. \n\n\"Do you think we should leave her on the bed for room service to discover?\" Alex asked giggling. \"We could leave her with no way of paying her bill so they lead her out of the hotel looking like this. \n\nThis tease had been too much for Davina to hold out against, and as she pictured herself being led down to the reception, by the room service women while she was naked and bound. The wave of climax broke over her. \n\n\"That did it.\" Zabina cried gleefully. \"Tug the rope see what happens.\" \n\nObligingly Alex pulled on the rope and another wave crashed in sending Davina off in to an orgasmic frenzy. \n\nShe eventually lost count of how many times they had tugged on that rope and sent her higher and higher. Finally, she felt the rope being removed and a voice that could have been Zabina's say. \"Pass me that pen, I want to leave her a note to remember us by.\" \n\nSomething soft and ticklish played across her behind as a deep sleep washed over her once more. \n\n*** \n\nEpilogue: \n\nThe following day Davina received a phone call from Kjersten. Someone corporation had offered Maidali a scholarship at Chicago University and her student visa was a done deal. \n\nDavina smiled to herself, wondering if it had indeed been Zabina's brother that had put the scholarship forward. \n\nFeeling more relaxed than she had in years Davina travelled back home that afternoon, eager to be back with her family. \n\nThat night she asked her husband Brian if he still had the ropes they used to use when they were younger. \n\nHe was a little surprised and said that they had been thrown out, then added enthusiastically that he could easily get more. \n\nDavina told him that would be a cool idea. Then went to the bathroom for a relaxing shower before bed. \n\nAs she was drying herself Davina noticed something in the mirror. Wiping the steam off the glass she half turned and her breath caught in her throat. \n\nWritten across the cheeks of her behind in sharpie pen were the words; \n\nWe were here. Alex &amp; Zabi"
    ],
    "authorname": "TrueMort",
    "tags": [
        "lesbian",
        "lesbian sex",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-tale-of-two-switches-ch-10"
}