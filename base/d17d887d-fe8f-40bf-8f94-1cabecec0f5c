{
    "title": "Premonitions: Senior Year Ch. 10",
    "pages": [
        "Disclaimer: All characters mentioned are at least 18 years of age despite the story taking place in high school.\n\nAuthor's Note: This is an ongoing anthology. I highly that you read the previous chapters to fully enjoy this one as it would help establish context, but if you insist on starting with this chapter here are some key points:\n\nEarly in his senior year, Scott discovered that he can foresee sexual encounters through premonitions that come with close proximity to his potential partners. Since then he has found others with the same ability and learned to extend his powers to be able to influence others and sense their emotional/sexual states.\n\nEnjoy!\n\nChapter 10: The Teacher and the Cuck\n\n\"I am sorry that I didn't make it tonight, although I am sure you had fun without me,\" Jackie said as she uncrossed her legs, a dark spot visible on her panties.\n\nI continued to stand in the doorway to my bedroom, unable to speak, not sure what to do. I knew what I wanted to do, but up until 30 seconds ago Jackie had been off-limits to me. She was dating Devin, my best friend, and he was not into sharing. Jackie had not been satisfied with the arrangement and had made a move to free herself to do as she pleased. I was the first stop on her bucket list.\n\n\"I was not planning on breaking up with Devin. He is super sweet after all, but tonight made it clear that I had to.\"\n\n\"What did he do?\" I asked, less curious about the answer and more to get my brain working again.\n\n\"It was more about what he didn't do, but let's not dwell on him. How'd Kristin take her reward?\" Jackie said with more than a hint on innuendo behind the word take.\n\n\"Eagerly and easily,\" I responded with a smile, now starting to relax. \"Jessica got in on the action as well.\"\n\n\"Shit, Scott. Does that mean you've deflowered all three of them?\"\n\nI did not immediately respond. Instead, I started slowly walking towards Jackie. Despite the night that I had already had I could feel my cock stirring in my pants. The memory of New Year's Eve and how her pussy felt wrapped around my member was stirring feelings that I had been trying to suppress for Devin's sake. Now I was free to not only feel them but to act on them as well.\n\n\"Too bad Devin got to you first, or I would have had you as well.\" I teased as I pulled my t-shirt over my head, letting it drop to the floor.\n\nDespite my initial hesitation I was beginning to accept that Jackie was here for me. I knew that Devin would be pissed if he found out I slept with his ex, but then again I had done far worse to him this year. My brain might have still been stuck in neutral, but my cock was already in overdrive.\n\n\"Oh, Devin was not my first, not by a long shot. There has been a long line of inadequate cocks before he got involved.\"\n\nIt did not matter her experience was probably why she was so talented. Jackie was in the same class as Devin's mom Conny, and not just because Devin would kill me if he found out I had slept with either one of them. They both could do things with their bodies that drove me wild. Things that I still cannot explain to this day. Things that I needed more of.\n\nJackie was shy and reserved at school. That is until she was challenged. Then she showed her true aggressive colors. She usually dressed in baggy clothes and had a reputation of being a bit of a tomboy. A reputation that she seemed to embrace. She was proud of her aggressiveness, and never back down attitude. She had a secret, however, and those of us that had been lucky enough to be with her were the only ones that knew. She loved to wear sexy underwear under those baggy clothes. Tonight was no exception.\n\nJackie had on a matching lace set of bra and panties. The bra did little to hide her prominent nipples, while the panties were now suctioned to the outer lips of her pussy, soaked through with her excitement. Jackie had smaller breasts, but her ass and hips made up for it. Pear-shaped, but in a way that drove me wild, especially when I was behind her. While not as toned as some of the other girls, Jackie knew how to work her body when she wanted to. Right now was one of those times.\n\nI began to unfasten my belt and pants as I continued slowly moving towards Jackie. My mom was downstairs, but I did not care, I had to have her now. As I pushed my pants down my cock popped free, still slightly crusty from my adventures earlier in the evening.\n\nJackie was as ready as I was. She flipped over onto her stomach, her legs hanging over the side of the bed, her feet braced against my carpet. Her ass presented to me, her ample cheeks split by the red thong, a sight that will be forever etched into my memory. Luckily, it would not be the last time that I was privileged to behold this sight.\n\nI stepped out of my pants, now completely naked as I positioned myself behind Jackie. My cock slid across her left cheek before coming to rest against the soft material of he panties. I started to put my hands gently on her hips, but I thought better of it. She did not come to me for tenderness.\n\nI raised my right hand, pausing briefly before I brought it down hard against Jackie's ass with a loud smack. The flesh of her cheek jiggled in response to the collision. Her body lurching forward, more out of reflex than force. A gasp escaped her lips, the only sound that she made. I raised my hand for a second strike. Pausing briefly to justify my actions, not that I needed to, but I was begging to understand the benefit of setting the stage.\n\n\"You have been a bad girl, Jackie. You broke my best friend's heart.\"\n\nSelfishly I did not care that she had broken up with Devin. In fact, I was overjoyed as it had brought her to my bedroom. It did, however, make a good story to justify the spanking that I was giving her. While we would have enjoyed it without the storyline, it made things more exciting and allowed me to be more sincere with my actions.\n\nThe second slap landed in the lingering red imprint of the first. This time her gasp was more of a moan. I spanked her three more times, each time upping the ante with how hard I hit her. She enjoyed the pain, just as Kristin had earlier in the evening, but more importantly, she enjoyed being punished by me. At this rate, I was going to have to enlist Marissa's help in learning the ways of BDSM. I did not know where to go from here.\n\nAfter the last of the spankings, I took a second to caress her ass, my cock continuing to nestle between her cheeks. Grabbing her hips I spent a minute dry humping her. My cock moving freely, having delivered plenty of lubricating pre-cum already. I was amazed at how good it felt to simply slide my cock between her ample posterior. There was something magical about everything that I did with Jackie. It was heavenly no matter what was happening.\n\nAs good as it felt, I needed more, my cock needed more, and Jackie certainly needed more. I reached down and grabbed her thong. I decided not to pull it off, but instead, I pulled it to the side, hooking it over one cheek. Both her asshole and cunt were now exposed to me. Unlike the last few times that I had seen her naked Jackie appeared to have waxed. Everything was smooth and clean.\n\n\"Was this for Devin?\" I asked as I ran my fingers over her hairless skin.\n\n\"Yes, but now it is for you Scott.\"\n\nIt turned me on knowing that she had done something special for him, but I was the one reaping the rewards. Wasting no time I placed my cock against her lips. Pushing forward I slid gently inside her, the warmth engulfing me as I drove deeper. She was just as tight and soft as I remembered, a sensation that I had been seeking in other girls, but no one had yet to compare. As my hips came to a rest against her ass I held in place for a moment. Unlike the cheerleaders from earlier Jackie was willing to wait, she knew that these pauses only elevated the experience as we moved forward.\n\nDone with my moment of contemplation and reflection, I picked up the pace, smacking into her with each thrust. Jackie in turn pushing against my bed. The bed was bouncing off the wall, not loudly, but with a definitive sound that undoubtedly broadcast what we were doing to my mom downstairs. I expected her to interrupt at any moment and demand that Jackie leave, but the intrusion never came.\n\nAs I continued to fuck Jackie from behind her moans became louder. I could feel her hand beneath her playing with her clit. Something that I heard other guys did not like, but I did not mind it as it brought my partners more pleasure. There was no time for insecurities when pleasure was the name of the game.\n\n\"I want you fuck me in the ass,\" Jackie struggled to say between gasps and moans.\n\nI was not bee expecting this, but it made sense with the way that she had presented herself to me. I had only had anal sex a few times before, and while it was amazing it was not something that I pushed on other girls. I had only done so with Alevia because I knew that she wanted to be completely used. It seemed that Jackie was in the same mood tonight.\n\nI had been so caught up in the moment that I had not taken the time to use my abilities to see what Jackie wanted. I had subconsciously known that she wanted to be spanked, but the anal sex had caught me by surprise. Not wanting any more surprises I placed my hands on her back, searching her desires as I slowed the thrusts of my cock.\n\nMuch like her outward appearance, Jackie was a mixed bag. Part of her wanted to be used and abused, while another part wanted to be treated tenderly and with compassion. I knew instantly that while Devin had fulfilled the latter, he had no desire to treat her like a sex doll. This is why she was not satisfied with him, and why he never stood a chance of holding on to her for the long run, at least not without opening up their relationship.\n\nI learned that Jackie had made almost the exact move on Devin earlier in the evening, only that he had flipped her over, wanting to make love to her face to face. She had gone with what he wanted for a while, the sex being okay, but when she asked for more things took a turn. It turns out that Devin had no interest in spanking her, making her feel used, or fucking her in the ass. This was less of a condemnation of Devin and more an evaluation of their compatibility. They made great friends, but lousy sex partners. Now they were neither.\n\nI knew that all of this was going to cause problems going forward, but those issues could wait. Right now I had an ass to ravage. Having learned all I needed, I straightened up and pulled my dick from Jackie's well-lubricated cunt. I sensed disappointment as I did, but this quickly changed to excitement as I pulled a bottle of lube from my bedside table. I drizzled a liberal amount of lube on both her brown eye and my dick. I did not want to take any chances of being too dry.\n\n\"You don't have to ask me twice,\" I joked, \"Devin may not want that ass, but I am more than happy to fuck you in any and every hole, you filthy slut.\"\n\nThe last bit was added purely for show. I made no judgment of her sexual desires, nor the fact that I was the second guy that she had fucked that evening. Who was I to judge? I had just come from a foursome with a quarter of the cheerleading squad, but Jackie already knew that. She had not told me that she had continued to have sex with Devin, even after he had refused the anal offer. He had cum inside her, just as I would have if we had not changed course.\n\nAt first, I was angry at her for withholding this information. This was my first experience with sloppy seconds, and I was surprised to find out that I was not grossed out, if anything it turned me on. Mostly because she had come to me to finish what Devin could not, but I was not in the mood to linger on why I was so aroused. I just wanted to do something about it.\n\nOnce against I placed the tip of my cock against Jackie, this time aligned with the two-hole. Pushing in I felt more resistance than her pussy, but once the head of my cock popped through her tight sphincter her insides felt just as warm and inviting. As I eased myself inside, her tight ring clamped down as my cock. While theoretically similar, it was surprisingly a very different experience than fucking her cunt. Six months ago I would have guessed that all holes felt pretty much the same. Since then, I had grown to learn that all three holes had their unique feel, and even those varied greatly from girl to girl.\n\nDevin did not know what he missed out on. He was going to regret letting Jackie go, but probably not until she realized that most girls, and women for that matter, could not hold a candle to her in bed. Well, except for his mom, but that is another story.\n\nAs I picked up the pace, once again grabbing Jackie's hips to help me thrust into her, I knew that I was not going to last long. That was alright because Jackie was one step ahead of me. As she worked on her clit with her right hand she slid two fingers into her cunt with her left. I could feel her rubbing away at her g-spot through the thin tissue that separated her two tunnels.\n\nShe was on the verge of orgasm, but she was trying to hold back any loud or wild noises. She was aware that my mom was home and did not want to be too obvious, but I knew that it was useless, my mom was already aware of what was happening.\n\n\"Don't hold back, cum as loud as you want, let my mom know that you love my cock in your ass.\"\n\nI am not sure what motivated me to announce this, but it did the trick. Jackie launched into an intense orgasm letting out cry after cry of pleasure.\n\n\"Oh, God, fuck me, Scott, pump my ass full of your cum. Fuck me like Devin couldn't, make me you slut, fuck me like the whore that I am.\" Jackie yelled at full volume, taking my request quite literally. \"Yes, yes, yeeeeeeesssssss!\"\n\nI unloaded into her. It was not my largest orgasm of the evening, but it was better than I would have guessed given my previous endeavors. I kept pumping even after cum had stopped flowing from my cock. I wanted to make sure that I kept going for Jackie to fully descend from the heights that she had reached. My efforts were valiant, but I am not sure they made too much of a difference.\n\nAs she relaxed in front of me I pulled my cock from her and headed for the bathroom to clean myself off. When I returned with a wet cloth for Jackie, she was still face down on my bed, unwilling to move just yet. I gently wiped her clean as she regained her composure, trying my best to be gentle in the ways that she needed in addition to the hard fucking that I had just given her.\n\nAs I leaned down to kiss her she turned to meet my lips with hers. Our kiss was soft and gentle, but it escalated into a deep passionate tongue battle that went on for the next several minutes. I finally broke the kiss, unwillingly, but with the knowledge that she wanted to talk.\n\n\"Fuck Scott, that was perfect. If only I could have your dick and Devin's tongue.\"\n\nShe was joking, but I would have been okay with that arrangement if Devin had been. Unfortunately for her, it was not going to happen. I had a feeling that her connection with Devin was burned to the ground, even if it had not been an emotional breakup for her. For Devin, it was the first time that he got dumped, and he was not going to take it well.\n\nJackie's comment did give me an idea. I remembered that Devin was not the only member of his family that had exceptional oral skills. Devin's mom, Conny, had given me the best blow job I had ever had, and she seemed more than proficient when she had gone down on my former babysitter Veronica.\n\n\"You know, while you might not be able to get Devin's tongue, his mom is pretty good herself.\"\n\nI was not sure how Jackie was going to take this news, but so far she had taken everything else in stride. This was another level, however, and risked making Devin even angrier, if he ever found out.\n\n\"Wait, what?\" That was all Jackie could muster.\n\nI let out a slight laugh, \"It is a long story, but maybe you should visit her one day when Devin is not home. I am sure she would be happy to entertain you.\"\n\n\"Or maybe you could make the introduction. It seems like you might have a history with her yourself. I somehow never actually met her.\"\n\nThat sounded like a perfect idea if I had ever heard one. It was just a matter of finding a time that we knew Devin was not going to be home. If he caught me with his mom AND his ex . . . well, I did not want to find out.\n\n\"Sounds like a plan.\"\n\n* * *\n\nI would like to say that Jackie and I met up with Mrs. Costa in the coming weeks, had a fantastic threesome, and that everything was going smoothly and perfectly as usual. The reality, however, is that we never got the chance to approach Conny, and nothing was going smoothly, nothing at all.\n\nThe spring of my senior year was supposed to be a carefree time in my life. I had several options of colleges to attend, my grades were good, and I was having tons of amazing sex. It was all perfect until Jackie broke up with Devin.\n\nAt first, I thought that it was going to be a godsend for me, as Jackie was now free to sleep with me as she pleased, even if only on the down-low. In actuality her dumping Devin destroyed him. I was not prepared for just how poorly he took it, and to be honest I did not make it any better when he came to me for advice.\n\nI thought that I was telling him what he needed to hear, but he was not in a position to absorb the truth. Instead, I should have told him what he wanted to hear, some version of how much of a bitch Jackie was and how she did not know what she was losing. What I did tell him was that he and Jackie were not a good match and that he should move on and find another girl to mess around with until he left for college in a few months.\n\nDevin still did not want to mess around, however, he wanted to be in love, which is what he thought he had with Jackie. To this day I still do not know what made him think that he needed to be in love at 18. Getting his dick wet with as many girls as possible should have been his goal. Hell, I knew at least a half dozen girls that would have eagerly fucked him. I even mentioned several of them to him, but he was not ready to hear me.\n\nAll of this resulted in me getting annoyed with him and telling him to get his head out of his ass. Needless to say, he did not take that very well. He stormed off and hasn't spoken to me since. That was over a month ago.\n\nAs if this drama was not more than I needed, the filming took a turn for the worse when the guys that we were using started demanding equal pay. Up until then, we had been paying the girls four or five times what the guys got. This was in part because they were the real stars, with the guys being interchangeable, and in part, because it was easy to convince the guys to appear in the films. All you had to do what dangle some hot sex in front of them and they jumped at the chance. A few dollars and they were signing their likeness away at a fraction of what the girls demanded.\n\nThis all changed when one of them got the hot idea to form some sort of men's rights union. I am not sure what their moral ground was, but they seemed to think that it was a basic right to get paid as much as the women. Ironically none of them had any clue about the Equal Rights Act or the gender pay gap in the real world. Nevertheless, they were unwilling to negotiate.\n\nSo far, we had been able to work around it by expanding our pool of guys. There were still plenty of willing participants, but now we were making a lot of storylines about nerdy guys getting fucked by the hot girl for help with their school work. Or some bullshit like that.\n\nIt was still selling, but these nerds were getting convinced that they needed equal pay as well, and their spring was drying up. Soon we would either have to give in or find another source of men, one that did not have access to each other to form a union of sorts. Regardless of the next step, I was exhausted from using my abilities to recruit so many new guys. I felt I had better things to deal with, but Alevia, Malory, and Marissa were eager to keep the videos flowing.",
        "They were probably right, we all needed the money for school. We were inherently going to have a lull when we headed to college. Setting up shop at our respective schools was going to take some time. Plus there was the possibility that our viewers would not follow us to college, instead preferring to stick with the high school scene. We had a few realistic competitors pop up recently.\n\nMarissa had a plan. It was good, but we were still working out the kinks, so to speak. She wanted to use her connections around town to set up a series of dirty babysitter videos. Instead of using the boys from our school, we would use the dads of our town. She thought that it would be extra hot if we sent the girls to actually babysit when needed, and then have them seduce the dads. The basic premise would be easy enough, but getting them to sign the disclosure agreement would be the issue. It was just another thing that needed to be dealt with.\n\nThen there was the issue of Jackie and me. The sex was great, and honestly, sneaking around behind Devin's back was pretty hot. The issue was that prom was coming up and she wanted to go with me. She had agreed that it could be as part of a larger group, but that did not completely solve the Devin issue. I was not sure how I was going to mend things with Devin if Jackie was part of my prom group and Devin was not. I had talked this over with Alevia and Malory, and both of them decided that the only solution was to get Devin a date.\n\nI was not sure about this. I had tried to set Devin up with several girls that were willing to sleep with him. He had rejected me each time. Malory was the one that pointed out that I was not thinking like Devin. He was not looking for a booty call, he was looking for love. If I was going to find a girl to replace Jackie in his heart it was going to have to be one that he saw a future with. Even if they were inevitably break up because of college. Malory was right, of course.\n\n* * *\n\nProm was now only a few weeks away, and Devin was only slightly warming up to me. He had started to speak to me at school, but it was limited to school-related topics. We had not had a conversation about what was said, and I was not sure that we were ever going to. It seemed like one of those issues that was either going to disappear or linger until we never saw each other again.\n\nI had wanted to apologize, but I sensed that it would only make things worse if I tried. Devin was still stuck in his misery from Jackie dumping him and he did not want any part of me at the moment. I learned that his anger towards me went beyond what I had said to him. He blamed me for their break up, and that was without knowing that I had been fucking Jackie behind his back ever since.\n\nDespite his liberal political views, Devin was quite traditional when it came to love and sex. He blamed me because he felt that I had introduced her to a world of sexual freedom that had corrupted her. While this was partly true, it was missing much of the context. I had introduced her to the world, but I had not corrupted her. If anything I had liberated her from her previously restrictive thinking about what sex could be. Something that she had been searching for forever since losing her virginity. Devin, unfortunately, was still stuck in traditionalist thinking, which was odd considering his parents' views on sex.\n\nAs time passed I grew to miss Devin more and more. Devin had been my film buddy. We would see all of the new releases, no matter how stupid they may be. We tended to enjoy the dumbest movies the most. Something was liberating about letting loose and giving in to the ridiculousness of a silly movie that you just could not get anywhere else. Needless to say, I had not been to a movie for a while, until today that is.\n\nI had not been able to find anyone else to go see a movie with. Everyone was either too busy or thought themselves too classy to see what I wanted to see. So, I decided to go alone. It was not the first time that I had seen a movie by myself, but it still felt weird to be sitting alone in a half-full theater. It was the new bullshit from the DCEU. Their movies sucked, but I always found them entertaining at the moment. I hadn't missed an opening weekend for any of them.\n\nI had just settled down in my seat with some popcorn and soda, basically the only time I drank that shit, when a cute nerdy brunette walked down the aisle in front of me. She took a seat almost directly in front of me, but not quite. Something that I appreciated, even with the new stadium seats, as it preserved all of my legroom. Although, I still had to pay attention to make sure I did not put my foot too close to her head if I crossed my legs.\n\nI had seen her around school but never had any classes with her. I was amazed that I could make it four years at my high school and never share a classroom with some kids. I had already decided to ignore her and pretend like I did not recognize her when I became dizzy and my vision went blurry, clear signs of an imminent premonition. My vision cleared to once again show me someplace else and sometime in the future.\n\nA petite brunette was laying on her back in the middle of a plush bed. She was naked from the waist down, but still had her bra and a mask on. The mask was silver and made of lace, the kind that makes you think of an upscale masquerade. Her bra matched, silver and lacy in its own right, and allowed plenty of her pale skin to show through. Even if she did not have much in terms of cleavage, the outlines of her nipples were visible, if blurred by the fabric.\n\nThe brunette's chest was heaving as she sucked in deep breathes between moans. Her right hand was running through her own hair, while her left had a firm grasp of the brown mop that was between her legs. It was not me that was going down on her. My premonitions came in the first person. I was simply sneaking a peek through a cracked door.\n\nI realized that it was Devin who was going down on her. This was the first time that I had a premonition that did not feature me involved in the sexual activity. I smiled, realizing that Devin was going to get past his current hang-up with Jackie. I could not know when this would take place, nor did I know what this meant for my friendship with him. It was at least a promising revelation that I was in the same house as him.\n\nAs Devin worked his magic between the girl's legs she pushed her mask up with her free hand, revealing her face to me. It was the girl sitting in the row in front of me. This was not a shock, as she was the only woman near me. I let myself linger in the premonition longer than I normally did, as I was surprisingly turned on watching my friend go down on this relative stranger. Devin was indeed impressive with his tongue, and her body was responding accordingly.\n\nThe brunette's moans increased before they turned to cries of joy and pleasure. She arched her back, pushing Devin's face into her as she erupted in an impressive orgasm. She did not call out, or speak in any way, but the chaotic noises she made were those of a girl well pleased. As she came down from her climax Devin lifted his head from her pussy, his chin and cheeks glistening in the light of the dimly lit bedroom. They smiled at each other as Devin crawled his way up her body, planting a passionate kiss on her lips.\n\nI decided it was time to come back to the real world. I settled in my seat, adjusting my hard-on, preparing for the beginning of the trailers. I always looked forward to seeing what was coming out, even if I already knew most of the movies featured. I glanced down at the brunette, still unsure of what her name was, and debated if I should introduce myself. With the lights dimming I decided that whatever I chose to do would have to wait until after the movie.\n\nThe film was gloriously bad, but as usual, I had a great time. I just wished that Devin was here to enjoy it with me. As the credits rolled and the lights came up I stayed in my seat for the inevitable post-credits scene. I was never sure why I waited around for them, they were always available online shortly after the release, and the credits kept getting longer and longer. The wait was not worth the payoff, yet I continued to wait.\n\nAlso waiting was the nameless brunette. I figured that if I was going to say something to her that now was as good of a time as any. I leaned forward and gently tapped her on the shoulder. She jumped slightly from the shock of being touched in a theater and turned her head to see what I wanted.\n\n\"Hey, sorry about that, I did not mean to scare you. We go to school together right?\" I said, not knowing how to begin a conversation with someone that I did not know their name, but probably should.\n\n\"Yeah, we do. I am Virginia.\"\n\n\"I am \u2014 \"\n\n\"Scott. I know who you are. And before you proposition me, I am not interested. I have heard of your reputation.\"\n\n\"Oh, well . . . I honestly wasn't going to, at least not for me anyway. Did you enjoy the movie?\n\nI was caught off guard and flustered. This was the first time that I had been rejected all year, not that I was pursuing her. Still, it felt oddly insulting that she did not want to be with me, even if I completely understood why. My powers had weeded out girls that were not into me, so I had forgotten what it felt like to be shot down. Then again, before I had my powers I did not have the confidence to put myself in a position to be rejected. Therefore, rejection was completely new to me.\n\n\"I mean, it was shit, but my kind of shit, if you know what I mean.\"\n\n\"I do, and I agree. Usually, I am here with my friend Devin, he is into this type of shit as well.\" I said, not knowing how to transition into what I wanted to talk about.\n\n\"I know him, he's kind of cute,\" Virginia said with a slight blush.\n\n\"You think so? Well, he was actually why I wanted to talk to you.\"\n\n\"Yeah?\" She responded, clearly confused.\n\n\"I know this is weird, but he is single now . . . and, well \u2014 \"\n\n\"You want me to ask him out? Or to prom? Or something?\"\n\n\"Would you? He got dumped a few months back, but I know he is ready to move on, he is just a bit gun-shy.\" I could not believe how well this was going, but the deal was not sealed yet.\n\n\"Normally, I would tell you to fuck off and explain how I am not some toy to be played with for you and your friend's pleasure . . . but, I like him. So, I could be persuaded . . . but you have to promise me that you will not use any of your Voodoo on me.\"\n\n\"Deal,\" I instantly responded.\n\n\"And one more thing . . . \"\n\n* * *\n\n\"I think that I found a solution to our Devin problem. At least as it pertains to prom.\"\n\nI was lying naked on my bed, my eyes fixed on a deformity in my ceiling. It was a spot that I often focused on when contemplating life, or when I can't fall asleep. My recently hard cock was slowly shrinking in its post-coital state. Jackie was lying next to me, just as naked, but not quite as done with the sex. Mainly because Alevia had her face buried in Jackie's juicy cunt.\n\n\"Yeah?\" Jackie responded out of breath, \"And what is that?\"\n\nAlevia was ignoring the conversation. Not because she did not care about my issues with Devin, but because her tongue was flicking against Jackie's clit with speed and accuracy that I could only dream of. That was probably because I did not take oral sex as seriously as she did. For me, it was simply foreplay, or maybe aftercare, but for Alevia it was everything. She had been busy honing her skills all year, and her efforts were paying off.\n\nJackie was trying to pay attention to what I was saying, but her priority was cumming one last time. She reached her hand down and grabbed Alevia's hair, guiding her in her endeavors. In response, Alevia reached one hand up and pinched Jackie's nipple, the sensation causing her to arch her back. I contemplated rejoining the fun, but I was still too tired to move. It had been a long afternoon and I needed to rest, something that that Jackie and Alevia clearly did not understand.\n\nAlevia had slid two fingers inside Jackie and was massaging her g-spot as she continued her tongue bath of Jackie's clit. Jackie was responding to the actions and was now grinding her crotch into Alevia's face. I was not sure how Alevia was breathing, but she showed no sign of coming up for air any time soon. She was determined to make Jackie cum, which was not far off now.\n\n\"You know that girl Virginia? Small girl with brown hair in your history class last year?\"\n\n\"Yeah \u2014 of fuck yes, right there \u2014 I know her. She's cute.\" Jackie managed to say between moans.\n\n\"Well, I ran into her at the movies yesterday, and it turns out she likes Devin,\" I said with a glance in Jackie's direction.\n\nJackie's orgasm was building now. Her breathing grew shallow and her moans louder as she held back one final scream of pleasure. Alevia intensified her efforts on Jackie's clit as Jackie wrapped her legs around Alevia's head, trapping her until she finalized the deal. Bucking wildly Jackie came, pulling at Alevia by the roots of her hair.\n\nJackie's head flung from side to side as she cried out in joy for what felt like several minutes. As she started to come down, she eased her grip on Alevia's hair and loosened her legs around her head. Alevia did not sit up. Instead, she redirected her attention towards gently kissing Jackie's thighs and licking up the mess between her legs.\n\n\"No shit? Virginia seems like a perfect girl for Devin. As long as you can keep your cock out of her.\" Jackie said as she settled on her back, staring up at the ceiling just as I was.\n\n\"She's cute, but she already made it clear that she does not want anything to do with my dick.\"\n\n\"Well, I would say that she is an idiot, but in this case, it works to our advantage.\" Jackie smiled, glancing over at me.\n\nAlevia emerged from between Jackie's legs and crawled her way up Jackie's body, briefly pausing to tease each of her nipples. Alevia planted a tender kiss on Jackie's lips before rolling to the side and joining us in our attempts to decipher the mysteries of my ceiling.\n\n\"She does not know what she is missing.\" Alevia flatly said.\n\nWe all broke out laughing. We knew that Virginia was not like us, but then again, neither was Devin. Our group had expanded since the beginning of the school year, but it was still an elite segment of the horny kids. Well, all of the students were horny, some of us just liked to let loose more than others . . . and with more people than others.\n\n* * *\n\n\"Okay, it is all set. The first round of babysitters is going into action this week. We have coordinated with the dads and they will drive the babysitters home when possible. We have arranged for various private places for them to stop along the way. Except for Mr. Johnson, his wife is out of town, and he agreed to let us film at his house hidden camera style.\"\n\nMarissa's announcement was big news. She had worked hard with Malory convincing Marissa's submissive clients to help us out. More accurately it was her clients' friends that were convinced. That being said, they did not need to be persuaded to have sex with teenagers. All of the men were eager to have the opportunity to fuck a high school girl, they just balked at the idea of it being filmed. Eventually, once we showed them how we operated and the safety measures we had in place, especially those that keep locals from signing up on the webpage, they came around. High school pussy was worth the risk. The best part was that none of them demanded a cent for their participation, only that we keep their identities hidden.\n\n\"Want to come to any of the shoots?\" Marissa asked me.\n\n\"I would love to, but I am only free Thursday. Got anything that evening?\"\n\n\"We do. The Stevenson's are going out to dinner, and we are fairly certain Mr. Stevenson will be able to drive Ashley home.\"\n\n\"Ashley? She is the redhead?\" I asked, not sure if she was who I was thinking of.\n\n\"That's the one. She is a feisty one, Mr. Stevenson is going to have his hands full. She has been a star online. She is our second most-watched girl. She likes to put on a show. Whatever is needed for the scene.\" Marissa added.\n\n\"Yeah, she has a great ass as well. How old are the Stevenson's kids?\" I wondered aloud.\n\n\"One and three, I think. Why do you ask?\" Marissa responded with an intrigued look on her face.\n\n\"Oh, well, I have a fun idea, but it will only work if the kids have an early bedtime.\"\n\n\"Well, the kids are supposed to be in bed by 8 and the Stevenson's won't be home until at least 9:30, or so they said. What do you have in mind?\" Marissa responded while digging for the information in the expansive files she had on all the shoots.\n\n\"Well, if Ashley is game, then I would love to leave Mr. Stevenson a little surprise,\" I said with a wicked smile.\n\nThe truth was that I had been looking for a way to get back at Mr. Stevenson. Believe it or not, he taught at our high school, and it did not surprise me one bit that he was into teenage girls. That, however, was not why I wanted to get back at him. It was because he tried to flunk me in geometry my freshmen year for not showing enough work.\n\nBesides the fact that the work was easy enough to do in my head, he had failed to warn me until near the end of the first semester. He held me after class one day and told me that he knew that I had been cheating all semester. It was a ridiculous claim, based only on the scarcity of my work. He said he was going to have to fail me unless I could prove otherwise.\n\nI argued with him a bit, and probably crossed some lines, but I was insulted by the assumptions he was making and pissed off that he waited this long to confront me. After a lengthy debate we came to an agreement that I would take the final early, on my own, and with him closely watching me. I agreed, but before I could negotiate a time he said that I would need to be at school early on Monday.\n\nTaking a test starting at 6 AM on a Monday was just a cruel joke, but I did not argue, after all, the more power he felt now then the better I would feel when I aced the test. In the end, I did not quite ace the test, only mustering a 96%, but it was enough to get him off my back.\n\nI probably should have let it go, but it was a slight that lingered with me still. Now, over three years later, I could have a bit of revenge. I mean, if I was truly set on destroying him I would simply leave a copy of the video for his wife, or the principal, but that seemed like an overreaction. My way was harmless, more of a prank than serious revenge, although he might not agree.\n\n\"I assume you are filming Ashley arriving and all that?\"\n\n\"We are, at least as much as we can,\" Marissa replied.\n\n\"Good. Have whoever is running the camera stick around, I will meet them at the Stevenson's at 8. Give Ashley a GoPro, and have her call me when she is putting the kids down. We can play it off as her inviting her boyfriend over to fuck while the parents are gone. I think that would sell in and of itself.\"\n\n\"I love it. I will let them know, and have fun on Thursday.\"\n\n* * *\n\nLong ago I had promised Mrs. Franklin that I would help her find a way to have a better sex life with her husband. It was not a complicated task in itself. All I had to do was get close enough to Mr. Franklin to read his sexual desires and relay them to his wife. The issue was getting near Mr. Franklin. There was just no natural reason for me to run into one of my teacher's husbands. Because of this, I had not been able to fulfill my promise to Mrs. Franklin.\n\nLast week, however, Mrs. Franklin had told me that she and her husband were going to the movies on Wednesday evening. She knew that I was a film buff, and thought that this might be a good way to get me close to him. I had not been sure it would work, but my encounter with Virginia opened my eyes to the possibility. All I had to do was sit behind them at the movie and I would be able to get what I needed. I did not even have to introduce myself to him. He would never know that I was there. Which is how I ended up sitting alone in an empty theater on a Wednesday evening.",
        "The movie was a French film that I had heard little about, other than it was supposedly pretty sexy. I had arrived a little early, hoping that they would already be here, allowing me to get my work done before the movie started, but I was wrong. The trailers had started rolling by the time they staggered into the theater.\n\nBoth Mr. and Mrs. Franklin were drunk. They had hit the wine hard at dinner and were now wandering into the theater just in time. Arm and arm they seemed as in love as anyone. If Mrs. Franklin had not told me about their sexual incompatibilities I would never have known that they were not blissfully in love. Mrs. Franklin saw me but did not acknowledge my existence. She did, however, steer her husband to the row in front of me.\n\nI only had to shift down a few seats to be directly behind Mr. Franklin. He did not seem to notice my move in his tipsy state. As the film started they relaxed into each other, snuggling through most of the movie. Their hands roaming over each other's legs, occasionally lingering on the groin, but always remaining above the pants. I concentrated on Mr. Franklin and his desires.\n\nOn the surface, Mrs. Franklin had seemed to be right. While she was into more taboo sex, her husband preferred to be gentle and romantic, but there was something that he was trying to repress. Deep down he wanted something more, something different. I couldn't crack him.\n\nSitting back to watch the movie I gave it a rest. I would return to him later. Maybe the sexuality of the film would loosen him up a bit. I always found it easier to dig around when a person was aroused. Turning my attention to the movie I surprisingly found it interesting, if oddly topical given the situation.\n\nThe main storyline was that of a college sophomore who had a one-night stand with an older guy she met at a bar. It had been a great night for the two of them, but both thought that it was better to leave it at that. It turns out that a few months later the college girl had the older man as a professor in one of her classes. To complicate things, he is married. Needless to say, things get tense and steamy after that.\n\nAs the movie was playing out I could not help but take a peek inside Mrs. Franklin's mind. I was curious as to what she was thinking about during such a movie, especially since it was similar to our relationship, and the way she met her husband. Not surprisingly she was thinking of me. She was recalling my hard cock in her ass and was hoping that I would be willing to rendezvous with her sometime soon.\n\nA second meeting was not something that we had planned, but it was something that I had wanted ever since the first. I had not pushed it, however, especially since I had promised to help her with her husband. I did not want to drive a wedge between them before I even knew what he wanted.\n\nIn the climactic scene, the wife of the professor takes her revenge on him by tying him up and inviting the college girl over. While the husband is tied up the wife and the college girl engage in a graphic sex scene, one that you would assume would end with the husband being allowed to join in. Instead, the wife and the college girl leave with each other, and the movie ends with the husband still tied to the bed.\n\nAs this was playing out I took another shot at cracking Mr. Franklin's dark secret. As it turns out, I was right about waiting for him to be turned on. It was also clear why Mr. Franklin wanted to see this movie and tried to hide his desires from the world. He had a cuckold fetish. Not only did he want his wife to sleep with other people, but he wanted to be made to watch. I could not believe my luck.\n\nAs the credits rolled and the lights came back on, the still drunk and flirty Franklins stood and staggered their way towards the exit. I hesitated for a second, not sure if I should follow through with my desires. It would be easy if I wanted to. I already knew that the film had made Mrs. Franklin think about me. She wanted me, and who was I to say no? Further, her husband wanted to watch her fuck someone else. Why shouldn't it be me?\n\nGiving in to my wanton lust, I jogged to catch up with my teacher and her husband. I figured that playing it cool was the best way to go, after all, I did not want to scare Mr. Franklin. He was still coming to grips with what he wanted, so a full-court press might be too much for him. I chose a more innocent approach.\n\n\"Hey, Mrs. Franklin,\" I said, still behind the couple.\n\nDespite her knowing that I was in the theater, I caught her off guard. We had agreed that I was not going to say anything to her, as she did not want the awkwardness of running into me outside of school. Really, she did not want the awkwardness of running into the boy she cheated on her husband with.\n\n\"Oh, hey . . . hi, Scott.\" Mrs. Franklin stumbled out. \"Were you in the movie with us? How embarrassing?\"\n\n\"I was. That was some pretty sexy stuff, wasn't it.\"\n\n\"I, oh, well \u2014 \"\n\n\"It certainly was,\" Mr. Franklin interrupted his wife.\n\n\"I mean, that teacher-student scene was hot as fuck,\" I added.\n\n\"I guess, but it was a professor, not a \u2014 \"\n\n\"It was not as hot as when the wife fucked her in front of the professor,\" Mr. Franklin once again interrupted.\n\n\"Well, we should be getting home. It is a school night after all.\" Mrs. Franklin said as she ushered her husband towards the exit.\n\nI knew that I had to make my move if I was going to make it happen tonight. I had been trying to do this without using my powers, something I had been experimenting with more and more, but I was growing impatient. It was so much easier to just make people see what they want rather than try and coax it out of them naturally. Channeling my thoughts I guided both Mr. and Mrs. Franklin towards their desired outcome for the evening.\n\n\"You two aren't driving, are you? Not to be rude, but you both seem a little drunk.\"\n\nIt was their intoxication that made my push so effective. Neither one of them put up a fight when I suggested that I drive them home and that once we arrived at their house they should invite me inside. This was going to get me in the door. Hopefully, from there things would go smoothly with Mr. Franklin. After all, for this to work I needed him to open up to his wife about a secret that he had been keeping for a long time.\n\nMrs. Franklin took the front seat, while Mr. Franklin slid into the back. I knew where she lived, but I asked for directions anyway, just to add to the happenstance of the meeting. It was purely for the benefit of Mr. Franklin, but I found that it added to the excitement of the evening. If this had been my first time with my teacher then how much hotter would that be for her husband to watch?\n\nAs we drove Mrs. Franklin gave me directions. At one point drunkenly pointing for me to make a left turn, thrusting her arm in front of my face. I took this as an opportunity. Grabbing her hand I gently lowered it to my leg, resting it on my thigh. This was visible to Mr. Franklin, but his reaction was hidden from his wife.\n\nMrs. Franklin's hand lingered on my thigh, only for a few seconds, but enough to elicit an internal reaction from her husband. Mr. Franklin started to grow hard, his cock reacting to the affection that his wife was showing me. He did not say anything, and I could tell that he was hoping that she would leave her hand where it was. She did not.\n\nMrs. Franklin removed her hand quickly once she realized what she was doing. She was embarrassed that she had made such a blatant mistake in front of her husband, but deep down she longed to return her hand to my thigh, and so much more. Not wanting to let the moment slip by, I reached over and firmly grabbed her leg. At first, she did not react to this, not wanting to make a scene. When I started to slide my hand higher, my fingers dipping further onto her inner thigh she began to panic.\n\nAt first, it was just internally, but eventually, she realized that she had to put an end to it before her husband began to think something. Unbeknownst to her, it was already too late. Mr. Franklin had not only noticed my hand, but he was loving it. Mrs. Franklin's husband was fully into the fantasy of watching his wife fuck one of her students. He was racking his brain trying to come up with ways to make it happen. Little did he know that all he had to do was ask.\n\nBefore Mrs. Franklin could remove my hand I subconsciously suggested to her that she should leave it where it was. I projected to her an outcome where her husband did not see what was happening, and she went along with that, eager to believe whatever I suggested, as long as it meant my hand could inch closer to her pussy.\n\nI could have given her the truth, but I felt that it would be more fun to let it linger in the ether for a while. The reveal was going to be more fun that way. Plus, I wanted to see her face when her husband finally fessed up. While she was allowing my actions, it was only because she was convinced that she was getting away with them. Her husband, however, was fully aware and growing ever the more excited because of it.\n\nAs I pulled into their driveway I could feel the heat radiating from beneath Mrs. Franklin's pants. I knew that if I slid over another few inches that I would feel dampness as well. She was ready to be fucked, she was just not aware that it was going to be by me. She was still under the impression that I was dropping them off and then she would try her luck with her husband.\n\nThat was not happening. I had gone this far, so I might as well finish the job. After all, she wanted to know what her husband dreamt of, and this would show her. Just in a more hands-on way than she was expecting. Turning off the engine I focused my energy on Mr. Franklin, nudging him just enough to get him to invite me inside for a drink. I agreed, giving Mrs. Franklin's thigh a squeeze of excitement as I did.\n\nInside Mr. Franklin poured me a small glass of scotch, making some lame joke about not wanting to give me too much or else his wife might be accused of plying a student with alcohol. I assured him that he did not have to worry about the alcohol, insinuating that if she was going to get in trouble it was going to be for a whole hell of a lot more. It drew some nervous laughs from the two of them.\n\nAs we awkwardly sipped our drinks I pushed Mrs. Franklin towards a choice that would get things moving. I leaned in a whispered something in her ear, making sure that Mr. Franklin did not hear it. Not for his benefit, but for hers. She immediately excused herself and headed upstairs while her husband and I sat in the living room, not knowing what to say. I nervously broke the tension.\n\n\"So, you like watching \u2014 \" I started to ask about foreign films.\n\n\"I do, although I haven't told anyone that.\" Mr. Franklin responded.\n\nThis was a good sign, if from an unintentional prompt, he was opening up to me. I had broken through his walls and everything was pouring out now. The rest would be easy. I just needed Mrs. Franklin to come back downstairs so that her husband could confess his desires to her.\n\n\"Oh, I did not mean it like that. So, you like to watch. Like, watch people . . . \" I finished my sentence with a hand gesture indicated sex.\n\n\"Well, I should not say that I like it. That would imply I have done it before, but I have always dreamed of watching my wife fuck someone else.\"\n\n\"So, you don't invite students home all the time then?\"\n\n\"Umm, no. I am too nervous to even tell my wife.\"\n\n\"Well, do you want it to happen tonight? Do you want to watch me fuck my teacher? Your wife?\"\n\nI knew that I had him now.\n\n\"Would you? I mean, you would want to sleep with your teacher?\"\n\n\"Of course, me and every other straight guy in the school. Hell, half the girls would sleep with your wife if given the chance. All you have to do is convince her to sleep with me.\"\n\n\"Oh right, that. That is the part that makes me nervous. There is no way that she will risk her job to sleep with a student. I should find someone older. Someone that is not going to get her fired.\"\n\nHe was fighting it now. He was seeing the flaws in the logic, something that I needed to steer him away from. I needed him to focus on the sex, not the consequences. I could have told him that I had already slept with his wife and that she was game to do it again tonight, but I wanted to see him beg his wife to fuck me. He needed to beg his wife, for himself, for his wife's future happiness, and for my short-term horniness.\n\n\"Well, what would be hotter, her fucking some random 35-year-old dude, or one of her students?\"\n\nThat was all I needed to say and he was back on board with persuading Mrs. Franklin to fuck me. It was a game within a game, and I was loving it. While I was giving both of them what they wanted, I was also making them both work and suffer for it. It would have been easy to just show them that they had a mutual desire tonight, but where would the fun have been in that?\n\nNeither of us said anything further. The decision had been finalized without words. We both knew that I was going to fuck his wife tonight. We sat there in silence, sipping on our scotch. I did not like the taste, but I did not let on, not wanting to ruin what was otherwise a perfect moment.\n\nMrs. Franklin returned down the stairs as planned. She looked stunning. She was wearing a red corset with matching panties. Extending below the corset was a black garter that clipped onto sheer black stockings. A pair of 4-inch stilettos finished off the look. It was a living breathing wet dream of every heterosexual teenage boy.\n\nWhile I had used my abilities to suggest that Mrs. Franklin go upstairs and change into something sexy, I might have led her to believe that it was for her husband after I left in a few minutes. It was probably a cruel thing to do, but at the moment it seemed like a fun idea.\n\n\"Oh shit! Scott? You are still here?\" Mrs. Franklin said in shock, as she tried unsuccessfully to cover herself with her hands.\n\n\"Wow,\" was all that escaped my mouth, with no acting required.\n\n\"It is okay dear, I want him to stay, but I need to talk to you about something first.\" Mr. Franklin said taking his wife by the hand and leading her to the dining room.\n\nI was disappointed that Mr. Franklin had decided to break the news to his wife out of earshot from me, but I quickly got over it. I simply sat back on the sofa and waited for them to return. I did not need to know the details of their conversation. After all, I already knew where it was heading; with me getting fucked, for the second time, by my history teacher. This time, however, her husband would be watching from the corner of the room.\n\nA few minutes later they returned. Mrs. Franklin was keeping up the guise that this was something new to her, and that she was nervous about sleeping with another man, much less a student. I played along, pretending to be shy and nervous as we discussed the ground rules. She had dropped the pretense of trying to cover herself in front of me and allowed me to check out her amazing body as we negotiated.\n\nThere ended up being very few rules. Mr. Franklin did not want to be a part of it, except for watching, until the end. He would sit and watch while I took his wife in any way that we wanted. He would remain clothed and would not touch his cock. There were no limits for me, besides one. He wanted to see me cum on his wife.\n\n\"Follow me, big boy. Teacher's got something to show you after class,\" Mrs. Franklin mockingly said as she took my hand.\n\nLeading me up the stairs towards her bedroom I could not help but stare at her magnificent ass. Not that I had much of a choice as it was only a foot in front of my face. I reached out with my free hand and slid it up the back of her leg, cupping her ass as we crested the stairs and turned towards the master bedroom. Mr. Franklin shyly followed us inside.\n\nOnce inside Mrs. Franklin playfully pushed me away as she spun and sat on the bed. Looking me up and down like a piece of meat, she continued the ruse that she had no previous relationship with me.\n\n\"I want to see your body, Scott. I want you to strip for me.\"\n\nThis was something new to me. I had never even attempted a striptease and did not know where to start, except with taking off my shoes. I knew that would not be sexy, so I knelt and untied both shoes, but instead of taking them off I stood and kicked them towards Mr. Franklin. I knew the added humiliation would turn him on more. As my shoes bounced off of his legs I pulled my socks off and tossed them at him as well.\n\nThere was no music, but I slowly started to dance anyway, moving my hips as suggestively as I could. It was awkward and I could not tell how well I was doing, but a glance at Mrs. Franklin told me I was doing well enough. She was rubbing herself through her panties and continued to look me up and down as I slowly gained courage and lost myself in the striptease.\n\nI slowly lifted my t-shit, showing off my stomach, flat but with only slight ab definition. I pulled my shirt up and down for a few minutes as I continued my dancing. Eventually, I tossed it at Mr. Franklin and shifted my hands to the clasp of my jeans. Unbuttoning them, I slowly pulled them apart as my fly opened. I teased Mrs. Franklin more, pulling my pants shut, then down a little, then back up. After I had exhausted all my options for manipulating my pants I let them slide to the floor. Luckily I was not wearing skinny jeans or it would have been an unsexy show of me tugging them off.\n\nStepping out of my pants, I was now wearing only a tight black pair of boxer briefs. My hard but still tucked cock was filling out the front nicely, making me look good as I caught a glimpse of myself in the mirror. I shook my ass at Mrs. Franklin and backed up until I was in contact with her.\n\nGrinding against her I did my best to give her a lap dance, but I was now entirely unsure about everything that I was doing. When she slapped me hard on the ass I turned around, straddling her with my knees on the bed, and ground my cock against her. Starting with her lap, soon I pushed up past her stomach, until my now fully erect cock was between the bosom of her corset, the tip straining to escape my underwear. It was not as good as titty fucking her, but it gave a good show for her husband.\n\nIt was fun to tease her like this. I could understand the draw to become a stripper, besides the money, and wondered if I should do this more often. Despite all this I was growing impatient, I wanted to free my cock and dip it inside Mrs. Franklin. I was not alone in this desire.\n\n\"I said, I want to see you naked, Scott. Show your teacher you young hard cock,\" Mrs. Franklin said while licking her lips and continuing to play with herself.\n\nI did not hesitate in fulfilling her demands. I slid off her and slowly and seductively dropped my underwear. My cock now free, only a few feet from my teacher's face. She could have reached out and touched it, but she restrained herself. Instead, she just stared wide-eyed, as if it was the first time that she had seen it.\n\n\"Do you want to touch it?\" I asked.\n\nMrs. Franklin did not hesitate this time. She reached out and took hold of my cock, pumping a little as she did. My cock coming to full attention as she handled it. Precum leaked from my tip as she rubbed her thumb across my sensitive skin. I leaned my head back in pleasure as she returned the favor and teased me, albeit with a more hands-on approach. I wanted her to take me in her mouth, and I was getting ready to grab her by her hair and force the issue when she let go of my cock and stood up.\n\n\"Sit,\" Mrs. Franklin instructed.\n\nI did as she asked, while she squatted in front of me. I could see her ass sticking out nicely above her heels in the mirror behind her. I was once again ready for her to take me in her mouth, but instead, she simply reached between my feet and grabbed my underwear. Standing, she sauntered over to her husband, her ass swaying as she went. Bending at her waist to make sure I got a good view of her thong strung tight between her cheeks, she placed my balled-up boxers against the lips of her husband.",
        "\"Open,\" she commanded.\n\nShe could not get all of the fabric inside his mouth, some left draped across his lips, but she succeeded in gagging him. He put up no resistance to it, despite now having another man's underwear in his mouth. Once Mrs. Franklin seemed satisfied, she turned her back on her husband and walked back towards me. Her breasts were pushed up by the corset, creating an impressive sight. With each step, the ample exposed flesh of her tits jiggled and bounced.\n\nIt was hard to take my eyes from her chest, but as Mrs. Franklin approached the bed it was her legs that caught my attention. Stopping just in front of me she placed her right leg on the bed next to me. My eyes followed her nylons up her long, toned leg until her bare skin took over. Her panties were soaked by now, but she was not done with her teasing.\n\nHer garters were over her underwear, which looked better than the French way, but posed a small problem when it came to removing the panties. Mrs. Franklin reached down and grabbed her ankle next to me on the bed. She slowly ran her hands up her leg until she reached the clasps of the garter. Deliberately and while looking me in the eyes, Mrs. Franklin unclasped first one, then the other, freeing the stocking on her right leg.\n\nSwitching legs, Mrs. Franklin took my hands and placed them on her left ankle. I got the message and slowly ran my hands up her leg as she had just done. I took my time and let my fingers dig into her muscles as I enjoyed the sensation of the nylon. Once I reached the clasps, I too unfastened them. Mrs. Franklin was now free to remove her underwear.\n\nStill, she did not rush, having more patience than I did at this point. Instead of dropping her panties and jumping on my cock, she grabbed my shoulders and guided me to my knees in front of her. My face was now directly in front of her crotch. With one hand she pulled the top band of her panties out and away from her skin.\n\n\"Bite them,\" Mrs. Franklin instructed.\n\nI did as I was told. I did not stop there, now knowing what she wanted. I pulled her panties down as best I could with my teeth. It was not the easiest task, as the straps of her thong caught on her round ass cheeks. Applying a little more force I was able to pull them past her fleshy posterior. Once over the humps, they slid easily down. I spit them from my mouth as she stepped out of them, kicking them dismissively towards her submissive husband.\n\nThe first time that I had sex with Mrs. Franklin her attention had been on my friend Malory. I had just been there to provide cock, not that the toys would not have been enough. Now, Mrs. Franklin was fully focused on me. She beckoned me to rise before pushing me back on the bed. I scooted back so that I was fully on the bed as she climbed on top of me, her legs straddling mine. Her drenched cunt inches above my rock-hard cock.\n\nAs Mrs. Franklin lower herself, her wet lips came to rest on the shaft of my dick. Rocking her hips she started to grind against me. I could feel her lubricants coat the length of my cock as she built up speed. As good as this felt, and as good as the tip of my cock looked sticking out from beneath her pussy, I wanted more. I needed more.\n\nI placed my hands on her legs and told her subconscious that it was time. It was time to make her husband a cuck. It was time to fuck her student. This was the moment that part of me wished that I had not previously hooked up with her, but I soon got over the slight disappointment as Mrs. Franklin once again reminded her husband of the situation. Taking my cock in one hand Mrs. Franklin rubbed my head along the length of her cunt. As she lined me up she looked over at her husband.\n\n\"Are you ready for me to fuck my student? Do you want to see his cock inside me? Does this excite you, Robert?\"\n\nAll Mr. Franklin, or as I now knew, Robert could do was nod his head in agreement. I could see the bulge in his pants, but he was keeping his word and had not touched himself. I was not sure what was going to happen later, but I am sure that he was going to have a lot of pent-up sexual energy. Mrs. Franklin returned her attention to me, looking me straight in the eyes.\n\n\"Are you ready to fuck your history teacher Scott?\" Mrs. Franklin said as she lowered herself onto my dick.\n\nI sunk into her with ease as she let herself go, pausing for a few seconds with me fully inside her, just staring into my eyes. She gave me a wink and a smile as she began to bounce on top of me. Slowly at first, but she quickly increased her pace as she found her rhythm. Her hands reached out and grasped my chest to stabilize herself. I reached out and ran my hands up her thighs, the nylons still in place, despite being free from her garter.\n\nShe continued to pick up the pace, her breasts bouncing under the corset. While I wished that I could see them bouncing free above my face, but the corset was sexy as well, and something new that I had not experienced. None of the girls my age owned one. I made a note that we should purchase some for our videos.\n\nI reached up and grabbed her breast anyway. It was not the same, but I quickly found that I could slip fingers in the top of the corset and pull Mrs. Franklin towards me. She allowed herself to bend towards my face as I moved in for a kiss. Our lips met and quickly parted for our tongues to dart inside each other, dancing their way around our mouths for the next few minutes.\n\nOur kiss broke and Mrs. Franklin sat up and increased the urgency of her bouncing and grinding. I slid my hand down from her chest to just below her coset. As my hand rested against her lower stomach my thumb found its way to her clit. Massaging her tender button in time with her thrusts I found that she was growing closer and closer to orgasm. Her head flew back and she started to call out my name.\n\n\"Oh, God yes, fuck me, Scott, rub my clit, faster, faster, faster.\"\n\nI did as I was told, and Mrs. Franklin responded in kind. She bounced harder and faster on my cock, her ass cheeks slapping against my thighs as she went.\n\n\"Fuck yes, you are so much bigger than my husband. He is an amateur in bed compared to you.\"\n\nI am not sure if she was sincere, or if she was just playing into the cuckold situation. Either way, it gave me a confidence boost to hear that I was better in bed than a man at least twice my age. Not that I was doing much other than lying there and rubbing her clit. Maybe he did not know where the clit was. I thought that was just a stupid insult, but maybe some guys truly didn't know.\n\n\"Yeeessss, I'm cummmmming. Keep going, oh yes, oh yes. Oh yesssssssss!\"\n\nI could feel Mrs. Franklin's cunt clench down on my cock. I could have let go and cum inside her right then. I wanted to, but I had made a promise to her husband. He was kind enough to let me fuck his wife, the least I could do was fulfill his wish by letting him watch me cum on her.\n\nI managed to hold off my orgasm as Mrs. Franklin continued to ride me as waves of pleasure flowed through her. Her spams got shorter and more disperse, but she coached her orgasm into what felt like five minutes, even if it was only 30 seconds or so. As she calmed down she bent towards me and kissed me again. This time it was loving and tender, a gentler kiss. A sign of a close intimate connection between the two of us. A kiss that probably made her husband more jealous than anything else that we had done so far.\n\n\"Oh, Scott. This makes me so happy. I wish I could do this with you all the time.\" Mrs. Franklin whispered to me between kisses.\n\n\"Anytime that you want,\" I responded, gently running my fingers through her hair.\n\nI pulled her head to my chest and held her there as she recovered. My dick was still buried inside her. She was tired, and now satisfied. Her drunkenness was dissipating and she was now becoming drowsy. I knew that if we were going to finish this then I needed to act now.\n\n\"It is your turn to get on your knees,\" I softly instructed.\n\nMrs. Franklin did not hesitate, slowly sliding off the bed. My cock popping out of her felt like a loss, but I knew that one warm hole was soon going to be replaced by another. I slid off the edge of the bed, my legs hanging free. Mrs. Franklin knelt between my knees, her hands already making their way to my waiting member.\n\nTaking me in her hands she slowly jacked me off, rubbing her juices into my skin as she went. Slowly she lowered her mouth and gently licked my head. The sensation sent shock waves through me, it was all I could do to not cum right then. Circling my tender gland with her tongue she continued to stroke my shaft. She was working up to bigger and better things, but this was already heaven if you asked me.\n\nThe last time I fucked Mrs. Franklin it had felt raw and passionate, with a dose of naughty mixed in. This felt intimate and personal. It was a connection that I did not often find with my partners. I am not sure if it was because of her husband's presence. Maybe I was being treated the way that she wanted to treat him? I was not sure, but if it was not, that then maybe someway, somehow, there was something more between me and Mrs. Franklin.\n\nShe lowered her mouth over the head of my cock and sucked as she engulfed more and more of me. She slowly and deliberately took the entire length of my cock into her mouth and throat. She did this with ease, without gagging at all. I could feel the tightness of her throat as she gently bobbed, moving only about an inch at a time. It was an amazing sensation, one that I wanted to last forever. My body, however, had other plans.\n\nI felt my orgasm start to mount, and it was approaching in a hurry. No matter how much I wanted this to last forever, it was coming to an end. I let Mrs. Franklin keep deep-throating me as long as I could, but I knew that I needed to pull out to fulfill my promise to her husband. I stood quickly as I felt my cock twitch and then jerk and I shot my first stream. I was still inside Mrs. Franklin's mouth when this started, but I managed to get most of my semen on her face, leaving only a little on her tongue, just enough for her to swallow and enjoy.\n\nI took my cock in my hand and jacked myself off for the rest of the orgasm. The second spurt also landed on her face, just above her left eye, oozing its way across her closed eyelid. I aimed lower for my next shots, hitting her on the chest, just above her heaving breasts. I had more cum in me than I anticipated, and emptied it all, coving her chest with thick stands of sperm.\n\nI milked the last bits of cum out of my cock, wiping my tip across Mrs. Franklin's lips. As I did this she stuck out her tongue and licked the last bit from my slit. She parted her lips a bit more and I pushed my cock back into her mouth as she sucked me clean, my cock softening in her mouth. I pulled my still semi-hard cock from her mouth and turned to look at her husband. He was still sitting in his chair, my underwear clenched between his teeth, his cock straining to be freed from his pants.\n\nI turned back to Mrs. Franklin. She was a sight to behold. Cum was running across her face, her eyes held closed to prevent it from getting in. The rest of my cum was covering her chest, now draining into her cleavage. Pooling in the cleft of her smashed together tits before seeping down under the corset. I hoped that I had not ruined it. After all, I would love to see her wear it again.\n\nNot waiting to ask permission I ran to my pants and grabbed my phone. I snapped several photos of Mrs. Franklin. Not to pass around school, but to show Malory. I had to share this experience with someone, and who better than the one other person that knew that Mrs. Franklin had slept with students. It also added to Mr. Franklin's fantasy. Now I held something over both him and his wife. I could demand anything that I wanted from them. Not that I would, or needed to in order to get what I wanted from them.\n\nI pulled my clothes back on leaving my underwear in Mr. Franklin's mouth. I stood in front of Mrs. Franklin, soaking in the sight one last time.\n\n\"What is going to happen now?\" I asked.\n\n\"My husband is going to do his duty and lick my face clean, but that is for him to enjoy by himself.\"\n\nI understood, even if I was intrigued by the idea of watching him do his duty. I started to turn and leave, but before I did I leaned down and gently kissed my history teacher on her lips. Once again it was soft and sensual, filled with the promise of more to come. I was not sure when, but I knew that we would be together again before I left for college.\n\nI pulled on my pants and shirt, but I left my underwear for Robert to continue to suck on. I figured that I would get them back eventually. I then turned back to Mrs. Franklin. I leaned down and seductively whispered one last thing in her ear before I turned and left.\n\n\"I will see you tomorrow, teacher.\"\n\n \n"
    ],
    "authorname": "scbolder",
    "tags": [
        "18-year-old",
        "anal sex",
        "blow job",
        "cuckolding",
        "cum",
        "mind control",
        "teacher",
        "student",
        "older woman",
        "cheating wife"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/premonitions-senior-year-ch-10"
}