{
    "title": "Matchmaker 05: May",
    "pages": [
        "<center>Brooklyn</center>\n\nI staggered into my house, kicking off my heels the moment I stepped through the door. I'd flown to Seattle, Washington, on Tuesday morning, and now, Friday evening, I was finally home in Chicago, tired and ready to sleep in my own bed. Short of flying charter, first class was as good as it got, but I still had to deal with crowds, terminals, luggage, and delays. Even a charter wouldn't have helped with the weather delay in Chicago that made my flight two hours late.\n\nI'd flown to Seattle and driven to Clear Lake to interview a prospective companion. Michelle was my most thoroughly vetted companion yet. My interviews typically took three to four hours, but I'd spent more than twelve hours, over two days, talking to Michelle. She needed to be vetted better than most. I'd tried placing a companion with Garret Lemay twice before, and both times the pairing had ended in failure.\n\nHaving my shoes off was an amazing relief, and after unpacking, I changed out of my suit into something more comfortable before pouring myself a glass of wine to help me unwind even more. Glass in hand, I settled into my couch, tipped my head back into the cushions, and closed my eyes. I flipped through my mental file cabinet to review what I knew about Garret, trying to determine if Michelle was the right person for him.\n\nGarret was a self-assured, though charming, ass, that needed to be in control. I'd quickly paired him with a submissive woman and sent them to Las Vegas for a month of fun. Less than a week after their vacation ended, Randi, his companion, had contacted me in tears. Garret had cut all contact with her and she was devastated. She'd fallen hard for him and begged me to talk to him, desperate to find out what she'd done wrong and how she could make it up to him.\n\nI normally didn't interfere once I paired my client with a companion, allowing nature to take its course. Most of my pairings lasted, but not all, and this was one of my failures. I was surprised because she'd seemed perfect for him. Garret needed to be in control of every situation, and Randi, a seductive brunette of twenty-three, would thrive with a strong, dominant male who completely controlled her.\n\nI always followed up with my clients, to make sure they were happy with my services, but normally I waited about three months to give the client and companion a chance to work out their future, if there was one. Knowing that Garret had fully rejected Randi, I'd contacted him early.\n\nThe simple matter was, he'd grown tired of her, as he apparently grew tired of all the woman in his life. Strong women wouldn't put up with his bullshit, and he eventually tired of women he could easily control, even one as lovely and sexy as Randi. He was completely upfront with me and said that even though Randi had allowed him to use her in any manner he chose, he'd grown bored with her. It was probably why at thirty-one he claimed to have never had a relationship that lasted longer than three months.\n\nAfter I'd spoken to Garret, I'd broken the news to Randi as gently as I could. She was destroyed, pleading with me to help her win Garret, promising to be any woman he wanted her to be. My heart went out to the her, but there was nothing I could do to help her. The fact she was willing to be a chameleon for him told me she didn't have it in her to be what he wanted. While I felt bad for her, I was always clear that I could guarantee nothing and had made no promises that she and Garret would hit it off or remain together. Companions always had the option to walk away at any time, and the clients did as well. I'd softened the blow for her by telling her I would keep her information on file, since I'd already vetted her, and perhaps I could pair her with another client in the future. There was always a demand from powerful men for beautiful, sexy, submissive women.\n\nI'd asked Garret if he wanted me to try again, and he'd agreed. After Randi failed to catch his fancy, at least after he got tired of using her, I thought I had a better idea of what he was looking for. It had taken me almost four months to find another companion for him.\n\nThe second time I'd paired him with Callie, a thirty-five-year-old businesswoman from Minneapolis who owned a chain of fitness centers in Minneapolis, St. Paul, Rochester, and St. Cloud, Minnesota, and Eau Claire, Wisconsin.\n\nThat pairing had been an even more spectacular failure. While Callie was strong enough to stand up to Garret, they hadn't hit off at all, and after three days she'd stormed out of Vieux Monde House in the French Quarter of New Orleans, calling me the next day to tell me if she ever saw Garret fucking Lemay again she'd have him arrested for stalking.\n\nI'd contacted Garret to find out how it had gone so completely wrong. After several calls back and forth between Garret and me, and Callie and me, I'd worked out that they were simply oil and water. They'd spent the entire three days sniping at each other, when they weren't screaming, neither willing to listen to the other, nor budge an inch in accommodation.\n\nI'd tried to find a companion twice for Garret. He'd already paid over two-hundred thousand dollars in fees and expenses, but he'd asked me to try one more time. I'd spent another two months looking for someone that was a mixture of Randi's tolerance and Callie's strength. Not an easy combination to find.\n\nI sighed as I took another sip of my wine. I'd sleep on Michelle for a day or so and give my subconscious a chance to work her over. I also needed to find a location, someplace to reduce the distractions and choices. I'd tried Vegas, because Randi enjoyed nightlife, and the French Quarter in a hotel that transported a couple back in time with its four poster beds, antique furnishings, and distinct lack of modern conveniences. Neither had worked its magic.\n\nWhile Randi hadn't complained, in Vegas Garret had done only what he wanted to, ignoring Randi unless he was fucking her. Few women would tolerate that, and those that would he would quickly grow tired of, just like he had with Randi. In New Orleans, he and Callie couldn't even agree on where to eat or what to do to fill their time. They were too stubborn and self-centered to even try to find a compromise. They'd spent all their time ignoring each other while doing their own thing or making snide comments about each other when they were together.\n\nI finished my wine. I was too tired to trust any decision I might make now. Tomorrow was another day, and after a good night's sleep I'd be able to think more clearly. I rose, rinsed out my glass but left it in the sink, and trudged to my bedroom. I got myself ready and tumbled into bed.\n\nAs sleep began to claim me, I decided this was it. If Garret rejected or drove off a third companion, I wasn't going to try to find another woman for him. While there might be someone out there for everyone, and I was paid handsomely to find them, I wouldn't continually subject women to his abrasive nature, no matter the money.\n\nI sighed as I began to slide into sleep. Even if Michelle was the right person, I still had to find someplace for them to go. A place where he couldn't ignore Michelle, limit their options for eating and entertaining, yet still provide a memorable experience to draw them together. In the twilight of half-sleep, when the world seemed so clear, I realized that I needed to find a woman, and a place, that would shake Garret up, take him out of his comfort zone, knock him off his center, and make him less sure of himself. It wouldn't be easy, but it was exactly what he needed, even if he didn't realize it himself.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Garret</center>\n\n\"Is this it?\" the Uber driver asked as he crept to a stop on the twisting, winding, road that seemed to go on forever while leading nowhere. To our right was a dirt road that disappeared down a steep grade and into a thick forest.\n\n\"I have no idea. My first time here.\"\n\n\"The GPS says this is the place. You want me to take you down there to see what's there?\"\n\nI eyed the road suspiciously. \"Think you can you make it?\"\n\nWe were riding in a Chevy Impala and the last thing I wanted was for him to get stuck. If that happened, we'd probably get eaten by bears or something.\n\nThe man smiled. \"Sure. Someone's maintaining the drive.\"\n\n\"This is a drive?\"\n\nI guess the man heard the surprise in my voice because he laughed. \"Looks like it. Never been to Montana before, eh?\"\n\n\"That obvious, huh?\"\n\nHe turned down the drive. \"Yeah, around here, some of us drive five miles to the mailbox.\"\n\nI looked at him, but I couldn't tell if he was kidding. It wasn't five miles, but it was at least two or three before he pulled to a stop in a graveled clearing. There was a new, white Chevy Tahoe sitting there, and smoke was drifting lazily up from the stone chimney. Someone was home, but I didn't know if it was the person I was supposed to meet.\n\n\"Wait here a minute,\" I said as I popped open the door.\n\nI walked up to the cabin perched at the edge of a hill. It was small, probably not as big as my garage at home, and made of logs. I stepped up onto the rough plank porch and rapped solidly on the heavy wood door. I glanced around. The cabin was set in a clearing between two low peaks and surrounded by thick forest. Because summer was approaching, the grass was beginning to green in patches and a few of the trees were showing new growth. The door opened and I returned my attention to the business at hand.\n\nThe redhead who opened the door was stunning. I quickly composed myself. \"Sorry to bother you, but I'm looking for Lady Slipper Meadows, 15432 Lolo Hot Springs Road. Is this the place?\" Even if it's not, can I stay anyway? I thought but said nothing.\n\nThe goddess smiled. \"The key left for me opened the door, so I assume so.\"\n\n\"Michelle?\"\n\n\"Yes. Garret?\"\n\n\"That's me. If this isn't the right place, I guess we can be lost together.\"\n\n\"Sounds like a plan.\" She stepped back. \"Come in.\"\n\n\"I have to get my bags. Hang on.\" I hurried back to the Uber. \"This is the place.\"\n\nThe driver popped the trunk and I pulled my two suitcases out, pausing as I walked past to hand him a hundred. \"Thanks.\"\n\nHe took the bill, his eyes wide. \"No, thank you, sir!\"\n\nI nodded and hefted my cases. Michelle stepped back, opening the door wide, as I entered.\n\n\"Bedroom is upstairs,\" she said, closing the door behind me.\n\nI glanced around. Rustic didn't even begin to describe the place. There was a giant stone fireplace at one end of the single room that served as a living room, dining room, and kitchen, with an open loft area above, behind a sturdy looking railing, that must serve as the bedroom. Everywhere I looked there was polished wood, and the furniture was massive, leather, well worn, and extremely comfortable looking. I couldn't see the bed, but there was clearly only one room up there, and she invited me to it. I smiled as I tromped up the steps. Things were looking good already.\n\nThe huge bed was shoved against the back wall of the room with the roof sloping down on each side. To one side was a bathroom, the other a closet, and the room was much warmer than downstairs. I tossed my suitcases on the bed and turned to Michelle.\n\n\"Garret Lemay,\" I said, making a formal introduction.\n\n\"Michelle Abbot. Nice to\u2014\" I looped my arm around her and started to pull her into a kiss, but she blocked me with a hand in my chest. \"Whoa, there, tiger. I need a lot more than your name before you get that.\"\n\nI released her. \"Sorry. I assumed that we'd...\"\n\n\"We'd what?\" she asked, her voice cool, but a ghost of a smile painted her lips.\n\nI shrugged. \"A one-bedroom cabin... and you know why we're here as well as I do.\"\n\n\"Then you assumed wrong. I'm sleeping downstairs.\"\n\nI held her gaze. She was tall for a woman, probably five nine or five ten, with an open, friendly face. Her hair was pulled back into a tidy ponytail that revealed a graceful neck, and she had the most amazing green eyes. Add in lightly tanned, freckled skin, hair almost the exact color of polished copper, and a body that would give a monk a hard-on, she was stunningly beautiful and sexy.\n\n\"You didn't want the bed?\"\n\n\"Since you're paying for this, I figured you should get the bed.\"\n\n\"Fair enough.\" I held her gaze for a moment longer, trying to get a read from her. Getting nothing, I turned away and began to unpack. \"How long have you been here?\"\n\n\"I arrived yesterday afternoon, late.\"\n\n\"You stayed out here by yourself last night?\"\n\n\"Yeah, why?\"\n\n\"You weren't... afraid?\"\n\n\"Afraid of what?\"\n\nI shrugged. Getting eaten by bears? \"Being alone out here in the middle of nowhere?\"\n\nShe grinned. \"No. Would you be?\"\n\nMaybe. \"Of course not, but I'm a guy.\" Her smile spread, but I could tell I wasn't making a very good first impression.\n\n\"Ah... because I'm a woman, I need a big strong man around to protect me?\"\n\n\"That's not what I meant.\"\n\n\"What did you mean?\"\n\n\"Nothing. Sorry.\"\n\n\"Uh-huh,\" she grunted. \"We're only fifteen minutes from Lolo, and forty-five from Missoula. I think I can manage a night on my own.\"\n\nI finished unpacking, saying nothing else while trying to spit the foot out of my mouth. I turned to her when I finished. \"Done. Sorry about what I said. I didn't mean anything by it.\"\n\nShe smiled at me, but it was the smile of a mother for a child who had just learned a valuable lesson. \"Don't worry about it. I have lunch ready, if you're hungry.\"\n\n\"I could eat something.\" She looked at me, her bemused expression telling me she'd picked up on my choice of words, and then led me back down the steps. \"Why'd you arrive so early?\"\n\n\"Brooklyn booked me then. You like seven bean soup?\"\n\n\"Never had it, but it smells good.\"\n\nShe pulled two large heavy bowls from the cabinet and ladled the bowls full of a dense soup, adding a thick slice of bread to the side, and placed the bowls on the heavy wooden table. The soup wasn't my preferred affair. I usually ate a more nouvelle cuisine diet where presentation was as important as the flavors. This gruel would never pass the appearance test, though it was quite tasty.\n\nI began nodding in approval. \"This is good.\"\n\nShe smiled, a genuine smile this time. \"I'm glad you approve.\"\n\n\"So, Brooklyn didn't tell you why she wanted you to arrive a day early?\"\n\n\"How do you know she didn't schedule you to arrive a day late?\"\n\nI bit back on the sarcastic remark that came to mind. I was paying for this fucking rendezvous, so when I arrived was when the clock started. \"Whatever.\"\n\n\"No. She only asked me if I minded getting the cabin opened up and stocked before you arrived. I said sure. I didn't know what you liked to eat, so I kept it simple. We have enough food for a couple of days, but then we can go back into Lolo for more supplies.\"\n\nI waved my hand. I didn't cook. I didn't have time for that shit. \"If this is an example of what you can do, anything you want is fine.\"\n\n\"You expect me to do all the cooking?\"\n\nI shrugged. \"That, or we're going out. I don't cook.\"\n\n\"Don't or can't?\" she asked, that slightly condescending smile playing on her lips again.\n\nI ignored it. I didn't really care what she thought about me. \"Does it matter?\"\n\n\"No, not really. If you can't cook, but would like to learn, I could teach you. If you can cook but don't, that's a different matter.\"\n\n\"Let's say can't and have no desire to learn.\"\n\nShe nodded slowly. \"I see. Since I enjoy cooking, I'll take care of that. You can split wood.\"\n\n\"Split wood? Fuck that!\"\n\n\"You want to stay warm?\"\n\n\"Are you fucking kidding me?\"\n\nShe smiled. \"Nope. The fireplace is the only heat in the place.\"\n\n\"What the fuck was Brooklyn thinking?\" I growled, pulling my phone from my pocket.\n\nWe were about to have a change of plans. She looked down, the smile still playing on her lips as she spooned another bite into her mouth. There was no cell signal. I shoved my chair back and walked around the room, my phone held up as I watched for bars. Even next to the windows there was nothing. I trotted upstairs, and like downstairs, there was no hint of a signal. I looked over the railing. She was still sitting at the table, calmly eating.\n\n\"Does this fucking place even have running water?\"\n\nShe looked up at me and smiled. \"Yep. It has that new-fangled electricity too.\"\n\n\"But no cell service?\"\n\n\"No phone or internet either.\"\n\n\"Fuck. It's like being back in the dark ages.\"\n\n\"I think it's wonderful.\"\n\n\"What are you, some kind of luddite?\" I asked as I stomped down the steps.\n\n\"No, but the idea of getting away from everything for a month sounds perfect to me.\"\n\n\"Was this your idea?\"\n\n\"No, but she asked me if I'd be willing to give it a try. I love the outdoors, so I told her I'd love to spend a month disconnected.\"\n\nI threw myself into the chair. \"As soon as we're done here, we're going into Lolo. I'm going to call Brooklyn and we're going to get this shit straightened out. I'm not living like this for a month, splitting wood and shitting in the woods with the bears while using a leaf for toilet paper.\"\n\nShe snickered. \"Do what you want, but the cabin is rented for a month. I'm staying right here.\"\n\n\"You want to live like this? Then why don't you split the fucking wood?\"\n\n\"Fine. You can do the cooking.\"\n\nI glared at her. Her calm indifference was pissing me off. \"Yeah, like you can split wood.\"\n\n\"Who do you think split the wood that's burning? There's wood behind the stable, but it's not split.\"\n\nI glared at her. She wasn't kidding. \"Well, even if that's true, I told you, I can't cook.\"\n\n\"Then you'll either learn or starve because I'm damn sure not doing all the chores while you sit on your ass and bitch.\"\n\n\"Or I'll drive back into town.\"\n\nShe shrugged. \"Or you can do that, but you'll be going alone because I'm not eating out every night. I wanted to get away, and that doesn't include going to town two or three times a day.\"\n\nI said nothing else as I ate my soup. She was making me feel like a spoiled, whiny brat. Maybe she liked the idea of chopping wood and humping water up from a stream, but I sure as hell didn't.\n\nAfter lunch she washed the bowls, dried them, and put them away. She placed the soup aside to cool and then she went outside. I waited a few minutes before I followed. I didn't know where she'd disappeared to.\n\nI walked around the cabin, and not finding her there, I walked to the other building. Like the cabin proper, it was made of logs and beautifully detailed, but it was clearly designed as a stable. As I approached, I heard the first thunk of an axe hitting wood. I rounded the building just as she was swinging the axe again. At her feet were two pieces of wood. She picked one of the pieces up, placed it back on a large flat log that had clearly been cut to serve this purpose. She swung again, the axe cleaving the smaller log into two pieces.\n\nI watched as she picked up the other large piece of wood, muscled it up onto the log, and swung the axe. She hit it twice before splitting the second piece into two. She looked up, held my gaze a moment, before she walked to the wood pile, picked up another log, and carried it to the stump.\n\n\"Goddammit, just wait a second,\" I growled.\n\nShe jerked the axe from where she'd stuck it in the log. \"Why? I'm staying whether you do or not. If I want to be warm, I need to do this.\" She swung the axe, hitting the log. It didn't quite split all the way. With a grunt she worked the axe loose and swung again, and then a third time to finish the split. \"Go talk to Brooklyn. The keys to the Tahoe are hanging on one of the pegs to the right of the door.\"\n\nShe picked up one of the two pieces, put it back on the stump, and swung again. The second piece was divided just as quickly, she stuck the axe in the stump so the handle would be easy to grab, and turned for another log.",
        "\"Goddammit,\" I muttered as I began walking toward her. \"If I split enough wood for tonight, will you wait until I talk to Brooklyn to see if we can reach a compromise?\"\n\nShe stepped back and pushed a feather of hair out of her eyes. \"You split enough wood for tonight, and I don't care what you do, but I'll cook your dinner so you won't go hungry.\"\n\nI wasn't dressed for this, wearing dress pants, loafers, and a tailored shirt, but I didn't have anything more suitable here. Hell, I didn't have anything more suitable in my closet at home.\n\n\"Fine. How many?\"\n\n\"Six or eight logs will get us through until morning. Unless you want to split wood again first thing in the morning, when it's cold, I'd do ten or so.\"\n\n\"After this, we'll go call Brooklyn and find out why she thought this was a good idea.\"\n\nMichelle smiled as she pulled off the thick leather gloves and handed them to me. \"Because it is.\"\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Michelle</center>\n\nGarret had obviously never done a hard day's work in his life, at least not physical work. It was almost funny watching him swing the maul. I watched, debating on giving him a few pointers, afraid he was going to cut his leg off or otherwise maim himself, but equally afraid if I said he was doing it wrong he would come after me with the maul.\n\nHe was splitting the wood, but he was doing it with brute strength rather than finesse. Then he'd split his shirt, a long rip appearing along the shoulder seam.\n\n\"Fuck,\" he snarled, fingering the hole. I saw the explosion coming as his face hardened. \"Fuck this mother-fucking shit!\" he bellowed as grabbed his shirt, shredding it as he ripped it off, before flinging it away in a fit of rage.\n\nHe glared at me shirtless, his eyes silently accusing me as he panted in effort. I didn't care, and I hoped he ripped his pants next. Brooklyn had warned me that Garret could be an asshole, but sweet Jesus, he was a seriously hot asshole. I could tell when I first saw him standing at the door he was packing some goods beneath his tailored shirt, but I'd had no idea. He clearly worked out and was seriously ripped. Tall with broad, thick shoulders, bulging arms, clearly defined pecs, and a washboard stomach. The man had it all.\n\n\"I fucking hate this shit!\" he bellowed again, grabbing the maul and swinging it down so hard, grunting as he did so, I was afraid he was going to split the platform the log was sitting on as well.\n\n\"You need to calm down before you hurt yourself,\" I said softly.\n\n\"Why the fuck do you care?\" he growled as he tossed the wood aside, picked up another log, and slammed it down on the stump. \"You claim to fucking love this shit!\"\n\nI could split wood, though I'd never claim it was easy or fun work, but he tossed the wood around like match sticks. \"Because I don't want to have to rush you to the hospital after you bury the maul in your leg.\"\n\n\"What the fuck is a maul?\"\n\n\"The thing in your hand.\"\n\n\"The axe? At least then I'd have a room that was warm without having to chop this fucking wood, and I wouldn't have to cook either.\" I couldn't help it and began to snicker. \"You think this shit is funny?\" he demanded.\n\n\"No, but you are. You'd rather cut off your damn leg than cook.\"\n\nHe glared at me for a moment, but then his face softened and he began to chuckle. He whirled the maul around and stuck it in the splitting log. \"Have I mentioned I hate this shit?\"\n\n\"In the last thirty-seconds? No.\"\n\nHe shook his head and sighed. \"Fuck. Do you really like this shit?\"\n\n\"Splitting wood? No, not really, but\u2014\"\n\n\"Good, because if you did, you're batshit crazy,\" he interrupted.\n\n\"But being out here, away from everyone and everything, surrounded by growing things? Yeah, I think I'm going to enjoy this.\"\n\nHe shook his head. \"This sucks.\" He jerked the maul from the stump.\n\n\"Want a few pointers to make it easier?\"\n\n\"Pay someone to come do this?\"\n\nI snickered again. \"Easier, not easy.\"\n\n\"Sure.\"\n\nI spent ten minutes showing him how to swing the maul, so he relied less on strength and more on technique, and how to read the wood to know how to turn the log so it would split the easiest. By the time he'd split all the wood we'd need for tonight and tomorrow morning, he'd developed his rhythm. I could tell he wasn't working nearly as hard and was letting the tool do the work. I was slightly envious of his strength. About fifty percent of the time I had to hit the log twice for it to split, but once I showed him how to read the grain, he powered through the wood with ease every time. I nodded in approval. He was a quick learner, plus I got a show of watching his muscles work. The only downside was he didn't split his pants.\n\n\"Shit,\" he grunted, sticking the maul into the splitting log. \"That's a hell of a workout.\"\n\nI nodded. \"Beats going to the gym any day, plus wood heat warms you four times.\" He looked at me curiously. \"Once when you cut it, once when you split it, once when you haul it, and once when you burn it.\"\n\n\"Yeah, I can see that. Now I have to carry it to the house?\"\n\n\"Yeah. I'll help. The owner has a cart for that.\"\n\n\"You know the owner?\" he asked we piled the wood into the large wheeled firewood cart.\n\n\"Nope, but everything we need is here.\"\n\n\"Except someone to split all this fucking wood.\"\n\nI grinned. \"Almost everything we need,\" I amended.\n\nThe cart made moving the wood easy, the rubber tires allowing us to bring it right to the fireplace without marring the beautiful hardwood floors.\n\n\"That's it?\" he asked as we stacked the last of the wood into the holder by the fireplace.\n\n\"That's it. You want to change?\"\n\n\"Yeah. I think I'll shower too. Want to join me?\"\n\nI grinned. He was a cocky shit, but with him standing there, shirtless and covered in bits of wood, he had reason to be. It was tempting. \"Whoa there, tiger. I need more than you splitting some wood before you get that,\" I teased, recalling what I'd said a couple hours earlier. \"But I think all that work to keep me warm deserves a kiss.\"\n\nI stepped in and kissed him. When he tried to escalate the kiss I backed away, and he let me. I smiled at him. At least it didn't appear he was going to be handsy or try to force me. \"Easy, tiger. We just met.\"\n\nHe grinned. \"Tiger, huh?\"\n\n\"What can I say?\" I asked and purred at him as I bared my teeth and hooked my fingers into claws.\n\n\"I know another way to warm you up, and it's a hell of a lot more fun than splitting wood.\"\n\n\"Yeah, I bet you do.\"\n\nWhile he was in the shower, I laid out his clothes, mostly as an excuse to stay close in case he saw me. When he was well into his shower, I peeked through the bathroom door. The shower door was mottled, but I could make out his basic shape... and as I suspected, there was absolutely nothing wrong with his shape.\n\nI was at the table, sipping tea, when he appeared, dressed in the clothes I'd laid out. \"Thanks.\"\n\n\"For what?\"\n\n\"Laying out my clothes.\"\n\nI shrugged. \"I caused you to rip your shirt. I figured it was the least I could do.\"\n\n\"Ready?\"\n\nI sighed. I really did want to spend the month in this incredibly beautiful cabin. If I were to design my dream home, it would be very much like this. \"I guess.\"\n\nHe surprised me by opening my door to the Tahoe before walking around to the driver's side and sliding behind the wheel. \"I hope I can find my way back here.\"\n\nI typed on the center display. \"The car knows,\" I said, showing him the address displayed on the screen.\n\nWe drove toward Lolo leisurely. \"You really enjoy being out in the boonies?\" he asked.\n\n\"I think so, yeah.\"\n\n\"So you don't live off the grid at home?\"\n\n\"No, and obviously you don't.\"\n\nHe chuckled. \"Obviously. What do you do?\"\n\n\"For a living?\"\n\n\"Yeah.\"\n\n\"I have a tulip farm.\"\n\n\"A tulip farm? Really?\"\n\n\"Yeah. Michelle Abbot Tulips. I have about a hundred acres under cultivation near Clear Lake, in the Skagit Valley. You know where that is?\"\n\n\"Yeah, about an hour north of Seattle. That's where I live.\"\n\n\"Seattle?\"\n\n\"Yeah.\" He looked at me and smiled. \"Since we're both from Seattle, more or less, what the hell are we doing way the hell out here in Montana?\"\n\nI shrugged. \"You can ask Brooklyn when you talk to her. So what do you do in Seattle?\"\n\n\"I'm the president and CEO of a software company.\"\n\n\"Microsoft?\" I teased.\n\nHe chuckled. \"Hardly. You've probably never heard of us, but someday, you will.\"\n\n\"Oh? What's the name of your company?\"\n\n\"It's not my company, I'm just the hired gun. The guy who started the company is a certified genius, but he's a terrible businessman. Anyway, the company is called CCSC Software.\"\n\n\"And what does CCSC Software do?\"\n\n\"CCSC stands for Computerized Contextual Spell Checking, and we're developing a contextual spell checker. We're getting close, and now we've got some of the big boys sniffing around, interested in our technology. Microsoft, Google, Apple. One day soon, the company will be worth billions.\"\n\n\"Contextual spell checker? What's that?\"\n\nHe shrugged. \"You know how if you're typing you can type 'hand' when you meant 'had,' or 'level' when you meant 'lever,' 'clam' instead of 'calm,' 'hoard' and 'horde,' or 'lock' and 'loch,' things like that? Current spell checkers won't catch those types of spelling errors because both words are spelled correctly, only the context makes the spelling incorrect. Our software uses advanced heuristic analysis to decode the context of the sentence, so we can catch most of those types of spelling errors. If you count our false positives as incorrect, because they are, our success rate is about eighty percent. Our goal is ninety-five percent or better.\"\n\nI nodded. I didn't understand what heuristic analysis was, but I was well aware of the problem he was talking about. \"That would be amazing.\"\n\nHe nodded. \"Yeah, I think so. It's why I signed on.\" He glanced at me. \"So, what do you do with a hundred acres of tulips?\"\n\n\"Sell them. I have a website and ship all over the country, and occasionally, around the world. I have some hybrids that nobody else does.\"\n\n\"Really?\"\n\n\"Yeah. I developed them myself. Not only do I raise the tulips, I also breed new varieties. I'm working on my Ph.D. in Floriculture. I've done my project and submitted my thesis. My thesis was on a new technique I've developed for breeding desired traits in tulips.\"\n\nHe watched me a moment, perhaps seeing me in a new light. \"Okay. So not just a flower farmer?\"\n\nI smiled. \"No, though I do love working with growing things. Tending my farm gives me such a feeling of peace and accomplishment.\"\n\n\"I've never heard of a floriculturist before.\"\n\n\"It's a subset of horticulture that deals with flowering and ornamental plants.\"\n\nHe nodded slowly. We were coming into Lolo when he looked at me. \"Sorry about my outburst earlier.\"\n\n\"When you were expressing your displeasure with splitting wood?\"\n\nHe nodded again. \"Yeah. Among others.\"\n\n\"It's okay. I sometimes say the same things when working with computers.\"\n\nHe chuckled. \"Yeah, me too.\" He pulled to a stop in a food market and checked his phone. \"Good, I have a signal.\" I sat in silence as he dialed and lifted the phone to his ear. \"Brooklyn, Garret Lemay.\"\n\nHe paused a moment. I hoped he'd put the call on speaker so I could hear what Brooklyn had to say, but he didn't, so all I could hear was his half of the conversation.\n\n\"No, nothing wrong except for the location. What were you thinking?\" Pause. \"You did know the cabin is heated by wood, right? That someone has to go out and split that sh... split wood every day?\" Pause. \"No, that's not going to fly. Find something else.\" Pause. \"I don't give a shit about the money, I'm not living in a\u2014\" Another pause, longer this time. \"Maybe, but you sure as hell didn't tell me I'd be chopping wood!\" There was another long pause. \"Look, you work for me and I'm telling you I'm not staying in the cabin!\" Pause. \"Fine. Fuck you very much,\" he growled before he ended the call. \"Bitch,\" he muttered to nobody.\n\n\"What?\"\n\nHe glared at me. \"Brooklyn said I agreed to the accommodations and she wasn't changing them. She said she was busy working with other clients and didn't have the time right now.\"\n\n\"Did you?\"\n\n\"Probably, but I sure as hell wouldn't have had I known what she had in mind.\"\n\n\"So what are you going to do?\"\n\n\"I can't talk you into doing something else? I don't care about the cabin. How about we go back to Seattle? I'll put you up in a nice\u2014\"\n\n\"No. I want to stay here.\"\n\nHe glared at me. \"You didn't set this up with Brooklyn?\"\n\n\"No. Why would I? How would I know what you like or don't like? Even if I did, why would I suggest something you'd hate just to piss you off?\"\n\nI didn't tell him the part where Brooklyn told me not to let him bully me into doing anything I didn't want to do. I didn't want to leave the cabin, so I wasn't. He alternately glared at me and out of the windshield of the SUV, clearly thinking his situation over.\n\n\"It's the cabin or nothing?\" he asked, his voice firm.\n\n\"I'm sorry. If you want to leave, I understand. No hard feelings. I'll pay for the cabin rental.\"\n\n\"Shit,\" he muttered softy. \"Fine.\"\n\nI smiled. I was actually glad. \"Am I cooking or splitting wood?\"\n\nHe softened even more. \"Cooking. I'll split the damned wood. Even if I said I'd do the cooking, it'd probably be inedible, and we'd still starve.\"\n\nMy smile spread. \"Then we need to go shopping. We need more supplies so we don't have to keep running into town.\"\n\n\"I need to get some shirts so I don't ruin all of the ones I brought. Pants too. And I guess some boots or something.\"\n\n\"You could split the wood shirtless. I won't complain.\"\n\nHe grinned. Between his body, his large dark eyes, rich brown hair with streaks of blond worn long in a messy-sexy style, and his classically masculine features, he was a mouth-watering combination of movie star and premier athlete. We both knew he was a stud-muffin, so there was no point in pretending he wasn't.\n\n\"You wouldn't?\" he asked, and I shook my head. \"I will if you will.\"\n\n\"Split wood shirtless? You're on!\"\n\n\"I split wood shirtless, but you have to do your chores shirtless.\"\n\nI felt a tingle of excitement. He was onto the loophole, but it might still be worth it. \"I'll think about it.\"\n\nHe pulled the vehicle into gear. \"You do that and let me know what you decide. Now, since this is your idea, you have to find me a place to buy some wood splitting clothes.\"\n\nI pulled out my phone and began to search, barely able to contain my smile. A month, alone in that beautiful cabin tucked into the forest, with someone that looked like him? Hell yeah, so long as he wasn't a total dick, I'd let him split me with his wood, and often.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Garret</center>\n\nI was placing a new log on the splitting block when I heard the grumble of an approaching truck. I'd started splitting wood after breakfast and had been going at it steady for a couple of hours. I normally hit the gym every day, but there was no gym around, so I was using this as a substitute. I'd already split and stacked enough wood to last us several days, but I was going to keep at it. I could feel the burn in places I normally didn't, and I wanted to work those muscles hard while I had the chance.\n\nGlad for any excuse to take a break, I set the maul, not an axe, as I'd learned, into the stump and walked around the corner of the stable, shrugging back into my shirt as I did. I didn't have to worry about splitting the seams in this one, but I'd worked up sweat and had taken it off.\n\nA large, red Dodge truck with a trailer behind eased to a stop on the gravel pad.\n\n\"You Lemay?\" the older man asked as he stepped out of the truck.\n\n\"Yeah. And you are?\"\n\nThe man was probably about sixty-five, grizzled, with a grey beard that was likely three or four days old. He looked like a man that had done a lot and seen more. \"Curt Beechen. I own this place.\"\n\nMichelle appeared from the cabin, skipped down the two steps, and walked toward us. \"I was under the impression we'd rented this cabin.\"\n\n\"You did. From me. Here are the horses.\"\n\n\"What horses?\"\n\n\"You didn't know about the horses?\" he asked as Michelle stopped at my elbow.\n\nI looked at Michelle and she shrugged. \"No.\"\n\n\"You rented these as well.\"\n\n\"I did?\"\n\nCurt looked at me like I was stupid. \"Didn't your secretary tell you about any of this?\"\n\n\"My secretary?\"\n\nCurt looked at the sky like I was trying his patience. \"The lady that rented the place for you.\"\n\n\"Brooklyn?\"\n\n\"Yeah, that's her. She arranged for a pair of horses and said she wanted them delivered today.\" His eyes narrowed. \"You know anything about horses?\"\n\n\"I do,\" Michelle said, stepping away from my elbow and walking to the trailer. She stepped onto the running board thing attached to the fender in front the wheels and stretched to look inside. \"Oh! They're beautiful!\"\n\nThat seemed to satisfy Curt. He turned to the trailer and I followed. \"I'll come check on them every couple of days. I expect these animals to be well cared for or that ten-thousand-dollar deposit won't mean shit. You mistreat these animals and I'll come back here and kick your ass myself, understand?\"\n\nCurt glared at me. Michelle must have seen the anger in my face over his threat because she stepped in front of me.\n\n\"We'll take good care of your horses, Mister...\" she said, cutting me off before I could tell this old fucker where he could shove his horses.\n\n\"Beechen, ma'am,\" he said touching the brim of his cowboy hat. \"See that you do and there won't be no problems.\"\n\nI was still seething as Curt jerked on the handles to open the rear doors. As he swung the doors open, Michelle glared at me and shook her head in warning before squeezing into the trailer. She began stroking first one horse, then the other.\n\n\"The biggest problem you're going to have, Mr. Beechen, is how much I'm going to spoil them.\"\n\nCurt softened more as he watched her. \"I doubt you can spoil them more than my daughter does. She's probably about your age.\"\n\n\"Did I hear you say this is your place?\" Michelle asked as she and Curt backed the horses out of the trailer.\n\n\"Yeah. I haven't been up here in a couple of years, not since my wife took ill. She don't get out much anymore, since her arthritis has gotten so bad, but we used to come up here every summer,\" Curt explained as they led the horses to the stable and made them comfortable inside.\n\n\"I'm sorry to hear that, but thank you for renting us the cabin... and the horses.\"\n\n\"You're welcome. I figured if I wasn't using it, might as well let someone else enjoy it. That Brooklyn gal, I don't know how she knew I was thinking about renting it, but once she talked to me, she wouldn't take no for an answer.\" He looked down. \"The money will help with the medical bills.\"\n\n\"We'll take good care of the place, and the horses.\"\n\nHe nodded, taking one of the horses by the leather strap around its nose. \"This here is Penny,\" he said, stroking the nose of the smaller of the two horses. I could see where it got its name as its coat was almost the color of an old penny. \"She's a good ol' girl, but she needs a firm hand, and she loves to run.\"\n\nHe released the first horse and stepped over to the second. The horse brought its nose close to his face and he rubbed it slowly. It was obvious he loved these horses, and they loved him in return. \"This one here is Shamrock.\"\n\nShe wasn't green, so I didn't understand the name.\n\n\"She's lucky?\" Michelle guessed.\n\n\"You might say that. She was breech. We had a hell of a time getting her turned and almost lost her.\"\n\n\"You poor thing,\" Michelle cooed to the animal as she stroked its face.\n\n\"I brought feed up last week. Tack too. You know how to saddle a horse?\"",
        "Michelle nodded and smiled. \"Yep. I saw the tack in the room. Want me to show you?\"\n\nCurt smiled and shook his head. \"No, if you say you can do it, I believe you. Like I said, I'll be up every couple of days to check on them to make sure they're getting along okay. If you have any questions, you can holler.\"\n\n\"You're welcome anytime, Mr. Beechen, but you don't have to worry about your girls. We'll take good care of them. Would you like to stay for lunch?\"\n\n\"Thank you...\" His gratefulness was a question.\n\n\"Michelle.\"\n\n\"Thank you, Michelle, but I got to get back.\"\n\n\"Okay. Thank you again for letting us use your lovely cabin, and the horses.\"\n\nCurt touched the brim of his hat again and settled into the truck. It rumbled to life, and he made a big loop in the parking area before disappearing up the road.\n\n\"We've got horses!\" Michelle all but squealed. \"I know what I'm doing after lunch!\"\n\n\"Do you really know about horses?\"\n\nShe nodded as she gently stroked Penny's nose. Shamrock was obviously jealous and stretched her head to me for some attention. I forced myself to not step back and carefully stroked her head. It was like touching a fur covered board.\n\n\"Yeah. I rode a lot growing up. Mom tried out for the 1980 U.S. Olympic Equestrian team.\"\n\n\"Did she make it?\"\n\n\"No, but even if she had, if you remember, that was the year the U.S. boycotted the Olympics. Even now she's still an excellent rider.\"\n\nHow did she expect me to remember that? It was eight years before I was born and was likely an equal number for Michelle. \"I don't know anything about horses.\"\n\n\"Want to learn?\"\n\n\"Not really.\"\n\n\"Okay. You can stay here and chop wood or something while I go riding.\"\n\n\"On the other hand...\"\n\nShe snickered. \"Come on. Help me feed and water the girls, then we'll have lunch.\"\n\nI followed her instructions, doing the heavy lifting for her. The animals were so big they made me nervous, but they made no threatening moves and the only thing they seemed to want was be petted. By the time we were done feeding and watering, I was starting to think of them as giant dogs.\n\nI followed her into the house and went to wash up. We'd spent most of yesterday afternoon getting me equipped and buying food. After unloading our supplies, Michelle had started dinner while I changed clothes and chopped a few more pieces of wood. I wanted to be sure there was enough wood for this morning, and I wanted to try out my new work clothes. While the clothes didn't show off my physique like my tailored shirts and pants did, they were a hell of a lot more comfortable to swing a maul in.\n\nDinner last night had been a simple affair of baked chicken and buttered potatoes, and after dinner, we'd sat in front of the fire talking about inconsequential stuff.\n\nWith no television, no telephone, and no internet, there wasn't much to do. I'd tried to seduce her, twice, slowly caressing her breast as we watched the crackling fire, cautiously becoming bolder until she warned me off. It wasn't a hard rejection, and she didn't seem to object to my touch, except I guess she felt it was too soon. I didn't get the whole 'no fucking on the first date' thing many women had, but Michelle wasn't the first woman to warn me off with a soft promise of something later.\n\nI could wait. I'd fucked a hot bitch the night before I left to join Michelle and had gotten a blowjob from her that morning before I paid for her taxi ride home. I didn't know what else she thought we were going to do at night except fuck. I'd give her a day or two to come around before she and I had a frank discussion about what was expected. Despite what Brooklyn said, I didn't pay all this money to be chaste for a month.\n\nLunch was grilled sandwiches with a thick slice of ham slathered in melted cheese. I'd worked up an appetite at the wood pile and wolfed mine down, washing it down with water to hydrate. When she was finished, she cleaned the kitchen while I went back to the wood pile, put away the maul, and stacked the last few pieces of wood.\n\nI finished before she did and stepped around to the front of the stable. \"You're not going to do anything stupid, are you?\" I asked Shamrock. I assumed I'd be riding her because she was the bigger of the two animals.\n\nShe was sniffing at my hands when Michelle arrived. \"Making friends?\"\n\n\"Maybe. I don't know what she wants.\"\n\n\"This,\" she said, handing me half of an apple, keeping the other half for herself. I started to bite into it when she started to giggle. \"For the horse, dumbass!\"\n\n\"Oh!\" I felt silly, and I didn't like her calling me dumbass, but I guess that was how I appeared to her. \"How was I supposed to know?\"\n\n\"You're right. I shouldn't have made fun of you.\"\n\n\"She won't bite, will she?\"\n\n\"Not on purpose. Hold it like this,\" she said, demonstrating by holding her half of the apple, cut side up, in the palm of her hand with her fingers held tightly straight.\n\nI did as she instructed and held my hand up, my heart thudding in my chest. Shamrock's lips caressed my palm, and the apple was gone as she crunched it before she came back, looking for more, nudging at my hands. She was being very gentle, but I could tell she could easily push me around with her nose as she searched for more treats.\n\nI tried to saddle Shamrock, watching what Michelle was doing as she explained it to me, but I became hopelessly confused by the straps and buckles after putting on the blanket and saddle and she had to do it for me.\n\nAfter she saddled my horse for me, we led them out of the stable and mounted up. Where Michelle rode with an easy, fluid grace, I felt out of control and only seconds from falling off, so I spent a lot of time holding onto the saddle horn for stability. I couldn't tell if the horses knew where to go or if Michelle had some plan, but she led us through the forest until we popped out beside a beautiful clear lake, the water a deep rich blue that reflected the clouds above. She pulled Penny to a stop, Shamrock walking up beside her and stopping on her own.\n\n\"Did you know this was here?\" I asked.\n\n\"No. I was just following a game trail.\"\n\n\"What trail,\" I asked, looking behind me. I wasn't even sure where we'd stepped out of the woods.\n\nShe looked at me and smiled. \"You didn't see the trail we were on?\"\n\n\"No.\"\n\nShe smiled and looked away. \"You weren't kidding when you said you didn't enjoy outdoorsy stuff.\"\n\n\"No, I wasn't.\"\n\n\"So what do you think, now that you're out of the city?\"\n\n\"The scenery is better,\" I allowed, \"but I'll trade that for the conveniences of living in Seattle any day.\"\n\nShe slowly shook her head. \"Not me. I need some breathing room.\"\n\n\"Which is why you live on your farm?\"\n\n\"I guess. My commute's pretty nice. I step off my porch and I'm at work.\"\n\n\"I still don't understand how you went from living in Spokane with lawyer parents to growing tulips in Clear Lake.\"\n\nShe pulled her horse around. \"Because that's where the tulips are.\"\n\nThat really wasn't an answer, but it was the same answer she'd given me last night, and now I knew she was ducking the question. \"Yeah, but that's a pretty big leap. My dad was a businessman, so I'm a businessman. I'm surprised you didn't become a lawyer, like your brother.\"\n\n\"Standing around arguing about stupid stuff didn't interest me.\"\n\n\"But tulips do?\"\n\n\"Plants do, yeah.\"\n\nI decided to drop it. I didn't care why she'd choose grubbing in the dirt over making a lot of money as a lawyer. That was her business. Shamrock followed Penny back to the stable where I had more luck getting the stuff off her than I did getting it on. Once the stuff was put away, I brushed her coat as Michelle instructed. I wasn't as fast as Michelle, and she helped me finish my horse after Penny was fully brushed.\n\nAfter we finished tending the horses, we returned to the cabin where I added wood to the fire and brought in more wood, filling the stand beside the fireplace, while Michelle puttered around in the kitchen. I felt a pleasant tiredness as I put the last few sticks of wood into the stand, like I did after a strenuous workout.\n\nI'd finished my chores for the day and settled onto the couch, but I quickly became bored just sitting there. I didn't even have Michelle's boob to play with, so I rose and wandered into the kitchen area. I walked up behind her and wrapped my arms around her, pulling her back into my chest.\n\n\"Need any help?\"\n\nShe didn't try to twist away or stop me as she peeled potatoes. \"Are you volunteering?\"\n\n\"Maybe. Depends on what you want me to do,\" I murmured as I nuzzled her neck.\n\n\"Know how to peel a potato?\" she asked, turning and handing me a spud and the knife.\n\nI took the knife and slowly began to peel the potato as she turned her attention to other tasks. This wasn't what I had in mind, and as I peeled the frustration and annoyance began to rise within me, but I forced it down. When I'd spoken to Brooklyn, she'd made it perfectly clear this was it. If I rejected or drove off Michelle, she wouldn't attempt to pair me with anyone else. I loved women, and I loved fucking women, but I was getting tired of the one-night stands and meaningless fucking. It felt good while I was doing it, but I was weary of trying to remember some chick's name the next morning and coming home to an empty house.\n\nI liked Michelle. She had spunk and she wasn't afraid of telling me I was full of shit. Randi, the first woman Brooklyn had paired me with, had been sexy as shit, and I'd fucked her good, but she had nothing to offer except her body. Her opinion was whatever I told her it was, and the final straw had been when she wouldn't even dress herself without my approval.\n\nThe next woman, Callie, had fire, which I liked, but she was a class 'A' bitch! She seemed to delight in pushing my buttons and pissing me off. Like Randi, she was sexy as hell, but had I fucked her, and I would have, it would have been nothing but a revenge-filled hate fuck. There was nothing there, and we both knew it.\n\nMichelle was just right, the sexiest of the three women, and not as pliable as Randi or bitchy as Callie. She was her own person, something she'd proven when she told me she was staying at the cabin and I was welcome to leave if I wanted to, but at the same time she had enough softness to her that I didn't want to slap the shit out of her. She needed me like a fish needed a bicycle, but she seemed to enjoy my company, and I enjoyed hers.\n\nPeeling a few potatoes was a small price to pay to find out if something would develop between us. \"This enough?\" I asked, looking at the dozen or so potatoes and the pile of peelings in the sink.\n\nShe inspected my work. \"Looks good. Now, cube them up into the pot.\"\n\nWe worked together in the kitchen as she put together another hearty stew. It wasn't nouvelle cuisine, but it seemed fitting after a horseback ride and chopping wood.\n\nAfter dinner, we again settled in front of the fire. The soup had been delicious, because of my excellent peeling and cutting up of potatoes I was sure, and the thick slices of homemade bread had been the perfect side.\n\n\"I had a good time today,\" she whispered, leaning into my side as we watched the fire, my hand slowly caressing the top of her breast.\n\n\"So did I.\"\n\n\"Did you really?\"\n\nI looked at her. \"Yeah. Surprised?\"\n\n\"A little.\"\n\nI smiled. \"Me too.\"\n\nShe snickered and stared at the fire in silence. \"What are we going to do for the rest of the evening?\"\n\nI tipped her face up. \"I have a suggestion.\"\n\n\"Oh? What's that?\"\n\nI didn't say anything, but I showed her as I took her lips with mine.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Michelle</center>\n\nI opened my eyes, sleep vanishing like smoke in a wind, and the first thing I wanted to do was cry. I hadn't slept well last night, waking up several times to think about what I'd done, and like this morning, each time I felt like crying. I remained silent, staring at nothing as Garret breathed slowly and deeply behind me, his arms wrapped around me, my back against his chest as he held me in a warm and comfortable spoon. He had an erection, his massive cock pressed against my ass, and She scratched at her box.\n\nI had a darkness inside of me, something I kept hidden from the world. I called her She, and she terrified me. I'd tried to rid myself of her, but I might as well have been trying to excise my soul, so I'd learned to control her. I kept her locked in a box, deep inside me, only letting her out when her screams for freedom became intolerable, and only when I was alone in my bed. That was when I could let her play without worrying about anyone getting hurt, subduing her with dark fantasies as I fucked myself with toys.\n\nLast night she'd escaped her prison for the first time, and she'd consumed me. I sniffed, fighting back the tears. When Garret had kissed me, I knew we were going to bed. I hadn't slept well the first night as the couch wasn't nearly as comfortable as the massive bed he was sleeping in. I'd wanted him the first night, desperately wanted him. She whispered in my ear that I should take him to my bed, but I couldn't give myself to him after only knowing him for a few hours. That's what She would do.\n\nYesterday, She wouldn't stop whispering, and I'd spent more time than I should have watching him through the window as he split wood, his chiseled body calling to me... and the dark bitch that lived inside of me.\n\nThe horseback ride had been the perfect ending to the day, quieting She's whispering. As we sat staring at the fire, his hand gently caressing my breast, my mind kept going back to him standing among the pieces of wood at his feet, shirtless and sweating, as he worked. She had started scratching at her box again. Then he'd kissed me, and I was lost.\n\nIt had started out wonderfully, our slow easy kissing building me up but not calling She forth. She was a dark, malevolent bitch, excited by rough, hateful fucking, by being dominated and trying to dominate in return. She liked big, aggressive bodybuilder types, and men who took what they wanted, as She did, caring nothing for love or tenderness. And most importantly, She wanted her lovers hung like a porn star. In the past, even when one of my lovers excited her, I'd managed to keep her contained. But not last night. I sniffed again, my guilt for my actions consuming me.\n\nGarret had taken me to bed, and as we slowly undressed each other, kissing and touching, he'd been She's fantasy made real. Big, muscled, and sporting a cock as big as any I'd seen in porn flicks. She began to howl, demanding her release, and I'd struggled to contain her. Garret had started out wonderfully gentle, but as She screamed and struggled for freedom, I began to lose my grip on her, and She started taking me over. As She forced me to become more aggressive, he'd risen to match, which made my hold on her even more tenuous as the circle tightened.\n\nWhen She'd finally broken free, our fucking had become brutal. She'd luxuriated in it, not caring if She hurt him, and the pain of our erotic violence had excited her even more. I was appalled at my actions, but I couldn't stuff her back in her box while Garret refused to back away.\n\nShe'd challenged him, and he'd challenged her in turn. At one point he was on his back, head bent over the edge of the bed with my hands tight on his throat, choking him as She fucked him, and still he'd refused to back away. With a sneering growl, he'd wadded his hands in my hair and roughly pulled my head back as he began fucking her. I'd come so hard that I'd lunged forward with a wail and tumbled off the edge of the bed. He'd followed, and he'd finished her off on the floor.\n\nI began to move, wanting to slink away from him, but he tightened his grip, holding me close. \"Where are you going?\" he sighed, kissing my shoulder as he caressed my breasts.\n\nShe, having found her match, began throwing herself against her box, trying to break free. I flung more chains around her prison and cinched them tight. \"I'm going to start breakfast.\"\n\n\"Stay,\" he whispered. I whimpered, I thought silently, but he moved and rolled me to my back. \"What's wrong?\" he asked, holding my gaze.\n\n\"Nothing,\" I said, looking away.\n\nHe had a scratch on his cheek, two hickeys on his neck, and several painful looking welts on his chest. I suspected he had more welts on his back and ass. During our throes last night, if I'd had any nails, She would have opened him up good. He turned my face back to his.\n\n\"It sure looks like something.\"\n\nI slowly licked my lips. \"I'm sorry about last night. I don't know what came over me,\" I lied.\n\n\"You certainly got wild, alright.\"\n\nI felt the tears threaten again and turned away, trying to get control of myself. He took my chin and gently turned my head, forcing me to look at him.\n\nHis face softened. \"Hey... hey... what's the matter?\"\n\n\"I hurt you.\"\n\n\"The harder fought the battle, the sweeter the victory.\"\n\n\"It's not fucking funny!\" I snarled, throwing myself out of bed and stomping to the bathroom, sitting down on the commode to relieve myself.\n\nHe appeared a moment later. \"What's wrong with you?\" he growled. \"Didn't you enjoy yourself?\"\n\n\"No!\" I could see that stung.\n\n\"No? You sure seemed to last night.\"\n\n\"Well, I didn't!\"\n\nHe stared at me as I rose and flushed, pushing past him. He took my arm. \"Michelle, talk to me. What's going on?\"\n\n\"Nothing. Just leave me alone, okay?\" I tried to pull my arm away as he held it in a gentle but unyielding grip.\n\n\"Was it something I did?\"\n\n\"Yes. No. It doesn't matter,\" I said, jerking my arm free.\n\nHe followed me into the bedroom. \"It sure as hell matters to me. You were all over me last night, and now this morning you're giving me the brush-off? What the fuck, Michelle?\"\n\n\"Just leave me alone!\" I yelled before gathering my clothes, throwing them on, and pounding down the steps.\n\nI started breakfast, and by the time he appeared, scrubbed and dressed, I'd calmed down. I had enjoyed myself last night, and that was the problem. He walked up to me and gently turned me to face him.\n\n\"Do you want to talk about it?\" he asked softly.\n\n\"No. There's nothing to talk about.\"\n\nHis face hardened. \"I think there is, but if you want to keep it all bottled up inside, that's on you. I'm sorry if I got too rough with you last night, but with the way you were acting, I thought that was what you wanted.\"\n\nHe stomped away to stoke the fire, leaving me alone in the kitchen. \"It was,\" I murmured, too softly for him to hear.\n\nBreakfast and the rest of the morning was chilly despite the warmth from the fireplace. When he went outside to bring in more wood, I took a shower. I was bruised and sore as well, and I had a deep aching tenderness in my womanhood. He'd worked me over good last night, proving how strong he was by throwing me around like I weighed nothing, and muscling She into compliance before fucking her into submission.\n\nI washed, taking note of my bumps, bruises, and aches. He hadn't marked my face, and he'd avoided getting too rough with my really tender areas, like breasts and pussy, but he'd pounded that beautiful cock into me for almost an hour before we were finished, and that was enough to make any girl sore. Not to mention fucking on a hardwood floor. Next time we were going to have to keep it on the bed. I smiled. At least I was thinking about a next time. First thing this morning, the only thing I could think of was running home with my tail between my legs.\n\nMost of my bruising was on my hips, where'd he gripped me as he repeatedly slammed me down on his cock or held my hips tight as he jackhammered me from behind. My scalp was also a little tender from where he'd gripped my hair as I'd choked him, probably the result of me falling off the damned bed while he was pulling my hair.",
        "I stood under the water, allowing the heat to leech away my aches. It wasn't fair I was taking my self-loathing out on him. I'd started the cycle of rough fucking when I couldn't keep She locked in her box, and he'd simply gone with it, perhaps thinking that was who I was. I looked down, allowing the water to pour over my head as I pursed my lips to hold back the tears. Maybe I was that person.\n\nI finished my shower and stepped out, the room pleasantly warm. As I dried, I realized I owed him, if not an explanation, at least an apology. I dressed and slowly made my way down the steps, looking for him.\n\n\"Garret?\"\n\nThere was no answer. The Tahoe was still sitting outside, so he had to be close. I crossed the room to the other side of the cabin. He was behind the stable, and as I watched, he swung the maul, cleaving the log. He bent, picked up one of the two pieces and dropped it on the splitting stump. The maul whistled through the air and the two pieces of wood fell to the ground.\n\nI turned from the window and walk out through the only door. Summer was on its way, but Old Man Winter was a tenacious bastard and wouldn't relinquish his grip easily. Garret paused as I stepped around the corner of the stable. I could tell from the hardness of his face he was still upset. He held my eyes a moment and then turned away to retrieve another log from the pile. We had plenty of wood for several days, so he wasn't splitting wood because he had too.\n\n\"I'm sorry.\"\n\nHe nodded in acknowledgement as he placed the log. The maul flashed down and the two halves fell away. He picked up half, returned it to the stump, and split it again. The tears threatened again, but I choked them back. I wouldn't let him see me cry.\n\n\"Can't you say anything?\" I asked softly.\n\nHe swung the maul, splitting the other half, and then stuck the point into the stump so the handle was in easy reach. He looked like he'd been splitting wood his entire life.\n\n\"Apparently there's nothing to say.\" He started to turn away for another log.\n\n\"What do you want from me?\" I demanded. \"I said I was sorry.\"\n\n\"Fine. You're forgiven.\" He picked up the log and placed it on the stump. His words didn't match his actions.\n\n\"It's nothing you did,\" I tried again.\n\n\"Oh, one of those 'it's not you, it's me' things?\"\n\n\"Yes.\"\n\n\"That's just fucking great. You know when a woman tells a man, 'It's not you, it's me,' that means it's definitely him.\" He glared at me, his eyes and mouth hard. \"If your problem is so super-secret we can't talk about it, then what am I supposed to do? I'm not tiptoeing around you, afraid I'm going to say or do something wrong.\"\n\n\"I don't expect you to.\"\n\nHe nodded. \"Good. Then I guess we don't have a problem. If it's your problem, you can deal with it.\"\n\nI swallowed hard. He had a point. If I wouldn't tell him what was bothering me, what was he supposed to do? Guess? Read my mind? \"Sorry,\" I mumbled again and turned away.\n\nWe thawed over the rest of the day. After lunch we'd gone riding, and he'd only needed a little bit of help to saddle Shamrock. We rode for almost two hours, talking little, exploring the surrounding forest. According to a map I'd looked at before I flew out, the cabin was situated near where the Lolo National Forest, Nez-Perce National Forest, and Bitterroot National Forests merged. We could explore for dozens of miles in any direction and only see a few dozen cabins that sprouted from the edges of the twisting, winding roads that snaked through the valleys.\n\nAfter caring for Penny and Shamrock, I started dinner. I put a couple of large potatoes, dusted with sea salt and wrapped in foil, in the oven, then using a couple of pieces of wood he'd split, I built a fire in the grill pit.\n\nI thought I was going to have to prepare the entire meal myself. I couldn't complain, since that was what I'd agreed to, but when I started the steaks grilling, he'd offered to help. Leaving him to watch the meat, I checked the potatoes.\n\n\"Good,\" he said, hoisting a piece of meat on his fork.\n\nI forced a smile. \"You did it.\"\n\nHe popped the meat into his mouth and chewed slowly. He leaned back in his chair with a sigh as he swallowed. \"Look, I'm sorry for being an ass today. I don't\u2014\"\n\n\"You don't have to apologize,\" I said, cutting him off. \"You didn't do anything wrong.\"\n\n\"Then what's bothering\u2014\"\n\n\"It's not you, it's me,\" I said, a ghost of a smile flickering over my lips as he rolled his eyes and looked away. \"No, really. It's my problem. I'll deal with it.\"\n\n\"You know, it's just possible I could help,\" he offered, not looking at me as he cut his meat.\n\nI shook my head. \"Thank you, but you can't. Nobody can.\"\n\nHe looked up and held my eyes for a moment. \"Okay, whatever.\"\n\nWith those two words, it suddenly felt like the progress we'd made today had evaporated. As I cleaned up, Garret added wood to the fire. I wanted to go to him, to join him on the couch, but I was afraid. She was picking at the lock, testing its strength. If I were to join him, I could be handing her the key, and that was something I didn't want to do.\n\nI settled into one of the two matching chairs, and I saw the disappointment in his eyes. We talked little, staring into fire, alone with our thoughts.\n\n\"You coming to bed?\" he asked as he rose.\n\n\"No. Not tonight.\"\n\n\"Suit yourself,\" he rumbled as he turned and walked up the steps without a backward glance.\n\nI remained in my chair for a long time, staring into the flames, looking for answers but finding none.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Garret</center>\n\nMichelle and I plodded along on horseback at the edge of a one of the dozens of roads, if you could call the track we were on a road, that snaked through the forest. It'd been a week today since I'd taken Michelle to bed, and a week today since she'd lost her fucking mind.\n\nI frowned to myself at my silent rebuke. While things had improved between us, there was clearly something bothering her. During the day she seemed fine, but at night she withdrew into a shell, putting up a barrier between us. I'd picked around the edges, trying to find out what was bothering her, but she refused to give any details, insisting it was 'her problem' and she'd 'deal with it.' Except she wasn't dealing with it, she was avoiding it.\n\nOther than our one night together, she was sleeping on the couch. I'd been trying to coax her back into my bed, but she'd refused my every attempt. She'd let me kiss her if I kept it chaste, especially during the day, but if the kiss started going somewhere, or if I tried to touch her and take it to the next level, she'd push me away. Often, at night, as she was shutting me down, she had a look of sad disappointment on her face, almost as if she wanted to go to bed with me but felt she couldn't, despite my assurances I'd be gentle with her this time.\n\nI nudged Shamrock with my heels, encouraging her to pick up her pace. I still didn't move in the saddle with the easy grace Michelle did, but I'd become much more comfortable on the horse and could saddle Shamrock myself now. I was starting to think of Shamrock as a big pet, and Michelle and I were in a silent competition to see who could spoil our horse the most. When Shamrock saw me now, her ears would perk up and she'd start looking for her apple or carrot, the greedy girl.\n\n\"We need to talk,\" I said as I slowed beside Michelle.\n\n\"About what?\"\n\n\"You know what.\"\n\nAll the life seemed to go out of her as she slumped in the saddle. I'd given her a week to get her shit together and had encouraged her to talk to me, but I was tired of waiting for her to get her head straightened out.\n\n\"I can't.\"\n\n\"No. You won't. There's a difference.\"\n\nShe shook her head. \"You don't understand.\"\n\n\"You're right, I don't, because you won't talk to me.\"\n\nShe pulled Penny to a stop, Shamrock stopping as well. \"I can't.\"\n\nIt was the answer I expected, the same answer I'd been getting all week. \"Fine, but you're going to have a long and lonely life if you don't start getting your shit together,\" I growled as I nudged Shamrock back into motion.\n\nShe rode up beside me. \"Now you're just being an asshole.\"\n\nI hitched a shoulder. \"Maybe. You blaming me for shit you claim I didn't do brings that out in me. You treat every guy you sleep with like this?\"\n\n\"No!\"\n\n\"So it's me?\"\n\n\"No. Well, yes, but not for the reason you think.\"\n\n\"I see. So let me get this straight. You first said it's not me, it's you, but now you're telling me it is me after all? Huh. What do you know? Another woman telling a guy, 'It's not you, it's me' when in fact it's him.\"\n\nI was so done with this shit. If she wanted to keep her secrets, she could. I didn't mind her not telling me about what was bothering her, but I did mind her continually pushing me away because of it. I'd been patient with her, but I was done with that. Tomorrow I was packing my shit, going home, and she could spend the next three weeks in the cabin by herself.\n\n\"I'm sorry,\" she murmured.\n\n\"So you keep saying.\"\n\n\"What do you want from me?\" she snapped.\n\n\"I want you to pull your head out of your ass. You said it's your problem? Fine. Deal with it or don't, but stop kicking me in the nuts because of it.\"\n\n\"I'm not!\"\n\n\"No? Then why is it every time I try to get close to you, you push me away?\"\n\nShe held my gaze for a long moment, her face sad. \"It's complicated.\"\n\n\"Yeah. You keep saying that too.\"\n\nShe stopped her horse. \"I'm scared, okay?\" she cried as Shamrock and I rode past her.\n\nI pulled Shamrock to a stop and turned her around. That wasn't what I expected to hear. I thought maybe I'd gotten too rough with her, or she was feeling guilty for fucking me after only one day or something like that, but not that she was afraid. I nudged Shamrock and we walked back to her.\n\n\"Scared? Of what? Me? I'd never\u2014\"\n\n\"Of me,\" she confessed, her voice so low I almost didn't hear her. \"I'm afraid of me.\"\n\nI remained silent, giving her a chance to continue, but she refused to meet my eyes and said nothing else. \"I don't understand.\"\n\n\"I know.\"\n\n\"So explain it to me.\"\n\n\"I can't.\" She looked like a little girl who had been caught stealing candy.\n\n\"Can't, or won't?\"\n\n\"Can't.\"\n\n\"Why?\"\n\n\"Because I don't understand it myself.\"\n\nAll the frustration and annoyance began to fade. I first thought she was playing some stupid, coy game, then I decided she was making a big deal out of nothing, but now I wasn't so sure. Whatever was hurting her ran deep.\n\n\"Tell me about it.\" She shook her head. I nudged Shamrock close and took her hand. \"Look, this involves me too.\"\n\n\"No, it doesn't, not really.\"\n\n\"Yes, it does. You said yourself it was me.\"\n\nShe looked up, her eyes sad, before she dropped her gaze again and pulled her hand back. \"No. It's not you.\"\n\n\"Then why do you keep pushing me away?\"\n\n\"Because I don't trust Her.\"\n\n\"Her? Her who?\" I asked.\n\n\"The other me.\"\n\nI blinked a few times. Michelle was starting to weird me out. \"The other you? Like a split personality?\"\n\nShe looked up again. \"No, nothing like that. It's...\"\n\n\"It's what?\" I encouraged. \"You can trust me.\" I took a long, obvious, look around. \"It isn't going to get much more private than this. I promise you, whatever you say will stay between the four of us,\" I said, leaning forward and patting Shamrock on the neck.\n\nShe swallowed hard. \"I have this... this... evil side, a darkness inside me. She scares me.\"\n\n\"She? This other woman inside of you?\"\n\nMichelle nodded. \"Yes. She's me, and that's what scares me. I don't like the things I fantasize about at night.\" Her gaze fell to the ground again. \"The things I've done.\"\n\n\"Like what?\" She shook her head. \"Michelle.\" I waited but she refused to look up. \"Michelle, look at me,\" I repeated and waited until she met my gaze. \"Nothing you can say will shock me, okay? You wouldn't believe some of the things I've done.\"\n\n\"Oh yeah? Like what?\"\n\nFuck! Now I have to man up and admit to some things I'm not proud of. I shrugged and picked one of my lesser mistakes. \"Fucking a woman so she could cuckold her husband in revenge after he had an affair.\"\n\nShe spluttered. \"That's it? That's your big secret? That's nothing.\"\n\n\"There's more.\"\n\n\"Oh yeah? Come on, give it your best shot.\"\n\n\"This isn't about me.\"\n\n\"No? You think I can't shock you? Let's compare our dark secrets.\"\n\nI paused and thought it over, and then hardened my resolve. \"Okay, fine. I got arrested for fucking a chick in public.\"\n\nHer eyes narrowed. \"Really?\"\n\n\"Yeah, really. I'm not proud of it, and we were both charged, but there it is.\"\n\n\"What happened?\"\n\n\"When did this become about me?\"\n\n\"Just tell me.\"\n\nI ground my teeth in annoyance. She better not be yanking my chain. \"I was with this chick. We got into a fight outside a nightclub, one thing led to another, and I bent her over the hood of my car. Someone must have called the cops. There. Satisfied?\"\n\n\"Did you hit her?\"\n\n\"Hit her? You mean with my fist?\" She nodded. \"No! Jesus, Michelle, what kind of guy do you think I am? It was completely consensual. We were charged with indecent exposure and committing a lewd act.\"\n\nShe nodded slowly. \"So you didn't try to kill her?\"\n\n\"What? No!\" Her attitude was starting to piss me off.\n\n\"I did,\" she murmured.\n\nMy rising anger died in an instant. \"You did what?\"\n\n\"Tried to kill a girl.\"\n\nA chill passed over me. I waited, but she didn't continue. \"On purpose?\"\n\n\"Yes. No. Sort of.\"\n\nI waited silently as she sighed and continued her story.\n\n\"I was home for the summer, after my freshman year at University of Washington. I was having a pool party at my house, me and a few high school friends.\" She paused and looked at me, her eyes haunted with the memory. \"I was kind of a slut in high school. I'd been fucking my boyfriend since the eleventh grade. Not just him, but any guy who caught my fancy. Anyway, I was home and Rick was there. Rick was my boyfriend, though we'd kind of lost touch after I went away to school. So, we were having this party, nothing big, and Rachael started hitting on him.\"\n\n\"And Rachael is?\" I asked, trying to keep up.\n\n\"Another high school friend. Even though I was fucking other guys at U.W., and I knew he was fucking other girls, I didn't like it. She was supposed to be my friend, you know, and friends don't poach each other's boyfriends. I got in her face and told her to leave him alone, and she told me to mind my own business because they'd been fucking for months.\" She shook her head and her fists clenched tighter on the reigns as her knuckles turned white.\n\n\"That pissed me off so much. I started calling her names, she called me some names, and I pushed her.\" She paused and looked away, her shame clear on her face, before her gaze came back to mine. \"The guys started egging us on, and I liked it. I pushed her a couple of more times, and she finally pushed me back. Then it was on.\"\n\n\"A catfight?\"\n\n\"Yeah. Mandy, the other girl there, tried to break us up, but the guys held her back.\"\n\nI frowned when she stopped. \"That's it? So what? You got into a shoving match. Big deal.\"\n\n\"It was more than that.\" She swallowed. \"Having the guys cheering us on, it... turned me on. We really tore into each other, slapping, scratching, pulling hair. It hurt, but I liked it.\"\n\nI tried to get my mind around what she was telling me. She said it turned her on, but I wasn't sure she meant what it sounded like she meant. I decided to err on the side of caution and make her spell it out. \"Okay, I still don't understand the problem. I mean, yeah, fighting doesn't solve anything, but shit happens sometimes.\"\n\nShe shook her head again. \"I shoved her into the pool and went in after her. We fought a little more, but then she was done.\" She became silent, and I saw tears welling in her eyes. \"I tried to drown her, Garret. I held her under water and would have killed her had a couple of the guys not realized I wasn't going to let her up. They jumped in and pulled me off her.\" She whimpered as a tear trickled down her cheek. \"Worse, I was excited by it. I think I fucking orgasmed as she was hitting me, trying to get me to let her go so she could come up for air. What kind of sick bitch do I have to be to get off on something like that?\"\n\nI didn't have any words for that. I was pretty good at reading people and she didn't strike me as the cold-blooded killer type. A little over a year ago someone keyed my Porsche and I was pretty sure if I'd caught the asshole while he was doing it I would have beaten the shit out of him. In hindsight, I could say I was glad I hadn't caught him because it wasn't worth going to jail for battery, but I could still remember how seething mad I was, so mad I wasn't thinking and might have done something I would have never consider doing otherwise. Kicking some jerkwad's ass for keying my car wasn't the same as actually trying to drown someone, but had she really tried to kill her friend, or was her guilt and shame coloring her memories?\n\n\"I don't know what to say.\"\n\nShe nodded. \"There's nothing to say. They wanted to charge me with attempted murder, but I was able to plead it down to battery. I had to perform two hundred hours of community service and take an anger management class.\" She paused. \"The thing is, I wasn't angry when I was fighting with Rachel. I was excited by it, turned on by fighting with her as the guys watched.\"\n\n\"A lot of women have lesbian fantasies,\" I tried. \"So I hear,\" I amended when she looked at me, her disgust with my comment clear.\n\n\"That's not it,\" she said, her irritation clear. \"Something's wrong with me,\" she murmured. \"I have these dark fantasies, fantasies that scare me because I know I could act on them.\"\n\n\"But they're just fantasies, Michelle. Everyone has them.\"\n\n\"But not everyone tries to drown their friend.\" She sniffed. \"That's why I don't go home very often. My parents don't look at me the same way anymore, my brother pretends I don't exist, and all my friends avoid me.\" Her lips pulled down into a tight frown as she tried not to cry. \"Not that I blame them.\"\n\n\"Okay, so, you made a mistake. I've made a few, as you now know.\"\n\n\"You don't get it!\" she snarled, her face twisting in anger and shame. \"She, the dark side of me, wants to hurt people and be hurt by them, while fucking. I try to keep her inside, but sometimes I just can't. When I can't keep her in her box anymore, I let her out and the darkness comes. I fantasize about me and my guy fucking and fighting with a rival couple, or I'm fucking some random dude as people watch, cheering and betting on who will outfuck who. It's all weird shit like that, and the whole time, I'm fucking myself stupid with this big dildo I have because it's the only way I can get her back in her box.\"\n\n\"And what happened with us? That was her, this other person inside you?\" I asked softly, feeling way along. I was struggling to get my mind around what she was telling me because I couldn't see her as a killer, and having her get rough with me in bed didn't make her one.\n\nMichelle nodded, her eyes sad. \"Yes. That was her. She's never escaped her box before, and you saw what happened.\" She looked away. \"You... bring out the worst in me.\"\n\n\"Or the best,\" I said softly. She snorted. \"I understand what you're saying, but are you sure you actually would have downed Rachael?\"\n\nShe shrugged. \"I guess we'll never know, but yeah, I think I would have.\"\n\n\"Have you done anything like that since?\"\n\n\"No!\" she cried, clearly upset that I'd even suggested it.\n\n\"Then it's behind you. You need to stop blaming yourself for something you can't change.\"\n\n\"But that's just it, it's not behind me. Every few weeks, She gets out.\"\n\n\"Like a week ago?\"\n\n\"Yes, except that time I didn't let her out, and look what she did.\"",
        "\"What? Fuck the shit out of me. I'm not complaining about that.\"\n\n\"The biting, the choking, the hitting, the scratching? That didn't bother you?\"\n\nI considered my answer carefully. \"Would it bother you if I said no?\" I could tell by the way she looked at me she didn't like my answer. \"Did it bother you, at the time, that I got rough with you?\"\n\nShe looked down. \"No, but that was her, not me.\"\n\n\"No, that was you too. This She and Her you keep talking about, it's all of who you are.\"\n\n\"Well, I don't like those parts of me.\"\n\n\"I do.\"\n\n\"Then fuck you,\" she muttered.\n\n\"Hear me out. She, Her, this darkness, as you call it, makes you who you are. I like you for who you are. The fact that you got wild in bed was actually a turn on. I'm tired of women who have no fire, no will of their own. Yeah, it was just sex, but you never backed down and you gave as good as you got. You didn't beg me not to hurt you, and you didn't shut down and simply let me have my way with you. I\u2014\"\n\n\"So you like hurting women?\"\n\n\"I have no interest in actually hurting you, Michelle, but did I really hurt you, or did I hurt you so good?\" I asked, watching her for a reaction. \"Yeah, you scratched me some, but you could have choked or bitten me a lot harder than you did. I don't think you really wanted to hurt me. My point is, if someone were going to really hurt you, rape you, whatever, I think you'd fight to escape rather than depend on begging to keep them from hurting you. You could have bitten my cock off, but you didn't. If someone were really trying to hurt you, I think you could call on this darkness, as you call it, and take it until you could do something like that. I guarantee you, that will take any guy out of the fight, and then you could escape. If I'm right, that's She, or Her, or whatever the hell you call that strength inside you, that gives you that ability.\"\n\nShe looked at me for a long moment. \"Even if you're correct, that doesn't make what I did right.\"\n\n\"No, it doesn't, but by your own words, you never did anything like that again.\"\n\n\"Yeah, because I keep that bitch locked up tight.\"\n\n\"Maybe part of your problem is you don't give Her enough exercise. You said yourself you only let her out when you can't keep her locked up anymore.\"\n\nShe began shaking her head before I finished speaking. \"No. I can't do that.\"\n\n\"Why?\"\n\n\"I am afraid of what might happen.\"\n\nMy lips twitched into a small smile. \"That you'll hurt someone?\" She nodded. \"Personally, I think I can take the bitch.\"\n\n\"It's not funny, Garret!\"\n\n\"I'm not saying it is, but I don't think you'd actually try to hurt me. You had a chance to and didn't take it.\" She was shaking her head again. \"The best way to overcome your fears is to face them. I can take care of myself, so you don't have to worry about me.\"\n\nShe wouldn't meet my gaze. \"But what if I can't put her back in her box?\"\n\n\"Then I guess I'll have to help you by fucking that bitch into submission.\"\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Michelle</center>\n\nI stood in the kitchen, browning hash browns and thick chunks of ham for brunch. I smiled to myself as I used a flat wooden spatula to keep the mixture moving so it wouldn't burn. We hadn't had breakfast proper in almost two weeks because we were always busy doing other things first thing in the morning.\n\nAfter our talk on the trail, it'd taken me a couple more days before I trusted myself with Garret. Lynn, as we'd dubbed her, had raged inside her box, demanding to be set free. She had taken his offhand remark of being able to take her, and fucking her into submission, as a challenge, a challenge she relished. She's whispered in my dreams until I couldn't keep her contained any longer. On the second night, as he kissed me good night, I hadn't stopped him as the kiss gained momentum. As he slowly pulled me up the steps to his bedroom, I'd set her free, and oh... my... God, the fucking we'd done that night. I'd learned to trust Garret in the past two weeks. If Lynn got a little too wild, he simply overpowered her, and that was exactly what she wanted.\n\nI'd learned a few things about Lynn and about myself with Garret. The most surprising revelation was that Lynn really didn't want to hurt anyone, she only wanted to know Garret, or Michael as we called his hard-fucking counterpart, could handle her. When Lynn got too rough, Michael would force her to stop whatever she was doing, sometimes responding in kind to demonstrate why he wouldn't tolerate her behavior, all the while fucking the shit out of me.\n\nAfter a couple of days, we'd learned the limits, and we could play right up to the point where pain increased the pleasure. I smiled as Garret came in with another load of split wood. It was a good thing he'd taken all his annoyances and frustrations with me out on the wood pile during the week I was being a bitch because he wasn't splitting nearly as much wood now. He was getting his exercise another way.\n\nI turned my attention back to our brunch. When I learned he was good to his word and could handle me, I'd unchained Lynn entirely and let her play. I'd explored my dark fantasies, sometimes with his knowledge and sometimes without.\n\nOne night I was the most bad-ass biker bitch on the west coast. Me and my gang, the Daughters of Destruction, met up with the Lords of Chaos to determine control over our disputed territory. As the president of my club, I represented us in a fucking contest with the president of the Lords of Chaos, the winner gaining control of the territory for the next six months. Michael fucked me for over two hours, with only a short break in the middle after he came the first time, but as I was breathing life back into his cock, he was licking and nibbling me into another orgasm.\n\nOne morning, as he was deciding what clothes to wear, I was waiting in ambush, shoved him into the tiny closet, shut the door behind us, and we'd fucked our brains out, our cries of effort and pleasure ringing loud in the tiny space as he pounded into me. The closet was so small we barely had enough space, but struggling to fuck while tangled in some weird-ass positions made the experience incredibly intense.\n\nAnd there'd been more. We'd fucked nearly everywhere, the bed, the shower, the stairs, the dining table, and everywhere in between. It didn't matter where we were or what we were doing, when one of us was horny, Michael or Garret was ready. The only place I couldn't get him to fuck me was outside, perhaps remembering what had happened to him the last time, so we'd compromised and fucked inside the stable.\n\nI gave the browning concoction another turn, my smile widening in memory. He'd taken me in the tack and feed room, where it was slightly warmer, in another rough and wild session. Bending him backwards over one of the feed bags had put his cock at the perfect height and angle for my pleasure. As I held him down with a hand under his chin, he'd mauled my breasts, both of us crying out in effort and erotic bliss. I'd bounced on his cock until I came, crying my ecstasy to the world, and I think I would have fallen had he not grabbed me and clamped me to his chest. Before I could recover, he'd picked me up, slammed me against the wall and fucked me hard and deep. I wrapped him up with my arms and legs and held on, flogging him with my words, until he roared in completion, his legs shaking as he splashed into me. I swear, I think Penny and Shamrock looked at me in jealousy as we were redressing. Sorry girls, but he's all mine.\n\nSome of my fantasies had been disappointing, reality unable to live up to my imagination, but others had far exceeded anything I could dream up. The motorcycle one had been especially intense. As we were nearing exhaustion, we were down to just fucking, too tired for anything more energetic. It was a very loving scene as he lay on me, his arms tucked in and holding me close. Both of us were dripping sweat, panting from our long, arduous exertions, with Michael's breath hot as flame as he buried his face in my neck as he pumped into me. What made it so incredibly erotic was neither of us was willing to admit we couldn't continue. Listening to his soft grunt every time he slowly plunged into me had worked me up to the point that I wailed out one last orgasm when he gave his last in a final moment of furious fucking before bellowing and shuddering through his second climax of the night.\n\nBut better than all of that was the fact that I could be myself. Garret had accepted me as I was. He didn't care that I had a dark side. He'd met that darkness head on and with gusto. As he'd predicted, he'd taken on the bitch and fucked her into submission. After about a week of hard, sweaty, loud, nasty fucking, Lynn had waved off the chance for another encounter.\n\nThat was when I found out that while Michael liked to play rough, Garret was a caring, gentle lover. When Lynn was too well fucked to want to come out, Michelle got to enjoy Garret, and it had been just as wonderful as Lynn and Michael. For the first time since Lynn had revealed herself, I no longer felt like I had to pretend. I could be me, both sides of me, and not be judged.\n\n\"How're you doing?\" Garret asked, wrapping his arms around me from behind and nuzzling my neck. I'd been so lost in my own little world I hadn't realized he was done with the wood and started in surprise.\n\n\"Fine. You?\"\n\nHe grinned. \"After this morning? Tired.\"\n\nI tingled in excitement as I lifted the skillet from the stove and began to divide the contents onto two plates. This morning we'd made love, but it had been a marathon session of almost an hour before he'd finally tapped out. I wasn't able to best him often, so when I did, it made the experience that much more memorable.\n\n\"I made you a big breakfast to help you keep your strength up,\" I teased as I placed the pan in the sink for later washing.\n\n\"That's good or I'll have to start taking the little blue pill.\"\n\nI trilled out a laugh. \"For God's sake, don't do that!\" The problem wasn't him getting it up, it was me getting it to go down.\n\nHe shook his head as he poured two tall glasses of milk and two smaller glasses of orange juice. We'd already had our morning coffee as we took turns in the shower. \"I don't know. You wore my ass out this morning.\"\n\n\"As I recall I went right to sleep.\"\n\n\"Yeah, after I came and couldn't go anymore.\"\n\nI shrugged as I settled at the table, dividing the orange juice between us. \"That was what, the third time in the past two weeks?\"\n\nHe settled across from me, sliding one of the milk glasses across to me. \"I don't want to leave you hanging.\"\n\nI snickered. \"You didn't, but if you ever do, I'll trade you in for Michael. That guy seems to be able to fuck forever.\"\n\nHe sighed heavily and slumped in comic defeat. \"Well, fuck. I knew I shouldn't have introduced you to him.\"\n\n\"Nah, you're good. Lynn can have him. I'd rather have you.\"\n\n\"Really?\"\n\n\"You're surprised?\"\n\n\"Yeah, a little.\"\n\n\"Don't be. I told you I don't like Lynn. Michael is more her type. I prefer you.\"\n\n\"There for a while, I didn't know.\"\n\nI softened, no longer teasing. \"I know.\"\n\n\"It's okay.\"\n\nI shook my head. \"I'm not upset, but I wasn't sure I would be able to get her back inside her box after I let her out.\"\n\n\"But you did.\"\n\n\"Thanks to you.\"\n\n\"I didn't do anything.\"\n\n\"Yes you did. To use your term, you 'fucked her into submission.'\"\n\nThe darkness was still there, but it no longer frightened me. In my mind I'd upgraded Lynn from being locked in a box to far more comfortable accommodations. She was no longer a thing of derision to punish and ignore. She was still in a prison, as I was the only one that could unlock the door to set her free, but as long as she got to come out and play occasionally, 'getting enough exercise,' as Garret had put it, she was far more agreeable and easy to control.\n\nHe grinned at me. \"Any time, any place, if she needs a good fucking to remind her of her place, let me know and I'll call Michael.\"\n\n\"Any place?\"\n\n\"You name it.\"\n\n\"Outside?\"\n\nHe snickered. \"Okay, any place but one. Still, maybe he can go all caveman on her, throw her over his shoulder, and carry her inside before fucking her. She'd probably get off on that.\"\n\nA tickle of excitement ran through me. That damned Lynn was eavesdropping on my conversations again. \"Yeah, I think she probably would.\"\n\n\"Are we going riding later?\" he asked as we finished our meal. \"It's supposed to rain tonight and tomorrow, so if you want to ride, we probably should do it early.\"\n\n\"Yeah, I think I would. Right after we finish here?\"\n\n\"Sounds good.\"\n\nI nodded in agreement. We didn't ride the horses every day, and we weren't riding them as often now because we were always riding each other, but a good ride\u2014a good horseback ride, I amended to myself\u2014seemed like just the ticket. If it really started raining later, other than tending to Shamrock and Penny and grabbing a bite to eat, we'd probably spend the entire day in bed.\n\nAs he tended the fire so it'd last for the two or three hours we'd be gone, I quickly washed the dishes. It was still cold at night, but the days were warming nicely. Sixty-five to seventy degrees was perfect riding weather.\n\nI liked how he almost unconsciously took my hand while leading me to the stable, Penny and Shamrock watching us with interest. He'd obviously been uncomfortable around horses at the beginning, but he'd warmed up to Shamrock nicely. We each had two carrots and half an apple, and as we approached, their ears perked forward. I smiled. The animals clearly expected us to bring them a treat. They were spoiled rotten, just as they should be.\n\n\"Hey, girl,\" I said, stroking Penny on the side of her head as she took one of her carrots from me.\n\nI glanced at Garret and smiled. Even female horses drooled over him, Shamrock's neck stretched out as she nosed him for petting. Curt had stopped coming around to check on his horses, and I think what convinced him was how Shamrock had taken to Garret. She clearly adored him, and not just because he fed her apples.\n\nWe saddled our mounts, and I smiled in memory at Garret learning to saddle and care for Shamrock on his own. The first time he tried to saddle Shamrock himself, I'd heard her grunt, and she'd twisted her head around to look at him accusingly. It was my fault. I'd told him the front and flank cinches, the wide belts that went under the horses to hold the saddle in place, needed to be tight. I'd failed to take into account his strength and he'd overtightened the straps. I'd checked them and had him back them off one notch. Tight didn't mean so tight as to strain her ribs.\n\nNow, however, he could saddle Shamrock faster than I could saddle Penny because he could toss the fifty-pound saddles around like they weighed nothing. He first carried my saddle out of the tack room, tossing it onto the blanket on Penny's back. While I worked on Penny, he returned and got his own saddle.\n\nWhen he was finished with his horse, we led the girls out and mounted. There were fire roads cut all through the forest that were ideal for riding. As we plodded along, I couldn't believe how much better a horseman he was. He hadn't figured out how to post yet, but he no longer held onto the saddle's horn, and the once or twice we let the horses gallop, he'd risen up on the stirrups just like a pro. Mostly we walked the horses, preferring the relaxed pace, allowing us to ride longer without wearing the horses out.\n\n\"Hard to believe we only have a week left,\" he said as he and Shamrock walked along beside Penny and me. \"It seems like we just got here.\"\n\n\"Yeah.\"\n\n\"What?\"\n\n\"What?\" I asked, not understanding what he was asking.\n\n\"You sound a little sad.\"\n\nI sighed. He was surprisingly perceptive. \"A little, I guess.\"\n\n\"Why?\"\n\n\"I feel like I wasted an entire week, and now it's almost over.\"\n\n\"We still have a week left.\"\n\n\"I know.\"\n\nI'd left the farm in the capable hands of two members of my staff, but I needed to get back to my farm and my old life. The problem was, I didn't want to go back. I thought it over. It wasn't that I didn't want to go back, it was I didn't want to leave Garret. Since I'd stopped being a bitch, he'd stopped being an asshole. More than that, he, more than anyone else on the planet, knew me for who I really was, and he'd accepted me. I didn't have to pretend with him, and that made him special.\n\n\"You okay?\" he asked softly.\n\nI forced a smile. \"Yeah. Just thinking.\"\n\n\"You know that's bad for you? You remember what happened the last time you thought too much.\"\n\nMy smile became genuine. \"Yeah, I know.\"\n\n\"What are you thinking about?\"\n\n\"Our time together, going home, all the work that's probably waiting on me. The normal stuff.\"\n\n\"Yeah. I know the feeling. Why don't we forget everything, steal Curt's horses, and just ride away? We could live in the woods, like Sasquatch.\"\n\nI snickered as I imagined him running through the woods naked, and I found that I liked the imagery.\n\nWe rode along in relative silence, each of us lost in our thoughts. He only lived an hour away. Maybe we could still see each other, perhaps on weekends. I smiled to myself. Lynn would miss her exercise partner if we didn't stay in touch.\n\nWe followed the road into a clearing in one of the many petite valleys nestled among the hills and mountains. In the center was a wide brook that flowed into a small, most amazingly clear lake I'd ever seen, before continuing its path down the meadow. The area surrounding the lake was in full bloom, the flowers open in the warming sunlight setting the meadow ablaze with their color.\n\nWe stepped off the horses and allowed them to drink their fill from the lake and nibble on the tender new growth. He took my hand and led me away. The horses were well trained and would stay where we left them. The idea of taking the horses and living like Sasquatch was getting more appealing by the moment.\n\n\"You know what I think?\" he asked.\n\n\"What?\"\n\n\"I think your secret base is nearby, you capitalist spy pig. Are you going to tell me where it is, or I will have to fuck the location out of you?\" he said with a comically stereotypical Russian accent.\n\nHe was playing with me, giving me an opportunity to have what I'd asked for, what until now he'd refused. Not only that, he was setting up a scenario for me, offering me the opportunity to let Lynn come out and play. He knew the motorcycle fantasy we'd played out had gotten me off hard. This was a different twist on the same idea. Lynn knocked politely on the door and asked if I wanted her to handle this. I opened the door wide in invitation.\n\nGarret said he could tell who he was with by the way I looked. According to him, Lynn was harder, her eyes narrower, her lips thinner, and she carried herself differently. I'd tried to recreate the look in a mirror, so I could see what he saw, but he said I never got it right. I might not be able to see the difference, but I could feel it. Soft and hard was a good way to think of it. Michelle was the soft seductress, Lynn the hard-fucking bitch.\n\nI was still a little tender from the fucking I took last night, and the marathon love making this morning, but Lynn didn't care. She wouldn't back down until she was bowlegged, and she considered being sore a badge of honor.\n\nAll my thoughts happened in the blink of an eye, and I smiled at Ivan, the Russian spy. \"You communist dog, I'll never tell you where it is.\"\n\nHe smirked. \"Then I will have to fuck the information out of you. You Americans are soft. You won't last five minutes with a Russian man.\" I like how he slapped himself on the chest in bravado. He was pushing Lynn's buttons, and he knew exactly what he was doing.",
        "\"The only thing soft is your cock.\"\n\nHe grabbed me by the back of the head and hauled me to him. \"We shall see about that.\"\n\nHe kissed me. There was no tenderness, only aggression and need. I kissed him back, falling into the fantasy. Before I was done with him, I'd have the keys to the fucking Kremlin.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Garret</center>\n\nThe darkness of slumber fell gently away. Michelle was no longer in my arms and I reached for her, my eyes still closed as I hovered in the twilight of half-sleep. She wasn't in the bed. I felt a moment of concern and opened my eyes, searching for her in the darkness until I heard the toilet flush. She staggered back into the bedroom and tumbled into the bed, snuggling in close with a sigh. I wrapped her up, adding my own sigh of contentment. This was where she belonged.\n\nI didn't know the time and didn't care. There wasn't a single clock anywhere in the cabin, apart from our phones, and they were downstairs. I didn't care about that, either. It was certainly morning, but it was still dark outside, the early morning rays of sun not yet visible, and that was all that mattered.\n\nThis would be our last full day together. I had originally been scheduled to leave today, but I'd changed my flight reservations so she and I could fly out together tomorrow, giving us one more night in the cabin. Over the past week we'd talked about our future and agreed that when we got back to Seattle, we'd stay in touch. She was only an hour away, and we could easily get together on weekends. Knowing that this wasn't the end made the last few days far easier to bear.\n\nSleep began to reclaim me. I found it hard to imagine not having her around. I didn't love her, but she was becoming very important to me. Even though we'd been together only a month, she was one of my longer lasting relationships. I couldn't recall any relationship lasting more than three months, and those were damned few. Most of my relationships were measured in weeks, not months, and none in years.\n\nMichelle was different. By now I usually felt trapped, or bored, but I didn't feel that way with her. Instead of looking for ways out of the relationship, I was looking for ways to strengthen it. I pulled her a little closer, and I liked how she nodded slightly in sleepy agreement with my tightened snuggle.\n\nShe was simply amazing. She'd truly come alive in our time together. When I'd first met her, she had an easy-going lightness about her. She wouldn't let me push her around, but she wasn't demanding, content to let me do my thing as long as I let her do hers. We'd had a rough week at the beginning, but once she worked through that, she'd changed. She was still bright and bubbly as she'd been the first couple of days, but more so. It was like she'd been turned up to eleven. Maybe she'd finally come to terms with her past. I didn't know, didn't care, and didn't dwell on it. It didn't matter. All that mattered now was she was part of my life.\n\nAfter our spy vs. spy contest in the meadow, I hadn't seen Lynn again, even though I'd given her a couple of opportunities to present herself. I didn't think Lynn was completely gone. How could she be? She was part of Michelle. It seemed to be cathartic for Michelle to have Lynn show up occasionally, and I didn't want Michelle to slip back into the gloom she'd struggled with after we'd first fucked.\n\nWhile Lynn slept, I'd had Michelle all to myself. I could handle Lynn, and having her show up now and again was damned exciting, but I preferred Michelle. I fucked Lynn, but I made love to Michelle, and while I often had harder orgasms with Lynn, I had more satisfying ones with Michelle.\n\nAfter the meadow, we'd skipped a day because we were both a little beat up and sore from our raucous play on the ground among the flowers, but after that, as Lynn hid from me, Michelle had the opportunity to show me what she was really like. Last night had been amazing. We'd sat on the large comfortable couch in front of the fireplace, as we did most nights, sipping a very nice wine. As our kissing became more intimate, we'd slowly worked ourselves out of clothes, but instead of going to bed, like we normally did, we'd made tender love in front of the fire.\n\nShe'd sat on me, her knees in the couch on either side of my hips, with my cock deep inside her as we kissed, touched, and whispered intimately. We'd sat like that, holding each other's gaze and unmoving, for at least a half-hour, before she'd leaned back, silently encouraging me onto the floor. I'd risen from the couch, we'd pulled the cushions into the floor for padding, and we resumed what we'd started. Having her sitting on me like that had been the single most sensual thing any woman had ever done to, or with, me.\n\nMy eyes closed. I was still smiling in memory and thinking about my future as sleep reclaimed me, dragging me back into the darkness of slumber.\n\n<center>-oOo-</center>\n\n\"Morning,\" I whispered as Michelle began to rouse.\n\n\"What time is it?\" she muttered, still drowsy.\n\n\"Daylight.\" She knew there were no clocks, her question an automatic one in her half-asleep state.\n\nShe groaned and stretched, her eyes still closed, before puckering her lips in invitation. I gladly complied. The first kiss was short, but after a moment, her lips twisted in a half smile as she drew me back for more. The second was far deeper and longer lasting. As I began kissing down her body, she sighed heavily, her smile dreamy.\n\n\"That's nice.\" I slowly drew a finger around one of her nipples, smiling as it hardened under my touch. I lowered my lips to taste it, but she gently pushed me away. \"We have to get up.\"\n\n\"I already am.\"\n\nShe sniffed out a short laugh. \"So what else is new?\" she sighed, still struggling to throw off the lingering tendrils of sleep. I returned to her nipple, teasing it with my tongue. She groaned, sighed, and pushed me away again. \"Stop. Curt is coming for the horses this morning, and if you start that, we'll be late.\"\n\n\"Shit,\" I muttered. \"I forgot about that.\"\n\nShe rolled to her side with another groan and sat on the side of the bed. \"Yeah. We still have some carrots and apples to give them, and I want to brush Penny one more time as I say goodbye.\"\n\nI nodded in understanding. I wanted to say goodbye to Shamrock as well. It was hard to believe how attached I'd become to her. I watched in amusement as Michelle hobbled into the bathroom. I followed, smiling as she carefully stepped into the shower. I thought about joining her, but since we didn't know when Curt was stopping by, it'd be our luck we'd be in the middle of something when he arrived. Besides, she was moving funny, her gait stiff and uncomfortable.\n\n\"What's wrong?\" I asked\n\n\"My knees!\" she said, turning on the water. \"Last night was our third time on the floor, and I've hurt the next morning every time. No more.\"\n\n\"We used cushions last night.\"\n\n\"Yeah, I know,\" she said as she ducked under the water, \"but I didn't have them under my knees.\"\n\nWe'd finished last night with her on top. It had been incredibly erotic, watching her move in the warm, flickering glow of the fire as her face twisted in pleasure. \"Why didn't you say something?\"\n\n\"Because I was too wound up last night to notice.\"\n\n\"I'm sorry.\"\n\n\"I'm not. It was so worth it.\"\n\nI went downstairs with her towel to start coffee. That was my job. Michelle still did all the cooking, but I could make coffee and made sure to have a cup ready for her when she stepped out of the shower. I was helping her in the kitchen, watching what she was doing, and I was reasonably sure I could handle breakfast now. Maybe, when we returned home, I'd surprise her with breakfast in bed one morning.\n\nWhen the water shut off, I was standing there, a large mug of coffee, creamed and sweetened to her taste, and a towel, freshly warmed from the dryer. I handed her the mug as I wrapped her in the towel and was rewarded with a kiss. It was our normal morning routine and I enjoyed it immensely.\n\nBy the time I stepped out of the shower the smell of bacon filled the room. I dressed and trotted down the steps. The fire was almost out, so I added wood and poked at the coals to encourage it to life. When I'd arrived, I'd hated the fuss and bother of wood heat, but now it didn't bother me so much. Splitting wood and hauling it in would never be fun, but getting to enjoy the fire's crackling warmth, its flickering light, and its cozy smell made the effort worth it.\n\nAfter a breakfast of bacon, eggs, and a bagel, we started our day. While Michelle washed up, I hauled in enough wood to last us through the day and tonight. As I brushed my teeth, she tied her hair up in her normal, easy-breezy, ponytail. She was even more stunningly beautiful with her copper colored hair down and framing her face, but when she wore it up, like she normally did, she had an outdoorsy and carefree look that fit her perfectly.\n\nWe sliced the remaining four apples and divided the seven carrots between us, snapping the largest one in half to not cheat either horse. We carried our bounty to the stables, Penny and Shamrock watching us with interest, their ears up and forward with their heads held high.\n\n\"Hey, girl,\" I murmured as I fed Shamrock the first slice of her apple. \"You going to miss me with I'm gone?\"\n\nI was going to miss her. I'd been working out for more than ten years in order to impress the ladies, and I knew I was stronger than the average guy, but compared to Shamrock and the power she packed, I was nothing. She nuzzled me for another piece of apple or a carrot, and I smiled as I stroked her head and neck.\n\nI glanced at Michelle. She was feeding Penny, a smile on her lips as she held her face close to the horse's neck. This was what we should be doing. Tending our horses, making love every night, and waking up in each other's arms the next morning. I smiled as I offered Shamrock a choice between a carrot and another slice of apple. She selected the apple but immediately turned for the carrot, perhaps fearing I would withdraw the offer.\n\n\"I wouldn't do that,\" I murmured as she took the carrot.\n\nI glanced at Michelle again and snorted. I worked out to increase my chances with women, but I no longer cared about women, plural. There was only one woman I cared to impress now, and she was standing ten feet from me. She turned toward me and smiled as she wrapped her arm around Penny's neck. I smiled, unable to do anything else. She made me happy, and for the first time in my life, I felt a deep contentment. I was no longer thinking about my next conquest, searching for my next bedmate. I already knew who and where she was, and I knew she would be waiting for me, her arms open in welcome.\n\nAfter Shamrock ate the last piece of carrot and realized I had no more, she purred, what Michelle called a nicker, as she nudged at me, requesting that I stroke her neck. \"Yeah, I'm going to miss you,\" I murmured as I caressed her neck.\n\nMichelle and I spent a couple hours washing the horses, applying some coat shine she found among the supplies in the tack room to make their hair glow. Once the horses were bathed and groomed, we took a break for lunch, and then started cleaning our tack. Horses were a lot of work, but it was a labor of love I didn't mind anymore. As we worked, I realized a lot of things I'd once hated and bitched about I now either enjoyed or didn't mind doing. I found it amusing I hadn't realized it until now.\n\nWe were still polishing the saddles when I heard the growl of an approaching truck. \"Sounds like Curt's here,\" I said as I began wiping my hands to get the saddle soap off, Michelle doing the same before we headed outside to meet him. \"Curt, good so see you,\" I said, offering my hand as the old man exited his truck.\n\n\"You too, Garret,\" he replied, taking my hand. \"How's the girls?\"\n\n\"Fat and spoiled.\"\n\nCurt chuckled. \"Good.\" He moseyed up to Penny, running his hands along her flanks. \"You gave her a bath?\"\n\n\"We wanted them to look good for you when you arrived,\" Michelle said.\n\nCurt nodded in approval. \"You wanna help me get them in the trailer?\"\n\n\"Sure,\" she replied.\n\nAs Curt led Shamrock past, the horse looked at me, almost as if she were sorry to be leaving. I ran my hand down her side as she walked past. When Michelle walked Penny past, I was almost sure she had tears in her eyes, and I didn't think it was from sore knees. It took Curt only moments to get the horses loaded into the trailer and secured.\n\n\"Just lock the key in the cabin. I'll get it when I come up to turn off the water and such.\"\n\n\"We'll leave it on the dining table,\" I said.\n\n\"Good enough.\"\n\n\"Thank you for letting us enjoy your beautiful cabin and use your horses for a month,\" Michelle chimed in.\n\n\"No problem, Miss. If you ever want to use it again, you just call.\"\n\nShe nodded. \"We may do that.\"\n\nHe nodded one last time. \"Have a safe flight home,\" he grunted as he turned for his truck. Curt was probably the last generation of true cowboys. He spoke little, but when he did speak, people would be wise to listen.\n\nI pulled Michelle into my side as the Curt's truck growled away, disappearing up the long drive. \"You okay?\" I asked.\n\n\"Yeah. A little bummed the horses are gone.\"\n\nI nodded in understanding but said nothing. \"I guess we should finish cleaning the saddles.\"\n\nShe nodded. \"Yeah, I guess. And we still have the blankets to do.\"\n\nOnce we finished the saddles, we went to work on the blankets, using a brush to remove the hair before washing them down using the water hose and some blanket soap. Once they were clean, we hung them over the fence to dry in the sun.\n\n\"Oof,\" Michelle grunted as she tumbled into one of the chairs. \"That was a workout!\"\n\n\"How's your knees?\"\n\n\"Better now. Moving helped.\"\n\n\"Go get a bath,\" I suggested. \"I'll hop in right behind you, then later we'll go into town and I'll buy you dinner. It doesn't seem right to make you cook on your last night here.\"\n\nShe smiled. \"Best offer I've had today,\" she said as she rose. \"We're about out of stuff to fix anyway.\" She was halfway up the steps when she turned and looked at me coyly, a small smile playing at her lips. \"I'd ask you to join me, but I'm saving you for tonight.\"\n\n\"You don't think I can go twice?\"\n\nHer smile spread. \"I certainly hope so... but tonight. It'll have to last me for a week.\"\n\n\"Well, when you put it that way...\"\n\nShe started up the steps again. \"I thought you'd understand,\" she said, not looking back, but I swear, she put more swing in her ass than normal, just to torture me.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Michelle</center>\n\nWhen Garret had suggested dinner, I thought he meant in Lolo. Instead we'd gone to Missoula and had dinner at a more upscale place that specialized in steaks. I hadn't packed anything dressy, but I did what I could with what I brought, mixing and matching jeans, blouse, and a sweater. Garret had a little easier time because he'd brought nicer clothes than I did, but The Butcher's Block was a laidback place and I didn't feel out of place.\n\nThe food and service were excellent, as was the company. As our meal was winding down, and we were sipping our wine, he watched me. He had such a hunger in his eyes that I half-expected him to sweep the dishes into the floor, rip my clothes off, and take me right there on the table in front of everyone. Lynn had been standing ready to offer her services if he'd made his move. I smiled, watching out of the Tahoe's side window as he drove us home, imagining the shocked looks of the other patrons had we engaged in erotic battle. My private smile widened at the mental slip. Not home, but the cabin. I was getting very cozy thinking about him and the cabin.\n\n\"You okay?\" he asked, pulling me from my thoughts.\n\nI looked at him, his features muddled and indistinct in the glow of the instrument panel. \"Fine, why?\"\n\n\"You're quiet.\"\n\n\"Thinking.\"\n\n\"About what?\"\n\nYou fucking me on a table in the restaurant while everyone watched. \"Nothing in particular.\"\n\nHe slammed on the brakes, hauling the Tahoe to an abrupt halt, before backing up and turning down the long dark drive.\n\n\"I miss the drive every damn time,\" he grumbled. \"Curt needs to put up a sign or something.\"\n\nI snickered. It was true he nearly drove past the drive every time, but I couldn't say anything. All the curves in the road and trees to either side looked the same. If I were driving, I'd miss it too. We should use the Tahoe's GPS and not try to rely on memory, but I always thought I'd remember where the drive was the next time.\n\n\"Yeah. A sign that says Lady Slipper Meadows or something.\"\n\nHe nodded in agreement as we drove slowly down the gravel path before rolling to a stop on the wide parking area. I looked to see if Penny and Shamrock were watching us and were okay before remembering they'd gone home. I sighed in disappointment. I didn't have time for a horse, but I damn sure wanted one now.\n\nWe tromped to the cabin. The nearest streetlight was probably ten or twelve miles away, and if it weren't for the Tahoe's powerful headlights, the darkness would be complete. He unlocked the door and led us in. As he reached for the light switch, I stilled his hand.\n\n\"No,\" I whispered. I pushed the door shut, blocking most of the light from the SUV. The cabin was slightly cool, the fire having nearly died in our absence. \"Fix the fire and join me upstairs.\"\n\n\"No lights?\"\n\nThe thought of us having only the light from the fireplace to see by, at least until the moon came up, excited me. I pulled his lips to mine. \"No lights,\" I murmured as we kissed.\n\nHe pulled me close, holding me tight as our lips caressed, my passions beginning to spool up. I still remembered how he looked at me in the restaurant, his eyes full of desire, yet with a softness I'd started noticing in the last few days. I sighed out of the kiss and slowly dragged my finger down his chest as I backed away, my thoughts consumed by the pleasures to come. Not only was he my first uncut man, he was also the most well-endowed, and the pleasures he gave me exceeded any I'd experienced before.\n\nThe layout of the cabin was simple, and with the headlights though the two windows flanking the door, I could see well enough to make it to the stairs. As I slowly walked up the steps the lights of the Tahoe disappeared, plunging the cabin into near total darkness. I continued up as I heard the thumps and scrapes as he tended the fire.\n\nI made my way to the dresser, fumbling to find the right drawer in the darkness. I'd brought one naughty nighty, but I hadn't worn it for him. Tonight, I would. My fingers touched my underwear until I felt the lace and pulled negligee from the drawer. I began to undress, wanting to be ready for him when he finished tending the fire.\n\nThe white chemise fit like a mini dress, long enough to just cover my hips and the matching panties, with a deep, plunging neckline to show off the swell of my breasts. It was my favorite of my three negligees, sexy enough to be alluring but modest enough I didn't feel like I was trying too hard.\n\nI let my hair down and settled on the bed, glad the chemise was white, making me easier to see in the dim light. I waited as the glow from the fireplace below brightened, the light from the fire spreading ahead of its warm. Though the bedroom was warmer than downstairs, I was still pimpling with gooseflesh. No matter. I'd soon be warm enough. I heard him coming up the stairs before I saw him and could just make out his shadow against the warm glow. He moved across the room but stopped.\n\n\"Holy shit... where's that been all this time?\" he murmured.\n\n\"I've been saving it for something special. I think our last night here together qualifies.\" I waited, but he made no move to join me. \"Are you coming?\"",
        "\"Almost.\"\n\nI snickered. Michael had proven he could come twice in a single session, and had done so twice. The first time was when we were fucking for the pride of our club and control of territory, and again in the meadow when we were fucking each other for information. Tonight, I was going to make Garret come twice. There was no way I was letting Lynn have all the fun.\n\n\"Come to bed,\" I purred. \"I'm cold and I need you to warm me up.\"\n\nHe began to undress, and I smiled. I couldn't see tonight, but I knew he wore boxer briefs, and they clung to him in delightfully. Not only did they highlight his assets perfectly when he was soft, but he was so big when he was erect the head of his cock peeked over the waistband. They were sexy as shit, and since he was a shower instead of a grower, I got a mini peep show every time he dressed or undressed. Combined with his perfect, sculptured physique, and the fact he didn't shave his body like some men, he was by far the most studly man I'd ever seen... anywhere... ever.\n\nHe joined me in bed, rolling me to my back, and as his lips found mine in a gentle but deeply erotic kiss, I gripped his manhood. He was already steel hard, and I spread his wetness with my thumb as we kissed.\n\n\"You are so incredibly beautiful,\" he whispered as he slowly withdrew from the kiss, his finger gently pushing back a lock of my hair.\n\nI smiled up at him, touching his lips with my fingers. I didn't want to tell him that he was beautiful, even though he was, afraid he would get weirded out because of some macho bullshit, so I did the next best thing. I pulled his lips back to mine and kissed him with everything I had.\n\nHe returned the kiss in kind, the intensity almost taking my breath. He left my lips and began to kiss his way down my body. When he reached my negligee, he licked me through the fabric as he slid his hands underneath the fabric and slowly glided them back up my body, uncovering me as he did, his touch leaving behind a crackling pleasure.\n\nI groaned softly as I moved, allowing him to work my chemise up to free my breasts from their lacy prison. He gently worked the nighty over my head, chasing it with his lips and tongue, before dropping it, no longer concerned with it once I was free of its confines. I sighed as he worked his lips down me again, my hand on the back of his head to hold his lips to my breast as he licked and kissed, causing me to move for a different reason.\n\nAfter feasting on my breasts, he moved on, traveling lower, and I began to pant in anticipation. He had the most exquisitely skilled lips and tongue, and he used them on me with devastating effect night after night. As he reached the tiny patch of material that covered my most intimate area, he continued past, kissing down my leg while the panties followed in slow pursuit.\n\nHe reached my feet and sucked on my big toe, making me squirm and moan as he slipped the fabric from first one leg, then the other. When he left my feet and began licking his way back to my center, I turned in the bed. As he began to explore my flower, he rolled to his back, drawing me over with him. I settled into him, taking him into my mouth while slowly pumping him with my fist.\n\nI couldn't hope to take him all, so I swallowed what I could and kissed along the outside for the rest. We pleasured each other for many long moments, grunting and sighing as we gave and took pleasure. He sensed my approaching orgasm and tightened his grip on my hips as his tongue fluttered and caressed. He pinched my clit with his lips, lighting me up with pleasure and making me moan in delight. I tried to pull away, but he held me, tightening his grip even more.\n\n\"No! Please! I want to come with you inside me!\" I begged, trying to free myself from the exquisite torture of his kiss.\n\nHe released me and I quickly turned, kissing him furiously, tasting myself on his lips as I settled over him. Taking him into my core, I groaned as he stretched me, the erotic ache and searing pleasure of his initial passage indistinguishable from each other. The first plunge wasn't quite enough to push me over the edge, but his rapid series of four or five hard strokes did.\n\nI became incandescent in pleasure as I reared up, my head tilted back as my mouth opened in a silent scream. He held my hips, forcing me down on his cock to drive himself as deep as possible. I relaxed with an explosive gasp as my orgasm washed out of me. I fell forward, pressing myself into him, desperate for the taste of his lips. We kissed, our tongues dancing as he began to thrust into me again, causing me to moan low and deep into his mouth.\n\n<center>-oOo-</center>\n\n\"Come on, baby. I want you to come,\" Garret panted as he slammed into me from behind. \"I want to feel you come on my cock.\"\n\nI moaned. We'd been at it for hours, for days, maybe even for weeks. I didn't know and didn't care. I never wanted this moment to end. Garret was every bit the equal of Michael as a lover, and I'd never want another. He'd already come once, pounding into me from behind as we lay on our sides, until he'd barked loudly, holding me tight as he grunted with each slow stroke. We'd laid still, his cock still inside as he panted, but I wanted to make him come again in a secret desire to prove I was as desirable as Lynn, my hard fucking, nasty talking, alter-ego.\n\nAs his breathing began to slow, I pushed him to his back, rolled on top of him, and kissed him thoroughly. He'd responded in kind, and though he'd softened somewhat, when I took him inside me again, and softly begged him to keep fucking me, he'd quickly returned to his former hardness. That had been sometime last year, and he was still fucking me.\n\nI'd already come three times, but I could feel a fourth climax lurking just beyond my reach. \"Make me come again,\" I begged. \"Please make me come again.\"\n\nGarret and Michelle weren't as athletic as Lynn and Michael, but that didn't mean Garret was any less of a fucking machine. He pulled out of me, wiping his face as he did, and pushed my hips so that I tumbled to my side. He rolled me to my back, grabbed my legs, pulled me back to him, and lunged into me again.\n\n\"I'm going to make you come,\" he growled as he hovered over me, propped on his elbows, his arms tucked in tight at my sides. I loved it when he wrapped me up like that, and my orgasm inched closer.\n\n\"Yes... yes...\" I whispered. \"Keep fucking me until I come.\"\n\nWe were in the sprint to the finish, and he slammed into me, grunting and snuffling into my neck. I gripped him tight, his flesh damp with sweat as he tried to drive me through the bed with his hips.\n\n\"Fuck! Shit! You're going to make me come again! Fuck!\" he grunted after a long moment.\n\nHearing his cry of erotic distress made my passions flair, and my rising orgasm swelled. He began to slow his pounding hips, trying to stall his orgasm.\n\nI spurred him with my heels. \"Faster!\" I gasped. \"Don't stop! Please don't stop! You're going to make me come!\"\n\nHe began driving into me with purpose. \"I'm going to come!\" he grunted.\n\n\"Don't stop!\"\n\n\"I can't hold it!\"\n\n\"Oh God! Please don't stop!\"\n\n\"Fuck! Fuck! Fuck! I'm coming! Fuck!\" he roared to the ceiling as he reared up on his massively strong arms, his back arching in carnal bliss.\n\nI clung to him as he lifted my back from the bed. \"Please don't stop!\" I squeaked as I wrestled with my orgasm, trying to draw it to me. I was so close.\n\nWe dropped back to the bed, and he began pounding the shit out of me as he bellowed, a guttural roar of pain and pleasure. He was crushing me into the bed with his weight, but I pulled him tighter still. He bellowed into the pillow again, and amazingly, began to fuck me even harder, his hands flexing under my ass as he made me his.\n\nEven in the exquisite torture of orgasm, he protected me, channeling his cry into the pillow to not deafen me. No man had ever tried so hard, given so much, to please me. His animal-like cry of pleasure, the slap of our flesh as he fucked me, the feel of his magnificent cock inside me, all combined to overwhelm me.\n\n\"I'm coming!\" I wailed, gripping him as tightly as I could, afraid if I let him go, I'd be forever lost in a sea of pleasure.\n\nAnd still he fucked me. I wailed again, my inarticulate cry of pleasure joining with his. And then his pounding hips were frozen as he pushed deep into me and shivered. I came out from under my orgasm just as he began to relax.\n\nI flexed, squeezing his cock. He snarled and thrust into me with three hard, fast plunges before stilling his hips again. \"Shit...\" he sighed as another hard shudder passed though him.\n\nI flexed again, causing him to grunt low and deep, but this time he only thrust once, and there was no shudder.\n\nWe lay still, his cock still inside me as he blew out a long, cleansing breath and found my lips. \"Fuck,\" he sighed.\n\n\"What?\" I whispered, delighted with his performance.\n\n\"You fucking tried to kill me.\"\n\nI smiled in the darkness. \"You didn't enjoy it?\"\n\nA ghost of a smile played across his lips. \"You know I did. You're amazing.\"\n\nI pulled his lips back to mine. He was pretty fucking amazing himself.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Garret</center>\n\nIt was a big step, but it was one I was willing, anxious even, to make. \"What do you think?\" I asked.\n\nMichelle looked around. \"I like it, but are you sure you want to do this?\"\n\nI smiled, pulling her in for a quick kiss. \"Yes.\"\n\nIt had been a couple of months since we'd returned from Montana and our relationship was better than ever. So good in fact, I was apartment shopping.\n\nThe first week we were back I realized seeing Michelle only between Friday night and Sunday evening wasn't enough, not nearly enough, and Wednesday I'd driven the hour from Seattle to Clear Lake in my Porsche. I hadn't gone with the intent to spend the night, but I had.\n\nThat weekend I'd spent Sunday night with her as well and driven into work Monday morning. Monday evening, even though we'd talked for more than an hour on the phone, I'd missed her desperately. I flew out Tuesday morning for business, but when I returned Wednesday evening, I'd gone to her place directly from the airport. Over the past four weeks, I'd spent more nights at her house than I had mine.\n\nThere was no way she could, or would, leave her farm to join me in Seattle, so I was coming to her. We'd talked about me moving in with her but decided that was too big of a step too soon. I think we were both afraid our relationship was based on sex, as all my relationships in the past had been, and we didn't want to make the commitment only to have it end in a few months. So, instead, I was renting an apartment in Mt. Vernon, reducing the distance between us from almost an hour to under fifteen minutes.\n\nI was keeping my house in Seattle for now, but what she didn't know was I was having some minor cosmetic work done to make it ready to sell. When we'd returned from the small cabin in the woods, I was also concerned that the leopard couldn't change his spots and I would fall back into my old ways. After another month, I knew that wouldn't happen and was fully committed to this relationship and none other. I didn't want to pressure her, but if things continued as they were, my next move would be into her house.\n\nThere was thirty-acre plot adjoining her farm that she thought she could talk the owner into selling. If we moved in together, and the lot could be bought, I was buying it and having it fenced for horses.\n\n\"Good,\" she said. \"I like it.\"\n\n\"That's good, since you're going to be spending some nights here, right?\"\n\n\"Just try to keep me away.\"\n\n\"Let me go sign the paperwork.\"\n\nThe fifty-minute commute was going to suck, but it didn't suck as much as not seeing her did. I was willing to make the drive to see her every night. I smiled as we walked, hand in hand, to the manager's office.\n\nThe apartment was less than a third the size of my house, but I didn't care about appearances as much anymore. It had everything I needed and offered something my big house in Seattle didn't... Michelle close by.\n\nIt only took twenty minutes for me to sign the six-month lease and collect the keys. \"Dinner?\" I asked as I opened the door to my car.\n\n\"Home or out?\" she asked before she dropped into my low-slug car.\n\n\"Out,\" I suggested. \"Will tonight be the night?\"\n\nShe snickered, slapped at me playfully, and settled into the rich leather passenger seat. She had a wildly active imagination, as I'd discovered in Montana, but she was even more creative now that we were home. On the flight back to Seattle, she'd whispered in my ear how she'd imagined us fucking in a crowded restaurant, sparing no details. She did it, the bitch, just to make me uncomfortable, forcing me to sit in the first-class seat with a raging erection. I'd already had my brush with the law from fucking in public, but even though I knew we'd never do it, I still teased her about it. However, in the privacy of her home, the sky was the limit.\n\nShe lived in a modest, perhaps fifteen hundred square foot, home. The house was older and needed some work, but it seemed to suit her perfectly. It had belonged to the older couple she'd bought the acreage from to start her tulip farm, and she was slowly addressing issues with the house when she had the time, energy, and money.\n\nI found it humorous that she had a modern, very clean, equipment shed, along with a large and beautiful greenhouse where she worked to hybridize her tulips, but she lived in a slightly tatty house. She'd explained that the greenhouse and shed paid the bills and were more important than living in a nice house. I'd first offered to pay to have people come in and do the necessary work to finish the renovations on her house, and then offered to 'loan' her the money for the same, but she'd flatly refused both offers, claiming she didn't want to feel indebted to me. We'd finally found a compromise where I was helping her do the things we could. I wasn't all that handy with a hammer and saw, but there were things I could do, and I was learning as I went.\n\nIn hindsight, I'd realized, she'd given me a test run on something simple to see if I'd do more harm than good once I had tool in hand. We'd used her Ford pickup and driven to the local home improvement warehouse, where she'd bought some shelving for her shed, and I'd put them together for her. It wasn't easy to stay focused and on task, especially considering after I completed the first set of shelving, she took off her blouse, the second, her pants, and the third her underwear. We tested the shelves strength, stability, and my assembly, by having her hang onto them as I banged her from behind.\n\nFortunately, they passed the test, and she decided I might be useful after all. We started tackling one project a weekend. We were making progress, if slowly, mainly because the work kept getting interrupted.\n\nThe first project was when I helped her paint a room in her house, and she insisted, insisted, that I had to do it wearing only pants. I thought she'd mean shirtless and had agreed, but she she'd meant far more than that. Not only did she want me shirtless, but I wasn't to wear underwear, and my pants had to be unsnapped with my cock hanging out. I couldn't simply paint in the nude, which would have been easier, she wanted it exactly as she described. She was clearly playing out some handy-man fantasy, and since I could refuse her nothing, I'd complied.\n\nIt took an entire day to do what shouldn't have taken more than four or five hours. Not only did my pants keep sliding down as I moved, but before the room was done, we'd made a hell of a mess. Thankfully there was a thick sheet of plastic covering the floor to protect the carpet, since we spilled paint and got it everywhere from rolling around in it. Later, in the shower, getting the paint off each other had been just as much fun, and now I couldn't walk down a paint aisle without smiling.\n\nWe could get a lot more projects done if we could keep our hands off each other, but Michelle didn't seem to mind the slow place, and I sure as hell didn't.\n\nI pulled into Ciao, an Italian place we'd found that we liked, and I escorted her inside. We asked for what we considered our table, a table for two tucked into a dim corner away from where most people wanted to sit.\n\nWhen our wine arrived, I reached both hands across the table, and she took them with a smile. \"Thank you for going with me today.\"\n\nHer smile widened. \"My pleasure. I'm glad to have you closer. I felt guilty, making you drive all that way all the time.\"\n\nI shrugged. \"I'm still doing it.\"\n\n\"Yeah, but it feels different now. You'll be living here and driving to work.\"\n\nI snickered. \"How's that different than what I'm doing now?\"\n\n\"I don't know. It just is. Lots of people commute to Seattle. Before, I felt like you were coming to see me. I guess I felt guilty that you came here ten times as often as I was going to you.\"\n\n\"I wouldn't have done it if I hadn't wanted to.\"\n\nShe nodded. \"I know. But this is better. You're sure you won't get tired of the drive?\"\n\nI shook my head. My house was on the south side of Seattle, and the office was on the north side. After I moved, I would be coming from the north, and I wouldn't have to battle traffic all the way. The commute might be a little longer, but it would be far easier.\n\n\"It's only fifteen or twenty minutes more than I'm driving now, and I won't have to deal with so much rush hour traffic. It's totally worth it.\"\n\n\"Is that the only reason?\" she asked. She was trying to hide her teasing smile but failing.\n\n\"That's it,\" I deadpanned.\n\nShe harrumphed but smiled. She knew better.\n\nWe finished our meal, paid, and drove back to her house. It was a lovely, late June, evening. Her crop of tulips had been stunningly beautiful, and even though their peak was past, seeing the riot of color almost as far as the eye could see was breathtaking. Everyone needed to walk through a hundred acres of tulips in bloom at least once in their life. Soon she would begin harvesting the bulbs for shipment, but until then, she was in one of her seasonal lulls.\n\nWe walked among the flowers, hand in hand, as she checked the plants. It would be dark soon, the sun low on the horizon. She paused to inspect a bloom, and when she straightened, I caught her hand again, slowly pulled her close, and carefully let her hair down.\n\nThe ruddy glow of the setting sun behind her made her glow, her copper colored hair making her a living sun goddess. She was so achingly beautiful, becoming more so every day. I cupped her face and gently brushed her lips with mine. I held her gaze as she held mine. Lynn still came out and played occasionally, but Michelle seemed to have conquered that demon. She no longer feared her alter-ego and accepted it as part of herself.\n\n\"I love you,\" I whispered.\n\nHer eyes widened. \"What?\"\n\nI smiled slightly at her surprise. I'd been wanting to tell her I was falling for her, but I'd been waiting for the right moment. Now was the perfect time. Even standing in a field of flowers, she was the most beautiful thing in the world, her hair aflame as she seemed to glow with an inner light.\n\n\"I said I love you,\" I repeated.\n\nShe attempted to look away, but I held her face, forcing her look at me. \"Do you mean that?\" she finally asked.\n\n\"Yes.\"\n\nShe continued to hold my gaze. \"You've only known me a couple of months.\"\n\n\"I know.\"\n\nShe licked her lips. \"But with everything you said you've done...\"\n\nI'd hidden nothing from her and had answered every question she'd asked about my past. I hadn't gone into details, and she hadn't asked for them, but she knew about the women I'd fucked, how I'd once used women and then discarded them when I was done.",
        "\"I didn't know at the time, but I was looking for you.\"\n\nHer face crumpled as if she was about to cry. \"And now that you've found me?\"\n\n\"I'm finished looking.\"\n\nShe held my gaze for a moment. \"How can you be sure?\"\n\nI released her face, my heart sinking. I did love her, but it appeared she didn't love me. \"How can you be sure of anything in this life?\"\n\n\"You can't,\" she murmured.\n\n\"You can't, but I'm as sure of this as anything I've ever done, ever said.\"\n\nShe nodded slowly, saying nothing. I'd wait on her. I'd wait for her until I was sure she would never love me, but until then, I'd do everything in my power, bear any burden, pay any price, to earn her love.\n\nAs I watched, tears began to well in her eyes. I steeled myself to accept her rejection like a man, not wanting her to see how much the rejection would hurt me. I didn't want her love out of pity.\n\n\"I think I love you too.\"\n\n\"It's okay. I'll give... Wait. What?\" I asked, my heart suddenly pounding.\n\n\"I said I think I love you too.\"\n\nI stood for a moment, staring at her, struck mute by surprise. Pain and sadness instantly morphed into joy and excitement. I pulled her to me and kissed her as I'd never kissed a woman before, my heart swelling to overflowing with feelings for her. I thought I loved her before? Hearing her confession of love caused the fire burning inside me to become a raging, uncontrollable inferno. I'd never let her go!\n\nI pulled back from the kiss and held her tight, trying to collect myself. She squirmed in my arms and I released her. She pulled back and smiled up me, her hand touching my face with such gentleness. I tipped my face into it, and after a moment, took it and pulled her palm to my lips.\n\n\"I love you, Michelle Lynn Abbot,\" I whispered.\n\n\"And I love you, Garret Michael Lemay.\"\n\n\"I promise I'll never hurt you. You've changed me and made me a better person.\"\n\nShe nodded slowly, her smile soft. \"And you've helped me accept who I am.\"\n\nI caressed her cheek. \"You're perfect just as you are. Never change.\"\n\nHer eyes crinkled. I thought maybe she was going to cry, but she smiled. \"I don't know about that, but you've\u2014\"\n\n\"You're perfect,\" I repeated, cutting her off. \"Don't let anyone tell you otherwise, ever.\" A single tear crept down her cheek and I kissed it away. \"No tears. No one so beautiful should ever cry.\"\n\nShe sniffed and looked away. \"Stop, or you'll make me cry.\"\n\nI gently turned her face back to me. \"I'll never make you cry.\"\n\nShe nodded as she sniffed again. \"I believe you.\"\n\nI slowly drew her back to me. \"I love you,\" I whispered as our lip came together.\n\n\"I love you too,\" she breathed as they touched.\n\nI held her, surrounded by nature's splendor, kissing the woman I loved as the sun slowly sank below the horizon.\n\n<center>.</center>\n\n<center>.</center>\n\n<center>.</center>\n\n<center>Brooklyn</center>\n\n\"This is Garret,\" the man's voice panted.\n\n\"Mr. Lemay, Brooklyn Lancaster. Am I interrupting?\"\n\nGarret chucked. \"Yes, and thank God for that. You caught me in the middle of moving.\"\n\n\"If this is a bad time, I can call you back.\"\n\n\"No, this is fine. The movers are gone, and Michelle and I are trying to sort this sh... crap out and get it all put away.\"\n\n\"I won't keep you long. I'm calling to find out how things went between you and Ms. Abbot.\"\n\nHe chuckled again. \"I'll be honest with you, I wasn't pleased with you for sticking me out in some God forsaken place in the middle of nowhere, but it all worked out.\"\n\nI smiled. It appeared my plan to shake him out of his comfort zone had worked. \"So you're happy with my services?\"\n\n\"Extremely happy.\" He paused for a moment. \"It was the best thing that could have happened to me.\"\n\n\"That's good to\u2014\"\n\n\"Is that Brooklyn?\" I heard a female voice call in the background.\n\n\"Yes,\" Garret said, obviously holding the phone away from his face.\n\n\"Let me speak to her!\"\n\n\"I'm sorry, what were you saying?\" Garret asked.\n\n\"I was going to say that I'm glad it worked out for you.\"\n\n\"It did. I couldn't be happier.\"\n\n\"May I count on you for a reference and referrals?\"\n\n\"Absolutely.\"\n\n\"Excellent. Since you're busy, I won't keep you.\"\n\n\"Before you go, Michelle wants to talk to you. Here she is.\"\n\n\"Brooklyn! Michelle Abbot! How are you?\"\n\nI smiled. I'd liked Michelle before, but at no time during our interview did she sound so alive and animated. \"I'm doing well, Ms. Abbot. I hope you're doing the same.\"\n\n\"Great! Thank you so much for everything you did.\"\n\n\"It was my pleasure, Ms. Abbot.\"\n\n\"Call me Michelle.\"\n\n\"Very well, Michelle. You're happy?\"\n\n\"I couldn't be happier. Don't tell Garret this because it'll go to his head, but he's perfect!\"\n\nShe giggled and knew that statement was entirely for his benefit. \"Your secret is safe with me.\"\n\n\"May I tell you something?\" she asked, her tone suddenly serious.\n\n\"Of course.\"\n\nShe didn't speak for a moment. I waited, giving her time to compose her thoughts. \"You've fixed me. You and Garret. I had... some issues, some things about my life I wasn't proud of. Garret... he's shown me that I don't have to be ashamed of who I am.\" She stopped, and I was about to speak when she continued. \"I can never repay you for that.\"\n\n\"Ms. Abbot, Michelle, all I did was make the introductions. Whatever you and Mr. Lemay discovered about yourselves, you did all on your own.\"\n\n\"Maybe, but somehow you found the one guy in the world that I feel can understand me, and for that, I will be forever in your debt.\"\n\n\"Nonsense. I was well paid for my services. You owe me nothing else.\" I paused and then smiled. \"Having said that, I'm always looking for companions. If you have any friends you think...\"\n\nShe snickered. \"I have one or two. Maybe lightening will strike a second and third time?\"\n\n\"As I explained to you, I can make no promises, but nothing ventured, nothing gained, right?\"\n\nI could almost see her nodding. \"Right! I just wanted to tell you thank you, for everything.\"\n\n\"It was my pleasure, Ms. Abbot.\"\n\n\"Here's Garret again.\"\n\n\"Let me repeat what Michelle said,\" Garret said when he came on the line. \"Thank you for everything.\"\n\n\"You paid me well, Mr. Lemay. Think nothing more of it.\"\n\n\"I understand. I know I wasn't easy, and in hindsight, I'm not proud of how I treated that first girl... what was her name?\"\n\n\"Randi Carson.\"\n\n\"Right, Randi. She just wasn't right for me.\"\n\n\"But Michelle is?\"\n\n\"She's the one I've been looking for. I don't know how you did it, but somehow, you did. You found the needle in the haystack, and she was practically in my backyard.\"\n\n\"It doesn't normally work out that way, but I was lucky this time.\"\n\n\"I think it as less to do with luck than some magic you do, but whatever the reason, I'll take it.\"\n\n\"I'm glad you're happy and satisfied with my services.\"\n\n\"Very happy and very satisfied. If you need anything from me, from either of us, you have my number.\"\n\n\"Thank you, Mr. Lemay, for the offer.\"\n\n\"It's my pleasure, Brooklyn.\"\n\n\"Good luck with you move.\"\n\nHe chuckled. \"Yeah, thanks. Want to come help? We have pizza.\"\n\nI snickered. The Garret Lemay I'd first met appeared to be no more. Michelle had tamed the beast. \"I would, but I have other clients waiting.\"\n\n\"I understand. That's more important anyway.\"\n\n\"Thank you for understanding. Enjoy the rest of your move.\"\n\nHe chuckled. \"Yeah. We're having a blast.\"\n\nWe hung up and I leaned back in my seat, thinking. They both seemed very happy, grateful even to have found each other. I had no crystal ball, but I had a feeling this was a pairing that was going to last. Michelle's comment was interesting, but it was clear they'd provided something the other needed.\n\nI turned my attention back to work, a smile playing on my lips as I began reviewing the latest entries into my app. I had the best job in the world. I was well paid to help people find happiness. Who wouldn't love a job like that, and I very much did."
    ],
    "authorname": "SanityCheck",
    "tags": [
        "billionaire",
        "holiday",
        "millionaire",
        "montana",
        "romance",
        "romantic",
        "rough sex",
        "wilderness"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/matchmaker-05-may"
}