{
    "title": "It All Works Out In The End",
    "pages": [
        "AUTHORS NOTE: Quite honestly, this story took a different turn from where I originally pictured it to where it ended up. Not a ton of sex in it, but lots of build up to (hopefully) a satisfying conclusion.\n\n-----------------------------------------------------------------------------------------\n\nKids do stupid things.\n\nIt's a saying you didn't already know. My parents told me. Your parents told you. Everyone has heard it. \n\nIt's a saying backed up in reality. Everyone has done something idiotic, especially in their younger years. As a DWI lawyer on the radio said, \"We're human, we invented screwing up a good thing.\"\n\nIn my case (my name is Tim), I was 19 years old and my brother, Tony, was 21, and the situation found us camping with our friends. In truth, they were Tony's friends as I really didn't have very many, but thankfully my big bro always kept me under his wing. \n\nWhile it wasn't like I was some sort of social outcast, I was just shy. Opposingly, Tony was always the popular, \"party-guy\" in school so, when we went camping, of course booze was involved. And, yes, I let them talk me into things I normally wouldn't be doing. \n\nLike getting drunk. \n\nReally drunk.\n\nBeing drunk led to performing feats of strength. Performing feats of strength lead to Tony falling over on top of me, into the fire. He burned his back up pretty bad and my hands were basically toast. Plus, did I mention that, in addition to the awful 3rd degree burns on my hands, the bones in them (and those of both forearms) were either crushed or fractured due to the cinder-block I had them in?\n\nLike I said, stupid.\n\nWe were both in the hospital for a couple of days (I think Tony faked additional pain to keep me company) and were discharged into our parents care. Tony would be fully healed within a couple of weeks and was basically \"fine\" after only about 6 days. I was in much worse shape.\n\nThe good news is that our parents were understanding and, as a helpful side note, pretty wealthy. Neither of them quit their jobs, instead they hired health aids to come and work with us. For Tony, that meant just having his bandages changed a couple times a day. For me, that meant I needed help with pretty much everything.\n\nWhen I made the embarrassing realization that I couldn't even wipe my own ass after pooping I begged my parents to install a bidet in my bathroom. The logistics of that, however, were such that it would have taken months of permits, plumbing, construction, etc.. Plus, even a bidet involves wiping of some sort. Simply put, not practical... not worth it... and the health aid was hired.\n\nI am sure your head is now going wild with visions of a slutty 25-year-old with big tits, a tiny waist, a nice ass and a waxed landing strip. But, reality is different from porn. Instead, our nurse was Mrs. Gentile. She was a very nice, middle-aged widow that I think was of Italian heritage. Not overweight but certainly not in-shape. Not ugly but certainly not magazine-cover ready. Not unattractive but, at my 19-years-old, certainly not my type. Now, reflecting on this time of my life in hindsight, she was a very typical lower-middle-class individual. She came in, did her job and left. There was nothing else. Life had beaten her up to the point that she was no longer hungry or fiesty. She just kinda'... was.\n\nOf course, she realized the different situation she was in. In general, her clients were the elderly who were either rehabbing from a procedure or were basically left to themselves by their kin, if there even were kin to speak of. She made silly comments here and there about how helping me get bathed was the highlight of her day or that she should hook her daughter up with me but it was all in jest, the relationship was professional.\n\nUntil it wasn't.\n\nIn that there was no longer a relationship.\n\nMrs. Gentile had a heart attack and died one day while at our house. I found out later she had a long history of smoking and only had recently just quit after a previous heart attack. I was sad, a little bit at least, I didn't know her that well but it is still rarely a positive occurrence to have someone you know pass away. But, my life would still go on. I was still young with plenty of time in front of me but also, in the short term, still very much in need of an aid.\n\nThis is where my life changed.\n\nAndrea, Mrs. Gentile's daughter, came to our house after the funeral to pick up some items of her mother's that had been left the day she died. She was visibly shaken at the services and, while my parents said that there was no rush, she said that she would rather just take care of things as quickly as possible.\n\nWhile shaken at the services, at our house she totally broke down.\n\nWe learned that Andrea was now on her own. Like, completely on her own. She was going to night-school to be a nurse and was already registered as an aid like her mom but, because of her limited hours of availability, was unable to get full-time hours as most day-shifts were full of workers who could also work night-shifts. She was about to lose the apartment they shared... life was falling apart.\n\nI felt for her but, in my delusion of never having really felt any sort of hardship in my life, I figured it just kinda' sucked to be her and she would have to figure things out.\n\nThankfully, my parents are much better people than me.\n\nBy the end of the conversation, a deal had been struck. Andrea would stay with us in the house, she would be my nurse during the day and would go to night-school to finish her degree. Many tears were shed between her and my mother during the entire exchange and I was left bewildered and a bit upset in that everything was done without a bit of my input. I mean, shouldn't I have gotten a say? Not to say I had any input in hiring her mom, just that it felt different this time around. It was one thing to have your ass-wiped by a matronly nurse, something completely different when your nurse is only, as it turned out, 1 year older than you.\n\nAndrea, like her mom, was just kinda' a plain sort of every-day girl though I couldn't tell much about her physically the first couple of times we met. At the funeral she was draped in a black shawl/poncho/sari type of thing and on moving day she was wearing sweats and a baggy t-shirt. She didn't appear to be wearing much, if any, makeup and had her longer, dark-brown hair pulled back in a simple pony-tail both days.\n\nAs far as living at our house, she moved into Tony's room. Tony had been itching to move into our parents basement for some time (a cliche, I know) but with the opportunity presented he took his chance. The two rooms were connected by a jack-and-jill bathroom and was thought to be convenient because of her having to help me in the bathroom anyhow. I personally thought it just made an awkward situation even worse but my parents would hear none of my complaints. Besides, Andrea seemed to agree with them that it made the most sense.\n\nThe day she moved in I refused to go to the bathroom, embarrassed at the prospect of the help. I figure Andrea was happy to put things off for a while but was surprised when she came into my room later in the evening to see if I needed any assistance.\n\n\"Nope, good on my end,\" I responded to her inquiry, trying to keep my focus on the TV in my room.\n\n\"Are you sure? Not before bed?\"\n\n\"Nope, I'm good.\"\n\nI told myself that I was being helpful but am sure that I instead came across as an unwelcoming jerk.\n\n\"Okay, well, let me know.\"\n\nShe was very sweet about it and left me in my room, my bladder beginning to feel full and anxiety at a full alert.\n\n...yet I waited.\n\nI waited for 3 solid hours.\n\nIt was 2:30am and I had not heard any noise or stirring coming out of Andrea's room for at least 45 minutes. Even then it had just been the sound of tossing-and-turning as she was most likely trying to get acclimated to sleeping in a new space.\n\nAs quietly as I could, I snuck into the bathroom that adjoined our rooms, thankful that she had not closed the door when she left my room previously. It turned out she had not closed her door either and, while I was tempted to peek in and see if she was asleep, I resisted the urge, positive that my mere presence would wake her up and out me as a perverted creep.\n\nThough, asleep or not, I did still have a problem.\n\nIt is tough to describe just how useless my hands and arms were at that point in my life. The doctors told me that if I just burned them or just broke the bones it would have been a much easier process. However, because I did both I was rendered pretty much without the use of them.\n\nI had taken to wearing a very loose pair of shorts during the daytime hours and going \"Porky Pig\" (shirt, but nothing on the bottom) at night. Because Andrea had been in the house, I had actually put on the shorts and a pair of underwear. It actually wasn't that difficult to get them on, I simply put the two clubs of my arms in through the leg holes just enough to get them up past my knees and then shimmied on the rug until I got them approximately into place. I figured that to get them off I would just do things in reverse and, for the shorts, that was true. For the underwear it was a bit different. As they were so tight (boxer briefs) I literally found myself scooting around the rug like a dog trying to scratch its ass. During the entire charade the pressure on my bladder was practically becoming unbearable and I just could not get the underwear off. I was about to wet my pants for the first time since I was a toddler.\n\n\"Hey, are you okay?\"\n\nI froze to find a dreary-eyed Andrea standing in the doorway of the bathroom. She was wearing the same clothes I had seen her in all day and her eyes were puffy. She stood in silence for a moment before taking a few steps toward me.\n\n\"I'm here to help you, ya' know?\"\n\nI bedgrudly grunted an okay and she helped me to my feet. She knew exactly what was going on. I rightfully felt like an idiot.\n\n\"So, what's your deal? Just gotta' pee?\"\n\n\"Yeah,\" I responded in a strained voice, \"I really gotta' go.\"\n\n\"Sit or stand?\"\n\n\"Huh?\" \n\n\"Do you want to sit or stand?\"\n\n\"Uhm... sit, I guess.\" \n\nI had tried peeing while standing but found my \"aiming\" capabilities with my club-arms wasn't the best. Sitting was the much safer option. Plus, I admit even as she pulled my underwear down for me, I was embarrassed to be standing in front of her.\n\nAndrea stepped back and stood in the door frame going to her room. She had a bit of a lost look on her face. Not from being woken up, just her mind elsewhere. I didn't know what to say.\n\nI had stopped peeing but was just sitting there, not sure what to do.\n\n\"All set?\"\n\n\"Uhm, yeah.\"\n\n\"You sure you want your underwear back on?\" Katie looked absolutely exhausted and it was obvious she just wanted to go back to bed. \"It might be easier if you just leave them off.\"\n\n\"Yeah. I normally do that. Not sure why I decided to go this route today.\"\n\n\"Probably because I am here,\" Andrea responded with a tired smirk. \"You need help getting back into bed?\"\n\nUnfortunately, I did. My parents had taken to getting me under the covers and then I wiggled out of my shorts once in bed, but now, going back into bed with nothing on, I needed her help covering me up.\n\n\"Yeah,\" I replied with a resigned sigh.\n\nI got off the toilet and Andrea, without my preparation for it, grabbed a piece of toilet paper and wrapped it around the head of my dick, drying up the last drip that was inevitably going to come out. To say that I was ill-prepared for the sensation of a foreign hand on my penis was an understatement, I literally stopped in my tracks and lost my breath at the sensation.\n\n\"Didn't mean to catch you off guard,\" she said matter-of-a-factly. \"I have only worked with older guys and not wiping means wet sheets.\" She tossed the paper in the toilet and flushed it. \"Better safe than sorry, you know?\"\n\nI just kinda' blinked my approval, my overall reaction still one of shock. I literally could not move or react otherwise.\n\n\"So... bed?\" Andrea had just finished washing her hands and acknowledged the fact that I had not moved in a few seconds and encouraged me with a gentle hand on my back to make my way to my bedroom. Once there, I crawled into bed and she covered me up just like any parent or nurse would do with someone in their care.\n\nBut she didn't then just leave.\n\nAndrea still had a lost look on her face and stared blankly at the poster-clad walls of my room before abruptly sitting down on my bed.\n\n\"I know this is going to sound weird but, would it be okay if I slept in here tonight?\"\n\nI didn't know what to say, after all, we didn't know each other and I had no pants on.\n\nAndrea sensed my hesitation. \"Sorry, it was a dumb ask,\" she said as she began to turn around.\n\n\"No, wait,\" I responded as I began to shift myself over to the far side of the bed. \"Do you want to grab my shorts?\"\n\n\"No difference,\" she said as she began to crawl under the covers. \"I've already seen you and think I am going to have to learn to trust you. Thanks for doing this.\"\n\nAndrea was out like a light.\n\nI barely slept a wink.\n\nI would have actually said that I didn't sleep at all except for the fact that I did wake up at a certain point in the late morning. I turned to find that she had already left my bed and left my room. I was alone under the covers. And it was a good thing too, as a very familiar occurrence for guys my age was in full effect and I was sporting major morning-wood. Though, it wasn't the end of the world. I stayed in bed for a while and let it go down a bit before determining that Andrea was not around and it was \"safe\" to get out of bed. Still groggy from a very poor night's sleep I stopped in front of the mirror to admire the chub I still had dangling down by my legs. \n\n\"Impressive,\" I said in a loud breathy whisper and gave myself a sleepy wink in the mirror.\n\nI did a couple of hip thrusts in exaggerated fashion as I attempted to wake myself up for the day. It was kind of fun, actually, and it was nice to feel normal and in my male element after being a bit on edge the previous day, with Andrea and all.\n\n\"Typical morning workout for you?\"\n\nHer voice startled me to the point that I literally jumped in place, turning around to face her in a fighting stance. She had a smile on her face though the bags under her eyes and overall weary look that betrayed what appeared to be an attempt at energy and humor.\n\n\"I didn't know you were up here,\" I croaked out, my heart still racing.\n\n\"Yeah, kinda' figured as much. Just checking in to see if you have any sort of morning routine for your business or anything.\" She threw a thumb back over her shoulder into the bathroom. \n\n\"No, I'm good.\"\n\n\"Okay.\"\n\nShe spun around and walked away and I, for a split second was able to catch my breath before she popped her head back out. \n\n\"Sorry if it seems like I am pestering you. Definitely not my intention. I have just noticed that some of the men I have worked with in the past have very defined schedules or need prodding to do anything at all. Then again, you aren't 90.\"\n\nI chuckled and responded.\n\n\"No, it's fine. I appreciate it. Sorry I have been acting so weird. You're 20, right? It's just somewhat strange to have someone helping me that is only a year older than I am.\"\n\n\"Just turned 20, actually. I didn't realize you were 19. When is your birthday?\"\n\n\"4 months.\"\n\n\"Wow, practically the same age. Makes sense. You are obviously not 90.\"\n\nI saw as she took a moment to size me up, taking a very obvious glance at my dick which, much to my dismay, had returned to its normal, flaccid size as opposed to my early morning chubbiness.\n\n\"Nope, not 90. Anyhow, thanks for the offer and I will try to be a more gracious patient for you.\"\n\n\"Thanks. And, thanks for last night, letting me crash with you. I don't know of any guys who would admit to it, but sometimes you just need to be with someone else, you know?\"\n\n\"I get it. Any time.\"\n\nAndrea smiled and hesitated for a bit. I felt like she wanted to possibly just give me a hug but then remembered that I had no shorts on. Instead, after that brief hesitation, she turned and walked away. I hurried to the bathroom door and watched her make the final few steps into Tony's... well, into her room. She was still wearing the baggy t-shirt but had taken off the sweats. Though I only caught a glance, she really had nice legs.\n\n---------------------------------\n\nI retrieved the shorts I had wriggled out of the previous night and got them back on myself. Andrea was right, with having already seen me the night before, there was no reason to go crazy like the day before covering up but I still wasn't crazy about always having my dong on display.\n\nMaking my way down into the kitchen I quickly realized that nobody was home. My parents were obviously at work and Tony had made his hurried escape obvious based on his standard mess left over the counters. Not able to get myself anything, I just sat there for a while.\n\n... and sat.\n\nI admit that I thought that Andrea was going to be following me downstairs, an assumption based on absolutely nothing. But when she didn't come down after about 20 minutes and I started getting hungry I figured to go back and actually ask for some help.\n\nThe timing for walking into my room and peeking around, starting in the bathroom, was perfectly terrible. I had just poked my head in the door when Andrea stepped out of the shower, fully nude, onto the bathroom rug to grab a towel.\n\n\"Oh, shit,\" I exclaimed, unable to control the verbal reaction.\n\n\"Oops,\" Andrea said nervously as she quickly grabbed a towel and covered herself up, \"I thought you were downstairs.\"\n\nI heard her, but had already scooted myself out of the doorway and into my room, my drained white face switching to burning red with embarrassment.\n\nAndrea, on the other hand, didn't seem to care. Though now wrapped in a towel, she stepped into my room and started a conversation.\n\n\"Sorry about that,\" she said, \"I should have closed the door.\"\n\nThe confusion raced through my mind as to why she was apologizing when I was the one who walked in on her naked but I kept my mouth shut.\n\n\"Hopefully I didn't scar you too much with the visual,\" she said with a sleepy chuckle, \"I am just so tired I'm not thinking straight. Under normal circumstances I might have even cared.\"\n\nI said nothing, like a deer in headlights. I just stood there and stared, mostly blank eyed, but also unable to get the flashes of her out of my mind. Andrea had only been in my house for 24 hours and I had already seen her naked.\n\n... and she looked good.\n\nShe stood there for a second, just waiting for me to respond to her commentary but I couldn't get words out of my mouth.\n\n\"I guess I should get dressed,\" she finally said, breaking an awkward silence, and turned around and made her way back into her room. Though there was a very obvious lack of confirmation she was actually in her room as I never heard the door close.\n\nTerrified I would run into her again, I didn't dare to peek and see if it was open like I suspected. Instead, I walked quickly and silently through my room and made my way back downstairs, determined to wait out my shame.\n\nAndrea came down a few minutes later. Her hair was still wet but she was now wearing yoga pants and a baggy long-sleeve t-shirt, pretty typical attire for someone her age though I could tell that they were not the fanciest brands or designer clothing and were more appropriate with what I knew of her economic background.\n\n\"You hungry?\"\n\n\"Yeah.\"\n\n\"What do you want?\"\n\n\"Whatever you want to make. Your mom hated cold cereal because it would always end up all over me. Oatmeal is fine or, if you don't mind cooking, I like scrambled eggs or any of the leftovers that may be in the fridge.\"",
        "\"Oh, yeah. You can't feed yourself. Even the old guys can do that.\"\n\nShe had her back to me when she said it, but quickly turned around and winked to let me know she was just joking around.\n\n\"So, what's your schedule,\" she asked as she poked around the fridge.\n\n\"Same as every other fucking day,\" I replied moodily. \"I sit around the house. Maybe go wander around the neighborhood if I am feeling ambitious.\"\n\n\"Not getting together with friends? Not going for a run? Not going places? It's summer, how about the beach?\"\n\n\"A couple of friends visited in the beginning but now they are all back at school. I had to drop out for the semester because it isn't like I can really do anything. As it was, I was barely able to finish last semester. I get special credit for all but one of my courses where I was able to pass based on course work already completed. One class was totally based on the final exam though so I am getting a deferral. But, realistically I will have to take the course over since there is no way I am going to remember the material to just walk in and take the exam. As far as running or the beach: running or other exercise was too painful to begin with and I admit I just haven't tried since. As far as going places, Tony took me to the beach a couple of times but now everyone is just busy with their own schedules.\" I intentionally did not elaborate on my general lack of a strong social circle. The friends that visited weren't even mine either, rather his. I was just the \"younger brother.\"\n\n\"Sucks to be you, buddy,\" she replied with another grin.\n\nIt felt that Andrea was starting to show her true colors and those colors painted her to be a bit of a wise-ass.\n\n\"What about you,\" I asked as she cooked some scrambled eggs for me and scarfed down a banana for herself, \"what is your schedule like?\"\n\n\"Well, I have class three nights a week, Monday, Wednesday and Thursday. Though I have to go to campus on Friday nights as well, probably twice a month, for group work. I am still trying to figure out the patterns of this semester so it might be a little while before I really get into a routine. Otherwise, my days are either working, doing homework, or just other everyday life stuff. Nothing exotic. I try to keep in shape with yoga and some jogging but am not particularly fanatical about it. Heck, I am barely engaged with it. Though I may need to be now that my mom isn't cooking for me. Even though we didn't have a lot of money, she always made sure I was eating properly. It's easy to just get fat when eating the wrong foods... and we don't want that to happen!\" She was patting herself on her tummy, the shirt obviously jiggling on her, even from the back.\n\nIt was the first time I felt myself smiling while around her, she was going off on a random tangent seemingly oblivious to the world. She turned around and caught the grin on my face.\n\n\"Sorry for going on and on, I think I am just tired.\"\n\n\"No apologies necessary. It's nice to have a little energy and life in the house. Everyone says I've been pretty mopey lately and they all tend to walk on eggshells around me.\"\n\n\"Uhm, yeah. So, what the hell happened to you anyway?\"\n\nI again smiled at the way the words just kinda' came out of her mouth but told her the story of camping, my injuries, Tony, her mom, etcetera.\n\nI could see her face drop a little when I mentioned her mom and immediately felt my own face go white with shame. I wanted to apologize but the words wouldn't come out of my mouth. There was silence for a moment before she immediately picked back up the conversation.\n\n\"Well, that sucks. And now it sucks more because you are stuck with me. Seriously though, I'll try and stay out of your space and your hair. And I'll try and remember to close the bathroom door. With just me and my mom for the last while I haven't had to worry about much.\" She had a big grin on her face but seemed to be masking something.\n\n\"Yeah, so about that. I guess I am just not good with words and stuff but I am really sorry about what happened to your mom. And I am really happy to know that my parents could help out. I'm just kinda' clueless about life, you know?\"\n\n\"Thanks, I get it. We're good.\"\n\n\"I think the deal with my parents was that you are going to be with us for a while, right? Well, then this is your home just as much as mine. Do whatever you feel comfortable with.\"\n\n\"Thanks, Tom.\"\n\nI laughed.\n\n\"It's Tim.\"\n\nAndrea turned red.\n\n\"Sorry. Uhm, ready to eat?\"\n\nSuch was my life at that point. We sat down at the kitchen table and Andrea spoon-fed me a plate of food she had made. Scramble eggs, some fruit and a cup of coffee... that I was at least able to drink out of a straw. \n\nWe were just about done with the meal when Andrea lost her composure and reverse-snorted a previously withheld laugh. She had basically had a grin on her face the entire time she was feeding me but she lost it and literally blew spit all over me.\n\n\"Oh my god,\" she half cried, half laughed. \"I am so sorry! Let me get something to wipe you up.\"\n\nAs she dabbed my face and shirt with a kitchen hand towel she couldn't stop giggling.\n\n\"I'm sorry. It's just that this scenario is so surreal. I am living in a new house and hand feeding a healthy 19-year-old and am having trouble not making baby faces and playing 'here comes the airplane' with your food.\"\n\nThe comment actually made us both laugh before Andrea added, \"Yeah, so I think your shirt needs to go in the wash. I am pretty sure I spit banana on you.\"\n\nAnd that was what became of my life.\n\n----------------------------\n\nWith her being in a completely new environment and me basically having no friends, whether it was based on proximity or not, Andrea and I quickly became close. While she was still my home-aide (which came with its own duties) we developed a rapport that more was similar to long-time roommates. So, to answer as many questions that you (the reader) may possibly have, I can think of I will get some certain things out of the way.\n\n1 - Yes, she saw me nude. She saw me nude on a very regular basis as she was the one who was bathing me and getting me dressed almost daily..\n\n2 - No, I did not see her nude anymore, at least not directly (see below). Not to say that she got any better with closing the door. It seemed that she wouldn't have cared if I had seen her in the buff but it also seemed right that I gave her some privacy when she was using the bathroom or showering so it wasn't like I was actively trying to catch a glimpse.\n\n3 - I did see her in her bra or underwear (or the basic shape of her nude body) on a very regular basis. It was a practicality thing, actually. Andrea had to bathe me. Instead of getting her shirt soaking wet she usually just took it off. I think I noticed one or two sports bras but in general they were very practical, full cup, everyday, underwire bras. Solid color, nothing lacey or fancy. As far as seeing her in her underwear, well, that was just a circumstance where Andrea again just didn't seem to care. If she helped me get onto the toilet first thing in the morning, she would then usually leave me there and start getting ready herself. That may include stripping down and quickly rinsing off behind the textured glass door of the shower we had in our shared bathroom (which I could see her through) or just getting changed in her own room. If I finished and she was not fully dressed, or if she just decided to brush her teeth without her full outfit on, so be it.\n\n4 - Her body, as it turned out, was pretty nice. Nothing supermodel-esque but certainly very appealing. She was soft and curvy, my guess was probably 38-28-34 dimensions with larger, c-cup breasts. Her ass was just a little bit flat (something she seemed to obsess over far beyond its merits) and her stomach was not taught, but she had a graceful, hourglass figure and nice, soft smoothness all over her body.\n\n5 - Yes, she helped me go to the bathroom. I got in the habit of peeing sitting down, however if-and-when we were out (she forced me to get out of the house by often running errands with her or going to the park or beach) we would usually try to be as quick as possible and that meant her holding and pointing for me. She would sometimes make jokes and jiggle my dick just a little more than necessary but in general it was all pretty functional and to the point. And yes, she wiped my ass. My parents water bill was probably sky-high as I was \"courtesy flushing\" about 10 times with each shit I took to try and minimize the smell but it was still an awkward job. There is no denying I was embarrassed pretty much every single time. Andrea, for her part, never said a word. She simply used a latex glove and wiped my ass; first with toilet paper and then always finishing with a wet-wipe. It was a first for me using the wet-wipes, something she instilled upon me from her own personal usage and her days working with the elderly but I can also admit that it is a great, clean feeling, and she made me a convert.\n\n6 - Other than working out or running errands, Andrea pretty much never went out on her own or with friends. She either stayed in the house, went to class or hung out with me. I asked her about it one day and she said that she has always felt like a bit of a home-body but when her dad had passed away she felt like it was the right thing to stay with her mom. She said that having some company was enough for her in general and as we got along so well our situation was perfect.\n\n7 - Boyfriend(s)? None that I knew of. She did at least appear to give the impression of being straight with light-hearted commentary that she would make about attractive men on TV or in real life. She even complimented me and my appearance and overall physique... but did not date otherwise from what I knew.\n\n8 - Her sharing a bed with me (I am careful not to say \"sleeping with me\" based on the assumption) turned out to be a semi-regular thing. Whether it was watching TV together in my room or just chatting late into the night, we would often wake up in the same bed. There was only one time that we ever even had any real physical contact. Andrea was simply having a rough day. Emotionally she was a wreck, it was as if the feelings of her mom's passing and her past life all came crashing down. She had been relatively distant all day but in the evening she did come into my room and asked if she could not only sleep in my bed but if I could cuddle her as well. I did exactly that.\n\nThankfully, in addition to my friendship with Andrea, my injuries were also progressing. My arms were out of casts and my burns were healing nicely. Though I still had the inability to grip anything, both from a strength and pain standpoint, I started physical therapy with the obvious eventual goal of living a normal life again and not having to have someone wipe my ass.\n\n\"Well, it's not like I am going to miss wiping your ass,\" she said to me, \"but sometimes it is nice getting to basically be the boss of you.\" She added a sarcastic evil laugh to the end of her statement but also threw me a friendly smile to let me know that she really was happy for me and my progress.\n\nIt was a Tuesday and Andrea and I were completely on our own. Well, I was completely on my own. Tony had decided to move out of the house and my parents had decided to take a vacation after the stress and turmoil that had been the majority of the past few months. Andrea and I had the house to ourselves for the week though Andrea was currently laying out in the backyard getting some sun.\n\nI was feeling a little... well, to be quite honest, I was feeling a bit horny.\n\nI wasn't exactly a man about town when I wasn't injured so I can't claim that I was previously up-to-my eyes in women but what I can claim is that I was at least able to regularly service myself with functional hands and, for quite some time, I had been unable to even do that.\n\nVisual stimulation wasn't an issue. I had finally gotten some very basic mobility back in my hands so I was able to move a mouse and click around on the internet. Plus, what had previously been a silly, trivial matter in Andrea regularly being in her bra and underwear was becoming an unbelievable torture. What I did not have was the ability to use my hands \"fully.\" Whether it was from pain or lack of strength or lack of mobility, I couldn't get the job done. It wasn't surprising. Heck, I still couldn't bathe myself, so getting myself off was not at the top of the medical fields priority list. But, in the end, simply put, I needed some relief.\n\nI had gotten a laptop and set it up on my bed and went and found some random porn on the internet. I probably didn't even need the visual stimulation but old habits die hard. After discovering a couple of nights prior that if I humped some pillows a certain way it gave me enough stimulation to believe I could get myself off I decided my desperation was enough to at least try.\n\n... and it was going okay too.\n\nBut when you don't turn off the audio on your computer and you have a standing arrangement of not closing any doors in the house and you just don't otherwise think...\n\n\"Hey, Tiiiiiiimmmmm...\"\n\nAndrea stood about 3 feet into my room. There was no reason why she shouldn't have just continued the habit of walking in and out like we normally did. She was wearing her bikini, a very standard, modest suit that I had actually helped her pick out at Target one day. Her skin had a bit of a sweaty glisten on it and she otherwise looked great, except for the shocked/uncomfortable/what-the-hell-do-I-do-in-this-situation look on her face.\n\nFor my part, I was on my knees, buck naked and humping the pillows I had set up against my headboard.\n\nThe words came out of our mouths at the exact same time.\n\nMe: \"Uhm, wait a second.\"\n\nHer: \"Let me give you a moment.\"\n\nShe scurried into the bathroom and I popped off the bed and followed her. I don't know why I did it, I was still buck naked and sporting a full-on erection. Following her into her room I found Andrea standing with her back to me and staring out the window.\n\n\"Andrea...\"\n\nShe spun around and immediately was greeted by my nude body and fully exposed hard cock. I wasn't pointing at the ceiling but was still well above parallel to the floor. But, without missing a beat she actually cut me off.\n\n\"No, Tim, it's my fault. I shouldn't have just run in like that.\"\n\n\"I should have closed my door.\"\n\n\"We never close doors.\"\n\n\"I shouldn't have been doing that to begin with,\" I replied.\n\n\"Why?\"\n\n\"I don't know. Because then we wouldn't be in this mess.\"\n\n\"I've seen you naked before.\"\n\n\"I know, but not like that.\"\n\n\"It doesn't bother me. To be quite honest I am surprised this hasn't already happened.\"\n\n(Pause)\n\n\"Really?!\"\n\n\"Sure. I'm not an idiot. It's been a number of weeks, you must be going nuts.\"\n\n\"A little.\" I was red-faced with shame. Mercifully, the situation had caused my manhood to deflate down to its normal size and I could see that Andrea was sizing me up again.\n\n\"I can imagine.\"\n\nThe unmistakable sounds of a woman's fake orgasmic cries ringing through crappy laptop speakers came through the open bathroom door. I had been so busy rushing to apologize that I had never stopped the video. \n\nMy face, which I thought was going back to a normal color, flushed bright red. \n\nAndrea just giggled and smiled. \"Why don't you get yourself situated. I did actually come up here to talk to you.\"\n\nI ran back into the room, turned off the porn and put on a pair of loose gym shorts that I was able to get on without any assistance. Turning back to the bathroom I found that Andrea had already walked in and was standing in the doorway.\n\n\"Well you certainly don't need to cover up now,\" she said with a smile, \"our history aside, I think we can really say that you really no longer have anything to hide.\"\n\n\"Just trying to get things under control,\" I responded, still a bit flustered, still not thinking straight.\n\n\"I wanted to see if you wanted to head to the beach with me,\" she asked. \"It's a beautiful day out and sitting out in the backyard just isn't doing it for me.\"\n\nI thought about how the beach could serve as a distraction from the situation and, truth be told, I could use some color.\n\n\"Uhm, yeah, the beach would be good.\"\n\n\"Cool. I'll put some things together and we can get out of here. Do you need help with your suit?\"\n\n\"Uhm, I think I can figure it out.\"\n\nI couldn't believe how quickly the entire situation had been dropped. I was fucking a pillow and she didn't even seem to care. I still had a pit in my stomach from the shame but figured to at least try to live in the nonchalance that Andrea was fronting.\n\n----------------------------\n\nShe was right, it was a perfect day for the beach. The sky was blue, the sun was bright, the temperature was right and there was just a perfect breeze. We were able to commandeer a secluded little spot that we had seen on a previous visit but had been taken each time we had ventured over in future attempts. It was a strange combination of in-the-middle of things while still offering some shade and seclusion by some tall -grasses that had spilled over from the vegetation line.\n\n\"I got some spray sunscreen,\" Andrea said as she pulled a can out of her bag, \"I know you still can't put the lotion on me but I am hoping you can at least spray my back.\"\n\nIt hurt a bit but I got through.\n\nShe had changed out of her previous bikini and put on a new suit that I hadn't previously seen that was significantly smaller than what she had been wearing in the yard.\n\n\"New suit?\"\n\n\"Kinda. I know you would not have seen it before. Not exactly new, but certainly not something I would feel comfortable wearing while in your parents yard,\" she explained. \"Or wear in real 'public' for that matter. A friend gave it to me a couple years ago because she said I could still 'pull it off' after she got pregnant. I have never actually worn it outside but today just seemed like the right time to give it a try.\"\n\n\"Well, you look great,\" I said as she finished up spraying herself and started on me. \"Your friend was right.\"\n\n\"You're sweet. I am still not so sure though, it is pretty small. I was just getting a bit sick of the tanlines I was getting with the other one.\"\n\nThe suit itself was a smaller, string bikini. Not tiny by internet standards (thankfully not the type of porn I was watching when she walked in on me) but certainly smaller than what you would normally see out in \"real life.\" It was a solid light blue with smaller, triangular cups that did not cover nearly all of her large breasts and her bottoms scooped down low enough in the front that I think I might have even seen a little bit of pubic stubble. The back was a thong that offered total exposure of each cheek with just a minimal triangle of material above her crack..\n\nHonestly, with her curves in the right places, her friend was right that she could pull it off.\n\n\"I didn't know you wore thongs.\"\n\n\"You didn't know because you know I don't. Heck, I only own one pair of thong underwear and even that I only have from a prom dress. You've seen my underwear, certainly nothing like this!\"\n\nAndrea turned her head back over her shoulder and referenced her exposed cheeks. \n\n\"I just hate tanlines. Not that my ass is going to be hanging out all over the place but even just seeing my white cheeks in the mirror sucks, ya' know?\"\n\n\"Yeah. Though the suck that is tanlines still wouldn't get me to wear a thong.\"\n\n\"Well, that's your problem. I am not as ashamed of myself as you are, I guess.\"\n\nI offered a raised eyebrow and she stuck out her tongue and smiled a big, toothy grin. It was all good.\n\nThe sun was warm that day and it felt nice to be out in its rays. We both soaked up the heat and chatted about normal, young-person stuff. We talked about school, life, our celebrity crushes... basically anything that I would normally talk about with my other male or female friends. As it were, she claimed to have dual crushes, one for Zac Efron (predictable) and the other for Javier Bardem (not as predictable). \"Let's just say that he makes my flower bloom,\" she told me with a laugh.",
        "Before we knew it, the day was practically done and the sun was starting to go down. Neither of us had ever even gone into the water and, while we both could have certainly stood to at that point because of the amount of sand stuck to our sweaty bodies, it just didn't seem appealing to be wet and getting in the car. Instead we brushed each other off the best possible and figured to wash off completely in the shower at home. The desired effect of getting a little color worked and each of us had a warm glow to our skin.\n\nUnfortunately, the beach calmed me a bit too much and the car ride home had the exact opposite effect. It was the seatbelt that got me going. Or, maybe the lack of a visual seatbelt as it nestled itself in between Andrea's big, soft breastss. You see, neither of us bothered to cover up any further in the car, we just sat on our towels and headed home. By the time we got back to the house, while I wasn't hard, I was certainly a bit on edge. Her forthcoming directions didn't help anything either.\n\n\"Okay, strip down and get into the shower.\"\n\n\"Shower, not a bath?\"\n\n\"Yeah, shower.\"\n\nI did as I was told while Andrea cleaned up the car a bit.\n\n\"I'll meet you up there in a second.\"\n\nI had actually started being able to rinse myself off in the shower, a discovery I had made about a week or so before. Through the use of my forearms and backs of my hands, I was able to get the water to an appropriate temperature and it certainly required no effort to stand under the shower head and get drenched. What I was still unable to do was wash myself. The combination of soap and hair was simply too painful on my still-healing hands. Andrea always bathed me in the bathtub, I was confused as to why today was different when it was obvious I needed to be actually washed. My confusion was soon set straight.\n\n\"I have to get clean myself and I am sick of having soaking wet clothes,\" she said in a happy-but-matter-of-a-fact manner. \"So we're gonna' try something different today and I am comin' on in there with you and you're just gonna' have to deal with it.\"\n\nTruth be told, the shower stall in the bathroom we shared was huge, almost 18 ft square, it isn't like we would be squished at all. But, also truth be told, it might have been better if it had been squished, that way I wouldn't have been able to really see Andrea or her basically now completely sheer suit. With the visual that I had, and the fact that she was starting to lather up my body with her soft hands, and the fact that I was still a bit wound up from the car ride home (and never having actually cum earlier in the day) the inevitable happened and I started to get hard.\n\n\"You're having quite the day, huh?\" As usual, Andrea took things in stride when my body started acting more inappropriately than I would have liked. \"That's okay,\" she said with a smiling wink, \"makes it easier for me to clean I guess.\"\n\nAndrea initially started washing my cock just like she would have any other part of my body; with firm, efficient strokes but this time she lingered a bit longer, and was soon gently stroking me with soft, silky hands.\n\n\"Ohhhh,\" I moaned after being unable to resist acknowledging how good it felt.\n\n\"You okay?\"\n\n\"You're driving me nuts,\" I sighed back. \"Between your hands and your suit, I can barely take this.\"\n\nAndrea looked down at herself.\n\n\"Yeah, I told you I couldn't wear this much. What are you thinking?\"\n\n\"That you look hot.\"\n\n\"Yeah?\"\n\n\"And I want you to take that suit off.\"\n\n\"Yeah?\" Andrea took her hands off of me and was staring me directly in the eyes when she reached behind her neck and back to undo the strings of her top. \"What else,\" she whispered as she pulled the thin, sheer cloth from her skin, fully exposing her glistening, wet breasts.\n\n\"I want to kiss you.\"\n\nAndrea got onto her tip toes and pressed her lips to mine. As her breasts pressed into my chest I was sure she would start laughing at me when she felt my heart almost pounding through my chest. Throughout it all, her soapy hands stroked the length of my engorged dick, the combination of senses bringing me to a point of no return. In fact, it was when Andrea's tongue slipped past my lips when I felt my balls tighten and I felt my cock go from hard to steel. Her hands never left me and I felt the pulsing spurts from weeks of pent of frustration erupt from me. While we were no longer kissing, not a word was said; the only noise in the room were my suppressed grunts as I tried to basically not pass out. \n\nMy orgasm subsided and Andrea let go of my deflating member.\n\n\"A little better?\" Her words came out in a somewhat nonchalant manner.\n\n\"Erghhhhht,\" I grunted in reply.\n\n\"It seemed like the humane thing to do,\" she responded with a little laugh.\n\nI smiled and looked at her curvy naked body, fresh tanlines from the beach already visible. Her breasts were glowing and slick from the combination of water and sunscreen and my sticky, milky cum was all over her belly and the bottoms of her suit quickly turning white from its reaction to the warm shower water. She caught my gaze and noticed my mess though did not address my blushing as she undid the side strings of the bikini bottom and pulled it off and into the shower stream to rinse off. My eyes, on the other hand, stayed exactly where they were, now staring directly at a neatly groomed pubic patch of shortly trimmed dark brown hair.\n\n\"Think I should shave it all off?\"\n\nMy brain was brought back to reality but I still did not process the question.\n\n\"Huh?\"\n\n\"You're staring. I was asking if you think I should shave it all off.\"\n\n\"If you want,\" I replied somewhat absentmindedly.\n\n\"What do you prefer?\"\n\n\"If I am being honest it isn't like I have that much experience with real life preference. Most of the girls in porn are totally shaved but you look pretty damn good.\"\n\n\"Says the guy who just came for the first time in a while. I am not 100% sure you can be very objective right now.\"\n\nHer comment made me blush and she noticed. \"Tell me, did I go over the line? I hope you don't think I am a slut or something. It isn't like I have ever done anything like that before. We've just become pretty good close and I was being serious when I said I felt bad. I know I couldn't go for as long as you probably have without getting off. At least I assume you haven't been.\"\n\n\"Really?\"\n\n\"Really what?\"\n\n\"You're right that I haven't in a while but you have been?\"\n\n\"That surprises you?\"\n\n\"I guess, yeah.\"\n\nI all of a sudden felt really self conscious about myself and my comment though Andrea handled my naivety in stride.\n\n\"No need for it to,\" she replied. \"Girls are no different than guys.\"\n\nI had heard those exact words elsewhere, of course, it just seemed strange hearing her tell me that she masturbated in such a matter-of-a-fact manner. Though the conversation did not get more explicit or even extend itself in any way, Andrea finished rinsing her suit, washed herself, washed me and we got out of the shower. It wasn't till later that night, after dinner and as we were getting ready for bed, that the entire situation was even mentioned.\n\n\"So, extra curricular activities aside, that actually was a lot easier today.\"\n\n\"What?\"\n\n\"Just showering with you. It was a lot easier than having to bathe you and then get clean myself afterwards. Plus I was going through bras like crazy because it seemed that they were always wet.\"\n\n\"What are you getting at?\"\n\n\"You're basically an idiot, aren't you?\"\n\n\"Apparently.\"\n\n\"I am going to start showering with you. Sheesh!\"\n\n\"Oh. Ok.\"\n\nAnd with that we went to bed.\n\n-----------------------------------------------\n\nI didn't sleep much. Instead, I tossed and turned, my senses wired with the images of Andrea, nude, soft and smooth, voluptuous and sensual. I admit my visions were skewed by the golden haze of my experience. While I had certainly found her to be attractive previously, at that point she may as well have been supernatural. Her image quite literally glowed in my mind, perfect in every way.\n\nI obviously drifted off to sleep at some point because I woke up with a rock-hard boner and my face in a wet-spot of drool on my pillow. Groggily, I stumbled my way to the bathroom to attempt to drain what felt like a very full bladder. How that was going to happen, as my dick was pointing at the ceiling, was yet to be determined.\n\n\"Whoa, somebody had a good dream!\"\n\nEven the startle of Andrea walking into the room didn't make the stiffness go away. Though it at least started to subside until she lifted the base of the oversized T-shirt she was sleeping in, pulled down her panties and sat on the toilet and immediately started peeing, a deluge of liquid and a relieved sigh leaving her body at the exact same time.\n\nAndrea had not peed in front of me previously and I admit I found it unexpectedly erotic, confirmed by my dick jumping right back up.\n\n\"Easy there, Tiger,\" Andrea said to me as she passed by me after finishing. She fed her soft hand up under my t-shirt and dragged her warm palm across my belly. While she never physically touched my dick, my erection bounced at the anticipation of what possibly could have come. \"I'm gonna' go make some breakfast. See you down there in a few. Good luck peeing with that thing.\"\n\nI stood alone in the room and my manhood, after some time, mercifully began to fade. Only a single thought went through my head: what the hell was going on?\n\nAs it turned out, very little was going on. At least, very little changed between us. Well, other than the fact that Andrea didn't seem to care if I saw her naked. While I am pretty sure she wouldn't have cared previously, she definitely didn't care anymore. Though it wasn't like she was flaunting her nudity, just that (in her words) it wasn't anything that I hadn't already seen.\n\nWe went to the beach 2 more times before my parents got home a few days later. Both times Andrea wore the sexy, blue bikini. Both times, true to her word, she got into the shower with me afterwards to help me get cleaned off. Both times she wore the suit into the shower. Both times it came off before I was out. There were no additional hand jobs or any other sort of sexual contact. Sure, we were still friends. We talked and laughed and joked. But, no kissing, no touching other than for a business-like wash. She was, professionally, my home health aid.\n\nBut, man, oh man, it sure was nice to see her nude.\n\nIn hindsight, I think she may have been taking her clothing off for her own benefit, an act of self-validation if you will. Every time she did I would immediately get an erection and my mouth would just hang open in awe. The fact that we had just been to the beach a few times only accentuated her growing appeal for me. Her skin soaked in the sun so well and it did not take much for her skin to absolutely glow, accentuated by softly defined tanlines. With my dick bobbing in the air every time we were nude, she would simply eye me up with a smile and a wink knowing I was helpless to do anything about it.\n\nBut we were still just friends.\n\n---------------------\n\nIt was closing in on the first year anniversary that Andrea had moved in with us and I found myself alone in my room one night. I had regained full use of my hands at that point and, while I was still working on my strength, I no longer had nerve issues that forced the need to have a nurse. While Andrea still stayed at our house and was basically my best friend, she no longer wiped my ass and bathed me. The former I was thrilled to avoid, the latter I somewhat missed.\n\nWe were both back in school and, because I no longer needed a babysitter, we were both able to enroll full time as \"day-class\" students. Andrea was still in her nursing program but, because of her previously strange night-school schedule, she was only matriculated as a sophomore. I was also a sophomore, undeclared in major and, honestly, somewhat lost as far as what I was supposed to be doing with my life. In the evenings we both had part time jobs. While my parents were good enough to let Andrea stay with us (free room and board) they were not also going to pay her when she no longer was taking care of me. So, she had a job waitressing at a local restaurant and I actually worked in a call center doing customer service and very light tech support for the local cable company. She apparently liked her job, I hated mine with a passion.\n\nSo, that night I was off of work, had no homework and my parents were out to dinner and a movie. I was just watching some TV in the great room contemplating life and generally just wasting an evening to laziness and boredom. It was early yet so the TV programming was not very good and my desire to eat was not yet high enough to force me off the couch so, instead, I just sat and surfed and stared at a flashing screen of nothingness. Pretty typical of my interpretation of the American way of life.\n\nIt was the door closing and the muffled sobs that finally broke my concentration (or lack of concentration). Though whoever it was did not announce themselves I followed the sound to the base of the stairs and made the quick realization that source was most likely Andrea. I went quickly up the stairs to check on her as I could not think of any reason why my normally happy friend would have been in such a state.\n\nI found her on her bed in her room. She was not sobbing as I had heard previously but was curled up in a ball on her bed, face in a pillow, completely silent.\n\n\"Andrea? Are you okay?\" \n\nI crept in and sat on the edge of the bed.\n\nShe didn't respond verbally but did roll over to look at me. Her eyes were puffy and red.\n\n\"Yes and no.\" She scooted herself over and curled up into me, her head on my lap. \"It isn't like I got hurt or anything. I am just not sure what the heck happened. I was at work and all of a sudden I basically had a breakdown thinking about my mom. It wasn't like I was hysterical, I just couldn't stop crying. Like, I could not stop crying.\"\n\nIt was a normal occurance for us to snuggle up together so I situated myself laying down on the bed and pulled her in close to me. Tony, based on the little I have told him, had told me that I was a pussy for not making a move on Andrea. While he may have been right, and I can admit that I wanted to, I could also justify not making any sort of real attempt based on how close we were as friends. She and I had talked about sex and relationships in the past, and it isn't like she seemed to be so into me that I wanted to take a chance on losing what we did have in case \"making a move\" backfired. Realistically, Tony was probably right, I was scared to try.\n\nFor the rest of the evening I supported my friend. She really didn't cry anymore and we really didn't talk too much either. Instead we turned on the TV and zoned out, cuddling together under the covers.\n\nOf course, when you cuddle long term, it gets hot. So, little by little our clothes got discarded and soon enough we were both just in our underwear.\n\n\"I never sleep with a bra on,\" Andrea said as she took it off and tossed it to the side of her bed.\n\n\"Yeah, I know,\" I responded, \"we've spent many nights together.\"\n\nNeither one of us mentioned that she always previously had a shirt covering her braless breasts but my smaller brain told me that I should just keep my mouth shut.\n\nAndrea gave me a kiss on the cheek before she curled herself into me, her head on my chest, her leg draped over mine, her warm, soft tits pressed right into the side of my torso. She was no longer paying attention to the TV, it seemed she was finally ready to go to sleep. I used the remote to turn off the TV but otherwise I didn't move an inch. Sure, it would have been awkward to attempt as my arm was somewhat trapped under her body but, more to the point, I didn't want the moment to end.\n\nIt was the middle of the night when I woke up. I think my body was telling me I had to move as we were still in the same basic position and my arm had totally fallen asleep under her.\n\n\"Andrea,\" I whispered, only partially wanting to wake her up and move away from me.\n\nI shifted my body ever so slightly and found not only was I sporting a significant nighttime erection, but that her hand was laying on top of it, almost to the point of grasping it through my thin cotton boxers.\n\n\"Andrea,\" I whispered again with still no response.\n\nI kissed her on the forehead, something I once saw in a movie and had done with Andrea before as a comforting gesture she liked.\n\n\"Andrea, hey!\"\n\nI never raised my voice. The thought never occurred to me as it was the middle of the night and, while I was trying to get her to wake up, my heart was still telling me not to let her be. I neverkissed her a few more times on the forehead and cheek, little pecks that were just an attempt to arouse her from slumber in the least jarring manner possible and began to gently wriggle my arm back and forth under her in an attempt to pull it free.\n\n\"Mmmmm...\" she sighed, finally stirring to consciousness. I felt her body stretch a bit and her hand gently grasp my still firm cock.\n\n\"I gotta' move my arm,\" I whispered softly into her ear and she groaned a bit of displeasure.\n\n\"No, don't go,\" she purred as she pulled me on top of her, my erection pressing into her thigh and our faces cheek-to-cheek. \"I'm so cozy.\"\n\n\"I just gotta' move my arm,\" I softly laughed. I could tell she was somewhat toying with me but I didn't care.\n\n\"No.\" She playfully responded.\n\n\"C'mon!\" \n\nI nibbled around her ear a bit, something she told me tickled her, and kissed her on the forehead again, figuring my actions would get her to fully wake and, in the moment was only mildly surprised when, in the courses of our noses brushing together, I felt her lips brush a quick kiss against mine.\n\nShe kissed me.\n\nShe initiated it and she kissed me.\n\nI kissed her back.\n\nAndrea had her arms wrapped around me and I had been able to get my arm out from under her and, with our bodies pressed together, I felt both of our hearts race.\n\nWe started with a few, gentle and prolonged kisses before our mouths naturally began to open and our tongues decided to meet with feverish intensity. Likewise, it was obvious our hands and bodies were excitedly restless as her fingers squeezed and massaged the muscles of my back while I did my best to explore the contours of her sides while I lay on top of her. \n\nThere were so many sensations I wanted to experience. So many tastes I wanted on my tongue. So many smells I wanted in my nose. So many touches I wanted to feel. I consciously had to tell my brain to slow down and enjoy the moment.\n\nWe rolled our way around on the bed, never more than a millimeter away from one another, our tongues constantly intertwined, when I first felt the brush of something \"sexual.\"\n\nSure, I had been hard the entire time.\n\nSure, Andrea was topless and her soft breasts and been pressed into me for most of the experience.\n\nBut, it was otherwise still just hugging and kissing. There had not been any other overt indications that anything else was going to happen... or would even be welcome. \n\nMy hand was moving its way up and down her sides when our bodies naturally began to shift. The timing of the event basically found my hand moving up her leg just as she opened her legs to move and my palm and fingers very distinctly dragged the crotch of her panties and her heated sex. While my natural movement and reaction time resulted in me simply grazing over the top of her, my brain kicked into gear when I felt her slightly moan and stop her own motion to leave her legs wide open. Her invitation was clear though my heart was racing with nervousness to accept the invite without seemingly being over eager. The sound of Tony's voice calling me a pussy was ringing in my head. ",
        "As naturally as I could, I traced my hand back toward her legs, this time focusing on her inner thighs while slowly-but-obviously redirecting my efforts toward their union. Each time I grazed her vulva her hips shifted toward the movement. Each time I moved away she moaned in frustration.\n\nIt wasn't long before Andrea's panties were pulled to the side and full-on sexual contact was being made. If there had been any doubt previously that she wanted this to happen it was gone. She was hot, she was wet and, at one point she literally took my hand and placed it back on her clit when I had spent too much time elsewhere.\n\nI might not have been the ring-leader of our bedroom circus, but Tony could still go fuck himself. This was going to happen!\n\nOur momentum was in full swing when Andrea bumped things up a notch.\n\n\"I want you,\" she whispered in my ear as she sucked on its lobe. \"I don't want to wait. I want you in me and I want you now.\"\n\nMy underwear had still been on but she didn't need to say another word before I practically threw her off of me in a hasty attempt to get it off. Thankfully she didn't seem to mind and took the opportunity to pull hers off as well. As I was done first I climbed on top of her and she immediately guided my engorged cock into her.\n\nOur sighs of delight were the only sounds in an otherwise still night.\n\nIt took a few smooth, slow strokes to fully penetrate but when I did she held onto my hips.\n\n\"Just wait,\" she whispered, her eyes open and looking at me in the faint, ambient light. \"Give me a sec' and then take it slow.\"\n\nUnfortunately, even taking it slow it didn't take long to finish. In what couldn't have been more than a few minutes I felt the telltale signs of an oncoming orgasm and my brain would unfortunately not work to tell me to slow down or at least wait for her to finish herself. She made her knowledge of my situation clear when she said to pull out when I was ready.\n\nThere was enough time for me to grab a handful of tissues to collect my load before I laid back down on the bed in shame.\n\n\"Sorry about that.\" I said.\n\n\"About what?\"\n\n\"That it was so quick.\"\n\n\"Tim, it was great.\"\n\nAndrea pulled herself back onto me and, just like the first time, gave me a kiss on the cheek before curling herself into my chest and settling us both back into sleep.\n\n------------------------------\n\nWhen I awoke I once again had an erection and Andrea's hand was once again on it, but this time it was more deliberately prodding it along with soft, gentle strokes.\n\n\"Hey,\" I offered in a sleepy voice.\n\n\"Hey,\" she countered back. \"I hope you don't mind. It just kinda' seemed like it wanted to be played with.\"\n\n\"I don't mind.\"\n\nIt felt strange to have her basically jerking me off without at least a little bit of reciprocation so I attempted to reach around and at least play with her breasts a little.\n\n\"You getting handsy?\"\n\n\"Trying to,\" I replied.\n\n\"Want me to get mouth-sy?\"\n\n\"Mouth-sy?\"\n\nAndrea didn't explain, rather simply shifted her position, her legs now to the side of my head, and took me in her mouth.\n\nIt felt amazing. My head and my (little) head didn't want it to stop. Thankfully, my brain kicked into gear. I couldn't let a repeat of the prior night happen again.\n\n\"No, wait,\" I said as I stopped her from fellating me. \"It's your turn.\"\n\nI rolled Andrea onto her back and spread her legs, not giving her much of an option to say anything before burying my face into her fuzzy cunt. While in hindsight I should have offered a bit of prep, some kisses or at least progressively increasing levels of concentration on her most sensitive parts, I instead went into a full out onslaught of her clit with my tongue. Enough to take her breath away and force her to use her hands to push my head away.\n\n\"Whoa, whoa,\" she said, forcing me to temper my enthusiasm, \"I need you to go a bit slower.\"\n\nI took her cue and actually savored the opportunity to enjoy the experience of pleasuring her. I enjoyed her taste, I enjoyed her scent, I enjoyed the feeling of her soft folds on my mouth as I slowly brought her to climax. As her orgasm built, I enjoyed the sound of her breathing change. First even and steady, then short, higher pitched and staccato as wave after wave of pleasure washed over her body. When it was obvious she was finally done her body went limp and her breathing went into deep, heaving movements as she tried to catch her breath.\n\n\"That works,\" she finally sighed in a cracked voice strained from heavy breathing. \"That definitely works.\"\n\nI pulled her limp, nude body into the position we had spent most of the night in, her curled up in my chest, and we both fell back asleep.\n\n--------------------------------\n\n\"What time is it?\"\n\n\"Past 10am,\" Andrea responded as we both slowly came-to.\n\n\"Shit, I missed my class.\"\n\n\"Yeah, me too.\"\n\nWe layed in silence; both of us nude, both of us (I assume) comfortable with how we were at that moment, not wanting to ruin anything with a mad dash out the door to school.\n\n\"Wanna' play hooky for the day?\" I was hopeful when I asked her.\n\n\"I actually can't. At least not the whole day. I have to be at my 1:30 class and then have work tonight.\"\n\n\"Okay.\" \n\nI groaned as I began to get up, my body sore from having been in bed as long as we had but Andrea pushed me back down and straddled over me, her hands on my chest, her breasts framed in between her arms.\n\n\"Hey, it's not because I don't want to, okay?\"\n\n\"Yeah, I get it,\" I responded. She was right, of course, I just didn't want the moment to end.\n\nAndrea got in close to me and planted a kiss on my lips before getting off the bed, skipped into the bathroom and was in the shower before I even got to my feet.\n\n\"Are you working tonight?\" She called to me through the shower door as I walked by.\n\n\"Yeah.\"\n\n\"Wanna' meet me at the restaurant afterwards?\" \n\nShe had popped the upper half of her body out of the shower as she asked and her tits glistened under the sheen of water.\n\n\"Sure!\" \n\nI tried to play it cool but I figured my voice betrayed my excitement. Andrea smiled at how miserably I had failed.\n\n\"Cool. I want to talk to you about something.\"\n\n---------------------------------------------------------------------------\n\nAs usual, I was waiting for her when she got off of work. The single benefit of my job was clearly defined hours. The benefits of her job were more money and a will to live. We hugged when she first was able to come over to me and I sensed a bit of tension in her. It was strange as she was always the confident one between the two of us. I figured, on my end, it had been because of the not-so-small amounts of stress that I had been putting myself through, contemplating the meaning of her \"want to talk\" to me, always falling back to a negative conclusion.\n\nWe sat at the bar and ordered a couple of drinks. Though I was still underage by a few months it was one of the benefits of knowing someone \"in the biz,\" and we quietly nursed them as opposed to our usual easy banter. \n\n\"Pretty big night, huh?\" \n\nMercifully, she started the conversation.\n\n\"Yeah,\" I replied, still so unsure of myself.\n\n\"What you did this morning was pretty amazing.\"\n\nMy face turned bright red and I smiled as no words felt the need to make their way out of my mouth.\n\n\"So, here's the deal,\" she continued after a deep exhale and a realization that I was absolutely too petrified to say anything, \"we can't be an official couple and that was my first time.\"\n\nWHAT?! The thought rang through my head for what seemed to be about 20 minutes before I was able to articulate it. How the hell was she staying so calm?!\n\n\"Wait,\" I said, my brain still short-circuiting, \"what?\"\n\nAndrea took another really deep breath and responded.\n\n\"Okay, first: We can't date. I mean, it would be weird, you know? Your parents hired me as your nurse and are letting me stay in your house. I feel like it would be a total betrayal of them if we all of a sudden announced ourselves as a couple.\"\n\nShe had a point.\n\n\"Second, and I guess this makes the first part make a bit more sense, I had never had sex before last night. I don't know how to handle this? Like, are we supposed to be a couple? I mean, I know that people have casual hookups and everything but you are, like, my best friend! Does that automatically make us a couple? In which case I guess we really can't do that anymore\"\n\nStrangely, seeing her start to lose her composure bit actually made me feel more comfortable, like I could actually be a hero for once.\n\n\"Whoa,\" I responded in the most calm, soothing voice I could muster, \"take a breath for a second.\"\n\nI put my hand on hers and we just looked at each other for a bit while Andrea collected herself.\n\n\"You probably think I am insane right now,\" she laughed. \"I might be a little bit too. The reality was I only slept in little bursts last night. My brain was just spinning around and around with what all of this means.\"\n\n\"Not at all insane,\" I replied truthfully. \"In fact if you had any idea about how much stress I have been going through today I am sure you would immediately realize that, like always, you are the only sane one between the two of us.\"\n\nWe each took a couple of swigs of our drinks and settled into our conversation, talking things through. We talked about how she was not the only one who entered last night as a \"technical\" virgin, elaborating on the fact that both of us had messed around with other people previously but never went any further. We talked about how much our friendship meant to both of us. We talked about her concerns regarding my parents. We talked about any sort of status of being a couple.\n\nBy the time we got back to the house and made our way upstairs, we had made a pledge that we wouldn't have sex anymore but instead stay friends and see if we were still interested in eachother romantically once it was time for one or both of us to move out of the house. We hugged, we said good night, we went to our separate rooms.\n\nWe met in the bathroom, both of us headed to be with the other, 7 minutes later.\n\n-----------------------------------------------------------------\n\nIn hindsight, it was strange how good the sex was that night, afterall, we were both so inexperienced. But, somehow, it worked. Thankfully my parents are heavy sleepers and our rooms are far enough away from theirs that they probably wouldn't have heard anything anyway 'cause it wasn't like just kinda' broke our pledge, we shattered it.\n\nWe were both nude before we left the bathroom and we were pawing at each other like maniacs before we even got to her bed. Our bodies were attached to the other in some way or form for basically the entire night. We both knew the other watched porn periodically but it was almost comical as to how desperately each of us seemed to want to try out anything and everything we had ever seen: kissing, licking, oral, rimming; standing-up, sitting-down, doggy-style, missionary... Many of the experiences were terrible though again, strangely, it all seemed to go our way even when it was bad. We were open and honest (a rarity for me) when something didn't feel right, we were vocal and complementary when things were. We enjoyed every moment in one another's company, just thrilled to be sharing the experience with someone each of us most definitely loved. While the prior night was the first time for each of us, our second, third and fourth times were compressed into the span of about 2-and-a-half hours. By the end of our sessions we had settled a pleasurable rhythm and knew that we had found something that was going to last.\n\nIt was the dead of night when we found ourselves in an enjoyable position, Andrea riding me, her warm, wet, pussy sliding up and down the length of my cock. With each downstroke she wiggled her clit onto me, just a little bit, just to add that much more pleasure to the process. Her tongue was in my ear, sucking my earlobe and working its way into the opening, a tactic that gave me pleasurable chills and worked electrically to keep tiring dick hard and true. I used one hand to press on her lower back, just above her tailbone, and the other to deliver a finger-tips worth of soft, circular movements around her asshole, nerve endings she had discovered during session 3 and now wanted involved in the action too.\n\nIt was long build-up to my final orgasm, a practical ultra-marathon compared to the sprint the night before, and I could feel Andrea beginning to clench her walls around me. I didn't have to think about other, non-sexy thoughts. I didn't have to focus on the dull monotony of the ceiling. I was able to enjoy the moment.\n\nAndrea was breathing hard in my ear and our heartbeats fought to connect with one another through her breasts when her body stiffened, tiny little tremors emanating through her as the waves of orgasm rolled through her body. I hung on pulling out and finishing to the warm sensations of her mouth, wrapped around my head, her tongue coaxing out the last few drops of my seed.\n\nShe collapsed next to me, too hot to curl into my arm, each of us breathing heavily; trying hard to slow our heartbeats and regain a clear head of thought, trying harder to not do those things too quickly and instead enjoy the high for as long as possible.\n\nWhen I finally caught my breath I rolled over and gave her one final kiss, this time on the forehead, something I knew she liked. As I pulled the sheet up on us and closed my eyes it was a single whisper from Andrea that clicked into my brain that everything was just right:\n\n\"I love you.\"\n\n---------------------------------------------------------------------\n\nOf course my parents found out. It was about a year later that they sat us down and told us that they had been sure of what was going on for over 6 months. We were embarrassed, of course, but thankfully, they were more than cool about things. While they didn't kick us out, per se, they did encourage us to leave, suggesting that the type of relationship that we had developed was best experienced in the privacy of our own home... not with parents around. With their offer to pay a security deposit and a couple of months of rent, we found a small two bedroom and settled into our lives together.\n\nI asked my mother a few years later how she ever thought it was a good idea to encourage two kids to take such a huge leap in their relationship through the major step of moving in together.\n\n\"I knew within weeks of Andrea even coming to live with us that she was perfect for you,\" she said. \"Or, more appropriately, you were perfect together. When we figured out that you two had discovered what I already knew, I could only think about helping you get on with it.\"\n\nShe was right, of course. In writing this, so many years later, we are each still the only person the other has ever been with sexually and emotionally yet there are no gaps in our life experience, no regrets as to experiences we could have otherwise had. We started our slow, finishing school, getting jobs, married, family, etc. These days, almost 20 years on, our relationship, the bond, the connection, the sex... are better than ever.\n\nWho knew my childish stupidity could end up creating a life so smart?"
    ],
    "authorname": "TooTallToFall",
    "tags": [
        "aid",
        "exhibitionism",
        "first love",
        "first time",
        "happily ever after",
        "injured",
        "nurse"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/it-all-works-out-in-the-end-1"
}