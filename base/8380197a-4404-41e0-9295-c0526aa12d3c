{
    "title": "Cruise to Alaska Day 06",
    "pages": [
        "My two naked bed partners were cuddled together when I headed off to breakfast alone armed with my laptop. This was our last full day together unless, I could convince them to ride with me back to Medford for a couple of days and then take them home to Sacramento.\n\nI must have really needed last night. The pages of my first sci-fi seemed to be rolling out and in good enough shape to need little editing. Made a note, a really good fuck session equals good writing the next day.\n\nAround three, a tight-lipped Emile and a stern looking Linda closed on my windowed corner in the 'Explorations Caf\u00e9.'\n\n\"You two look really down. Who died?\"\n\nLinda kissed my cheek, \"It's all right, Emile and I have been discussing her going off to college again.\"\n\n\"Discussing? More like Mom has been ragging on me since this morning, because I want to go to school away from home.\"\n\n\"Well ladies, I'll go get us some coffee and then you tell Doctor Tom why you both have your panties in a knot.\"\n\nAs my young and older bookends sat down and I started to head for coffee, Emile pulled me close to her lips, \"I wanted to be ready; I'm not wearing any panties.\"\n\nWhat could I do? I sucked her lobe and stuck my tongue into her ear. \n\nShe smiled broadly, \"I knew that was a good fashion decision.\"\n\nMom was concerned about the money again. Emile's college expenses would be about four more thousand, if she went to a state school away from Sacramento instead of choosing one of several choices in town.\n\nI agreed with Emile, \"Linda, Emile's right. She needs to get away from home and spread her (I paused), uh, 'wings' and learn to be independent from you. She has to be comfortable dating and not having to think her guys will want to be with her hot Mom.\" \n\nEmile wasn't giving up easily. \"I can understand needing to get away from home, but it is expensive.\"\n\n\"I have an idea. The two of you drive home with me tomorrow and stay a couple of days. Then I'll drive you home to Sacramento. For your company, I'll pay the difference for one year so Emile can bunk away from home.\"\n\nEmile beamed but Linda still fought, \"Tom, you shouldn't do that. Besides we need to get back.\"\n\n\"I give up. There is only one way to solve this conflict, a duel. Winner gets her way.\"\n\nI had two very curious faces turned my way.\n\n\"I'll be the second for both of you. Tonight, I'll come to your cabin at six. I'll help you both prepare. We'll go for cocktails, then formal dinner and some dancing.\"\n\nEmile spoke up, \"That all sounds like fun but what's the duel.\"\n\n\"Believe me, cutie, both of you will be dueling.\"\n\nAt six I knocked on their cabin's door. I was carrying a bag with two boxes in it. Champagne had been delivered. They were both beautiful in black sexy dresses. Linda had on panty hose. Emile did not. We poured wine around and I toasted, \"May the most committed woman win.\" Then I took Linda's hand and pulled her into the bathroom.\n\nShe stood by the sink while I knelt, removed one of her shoes, pulled her hose and panties to her ankles and had her step her shoeless foot out of her bindings. Linda did not move to help me much, she was not relaxed, watching my every move, so I buried my face into her pussy, licked and remembered why I had these two little boxes with me.\n\nAbout two months ago I bought one of these little wonders. My date for the evening and I, were having great fun with it at a party when it quit working after only a couple of hours. When Lisa agreed to cruise with me, I bought two. That way we would have a spare, if poor quality won out again.\n\nLinda was very apprehensive when I fitted her with her modified 'Dragon Fly.' She had told me that sex toys intimidated her late husband. I made sure the little egg was lubed and bent to her g-spot and the body of the fly was lubed and pressed tightly and comfortably to her clit. Then I re-dressed her and French kissed her, messing up her lipstick. The toy was just strapped to her and not turned on. She had a 'So what?' look on her face.\n\nNext, it was Emile's turn with me in the bathroom. She was easier to fit, only lacy black panties. I enjoyed licking her with the taste of her mom still in my mouth. She gave me the same 'So what?' look.\n\nThis was wonderful; neither woman knew what they were fitted with. I stood them side by side in the cabin and took my digital camera out of my side pocket. \"This is a 'before the duel' picture. Later tonight I want to get a photographer to take a picture of us all together.\"\n\nNeither woman was saying anything. Time for me to shock my ladies. I pulled the two lighter sized remote controls from coat's pockets. I had checked out everything earlier but still I said, \"Let's see if everything works.\" With mom and daughter looking at me with questioning eyes, I pressed the 'ON' button on each remote. Their eyes grew big as silver dollars and the both inhaled deeply. I chuckled and added, \"They seem to work\" and turned the remotes off.\n\nI guided two confused girls, who were learning to walk with their new gear, to cocktails and an explanation of tonight's rules.\n\n\"The disagreement you two are having is because you are both strong willed beautiful women. You both want your way. You need to learn to work out your differences.\" I handed each the remote that controlled the other. \"All night, I want you to watch the other. Anytime you want, hit the 'ON' button and watch the effect you are causing.\"\n\nAs we sat at the table, the girls each pressed their 'ON' buttons. For about a minute, both enjoyed the feelings before both turned the remotes off. Linda spoke, \"Tom, this is not a good idea. The vibrations are very intense. People will know.\"\n\n\"Well its better than killing each other. If you feel you are going to scream, cum and collapse in a withering heap on the dance floor, you have the power to make sure Emile is moaning beside you. It's almost eight. Lets head for dinner.\"\n\nAll through the special last night's dinner, I learned to spot the stares, little body freezes, hesitations in speech and naughty smiles that my dueling ladies were creating in each other.\n\nLinda leaned over to me during dessert, \"Tom, I'm soaking wet. Can everyone smell that I'm turned on?\"\n\n\"I certainly hope so.\"\n\nHer little bug must have turned on because she straightened up. She didn't seem to care anymore if other people were guessing what was happening to her.\n\nWe got into the short line to have our pictures taken on our way to the dance floor. I had borrowed the two controls from the ladies. I'm sure they thought I was protecting them from taking a funny picture. My arrangement with the photographer was for him to tell us to smile on the count of three. At two and a half I turned on both remotes. The picture was going to be priceless. All it cost me was two sore arms. Each woman belted me pretty good as we walked away from the photographer.\n\nSince there was only one of me to dance, I alternated between Linda and Emile and urged them to dance with other guys. I even solicited a young handsome man to be Emile's partner for a fast dance. Several times I noticed the men's puzzled expressions as they thought they heard a faint buzz, thought they got a whiff of excited pussy, thought they heard a moan or thought they felt a tremble go through mom or daughter. After about two hours, we were ready to go back to their cabin.\n\n\"You two strip for me. I want to see who won the dual.\" Linda's panty hose had contained her wetness. Emile was wet to her knees.\n\nEmile said, \"I need to get this thing off me before my pussy falls off.\"\n\n\"Not yet. You two are too evenly matched. The night is a tie so far. You two get on the bed together. I'm going to turn on both the \"Dragon Flies.\" Whoever makes the other one say 'Enough,' wins.\n\nThe turmoil on the bed was a turn-on to watch. Mom and daughter started out wrestling, each trying to pin the other's arms. At one point, Emile grabbed one of Linda's nipples and squeezed. Her mom lashed out grabbed one of her daughter's nipples in returned and twisted it even harder. That game did not last long. An unspoken, mutual pack was made, \"NO NIPPLES.\"\n\nThe ladies destroyed the neatness of the bed. Sheets, pillows, blankets were all either twisted or off the bed. What had started out tentative was now a sweaty struggle with fingers trying to get leverage by grabbing butt cheeks, necks, feet, arms and even pussy hair. The fight turned less aggressive when Linda put Emile in a headlock. Instead, of trying to pull free, Emile just starting sucking the available nipple.\n\nDamn, the fight was over. Now, the making-up period was beginning. Nipple rubbing quickly progressed into full on French kissing and moaning. When Linda spun 180 degrees, she started to lick around her daughter's 'Dragon Fly' and work to remove the straps holding it in place. Mom was skilled and soon had the ever buzzing device folded back along one of Emile's legs and was noisily sucking and licking away.\n\n\"Emile, your mom is about to win.\"\n\nWithin just a few seconds, each head was buried between beautiful eager legs and a slurp fest began. A clear winner was emerging. Emile, had mom moaning loudly. But you cannot count out the wisdom won through years of masturbation. Linda sunk two fingers deep into her daughter and worked them with lightening speed. In less than a minute, Emile stopped licking and sucking, giving us all her editorial comment on the evening, \"OH SHIT.\" She came, drenching Linda's skilled fingers and grabbed her mothers head and began to fuck that too. Twice more Emile came and then pushed Linda away from her tender pussy.\n\nLinda's eyes were gleaming and her voice was husky, \"Is that 'enough' Emile.\"\n\n\"That's \"Enough.\"\n\nNow it was the victor's and my turn. I had stripped during the last act. Now, I pushed myself onto the bed. \n\n\"Linda, ride me until your cunt is satisfied.\"\n\nI thought that was a civilized and in control request. Linda flew onto me still in fighting mode and impaled herself on my cock while she was still in mid-flight. The impact was considerable, knocking most of my breath out. Well, that made me aggressive. I grabbed her hair, said, \"Fuck me woman, fuck me hard\" and then kissed her far harder than I had planned to. The more I tasted her daughters cunt juice the more I wanted. That juice was all over Linda's face and neck. I licked and sucked her face while ramming my cock up into her. She in turn, rolled her face and neck to all angles helping me lick her and she pushed down on my dick every time I lifted her hips off the bed with mine.\n\nThe act was not evolved human. This was licking, tasting, hungry sex. Sex must have been like this just a few years after man evolved into man. I needed, no demanded, to be a caveman again. I manhandled Linda onto her hands and knees. Taking hold of her hair with my left hand and her shoulder with my right, I slammed into her for my pleasure. I wasn't waiting for her. If this was a race to cum, I sure the hell was going to win it. But I didn't win. In fact Linda later told me that she had been cuming since we had started fifteen minutes earlier.\n\nMoving my hand from her shoulder, I slapped her ass out of sheer lust. She urged me on, \"Spank my ass. Spank me hard and fuck me. Fuck me even harder than you spank me.\" That is my translation. Linda was clearly having trouble breathing and her words were very jerky. I slapped her ass cheek and grunted like a pig. I just couldn't get nasty enough to satisfy her or me.\n\nThe least degrading and vulgar of the words that burst from me were, \"Damn it cunt, slam back into me and fuck me. I'm going to push so far up you when I cum you'll taste it. Fuck me, Cunt.\"\n\nWe were getting wilder and wilder when my body began to lose it smoothness and I began cuming. After putting two shots of cum in her womb my dick slipped from her and I finished with my cock lying in the crack of her ass. I was still humping her and spreading her wetness and my cum everywhere.\n\nI collapsed on Linda's back. She was on her knees with her face buried into the bed. She had almost all my weight across her upturned ass and seemed perfectly comfortable that way.\n\nWhen I finally rolled off my perch, onto my back my cock had strings of cum hanging from it and my body was wet and shinny. Emile closed her fingers over me and started to lick me clean. \"God, that hurts, but don' stop.\" She didn't. I did not harden but I was clean.\n\nEmile spoke first, \"You two were wild and really something to watch. I guess I lost the bet and have to live at home.\"\n\nLinda set up, rubbing herself between her legs, \"I came in, out-of-control buckets just like you did. Let's call it a draw. If Tom pays, you can try living away from home for at least one year.\"\n\n\"I'll pay but you have to go home with me for a couple of days before I drive you two sex machines back to Sacramento.\"\n\nWe just pulled the sheets from the floor and tried to cover ourselves. I went to sleep hoping neither Linda nor Emile would touch my cock until morning. "
    ],
    "authorname": "LaPatitMort",
    "tags": [],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/cruise-to-alaska-day-06"
}