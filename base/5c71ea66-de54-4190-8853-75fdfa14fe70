{
    "title": "Chosen Ch. 07 (Conclusion)",
    "pages": [
        "I'd never flown anywhere first class before, and I can see why people who do it, always do it. The first class seats are actually comfortable. You don't feel like herded cattle. \n\nSteven and Marcia were not in first class. I didn't miss them. Steven had turned into a mother hen, fussing over everything I ate, my exposure to sun, and how long I talked the two times I was recognized from the cover of Jane In Chains, and got asked for an autograph. (That made a total of three times in my life, and I think I was more embarrassed than the people asking for it.)\n\nThe flight was long, but overnight, and I found I was able to sleep. We landed five minutes early, just before eight in the morning, near Madrid.\n\nWe were met by a limo, and luggage was taken care of as we settled in plush leather seats. (I clung to my carry-on; it had the book in it.)\n\nIt was all wonderful, but I felt completely unworthy. It wasn't as if my modelling career was taking off. I was not a celebrity. I was only someone chosen by a book. \n\nBut still, here I was in Spain. I was still stunned by it all, as the limo drove off with me, Steven, Marcia and a smiling woman attendant in the back.\n\nThe attendant promptly unpacked a large basket, and handed out trays with a light breakfast -- local fruit, pastries, eggs and water. \"Welcome to Spain. My name is Suzanne and I will be serving as Miss Smith's personal assistant and concierge for your stay. Travel time to the hotel is four hours and twenty five minutes; but we'll stop midway to stretch. If you need anything at any time, ask!\"\n\n\"Miss Smith seems to like all this attention, from her blush,\" Marcia said, grinning at me. She wasn't being catty, but she could be a merciless tease. I treated her to a small embarrassed glare.\n\n\"Coffee,\" Steven said, impassively. \"The airline coffee was atrocious.\"\n\nStupid asshole, I thought. He was intent on acting like a big time agent, oh-so-used to having a personal assistant at his beck and call. A long running, vague and simmering dislike for him, suddenly flowered into utter disdain. I certainly did not deserve Susanne, but just maybe I deserved better than Steven. If this gig lead to anything better...\n\n\"Of course,\" Suzanne said. \"Caf\u00e9 con leche is how it's traditionally taken in the morning in Spain, would you like to try it?\" she said.\n\n\"That's, like, with milk, right? No. Black.\"\n\n\"For one?\"\n\nMarcia and I declined. Suzanne smiled and set up a small coffeemaker in her basket of tricks. It plugged in by her seat, and she had it going in no time, burbling quietly in the bottom of the basket. I remembered from my reading that the Spanish liked their coffee roasted dark and nearly espresso-like, and I silently wished Steve luck getting it down. He was known for bitching that Dunkin Donuts coffee was too intense and bitter, and he wouldn't touch Starbucks. \n\nYou despise him, Adriana's distinctive internal voice suddenly said to me. Why have you put up with him this long?\n\nHe finds work for me, I thought back. \n\nYou're weak, she replied, and then fell silent.\n\n+++\n\nWe spent time commenting on the scenery -- Spain is gorgeous -- and how people dressed.\n\n\"Oh,\" I said. \"I didn't check the weather today.\"\n\n\"In C\u00f3rdoba it will peak at around 86 Fahrenheit today, around 1pm or 2pm. No rain is expected for the next three days,\" Suzanne said, immediately.\n\n\"People here use Celsius, don't they?\"\n\n\"Yes. About 30 degrees today. A little wind; it won't be a bad day if you're outside. If you stay into June the temperature will creep up; C\u00f3rdoba doesn't get too bad; Seville is worse. August can be awful.\"\n\n\"Oh, I don't plan to be here that long. This is just a photoshoot. Though it is very pretty here, I don't know if I'd mind staying...\"\n\n\"Oh, you'll have more gigs,\" Steven said. \"We'll be keeping you busy.\"\n\nHe's trying to impress the servant, Adriana whispered to me. That's pathetic. \n\nSuzanne is not a servant! I snapped back.\n\nOf course she is. And she seems like a good one. I've never had one; it's kind of nice...\n\nYou're being a pig. Go back to sleep.\n\n+++\n\nAt the hotel -- a towering fortress of a place -- Suzanne tried to take my carry-on bag. I firmly declined the help. She didn't miss a beat; nothing seemed to faze her.\n\n\"Mister Renseman and Miss Debios have rooms on the sixth floor. You are in the suite on the seventh. This is just a place to stay when you want peace and quiet, Miss Smith. It's expected you'll stay in the castle most nights. That's a convenience for the photographers, who will want some early morning and late night shots at the site. This limo is for your use; there will be a second one available for your agent and assistant.\"\n\nShe escorted me to my room and swiped us in. \"If you require anything, it's quicker to deal with me than deal with the hotel staff.\" She handed me a small device. \"This is my call button. Tap it and I'll come running. The number on the tag is my cell phone number, if you don't need my personal presence. I'm on call twenty four seven. Elena and Alexandro, the limo drivers, are my backups. Never hesitate. Now, if you're dining in, this is the electronic menu for room service. Just tap on what you want, anything from a quick snack to a meal for the three of you. No need to call the order down. If you have questions about the services of the hotel itself, channel 1 on the screen there explains it all. You have a private wifi connection, which is unlimited use and the hotel staff can't read it, so feel free to carry on those wild relationships with the boys back home,\" she said, with an impassive face; but mischief glittering in her eyes.\n\nA bellboy rolled my luggage in. Once he settled the bags, I reached for my wallet, but Suzanne smoothly stepped in and tipped him. As soon as he departed, she turned to me. \"At no time do you touch money, Miss Smith. My employer would take it as a personal insult. The only exception is gifts you buy for friends. Anything for you or your staff, I pay.\"\n\nShe left me with three room key cards, and departed with Steve and Marcia to get them settled.\n\nI looked out the window.\n\n\"I'm in your lands, Lucio. You probably saw these hills on your way to Seville. I'm sure the buildings look very different, but the hills and rivers won't have changed much. I'm in your lands and very much in your hands. The boys back home? I don't think I'll be needing them...\"\n\nI took a bath in the Jacuzzi; it thoughtfully had a phone built into it, so I arranged for a late lunch with Marcia. I decided Steve could be busy elsewhere, arranging my meeting with my employer.\n\n+++\n\nI met that employer the next day. I've decided not to name him, as this was a private shoot, but he made a fortune in Japan on robotics and has a fascination with producing and patronizing art -- especially art involving women. He'd rented a castle near C\u00f3rdoba for his time here, which gives you some idea how he rolls. Suzanne was in his permanent employ; I got curious and asked her about her work. She made over seven times what I had in my last steady employment, and she spoke six languages fluently. He had two others just like her, one here and one in Japan.\n\nI'd been afraid the introduction would be sleezy, but he met me in a suit and tie, in a temporary office he'd set up in a tower, with Steven, Suzanne and another assistant present. He complimented me on my beauty exactly once, and then launched into his vision for the shoot. Steve tried to insert himself into the discussion, but my host merely looked at him, and that solved that problem. There was a difference, I'd learned, between real authority and Steven's blustering.\n\nMy employer smiled at me. \"I am looking for overtly sexy, miss Smith, but not trashy. I want to capture the heart of a proud woman being forced to face her own need to submit to masculinity. I have tried this with a few Asian women, and frankly, if I can be allowed a stereotype, they unerstood the submissive aspect but missed the proud one. After a few tries my advisors suggested I look to American or Spanish women. What I need comes closer to acting than modelling, but when I saw your portfolio I was struck by your expressive face, in addition to the other things you bring to the table. Your book cover work was very evocative.\"\n\n\"Thank you. I look forward to realizing your vision.\"\n\nHe smiled. \"Do you? You haven't done nude work before. You have no reservations about it?\"\n\nWait, said Adriana's voice in my head. You're posing nude for this... person?\n\nShut up, Adriana, I thought back. Not now.\n\nNaked? For a man you do not know and will never love? For money? You're a whore?\n\nIt's modelling! It's my profession!\n\nIn my day if a man wanted a woman's beauty, he married her for it! She was promised a lifetime of companionship and care! What are you getting instead?\n\nIt's not like that! You don't understand my world! You were raised by nuns!\n\nAnd you were raised by whores?\n\nSomething in me bridled, the wonder and awe of having a voice in my head completely obscured by fury.\n\nListen to me right now, Adriana. This is my life and you're here because of who knows what magic, but that doesn't give you any right to judge me. Lucio told me to take this job, and I took it because it was the only way I knew how to follow along on this crazy ride I'm on. I don't know what this is about. I don't understand you or a single thing that's happened. I am doing the best I can to keep up with something no one in my lifetime would ever understand, out of a loyalty I feel for someone I don't even know! But the choices are mine to make, and if there's a purpose to you being here, it's to help me. So you'll help me or you'll stay silent! No other options.\n\nShe paused. So. Maybe you're not so weak after all. That is something, because you'll need all the strength a woman ever had to manage a life with Lucio. Very well. I will let you make your choices, but if you sleep with anyone here I'll make you puke lizards on them!\n\nIf a voice in your head can flounce off in a huff, hers did.\n\nI pulled myself together. My employer was waiting for an answer.\n\n\"I have reservations, of course I do. But the contract I signed had strict limits on what was filmed and where those recordings can go. I believe I can do what I promised to do.\"\n\n\"Very well. Let's meet the cast.\"\n\n+++\n\nI was filming with two men, and if you like them muscled, mustached and macho, these were your guys. They were strutting around the set bare-chested, and I have to admit they were both serious hunks. I was suddenly intimidated. I was going to be naked. They were going to be naked. I knew from talking to other models that a lot of nude work is really partial nudity and careful camera angles. But not this time.\n\nI was introduced to them, and that put me at ease. The taller one was clearly gay, and somehow in this context that was somewhere between comic and calming. The other one was Spanish, with limited English; he ogled me freely, but the smile and handshake were ok. I decided I liked them both, and would continue to like them just fine until those jeans shorts came off... and then I'd just close my eyes and hope I didn't make a wet mark when I sat down.\n\n\"K, bitch,\" the gay one said, winking. \"Let's try to do everything single take, because I got a date this evening. Local bodybuilder.\"\n\n+++\n\nActing -- setwork in general -- is hard. I don't know how actual actors do it, especially erotic work. The constant interruptions, set changes, intrusive camera work -- it's a complete buzzkill, and the constant attention to everything going on is emotionally draining. Maybe that's why so much porn sucks. \n\nMy acting had been limited to a few commercials. I was getting a rapid education. But I'm not going to describe all that. Only one thing happened that mattered in the shoots.\n\n\"Chains scene,\" the director called. \"Adrienne, these are real metal chains, so we're going to wrap your wrists in flesh-colored leather for protection. If it hurts, say something. The guys will be pulling you around and you'll be struggling. The guys have asked that you keep your nails to yourself, but they can take slaps and punches. In the end you are restrained and dragged into a very sensual scene.\" He handed me the updated script. He lowered his voice. \"Sweetheart, this part is porn and porn is hard work. We're going to try to capture a specific mood, and you're not a trained actress. So we're going to try to do it in one take. I don't know how good you are at faking responses, but look over the script carefully. This scene is the erotic centerpiece. You haven't been asked to fake orgasms, but we want it obvious you're struggling not to have one. Take a few minutes to get your headspace right.\"\n\nMarcia was all over me, doing that magic thing she did where she put a lot of makeup on me, and to the camera, it didn't look like there was any on when she was done. Suzanne hovered, with bottled water, a bottle of wine, fans -- it was hot today -- and keeping the other crew off of me. \n\n\"Alright, sweetheart,\" Marcia said. \"This is the part where the robe comes off. Just step behind this screen.\"\n\nShe applied makeup in places I didn't usually apply makeup to. \"That Ramon,\" she whispered. \"The straight one. Sweetheart, he can't take his eyes off you.\"\n\n\"I... know.\" I said. \"He's been impeccably polite, but I felt naked even with the robe on. I don't know how I'm going to step out from behind this screen.\"\n\n\"As if it's natural,\" she said. \"Don't for a moment show shame or coyness. Head up, eyes forward, attentive and calm. This is a career building moment. It's interesting that the guy paying for this isn't around. But I bet he's watching. Turn around... yeah, those workouts have really done it for you. I'm actually going to have to blend out some of the muscle tone to get a more feminine look... \"\n\n\"I look plenty feminine,\" I said, archly.\n\n\"Yes you do, honey, but cameras exaggerate. They aren't shooting soft filter.\"\n\nMarcia's claim to fame was that she was fast. Steven liked that because it saved money, but for once I wished she'd dawdle. \n\n\"Perfect,\" she said. \"Show time.\"\n\n+++\n\n\"We won't rough you,\" Ramon said. \"We make it look rough, ok? But no so much really. The grip on your arms will be tight, though. You can be rough back, you need to make it real. No claws. Open hand to the face only, my face is too pretty for bruises. Si?\"\n\nI nodded. \n\n\"Places.... Action,\" called the director.\n\nThey two guys chased me, cornered me, and then Ramon caught my wrist. I pulled free, but he gripped again. And now the script just said \"struggle\".\n\nI'm not sure what happened. But I was suddenly aware of Adriana, and the Victoria Secret workout I'd been living by had been punches and kicks. My limbs moved without me thinking about it... \n\nRamon went down from a fist in the solar plexus, and Henry got a chop to the balls. \n\n\"Cut!\"\n\n\"Shit I'm sorry! I'm so sorry! I didn't mean to do that!\"\n\n\"What the fuck, actress is fighter?\" Ramon wheezed.\n\n\"No! No! I just... panicked... I'm so sorry!\"\n\nHenry was ok -- he was wearing a cup and I'd only startled him. But it took Ramon two minutes to breathe normally.\n\n\"Check out this shit,\" one of the camera guys said, bringing a laptop over. \"Pivot and punch, elbow strike, low roundhouse chop, step away... it's not real cinematic, but what fucking realism.\"\n\nAdriana, I hissed. You did that!\n\nI've been grabbed by enough men in my life. Lucio taught me to fight back. Oh that felt good!\n\nStop it! Stop it now! This isn't real!\n\nI know. They weren't expecting it. That made it fun.\n\nI couldn't control my blush. \"I'm sooo sorry! I...uh, had a self defense class in junior high. I had no idea any of it stuck! It won't happen again.\"\n\nWe'll see about that, Adriana murmured.\n\n+++\n\nI have to explain that Adriana wasn't... coherent. She was just a memory, a way of thinking and feeling... she'd react to things I experienced, but she didn't always remember previous conversations or situations with me. If I sent her \"away\", she'd stay quiet until something else triggered her. But she could appear very suddenly. Very, very suddenly.\n\nRamon and Henry pushed me back against a wall and wrapped chains around my wrist. \n\nAdriana was back, and I shrieked in rage and pulled on the chains with a fury I'd never known. This time it was Henry that got hurt, his finger caught awkwardly by the whipping chain. But now they were used to the crazy actress, and Ramon put me back against the wall with a vehemence that took some of my breath out of me, and got the chain across my throat to settle me down.\n\nAdriana whiplashed to a different emotion. Oh, Lucio... she moaned in my head.\n\nToo much information, I snapped back at her, but she didn't hear me. She was with Lucio again, as far as she knew, and a fire that I've never felt anything like, raged up. Next thing I knew I was passionately kissing Ramon -- and this time there was no dismissing Adriana. Shaking, I sank into what was happening, thoughts blurring. I was dimly aware at the shocked silence on the set, the frantic but quiet movement of cameramen scrambling to catch action that had gone dramatically off script. Ramon shifted to this unexpected scene change by ripping my blouse off, and Adriana eagerly pressed my breast into his hand, then my thighs around one of his. I was sinuous, writhing, hot, wet...\n\nAdriana, stop! He's just an actor! Stop!\n\nShe suddenly vanished, leaving my body still hotly aroused and squirming, but back under my control. I did the only possibly thing I could think of, given the part of the script we were supposed to be doing -- I suddenly pushed Ramon off me and gave him my best mocking, cold smile, as if I'd only been toying with him.\n\n\"Cut!\"\n\nThe crew gathered around monitors, staring avidly at what they'd captured. I heard torrents of Japanese and English.\n\nMy employer's voice suddenly echoed from speakers. \"Miss Smith, is the script not to your liking?\"\n\nI was so screwed.\n\n\"No, it's fine!\" Think, Adrienne, think! \"I'm just... remember I'm not an actress. I'm trying to figure out this character I'm playing. You wanted proud.\"\n\nI heard some Japanese over the speakers, and then English again.\n\n\"My script writer and I agree you've taken this is a better direction than we'd come up with. I should have anticipated this. I'd fired actresses for not being proud enough, for just slavishly yielding. I should have known that someone able to play the kind of will and fire I was hoping to see in character, would have the kind of will and fire to experiment with the script as well. We're going to take a break to let the grips deal with the new camera angles this scene will need. My writer and I will be down shortly to discuss these new ideas with you.\"\n\nSuzanne was at my side instantly, with a new blouse and a sponge for my head. \"You impressed him,\" she said, \"That doesn't happen often. He's put you on his writing team. That means your pay scale just changed. His writer may feel threatened by that, so don't bring up a pay raise, just be pleasantly surprised when you see the paycheck. I can't promise this, but think you just netted another three thousand dollars American per day, or at least that's what will happen if he continues to like your ideas. This is just about unprecedented, Miss Smith. He's a man who gets what he wants when he wants it, and no one who works for him would consider trying to improve on his commands.\"\n\nAdriana, I thought, desperately. I'm going to need your help.\n\nNo. I made a mistake. That's not Lucio. And anyway figure it out on your own. That actor is no Lucio, but he's not so bad either. Are you that cold a woman that you can't be passionate? Where's your fire, your anger? You're a woman. Blaze like the sun, don't drizzle like a cloud.",
        "Not passionate... \n\nI don't know if I've ever heard anything that stung so much. \n\nMy employer approached, smiling. He really liked Adriana. I suddenly felt like I was in the way.\n\n+++\n\nA pattern emerged. Chains on my torso woke Adriana and then there was no difficulty getting my employer the kind of scenes he wanted. Ramon figured out quickly that more than acting was going on, and he took savage delight in playing with the rules and limits of my contract, to see what kind of responses he could provoke. My contract was absolutely clear about penetration, but I'd failed to clearly specify other limits, and he could do things with the palm of his hand that had Adriana begging. (Her, not me. I'm not that kind of a slut.) In the end he got a very reluctant but undeniably intense orgasm out of me. I cried a little afterwards (me, not Adriana) because I'd been so certain that wasn't going to happen. The cameras got it all. \n\n\"Cut!\"\n\nSuzanne instantly appeared and escorted me out of the room, and plied me with tissues, a washcloth, a fresh robe and sips of wine.\n\n\"Are you ok?\"\n\n\"Yes. I think. I've never, um... done that with anyone else watching. I, um... I'm dying here. Thanks for getting me out.\"\n\n\"I have to be my employer's woman for a moment, Adrienne. Is this going to become a contract litigation?\"\n\n\"I... no. I know what's in that video. I'd never be able to claim I was unwilling.\" Had I been? It was Adriana's fault, but Adriana was a memory, not a person. Could I really blame anything on her? \n\nAnd honestly, even as shook up as I was... was there a part of me that had liked playing the reluctant wanton, a part of me that wasn't Adriana? The helplessness in those chains, and the movement of hands and lips... Adriana had started, but it was me that finished it. \n\nYou've never had a real man, Adriana whispered. Wait until you find Lucio. You are in for something you can't even imagine.\n\nI was in Lucio's lands. I resolved to try to learn about him. Maybe the libraries...\n\n+++\n\n\"We're out of clues.\" I said.\n\n\"Perhaps,\" Jose replied, putting up his feet on his desk. \"But I don't know that's true. We've come a long way. I don't think the trail ends here. Somewhere ahead, it crosses with a book... Alan, have faith. Maybe we only need to wait.\"\n\n\"I hate waiting.\"\n\nI stared pacing, but his office was much too small to make that a pleasant activity.\n\n\"I'm bored, and it's miserably warm.\"\n\n\"Try this town in August,\" Jose chuckled. \"The heat is only beginning...\"\n\nI kicked a wastebasket out of my way, the better to pace. \"Think of something, Jose. Be clever.\"\n\nHe nodded and closed his eyes. Five minutes later, he was gently snoring. I kept pacing.\n\nFinally I bent and said into his ear, \"The world is in flames of injustice and immorality, and the Catholic church is powerless.\"\n\nHe started awake. \"What? Burning? Alan... that is not nice. And I like to think it's not true.\"\n\n\"About the world?\"\n\n\"No, the world is definitely burning. But the church is not as inactive as you think. Though... wait.\"\n\n\"What?\"\n\n\"Something caught at my thoughts... church, burning... candle! Alan, we missed the obvious. People at that church in Llerena knew that the candle is unusual. A tradition to explain it must exist, and they must know it.\"\n\n\"I missed nothing. I tried to talk to them. They don't return calls.\"\n\n\"They don't return your calls. I am Doctor Jose Estrella, noted catholic historian. People in this part of the world talk to me. I already have permission from an archbishop to pry...\"\n\nHe fussed with phone listings, and dialed.\n\n\"Good evening. My name is Doctor Jose Estrella, and I have been granted permission from his reverence the archbishop of Seville to conduct an interview in regards to- excuse me? No I will not call back, this is a matter of some importance... yes, I'll hold.... Thank you, Father. I'm calling in regard to a recent theft... No, not the gem... please, let's not play games, Father. I have permission from the archbishop to investigate the candle and the circum- what do you mean the wrong archbishop? Do you think that because you are in a different archbishopric that you are going to stonewall an offici-\"\n\nHe stared at the phone, and then hung up. He looked angry, and I smiled.\n\n\"Didn't go well, it seems.\"\n\n\"Thirty years and more in my role within the church and this is the first time anyone has hung up on me. He dares?\"\n\n\"Why, Father. You seem angry.\"\n\nHe glared at me. I waited. He glared more, and then stood. \"You broke into that church, Alan. Was it difficult?\"\n\n\"It was trivial. I was ashamed to accept payment. Well, not very ashamed, but still.\"\n\n\"Will you do it again?\"\n\n\"Yes, and this time for free.\"\n\n\"Good. Because this Father Brandon has made the mistake of blocking an investigation while sitting inside a church that's registered as a historical site by the Vatican. I have the right to enter historical sites at whim, on any official church business. Bring your lockpicks in case he thinks he's going to cockblock me with an archbishopric jurisdiction and a locked door.\"\n\n\"Excuse me, did you just say-\"\n\n\"Biblical precepts state that it is not a sin to be angry,\" he gritted. \"But add that it is unwise to let the sun go down on your anger. Sunset is at least thirty minutes away. I'm going to enjoy this thirty minutes. Get the car, Alan, we're setting out now.\"\n\n+++\n\nWe arrived in less than three hours. The church was not large, part modern and part old, and dark except for one small lit window on the second floor. I smiled to see it, as I often do at the sites of old jobs.\n\nJose contemplated the lit window. \"We go in quietly, I think.\"\n\nWe approached a side door, almost lost in the dim light of a faded sunset and half-moon, mixed with the town's own glow. I grabbed Jose by the collar suddenly, and pointed at a spot on the wall. \"Camera,\" I said quietly. \"Let me check the front door.\"\n\nI moved off. It didn't take long to discover cameras on all the doors; they'd learned something from my last visit. I returned to Jose.\n\n\"I like my odds better on this door. Not visible from the road; and the stone fa\u00e7ade looks climbable.\"\n\nI spent fifteen minutes climbing and disconnecting the camera. Five minutes later the door was unlocked, and I called Jose in.\n\n\"They might know we're here.\" I said, softly. \"Depends on whether they get a signal when the camera is taken offline. At least the door isn't wired.\"\n\nJose flipped on the lights. I blinked.\n\n\"Doesn't matter if they know I'm here,\" he said. \"I have a right to be.\"\n\n\"I don't.\"\n\n\"You're my bodyguard. So you do.\"\n\n\"I'm the bodyguard? Then why do you have the gun?\"\n\n\"You're not a great bodyguard. Just the best I can afford on my low salary.\"\n\n\"You're unusually flexible in your definitions, for a Catholic.\"\n\n\"The times demand it.\" He gestured. \"Up those stairs. I want a word with whoever's in here.\"\n\n\"You won't get one,\" said a voice at the top of the stairs, in Spanish. \"I'm armed. The police have already been called.\"\n\n\"Call them off,\" Jose said. \"I have a right to be here.\"\n\n\"You're in the new part of the building. The historical site privilege you're going to claim only covers the old section. You choose the wrong door, Father Estrella.\" \n\n\"Call me Doctor. And this seems like an unusually fine degree of hairsplitting,\" Jose said, mildly. \n\nWe were both staying away from the bottom of the stairs and our unfriendly host's field of view (and fire.) I cast around at the office we'd entered, looking for the next move.\n\n\"You were told not to come,\" the voice said.\n\nI spotted my move. A lighbulb in a sconce. Unscrew the light bulb, wrap it in foil...\n\n\"You knew I'd be coming anyway. The artifacts are continuing to kill people. Whatever is happening, has to be settled.\"\n\n...screw it back in, find the light switch...\n\n\"You won't be settling it, Doctor Estralla. This is not a matter for academics and their idle curiosity.\"\n\n...flip the light switch, blow the fuse...\n\nDarkness filled the office we were in. The upstairs was still dimly lit, and that changed everything. Jose stepped into the stairwell and fired a shot. There was a frightened burst of profanity from the top of the stairs.\n\n\"I take my rights as an academic researcher very seriously,\" Jose replied. \"And I didn't have to miss. You aren't going to get a shot off before I do, not while rubbing that plaster dust out of your eyes, so just slide the gun down the stairs, and then follow it down slowly.\"\n\nThere was a pause; and then the gun clattered down. \"When the police get here-\"\n\n\"You'll be unconscious and I'll tell them I chased an intruder off. I'm a priest and I'll have paperwork they don't understand saying I have a right to be here. They'll leave. So come down here and call them off. Come slowly.\"\n\nHe did. \n\nI opened a flashlight and quietly collected his gun. \"So... about armed priests. Is this like a Vatican Two thing? Because my grandfather never told me about priests that were packing- Wait... Jose. This is a three fifty seven magnum. If he'd hit you, you wouldn't have gotten up again.\"\n\nJose gestured with his gun. The priest picked up a phone and dialed. While he talked, I amused myself by taking the bullets out of the Magnum. The situation didn't call for two guns, and if the priest recovered this one it wasn't going to do him any good.\n\nThe priest finished the call, and Jose waved him into a chair, and then sat on the desk. \"You're Brandon?\"\n\n\"Yes.\"\n\n\"You understand about the candle. Who else here does?\"\n\n\"One other priest. The number who understand is kept to two. That was how the order was designed.\"\n\n\"Who created it?\"\n\n\"Cardinal Juan de Cervantes. 1453 if you are curious.\" \n\n\"Always. How did the candle get here?\"\n\n\"It was brought by a priest, years earlier. I don't know details. There's a safe in the basement that holds the details. I don't know the full combination. The other priest isn't here and I will not call him. So you can't get in.\"\n\nI smiled.\n\n+++\n\n\"You're telling me,\" Father Brandon said, \"that one of the most dangerous secrets of the church, has been kept in a safe that any safecracker could open in thirty minutes, since 1920.\"\n\n\"No,\" I said. \"A real safecracker could probably have done it much faster. I'm barely a talented amateur. The problem is, you're using a safe built in 1920. Try to keep up with the times.\"\n\nJose was leafing through the typewritten sheets we found. \"A priest named Oro Cruz brought it here,\" he said. \"An unlikely name.\"\n\n\"It means Gold Cross?\"\n\n\"Yes, no one names a child like that. It has to be a pseudonym. So. 1394. He brought it here and here it stayed. There were some misadventures -- a priest was found to act very strangely when in possession of the candle, and I think I know what strangely means. Somehow this Father Cruz convinced people here the candle should not be destroyed in spite of its properties. There were debates about it over the next sixty years -- and each time he showed up to argue the candle be left alone to burn harmlessly, untouched.\"\n\n\"So this was his church?\"\n\n\"No. If these notes are correct, no one here knew him.\"\n\n\"Then-\"\n\n\"As a priest he would have been at least twenty five when he started his involvement in these events. He showed up here during a period of sixty years, until Cardinal De Cervantes created an order to watch over the candle. Do the math. I believe in angels, Alan. You probably do not, so leave that question where you found it.\"\n\n\"By now I'll believe anything.\"\n\n\"What do angels have to do with that accursed candle?\" Father Brendon asked.\n\n\"Hard to say,\" Jose said. \"But despite the deaths and the sexual entanglements, I feel less and less like these are accursed items. A grave injustice occurred to a man and woman -- and surely that happens every day -- but this time heaven itself seems to have intervened. No idea why or to what end -- but it was heaven, not hell. We are dealing in the miraculous, not the diabolical. So we must be very careful.\"\n\nI arched an eyebrow. \"Heaven scares you more than hell?\"\n\n\"Opposing the will of heaven is the worst thing I could do. Ruining hell's plans -- I do that every day before breakfast, on my knees.\"\n\n\"Speaking of your knees,\" Father Brandon said, dryly. \"Confession is in order for shooting at a priest.\"\n\n\"If I'd been shooting at a priest, you wouldn't be here to hear my confession. I shot at a plaster wall. Not even the worst sin of my day. Absolve me, Father.\"\n\n\"Fine, whatever. Absolved. But your diocese is going to pay to fix the wall. We're broke.\"\n\n\"Broke? This office is nicer than what I get to work in. You get an air conditioner. I perch a fan in a casement window.\"\n\nI cleared my throat. \"If you two can stop playing Who's More Humble Of Station, I'd like to know what the next move is?\"\n\n\"The next move isn't ours, Alan. We've dug as far as we can. Now we wait for the book to come to us.\"\n\nFather Brandon cleared his throat. \"Have you already researched at C\u00f3rdoba?\"\n\n\"No, why?\"\n\n\"That's where the notes of the priest who brought the candle are. Your Oro Cruz. That secret has been passed by oral tradition since the start. The library in the basement of the cathedral of Our Lady of the Assumption. You ask the librarian for the gold documents, from 1453.\"\n\n\"Why are you helping us now?\" I asked.\n\n\"The candle is stolen and now the notes have been taken,\" he said. \"The Secret Order of the Candle of Llerena ends today, with me. Whatever purpose it served is finished. Just as well, it never amounted to anything but not returning phone calls and sitting here most nights with a gun... Good luck, good riddance, and don't let the door hit you on the ass on the way out.\"\n\n+++\n\nWe were quiet on the drive to C\u00f3rdoba, the next day. All we had was a rumor of some information supposedly left by the semi-mythical Oro Cruz, hundreds of years ago. I should have been elated, but it sounded like such bullshit. A secret message left by an angel, or whatever, from the middle ages. Right. Even after all I'd seen, I wasn't buying it.\n\nThe library staff was helpful and friendly and they knew Jose's name, so we were led with some ceremony straight to the antiquities desk. A cheerful woman with red hair and green eyes and the cutest case of freckles I'd ever seen, smiled at us from behind the desk, and introduced herself as Hilda.\n\n\"Good afternoon,\" Jose said. \"I'm looking for a particular document or object. Search terms are Oro, Cruz and the year 1453.\"\n\n\"Yes,\" she said, typing. \"Yes, we have a match.\"\n\n\"Wait, what?\" I said. \n\n\"It's in the vault... it's literally from that year, according to this summary. It's been photographed, would you like to see those?\"\n\n\"Yes please,\" said Jose, meekly.\n\nShe walked us to a computer. Less than a minute later we had high resolution images of a single page document, holding a few paragraphs of old Spanish, and some wavy lines. Jose copied them to a thumb drive.\n\n\"No,\" I said. \"Not possible. You don't just leave a message for someone to find over six hundred years later. Tombs and major monuments get lost, razed, items require weeks of research to track down -- and this is just sitting here? Even if it was an angel or whatever-\"\n\n\"I'm trying to translate this,\" Jose said, mildly.\n\nI stared at the screen. Ancient Spanish is close enough to modern that I could get some words, but not enough. Jose started writing out a longhand translation for me.\n\nTo those who follow, you are close to your goal. You need the book, which will be in possession of the pale-haired woman, and the map. \n\nIt is not safe to draw the map here, but I have left part here and part with the abandoned. \n\nThe woman will come here, hoping to learn of these days. Follow her, and speak to her the day after, where she is staying. \n\nThe rest of the page was a series of crooked lines, with a wide gap in the middle, a vertical strip, missing.\n\nI sighed. \"A map with everything important missing. The rest of it is with the abandoned? What does that even mean?\"\n\n\"I don't know. That word is a bit of a guess. But I don't see what else it can be.\"\n\n\"Cruz is supposed to be an angel, you say. Is this really the best he's got? Vague words and an incomplete map? How about a damn revelation?\"\n\n\"Alan, if you don't mind. This is a library in a church and we have a document from an angel, or so I guess. If there was a moment for quiet, respectful gratitude, this is it.\"\n\n\"The hell it is. What's on the back of the document? We need the rest of the map.\"\n\n\"There's no photo of the back.\"\n\nI stormed off to Hilda, at the desk. Two minutes later I stormed back, with her.\n\n\"I've tried to explain to your friend,\" she said to Jose. \"The original is a very old document. We have it in a special storage unit with other items from that time. It's under glass in an argon environment. Taking it out is a job for the archivist. And there's a note in the files demanding that the document is not to be disturbed without permission from an archbishop.\"\n\nJose silently produced a letter from a pocket inside his vestment. She skimmed it.\n\n\"I have to make a phone call,\" she said. \n\n\"Here's his private number,\" Jose said, producing a card from the same pocket. \"He's hard to reach sometimes, but he'll answer that.\"\n\nShe was back in ten minutes, with a tall, thin man who would have looked more at home in a horror movie. The staring eyes, long, thin, grey hair and sudden, precise moments of his fingers made him uncomfortable to be near.\n\n\"This is Miguel,\" she said. \"The archivist.\"\n\n\"I want you to understand,\" Miguel said in a cracking, dry voice, \"That every time those documents are exposed to oxygen, they degrade. We don't have a fancy budget like some dioceses. We have the one argon case and everything in it is exposed when we open it. I need a compelling reason, not just some historian's whim-\"\n\nJose heaved himself to his feet and stared up into the eyes of the archivist. \"I am Doctor Jose Estrella, and you are a technician hired by the church to provide access to documents. It is your job to maintain them so I can look at them. I will look at them now.\"\n\nMiguel glowered, but turned and said \"This way.\"\n\n\"The meek shall inherit the earth,\" I said to Jose.\n\n\"Eh.\"\n\n+++\n\nTen minutes later, the insectoid fingers of the archivist removed a tarp from the metal case, washed up, and slipped a mask over his mouth. We peered through the glass top.\n\n\"I see the document,\" Jose said. \"What's that one filed with it?\"\n\n\"That's the reason you need an Archbishop's permission to open this,\" Miguel said. \"It's stored with the letter but not referenced in the files upstairs.\"\n\n\"We'll take that,\" I said.\n\n\"You'll take nothing,\" Miguel said. \"The letter gives Father Jose Estrella permission to look around. Not you. Now if you will step back, I'm going to break the seal, and I'd rather not have your overly moist breath getting into the case. Put on those masks and gloves in the meantime.\"\n\nWhen we came back, he had gloves on and was extracting the documents, sandwitched between two layers of glass. \"Keep them horizontal. If for some reason you must remove the glass covering, I will do it. Never touch the document directly. The acids in your sweat do permanent damage.\"\n\nI took out my camera.\n\n\"No,\" Miguel said. \"The flash will degrade the ink. And that second document may not be copied.\"\n\nJose flipped the Cruz note over. The back was blank. Then he turned to the pages of the other document, and began writing the translation.\n\nAs he wrote, he started visibly shivering.\n\n\"I said it may not be copied,\" Miguel said.\n\n\"I won't ask you to notarize this as an official copy. But my friend here doesn't read medieval Castellan, so a translation is necessary.\"",
        "\"The Archivist's Notes are very clear,\" he said. \"That document may not be-\"\n\n\"I have a gun,\" Jose said. \"I won't shoot you. I'll blow six holes in your argon case.\"\n\nMiguel fell into a shocked silence.\n\nI read along as Jose wrote. Soon I was shaking, too.\n\n<blockquote>\n\nI wish the enclosing letter to be delivered to the then-Bishop in Sevilla, after forty years to the day you receive it. By then the scourge of the Moors in our land should finally be at an end, and it will be right to take actions to cleanse the church of the stain of dishonor its own members have brought on it, without exposing that shame to the heathens who still swarm our lands today.\n\nAdriana of Seville 1413\n\nTo be read only by The Most Reverend Bishop of Sevilla, in the year 1453 --\n\nI am an old woman, widowed and without many friends. By the time you read this I am dead. I am not writing to ask anything for myself, other than justice.\n\nI write to tell people of how I was robbed of my hopes by a man who has had honor within the Church, and to tell the true tale of some sort of miracle or magic, which has been kept secret for some years. \n\nMy father was the Rev. Juanito de Morillo, born 1340, died 1394. This is no longer in doubt. I never knew my mother and I fear she died early, and unjustly. I was raised as an orphan by my own father, and put into the care of lay priests and nuns. He found it too shameful to claim me.\n\nFor that alone I request the statue raised in Sevilla to his honor, be taken down. He was a harsh and unjust man, a liar, and motivated by his own advancement and pride. But that is not the main reason I write.\n\nSomething unusual happened to me, either by the will of heaven or by the workings of some similar blessed fate that cares for women; something the Church itself has been deficient in in my lifetime, so it is no surprise heaven itself must act. And that something needs to be explained, and that is truly why I write. Attempts have been made to cover up the events, paint them as deceits of the devil, or explain them as delusions. They are none of those things. \n\nI am writing of the bell, book and candle from the illicit excommunication of Lucio De Amante in 1384, and the events that lead to them and came after them.\n\nLucio first met me when I was in the Sevilla orphanage, when I was 16. I will say without shame that he snuck into the orphanage after having seen me outside the walls with Sister Florentine as we shopped. How he snuck in I do not know; he was that sort of man. We talked, and did perhaps more, but nothing to sully me, as much as I came to want to be sullied. (That sin was long ago confessed, but Lucio had a way of causing me to fall into that sin again and again. I do not hold it against him.) During the evening he was discovered by Sister Florentine, and she called for guards to have him removed. I say with dark pride that he spanked her for her efforts, and then he left, fleeing crossbow bolts. (I am an old woman now and it pleases me to say that even at the time, amidst my great shyness and shock, I found the spanking more funny than horrific. She was a great busybody.) As he left he promised to continue our conversation \"at all costs.\" Mere words; I'd been raised to believe that men said one thing and often did another. That proved true in many causes, but it was never true of Lucio.\n\nLater that week he returned, with chains and a knife, and I was persuaded to leave my bed and follow time. I have no shame in saying that by then he truly needed neither chains nor knives to persuade me, but I put up a fuss out of modesty and pride. Not, I think, a loud enough fuss to get us caught, but the cloth he stuffed into my mouth and the thin chain between my teeth put an end to even that. He poured alcohol over the cloth and I became woozy, though not as woozy as I acted. \n\nWe were seen as we rode off. But the guards had unexpected difficulty in finding and freeing their horses, and so we got away... \n\nThat night, we talked. We talked long and late into the night, with me still chained at the wrists and ankles, and talking was not at all what I expected. For a few hours I believed he chose to respect my age and inexperience, but it turned out he was more interested in keeping watch for pursuers. (He more than made up for it the next night, but by then I was already in love. Loving him did not take long.)\n\nYes, he was a thief. But I cannot say he stole me unwillingly from the orphanage. We spend two months together and I made no attempt to leave him. He had no one but me with him at night. I learned to make sure he slept well, and I learned very quickly.\n\nI was finally recaptured, and I gave the artillerymen and swordsmen more trouble than I ever gave Lucio. Lucio had taught me to punch and kick. I ended up in chains again, but I sullied the ears of my captors with words they did not expect from a nun-raised orphan. (Lucio was a deft teacher of many arts.) In the end they called me demon-possessed, and gagged me. I chewed through the gag.\n\nLucio was wounded in the fight, but he swore to me that no matter what it took, he'd take me back again. I shouted back to him that he wouldn't \"take\" me, because I'd already given myself to him. There was no other man for me. It didn't matter that he was bad. He was never bad to me, except in ways I liked.\n\nI was sent to another town. I will not name it because even though I was held as a virtual captive for two years there - I was being kept for a more appropriate age for an arranged marriage, I later learned -- the people there were kind to me, as long as I didn't try to escape. I would have gladly escaped if I'd had any idea which way to run to find Lucio.\n\nInstead I sent secret messages with anyone leaving town, anyone who would carry them. (My father would come to rue the day he insisted I be taught to read and write.) Finding paper was the hardest part, but I was already an adept thief. (Lucio was truly a deft teacher, in so many things.) In the end, my keeper, whom I do not name, found out about my notes, and thereafter he occasionally left paper where I could find it. (He was not fond of his role as my keeper, and felt strongly that theft should not be added to the sins of my sharp tongue, endless scheming and pride.)\n\nMy notes perhaps did some good. Lucio eventually came for me, as I knew he would. He came with men pursuing him, and we barely got away. I swore to him then that I was his forever. \n\nHe also confirmed what I had suspected, that I was the illicit daughter of a priest. Since that day I have spoken no words to my father.\n\nThe next day they found us, and there was a battle. Lucio was wounded and I was captured, but the men all had injuries and chose to withdraw with me rather than try to take Lucio. I was brought back to the orphanage, now a veritable fortress, as so much of Sevilla was, because of the Moor problem.\n\nI was forcibly married to Antonio de Guzm\u00e1n, brother of the Duke, at the end of the year. I'd been bought by him for a fancy sword and some money, from my father, the head of the orphanage, Juanito de Morillo. It was on my wedding night I learned that Lucio had been excommunicated, killed, and sent to Hell.\n\nAnd so I believed, and it kept me docile and silent in my circumstances. If I could not have Lucio, it did not matter who had me. But the rumors began, of an excommunication gone wrong, seemingly opposed by the will of heaven itself (because why would the devil oppose an excommunication?) So I did not believe that Lucio went to Hell, and in that belief I shed my tears in private and mourned and became the respectable wife of a man I had no use for. \n\nAnd there the tale should have ended. But ten years later, in the summer of 1394, Father Oro Cruz made himself known to me, gave me my father's sword (the bride price of me) and told me de Morillo was dead, a victim of a magical retribution. He told me more. He had been present at the lie of an excommunication performed by my father against Lucio, and seen how it had gone. The book slipped from my father's hands instead of being slammed shut, the bell made no sound, the candle continued to burn when thrown to the ground. Great fear fell on the crowd and the priests present, and they fled. Lucio broke free from the bonds and took the items, swearing he'd bring down my father and have me regardless of the cost.\n\nFather Cruz told me still more. Three days later Lucio was again captured by my father's men and this time there was no ceremony or attempt at arrest. He was cut down in a hail of crossbows and musket fire and left dead. My father was present for this. \n\nFather Cruz saw to Lucio's burial, in a forgotten tomb far east of Sevilla. He told me Lucio had the items from his excommunication with him, but they were no longer the same. They were covered with Lucio's blood and somehow had changed to be magical; that is the word he used for it. The candle and book father Oro had taken elsewhere for safekeeping, but the bell he brought to me, saying that I must never ring it, even once. The book, he said, had talked to him and given him instructions that he was following now. I did not know what this meant. He also brought me my father's sword, and the news that my father was dead. I did not mourn, and I kept the oddly engraved and hateful sword only as an object of value.\n\nBut during the day when I was alone, the bell would hum and there would be whispering from it, which I could not perceive as words, but somehow understood. It was almost like being with Lucio, without words or his passions, but somehow peaceful. \n\nIn the end it became clear to me that I was to find his tomb and pray for him there. I was to leave the bell behind. I made my excuses to my husband and set out for the journey. It was risky for a woman to travel alone -- the Moors were more numerous then and our own soldiers unmannerly -- but I felt I must do this. But it turned out I did not have to travel alone. The morning I left, Father Cruz met me on the road unexpectedly, and he walked with me, silently, on my journey. We were not bothered.\n\nWhen I returned, both my husband and his brother the Duke were dead. The servants whispered they'd committed suicide. I knew the bell was somehow involved because it was not where I left it; I found it under a chair on the floor. As I had been away for some days, I was not accused of murder, despite that fact that it was well known my husband and I had no true love for each other.\n\nI felt nothing. I played my grief at his death. I received as much of his wealth as I could steal or convince the courts to leave me; I have not done badly.\n\nThe bell began to whisper to me again. It told me was that it would be taken by another priest. Two years later I gave the bell to a priest I didn't know, warning him it must not be rung. He rode northwest. By then the rumors of these items had begun to be investigated and it was clear the Church had decided they must become lost and forgotten.\n\nI have devoted my final years to serving the orphanage. Even if it was only built to confirm that I was an orphan, it has done good service in these warring times, and the children there deserve comforts. As I have had no children myself, I feel strongly that this is how I can best serve the Church and Spain. I gave de Morillo's sword to it, as I do not care for it; the gem in it might possibly feed a few children for a time.\n\nMay God forgive my many sins -- but let those who harmed me and took me from my only love, be held to account. \n\nI swear all of this is true. To you, forty years hence, I make the following pleas:\n\nThat the statue to Father Juanito de Morillo in Sevilla be destroyed.\n\nThat the false genealogy he registered for me be destroyed. Let the record of my life be lost. I do not want either my father's or husband's name, and only name I have ever wanted was denied to me. So leave me nameless. I am Adriana, of no house.\n\nThat, following the instructions once given me by both the bell and by Father Oro Cruz, let the records of the book, bell and candle be lost, and cease all investigations into them. The book, I know, was sent away. I know nothing of the candle. The bell travelled northwest.\n\nThat Father Oro Cruz be honored in some way. I have been unable to find him and thank him.\n\nThat Lucio De Amante, known by quite a number as Lucio the Red, be absolved of his sins. In truth he was a thief, but most often his targets were Moors, or indolent Spanish nobles who could stand the loss. No, he was not a good man. But in these times, who would claim to be?\n\nIn 1403 I made some attempt to remove all records of these things myself. I was caught and turned away from the libraries in C\u00f3rdoba and Sevilla; too old to be a successful thief, it seems. I wish forgiveness for that act.\n\nRespectfully, Adriana of Sevilla, of no house. 1413\n\n</blockquote>\n\n+++\n\nWe returned to Jose's office. I reread the translated letter, over and over.\n\n\"So much explained,\" Jose said, shaking his head. \"One letter, and so much known. Alan, we are privileged to be witnesses to such a history.\"\n\n\"This is how we differ,\" I said. \"You are thankful for knowing. I want to demand more answers. What happened to De Morillo? Who was this mysterious Oro Cruz?\"\n\nHe chuckled. \"That can't be the real name. She's covering up for someone.\"\n\n\"And the part where she asks him to be thanked? How does that fit, then?\"\n\nHe frowned, and then turned to the computer. \"No record of anyone ordained with that name... Cruz is a common enough last name, but Oro is very rare and they were not used together.\"\n\n\"So he gave her a false name. That only makes him more mysterious. He seems to have understood, if anyone did, about these items. He shows up at the right times to instruct her. He sets the items on their journeys. Did he create them?\"\n\n\"We'll never know, I think. You'll remember I mentioned angels? In every account of history there must be one final mystery. He's it for this one.\"\n\nI sighed, and then mused.\n\n\"Poor Adriana. It didn't go well for her. She had very little time with Lucio. It seems so unfair.\"\n\n\"People in those days didn't often marry for love. Her story is sad, though... hm. There is another player in this history of ours now... the bishop. Seville, 1453... that would be Juan de Cervantes. He became an important figure, eventually a cardinal. For us that's in a way bad -- he'd have had the authority to implement all of Adriana's suggestions, including obscuring records.\"\n\n\"If he absolved Lucio and Adriana if their sins, would there be a record?\"\n\n\"You think there's a list of every absolved sin in history? No. The world is not big enough to hold it.\"\n\nI typed in Adriana and Juan de Cervantes. It took several seconds...\n\n\"This time maybe there is a record. Look!\"\n\nHe did. \"Madre de Dios...\"\n\n\"I think I like this de Cervantes of yours. He records her as Adriana De Amante, and posthumously made a nun. So she's a married nun?\"\n\n\"Of course not, but he does her the honor of recognizing her relationship with Lucio by giving her his name, and gives her some honor for the difficulty of her life and the service she did to the orphanage. And this tells us that he believed her account. And of course he did. The candle and bell had caused rumors in churches in C\u00f3rdoba, Seville, Llerena... He didn't do it just for her, I think. She was dead and had no offspring. But in this, he acknowledges that wrong was done to her, and she deserved better. It is a tiny but deft little apology for the misdeeds of the Church.\"\n\n\"You guys could stand to be better at that.\"\n\n\"Giving apologies? We used to be, as this gesture shows. So. We need to focus on the items. The bell, taken northwest. Why? Oh. They wanted it sent far away, so they wanted a ship. They wouldn't take it south, that's straight into battle with the Moors. So they chose north and west, away from Moorish problems -- into Portugal and the port at Lisbon. It was a major port, and from there it could have gone anywhere in the known world.\"\n\n\"And so we find it on a Portuguese ship, long afterwards.\"\n\n\"Yes. And now the book... no, we still know nothing. Our mysterious Gold Cross had it and it was sent away, according to Adriana. Not so far away: it was hidden at And\u00fajar. And then taken by another priest and we don't know where. The book tells him what to do. The part about the speaking is terrifying - the bell and book both can speak in some fashion. Does the candle?\"\n\n\"Never to me. It does speak to females... in a fashion...\"\n\n\"Enough about that. It doesn't help us.\"\n\n\"Speak for yourself. But now we have a new item to think about,\" I said. \"The sword. Given to an orphanage. And that was here in Seville. We know Adriana lived there, Lucio visited, de Morillo built it... all paths cross there. That's our next stop.\"\n\n+++\n\nThe visit to the orphanage was uneventful enough. It was in secular hands these days, having switched over to a non-church charity in the 1960s; but they still received some support from the church, and Jose arranged an additional donation from the local diocese to get us in the door. The Director, a pert grey haired woman with dark eyes and a clear love of children, was all smiles as she accepted the check.\n\n\"While I am here,\" Jose said, offhandedly, \"I do historical research for the church, at times. I remember hearing the founder bequeathed a sword to the orphanage?\"\n\n\"Oh... that. Yes. It's in the old building. It's not in wonderful shape -- it was painted in some kind of lacquer long ago, but it hasn't held up very well. We've debated getting rid of it.\"\n\n\"Because of the children?\"\n\n\"Oh no, not that. It's locked away, and mounted over a doorway with hammered iron rods; children aren't going to get their hands on it. It's just such an odd piece for an orphanage, and in such bad shape. I don't think there's even any historical value left. Do you want to see it?\"\n\nWe walked to the old stone building near the center of the site.\n\n\"This is the original building. Built in the 1300's I believe... We only store records in it now, and tools and supplies. It seems sturdy enough, all that stone, but it's very rough, not suitable for children, and the cost putting up plasterboard and putting in heat and cooling to make it habitable...\" She pulled out keys. \"Now through here. And there it is, over the doorway ahead.\"\n\nJose lost no time finding a ladder, and perching on it for a closer look with a magnifying glass. \"It is not in such bad shape for the era. No actual monetary value... though it had a mounting for a gem here, once.\"\n\n\"Long since harvested of course,\" the Director chuckled. \"Orphanages need money, all the time. A gem would have been sold off early.\"\n\nJose nodded; he wasn't listening. \"And... yes. The crest of a noble house was engraved. It's still legible and I recognize it. The Guzm\u00e1n house. Powerful for several generations. This sword was once a great source of prestige. This really is an odd place for it to land.\" \n\nHe took pictures, frowning to himself.\n\n\"A nun brought it here,\" the Director said. \"Well... that's one legend. Another is that the priest who had this place built owed it and it came here when he died. I don't know if I believe either. A nun with a sword? Or a priest? But I guess it's here and has to be accounted for in some strange way or other. Priests fought in those days didn't they? Anyway we don't even know their names.\"\n\nJose was only half listening. \"Ha. There was a dedication here... but the lacquer failed and the lettering is impossibly corrupted. The date could be 13 something. The handle used to be gold covered, but the gold was stripped, and not by a metalsmith. Someone scratched it off. The blade itself is in better shape, but scored with cracks or scratches, and some of them are deep.\"\n\n\"Marks from battle? Metal fatigue?\"",
        "\"I'm not an expert. You take a look.\"\n\nWe switched places. \"No, that's not from battle. Some of the marks are curvy but it doesn't look decorative. No idea what happened, probably just rough handling over the years.\" I fished a small mirror out of my pocket and ran it behind the sword. \"No markings to be seen on the other side. And not lacquered as well, so in even worse shape.\" I took pictures as well.\n\n\"You seem like experts,\" the Director said. \"So there's no value?\"\n\n\"You could try a museum,\" Jose said. \"But they will give you very little and it will probably become one of the pieces they let students handle. So some educational value, at least... well. Thank you for your time. I don't want to keep you from the children.\"\n\n+++\n\nIt was my turn to drive. Seville's traffic was unpleasant, but I've driven in Rome, Boston and New York City, so I did not complain.\n\nI sighed, weaving around yet another crazy Spanish driver. \"Another dead end. A beat up old sword, too corroded to tell us much.\"\n\n\"No,\" said Jose. \"Father Cruz gave us another lead. We're to wait in the library for a pale haired woman, a blonde, to appear. And visit her the next day. She has the book, Alan. I am sure of it.\"\n\n\"So I get to accost every natural blonde who enters the library?\"\n\n\"No. You'd enjoy it too much. I will handle it. You're going to visit other libraries and find more about Lucio de Amante.\"\n\n\"A common thief. In other words you want me out of the way.\"\n\n\"I don't think the candle and the girl should meet in the library, and I don't want the candle left alone for very long periods. So you're going to guard it.\"\n\n\"So you think this girl is special, as well as the book?\"\n\n\"Very special, if I'm right. And you'd scare her off, and she's probably already scared as it is. That is the last thing we need.\"\n\n+++\n\nThree days of visiting libraries in the afternoons and bars in the evenings got me no insight into Lucio's plight; but since I was off the leash for the moment as regards a priest commenting on my every move, the candle and I and some local girls spent nice evenings. I liked Spain. So many treasures.\n\nOn Friday evening, as I was planning to go out, I got a call from Jose.\n\n\"Found her,\" he said without preamble. \"She's staying at the Gran Melia. I will pick you up tomorrow afternoon, after lunch.\"\n\nHe hung up.\n\nI looked at the candle, burning steadily. \n\n\"I think we'll stay in this evening,\" I told it. \"Tomorrow may be a big day for you.\"\n\n+++\n\nJose picked me up just after one. Once at the hotel, I put out the candle, gritting my teeth a little as it began making me notice women even more than usual. The walk past the hotel pool was very distracting. The elevator was a relief.\n\nWe stepped out on the seventh floor, and then walked to the room at the end of the hall. Jose knocked, respectfully, on the door.\n\nThere was a pause, and then a soft, sweet voice spoke in American English. \"Yes?\"\n\nSweet, but there was a shake to it.\n\n\"Forgive me, Adrienne Smith,\" Jose said. \"But it is a matter of some importance. We need to speak to you.\"\n\nThe door opened.\n\nShe was blonde, and stunning. In the brutal C\u00f3rdoba heat, even air conditioning had limits, and she wore only a spaghetti string top, a black bra and loose short shorts. Sculpted legs, a toned flat belly, and breasts that were firm and tempted the eye again and again. But her face is what froze my glance. Almond shaped eyes, brilliant blue, and somehow impossibly innocent and wickedly wanton at the same time...\n\nEven Jose was staring, at least for a moment. But he recovered himself.\n\n\"I am Doctor Jose Estrella, a historian. And this is my assistant, Alan, a noted researcher into artifacts of Eur-\"\n\n\"I... don't need much introduction,\" she said, and the shake was still in her voice. \"Come in. I saw you at the library. You're expected... The book told me.\"\n\n+++\n\nAs soon as I stepped in the doorway, I knew I was in trouble. I had the candle in my backpack, unlit. I'd gotten practiced in not giving in to its constant, almost audibly susurrate insistence on seduction and conquest. But she was too beautiful and the candle hammered at me like never before. I grappled with an impossible desire to just let the candle work-\n\n\"Jose light it, the candle, light it NOW-\"\n\nHe pushed me to my knees and dug into the backpack, and now it was in his hand and became his problem; he gave an animal growl as the force of it hit him. But he had the lighter in his hand and I could think again. I took it and lit the candle. Immediately his face relaxed, and he drew a deep breath.\n\nI looked at our host. She was shivering, eyes wide, nipples hard. I hadn't managed to control the candle well enough, in the brief moments I'd had it. But she also drew a deep breath. I tried not to stare on the effect that had on her torso.\n\n\"Magic, also?\" she said, staring at the candle.\n\n\"Yes,\" I said. \"As well as a bell that Jose is carrying. Three magical items, all from the same... source.\"\n\n\"Lucio's excommunication,\" she said. \"I know. Let me see them.\"\n\nJose put the candle down on a table, and carefully produced the bell. \"Is that the book, on the table?\"\n\n\"Yes. You must not touch it. It has been very clear. No one else must touch it.\"\n\n\"So it has an account of the excommunication?\"\n\n\"Sort of. It has been, well... able to speak to me, write to me, and make me see visions. Just sometimes, not all the time... I have to put a drop of my blood in the cup there, and it only wants me to do it when it... asks me to. It wanted that this morning. How do you come to know about this?\"\n\n\"We don't know much,\" Jose said. \"I was hoping the book had the answers written in it.\"\n\n\"The only writing in it is what Lucio needs me to know. It changes each time. Today for the first time it reached a second page.\"\n\n\"What does it say?\"\n\n\"No. I must not tell you. But he said I could trust you both.\"\n\nI gave a slightly ironic nod to the book. Alan St. Laurent, given the seal of approval to be trustworthy with a pretty young girl. This was surely a once and only in my life.\n\nJose bowed his head, as he always did when given a compliment. \"Tell us as much as you can.\"\n\n\"Please sit, over there. I'll get something to drink. Orange juice? It's very tart here, but really good.\"\n\nWe nodded. I tried not to admire how she walked as she moved into the kitchen. I did not try hard. Nearby, the candle flickered.\n\n\"No wonder Lucio fought death,\" I said to Jose. \"If she is really Adriana, reborn... I mean that's it, isn't it? This is somehow Adriana?...\"\n\n\"No one is anyone else, reborn. Everyone is themselves. Consider the possibility that Lucio is evil and has designs on this girl simply because of how she looks.\"\n\n\"So he's a normal male?\"\n\n\"You will evolve spiritually when you get over this fetish with the purely physical, Alan.\"\n\n\"This is why you didn't get to carry the candle. It's wasted on you. Good gracious, that ass. Can you imagine spanking her?\"\n\n\"You need it more.\"\n\n\"Sorry. Definitely an area where I believe it's better to give than receive. But... what happens now?\"\n\n\"I was hoping the book would have all the answers. So let's hear her out.\"\n\nShe returned with three tall glasses of juice, and handed them out. I got a grip on my imagination, and smiled kindly. From Jose's expression, the smile probably still had too much wolf in it.\n\nShe sat, and spoke without preamble.\n\n\"The book has effects on people's minds. It can make me see visions. It can make me hear his words. It's like a person, a person used to authority. It -- he -- is very compelling. It's done more. There was a woman, Adriana. His beloved. She's... in my mind now. For a few weeks I didn't handle that very well, but I've sort of adopted her memories as my own. She's like a past life now. I remember only little fragments. But her relationship with Lucio is clear. It's unbelievably intense. Love isn't like that anymore.\"\n\nJose nodded. Nothing fazed either of us now. \"Has the book caused problems for you? The other two items are not at all safe. You must not ring the bell, especially.\"\n\n\"The book scared me, especially at first, and connecting with Adriana... I suppose that's how I'd have to say it... was very confusing. But no. It's taken care of me, made sure I had money when I'd otherwise have been broke, protected me, and there is no doubt he loves me, or at least that he loves Adriana and thinks of me as her. The visions are indescribable but they aren't terrifying.\"\n\n\"And erotic?\" I asked. Jose shot me a disapproving look.\n\n\"Sometimes... and very intensely when they are. I won't discuss that,\" she said, reddening.\n\n\"Do you love him?\"\n\n\"Maybe. Yes. I don't know how to answer. I don't know how to love a book. If he was a person... I think courtship must have been different then. He'd simply claim me. I've never known anything like the way he just... pounces. You're not allowed to not react. I think everyone he ever knew must love him or hate him, obey him or oppose him. The Adriana part of me is helplessly in love, and... there is not much distinction left between us.\"\n\nShe reddened more.\n\n\"But what does it all mean?\" Jose said. \"All this... mystery, power. Three items, converging on you, Adrienne. Why?\"\n\n\"He wants to be together with me. He wants me, purely and simply. And I'm to rescue him somehow, but from what and how he hasn't said.\"\n\nIt was obvious, so I asked. \"Where is he buried?\"\n\n\"I don't know. I know for certain his memory of his own life ends with his death. That happened just a few days after the excommunication. He wasn't buried until after that, I mean of course he wasn't, so I don't know anything about that part. He died somewhere near And\u00fajar. About forty miles away.\"\n\n\"Then he'll have been buried near there. Thieves didn't get a lot of honor in those days, or brought back home for burial,\" Jose shrugged.\n\n\"They get a lot of honor now?\" I asked, somewhat ironically.\n\n\"The very successful ones in America do,\" Jose replied. \"Your robber barons and Wall street people. They live how they please and get buried where they like. But in Lucio's day, a thief wouldn't get transported back to family lands. They'd bury him cheap, and near where he dropped.\"\n\n\"Tell me about the candle and bell,\" Adrienne said.\n\n\"We don't know much,\" I replied. \"The candle is best described as sexual. If it's kept burning it's harmless, but it just keeps burning and burning forever. Put it out, and whoever has it... I think you felt a little of the effect.\"\n\nJose cleared his throat. \"And the bell... is about judgment or justice. It is deadly. People who ring it confess their sins and then always try to commit suicide, as far as we know.\"\n\n\"Desire and judgment...\" Adrienne said, quietly. \"I can tell you this. Lucio died wanting Adriana, and demanding judgment from heaven on the acts of a bad priest.\"\n\nI stared at the book, bell and candle. \"So that it is, then? We have a person existing in three items, and we have brought them together? But how can a person live in an object?\"\n\nJose shrugged. \"The Catholic church teaches that the Lord of the universe can be present in bread and wine. It's not impossible to me that a person can likewise exist in other forms.\"\n\n\"Even I can see the flaw in that one,\" I objected. \"God can do as he pleases or he's not God. If He wants to squeeze Himself down to bread and wine, who's going to argue? But this Lucio was by all accounts a rogue and a thief. He's got no magic and why would anyone do him a miracle? This is where it never makes sense: we have three undisputedly powerful artifacts. But they aren't from a saint or any of the usual suspects. They don't heal diseases or do anything you'd expect from ancient myth and legend. They are all very... human... in their actions. I mean the first time I run into real religious artifacts, and they turn out to be nothing like Saint Bartholomew's Toenails.\"\n\n\"Please tell me that's not an actual item you've sold,\" Jose said, wincing.\n\n\"Nope. But I did once sell the skull of John the Baptist... from when he was twelve years old.\"\n\nJose opened his mouth and then closed it again, apparently deciding not to dignify that with a response.\n\n\"Well, I am going to do the obvious,\" Adrienne said. \"I'm going to put them together and see what happens.\"\n\n\"I... suppose you have that right, if anyone does. But, the bell,\" Jose said. \"There's cloth stuffed inside it. Be careful it doesn't fall out. If it rings, people die.\"\n\nShe carried the candle, and the bell upside down, to the book. She knelt at the little table, opened the book, and put the bell and candle on either side of them. I watched, fascinated.\n\nThere was movement on the open page; I could see it even where I sat. Letters, blurring, shifting...\n\nBefore I could say anything, she pulled the cloth from the bell and carefully put it down, and then blew out the candle.\n\nJose took me by the wrist and forcibly dragged me to the kitchen.\n\n\"We should watch her,\" I hissed, angrily. \"Who knows what might happen.\"\n\n\"I have a good idea what's likely to happen now that she's blown the candle out, and we have no right to watch,\" he said, firmly.\n\n\"You think Lucio appears and takes her on the floor?\"\n\n\"No. You had it right -- we have to find his grave - but-\"\n\nI heard it at the same time Jose did -- a susurrate windy whisper, a metallic humming, a sound like many voices, but no words...\n\nAnd then a soft, wet moan. From Adrienne.\n\nI moved to the doorway, overcome with concern for a young woman in danger. Jose locked his hand on my wrist again, pulling me up short.\n\n\"She'll be fine. He's just... missed her, and it's been a few hundred years...\"\n\nHer next moan was anything but soft. \n\nI snarled at Jose. \"I really think we should watch-\"\n\nAnd then she cried out, breath ragged and frantic. \"Lucio! Please! Lucio! Oh Lucio you must let me!\"\n\nHer cries became incoherent, animalistic...\n\nJose raised his eyebrow. \"Alright, that's a concerning level of enthusiasm, maybe-\"\n\nShe fell silent, gasping frantically, and then cried out again. \"Yes, more! Oh Lucio, make me! Make me again! Yes! Yes! Yes!\"\n\nI rolled my eyes. \"Does she even remember we're here?\"\n\n\"Lucio!\" she shrieked. \"You savage animal! Have mercy! Oh, again! I can't, I- Lucio! Please let me! I CAN'T STOP!\"\n\n\"Ok,\" I said. \"I got some pretty impressive results with that candle, but nothing like-\"\n\n\"LUCIO YOU'RE AN ANIMAL, A KING, A GOD AMONG MEN!\"\n\nJose crossed himself. \"I'm not entirely sure how I'm going to present this in my next confession.\"\n\n\"Not a problem I can relate to. But what I really want to know is, does... that... count as fornication?\"\n\n\"NO NOT AGAIN! I'LL DIE! OH FUCK, FUCK YES! RAVAGE ME, MAKE ME YOUR WHORE! YES!\"\n\n\"All I am sure of is that it clearly doesn't count as rape. Which frees me from the responsibility of walking in there.\"\n\n\"Oh Lucio! Lucio... show me no mercy, make me shamelessly yours until I cannot breathe, do your worst to me...\"\n\nThe rest was shrill cries and incoherent moaning, slowly growing fainter. When it finally petered out -- over fifteen minutes, with Jose and I staring at the walls out of embarrassment -- I walked in, with Jose behind me.\n\nThe candle was burning again. Adrienne was pulling herself together, with shaking hands. I went to the bathroom and brought her back a hairbrush.\n\n\"I, um, mentioned the visions,\" she said, smiling both radiantly and apologetically, and breathing very fast. \"Nothing like that one, though. That... yeah.\" \n\nShe started to untangle her hair, smiling.\n\n\"You are alright?\" Jose asked her.\n\nShe just looked at him, and then smiled wider, and rather wickedly. I decided I liked her, a lot.\n\n\"With the candle here, he says I no longer need to bleed to make the book work. He'll let you ask questions, through me. He warns you there is a lot he doesn't know, and he will not talk much about his experiences as a book.\"\n\nShe drew a deep breath, and curled on the couch with the book in her lap, eyes half closed. She slipped into something like a trace, staring at the open page. Letters on the page moved again, and I found it better not to stare at it.\n\nJose spoke. \"Adriana was Juanito de Morrilo's daughter?\"\n\n\"Yes,\" Adrienne said after a moment. \"It is hard to prove such things, he says, but he travelled to northern Spain and asked questions there. Adriana's mother vanished and then de Morillo fled south with the baby, in disgrace. De Morillo spent his life hiding that and other sins and trying to rise in the church. He was mad for power. God meant less to him than to me, Lucio says.\"\n\n\"Lucio. How did you come to be a book, bell and candle?\"\n\n\"As I lay dying, a priest took pity on me. He heard my confession, gave me communion, and said rites over me... they were not the usual rites and they were in a language I did not know. Something like the language of the Jews, but not the same as that either. He called himself Cruz. I know nothing about him, but the book, bell and candle were on my chest as I died. He also had a small cup and he told me in contained a little of Adriana's blood, and he made me drink a drop of it. He told me I'd be given another chance, to love and live better, but it would take a long time.\"\n\nJose frowned. \"Do you understand this woman is not Adriana?\"\n\n\"These mysteries are deep, Father. She is and is not. Her adding her blood to Adriana's in the cup... something happened then. She is more than Adrienne now, she is both. Adriana had no chance to live the life she wanted and deserved. In Adrienne, she will.\"\n\nAdrienne shook herself out of the trance, and stared at the little cup of blood, by the book. \"I didn't know that. That it was her blood. And now he says the blood is no longer needed for the book, and he wants me to drink it.\"\n\n\"No,\" Jose said. \"That is wrong.\"\n\n\"Why?\" I asked.\n\n\"It's... too pagan. Too much like magic. It's like communion, but wrong. And this mixing of two people... it is already disturbing enough.\"\n\nAdrienne laughed, softly. \"No. You don't understand. I have already chosen to trust him.\"\n\nWithout further preamble, she drank it down. Wincing a little, she followed it with orange juice.\n\n\"Oh,\" she said. \"That is... I remember more now. Her whole life, up until this blood was taken. Is it strange that I don't even find that odd?\"\n\nShe set the cup down. It immediately crumbled into dust. She smiled at the dust, her eyes strangely wide and bright. \n\n\"I know the Spanish of her era. Ya sennor glorioso, padre que en \u00e7ielo estas, fezist \u00e7ielo e tierra, el ter\u00e7ero el mar, fezist estrelas e luna, e el sol pora escalentar... we sang it endlessly in the orphanage. I know the name of the priest who collected my -- her -- blood. Cruz. I remember the wind of riding with Lucio, his horse's mad uneven gallop, very fast and a good leaper. My muscles are wrong for riding now. But not bad for fighting or dancing. The only odd thing is that I cannot remember Lucio's face. What is wrong my love, is your face too dark or unpleasant to look at, that you hide it from me? I remember he taught me to punch and kick, to steal, and to dance. Dancing was not encouraged at the orphanage. With Lucio there was always lovemaking after the dancing. I was very Spanish, temperamental, a hellcat, for anyone else... but the touch of his hand and I'd be shy and quiet. His hand alone; any other hand that touched me uninvited was in danger of being removed from the arm that brought it. He rarely killed, but he'd maim freely enough. I learned not to mind blood. The Moors hated him. Almost as much as Spanish nobility did... he mostly took jewels. He'd force kisses from their wives, too, as he stole -- simply so the men would hate him more. He favored caves to hide in, he knew dozens all over southern Spain. He believed he was related to El Cid.\"",
        "She swallowed more juice.\n\n\"Oh. I can see my world from Adriana's perspective. She is a little horrified. There's no honor left. So much freedom and wealth, but no honor. Why did respect die? Why are all the leaders weak, and the church so voiceless and colorless? Have people forgotten how to fight, how to improve their station? If everyone is equal, who do you trust to lead?\"\n\nShe shook her head, suddenly, like she was waking from a dream. \"...I'm so sorry. It's a little confusing, the... integrating. She's so much like me, but she was more grown up, and knew more about her world than I've ever understood about mine. That's a huge difference -- people in her world all knew who they were, in relation to everyone else. Today no one knows who they are supposed to be, what they are supposed to do, who anyone else is. Everything is so vague and colorless, like being in fog. Mere anarchy...\"\n\nShe shook her head again. \"I really am sorry. I need to be Adrienne right now, but Adriana is like the me I never let myself become -- adventuresome, risk-taking, brave, worldly-wise, and so very willing to love and be loved. She glitters and sparks where I only glow. I'm learning to be like her, moment by moment, second by second, but it's so intense... I can see now I settled all my life -- jobs I did not like, men who didn't impress me. I'll never be that easy and foolish again.\" \n\nShe looked at us, eyes bright and determined. \"I want what she had, the fire, the spirit... and the man. We must find Lucio.\"\n\n+++\n\n\"But how?\" I said, after a long pause. \"We need a map.\"\n\nJose smiled. \"We have it. You don't see it?\"\n\n\"See what?\"\n\n\"How things fit together? We have the map.\"\n\n\"We don't. We have a fragment. Something about the abandoned, whatever that mean - the orphanage!\"\n\n\"Yes. Part of the map, left there. A narrow strip of it, on something that wouldn't get lost...\"\n\n\"The sword! The scratches on the sword!\"\n\n\"You see the problem Cruz had to solve. He doesn't want this note of his to get investigated at the wrong time, before miss Smith lived. So it writes very vaguely. We know about a book, a pale-haired woman, and a place with abandoned children. So we can make sense of this note. People investigating before us wouldn't. I didn't see it myself because I thought the abandoned might refer to the Moors, or to people on the wrong side of the church schism... I was thinking too grandly, not enough grimly. War makes a lot of children into abandoned property; there is nothing sadder.\"\n\nHe pulled his camera out, and pulled up the picture of the sword. \"But it's hard to make out the scratches. We may have to go back for the sword itself.\"\n\n\"What is this about a map?\" Adrienne asked.\n\n\"We have what might be pieces of a map, in pictures on Jose's camera. If we can put it together-\"\n\n\"Show me.\"\n\nJose copied the pictures to her laptop, while be briefly described about the sword and priest's note.\n\nShe opened them. \"I see now. So these two images should fit if scaled and overlaid, but first we have to get the scratches on the sword to show up... maybe a Canny filter... no, ok, play with the contrast first...\"\n\n\"You understand image processing?\"\n\n\"Blonde doesn't mean stupid. I was an art major, for a time, I did photography... I'm no expert but filters are something I can understand. Maybe a Sorbel... ok, yes, look. There are your scratches, some of that is noise, but...\"\n\nShe rotated and scaled and slid images together. With a few tweaks, the edges matched and the lines became nearly continuous.\n\nJose lost no time pulling up maps of Spain -- roads, topological, rivers. We started hunting.\n\nEven suspecting we were looking for something near And\u00fajar, it took a surprising amount of time, but in the end we found it. One of the rivers had shifted, and a line intended to represent a road didn't exactly follow the track of a modern highway, but even with that, the small cross on our map could be placed at a location in hills northwest of the town. It was in a nature park, surrounded by abandoned farms.\n\n\"Can we go there tomorrow?\" she asked.\n\nJose smiled. \"Whenever you wish. We are very much at your service.\"\n\n\"And it seems we always have been,\" I said. I was having trouble hiding a profound sense of awe. \n\n+++\n\nAnd so the three of us, carrying three items, were hiking across an abandoned olive farm up in the hills, with the GPS on my phone guiding us... Despite the awkwardness of the climb, I kept the candle burning, in a little glass lantern.\n\nAnd then, after some searching around, we stood at the rough stone door. It was set deep into the stone outcrop, less than six feet high and little over two feet wide, and overgrown with vines. You could have walked by ten feet away and missed it. We did, twice. \n\nThe stone outcrop was weathered and deeply cracked. Lichens were everywhere, and the stone was crumbling at points, with moss in the deepest cracks. A few birds overhead were the only signs of life.\n\n\"Not much of a tomb,\" Jose said, kneeling to cut at the vines. \n\n\"He was a thief,\" I said, pulling at what he was cutting. \"He was lucky to have gotten a tomb at all.\"\n\nIt was fifteen minutes before we got the vines cut away enough to try prying the door open. Adrienne watched silently.\n\n\"It won't budge,\" I grunted. \"Crowbar time.\"\n\n\"That won't work,\" said a voice, above us, in oddly accented English.\n\nIt says a lot about how this business had affected us, that Jose's response was to draw his gun and point it upward, and I found I'd picked up the crowbar in a throwing grip. Adrienne just gasped.\n\nOnly ten feet above us, nestled in a hollow of the rock and well hidden among the vines and lichens, was a man, dressed in dirty grey and dark green. He blended in well, but the hairs on the back of my neck told me he hadn't been there just a few moments ago.\n\n\"And why is that, sir?\" Jose said steadily, training his gun on the man's face.\n\n\"The door is locked. There's a mechanism,\" he replied. \"I have to lift and turn a stone handle, here. I'll pour this oil in first, and give it a few taps with my hammer, and then I should be able to work it for you. It will take a few minutes, for the oil to seep.\"\n\n\"Thank you,\" I replied. \"Do you mind telling us who you are, and how you know this?\"\n\n\"Neither of those questions is very important, Alan St. Laurent. And Doctor Estralla, if you would put the gun away, I would appreciate it.\"\n\nHe began tapping with the hammer.\n\nA few awkward moments passed.\n\n\"I thought angels had wings,\" Adrienne said suddenly.\n\n\"Nope,\" said the man with the hammer.\n\n\"You have to be an angel,\" she said. \"I saw you just... appear.\"\n\n\"The light here is tricky, and you may have seen incorrectly,\" he replied, still tapping. \"And I was answering your statement about wings. Angels don't have wings. Those were invented by painters. Symbols of the sublime nature of angels, it was said.\"\n\n\"She's right in her fundamental assumption, though, isn't she,\" Jose said. He put the gun away, which I was glad to see, because his hands were shaking. \"Oro Cruz, I assume?\"\n\n\"If you were truly assuming it, you would not have stated that as a question,\" he replied. \"I'm not going to answer questions about myself, so it may save time if you do not ask any. I'm not here for small talk.\"\n\nI started to climb the rock to his position.\n\n\"Alan St. Laurent, I don't need assistance. And I'm armed with a hammer. Please stay where you are.\"\n\n\"If you use the hammer on me, Jose will shoot you.\"\n\nJose made a non-committal noise. I paused to glare at him.\n\n\"Coming up here serves no purpose,\" Cruz continued.\n\n\"I don't believe in angels,\" I said. \"So I want to see what happens if I punch something I don't believe in.\"\n\n\"I don't think the question of believing in angels is what matters,\" he replied. \"You should be asking yourself if you believe in hammers.\"\n\n\"Angels don't hurt people,\" I said.\n\n\"This is a case where your lack of biblical knowledge may be harmful. Ever heard of Passover? And at any rate, it's the hammer that's going to hurt you.\"\n\nJose cleared his throat. \"Come down, Alan. Whatever he is, he knows our business and names and he's helping us.\"\n\n\"That's why I'm going to punch him. We've been lead on this merry chase, following clues set down in the 1300's. But here is someone who seems to know the whole story. If he'd showed up earlier he'd have saved us quite a lot of time. Maybe I wouldn't be here, risking arrest right now.\"\n\nOur angelic friend watched my climb, frowning. \"It doesn't work that way. I didn't know about you until you showed up here. I can't be everywhere.\"\n\n\"You know our names.\"\n\n\"Sometimes I can know things.\"\n\nI got my fingers on the ledge he was standing on. He paused to move the hammer over my middle knuckle. \"I'd rather not do this,\" he said.\n\n\"You won't.\" I got my foot into a crevice and pushed upwards.\n\nHe bashed the hammer violently into my knuckle. I felt the joint shatter. The pain was sudden and nauseating, and I fell ten feet to the ground, my landing somewhat cushioned by Jose's bulk. \n\n\"There's a human who got to wrestle with an angel, once,\" Cruz called down. \"You're not him. None of this is about you, Alan St. Laurent. There is only one person who needs to be here. And she's wise enough to wait and see what happens.\"\n\nHe went back to tapping on stone. I cradled my ruined finger in my other hand and cursed, softly. I'd forgotten how much broken bones hurt.\n\n\"Doctor Estrella,\" he called down. \"I'm about to unlock the door. When I do, go in alone. Place the three items on the shelf inside, blow out the candle and exit immediately. Don't stay and watch what happens next. It is not for your kind to see.\"\n\n\"Wait,\" said Jose. \"We are due some answers, I think. You condemn us to mystery and confusion otherwise.\"\n\nCruz grunted, lifting and turning a piece of stone. There was a grinding noise. \"You knew enough to bring Adriana and the items here. That is sufficient.\"\n\n\"Is there anyone who remembers that my name is Adrienne,\" Adrienne gritted.\n\n\"I demand answers,\" Jose said.\n\n\"By what authority?\"\n\n\"It is up to the church to bind and loosen, both things on earth and things of heaven. I think loosening your tongue falls fairly under that authority.\"\n\nCruz frowned, then nodded. \"Ask the right questions, then.\"\n\n\"Why all this? A man and a woman in love, have their love denied. It's sad, but it happens. Why are Adriana and Lucio special?\"\n\n\"That is my fault,\" Oro said. \"I caused all this. I was... you'd say stationed here, in the era of Adriana and Lucio. I witnessed the attempted excommunication. I didn't cause it to fail -- that happened by the decree of someone more powerful than I. Heaven gets angry sometimes. But in that moment... all I can say is I was enraged. Lucio was spared the shame of excommunication, but he was still going to be slaughtered, and I could not prevent that. Adriana was going to be condemned to a life she did not deserve, by her own father, and I could not even prevent that. The times were horrific... your history books don't begin to describe it. War and infighting and a broken church and injustices you have no understanding of, rampant everywhere. I was tired of the laughter of demons. And creatures like me do have some amount of free will, we can make decisions and enact them... I decreed that Lucio would have his chance someday, that just this once I would see justice done on earth and not wait until heaven. I... it's simplest to say that I exceeded my authority, but my only punishment for that has been to maintain a watch here until my actions came to fruition. So while I broke rules and strayed from my true work-\"\n\n\"There's a name for angels who stray.\"\n\n\"I didn't stray that far. I'm not perfect, but there is forgiveness for imperfection, you know.\"\n\nHe reached back, and tossed down a backpack. \"Leave that inside. The original clothing is long gone.\"\n\n\"But, the bell. It has been killing people. Perhaps for years. That was Lucio's will? Or heaven's?\"\n\n\"Not Lucio's. Lucio's will is captured in the book. The bell and candle... they are only the overflow of his need for justice and desire for Adriana. It's complicated; I did not do things quite right. The bell got a little out of control, as righteous rage sometimes will when one is not careful. The candle likewise has been a little indiscriminate. But I blame myself, not Lucio. And even those the bell killed... we are all imperfect as you know, Father, and all liable to judgment at any time. Perhaps those that were judged were ripe for it. But things should be better when the items fulfil their purpose.\"\n\n\"But I still think you have-\"\n\n\"So,\" Adrienne said, suddenly. \"If I'm not insane and not dreaming... a man dead for hundreds of years is going to come out of that cave soon. And I'm supposed to love him. Do I get a choice in that?\"\n\n\"As much of a choice as any human gets,\" Oro said, a slightly sad smile on his lips. \"You have free will, Adrienne. All I am doing is giving Lucio a chance to live a life he should have had, and a chance to win the girl he loves. It is true you are not the same woman as Adriana of Sevilla, but you are as like to her in mind and body as there has ever been or can ever be. Genetic twin doesn't begin to cover it. And you have... all I can say is taken on Adriana's thoughts and become her some sense even I don't fully understand. I think you will love Lucio. I think you already do, or you would never have come to Spain.\"\n\n\"Culture shock,\" I said, suddenly. \"Lucio doesn't know this world, the language, anything. How is he going to stay sane?\"\n\nOro climbed down. \"The book has been the home of his... intellect, you'd say. Soul. He's been able to observe history in a limited way from inside it. He's been around. He won't understand everything he sees but it won't be as bad as you think. I explain this to him at the beginning, that it might be a long time before he found his Adriana and the world would be very changed.\"\n\n\"But he's been here in this tomb,\" Adrienne said. \"But sometimes in a book? I don't understand everything, but... How did he give me pearls?\" \n\n\"I don't know,\" Oro said. \"I wasn't there. Adrienne, will you hand me the book?\"\n\nShe did, slowly. He held it, closing his eyes. His expressions shifted, almost too fast to recognize.\n\nOro said. \"There was a woman... with a cruel husband she'd been forced to marry. Lucio felt the deepest sympathy. A lover gave her those pearls, but her love for him was about to become known, and Lucio... he warned her to flee before she was killed in a jealous rage. He got her away safely, but in exchange he convinced her to leave the pearls behind. He knew you'd need them.\"\n\n\"But she died. The wife. There was a murder.\" Adrienne said.\n\n\"Lucio says otherwise... I will ask. No, she lived. The husband came home drunk with murder on his mind and killed a servant woman in his rage. She had a passing resemblance the wife, and he'd turned off the gaslights so he would not be seen in the act... The wife really did get away. We can't fault Lucio for the servant's death; the book had already been mailed off again before the husband arrived home. Books, like angels, can't be everywhere at once.\"\n\n\"And then I just happened to take that same apartment?\"\n\n\"Child,\" Oro said, gently. \"You would be astonished if you knew how many things that just happen to happen, could not have happened any other way. Lucio's will is not the only thing to reckon with in this story. Your life, and his, have gotten tangled not just in my will, but because of what I did, into the very will of heaven. Not that that's so remarkable, people get tangled into the will of heaven every day. Your race wouldn't have survived two days out of the garden otherwise.\"\n\n\"Adrienne, you're starting to delve into mysteries we shouldn't explore,\" Jose said.\n\n\"Eh,\" Oro said. \"You Catholics. A little too prone to making that argument. You'd be better off taking on more mysteries head on. The universe isn't as incomprehensible as you claim.\"\n\n\"Can we just open the damn door?\" I gritted. \"This hand of mine needs a surgeon.\"\n\n\"By the same token,\" Oro said. \"You skeptics. A little too prone to demanding everything is knowable and will be understood in time. It won't be. Stick your hand where it does not belong, in your arrogant confidence that the world will bow and kiss it, and you can expect the occasional broken finger.\"\n\n\"The world didn't break my finger. You did. You're an angel it seems, so heal it.\"\n\n\"Nope. The provision of heaven you call doctors is enough mercy for the likes of you. You don't rate miracles, Alan St. Laurent. And the healing process might teach you a little humility. But you're right about the door. Lucio is waiting. Adrienne, would you pull it open? Just grip that grooved part.\"\n\nHe handed the book to Jose. I handed over the candle. Adrienne pulled the door open, with effort. Jose picked up the backpack and walked in.\n\nHe was out thirty seconds later, somewhat pale. There was light pouring out behind him, and it was not candlelight. \n\n\"I will never see a tomb in the same way,\" he said.\n\nThe light faded out; and then we heard footsteps.\n\n\"Is this what an arranged marriage feels like?\" said Adrienne, shaking.\n\nLucio stepped out, crouching through the small door, then standing erect.\n\nHe was six feet two or about, dark eyes, unkempt long hair, muscled and frighteningly confident in the way he walked. I thought to myself that this was a man who hadn't learned the modern niceties of politely deferring to strangers, of keeping his eyes and his attitudes to himself. He was a man from an earlier era, and the way he looked at us was a direct challenge, a demand that we follow him, prove we could lead him, or get out of his way. I got out of his way, as I was between him and Adrienne.\n\n\"Oh,\" said Adrienne in a shocked voice. \"That's not fair. He's gorgeous. He's like the cover of Jane in Chains-\"\n\nHe pounced on her, lifting her off her feet and kissing her roughly. Time passed, for everyone except the two of them. When he set her back down, she swallowed wordlessly, stunned out of her mind and clinging to him weakly.\n\nHe turned to Oro. \"Salir. Usted fue menos ayuda de la que yo dezeaba.\"\n\nOro nodded and walked into the tomb. We never saw him again.\n\n\"I need a place to stay while I learn to do useful work,\" Lucio rumbled at Jose. \"You are a priest, if that garb means what I think it means. Prove you are a good one and arrange it for me. I will not need charity for long.\"\n\n\"You can- you can just, um, stay with me,\" stammered Adrienne, now bright red. She and Lucio were speaking an old form of Spanish, and I had to struggle a little to understand them.\n\nAn almost cruel smiled formed on his lips. \"Wanton slut. Don't you want me to woo you, my sweet and passionate Adriana? Don't you want to learn what it is like when Lucio makes your heart beat fast, before you take me into your bed?\"\n\n\"I'm good, thanks,\" she whispered. \"Adriana's memories... they've gotten very clear. My heart is beating fast enough. I promise.\"\n\n\"As a priest, I am going to point out that fornication is still on the books as a sin,\" Jose pointed out. \"So if you could at least wait until you're-\"\n\n\"Silence,\" he rumbled. He took Adrienne by the wrist and moved her without effort to the stone outcrop. He put her back to it, and caught her wrists in his hand and held them to either side of her head. She mewled, trapped. \n\n\"Look me in the eyes and answer me this, girl. Will you be mine? Wife, lover, will you bear my children and love me solely, until they return me to a crypt?\"\n\nShe looked into his eyes, and then her own eyes closed helplessly. \"So unfair. You've been in my head, Adriana's been in m-my head, all I can feel is... is... please Lucio, you're a t-thousand times more intense in real life than you ever were in the visions, and I couldn't even handle those-\"",
        "\"Priest, your presence here is perhaps of use after all,\" Lucio said, without turning his head. \"Pronounce us man and wife.\"\n\n\"Three week banns required first,\" Jose said, automatically.\n\n\"Why?\" I said, a little sardonically. \"Banns give the community a chance to protest a proposed match. Who's going to protest this one? And if someone would, I dare them to try.\"\n\n\"She might protest, when she comes to her senses. She's not actually Adriana. This isn't really a wedding put off for a few hundred years. She deserves a chance to think about this.\"\n\n\"Think about it?\" she said, dazed. \"You want me to wait three weeks to take him home?\"\n\n\"Let her up, Lucio,\" Jose snapped. \"You can see she's in no fit state to make decisions. You're still thinking like a thief, taking what you like. You weren't given this chance just to play the blatant sinner again.\"\n\nLucio chuckled. \"He may be right. But I'm going to spend the three weeks making you love me so hard you cry, and want me so much you whimper.\"\n\n\"I'm whimpering now,\" Adrienne whimpered.\n\n\"Then when I press this part of myself against your belly-\"\n\nShe mewled again, and kissed him helplessly.\n\n\"I can see why the candle was so effective,\" I said, sourly. \"Is it gone?\"\n\nJose gestured at the tomb. Curious (and perhaps still hoping for a chance to punch Oro) I went in. There was a short passageway, then a small rough-hewn room I could barely stand up in, with small grey white stalactites everywhere. There were no other exits, and Oro was nowhere to be seen. \n\nOn a stone shelf were the remains of a coffin, little more than splinters and dust now. Another pile of dust represented the book; the bell was a smudge of pale greenish crumbled debris; and all that was left of the candle was the small ivory candle cap, now cracked and shrunken. It fell in on itself when I touched it.\n\nI swept the remnants together, and scattered them into the remains of the coffin. \n\n+++\n\nThe wedding was a month later; an extra week was needed to forge an identity for Lucio that the Spanish government could understand. I helped with that, and when Lucio could be pried from Adrienne (which was not often) I polished his grasp of English and modern Spanish, and his knowledge of the world. We had some discussions on the art of thievery, and longer ones on manners and etiquette. Despite that, it was clear he wasn't ever going to be able to approach the world with anything other than arrogance, and a conviction that error and insult should be corrected with his fist. I have to admit I liked his approach, but I worried about the results, and I explained to him about the improved accuracy of firearms in this era and their general availability, even in Europe. \n\nI think he mostly took the warning to heart, but once when he and Adrienne walked down a street in C\u00f3rdoba together, and some passing Italian tourist decided to comment on Adrienne's intelligence based on her blonde hair and body, Lucio instantly punched him against a wall and left him for unconscious. That got Lucio a smattering of applause from people nearby, and some dewy-eyed looks from women. I decided he'd probably do ok, as long as he stayed out of America, the land of the lawyers.\n\n+++\n\nWhat follows is a scattering of scenes and guessed event, some supported by Lucio's memories and research, or later historical finds in the records of the church. No accuracy is guaranteed, but we think we've filled in the gaps.\n\n+++\n\nAugust 1382 -- Duke and Priest (a guess, by Alan St. Laurent)\n\n\"Good afternoon, Duke Guzm\u00e1n.\"\n\n\"And also to you, Father De Morillo. Come into the shade. You must be baking in those vestments. This is the hottest summer I remember.\"\n\n\"I'm more than happy to get out of the sun. How are things going with your arm?\" \n\n\"Your poultice worked very well. My doctor had his doubts about it, but the results speak for themselves.\"\n\n\"I learned it in my travels north. People there take a different view of everything, and that includes medicine. Now that it's healed, do you mind explaining how you got that sword cut in the first place?\"\n\n\"As long as it is not discussed with anyone.\"\n\n\"A priest's word.\"\n\n\"It was my brother. We get along well enough... but he was eyeing my wife in a way I cannot condone.\"\n\n\"He's not the only one who has, I think. She's not difficult to look at. She's part French, isn't she?\"\n\n\"Yes. But being exotic doesn't give him excuse to look at her that way. He needs a girl of his own -- he's much more than old enough. But he won't have anyone born locally. I think he wants to outdo me in my choice of women.\"\n\n\"Then it would be best if he travelled and found something to his liking.\"\n\n\"He won't travel, Father. With the ongoing wars... he's not too old to distinguish himself in battle. He's reckless in many ways and insists on bringing the fight to the Moors, as long as they are nearby, anyway. I give him credit for his bravery -- but not his arrogance.\"\n\n\"It is fortunate you are Duke, then, and not he.\"\n\n\"He never will be. My Beatrice produces good children. My line is secure. But as to my brother's choice of women... after this discussion we had at sword point, he admitted to an interest in another woman.\"\n\n\"It sounds like that's to be encouraged.\"\n\n\"I'm inclined to agree. He needs to be settled. Which is why I have invited you here, Father.\"\n\n\"I'm always happy to assist in noble matters and affairs of the heart, my Duke.\"\n\n\"Good. Because the blonde girl in your orphanage has caught his fancy.\"\n\nThere was a pause.\n\n\"She's only just old enough... and young for him, certainly... and she has no lineage, we have no idea who her family could be...\"\n\n\"Oh, he will until she is a little older. I credit him with that much patience... and I made it clear to him that we are not a house that marries children. As to the girl's lineage...\"\n\nThe Duke paused to reach behind his wrought-iron chair. He brought out a sword in an ornate scabbard. \"I think I am safe in saying that the girl means something to you, Father. You have taken unusual care with her, by all accounts...\"\n\n\"All the orphans are well cared for, as best we can manage in these difficult times.\"\n\n\"But only one is literate. You couldn't bear the thought of her living in ignorance, like so many others... could you, father.\"\n\n\"Have a care, Duke. To sully the reputation of a priest is no small thing.\"\n\n\"I have no intention of it. Let me be plain, Juanito. I've known you a number of years. Your standing as a priest is not of much concern to me. But you are an adapt swordsman and you have adventured your life in the north, and with the backing of the church you've organized raids on the Moors. Vestments be damned -- I know a man of action when I see one, and I believe that blood will tell. Your daughter will have some of your strength and spirit, and that is what I want in my family -- and my brother's bed. It's true her lack of lineage will be socially embarrassing to the house. But literacy and beauty do count for something. So I will give you this sword, after it is finished. And when the time comes -- you will give the girl to my brother.\"\n\nDe Morillo drew the sword, with a nod to the Duke.\n\n\"This is well made.\"\n\n\"The tang is the full length of the blade. The gilt on the handle is three layers, hammered. The ruby is the same quality as Beatrice's necklaces. It will be polished, rebalanced to your hand, engraved, blessed, sharpened, and presented in a public ceremony. This is a sword that will tell generations of your friendship with the Duke. The man who made it is known to the Moors, and cursed by them daily. It is a thing of beauty... and I want beauty in return.\" \n\n\"And if I do not agree, your speculations about her father become public?\"\n\n\"I don't need to threaten you, Father. There are clear traces of a family resemblance, in her eyes. The longer she stays in your shadow, the more likely it is someone will notice. I do you a favor by offering to take her out of your hands. And she'll be well cared for.\"\n\nDe Morillo looked over the sword, slowly.\n\n\"It was a mistake,\" he said, finally. \"Her mother was... passionate, and I was young. We spent over two months together, and then I learned how it was. The mother died and my work there could not continue, so I did the only thing I could...\"\n\n\"You do not need to confess to me, Father. I had a dozen women before I settled on my wife. They offer themselves, and only men wearing your vestments make a point of thinking there is a problem with that.\"\n\n\"It is a little bit different with me, Duke. But I appreciate your discretion in this area. I accept your very generous gift. Feh... it is a very hot day and I do not seem to be here on a priest's business.\" He stood up and removed the outer vestments, tossing them over another chair to dry.\n\n\"Then we will celebrate with something distilled. Iberians first, Catholics second, eh, de Morillo?\"\n\n\"Best said more quietly, Duke. If at all.\" \n\n+++\n\nA brief chronology of related events (Jose Estrella) -- proof does not exist for all these events!\n\n1340- Juanito de Morillo (1340-1392) born.\n\n1342- Juan Alonso Perez de Guzman (1342-1396) born \n\n1358- Antonio de Guzm\u00e1n (1342-1396) born. Brother of Juan Alonso.\n\n1359- Lucio (\"the Red\") born, believed near Seville.\n\n1365- Juanito de Morillo ordained in Seville (at age 25). Travels north. \n\n1365- Earthquake in Seville, damages church, tower collapses. Records of Lucio's birth believed lost in it.\n\n1366 Dec 28- Adriana born. (Dec 28 is also Adrienne's birthday).\n\n1368- de Morillo returns to Seville, Orphanage founded (Seville outskirts).\n\n1368- And\u00fajar church construction completed, north of town.\n\n1369- de Morillo (unknowingly?) has a male child; the line eventually produces Miguel, first Spanish inquisitor, in 1480. The child apparently knows who his father is, but keeps silent.\n\n1381- de Morillo promises Adriana to the Guzm\u00e1n family (when she's of age), in exchange for a sword. \n\n1382 June 7- Sword presented to de Morillo. Violent storm disrupts presentation; lightning hits the church.\n\n1382 August 11?- Lucio sneaks into orphanage after having seen Adriana. Chased off, but returns to kidnap her three days later. Spends two months with her. \n\n1382 October 16?-She is captured again by forces loyal to de Morillo and the Duke. Lucio badly wounded.\n\n1382- Lucio searches for her over the next two years, and travels north, following rumors. He discovers Adriana is de Morillo's daughter, and swears to have her and expose him.\n\n1384 June 15- Lucio finds Adriana (in C\u00e1ceres?), and rides off with her while under pursuit. A day later he fights off men, and he is wounded, but so are the guard and they only manage to get Adriana. She's returned by force to the Seville orphanage, now a virtual fortress because of Moor problems. \n\n1384 July 1- de Morillo and his forces wound and capture Lucio, and conduct an unapproved excommunication, near And\u00fajar. It fails mysteriously, and those present flee. Lucio takes the bell, book and candle. \n\n1384 July 3- Lucio assassinated by de Morillo and his men. Lucio's body is hidden in a tomb in And\u00fajar, known only to Oro Cruz, who gathers the items. \n\n1384 December 29- Adriana (age 18) forcibly married to the Duke's brother, Antonio (age 34). \n\n1387- The bell (now in a church somewhere near C\u00f3rdoba) kills four people. An investigation ensues.\n\n1388 April- The candle causes a priest to act inappropriately (location unknown, details unclear). The book hidden at And\u00fajar about this time, presumably by Oro Cruz. \n\n1388 September- The archdiocese at Seville starts a formal investigation of rumors of magic.\n\n1388 (November?)- de Morrilo becomes part of investigation, presumably to derail them, apparently fearing the items could somehow still seek his downfall.\n\n1391- Book sent away from And\u00fajar by unknown priest. Church burned in And\u00fajar by de Morrillo (age 51) shortly thereafter.\n\n1394- de Morillo finds Father Oro Cruz (in C\u00f3rdoba?); and is killed by bell. Oro Cruz brings the bell and his sword to Adriana (July?) and tells her about past events. Adriana gives his sword to orphanage. Oro Cruz brings the candle to the church in Llerena. First certain mention of candle's unusual properties is in this year.\n\n1396- Adriana travels to Lucio's tomb. In her absence, Juan Alonso de Guzm\u00e1n and brother, Antonio (husband of Adriana, age 46) are both killed by the bell.\n\n1398- An unknown Dominican priest, somewhere around C\u00f3rdoba, gets the bell from Adriana. He gives the bell to a lay priest with instructions to \"lose it in Africa\", but this is believed to be a false lead planted to discourage further investigation. The bell is brought northwest into Portugal. \n\n1398 March- November Church at Corboba publishes letter, decrying investigation into \"forbidden mysteries\".\n\n1402 (July?)- The candle causes a priest at Llerena to act inappropriately. \n\n1302 August 12- A second letter from C\u00f3rdoba demanding investigations into magic cease.\n\n1413- Adriana dies, leaving a letter to the archdiocese, to be opened in 40 years \"when Spain is free of arabs.\" The estimate is a little optimistic.\n\n1453- Adriana's letter is read. A library in a small church in Seville suffers a fire, apparently to destroy genealogical records and records of research into magic. Notes are left demanding the three items never be sought or assembled in the same place. Cardinal Juan de Cervantes sets up a secret Order of caretakers for the candle.\n\n+++\n\n16 June 1384 (Lucio and Adrienne)\n\nI heard the drum of horse hooves. So did Adriana.\n\n\"They're coming for me, Adriana.\"\n\n\"I know. It does not matter.\"\n\n\"It doesn't?\"\n\nShe stood up, and pulled together the torn blouse as best she could. \"It doesn't. It will never matter. They can take you away. They can force me to marry the damned brother of Duke Guzm\u00e1n. They can cast you from the church and claim you'll go to hell if I don't obey. They can try a thousand tricks and lies-\"\n\nThe horseman galloped up, circling us.\n\n\"-and none of it will ever matter.\"\n\nShe wound her arms about my neck, and kissed my mouth. The men dismounted and drew weapons, but did not know where to look.\n\nShe broke the kiss, and stared into my eyes. \"Hear me heavens and earth. With God as my witness...\"\n\nShe kissed my mouth again, for the last time in this life.\n\n\"... of all the men that could ever be -- I choose you.\""
    ],
    "authorname": "HandsInTheDark",
    "tags": [
        "letter",
        "sword",
        "book",
        "bell",
        "candle",
        "spain",
        "supernatural",
        "romance"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/chosen-ch-07-conclusion"
}