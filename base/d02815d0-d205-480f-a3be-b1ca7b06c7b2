{
    "title": "North Shore",
    "pages": [
        "Warning. This entire story is about sex, desire, and love. A full one-quarter of the writing could be called sex scenes. This means, of course, that three-quarters cannot be called as such. Act as you see fit.\n\nFinally, there are two sentences of Chinese spoken in the story. Since our heroine doesn't understand them, they remain untranslated. If you want to know what they mean, you will have to send Feedback. I almost always respond.\n\n---\n\nThe trade winds drafted down the mountain valley, through the high rises of downtown, and into the little office where I sat working. The breeze tossed the light fabric of my skirt against my calves, tickling my skin and reminding me of the world outside the spreadsheet in front of me. I closed my brown and green swirling eyes to concentrate on the sensation. The breeze narrowed, focusing on a spot on my neck, bristling the tiny auburn hairs. A breath. A cool breath from my lover coming to sweep me away. She bent over, bringing her lips closer to my neck. I leaned back into her kiss, content and happy.\n\nShe?\n\n---\n\nA drop of sweat collected at the end of my nipple until it dropped from my dangling breast onto her stomach. A smile spread across her face and I collapsed back into her arms.\n\nIt was that image again. I shook my head of it and went back to comparing cereal box prices.\n\n---\n\nMy mouth was full of the woman whose legs twitched around me. My tongue moved again and again over the hair and moisture. My heart raced with excitement and fear, but my hand was wrapped in hers, so strong and comforting, calming me.\n\n\"Did you want rice or pasta tonight?\" my husband asked. \"Hun?\"\n\n\"I can do rice again if you want.\"\n\n\"Spaghetti it is.\"\n\n---\n\nI liked my therapist Chantrelle personally but I didn't really like seeing a therapist in general. She always seemed to understand what I was going through. I hated that. It would be nice to be a little different from all her other patients. Instead, I would walk into her office where her assistant would be expecting me. Chantrelle would greet me in her office with a smile and that mane of dark hair tied back in large braids. I would settle into her comfy burnt orange leather chair that you felt like you could slip out of at any moment and compare the freckles on my arm against the color of the leather. Then we'd talk.\n\nIt's hard to feel special with such a routine. Comforted and safe, sure, but not special and weird, which is how I wanted to feel. But, then, I was given her name by the gay and lesbian hotline I had called in a panic three months earlier, hoping they could make the images go away. Instead they gave me the phone number of a therapist who specialized in orientation issues, a former military psychologist who had dealt with a thousand don't ask don't tell cases. I almost expected them to say, \"Welcome aboard,\" as they hung up. \n\nNow, here I was spending our money and telling someone I barely knew about the woman in my head, all the time feeling guiltier and guiltier. Not only was I now hiding the images from my husband, I was hiding the fact that I was in therapy as well. Chantrelle and I did get along great, though. She always cut to the point.\n\n\"So, Ashleigh, you've spent a couple months now telling me about these little movies in your head. What are you going to do about them?\"\n\n\"I thought I would see a therapist.\"\n\nShe smiled. \"And this therapist would wave her wand and make them go away?\"\n\n\"My therapist would use fairy dust. Wands are so last year.\"\n\nChantrelle bounced her pen against the brown skirts covering her knees as she always did before she said something important. \"Ashleigh, it's time for you to make a decision. Much as I like your money, you need to get out of that chair and act.\"\n\n\"What do you want me to do? Put the images together and post the movie on the Internet? Pale redhead gets dirty with girlfriend?\"\n\n\"Why don't you do the obvious thing?\"\n\n\"And what's that?\" I stopped my hands from fiddling with the long lock of hair dangling around my bosom. \"The obvious thing would be to find out if I want them to be more than images.\"\n\n\"I agree.\"\n\n\"But the only way to do that is to, you know, try it.\"\n\n\"Are you talking about sleeping with someone?\"\n\nI tossed the hair back over my shoulder. It's good I didn't have Chantrelle's pen, because I would have been playing the rhumba with how nervous this conversation made me.\n\n\"Ashleigh, when you say this, how does it make you feel?\"\n\n\"Crazy.\"\n\n\"How?\"\n\n\"Like I'm a horrible person.\" I saw my chest rising and falling faster than normal, the pale green blouse on white skin puffing in and out.\n\nChantrelle paused for a moment. \"So you are thinking about doing it? You are thinking about trying to get picked up or something?\"\n\n\"No way am I going to go to a bar to have a one night stand.\"\n\n\"You've thought this through. It's far more to you than images.\"\n\nI didn't answer. I didn't want to say yet how I was finding my head turn when an attractive woman was near, how I imagined the feel on my thin bare legs of the visiting consultant's skirts when she brushed against me looking over my shoulder, how I could still smell the perfume of the woman who gave me my coffee every morning. I wasn't ready to say any of this.\n\n\"A relationship then,\" Chantrelle continued. \"Is that what you are considering? It doesn't have to be meaningless, right? Find a girlfriend; find someone to move in with-\"\n\n\"No!\" I hadn't meant to yell, but my heart was racing so much I couldn't stop it.\n\n\"Why not? Unless you aren't sure you want to.\"\n\n\"Of course I want to!\" Dammit, she had led me right into that. Okay, she was good at her job, but still. \"You know I can't, Chantrelle, and you know why.\" This was why I had called the hotline. I knew I wanted more than images. I wanted to cheat on my husband with another woman.\n\nShe waited, letting me calm back down. \"Ashleigh,\" she spoke slowly. \"I need you to talk to me. You know better than I that this isn't a game. I need to know what you are thinking, why you are scared. Everyone has fantasies. We talked about this on day one. What is scaring you?\"\n\nHad I been praising her directness earlier? \"It's, maybe it's that I, I think about doing what we are talking about. I don't hide anything important from Ken, but when I'm on business trips I start thinking about looking up info on the lesbian scene in the town. I find myself fiddling with my wedding ring.\" I looked down and found myself sliding my ring up and down my finger as I sat there. I had never done that a year ago. Chantrelle watched me gently slide the ring back into its rightful place. \"I can list the names and open hours for a lesbian bar in a dozen cities off the top of my head. I've never been to one, but I know their names.\"\n\nChantrelle's voice seemed to deepen as she spoke next in a way I had not heard before. \"Sex between women is some of the safest sex you can have,\" she said. \"Few diseases, no pregnancy risk. Info on dental dams and other protection is easy to find.\"\n\n\"Are you telling me to cheat on my husband?!\"\n\nShe said nothing.\n\n\"I will never ever cheat on Kenji.\"\n\nShe still refused to speak. I just had to watch her foot tap slowly in the air.\n\n\"I love him and I will not do that. I won't.\" I could see Ken's face as I sat there. His dark hair so full, the scruff on his broad chin, the soft full lips, and then the pain in his charcoal eyes when he discovered what I had done. No, I would never cause that sort of pain.\n\n\"I know you don't want to,\" she replied finally. \"Then what will you do with your desires?\"\n\nHide them; let them die; anything to keep me with Kenji. Didn't she get this?\n\n\"I will just live with them. I'm not a child. I have will power. I'll just live with the pictures in my head.\" And the desires. And the heart fluttering when someone attractive looked at me a little longer than seemed normal.\n\n\"Every day for the rest of your life, you will dream about having sex with a woman, and you will never actually do it,\" Chantrelle said.\n\n\"Love how supportive you are being. It's the only choice because I don't lie to Ken.\"\n\n\"It's a lousy choice, Ashleigh, and you know that. That's why you're here. Because you aren't sure you can keep bottling it up. As far as I can tell you've been happily married for six years, but you won't be if you just ignore all this. Your desires will continue and slowly but surely, you will come to blame Ken for trapping you. The marriage that you want to save by just bottling everything up will either end or be a fragment of what it once was.\" \n\n\"You are a delightful person to talk to today. Can you audit me while you are at it? If that doesn't suck enough, you can do a pap smear. Ooh, ooh, no. Send me out to dinner with my boss.\"\n\nAs always she took my crap with ease. I'm not sure what I wanted her to do. Have her own brown freckles start glowing in anger? Why couldn't the hotline have recommended someone incompetent so I would have had an excuse to stop coming? I'm not a woman who revels in exploring my feelings. I'd rather have a cup of coffee and go do something.\n\n\"Alright then,\" Chantrelle started, \"Let's go through the options. We've worked through having sex with another woman and not telling Ken about it,\" she replied. \"That's out, right? You've rejected that. We've worked through not having sex, bottling it all up, and also not telling Ken, and that's out, too. So what's left?\"\n\n\"Telling Ken,\" I admitted grudgingly. She was so fucking good at her job. I never could let her know I thought so. \"I can't wait for that talk,\" I said instead. Would Ken ever touch me again if I told all of this to him? Maybe he would conclude I wasn't interested in men anymore, and yet his touches were one of the best things in my life, behind only his companionship.\n\n\"It's been obvious for several meetings that you needed to bring Ken into this, Ashleigh. Your great fear seems to be not having him in your life. If you can't get the other desires to go away, then you have to integrate them into your life, and Ken is your life. That's the starting point. Tell him.\"\n\nI wanted to fight this solution, but it was so stupid obvious I knew not to waste our time doing so. \"So what do I tell him?\"\n\nShe tossed her hands up. \"I have absolutely no idea.\"\n\nI almost whined. \"Don't make me figure it out, Chantrelle. I know this stuff is just your job, and I will be followed by someone trapped in someone else's body or whatever, but this is all I care about. You know I trust you. Just tell me how to do it right.\" Crap, if that wasn't an obvious admission of my respect.\n\n\"I really don't know, Ashleigh. All I know is that you have sexy images in your head that seem to be female. Only you know what you really want from this fantasy woman, from your husband. I can't tell you.\"\n\n\"Great.\" I looked up at the wall clock and listened to it tick. We had ten minutes left. \"Can you at least ask me a leading question?\"\n\nShe thought for a second and then said, \"Is it okay if Ken is there?\"\n\nI stopped and looked up at her. Ken could be there? What-? How-? I'd always assumed Ken wouldn't be there. I mean, threesomes are things that drunk college kids and icky people do. But, but why not? I'd love that. I'd absolutely love that. I could have my pillar of support right there with me?! Really?!\n\nWe never got past that moment because I was out of her office as fast as I could run. I cornered Ken in an empty trailer at his construction site and told him I had just blown several thousand dollars on therapy for the last few months. I told him I had been dreaming about other women for over a year and I didn't know why. And I told him that I wanted him to be there when I was with her, whoever she was, for the first time in my life. And I guess he would have sex with her, too. We both would. And then we would see what it all meant because I just didn't know.\n\nKen had sat there just looking at me, reading me. His dark eyes scanned my face, looking over my thin nose and plum-colored lips, past my high cheekbones, and into my hazel eyes, looking for what was happening underneath all of that. He was the calmest person I had ever met, like the firewood to my flames. But he didn't fool me with his silence. He wasn't calm; his muscles were tensed as he wrestled for the right words, wrestled to understand what his wife was saying to him. My only hope was that he knew me; knew that I never acted like this. After longer than I could imagine he just made an observation, \"It's important to you.\" I hadn't answered. I just cried on his shoulder until he took me home.\n\nIt was only in the car that I realized I might have just asked Ken to help me on the path to leaving him. Being forced to leave him.\n\n\"And then we would see what it all meant.\" Those were my exact words. But I knew what it meant. \n\nI was becoming Jeannette from my last job, my mentor and model. She had been viciously smart, horribly competent, and always had time to help me out. Then, at the age of 42, married with three children, she fell in love with a woman in her choir. Her entire family life came crashing around her head with a painful divorce and a son who wouldn't speak to her for a year. It had been five years since I left, and I knew things had come around for her and her family. Her son was back; she had never been so in love; and even her husband had remarried. But I still didn't want that to happen to me. I liked my life as it was. Of course, that's what she had told me as well before it started.\n\nWhen I finally calmed down, I wasted $200 more on flowers for Chantrelle. I had no idea where Ken and I were going, but at least we were moving again.\n\nIn time, Ken and I slowly wrapped ourselves around this weird possibility, and we came to agreement about two things. First, it was us as a couple. Secondly, at least the first time it wouldn't be personal. It wouldn't be someone we knew or would see again. That would give me time to think without emotional baggage. I didn't really like this too much, since I didn't really get why you had sex with someone you didn't care for in some manner, but I got the logic. Us together; someone we didn't know. Those were the rules\n\n---\n\nNine full months later that's where we still sat. How do you get involved on an island with a bisexual woman that we would never see again? I spent one night in a Waikiki bar hoping to meet a nice tourist, but instead of a lovely encounter between three people on one passionate, tropical night, I felt like some sort of predator trolling for prey. I went home having spoken to no one and wondering what sort of person I had become. It was just as well that my office shipped me all over the nation every week. I hated being away from Ken, but at least I didn't have to worry about making our new fantasy become real.\n\nFinally, one beautiful Saturday night, a solution seemed to present itself. And of all the possible sources, it came from my annoying boss in an email.\n\nAshleigh,\n\nSorry but Roger insists you go. I told him how much you've been traveling blah blah blah, but no dice. He says he wants the best on site with him, so I suppose that's you. In short, you're going to Vegas next Thursday. And I probably shouldn't put this in writing, but if you want to spend a little extra, I'll probably sign the form. I hear the Venetian's nice.\n\nChuck\n\nVegas. What happens in Vegas stays in Vegas. Wasn't that the slogan?\n\n\"Ken!\"\n\nI knew he was awake. The last time I'd seen him, he'd been looking scrumptious in a pair of pajama bottoms reading the latest issue of Auto Tuner, the old car mag that he had written for when he was the creator of some of the hottest beasts to be found in the import racing world. That's one thing I didn't get about all my fantasies. Ken still made me wet. A broad chest with the smoothest skin. Hands that were rough feeling and as strong and gentle as could be. And that damn chin. Rugged, dashing. It didn't make sense. He had just shaved an hour ago and I knew I would be sucking on that chin before the night was through. He better not have fallen asleep!\n\n\"Yes, Mrs.Misagi?\" he asked with a wry smile, passing into our cluttered little office / project room / second bedroom.\n\nMrs. Misagi. I remembered standing in that translucent negligee on our wedding night with my long red hair and pale skin, surprising him as he came in with the bags. \"Mrs. Misagi,\" he had said simply. We hadn't discussed whether or not I would change my name, but as soon as he said it, I knew O'Connell was gone. Then he'd dropped the bags where he stood and swept me off. My skin was a bit more tan now, but neither the hair nor my love of being Mrs. Misagi had changed.\n\n\"Kenji, I've got another trip next week-\"\n\n\"I thought you told Chuck you needed to stay in at least one week!? You just got back from L.A. this morning!\"\n\n\"Don't get mad yet.\"\n\n\"How long do I have to wait? There's a reason they send you out and not him.\"\n\n\"I want you to come with me.\"\n\n\"Come with you? Where?\"\n\n\"Las Vegas.\"\n\n\"Vegas.\" He rubbed at newly squeaky clean chin. \"I think I'm the only one left on this rock that hasn't been there.\"\n\n\"You know why, right?\"\n\nKenji looked at me and knew but wouldn't say it.\n\n\"For our fantasy,\" I explained unnecessarily.\n\n\"The one?\" I nodded and Kenji swallowed so slowly I could see his Adam's apple slide up and then back down. \"I got ya. When?\"\n\n\"I have to be on site all day Friday.\"\n\n\"How long do you think it will take?\" he asked. \"I mean to find someone.\"\n\n\"It's taken nine months and we haven't even spoken to a woman yet. I don't know. As long as it takes.\"\n\nKen pulled out his old notebook covered in drawings that he called a calendar for his business as an electrician. \"There's no way I can leave until after Thursday. That's state inspection on the Wailapu project. But Rosaria can probably handle Friday and Saturday.\"\n\n\"She can't do Thursday, too?\"\n\n\"In six months she'll be fixing my mistakes, but not yet.\"\n\nKen didn't make mistakes as far as I knew. \"Then you'll just be a day after me.\"\n\nHe nodded. \"So how do we find our mystery woman?\"\n\n\"Bar?\"\n\n\"I can't wait for that conversation. 'Hi, my name's Ken, and my wife and I have this fantasy of being with another woman, so....'\"\n\n\"Well, what's your idea?\"\n\n\"I don't know. Club?\"\n\n\"Same thing as a bar except people are drunk and dancing instead of drunk and standing.\"\n\nKenji brushed his dark rebelling hair from his forehead and collapsed on the sofa. I realized the man had gone all clean cut on me in the last few weeks. His long hair was now gone so that the black locks just tossed around his ears. His usual scruff on the chin had vanished with it. I wasn't sure which I liked better, since I felt like eating him up however he looked. \"Good God, it's hard enough to date when you're single,\" Ken continued. \"How are we supposed to do it married?\"\n\n\"Internet,\" I told him.\n\n\"Are you going to search for 'Bisexual Vegas Girls?' You'll just get porn.\"\n\n\"Craigslist.\"\n\n\"What's that?\"\n\n\"How is life on Planet Kenji?\"\n\n\"It's great, Mrs. Jetson. How's life in your flying car?\"\n\n\"It's just a site with a bunch of ads listed by city.\"\n\n\"Ads like 'Want sexy Hawaiian couple for insanely nervous first time three'?\"\n\n\"You never know.\"\n\nWe headed into Casual Encounters for Las Vegas but mostly found other couples like us, not our match. That had almost always been the case when I looked around previously, too.\n\n\"Do you think any of these people are real? Or serious?\" Kenji asked as we perused an ad for a 21-year-old blonde wanting anyone, any time.\n\n\"I don't know.\" I suddenly felt exhausted. \"Probably a few are and most aren't.\" I closed the browser window as forcefully as I could with a mouse. Whatever we thought of there'd be some reason it wouldn't work; it'd probably be like that until I died.",
        "Fuck. Here I was beginning to blame Ken when he'd done nothing wrong. It wasn't his fault we were idiots on this whole threesome idea. Damn Chantrelle.\n\nWait a sec. If we had absolutely no clue what we were doing, then we obviously just needed to find someone who did. \"We need a professional,\" I told Ken. \"And you know what other than gambling is legal in Vegas.\" I opened the browser again and typed \"Vegas escorts\" into the search engine.\n\n\"You are not serious. You want to hire someone we've never met and have sex with them?\"\n\n\"It makes sense. We're the No Clue Gang, while it's her job. We agreed we want it to be non-personal, which, by the way, means that we've never met them before,\" I pointed out by poking him in the leg. \"How much more 'no strings' can you get than an escort?\"\n\n\"No. Okay, for the first time tonight, I know something you don't about this. I've never been there but guys talk. You can walk down the strip and people will shove flyers into your hand for a girl in your room in 15 minutes. These must be poor women from over the border or something who may or may not even be here by choice. It's gross. We don't want any part of that.\"\n\n\"That really happens?\"\n\nKen just nodded.\n\n\"Of course, you're right. You're always right. I guess we'll just wander around the city until some woman throws herself at us. It's worked so well for the last nine months.\"\n\n\"I know, Ashleigh. It's just...\"\n\nI agreed with Ken as I almost always did. I just didn't have any more ideas of what to do. Since us doing the smart thing wasn't working, it was time to do something stupid.\n\n\"There is the other end of the spectrum,\" Ken said, leaning towards the computer.\n\n\"Huh?\"\n\n\"The super-expensive escorts. Click on that link there,\" he said, pointing. A well-designed web site with a picture of a stunning Caucasian brunette in a leopard dress came up. There were links to various categories of women. Blonde, brunette, ebony, Asian. \"How about there?\" Kenji asked pointing at the words \"The Best\". Thumbnails of about fifteen women came up, each one sexy in their own way, if maybe going a bit overboard with the \"come do me\" look. I selected the top one, a redhead like me but way better stacked. Wait, if I wore a D, she was a... whoa.\n\n\"Jazz,\" the ad read. \"Available for men. Outcall. Stays possible with previous arrangement. I will pamper you like a woman should then blast you off to the moon, but be careful, fellas. Everyone comes back for more. You've been warned.\"\n\nKen had pulled up a chair and was reading intently. Well, maybe he wasn't exactly reading because Jazz was about to fall out of her dress.\n\n\"What do you think?\" I asked.\n\n\"Nah, I've got a redhead. Besides even I can tell she's half plastic. We can go to a toy store for a Barbi Doll.\"\n\nI had to smile. Jazz' bosom was doing more for me than it was for Ken. He'd always been a leg man. \"What's her rate?\"\n\n\"Seems you have to call.\"\n\nThe next woman had dark dark mocha skin that just glowed. She did it for both of us. But she had a posted rate which knocked us backwards. \"2 hours - $1200. No over night,\" it said.\n\n\"Okay,\" Ken said. \"Here's our plan. You and I play together continuously right until she knocks on the door. We're right on the edge. She comes in. Bam! Finger here, lick this, enter that, orgasms all around. Five, ten minutes tops. Not more than $50.\"\n\n\"I don't think we get a discount for being lame.\"\n\n\"Rip.\"\n\n\"But expensive is better, right? The higher she charges, the more likely she's doing this by choice, because it's great money. If we are going to do this at all, it has to be like that,\" I told Ken.\n\n\"Yeah....\"\n\n\"And we need more than two hours. We need a night.\" I could agree with Ken about the non-personal thing, but if I was going to do this, I was going to take some time with it. I didn't know what I was looking for, but it wasn't doing someone in a back alley in ten minutes.\n\n\"You \u2013 we - want the most expensive woman we can find,\" Ken replied.\n\n\"Right. On the entire site. No matter what. Getting this right is more important than money.\" I offered him my hand, which he slowly shook. \"If we like her, I mean.\"\n\nI got all excited by \"Jade\" who said she was Thai, Korean, and German and looked a little like my favorite barrista with the perfume who always seemed to have an extra smile for me on the way to work. Nuun was the person I had noted if the \"non-personal\" restriction ever came off. I couldn't be with her, but maybe I could be with her distant Vegas cousin. She too only had a phone number and only offered hourly rates as well, though.\n\nKenji kept getting excited about various women and I couldn't get the connection for a bit. Then I realized they usually looked a lot like the models in the auto-tuning world. The girls he dated before me. I still never really believed that. What did I have that he liked so much? He was a wanted man, though getting close to 40. I was just me.\n\nAt the very bottom of the site was an ad different from the rest. No picture. No leather or lace. Just two Japanese, or Chinese, characters, kanji. I couldn't read them, but I'd been around Ken's family enough to know what I was seeing. I clicked on the ad, which couldn't have been simpler.\n\n\"I am what you desire. One night only. $10,000.\"\n\nJust that, an email, and two more words, \"I'm professional.\"\n\n\"Is she Japanese?\" I asked.\n\n\"The characters read more Chinese to me. I have no idea how you'd say them, but the first means... uhhh... expensive. And the second is phoenix, like the bird. It's common to wish that a woman become a phoenix. Boys are dragons; girls are phoenixes.\"\n\n\"'Expensive' is a weird first name.\"\n\n\"She's earned it. You wanted the most expensive woman we could find. Here she is. 'What you desire \u2013 the professional.'\"\n\n\"I wonder if anyone ever hires her,\" I wondered aloud.\n\n\"That's a three month salary for me. She'd only need 4-5 nights a year if she fetches that much. I wonder what she knows that we don't.\"\n\nI thought about Kenji in bed. He knew a lot. \"Let's find out. Let's just write her and see what happens.\"\n\n\"It's a quarter of our savings, Ashleigh.\"\n\n\"More after my therapy,\" I reminded him. \"But we'll earn it back.\"\n\nSomething about the ad had my heart beating. The truth was that I didn't care about being teased or the color of her skin or the size of her chest. That's what all the other women offered. I only cared about our person being good at what she did. This ad promised professionalism, leaving everything else a mystery. Isn't that what real life is like? I hadn't grown up knowing I would love a man who looked like Kenji, who built hotrods, or who lived in the middle of the Pacific. All that had been unknown. The same was true in this case. I wasn't looking for a blonde or a Latina or any category of woman. I only wanted to understand how it felt to be with another woman, and that's what the phoenix was promising. Desire.\n\nKenji sighed. \"Let's hit the email then.\"\n\nI started to type, slowly at first, then faster.\n\n\"Dear Ms. Phoenix,\n\nWe saw your ad on the web site. We would like to know more about you. My husband and I are coming to Las Vegas next week and maybe we'd be a match with the services you offer. We don't know what we are doing and you must, based on your rate. We'd like to learn more about you, and we will tell you more about us. Of course, discretion is important. This trip is for both of us. As a couple. I'm sure you know what I mean by that. OK. Thank you. Please be polite if this isn't your area of expertise. We are lost.\n\nLost Couple\"\n\n\"How's that look?\" I asked.\n\n\"Hit send and we'll see.\"\n\nI stared at the send button on the screen, feeling my finger tapping on the mouse, trying to decide if I really wanted to email an escort. What had happened to innocent Ashleigh? I felt Ken's lips kiss my hair and his strong hands rest lightly on my shoulders. Time to do something stupid. I clicked.\n\n\"Do you think she will be nice?\" I asked.\n\n\"It's her job.\"\n\n\"If she's horrible to us, what can we do? We aren't going to complain.\"\n\n\"She's probably booked anyway. It's really short notice.\"\n\n\"Maybe we should call Jade. She's nice, isn't she?\"\n\n\"Yes, very, but it's one AM there and she only had the phone number. She's either asleep or working. Bed?\"\n\nI nodded and caressed Ken's arms. I knew I was doing something dumb - to risk Ken for this. What would the Phoenix be like? Would I like her? Would she like me? Would it matter?\n\n\"I don't want to sleep with someone who doesn't like me, Ken.\"\n\n\"Yeah. But we can't find out what she thinks tonight. Tomorrow maybe. At least I like you.\"\n\nI grinned and stood, wrapping my hands around his neck. \"Te adoro, Antonio. I think you are pretty cute, too.\"\n\n\"Aw, shucks, sweetie,\" Ken replied playing along immediately in our game. \"Just how cute do you think I am?\"\n\n\"Kiss on the lips cute.\"\n\n\"Really? I think you are nibble on the ear cute.\"\n\n\"Biting the shoulder cute.\"\n\n\"Unhook the bra cute.\"\n\n\"You like to move fast, stranger. Hands on your ass cute.\"\n\n\"Licking your calves cute.\"\n\nThat one always got me. \"Cock in my mouth cute.\"\n\n\"Grrr... Sucking your clit until you scream cute.\"\n\n\"Fucking until we catch the bed on fire cute.\"\n\n\"That does it!\" Ken declared as he scooped my thin body up in his arms running for the bedroom. I was already imagining the taste of his skin as we went down the hall. His tongue on the back of my knee like I loved. His come falling onto my ass cheeks. His way of sliding in me from tip to bottom over and over. \n\nWe spent over two hours in each other's bodies that night, tasting one another, drinking one another. I had started fast by engulfing Ken in my mouth, running my tongue up and down his length until he exploded. Then the tenderness started with Ken's lips covering every inch of me. When I escaped his oral caresses, I straddled the back of his legs, rubbing my mound against him, as I massaged his back, searching for every tense muscle in his hard-working body. Then I had lain on my stomach with Ken lifting my rear into the air. His mouth fell between my thighs and he feasted on me from behind until my thighs quivered and I begged to hold him in my arms. During the kisses, he pushed deep into me. Oh, I had cried out as we took each other. I cried out for him and me and for this freedom together. Soon our sweaty bodies were rolling back and forth with grins from ear to ear, our orgasms lifting us higher and higher.\n\nI loved this man.\n\n---\n\nI woke up when the light was just starting to cross our bedroom. I gently moved Kenji's hand off my breast and padded off to wash my face. I wasn't as disheveled as I thought. My hair fell to my shoulder blades with only a little frizz. My pubic hair didn't look as matted as it felt from all the liquids sliding around last night.\n\nI stopped and looked at that triangle.\n\nWith luck, I was going to be with another woman soon. She would want to, to eat me out. And I'd do the same to her with Ken there. How would I do it? Would she lie on her back for me? Would she get on her hands and knees like I had done last night with Ken? Maybe I would sit somewhere, like on a sofa, and she would stand, straddling my face.\n\nI should shave. Don't women who do this a lot shave there? Or am I supposed to be all athletic and in a muscle shirt. I smiled at the dumb stereotypes floating across my mind. I had long hair, painted nails, and loved wearing a short skirt. I also was cynical, could run a good six miles on the treadmill, and had slugged a guy in college who wouldn't back off \u2013 slicing his cheek with a fingernail in the process. Did that make me butch or femme?\n\nA tongue was sliding up the pale skin of my arm. I could feel her long hair tickling my back as she tasted me.\n\nHow many times had I touched myself thinking about these images, these feelings? How many times had I collapsed in the shower, alone, sobbing because these images would never be real? If they were real, it meant I was leaving the one I loved. How many times had I felt ashamed because I had begun to forget which part of my life was more important? Images on the cutting room floor. That's what the pictures were. Little clips of another life, another possibility. When would I start finding images of Ken lying next to them?\n\nI pulled on some sweats and walked to the computer. An email waited for me from a \"Gui-Feng.\"\n\nDear Mr. and Mrs. Misagi,\n\nYour email was rather excited and I'm pleased to hear from the two of you. I believe I can satisfy your requirements as you mention them. Before I speak to prospective customers, I always ask for a small token to show that you are truly interested in my services and not just getting a thrill by writing to an escort. Because I have done nothing for you, I cannot ask for anything for myself. Therefore, I request that you make a $100 donation to the charity of your choice. Send me the receipt and we will start talking for real. If you are not sure if your charity can provide an immediate receipt, I have provided a list of several of my favorite organizations for you to choose from. The donation will be subtracted from the rate that was advertised.\n\nI know this is terribly unfriendly, but it is far too easy for people to send an email who have no real interest.\n\nThank you for contacting me about my services.\n\nGui-Feng\n\nThe first shock was the beginning. How the hell had she known our names? We'd only signed \"lost couple.\" Then I looked at my email address and sitting right there was \"Kenji and Ashleigh Misagi.\" Crap, I wasn't good at this stuff.\n\nThen there was the rest. Still no picture, no offers, nothing. Except a request to give money. Bit I had declared it was time to do something stupid, so without a second thought I started browsing her list of charities and made a donation to a children's hospital. The receipt went to Gui-Feng, and I went off to find Kenji making breakfast in his underwear.\n\n---\n\nIt wasn't until the 3rd quarter of Ken's football game and my 15th email check that the response came:\n\nAshleigh and Kenji (or is it Ken?),\n\nYou aren't my usual customers, and I'm really pleased to hear from you. I think I can help the two of you out. We are all lost sometime, aren't we?\n\nI have attached a couple pics of myself this time. Thank your husband for his patience.\n\nAs you know, this is really short notice and so we are going to have to get working immediately. I've penciled in Saturday night as our night. Will that be OK with you? I need to talk to both of you as soon as I can, so I put my phone number below. It's real. Call me before 8:00 your time. I am going to ask very personal questions, so be ready.\n\nCall me,\n\nGui-Feng\n\n\"I've penciled in Saturday night as our night.\" I was actually going to have a night! I scrolled down to see my date.\n\nFuck.\n\nHoly fuck.\n\nSurely she was airbrushed or something. No one's skin is that perfect. I enlarged the first picture, the headshot, up to fill my screen and just stared. Would a woman who looked like this want to kiss me? Why didn't she rule the world or something? High cheek bones, dark, luscious eyes, blossoming cheeks, such delicate ears. My finger traced along her lips, so full and ripe and dark, so ready to be kissed. Could it be that I might kiss lips such as those? This was ridiculous. \n\n\"Is that her?\"\n\nIt was Kenji's voice but it sounded like something was stuck in his throat.\n\n\"She's beautiful,\" I replied.\n\n\"Yeah.\"\n\nI turned to find Kenji staring at the picture as intensely as I had. I looked back and forth between the two of them. Kenji was attractive enough for her. Had I made a mistake here?\n\n\"There's a second picture,\" I told him.\n\nThis time she was draped in a dark green evening gown, sitting on a bar stool in some busy club. A bubble of light surrounded her and all the other patrons gave plenty of space. She owned the room, as she should. One leg was on the top rung of her stool, causing the dress to fall open along her never-ending legs. In all my time at the gym I had never seen legs so slender and perfectly formed. I had long legs like her, but not like that.\n\nI was biting on her ankle.\n\nThis time I grabbed the image and kept it there, not letting it go.\n\nI was biting on her ankle.\n\n\"She has a good photographer,\" Ken said with his trademark understatement.\n\n\"She's a goddess, Ken.\"\n\n\"That probably makes the photographer's job easier.\"\n\n\"Why isn't she married to some billionaire instead of doing what she does?\"\n\n\"Maybe this way it's a few nights a year with someone she doesn't love rather than every night.\"\n\nI closed the picture, breaking the spell, or at least weakening it. \"She wants us to call her.\"\n\n\"Call her?\"\n\n\"Today.\"\n\n\"Why?\"\n\n\"Says we have work to do,\" I explained.\n\n\"Oh,\" he laughed. \"Well, if Venus tells you to call....\"\n\nGui-Feng's pictures had had an effect on Ken. This was the first time he'd shown any enthusiasm for the project. \"Then that's what you do,\" I finished.\n\n---\n\n\"Hi, is this Ashleigh?\"\n\nI froze. She was real. I was talking to her. I was going to have a night!\n\n\"Ashleigh?\"\n\nDamn, her voice was warm and friendly. She sounded like Ms. Shaughnessy in 9th grade. My favorite teacher. Everyone's favorite teacher.\n\n\"This is Gui-Feng. Don't worry, I wouldn't let anyone else answer.\"\n\nI finally made my mouth move. \"Okay.\"\n\nShe gave a small laugh. \"Thank you for calling, Ashleigh. It's nice to hear a female voice in this job. Is Ken on the line, too?\"\n\n\"Ken? Oh, no, he's sitting next to me.\" I clutched his hand tightly.\n\n\"Good, I need to talk to both of you.\"\n\n\"When do we pay?\"\n\n\"If you are content after this call, you would pay half. The other half will be paid on Saturday. Do you have $5000 available to send to me? I only accept direct wire deposit.\"\n\nWow, she certainly had things worked out. But as Ken had said, she only needed a few nights a year. She could be as exact as she pleased and if someone didn't bite, so what? Good for her. \"Well, it's Sunday, so we'd have to send it to you tomorrow.\"\n\n\"That's fine.\"\n\n\"We'll do it. I promise.\"\n\n\"I believe you.\"\n\n\"Don't people not pay all the time?\" I asked.\n\n\"Yes. After today, I've raised $35,600 for charity so far. And remember before you start doing the math, most people opt out.\"\n\nI chuckled. It hadn't taken too long to do that math. 356 customers. I wondered how many had decided to go through. If they had, she would have earned over 3 and a half million.\n\n\"Six years, since you are calculating it out,\" she interrupted. \"And, no, I won't give you the percentage of actual customers. It's small enough for me.\"\n\nI was about to apologize, but I could hear a slight smile in her voice. And the fact that she could tell what I was doing immediately made me realize I was dealing with someone with intelligence. Someone who deserved more than a half-assed apology.\n\n\"Ashleigh, I need to talk to you alone. I need you to tell me about things you wouldn't even tell Ken. Can you do this?\"\n\n\"I can hear her,\" Ken said and, letting go of my hand, disappeared.\n\n\"You know this is very strange, Gui-Feng. We are paying you all this money and so far we just do what you tell us.\" I hadn't meant it to sound quite like that.\n\n\"Ashleigh, I don't want you to do anything today, next Saturday with me, ever, that you don't truly want to do. I'm taking charge now because this is my job, and... this is all new for you, right?\"\n\n\"Very.\"\n\n\"How much of it? Have you hired someone like me before? Have you ever been with a woman before?\"\n\n\"Neither.\"\n\n\"Not even a kiss?\"\n\n\"Not that type of kiss, no.\"\n\n\"Then why are you calling me? Why are you doing this thing that makes you so scared that you can't speak on the phone? You tell CFOs what to do. \"\n\n\"We didn't know how to make the fantasy come true,\" I explained. Wait. How did she know what I did for a living?",
        "\"What fantasy exactly? A fantasy of the two of you with another woman?\"\n\n\"Yes.\"\n\n\"Maybe it's a fantasy of just you with another woman?\"\n\n\"No, well, I mean, that's how it started. But I want Ken there.\" I found myself pacing in a tiny circle as I cradled the phone.\n\n\"Why?\"\n\nGood question. Was it for comfort? \"I- I- I like him.\"\n\n\"I hope so,\" she said with a clear smile on the other end. \"Is he there for you or there for himself?\"\n\nI don't know. \"I wanted him there.\"\n\n\"You wanted him to make love to someone else while you watched, or to watch you?\" Gui-Feng asked. \"People have this fantasy a lot.\"\n\n\"I, um, I want us there. This is important to me, and I share anything that's important with him. Know what I mean?\"\n\nShe paused. \"Ashleigh, why don't you try to meet someone somewhere else? Why pay?\"\n\n\"We didn't know how.\"\n\n\"You'd figure it out in more time. There are swingers groups, personals online, interested friends. A close friend you can trust.\"\n\nI don't have any close friends. Not in several years. That's what I almost said. \"We wanted to keep it non-personal.\"\n\n\"You wanted sex to be non-personal?\"\n\nA smile escaped my lips because that's how I had always felt about our rule. How could sex not be personal?\n\n\"Ashleigh, this is your fantasy, not Ken's, right?\"\n\nMy smile broadened. \"I think it's Ken's fantasy now. I mean, don't men want to sleep with as many women as they can? And two women at once is the ultimate, right? He likes your pictures, Gui-Feng,\" I confessed mischievously.\n\n\"Can you tell me about the fantasy? In detail?\"\n\nTell this stranger, despite her beautiful voice, intelligence, and never-ending legs, about my deepest fantasy? No.\n\n\"Ashleigh, this is why you called me.\"\n\n\"You sound like my therapist.\"\n\n\"You've gotten therapy about this.\"\n\nOkay, this was getting personal. I had thought her personal questions would be about whether or not I was ready to go down on her, not this.\n\n\"Yes.\"\n\n\"Why?\"\n\n\"I kept having these images, these thoughts of me and another woman. They wouldn't go away.\"\n\n\"Okay.\"\n\nShe seemed to expect more. \"So, I called a hotline.\"\n\n\"Ashleigh! Everyone has fantasies. Nothing's strange about that. I had a dream last night about listening to a Yanni concert, but that doesn't mean I'm going to go buy his box set. Why did you need a hotline just because of a dream?\"\n\n\"Gui-Feng, they won't go away. It's been a year and a half. Every day I have some thought of me with someone else. Me with someone who isn't my husband. That's not good.\"\n\n\"I bet some people who are very happy have a fleeting thought of someone else all the time. Supposedly, that's how men live their entire lives.\"\n\n\"But I didn't want them to be fantasies. I wanted them-\" Why had I spent all my time with Chantrelle? I could have just rung up an escort.\n\n\"You called a lesbian hotline, didn't you? Not a marital one, sex therapy, or a friend or anything else. That's what you are scared of.\"\n\n\"I'm not scared of being lesbian.\"\n\n\"How did you choose me?\" Thank God, she had changed the subject. \"Was it important to one of you that I was Asian?\"\n\n\"We never talked about that. It was... well, if you are making a lot of money, more than you'd make doing lots of other things, you are probably doing it by some sort of choice, not because you are forced into it.\"\n\n\"You don't like what I do.\"\n\n\"I try not to think about it, to be honest. I try to think of you as just a person who will help us out. Your ad seemed to say that's what you did.\" I didn't want to insult her, but this was the truth.\n\n\"Ashleigh, you need to know something about me before you pay a dime more. I am under no obligation to do what you desire. What you are thinking of is a myth about Vegas. You are hiring an escort for a nice evening on the town. That's all. If I want to spend more time with you because I enjoy it, that's our choice and has nothing to do with money. And, I'll tell you the truth. If I won't feel happy about myself in the morning, I'm not going near it. Okay? So it's possible that you will spend $10,000, fly to Vegas, and then go home with your fantasy having never come true. I cannot promise it to you. And this isn't something I'm making up. I have frequently spoiled a customer as much as I possibly could and then taken off because I didn't like the idea of anything more. I can only promise that I will do everything I can to make you and Kenji happy. I enjoy making people happy.\" She paused. \"Sometimes people call me a bitch and hang up here.\"\n\n\"There's no way I ever want to have sex with someone who's repulsed by me. Omigod, I can't believe I just said I want to have sex with you. I'm so sorry.\"\n\nGui-Feng laughed. \"Ashleigh, tell me about these images of yours.\" But something seemed to have changed when she spoke now. The therapist was gone and instead she was just someone who was delighted to hear my voice. We even talked about shoes. It had been a while since I had sat and just talked to another woman about whatever was on my mind. Even though I was paying for it, it felt right. I still felt exhausted, though, when I tossed the phone to Kenji and ran out of the house so I couldn't eavesdrop on his turn.\n\n---\n\nThe days passed slowly after the phone call with only the normal stuff to do. Every once in a while, an email would pop up from Gui-Feng for some bit of info. Soon she became all that Ken and I talked about. Over breakfast, over dinner, while making love. Ken would put his mouth between my legs and I'd say, \"Just like that, Gui-Feng,\" nervously. On Tuesday night, Ken got me very excited and put two fingers inside me. He pulled them out and I practiced licking the crease in his hand. The final night we decided to practice for the weekend and made love quietly in front of her picture on the computer. I spread my legs open for Ken and looked into her eyes as I took him in me. I was amazed how nervous I felt naked with Ken in front of even her picture.\n\nAs we fell asleep later, I apologized to her in my head for my dreams. I knew that these things might not happen and it was up to her. But I then had to tell her that the faceless woman in my head was beginning to look like her all the time now. Ken told me she looked like what he had dreamed all his old girlfriends might grow into. Vroom, vroom, I joked as I rode him. It was maybe the first time he had brought up Gui-Feng first.\n\n---\n\n\"My company won't pay for that,\" I told the desk clerk at one in the morning.\n\nHe looked back at his computer. \"They already have. Your account is settled through Sunday night. You've got a Piazza Suite overlooking the strip. Canopy-draped king size bed, sunken living room. And, it looks like you have a $500 tab to spend anywhere in the hotel as you wish.\" He handed me the key and called the porter over, who took my single roll-on bag up and away. \"Welcome to the Venetian,\" the desk clerk finished.\n\nI managed to find the elevators despite being distracted by the weird room change and knowledge of why I was here. I thought Boss Chuck had meant a nice dinner, not a suite. Even on the dinner, he had made sure to put \"probably\" so I could worry about whether or not he really would pay. As I watched the numbers go by in the elevator, I realized the truth. It wasn't spineless Chuck. It was that sweetie, Ken, trying to make the weekend special. We were up to $11,000 now for three days. \n\nThe door of my room was waiting open for me with the porter standing in the hallway. Following his gesture, I entered my room, or, should I say, rooms. A little gold statue of a flying Cupid adorned the marble entrance way. Italian, silk-covered furniture dotted a living room \u2013 a living room bigger than our apartment at home. Three steps led up to a bedroom containing a huge bed covered in gold and red tassels. The canopy was tied back and the sheets were folded down. I could just see something shiny on the pillow, which I assumed to be some chocolate \u2013 probably flown in from Belgium three hours ago in the shape of my initials. I had to smile as my normal sense of luxury was when the hotel gave me a cookie.\n\nWhen I looked into the bathroom, my little smile turned into a grin. A whirlpool bath was prepared and waiting, the jets already on a low hum. A small basket of the darkest strawberries I had ever seen sat by the warm water. Even more, there was a small heated dish containing dark molten chocolate waiting for me, me and a strawberry.\n\nI almost kissed the bellboy.\n\n\"And here's a package for you, ma'am.\" It was a small brown box from Amazon.\n\nI reached in my purse to give him a five, but he instantly declined. \"Everything is taken care of. You don't need to worry about anything this weekend. Please call. It will be an honor.\"\n\nI opened my present as he left and found a mystery novel I had been planning on reading for three to four months. Inside was a note.\n\n\"I know you've been wanting to read this, so I went ahead and got it for you. But don't stay up too late. You've got work tomorrow.\"\n\nIn an instant I was nude and sinking into the bath. Dipping a strawberry into the chocolate, I could only think that Ken had truly outdone himself today. He didn't usually think of this sort of thing. Or if he did, he didn't know how to get it done. I blew a kiss to my darling husband across the ocean, wishing I was there to deliver it. At least I would deliver it right after this bath. I never opened the book. I just let the water and the chocolate take me away.\n\nAs my eyes closed, I could see Gui-Feng smiling opposite me in the bath. I felt her naked legs rub against mine. With my own little gleam in the eye, I guided one of her lovely legs up and her toes into my mouth.\n\n---\n\nPresents kept arriving all day Friday as I got through work and waited for Ken. My breakfast was wheeled in with a bottle of Dom Perignon and a gorgeous lei of the deepest orchids. How had Ken found that in Vegas? I came back from work to a room covered in several dozen roses, each one with a tiny note. \"Thinking of us,\" \"Your weekend is here,\" \"Kisses,\" and more. I had to wonder if Ken had gotten Rosaria to help him think of lots of cutsie messages. Ken was hot and adorable, not cutsie. Around 8:30 I got back from dinner with the clients to find Jacqueline and her adorable French accent waiting to give me a hot stone massage. It was almost 40 minutes later, when her hands were working the muscles in my lower thighs, that she handed me my buzzing cell phone. I put it to my ear to find Ken almost shouting.\n\n\"You are the best wife ever!\" This managed to wake me up a little. After all, here was the person responsible for the lap of luxury I had fallen into.\n\n\"Jacqueline's here right now,\" I told him.\n\n\"I can't believe you did this for me,\" he continued. \"Don't tell me how much it costs, ever. I don't want to know.\" What was he talking about? \"Meet me downstairs in twenty. You won't believe this thing. The LP640!\"\n\n\"Ken, I can't even stand right now. I'm a puddle.\"\n\n\"Tired from work, huh? I promise you this will wake you up though.\"\n\n\"I will help you downstairs, miss,\" Jacqueline chimed in. \"Your boyfriend sounds very excited, no?\"\n\n\"Thank you, Jacqueline,\" I replied.\n\n\"Who's Jacqueline?\"\n\n\"The masseuse.\"\n\n\"Wow, you are splurging, aren't you? Well, I'll see you soon. Eight thousand! A full eight thousand!\" Eight thousand? What? Was that the extra budget he had set aside for this? We weren't going to leave Vegas with a dime.\n\nAfter another ten minutes of Jacqueline's delightful touch, she was wrapping me in a warm towel and helping me stumble in dreamy ecstasy towards some clothes. The poor girl almost carried me down the halls, the whole time plying me with water. When we reached the drive-up to the hotel, the first thing to really wake me up just a bit was a beautiful red Lamborghini waiting just outside the door. The joker inside was so excited by his toy he kept revving the engine just sitting still. I was about to make a comment to Jacqueline about the boy toy when the driver door lifted up into the air and my own husband came bouncing out.\n\nSpeaking more in squeaks and grins than words, he pulled me towards the car, plopped me in the passenger seat, and appeared again behind the steering wheel with his hand already on the gearshift. Six speeds? As we pulled back onto the Strip, I asked, \"Where'd you get it?\"\n\n\"The two girls were waiting for me with a sign when I got off the plane. It must have taken them ten minutes to convince me I was the right guy.\" He grinned again as he buzzed around some common Mercedes. \"Thank you so much, Ashleigh. Renting this makes the trip no matter what. But, you know, if you like what happens with Gui-Feng, can I suggest the two models you hired to pick me up as our next participants? I haven't seen a skirt that short in a few years. Well, when not on the UH campus. Or Waikiki.\"\n\n\"I didn't hire anyone.\"\n\n\"What?\"\n\n\"I didn't hire anyone, and I didn't rent a car for you.\" Ken just sort of looked at me sideways. \"You didn't send champagne and roses and molten chocolate and Jacqueline, did you?\" I asked needlessly.\n\n\"Who is Jacqueline again?\"\n\nGui-Feng had sent everything.\n\n\"So this is where our first $5000 is going,\" Ken said as he headed off into the desert.\n\n\"Looks like it. What kind of car is this?\"\n\n\"It's the Murcielago. Top speed is supposed to be 211, but those figures depend on so much you just ignore them; 6500 lbs of torque. Can you imagine 8000 rpm with 12 cylinders?\" I couldn't. The city lights were getting behind us, and the stars were appearing when Ken continued. \"I know you don't like to go too fast, hun. I'll try to keep it under 150.\" With a look from me, he changed it. \"140?\"\n\nBetween the massage, the anticipation of tomorrow night, and the speed, my mind had floated away from my body. I have memories of being high in the desert mountains, cold air blowing across my naked body, stretched out on the warm hood of the car. Ken held my calves in his hands, sucking on them, my legs so far apart that I was sure the goddess moon was watching me. Soon I was watching her bathe Ken's bare skin in a silver glow as he laid his pants to my side. Covering my body with his, I raised my pelvis until I had taken all of him. My body tingled with each of Ken's thrusts and our own silver moon beams shot from where we were joined, flying upwards to return to the lunar goddess. Whether this truly happened or was my own dream, I am not sure. I'm afraid to ask Ken. I prefer to think this movie was real and not one that had been cut out of my life.\n\n---\n\nA voice mail appeared in the morning from Gui-Feng. It was nice to hear her voice again.\n\n\"Hey, Ashleigh. Hope my arrangements haven't been too intrusive. Tell Ken that I will find the two of you this evening. I'm really looking forward to it. I hope you know that. Talk to you soon, and we will see what we can do about those movies of yours. I have this great new pair of shoes I want you to see. Oh, and remember your account with the hotel! Five hundred dollars to spend anywhere. Go to it!\"\n\nI listened to the message about ten times, letting her voice caress me. \"Those movies of yours.\" That's what she said. All the images I had had for over a year and a half. The touching, the kissing, the licking, the feelings. Maybe tonight was the night. I was going to kiss her. If she let me, if she liked me, too. Could I actually kiss a girl? If she did like me, she'd want me to do things to her. All over her. All the things I had told her I wanted to do. To put my lips on another woman's body. What had I gotten myself into?\n\nKen was still sleeping, lying on the bed, quiet. He was going to sleep with this woman, too. I was crazy. What was I doing? What was I thinking? I wasn't ready to kiss another woman. They were just fantasies. Everyone has fantasies. Why had I let them take over my life? I wasn't ready; I wasn't ready. Not yet. Too soon, too fast, too much. My fingernails began to dig into my arm, clawing at my skin. I knew what was happening, but I couldn't stop the panic attack. It had been two years since the last one. I tried to put the phone down but my hand shook so much it went falling off the bureau.\n\nI ran over to Ken before my fears took me, curling up against him, hoping he could take it away, my whole body shaking. Take me from this awful place, Ken. This place where people pretend to be who they aren't. Don't let me screw up what we have. I know I leap and then look; that's why I have you. Are you looking out for me still? Oh, I'm sorry, Gui-Feng. I wanted this, but I can't. It scares me too much. What if I like it? What if this was who I was? I hated it all. I hated how wonderful those images made me feel. I can feel your tongue on my neck. So good. Why did these wonderful images have to come? Why do they have to make me feel like they do? I didn't ask for them. But if they left... Please don't make them go. They are a part of me now. Ken? Help?\n\nKenji opened his eyes with a sleepy look that lasted only a second. He wrapped me in his arms and the warm blankets and just held me, whispering to me until my attack faded, my mind calmed.\n\nI didn't deserve either of them.\n\n---\n\nThe day passed slowly. I tried to eat my strawberries and read my book. Ken would disappear for a bit and then come back to tell me all about manifolds and callipers and double wishbones. I asked him what he wished for, which made him smile. We tried to eat lunch but we largely just sat in front of large plates of food watching each other. There's only so long you can talk about another woman. I took to sticking little notes in places Ken would look with hearts on them and the like. I hadn't done that since college.\n\nWe talked as we wandered the hotel's Grand Canal. We talked about years gone past and about Gui-Feng. What would she look like when she met us?\n\n\"She'll be in something skin-tight,\" I told Ken. \"Something that shows every bit of her off. Maybe she will carry a briefcase of toys and lubricants.\"\n\n\"Nah, she'll go classy like in her pictures. Some sort of long evening gown with a back that drops all the way to her... rear.\"\n\n\"That's not classy. No one wanders around in stillettos and a ball gown.\"\n\n\"Hey, it's classier than your latex-covered vixen with a sack full of dildos.\"\n\n\"Yes, but in my vision, she's got a red pointy hat on too and says \"ho, ho, ho,\" as she pulls out... uh... some rubber toy thing.\"\n\nWe drove in the car. We lay on the bed. I wish I remembered some of it. Finally, around 5:30, I listened to Gui-Feng's message one more time. \"Remember your account with the hotel.\"\n\nI stumbled out of the room looking for the only thing that could keep me going at a time like this. Shoes.\n\n---\n\nWith a little Ferragamo's bag containing my old pair of shoes, I sat on the edge of a fountain to admire my new pumps and watch the people go by: A group of three men with close cut hair, tight shirts, and egos even bigger than their pecs - the kind of guy you only wanted in your bed if he promised not to open his mouth and remind you of how shallow you were acting. Couple after couple, people taking pictures, women pointing to get their husbands to look at this or that, two bored teens, a very attractive Asian woman with short hair and her own delicious slip of a shoe resting at the end of slender feet.\n\nStopping. Looking at me with a radiant smile that spoke of nothing but joy.\n\nI could feel my eyes slowly growing as recognition built. This was the one we had been waiting for, dreaming of, scared to death to meet. Gui-Feng's joy at finding me grew with my reaction, and I felt she was about to leap into my arms. Somehow, I wouldn't have minded if she did. She didn't carry a whip, a briefcase, or even show much leg. Instead she was in a pair of khaki capris and a nice burgundy top with thin straps on the shoulders. Her eyes twinkled against a burst of gorgeous black hair shaped in a completely modern, professional way. This wasn't an escort. This was my new best friend.",
        "She stood about three feet from me, flashing her brilliant white teeth, and I finally felt my mouth saying, \"Hi.\" I don't know if sound came out or not. She came to me and sat by my side, not touching me, just letting her presence be felt.\n\n\"Same place,\" she said, putting her foot near my bag. \"I got these on Wednesday. One of the slingbacks.\"\n\n\"They look fabulous. I don't usually wear a heel that tall.\"\n\n\"Next time you are in, try something bigger than normal. They are far more comfortable than they have any right to be. It's not the same as other shoes.\"\n\n\"I don't actually go shopping at Ferragamo's very often,\" I replied. \"Salvatore is a nice guy but a little above the regular budget. But since I had $500 to blow....\"\n\nShe laughed. \"I know what you mean. Did you get the lei? It's crazy how much more a decent lei costs here compared to Hawaii. I wanted you to feel a touch of home.\"\n\n\"You did great. I've spent half my day eating chocolate and soaking in whirlpools, though I gotta tell you I got lost this morning in the room. I heard Kenji's voice, but it took a good 10 minutes to locate him behind the gold peacock statue.\"\n\n\"It's tacky, huh?\"\n\n\"Never seen so much red and gold in my life. But I am so not complaining.\"\n\nGui-Feng seemed to beam even more. \"Spending money on the two of you has been a blast. I tried to find things that you would want but may not ever get around to. I mean, I may be cute, but $10,000? I'd love to tell people where their money is going before hand, but then there'd be no surprise. Besides, most people who can blow ten grand on a girl for a night don't care. How's Kenji liking the car?\"\n\n\"Who? Oh, you mean that man who keeps calling me from the garage?\"\n\n\"Good. I couldn't decide on that car for him. It didn't seem quite right, but I couldn't come up with anything better. Oh, by the way, I shouldn't bring this up already, but it's going to disappear sometime around seven tomorrow night.\"\n\n\"The car can go fast. That does the trick for Ken. You know he likes staring at the engine as much as driving it. It's like the NFL draft. Your presents are great. \"\n\n\"They're only sort of from me, of course. I'm more like the party planner.\"\n\n\"If we ever need to plan a wedding for our daughter, we'll call you up.\"\n\n\"I'll need a new job by then, it's true. You don't have a daughter, do you?\"\n\n\"No, no kids. Too busy.\"\n\n\"Ken?\"\n\n\"Oh, he tries to knock me up every couple days.\" Had I just said that to someone I had just met? I never spoke about sex to a girlfriend. Well, I didn't really have a girlfriend, so who knew what I would say to her?\n\n\"Oh, Ashleigh, before we get Ken, you should know that I may have met him once before.\"\n\nI froze at this. Exactly how?\n\n\"Oh lord, no. I would have backed out long ago if he had hired me before. I'm looking to have a nice time with you, not reveal secrets. The way I may have met him is-\" She suddenly let out a sigh. \"Trouble coming.\"\n\n\"What?\"\n\n\"We are about to be hit on,\" she told me.\n\n\"Where?\"\n\n\"Two guys standing by the marble unicorn. Here they come....\" She leaned into my ear and whispered very quietly. \"If we hadn't just met, I'd be nuzzling your neck right now so they'd get the hint. Have you ever done that to get rid of a guy?\"\n\nI didn't get hit on enough to have a repertoire myself. I liked to blame that on the gold ring on my finger, but I sometimes was afraid that wasn't it. \"Uh, no.\"\n\n\"It works about half the time, but when it doesn't work, then you know you're in trouble. Actually, it' just an excuse to nuzzle someone you like.\"\n\n\"Excuse me,\" came a not unpleasant but slightly tense voice. \"But are the two of you waiting for someone, because we've been waiting for you all our lives.\"\n\nI did my best to suppress a laugh but a small snort came out nonetheless. Maybe it was because their lives looked to be about ten years less than my own. Gui-Feng, however, seemed to take it in stride. She calmly stood to meet our suitors, graciously offering an upturned hand. The blonde guy who had spoken paused for a second, unsure of whether or not to shake it or kiss it. He seemed to do both with a shake and a slight bow. She then reached across to his buddy, a rather attractive black man, and shook his hand as well.\n\n\"Gentlemen,\" she responded. I watched her as she caught both of their eyes and seemed pleasantly surprised that they had come to visit us. Of course, she had spied them long before they took a step our way. I had the feeling that she saw everyone in the hallway with us at this moment. \"I am truly flattered at your kind words,\" she continued, \"but the fact is that we are both taken, so we cannot take advantage of your offer.\" And there she stopped, waiting patiently for their response. Both men looked a little shocked. There were no unkind words, no giggles, no lies or excuses, no looking away and hoping they weren't there. But there was also no wiggle room in the answer. The blonde responded.\n\n\"Oh, okay, yeah. Are you sure? Gondola ride? Go to the tables? We'll treat you to everything, of course.\"\n\nGui-feng didn't say anything for only a second before the handsome friend grabbed the blonde's arm. \"Dude, she said 'no'.\"\n\nThe blonde turned to me for just a second, wanting to appeal his case, but his friend was dragging him off. I was about to speak but Gui-Feng held her finger to her lips so that we could listen to the departing men.\n\n\"At least we don't have to fight about who gets who,\" the blonde was saying. \"Did you see the stomach on the Asian chick?\"\n\n\"Get a grip, dude,\" the handsome friend replied. \"Besides I was staring at the redhead's hips. Talk about hourglass. Makes me want to start with the Days of Our Lives theme.\"\n\n\"Days of Our Lives? You are so gay.\"\n\nThe friend punched the blonde in the arm. \"I watched it with my grandma as a kid. You need to grow up, dude.\"\n\nTheir voices faded.\n\n\"That was nice,\" Gui-Feng said when we could only see them but not hear them. \"Though your cheeks are getting close to your hair color, Ashleigh.\"\n\n\"At least they are gone,\" was all I could say as my pulse pounded in my ears. Apparently, Gui-Feng's beauty rubbed off on women she was near in her suitors' eyes. That would explain it.\n\n\"It's a bit too bad,\" Gui-Feng offered. \"Even though they still act like they're 22.\"\n\nI watched the quiet friend's body disappearing. He was probably covered in muscles. \"Yeah, a little,\" I admitted.\n\n\"Let's get Ken down here before we spend all night doing that.\" It had been two to three months since I had been hit on, so I hadn't minded all that much. Even with my complete lack of interest in them, it was still kind of flattering. At least it was when I had Gui-Feng who knew how to handle it. When I was single, I had always made up stuff when someone approached me. Stuff that we all knew was a bald-faced lie. On the other hand, if I had taken Gui-Feng's approach, I would have probably insulted them somehow. How had she done it? Before I could stop myself, I took her hand in mine, feeling my cheeks flushing again, as our fingers interlaced. I was as scared of her as I was excited. But somehow I already knew that for a single night she was my guide. It was time to do something stupid. So tonight I was going to do my best to throw myself at a woman I had just met and find out if she would catch me.\n\n---\n\nKen was bouncing down a small set of steps toward us when he saw me, gave a little smile, and then saw Gui-Feng. He missed the last step and tumbled on to the ground. Gui-Feng leaned into me as Ken brushed himself off and started walking towards us. \"It's really him, Ashleigh. He's still just as good-looking as he was.\"\n\n\"I know,\" I whispered back.\n\nShe looked at me for a second, considering. \"A lot of people forget.\"\n\nKen bounded to us in a light blue Oxford, a dark tie, and the cologne that only goes on once a year for my company Christmas party. I turned to do the introduction but instead found Gui-Feng looking at Ken. \"Still as good looking,\" she had said. Still.\n\n\"Uh, this is him,\" I got out.\n\nI felt Gui-Feng squeezing my hand as she spoke. Was she trying to draw comfort from me? \"The famous Kenji Misagi,\" she said.\n\n\"Uh, what?\" he responded. This pleased me to no end because I couldn't wait to tease him later about those being his first words to her.\n\n\"You are going to think I am making this up, but I have met you before. I didn't think it would really be you. I mean Misagi is a pretty common last name. In Hawaii.\"\n\n\"Met me? I would remember that.\"\n\n\"Ten years ago. L.A. Auto Show. After party.\"\n\nKen's eyes narrowed. \"I was there.\"\n\n\"Yes, you were.\" She turned to me. \"After a big auto show, some club or two will throw a big party with a lot of the models as go-go dancers and stuff. It's an excuse for men to look at women and cars \u2013 and pay for it.\"\n\n\"I didn't have my car with me, of course,\" Ken continued. \"I was writing my column already at that point, so I went to cover the show and some new aftermarket parts.\" He turned back to Gui-Feng. \"Did we talk?\"\n\n\"Not a word,\" she said. \"I was just 19, and you were...\"\n\n\"28, I guess.\"\n\nGui-Feng was about to keep going when she reflected for a moment and said, \"Ashleigh, you aren't 38 now, are you?\"\n\n\"33.\"\n\n\"That's more believable. Anyway, I was on the arm of Kira Pham.\"\n\n\"Kira Pham,\" Kenji said considering the name. \"She asked me out that night! The queen of the world, Kira Pham, asked me out that night. I was blown away.\"\n\n\"She spent half the night working up her courage, then grabbed me for help. Do you know what it means to be able to make Kira Pham have to work herself up? She was fearless.\"\n\n\"And could have anyone she wanted. She was a knock-out. Everyone wanted Kira.\"\n\n\"Except you apparently.\"\n\n\"Oh, um, yeah. I guess so. Sorry about that. I was already dating someone. Yumi,\" he explained to me. I could barely remember a story of a Yumi.\n\n\"How long did you date Yumi?\" I asked.\n\n\"Oh, uhhh, a couple months or something, I guess.\"\n\n\"You turned down Kira Pham because you were in a relationship that only lasted two months?\"\n\n\"Maybe it was longer, I don't know. I had told Yumi we were an item. I wasn't going to shack up with the next pretty girl I saw. She was cute, too. Wait a second.\" Ken stared at Gui-Feng. \"You had pink hair! Or pink streaks I mean.\"\n\n\"That was me.\"\n\n\"How funny. How... damn....\"\n\nGui-Feng and I just waited. Ken looked at us and finally gave in.\n\n\"Okay, don't get mad, please. I don't remember too much more, but I was with Eddie Chen, if you remember him.\" Eddie was Ken's best friend for years, but Gui-Feng had to shake her head. Eddie was nice, but he had never looked like Ken. \"You hooked him. Or at least, umm, your, uhhh, bottom did. For a long time, he compared every girl's butt he saw to yours. You were wearing something that night. I don't know what it's called.\"\n\n\"Tube skirt.\"\n\n\"Yeah, he loved that skirt. He talked about your butt for days. I'm sorry.\"\n\nGui-Feng just nodded at Ken's story. \"That's about all there was worth remembering about me back then. The day I realized I had become nothing more than an ass in a tight skirt was one of the best days of my life. Once I knew it, I could fix it.\"\n\n\"I didn't mean to offend you, Gui-Feng,\" Ken said. \"That's just what happened.\"\n\n\"Ken, don't be mad at yourself. I wore tight skirts so people would look at my ass. That was the point. Remember you were the one turning down models because you had someone you kinda liked somewhere else in the world. You aren't the problem.\"\n\n\"Guys go for a cute body,\" I said. \"That's how you get men.\"\n\n\"Knowing that was my big screw up.\" Gui-Feng responded. \"For a while. My body was the first thing to grow and when I discovered the power it had, it took over my life. I devoted everything to the way I looked and couldn't give a damn about anything else.\"\n\n\"There's nothing wrong with that,\" I told her. \"Use what you got. We all have certain skills or whatever, and we have to make them the best they can be. You're a babe. Be a babe.\"\n\n\"But, Ashleigh, none of are any one thing. We aren't just jocks and brains and babes.\"\n\n\"When I was a teen,\" I replied, \"I discovered people would give me awards and praise me for just doing homework and writing papers. I mean, how easy was that? It's the same thing as you, just opposite. I may have been worse actually. I always had to make fun of anyone who was pretty. Say that it meant nothing, but that was just as stupid. Who am I to say that brains are more important than appearance?\"\n\n\"I agree completely, or a little, anyway,\" she laughed. \"I think being smart is better than being pretty.\"\n\n\"It lasts longer at least,\" Ken added. \"Beauty fades, while smarts can grow for years.\"\n\n\"It all fades, though, doesn't it?\" Gui-Feng responded. \"Maybe beauty fades earlier, maybe it doesn't, but our minds fail too eventually. It just depends on how far out you look.\"\n\n\"It all goes,\" I added. \"Dust to dust.\"\n\n\"So were we ever beautiful at all?\"\n\n\"I don't know what that means, Gui-Feng,\" I replied.\n\nShe laughed. \"Thank god, you called me on it. I do that a lot. Say things that sound important but are meaningless.\"\n\n\"I don't know if the question is meaningless. I just don't know what it means myself.\"\n\n\"Yes,\" said Ken. \"The answer to your question is 'yes'. Why does something have to be forever to be real? I mean, umm, this morning, Ashleigh gave me an extra piece of bacon from her plate. She was still eating breakfast, but she knows I love the stuff. That made me happy. Just for a moment. I don't walk around with my head in the clouds on a permanent basis because of a piece of bacon, but that doesn't mean she wasn't kind for just a moment. It was real. It was only a moment.\"\n\nGui-Feng responded directly to Kenji's challenge. \"Dinner?\"\n\nWe ended up sitting in some enormous restaurant near a 40-foot tall Buddha. Other than the statue of Enlightenment, the place had an entire extra club in it. I can't say what Buddha thought of the club. Our conversation continued right through dinner, though periodically I would lose track. She would mention impermanence, and I would stare at her lips moving. Her beauty was almost a match for her intelligence. She was also remarkably skilled at her job, leading us through these conversations that had nothing to do with sex in order to make us comfortable. At times I would forget we had hired her and just get lost in talk. She was laughing at Kenji's jokes. He loved it when people laughed at his jokes. It didn't mean that she was faking it, but she was aware. She understood us as people and knew how to tap it. It was an ability that I completely lacked. I always came out the same. I was who I was. I guess since I could see what she was doing, I should have been offended or worried that Gui-Feng was being false, but instead I admired it.\n\nShe was good at her job.\n\nMy own mother had said once that that was the highest compliment I knew. Or was it the only compliment I knew? Maybe my mom was right about me though. More than beauty or intelligence, I realized that Gui-Feng's best quality was that she was competent. It turned me on. Wow, she knew how to reach me already, it seemed. Could I reach her?\n\nAs I watched Gui-Feng's lips, I saw the corners turn up into a small smile and then a bare foot was gliding up my lower leg. I immediately kicked off a shoe under the table and guided it back up Gui-Feng.\n\n\"Do either of you want another drink?\" Kenji asked.\n\nGui-Feng shook her head. \"I don't want to miss a moment tonight.\" Neither did I. I respected Gui-Feng. I was aroused by her. I really liked how it felt when she touched me. I could imagine feeling like this for a long time.\n\nI withdrew my foot out of her reach.\n\n---\n\nAfter dinner, Gui-Feng declared we were going on the Water Tour, which started in our own hotel with a gondola ride. That's where Gui-Feng asked how Ken and I met.\n\n\"The Bus,\" we declared simultaneously.\n\n\"Ashleigh was on vacation in Hawaii.\"\n\n\"And I had spent the whole previous day lost, driving around in my rental car, so I decided to hop the bus to the North Shore. It was winter, so that's big wave season up there.\"\n\n\"I had removed the engine from my own car, so I was taking the bus, too.\"\n\n\"But you were going to the Pipeline and I was headed to Waimea Bay.\"\n\n\"Both surfing spots,\" Ken explained.\n\n\"I sat next to him.\"\n\n\"Yes, and spoke to me,\" he continued.\n\n\"You spoke to me. We've never agreed on that part.\"\n\n\"It's over an hour on the bus.\"\n\n\"Kenji and I talked the whole way. You never made it to the Pipeline.\"\n\n\"We didn't make it to Waimea Bay until sundown.\"\n\n\"Ken said my stop was close, maybe 15 minutes,\" I informed Gui-Feng.\n\n\"And for the first time we stopped talking. I didn't know what to do. I didn't want her to get off. I knew I could get her number or something, but that wasn't enough. She was about to leave me.\"\n\n\"We were coming to the main little town up there, Haleiwa, and I suddenly had an idea.\"\n\n\"She pulled the chain.\"\n\n\"Ten minutes early, not my stop.\"\n\n\"'Lunch?' That's what she said.\"\n\n\"It was nine thirty in the morning.\"\n\n\"I took the hint and we got off together. Didn't part for the rest of the week. My friends thought I was crazy.\"\n\n\"His friends thought he was crazy.\"\n\n\"Why?\" asked Gui-Feng.\n\n\"I had a girlfriend at the time. She was someone I had known for a while and everyone was sure she was it for me. And here I was dropping it all for a cute girl I had just met from the mainland.\"\n\n\"You were giving up the chosen one for a tourist fling.\"\n\n\"Right. But it wasn't just me. Ashleigh was living with someone.\"\n\n\"For over two years, Gui-Feng.\"\n\n\"You gave that up, too?\"\n\n\"I knew. I don't know what Ken thought, but I knew immediately about him. This is horrible but on the third day with Ken I was thinking about how to break up with Tomas. I mean, if this was what it really felt like, I knew Tomas and I weren't going to last, no matter what happened with Kenji.\"\n\n\"I didn't think I'd ever see her again myself. I was sure I was just her island fling or something. I don't mean that bad. I'm just saying that I didn't ever expect her to drop everything for me.\"\n\n\"We were married nine months later.\"\n\n\"Damn, it was cold in Boston in November. My family barely made it through the ceremony.\"\n\n\"My married cousin kept offering to help your sister stay warm, the shmuck.\"\n\n\"It's like it all happened yesterday to the two of you,\" Gui-Feng commented.\n\n\"It was huge,\" Ken replied. \"I wasn't just meeting a girl, or meeting a wife, I was starting over. Ashleigh, too.\"\n\n\"I moved out to Hawaii with no job, one suitcase. I thought the only reason people ever moved was for a job. You can't move across an ocean for a guy.\"\n\n\"Your parents said so.\"\n\n\"They love you, Kenji.\"\n\n\"But not so much then.\"\n\n\"They thought I was giving up a lot. I earned a nice bit back then, at least for 25 years old. And you-\"\n\n\"I didn't have to give up anything. Nothing I cared about. Gui-Feng, when Ashleigh came into my life, I was already gone. I was 32 and sure I had wasted pretty much every moment up to then. All a complete waste. The only reason I had gotten into cars as a teen was to meet girls. And there I was sixteen years later, still fixing up cars, and finishing an associate's degree. My best friend had gotten paralyzed in one that I built.\"\n\n\"Kenji, you know it was Eddie's fault. It was his foot on the accelerator, not yours.\"\n\n\"Eddie's always followed me. That makes it my responsibility. If I had told him to go to college instead, that's where he would have been.\"\n\n\"He was 30, not-\"\n\n\"You know it wasn't just that, Ashleigh. Gui-Feng, without Ashleigh, I don't know where I would have ended up. I'm not like you. You realized, at a mere 19, that you needed to change, and you did it all by yourself. I was 32 and just sitting, waiting for something, anything, to happen. And, then, one day on the bus, finally, something did.\"",
        "---\n\nAs we headed out of the hotel and down the strip, I discovered something else that Gui-Feng and I had in common. When she was thinking, she didn't speak. She had never responded to Ken's story. Instead she became quiet, saying only the minimum to keep us moving, and I could practically see her wheels turning. I tried to cheer her up with stories about Ken's past, but they were having little effect. I was left just watching her. Earlier, I had asked myself if I would be able to reach Gui-Feng. Ken had done it. She had been thrown off track. If I wanted to meet the real woman here, I'd have to do the same. I took Ken's hand and leaned over to whisper to her as we walked.\n\n\"I'd like to know what you are thinking.\"\n\nGui-Feng shook her head. \"I can't say. I could say something stupid.\"\n\n\"I say stupid things all the time.\"\n\n\"That's different.\"\n\n\"I know you are working and trying to charm us, but I'd like to know the real you. You've been confident and perfect for us all night. What else is there?\"\n\nShe took what I said in instantly. \"I could tell you were seeing through me. I was kind of hoping you'd let it slide and just play the game.\"\n\n\"I didn't see through you. You were doing what we asked you to do.\"\n\n\"That's what I tell myself, too.\"\n\n\"So tell me something stupid that you will regret.\"\n\nShe sighed. \"I just don't want to be part of screwing you two up. You've got something good, Ashleigh, and I'm not going to be the one to crash it down. I try to make people's lives better, if only for one night. I am not sure if your lives will be better after tonight. I keep looking for answers, but they don't come.\"\n\n\"I've been looking for an answer, too, but nadda.\"\n\nKen joined in. \"Why do things always have answers? What sort of question would you ask here anyway?\"\n\nI stopped whispering. \"You want to know one more reason why I am an idiot, Gui-Feng? I sometimes think that I'm smarter than Ken.\"\n\nKen started laughing, \"You are, Ashleigh.\"\n\n\"No, I'm not. I assume that because I read a lot more than you that I must be smarter. But that's so clearly dumb it's almost self-contradictory.\"\n\n\"But, Ashleigh,\" said Gui-Feng, \"You show your intelligence all the time.\"\n\n\"I hope you aren't going to say it's because I can do math quickly.\"\n\n\"No, it's because you really listen and think. At dinner, I was going off about Greek philosophy, partly because I enjoy it and partly to show off, but you didn't let me get away with anything. You'd be shocked how many people think that because someone can throw a long name out there that they must be saying something important. But you don't fall for it. You question it if Herodotus said it or if Jimmy at the garage said it.\"\n\n\"Hey, no garage jokes,\" Ken threw out.\n\n\"I'm not sure that's such a great thing,\" I answered. \"I sound like a pit bull \u2013 or, worse, a lawyer.\"\n\n\"And,\" Ken continued, apparently ignoring me in turn, \"You say it when you don't understand. I've always thought that was great. You aren't being self-effacing, because that's boring. You are being honest.\"\n\n\"So you are telling me that I am smart exactly because I have no idea what I am talking about most of the time.\"\n\n\"Yeah.\"\n\n\"That's the start of wisdom,\" Gui-Feng finished. \"Just look it up in Plato.\"\n\nI couldn't help but grin at Gui-Feng's meta-joke. Anyway, Plato was a short word.\n\n\"Then I will admit right now to the two of you that I have no idea what I am doing here, why I'm here, or how it will end up.\"\n\n\"Same here,\" said Gui-Feng.\n\n\"Oh yeah,\" said Ken.\n\nAnd with that we all headed off towards the exploding volcano.\n\n---\n\nAs we walked, I did have some idea what I was doing here. I was here to kiss Gui-Feng. I just didn't know why I wanted to kiss her. Surely, I could figure it out. Why did I like to kiss Ken? Because he could be nice and sexy and I loved him. Well, Gui-Feng was certainly sexy, but I couldn't love her yet, since I had just met her. I wanted to love her, I knew that. Wait, why the hell would I want to love someone I had just met? That was ridiculous, and yet it was true. What was going on inside me?\n\nGui-Feng suddenly leaned into my body. \"I think you're wonderful,\" she said quietly, her breath fluttering by my ear and over my cheek. All my thoughts joined her breath and disappeared into the warm Vegas air.\n\n\"Me, too. I mean, I think you are,\" I said quickly blushing as I had almost praised myself. But of course she knew what I meant. I felt like a kid around her.\n\nI felt her pulling me closer as we walked, as if the desert had become cold and she needed warmth. \"I just want you to know that, because I am going to have to pay a little less attention to you than I'd like.\"\n\n\"Oh, well, that's fine.\" She was already losing interest? But she had just said-\n\n\"Ken, would you mind grabbing us a bottle of water?\" Gui-Feng asked.\n\n\"No prob,\" he responded and vanished into a convenience store. I chuckled at Gui-Feng's transparent request to get some alone time and Kenji's immediate acceptance of it. Now, if only he'd do what I say every once in a while....\n\n\"I need to seduce your husband.\"\n\nI couldn't help but cock an eyebrow at that.\n\n\"I know it's hard to believe, but he's only here for you. If I am going to do my job for both of you, I need to get his attention a little more.\"\n\n\"Gui-Feng, I know it was my idea originally, but what man doesn't want to be with two women? It's everyone's fantasy.\"\n\n\"Kenji seems to be one person for whom it isn't.\"\n\n\"He fell down the stairs when he saw you.\"\n\n\"Yes, wasn't that sexy? But he's looking at me and thinking about you.\" She began to wiggle her capris down a little lower until the top of tiny looking black silk panties could be seen.\n\n\"I think he'll like that,\" I responded, not adding how I liked it.\n\nHer eyes flashed at me. \"That was for you, Ashleigh. I'm not only a friend.\"\n\nI immediately wanted to protest and tell her I was attracted to her personality, not just her body, but I couldn't get it out. Every time I tried to speak my eyes wandered to that tiny fabric that looked like a thong and her slender stomach disappearing into it.\n\nShe watched me looking at that spot and then looking away. Her eyes twinkled and with a \"c'm here,\" she lead me around a corner and down a side street where it was a little darker and quieter. There were a few people around but not like on the main Strip. She drew me closer to her. \"Ashleigh,\" she started. \"You should know something. About me. Before. I mean. Wow, I can't get it out. I think you are about to hear one of my stupid things.\"\n\nI wanted to reassure her, but we were too close now to think. I remembered staring like this at my first serious boyfriend as we worked our way towards a first kiss. What I loved or hated, I don't know which, is that it felt just as good. I wanted this to happen. \"What's the stupid thing?\"\n\n\"Ashleigh, when not working, I'm.... No, I'm sorry. I shouldn't say anything. That's far too much pressure on you. I am being stupid.\"\n\n\"I can handle it.\"\n\n\"But you don't need to handle it. It's my issue.\"\n\n\"What are we talking about, Gui-Feng?\"\n\nShe only shook her head. \"Ashleigh,\" she looked into my eyes, \"would you touch me?\"\n\nOh yes, I could do that. I couldn't help but look around first though. There were only a few people and it was dark. Was that man looking at us? Maybe. Oh, who cares? My body was just a couple inches from hers. \"Where?\" I asked.\n\nShe smiled but it quickly vanished. \"Here,\" she replied with a breath and lifted her shirt just a touch to indicate the spot between her navel and her now low-riding capris. The place I had been staring at. My heart pounded under my breast.\n\n\"I'll try.\" I raised a hand slowly towards her, but I could see it shaking.\n\n\"You don't have to, Ashleigh. You're scared.\"\n\n\"I want to.\" I did, so why was I shaking? I gently placed my fingers just touching her skin. I could barely feel her because my hand was trembling so much that any contact was momentary. \"It looks like I am scared,\" I added as we both stood there watching my hand twitching up and down as it barely grazed her body.\n\n\"That's the most beautiful thing I've ever seen,\" Gui-Feng replied.\n\n\"Yes, you are,\" I answered before stopping myself.\n\n\"You have a hair in your eyes,\" Gui-Feng said and I felt her cool breath on my face as she blew the stray lock away. \"I wanted to see you,\" she explained.\n\nI nodded, but kept staring at her abdomen. Her pants were low enough now that I realized that she must shave some part of herself. I hadn't done that at all. Why hadn't I done anything to get ready for this beautiful woman? I could see my lips on that skin, right where my fingers were, kissing downwards.\n\n\"Would you like to move your fingers lower or, um, to the side, or anything? I don't mind; I mean, I'd like that.\"\n\nLower? Caress the most beautiful stomach in the world? I tried to make my fingers do it but they just sat there not moving, only shaking. I tried again but they wouldn't go. The shaking was getting worse. I wasn't even touching her now. Was my whole body trembling?\n\nGui-Feng moved away just a step and grabbed both of my hands. \"Ashleigh, relax. We'll get you there. Okay? I know it's hard. I've been through this before.\"\n\nWhy was it hard though? Why don't I own my own mind?\n\nGui-Feng shook her head. \"Good lord, Ashleigh. I'm supposed to be seducing Ken and here we are. Wow, what you do to me.\"\n\n\"Me?\"\n\n\"C'mon, Ken's probably been sitting with a bottle of water for 10 minutes.\" We started walking the twenty feet back to the main road. \"Now, we must remember,\" she said with a light laugh. \"I'm supposed to be seducing him!\"\n\nI realized I had never really thought about this part, but I knew how I felt. \"I want you to, Gui-Feng,\" I told her. \"It seems best.\"\n\n\"Good,\" she replied. \"We'll know if it is working if he starts clinging to you.\"\n\n\"If he wants you, why cling to me?\"\n\n\"Protection.\"\n\nWhen we found Ken she started her seduction as oddly as I could imagine. \"Ken, I think your wife is the cutest thing ever.\"\n\n\"Of course, she is.\"\n\n---\n\nWe continued down the Strip, but I wasn't really with Ken and Gui-Feng for most of it. My feet kept up, but my mind was still in the street with the ghost of Gui-Feng. All she had wanted was a caress. Why couldn't I do it? I didn't live in a closet. I had been out to bars in college where women frenched each other to the delight of their boyfriends. I had been out with lesbian friends or co-workers who kissed in front of me. I wasn't scared of being with another woman. Not like that. Was I?\n\nI caught Gui-Feng's lips shining in the neon lights, moist and rich. I just watched them moving. Opening and closing. She was talking to Ken. Oh, how they rounded so beautifully on some words, as if she was kissing the air as she spoke. I saw her tongue move slightly between her lips and then back in. Then her mouth was opening wide, a laugh. Ken had said something which delighted her. Thank you, Ken. But I waited for her lips to round again, and there it was. Another kiss of the air. A verbal caress.\n\nWould she use those lips to kiss me? A kiss that I could fall into forever. A kiss I could hold. A kiss to take with me for all time. I felt a pain in my arm, and I looked down to see my nails digging in hard.\n\nKen was taking my arm, hugging me as we walked. I smiled at him and tried to get my mind off of our new companion. Continuing to fail, the walk turned into flashes of brilliance and darkness. Each one a separate movie that connected to nothing. A world of moments.\n\nSome woman pushing a deep purple ad into my hands. Its edges felt sharp as if they were going to slice into my palms.\n\nKen leaning in towards Gui-Feng's slender neck. No, it was her ear. He was trying to say something for her alone. Or was he going for our first kiss? His eyes were on mine, talking to me, reading me. I wanted him to kiss her, didn't I? He pulled back.\n\nSoft lips nibbling along my ear, a warm breath on my neck, a pair of hard nipples pushing against my naked body. No, that wasn't real, of course. Right? I looked down to find my clothes still covering me.\n\n\"Kira?\" Gui-Feng talking to Ken. \"She finished at UCLA and then got a bunch of retail jobs. Her dream was to turn her modeling into a fashion line of some sort. I haven't spoken to her for a few years, so I don't know how it's gone. I know she's married. Two kids. Do you remember Rich, the photographer?\"\n\nIce cream suddenly all over Gui-Feng's mouth as she laughed delightedly. She grinned as Ken used a napkin to tenderly wipe it away, not looking at me this time. I suddenly felt fingers on my lips as well, and I kissed them before I could stop myself. What light, lovely fingers. It was only when my lips touched them that I realized they were my own.\n\nA single tear on Gui-Feng's cheek as she looked at me. Why?\n\nMy chest heaving, my pelvis thrust into the air, into a hand whose fingers were deep inside me. My orgasm coursed through my body making my eyes flutter. Gui-Feng held me as if we would fall into an abyss if we dared let go.\n\nKen's eye traveling along Gui-Feng's body as she reclined on some steps, her bare foot pointed towards the cloud-covered moon and a 30 foot billboard. Her dark red top was sliding up the smoothest torso on earth, the one I had not dared even touch.\n\nKen's arm wrapping in mine again, this time not for me. For protection.\n\nWith one last block that we all walked arm in arm, we were at the volcano. We had hit it just right as the lights started to flash as we approached.\n\n\"How're you doing, Ashleigh?\" Gui-Feng asked as the music started. \"You've been elsewhere now for a long time.\"\n\n\"I'm still on that side street with you.\"\n\n\"Remember that you are only here to do what you want. Nothing more.\"\n\n\"Or less,\" I responded. I didn't want to leave this town without Gui-Feng. Oh god, why had I thought that?\n\n\"Or less,\" she echoed. The noise was getting louder and the water of the volcano was rumbling. \"But remember your life goes on after tonight. You don't have to fulfill every dream today.\"\n\n\"But I don't have you after tonight.\"\n\n\"That's nothing-\"\n\n\"I like you,\" Gui-Feng. \"I like you very much.\"\n\n\"But we just met, Ashleigh. We hardly know each other.\"\n\n\"That's what I tell myself.\"\n\nGui-Feng caught her breath. I caught her looking around as the water from the volcano began to shoot into the air. She found Ken a few steps away. \"Ashleigh, I wanted to tell you something earlier, but I knew I shouldn't. I still know I shouldn't but I'm going to.\"\n\n\"What?\"\n\n\"The reason I remember Ken.\"\n\nThere was more to that story? \n\n\"I remember Ken because I was head over heels for Kira Pham. It was just a crush. I discovered that later when I fell in love for real. But at the time, I thought she was everything I wanted. You get what I am saying?\"\n\nI nodded. She was telling me she was available after tonight. She was telling me she was what I wanted and what I had feared.\n\n\"When Kira came clinging to me that night, I was so excited, but all she could talk about was Ken. Then she made me stand by her side as she asked someone else out. I could barely keep my legs upright. When Kenji declined, I was the happiest girl in the world. Of course, Kira wasn't. I spent most of the night comforting her, telling her there were other people who cared for her if she could just see it.\"\n\n\"Did she ever know how you felt?\"\n\nGui-Feng shook her head. \"She wasn't into me. I always knew that. Completely straight.\"\n\n\"I'm into you, Gui-Feng,\" poured out before I could think better.\n\n\"I hope so,\" she replied and turned to me, taking my hands. Music blared and everything around me was a mass of flickering light. I could hear water falling back into its pool with a thunderous splash as the fake eruption ended. My eyes wandered up Gui-Feng's body as we stood close again. I thought I could see her chest moving from her thumping heart inside, but maybe I was just imagining my heart inside her. I looked up into her eyes. They were beckoning to me, as were her lips. Here it was. Time to kiss.\n\nThe lights were done and her lips were moving to mine. Just past her head I could see people. People watching us. Or looking away quickly. How many? All watching. All watching me and her. No, don't watch. This is just about us. Go away, all of you. Was that a cat call?\n\n\"Not here, I can't,\" I almost cried out, backing away from her.\n\nGui-Feng seemed to startle and look around. There were all sorts of people watching us. Mostly men, but some women, too. She gasped and covered her mouth with her hands. She was taking my hand, fleeing.\n\n\"I'm so sorry; I'm so sorry. What was I doing? I was asking your first kiss to be in front of 200 people. Omigod. I'm so stupid. I got carried away and forgot. Will you ever forgive me?\"\n\nI felt like she did, but my sense of humor came to the rescue. \"I think I would have remembered our first kiss without the volcano and audience.\"\n\nA laugh escaped through her still-covered mouth. \"Ashleigh, I am an idiot. This is the exact opposite of what I am supposed to be. I'm supposed to be helping you, not terrifying you, but I can't think straight when we are close. God, I shouldn't say that either.\"\n\n\"It's okay. I mean, I wanted to find out what it is like to be with another woman. And I'm getting it.\"\n\n\"For real,\" she responded. \"I know a safer place for all this. Let me find Ken and ask for some time for the two of us. He can't go where we need to.\"\n\n\"But he's supposed to be a part of this. I want him here.\"\n\n\"Just temporary. I promise I won't take him from you.\"\n\nI slowly nodded, and she jogged back off into the throng. But would she take me from him? People were still looking at her, a few of them laughing, then back at me. Suddenly, a new feeling was arising in me. I was getting pissed off. These ass holes were making fun of someone as perfect as Gui-Feng?! I was about to march back in there, stick my tongue in Gui-Feng's mouth, and kick one of them in the balls, when she jogged back out to me. She looked at me and sensed my mood.\n\n\"Forget about them. Waste of your emotions. Ken's okay. Let's go.\"\n\n\"Where?\"\n\n\"GirlBar.\"\n\n---\n\nYou could tell we were getting close to our destination by looking at the people going by. More and more small groups of women, some holding hands confidently, some giggling and running, some walking along quietly as if they didn't want to be seen. One executive, still in her business suit from her day at work, came stumbling by hanging on to a thin Goth girl with purple hair and a lip ring. I couldn't help but wonder if this was going to be the executive's first time, too. Considering her inability to walk, would she even remember it? We ended up in a small line, waiting with twenty other women.\n\n\"Is it just a lesbian bar?\"\n\n\"Not exactly. More like a club or a party. This place caters to gay men every other night of the week but on Saturdays it gets converted over for women.\"\n\n\"Only once a week?\"\n\nShe shrugged. \"Men and women aren't the same.\"\n\n\"So the name of the bar is BoyBar normally?\"\n\nGui-Feng laughed. \"No, GirlBar is an organization that hosts parties. They do the Dinah Shore weekend if you know it.\"\n\nI had to shake my head.\n\nA call suddenly came from a large bouncer. \"Hey, baby, you can go on in.\" She was talking to Gui-Feng. The bouncer was a she, I think, but she was doing everything she could to make it unclear. \"You know you don't have to wait out here.\" A chain was moved and Gui-Feng led us towards the door.\n\n\"But I always do,\" my partner responded.\n\n\"It's because you want to see me,\" came the bouncer's reply.\n\nGui-Feng kissed her cheek. \"You figured me out.\" Definitely a woman. She had breasts, which you could see when she leaned in for her kiss. But wait. Was that a bulge in her pants? A large one?",
        "\"Go in before I steal Reddie, hun.\"\n\n\"Reddie?\"\n\n\"You,\" Gui-Feng responded as we got to the doorway. A wall of sound greeted us. There were so many women dancing together it reminded me for a second of a junior high dance, only back then we didn't dance quite like the pair right in front of us whose hands were leaving no body part unexplored. The only things louder than the music were the sights. Laser lights spun, the whole room flashed, and banners proclaimed GirlBar to the world. I hadn't been to a club since almost college. Eight, nine years?\n\n\"Do you come here a lot?\" I asked as Gui-Feng pulled us towards a table away from the speakers.\n\n\"A fair amount. It's a comfortable place and it's where I practice.\"\n\n\"Practice?\"\n\n\"A lot of the people who hire me like to drink. A lot. I've got to be able to handle alcohol. It could be dangerous if I can't.\"\n\nI hadn't thought about that. She had to drink enough to not put her client off, but never get drunk so she could still fight if needed. \"Why here though?\"\n\n\"Maybe I will meet someone. Besides, I used to dance here.\"\n\n\"Dance?\"\n\nGui-Feng pointed towards a raised platform with a pole. The pole was adorned with a woman in a tiny leather top and miniskirt. She couldn't have been two days over twenty-one.\n\n\"Oh.\"\n\n\"Different life than you, huh?\"\n\n\"Yeah. I could never pull it off anyway.\"\n\nGui-Feng looked at me for a second before responding. \"Have you looked at yourself lately?\"\n\n\"What do you mean?\"\n\n\"Was it as a teen that you decided you weren't good-looking?\"\n\nI knew where this was going. She was going to tell me I was pretty. \"I was very awkward as a teen. Bony knees, acne, large belly despite a skinny body. It wasn't great. It's just a fact, Gui-Feng. I don't feel bad about it. I might as well feel bad about not having wings.\"\n\n\"And how are your knees now? Your skin's completely clear. You look thin and trim in your jeans. Long legs. If you have a belly, it's small and no one can tell. I mean, the pick-up guys at the hotel were telling the truth. You actually have an hourglass figure now, Ashleigh.\"\n\nI pointed at the college age dancer. \"I don't look like that.\"\n\n\"I hope not!\" she responded. \"Can you imagine if you spoke to her and she told you she was 33? It'd be freaky. You're not supposed to look like her. You are supposed to look like a beautiful 30 year-old, and you do. You are beautiful.\"\n\nI didn't quite know what to say. I decided to admit it.\n\n\"I don't take compliments well.\"\n\n\"I just want you to believe it.\"\n\n\"I do.\" I hesitated. \"Okay, no, I don't.\"\n\n\"I bet you've been curvy and toned for more years now than you were ever bony. Time to update your self-image. You look kind of like Julianne Moore minus a decade.\"\n\nI smiled a little. \"As long as I don't have to be in Boogie Nights 2.\"\n\n\"Ashleigh, how long have we known each other?\"\n\n\"About five, six hours.\"\n\n\"Right, and I was trying to play footsie with you an hour into it. There might be a reason.\" I didn't say anything so she continued. \"And I wanted you to touch me. And I wanted you to kiss me.\" She leaned in closer. \"And I told you about Kira. I don't tell customers about my life like that normally. Not that story. Actually, I don't tell them about my life at all. I make up a completely new story for every client. But I told you.\"\n\nI understood what she was saying, but I didn't believe it. \"Why did you tell me that?\"\n\n\"Ashleigh!\" As she looked at me I could see a sadness taking her that she was trying to hide. \"You know why. Why would I tell you a story intended to show I'm attracted to women for long-term relationships?\" A pause. \"Because I like you,\" she explained even though I already knew, before I had forced her into it. \"Because I wanted you to....\" She was stopping herself from saying what she was thinking. \"...To know.\"\n\nMy response was horrible. \"I guess, I thought you were just liking me because, because you are supposed to.\"\n\nHer head fell down and when I reached for her she drew back. I could barely hear her speak above the noise. \"If that's what you want to think. It's what everyone else thinks. It's how my whole life is.\"\n\n\"I'm so sorry, Gui-Feng. I just- I don't think of myself as attractive like that. Not for you.\"\n\n\"I know,\" she said. She lifted her head and looked at me again, tears in her eyes. \"My name is Sara.\"\n\n\"What?\"\n\n\"My real name. Sara. Not the name I use for my job. I want you to know me before it's over. My name is Sara.\"\n\n\"Hi, Sara,\" was all I could get out. On a thought I reached for her again and this time she didn't move away. I grasped her hand firmly.\n\n\"I'm from North Carolina. Born outside Wilmington,\" she continued slowly.\n\n\"Your web site?\"\n\nShe shrugged. \"Mysterious Asian woman gets customers. Typical girl from Carolina doesn't.\"\n\n\"It gets me. I don't care about any of that. You know I wanted to hire you exactly because you didn't offer a picture or try to tease me. I knew you were offering something else and I wanted to know what. I just- I wish I had dressed up for you. I mean, look at me!\" I indicated my jeans and blouse and then pointed at the dance floor. \"And look at them!\" The outfits ranged from sexy to elegant to rough, but everyone was out and trying to attract the woman opposite them.\n\n\"That was on purpose,\" Gui-Feng, Sara, replied. \"I wanted you casual. I thought if we all dressed up that would start the pressure before we even met.\"\n\n\"That makes sense. I just wish I was more for you. You deserve more than stupid old me.\"\n\nShe reached up to caress my cheek. \"Ashleigh, if you were more, I wouldn't make it out of this date alive. You've already got me teared up and confessing secrets. This is not how I am supposed to do my job.\"\n\nI felt my heart growing in size with each word and each touch.\n\n\"I like you,\" I heard myself say. \"I really really like you.\"\n\n\"You do?\"\n\nI nodded as the lump grew in my throat. \"I'm just afraid.\"\n\n\"Let's dance,\" Sara asked.\n\nWith a slight smile, I nodded towards the pole dancer. \"Like that?\"\n\nSara responded with her own smile and stood, never letting go of my hand. The music was changing as we walked on to the dance floor. A slow trance beat with a saxophone melody on top. The beat throbbed into your mind, sliding its way into your body.\n\nSara's hands were in mine as I moved close to her again. As the beat took us, we began to sway together, never moving our feet, just letting our hips slide.\n\n\"I'm glad I know your name,\" I said.\n\n\"I am, too.\"\n\nWe spoke slowly as if we could only talk on the pulse.\n\n\"Where's 'Gui-Feng' come from? Do you speak Chinese?\"\n\nSara pulled me a little closer, and while my heart started beating faster as the distance decreased, I didn't move back. \"Wo hui shuo guoyu, taiyu..., fa yu, yidian riyu. Bie gaosu nide airen.\" She then leaned a little closer still. She was so close. So wonderfully, frighteningly close. \"Wo keneng ye hui ai shang ni.\"\n\n\"Mandarin, not Cantonese, right?\"\n\n\"Yes, I'm Taiwanese.\"\n\n\"I'm Irish. Well, my grandparents were.\"\n\n\"Speak any?\"\n\nI smiled. \"No, but I can put on a mean accent if I channel my grandmother.\"\n\n\"I'd like to hear that one day.\"\n\nI wondered if she meant she wanted to hear my accent or my grandmother who was still batting around at the age of 94. I suddenly wished I could introduce Sara to her. Somehow, I thought she'd approve of my choice. She liked Kenji. Oh, god. I leaned into Sara completely for support and we just swayed to the beat. I didn't know what Sara was giving me that I needed, but I knew I needed it.\n\n\"You are doing very well in here,\" Sara said close to my ear.\n\nI looked up at all the female couples. \"I guess I should be weirded out, huh?\"\n\n\"Many would.\"\n\n\"I think there're more important things on my mind.\"\n\n\"Like what?\"\n\n\"Like if a place like this is my new home.\"\n\nI felt Sara's arms wrap around me, drawing me in to her body. We were barely moving now, just standing in each other's arms. My own hands extended around her neck, but I didn't look at her. Instead I kept my head nestled into her shoulder. After a moment, I felt her hands begin to slide along my back. Not a hug anymore. She was caressing me, touching me.\n\n\"That feels good, Sara.\"\n\n\"Yes.\"\n\nThe music was changing, heating up, the trance ending, and the lights starting to rev up the energy. But the two of us stayed locked in our embrace. I looked up from Sara's shoulder to see a woman with a kind face smiling at me. When she saw my eyes, she gave a little thumbs-up to encourage me. I put my head back into Sara.\n\n\"I was just given the go ahead,\" I told her.\n\n\"What do you mean?\"\n\n\"Someone across the room thinks we are a good couple.\"\n\nSara moved back until she was looking at me but still holding me tight. I couldn't avoid her look now. She was more beautiful now than she was the first time I had seen her.\n\n\"What do you think?\" she asked me, never letting my eyes go. My heart started beating faster and faster, but she didn't break our connection. She was demanding to know what I really wanted.\n\n\"Can we be a couple, Ashleigh? Can you see that, too?\"\n\nI felt tears growing in my eyes. Wouldn't she let me go? Why did she demand the truth?\n\nMy answer came out almost as a sob. \"I can.\"\n\nI felt Sara's hands shaking.\n\n\"Someone like you with me? I could finally have someone in my life?\"\n\n\"Yes, I can see it, Sara.\" The movie frames of my life were splitting apart, flying around my head, buzzing in my ears.\n\n\"Kiss me,\" she said and moved forward. But I could only shake my head as a tear slid onto my closed lips. I could see it, but I couldn't do it. Did she understand?\n\nSara's gorgeous eyes widened as she looked at me. \"What's wrong?\"\n\n\"I can't.\" She only looked at me, shocked at what I was doing. \"Don't make me.\"\n\n\"Make you?\" she said in a choked voice. \"I'm making you? I don't want to make you.\"\n\n\"I'm scared. I can't do this.\" I wanted what she was offering. The intimacy and companionship with a woman, but, but-\n\n\"Ashleigh, it's me. I would never hurt you. Oh, I'm pressuring you again, aren't I? I'm sorry, I just get- I need someone too, someone-\"\n\n\"That's not it. It's- I don't know what will become of me if I let my feelings out.\"\n\nShe stared at me and then without a warning dropped her arms from around my body and started walking towards the door.\n\nSara?\n\nSara, please. I watched her walking.\n\n\"Sara!!!\"\n\nShe stopped near the threshold and turned towards me, but as I ran towards her, she stood not looking. A few heads watched me running to a woman who didn't want me anymore, watching the end of another relationship.\n\n\"Please don't go,\" I begged. \"I can't do this in one night. I need time. Love isn't easy.\"\n\nShe lifted her eyes to mine. \"You love me?\"\n\n\"I don't know. I want to.\"\n\n\"But you are married.\"\n\n\"I know. And I love him.\" I did, I did. I wasn't just saying it. I knew it.\n\n\"So what are we going to do?\"\n\nWhat was there to do? I didn't want to let her go, but I couldn't let her in. There was no answer this time. Nothing was to be found.\n\nI collapsed onto the floor, giving up.\n\nSara squatted down next to where I was sitting and wrapped her arms around me again. It felt so right, like how it was meant to be. This was an image in my life. I knew it.\n\n\"I'm such a complete mess,\" I told her. \"I'm so sorry to have done this to you.\" She said nothing but caressed my hair tenderly as people stepped around us. \"Have you ever met anyone like me before?\"\n\n\"Yes,\" she whispered to me.\n\n\"What?\"\n\n\"Seven years ago.\"\n\n\"Who was she?\"\n\n\"The person I was meant to be with. Or so I thought. She was everything I had ever wanted. And, more, she was what I had never known I wanted until I met her.\"\n\n\"What happened?\"\n\n\"She loved me, she said. I think it was true.\"\n\n\"And?\"\n\n\"She stayed afraid. Oh, it was different than this, than you. She'd kiss me and then cry and tell me she shouldn't have. Finally after four perfect, terrifying months we made love. I thought it was the most beautiful night of my life. I knew we had finally broken through the barrier together. Finally. She was gone when I awoke.\"\n\n\"She didn't explain?\"\n\n\"I got an answering machine message. She said she wasn't ready for this and needed space. She had bought a plane ticket home and would call when she was ready. She didn't know what would happen to her if she stayed. With me.\"\n\n\"How long did you wait?\"\n\n\"Seven years....\"\n\n\"Oh, Sara-\"\n\n\"No, I've dated since then. Tried relationships, but I still wake up sometimes wondering if she is ready now. She isn't. She never will be. She's probably married or, worse, dating her beautiful partner. Can you imagine? What if she finally did it but with someone else? I couldn't handle that. I never want to know.\" I discovered that I was the one caressing Sara now. \"I'm sorry, Ashleigh.\"\n\n\"You're sorry! I'm the one-\"\n\n\"I ran just a moment ago. But I wasn't running from you, I know. I just can't do that again.\"\n\nAs I held Sara or she held me, a thought came clear as a bell. \"But I'm not her,\" I said, starting the thought.\n\n\"Oh, I know, but-\"\n\n\"And we have help this time. We aren't alone.\"\n\n\"Help?\" She looked up into my eyes. \"What kind of help could there be?\"\n\n\"Ken.\"\n\n---\n\nWe sat very properly together in the taxi, holding hands and not speaking. What do I say to the person who I say I want to love but won't kiss? What does she say to the person who is dragging her heart back through the worst experience in her life? Nothing.\n\n---\n\nSara stood patiently behind me as I opened the hotel room door that was supposed to hold my husband, the only person who knew if Sara and I were done. As the door swung open, the first thing to hit us was the sound of Ella Fitzgerald. We walked in and saw a small stereo sitting in the living room. The music was very quiet, but I knew the song like the house I grew up in.\n\n\"It's very clear our love is here to stay. Not for a year but forever and a day.\n\nThe radio and the telephone and the movies that we know May all just be passing fancy and in time may go.\n\nBut, oh my dear, our love is here to stay.\"\n\nThe lights were low and a few candles flickered near the bed in the distance.\n\n\"How did you know I loved Ella?\" I asked Sara.\n\n\"I didn't. My tricks have all been played.\" As she said this, Ken came walking out of the bathroom where it looked like he had been washing his face.\n\n\"Oh, you're back! Great! You've no idea how nervous I've been in here. I have absolutely no clue what I'm supposed to be doing.\" He focused on me. \"To be honest, Ashleigh, I've had no clue what I was supposed to be doing since the day in the trailer.\"\n\n\"Neither have I,\" I told him quietly.\n\n\"How do you support your wife wanting to be with someone else? It's not clear, at least to me. So, I just did the same old stuff I always do. That's the only Ella I could find in the time I had. It's from a gas station. And the candles are from the bathroom. I guess they are yours, Gui-Feng.\"\n\n\"Sara.\" I interrupted.\n\n\"What?\"\n\n\"My name is Sara. Sara May Huang.\"\n\nWhat a woman. She was still going to put herself out there after all I had put her through. She hadn't given up on me, on us.\n\nKen stopped bouncing nervously. \"What have you two been up to?\"\n\n\"Talking,\" said Sara.\n\n\"Getting to know each other,\" I added.\n\n\"You look like you've been talking to ghosts.\"\n\n\"Would you like a drink, Sara? We have a mini bar. Actually, it's huge, so I guess it's a maxi bar.\" I wanted to break the tension and have fun again, but Sara refused.\n\n\"I only want a kiss. One from Ken. And one from you, Ashleigh.\"\n\nWhen I looked at her I could almost believe that she was the only one I desired. But she wasn't. I was still on the bus to the North Shore, and I didn't want to get off yet. I could picture every detail of that day; the day I had discovered my life partner. I didn't want to get off yet. I couldn't.\n\nKen was taking my hand. \"What's wrong?\"\n\nI didn't say anything.\n\n\"Do you still want this?\" he asked me.\n\nAn image of Sara's face deep in ecstasy popped into my head.\n\n\"Oh yes. Oh God, yes.\" I admitted.\n\nKen barely paused. \"Then, it's time. She likes you, Ashleigh. She told me so while we were walking. You aren't kissing someone who doesn't want it. Don't be afraid.\"\n\nHe started to lead me to Sara, but I didn't move.\n\n\"Kenji, you don't understand.\"\n\n\"I do. She's had my head spinning all night so I don't know what side is up.\"\n\n\"No, Kenji. I like her. Kenji, I don't know for sure I can turn it back off.\"\n\nI watched him swallowing as he contained his emotions. \"Isn't that what we came to find out? I know this is more than you having the hots for someone. I knew that instantly the day you told me.\"\n\n\"Ken?\" I felt like I was calling to him even though he was only inches away. \"Don't you worry about what might happen to me? To us?\"\n\n\"That's all I think about. That's all I care about. I want to take you and run as fast as I can back to Hawaii, but I also know that whatever is going on will follow us home. I'm not going to run. I want you with me because it's all that you want\" He led me to Sara and passed my hands gently into hers. \"You are the love of my life.\"\n\n\"What if I am truly happy in her arms? In Sara's arms? This might be who I am. Why aren't you trying to stop me?\"\n\n\"Because,\" Ken spoke slowly as if only understanding himself as the words came out. \"You're the love of my life.\"\n\nMy heart burst.\n\nBefore me, he had declared his life was empty, but he had grown far beyond that now. He only wanted me with him if we could both be happy. I loved him so much. I felt my knees give way but, instead of falling, Sara was supporting me, pulling me back up with the hands in which Ken had placed me.\n\nHad Ken just given me to another? The person with whom I would live my life now? Or was it to be just for tonight? What about Ken and me? He had always been there for me, even now when it was the greatest risk he could take. I didn't know the answers to any of these questions. It was all such a great, big mess, and my little mind couldn't work through it.\n\nI didn't know.\n\nI didn't know!\n\nOf course not! How could I know? You can't know who you will fall in love with until you are in love with them. You can't know what music is like until you hear it. You can't know how to overcome fear until you are afraid. The only way to know if my new life was in Sara's arms was to be in Sara's arms.\n\nAnd Kenji knew this. So here he was helping me find out. I couldn't help but smile. Ken and I were still together on our journey, except one more person had joined in. I was determined that together he and I would find out where we were going. Together.\n\nI looked at Sara who had caught me as I fell and asked a simple question. \"Do you still want a kiss?\"\n\nI could tell Sara didn't quite understand why my mood was changing, but my smile had spread to her regardless. She nodded eagerly.\n\nSo I finally did the most natural thing in the world.\n\nI kissed her.\n\nWe pulled back smiling even more.\n\nOur lips met again. This time I got to really feel her. Her lips were fuller, softer than Ken's. I went for a third kiss, but as I leaned in I felt Ken backing off. \"Don't you go,\" I said and reached out, only to bump into Sara's arm which was already clutching his tie.\n\n\"I wanted a kiss from you, too,\" Sara told him.\n\n\"I had forgotten you were bi. Sara, you are bi, aren't you?\"\n\nShe looked at me with the sort of joy that was on her face when we first met.\n\n\"You bet I am,\" she said and yanked my husband's face onto hers. As their lips met, Ken looked for a second like a nervous almost 40 year-old trying to kiss a gorgeous woman ten years his junior. Then a lock of hair fell into his face as their lips moved, and I saw again the man who had written the racing column, the man who turned down girls who ran their own web sites, the man who could take me to heaven physically. Sara didn't know what she was getting into.",
        "They parted for just a second and before I could blink were locked together again. Good lord, were they together, pressing, moving, exploring. Neither of them seemed to be able to get enough. Finally, they came up for air. Ken turned to me immediately. \"Sorry, hun, I've wanted to do that for a week.\"\n\n\"Ten years here,\" Sara giggled. \"I owed you one.\" Sara then looked at me. \"Your turn again?\"\n\nI launched into her arms this time, our lips intertwining. My tongue looked for hers first, and when her mouth opened I got my second taste of heaven. She kissed like I grew up thinking a kiss should be. Warm, wet, like the other person couldn't get enough of me. It set my body rolling, and my hands pulled her body hard into mine.\n\nShe was pushing me backwards, towards what I didn't know. I shot my hand out just in time to grab a piece of Kenji's shirt to drag him along. I knew Ken would keep finding any hint he could to back off and give us room to work things out, but I wasn't having any of that. Ken and I were going to work through this together.\n\nA sofa was soon pushing against my calves, and I sank into it. Sara fell on me, putting her lips back on mine and her hands on my body. I could hear buttons popping off Ken's shirt as I was pushed to the back of the couch. Sara's lips left mine and she began to kiss all over my face. Not an inch was spared from her delightful little pecks. And a couple licks. I couldn't wait for more of those.\n\n\"My turn,\" I declared and immediately went back to her lips, the ones I had been afraid of all night. But by the time my lips found their home I was pressing against her teeth, as she had one of her delighted grins going.\n\n\"Ashleigh,\" she said so close to me that I could feel her lips brushing my skin. \"I think your husband likes his position back there.\" I looked past her to Ken whose shirt I was still clutching and half ripping off his body. Apparently, I had pulled him right into Sara so that his pelvis was pressed hard against her rear. I distinctly saw her wiggle against him, and I knew I wanted to be doing that. But if I wanted Ken pressed into me or Sara wiggling for me, I am not sure.\n\n\"Hey, it's not my fault,\" Ken protested. \"Ashleigh's got the grip of steel on me.\"\n\n\"Here you go then,\" I said, letting him go so that he sprang backwards.\n\n\"Uhh, thanks.\"\n\nI laughed out loud at his obvious disappointment. He loved to rub against my ass, too.\n\nSara turned around so that she was sitting between my legs, nestled into my bosom, facing Ken. I immediately wrapped my arms around her. \"Ashleigh, have you done this?\" she asked, slipping her shoes off.\n\n\"What?\"\n\n\"This,\" she said and placed a slender foot on the inside of Ken's leg, gliding it along. I kicked my shoes off without a thought, and my bare foot started to slide up the other side of his leg.\n\n\"Looks like you have.\" Sara's foot was traveling up towards his thigh, when a second foot joined in on the other leg so that she was stroking up and down the inside of both his legs. My other foot joined in as well and I synced my motions with hers. Sara was quickly becoming even more playful, however, and her toes where crawling up the bulge in his pants.\n\n\"Be careful,\" I warned. \"If you go too high, he'll grab your foot and start sucking on it.\"\n\n\"Really?\" Sara squirmed down a little so that her feet could go higher. \"I mean, that sounds horrible.\"\n\nI wanted to get my own feet on Ken's tenting pants, so I slid towards him, pulling Sara so that she practically lay on top of me. My mound was pushing directly into the small of her back, as my legs wrapped around her torso, and she brushed against my growing wetness with each movement. Trying to stay on task, I got the top of my foot on Ken's covered erection, moving up and down its considerable length.\n\nI felt Sara wiggling her lower back between my legs and quickly understood why. Her toes had found a home in Ken's mouth, and I knew from experience that he was working his tongue up and down each one. A soft moan escaped her lips. This was a thing for her, wasn't it? I tried to add to her pleasure by tugging her top up so that her stomach was exposed. It was as beautiful as I had been imagining and, with just a brief memory of my trembling fear from before, my hands fell on her, and my fingers circled her skin causing goose bumps to rise. Another moan seeped out as I traced her abs with my fingertips and Ken sucked. I jolted when Sara's moist tongue ran up my neck. She was leaning her head backwards into me and had no interest in going slow. Her tongue rove up and down my skin, over and over, until my own moan escaped.\n\nAs my eyes watched Kenji and my hands caressed Sara, I discovered one of the things she knew that we didn't. Without leaving my neck for a second, her free foot was grabbing at the tip of Ken's belt. Her toes wrapped and pushed the end of the belt towards the buckle until the buckle began to open. \"That's so sexy,\" I told her in a low voice. \"Can you unbutton his pants too?\"\n\n\"I'm not that good. Yet,\" she added with a flash of mischief. \"Let's get some of these clothes off though. I love your jeans grinding into me, Ashleigh, but I'd rather feel what's under them.\"\n\n\"Good idea,\" I said with blushing cheeks. I hadn't meant to be grinding anyone so quickly.\n\n\"The bed?\" Ken added and extended his hands to us. With Ken guarding our rear, we passed through the 18th century Italian furnishings and crossed the window over the Vegas Strip until we were passing up the steps into the bedroom. I watched a candle flicker in Sara's eyes, as we stood together, wondering who would move first. I did, unbuttoning my blouse for her. The soft fabric of the shirt fell at my feet. Sara grabbed the bottom of her deep-colored tank in response and tossed it over the railing. As she did, I noticed that Ella's voice on the stereo had stopped. It was just us now. The only sound to hear was the folding of fabric as Sara's capris fell down her legs. She stepped out of them and a little closer to me. Before I could think about it, I removed my own jeans and walked to her, pointedly laying my pants on hers. She took my hands, and we stood there in our underwear savoring the moment.\n\nI had gotten so wrapped up in Sara that I had begun to forget what she looked like. It wasn't her body I wanted. At least until I saw it again. I was able to take in her entire body now from her slender calves to her unfathomably perfect legs, over a tiny black thong that hid little, over that stomach I had dreamed of touching on the street, then breasts smaller than mine, but rounded and bursting, to a neck as slender and graceful as her legs, and finally to that glorious shock of black hair framing eyes I wanted to swim in.\n\nI wanted this. I already knew that much.\n\nLooking back down the stairs, I found Ken waiting, watching. \"Ken! I really do want you here. Stop trying to be gentlemanly.\"\n\nHe came up next to me in the bedroom. \"You think I'm being thoughtful. I was just enjoying the view,\" he said and squeezed my bottom through the satiny fabric of my panties. His eyes passed over my body and then to Sara's as we stood in our lingerie touching each other. \"Not that the view up here is bad. Can I say now that I am one lucky man?\"\n\nI laughed. \"Yes, you are. Sara, would you help me show him just how lucky he is?\"\n\n\"I'm all over it.\" She started to undo his tie, while my hands went to his shirt, unfastening the two buttons still attached and pulling it from his pants. As his shirt collapsed onto the bed, I caught a gleam in Sara's eyes. I loved that. She had such great taste in people, meaning mine.\n\nHer hands ran over his chest and up to his shoulders. Ken had never been packed with muscles but everything thing he had was right where you wanted it, including perfect broad shoulders that could enfold you in passion and security for days.\n\nI watched as Sara wrapped her arms around Ken's neck and found his lips again. Kenji responded tenderly this time. Their tongues met and danced to an easy minuet. His hands fell down Sara's body until he was cupping her bare cheeks in his palms, pulling her in to continue the kiss. As I watched his strong hands, I saw Sara flex her muscles one cheek at a time, sending a low growl out of his mouth and into hers. \n\nThere was a problem though. Instead of two perfect bodies pressed together, Ken's loose belt was grating against Sara's stomach. I reached in between them, my hands feeling their skin on each side as they continued exploring each other's mouth, and pulled his pants downward. Hell, why pretend? I grabbed his boxers as well and pulled them to his feet. His cock was raging hard and I could see the early lubrication rubbing against Sara's smooth skin. Since I was already leaning over, I just decided to lick her stomach right where he left a trail. As my tongue took its first lick of our goddess, Sara squealed and jumped back.\n\n\"No fair!\"\n\n\"What?\" I asked her.\n\n\"You get me dreaming about you all night and then start licking my stomach without warning!\"\n\n\"Sara?\" I asked calmly.\n\n\"Yeah?\"\n\nI guided her to the bed, pushing her back so that she lay on the sheets with her legs off the mattress. \"I'm going to lick your stomach now.\"\n\n\"Well, now that I know....\" she replied with a grin as I popped my bra off.\n\n\"May I help?\" Ken chimed in.\n\n\"You look far too good to be wasted sitting in a chair,\" Sara told him. He picked up a leg and I saw his teeth grazing her ankle. With his huge erection and the look in his eyes, I knew this mood. He was going to take his time with her body. I loved it when he was in that mood.\n\nI crawled above Sara's head and spent some time just looking at her and caressing. As Ken sucked on the bottom of Sara's calf, I began kissing her. Ken and I had been together long enough that we had gotten into a little of a routine I realized. He knew what I loved and I knew his, so we had begun to skip to each other's Greatest Hits. As I looked Sara over from head to toe, I was reminded of all the places on a person there were to kiss, and I was determined to kiss them all.\n\nI started with her hair, then her forehead, then her temples. Eyes, nose, chin, ear, lips. I lingered on those lips that were so soft and desirous of my own. When her lips pouted as I drew back, I felt like it would break my heart. She wasn't ready to give my lips up and I heard myself saying, \"Oh, me too,\" caressing her again.\n\nBut there was so much of her that needed me. I crawled down her side and went for her gazelle neck, which she turned to expose for me. She was salty on her neck, but when she caught her breath from a stroke of my tongue, my heart leaped. I licked every part of her, tasting, savoring, watching for what made her squirm. I passed down towards her shoulders, tracing out the line of her collarbone with the tip of my tongue. But as I crossed to taste the other side, the naughty woman cheated. My dangling breast found its way in her mouth.\n\n\"You're very bad,\" I told her as I gave in completely.\n\n\"What do you expect?\" she teased and instantly her mouth was sucking me in and then, oh wow, her tongue started. It flickered impossibly fast over my nipple that was hardening inside her mouth. My nipples aren't all that sensitive, but this was delicious. She would stop and suck me gently; then the tongue would go again. I raked my nails along her side in thanks. I never realized a tongue could go that fast. I suddenly had the image of that in other places on my body and my muscles collapsed so that I fell hard on to her head, making a muffled squeal erupt.\n\nI pulled myself off of her, embarrassed.\n\n\"You are really sensitive here?\" she asked.\n\n\"Uhhh, no, it wasn't that.\" Kenji was looking up from where he was sucking on the back of her calves. \"I, uh, I was thinking. Of other places you, uh, might... do that.\"\n\n\"I knew I was right to like you,\" Sara responded, and then she suddenly squealed again. \"Tickles!\"\n\nKen had just put his tongue on the back of her knee, doing to her what I absolutely loved. He looked up and shrugged his shoulders. \"Ashleigh likes that.\"\n\n\"Doesn't it tickle like mad?\" Sara asked.\n\nMy face was turning red again. \"No, I kinda like it.\"\n\n\"Kinda?\" Ken exclaimed. \"If I didn't do that, I'd be sleeping on the sofa.\"\n\n\"It's weird, huh?\"\n\nSara shook her head. \"If we were all the same, who'd want to have sex anymore?\" Then her eyes were closing as some new wonderful sensation went through her. This time Kenji was starting up the outside of her thigh. For the first time, I was jealous. I knew where Ken was headed, and, dammit, if Sara was going to be doing any orgasming tonight, I was going to be a part of it. I made a beeline for her breasts.\n\nHer nipples were pressing hard into the black silk of her bra, and I was delighted to find a rare front clasp. With a quick twist her bra fell open and my tongue fell to her body. I started licking in circles around a breast, letting the flat of my tongue slither along her in a spiral. As I reached the pinnacle, I gave a quick flick and started over. One of Sara's hands started to trace along my back in encouragement as I repeated the motion over and over.\n\nI was about to try licking her delightful dark nipples when I discovered I was running late again. Ken was at the very top of her thigh and the only place to go from there was inside. Sorry, hun, I'm first, I thought to myself. Ken caught my eyes and smiled at me, but I wasn't going to fall for his charms. Okay, just a little. I started crossing Sara's abdomen with my lips, heading right for Ken. As I moved, though, Sara's pelvis suddenly jumped in the air. I looked at Ken who was just watching me this time. I licked again and got another jump. Her navel. This was her spot. And I had found it first. Take that, cute hubby. My tongue ducked back in to the little opening and a soft \"ungh\" came from the middle of the bed. I started to slide my tongue in and out of her button and each entry received another moan. Each moan pushed my desire for my partner higher. As I circled my tongue on her, her whole stomach started to quiver. I continued making her muscles shake, and the smell of her sex started to waft around me. Or was it me, because I was beginning to soak my own panties. I wanted to please her so bad.\n\nKen had started licking Sara again as well, finally moving inside her legs, though staying lower than I would have. She spread her legs a little, and I instantly crawled the final few inches to her tiny thong. I slid my tongue underneath the waistband of the thong and glided from side to side, not knowing which was smoother, the silk fabric or her salty skin. As I lifted my mouth, I caught Ken resting on her legs watching me with a smile. He moved up to me, and our lips met in a delighted, comfortable kiss, greeting each other over Sara's groin.\n\n\"You want to do this part?\" Ken asked when we broke apart.\n\nI just nodded, needing no more explanation of what he was talking about.\n\n\"Then just start slow. See if you like it; see if she likes it.\"\n\n\"I know what feels good, hun,\" I teased. \"I have one of these, too.\"\n\n\"It's different from giving. You'll see.\"\n\nSara jumped in. \"I love you two, but I'm going to die here.\"\n\nI jumped up and gave her a kiss. \"Sorry, Sara. I'm on it.\" Then I immediately headed back south. She spread her legs a little wider for me as she squirmed back on the bed, and I crawled between her thighs. Her thong had begun to sink between her vulva, and I could see some black hairs poking out of either side. She wasn't shaved, just trimmed. There was a wet spot on the silk about half way down so I gently placed my finger there. Her legs jumped and then relaxed again. The dampness and warmth of her mound reminded me of what I was doing. I had never kissed a woman before tonight and here I was getting ready to put my face between someone's legs. I moved closer and her fragrance enveloped me. It was like my own scent but different in a way I couldn't name. I recalled licking my own taste from Ken's fingers a few nights ago, making jokes that it was our new partner. Was I ready for the real thing?\n\nMy finger traced slowly up and down her covered slit. Everything was moisture and heat. The tiny strip of fabric covering her was damp from top to bottom, and I knew it was for me and my husband. Her hips quivered when my finger traced over the spot where her clitoris would be. Another woman's clitoris just inches from my mouth. Waiting for me. I could feel my breathing changing, my skin becoming clammy. What was I doing?\n\nI lowered my head slowly to the damp fabric and placed my lips on it. I moved back and could feel Sara's moisture on my own lips. This was too freaky. Maybe I wasn't ready. Maybe I needed to go slower. I felt Sara's fingers touching my hair. I looked up to find a loving, tender expression. I wanted to do this. For her. For me, too. My pelvis was telling me to continue. My whole mound tingled, and I could feel moisture coating my thighs.\n\n\"Ashleigh, you don't have to,\" Sara explained patiently.\n\n\"I want you to feel good,\" I told her.\n\nKen responded. \"There are other ways. Just find another way to show how you feel until you are ready.\"\n\nI nodded, but the truth was that I wanted to do this, exactly this. This was one of the images that I had been searching for. I wanted to taste her, have her fill my mouth as her body shook. The image was as clear as it could be. My whole mouth covering her while she held my hand in support. Her hand so strong and comfortable in mine. This was one of the dreams I had come to make real. \"Do you like to be kissed here?\" I asked Sara. Despite porn fantasies, I knew not everyone really did.\n\nShe slowly nodded.\n\nThen I was going to do it. I placed my hands on her tiny panties and dragged them down her legs. She helped me kick them off. For some reason I handed them to Ken who was lying next to Sara, not touching her. He placed them on the bed out of the way. I stood and wiggled my own panties off, since it seemed only fair, and then crawled back between her legs.\n\n\"Remember you can go slow,\" Ken encouraged. \"Do what makes you happy.\"\n\nI understood, but my problem was that I was having a really hard time doing what made me happy. If I had been doing what I wanted, my tongue would have been half way inside Sara already.\n\nTaking a deep breath to stay calm, I placed my finger right back where it had been when I stopped, only this time it was on her dark flesh and black pubic hair. Step number one done. My finger slid up her labia, falling inside, the tip disappearing inside her trim hair. Step Two. I moved my face down and kissed the top of her mound. She was wet even here. So lovely. Her scent was everywhere, filling my nostrils and caressing my taste buds. Delicious, intoxicating, and still a little frightening. Still frightening, fuck it. Fuck, fuck, fuck. I wanted to do this. She wanted it. Why was it so hard?\n\nI pushed my finger in towards the pink at her center. Her moisture coated my finger. It felt marvelous to touch her like this. I wanted to make her so happy. I felt like we had always been best friends; we just hadn't met yet. And now we would be lovers. Surely we had gotten carried away in emotions, letting each person stand in for some buried need we had. That had to be it. But I didn't want to give it up, not yet. I pushed my finger inside her and I noticed her clutching at a sheet. This made my heart soar. Maybe I did love her. Maybe she was my new life.\n\nPanic growing. The clamminess, the heart out of control. I had to calm myself before I let my fears take me. I tried to focus on Sara and her beautiful face and let this bring back peace. But it wasn't working. The ocean, a quiet beach. No, I just wasn't ready, even for someone I liked as much as Sara. Wait. What do I do when I get panicked normally?",
        "I reached out for Ken who was already lying beside me, his head close. I grabbed his hand and squeezed tight. The effect was immediate. My mind began to relax, my pulse slow. It wasn't that Ken had all the answers. It was that he would be with me while I found them.\n\n\"Just hold my hand,\" I asked of him.\n\n\"As long as you need,\" he said.\n\nI started to turn back to Sara, but instead my mind went to the hand holding mine, Ken's hand. So strong and comforting. This was the image in my mind. Someone was holding my hand, but it wasn't Sara. Why hadn't I seen that part of the movie before? That part was now right. The rest was up to me.\n\nI moved back to my new partner and nuzzled my head into the soft black hairs between her legs, my nose picking up her scent again and my skin feeling her continuing moisture. Sara caressed my elbow as it lay on her stomach. I started to kiss up and down Sara's mound, giving her small, light kisses. With a stroke from her hand, I repeated the kisses, a little harder this time. And then more. And more. And more kisses over all the lips and thighs and pink and dark flesh. My lips pressed further into her and the wetness began to linger on my mouth. I noticed our breathing changing. Sara's was becoming shallower, mine deeper and slower.\n\nHow could I please Sara the way I wanted? I would do what I liked done. I placed the flat of my tongue on the very top of her thigh so that my cheek grazed her labia and began sliding up and down her leg. A gasp came immediately. I switched to her other leg and slathered along her body. My cheeks were being adorned with a transluscent blush as they rubbed. Back and forth, I repeated the motion again and again. Tiny whimpers reached my ears, just like I made when Ken did this to me. Feelings of both happiness and frustration.\n\nI turned and slid my tongue deep into her slit, drawing up her flesh in one huge stroke.\n\n\"Ahhh...\"\n\nWhy had I been waiting to do this? My tongue stayed inside her lips, moving up and down, gathering her taste in my mouth and savoring it. I slid down to her opening, probing with my tongue, then flicking across her entrance like I liked. Her whimpers returned and her thighs clenched and released around my head. She was so beautiful, so wonderful. I wanted to get a hand between my own legs to touch, but I couldn't make myself give up the support I was getting from Kenji or Sara. Her nails clawed harder against my skin, up and down my arms as far as she could reach.\n\nI tried to push my tongue inside her, just the tip, but I understood now what Kenji had been trying to tell me. With my face pressed in, I couldn't really tell where I was. I had to go by feel, and here it was my first time. Oh, is this the spot, maybe? Yes, there. That's right. I took a deep breath and pushed my tongue forward, entering dear Sara. I did my best to move my tongue in circles right inside, like Kenji knew how to do.\n\nSomething was working. Sara's hips were grinding into me, searching for more. She was saying something over and over. \"That's it,\" I think it was but my ears were covered by her thighs, so it was hard to tell. Then the whimpers were turning to cries that matched with small convulsions in her lithe body. What a beautiful, beautiful woman. \"Higher, higher.\" Was that what she was saying? What did it mean? Oh, of course.\n\nI slid my tongue out of her body and up, up to where her clitoris should be. She let out a high pitch cry, then giggling, then a cry again. I looked up to see her, but she was pulling Kenji into her body, holding on to him, her head against his shoulder, her cries now muffled by his muscles. How perfect. That's what I would have done, too.\n\nShe was brilliant; she was beautiful. How many times had I thought that? Oh, I loved this, loved this. I licked her clit as best I could. Moving faster and faster with the tip of my tongue. Her moans increased and I could hear her almost wheezing against Ken's body. I imagined her teeth on his skin, her mouth open, begging for air. Was she coming? She was sucking on his skin. I could hear it. That's it, my lovely Sara. Feel sooo good, please. I managed to pucker my lips right on her clit and then sucked it towards my waiting tongue.\n\nThat did it.\n\nHer whole pelvis pushed hard against me; her hands pushed me in from the other side; her juices were everywhere; her muffled cries echoed in my ears almost making me come from the excitement of it all. She was orgasming beneath me, with me. Such a beautiful orgasm. I started laughing at my repetition. Beauiful, beautiful, beautiful. I was incoherent.\n\nShe had barely started to calm when she called for me. I happily crawled up into the area of her body not covered by Ken. She held me close, and I snuggled in as tight as I could.\n\n\"Thank you, Sara.\"\n\nI saw her brilliant teeth as she wiped her face with her forearm. \"I'm supposed to thank you. I'm the one going over and over.\"\n\n\"Really?\"\n\nShe laughed. \"Yes, Ashleigh. Of course, yes.\"\n\n\"Oh.\" I was pleased. Okay, I was grinning ear to ear. I really hadn't meant to devote so much attention to just oral, but if it worked.... \"I was two touches away myself,\" I confessed.\n\n\"I had to think about wiring. Bad wiring. It barely held me back,\" Ken added.\n\n\"I wish you had let go,\" I told him. \"You so deserve it.\"\n\n\"Where'd you learn all that?\" Sara asked.\n\n\"Learn what?\"\n\n\"Ashleigh! I didn't figure out half that stuff until my third girlfriend. This is your first night.\"\n\n\"I was just copying Kenji.\"\n\nShe looked at Ken. \"I really can't tell Kira Pham about any of this?\" A little revenge perhaps? \"So we both owe you, Kenji-san.\" Sara continued.\n\nHe held his hands up a little over dramatically, smug and adorable. \"Nothing required, ladies. Just doing my part.\"\n\n\"We do owe you,\" I corrected him. \"If you hadn't come to our rescue, twice, I would be sitting over there crying about how stupid I was, and Sara would be headed home wondering about this strange woman she'd met and all her hangups.\"\n\n\"Ashleigh, is your mouth too tired, because I have an idea.\" Sara asked.\n\nI jumped up knowing precisely what she had in mind. In fact, it was something I had been promising to Ken for a long time myself. \"Let me get a drink of water.\" I bounded down the stairs and took a couple swigs from the mini bar, each one tasting like Sara. When I came back up the stairs, it looked like a life-sized shadow box. Two dim silhouettes formed by a couple candles. Kenji was standing with Sara sitting on the bed, her head not more than six inches from his cock. Her fingers traced up and down the sides of his shaft. When I approached, I expected to see Ken's eyes shut. He always did that with me to concentrate on the feelings, but this time he was watching, memorizing each detail of his new partner. I sat next to her and our hands folded together once again. \"It was hard to wait,\" she explained. \"But I've only given a couple kisses.\"\n\n\"Where?\"\n\n\"Right here.\" She lifted Ken's cock delicately and placed a soft kiss on the underside, right at the top.\n\n\"That's the best spot. For him.\" Ken's erection was almost pulsing he was so excited. If we had been alone, he would have been carrying me away already, but, with Sara here, he was on his best behavior. Or maybe he just couldn't carry us both.\n\n\"This is my favorite spot,\" I told her and traced a circle around his helmet. I took my hand away and Sara repeated, feeling that smooth, soft skin.\n\n\"Yeah,\" she answered.\n\n\"He has a hip thing, too. On the side here.\" I licked up his hip, making that whole side of his body twitch.\n\nSara just smiled.\n\n\"It's like your back-of-the-knee thing,\" Ken said a bit defensively.\n\n\"I'm sorry. I'm kind of showing you off. I like sharing you.\"\n\n\"I do, too,\" Sara said squeezing my hand. Something in the back of my head told me I should be jealous, but I just couldn't get that way. Instead I just wanted to start. Ken had earned a lot of husband points.\n\n\"How do we both do this?\" I asked Sara.\n\n\"Bunch of ways.\" She placed a couple fingers on the tip of Ken's rod and guided it downward. \"Try kissing me.\" I lifted my head over his shaft to get my kiss, but she shook her head. \"No, like this.\" Sara opened her lips and placed them right on Ken's erection, making Ken catch his breath. Then she waited. For me. This should be interesting.\n\nI fell on his other side moving my lips to Sara's with Ken sandwiched between us. Our lips could just touch if we opened our mouths wide. Sara's tongue snaked underneath Ken towards me. I met her and our tongues wrestled right on the underside of Ken's cock. His knees suddenly collapsed before he caught himself.\n\n\"Sorry,\" he almost grunted out. I was grinning at the effect and when I caught Sara doing the same, we attacked each other.\n\nOur lips and tongues swam together, keeping Ken's almost purple member as the barrier. We slithered up each side of him to the tip, where our tongues would dance together for just a moment, and then slithered back down. Sharing kisses with Sara like this was so delicious we kept it up long past the time Ken wanted more. He was moaning softly, his eyes closed now, lost. He wanted to thrust \u2013 he always did when he felt like this \u2013 but he couldn't with our current ministrations. With one more sexy lick of Sara's face, I slid down to put my mouth on Ken's sack, gently tossing a ball with my tongue. Sara took the cue and her mouth wrapped the tip of his shaft with her gorgeous soft full lips. My fingers snuck up to his rear, tickling him. Instantly, Ken was thrusting unable to help it.\n\nI turned my attention to his hip and licked quickly over his twitching spot. Sara took his thrusting in style, her tongue on the bottom providing a landing pad for him to glide in and out of her. My free hand reached out to touch her, a thanks. Her free hand caressed my knee to tell me no thanks were necessary. To speak to a friend like this so easily again....\n\nKen's hands wandered down to Sara's hair as if he was going to grab her, but with a cry of delicious frustration, they wandered away. He was close, but I wanted him over the edge. This wasn't foreplay. I wanted an explosion. I moved my head next to Sara's and she instantly guided him into my mouth. Her hand was then sliding up and down the part of Ken I just couldn't get in. She seemed to quickly figure out how much I could take and placed her fingers in a ring right at that point. It was brilliant. I picked up the speed with which I took Ken, because I could do it now with no fear of gagging. Ken seemed to notice and started thrusting harder than he ever did normally. Sara's cheek was suddenly pressed to mine. With amazing skill, as Ken slid out of me, she gently guided him right back into her mouth. Then back in mine. I was stunned.\n\n\"Holy fuck, Ashleigh,\" Ken said in a deep baritone.\n\nSara kept the motion going for us. Ken's cock out of me and in to her. In me. In her. Over and over. Mouth to mouth. Ken's head was tossed backwards now and small grunts floated down to us. He was so close. Come on, baby, feel good, feel good. I sucked and licked as quickly as I could when he was in me. Then I tickled Ken's ass again.\n\nBam.\n\nHis come shot out as he slid back into my mouth, but his momentum carried him right back out as his knees buckled again. He continued coming as he struggled to hold himself up with his hands, hitting me on the neck and chest, Sara on her arm, and then dripping down onto both of our entangled legs. Poor Ken was about to fall, his face scrunched up in one of those expressions which seem adorable and sexy while aroused, but silly any other time. I immediately pulled my slumping man on top of me, wrapping my arms and legs around him, almost cooing in his ear. I could feel him still throbbing against my leg. I always thought of him as so strong and independent and the fact that I could make him unable to even stand was the greatest turn-on in my life.\n\nWe all lay on the bed quietly, Ken on top of me breathing heavy, Sara to my side watching us and glowing. As I caressed my husband, my lips searched for Sara. After one slow lingering kiss, we just stopped and smiled at one another.\n\n\"Is this anything like your usual appointments?\" I whispered to her.\n\nShe shook her head not two inches from mine. \"Not a bit.\"\n\n\"I wish you could teach me everything you know.\"\n\n\"It's your turn,\" she said instead.\n\n\"To teach?\"\n\n\"Uh-uh.\"\n\n\"To moan,\" Ken explained as he rose off my body.\n\n\"It's not necessary. This has been wonderful,\" I told them honestly.\n\n\"It may not be necessary,\" Sara said reaching for my lips again with hers. \"But it'll be a lot of fun.\"\n\n\"A lot of fun to-\" Ken started.\n\n\"Kiss you,\" Sara interjected.\n\n\"All over.\"\n\n\"And over.\"\n\n\"Again,\" Ken continued.\n\n\"With our tongues.\"\n\n\"I think so.\"\n\n\"Your husband is very smart,\" Sara concluded.\n\n\"Thanks. I call left leg.\"\n\n\"Awww...,\" Sara pouted cutely. \"Well, the right one looks pretty yummy, too. I'll make do.\"\n\n\"Everything is yummy.\"\n\n\"I'm not leaving until I test that out, Kenji-san.\"\n\nI watched the two of them so pleased with themselves. I could only shake my head. Why wasn't I jealous? Why wasn't she jealous? Why wasn't Ken trying to push Sara away? Rational people should be jealous here. After all, I had been clear with Ken. I was afraid I was lesbian, and we both knew what that meant. Ken had been clear, too. If I would be happier with another, he was going to help me find that other. The idea still choked me up. I would be thankful to him for the rest of my life no matter how things turned out. I needed to know who I was. Now.\n\nI reached out to Sara who quickly took my hand. I then ran my foot along Ken's side to get his attention.\n\n\"Less talk, more action, huh?\" Kenji joked.\n\n\"You betcha. My body's still pretty wired.\"\n\n\"Ken, do you mind if I show Ashleigh something?\"\n\n\"Go ahead, as long as you don't mind me watching,\" he replied with a grin. But then he noticed I had become more serious. \"You know I am here or gone as you want me, okay? This is your night. I'm just riding along.\"\n\n\"I want you here, Ken. My night is your night. What did you want to show me, Sara?\"\n\n\"Have you ever heard of tribbing?\"\n\nI had to shake my head. \"What is it?\"\n\n\"Just stay right there. Or maybe a little closer to the head of the bed, so I don't fall off.\" I scooted as instructed. \"Ken, once we are set, please join in however you can.\"\n\n\"I feel like we are planning something big. My idea of sex was always just to go at it and see what happens.\"\n\nShe laughed and took one of my calves, guiding my legs apart. She placed her bottom between my thighs so that she was facing me. Up, up, my right leg went at her guidance and with one more squirm, her leg folded over my torso and our mounds were together. I could already feel her, so soft against my own flesh. She supported herself so that she could look at me and then without a word, moved her pussy against mine.\n\nOh.\n\nIt was kinda like when Ken used his hand to cup me, but different. She moved against me again. I could feel her moisture on my legs. Or was it mine? I felt my lubrication gathering quickly there. I felt her moving again and this time I met her with my own little thrust. She smiled at me and bit her lip.\n\n\"I was sure you'd like this.\"\n\nI slid against her again, not waiting for her this time. She was right. She lowered herself on to the bed and together we searched for our beat. I closed my eyes and felt the music we had danced to earlier still in my head. A slow steady trance. My hips twisted to it and I found Sara doing the same. A twist, a turn, a thrust, letting the rhythm take us, letting our bodies take us, lost in each other. Her labia met mine and I felt like they were kissing. I smiled a bit as I imagined a tongue inside my vagina which slipped out and tickled Sara, but the idea vanished as the feelings rose. I did like this. I was covered in wetness. Beyond damp. I could sense it all over my pussy and thighs and seeping onto the bed. The best part was that I knew it was ours. I never knew you could be so close to another woman. This was what I wanted so bad. To feel this connection, this intimacy, this openness with another woman. I had missed it so much.\n\nOhhh!!\n\nI didn't expect that moan to be so loud, but I hadn't felt this way in a long time. Not better than what Kenji did to me, but different. She was so wet on me. Thank you, Sara, thank you. Oh, yes, yes, thrust just like that. Oh, I hope you can get my clit like this. Uhhh....\n\nOur hips were in the air, not even touching the soaked sheets, sliding together over and over, but Sara never let us lose contact.\n\n\"Unghhh, unghhh, unghhh.\"\n\nWere those my moans or hers? They were everywhere. Filling my mind and my heart.\n\nI was talking. What was I saying?\n\n\"Yes, yessss, Sara, more, ohhh, ohhh, Ashleigh, baby, mine, more, Ashleigh, Sara.\"\n\nNo, that wasn't all me. Some of that was her. Oh my sweet, sweet Sara.\n\n\"Faster, more hard, oh no, don't slip, ohhh.\"\n\nI opened my eyes and found Sara sitting up again, her face alive and lost, her eyes fixed on me. She bounced and somehow something brushed my clit.\n\n\"Aaaghhh!\"\n\nI should have warned her I was so loud. We always had to close the windows at home so people didn't hear me.\n\nBut the rubbing on my clit would come and go. It was going to kill me.\n\n\"I need- I need-\" I tried to tell her, but I couldn't get more out. Suddenly, there was a push and Sara was locked onto me, pushing so hard against me that I was slipping back to the wall. I caught her head thrown back in ecstacy. I felt even more moisture and her hips thrusting over and over in short sharp bursts. Oh god, had she come? Of course she had. Of course, she had. With me. I loved her so much.\n\n\"Oh, fuck. Oh, Sara. Ohhh.\"\n\nMy head was now butting against the four poster bed's mahogany headboard. The hard sensation combined with Sara so soft and lovely against the other end made my head swim. I discovered Sara's slender leg next to my head. Another perfect part of a perfect woman. I kept licking for it but could never reach it. I needed to show her how I felt. Please, just a little closer. Thrusting, grinding.\n\n\"Aggh, aaagh, uhhh, uh, uh, uh. Aaaahhhhhhh!\"\n\nHer finger was right on my clit, moving in circles.\n\n\"Oh yes, yes, Sara. Almost, please....\" I wanted to scream, just, just anything to release. \"Ken, Ken, Ken,thank you, thank you. I love- I love- this, her, you. Ken, Ken, ohhhhhhh!!! Fucccckkkkk!!!!\"\n\nMy eyes were bolted open and all my muscles clenched at once, sending me into an almost fetal position. An orgasm like I hadn't had in months. I had to wipe tears from my face as the shocks passed through me. As I regained some control, my arms searched franctically for Kenji.\n\n\"Where are you, baby?\" I implored and then he was there, holding me, stroking my face. And where was Sara? Of course, she was still between my legs. \"Please, Sara,\" I called to her. But I could only hear her panting as she lay collapsed on the bed.\n\n\"Soon as I can move,\" she said.\n\nI caressed her legs as I could, just wanting to touch her, any part of her.\n\n\"Where were you?\" I asked of Kenji.\n\n\"In awe,\" he said.\n\n\"You were supposed to join in.\"\n\n\"I had meant to. I had all these ideas, but the look on your faces. I couldn't move. It was too wonderful to touch.\"\n\n\"I wish I could have made you feel good somehow, too,\" I told him. I hated it when he wasn't part of something.\n\nKenji gave a light smile. \"Ashleigh, I came all over the place about the same time as Sara.\"\n\n\"Ohhh. Touching?\"\n\n\"Hardly needed to. All mental. And then the way you looked at her as she was crying out.... Damn, yeah, I touched.\"\n\nI didn't know what to say, so I just kissed his face a bunch of times.\n\n\"Sara, how are you doing, honey?\"\n\nHer breathing was still hard. She still didn't move while answering. \"You aren't supposed to last that long.\"",
        "\"You kept slipping off the spot,\" I apologized.\n\n\"Worked for me, I guess. Maybe three times. It's hard to tell once you hit the peak and start riding it to say what's what, you know?\"\n\nI understood. It seemed like we always understood each other. That's how friends are supposed to be. I was ready to declare her my best friend in the world despite the fact we had met only hours ago. She slid her legs a bit, breaking contact between our pelvises, but in doing so our labia slid across the other's leg. She giggled at the touch. How beautiful. I wanted to cry out. I was so excited to have a best friend again. \n\nA best friend.\n\nA friend I could imagine kissing and touching and sharing my body with, but... a friend.\n\nSo that was the answer? That simple? I had desperately needed a friend other than my husband? My mother had said that me telling someone they were competent was my highest compliment. But I did have another way. I liked to thank people with my body. I had always had sex to show someone I cared about them, though for seven years now only Ken had been able to receive those thank yous. Had I gotten to the age of 33 without being able to tell someone how I felt about them without using sex? How strange?\n\nKen was still caressing me, staying close.\n\nHow did I tell him that I knew now, that if he still wanted me I needed no one else? Immediately I imagined mounting him. Then he would know. Oh my. I did have an issue.\n\nSara was stirring, running her fingers through her hair. I blew a kiss to her, which she elaborately caught and proceeded to apply multiple times to multiple parts of her body until I giggled. \"Water,\" she explained, crawled off the bed, and disappeared down the stairs.\n\n\"Isn't she the most beautiful creature you've ever seen?\" I asked Ken, wondering if she would understand when I told her what I finally knew. Ken didn't say anything to my question though. \"No?\" I asked.\n\n\"No.\"\n\nI looked up to him, but he wasn't looking at my face. He was looking at a stretch mark on my thigh from when I had gained weight and then lost it again, at a small fold on my belly that I had never been able to get rid of, at my breasts which were just starting to sag a little, while Sara's smaller ones were still round and pert.\n\n\"No, she's not,\" he said again so quietly I could barely hear him.\n\nI reached up to caress his cheek and felt a little prickly stubble. His beard grew so fast. How could I tell him? \"Stay here,\" I instructed and got off the bed, looking around. There was the old foil wrapper from the first night's chocolate. I took it and rolled it up into a snake shape. The ends could be bent around to meet each other and I pressed them together. I took the ring back to the bed and descended to one knee in front of him.\n\n\"What-\" Ken started before I put a finger to my lips.\n\n\"Kenji Misagi, I always want you with me for the rest of my life. Will you marry me?\"\n\nHe didn't answer for a moment and I looked down at the foil ring, wondering if it was too late, if I had asked too much of him. Then I felt a tear splash onto my hand. I looked back up to Ken. Ken didn't cry. Not in six years. And only one tear had escaped his amazing self-control. But it was a tear for me.\n\n\"I wasn't sure,\" he said.\n\n\"I didn't know what was happening to me,\" I tried to explain.\n\n\"What about all this?\"\n\n\"Second best day of my life,\" I told him.\n\n\"The sale at Nordstrom's shoes?\" he joked.\n\n\"The bus ride.\"\n\nHe nodded. \"That was my best day, too. But maybe this is now it.\" He offered me his hands and lifted me up. \"I do,\" he said with his deep baritone that made me tremble.\n\n\"As do I,\" I answered and kissed his hair.\n\n\"Sara's going to have to get back up here quick before we are a blubbering mess.\"\n\n\"I'm here,\" Sara responded, standing on the next to last stair.\n\nI wanted to run to her, but I wasn't sure she'd still want that. From the red eyes adorning her face, she had clearly seen us.\n\n\"That's how it was supposed to end,\" Sara spoke, coming up the last step. \"I didn't know how to get there, but that's what I wanted.\"\n\n\"You wanted this?\" I asked.\n\n\"I'm a better person than I once was,\" she answered. \"Is it time for me to go?\"\n\n\"Please don't,\" Kenji replied quickly.\n\n\"I want you here with us until the last possible moment,\" I told her bluntly. \"If you'd still want to stay.\"\n\nShe didn't think; she just nodded.\n\nThe three of us continued to make love for a long time after that. Most of the details have faded, but certain images stick in my mind, all that I now have of her. Some of them are tender; some of them deeply sexual; most of them both. I remember Sara and I in a sixty-nine with me on top, and then Ken entering me right above her head. He says that she would lick him as he slid out.\n\nI remember Sara so happy and desperate, as she lay on me and took Ken inside. That was a moment I could never have imagined. He had entered so slowly and Sara and I held each other such that I felt her eyelashes flutter against my cheek. Then I felt his knees against my legs rocking back and forth as he slid in her. She smiled at me and kissed my forehead until the pace picked up. Then she had apologized to me, telling me it felt so good, as her pelvis slid back into Ken with each needless \"sorry.\" But now Ken was doing the thing I loved most, sliding all the way until the tip barely remained inside and then sliding all the way home. Sara's eyes went wide and her mouth hung open, with moans and cries flying past my ears. As she clung to me moaning and laughing, my hand slid between her legs and found her delightful clit. Then all was squeals and digging fingernails and Ken's face contorting and groaning and the feel of Sara's tongue on my face and Ken's come on my fingertips as I caressed her lower back. I almost cried from watching her with Ken. I never knew I could share this part of my life with someone else. It was like watching myself.\n\nI remember only feelings from when Ken was in my mouth and Sara's fingers were inside me, the feel of the thrusts from both sides.\n\nI remember a lot of sweat. Then later her taste again for a long, slow while, savoring the experience one last time in my life.\n\nSome time after Ken's fourth orgasm he fell asleep, leaving Sara and I to ourselves. We wanted to talk the hours away, sharing ever secret. We wanted to make love until our bodies could take no more. But more than any of that we just wanted to be together for our one night, not letting a moment go. As we lay curled together on the bed, I could still imagine another me in which I had met Sara first and we were one. But it was just an alternate me, and I wished that other woman well in her other life. The little film clips laying about the room flew together, united into a new story, and passed out of the window into the night.\n\nSara started to say something but stopped.\n\n\"What?\" I asked as I brushed a hair from her forehead, our bosoms pressed together.\n\n\"It's a stupid thought.\"\n\n\"Tell it to me.\"\n\n\"It's so stupid. I was just thinking that one regret I have is that I don't have any of my toys. I have a double dildo that I would have loved to share with you.\"\n\n\"Is that your favorite?\"\n\n\"Sometimes. I would lie on you and it would be in both of us at once. Isn't that the stupidest thing to say? But I'm sad that it won't be one of our memories.\"\n\n\"I wish we could have had that, too.\"\n\nWe were silent for a while until Sara spoke again. \"I'll also miss picking you up at work. I think it would have been nice to do that. I want to pick someone up at work.\" I kissed her cheeks. That did sound lovely.\n\n\"I'm a horrible cook, though,\" I told her. \"You didn't miss out there.\"\n\n\"I can't cook either,\" she said quietly. \"I can iron.\"\n\nI kissed her eyes this time and we were silent again.\n\nAs the sun crept through the room, Sara's breathing had changed and she was sleeping against me. I continued holding her as I watched the golden day rising over the city of sin.\n\n---\n\nI awoke to a slight jingle of keys. My eyes opened, and I sat up to find Sara below, collecting her things. She had a new pair of shorts on with her maroon top, and she moved about almost silently. I stood as she walked towards the door. She heard it, turned, and mouthed a word to me, \"Note,\" and pointed at a small envelope on the coffee table.\n\n\"Thank you,\" I mouthed back to her, not sure what to say to a love I would never see again. She looked at me for a moment longer, patted her bosom to indicate her heart was racing, and ran out the door.\n\nI stood silently watching the space she had left. If she felt anything like I felt, I was ripping her insides out.\n\nI caught her in the hallway waiting for the elevator, my body draped in a red and gold comforter.\n\n\"Ashleigh!\" she exclaimed seeing my semi-nude body running to her.\n\n\"I'll be quick,\" I told her. She looked around but quickly forgot to worry about other people coming out.\n\n\"We can't stay together, Ashleigh. You know that. I can't shut it off around you.\"\n\nI nodded, still short of breath. \"I just wanted to tell you that you've changed my life. If I can ever, ever help you, call me. This weekend does not have to be only about me. I am always there for you.\"\n\n\"It's not necessary.\"\n\n\"I know. But... I'm always there if you can't do it alone.\"\n\nShe seemed a bit shaken as the elevator door opened.\n\n\"Good bye, Ashleigh.\"\n\n\"Good bye, Sara,\" I said and soon the elevator doors closed, taking her away.\n\nCurling up on a silk sofa with my comforter, I opened the note she had left in the room.\n\n\"Thank you for this time. Now I know what I am looking for.\"\n\n---\n\nIt was after Ken and I had blown the last of our tab on silly appetizers and wine that we decided to step outside of the hotel for some fresh air and a little people watching. Over at the MGM Grand, I slapped Ken's arm and did my best not to point at a cowboy crawling down from a huge pickup covered in flames. He handed a wad of cash to the valet, just because he could it seemed, and reached back up for his date. She came out all leg, legs almost as nice as Sara's, I had to admit. The legs were attached to a Dragon Queen \u2013 a mane of black hair to her ass, a tiny dress of red and gold dragons, 4\" heels, and green fingernails almost as long. Heads turned and watched as she strutted her legs and cleavage across the driveway towards the hotel entrance.\n\nI was about to pull Kenji out to the street when the Dragon Queen sighed and rolled her eyes to face me. And there, under a layer of pink glitter eye shadow and an inch of mascara was Sara. Or Gui-Feng. Or somebody.\n\n\"I am what you desire. One night only.\" That was her ad.\n\nShe had been exactly that. Everything I had wanted and dreamed of. And now, tonight, she was being what this man wanted. Did I know the real Sara and this was a fake one, or was it the other way around? Or were both of them roles she could play? How much of our night had been written beforehand?\n\nSara noticed me and quickly glanced at the cowboy to make sure he wasn't looking. Then for just a moment, she stopped chewing her gum, her face cleared, and her hand raised just slightly at her hip to wave to me. As my smile just began to touch my lips, her cowboy was off, and she sacheted right through the doors, making half the men in the area watch her ass as she went.\n\n---\n\nIt took two years for me to find the song that Sara and I had danced to that night at GirlBar. Now, the first Sunday of each month, when I've gotten back from the dance studio and checked that Ken got our little Kimmy safely asleep, I will put the track on repeat and sit on the floor, my back against the sofa, to think of Vegas, offering my thoughts and silence to the woman I won't have. Sara hasn't called yet, and I don't expect she never will. As the beat slides into my heart, I wonder where life has taken her. Is she still waiting for her long lost love who will never return, or is she sitting with her hand wrapped in her partner's on the bus to the North Shore?"
    ],
    "authorname": "M-Y-Erotica",
    "tags": [
        "lesbian",
        "wife",
        "couple",
        "asian",
        "hawaii",
        "escort",
        "vegas",
        "redhead",
        "orientation",
        "bisexual"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/north-shore"
}