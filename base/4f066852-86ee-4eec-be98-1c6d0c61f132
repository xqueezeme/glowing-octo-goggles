{
    "title": "My Voyage of Submission Ch. 09",
    "pages": [
        "In the chapter the ship is crossing the Atlantic and making a rendezvous with a Navy ship before securing the freedom of the kidnap victim. This chapter contains oral, anal, interracial and lesbian sex. It contains slave discipline, primarily orgasm denial. Thanks to JohnnyGalt for his editorial expertise. All mistakes remain mine. No STD's or COVID-19 in my fantasy world.\n\nMy Voyage of Submission, Ch 9, Atlantic Crossing\n\nMaster woke us at 1300, and we were still groggy.\n\n\"Damn,\" Francesca said, \"we missed our flight, Belle. Why didn't you wake us earlier, Master?\"\n\nHe just looked at her.\n\n\"I'm sorry, sir. It wasn't your problem. Now we can't leave until tomorrow and won't be getting into Ocala until three AM what with landing in Miami and driving and I have to be back to work on Monday morning.\"\n\n\"It wasn't my problem, but I have a solution, if you'd like to hear it.\"\n\n\"Please, Master.\"\n\n\"I've arranged for a private jet to fly you directly to Ocala, where you will find a car from Hertz rented in your name. You should be home in bed by ten. I've arranged for your vehicle to be driven from Miami to Ocala sometime in the next couple days, so I'll need your car keys. You'll also find the seats to have a lot more leg room and you might be able to sleep on the plane. Leo will fly you to the airport tomorrow at 0700. You will reward the flight crew with oral sex. You don't get any.\n\n\"There will be other stipulations made on your life now that I'm responsible for you. We'll discuss those after you've said goodbye to Professor and Mrs. Kline. They are disembarking shortly to visit some of her family. I felt sure you especially, Beth, would want to say goodbye, so put some clothes on and wish them farewell. We'll discuss your other failings in the playroom after you've had something to eat. By the way, the daily and monthly drawing was held this morning, and Beth, you need to take care of Edgar's reward for his bodyguard services last night. This should keep you busy the better part of the afternoon and evening. Get to it.\"\n\n\"Yes, Master,\" like three parrots.\n\nWe still didn't need to put on much, but I did want to brush my teeth. Ten minutes later, I was saying goodbye to both of them.\n\n\"So Professor, I assume from all the that's happened in the last week, you no longer think I'm mentally ill or suffering from Stockholm syndrome?\"\n\n\"I think I can safely say that,\" he laughed. \"Joshua is a much nicer and kinder man than I thought he'd be, considering. I think you're fine and I needn't worry about you.\"\n\n\"How are you both doing? Nothing to be concerned about in your marriage is there?\"\n\nOliva answered, \"No, I think we're both good. It was definitely a sudden change in our marriage, but the changes weren't bad as those things go. We're actually having a lot more sex with each other than we were before this trip. I'd have to say I love my husband more than ever and I'm looking forward to the future with a lot of anticipation, and not a few tingles.\" She smiled at me.\n\n\"I'm happy for you both. You don't mind I had a crush on your husband?\"\n\n\"No. You behaved yourself and never did anything about it, which is all that really needs to be said. I think we'll both miss having sex with you. You're very talented.\"\n\n\"Some of it is practice, but I think much of it is how much I want to be of service, to be pleasing to people, to make them feel better. I really strive to do my best for people like Sahar and Fatima, knowing how awful life has been for them and wanting to give them something special to make up for what's happened. I can't make up for the past, but perhaps give them something to look forward to in the future.\"\n\n\"I know. I admire Joshua for many of the same things. He really wants their lives to improve. He doesn't have to care, but he does,\" Herman said. \"It's a rare quality in a person. By the way, I put Fatima in a trance yesterday while you were being painted, and might have gotten some more details about Mahmoud's location from her. Joshua has my notes.\"\n\n\"Now you know why I wanted to remain his forever.\"\n\nOliva patted my back. I hugged and kissed them both, slipping both of them a little tongue.\n\n\"Be careful,\" Herman warned. \"It sounds as if you're messing with some dangerous people now.\"\n\n\"I will. It's nice to know I've got so many capable people on my side.\"\n\n\"Hopefully, you'll never need them.\"\n\nMaster hugged both of them and kissed Oliva, though I think he left the tongue out of it. Belle and Francesca said quick good-byes as well. Francesca reminded them they lived fairly close together and if they wanted to get together, they'd both be willing. Maybe chat about the trip. I think Francesca was just looking forward to fucking Professor Kline again, but I didn't blame her, and if she had permission, it was none of my business.\n\nAfter they left, Master told us we had a half hour to eat and then to meet him in the playroom. We rushed down to the mess, had a sandwich and beverage and reported to the playroom promptly at the allotted time.\n\nMaster had three Slave Trainers in the chargers and three more which he handed to us.\n\n\"Put these on.\" He waited until they were on and buzzing merrily away before he continued as we dressed again. \"Except when Beth is rewarding the Employee of the Month, they will stay in you and on. When it dies, you will put on another one and charge the other. You two,\" pointing to Belle and Francesca, \"may remove yours at 2300 tonight so you can get sufficient sleep before you leave. Because you get to take yours off at eleven, you'll receive fifty swats tonight and fifty more tomorrow morning before you leave. The individual who returns your car from Miami will get to fuck you both, then give you fifty more swats apiece.\n\n\"Beth, you will be wearing your slave trainer for twenty-seven hours, interrupted only for the aforementioned reward. You will sleep in the cage under my bed each of the next two nights. You won't get spanked because you'll be wearing it for over a day.\"\n\n\"I'd rather get spanked, Master.\"\n\n\"I know you would, which is why you won't. I think the only punishment sufficient for cumming twenty-seven times without permission, is not cumming for twenty-seven hours, no matter how much you want to cum, hence the punishment.\"\n\n\"Yes, sir.\" I was right, screwed, or not screwed, as the case might be. No sex for awhile. At least it wasn't twenty-seven straight. I was fucking someone for six hours, someplace along the line.\n\n\"Belle and Francesca, you are not to give each other orgasms for a week, starting now. Once you leave the ship, you will get the fucking from the driver returning your car and you may each masturbate once a day at ten PM local time. That is the only sex you get for one week. After your week is up, I'll have made arrangements for you to have sex with others. Mistress Layton will be assisting with this. Expect to spend some time on her farm serving the hired help. In return, as a reward for your fuckings, you will pleasure her as she directs. You may also begin having sex with each other again, but only two orgasms apiece per day.\"\n\n\"Yes, Master, we understand.\"\n\n\"Are there any questions?\"\n\n\"Who won the drawings, sir?\" I asked.\n\nHe consulted some notes. \"Belle got Hannah, Francesca got Rafael, Beth got Reggie for the daily and Henderson for the monthly. Go take care of your responsibilities. Beth, take care of Henderson after supper. The daily winners know you're not to cum, so expect to provide oral sex without relief yourself. Beth, if the men wish to, they may cum on your face.\"\n\n\"Yes, sir.\" My reward for letting Edgar see me take Tito's load on my face. I can't say I regretted it, even so. It was something different which I hadn't done with Master previously. Might mean more showers, though.\n\nWe disbursed, looking for our responsibilities, each of us knowing it was going to be a long time before we were allowed to orgasm. I found Reggie in the galley and we stepped into the mess before I went to my knees for his blowjob. As expected, Reggie wanted to explode all over my face. I held his cock aimed at my face and felt his cock pulsing in my hand as he splashed me with his hot splooge. He handed me a wet towel afterward to wipe my face off. He'd been careful not to get it in my hair, which was nice.\n\nI found Edgar in the gym with a number of other special forces types and Roberta, giving self defense instruction to the six freed slaves. They all had their iPads out while listening to Edgar. They each had AirPod Pros in their ears so they could hear the explanations without having a cacophony of different languages chattering at once. I listened as he spoke.\n\n\"This ship has been tasked with a huge responsibility,\" Edgar said. \"A young woman, a Peace Corps volunteer, was kidnapped by Mahmoud for ransom. We're going to be handling the arrangements for paying the ransom for her parents and retrieving her. This means we'll be making contact with Mahmoud or his agents. You freed slaves will be kept hidden away while they're aboard. You should be okay as we'll be taking every precaution to see to your safety, but we want you to be able to defend yourselves just in case. You'll be issued firearms before they're allowed aboard. Stay in your locked room and don't open the door for anyone but Fatima. She'll be given a code word so you know you can open the door for her and it's safe. This means for the next week, you'll be practicing shooting pretty much constantly except for Fatima, who has other duties to perform, but has had some of this training before.\n\n\"You'll have several different instructors working with you each day, but expect to be here roughly twelve hours a day practicing. While we want you able to defend yourselves, we also don't want you accidentally shooting yourself or someone else you don't want to be shooting. If you do well over the next four days, we'll give you a live firearm to fire so you can get used to the noise. Any questions so far?\"\n\nWhile each of the women reacted negatively to the news there would be a slaver aboard, the ones who recognized Mahmoud's name were the most fearful, particularly Farah, who had just been freed a couple days ago. Sahar saw her shaking and spoke a few quiet words to her which seemed to help.\n\nThere being no particular questions to start, Edgar turned it over to Roberta who started explaining the shooting gallery and how to operate it, Fatima helping if there was anything the translation programs had difficulty with. Edgar took my hand with a smile.\n\n\"Joshua wants your training to accelerate as well, both nine MM and rifle. When we're out at sea, you'll be shooting live rounds off the stern room.\" I nodded. \"I've been waiting much of the day for you to wake up, Wonder Woman. We'll be heading to my cabin for my reward for last night's guard duty.\"\n\n\"Did you get much sleep?\"\n\n\"Not much. I only slept until 1000, but I'll be okay. Let me ask, do you enjoy taking a load in the face?\"\n\n\"It's not my preferred method. I like swallowing more, but I was trying to do different things per Master's instruction. Variety is the spice of life, don't you think?\"\n\n\"Had you done it before?\"\n\nI told him about my bukkake at 'The Woodshed', though I'd been able to wear goggles. \"Mistress Layton thought I should be prepared for anything a Master might like to do, since we had no idea what my Master might want. He sent out a questionnaire to the applicants which covered just about everything a Dominant and submissive might do. It even included things Master wouldn't do, trying to weed out people interested in the truly bizarre.\n\n\"I didn't exclude taking a facial from my slave agreement, because it was bearable, but like I say, not my preference. On the whole, it's kind of messy and I tend to be tidy myself. No one wants to sleep in the wet spot.\"\n\nEdgar laughed. We reached his room. Ethan wasn't present, helping Roberta in the gym.\n\n\"How do you want to finish? Down my throat or in my face?\"\n\n\"I haven't made up my mind yet. I'm still thinking about it.\" He paused. \"Were you serious yesterday when you talked about Fatima?\"\n\n\"Serious as a heart attack. You're not the most handsome man aboard, but you have a certain rugged appeal. Fatima seemed to be responding to you, in my opinion. I don't know if it was more than that, or if she'd still feel the same considering you kind of dumped her. She did appear to respond to you.\"\n\n\"What's it like sharing someone with another person?\"\n\n\"I have no problem with sharing, as I like the ones I share Master with. I'm having sex with them too, so it's not like I'm excluded. I tend to like everyone aboard. You're like my family. I know some of it is due to my submissive nature. I want Master to have all life has to offer, including other people. Anything which gives him joy and pleasure, gives me the same, but isn't it a purer kind of love?\"\n\n\"What do you mean?\"\n\n\"If I truly love someone, don't I want to see them happy? If there were something I couldn't give him, do I resent the people who can give him those things or be happy because someone can?\"\n\n\"What can someone else give him you can't?\"\n\n\"Variety. Even I enjoy variety. Everyone is different. If you've ever been in a long term relationship with someone, it doesn't stop you wondering what it would be like to be with someone else, even if you wouldn't cheat on them. I think it's human nature. Pierre can give Fatima something you can't give her; his submission. You're too much an alpha male to give her that, which might be something she needs. It doesn't mean Fatima will love him or marry him. It's a happy coincidence I love Master in addition to being subservient to him. I was subservient to Mistress Layton without loving her. It was a very close and powerful connection, but it wasn't love.\"\n\nI started to remove his clothes. \"The thing you need to ask yourself, in addition to whether or not you could share Fatima with Pierre, is whether or not you can give up the perks you're enjoying now, like me. Fatima was exposed to both Catholicism and Muslim religion through her parents, and both religions tend to be more conservative. She had boyfriends before she was enslaved, but Fatima may be a very traditional person underneath. She may want her boyfriend to be exclusive to her, even though she has a slave.\n\n\"Bj\u00f6rn wants Lynn to be exclusive to him except for her slaves, or slaves in general; that wasn't clear to me. If you were to establish a relationship with Fatima, she may not want you fucking around with me or any of the other women. That would need to be something you work out with her. Just throwing that out there.\" The last of his clothes were removed. \"I'm assuming you want to make this last as opposed to getting off as fast as possible.\"\n\nEdgar laughed. \"Good assumption.\"\n\n\"I'll also assume you want me to swallow unless you indicate otherwise. Tap my head three times if you want to give me a facial instead.\"\n\n\"Three times. Got it.\"\n\nI had him lie down on his bunk and gave him the best blow job I could. I couldn't cum anyway, so someone ought to get some pleasure out of it and he'd put his reward off for over eight hours. I stretched it out for thirty minutes.\n\n\"Fuck woman! Let me cum, damn it,\" Edgar finally said. He wasn't tapping my head when he said it.\n\nI took him over the edge and he exploded into my mouth, flooding my throat with his cream, bucking up and down off the bed with each throb of his dick.\n\n\"Just when I'm almost convinced I should give Fatima a chance, you do something like that to make me question my decision,\" Edgar panted, his cock finally shrinking.\n\n\"Don't forget, Fatima was trained as a sex slave. She'll have similar skills as her owner would have wanted her to be pleasing, though she might not have wanted to try as hard for him. At a minimum, she can probably deep throat a cock. If she cares for you, I'm sure she'd do her best to give you pleasure. It might take some time for her to get comfortable with a man again, but Pierre will be helping in that regard; allowing her to trust again as he won't do more than she wants.\"\n\n\"So you're saying Pierre might let her trust men again because he's submissive and won't be pushing her for sex?\"\n\n\"Exactly. He might open her up to all the other men on the ship.\"\n\n\"Damn, you make some compelling arguments.\"\n\n\"I understand submissives and to a certain extent, Dominants. We're all different, but there are similarities.\"\n\nI patted his leg and got up. \"Cripes, I need to cum bad.\"\n\n\"Yeah, Joshua told me what he planned on doing since you didn't ask for permission to cum.\"\n\n\"My fault. I should have thought of it. I know better.\"\n\n\"Different circumstance, kind of flummoxed you. Does it make you resent him?\"\n\n\"Live and learn, and no, I don't resent him. I knew and part of my submission is the control he exerts over me. It's part of what I desire, so it would be foolish to resent him for exercising it. To put wearing this thing in perspective, though, just imagine if I kept doing you for twenty-seven hours instead of thirty minutes.\"\n\n\"I'd have killed myself.\"\n\n\"Jury is still out on whether I'll want to or not. At least I'll get a break when I take care of the Employee of the Month. Please be kind if you decide to pursue Fatima. She's suffered enough for two lifetimes.\"\n\n\"Thanks.\"\n\n\"You're welcome.\"\n\n******\n\nWe had dinner early, at 1700. I was one of the servers, so Master wasn't feeding me. He was feeding Francesca and Belle, being one of the last times he could before they left. I would sometimes moan in frustration when the Slave Trainer cut off leaving me bereft. Sahar wondered why I was moaning, not being able to see the device under my clothes. I told her I'd discuss it later. I think the others wondered as well, but were too shy to ask about it. I'd already changed the Slave Trainer once, and would probably need to do so again fairly soon. I could hardly wait until I had to serve Henderson tonight. He was a nice young man.\n\nAs dinner broke up, Master told me he'd see me around midnight, gave me permission to cum with Henderson, then left me to clean up. Sahar asked me again why I was moaning so frequently.\n\n\"Master allowed me to have sex with other people last night and I didn't ask for his permission to orgasm. As punishment, I'm wearing a device which keeps me on the edge of climax, without letting me have one. I have to wear it an hour for each orgasm I had without his permission.\"\n\n\"How many hours?\" Sahar asked me in English.\n\n\"Twenty-seven.\"\n\nBack to the iPad. \"You climaxed twenty-seven times? In how long?\"\n\n\"About three and a half hours, more or less.\" She looked at me in surprise. \"I told you my slavery was much different than your own.\"\n\n\"And you won't disobey him?\"\n\n\"No. If I disobey, all I am is an immoral woman who craves sex. Without obedience, I have no excuse for my behavior. What are you doing this evening?\"\n\n\"More shooting practice, until ten.\"\n\n\"I'll talk to you tomorrow. Even though I'm not allowed to orgasm, I can still give them to you if Master allows.\"\n\nSahar smiled when she saw the translation.\n\n\"Talk tomorrow.\"\n\nHenderson came to the dining room to get me at 1810. Since his roommate was currently off duty and using his room, we went to the stern room for our sex. The back end was closed up, so no one could see us from the outside. We helped each other undress and he saw the Slave Trainer when I was otherwise naked. As I took it off, he asked what it was.\n\n\"A punishment for cumming without Master's permission. It won't let me orgasm. The only time I'm allowed to remove it, is to have sex with you. You don't know how much I'm craving it right now. This is going to be a picnic compared to the last five hours.\"\n\n\"Why didn't you ask?\"\n\n\"I forgot. We were getting all gussied up before going to a brothel for women. Didn't think of it in the excitement.\"",
        "He saw how eager I was for sex when I climaxed as soon as he started to put his prick in me. I spasmed before he was a quarter of the way in, and it was a good one. I was a live wire for the next three minutes.\"\n\n\"Five fucking hours of being right on the edge of orgasm without being able to cum,\" I gasped. \"God, I needed that.\"\n\n\"That's the easiest time I've ever had helping a woman cum,\" he admitted.\n\n\"You're not done yet, believe me. I'm so on edge right now.\"\n\nI wasn't kidding. I had three more in the next ten minutes, though none as good as that first one. The first few out of the way, I could slow down a little and enjoy him. When he climaxed, he was kind enough to clean up after himself. We had sex for about an hour and then took a break so he could recharge a little.\n\n\"Henry,\" I said, fondling his sack, \"are you still at all interested in the freed slaves?\"\n\n\"Well, kind of. I'm sort of worried about what you said, though. They've had it pretty tough and we don't know how it affected them.\"\n\n\"That's still true. We don't know how it's affected them, but they have iPads with a translation app. You now have the ability to speak to them, get to know them, find out what's important to them. You still can't ask them for sex, but find out what makes them tick. These women were all raised as Muslim and their belief system will be substantially different from yours. They may have been badly damaged by what happened to them, and the only way to find out is to communicate with them; find out if there's common ground.\n\n\"They started out pretty beaten down, but first Fatima, and now Sahar, have surprised me with their resiliency. It appears Sahar has no more interest in men, but she's still interested in sex and she's tough as nails. She was willing to kill us or die if we attempted to enslave her again. She wasn't going to take it anymore. That's two people who weren't going to obey any order they received in a relatively short time. The others may also be stronger than I gave them credit for. They all got rid of their slave jewelry. They don't want to be slaves anymore. Farah may still be working out she's not a slave any longer, but the other three seem to be coming along.\n\n\"They'll be working on firearms until we reach Freetown. Edgar wants them armed in their rooms just in case things go wrong. As a former Marine and a sniper, you can help them with learning to protect themselves. On breaks, help them with their English, so they can learn the language. Talk to them about their values and beliefs, what they wanted when they grew up, the kind of person they were attracted to, the life they wanted to live. Perhaps you find out about them and they're not so different as you might think.\"\n\n\"You think so?\"\n\n\"I hope they're tougher than I think because they've still got a rough road ahead of them, but they have surprised me, and it's been a pleasant surprise. Looks like you're stiffening up there, Henry. Cunt, ass or mouth next?\"\n\n\"Could you just suck it a little longer, then may I please fuck your ass?\"\n\n\"Absolutely. You're so polite and I really like that in a man who's about to fuck my ass. He won't tear it up in his eagerness, but he'll let me have a little time to get used to the feeling of a nice big bat up my bum before banging me hard.\"\n\nI lowered my mouth over his cock, which was halfway to said bat already. I gave him another ten minutes of primo sucking before aiming my ass at him to claim. He took his time and was gentle. I let him know how much I enjoyed it by cumming several times. He finished off and I got a towel from the bar to clean him off.\n\n\"What do you think about Pierre becoming Fatima's submissive?\" Henry asked.\n\n\"What's to think about it? It is what it is.\"\n\n\"But he's a man.\"\n\n\"And men can't be submissive? I'm unsure of your question. Manuel is submissive. Mistress Layton's slave was an Army Ranger and is a firefighter. Submissives come from every conceivable age range, income, race, gender, sexual orientation, just like any other person. It isn't only women who are submissive, it's just more common.\"\n\n\"Doesn't it make both of them kind of sissies?\"\n\n\"Yeah, tell Ranger that, see what kind of a sissy he is. I haven't got it all figured out yet, but it's not a question of a degree of masculinity or toughness. Sam's wife is a deputy sheriff detective. They told me they know of an FBI agent who is. I mean there could be a wide number of reasons for a person to be submissive. I think part of it is a desire to serve.\n\n\"I think that's one of Manuel's reasons. He wants to help people. He was a Navy Corpsman. They went everywhere the Marines went. He'd brave enemy fire to rescue injured sailors and marines. Every time I have sex with someone, I want them to have the best sex I can give them. I put everything I have into it. When I suck your cock, it's the most important job in the world at that moment. I don't even think about my own pleasure. It's not as if I won't orgasm anyway by concentrating on you. I cum easily, but it's not what I'm thinking about. I don't think I'm a sex expert who knows more about sex than anyone else. I think people enjoy sex with me because I'm devoted to pleasing them above all other things. That may not be the reason other people do it, but it's part of what I enjoy about it.\n\n\"That's why when I give lessons to people, I tell them to forget about sex for themselves. If they concentrate totally on what they're doing, to the exclusion of anything else, they'll be better lovers. Don't worry about getting sex. Give of yourself and if you're sufficiently pleasing, people will want to have sex with you because you've made them the center of your universe.\n\n\"That's why Chaney will never be a really great lover, no matter how technically proficient he is or how many panties he gets himself into. He's concerned more with his own pleasure than his partners. Women are another notch on his bedpost and not the focus of his efforts to be pleasing to them.\"\n\n\"Can I get a lesson from you now?\"\n\n\"What kind of lesson?\"\n\n\"A pussy licking lesson.\"\n\n\"It's easier if I have a pussy to work on.\"\n\n\"Talk me through it with you.\"\n\n\"Oh you sweet boy. I'll do my best.\"\n\nBefore he started, I told him everything I knew about pleasing a woman. To remember there was more than one erogenous zone to concentrate on, to pay attention to visual and auditory cues given by their partner about what they were enjoying, and not to think one thing was the secret to every woman all the time. To take his time and make sure they were his entire world.\n\n\"Think about what you've really enjoyed about oral sex with me and apply it in the opposite direction. Take your time and ignore the erection you're sure to get as you're loving me. Your one and only concern is making me feel good. Take at least ten minutes to get to the good stuff. Just explore my body and see what makes it tick.\"\n\nTo make it easy for him, I didn't try to be subtle. When he did the right things, I made sure he could read my cues, moaning loudly or squirming in unmistakable ways. He took twenty minutes to send me over the top.\n\n\"Oh, fuck, Henry. That's incredible. Keep it going. You've got my motor revving now. You don't need to delay the next one or the one after that. I'm going off like a string of firecrackers now.\"\n\nI wasn't just saying it either. He was doing a spectacular job, about as well as I might expect from someone with his level of expertise. I popped off three more times in rapid succession. When he pulled his face out of my crotch, it was coated in orgasmic juices.\n\nI pulled him up and kissed him, licking my cum off his face.\n\n\"Henry, are you sure you're not a lesbian in disguise? That was great. You're a fast learner. If you do that to any woman, you will have her eating out of your hand.\"\n\nHe laughed. I reached down and found his cock was nice and stiff again. \"Men like you should be rewarded, Henry. Do you mind if I ride you? Let me do all the work this time. Just lay back and enjoy it. I want to fuck your brains out.\"\n\nHe laughed again and got on his back. I slowly lowered myself over his cock. The fuck Tito got last night was the fuck Henderson got tonight, nice and slow, and I squeezed down with my Kegel muscles every time I rose up on the upstroke, to suck the cum out of his balls. He'd cum often enough and I went slow enough to keep him on a high plateau for a long time. Doing enough to keep him very hard and very interested, but not enough to make him pop his cork. I kept him moaning for over forty minutes, until I recognized he was getting desperate to cum.\n\nI sped up, jacking him faster with my wet, warm, tight cunt until he gasped and bucked up into me, filling me to overflowing with his cum. I licked up every drop that overflowed my pussy.\n\n\"That's the kind of fucking a good boy deserves, Henry. You were outstanding tonight. I've seldom had better and you know how much sex I get.\"\n\n\"Really? You're not shining me on?\"\n\n\"Hell no. My Master has thrown me some righteous fucks, but unless more than one person was involved, I don't think anyone else on the ship has done better than you. Totally amazing. Your oral skills are substantially improved. You keep it up, the women won't be able to keep their hands off you.\"\n\n\"Thanks, Beth.\"\n\n\"Don't thank me. I'm the one who needs to thank you. You were an oasis in the desert. I'm about to go on the Slave Trainer again and I think you gave me enough sex to get me through the night.\"\n\nOkay, that was a minor lie, but only a minor one, because I was feeling pretty sated at the moment. It wouldn't last long once the damn thing went back on me.\n\n\"I had a wonderful time, but it's up and I have to replace my Slave Trainer with a charged one before I go back to Master. Did you have a good time?\"\n\n\"The best.\"\n\n\"I'm glad. Let's straighten up a little before we go.\"\n\nHe threw the cushions back on the chairs and I wiped everything down and threw the towel in the laundry hamper under the bar. I gave him another quick kiss, squeezing his cock slightly as he left. I dressed and made my way up to the playroom.\n\nI got a charged Slave Trainer, donned it, and grabbed the charger and brought everything to Master's cabin. He was fucking both Belle and Francesca, but every time they were close to cumming, he switched to the other one. After using the head, showering, and brushing my teeth, I put what I needed in the cage under the bed, including the charger for the Slave Trainer and pulled the door shut behind me. They continued to fuck for about ten minutes until Master climaxed.\n\n\"Clean up your Mistress, Belle.\"\n\n\"Yes, Master.\" So Francesca was the one to receive his load.\n\n\"Did Henry enjoy himself, Beth?\"\n\n\"Yes, Master. He had a wonderful time.\"\n\n\"Good night, Beth.\"\n\n\"Good night, sir.\"\n\nI heard him kiss the others good night. I did my best to try and sleep, without much success.\n\n******\n\nThey started fucking around 0600, neither Francesca nor Belle allowed to cum again. As soon as one gasped for permission, Master stopped fucking her and fucked the other instead. I was on my third charged Slave Trainer since I'd shut myself off in the cage. This time it was Belle who became the depository for Master's seed. While Francesca cleaned up after him, Master opened my door and allowed me out.\n\n\"How was your night, Beth?\"\n\nI smiled at him. \"About as you'd expect, sir. Not very restful.\"\n\n\"It's a hard lesson to learn, isn't it Beth.\"\n\n\"Yes, sir. One I should have learned previously.\"\n\n\"Was it because I wasn't going to be there?\"\n\n\"No, sir. I guess just the uniqueness of the evening and the body painting. It just slipped my mind. I'll endeavor to do better.\"\n\nHe hugged me and stroked my face. \"Say goodbye to your sister slaves. They're leaving in a few minutes. You can give each of them a quick orgasm, no more than five minutes for either of them.\"\n\n\"Thank you, sir. I appreciate it.\"\n\nHe left and I got in bed with both of them. I hugged and kissed both of them, then started in on Francesca. They were both quite desperate, They had been left in a state by Master's fucking so it took less than four minutes to get her off. It took half the time with Belle, Master had pulled out of her last and Francesca had cleaned her after Master's load.\n\nTheir luggage had already been taken to the helicopter and they promised me Master told them they'd be fed plenty on the private jet so we went straight to the helicopter as soon as we dressed. On the helicopter deck, Master made them both kneel and he removed his collars and exchanged them for less obvious gold necklaces which were like a cross between a collar and jewelry. Belle still had her Mistress' collar on though.\n\nI hugged them both desperately before they climbed aboard. It was like saying goodbye to Miranda all over again.\n\n\"I'm so happy you both came, and even more so you're now my sister slaves. It makes me feel even closer to you than I was before. We're like family now. I love you both and shall miss you horribly.\"\n\n\"Master's bed will start getting crowded once all of us join you again in Europe,\" Francesca laughed.\n\n\"It's a good thing we like to snuggle close,\" I said.\n\n\"You mean buried in each other's cunts,\" Belle laughed.\n\n\"Exactly what I mean, Belle; yours being so tasty and all, sweet like the honey which drips from it.\"\n\nWe all had a chuckles from that, one last hug and they were gone, the engine winding up and Leo taking them away, Rafael riding shotgun.\n\n\"They'll be back before you know it,\" Master said. \"You have me all to yourself again.\"\n\n\"Yes, sir. That will be nice once I can cum again.\"\n\nHe smiled. \"That will be awhile.\"\n\nI counted in my head. The Slave Trainer went on at 1300 yesterday, plus twenty-seven was 1600, plus the six hours fucking Henderson was 2200, ten tonight.\n\n\"2200, right sir?\"\n\n\"That's when the Slave Trainer comes off, not when you'll be allowed to cum. That won't be for awhile longer. Except for rewarding Francesca's car delivery person, which I'm giving them because you got six hours with Henderson, they're only be allowed to masturbate once each night for a week. You didn't think you'd be getting off with a little more than a day, did you?\"\n\nI sighed. \"Yes, Master. I suppose that's only fair. I'm still allowed to give others pleasure, won't I?\"\n\n\"You are a sex slave and people still need to be rewarded. The weekly drawing tomorrow might be a little tricky, but I'm quite sure you can give someone two hours worth of satisfactory orgasms orally.\" He kissed me and we went to breakfast.\n\nI was fed, but not fondled. People were rushing to get through breakfast as we were getting ready to depart. I wanted so much to speak to Fatima about how things were going with Pierre, but she said, \"We'll talk later, but it's anchors up in fifteen minutes. Got to run.\" She grabbed some fruit and two cups of coffee.\n\n\"Aren't we waiting for Leo to return, Master?\" which I guessed would be an hour or so, as Rafael and Leo be would making sure they safely made it onto the private jet.\n\n\"Leo can make up an hours steaming time in about three minutes. We lost a day I didn't plan on by staying in Buenos Aires an extra day. We have a schedule to keep, so we'll be cruising faster than I planned, so we have to push off now. Additionally, we're not usually so pressed to get everyone ready for piracy and the like until we reach Eastern Africa, but I want to be prepared for anything coming into Freetown. We're not even taking the most direct route there. I'm still concerned about what's happened thus far. I feel watched, and I don't like the feeling.\"\n\nWe had muster after we'd started steaming, and there were people missing, but they were all on duty. We had plenty of lookouts while in the Rio de la Plata due to the boat traffic. Only one drawing this morning as we'd lost two slaves, Rafael winning, and he was missing for the moment. Master sent me to the gym to brush up on things. All of the ducklings were there.\n\nThey were doing two at a time on the range, each of the freed slaves getting a half hour of range time, then getting with their instructors to discuss what they'd done right or wrong, which took time due to the translation app. When their turn came up again, they'd shoot for another half hour, and repeat. Sahar looked fierce and determined, and seemed to be scoring better than the others. She'd occasionally berate one of them in Portuguese or Arabic, telling them they must love being slaves as they didn't want to work hard enough to keep themselves from being taken captive again. Edgar occasionally looked as if he'd intercede, but they seemed to respond to her, buckling down and doing better.\n\nWhen it was my turn, Edgar had me do Hogan's Alley with the handgun the first time. I went through it perfectly. It was the first time the ducklings saw Hogan's Alley and they watched as I went through it, not even Sahar berating them for not working on their own skills as she watched.\n\n\"Good shooting, Tex,\" Edgar said. \"Isn't that thing you're wearing keeping you on the edge of an orgasm?\"\n\n\"Unfortunately, yes.\"\n\n\"Then I take it back. It wasn't good shooting, it was damn fine shooting. You'll be issued a 9 MM at a minimum in Freetown. We'll see how you do on the rifle on your next turn.\"\n\n\"You really know how to suck up to a girl, don't you.\"\n\nEdgar laughed. Sahar asked through her translator, \"When can I shoot on this target?\" She pushed the answer button.\n\n\"When you can get every shot from two magazines in the bulls eye or first circle.\"\n\nShe nodded when she heard the answer. \"Soon, today, I will do,\" no translator.\n\nWe took a break for lunch. Fatima was still busy on the bridge, so I still didn't get to talk to her. Leo had arrived back on board around 1000. He was down working on his self defense skills with the others. Everyone on the ship filtered through at least once during the day. I even saw the weapons the ex-special forces types would be using for the first time. When they went through the Hogan's Alley scenario, they rarely went behind cover, seemingly able to shoot someone before they were even seen. I was impressed. It was a steady progression down the length of the ship, either aft to prow or the opposite, an enemy appeared, bang, bang, two shots and they were dead, half of them head shots.\n\nI suddenly realized the difference between a good amateur such as myself and a professional soldier. I was so glad to have them on my side. Henderson and Roberta fired their mock weapons at a projected range of 800 yards. The target looked like not much more than a dot at that range without looking through their optics. Still, most of their shots were bulls eyes.\n\nI asked Roberta if there were any differences between shooting at the target or something real.\n\n\"For sure. For one thing, the target and I are both moving up and down the waves the same time, it's essentially a stationary target. In real life, if I'm shooting at something off the ship, they're moving differently than I am. Plus the target is very seldom still. If they're moving across my scope, I have to anticipate where they're going to be after the flight path of the bullet, which even if it's 2000 ft/sec when it leaves the barrel, will be a little over a second later at 800 yards. This is a cake walk in comparison. Henry and I will have to get some practice at moving targets sometime before we get to Freetown.\"\n\n\"How do you shoot at moving targets at sea?\"\n\n\"Someone tows one with one of the jet skis.\"\n\n\"Aren't they afraid of getting shot?\"\n\n\"It's twenty yards behind the jet ski. If they're worried about getting shot, I shouldn't be on this ship.\"\n\n\"Can anyone else shoot the Creedmoor sniper rifles?\"\n\n\"All the special ops types are pretty good shots. They just don't practice as much as Henderson or I do. It was SEALs that took the shot saving that ship's Captain, Richard Phillips, off Somalia. They have some excellent marksmen. I'd trust them with almost any shot which would save my life.\"",
        "My next time up, I went through the Hogan's Alley with my issued rifle. I made it through without shooting a friendly and only taking one wound.\n\n\"You'll be getting issued a rifle, too, Beth. Good job. I'm proud of you. One more day of practice and I'll let you check the live weapons out. You'll be shooting off the sundeck day after tomorrow.\"\n\n\"Can I try going through Hogan's Alley like the special forces guys?\"\n\n\"Your next time up. Expect to get killed though. It takes hundreds of hours of practice to get that good. Most special ops guys are soldiers for at least four years before they were chosen for special ops schools. It's pretty rigorous. Most don't make it. The best of the best, you know.\"\n\nSure enough, I died, five minutes into the scenario.\n\n******\n\nIt was supper before I finally saw Fatima. We were back out in open ocean with lower manning levels on the bridge. Pierre had a collar on and was kneeling beside Fatima. She was feeding him. Master was feeding me, again without fondling. My cunt felt soaked, yet I hadn't cum since midnight last night. I was on like my sixth charge of the day with maybe two more to go.\n\n\"Are you getting desperate yet?\" Master asked.\n\n\"I was desperate thirty minutes after I went into the cage, sir. May I speak to Fatima after supper?\"\n\n\"Of course. You have until ten tonight to do what you want, except cum.\"\n\n\"Yes, sir. What happens when ten rolls around.\"\n\n\"Hannah and Angelique will spend the night with me. You'll spend a couple hours entertaining us, before going back into your cage.\"\n\n\"Yes, Master.\" I sighed. He kissed me.\n\n******\n\n\"You can help the servers clean up, Pierre,\" Fatima said. \"Make yourself useful.\"\n\n\"Yes, Mistress.\"\n\nThus, the Department Head of the Food and Kitchen Department helped clean up dishes with his staff. Fatima had told him he couldn't wear boxers anymore as his cock flopped out of the fly too often. She had him wearing g-string underwear which Lynn had purchased in Buenos Aires yesterday, both for Manuel and Pierre. They couldn't be naked yet, but their equipment was on prominent display with the new clothing. Both of them were hard.\n\nI knelt at Fatima's feet.\n\n\"Mistress, might I speak to you please, in private, if possible.\"\n\n\"Mistress?\"\n\n\"Master requires I address all Dominants by their title. If you're a Mistress to Pierre, you're a Mistress to me.\"\n\n\"Of course. Let's have a seat on the sundeck.\"\n\nShe took a seat at one of the more secluded seating areas. Before I sat down, I asked her if I could sit. She recognized I was paying her homage for her new position and patted the chair beside her. \"Please.\"\n\n\"I was wondering how Pierre was working out and if you'd let him have sex with you, Mistress.\"\n\n\"I've let him lick me, but that's all. He's done it a couple times. No penetration and I haven't let him see me totally naked yet. I've let him masturbate afterward, then he has to lick it up. He's quite good, better than I expected.\"\n\n\"His previous Mistress saw to it he was fairly well trained, although a little mechanical, Mistress. I worked with him a little.\"\n\n\"I thought I recognized some of your moves.\"\n\n\"We were gone the night he signed his slave agreement, Mistress. Did you have a ceremony?\"\n\n\"Lynn suggested we put it off until everyone was aboard so everyone could witness his submission. I put his collar on after he signed it and made him lick me immediately, but I haven't fucked his ass yet. I'm thinking tomorrow morning's muster, maybe send the freed slaves to work on their self defense and do it in front of the rest of the crew. Or we could give them a choice. Tell them what's going to happen and they can stay or leave as they wish. Sahar might stay to watch, I'm not sure of the others.\"\n\n\"Where is Sahar, Mistress?\"\n\n\"I think she's on the shooting range. Could you please not call me, Mistress? It's strange enough Pierre does it all the time, but I understand the necessity for him to do it.\"\n\n\"I can call you Fatima if you wish, in private. In public, Master may get upset if I don't. I'll ask him and see if he has an objection. I don't want to get any deeper on his bad side. Is anyone else with her?\"\n\n\"Lynn told me you were being punished. Something which doesn't let you orgasm, even though you need to. Sounds dreadful. I wonder if they make them for males?\"\n\n\"I don't know,\" I laughed, \"but I'm sure they'd hate them worse than we do. Their testicles begin to ache if they remain hard for too long.\"\n\n\"You mean my first boyfriend wasn't lying about that? That's why I surrendered my virginity.\"\n\n\"He wasn't lying, but it doesn't mean the girlfriend has to do something about it. He can always stroke himself off. It's a poor excuse for your first time.\"\n\n\"I did regret it. Anyway, the rest of the shooters are done for the night. I'm not sure if Farah is in their room or if she's too timid yet to be alone. She might be with Sahar.\"\n\n\"Thank you, Fatima. I'll enjoy muster tomorrow.\"\n\n\"I'm a little nervous about it?\"\n\n\"Why?\"\n\n\"I don't want to undress.\"\n\n\"You don't have to undress. Only the slave does.\"\n\n\"I don't? Doesn't the thing I use to fuck his ass with have to go in my vagina? I saw Lynn using one to fuck Sherry.\"\n\n\"No. You might want to use one of those when you fuck his ass in private as it vibrates and feels great inside you, but that's a strapless model, and normal strap-ons actually uses straps to go on your torso. You don't have to remove your clothes, you can put it over your clothes. Come with me, I'll give you one to use on Pierre tomorrow.\"\n\nI led her to the playroom and opened a drawer with a nice selection, everything from six inches to ten, and an inch in diameter to three.\n\n\"Unlike you; new voluntary slaves are usually prepared for anal sex with butt plugs. Pierre has been a slave before and it's almost certain he was fucked in the ass by his previous Mistress as it's a tool to establish her Dominance and his submission, but he probably hasn't been fucked there recently. So, don't start with the largest of these. I'd go with this seven inch model that isn't too fat.\" I pulled it out of the drawer. \"This should be a good starter model for him because he has likely had anal experience. You'll still want to use lube however.\" I handed her a bottle. \"Nothing would be more embarrassing than him having to use his safe word when you're having his slave ceremony. Although, if the freed slaves watch, it might be good for them to see your power isn't absolute, but generally, it's a bad start.\n\n\"Smear lots of lube around his rectum, and a lot more on this strap-on, then ease it into him slowly. After you're well inside, give him some time to get used to having an object in his butt. Maybe a minute or more, hardly moving until he stretches out a little. When you start moving, go slow. If he seems ready, you can go faster, or better yet, make him beg you to go faster - something like 'Do you like this, slave? Do you want me to go faster. Beg me to fuck your ass' as it really establishes your Dominance to make him beg for it. He'll probably have an erection. You can tell him to stroke himself, or order him not to cum, which will be harder. If he does, he gets punished for it, whatever his slave agreement allows.\n\n\"If you want to use some of these larger models eventually, make him wear butt plugs. Master can provide you with a set.\"\n\nI held up the strap-on. \"You put this on like this.\"\n\nI showed her how to step into it and tighten it up so it didn't fall down.\n\n\"This is a lot better than my experience with anal sex,\" Fatima said. \"Nobody ever used lube and they didn't give me time to get used to it. If I was lucky, they went in my cunt first and I was a little wet.\"\n\nI kissed her. \"I know, but you don't want to be one of those people. They were hateful, disgusting, evil people. Even if you don't love Pierre, and I suspect you don't, as you hardly know him, you shouldn't want to hurt him. You want to be a responsible slave owner who's concerned for your slave's welfare and happiness.\"\n\n\"Thank you. This will make me feel much better. I'm not ready for nudity yet, not like this, after I've been wearing clothes again.\"\n\n\"I'm not surprised. That will require trust, and it might take a while before you trust everyone enough to go that far.\"\n\n\"Something funny happened today.\"\n\n\"What?\"\n\n\"When I was shooting, Edgar asked me if I would go out with him. 'No, pressure. I know you're still getting used to things, but I'd like to, if and when you're ready.' I was surprised.\"\n\nEdgar, you dog. Didn't take long to take my advice.\n\n\"Yes, that might have been partly my doing.\"\n\n\"What do you mean?\"\n\n\"Shortly after you came aboard and started taking self defense training, you and Edgar seemed to be getting along fairly well. I saw you holding hands a few times and you were laughing and chatting occasionally. You seemed to be hitting it off. Then when Pierre said he wanted a Mistress, and you agreed you'd take him when you felt you were ready, Edgar kind of dropped your hand and pulled away.\"\n\n\"I noticed. I thought it was because I expressed an interest in being a Dominant and he didn't want me to think he'd be my slave.\"\n\n\"More primal reasons, I think. He thought that by choosing Pierre as a slave, you were choosing him as a boyfriend, that you wanted Pierre as your bed partner and not him. All the slaves are fucking their Dominants. Of course, he might have been right. You had a fairly conservative upbringing. You might only be interested in one sexual partner at a time, and you wouldn't want two men sharing your bed. I told him your choice to take Pierre didn't necessarily mean you loved Pierre, or even wanted him to be your sole sexual partner. If he was willing to share you with Pierre, liked you, and wanted to spend time with you, he shouldn't assume you didn't want any more to do with him. So, the real question is, would you be averse to having two sexual partners, one your submissive, and one a boyfriend, and if you're not, could you see Edgar as boyfriend material?\n\n\"Apparently, since he did bother asking you, he thinks he might be able to share you with Pierre.\"\n\n\"You're right about the conservative upbringing. My parents would be horrified to think I was having sex with two men at once...\"\n\n\"And the occasional woman, if your time with me was any indication.\"\n\n\"And the occasional woman,\" she laughed. \"My slavery pretty much burned conservative and traditional right out of me. Although I didn't always enjoy it because of how it was done, I could sometimes enjoy it if the right person had me. Definitely, not Hans. I never enjoyed him, but some of the men he gave me to were pleasant enough I could enjoy the sex. So you think I should go out with Edgar?\"\n\n\"I think you should do what you want to do, what you feel it's right to do. It may not work out with Edgar or Pierre. We take chances every time we're with someone, but if you think you can handle it, why not? It gives you something new to think about. I think Edgar would be willing to wait until you're ready for sex again, like Pierre is.\"\n\n\"You know. A month ago, all I wanted to do was kill myself. Now, I'm quite happy. I know I'm not all the way back yet, but I have a lot of hope for the future.\"\n\n\"Good.\"\n\nShe held up the strap-on. \"Use this, lots of lube, go slow. I've got a plan now.\"\n\n\"Yes, you do.\"\n\nShe left and I changed out my Slave Trainer again. This should be the last one.\n\n******\n\nI went down to the gym to see if Sahar was still there. She was, still shooting, and Farah was sitting there watching, playing with her iPad. I said, \"Muud haben,\" which is what Arabic for \"Hello\" sounded like to me. She glanced up at me, then stood. I motioned she should sit, and after a few seconds, Farah sat down again, somewhat nervously. I sat beside her and watched Sahar fire three more magazines at the target. The first one had three shots out of her target zone, the second magazine had four misses, and the third was worse, missing six.\n\n\"Sahar, stop.\"\n\nShe set down the weapon properly, turned and faced me with tears in her eyes. She grabbed her iPad and said something to it. Out came, \"I've practiced for hours, and instead of getting better, I'm getting worse.\"\n\nI waved for her to come and sit down. After she did, I answered, \"Sometimes doing something for too long, you become your own worst enemy. You press too hard and become frustrated when it doesn't get better, so you press even more and it gets worse. You need to take a break.\"\n\n\"I told Edgar I would get the targets today.\"\n\n\"Which puts more pressure on yourself. I have the permission of my Master to give you an orgasm. It will help relax you. Then you can try again if you wish.\"\n\nShe glanced at Farah. \"What about Farah?\"\n\nFarah looked up when Sahar spoke her name.\n\n\"Tell her what you're going to do and if she doesn't want to watch, to sit on the mat near the punching bag and face away, or she can go to your room.\"\n\nOf course, what I said was being translated into Arabic so Farah heard it. She said something which translated as, \"I won't go to our room until Sahar goes.\"\n\nSahar said, \"She's still afraid.\"\n\n\"Do you care if she watches?\"\n\nSahar laughed. \"Do you know how many people watched me have sex? Perhaps hundreds. My first Master put me in sex shows. He did the most vile things he could to degrade me. Having Farah watch is nothing.\" And then to Farah, \"If you want to watch, watch, but don't complain to me later.\" She'd pressed the translation app microphone before speaking. Farah nodded.\n\n\"Fine, let's have sex, but don't take too long, I want to shoot some more.\"\n\n\"I can't have sex, I can only give you pleasure. I don't have permission to orgasm.\"\n\nFarah looked at me inquisitively, still hearing everything the translation app said.\n\n\"I'm being punished,\" I said to Farah. \"Let's go over here,\" pointing to a nice weight bench.\n\nSahar followed me and I helped her remove her clothing. I got her to lie down on the bench with her legs spread and gave her four orgasms over the next fifteen minutes, none of them screamers. She seemed much more relaxed though.\n\nI used a towel to wipe my face while she dressed again.\n\nI tapped her app microphone. \"As a slave, are you familiar with what I know as subspace?\"\n\nShe answered, \"No, what is subspace?\"\n\n\"It's a term used by voluntary slaves. It describes a state of being in which we're drifting along, not thinking about what is happening to us, our minds on other things, more pleasant things. It's used so a punishment does not feel so bad, kind of pushing the pain to the background instead of focusing on it. It can also be used to help delay orgasms if we don't yet have permission.\"\n\n\"Ah,\" and she said a word in Arabic for which no English word showed up. \"When punished severely or doing something unpleasant, to imagine something more pleasant, so I didn't think of the pain or unpleasantness.\"\n\n\"Exactly. I call that sub space, short for submissive space. The place we go to not think of the unpleasant. You can use that for your shooting.\"\n\nShe looked at me inquisitively and eagerly. \"How?\" in English.\n\n\"To eliminate distraction, to eliminate frustration, to ignore the tiredness in your arms and legs. To concentrate on the important. In shooting, three things are important, sight alignment, breathing, and trigger squeeze. Everything else is a distraction. Let yourself drift into subspace and only think about those three things. Let me show you.\"\n\nI went to the firing line. \"I can now shoot when I have an orgasm. I can't have one now, but while I'm shooting, I want you to knead my breasts and pinch my nipples, not hard enough to be painful, but only to distract.\"\n\nShe heard the translation and waited for me to set a new magazine and aim, then she started mauling my breasts, not painfully, but definitely making me realize she was there. Given my current condition, if she had enough time, I might actually cum. I took my time and put all fifteen rounds in the bulls eye or first circle, most in the center. I reloaded and did it again with the second magazine, then set the gun down.\n\n\"I wasn't thinking about what you were doing. I thought about the sights, my breath, my trigger squeeze. Now, you try it.\"\n\nSahar took a couple deep breaths, releasing them, then picked up the gun and reset a magazine. Steady aim, deep breath, release half, slow squeeze, two shots. Another breath, two shots. When she was finished, all of them were within the first ring, a few bulls eyes.\n\n\"I did it!\" Sahar exclaimed.\n\n\"Do it again,\" I said.\n\nShe did it again. She set the gun down. \"I need to tell Edgar,\" all in English.\n\nI pushed the answer button. \"Not at nine at night. It can wait until morning and I will confirm you did it today. I want you to do it again, and I'm going to do the same thing to you that you did to me, play with your breasts. Let's see if you can still do it?\"\n\nI waited until she was ready, then playfully stroked her breasts. She only missed one. \"Again,\" she said, reloaded and fired another magazine, missing none.\n\n\"Given you could do it with me playing with your breasts, I would imagine you can do it tomorrow when no one is. You can show Edgar. Now go to bed. Get a good night's sleep and think of pleasant things.\"\n\n\"Pleasant things like you licking me. Thank you, Beth.\" Thank you, Beth, was in English, needing no translation.\n\n\"You're welcome, Sahar.\" Needing no translation either.\n\nI helped her shut everything down.\n\n******\n\nWhen I arrived in Master's cabin, Hannah was sucking his cock and Angelique was licking her cunt.\n\nMaster asked, \"What have you been doing since supper?\"\n\n\"Helping Fatima pick out a strap-on for Pierre and helping Sahar on the gun range, sir. Fatima asked that I call her Fatima instead of Mistress. Would this be permissible to you, Master?\"\n\n\"If that is what she wants to be called, I have no problem with it. Did you have sex with either of them?\"\n\n\"I licked Sahar, sir.\"\n\n\"If you want, you may remove your Slave Trainer now and get ready for bed.\"\n\nI looked at my watch. \"It's early, sir.\"\n\n\"By fifteen minutes. I'll make sure we make up for it.\"\n\nThat sounded ominous. \"Yes, sir. Thank you, Master.\"\n\nI practically ripped the damn thing off. I used the facilities, showered, brushed my teeth and returned just as Master shot his load in Hannah's mouth. He patted the bed.\n\n\"Come. Hannah and Angelique want to taste you.\"\n\n\"Does this mean I get to cum, sir? It won't take much.\"\n\n\"Not at all. Angelique is going to ride your face while Hannah licks you. Slap your stomach if you get close to orgasm, and Hannah will stop. After you've given Angelique five orgasms, they will switch.\"\n\nLet me just say, I spent more time slapping my stomach than they spent licking me, though they had nothing to complain about. After they were done, Master had me suck him to another erection. Instead of giving me his cream, he sent me down to the cage. I heard them fucking above me, but since I could really relax for the first time in over a day, I dropped into slumber like a stone despite the aching emptiness I felt in my cunt.\n\n******\n\nAt 0600, Edgar was knocking on Master's cabin door and Master told him to enter. Edgar entered, saw me in Master's cage and smiled.\n\n\"Boss, we have a problem.\"\n\n\"What kind of problem?\" Master asked.\n\n\"It appears we're being tracked or followed or someone else knows our business. Those men you had me send to Monrovia reported seeing a bunch of mercenary types hanging around down by the port. They think they're Mahmoud's men.\"\n\n\"Who knew we were going to pick up the kidnapped woman's parents in Monrovia?\"\n\n\"The Interpol agents and the US government through Miranda sir. But I don't think they're in Monrovia for the parents. They'd need maybe five guys for that. Two apiece for the mother and father and a driver. Easy enough to pull a snatch at the airport under normal circumstances. But Smitty says he's seen at least two dozen blokes hanging around, checking out the young ladies, and they're not around the airport; they're around the port, like they're waiting for a ship to get in.\"",
        "\"And we need to refuel and resupply,\" Master mused.\n\n\"Yeah, we definitely weren't planning on doing either at Freeport.\"\n\n\"So definitely a leak somewhere. Interpol or our government?\"\n\n\"More likely Interpol, sir. Might explain why they're having so much trouble finding the fucking bastard.\"\n\n\"Shit! And they know almost all of our business. Who we've recovered and where their families are if we know it. I wonder if someone knows where Fatima's parents are and they haven't told us. Wait here, Edgar. I need to call my wife. Why don't you let Beth out of her cage.\"\n\n\"Aye, aye, sir.\"\n\nEdgar opened the door and helped me out while Master initiated a FaceTime call with Miranda. It was about two AM in Washington, DC we'd traveled far enough East to be a couple more time zones from Buenos Aires. We could see Maria naked in the bed beside her when she answered.\n\n\"Master? A pleasant surprise. What is it?\"\n\n\"We think Mahmoud's men are waiting for us in Monrovia, not to capture the kidnapped girls parents, but perhaps to initiate an attack on us due to the number of men involved. Edgar thinks there's a leak in Interpol, so you need to quit sharing any information with them. I'd like to arrange for a fuel and food resupply from the US Navy, as we don't think we can resupply at either Freetown or Monrovia. Just to be on the safe side, don't send the girls parents to Monrovia anymore.\" He threw up a map of Africa on one of his screens. \"Let's fly them into Dakar in Senegal instead. Leo will pick them up from there. Have the Navy send a supply ship South from the Mediterranean at flank speed. We'll adjust our course North to meet them. I still want to keep to our schedule so Mahmoud doesn't know we know what's going on. Do you think you'd have a problem arranging that?\"\n\n\"I don't know, sir. I can ask and I'll let you know if there are any problems doing it. I'll be back in touch in an hour or so.\"\n\n\"Thank you, Miranda. We miss you.\"\n\n\"I miss you too, Master.\"\n\nThey terminated the connection. \"Edgar, wake up the Captain and have him make all possible speed North towards Dakar. Send Smitty and a couple dozen other guys to Freetown. Have them remain hidden, no large gatherings. I don't want to give away our hand before we have to. Since we had a couple Interpol guys on board the ship, do a security sweep of the ship and make sure we don't have any tracking or listening devices on board. In fact, have the sweep done before the Captain heads North, just in case. I knew things weren't right.\"\n\n\"You got it, sir. Be done within the hour.\"\n\n\"I want the training to intensify. This looks like it's getting messier than I ever thought.\"\n\n\"Yes, sir.\"\n\n\"Let's hold an early, pre-breakfast muster, tell everything to the crew. I'll probably suspend the Employee of the Day, Week and Month for the moment. I want everyone focused on the situation. When we pick it up again, I'll try to double it up, make up for the missed time.\"\n\n\"As you wish.\"\n\n\"Get started.\"\n\nEdgar gave the naked women a wide grin and left.\n\n\"Hannah and Angelique, you need to make sure you get some training too. I know you've had it before, Hannah, but Angelique hasn't. I know this isn't what she signed up for when she joined you for this voyage, but it's what we've got now.\"\n\n\"Yes, sir. We'll be ready when the rest are.\"\n\n\"Fuck!\" He exclaimed. \"This sure throws a monkey wrench into what I'd had planned for the next several days. Might as well get cleaned up and dressed.\"\n\nMaster let Hannah and Ange use the shower while we took care of our other needs, then when they left, we used it. He soaped me up and kissed me as our soapy bodies slithered against each other, but he was careful not to give me an orgasm. Some things hadn't changed. On the other hand, he didn't ask me for one either. Nor did he paddle my ass, still cautious after using the stingray barb on me. We heard the announcement for morning muster in fifteen minutes as we got out of the shower.\n\n\"I'm almost out of birth control pills, Master. Will you be breeding me, or shall I renew my prescription?\"\n\n\"I don't want to breed you on this trip. I want a delectable, eminently fuckable slave on the ship who isn't carrying a baby around. We still have a large chunk of this voyage left.\"\n\n\"I'll speak to Manuel then, after muster.\"\n\n\"Please do.\"\n\nWe went to muster and Master had a whispered conversation with Edgar. He took the microphone to speak to the crew.\n\n\"We're making a sudden change in plans. We have reason to suspect there was an ambush planned for us when we arrived in Monrovia. We won't be stopping there or Freetown for supplies. Miranda is trying to arrange for the US Navy to resupply us. As a result, we're going to be steaming North toward Dakar. We still plan on going to Freetown to ransom the captured American Peace Corps volunteer, but we will be anchoring offshore. We believe someone in Interpol has been sharing information with Mahmoud, though we don't know which person it is, or if it was more than one. We've found both listening bugs and a GPS tracker on board the ship. Edgar believes there's something else on the ship, but he can't get a bead on the location as the signal is very weak and there's a lot of electronic interference from other devices.\n\n\"I need everyone to shut down their phones, iPads, computers and other electronic devices. The ship is going to shut down the radars and radios for a few minutes to see if we can find the source of the signal. Turn off everything now, and report back here. Fatima, please explain to the other young ladies how to shut down their iPads.\"\n\nEveryone scattered to turn off everything. The radar mast stopped turning. I went to my room to shut down everything I owned, computer, iPads, printer, phone. Master was shutting off the stuff in his cabin. It was the first time I'd ever seen all the screens dark. I went out on the sundeck again and Edgar and three others security guys were walking to the four corners of the ship, looking for the signal. Ethan waved Edgar over and pointed down the side of the ship on the outside. Edgar called Master over and pointed to something.\n\n\"Ethan, bring a tender round and take that fucking thing off.\"\n\n\"Aye, aye, sir.\"\n\nThe ship came to a stop and Ethan and Rafael lowered a tender and brought it to the side of the ship. I went over to watch. While Ethan held the Tender close, Rafael stood on the front, stretched way up and pulled something off the side, which looked like a small bump. He threw it into the water. They came back aboard and the muster meeting resumed after the tender was lifted and the ship resumed steaming.\n\n\"Because we don't know how much information about us has been released, we're going to go into a piracy watch setting. I want watches doubled and the guards issued weapons. I want training to intensify. You'll be given body armor. I want you to keep it handy and put it on in the event of any emergency. I'm cancelling the Employee rewards for the time being. I want your minds on the dangers we face. I'll try to make it up to you later, but no promises. Go get some breakfast, ladies and gentlemen.\"\n\nBefore they went to breakfast, Fatima and the other freed slaves came up to Master and me.\n\n\"I'm sorry Joshua, but we don't quite understand what happened. Even speaking English, I'm not sure I understood. Could you please explain it better?\"\n\n\"You knew we were going to Monrovia, didn't you.\"\n\n\"Yes, I helped the Captain plot the course.\"\n\n\"We were going there to refuel, take on provisions and get the parents of the latest girl that was taken by Mahmoud who we intend to pay ransom for. Edgar sent a few other men to Monrovia ahead of time to look for any potential trouble. Sometime yesterday, a bunch of bad looking men started showing up around the port, like they were waiting for something to happen there. We believe they were Mahmoud's men and he was planning to attack this ship, because he was bringing in more men than he should need for any other purpose, such as scouting for new women to kidnap. Because the only people who knew we were going to Monrovia in the first place were my government and Interpol, we believe someone from one of those places is working with Mahmoud.\n\n\"In addition to me, who would make a very tempting target for someone like Mahmoud as both the husband of a US Congresswoman and rich in his own right, there are a number of attractive women aboard, six of you who are already trained as slaves who could easily be resold, plus others. It could be a source of much money to him or others. No matter how well trained we are, if he had enough men, he could take this ship. We don't want to do what he wants us to do, so we're changing course and going somewhere else. We still have to show up in Freetown, but it's going to be on our terms, not his.\"\n\n\"Additionally, we found listening devices and GPS tracking devices on our ship, which means someone was trying to keep track of us. The only people who've come aboard since we became involved in the slave trade by recovering you, are Brazilian Police and Interpol agents. Which means one of those people planted those devices on my ship. It could have been someone in the Brazilian Police, but they didn't have time to plan it. Which gives me even more reason to suspect one of the Interpol agents is giving information to Mahmoud.\"\n\n\"I've asked my wife to quit sharing information with Interpol from now on, but they already know about us, the women we've rescued, where they came from, so we're going to take more precautions than usual. We're increasing the number of people on watch, training harder and doing more to be prepared.\"\n\nFatima started speaking to the others in Arabic and they told Hibbah and Ateefah in Portuguese. Both Maahnoor and Hibbah got very jumpy when told about Mahmoud and that he might have attacked the ship. Sahar started yelling at them all in Portuguese. She was getting in their faces and holding their arms as she spoke to them.\n\n\"What is she saying to them?\" I asked Fatima.\n\n\"Spanish is close, but not the same as Portuguese. I'll ask her when she gets done.\"\n\nWhen she finished, Fatima asked her what she told the others. Sahar answered back. Fatima said, \"Sahar told them they need to get off their asses and learn to protect themselves and don't depend on others to protect them. She said she learned some things from you last night and she would show them how to shoot better. She told them not to be afraid, but be angry at the people who made them cower like sheep and resolve never to be so helpless again. She expected them to work like dogs to learn English and how to protect themselves and she'd be on them constantly until they did what she said. She told them they should worry about her and not Mahmoud, because she was worse.\"\n\nI started laughing. \"God, you have to love a woman who can kick ass and take names. By the way, you can turn your iPads on again.\"\n\nFatima and Master began laughing as well. Fatima told Sahar what I said and she smiled, a wide grin. She pointed to herself and said, \"Ass kicker,\" which made us laugh harder.\n\nI grabbed her and gave her a big hug. \"Let's go down to the gym and kick some ass.\"\n\n\"Eat first. Kick ass second,\" Sahar said, then barked something to the others in Portuguese and they all headed to the mess, Sahar dragging Farah along because she didn't speak Portuguese.\n\n\"I've put off Pierre's ceremony. This seemed like a bad time to hold it,\" Fatima said.\n\n\"I agree,\" Master said, \"but you still have to do things to establish his submissiveness. Some can be in private, but some should be in public, or at least with an audience. Doesn't have to be the whole ship, just some of his peers. Perhaps we'll have a staff meeting up in the game room. A little more privacy there, and you can do something. Plan on that.\"\n\n******\n\nI was waiting my turn on the gun range when Edgar asked me what I'd told Sahar last night. She was not only consistently shooting her target area, but all the others were shooting twice as good too. Sahar was standing behind them as they shot, coaching them.\n\n\"I taught her how to ignore distractions like I do. It's why I can shoot better than you when we're both cumming. She apparently told the others. They were frightened when they heard Mahmoud might have attacked us and she's lit a fire under them, telling them she was worse than Mahmoud.\"\n\n\"Whatever you taught her, it seemed to work. I'm going to start her on Hogan's Alley this afternoon. The rest of them might be ready then also. Most of them were somewhat afraid of firearms before.\"\n\n\"They needed to be reminded there are scarier things than guns.\"\n\n\"By the way, I thought about what you said and asked Fatima if she'd be interested in a date.\"\n\n\"Any answer yet?\"\n\n\"She didn't dismiss it out of hand, but said she'd think about it.\"\n\nOn my turn, I tried the special forces clearing the ship scenario again. I made it ten minutes without getting killed this time. A hundred percent improvement, but dead was dead. Maybe I should stick to the usual.\n\n******\n\nAt lunch, Master told everyone the Navy was sending an Arleigh Burke class destroyer to resupply us. \"They loaded up with extra supplies and are headed our way now at 30 knots. Miranda said they can't be in on the ransom payment, but if anyone starts attacking us, they'll take a hand, defending US citizens from rogue forces. They're sending the destroyer because it can make better time than a supply ship, plus the extra firepower.\"\n\n\"Won't mind them watching our back,\" Captain Amundsen said, taking a quick break from bridge duty. Fatima was eating with him.\n\n\"What type of armament does a destroyer carry,\" I asked.\n\n\"The things we're most interested in are the ground attack weapons,\" Bj\u00f6rn replied. \"Five inch gun mount capable of firing twenty rounds per minute up to 20 miles, the Tomahawk Missile, which likely wouldn't be used if civilians could be injured, but it's also got two helicopters which can carry Hellfire missiles. The rest of its armaments are designed for anti-air, anti-ship, and anti-submarine warfare. Nothing fucking Mahmoud has would be able to touch it.\"\n\n\"This sounds so serious, Master.\"\n\n\"It is serious, Beth. The life of a young girl depends on us, plus I have the responsibility for every life on my ship. I told you before, people are the most precious assets I have. I depend on them the way they depend on me. I can't imagine a life anymore without you in it, nor anyone else on board. I've always believed in strategic thinking. I want to be at least three steps ahead of my opponent, whether it's another businessman, or Mahmoud.\"\n\n\"I understand, sir. They're like my family now, too. You said you were sending Smitty and a couple dozen other guys to Freetown. Who are these couple other dozen guys?\"\n\n\"You don't think the people on this ship are the only ex-military people I hire, did you? These are just the ones with strong maritime experience. There are a few others as well. It pays to be prepared for emergencies.\"\n\n\"So Smitty is...?\"\n\n\"Smitty is ex-Delta Force. He's kind of my Edgar on shore. Something like this, he goes in to get the lay of the land and let us know what we're facing. He's going into Freeport, let us know what's up, and bring a few friends, make sure we're not outnumbered, because Interpol and Mahmoud don't know about Smitty. Same thing Smitty did in Monrovia. Get the lowdown on the bad guys and let us know as we don't want to walk in there unprepared.\"\n\n\"Just like Mahmoud won't know we have a destroyer on our side.\"\n\n\"Nope. Won't know about that either. It's more than I expected. We could probably handle the situation with what we had, but any time you can bring overwhelming force, it reduces the chance of bloodshed. I doubt if these men are martyrs. They might risk a few of their number getting killed, but not everyone. Right now, all I want is the girl.\"\n\n\"You risk everyone, this whole ship, to save one woman?\" Sahar asked.\n\nShe'd been following along on the conversation although she hadn't spoken at all and I couldn't be sure she understood all of it.\n\n\"I don't think I'm taking great risks. I promised her family and the US government I would help ransom her. Her family is depending on me to bring her home. I believe I have the people to make it possible without anyone being hurt. She doesn't deserve this anymore than you did.\"\n\n\"Is her family rich? Important?\"\n\n\"Not rich or important,\" Master said. \"Her family has some money, but they're selling most of what they possess to get her back.\"\n\n\"You good man, Joshua. I like you. No wonder Beth love you.\" Not translated.\n\n\"Thank you, Sahar. Coming from you, I consider that high praise.\" I did too.\n\n\"Edgar, you show me to kick ass.\"\n\nEdgar stuck a hand up and cupped it around his ear. \"Listen everyone, you hear that? My fans are calling me. It's kick ass time.\"\n\nEven Sahar laughed.\n\n******\n\nThat afternoon, Edgar was going through Hogan's Alley with all the freed slaves except Farah, the newest. She still hadn't managed to meet the minimum requirements. He pointed out that the scenario showed people considered to be good people you didn't want to shoot, and bad people you would. It was important to know the difference.\n\n\"Everyone on board the ship has a uniform, and hopefully, we'll all have time to put on bullet proof vests if attacked. They are distinctive, and it will help determine which are enemies, and which are not.\"\n\n\"We no have uniform. Beth no uniform,\" Sahar said. \"We should have uniform, no get shot. Before Farah come, many naked. No uniform. All should have.\"\n\n\"You're right. Before we get close to land, everyone needs a uniform. I'll tell Joshua. Perhaps we can find something from stock that fits everyone, or share clothes. The purpose of this exercise is to stay alive. People appear who will shoot at you. If you are behind something, represented by this area here, enemies can't shoot you. If you stand in the open, they can.\n\n\"If they shoot you once, you're wounded, if they shoot you twice, you're dead. The same with enemies, if you shoot them once, they're wounded, unless you shoot them in the head. One shot in head, they're dead. Otherwise, shoot everyone twice. If you shoot a friend once, they're wounded. If you shoot them twice, they're dead. If you kill a friendly, you lose the game. If you die, you lose the game.\"\n\n\"You don't have to move to win the game. Enemies will come to you, but so will friends. Shoot the enemies, let the friends pass. If you can make it through the game twice in a row without dying and without wounding a friend, you'll be issued a firearm. If we are attacked for real, I want you to stay in one place. Get in any room and close the door, aim your gun at the door. Do not open the door for anyone except someone who's voice you recognize. They should give you a signal word that says it's okay to leave the room. If anyone comes through the door without giving the signal word, shoot them.\"\n\n\"What word, signal?\"\n\n\"You pick it. Pick a word you recognize, but everyone needs the same word.\"\n\nSahar conferred with her fellows. \"Liberdade, is Brazil word for Freedom. We shoot anyone who doesn't say Liberdade and enter room.\"\n\n\"I'll make sure everyone knows.\"\n\n\"We kick ass now. Go\"\n\nSahar went first and died five minutes into the game. \"Stay behind barrier, Sahar. Shoot from cover.\"\n\n\"Me not afraid to die, want kill bad man.\"\n\n\"Do you want Farah to die, or Fatima or Ateefah?\"\n\n\"I no shoot them. Shoot bad man.\"\n\n\"You may be protecting them. If you die, they die. Put your gun down.\"\n\nSahar put it down and Edgar put her down in a crouched position facing the ladder up to a higher deck. \"This is the room you had to come to, because it was the closest. You're watching for bad man to come down that ladder. Fatima is behind you, watching that door over there,\" pointing to another door out of the gym. \"Fatima cannot watch both places at once. She needs you to watch ladder, shoot bad man come down the ladder. If you're dead, Fatima can watch that ladder, or that door, not both, so she also dies. Bad men get past this room, go someplace else, kill someone else who can't watch two directions.",
        "\"Or, you are in your room, one door to watch, but Farah does not have gun. You're protecting her. If you die, she dies, or worse yet, taken, enslaved again. Or I have gun, but I'm wounded and can't fire my gun. You are my protection. If you die, I die. You are no good to anyone dead. I don't want you to die. Save yourself, kill the enemy, as many as you can. Stay behind cover and remember, you don't get a gun unless you go through twice in a row without dying or killing a friendly.\"\n\n\"Try again?\" Sahar asked.\n\n\"Since you only lasted five minutes, you may try again.\"\n\nThis time, she only wounded a friendly and got close to the end wounded without taking the second shot which killed her.\n\n\"Again?\"\n\n\"Let someone else try. Visualize what you did wrong and how to keep it from happening again. When everyone else has tried once, you can go again.\"\n\nSahar set the gun down and Maahnoor went next. She had learned from Sahar's mistakes, and made it halfway through on her first attempt, but she killed a friendly. \"You just killed me, Maahmoor,\" Edgar said. \"I'm very unhappy.\"\n\nShe smiled at him and gave the gun to Hibbah. She died, but lasted longer than Maahnoor.\n\nSahar said to me. \"It never the same. Different each time.\"\n\n\"No two battles are ever the same. If it were the same each time, you would anticipate what happened next, not learn to adapt to real life. Things are always different, never the same. Be prepared for the unexpected.\"\n\nShe nodded. While waiting my turn, I decided to run. I probably had an hour before I got back on the range. Hannah and Angelique were also waiting and Angelique got on one of the bikes beside me and started pedaling.\n\n\"I'm sorry we didn't get to do more with you last night,\" she said.\n\n\"Me too. I haven't had the chance to ask. How was your trip to the other brothel?\"\n\n\"Okay. The women are more used to fucking men than women. Mine tried, but her heart wasn't in it. Hannah's was bisexual so she had sex with women on her own time, and Hannah said she was pretty good. Not as good as you or me, but okay.\"\n\n\"Did any of the women seem like they were involuntary?\"\n\n\"We didn't see any brands, or tattoos like Hannah said you saw at the BDSM club, but I would think poverty would be enough to pull most women into the life. They didn't strike me as terribly happy, but I imagine anything might be boring or less fun if it's a job. I want to have sex because I enjoy it, not to get paid.\"\n\nI'd hit the six mile mark running before I was called upon to shoot. It made me good and tired, but I didn't try the walk through the special forces guys do, so I made it through unscathed. Since Sahar came after me, I watched her. She made it all the way through, wounding one friendly and getting shot once. I think it had taken me a couple more times before I got that good.\n\n\"It looks like you'll be ready before we get to Freetown.\"\n\n\"I hope,\" she said.\n\n******\n\nAt supper, I was serving along with Darla and James. I found it endearing how solicitous James was of the freed women. Quite the gentleman, although no one treated them badly, he was particularly gentle. Darla was on her best behavior. Master said we'd have a staff meeting after dinner at 1900 in the game room. All Department Heads, voluntary slaves, Lynn and Fatima were to be there. Be prepared to discuss preparations made for Freetown. He told Edgar to let Thomas and Rafael take over shooting instruction this evening so he could attend.\n\nWhen I was serving him, he whispered Kelly would be joining us tonight.\n\n\"Will I be able to cum, sir?\"\n\n\"Once, by masturbation. Even Francesca and Belle get to masturbate once a day.\"\n\n\"Yes, sir.\" Since I hadn't cum since fucking Henderson for his Employee of the Month reward day before yesterday, even once would be a blessing.\n\nI was cleaning up after dinner and Sahar approached me again. \"What can I do for you, Sahar?\"\n\n\"Why are only some people going to meeting?\" Only half of the time was she using the translation app anymore, and only for more complex conversations. This was one.\n\n\"Fatima is going to claim Pierre as her slave in front of the others. I think all the slaves will be naked. Fatima intends to fuck his bottom in front of the others, plus he may be punished. Given your recent history, we don't think you or any of the other freed slaves should see it. We believe it would bring up unpleasant memories for you.\"\n\n\"I thought she claimed him. She made him kiss her feet.\"\n\n\"It was a preliminary claiming where they both declared their intentions; for him to seek her Dominance and for her to accept his submission. This one will be after he signed an agreement to be her slave, establishing the rules they would follow.\"\n\n\"I would see this.\"\n\n\"I believe you're strong enough to see it, but you need to finish your weapons training, and Farah is not strong enough yet. She could not attend with you.\"\n\n\"If Edgar says I need no more training tonight and Maahnoor watches Farah, can I watch?\"\n\n\"I will ask Master. Make sure Edgar and Maahnoor will agree before I ask him.\"\n\n\"I will ask.\"\n\nSahar said something to Farah and she went looking for Edgar and Maahnoor, Farah following, a single duckling.\n\n******\n\nRight before the meeting started, I told Master Sahar wanted to attend.\n\n\"Do you believe she should?\"\n\n\"I believe she can, I'm not so sure about should. She's driven, and far less frail than the others are. I think she can take it without problems. Despite her strength, she was a slave the longest. I'm sure she's repressing a lot of her feelings, but she seems to be doing so successfully. She has to have Edgars permission to miss this evenings defense training and Maahnoor has to agree to look after Farah for her, because Farah definitely can't attend.\"\n\n\"I'll speak to her and see what I think.\"\n\nWe went up to the game room and all of the others were already there. Sahar was outside the room waiting for Master. He had a quiet conversation with her, then opened the door and invited her in.\n\nAll the Department Heads sat around the card table while everyone else sat in chairs scattered around the room. Sahar sat beside me with her iPad on and translating to her AirPods.\n\n\"Hanna, let's start with you tonight. We've talked about the kidnapping victim and her parents long enough. Let's put faces and names to this sorry episode. What have you got?\"\n\n\"The victim's name is Johanna Hoffler. She's 23, a recent graduate of the University of Arizona. She was a desert agricultural student and was in Ethiopia teaching people how to use limited water resources to more effectively grow crops in arid regions. This is her picture.\" Hannah passed it around the table and Master passed it to me when everyone at the table had seen it. She was a slightly heavy woman in the picture, though not fat by any means. I handed it to Sahar and told her to pass it to the others. \"She was kidnapped roughly a month ago. As Fatima has intimated, if they believe the ransom they can receive is more than they might receive from selling her, they contact the family for ransom first.\n\n\"Her parents are Ben and Marian Hoffler, married thirty years. Johanna is the youngest of three children, the baby of the family. They are desperate to get her back, having emptied their retirement accounts, bank accounts and almost every other resource they can find. I think they even took out a second mortgage on their house. Her mother is a teacher and her father is an account manager for an electronics company. They are flying into Dakar now because of the problems with Monrovia. No one but Miranda has been informed of the change. They should be arriving two days before the ransom demand is scheduled. Leo will pick them up and bring them here. Unless she's severely injured, Manuel and Sherry will provide medical assistance on the ship. They'll remain as our guests until we get close enough to Casablanca, where Leo will take them to the airport and pick up Maahnoor's parents.\n\n\"We felt it best not to return them to Dakar as we've already pulled a fast one on Mahmoud by not stopping at Monrovia. We've ended all communication with Interpol, so they don't know about changing our meeting with Maahnoor's parents to Casablanca instead of Rabat.\"\n\n\"Good. We're going in to save Johanna. Don't forget that. How's the bird and what's our fuel situation, Leo?\"\n\n\"The helo is mechanically ready and we have sufficient aviation fuel to get to Dakar and back. We'll need to replenish the fuel before any other extended trips off the ship. The destroyer we're meeting does carry aviation fuel and we will be able to replenish our fuel tanks when we meet her.\"\n\n\"Great! Captain, what can you tell us about the Destroyer we're about to meet.\"\n\n\"It's DDG-78, Porter, out of Rota, Spain, Joshua. Due to her speed, we anticipate meeting her someplace in between Dakar and Freetown day after tomorrow, which is to our advantage. Mahmoud wanted us to arrive a day ahead of time. Edgar suspects it's so they spy on us, see if we've arranged a trap for them. Check to see if our crew complement remains the same. The Porter has gas turbine propulsion, which means she doesn't carry a ton of diesel fuel, but she does use diesel generators for electrical power, so they'll give us all they can. I believe a supply ship is also headed South behind the Porter and she can give us both more as we head North.\n\n\"It will take us roughly a half day to move supplies over to our ship. We'll be turned South again when they come alongside so we don't waste time. They have a hose rig set up for our fuel, but we'll need to move the dry goods over by tender. Expect a little all hands manual labor for that endeavor.\"\n\n\"Good. No problems with our tenders, Ethan.\"\n\n\"Nary a one.\"\n\n\"Edgar, what's your assessment?\"\n\nHe pulled out a map and put it in the center of the table. \"This is a topographical map of Freetown, Joshua. As you can see, they have a lot of high hills and bluffs overlooking the city. I suspect it's the reason it was chosen. Gives them a better view of the harbor and makes a good perch for snipers or the like. Definitely gives them a chance to look down on us, and possibly see the Porter if she's within gun range. Smitty will take care of any snipers for us, and give us men on both sides of him if Mahmoud or his lackeys get hinkey, put him in a crossfire. They won't kill anyone if they turn over Joanne. Want to give them a reason to be cooperative.\n\n\"Training has been going reasonably well. Sahar, Hibbah and Maahnoor look like they'll have completed the 9 MM portion of Hogan's Alley and be issued nines. Beth and Hannah can be issued rifles and nines. The other freed slaves, and Angelique and Darla are lagging behind. Sahar made the suggestion that everyone should be given one of our uniforms once we reach Freetown. In the event someone tries to board, we'd all look alike and the uglies would all be different. Since they don't have uniforms now, we might need to share what we have. Perhaps we can order something Leo can pick up in Dakar when he picks up the Hoffler's.\n\n\"I'm taking everyone out who hasn't fired a weapon before out to the stern room to unload two magazines. I want them to get used to the noise, which is the only thing we don't replicate in the trainer. They'll all be fitted with ballistic armor and told to start keeping it close when we get near Freetown. We won't start carrying firearms until after we meet with the Porter. Don't want to throw the salts off their feed by looking like pirates ourselves. That about covers it.\"\n\n\"Pierre?\"\n\n\"We won't get much in the way of fresh produce or perishables from the Porter. Mostly dry goods and frozen foods. Salads and fruits may be in short supply for awhile. I do have some frozen on hand so no one should starve or go hungry.\"\n\n\"Does anyone else have something to add,\" Master asked.\n\n\"I want to thank everyone for their hard work,\" I said. \"Everyone aboard makes me feel safe and like family.\"\n\n\"Does that mean you're committing incest when you fuck us,\" Ethan said, \"because that's twisted.\"\n\nI laughed. \"No, thank goodness.\"\n\n\"Then we only have one other thing to take care of tonight. A lot of people are overdressed and need to shed their clothes now,\" Master said. \"We've got a bit of a ceremony to perform.\"\n\nEvery one of the slaves took off their clothes. It was part of the reason we were here, moral support to the new slave. Pierre had a full blown erection. Manuel was a little more controlled. He'd had his ceremony before. Fatima stood tall and straight and pointed at the floor at her feet. Pierre knelt down in front of her.\n\n\"Pierre Francois, you have signed an agreement agreeing to be my slave. The conditions of your agreement are much the same as all the other slaves on board. When things return to normal, if you're not working - full nudity, being led about on a leash, agreeing to be fondled by anyone for one minute for their leading you around the ship, man or woman.\" That was news to me. I wondered how many men would do so. \"You agree to be sexually controlled by me, to the extent I decide if and when you may fuck, who you may fuck, and whether or not you may orgasm. You agree to obey me in all things allowed by your agreement and suffer punishments in accordance with your agreement. You will have two safe words, the first being baguette, which will cause a reduction or lessening of what is currently being done to you, and escargot, which will stop it. Have I described your agreement accurately?\"\n\n\"Yes, Mistress. That is correct.\"\n\n\"You willingly agree to serve me in the manner I choose?\"\n\n\"Yes, Mistress, I do.\"\n\n\"You may kiss my feet once again, then remain in that position.\"\n\n\"Yes, Mistress.\"\n\nPierre leaned forward from the waist and kissed Fatima's shoe.\n\nLynn handed her the strap on and the bottle of lube. Fatima put the fake cock on and moved behind Pierre, lifting his hips until they were higher. He remained where she put him. She smeared lube around his ass and then on the faux phallus. She knelt on the floor and put the realistic prick against Pierre's pucker. The entire group was hushed.\n\n\"Please ask me to fuck your ass, Pierre.\"\n\n\"Mistress, I want you to fuck me. Shove your cock in me and fuck me hard, please.\"\n\n\"Yes, Pierre. I would be happy to grant your request. However, you don't have my permission to cum. If you do so, you will receive a spanking with a paddle; ten strokes.\"\n\n\"Yes, Mistress.\"\n\nFatima pushed forward slowly, the crown disappearing as his rectum parted for the stiff rod. Pierre gasped as she reached bottom, her hips resting against his buttocks. She held still, letting him stretch around her plastic shaft. Then Fatima started moving, slowly fucking him.\n\n\"My slave, would you like me to fuck your ass harder?\"\n\n\"Please, Mistress, please fuck my ass. Pound my ass.\" Pierre lifted his ass, giving her a better angle.\n\n\"As you wish.\"\n\nFatima fucked him harder; then harder still, thrusting rapidly up his fundament. Pierre started groaning.\n\n\"I'm sorry, Mistress. I'm going to cum. I can't help it.\"\n\nHis cock began to twitch and jets of cum started spurting forth, burst after burst until he started to run out of gas, gasping, his cock shrinking. Fatima slowly withdrew from his ass, leaving it gaping and reddened.\n\n\"Pierre, such a naughty boy,\" Fatima said, \"soiling a Master's floor like that. Lick it up. Don't leave your mess for someone else to clean up. It's disgusting.\n\n\"Yes, Mistress, I apologize.\"\n\n\"When you're finished cleaning up after yourself, bend over the table and take your punishment like a good boy.\"\n\n\"Yes, Mistress.\" Pierre began cleaning up several pools of his cream, lapping it like a cat. When only saliva remained on the floor, he stood up, his cock hard again, as if he'd thrived on the humiliation of being pegged in front of his peers. He bent over the card table and Lynn handed Fatima the paddle.\n\nFatima remembered what she had to do, testing it on herself first, twice, to establish the force, then laid ten good swats on Pierre's ass, leaving it red.\n\n\"Follow me, Pierre and you can thank your Mistress for showing everyone how obedient you are.\"\n\nFatima left, Pierre following, his cock like an arrow aiming at his Mistress. There was a collective inhalation of breath.\n\n\"Damn,\" Ethan said. \"I've never seen anything like that before. It was kind of disgusting, but kind of hot, too.\"\n\nSahar said something into her iPad, the translation coming out a moment later. \"I don't know why everyone was worried if I saw that. I've been fucked in the ass much harder. Kick more ass in the morning, Edgar.\" She left.\n\nMaster took my hand and led me back to his cabin. Kelly was waiting outside, not wanting to go in when no one was there.\n\n\"How did the meeting go?\" Kelly asked, following us into Master's cabin.\n\n\"Interesting,\" I said. \"Pierre might be more submissive than I thought.\"\n\n\"What happened?\"\n\n\"Ask Pierre. It's his story to tell now, but don't be surprised if he gets an erection when he tells you. He might enjoy the extra humiliation. Would you like help with your clothes?\"\n\n\"Can you use your teeth to pull my underwear down? That gets me so jazzed.\"\n\n\"Master?\"\n\n\"Be my guest.\"\n\nI undressed her, using my teeth on her underwear, then licking her to two orgasms, before Master joined us on the bed, hard. Between us, she had several more before Master deposited his cum in her cunt. I cleaned her off before I was allowed to masturbate for them, both of them leaning back, Master playing with her large globes as I got myself off. Master had me drag it out for fifteen minutes before I was allowed to cum. It was explosive. Nearly two days without and having to stay on edge for ten minutes right on the cusp. Kelly was kissing me as I climaxed, Master playing with my sensitive nipples. At least I slept soundly tucked between the two of them instead of having to go into the cage.\n\n******\n\nMaster didn't spank me again in the morning and I asked him about it.\n\n\"My ass doesn't hurt from the stingray barb anymore. You can spank me if you like.\"\n\n\"It broke your skin. I won't touch you there until it's fully healed.\"\n\n\"It's not like you can't spank me somewhere else, or even whip me.\"\n\n\"Spank me instead,\" Kelly said.\n\nMaster raised his eyebrows.\n\n\"She's not submissive, Master, just curious. She leans slightly toward Dominant.\"\n\n\"It's only ten, right. I can do ten,\" Kelly said.\n\n\"I don't think I've ever spanked anyone who wasn't at least a little submissive before.\"\n\n\"I am curious what Beth goes through all the time.\"\n\n\"Over my lap then.\"\n\nKelly got over his lap and he landed a hard one on her generous bottom. The flesh wobbled with the impact and she squeaked.\n\n\"That's about three-quarters as hard as Beth receives. Should I stay there, or would you like to see how hard Beth is spanked?\"\n\n\"At least one as hard,\" Kelly gasped. \"Oh man, that stung.\"\n\nMaster struck the other cheek harder than the first.\n\n\"How do you do this?\" Kelly groaned.\n\n\"Don't think about how much it hurts. Feel the heat spread, feel it in your cunt. When Master is done, he can fuck you, give you an orgasm to mitigate the heat.\"\n\nMaster gave her the remaining eight strokes, taking a little off each one, then turned her over and kissed her, finger fucking her until she gasped for an entirely different reason. Kelly's hips thrust against his hand as she climaxed. Then he entered her, thrusting hard, fucking her. I squeezed her heavy globes, gently compressing her flesh as Master plunged into her pussy. Soon, she had another orgasm, crying out her pleasure. She surrendered herself again before Master released his morning load, still managing to stay hard and continue fucking her through a third.\n\nI was cleaning up after them, guest first, when she said, \"I can't believe you get to fuck Joshua every day. That must be fan-fucking-tastic.\"",
        "Pausing, I said, \"Not every day. Sometimes a slave gets punished for things. This is my third day without fucking him.\"\n\n\"What did you do?\"\n\n\"I orgasmed multiple times without getting Master's permission first. I can't orgasm again except for one masturbatory orgasm per day. Francesca and Belle are suffering the same.\" I finished cleaning her and started on Master. He wouldn't take long.\n\n\"How do you know?\" Kelly asked. \"They could be fucking like bunnies.\"\n\n\"If they were,\" Master said, \"they wouldn't be submissives.\"\n\n\"But they all disobeyed you before by cumming without your permission,\" Kelly said. \"How do you know they aren't again?\"\n\nI was done. When you can vacuum his entire cock at once, it's easy.\n\n\"Cumming wasn't intentional disobedience,\" I replied. \"That was an error of forgetfulness. We should have asked. Mrs. Kline did. We forgot. I doubt they are being disobedient. It's not just that they would punished if they were, but they could lose Master's favor and he would sever their slavery. Once you find a good Master, you don't want to lose him by cheating on him. It would be as bad as cheating on your husband, maybe worse. It's why Mrs. Thornton received a hard fifty swat spanking every morning. She used to cheat on her husband.\"\n\n\"That dreamboat? Why would she do that?\"\n\n\"It was speculated by William and his friend, Sam, that Evelyn wasn't craving a polite, gentle, kind husband; that what she wanted was a hard, stern Master and did things to force him to take corrective action. She got what she wanted, but she pays for it every morning.\"\n\n\"Why do you punish Beth almost every morning, Joshua?\"\n\n\"Since I share her so readily with my crew, I like to remind her I'm the one she answers to, the source of any pleasure she receives. Which is why she's also not receiving much pleasure at the moment. I'm the source of her pleasure and she should ask for permission before she receives it.\"\n\n\"Part of Pierre's ceremony last night was to impress upon him his obedience and Fatima's Dominance on him?\"\n\n\"As a former slave herself, how can Fatima be a Dominant?\"\n\n\"Fatima's slavery was forced upon her. She didn't wake up one day and decide to be a slave. It was likely something she would never have done. Which means the seeds of Dominance may always have existed in her. Even if that weren't the case, it's possible to be both, called a switch. You can seek to Dominate those with more submission than you have, and be Dominated by those people who have more. Hannah is Dominant towards submissive females and submissive towards Dominant males. It makes her the perfect Personal Assistant to Master. In addition to working hard for him due to her submissive tendencies towards him, she could sniff out submissive females. I would guess that would no longer be part of her job duties, Master?\"\n\n\"You mean picking out new slave sluts for future cruises. Probably not. We'll have to see how the four I have now continue to work out, but I'm hopeful I'm done searching.\" He smiled at me mischievously. \"I have to admit I'm quite fond of them.\"\n\n\"The crew would probably mutiny if you tried to get rid of them,\" Kelly laughed. \"No one has ever been on a cruise like this one.\"\n\nI hugged her.\n\n******\n\nWe spent one more morning on the range. Even Master and the Captain spent time shooting. Darla, Angelique, Ateefah and Farah were receiving the most work, not yet having qualified on Hogan's Alley. Sahar was encouraging the two ex-slaves, pushing them in Portuguese or Arabic. She hugged them both when they finally got through it, qualifying to carry a nine MM.\n\n\"This afternoon, all those who haven't carried or fired a live weapon before, are going to shoot one,\" Edgar said. \"The weapon you shoot will be the one you carry. You'll also be given ballistic armor, commonly called a bullet proof vest. Bullet proof is a misnomer. Nothing is bullet proof if you shoot a large enough bullet with enough force and precision. Plus it only covers the vital organs of your torso, not your noggin, nor your arms and legs.\"\n\n\"What is a noggin?\" Sahar asked. \"It did not translate.\"\n\n\"Your head,\" I replied. \"It's slang for head, like cunt is slang for a woman's sexual organs.\"\n\n\"Ahh, continue.\"\n\n\"We'll teach you how to reload your magazines with more bullets. If you aren't issued a gun, or happen to lose it somehow, you can still load ammo for someone else. That lets them continue to shoot, so both of you aren't out of action. Have yourself a nice lunch, relax a little and the new folks will meet me in the stern room at 1400.\"\n\n\"Aye, aye, Edgar,\" Sahar said. \"Stern room, 1400.\"\n\n\"You're grasping English very quickly,\" I told her.\n\nShe rattled off very quickly in a mixture of Arabic and English \"I study at least three hours every night. What else do I have to do? Farah is actually catching on fairly quickly too, since I'm drilling words with her until I turn out the light.\"\n\n\"I think you're very good for her. She seems to be losing some of her timidness.\"\n\n\"She will lose all of it, if I have a say.\"\n\n******\n\n1400 found nine women in the stern room along with Edgar, Rafael and Buck. They handed us our ballistic armor vests. Mine and Angelique's were the only ones that fit well as they'd been made for us, Hannah taking our sizes before the cruise even started. Everyone else had been added unexpectedly along the way. Master always had a variety of other sizes for guests, but they were usually equally divided between men's and women's sizes, and we were all women. They worked to adjust their fit as best they could so they provided the maximum bit of protection. All of the vests came with three 9 MM magazines strapped to the left side in form fitting pockets.\n\nThey showed us how to load rounds into the magazines. By the third magazine, our fingers were starting to ache.\n\n\"Isn't there an easier way to do this,\" Angelique complained.\n\n\"There are loaders which help,\" Edgar said, \"but you likely won't have access to them during a fight, so learn how to do this without. Just pretend your stroking Hannah's coochie and she won't let you stop until she cums. You might want to trim your fingernails too. I know you need them long for your modeling, but they will grow back.\"\n\n\"Coochie?\" Sahar asked.\n\n\"Another slang for a woman's sexual parts.\"\n\n\"How many are there?\"\n\n\"Too many to count. Anthropologists believe you can tell about the importance of something by the number of words for it in a language. Eskimo's have something like twenty or thirty words for snow. There are probably a hundred different words for cunt.\"\n\n\"I've never seen snow.\"\n\n\"Pay attention down there. You can chat about women's sexual parts later,\" Edgar said, \"though I'd like to be a part of that discussion.\"\n\nWe finished loading our magazines and the men checked them. \"Good job, ladies.\"\n\n\"Now, you'll see a small pocket on the right side of your vests. Reach inside there and tell me what you find.\"\n\nThere was a small pocket on the right with a velcro flap and I reached in and pulled out some spongy orange things. \"Anyone know what those are?\"\n\n\"No clue,\" I said. \"Something to clean the gun?\"\n\n\"No, but you will be learning to clean one after you're done this afternoon. It's ear protection. You roll them up like this, you see?\" Edgar rolled one lengthwise until it looked more like a pencil stub, \"Stick it in your ears and it expands in the canal so you've got hearing protection and don't go deaf. I don't want you sticking it in your ears just yet. If something starts suddenly, you might not have time to put these on, so I want you to fire a weapon a couple times without them so you know how loud a gunshot is and it doesn't startle you and make you drop your gun. After you shoot a couple times, put them on so you don't go deaf. Sound is the only thing we don't try to duplicate on the practice range as it's not good for your hearing. Everything else we try to match to a real weapon.\n\n\"We're going to take three at a time so we have an instructor with each of you when you fire, just in case. The rest of you will wear these sound attenuators,\" he held up what looked like oversized headphones, \"until it's your turn to shoot. It deadens sound but you can still hear commands being given and our instruction.\"\n\n\"I'm going to be handing out your pistols now. Do not, I repeat, DO NOT, stick a magazine into your weapon yet. We're going to review safety rules once more before you load your weapon, and you will only do so when you're standing on the rear of the boat, ready to shoot. Is that clear to everyone? I need to hear you say you understand. We're getting to the part where accidents can happen and we don't want any accidents to happen.\"\n\n\"I understand,\" we all said in various languages and means.\n\n\"Do not point this weapon at anyone, even though it is unloaded. Remember the rules I gave you on the practice range. Don't aim at what you don't want to shoot, keep your finger off the trigger until you are ready to fire. The safety of everyone here depends on it.\"\n\nThe men started handing out the real Smith and Wesson, M&amp;P, nine millimeter handguns. None of us pointed it at anyone else.\n\n\"This weapon looks the same, weighs the same, kicks the same, as your practice weapon. All the buttons are where they are on the practice weapon. Once you load the weapon, it's deadly and can kill someone. Every weapon will be treated as a loaded weapon. It will not be pointed at anyone else on this ship, ever, or it will be taken away and you will not be given another. The back strap of this weapon has been adjusted for smaller hands. If you feel you need a larger one, tell one of the instructors, and they will change it for you. When I say go, pointing only at the deck, hold the weapon in your hand and get a feel for it.\"\n\nHe waited for everyone's translation to conclude, then said 'Go'. The three instructors watched us like hawks as we picked it up, pointed it at the deck and felt it in our hands.\n\nAngelique, who was the tallest of us, said she thought she needed a larger handle. Buck took her weapon, removed the back of the handle and placed a larger size on it, handing it back to her.\n\n\"This feels okay,\" Angelique said.\n\n\"Angelique, Darla and Fatima. Go to the rear railing and aim your weapon off the back of the ship.\" I thought it was good he was choosing three who spoke English fluently to start. The others could watch and learn from watching. \"Do not load your weapon yet. Everyone else, put your ears on and set your pistol on the deck.\"\n\nEdgar waited until we followed his instructions, then the three men stood beside the three women. Edgar standing beside Fatima.\n\n\"Floating in the water about fifty feet behind the ship are three targets. You will shoot at those targets. I don't necessarily expect you to hit those targets because they are bobbing up and down substantially from the wake, but I do want you to aim at them. Right now, I'm mostly concerned with getting you used to the sound of real gunfire. It will be loud, especially before you put your ear plugs in. It will surprise you with how loud it is, even with the plugs in. Step back from the rail so if you should startle too much and drop the weapon, it won't fall into the water. Don't swing around or point at anything but the targets or the water. You may put a magazine in your weapon, but do not pull the slide back until I tell you. Load your weapon.\"\n\nAll three of them slapped a magazine in their gun. \"When I tell you, pull back the slide. You will then have a loaded weapon, so do not put your finger on the trigger until I tell you. Pull back the slide.\"\n\nThe three women pulled their slides back and loaded the chamber.\n\n\"Look at the target, acquire the target. When you believe you have the target in your sights, you may place your finger on the trigger and squeeze it, just like you've practiced. Go.\"\n\nTheir hands were bobbing up and down as they attempted to track the floating ball. Fatima fired first and the others quickly followed, all of them flinching when the guns went off.\n\n\"Noisy, isn't it, ladies? Makes your ears ache. Fire one more shot, then hand your weapon carefully to your instructor and put your ear plugs in. When you have both plugs in, raise your left hand and your instructor will give you back your weapon. Keep it aimed in the water and you will fire the rest of your magazine. You may rest your arms between shots, but always aim at the water with your finger off the trigger until you've reacquired the target. When your weapon is empty, drop the magazine, load a second magazine, releasing the slide, then stop and await further instructions. Your weapon is useless without bullets in it, so I want you to get used to dropping the magazine, and reloading it. Always, always, always, keep the gun pointed away from everyone. Any questions?\" He paused. \"No questions, fire again.\"\n\nThey all fired again, handed their weapon to their instructor, put their ear plugs in, raised their hand and received their weapons back. As soon as they fired another shot, Edgar stopped them.\n\n\"Much better with the plugs in, isn't it?\" They all nodded or answered. \"That's why you want to put them in first chance you get. Make sure you're in a safe place before you put them in, but get them in as soon as possible. You may empty your magazine now.\"\n\nEveryone fired off the remaining twelve rounds, taking anywhere from two to three minutes to do so. Angelique paused the most between shots, Darla the least. When the slide locked open, they dropped the empty magazine, reloaded the next one and clicked the slide closed, then waited.\n\n\"Excellent! Everyone is following instructions, practicing safe habits. Good for you. You may fire off the second magazine, drop and reload. When you are ready to fire again, raise your left hand. When everyone has raised their left hand, your instructor will tell you to clear your weapon. Drop the third magazine, pull back the slide to clear the chamber. Visually check the chamber by looking to make sure the chamber is empty, then hand the weapon to your instructor who will verify the weapon is clear and hand it back to you. You will place the empty weapon in the holster on your vest, gather your empty magazines and after putting on the sound muffs, reload them with more rounds. Do not withdraw the weapon from your holster until we teach you how to clean your weapon. Any questions? Good. Go\"\n\nThey fired the second magazine, reloaded, raised their left hand and their instructor told them they could clear the weapon. Everyone followed the instructions perfectly. Before you knew it, All the pistols were back in the holsters cross belly on their armor.\n\n\"Fatima,\" Edgar said, \"since the other women can't carry their iPads while they're shooting, would you please stay here to help translate my commands for the others.\"\n\n\"Aye, aye, sir.\"\n\n\"We'll do Maahnoor, Sahar, and Farah next, as you all speak Arabic and it will be easier to get through it. Remember what the others just did, but don't anticipate my commands. Wait for my orders.\"\n\nFatima translated and the three women went to the rear of the ship. I was happy to see they all did as well as the first group. I was in the last group with Hibbah and Ateefah, and everything had to go through a double translation, although Sahar, who was putting everything into Portuguese, could often give the orders without waiting for Fatima to translate to Arabic first. I don't know if I hit any of my targets, though I tried. They didn't really check the targets for hits. When we were all finished, the targets were reeled in and Thomas and Ethan got on jet skis and started dragging bigger targets behind jet skis and Henderson and Roberta started shooting while in a reclined shooting position. Roberta was shooting Ethan's towed target and Henry, Thomas' target. They started with the targets out about 400 yards until they went through one magazine. Go out another hundred yards, one more magazine, and so on out to about 800 yards. They didn't zigzag, only moving in one consistent direction for one magazine, then turning in the opposite direction for the next.\n\nWhile they were engaged in shooting, we learned to clean our weapons.\n\n\"You can leave your armor and weapon in your room unless we run a piracy drill until we get to Freetown. As we approach Freetown, we want everyone gearing up. We don't want any of the women out in the open if you can help it. We suspect Mahmoud knows we have you on board, but we don't want to advertise it either. You'll each have three magazines. Remember, if attacked, get off the open deck and into a room, shelter in place and don't open a door for anyone unless they give you the code word, which is?\" He cupped his ear.\n\n\"Liberdade,\" everyone said.\n\n\"Don't forget. If they don't say Liberdade, don't come out or open the door. We'll be taking on supplies tomorrow morning. We'll need help carrying everything from here back to the larders. Instructions for the time of the resupply evolution will be given at morning muster. You did well, ladies, better than I expected. You have the rest of the day off.\"\n\n\"Thank you, Edgar,\" Sahar said.\n\n\"You're welcome.\"\n\nI asked Sahar to wait and she nodded. After everyone had left, but Sahar and Farah, I asked Sahar if she wanted another orgasm.\n\n\"You don't mind?\"\n\n\"No, we can do it in your room if you like.\"\n\n\"It would be nice.\"\n\nWe went to Sahar and Farah's room and I helped her undress and lie down on the bed. She spread her legs for me. This time there was no rush. Dinner wasn't for an hour, so as Farah watched, I gave Sahar a Beth special and she had to smother her cries of pleasure in her pillow. After giving her two more quick ones, I stopped and got out of bed, my face covered in Sahar's delicious cum.\n\n\"Beth do for Farah?\" Farah asked.\n\n\"Maybe. Wait here,\" I said, \"Sahar, put your clothes on and come with me.\"\n\nI waited until she was dressed and we stepped out of the room.\n\n\"Before I do Farah, I need to know if she's ready to refuse stupid orders. I don't want to do her before she's ready. If I just tell her to strip, she might do it thinking I'm agreeing to have sex with her, not ordering something stupid. How do I test it?\"\n\n\"I check. Go back to room.\"\n\nWe returned to the room and Farah looked up hopefully.\n\nIn the voice she'd used to berate the women before, Sahar said something in Arabic. Farah looked shocked. Sahar repeated herself, louder and more demanding. Farah began to move towards her body armor. Suddenly Farah turned and yelled something at Sahar, and it appeared she was threatening her. What the hell had Sahar said?\n\n\"You can have sex,\" Sahar said. \"I told her to kill herself. She finally told me to fuck myself. She won't do something stupid if ordered.\"\n\nSahar sat down in her bunk and picked up her iPad. I moved over to Farah to help her with her clothes. Farah looked at Sahar and said something. Sahar said something back. Farah said something else again and Sarah laughed, took her iPad and got ready to leave.\n\n\"Farah okay. She ask for privacy for sex. I told her she watched me. She told me she's not whore like me and to leave. No need to worry about Farah anymore. She fine.\" Sahar laughed again and left.\n\nI had to laugh too. I gave Farah four orgasms. She wanted to return them and I told her no; I was being punished. She understood and I cleaned up and left as she got dressed again.\n\n******\n\n\"Master, I gave orgasms to Sahar and Farah after our shooting lesson.\"\n\n\"I didn't hear any screaming. Are you losing your touch? Wait a minute. You gave Farah an orgasm?\"\n\n\"Yes, sir. You didn't hear them scream because they both used pillows.\"\n\n\"Weren't we staying away from her for now?\"\n\n\"We were, Master. After seeing me give one to Sahar, Farah wanted one too. I left the room with Sahar and I told her we couldn't yet, Farah hadn't been tested. Sahar asked me to leave it to her. We went back into the room, Sahar told Farah to kill herself. Well, ordered her really. For a second there, I thought Farah might do it, but then she told Sahar to fuck herself, except it was in Arabic, so I can't be certain that's exactly what she said. Sahar said she would be fine. Then, Farah asked Sahar to give us privacy. Sahar said Farah had watched us. Farah told her she wasn't as big a whore as Sahar was and she needed privacy. Again, that's what Sahar told me was said, but she did leave and give us privacy. Which is when I licked her, sir.\"",
        "\"Do you believe that's what was said?\"\n\n\"Maybe not those exact words, Master, but something similar. They did seem to be shouting at one another.\"\n\n\"I suppose we could check it out at dinner tonight.\"\n\n\"We have armed and trained them, sir. What if they don't realize it's a test?\"\n\n\"Could be tricky, if they have weapons with them, but didn't Edgar tell them to keep the weapons in their room until we got to Freetown?\"\n\n\"He did, Master, but Sahar had a steak knife before anyone trained her.\"\n\n\"Yes, I shall have to think on it.\"\n\n\"Will Roberta be joining us tonight?\"\n\n\"How did you know? Did she say something?\"\n\n\"No, Master. You said you were trying to maintain balance and keep from showing favoritism. It would have been her turn last night, but she had watch, so I assumed it was her turn tonight, and Darla would be next. I imagine we'll be having other females regularly since you can't fuck me.\"\n\n\"Oh, I can fuck you. You just can't orgasm.\"\n\n\"Since any attempt you make to penetrate me, sir, either ass or cunt, will likely result in an orgasm, you might as well punish me now if you want to fuck me. If you don't want to punish me until I'm fully healed, don't fuck me.\"\n\nHe kissed me. \"I want to fuck you so much.\"\n\n\"I appreciate the sentiment a great deal as I would love to be fucked. So change the punishment.\"\n\n\"It wouldn't be fair to Francesca and Belle.\"\n\n\"Change it for them too.\"\n\n\"Sorry, I must have rules.\"\n\n\"You can still have rules. Just change the punishment.\"\n\n\"To what?\"\n\nI thought about it. He couldn't spank me until I healed. Forced orgasms made a dandy punishment, but probably not for having orgasms. I'd been caged. What was left which was meaningful?\n\n\"I don't know.\"\n\n\"Neither do I.\" He kissed me. \"I sure do miss fucking you though.\"\n\n\"Master, if things went a hundred ways wrong when we do the ransom exchange and I were somehow killed, would you regret not fucking me tonight?\"\n\nHe looked at me. \"Fuck me running! That was unfair.\"\n\n\"I'm sorry, sir.\"\n\n\"Damn it!\"\n\nHe got out his phone and texted Francesca and Belle. \"No more than three orgasms, you hear me. Just three.\" Tap, tap, tap.\n\n\"Yes, sir. I understand.\" Grave face. Sad face. Solemn face. Inside, I was singing 'I'm going to get fucked tonight, tra-la-la-la-la.' I'd probably pay later, but I felt really good.\n\n******\n\nAt dinner, before food was served, with every one of the freed slaves and voluntary slaves seated with us, Master said, \"I would like everyone who currently considers themselves to be a slave, to remove their clothes. Fatima, please translate for the others. I don't want their iPads to make this translation.\"\n\nAll of the voluntary slaves quickly removed their clothes, Hibbah and Ateefah nervously fingered their clothes, seeing us disrobe, but they didn't understand Fatima and had to wait for Maahnoor to speak to them in Portuguese. They lost a little of their nervousness and quit plucking at their buttons, sitting quietly, waiting for whatever happened next.\n\nMaster stood up, saying, \"Fatima, please translate every word I speak next.\"\n\nHe moved to each of the women, kissed the tops of their heads and said, \"Welcome to the land of the free. May you never again suffer as you were made to suffer before. May you live the best life you can. I wish all of you the very best and peace upon you. You may freely ask anyone who you wish to have sex with to have sex with you. No one will ask you or pressure you for sex. It is your choice. Other than that, you have no restrictions on board my ship.\"\n\nFatima was translating as he spoke. The other women whispered to Hibbah and Ateefah.\n\nHe sat down. \"We're meeting the Navy tomorrow morning and taking the Hofflers aboard. Everyone will be dressed when they arrive. We'll have to remain that way until the Hofflers leave. After they leave in Morocco, the slaves may freely move about the ship again as they did before. You will be leashed and led. Our guests may lead you, if they wish. If they do not, find someone else. They may fondle you, if they wish. In Freetown, I would prefer all of the women remain out of sight, including female crew members, but I won't require it. Whether you choose to show yourself to known slavers will be up to you, except you Beth. You are my property and will remain out of sight.\" Fatima was still translating.\n\n\"Yes, Master.\"\n\n\"Everyone helps transport supplies tomorrow morning so food doesn't spoil sitting on the deck. Thank you, Fatima. Beth, in my lap, please.\"\n\n\"Yes, sir.\"\n\nI gladly put my naked body on Master's lap and let him feed me. He fondled me openly, though he did not let me cum. Life might finally be returning to normal. I wondered if we'd be punished openly again. I guess I had to wait and see, because I could almost guarantee I would cum more than three times tonight if Master fucked me.\n\n******\n\nRoberta was told I wasn't allowed to cum until he fucked me, but other than that there were no restrictions on my participation. She got into a sixty-nine with me and made limited contact with my wet, pouting pussy, but I had a great deal of contact with hers before Master speared into her core. She greatly enjoyed the next twenty minutes as Master plowed and I licked.\n\nAfter cleaning both of them, I was allowed to get Master hard again for my fucking.\n\n\"Beth, you may ride me but I don't want you cumming until I tell you to cum. Every time you get close, stop. You may continue again when your need has passed.\"\n\n\"I'd love to do exactly as you say, sir, but I'm afraid the second I feel you in my cunt, I'll orgasm. I'm ready to burst, sir.\"\n\n\"Fine, I'll give you that one, but it's one of the three you're allowed. The rest will be as I request. Roberta, I'd like you to ride my face.\"\n\n\"Sounds like fun.\"\n\nI mounted Master and as I expected, I orgasmed as soon as his crown pushed through the mouth of my cunt. I slid down the rest of his cock during my orgasm so I wouldn't cum again trying to get him in me.\n\nWhat occurred was a very enjoyable fucking, though I found myself sitting quietly, impaled on his prick, more than I moved over it. The whole time, he nibbled Roberta's lady bits and as I can safely testify, Master was becoming quite the cunt licker. Roberta orgasmed rather frequently and Master's face was soon glazed with her cum. We'd kiss and she'd occasionally tweak or nibble a nipple, but she couldn't do it much based upon my precarious state of arousal.\n\nEach time I approached a crest, I had to stop moving, and I'd sit, Master's cock twitching and throbbing inside me. It had roughly the same effect one of my Specials had on others. Each time I resumed, I'd get pushed a little higher than the last time before I shuddered to a stop.\n\n\"Mmm,\" I moaned after the seventh or eighth time of halting right on the edge. \"I'm not sure how much longer I can do this, Master. It feels like no matter how much I stop, the next movement will bring me off.\"\n\nHe gurgled, then pushed Roberta off his mouth long enough to say. \"You're right where I want you. I'm going to start fucking you now. You may cum when I cum and not a moment sooner.\"\n\nDoomed.\n\n\"Yes, Master,\" I moaned. \"Are you going to spank me tomorrow?\"\n\n\"Whip you.\"\n\n\"In front of the freed slaves, sir?\" I asked.\n\n\"We're not hiding who we are anymore. If they get the shakes, they can choose not to watch. You're not them and they should see that.\"\n\nHe lowered Roberta back onto his mouth and started thrusting. I did the best I could. I managed to go another three minutes without cumming, about two minutes and fifty seconds longer than I thought it would take.\n\n\"Oh, fuck!\" I warned. \"It's going to be a gut buster.\"\n\nI wasn't moving at all, trying to delay the inevitable. Master wasn't trying to delay anything. He was trying to cum and thrusting was a prerequisite. I was poised about three inches over him as he sluiced through my slushy pussy.\n\nThe dam burst, and when I say dam, I mean I squirted, fluid shooting out of me, soaking the sheets and Master's groin in what must have been a cup or more of fluid. I was nearly convulsing it was so powerful, finally coming to rest on him as I flooded us with my cum. My days of abstinence, the state of my arousal, being kept on the cusp of orgasm for the last half hour were too much for me. I had Master clasped so tightly in my cunt's embrace, I wasn't sure if he could pull out if he wanted to.\n\nThree minutes later, I finally started to descend back to earth. Roberta was staring at me in shock.\n\n\"What the fuck, Beth, did you fucking pee?\"\n\n\"No,\" I moaned, \"squirted. It felt so fucking good.\"\n\n\"Well, I'm not done yet, Beth. Keep fucking,\" Master said from under Roberta's pussy.\n\n\"Yes, sir.\" I started sliding up and down his stalk again.\n\n\"No cumming until I cum,\" he added.\n\n\"I'll do my best, Master. No promises; I'm still tingling.\"\n\nAs it was, he came rather quickly. The strangling of his dick inside my cunt hadn't gone for nought. When he orgasmed, I did too, still wound way up. That made three. I got off him and did my best to clean up after myself, but a lot of it had already soaked the sheets. Roberta helped Master and me change the bed.\n\n\"Had you ever done that before?\" Roberta asked.\n\n\"Once, but not as good as that one was. That was epic.\"\n\n******\n\nAt morning muster, Master had a punishment evolution. He whipped me, though giving me permission to cum before he did and I managed to cum once during my whipping. He ramped it up with his fingers when it started, and orgasm starved slave that I was, I was lewdly thrusting my cunt against his hand, eager for more and better. Leo had left an hour before to pick up the Hoffler's in Dakar and would soon be making his way back.\n\n\"Paahhh!\" Sahar exclaimed, \"no wonder you volunteer for your slavery. That whipping was nothing.\"\n\n\"I told you it was different,\" I said.\n\n******\n\nI had to get dressed before the Navy arrived, Master even telling me to put on a bra and panties, since my Guest Relations uniform was on the short and tight side. We made contact around 0900 around 200 miles South of Dakar, near Guinea-Bissau. Captain Amundsen made a turn to the South when they were in sight, slowed and waited for them to pull alongside, about a 100 feet off our port beam. Our navy crew members were out in force, having done these types of things before. The crew of the Porter shot over a line, with a big gun, which was fastened to our superstructure by deck three. A fuel line was hauled over by the crew on our side who set about refilling our tanks.\n\nEthan and Thomas had both tenders out and headed to the Porter even as the fueling went on. Bundled goods were lowered to the tenders in nets, rolled onto the deck, and they headed back our way where everyone not involved in the other operations waited in the stern room, including Master. Our diesel tanks filled, another hose was sent over to deliver aviation fuel. Crew members were lined up like ants, carrying boxes up the ladder, through the stern room, past the bar, towards the galley and larder. Everyone was involved.\n\nAll the goods stowed, Master asked the Captain of the Porter if they could speak in person. It was important. Since the Captain didn't want civilians he didn't know on his ship, he and his operations officer plus two security sailors came over on one of our tenders.\n\nMaster greeted them and invited them to the stern room where he usually conducted his business meetings. Art manned the bar and Hannah and Master invited the two officers to sit down. He had me as a gofer.\n\n\"Gentleman, thank you so much for coming. My name is Joshua Greenbriar, this is my personal assistant, Hannah Smithers, and crew members, Al and Beth. Can I offer you a beverage, coffee, water, something stronger.\"\n\n\"Coffee is good for both of us.\" I got two coffees. \"I'm Captain Fremont and this is my Ops Officer, Lieutenant Offerdahl.\"\n\n\"Captain, thank you ever so much for rushing down like you did. I can't tell you how much I appreciate it.\"\n\n\"They didn't give us a lot of details. Why are we here?\"\n\nMaster told them about the women slaves we'd rescued, the Peace Corps worker, Johanna Hoffler, who'd been kidnapped by the same slaver who had kidnapped three of the women we had aboard. The family had chosen to pay a ransom for their daughter rather than see her sold into slavery. Joshua said his wife, Congresswoman Ward, had asked for him to help in the paying of the ransom, since the government couldn't be seen to be giving in to the kidnappers demands.\n\n\"We intended to pick up the Hofflers in Monrovia and refuel and resupply there before heading to Freetown where the exchange is supposed to take place. Didn't want to give this slaver named Mahmoud a chance to recapture any of the women we've recovered. I had some people in Monrovia and some bad folks started showing up in numbers which didn't bode well for us. We still wanted to make the exchange on time, so I asked my wife to see if the Navy couldn't help as going all the way to Dakar ourselves would have made us two days late. We think, but can't prove, Interpol might be helping the kidnappers with information about us, as the only ones who knew about our plans to go to Monrovia were the government and Interpol and I have more faith in my government than some twits in Interpol.\n\n\"The girl's parents should be arriving shortly. We'll arrive in Freetown about ten tomorrow morning according to the instructions and make the exchange the day after that. We suspect a trap and I've done what I can to prepare for it, but I wouldn't mind the Porter sitting fifteen miles off shore in case anything should go awry. If they start shooting, we'll likely be able to defend ourselves unless there are more people than I think they can bring to bear. We're prepared for as many as fifty, but if they have a hundred, it could be tight depending how good they are. They will be coming to the boat, no more than five. I'm not sending anyone ashore.\"\n\n\"How many people you have on this ship? How many men, how many women?\"\n\n\"I have twenty men, all ex-military but myself, including some SAS, SBS, SEAL's, Marine Corps, the rest Navy, including a Navy Corpsman. The Captain is ex-Norwegian Navy. Right now, we have fourteen women aboard, four of whom are ex-military, a nurse, one Marine sniper, and two Navy, My personal assistant, Hannah and her wife, two friends, Lynn and Beth, in guest relations, and the six ex-slaves. All of them have gone through rigorous firearms training, just in case we were attacked in force. No one but my crew knows this at the moment, but I have another 24 ex-military, mostly special forces types, Delta, Rangers, and the like, coming up from Monrovia preparing to hit anyone from behind if we have to. They were the ones who figured we might get ambushed if we tried coming ashore in Monrovia for supplies.\n\n\"It's not my goal to get into a firefight with the bad guys. I want the girl returned to her family, that's all. Not planning on turning this into a war because it's too easy for innocent people to get hurt. I'm hoping that even hinting you guys could step in if things went haywire, would keep that from happening. Unless they have missile launchers or mortars, we should be good. I'm hoping they're not that sophisticated, just rifles, the odd submachine gun and maybe a couple rocket propelled grenades. We can handle that.\"\n\n\"We're testing a new drone for the Navy,\" Lieutenant Offerdahl said. \"We might be able to do some overhead visual surveillance and warn you if we see anything.\"\n\n\"Is it the ARQ-151?\"\n\n\"How the hell do you know that?\" Captain Fremont said. \"That information is classified.\"\n\n\"My company makes the ARQ-151 and I knew the Navy had passed some out for evaluation. If I'd known what I might be getting into on this trip, which was designed primarily for business, I might have brought a couple along myself. In fact, I think I'll have some shipped to my company's offices in Barcelona, fly them out. This has gotten a lot hairier than I ever imagined.\"\n\n\"If this was primarily a business trip, why do you have so many ex-military working for you Mr. Greenbriar?\" Captain Fremont asked.\n\n\"They need jobs, they make excellent employees and they know their stuff. As a billionaire floating around on a 500 million dollar yacht, I have to worry about kidnapping, pirates, terrorists, even corporate spies and foreign agents, given the Defense Contracts I have. I don't keep classified information on my ship, but they might not know that. We've repelled boarders off Somalia and the Malay straits. I feel it's best to be prepared for the worst life can throw at you instead of being surprised by it. I enjoy doing business this way, meeting people face to face on a personal level. I certainly didn't intend to end up with six human trafficking victims, but I'm glad I was able to help. I recently made some good deals with the Pentagon and the Atlantic Fleet Command in Norfolk. You may see some more of my products turning up on your ships.\"\n\n\"My orders are to give you whatever help I can without shooting up third world nations, so we'll tag along and see what happens.\"\n\n\"I'd like to give the Porter's recreation fund a healthy boost for your help. I'll reimburse the Navy for all the supplies and fuel you've provided and I'll have some excellent booze purchased for the O club and enlisted clubs in Rota. I try not to be a burden on the taxpayers since there's no need. I'd like to bring you up to the bridge, introduce you to the Captain and my head of security. We'll point out where we plan to make the exchange. Trying to keep it away from the city proper.\"\n\n\"I've actually met Captain Amundsen before,\" Captain Fremont said. \"Did some NATO exercises with him. Damn fine sailor. I was sorry to hear what happened.\"\n\n\"I hope he feels like he's landed on his feet. I'm happy to have him. Please come this way, gentlemen. Beth, get a couple more fresh cups of coffee from the galley for these officers. Art can see to these sailors.\"\n\nI took the shortcut to the galley through the door by the bar, Master bringing them up the ladder to the helo deck. I brought the coffee up to the bridge where introductions had already been made. The officers were surprised by the relative sparseness of the bridge, nearly everything digital controlled by touchscreen controls.\n\n\"I test drove a Tesla,\" Captain Fremont said. \"Except for a speedometer behind the wheel, everything else was on a big 15x13 inch screen where the dash would go. Music, environmental controls, electrical usage, cameras all around the car. Hardly recognized it as a car interior. This is a hell of a lot like that.\"\n\n\"I don't carry enough crew to do everything the way the Navy does. Everyone has three or four jobs. My female Marine Corps sniper manages the beauty salon and does the massages. It also puts her on the top deck where we'd like a sniper to be. Almost everyone has to do bridge watches or take turns working in the galley. The air conditioning guys also handle refrigeration. Edgar here, trains everyone to shoot and some self defense.\"\n\n\"How do you like working for Joshua, Bj\u00f6rn?\" Captain Fremont asked.\n\n\"Best boss I've ever had,\" Bj\u00f6rn said.\n\nFatima was standing at attention next to Bj\u00f6rn. Master pointed to her and said. \"This young lady was the first slave we freed, almost by accident. Her owner brought her aboard and we ended up with her when he was arrested. Her name is Fatima Hidalgo, previously of Cartagena, Spain, and she was kidnapped while on a family vacation in Algiers by the same man we're paying the ransom to. She was sold to a brutal pig of a man by the name of Hans Gruber in Suriname. She was regularly beaten and was branded by Mahmoud with a branding iron before she was sold, as were three other young women taken by Mahmoud in Morocco, Tunisia and South Sudan who are aboard. Fatima was a university student at the polytechnic college in Cartagena before her kidnapping. She believes her family was killed when she was taken. For the time being, she chooses to remain with us and Bj\u00f6rn is teaching her to sail this ship. She's very intelligent, hard working, speaks three languages and has been invaluable in communicating with and helping the other young women we've run across. We are all very proud of the way she's overcome what happened to her.\" He squeezed her shoulder. I think she stood a little straighter with his praise.",
        "\"Three of the other women were impregnated as slaves by their owner. He was breeding them so he could have his own slaves to sell, or to replace his slaves when they were no longer young and pretty. One of them is now back with her family in Bolivia, another we hope to reunite with her family in Morocco. We have not been able to reach the parents of the others yet, but since we now suspect Interpol may have a leak providing information to Mahmoud, we don't dare give them further information to find the parents. My wife is working with the State Department to find any family we can.\n\n\"We'd like to find Mahmoud and shut him down for the sake of other young women like Fatima, but for now, I just want to get one more woman out of his clutches. Edgar, formerly of the Special Air Services, is doing my planning for me. Why don't you explain to these officers what we have planned and where we might need support. They indicated they're testing out the ARQ-151 and might be able to provide some aerial surveillance.\"\n\n\"Thanks, gentlemen, that closes the biggest gap I was worried about. We plan to anchor right here,\" pointing to a big, satellite map on one of the map boards, \"off the west coast of the peninsula about 5 miles South of downtown Freetown and about 800 yards off shore. Still gives our snipers a makable shot. This area is still populated, but not as heavily as it would be closer to the port or airport. That makes these hills here the high ground. We have our group from Monrovia sneaking up into those hills as we speak, taking up hidden positions and looking for trouble. Having surveillance of those hills and bluffs would be fantastic. If we can use your eyes, they no longer have the high ground, we do.\n\n\"Mahmoud insisted we arrive 24 hours ahead of the exchange, we originally imagined it was to give them time to spy on us and make sure they're not walking into a trap. They know Interpol has been interested in capturing Mahmoud for over a year. But now, we're also worried they may be interested in taking us as well. Rich American, impressive ship, more slave material including six who've already been brutally trained as slaves. The last thing we want is for any women to be retaken. You can't believe the hell they've gone through. If we trusted Mahmoud or his henchmen enough for it to be a simple exchange, this would be easy, but we don't anymore. We found bugs and GPS trackers on our ship, we think, planted by one of two Interpol agents, maybe both. They seem to be keeping a closer eye on us than a simple exchange would warrant. It's why we abandoned Monrovia and moved everything to Dakar without telling them and asked for your help in resupplying.\n\n\"We were hoping you could hang over the horizon until after dark, do a lights off approach to this general vicinity, roughly twenty miles off shore with those hills in range of the 5 inch gun. I think we can scare the bejesus out of them and make this the simple ransom payment it's supposed to be. I don't feel like they're suicidal. If they give us the girl, they walk away free. Representative Ward would love to find where Mahmoud's headquarters are. She knows they've kidnapped over 500 young women in North Africa over the last couple years. She'd love to send the Wrath of God down on them, but this is what were faced with and first priority is saving the young woman.\n\n\"The ARQ-151 has an on-station time of about 12 hours with infra-red capability. If you can send it over those hills around 0300 and loiter in the vicinity until roughly noon, our business should be done with.\"\n\n\"How do you know that?\" Lieutenant Offerdahl said.\n\n\"I helped design it,\" Edgar said. \"I knew what the soldier out in the field needed. Joshua turned me loose on some of his engineers and the 151 is what we came up with. I've played with it a lot. It's a damn fine piece of equipment, even if I do say so myself.\"\n\n\"When I say I have an excellent crew, I really do mean I have an excellent crew,\" Master said. \"You'd be hard pressed to find any finer men and women anywhere.\"\n\nMy family.\n\n\"There is another supply ship heading this way,\" Captain Fremont said. \"We'll send word for them to hold off Dakar in the event either of us needs more provisioning before you reach wherever you're headed next.\"\n\n\"We plan to go to Casablanca, but we won't put into port there either. Just get close enough for a helicopter trip or two to get the kidnap victim back to the States and bring in the Moroccan girl's parents, maybe take them back. We won't land again until Lisbon. We should be good that far, but I'll let you know.'\n\n\"What speed are you planning on?\" Fremont asked.\n\n\"We don't want to get there any earlier than the agreed upon time,\" Bj\u00f6rn said. \"We should be able to cruise at eighteen knots and be to our position by 1000 hours.\"\n\n\"We'll hang back as you suggested. How do you want to get information about what we're seeing with the bird.\"\n\n\"Live video feed should do it,\" Edgar said. \"Any of you have an iPhone?\"\n\n\"We'll be too far off shore for a cellular signal.\"\n\n\"Right-o. Which is why we're giving you this gizmo.\" Edgar handed them a box. \"Instructions are inside. Uses a satellite link and converts to a cellular signal. Here's the number to call to reach me. We can throw your FaceTime onto the big screen here on the bridge. We use this so we can use our phones anywhere in the world without using sat phones. It uses one of Joshua's secure satellite feeds. It pays to work for a man who makes all these toys. You can keep it if you want. I think the DOD is field testing them now; or we can pick it up when you're done with it. We really do thank you gentlemen. It's going to make my job a hell of a lot easier.\"\n\n\"It's been interesting. Bj\u00f6rn, good to see you again,\" Captain Fremont said. \"Good handling on the resupply.\"\n\n\"Thanks, you too, Marty.\"\n\n\"Edgar, a pleasure. Young lady, Fatima was it?\" She nodded. \"I'm sorry to meet you under these circumstances, but it looks as if you're in good hands now.\"\n\n\"Yes, sir. The best of hands.\"\n\nJoshua and I escorted them back to the stern room, where Hannah handed them a ten thousand dollar check. \"For your recreation fund, gentleman. The next time you're in any of the military clubs in Rota, ask for the Porter stash. Drinks will be on us.\"\n\n\"Thank you,\" Captain Fremont said. \"That's quite generous.\"\n\n\"No, sir. Thank you,\" Master replied.\n\n\"We just do as we're ordered.\"\n\n\"We appreciate it, nonetheless.\"\n\nAs soon as Ethan returned with the tender after ferrying the Navy boys back to the Porter, we increased speed and made way for Freetown.\n\n******\n\n \n"
    ],
    "authorname": "Thors_Fist",
    "tags": [
        "oral sex",
        "anal sex",
        "lesbian sex",
        "interracial sex",
        "orgasm denial",
        "slave discipline",
        "training",
        "shooting",
        "facials"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/my-voyage-of-submission-ch-09"
}