{
    "title": "Daughter of Ziva Ch. 03",
    "pages": [
        "Hey all. \n\nSo I've been through the ringer with publishing on this site, I'm not going to lie. Some of you may have seen the second chapter was edited to show the edits I submitted for the first chapter, so I for a bit I had two chapter ones. I decided not to post this story until it was fixed, and that was incredibly frustrating because it was ready to go. Maybe I'm doing something wrong, but I can't figure it out. Anyway, sorry for the wait. Chapter 4 is coming asap! \n\nSomething I forgot to mention was that there was going to be some BDSM aspects in this story. I'm sure that started to become clear in the last chapter, but it is even more so in this chapter. Just so you know what you're getting into. \n\nI am in love with comments you're leaving. Thank you so much for taking the time and I hope this is to your liking :) \n\nxxx \n\nRorik stalked through the woods, a wooden bucket in each of his fists. The quiet tinkle of a stream guided him through the tall aspens, his mind back in his dark tent. He could still hear the quiet gasps between the winces of pain. The brief view of her perfect breasts in the warm firelight arose every time he closed his eyes. \n\nHe had spent the morning with Casmir, taking stock of what supplies they had and what they would need to have a successful return journey. They had walked the camp and spoke with the men that hadn't left with the hunting party. Every time he had passed his tent, the tiny thing that was tied up on his bed silently called to him to finish what he had started last night. Rorik had missed much of the conversations with his men, his thoughts drifting to the mix of pain and pleasure flitting across her face, her thick hair messing itself on the wood behind her head. \n\nEventually he had excused himself, knowing that pretending to listen was doing no one any sort of good, and grabbed some empty water buckets. He needed something to do while he worked out what it was about her that had his focus skewed. \n\nYesterday Sergei had looked over her as she slept, giving a frown that Rorik knew would have been directed towards him if he hadn't been Sergei's superior. Keeping his look to himself was wise. Sergei was a man in his fifties with graying hair and a working man's build, but his passion was healing people. Rorik's passion was the exact opposite, and he had spent 30 some years training for it. \n\n\"She didn't wake up when I pressed on her ribs, so they aren't broken,\" Sergei had told him. \"She has no internal bleeding from what I can see, but her bruising will be extensive. I've seen abdominal trauma before, and what helped them was keeping mobile. Walking when not sleeping, doing breathing exercises to keep her lungs clear.\" Sergei gave him a look out of the side of his eye and added, \"Avoiding strenuous activity, at least until she can move without help, is advisable where possible. Sir.\" Rorik tucked his irritation at being advised away and nodded, dismissing the healer. Sergei, understanding he had toed a line, had dipped his head and left. \n\nLast night he had gone in with no intention of touching her more than necessary. Rorik had a plan to scare and humiliate her with the aim of starting the process of her submission to the Gavali, knowing he would have plenty of time to sink deep inside her once she healed. The horses' kick had been right above where a baby would grow and Rorik didn't want to fuck up any chance of her being fertile. Seeing her blush and whimper as he cut her clothes off her was going to be satisfactory enough for the time being. \n\nThe moment his knuckles had touched her warm cleft, that plan had disappeared like mist at the bottom of a waterfall. It had been intentional, his hand pressed up against her as he held the shredded pants in his fist. He had wanted her to feel his invasion of her space and to take a step towards accepting her body wasn't hers anymore. She had breathed in, her chin tilting up and her mouth parting. And then he used the knife to toy with her clit, and a true gasp soared past her lips as her eyes shot open. \n\nRorik saw it all. The confusion and shock in her eyes as her brow pinched in, arousal flaring under it all. He gorged himself on it, just stopping from shaking his head. There weren't many things a man couldn't use to provoke pleasure from the female form if it was used correctly. Of the women he had used his methods on though, none had such little shame showing him how everything he did made them feel. Did she know he could see her lack of shame? Did she know he could see her lack of fear, even though it was a knife drawing her pleasure out from her? Even though moments ago she had thought he was going to shove his knife inside her? \n\nThere was pain in her face too, and he knew he was pushing it, but her starving body clutched onto every inch of rapture he forced on her. As her pleasure rose, so did her pain, her whimpers and twinges more prominent. Rorik had bit out an ultimatum, a very small voice reminding him that her body could help save the Gavali from dwindling into nothing in a generation. \n\nIn his mind's eye, he could see her puffy lips through the damp fabric, the soft curls gracing her sex. Rorik had to tear his stare away from the wet patch his knuckles drew from her, absolutely entranced with how responsive the girl was. He had threatened to rape her until she was raw and he was exhausted, his threat a demand that she give him her name so he could stop. \n\nThe little slut had moaned. The wanton, high-pitched vibration she had caught in her throat had travelled straight into his tightening balls. He had told himself that was it. She didn't care about her pain and neither did he. He would dole out the punishment she so obviously wanted. He'd fuck the submission he wanted out of her. \n\nHis fingertip had dipped into that beautiful pool between her legs and he had felt a ferocity tearing at his chest, opening something up that wasn't meant to be put away until it had claimed the quivering body before him and sated itself fully. \n\nThen she had screamed her name. \n\nRorik's fingers had twitched, ready to sink into her tight, silky heat, and continue on ravaging her anyway. He had been so, so close to spending the night thrusting into her tight, wet body, not stopping until he left her devastated. If it had been ten years ago, he would have done it without a second thought, but in his decade-long search for the solution to his people's problem he had learned patience. The lesson hadn't been easy, and this one sure as hell wasn't, but he knew patient and decisive thinking was absolutely necessary in order to come out the victor. \n\nCaging himself back into the controlled warlord he needed to be was a monumental effort, but he did it. If he extinguished her chance at giving birth and she ended up being the only Daughter of Ziva they found on this stretch of land, he would never forgive himself. Who would he be to tell his men to be disciplined if he followed wherever his cock led? \n\nSienna had the fucking audacity to finally look ashamed as he cut her clothes off. Rorik barely took a moment to appreciate her svelte curves as he threw her to her side. Angry at both himself and the girl in front of him, he had told her his name and the way he intended her to use it. She started crying as a thrill of desire rocked down her body, only leaving him angrier with his cock pulsing. He had pressed his length in between her ass cheeks, hoping if anything at all would be achieved, she would understand that her body was not hers. \n\nSon of a bitch, he cursed to himself, arriving at the stream. He stepped into the freezing water, feeling it lapping at his ankles. He focused on the pricks in his feet the cold water created and allowed the soft sounds of the stream to roll through him. He rolled his shoulders and took a deep breath as he filled the buckets. \n\nRorik had a moment of weakness. He had forgotten his duty to his clan and everything he had ever worked for and instead, for those few moments, had thought only of himself. He hadn't acted on his desires, but how close he had been to relinquishing his control was not ideal. \n\nWhether it was her reactions or his lack of recent female companionship that caused his cock to stir so readily, it was clear this girl was going to be provoking his desires beyond his normal standards. He needed to recognize that he had a very clear preference for dark haired, lithe women whose bodies called to be held down and fucked. It didn't matter how much he wanted to sink into her and show her how much she needed his authority and control. Rorik needed to acknowledge his tremendous and unusual need had to take a back seat for the betterment of his clan. \n\nIt was a check to his ego, having to remind himself that his domination of her needed to be much more than just physical, but it was necessary. His men deserved more than the blank face he had offered them today. \n\nRorik hadn't broken a woman for the Gavali in a while, his obsession with finding the rest of the Daughters taking nearly all of his time, but he remembered what needed to be done. Every one of her needs had to be fulfilled through him. A woman growing to understand her place was a beautiful thing, and something he thoroughly enjoyed doing when the task fell to him. What each woman needed to acknowledge that she was at her best when serving the Gavali was different, and he knew Sienna's body would be his ticket in if he could keep himself in check. \n\nRorik despised admitting that he had encountered a possible shortcoming, but it brought to mind words his Chief had told him during his lessons when he was young. \"Understanding your own weaknesses is the first step to conquering them.\" And conquer Sienna he would. \n\nWith the speed of a man who had stolen, maimed, and killed to get everything he wanted, his bruised ego was gone and the challenge of overcoming his needs while gaining Sienna's submission had his testosterone buzzing. Rorik didn't lose, and this time would be no different. \n\nxxx \n\nSienna had been awake for hours now, her throat dry and her stomach rumbling under the soreness. She had stayed laying on her back, which she had been in the middle of rolling to when she had gained consciousness. It had been a painful awakening. Any more movement was still impossible without being left in tears. \n\nThe bright spot on the tent canvas had moved from one side of the tent top to the other, and still she was left alone. It had to be mid-afternoon by now. \n\nHer mood was absolutely dismal. She was uncomfortable, her naked skin sensitive against the soft blanket he had left her with. The furs smelled like Rorik and the tent was too hot for her liking. Her bound hands were sweaty and the rope was irritating, and her foot was tied so close to the stake she couldn't shift to stretch her leg. Sienna had a lot more give when she had fallen asleep, so her guess was he had tied her closer while she slept. \n\nThere were male voices everywhere, all involved in a flurry of activities to run the camp and prepare their ship. None of them lowered their voices to try and hide their plans or conversations from her ears. From what she gathered, half of them would be leaving with a couple of women to go back to their homeland. The rest would be staying here, corralling her people to wait for the Gavali Chief and the rest of the clan to return. A bitter voice inside her said she hoped they did come. She hoped they brought every single one of their godforsaken people and they starved to death on the land that seemed to be emptying itself in preparation for their arrival. Wouldn't that be a beautiful bit of irony? \n\nChewing the dry skin off her lips, she sighed, her chest panging as her thoughts slipped back to last night. Repeating the events in her head had worked in filling her with a rooted fury that was as close to hate as she had ever felt, but without him being near she had no one to act out towards. Hating him while she was alone was not working - that transitioned quickly into disgust towards whatever part of her had liked what he had done. \n\nSienna did not have the mental energy to dig into why she liked him touching her so much - she had tried and just started crying, humiliated. So instead, she had worked on accepting her reaction as it was. Yasim had always taught that to be a good hunter and a better fighter, accepting things as they were helped the mind be at ease and in the moment. It had helped Sienna through the all of the awful weather she had hunted through. The exercise had even helped her get the upper hand while sparring with Yasim a couple of times. The latter may have been simply chance though. \n\nThat task had taken her a couple hours in between sniffling and muttering angrily, and still she was left feeling incredibly uneasy with it. Sienna had then shifted her focus once more, trying to only accept that he would be touching her without her consent. Accepting that had been much easier. It had given her an understanding of what was going to be happening and a person to hate while she was stuck here. \n\nIn the time that she wasn't trying to prepare to survive her time as Rorik's captive, Sienna was thinking about her people. How was her Grandma handling leaving her home? Had they walked through the night like Yasim had told them too? Were they rationing food? How were the little ones? The worst one she always came back to was, had they been caught? \n\nThe village had never really had an escape plan. The 13 women fleeing over a body of water so big seasons had passed trying to cross it had been their escape plan. The escaping was supposed to be over. Her Grandma and her kin were supposed to live in peace and now they were fleeing to escape slavery and death. Hopefully, Mama was keeping everyone calm. She always had a talent for that. \n\nSienna knew she had unintentionally switched from calling her Mother to Mama, but it comforted her, so she stuck with it. Typically, Sienna had only called her Mama when she needed something, to tug at the heartstrings of the older woman. In rarer times, she called her Mama when the two were feeling close. She prayed she could escape to call her Mama as many times as she could. \n\nThis time she didn't catch that Rorik was approaching. There had been people passing the tent all day, and though she had been on edge waiting for the first hour, the hours after that she had drifted in and out of herself, more detached than she probably should have been. Not like being on guard would have done anything, she could barely move. \n\nHis form swept through the tent flaps, sending fresh air floating past her face. Sienna inhaled greedily. In one hand he held a wooden bowl and in the other, he held two buckets, the sound of splashing water drawing her attention. Sienna cautioned herself not to look too interested, not wanting to give him anything to hold over her. Again, he didn't look at her as he took his teenaged-sized hammer off his back and put it across the tent from her. She noticed he kept his blasted dagger buckled to his hip. \n\nThe sight of Rorik in broad daylight was unnerving. He had blonde whiskers on his jaw and a slight flush across his cheeks that told him he had been exerting himself. He had a small spattering of hairs under his collarbone that were so light she hadn't seen them until he had turned to the side. His nose was slightly crooked and Sienna took pleasure in knowing someone had broken it at one point. Everything about him made her furious. \n\n\"Hello Sienna,\" he said. His tone was gruff, but not angry, as he moved about. \n\nShe said nothing, glaring at him from her position on the bed. Oh, how badly she wanted to sit up. His big hands scooped a cup into the bucket and he walked towards her, that bowl still in his hands. The smell of food hit her nose and her stomach growled in response. \n\nHis blue eyes scanned over her and fear that dropped down to her gut. Rorik had a look that she had never seen before, and perhaps that was what unsettled her most about him. His eyes made her feel like she did when the forest got too quiet, hushing to hide from a predator. When her eyes met his, her instincts screamed, Run. \n\nHe put the food and water on top of the trunk behind her and, as he kneeled, ripped off her blanket. Sienna's automatic reaction was to twist to hide her nakedness and the jerk she made left her groaning. She heard a snip and her ankle was free from the stake. \n\nHis lips twisted into a smirk as he sheathed the knife. \"Don't hide on my behalf, I've seen it all before.\" \n\nFury twisted her insides. \"Go fuck yourself,\" Sienna snapped. His smirk turned dark. Her feet dug into the ground to push herself away from him, not liking what might follow. \n\nShe got nowhere. Rorik kneeled and grabbed a handful of her hair, his fingers tight up against her scalp. She gritted her teeth as he wrenched her head back. \n\n\"Why don't you sit up?\" He asked quietly. Stupidly, Sienna opened her mouth to give him the truth she thought he wanted: she hurt too much. The words turned into an agonized screech as he lifted her to a sitting position with his grip on her hair. \n\nSienna cried out. Her stomach screamed in protest, then throbbed in the wakes of her movement. \"Feet under your ass,\" he snapped. When she didn't move due to lack of places to balance on, he pulled up with his fist. Sienna howled as she whipped her feet under her butt. The lifting stopped and she dropped onto her heels. The painful grip on her hair stayed. \n\nGasping, trying to ride out the tenderness in her body, she had nowhere to go as his free hand started softly tracing circles on her neck. With one hand tightly gripping her hair and the other drawing small, gentle patterns on her throat, he had her completely focused on him as the pain in her muscles calmed enough for her to breathe. \n\nHis voice was close but above her. This always-being-above-her was a pattern Sienna was not enjoying. \n\n\"Sienna, you and I need to come to an understanding. And what I mean by that is you have some things to learn.\" His drawing finger dipped to her collarbone, drawing her attention. He scared the shit out of her. \"You are no longer a free woman. You have been claimed, wholly, by the Gavali.\" \n\nThe pad of his finger distracted her as it slid down further, now playing with the tops of her breasts. Her skin rippled, goosebumps raising across her chest. \n\n\"Stop-\" \n\nFingers tightened in her hair, cutting her off. He continued as if she hadn't spoken. \"What this means is that, for now, I own you. Everything that goes in and out of this rather durable body of yours will do so because I willed it.\" \n\nTerrified, Sienna forced herself to snap, \"Let me go!\" \n\nHe wrenched her head back again. \"Shut up.\" \n\nSienna bit her lips together, her throat stretched to the point of limiting her breathing. She was trying to hide her winces arising from her bodies throbs and his tight grip on her hair, all the while trying to breathe slow enough to allow air through her tightened airway. She had never been overwhelmed so quickly. Everything was moving too fast. \n\nHis finger moved to drag along the sensitive undersides of her mounds, his short nail creating a sharper, more centralized sensation as his finger went round. Her nipples were hot and tingling as they peaked. \"You will speak only when told to.\" The fingers swirled back and forth across the skin under her breasts, itching ever upwards. His tug on her head went forwards now, so she was facing him. \"You will eat and drink only when I see fit.\" \n\nSienna wanted to tell him how many ways he would fail in owning her, but her words stopped in her throat. She hated it, but fear shredded the words in her throat. He was scary, yes, but Sienna had done many scary things in her life. But she knew this was different. The man was already touching her naked body without her permission. What would happen if she continued to fight? ",
        "The digit made its way around one areola, using only his nail, and a chill wracked through her, flinching at the contractions her muscles made. Still, the pain on her scalp and the gentle touches of her breasts was making her short of breath. How could he be so gentle and so rough at the same time? Why wouldn't he stop? What did he want? \n\nHe tweaked her other nipple without following his pattern, causing a surprised sound of indulgence to slip past her lips. She had never thought of her nipples as a source of pleasure before, but Rorik clearly had. His fingers played with her nipple, all of her thought space focusing on the direct line of heat from her nipple to her clit. The big hands were incredibly gentle as he rolled and pulled, seemingly waiting for something. Even with her lips pinched together, the heavier breaths were clear through her nose. \"You will feel pleasure when I see fit.\" His voice was getting closer to her ear. \n\nRorik's finger then tightened to pinch her nipple - hard. The sensitive tip burst into agony, the line of heat that ran to her clit erupting in flames. Sienna called out, her attempt at pulling away stopping abruptly as it increased the pain the pinch inflicted. \"You will feel pain when I see fit.\" His hand left her hair and grabbed her throat. \n\nSienna barely yelled a panicked \"No!\" before he had tightened his grip enough to cut off her breath. His lips were now pressed against her ear, his tongue tracing her cartilage. Even with his hand on her throat, holding her most precious commodity in his hand, the tongue at her ear and her pinched nipple caused a carnal streak of lust to shoot down to her pooling core. His voice was now just a rumble low enough to emulate a growl. \"You will breathe when I see fit.\" \n\nHer eyes rolled back. She was sick. She couldn't breathe and he was molesting her and yet Rorik played her body against her well enough to fill her with an animalistic yearning. How? The hate she had fostered sat deep in her soul and yet her bodies eagerness scampered around it, almost teasing in its indifference. \n\nHe let go all at once. Her freed nipple sent a crashing wave of desire straight to her pussy as she fell forward onto her bound hands. Sienna both gulped air and tried to breathe as little as possible to minimize her pain. Tears left her eyes as she struggled to breathe, waiting for the pain and panic to pass. Leaning forward like this hurt so much, her back stretching out and stomach curving in, her smarting muscles begging her to stop moving. \n\nA big hand laid itself gently on her shoulder, almost comforting in its weight. Sienna flinched, shaking her head as opposed to speaking. Who was this man? Why the gentleness? Sienna had never met someone so volatile. \n\nShe was overwhelmed and was having a hard time convincing herself that disobeying was what she should be doing. The animosity she felt for this man was raging, but her instincts were telling her self-preservation was more important than lashing out. Sienna's pride was in a broken mess, naked, hurt, and groaning in front of her enemy as he watched. Though she felt that rebuilding her dignity required defiance, she wasn't sure it was worth it with movement being so agonizing. \n\nRorik watched her hunched frame with satisfaction. There were small but painful looking bruises along her spine about halfway up her back, telling him she had hit the rock wall she had been gasping in front of yesterday. He was waiting until she caught her breath, but he didn't want to give her too much time to think. Giving her time to gather herself would be a mistake. He wanted her off balance and uncertain. \n\nThe rapture on her face when he had growled in her ear had been enough to make a lesser man fall to his knees. His breath and voice at her neck was clearly a thing for her, one he was all too happy to take advantage of. His hand on her throat had not been kind, the pinch on her nipple even less so, and she had eaten it up. Her bound hands hadn't shot up to push his hands away but instead pressed into her lap to try to relieve the pressure that was clearly gathering in her pussy. He pushed the thoughts of what he was going to do to her when she healed away, his dick jumping at the thought of finding a home inside her. \n\nFocus. \n\nSienna stopped shaking her head and her breath stopped rattling. That was enough. \n\nRorik's hand on her shoulder pulled upwards. She groaned and clenched her hands into a fist but didn't fight him as he lifted her to sit back on her feet, her torso upright. Rorik moved to kneel in front of her, taking in her beautiful, shaking body. \n\nHer cheeks were flush and her face spoke of pain and anxiety. The puffs of breaths in between the winces told him her arousal was still there, hidden under warring emotions. The bruises on her stomach really were a marvel. The skin on her abdomen was looked like she had been splattered with a mix of berries - the mix of light blue, crimson and a deep, violent purple where the hoof had connected had him impressed. Not many people could be so badly bruised and still recognize pleasure in their body. Rorik had a thought that he could have his head ripped off and still find a way to get hard for her. \n\nHer magnificent breasts moved with her breaths, her small beige nipples still rock hard. Her tits weren't large, but they were enough to fill his hands if he were to grab them. Most importantly, they were sensitive and extremely pleasing to play with. \n\nRorik took Sienna's chin in his hand, slowly raising her face to look at him. The chit closed her eyes rather than make eye contact with him. Rorik kept the smirk off his face as he grabbed her other nipple in the same pinch he had held the other one in. Her eyes popped open and she called out, her mouth agape and her brow creased in pain. \"Look at me.\" \n\nHer lovely chestnut eyes met his, the pain on her face turning to a rather fierce scowl. \"None of that,\" he corrected. The fingers pinching her nipple gave her a twist, not increasing the pain but rather giving her a shock. Her pouty lips opened in a gasp again and the scowl fell from her face. \n\nThe face she gave when she recovered was anything but happy, but it wasn't aggressive. He stopped pinching her and started to trace around her boobs again, keeping her aware of his presence at her chest. A dark part of him wanted to punish her more and figured a continuing lesson would be fitting. \n\n\"Who do these nipples belong to?\" \n\nFury flashed across her face and her mouth opened to say something he knew would be the opposite of what he wanted. Both his hands grabbed her nipples and squeezed, whatever was going to come out of her mouth falling into a long grunt. This time her bound hands did come up, her soft fingers closing around his right arm. She tugged his arm and her nipple was pulled outwards, the agony in her face rocketing higher. Her hands dropped to press back into her lap. Her cloudy eyes and the pained sounds that left her mouth provoked a feral pleasure to rip through Rorik. \"Who do these nipples belong to, Sienna?\" \n\n\"Stop!\" \n\n\"Not until you answer,\" Rorik said, breathing in her suffering. \n\nShe lasted a couple more twists and pulls of her buds, giving Rorik time enough to really understand how much he liked this. One twist of a nipple for any woman at home and they would be telling him everything he wanted to hear. Not Sienna. Not his wildcat. \n\n\"You!\" She spit out, her teeth bared as she practically gnashed at him. \n\n\"Sir,\" Rorik demanded, his pinch twisting in a punishing final point. \n\n\"Ah! You Sir!\" His shaft pulsed, adoring the words he forced out of her mouth. \n\nHis hands left her beige tips and pressed her bound hands further into her lap. She twisted and pulled her hands, no doubt wanting to press her nipples against something to ease the pounding. Rorik watched hungrily, her nipples reddening as blood poured back into them. Her cheeks were red now, embarrassed and horny, looking at the top of the tent as her ass made small squirming motions. Gripping her chin, he moved her face down so her eyes fell to his. The mix of pain and desire in her eyes told Rorik many stories of what his future held, and fuck if he wasn't fighting to hurry that future up. \n\nSienna stared at the man, unable to catch her breath as her stomach and vulva throbbed. The pain in her nipples had transformed to molten pleasure, roiling in her core. She hated admitting that because sitting up like this hurt a lot less than the position he had put her in last night, it was giving her pleasure a much longer leash. She felt the painful ache in her muscles and knew she couldn't do this for long, but it was muted enough that her mind could spotlight the pleasure was crashing through her. She was so confused and couldn't think fast enough to sort herself out. \n\nHis hand laid itself on her knee and she looked down. A finger lifted her chin so she looked at him again, holding her face there with a movement that told her, \"Stay.\" Rorik's face had hardened into intense, almost savage lines, and yet the side of his lips was lifted. If she had to guess he was both amused and turned on by what he was doing to her, but her lack of practice reading faces with ill intent left her unsure about the rest. \n\nThe bastard liked this. He wasn't just doing this to prove a point. Rorik actually enjoyed every bit of torture he was putting her though. \n\nThe hand on her knee started to crawl upwards, his light touch pulling goosebumps from her skin. Her bound hands pushed out to stop his ascension and his other hand was there to lift them. He pressed her hands into her chest, the rope around her wrists agitating her sensitive skin. \n\n\"Keep your hands there,\" Rorik voice almost made her start even though she was staring at his face. He was giving her a look that made her pounding heart skip. \"You will not like what I do if you move. Do you understand?\" His eyes swallowed her, demanding an answer. Sienna didn't want him to touch her at all, but if he treated her throbbing clit like he did her nipples the pain would be unbelievable. Her eyes dragged downwards and she nodded, embarrassed and terrified at what he would find when he touched her. \n\nHis finger tapped her chin and she looked at him. \"What do you say?\" Rorik asked as he slid his hand up her thigh ever so slowly. Her brain struggled for the right answer, hoping that if she found it he would stop. \n\n\"Ye-Yes, Sir,\" she whispered, watching as his eyes flared. \n\nHe looked down at her legs, giving Sienna an escape from his unsettling gaze. Did that mean she could look away? \n\n\"Keep your eyes on my face. Don't make he tell you again,\" he said as if he had read her thoughts, dropping another hand onto her other leg. Sienna clenched her teeth together, wishing her arousal would flee as fast as it had last night. But the itchy rope at her breasts and the hands creeping up her legs kept her much too stimulated, feeding her throbbing pussy. \n\nThe speed of her breath increased the higher his big hands went, taking both her desire and her muted pain higher. No no no no no no no, she chanted, horrified and incredibly aroused. The light caress of his hands was intensified by her inability to look, to see what he was doing. No matter that he wasn't doing anything surprising, the fact that she couldn't keep an eye on the unpredictable fingers scared her. \n\nHis hand finally reached her hip. She clenched her legs together, keeping her arms at her chest and trying to talk herself out of folding forward to cover herself, pain and punishment be damned. Her nipples were still achy from his treatment before, and if he squeezed her clit like that... \n\n\"Spread your legs Sienna.\" \n\nShe got it, he thought he owned her, he didn't have to touch her in order to make it true. \"Please,\" slipped from her mouth. His face lifted up to hers, the small smirk on his face gone. Her heart thudded loudly in her chest. \n\n\"Do not make me repeat myself,\" he snapped. Panic was spreading in her chest and tears gathered in her eyes. Slowly, she started to spread her knees apart. \n\nHis hand lifted from her leg and shoved her hands aside. \"Now.\" An explosion of heat and agony erupted in her nipple, holding her in place. \n\nSienna gasped and whipped her legs apart, saying \"Ow\" as many times as her mouth could move. He released her and again the wave of pain dropped straight to her channel, her clit and insides pulsing. Cool air blew over her wet mound. \n\nMother save me. \n\nQuickly she opened her eyes and looked at him, not wanting any more punishment. Sienna was still coming to grips with the transition of pain to some of the strongest arousal she had ever felt when he started talking. \n\n\"When I tell you to do something, you will obey immediately,\" his voice was annoyed but clear, his eyes hot. \"If I have to repeat myself, you will feel my irritation, understood?\" \n\n\"Yes Sir,\" she said quickly. Immediately she felt ashamed at the speed she responded, wanting to drop her eyes from his. Her pulsating nipple reminded her to stay put. His eyes searched hers as he sat on his heels in front of her, his knees going in between her legs, most likely to keep her from shutting them. \n\nThis man was making a habit of getting much too close. His presence was paralyzing her. Kneeling directly in front of her, he was a head taller than her. If she held herself still and tucked her shoulders in, anyone looking from behind Rorik wouldn't be able to see her. Unable to keep eye contact with the stare dissecting her every reaction, she shifted her eyes to the middle of his forehead. \n\nHe was looking down at her spread legs and didn't notice. She barely found time to be embarrassed that this man was looking at her most intimate place before he was touching her. His hands found their way back to the junction between her thighs and hips, both of them gripping with a firmness that seemed barely controlled. \n\nOne hand let go and moved along her hip, dragging a line of fire across her side and slowly lowering itself on one of her butt cheeks. He had to tilt forward slightly to reach her bottom, bringing his face closer to hers, his eyes pinning her in place. If she tried to look at his forehead at this distance she would go cross-eyed, so she had no choice to look into his eyes. The punishment he had levied so far was enough. \n\nHis fingers started to ghost over the skin of her ass. He was so rough and yet so gentle. Her brain had acknowledged it many a time and yet she still couldn't fathom it. \n\n\"Who's ass is this?\" Rorik asked, his voice quiet, opposite to the violent inferno in his eyes. \n\nSienna's eyes flicked between his, her nerves fluttering. He had made it very clear what happens if she disobeyed. Shame flitted through her. \"Yours, Sir.\" \n\nRorik's hand slid back to the junction of her hip and thigh and her panic rose. Logic told her what was going to happen next. She sunk her teeth into her bottom lip, trying to stop her whines from escaping her mouth. Her nerves were frayed and she felt like she was sinking into a never-ending pit. \n\nOne calloused hand spread out on her stomach, skimming just over her bruised skin, and then turned to fall down to the sensitive area right above her mound. Two fingers slid further downwards, and ever so slowly enclosed her clit in between them.  \n\nSienna was practically hyperventilating now. Rorik's fingers put no intentional pressure on her, but the mere presence of his fingers holding her clit was practically enough to throw her off a cliff. Why was this happening to her? Why did she let herself get so turned on? She didn't want this for Mother's sake, and yet his hands lit her on fire. His closeness made her want to lean forward and press herself against his broad chest. \n\nA dull throb was keeping her nipples engaged and a thrumming energy ricocheted in her clit. His hot, demanding hands resting on her and the threat of what would happen if she told him no had her dripping. She had no idea why, but it was undeniable at this point. Sienna fucking loved this. \n\nShe bit her lip and focused on the ache in her stomach, trying to pull herself out of her daze and away from her arousal. His other hand was floating over the inside of her thigh. She tried to close her legs and was stopped by his knees. The pads of his fingers slid underneath her. \n\n\"No, please, no-\" \n\nRorik rolled her clit in between his fingertips. Sienna inhaled sharply and whimpered as his fingers stilled. She was so close. Her body was fighting to throw itself off the cliff and her mind was desperately dragging it as far away as she could. \"You have no choice, Sienna. Quiet.\" \n\nAnd then he touched right behind her slit. Her body jerked in an odd combination of towards and away from the finger, a clear indication of the fight inside her. Rorik made no mention of her jerk, instead seeing fit to drag his finger from the back of her soaking wet slit to the front, right under her clit. \n\nSienna jerked again, this time downwards, her body starting to overcome her ego. All it wanted was just a bit more pressure. She ached for it. Just a couple twitches of her clit and maybe a rub or two on the responsive bundle of nerves right inside her entrance and she could fly. \n\nA \"Please\" rose in her throat and she barely stopped it. It would have been clear what she was asking for. Sienna was devastated he had found the pool between her legs, but it was in the same way she was experiencing the pain from the horse kick. The shame at being found slick was there but wasn't really sinking in. \n\nHis fingertip continued the shallow path along her slit, twisting and turning to create different sensations. None of them were enough. \n\n\"Who does this clit belong to?\" His voice was deep again, that same growl that had made her so wet in the first place. She barely recognized it was her ass that twisting on her heels, trying to increase the sensation. She was shaking. \n\nShe tried to keep silent, batting off every wave of pleasure that grabbed at her, attempting to drag her down with it. As if he saw how close she was, all he did was twitch the fingers holding her clit. It was an imitation of a pinch, but the pleasure and fear that rocked through her were enough for her to respond. \n\n\"You, Sir,\" she gasped. Rorik was shifting, moving one of his legs on the other side of hers. His foot planted itself on the ground and he lifted so his face could reach her ear again. His breath came fast on her neck and he made a Mmmmm sound deep in his chest. He was pleased with her, and if her channel pulsing as if to suck that noise straight into her body was any indication, that thrilled her. \n\n\"Dear Mother,\" she whispered. \n\n\"And who's cunt is this, Sienna?\" He demanded, his voice pouring heat into her core. With those words pressed up against the shell of her ear, Sienna was gone. The word cunt was foreign to her, but it was nasty and degrading and so, so hot. She fell into that deep daze she had been fighting off, into a place where only the sensations of her body mattered. \n\n\"Yours, Sir.\" Sienna heard herself gasping. \n\n\"Who does this cunt weep for?\" \n\n\"You Sir.\" Fire was everywhere. \n\n\"Why are you so wet Sienna?\" \n\n\"I-I don't know!\" She cried, desperate for this to be over. Whatever way it ended, just let it be over. \n\nRorik plunged two fingers into her and immediately pressed them against her front wall, right over her favourite spot. The stretch was glorious. \n\n\"Fuck!\" Sienna yelled, her voice raw. She bucked, her eyes rolling. She was floating over the precipice, and she knew if something wasn't done very soon her orgasm would be ruined, turning into an unsatisfactory bunch of pulses and jerks. She couldn't think of anything else that mattered. \n\n\"Say it!\" Rorik ordered. The fingers inside her curled over that special bundle of nerves. \"Who made you so fucking wet?\" ",
        "\"YOU!\" \n\nHis fingers left, her whole world slowing with the drag of emptiness that followed. \n\nAnd they plunged back into her, pressing on her bundle of nerves, as his other hand flew over her clit. \n\nThe explosion was immense, stealing reality from her, the waves of mindless pleasure a typhoon over her body. Fire licked her insides and black twirled over her vision. She was making noise but she couldn't hear what. The pleasure and pain played a deadly tug of war with her, pulling her in and out of the depths she had ached for. His fingers passed over her clit in a flurry as Sienna clutched onto the bliss that raged to have her all to itself, struggling to make it through as each wave blindsided her. \n\nComing out of the other side of her orgasm was almost as unnerving as flying into it. \n\nRorik was holding her collapsed body, stroking her clit slowly, dragging more shockwaves than she wanted out of her. She was panting, blinking to reorient herself between shockwaves. Her brain had ceased to work and was stubbornly holding onto the blissful quiet it had found in the moments before her orgasm. Two fingers slipped into her mouth, covered in a sweet but salty substance. She sucked absentmindedly, rolling her tongue around the digits. \n\nThe hand left her clit. Fingers found her hair, scratching lightly over her scalp. Shivers and the odd aftershock flitted through her. \n\n\"Who owns this mouth, Sienna?\" His voice was quiet and it washed over her gently. He removed his fingers from her mouth. \n\n\"You do Sir,\" she muttered softly. She just wanted to be left alone. Blunt fingers found their way back to her slippery folds, tucking in to shove their length in her. Her eyes were wide as a pleasure that bordered on pain shuddered through her. \n\n\"Who was that orgasm for?\" \n\n\"You Sir.\" The fingers left and she watched, detached, as he put them in his mouth. Her heart pounded in the background, some part of her recognizing the depravity of the action. It was odd watching him tasting her - watching his eyes flicker in delight. She knew he liked torturing her, but for some reason, she hadn't expected him to like something in her body so closely related to pleasure. \n\nHe looked down at her, his eyes glowing with that same scary look he had come at her with. \"Who owns this body?\" \n\n\"You Sir.\" \n\nHe was quiet for a moment. \"Good girl,\" he responded in that same gentle tone. A harder shiver ran over her. \"You're a very good girl, Sienna.\" The shiver rocked her again and she thought of how thirsty she was and how much she hated him. \n\nRorik stroked the hair atop her head until he was sure she was out of her post-orgasm state and was actually accepting his touch. She was boneless against him, her gorgeous chest flush and her hair tangled on his chest. Her eyes were staring straight forward now, dazed and unhappy, but he had seen her small mouth open in shock as he had tasted her. He liked that he shocked her. \n\nSienna's answer to who owned her body had been wrong. She belonged to the Gavali now, Daughter of Ziva or not, but hearing her say it was he who owned her instead had sent a shock of heat to his dick so intense that he hadn't even dreamed of correcting her. \n\nSienna was both something out of a dream and something that had been drug up from the pits of hell to torture him, all at the same time. Her orgasm had damn near strangled his fingers. Rorik couldn't remember the last time he had been so close to spilling in his pants. Even now he was fighting himself, repeating all the reasons why he knew fucking her right now was a bad idea. Her tongue swirling over his slick digits had him dreaming of thrusting his cock into her scorching mouth. His fingers twitched as they tucked a piece of hair behind her ear, the depraved part of him demanding its due. \n\nHe noticed her stomach was growling and her lips were dry. Before he could do anything stupid, he slowly pushed her pliable body off of him and sat her up. This time he folded her legs in front of her so she sat on her butt. Her feet might have been asleep and he didn't want anything he could control to make her uncomfortable after she had given him what he had wanted. \n\nGrabbing the water and the stew from the trunk, he sat on it to feed her as far away from her as he could. He had to coach her to drink and eat from his hands, but she did so willingly once she understood. She said nothing and kept her gaze on his feet, but that was fine with Rorik. She could gather herself as much as she wanted, nothing would change what just happened. \n\nOccasionally she winced, but it wasn't hard or often enough to worry Rorik. Tomorrow he would make her walk, but he figured she had enough deep breathing for today. \n\nAfter she finished her stew he gave her another cup of water and placed an empty bucket near her bed for her to use when she needed to. She drank it solemnly as he took one of her feet to tie it to the stake again. \n\n\"I am going to untie your hands Sienna,\" he said. \"Don't make me regret it.\" \n\nHer whisper was barely audible. \"Yes, Sir.\" \n\nWith that, he cut off the bonds on her wrists. He kept vigilant as he massaged her wrists, waiting for a twitch that would tell him she was going to move. It didn't come. He wanted to believe she was his, that her fight was over, but there was always a relapse period. His intuition and experience told him no matter how much her body wanted him, Sienna was not on board yet, no matter how uncharacteristically mellow she was being. \n\nIt took him a long moment to finally understand she was waiting for him to leave. That's why he was getting no anger, bitterness, or shame. Sienna was keeping everything down so she didn't explode in front of him. He toyed with the idea of pushing her so she couldn't help but break down in front of him, leaving him to comfort her. He had many questions about her people, but it wasn't imperative he got it immediately. Either Boris or Alexander was no doubt on the way back to report which way her people were heading, and a village of people didn't move quickly. \n\nIt took him a couple minutes, but eventually he dismissed the idea. If he stayed he would end up fucking her, and that was not a possibility right now. He had made some good progress and didn't want to ruin anything. There was all the time in the world to break this girl, and he had things to do. \n\nShe was limp as Rorik gently laid her down and covered her with his blanket. He ran his fingers over the tangles in her hair as she stared away from him, her eyes glossy. \"Submit to me, little wildcat,\" he said. \"Accept this and the Gavali will take care of you.\" \n\nWith those words, he turned and walked out of the tent. \n\nJust as the tent flap swayed inwards, Sienna's tears burst forth and her hand shot to cover her mouth. Dear Mother, what have I done? \n\nDevastated wasn't harsh enough to describe the horrid roiling of emotions in her chest. Her whole sense of self was crumbling. Sienna had always been honest with her reactions socially, that wasn't something she could help, but when the times called for it she was dependable, strong, and composed. He had taken that part of her away from her today. No, she corrected herself, you gave it away. He pinched and plucked you and you handed him your resistance on a platter.  \n\nHer sobs wrecked her, ripping into already throbbing muscles from her orgasm. Mother, her body hurt. Sienna felt every moment of pain and accepted it as her penance. This is what she got for giving into him. This was her punishment for letting her pleasure overcome everything that mattered to her. \n\nDesperation and sadness rolled off of her as she held her hand over her mouth, making sure no one other than herself knew she was crying. Sienna did not want any of these vile men to take an ounce of satisfaction that she was breaking apart. \n\nIt took Sienna about an hour to truly calm down enough to think clearly. Her tears had dried up and her body was cold but relaxed. She had kicked off his blanket in the middle of her hysterics, but the chilly air was keeping her relatively calm and centred, so she kept it off. As calm and centred as she could be anyway, naked in the middle of her enemies camp. \n\nWhat the fuck are you going to do, Sienna? \n\nShe sighed loudly, uncaring as the horse kick radiated pain through her. The reality of the situation was she was stuck here for the time being, and though acknowledging that felt like a step, she knew it wasn't. Sienna had already run over that in her head, thinking it fully accepted, and yet here she lay, exhausted and beat down after a sobbing fit of epic proportions. \n\nIn the semi-detached, cathartic state that one could only reach after a violent expulsion of emotions, Sienna had been able to conclude that the only way she was going to get out of here is if she kept giving in like she had today. Conceding to that fact had felt like swallowing dry hay, but she knew it was the truth. Here she lay, her foot with more give and her hands untied. Rorik needed to see she was submitting to him so he would give her more freedoms. Pretending to submit wasn't something she could do, obviously. The way he worked her body wouldn't allow her to pretend. Maybe once she wasn't so sore she could keep more wits about her, but honestly, she doubted it. \n\nSienna just had to make it one more day. One more day, a couple more times, until she could move without pain. Then it would be one more day, however many times she needed until he made a mistake and she could run. \n\nBut how long would that be? She would be bleeding in less than two weeks, and the Sienna knew he would be fucking her by then. She had felt his hard length pressing up against her each time he toyed with her body. A man who treated her like he was wouldn't be waiting much longer. The Mother only knew why he was waiting at all. \n\nPausing, Sienna recanted that. If she was meant to bear children, wouldn't a hoof right over the place she would grow them be worrying? Especially if women who could bear children were scarce where he came from. In the two days, he had never pressed or prodded at her stomach to cause her pain. It had always been somewhere else. Even in her village, when she was pretty sure he hadn't even known about the horse kick, he had avoided her torso completely. \n\nIf the Gavali needed her for procreating, then having sex with her like she knew he wanted to wouldn't be feasible while she was injured. It would not be distant and quick like any unwilling captive would want. Nor would it be the pleasurable but awkward affair like Sienna's first. If she had learned anything in her few encounters with him, it was that Rorik's fucking would be rough, dirty, and carnal, and taking her any other way just wouldn't do for him. So he was waiting until she healed so he didn't harm her chances of giving birth. \n\nHow kind, she thought, bitter and sarcastic. \n\nThe idea that Rorik wouldn't be treating her like she wasn't disposable was deeply unsettling, in the same way that her village had once taken a baby buffalo from its herd and treated it well until it was big enough to eat. Sienna was the baby buffalo, and she didn't know how long it would be until he figured she was ready for slaughter. \n\nThough she didn't know what becoming disposable would mean for her, all she could hope was that it took long enough for her to figure out how to escape. \n\nxxx \n\nRorik was eating dinner by the fire with most of his men when Boris came thundering into camp, his eyes searching the bundle of people. Standing, Rorik drew his attention and started towards him, hearing Casmir moving to join him. \n\nBoris was panting as Rorik reached him. \"Voivode-\" \n\nRorik held his hand up, stopping the man. \"Let's go to Sergei's tent, Boris. We can talk there.\" \n\nNodding, Boris had a look Rorik could only pin as worry. Boris had been a part of his team of men ever since Rorik had been named Voivode, and Rorik rarely saw anything but a guise of careless neutrality on the man's face. Something was wrong. \n\nSergei was cleaning his medical tools when they entered. Yasim was occupying the farthest bed, her hands and feet tied to stakes at her hands and feet. There was a black piece of cloth over her eyes and another over her mouth, no doubt holding another bundle inside her mouth. He had heard she had almost gotten out of the tent, even with her hands and feet tied, so he wasn't surprised to see her bound so thoroughly. Nikolai hadn't woken yet, but his face looked less pale and he was breathing soundly. \n\n\"Alright, Boris,\" Casmir said, giving the man leave to speak. \n\nBoris pulled a piece of parchment out of his belt and spread it out over the only table in the tent, which also happened to be over Sergei's tools. The surgeon shifted, displeased, but interested in the quasi-map in front of him. Unaware, Boris flew into an explanation while the other three men leaned over the drawings. \n\n\"Alexander and I tracked them along the coastline, until here,\" he said, pointing to three peaks. \"The coastline became impassable, so they tucked in between these hills. It was here that we were expecting to find them resting, but they weren't. These people are really running, sir. They must have gone through the night. So we followed their trail through the hills, along this river where we assume they were trying to lose us. Half an hour east is where the trail picks up, right around the mouth of this valley, sir.\" Boris stopped to look at his warlord, not looking forward to delivering this news. \n\nRorik breathed, keeping his jaw set and his face calm. He knew. \"What happened Boris?\" \n\nBoris' brow furrowed further. \"They split up, Voivode. It took a while, but Alexander found about twenty or more separate trails, probably the families keeping together. But the valley is more a canyon than anything - rocky as all hell. The faint lines Alexander drew here track two trails, both going right but splitting at this ridge. One trail leads out of the valley, the other on top. I followed these trails while Alexander drew the map, and when I found nothing -\" \n\n\"-you came back,\" Rorik finished. He pushed his fury down - that helped nothing. \"You did well to come back and get help, Boris. Go eat and gather yourself. We're leaving within the hour.\" Boris nodded, relief lightening his brow, and he left. \n\nRorik turned to Casmir, the man standing solid and ready, even though he knew Casmir had a long day arranging the volunteer Gavali to the tasks they were best for. There was no frustration on his Second's face, even though they both knew all those tasks he had so efficiently delegated were now going to hell, and it reminded Rorik how much he appreciated the man. \n\n\"The hunting party and anyone with adequate tracking abilities needs to be ready to leave within the hour,\" he said. \"Tell the men any infertile women we find from this village will be available for them to claim for the duration of the trip, and only until then. This is not permanent and there will be no ringing. Punishment for ringing a woman is 100 lashes.\" With the knotted whip Rorik used, the punishment would put them in Sergei's care for weeks, and only if they were strong enough to make it there. \n\nUnder normal circumstances, claiming a barren woman was typically done for life in the Gavali clan. A man would petition the Chief and the father of the woman for her, and if it was deemed a good match then it was approved. A ceremony would follow where the woman would receive a piercing in her ear, what the Gavali called a ringing, to show she was not to be touched. A man putting their hands on a claimed woman gave way to some rather harsh punishments carried out by her husband. Since the infertile women in the clan they chased would not be accompanied by their fathers or husbands, they would be left unprotected. \n\nAll unclaimed Gavali women were kept under close watch so that a man her family deemed unworthy couldn't wrest her away, something that often happened if the family wasn't diligent enough, or the man unusually persistent. It was frowned upon, and if the man was caught he was punished, but it was generally understood. Just about every young Gavali man had kidnapped a woman or two. Ringing a woman was not something a man could take back, so most of the cases the woman was taken for a day or two but returned unclaimed, just more aware of her sexuality. Short term dalliances were preferred to having an unhappy, spiteful household all because of some short-lived passion. Couples that did not work well together did not benefit the future of the clan. \n\nRorik understood they were not under normal circumstances. Verbally allowing men to have dalliances with the sterile woman they found here was inevitable in Rorik's mind, no matter how frowned upon it was on Gavali territory. Most of the men who had come on the trip were single, and putting a multitude of single (or newly single) women in the same proximity and expecting those men to leave well enough alone was irresponsible. This would raise spirits and allow men tension release without a long-term commitment, and help these free women become accustomed and to the ways of their new clan. \n\nThere was no shock on Casmir's face. Clearly, he had known this blatant deviation of Gavali rules had been coming. Along with ensuring Rorik's orders were communicated and followed, he was also the filter between the men and Rorik. Questions, concerns, and even rumours were brought to Casmir's attention before being passed on to Rorik in a more condensed version. The lack of shock on Casmir's face told him the fact that Rorik was keeping a woman in his tent had been thoroughly communicated. \n\nIn between the anger and frustration boiling in his chest from the most recent blot in his plan, he found he liked that. He knew his men. He knew the men were asking if they were allowed to follow his example and claim one for their own, because they knew she was off limits. They recognized Sienna was his and his alone, and no one dared to fuck with what belonged to him. No matter the timeframe that limited the perception, having his men consider Sienna his had him growing hard against his trousers. \n\n\"I can get the volunteers who can track ready, sir,\" Casmir confirmed. \n\nRorik rolled his shoulders, his anger at being thwarted truly beginning to gather as he turned his thoughts back to the predicament. \"Then I'll talk to the hunting party.\" Casmir bowed and left as Rorik turned his attention to the healer. \n\n\"Sienna is tied to a stake beside my bed. Her hands are untied, but you may tie them if she acts out. Make sure she alive and well when I get back, Sergei,\" Rorik commanded. Sergei nodded and stood there, staring. Waiting. \n\nRorik gritted his teeth, his mood plummeting the longer his own feet stayed unmoving, knowing what instruction Sergei was waiting for. His revelation that his men recognized Sienna belonged to him was clear in his mind, but he found he was having a hard time leaving it to chance. His ego wanted to believe the fact that she lay on his furs meant enough, but Sienna was a beautiful woman. If he came back and found her leaning into Sergei like she had for him today, Rorik would act... unwisely. \n\nBoth men stood in the dim light of the surgical tent, Sergei patient and almost understanding, which only made Rorik's aggravation grow. \n\nFinally, Rorik moved towards Sergei in a threatening manner that was both unnecessary and telling. \"Remember your own advice, Sergei. Avoid strenuous activity, for both her health and yours.\" Sergei had barely nodded his assent before Rorik had whipped around and left. \n\nHis strides were long as he strode through camp. How could he have not seen Sienna's people splitting up? A very antagonizing blinder, that's how, he snapped at himself. Mistakenly, he had not believed the people fleeing from them had the intellect to divide themselves. The people had stone weapons and threadbare clothing, for fuck's sake. ",
        "Having acknowledged two faults of his in one day, he was furious with himself. This was not a pattern that would continue. The blood pumping through his veins had him needing to slake himself in a way he couldn't. His feet were carrying him into dangerous territory, especially with his temper running so high, and yet he didn't stop himself. \n\nRorik flew into his tent. Sienna's naked body barely had a moment to skitter backwards before he was on her. \n\nHe dropped onto one knee and picked her up, revelling in her terrified yelp, and put a palm on her ass to push her crotch into a cock so hard it could have been forged from steel. His other arm was wrapped around her mid back to her shoulder, holding her against him so her face was inches from his. He wanted to see every second of this. He wanted her to see her impending doom. \n\nSienna's cocoa eyes were wide, shocked and unnerved. Her soft breasts pressed into his chest, only his tunic separating them from being skin to skin. Her hair was knotted from his fist earlier and her chilly skin still smelled like sex. Her hands were pushing his arms ineffectually, her nails digging into his skin, and yet she said nothing. Her mouth opened and closed a few times. Was she trying to find the courage to tell him to go fuck himself again? \n\nRorik rolled his hips against her, pressing his pulsing erection into his best estimation of where her clit was. Sienna's brows dropped from the middle of her forehead to that pretty frown she got when encountering pleasure. Her teeth bit the inside of her lip, undoubtedly fighting against it. His eyes stayed on hers as she took in the fury sitting in the lines of his face, and he watched as her pained and anxious eyes melted into sweltering pools with each thrust of his hips. \n\nHe waited until the push of her hands had stopped. With a hard push of her ass and a much more punishing roll of his hips, her mouth fell open and a sinewy leg crept around to cling his kneeling thigh. He lunged, capturing her lip in his teeth instead. He bit down until her groan washed over him, fevering both his anger and his desire. He let go of her lip and continued the rough circles that had her breaths coming hard. \n\n\"I am leaving, Sienna,\" he rasped, his lips whispering over hers in a pretense of passion. This was a rampage hidden in erotic touches and they both knew it. \"When you think of me, and I know you will, I want you to tell yourself who you belong to. I want you to remind yourself who's fingers made you come. Who that pussy aches for.\" \n\nHer leg tightened against him, pressing herself harder against him, and he snarled at the inadvertent maneuver. Fuck. She was gasping and he was torturing himself. \"You best heal quickly, little wildcat, because when I get back I am going fucking destroy this hot, desperate body of yours. And maybe when your cunt shatters around my dick you'll stop pretending you don't want this.\" \n\nRorik stopped just short of throwing her down, and when she landed on her back she winced harder than he liked. She looked horrified and confused enough to hide under the blanket until he returned. Still, he couldn't stop himself. \"If you try to escape, I will slit Yasim's throat and make you watch as she chokes on her own blood.\" \n\nHe turned and walked out, Sienna's whimpering breaths disappearing as he went in search of the men who would help bring her people to heel. \n\nxxx \n\nI love switching perspectives, and I really try to make it clear who is speaking when so I don't have to put a separator in the middle of them as I find that disrupts the flow of the story. But if I haven't mastered the art of changing perspectives yet and you find yourself getting lost, please let me know in the comments so I can fix it in upcoming chapters."
    ],
    "authorname": "Blovely4you",
    "tags": [
        "non-con",
        "dominance",
        "submission",
        "dom/sub",
        "d/s",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/daughter-of-ziva-ch-03"
}