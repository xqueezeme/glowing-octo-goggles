{
    "title": "Lake Timberland - Day 02",
    "pages": [
        "LAKE TIMBERLAND\n\nDAY TWO\n\nI checked my phone for the time. 8:16AM\n\nIt's hard to believe that Dad and I had only been fishing for two hours. Time seemed to drag on painfully slow as we sat in the boat, staring at our lines out in the water.\n\nThe fish must've been interested in anything but our hooks because neither Dad nor I had yet to feel a single bite, which left me alone with my dirty thoughts.\n\nI couldn't stop thinking about Mom and I's alone time in the hot tub, how naughty she'd been with me. Every time I closed my eyes I envisioned her sliding her hand up and down my throbbing boner. \"Mmm cum for Mommy,\" her sexy voice rang in my ear. It was like she'd pulled a fantasy straight out of my spank-bank and acted it out for me.\n\nA part of me wondered if this was all just a dream. I'd never seen this side of Mom before. Maybe this side of her only existed in some fantasy world I'd conjured up in my sleep. Then I remembered the wine and couldn't help but ask myself \"Was she just drunk? Had I taken advantage of my drunken mother?\"\n\nAs I let the guilt set in, another memory surfaced. \"Mmm, that's it baby! Cum all over mommy,\" I remembered her begging. The sudden memory made me feel like such a sleaze bag. I knew If she were sober, she'd have never said anything that vulgar, or so I thought.\n\nPING!!, the loud tone of my cell phone snapped me from my trance. Dad heard the familiar sound and glared over his shoulder at me from the front of the boat.\n\n\"Sorry,\" I muttered as I clicked the volume key down to vibrate.\n\nHe shook his head in disgust before turning back to face the water. He didn't have to say anything for me to know what he was thinking, 'Kid's these days and their constant need for technology.'\n\nI swiped my phone to life and saw the notification of a text message displayed across my screen. I gulped in fear when I noticed who it was from, then I opened it.\n\nMOM: Morning stud!\n\nMy smile returned. It's funny how two simple words, eleven letters, can put all your fears to rest. Clearly Mom hadn't woken up with instant regret like I'd feared! I excitedly typed a charming reply.\n\nDANNY: Morning beautiful! How'd you sleep?\n\nI pictured her infamous smile as she read what I wrote. Her response came a moment later.\n\nMOM: Aww. Like a baby actually. I'm still lying in bed lol\n\nI was jealous. Crawling back into bed sounded nice, especially cuddling up to her in her warm and cozy bed.\n\nMOM: Hows it going out there?\n\nDANNY: Better now that I'm talking to you\n\nI felt like a young teenager again, texting my crush for the first time, wondering how she'd perceive my attempt at flirting.\n\nMOM: Well aren't you quite the charmer this morning! Your dad can't see who you're texting can he?\n\nI knew that he couldn't, but I glanced up at him just to be sure.\n\nDANNY: No, his chair is faced away from me\n\nA full minute passed before my phone buzzed again. This time she'd sent a picture message. I swiped my touchscreen open and had to laugh. Mom had taken picture of the laundry pile on the bathroom floor that the four of us made collectively. She'd fished out the famous white cotton panties and placed them directly on top.\n\nMOM: You forgot your hat in here this morning\n\nDad heard me chuckle and glanced back in time to catch me with my nose buried in my phone.\n\n\"Can't you put that damn thing down for one second?\" He scowled, gesturing to the water and the natural beauty surrounding our boat.\n\nI refrained from reminding him that the fish weren't biting anyway and waited for him to face the lake again.\n\nDANNY: I knew I was forgetting something lol\n\nMOM: I just hope you're head doesn't get sunburnt out there, silly\n\nI loved how goofy and oddly comfortable Mom was joking about her panties with me. It was like she'd woken up in a playful mood, ready to pick up where we left off.\n\nDANNY: I promise to be more careful from now on\n\nMOM: You better be!\n\nThe familiar feeling of adolescent butterflies fluttered around in the pit of mmy stomach as I typed back a candid reply.\n\nDANNY: I'm gonna have to hot tub with you more often!\n\nMOM: I second that! Are we on for tonight?\n\nI couldn't help but smile. This was shaping up to be another wonderful day of vacation!\n\nDANNY: I can't wait!!\n\nMOM: Want me to pick out a new hat for you?\n\nDANNY: Haha. Only if it looks like the panties you're wearing right now\n\nMOM: Who says I'm wearing panties right now?\n\nMy eyes widened as did my smile. I sent her the emoji that best matches that expression.\n\nMOM: I'm jumping in the shower goofball. Hold that thought ;)\n\nHold that thought is exactly what I did. A big helpless grin took over my whole face as I sat there day dreaming about Mom in the shower.\n\nI imagined sneaking into the bathroom with her, watching her glide her soapy hands all around her naked body.\n\n\"Mmm,\" I imagined myself murmuring, letting my presence be know.\n\nShe smiled over her shoulder at me. \"Morning stud! When'd you get here?\"\n\n\"Just now,\" I answered, mesmerized by her naked backside.\n\n\"Took you long enough,\" she teased.\n\nMy leering eyes dropped to her magnificent ass lathered in suds. \"You seriously have the nicest ass, Mom!\"\n\n\"Aww, thank you baby!\" She reached back and grasped the swells of her soapy cheeks. \"You really think so?\"\n\n\"Absolutely!\"\n\nShe jiggled her ass in her hands. \"You like that?\" she giggled.\n\n\"What's got you so smiley?\" questioned Dad, waking me from my dream.\n\n\"Nothing,\" I snapped, frantically shaking the dirty thought from my head. I regained my composure and noticed Dad's chair swiveled in my direction. He was giving me an off look.\n\n\"You were sitting there smiling like you won the lottery or something,\" he chuckled.\n\n\"Was I?\"\n\nHe cocked an eyebrow with a knowing smirk. \"You we're day dreaming about a girl weren't you?\"\n\nObviously I couldn't tell him who, but I figured I could maybe skirt the truth, just a little.\n\n\"Yeah,\" I sighed. \"A girl I recently started talking to actually.\"\n\n\"Well I guess that explains why you've been attached to that damn phone all morning.\"\n\nI glanced down at my phone lying in my lap. \"Yeah I guess we've been texting a lot today.\"\n\n\"How long you been seeing this one?\" He asked, genuinely curious.\n\n\"Um...a few months.\"\n\n\"Months!?\" He seemed surprised. \"Does this mean you'll finally be bringing a girl home for your mother and I to meet?\"\n\nI chuckled lightly. \"No. Not this girl, Dad.\"\n\n\"Why not?\"\n\nThis was a question I seemed to hear more and more each year. Dad was always on my case about settling down with nice girl and getting my life started.\n\nI chose my words carefully, trying not to say too much. \"She's a bit older than me for one,\" I began, offering only a sliver of truth.\n\nHe cocked an eye brow. \"How much older?\"\n\n\"Um...let's just say older,\" I chuckled. \"Anyway, we've both agreed this is nothing serious. We're just having a little fun.\"\n\n\"Just having a little fun huh?\" he smirked, reaching down for a couple beers from the cooler by his feet. He handed me one, then held his up for a cheers. \"No harm in having a little fun I guess!\"\n\nI almost felt guilty as we clinked our cans together. Dad took a healthy swig from his before swiveling his chair to face the water again. A few minutes later my phone buzzed in my lap.\n\nMOM: Black\n\nI was confused at first.\n\nDANNY: Black??\n\nMOM: You asked about the panties I'm wearing, remember? I just slipped on a pair of black satin panties ;)\n\nMy guilt was overtaken by desire as I pictured Mom sliding a pair of sexy black panties up her freshly showered legs. I did a flashback of all the panties I'd discovered in her suit case the night before and figured out which pair she was referring to.\n\nDANNY: These panties you're wearing, they wouldn't happen to be trimmed in white lace would they?\n\nMOM: lol maybe \uf04a\n\nLuckily I didn't have spend too long drawing the image in my head, my phone buzzed a moment later with an actual picture. A close-up of Mom's midsection filled my four inch screen. The exact pair of black satin panties clung to her form, shimmering in the light, making her covered poochie sparkle like a diamond.\n\nMOM: I forgot how comfy these are!!\n\nDANNY: Damn! Those look even better on you than I fantasized!\n\nMOM: Haha!! You know, mr snoopy pants, it's not gonna be as much fun flashing you my panties all week when you already know everything I packed\n\nI smiled wider than ever, wondering how long she'd been planning this.\n\nDANNY: Trust me I'll still enjoy it!!\n\nMOM: Perhaps Molly and I will have to go on a little shopping trip today\n\nDANNY: I can't wait to see what you buy\n\nMOM: Lol! Speaking of your sleepy head little sis, I think I hear her finally getting up. I better get dressed. Ttyl baby. Love you!!\n\nDANNY: Love you too mom\n\nI slid my phone into my pocket, figuring I was done texting for a while. The next few hours practically flew by. Dad and I tried a different fishing hole and ended up reeling in a few nice fish. We celebrated in a cheers after each catch. It wasn't until fishing slowed back down that my pocket vibrated with another text. I couldn't yank my phone out of my pocket fast enough.\n\nMOM: May I ask for your opinion on something?\n\nI could only imagine what that might be. I excitedly texted her my answer.\n\nDANNY: Of course!! Anything!\n\nA minute later I received another picture message. This time she was standing in a dressing room, taking a picture of herself in the full length mirror. She had an even skimpier bikini on than she wore the night before.\n\nMOM: How does this look on me?\n\nMy mouth fell open, staring in awe at the screen of my phone. I zoomed in on her tightly encased boobies cupped in navy-blue spandex. I could just barely make out the shapes of her thick nipples hidden within. I then zoomed in on her covered pussy. The triangular crotch was narrow, leaving the sides of her creamy mound partially exposed.\n\nDANNY: Oh god! You have to buy that\n\nMOM: Do you think your father would approve? Lol\n\nIf Dad had hang-up's about the bikini she wore the night before, he definitely wouldn't approve of this one.\n\nDANNY: Sadly I don't think he would\n\nMOM: Well we're about to find out. Hahaha\n\nJust then, I heard Dad scoff from the front of the boat. I looked up and could tell he was looking down at his cell phone. He typed something angrily into the screen, shaking his head, then shoved the phone back into his pocket in a huff. A few seconds later I received Mom's text.\n\nMOM: You were right lol. He thinks I need to start being modest in front of you and Molly\n\nDANNY: Hey I'm not complaining! Haha!\n\nMOM: Don't worry sweetie, that's not gonna happen. And I'm still buying that damn bikini!\n\nDANNY: It looks so good on you!!!\n\nA few minutes went by before I received another text, followed by a picture.\n\nMOM: One more question. Pink or yellow?\n\nIn the picture, she had two separate pantie-sets laid out on the dressing room bench. One yellow, one pink. The yellow pair was made of a sheer see-through material that I could only assume would do very little to hide her pussy. The pink pair was a basic thong that would cover her pussy but then wrap around and disappear into her ass. Both scenarios sounded delicious.\n\nDANNY: I'm a sucker for thongs, but that yellow pair looks interesting. I imagine either pair would look better on you than lying on that bench lol\n\nMOM: You're cute! Thanks for your input\n\nI waited for a follow-up text but it never came. After about 10 minutes, the suspense was killing me, I had to know which pair she bought.\n\nDANNY: So which pair did you buy??\n\nHer teasing response came a few minutes later.\n\nMOM: Play your cards right and you might just find out\n\nI didn't exactly know what she meant by that, but I knew I definitely didn't want to play my cards wrong.\n\nDANNY: Okay! Deal!\n\nSecretly I hoped she'd bought the see-through yellow panties. The thought of possibly seeing her pussy so clearly through the transparent material had my mouth watering.\n\nMOM: Molly and I are driving back to the cabin now. Text me when you guys head for the dock okay?\n\nDANNY: Okay I will\n\nI put my phone away and struck up a conversation with Dad to pass the time. We chatted about little of this, little of that, covering all the topics guys really care about: football, money, cars, even politics. Before I knew it, an hour had passed and it was time to head in.\n\n\"What do you say we head in for the day,\" Dad said, reeling his line in one last time. \"We'll take a crack at em' again tomorrow.\"\n\n\"Yeah sounds good to me Dad\" I nodded, reeled my line in too.\n\nDANNY: We're headed for the dock\n\nMOM: Yay! See you soon\n\nIt was about 10 minutes later when we rounded the bend into our private cove. I spied Mom already standing on the dock waiting for us. She looked stunning as usual, wearing a loose fitting sun dress with no shoes on.\n\nShe spotted us and gave us a cute wave.\n\nDad showed his talented boating skills by weaving around all the boulders sticking up out of the water. He killed the motor once we got within coasting distance of the dock.\n\n\"Hiya boys,\" Mom greeted us with her infectious smile as we drifted to her.\n\n\"Hi Mom!\"\n\nDad immediately started barking out orders. \"Hold on to the dock!\" \"Tie this rope here!\" \"Tie that rope there!\" \"Danny, go grab that five gallon bucket in the cabin.\"\n\n\"Actually honey, would you mind grabbing that bucket? I need to have a word alone with Danny.\"\n\nDad detected urgency in Mom's undertone. He shot me sorrowful look, assuming I was in trouble for something. He knew better than to stick around and ask questions. He quickly climbed out of the boat and marched to the cabin.\n\nMom waited until Dad was out of earshot before feeding me a playfully smile, motioning me to sit down.\n\n\"Sit? Why?\"\n\n\"Trust me, you'll want to be sitting for this.\"\n\n\"Sitting for what?\"\n\n\"Just sit down!\" She giggled.\n\nI did as I was told, sitting in my chair, which put me at about eye level with her knees.\n\nMom looked back to make sure the coast was clear, then squat down, arching her pretty bare feet in the process. She grabbed the front of her flimsy dress and bunched it over her knees.\n\n\"I decided to get the yellow panties,\" she smiled, spreading her knees to explain why.\n\nI was instantly captivated at the sight of Mom's pretty pink pussy through her transparent panties. I could make out every single detail. It was the most beautiful thing I'd ever seen.\n\n\"Cat got your tongue?\" Mom teased.\n\n\"God! I love it!\" I exclaimed a bit louder than I should have, then lowered my voice. \"I'm so glad you bought those panties!\"\n\nMom giggled. \"I know. Me too. I can't believe how see-through they are!\"\n\nI couldn't tear my eyes away even if I wanted to. The cute patch of pubic hair Mom proudly sported was manicured into an upside-down triangle, pointing down at her pussy like an arrow.\n\n\"So, what do you think?\" she asked cutely. \"Is this what you imagined your mother's pussy would look like?\"\n\nI swallowed the lump in my throat. \"It's the most beautiful thing I've ever seen,\" I muttered, hypnotized by the fleshy folds framing her beautiful pink hole.\n\nI heard footsteps and quickly spotted Dad strolling towards us over mom's shoulder. He was almost to the dock, swinging a bucket in his hand.\n\n\"Dad's coming!\" I warned.\n\nMom stood up, making the hem of her dress magically fall back into place like nothing had even happened. She winked, then narrowed her eyes at me for a harsh reprimand. \"You know that thing I just showed you?\" she scowled in mock anger.\n\nI nodded obediently.\n\n\"Yeah? Well next time you make it as wet as you did last night, you're gonna take care of it yourself! Do I make myself clear?\"\n\n\"Yes Mom.\"\n\n\"You're a grown man now, Daniel, I shouldn't have to be cleaning up after you all the time!\"\n\nDad caught the tail end of my ass chewing and approached with caution. \"Everything okay?\" he cautiously tiptoed past Mom.\n\n\"Yes, everythings fine,\" Mom softened. \"Danny and I were just having a little chat.\"\n\nDad looked back and forth at us, assessing the situation. \"Anything I need to be concerned about?\"\n\nMom's smile returned. \"No, just silly mother-son stuff. I'll spare you the details.\"\n\n\"Oh,\" Dad chuckled. \"Thanks.\"\n\nMom went to Dad and placed a loving hand upon his cheek.\n\n\"Dinner will be ready in about an hour. Don't be late!\" she teased, then turned and sashayed back to the cabin on pretty bare feet.\n\nWe opted to eat dinner out on the deck that evening. Each of us took a chair gathered round the four-sided patio table. Mom cooked us my favorite dish, her signature meatloaf.\n\nAfter not eating all day, I was starved. I scarfed my food down like an uncivilized caveman. Mom had to remind me to \"breath\" a couple times between mouthfuls of food.\n\nAs a result, I was the first to be done eating, so I pushed my plate to the side and relaxed in my chair, taking a moment to enjoy the beautiful sights and sounds surrounding our cabin. As I sat there looking around, I reflected back on all the good memories over the years. Lake Timberland had been home to each and every one of our summer vacations. Mom and Dad claimed to have discovered this beautiful place years ago, said they fell in love with it on their honeymoon and vowed to return every summer, or so the story goes.\n\nMom looked over at me and noticed my head on a swivel.\n\n\"Remember when we used to camp down there?\" she asked, pointing at a small grassy area about 50 yards off the deck.\n\nI looked in the direction she was pointing. There was a small patch of grass carpeting a section of forest floor that was otherwise covered in dense timber. It looked like the perfect little place for a camp site. I couldn't remember ever having camped there, or anywhere else for that matter.\n\n\"We used to camp??\" Molly stole the words from my mouth.\n\n\"We sure did!\" Mom smiled. \"We used to be quite the adventurers. We'd set up a tent, build a fire, roast marshmallows, the whole nine yards.\"\n\n\"What about the cabin?\" Molly asked.\n\n\"We'd still rent the cabin of course. We needed it for cooking and showers and all that, but at night, we'd sleep in a tent right down there,\" Mom pointed at the spot again. \"It was wonderful.\"\n\n\"Welllll, I don't know if I'd call it wonderful,\" Dad countered, remembering the event in a different light.\n\n\"Oh it wasn't that bad,\" Mom countered back. \"So maybe we had that one rough night.\"\n\nDad chuckled, thinking back to the night Mom was referring to. \"You were just a baby, Molly. You wanted nothing to do with sleeping in a stuffy tent. You kept us up all night with your fussing. After that miserable night of no sleep, I decided we were done sleeping on the ground forever. We've been sleeping in the cabin ever since.\"\n\n\"Wow, I don't remember any of that,\" Molly said.\n\nMom looked at Dad. \"What ever happened to all that old camping gear anyway?\"\n\n\"As far as I know, It's still in the shed out front,\" he answered, pointing a thumb over his shoulder in the direction of the shed.\n\n\"Really??\" Mom perked up. \"I figured that stuff was gone for good... wouldn't it be so fun to dig it out again, use it one last time for old times sake?\"\n\nDad chuckled at the impracticality of tent camping now days. \"And do what? Run an extension cord all the way through the forest just so I can breath at night?\"\n\n\"Oh that's right...\" Mom sighed, remembered Dad's recent diagnosis of sleep apnea and the noisy machine they were still getting used to sleeping next to. She thought for a moment then quickly perked up.",
        "\"Well what if just the kids and I slept out there? You wouldn't mind, would you?\"\n\n\"Knock yourselves out,\" Dad chuckled.\n\n\"I don't know, Mom,\" Molly said with reluctance. \"I think I'm gonna have to agree with Dad on this one. Sleeping on the ground doesn't exactly sound like a good time.\"\n\n\"Oh c'mon!\" Mom pleaded. \"Where's your sense of adventure?\"\n\n\"In there,\" Molly pointed at the sliding glass door to the cabin. \"With my warm bed, and no bugs.\"\n\nWe all laughed, then Mom looked over at me with puppy-dog eyes. \"You're not afraid to sleep on the ground with me too are you?\"\n\nSleeping on the ground would be a small price to pay if it meant sleeping next to her all night! Hell, I'd sleep on a bed of hot coals if it got me next to her, in a secluded tent, all by our naked selves. Not a chance I was going to let that opportunity slip away.\n\n\"Sure, why not,\" I shrugged, doing my best to contain my true excitement.\n\nMom however couldn't contain hers. \"Really??\" Her face lit up, smiling ear to ear.\n\nI was hard not to smile at that.\n\n\"Sure,\" I shrugged. \"Sounds fun.\"\n\n\"It's settled then,\" Mom announced to the group. \"Danny and I will set up our camp tomorrow, and you two will-\"\n\n\"Whoa whoa whoa,\" Dad cut her off, as he was apparently losing his fishing buddy in the morning. \"What happened to Danny and I going fishing?\"\n\n\"Take Molly,\" Mom easily suggested.\n\nDad tried not to look deflated as he looked at Molly, then at Mom.\n\n\"Don't give me that look!\" Mom warned. \"It wouldn't hurt you to spend some quality time with your daughter for once. It's only a few months til she moves half way across the country.\"\n\nDad loved Molly dearly, but the idea of untangling her fishing line and baiting her hook all day didn't sound like the fun day he'd planned.\n\n\"Don't worry, Dad, I won't even fish,\" Molly assured him, as if reading his mind. \"I'll just work on my tan.\"\n\n\"You can borrow my new bikini!\" Mom quickly offered.\n\n\"Oo that would be perfect actually,\" Molly smiled, thinking of the nice tan she'd get.\n\nDad did a flashback of the picture Mom had sent him earlier. \"I don't think so!\" He said firmly.\n\n\"What? Why not?\" frowned Molly.\n\nMom gave Dad a tame look. \"Honey, you can't expect her to sunbathe in a turtleneck her whole life.\"\n\n\"There's a big difference between a turtleneck, and that damn bikini you apparently went ahead and bought today!\"\n\n\"Calm down,\" Mom told him softly. \"Molly is an adult now, I think it's time we start treating her like one.\"\n\n\"I'm not going to let her prance around here in next to nothing!\"\n\nMom took a breath and tried reasoning. \"I know you think that bikini was a little revealing, which maybe it was, a little, but that's what all the girls are wearing these days.\"\n\n\"They are not!\" Dad argued.\n\n\"Apparently you haven't been to the beach in awhile,\" Mom giggled. \"Trust me, skimpy is in right now. If you thought the bikini I bought today was bad, you should've seen some of the other swim suits we found at the mall.\"\n\nDad seemed at a loss for words.\n\n\"Ever heard of a microkini?\" Mom asked.\n\nDad shook his head, but judging by the name, he could about imagine.\n\nMom painted the picture for him. \"It's where the crotch barely covers anything up front, just a teeny-tiny triangle is all.\"\n\nDad remained speechless, clearly fighting a loosing battle.\n\n\"Or better yet,\" Mom continued with more fire power, \"Molly could just wear a thong bikini. There was no shortage of those at the mall today, was there Molly?\"\n\nMolly shook her head.\n\n\"I'm sure her booty would get a real nice tan in something like that.\"\n\n\"Okay okay!\" Dad got the point. \"She can wear whatever that thing you bought today is called,\" he said, saying whatever he had to to change the subject. He looked over at Molly. \"Just promise me you won't spend all day on your phone like lover boy over there.\"\n\nMom shot me a coy smile. \"Lover boy huh? What's this about?\"\n\nDad answered for me. \"He spent the whole day on his phone, texting some mysterious older woman.\"\n\n\"It wasn't the whole day!\" I argued.\n\nDad gave me a funny look. \"Pretty much!\"\n\n\"Do I sense something blossoming?\" Mom teased.\n\nI couldn't help but smile and nod.\n\n\"He claims it's nothing serious,\" Dad continued. \"Says they're just having a little fun, whatever that means. All I know is, he's had that cocky grin on his face all day.\"\n\nMom laughed cutely. \"Just having fun huh? What kinda fun we talking here?\"\n\nI smiled wider than I should've. \"Oh you know, endless flirting, dirty pictures...nothing too naughty.\"\n\n\"Not yet anyways,\" Mom giggled. \"I know how older women can be, trust me, this is just the beginning!\"\n\n\"Okay okay, I don't think we need to get too far into that,\" Dad half chuckled, clearly uncomfortable. \"That's a little personal.\n\n\"You're the one that brought it up,\" Mom giggled.\n\n\"Its fine, Dad,\" I assured him. \"I don't mind.\"\n\nMolly put two and two together and joined the inappropriate table talk. \"Is she hot??\"\n\n\"Oh god yeah! She's gorgeous!\"\n\nI could tell by the look on Mom's face that she was enjoying every word of this.\n\n\"What's her best feature?\" Molly asked, just to get a rise out of Dad. \"Her tits? Her ass?\"\n\n\"Alright that's enough!\" Dad demanded. He turned and gave Mom a look for some parental assistance.\n\nMom knew that it was probably best to change the subject.\n\n\"So what's the plan after supper?\" Mom asked off topic. She made a gesture at the hot tub. \"Anyone wanna join me for a soak?\"\n\n\"I will!\" Molly and I chirped in unison, making Mom giggle at our shared enthusiasm.\n\n\"Count me out for tonight,\" Dad yawned, leaning back in his chair. \"I'm gonna need a full nights rest if I plan on being out in the sun all day again tomorrow.\"\n\n\"What time are we leaving in the morning?\" Molly asked.\n\nDad was a man of structure who liked to stay on a tight schedule. \"6AM sharp,\" he answered firmly.\n\n\"Ugh,\" Molly groaned. \"You might have to drag me out of bed.\"\n\nDad chuckled.\n\n\"I will if I have to,\" he teased, making the rest of us laugh.\n\nWe sat there for another half our or so, reminiscing on years past. There was no shortage of laughter as we took turns teasing each other about anything and everything.\n\nDad was the first to retire into the cabin, saying he needed a shower before bed. The girls were next, and I offered to clean up and meet them in the hot tub.\n\nWithin minutes I had the table cleared and my trunks on, ready for the adventure awaiting my arrival.\n\n\"BUBBLES!\" the girls laughed as I emerged from the cabin, stepping out onto the deck.\n\nI was happy to see them so giggly in a playful mood. I reset the bubbles and walked over to the tub.\n\nBoth girls had reclaimed their seats from the night before.\n\n\"Did Dad go to bed already?\" Molly asked.\n\n\"Yeah he just laid down.\"\n\nI climbed into the water and reclaimed my seat next to Mom, who was, to my delight, wearing the same sexy red bikini from the night before.\n\n\"Thirsty?\" Mom asked, handing me a cold beer.\n\n\"Thanks!\" I accepted and cracked it open.\n\nMom held her wine glass up for a toast. \"I know we're being naughty and all, but I really am enjoying all this time spent with you two. I haven't stopped smiling since last night.\"\n\n\"Speaking of last night,\" Molly smirked at us. \"What the hell happened out here after I left?\"\n\nMom cracked a guilty little smile. \"What makes you think something happened?\"\n\n\"Oh please! It's been written all over your face since the moment you woke up this morning!\"\n\nMom giggled\n\n\"Truth or dare?\" Molly asked, getting right into it.\n\nMom smiled. \"Um...truth I suppose.\"\n\n\"Tell me what happened,\" Molly pried. \"And don't say nothing, because I know you two did something!\"\n\nI can't believe Mom just straight up told her. \"I gave your brother a hand job,\" she admitted with no shame whatsoever.\n\n\"I knew it!\" cried Molly triumphantly. \"I knew you two were up to no good out here!\"\n\nMom threw her hands up. \"Hey, what happens in the hot tub, stays in the hot tub!\"\n\nMolly giggled, shaking her head at us, then focused on me. \"Well how was it, Danny?\"\n\nI was all smiles. \"Incredible!\"\n\n\"Of course it was,\" Molly teasingly shook her head again. \"Gosh! You guys are so bad!\"\n\n\"Well what happened with you last night, miss innocent?\" Mom insisted, throwing Molly in the hot seat. \"After you left us, what'd you do?\"\n\nMolly blushed with embarrassment, even though we all knew what she'd done.\n\n\"What makes you think I did anything?\" she teased mockingly.\n\n\"Oh I don't know. Maybe it was the way you zipped out of here carrying a big black dildo in your hand.\"\n\n\"Don't make me say it,\" Molly blushed a shade darker. \"I think we all know what happened...\"\n\nMom smirked.\n\n\"Well we want to hear it from you?\" she teased, then played the trump card. \"Truth or dare?\"\n\n\"You're rotten!\" Molly giggled. \"TRUTH. If you must know, I masturbated. Is that what you wanted to hear? I went upstairs, I got naked, and I fucked myself with your big black dildo!\"\n\n\"I knew it!\" Mom mimicked triumphantly.\n\nMolly giggled at that.\n\n\"Was it weird?\" Mom asked.\n\n\"Why would it be weird?\"\n\n\"You know, because of who the dildo was inspired by.\"\n\n\"Ohhh that,\" Molly blushed, remembering how secretary turned on she got by the thought of our father's dick. She tilted her head cheekily. \"I actually already answered your truth, so I don't have to tell you that.\"\n\n\"Fair enough,\" Mom smirked, letting her off easy.\n\nMolly knew she was only temporarily off the hook. One way or another this was going to get brought back up. She directed her attention at me with a cute smile. \"Danny, truth or dare?\"\n\nAt this point there was almost nothing I wouldn't do. To be honest, I was hoping for a dare that would result in me getting naked again.\n\n\"Dare,\" I answered.\n\nMolly smiled coyly with a funny idea. She giggled first at Mom, then at me. \"I dare you to spank Mom's ass for being so naughty last night.\"\n\n\"Wait how did I get roped into this?\" Mom feigned innocent.\n\n\"Oh don't act like you don't want this!\"\n\nMom couldn't argue that. She stood up, turned around, and cat crawled onto the bench with her bikini clad ass just above the water.\n\n\"I don't know what I did to deserve this,\" she giggled.\n\n\"Oh you know exactly what you did to deserve this,\" Molly playfully scolded.\n\nMom reached back, hooking her thumbs in the waistband of her bikini bottoms. \"Should I leave these up, or go bare-ass?\"\n\nMolly hadn't even considered this. \"Definitely bare-ass!\"\n\nMom teasingly rolled her bottoms down her ass cheeks until they roped around her swells like a lasso.\n\n\"Like this?\" She wiggled her fully exposed butt at us, causing her cheeks to part slightly for a split second glimpse at her tightly puckered asshole.\n\n\"Yeah,\" Molly giggled, playing peekaboo with the same forbidden hole.\n\n\"How many spanks am I supposed to give her?\" I asked with an excited grin.\n\n\"Um...just one will do.\"\n\n\"That's all!?\" fussed Mom, fishing for a more severe punishment.\n\nMolly got the hint and played along. \"You're right, a hand job is pretty naughty isn't it? Better make it two spanks. Now bend over, young lady!\"\n\nMom giggled, obediently assuming the position, bending over until her tits squshed against the shelved rim of the tub. As she did, her ass cheeks spread apart, blessing me with an unobstructed view at her beautiful puckered asshole.\n\n\"Make that three spanks!\" Molly ordered.\n\n\"What? Why three now?!\" whined Mom, not that she actually minded.\n\n\"Two spanks for the hand job last night, and one for showing him your butthole right now.\"\n\n\"Ohh,\" Mom giggled. \"I suppose that's fair.\"\n\nWe all laughed.\n\n\"Would now be a good time to tell you I showed him my pussy earlier too?\" Mom asked shamelessly.\n\n\"WHAT!?\" cried Molly. \"When??\"\n\n\"On the dock,\" Mom smiled proud.\n\n\"You're a little trouble maker, aren't you!?\" Molly teased. \"Make that four spanks!\"\n\nWe all laughed again.\n\nI couldn't believe I was about to touch my Mother's bare-ass, talk about another wet dream come true. I raised my hand out of the water and brought it close to my target.\n\n\"Ready?\" I asked.\n\nMom looked back with a bright smile. \"Yep!\"\n\nI chuckled at her enthusiasm then lightly swat my hand against her cheek.\n\n\"Oh c'mon!\" Molly scoffed. \"You call that a spank??\"\n\n\"You can do it harder, sweetie, you're not going to break me.\"\n\n\"Yeah that one doesn't even count,\" Molly ruled like a judge. \"You have to actually spank her hard for it to count!\"\n\n\"Okay okay,\" I accepted, then rose my hand for another try. This time I spanked a little harder.\n\nMom giggled at the contact, so I felt okay leaving my hand on her ass for a few seconds rather than just quickly pulling it away. I loved the feeling her soft skin under my fingers.\n\n\"Okay that one counts...barely,\" Molly warned. \"You have to put a little more force behind these next few slaps or else they won't count.\"\n\nI nodded, raising my hand for another spank. This time I spanked with a little force. The sound of Mom's yelp echoed in the air which made me quickly lean in close to her face.\n\n\"You okay?\" I worried.\n\nShe smiled sweetly. \"Trust me, baby, I'm fine.\"\n\n\"Oh okay,\" I grinned and sat back up. That's when I realized my hand was still on her ass. I was instinctively rubbing the spot where I thought I'd hurt her. Since she didn't seem to mind my advances, I kept my hand where it was.\n\n\"That's two spanks done, two to go,\" judge Molly ruled, feeling high and mighty with power.\n\nI reluctantly rose my hand off Mom's soft ass and noticed a red spot. I decided I better do these next two slaps on the opposite cheek to even things out. I pulled my hand away, then swat her again, causing an audible SMACK!\n\nMom yelped, but quickly followed it with an \"Mmm,\" letting me know I hadn't hurt her, quite the opposite actually.\n\n\"See, I told you she'd like it,\" Molly grinned.\n\nMom looked back a Molly and giggled. \"I just remembered something else naughty I did today?\"\n\nMolly knew what Mom wanted. \"Whats that, young lady??\"\n\n\"I.. um.. sent Danny a few naughty pictures of myself in the dressing room today at the mall?\"\n\nMolly's eyes widened in mock horror. \"You just earned yourself another spank, young lady!\"\n\n\"What! Not another one!\" Mom whined playfully.\n\nAll these added spanks were getting hard to keep track of. \"How many spanks does that add up to now?\" I asked with a chuckle.\n\n\"She has two spanks to go. One for apparently showing you her pussy on the dock, and one for showing you god only knows what in the dressing room today.\"\n\nI left that last part up to Molly's imagination to decide, then rose my hand for another SMACK! My fingers molded to the curvature of her ass, curling into the vally of forbidden territory, leaving the tip of my naughty finger dangerously close to the rim of her asshole.\n\nMolly noticed and just giggled. \"That's three spanks done, one more left.\"\n\nI rose my hand one last time...SMACK! My hand landed exactly where I was aiming. The tip of my naughty finger was touching Mom's pretty asshole. It felt warm and wonderful.\n\n\"Mmm,\" Mom purred.\n\n\"God you two are kinky!\" Molly gigged. \"Okay, you're free to get up.\"\n\nI reluctantly removed my hand and let Mom crawl backwards off the bench.\n\n\"That was fun,\" she smiled, standing to her feet in the middle of the tub. She reached into the water and tugged on the stings that kept her bikini bottoms tied on.\n\n\"No point in keeping these on,\" she giggled, bringing her bottoms out of the water and tossing them onto the deck.\n\nI immediately peered down at the water for a glimpse at Mom's pussy but sadly the bubbles blocked my view of her lower half.\n\n\"I gonna have to keep my eye on you two aren't I?\" Molly joked.\n\n\"No, we'll be good,\" Mom promised unconvincingly. She took a sip of wine then settled in next to me on our bench.\n\n\"Your turn, Danny,\" Molly said, handing over the last of her power.\n\n\"Okay,\" I smirked, feeding her a cocky grin. \"Truth or dare?\"\n\n\"Oh...dare,\" Molly answered.\n\nI couldn't believe what I was about to ask her. I knew it was either going to get me a hand full of water to the face, or some very nice eye-candy. \"I dare you to run a few laps around the cabin...completely naked!\"\n\nMolly's eyes bugged out, making me take cover for the splash I knew was coming. The splash never came. Instead, she just giggled at me, giving me another one of her famous head shakes.\n\n\"How did I know my bikini wouldn't last long tonight?\"\n\nMom laughed. \"I can't say I blame him, Molly, you do have an amazing body!\"\n\nMom and Molly had seen each other naked hundreds of times. Me on the other hand, had only ever dreamed of seeing either one of them naked.\n\nMolly slid off her seat and stood in the middle of the tub. Much like mom had done a moment prior, Molly reached into the water and tugged her bikini bottoms off, bringing them out of the water. She teasingly twirled them around her finger a few times before tossing them onto the deck where they landed next to Mom's bikini bottoms.\n\n\"I can't believe I'm doing this,\" Molly laughed with a sparkle in her eye that told me she was enjoing this as much as I was.\n\n\"Best vacation ever!\" I announced.\n\n\"Says the person whose not almost naked,\" Molly giggled, as she then turned and presented her back to me. \"Would you like to do the honors, perv?\"\n\nI smiled like a kid on Christmas morning about to unwrap my present. I happily reached up and untied the knot in the middle of her back, then untied the knot at the back of her neck.\n\nMolly's top fell to the water as she spun around with a \"TA-DA!\"\n\nMy eyes were in heaven as they gawked at Molly's naked boobies wobbling into place. Her breasts looked firm with very little sag. Her areolas were about the size of a quarter, capped with dark pink nips.\n\n\"God! They're even better than I imagined,\" I accidentally vocalized.\n\nMolly scoffed, playfully grabbing her boobs, one in each hand. \"Oh you've imagined them, have you?\"\n\n\"I have,\" I smirked, eyeing Molly's pink nips poking out between her spead fingers.\n\nMolly teasingly removed her hands with zero shame, then turned to climb out of the tub. My eyes naturally fell to get a look at her bits as she hiked a leg over the side, which delightfully got me a split second glance at the glistening pink center of her spread pussy lips.\n\n\"I can't believe you talked me into this,\" Molly laughed as she got both feet onto the deck then turned to face us.\n\nMy eyes scanned her naked body, zeroing in on the cute slit between her legs. Unlike Mom, Molly shaved completely bald, leaving no hair whatsoever.\n\n\"Get a good look?\" Molly teased, catching me drooling.\n\nI redirected my attention to her face and smirked.\n\nShe rolled her eyes. \"How many laps do you want me to run around the cabin?\"\n\nI felt Mom reach over and squeeze my thigh underwater, which I took as her way of telling me to make this moment last.\n\n\"Um... five laps,\" I answered.\n\n\"Five!?\" Molly whined. \"I only made you give Mom four spanks.\"\n\n\"Do I need to add a few laps?\" I jokingly warned, suddenly realizing how powerful it felt to be the dare master. Molly was at the mercy of my reign and there was nothing she could do about it.\n\n\"Fine,\" Molly groaned, then turned and took off jogging down the stairs, disappearing around the corner.\n\n\"She sure does have a cute butt, doesn't she?\" Mom asked.\n\n\"Yeah,\" I nodded. \"I know who she gets it from too?\"\n\n\"Oh yeah?\" she giggled, \"Whose that?\"\n\nI grinned at her beautiful face. \"YOU!\"\n\nMom was so beautiful the way her cheeks blushed rosy red. There was a single strand of wet hair clinging to her forehead. I don't know why, but I leaned in a kissed it.\n\n\"Aww,\" she gushed. \"What was that for?\"\n\nI shrugged. \"I couldn't help it. You're just so beautiful!\"\n\nTo show her appreciation, she leaned in and kissed my forehead. \"You're not too bad yourself, young man.\"",
        "I reached up and placed my hand upon her rosy cheek. \"Your face is red,\" I told her, circling my thumb around her cheekbone.\n\n\"Because you're making it that way.\"\n\n\"I think it's beautiful,\" I said, leaning to kiss her on the cheek.\n\nShe smiled, then kissed me back lower on my cheek, close to my mouth.\n\n\"I love you,\" I smiled. I leaned in, kissing her square on the lips for the first time in over a decade.\n\n\"Get a room!\" Molly teased as she rounded the corner and saw our faces almost touching.\n\nMom giggled.\n\n\"That's one!\" I announced. \"Four laps to go.\"\n\n\"Yeah yeah,\" Molly shushed as she jogged past the deck, disappearing around the corner.\n\nMom let go of my face and barrel-rolled into my lap, resting her weight on my thighs. \"Now, where were we?\"\n\n\"I was just about to kiss you again,\" I winked, leaning in.\n\nOur lips molded together like they were meant to be. After a few seconds I tried to pull away but Mom teasingly bit my bottom lip.\n\n\"Where do you think you're going, mister,\" she giggled through partially clenched teeth. She reached up, pulled my face to hers. We made out like a horny teenagers. Our tongues danced in each other's mouths, making sloppy passionate sounds that echoed into the night air.\n\nMy hands had a mind of their own as they traveled down Mom's back. I forgot how naked she was until my hands found her ass and felt no pantie-line.\n\n\"Mmm,\" Mom purred into my mouth, feeling my hands freely roam around her naked ass. She broke the kiss. \"You liked spanking me, didn't you?\"\n\nI squeezed her soft butt cheeks. \"Are you kidding!? I loved that!\"\n\nShe giggled in my lap. \"I wonder how many spanks this position would earn us.\"\n\nMolly must have the hearing of a lion because seconds later she rounded the corner with an answer.\n\n\"Sitting in your son's lap, naked I might add, would definitely earn guys you three spanks!\"\n\n\"Hey I'm not naked!\" Mom argued, gesturing to the bikini top she still had on.\n\n\"Pretty close,\" Molly chided, disappearing around the corner, thus starting her third lap around the cabin.\n\n\"Mmm. Your hands feel so good on my ass, baby,\" Mom hissed as my hands kneaded her soft cheeks like pizza-dough.\n\n\"I love how soft it is,\" I grinned, inching my fingers closer and closer to her asshole.\n\n\"You can touch it you know.\"\n\nMy eyes widened like I'd been caught with my hand in the cookie jar. \"Touch what?\"\n\nShe fed me a knowing smirk. \"I know you want to,\" she said and rose her ass a few inches off my lap. \"Go a head, touch it!\"\n\nThat was all I needed. I slid my fingertips into her forbidden valley of love and touched her crinkled asshole.\n\n\"Mmm,\" she moaned. \"I don't know why, but I love having my asshole played with.\"\n\n\"You do?\" I smiled, circling my fingertip around the rim.\n\n\"Mm-Yeah,\" she giggled. \"That tickles.\"\n\n\"What tickles? You mean this?\" I teasingly tickled around the rim again, making her squirm.\n\n\"What's so funny?\" Molly asked, rounding the corner right on schedule.\n\nMom was all giggles as my finger raced round and round her lovely asshole.\n\n\"Your brother found my ticklish spot\" she managed to squeak out between giggles.\n\nMolly said nothing and kept jogging.\n\nMom got her giggling under control and asked \"Wanna feel something cool?\" she didn't wait for an answer. \"Put your finger right at the opening.\"\n\nI stopped tickling around the rim and tapped the hollow opening. \"Like this?\"\n\n\"Mm-Yeah...now apply pressure when I say to, okay?\"\n\nI nodded, then felt Mom flex whatever muscle makes your anal ring push out and soften.\n\n\"Now baby!\" she urged.\n\nI applied pressure, poking my finger into the smooth squishy tissue. My finger melted into it like warm butter.\n\n\"Mmm,\" Mom purred before quickly tighten her asshole, swallowing my finger to the first knuckle.\n\n\"Oh my god!\" I exclaimed.\n\nMom laughed at my reaction. \"Told you it would feel cool!\"\n\nCool was an understatement. \"This feels incredible!\"\n\n\"Bet you never thought you'd have your finger up my butt, did you?\" She teased, tightly clenching her anal ring for emphasis.\n\n\"No,\" I chuckled.\n\n\"Mmm it feels incredible,\" she purred, unclenching her stimulated ring to swallow more of my finger into her warm and cozy passage.\n\nI leaning in for another passionate kiss.\n\nWe didn't even hear Molly pass the deck that last time as we made out like lovers. We broke the kiss a moment too late when Molly came stomping up the stairs.\n\n\"Okay love birds!\" Molly teased after catching Mom and I with our tongues down each other's throats. \"Is this the kind of stuff you'll be doing in that tent of yours?\"\n\n\"What goes down in our tent is none of your concern,\" laughed Mom. \"You had your chance to join.\"\n\n\"I think I'll be enjoying myself just fine up in that loft by myself,\" Molly hinted with a sly smirk.\n\nMom playfully rolled her eyes. \"BUBBLES!\" she ordered.\n\nMolly happily reset the bubbles then climbed over the edge of the tub, flashing me another glimpse at her candy-pink center. She lowered her naked body into the water then glared at me with a challenging smirk.\n\n\"What?\" I questioned.\n\n\"Ready for payback?\"\n\nI chuckled because I knew whatever she had in mind was probably something I'd enjoy.\n\n\"Truth or dare?\" she asked, getting right into it.\n\n\"Hm...Dare.\"\n\n\"Since you're the only one out here still fully clothed, strip for us,\" she put it simply.\n\n\"Great idea!\" Mom agreed, sliding off my lap.\n\nI tried not to frown as happy finger slipped out of her warm ass, suddenly feeling cold and unprotected.\n\n\"You want me to take my trunks off?\" I verified.\n\n\"No,\" Molly giggled, grabbing her phone from the edge of the tub. She clicked the screen a few times in search of dance music. She found the perfect song, then hit play. \"I want a full strip-tease,\" she grinned, as a popular hip-hop tune echoed into the night sky.\n\n\"Oo! Yes!\" Mom clapped in agreement.\n\nMolly smiled at Mom then narrowed her eyes at me. \"Now get out and dance for us, lover boy!\"\n\nI didn't have the slightest clue how to do a strip-tease, but I figured I'd give it a go. I crawled out of the tub and did a goofy swing of the hips, showing off the hard cock hidden beneath my trunks.\n\nBoth girls giggled and kept their eyes on my ass as I danced away from the tub.\n\nWhen I got to the middle of the deck, I quickly spun around, grabbing my junk like a pop-star.\n\n\"OW OW!\" Mom squealed.\n\nI felt like a stripper as I dropped to my knees and humped the air a few times, getting more encouraging squeals from the crowd.\n\nAs the song continued, I danced my way to my feet, then reached for the waistband of my trunks.\n\n\"STRIP! STRIP! STRIP...\" Molly chanted me on, getting Mom to join in. \"STRIP! STRIP! STRIP...\"\n\nI lowered the front of my trunks just enough to show the base of my hard dick, then teasingly yanked them back up.\n\n\"STRIP! STRIP! STRIP...\" the girls encouraged further.\n\nIn one quick motion, I yanked my trunks down to my knees, letting them fall to my ankles. My steel dick sprung free and slapped me in the belly.\n\n\"Mm,\" Mom salaciously licked her lips, eyeing my dick like a juicy piece of meat.\n\nI bounced my dick up and down as I continued to dance. I tried to smoothly step out of my trunks but somehow they tangled around my ankles.\n\nMolly about died laughing, watching me hop around like a buffoon, trying to free myself from the twisted contraption.\n\nFinally, I untangled myself and held the evil trunks in the air, twirling them around like a rodeo-cowboy. I eyed my target, fed her a wink, and launched my trunks at her.\n\nMom caught them in mid air and giggled, feeling like the bridesmaid who caught the bouquet. She showed them off to Molly then tossed them onto our growing pile of swimwear.\n\nI danced my way back to the tub, doing the naked hip-thrust-hop. Each time I hopped, my boner bounced up and slapped against my belly. I timed it perfectly for the song to end as I took my final hop to the side of the tub.\n\n\"Not bad!\" Molly applauded, impressed by my stellar dance moves. \"I didn't know you could get down.\"\n\n\"Well you do now,\" I chuckled, a little out of breath as I climbed back into the tub.\n\n\"New rule,\" announced Mom. \"If you get out of the tub, you have to do a sexy dance to get back in.\"\n\nMolly smirked. \"All these rules are getting confusing.\"\n\n\"We'll have to get a sign made or something,\" Mom joked.\n\n\"Oh gosh! Can you imagine Dad's reaction,\" Molly laughed, then deepened her voice, imitating Dad reading the imaginary sign. \"Rule number one- what happens in the tub stays in the tub. Hm? Rule number two- stripping is encouraged? What the fuck?!\"\n\nWe all laughed, then Mom added \"Rule three- hand jobs are also encouraged?!\"\n\n\"But they'll earn you two spanks,\" Molly teasingly reminded, making us giggle.\n\n\"Worth it,\" Mom shrugged, as she secretly reached over underwater and grabbed my erection.\n\nMy eyes rolled back in pleasure as Mom began a sensual massage on my needy dick.\n\n\"Can't you guys save that for your tent?\" Molly teased.\n\nMom fed her a cute smile. \"I don't know what your talking about.\"\n\n\"I can see your arm moving, Mom\" Molly gesturing to the subtle movement in Mom's bicep.\n\nMom laughed, slowing her stroking to an idle play. She looked at me and smiled. \"It's your turn, sweetie.\"\n\nI looked back and forth between the girls, contemplating my next move. Mom was the only one with a stitch of clothing on, so I chose her as my victim.\n\n\"Mom, truth or dare?\"\n\n\"Dare,\" she answered confidently.\n\n\"I wanna see you strip now.\"\n\nShe grinned with enthusiasm. \"Okay!\"\n\nI giddy smile crept across my face. \"Queue up the music, Molly!\"\n\nMolly was just as excited. \"THE SHOW GOES ON!\" she chanted overdramatically, grabbing her phone for another hip-hop song.\n\nRight away, Mom recognized the song and stared dancing along to the beat.\n\n\"I love this song!\" Mom smiled, as she made a show of climbing out of the water. She hoisted her naked ass onto the edge of the tub, then turned in my direction, bringing one leg out of the water and planting her bare foot onto the deck.\n\nMy full attention was immediately captured at the sight of Mom's beautiful pussy bloomed open like a flower.\n\n\"Isn't it pretty?\" she asked, pausing to show it off.\n\nI stared in awe at the shimmering pink walls of her inner labia. I wanted to reach out and touch it but I knew I shouldn't. \"I love it!\"\n\nMom let me get a good look, before climbing the rest the way out of the tub. She got to her feet and twirled in a circle before doing a belly dance to the middle of the deck.\n\n\"STRIP! STRIP! STRIP...\" Molly began chanting, which of course made me join in. \"STRIP! STRIP! STRIP!\"\n\nMom reached back and tugged the strings tied behind her back, freeing her bust. Her top started to fall but she quickly brought her hands up and cupped her boobies, trapping the red material to her chest.\n\n\"STRIP! STRIP! STRIP...\" Molly and I cheered her on.\n\nMom removed her hands and shook her boobies side to side, wiggling the bikini top off her chest. The top fell to the floor and she kicked it over to the pile of our swimwear collection.\n\nMy eyes were immediately drawn to the most beautiful boobs I'd ever seen. Mom's nipples were twice as big as Molly's, looking thick and rubbery and delicious.\n\nMom noticed my captivated stare a giggled. She reached up and cupped the underside of her boobs, hoisting the sag out of them. They looked so heavy yet so soft in her hands.\n\nI wasn't sure how much more teasing I could take. My head was spinning as I imagined myself squirting my load all over her dark purple nipples. I didn't even realize I was stroking myself until I heard Molly scoff at me.\n\n\"Perv!\" She giggled, gesturing to the water and the obvious hand movement I was doing under the bubbles.\n\nMom quickly regained our attention when she spun around, sticking her bootie out at us.\n\n\"SHAKE IT GIRL!\" hollered Molly.\n\nMom danced backwards, shaking her tail feathers at us cutely. The song ended as she made her way to the tub.\n\nMolly and I applauded Mom on her sexy dance moves as she climbed back into the water.\n\n\"Dang, Mom, you got some moves!\" Molly acknowledged.\n\nMom took the complement with a smile.\n\n\"That was such a thrill,\" Mom giggled, reaching for her wine glass. She took a healthy swig, then reclaimed her seat next to me on our bench.\n\nUnderwater, I felt Mom reach over and grab my dick for more playtime, replacing my hand with hers. \"Truth or dare, Molly?\" Mom asked with an idea already in mind. \"Say truth.\"\n\nMolly giggled. \"Hm... truth I guess.\"\n\nMom put on a mischievous smile before repeating a question that'd gotten ignored earlier. \"Was it weird masturbating with a dildo inspired by your fathers big dick?\"\n\nMolly's head almost exploded.\n\n\"Oh my god!!\" She blushed. \"You can't ask me that!\"\n\nMom giggled. \"I can, and I did.\"\n\n\"I still can't believe I actually did that last night,\" Molly paused to giggle at herself. \"God! That was so naughty!\"\n\n\"Was it weird though?\" Mom repeated, trying to coax it out of her.\n\nMolly's face was all sorts of red. \"The weird part is, is that it wasn't weird, If that makes any sense.\"\n\nMom fed her a quirky grin. \"So it was or it wasn't weird??\"\n\n\"No, it wasn't weird,\" Molly explained. \"It was amazing actually, which makes it kind of weird, y'know?\"\n\nMom scrunched her brow in confusion.\n\n\"In a way, yes, it was weird, but a good weird,\" Molly paused to search for the right words. \"Actually not weird, more thrilling than weird. I got such a thrill out of being naughty with something I wasn't supposed to have, or even know about.\"\n\n\"Oh my,\" Mom reacted. \"You might be kinkier than I am, little girl!\"\n\n\"I highly doubt that!\" Molly giggled.\n\nMom joined in on the giggle fest, accepting Molly's answer for what it was, though it was still unclear how Molly felt exactly.\n\n\"Your turn, Molly,\" Mom told her.\n\nMolly had a fun idea in mind, an idea that would benefit me the most. \"Mom, truth or dare?\"\n\nMom was up for anything at this point. \"Dare,\" she answered.\n\n\"I dare you to kiss the tip of Danny's boner.\"\n\nMy dick twitched after hearing his name called to attention.\n\n\"Did you seriously just ask me to kiss your brother's dick?\" Mom giggled, squeezing it underwater.\n\n\"Yup!\" Molly nodded mischievously. \"Just the tip.\"\n\n\"And you call me the trouble maker...\"\n\n\"Hey now, what happens in the tub, stays in the tub, remember?\" Molly reminded, as if that made it less naughty.\n\nMy heart pounded with excitement, pumping even more blood into my raging boner.\n\nMom teasingly slid her hand up my pulsating dick and leaned into my side, squishing her boobs against my shoulder.\n\n\"What do you say, sweetie, you up for another smooch from mama?\" She pursed her lips together and fed me two puckered air kisses.\n\n\"Absolutely!\" I grinned wider than ever.\n\nMom laughed at my reaction then patted the edge of the tub.\n\nI knew the drill. I hoisted my naked body up and onto the edge.\n\n\"Jesus!\" Molly gasped at the sight of my dick sticking out for the whole world to see. \"Did that thing get even bigger overnight or what?\"\n\n\"I know,\" Mom grinned, reaching up to grab it. \"Isn't it beautiful?\"\n\n\"Mmm,\" I could get used to Mom's grabby hands.\n\nMom looked me in the eye with an excited grin on her face. \"Ready for some fun?\"\n\n\"KISS HIM! KISS HIM! KISS HIM...\" Molly encouraged playfully.\n\nWithout needing to be told twice, Mom pointed my dick at her face and leaned in, giving the tip a tender loving kiss.\n\n\"Mmm,\" I shuddered as her soft lips pressed into my spongy gland. The warm air from her little nostrils made my body tingle in places I'd never felt tingle.\n\nMom tightened her fingers around the base of my cock, keeping her soft lips glued to the sensitive tip.\n\nMy eyes rolled back in sensation when I felt her lips part for another wet kiss. \"Oh god!\"\n\nMolly sat back enjoying the show, impressed by Mom's cock teasing skills.\n\n'That's one thorough kiss,' she thought to herself, snaking a hand between her legs for a play at her aroused underwater pussy.\n\nMom showed no signs of stopping, acting solely on pent up hunger. She slid her silky-smooth lips back and forth across my tip, giving it millions of slobbery overdue kisses.\n\n\"Mmm,\" I shuddered at the feeling. I thought It was the best feeling in the world until I felt Mom open wide and slide the entire head of my cock into her waiting mouth.\n\n\"Nnngh,\" I tensed up as she latched on like a pacifier, creating a vacuum tight seal around the mushroom head of my cock. She hungrily nursed on it, making wet suction sounds with each suckle. Her tongue found my sensitive cum slit for a sample of what she'd been craving all day.\n\n\"Mmm,\" she moaned in delight when she tasted pre-cum on her lips. She pulled her mouth off my cock.\n\n\"You taste sooo good, baby!\"\n\nThe cum within my balls boiled. I painfully needed to cum and prayed this dare wasn't over.\n\n\"Is my baby gonna squirt for me again,\" she hungrily smiled, stroking her hand up and down my shaft for the cum she desperately wanted.\n\n\"Mm-Momm,\" I moaned.\n\nShe remembered my 'mommy' weakness and used it to her advantage. \"Are you gonna cum for mommy, baby?\" she emphasizing the word. \"Mmm give mommy all your cum!\"\n\nI knew I wasn't gonna last long if she kept that up.\n\nMom licked her lips, noticing the replenished pool of pre-cum pooling in my slit.\n\n\"Mmm,\" she dove in, licking my slit clean. She savored the taste of cum on her tongue before swallowing it down her heavenly throat.\n\n\"God you taste good baby!\" she exclaimed, then slid my cock back into her mouth to extract another gooey treat.\n\n\"Oh fuck,\" I whined as my mushroom head slid past her lips into the depth of her mouth. Her soft cheeks felt incredible gliding alongside my shaft.\n\nThis was no longer an innocent kiss on the tip, this was a full on blow job as Mom began bobbing her head up and down the length of my cock.\n\n\"MmMmMm!\" she fed me encouraging moans as her hand slid up and down my cock in rhythm with her blow job.\n\nI felt the tip of my cock kiss the back of her throat and that was about it for me.\n\n\"Ngh!\" I tensed up, riding the orgasmic wave of pleasure.\n\n\"Mm-hm!\" she cheered me on, picking up the pace. \"Mmm-hm! Mm-hm!\"\n\nI could feel my balls tighten as my whole body trembled in ecstasy.\n\n\"I'm gonna cum!\" I warned. \"Oh fuck you're gonna make me cum!\"\n\n\"Mm-hm!!\" she encouraged with ernst.\n\n\"Nnngh,\" I convulsed. \"I'm cumming!!\"\n\nCum shot out of me like rocket, splashing against the back of her throat.\n\n\"Mmm,\" she pulled back a few inches, letting the second rope squirt into her open mouth. She curled her tongue into a bowl, savoring the taste on her buds before swallowing it down into her tummy.\n\nMy head spun as she sucked all the cum out of me. She ran her tongue along the underside of my cock, milking out every last drop before pulling away.\n\nShe smiled up at me glossy-eyed. \"I've been thinking about that all day!\""
    ],
    "authorname": "YouDareMe",
    "tags": [
        "lake house",
        "hot tub",
        "skinny dip",
        "mom son sister",
        "family vacation",
        "texting",
        "strip tease",
        "mom son",
        "panties",
        "truth or dare"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lake-timberland-day-02"
}