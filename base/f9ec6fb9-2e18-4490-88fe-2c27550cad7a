{
    "title": "Timber Pack Chronicles Ch. 08",
    "pages": [
        "The next morning Colton accidentally slept in and was late picking up Parker for school. It was understandable. It seemed that his new half-shift used a lot more energy than his full wolf shift.\n\nColton needed the rest because this was the start of a big weekend. Today was Friday and the school was holding a huge pep rally in the afternoon. Then tomorrow the team would be heading by bus to play the final state championship game at the pro arena.\n\nIt was going to be a good weekend.\n\nColton drove like a bat out of hell to get to Parker's, then pulled into the driveway and parked his car. He grabbed the blue t-shirt from the front seat and got out and walked up to the front door.\n\nWhen he rang the doorbell, he heard Parker call for him to come in. He opened the door and shut it behind him. He leaned against the back of a leather chair while he waited for his mate.\n\nParker set a glass in the sink and wiped his mouth with the back of his hand. He grabbed his backpack off the floor and walked up to Colton.\n\n\"Good morning,\" Parker said with a grin.\n\n\"Morning.\"\n\nParker leaned into Colton and tilted his head back. Colton dipped his head and kissed his pup nice and slow.\n\n\"Damn, you look really hot in your jersey with those jeans,\" Parker whispered as he ran his hands over Colton's muscular chest.\n\nColton held up the shirt in his hand. \"I brought this for you. Put it on.\"\n\n\"What's this?\" Parker asked.\n\nColton helped Parker put the t-shirt on over the long-sleeved shirt he was wearing. The shirt was blue with white accents, an exact replica of Colton's football jersey, complete with his name and number on the back. \"Everyone else's girlfriends will be wearing theirs. So you have to wear mine.\"\n\nParker poked Colton's chest. \"I'm not your 'girlfriend', but I'll wear it. But you know I'll be at the pep rally as the mascot, right?\"\n\n\"Mm-hmm,\" Colton growled. \"Don't remind me. I might have to pull you into the locker room and have unbridled 'furry sex' with you in one of the bathroom stalls.\"\n\nParker laughed and patted Colton's chest. \"That is so not gonna happen, so don't get your hopes up, big boy.\" He turned around and tried to look over his shoulder at the shirt. \"Does it have your name on the back?\"\n\n\"Yes.\"\n\nParker looked over his shoulder at Colton and smirked. \"Are you looking at my ass?\"\n\nColton's eyes snapped up. He caught Parker's gaze with hungry eyes and ran the tip of his tongue across his bottom lip. He hadn't planned on fooling around with Parker since they were running late, but seeing him in his jersey made him want to dominate his boy, to make Parker submit to the stronger alpha wolf.\n\nHe pulled out his phone and checked the time. \"We have a couple of minutes...\"\n\n\"If you were here earlier...\"\n\nColton unbuckled his belt and undid his jeans. \"I'm here now. Suck my cock.\"\n\nColton watched Parker's eyes widen at his demand.\n\nParker let out a whimper and immediately dropped to his knees. He pushed Colton's hands away and fished that big erection from his jeans and took it right into his mouth.\n\nColton couldn't help the smug grin on his face. His pup liked being told what to do and that was so fucking hot. Parker looked good on his knees in front of him, like he belonged there.\n\nParker was so hungry for his cock, hungry for his load.\n\nColton let Parker work him like a pro for a couple of minutes, then he stepped back.\n\n\"Mmm, not done yet,\" Parker grunted. \"I want it.\"\n\n\"Uh-uh. I don't wanna come yet. I wanna taste you first.\"\n\nColton pulled Parker up to his feet and yanked his pants down. He spun Parker around so that he was leaning back against the leather chair. He dropped to a squat and took Parker's dick into his mouth.\n\n\"Oh my god,\" Parker gasped.\n\nColton bobbed up and down Parker's entire length, hollowing his cheeks and sucking hard. He reached his fingers between Parker's cheeks and found that tight little hole he loved so damn much. He found the entrance already wet. When his finger slid in nice and easy, Colton let out a growl around Parker's cock.\n\n\"I got ready for you in the shower this morning,\" Parker said between pants. \"But you were late. Oh, right there!\"\n\nColton stood up and spun Parker around, pushing him up onto his knees on the seat of the chair.\n\n\"Get up on your knees,\" Colton barked. \"Show me your ass.\"\n\nParker knelt on the chair cushion. He arched his back, pushing his ass towards his man.\n\nColton took a moment to admire his mate's perfect ass and he couldn't help but give it a good smack, making Parker whimper and tremble.\n\n\"Please, Colton,\" Parker begged.\n\nHe moved into place, standing on his feet behind Parker and slowly sunk his cock into his mate. He watched it disappear inch by inch until he was buried balls deep. Colton closed his eyes and let out a breathy sigh. \"You're so fucking tight.\"\n\nGrabbing Parker's hips, he let his fingers dig and bruise the fair flesh. He fucked him fast and furious, grunting with each sharp thrust, his body slapping loudly against Parker's.\n\nColton knew he wasn't going to last. He was too turned on and Parker's ass was just too good. Picking up the pace, he didn't stop until he shot his load, sending jets of hot come deep into Parker's body.\n\nKnowing that his pup didn't get off yet, Colton pulled back and turned Parker's quivering body around. He squatted down and took that aching shaft into his mouth.\n\nParker gripped the sides of Colton's head and pumped his hips back and forth, sliding his dick in and out of Colton's mouth. It only took a few strokes.\n\n\"Colton!\" he cried as his body convulsed.\n\nColton felt the hot dick pulse against his tongue and his mouth was flooded with hot spunk. He savored the sweet essence that tasted of his pup, then drank down every drop.\n\nWhen Parker fell back into the chair panting and trying to catch his breath, Colton stood up and yanked up his jeans, tucking away his hard-on. \"C'mon, pup. We gotta go.\"\n\n\"You expect me to be able to walk after that?\" he asked as he struggled to get out of the chair. He was practically shaking as he pulled up his pants. \"Oh, jeez. I'm gonna be leaking you all morning.\"\n\n\"Fuck. When you talk like that...\" Colton growled and grabbed for Parker, cupping his ass cheeks in his meaty palms.\n\nParker put his hand in the middle of Colton's chest and pushed back, swinging out of the way. \"Oh, no, I can't do it again. You're gonna kill me.\"\n\nColton laughed and leaned in for a quick kiss. He grabbed Parker's backpack and they ran out of the house.\n\nColton opened his car's passenger door for Parker, then tossed Parker's bag into the backseat.\n\n\"Do you think things will be different at school?\" Parker asked as he settled into the front seat.\n\n\"I honestly don't know. I do know that they won't fuck with our pack. Seth knows he can't win.\"\n\nColton said it with such conviction, he could see Parker was convinced. Parker nodded and sat up straight in his seat.\n\nWhen they arrived at school, they found Jed and Trey waiting in their customary spot. Like Colton, they were wearing their football jerseys for the pep rally. A nervous energy surrounded them and Jed breathed a visible sigh of relief as Colton rounded the front of his car.\n\n\"What's going on?\" Colton asked as he greeted his friends with fist taps. \"Anything new?\"\n\nTrey looked between the Colton and Parker and raised a brow as his nostrils flared. \"You're cutting it close. Everything seems the same so far,\" Trey said. \"But I'm glad it's Friday.\"\n\n\"It's still weird,\" Jed added, looking around. \"I feel like I'm in enemy territory.\"\n\nColton boxed Jed's ear. \"Well, get your head on straight. We got the pep rally today and tomorrow's the state game.\"\n\n* * *\n\nParker put on his wolf costume for the last time and headed out of the stadium's locker room. He felt really strange wearing the Timberwolf costume. It would only be a matter of time before he changed into a real wolf for the very first time. The fact that he was a wolf wearing a wolf costume was kind of messing with his head.\n\nHe didn't really follow pro ball like Colton and his pack-mates did, but the fact that they were playing at the stadium was really awesome. Seeing the cheerleaders gathered, he walked over to Shell with the wolf head in his hand.\n\nAs he neared, he could smell anxiety coming off her. He put his hand on her arm. \"Hey. Are you okay?\"\n\n\"What? Yeah. Of course.\" She was distracted, not making eye contact.\n\n\"You've been scarce this week. How're things going with Curtis?\"\n\n\"Good,\" she said with a shrug.\n\n\"Yeah. It must be real good if he's got you so tired you can't talk.\"\n\nWhen she didn't take the bait, Parker knew for sure that something was up.\n\nAfter a moment, she whispered, \"He says we can't hang out anymore.\"\n\n\"He did?\" Parker felt his eyes start to water.\n\n\"What happened the other day? Curtis was kinda freaked out, really nervous. He wouldn't tell me anything.\"\n\n\"I think Curtis has to tell you,\" Parker said.\n\nThey stood together in awkward silence, waiting for a few moments while Parker tried not to start crying, when out of the blue Shell asked, \"Have you noticed anything weird about Colton or Curtis... or some of their friends?\"\n\n\"What do you mean?\" Parker asked, not sure where the question was going, and hoping that he wasn't reading too much into it. He prayed the nervousness didn't show in his voice. He had never outright lied to Shell before, but he didn't know what to say.\n\n\"You know what I mean,\" she whispered as she finally looked up and made eye contact.\n\nParker swallowed the lump in his throat, nodded his head, and then looked away. He had suspected that she was more to Curtis than just a girlfriend and now he was positive. He didn't know what to tell her. He wanted to talk to her so bad, to spill his guts and tell her everything. But it wasn't his place.\n\nHe swiped away the tear that fell down his cheek and he could see the pain mirrored in her watery eyes.\n\n\"You'll always be my best friend,\" Parker whispered before he moved away.\n\nParker hadn't realized that when Timber Pack split off from the Forest View Pack that there would be such a division. They were now seen as rivals... exiles.\n\nThat division became painfully obvious once the game started. Where the FVHS Timberwolves previously operated like a well-oiled machine, there was now tension in the ranks. Colton, Jed and Trey were rivals to the Forest View Pack and their teammates treated them as such.\n\nThat tension cost them the game and the state title.\n\nParker knew then that the rest of the school year was going to suck just as bad.\n\n* * *\n\nThe FVHS Timberwolves just had their butts handed to them. By the end of the first quarter, they were down 14 to 0. They never fully recovered and ended up losing, 28 to 14. It was a humiliating loss, after what was up until then an undefeated season.\n\nOn their way out of the locker room, Colton grabbed Parker's bag and stormed out without a word.\n\nParker didn't need ESP to feel how pissed off he was. The anger was rolling off him. Not that he blamed Colton. Seth and his buddies had blamed him and Trey for the loss and the rest of the team was too happy to take sides.\n\nAs they approached the bus, the sound of shouting made them pick up the pace.\n\nSeth and TJ were fighting Jed, surrounded by a group of their supposed teammates, including Shell's boyfriend Curtis.\n\nJed could have taken either one separately, but two against one was just not fair. Parker could feel Jed's beast on the surface, ready to shift. This was about to get real ugly real quick.\n\n\"Cut it out!\" Parker shouted. He tried to get in the middle, but Colton pulled him back, tossing him towards Trey, who was quickly following up behind.\n\n\"Stop,\" Colton ordered. He spoke in a normal volume, but his voice was deep and commanding. It was suddenly dead silent. Everyone stopped what they were doing, turned and looked at him, including the humans as well as Parker.\n\nHe hadn't heard Colton use his \"alpha\" voice before. The effect went straight to his groin. As his dick stiffened in his sweat pants he tugged the front of his sweatshirt down in an effort to hide it. The timing was so inappropriate, but Parker couldn't help himself.\n\nColton quietly spoke to Jed, but he kept his eyes on Seth. \"Jed, get on the bus.\"\n\nJed opened his mouth to protest but thought better of it. He tipped his head deferentially and obeyed Colton's order.\n\nColton walked up to Seth, got into his face, and spoke low enough that the humans wouldn't hear. \"If you have a problem with my pack, you challenge me directly. Of course, you know that you won't win. Isn't that right? For the next six months, this is still my territory. I run the school. Don't forget it.\"\n\nColton stared Seth down until Seth lowered his eyes and ever so slightly tilted his head to the side.\n\nColton turned to Parker. \"Go, pup. Get on the bus.\"\n\nParker nodded. He glanced over his shoulder and gave Curtis a hard glare while Seth just stood there red-faced and glowering.\n\n\"Okay, guys,\" Curtis said, breaking eye contact with Parker. \"Break it up. Let's get on the bus and let's go home.\"\n\n* * *\n\nSeveral days later, Parker sat in class, only half paying attention to the teacher as she drew equations on the board.\n\nHe became aware of an odd sensation, a sort of tingling, that started in the back of his head. Parker rubbed his hand against the base of his skull.\n\nColton was upset.\n\nSomehow he just knew it. He glanced up at the clock and watched the last minute tick by. When the bell rang, he was already out of his chair, hurrying out of the class room.\n\nUsing his nose, he made his way through the school hallways, following Colton's scent. It was the one thing that he could reliably pick out.\n\nHe found Colton and Trey quietly talking in the hallway outside the gym.\n\nColton looked up, surprised. \"Hey, pup. What are you doing over here?\" he asked as he grabbed Parker's hand and pulled him close.\n\n\"I was checking that everything was okay.\"\n\n\"Why wouldn't it be?\" he answered with a smile.\n\nParker scrunched his eyebrows and glared. \"Colton.\"\n\nColton let out a sharp breath. \"Okay. Fine. I heard from a Lycan Council representative about our pack registration.\"\n\n\"What did they say?\" Parker asked.\n\n\"It seems that asshole Forrest didn't waste any time informing them of our exile, so they already had us pre-registered. I had to fill in the details about you, though. They're sending an info packet.\"\n\nParker blinked back at Colton. \"Wait. They have a packet? Like a 'Welcome to Your New Pack' packet?\"\n\n\"Yeah. Something like that.\"\n\n\"So why are you upset?\"\n\n\"I asked about the rogue wolf. They said that Alpha Forrest assures them that he has the situation under control. That fucker is just sitting on his ass. If he doesn't want to do anything about it, then that's fine.\" Colton's voice started to rise in volume. \"I'm alpha of my own pack now. I don't answer to him. I--\"\n\nParker glanced around the hall, and then cut off Colton before he spiralled out of control. \"Hey. You need to calm down.\"\n\nParker knew the best way to relax Colton's nerves, but he couldn't really do anything about that in the middle of school. But he was already late for his next class. Why not?\n\nHe motioned with his head for Colton to follow him. \"C'mon.\"\n\nParker walked over to the gym doors and listened. He didn't hear any noise, so he opened the doors and stepped inside. He looked back at Colton and gave him a seductive smile. \"You coming?\"\n\nColton caught Parker's double meaning and his eyes darkened as they dilated. He glanced over his shoulder at Trey. \"We'll talk later.\" Colton followed Parker into the deserted gym, then towards the men's locker room.\n\nBefore stepping into the locker room, Parker listened and sniffed. He didn't hear anything and didn't smell anything, other than that funky wet sock/dirty jockstrap smell the locker room always had. With his new sense of smell, it was pretty intense, but it was kind of erotic.\n\nParker quickly walked past the rows of lockers and stepped into the last bathroom stall. He turned around and smiled when he saw Colton step in and latch the door behind him.\n\nParker had always wanted to do this. He had heard Jed telling Trey about bringing a guy in here and he wanted to try it.\n\nHe sat down on the toilet seat and reached for Colton's belt. He unbuckled it, then unsnapped his jeans. He pulled the front of Colton's shirt free and slid his hand underneath, rubbing his fingers across the fur-covered ridges of his abdominal muscles.\n\nHe pulled Colton's cock free and the thick length bobbed in front of his face before pointing at his nose.\n\nColton grunted. \"God, I love you.\"\n\nParker looked up at him and smiled. \"You're just saying that because I'm about to suck you off.\"\n\nParker flicked his tongue across the slit, lapping up the pearl of pre-come that had oozed out. He closed his eyes and savored the sweet taste of the slippery liquid. Flicking his tongue under the head, he teased that soft spot where his foreskin connected. He then took Colton's thick shaft into his mouth and swallowed down as much as he could.\n\nColton let out a long groan. One hand grabbed the top of the stall's partition wall while the other moved to the back of Parker's head. \"Suck it,\" he growled.\n\nParker's dick jerked in his pants and a drop of pre-come bubbled out into his briefs. He loved it when Colton dominated him. He looked up at Colton, who stared down at him with a lustful, needy expression on his face.\n\n\"I love your big dick,\" Parker whispered.\n\nHe swirled his tongue around the velvety foreskin, then took him deep into his mouth. As Parker sucked Colton, he managed to unbutton his jeans and pull his own dick out. He smeared the pre-come around and began a quick stroke.\n\nParker kept eye contact with Colton, and used every trick he knew to get his mate to come. He sucked hard while bobbing and twisting his mouth and hand. His tongue fluttered back and forth, swirling around the head.\n\nColton pulled at the back of his head, urging him to go faster. His legs began to tremble and his breath came in short pants. \"Don't stop, pup.\"\n\nSuddenly, Parker realized that he was actually the one in control. He had reduced the big alpha of a werewolf pack to a quivering mass of muscle.\n\nColton gripped his hair in an iron tight fist. His knees dipped and he let out a loud grunt as he bucked his hips up. Holding Parker's head in place, Colton's cock throbbed and began spewing thick ropes of hot come into Parker's mouth.\n\nParker moaned around Colton's pulsing shaft and he shot his own load all over the floor between Colton's boots.\n\nColton pulled Parker up to his feet and kissed him. His tongue swept into Parker's mouth and the two shared a deep, creamy kiss.\n\n\"That was fun,\" Parker whispered. \"I've never skipped class to... you know...\"\n\n\"Suck cock in a locker room bathroom stall?\"\n\n\"Yeah,\" Parker laughed nervously. \"Though you could have worded it in a way that made me sound less like a total slut.\"\n\n\"Lucky me.\" Colton grinned a cocky smirk. \"I reap the rewards when you act like a slut.\"\n\n\"You like that, don't you? That you're the only one I've been with.\"\n\n\"Hell yeah I do.\"\n\nOnce they cleaned themselves up, as well as the floor in front of the toilet, Parker followed Colton out of the stall. Colton sat down on one of the benches and bent over to re-tie the laces on one of his boots.\n\nParker sat down next to him. \"Everything is going to be okay. Right?\"\n\nColton put his arm around Parker's shoulders. \"Of course.\"\n\n\"Can I ask you a question? If Shell was mated to a wolf, could they join our pack?\"\n\n\"Well, if she was mated to a wolf, and that's a big 'if,' then they could petition to join our pack. But we couldn't ask them. That would be seen as an act of aggression.\"",
        "\"But--\"\n\n\"No buts, pup.\"\n\nParker harrumphed and laid his head on Colton's shoulder. He wasn't going to let his best friend go without a fight. He'd figure a way around the rules. Convincing Shell would be easy. It was Curtis he didn't know about.\n\nParker sat up when he heard someone walk into the locker room.\n\n\"Come on,\" Jed whispered as he dragged a smaller guy by the hand. \"No one will find out. I promise.\"\n\nThey both froze when they rounded the row of lockers and saw Parker and Colton sitting on the bench.\n\nParker recognized the twink as Steven from the swim team. Steven gasped in shock, looking like a deer caught in headlights, as he looked between the other three men. Close to dying of embarrassment, he turned and ran out of the locker room.\n\n\"Well, damn,\" Jed moaned. He glowered at Parker and Colton. \"Thanks. Thanks a lot. I was about to end my dry spell.\"\n\nHe muttered to himself as he gripped his crotch and stomped into one of the toilet stalls and slammed the door shut behind him.\n\n\"Let's go,\" Colton said. \"No way in hell are you going to overhear what's going down in there.\"\n\nParker laughed as Colton pulled him up from the bench and dragged him out of the locker room.\n\n* * *\n\nColton followed Jed out of the camp's mess hall towards the parking lot. His enforcer's father had just arrived with a truck full of equipment and building supplies.\n\nColton waved to his mate, who was busy weeding with the trimmer while Trey mowed the overgrown grass. The camp grounds were a mess, but Colton was confident that their new home would be in top shape soon and he was eager to get started. The supplies that Jed's father delivered would be the first step in getting that done.\n\nJohn Stone and his oldest son, affectionately known as Junior, climbed out of the pickup truck and looked around.\n\n\"Hey, dad,\" Jed called out to the massive man.\n\nJed shook his father's hand, then dodged his big brother's hand as it playfully swept at his head. \"Missed,\" he said with a smirk.\n\nColton smiled as the two brothers began smacking and ducking from each other, each of them laughing. Junior got Jed into a headlock and rubbed his knuckles across the top of Jed's head. Jed pulled a reverse and knocked Junior onto his back on the ground, where they each tried to wrestle each other into submission.\n\nJohn snorted, and turned to Colton. \"23 and 18 years old and they still act like pups.\" He offered his hand.\n\nColton shook it. \"Thanks, John. I appreciate you doing this for us.\"\n\n\"Don't mention it. If I could do more, I would. I hope you know that.\"\n\n\"I understand. This is plenty. We can handle it.\"\n\n\"Why don't you show me around? Maybe I can give you a little 'neighborly' advice. I can tell right now that you're gonna need more roof shingles that than what I brought...\"\n\n* * *\n\nParker set down the scrub brush and slumped against the bathtub. He was exhausted.\n\nThe four pack-mates had been coming out to the campground--their new pack lands--every spare minute, and all weekend, for the past two weeks. The first cabin, which was slightly larger than the other five that were somewhat salvageable, was Colton and Parker's. Of course, it was where he and Colton first made love.\n\nHe had just spent all morning scrubbing the windows and had just finished with the bathroom.\n\nHe could hear an electric saw and a nail gun pounding coming from somewhere in the background. Jed, Trey and Colton were busy repairing the cabins, concentrating on Colton's and Jed's cabins first, along with the common building that housed a small office, a big kitchen, a laundry room, and a large open dining room that could be used as a mess hall or for meetings.\n\nJed's dad and his older brother were as helpful as they could be. They supplied Jed with tools and supplies. They offered a lot of advice, but they weren't allowed to actually help out since Timber Pack was seen as a rival pack.\n\nParker didn't understand why they couldn't work together, why they had to be rivals. Colton gave an explanation about wolves being territorial, but Parker still didn't get it. He just wanted everyone to get along.\n\nThe stupid rivalry had cost him his best friend and that made him angry.\n\nIt was a good thing that Jed learned a lot from his dad and older brother. The big man was good with his hands.\n\nParker decided it was time for a break. He pushed himself to his feet and walked into the cabin's main room. He looked around and smiled. Sure, the single-room dwelling was tiny compared to his parents' \"McMansion,\" but the log cabin was rustic and cozy. It was perfect for him and Colton.\n\nThey had replaced the sofa with one they bought from a thrift store. The one that came furnished with the cabin had a mildew smell that made both of them sick. The place was already starting to look like a home and Parker already thought of it that way.\n\nHe glanced over at their bed. The covers were still thrown back and messed up. One of the first things Colton did was buy a new mattress. Together, they picked out sheets and blankets and bought new pillows. They spent a lot of time in that bed together and Parker's newly sensitive nose could smell their mingled scents coming from the sheets.\n\nHis dick started to harden as he remembered Colton making love to him in that bed just this morning. He pressed his palm against his erection, trying to push it into a more comfortable position. Maybe he could get Colton to fuck him again after their lunch break...\n\nHe grabbed the cooler by the handle and lifted it up. He wheeled it out onto the porch and let it drop.\n\n\"Lunch break!\" he called.\n\nParker watched Jed leap from the roof of his own cabin onto the ground. He was remarkably graceful for someone who looked like the Hulk. Colton and Trey came from inside. The trio walked over to where Parker was setting up lunch on the porch.\n\nDespite the cool weather, all three of them were shirtless and sweaty. Colton's glistening chest hair and muscle definition made Parker start to drool.\n\n\"Did Alph-- er, Forrest say anything about other wolves in the area?\" Trey asked Colton as they walked towards Parker.\n\n\"No. He said a non-wolf shifter lives in the village. Why?\"\n\n\"I scented a wolf in my cabin. The scent's faint. He's been gone a while, but it looked like he'd been living there.\"\n\n\"You think it's the rogue?\" Parker asked, his guard going up. He looked around the campground, looking for anything suspicious. His nose twitched as he scented the air, not that he had any idea what he was sniffing.\n\nColton rubbed his hand through the hair on the back of Parker's head, before landing on the nape of his neck. The big wolf was soothing him but didn't even appear to be doing it consciously.\n\n\"No,\" Trey said. \"It's definitely a wolf, though. He's not hiding his scent.\"\n\nColton thought for a moment. \"Hm. I think we need to make a trip into town.\"\n\nParker opened up the cooler and handed out bottles of water. He peeked into the sandwiches that he had made earlier, giving Colton the two loaded up with everything on wheat bread, Jed the two with no onions on white bread, and finally Trey got the two with no mayo or mustard.\n\nHe picked up the one with no mustard or tomatoes and took a bite.\n\nColton sat on the steps next to his boy and leaned down and gave him a kiss on the top of his head. \"You're the perfect alpha mate, you know.\"\n\n\"I am?\"\n\n\"Yup. You take care of your pack.\"\n\n\"I just made sandwiches. No big deal.\"\n\n\"Exactly. It's no big deal for you; you do it naturally.\"\n\nParker swallowed a bite of his roast beef on wheat. \"I have to tell my parents that I'm moving out when school gets out. They don't understand what we're doing out here. My dad doesn't like it.\"\n\n\"Hmph. I'm surprised they noticed you were gone.\"\n\n\"That's not fair, Colton.\"\n\n\"You're right. I'm sorry, pup.\"\n\n\"But maybe you're right, just a little.\"\n\nTrey cleared his throat. \"I was thinking... I could stay if you need me, after graduation.\"\n\n\"Fuck that,\" Colton countered, tapping Trey's chest with his index finger. \"You're going to college. Besides, when you get drafted by the NFL, we're gonna need your pack dues to pay the mortgage.\" Colton laughed. \"I'm just kidding ya, dude.\" He let out a breath and got serious for a moment. \"No matter what happens, you have a home here. You'll always be Timber Pack.\"\n\n\"How are we gonna pay the mortgage?\" Jed asked with a final mouthful of sandwich. He swallowed it down and unwrapped a second one.\n\n\"I'm using my college fund,\" Colton said. He drank down about half of his water. \"And I have some savings. Not much, but some.\"\n\nParker cleared his throat. \"I think I want to stay here. I can do online classes. We can use the rest of my college fund, and I have some savings, too. I want to work and support us the same as you.\"\n\n\"No,\" Colton said.\n\n\"We'll see,\" Parker said before returning to his sandwich.\n\nColton frowned at his defiance, but Parker wasn't going to budge on this.\n\nColton grunted. \"I talked to Forrest. If I take the police academy classes after graduation, he'll hire me on as a deputy. The village of Timber has a small sheriff's office but no police presence.\"\n\nJed and Trey nodded.\n\nParker thought that Colton would make a good cop. Being the head lawman in the village seemed like a natural fit for the Alpha. And, most importantly, he'd look really sexy in the uniform.\n\nThen he realized that Colton would have to work under Alpha Forrest. Yeah, that might not work out so well. In the time since they'd been forced to leave, Colton managed to piss off Forrest at least twice. And those were the times that he knew about. It also occurred to him that it was a really good way for Forrest to keep an eye on his rival neighbor. Parker decided not to say anything to Colton about that... for now.\n\n\"Good. I want all of us here Friday night. It's Parker's first full moon.\"\n\nParker looked between the three men and smiled. His gaze drifted to the tattoo on Colton's bare arm, the one that all three of them had permanently inked into their skin. \"I want a tattoo like you guys have.\"\n\nColton pulled his arm across his chest and flexed his bicep. \"I guess this is our pack tattoo. You're a founding member, just like us. I'll make the appointment to get you inked, pup. To celebrate your first change.\"\n\n* * *\n\nColton pointed to an empty parking spot, signaling for Jed to pull in. Jed parallel parked his truck in front of the sheriff's office in downtown Timber.\n\nThe village was part of Colton's pack territory. Standing on the sidewalk in the middle of the village, Colton now understood why Forrest wasn't so interested in keeping it. If you blinked, you'd miss the small town with a population of less than two thousand.\n\n\"Well, fuck. Is this it?\" Jed asked while looking up and down the street.\n\nThere was a single blinking yellow traffic light hanging over the middle of the downtown intersection.\n\nThe closed up sheriff's office sat in the middle of a strip of businesses, next to a tiny post office that was little more than a single-window kiosk. On the other side of the post office was the Timber General Store. There was a diner across the street as well as a laundromat and what looked like a lawyer's office. Further down the way was a small gas station, with a bar on the other side of the street.\n\nJed sniffed the air and turned back towards the General Store. \"I smell two shifters. A wolf and...\" He sniffed again.\n\nColton's nostrils flared. \"A bear.\"\n\nParker's jaw dropped. \"A bear? Like a bear bear? You know, a grizzly bear?\"\n\n\"No,\" Jed laughed. \"It's Winnie the Pooh.\"\n\nColton led his pack into the store. A slender young man in an apron looked up from the apples he was stocking. The wolf pup's eyes widened in recognition and he stepped backwards until he stood behind a burly lumberjack-looking mountain man.\n\nThat was definitely the bear shifter.\n\nComplete with a full beard, red flannel shirt, suspenders and blue jeans, he appeared to be in his mid-thirties, but you never knew with some shifters.\n\nThe bear folded his arms across his chest and stood with his feet shoulder-width apart, blocking their view of the young wolf. Colton could smell the bear all over the wolf. The bear was definitely fucking the little dark-haired wolf and the way he was guarding over him, Colton guessed that they were probably mates.\n\nColton wasn't intimidated. He knew he could take the bear if it came down to it. The bear may have looked soft, but he was strong. Even so, Colton knew that the man was too big and too slow to be much of a threat against a big Alpha wolf, especially if Colton shifted into his hybrid form.\n\n\"You must be the new wolf pack that's moved into the area,\" the lumberjack said. \"I'm Buck. I own the store. This here is my partner, Stan.\"\n\nStan peeked around the bear and nodded his head respectfully, but never lifted his eyes to look at Colton. The frightened pup was a year or two older than Colton, maybe early to mid-twenties at the oldest. He was about Parker's size but not as defined. Colton was concerned about him. The pup should be respectful and deferential towards the new alpha, but he was acting like he was scared to death, and Colton didn't like that.\n\n\"I'm Colton Butler.\"\n\nHe stepped forward and shook Buck's hand. He held his hand out to Stan. The smaller wolf leaned forward and gave Colton's hand a quick shake, then stepped back behind his bear.\n\n\"This is my beta, Trey; my enforcer, Jed; and my mate, Parker.\"\n\nStan peeked around Buck again, lifted his eyes and looked at Parker before looking back at Colton, then back down to the floor. \"You're mated to a man?\" he asked in wonder.\n\n\"Yes.\"\n\n\"But you're an Alpha.\"\n\n\"That's right. Timber Pack doesn't discriminate.\"\n\nBuck looked between the four men. \"So, are you here to collect pack dues or something?\"\n\n\"No,\" Colton said. \"If you want to be pack, you're welcome to join. I won't force you.\"\n\n\"Stan and I would need to talk about it.\" Buck turned back to his smaller mate. \"Why don't you go in back and start unpacking today's shipment for me?\" Stan nodded. Buck ran his thumb across Stan's chin fur. \"Thank you, cub.\"\n\nStan looked up at Buck for a moment, his eyes filled with love and adoration, before turning to leave.\n\nColton frowned as he watched Stan scurry into the store's back room. Stan was a 'pup', not a 'cub', but Colton didn't want to create waves with the bear, so he kept quiet.\n\nWhen Stan was gone, Buck relaxed slightly. \"Look, Stan was treated pretty shitty by his last pack. Some bullshit about being an omega. I'm not gonna pretend to understand wolf pack dynamics. He ended up homeless and travelling halfway across the country, before he wound up living up in those cabins of yours for a little bit. I want Stan to be happy and I want him to be safe.\"\n\n\"He'll be safe whether or not you two join the pack. You have my word. You may not be pack, but you're in my territory.\"\n\nBuck regarded Colton for a moment, then held out his hand. Colton shook it.\n\n\"Welcome to Timber,\" Buck said.\n\n\"Thanks, Buck.\" Colton smiled and tapped Buck on the arm.\n\nAfter they left the store, they headed across the street to the diner. When the four boys entered the restaurant, every eye in the place turned towards them and regarded them with curiosity.\n\nThey moved to the last booth in the corner and sat down. Slowly everyone turned back to their own business.\n\nA middle-aged woman with bleach-blond hair wearing a yellow uniform and white apron walked up with a smile. \"I don't think I've seen you boys in here before. Surely I would have remembered. I'm Dottie.\"\n\n\"Hi, Dottie,\" Colton answered, putting on his most charming smile. \"Me and my friends are new to the area and we're looking for dessert. What do you got that's good?\"\n\n\"We got strawberry cake and apple pie. I baked 'em fresh this morning.\"\n\n\"Mmm, strawberry cake please,\" Parker said with a happy grin. \"And a glass of water.\"\n\n\"I'll have the apple pie,\" Jed said. He gave her a sheepish smile and added, \"Two pieces.\"\n\n\"That sounds good,\" added Colton. \"Apple pie for me, too. But just one piece.\"\n\n\"I'll have the cake and a cup of coffee,\" Trey said.\n\n\"Coming right up. But next time you gotta come in for the lunch special, you hear?\"\n\n\"We sure will,\" Colton said with a wink.\n\nAfter Dottie left to prep their order, Trey leaned in. \"So, what do you think?\"\n\nColton looked out the window down the village strip. \"I like it here.\" He put his arm around Parker's shoulders and looked down at his mate. \"I think we can be happy here.\"\n\n* * *\n\nParker bounded down the stairs with his backpack. He found his dad at the dining room table sitting with his laptop and a big stack of folders and papers. Barney was so totally engrossed in his work that he didn't even notice Parker enter the room. As Parker came up behind him, he noticed his dad looking through some sort of financial records on the screen. All of the folders on the table were labeled \"F.V.W.P. HOLDINGS\".\n\n\"Jed's on his way. He'll be here in a second, so I'll see you tomorrow.\"\n\nStartled by Parker's sudden appearance, Barney looked up from his laptop and quickly closed the lid. \"What?\"\n\n\"It's Saturday. I'm spending the night at Jed's. Remember?\"\n\nParker got a blank look from his father. \"No.\"\n\nBiting back the urge to sigh, he said, \"You and Mom said it was okay. Last night. At dinner.\"\n\nBarney continued to stare at him for a moment, his eyes briefly lingering around Parker's neck.\n\nParker shifted nervously between his feet. He was positive that his scar was covered by his clothing, but he wasn't able to hide the noticeable hickey that Colton had left. Parker was really going to let Colton have it when he saw him. Hell, who was he kidding? All Colton had to do was touch him or kiss him and he'd do anything his mate asked.\n\nHis father leaned across the table and scooped up something. \"Your mother was looking for these. Can you bring them to her?\"\n\nParker was momentarily stunned. It was the most his father had said to him in days. \"Sure.\"\n\nHe walked over and held out his hand. Barney placed a pair of earrings into his palm.\n\nParker cried out in pain and jerked his hand away, dropping the earrings onto the floor.\n\n\"Something wrong?\" Barney asked.\n\n\"No. It's nothing.\" His eyes welled with tears and he tried to breathe normally and not shake apart as he squatted down. He looked at his hand and saw that he had two angry red blisters where the silver had burned him.\n\nAs he pulled the sleeve of his sweatshirt over his hand and carefully picked up the earrings, the doorbell rang.\n\nWhen Barney got up to answer the door, Parker dropped the horrid pieces of metal onto the table.\n\nJed's loud voice rang through the house. \"Hi. I'm Jed. You must be Mr. Montgomery. Nice to meet you, sir.\"\n\nParker walked to the door where Jed was happily shaking his dad's hand. His dad pulled his hand back, turned around and walked back to the dining room.\n\n\"You okay?\" Jed quietly asked Parker, his brows scrunched with concern.\n\nParker cradled his hand and nodded. \"I'm fine.\"\n\nAs Parker closed the door behind him, he noticed his father carefully watching them from the dining room archway, juggling the earrings in his hand.\n\n\"You sure you're okay?\" Jed asked again as they walked to his truck.\n\n\"I burned my hand on some silver,\" Parker replied. \"It hurts.\"\n\nJed took Parker's hand and looked at the burns. \"It's not too bad. It'll heal fairly quick. I think I have some aloe in the truck.\"\n\nThey got into the truck and Jed fished around the glove box and found the bottle of lotion.\n\nParker took the bottle and popped the cap. He turned it upside but suddenly stopped and looked back at Jed. \"Please tell me that you don't use this for what I think you use it for.\"\n\nThe corner of Jed's mouth turned up in a smirk. \"I don't use lube when I jack off, if that's what you're asking.\"",
        "Parker cringed. \"Forget I said anything.\"\n\nHe spread the soothing lotion on his palm and the burn started to feel a little better.\n\n\"The burn should be gone in a couple of days,\" Jed said. \"Quicker once you start shifting.\"\n\n\"Thanks,\" Parker said with a nod as he put the lotion back into the glove compartment.\n\nJed started the truck and pulled out of the driveway and headed out of town towards Camp Timber.\n\n\"And please, for the love of God, tell Colton that you didn't burn yourself on my watch,\" Jed snickered. \"He's gonna bite my head off when he sees you.\"\n\nParker rolled his eyes. \"He's not that bad.\" He thought for a moment. \"Okay, maybe he is. Have you ever heard of F.V.P... No, F.V.W.P. Holdings?\"\n\n\"Sure. That's Forrest's company. It's on my dad's paychecks. Forest View Wolf Pack. Why'd you ask?\"\n\nParker shrugged. \"Just wondered.\"\n\nJed's cell phone beeped and buzzed and he picked it up from where it was resting in the drink holder. He looked at the screen and chuckled, then handed the phone to Parker.\n\n\"Who's this?\" Parker asked, looking at the smiling twink on the screen.\n\n\"We're supposed to hook up this weekend. Finally. He goes to school in the city. These past two weeks have been crazy. I'm gonna give myself carpal tunnel, if you know what I mean.\" Jed made a 'jerking off' motion just in case Parker didn't get it.\n\n\"I doubt Colton would appreciate you telling me that.\"\n\nThe phone buzzed in Parker's hand and a new text message scrolled into view. \"He says he's not D.T.F., but he's curious.\" He handed the phone back to Jed. \"I don't even want to know.\"\n\nJed just smiled. \"He'll come around. I'll charm the pants right off the little dude. When he sees what I'm working with, he'll be ready to go.\"\n\n\"Yeah, Colton definitely wouldn't want you telling me all that. Actually, I don't want you telling me all that either.\"\n\nParker laughed, making Jed laugh with him.\n\n\"And speaking of carpal tunnel, I bet Colton had a blast signing all of that paperwork.\"\n\nParker smiled. \"He said he'd text me when he got done at the lawyer's office. I can't believe he owns the camp now.\"\n\nWhen they got to the camp, Parker and Jed got right to work. A large orange roll-off dumpster had been delivered, and they proceeded to fill it with garbage and demo scraps.\n\nAfter an hour or so of making trips back and forth to the dumpster, Parker's hand was starting to hurt. He pulled off the glove and noticed that the blisters had started to bleed. He walked down to the river and knelt down. He rinsed his hand off, closing his eyes as he let the cool water wash the blood away from the burn.\n\nThe hair on the back of Parker's neck stood up. He lifted his head and sniffed the air. He didn't understand what he was smelling yet, but something wasn't right.\n\nParker stood up and looked around. He turned towards the cabins and shouted, \"Jed?\"\n\nJed came racing around one of the cabins, faster than Parker had ever seen him run. He was pulling off his clothes as he did, his face already in mid-shift.\n\nParker's head whipped to the side when he heard the snarling. He locked eyes with the grey wolf; those icy silver/steel eyes were wide and crazy, and foamy saliva dripped from its mouth.\n\nThe wolf came at Parker, but Jed's massive auburn-colored wolf let out a roar and leapt. Jed knocked the grey wolf back, then moved in front of Parker, blocking him from attack. He growled and snarled, warning the other wolf away.\n\nThe rabid wolf attacked Jed. He managed to get under the bigger wolf and he grabbed hold of Jed's front arm and jerked hard.\n\nJed howled, then snapped his jaws on one of the grey wolf's ears, ripping it in two, but the wolf still wouldn't let go.\n\nParker picked up a chunk of a cinder block and threw it hard at the grey wolf, hitting him in the back of the head, making him finally let go of Jed.\n\nJed took the opportunity to strike. He clamped his jaws on one of the grey wolf's paws and shook it. The bone cracked and the rabid shifter howled in pain as blood sprayed across the yard. He jerked and shook like a madman and managed to get loose from Jed's grasp, then ran off as fast as it could with three good legs into the woods.\n\nJed shifted back to his human form and slumped to the ground at Parker's feet.\n\n\"Are you okay?\" Parker asked. He knelt down next to the naked man and examined the huge bruise on the front of his shoulder.\n\n\"Fucker dislocated my shoulder,\" Jed grunted. He sat up and rotated his arm and did a few stretches. \"I'm fine.\"\n\n\"Are you sure you're okay?\"\n\n\"Yeah. It's all good. He doesn't fight worth crap.\"\n\n\"He's erratic... it's like he's unfocused. Did you see him literally foaming at the mouth?\"\n\n\"Yeah, but I hurt his ass good. He's gonna need a couple days to recover.\"\n\n\"I know this isn't what it looks like,\" Colton growled as he stormed into the back yard. \"Someone better start explaining why my enforcer is naked and my mate is kneeling next to him.\"\n\n* * *\n\nColton ended the call and threw his phone at the wall, but Trey caught it in mid air, saving it from destruction.\n\n\"They don't know anything about the fucking wolf. Dad admitted that they practically gave up looking for him. They're not even going to send anyone out here to track him.\" He turned and pointed a finger at Parker. \"And you. You don't fucking go anywhere without one of us with you.\"\n\nParker folded his arms across his chest and glared back at his mate. \"Hey, don't yell at me.\"\n\n\"I want this fucker dead.\" He directed his anger at Jed next. \"You should have gone after him.\"\n\nJed hung his head. \"Sorry. I fucked up.\"\n\n\"Hey, don't yell at Jed either,\" Parker said, coming to the enforcer's defense. \"He got hurt protecting me.\"\n\n\"Everyone calm down,\" Trey interrupted. \"This isn't helping.\"\n\n\"You're right,\" Colton admitted. He took a deep breath. \"Okay. First off, we're not going to let that fucker dictate how we live our lives. And second, what we need is a plan...\"\n\n* * *\n\nParker was laughing as he ran through the woods. He could hear Colton behind him. His wolf was chasing him, playing with him. He could have caught him so long ago, so easily, but he was drawing out their play time.\n\nColton \"woofed\" from somewhere behind. He was close.\n\nParker was tired, but he pushed hard, not wanting to appear to be giving up. He jumped over a fallen tree, but his foot caught the top of the trunk and he nearly fell.\n\nSuddenly, a flash of black fur leapt over him and Parker lost his footing, slipping on the fallen leaves covering the ground. He laughed as he lay down on the ground.\n\nThe big, black beast walked around him, growling and snarling.\n\n\"You got me,\" Parker panted through his laughs as he pushed up onto his knees. He brushed the leaves off the front of his shirt. Before he could get up, Colton moved in.\n\nColton growled low in his chest. The wolf's snout pressed between Parker's butt cheeks and then inhaled and snorted loudly. Colton head-butted Parker's back, knocking him forward onto his hands. The wolf's front paws grabbed at Parker's waist as he mounted Parker's back and pushed into position.\n\n\"Colton!\"\n\nParker squirmed away and rolled over onto his back. He pushed his hands against Colton's chest in attempt to keep the big wolf away.\n\nColton surged forward, his body completely standing over Parker's.\n\nParker narrowed his eyes at his mate. \"You are such a perv.\"\n\nColton opened his mouth and his tongue lolled out. He dipped his head and let out a huff of air. He was laughing.\n\nParker rolled his eyes. \"I'm glad you think you're funny. But I swear if you come at me with wolf dick again, I'm gonna cut it off.\"\n\nIn response, Colton slurped his tongue upside Parker's face.\n\nParker wiped his face off, rolled from under Colton and pushed himself to his feet. Resting his hand on Colton's neck, he buried his fingers in the soft fur. He let Colton lead him through the woods as they continued their walk towards the Camp Timber cabins.\n\n\"I can't wait until I get to run with you for real. Just one more day.\"\n\nColton stopped walking and Parker looked down at him. Colton stared at him for a moment, then closed his eyes and rubbed his muzzle on Parker's hand.\n\n\"I love you, too, Colton.\"\n\n* * *\n\n\"What on earth is wrong with you, Parker?\" Kate looked across the dining room table at her son with furrowed brows.\n\nParker had barely touched his lunch. He was bouncing his legs under the table, while chewing on his thumbnail. He was restless. The sun hadn't even gone down yet, but he could already feel the pull of the full moon.\n\n\"Parker. Your father and I have been talking. Are you on drugs?\" his mother asked. His father glanced up from his BlackBerry to listen to the answer.\n\nParker looked up from his plate. \"What? No, of course not!\"\n\n\"Well, what do you expect us to think?\" his father added. \"You're acting like a junkie. What has that Butler boy got you hooked on?\"\n\nParker looked up at the clock. Colton was due to pick him up any minute. They were going out to the camp tonight. To run in the forest on their pack's land.\n\nTonight would be Parker's first change.\n\n\"I don't have time for this,\" Parker said with a sigh. \"I'm going out tonight.\"\n\n\"I think it might be best if you stayed home tonight,\" Barney said.\n\n\"I can't. I promised my friends I'd help with their project.\"\n\n\"Cleaning up that abandoned campground? Is this some kind of community service? Your 'friend' has gotten into trouble again?\"\n\n\"No, Dad. I've told you already, Colton is a good man.\"\n\nBarney scoffed. \"A 'good man.' I think you need to take a break from Colton.\"\n\nParker gripped the edge of the table as he fought back the urge to growl. \"Actually, I have something I have to tell you... After graduation, I'm moving in with Colton.\"\n\n\"Excuse me?\" Kate said.\n\nBarney actually set down the BlackBerry. His face went bright red. \"Are you fucking insane? What about college? Are you just going to throw your life away? For what? To live with a... trash?\"\n\nParker closed his eyes and clenched his jaw as his stomach muscles contracted hard. His teeth and gums hurt. He rubbed the itchy pads of his fingers on his shorts. He felt a bead of sweat drip and roll down the middle his back, followed by another.\n\n\"Parker? Are you sure you're okay?\" his mother asked with concern. \"I really think you should stay in tonight. Why don't you go upstairs and lay down? We can talk about this later.\"\n\nParker shook his head and opened his eyes. \"There's nothing to talk about. Dad already knows. Colton purchased the campground from Sheriff Forrest's company. I'm moving into the cabin with Colton.\"\n\nBarney turned to Kate. \"I have no idea what he's talking about. Do you? Are you hearing this? Your son has lost his fucking mind. He's gonna live in a commune like some god damned hippy.\"\n\nKate pursed her lips together. \"Barney Montgomery, don't you dare raise your voice or cuss at me.\"\n\nBarney scoffed. \"This is all your fault. You coddled him and spoiled him, and now look at him. It's bad enough he's a homo--\"\n\nParker pushed back from the table, sending his chair back with a loud thump. Anger rose inside him and it was a struggle to keep his voice calm. \"I'm going out. It's not a school night. I'm going to spend the night at the camp. You can't stop me.\"\n\nThat last sentence came out in a half-growl that had both of his parents suddenly silent.\n\nBefore his parents could respond, Parker got up and grabbed Colton's hoodie. He pulled it on and grabbed the backpack he had packed earlier and left the house.\n\nHe was sitting on the curb when Colton pulled up several minutes later.\n\n\"You okay?\" Colton asked when Parker got settled inside the car. He rubbed his hand against Parker's cheek and looked at Parker with concern.\n\nParker leaned over and rubbed his nose and cheeks against Colton's neck. He put his arms around his mate and hugged him tight and breathed in his scent.\n\nNo wonder Colton was always smelling him. Just a whiff of Colton calmed his nerves.\n\n\"I am now.\"\n\n* * *\n\nColton sat down on their bed and watched Parker pace back and forth across the cabin's main room. He could feel that Parker's beast was close to the surface, scratching to get out. It wouldn't be long.\n\nParker needed to relax. If he continued to work himself into a frenzy, he was going to hurt himself during the change.\n\nThis was a big deal, bigger than he let Parker know. Humans who were turned often died during their first change, especially if they didn't understand what was going on and fought it.\n\nA smile spread across Colton's face. He knew just how to get Parker relaxed.\n\n\"C'mere, pup. You're gonna wear a hole in the floor.\" Colton patted the empty space on the bed next to him.\n\nParker sat down next to Colton and leaned against him. His breathing was erratic and he was shaking and sweating.\n\nColton put his finger under the friendship bracelet he made for Parker. \"We need to take this off,\" he said. \"And the necklace.\"\n\nParker shook his head. \"No.\" He snatched his hand away from Colton, and cradled his neck. \"Please don't make me.\"\n\n\"They'll break off when you shift, Parker. You'll lose them. Besides, you already bear my permanent marks on your body.\" He traced his fingers over the tattoo on Parker's right bicep. \"Here.\" His hand continued up to the left side of Parker's neck and he lightly caressed the bite scar. \"And here.\"\n\nParker sighed and it came out ragged and uneven. \"O-o-okay...\"\n\nColton carefully removed the friendship bracelet and the leather necklace and wolf pendant from Parker's neck. He set them on the table next to the bed.\n\nColton bent down and kissed Parker, pushing his tongue between his pup's lips. Parker let out a little moan, opening his mouth and submitting to Colton.\n\n\"Show me your belly, pup.\"\n\nColton pulled his own t-shirt off and tossed it on the floor. Parker did the same, and then slid up to the middle of the bed and laid down.\n\nColton admired the tattoo on Parker's right bicep. His ink looked good on his pup. He moved over Parker, and licked and nibbled Parker's stomach, while working Parker's shorts off. Once he got his pup naked, he laved his tongue up and down his cock, quickly getting it fully hard.\n\n\"Turn over,\" Colton growled. He helped Parker roll over onto his belly, then grabbed his hips. With a tug, he pulled Parker onto his hands and knees. \"Stay there.\"\n\nColton knelt behind Parker and spread his ass cheeks wide. That tight little hole he loved so damn much clenched and unclenched in anticipation. Colton growled in his throat and hawked and spat on it. He attacked it, licking and sucking with enthusiasm. He nipped at the skin with his teeth, then pointed his tongue and thrust it inside and fucked it. The moans and whimpers that spilled from Parker pleased him. Colton's cock jerked and dripped pre-come onto the sheets. He couldn't wait until he was inside Parker.\n\nWhen Parker was trembling with need, babbling incoherently, his fists gripping the sheets in an iron grip, Colton knew it was time.\n\nHe grabbed the lube and slicked up his cock, then got into position. He held Parker firmly in place, one hand gripping a shoulder. He slapped that quivering hole with the girth of his cock.\n\n\"Please, Colt. Put it in me...\"\n\nColton lined up and thrust into him to the hilt.\n\n\"Oh!\" Parker cried. \"Colt! God! Yes.\"\n\nColton gripped Parker in a death grip, making sure he wasn't going to escape. \"Take it,\" he barked. He roughly pounded into his mate doggy-style, hard and fast, nailing that sensitive prostate on nearly every thrust.\n\nAnd Parker loved every second. His pup begged for it while pushing his ass back against Colton. His moans and whimpers only added fuel to Colton's fire.\n\nColton leaned over Parker's body. He reached around and grabbed Parker's dick as he clamped his teeth on the curve of Parker's neck. His teeth pierced the mating scar and Parker let out a scream. Colton felt Parker's dick jerking as hot come shot out of it, covering the sheets beneath them.\n\nColton threw his head back and roared as he came, filling his pup's ass with his liquid heat until it was overflowing and dripping down Parker's balls and the inside of his leg.\n\nWhen Colton finally loosened his grip on Parker, his boy slumped forward onto his belly, falling into the wet spot he had just created. \"Oh man, oh damn... so good...\"\n\nColton flopped down on his back next to him. \"I aim to please.\"\n\nParker's eyes drifted shut and he began to softly snuffle.\n\nColton watched him sleep, but it was an uneasy sleep. Every time Parker whined or jerked in his sleep, Colton would touch him and rub him until he calmed back down.\n\nIt would be over soon. Once Parker made it through the turning, he would be just fine.\n\nColton's thoughts were interrupted by the sudden screech of his cell phone ringing. He reached down to the floor and pulled it from the pocket of his blue jeans. \"Yeah Jed? What's up?\"\n\n\"Hey, boss, if you're done sexing up your mate, that bear is here to see you.\"\n\n\"Don't call me 'boss,' damn it. We'll meet you in the mess hall.\"\n\n* * *\n\nAfter getting cleaned up and dressed, Parker followed Colton out of their cabin to the common building. Jed, Trey and Buck the bear shifter were sitting down at the long dining table that Colton purchased last week.\n\nColton held out his hand and he and Buck shook. \"Buck, it's good to see you again. What can I do for you?\"\n\n\"It's about Stan.\"\n\n\"Stan? Where is he, is he okay?\"\n\n\"Yeah. He's back home, in town. The thing is... He needs a pack. Tonight's the full moon and he gets restless. I was hoping that you'd let him play with you, or whatever it is you guys do.\"\n\nColton nodded. \"He's more than welcome. I take it you two want to be pack then?\"\n\nBuck nodded. \"If you'd take Stan in, I'd appreciate it.\"\n\n\"You're Stan's mate, aren't you? That means both of you.\"\n\n\"I'm sure you picked up on the fact that I'm not a wolf.\"\n\n\"It doesn't matter. You are Stan's mate.\"\n\nBuck didn't answer for a few seconds. \"Yeah,\" he said with a sigh as he rubbed the back of his neck. \"I'm Stan's mate. I just... I'm a loner, I don't really know how to deal with packs and wolves and mates.\"\n\n\"Well, there ain't no better way to learn than a full moon run with a pack of wolves.\"\n\n\"Suppose you're right. There is something else you should know before you decide to let us in. I think someone's been sniffing after Stan.\"\n\n\"What do you mean?\"\n\n\"I don't know if it's maybe someone from his old pack, but there's been some shit happening. It's weird, though. Something's off about its scent, but I think it's a wolf shifter, not a wolf. It attacked Stan the other day when we were walking in the woods, but I fought him off.\"\n\nParker gasped and he looked at Colton with a panicked look on his face.\n\nColton's face turned dark and his voice took on a menacing growl. \"When I find that fucker, I'm gonna gut him like a fucking pig. Pack or not, you're in my territory. That means you're under my protection. We got Stan's back. Right, guys?\"\n\nParker and Trey nodded their agreement.\n\n\"Damn straight,\" Jed added.\n\n\"Good,\" Colton said with a nod. \"Now that that's been settled, go get Stan and come on back. Tonight is Parker's first change and Timber Pack's having a birthday celebration.\"\n\n* * *\n\nThe pack stood around the roaring firepit as the sun set and the moon began to rise.\n\nBuck and Stan stood silently before Colton while Parker, Trey and Jed looked on.\n\n\"Tonight we welcome two new brothers into our pack. Do you pledge your loyalty to Timber Pack?\"\n\n\"Yes, Alpha,\" Stan replied, with Buck mimicking him.\n\nColton looked to Parker, Trey and Jed. \"Do you accept their pledge?\"\n\n\"Yes, Alpha,\" the three replied.\n\nColton grasped the back of Stan's neck. When Stan tipped his head, Colton scraped the sharp claw of his thumb down the side, drawing a drop of blood. Colton leaned forward and sniffed the young pup.",
        "He repeated the same on a skeptical-looking Buck.\n\n\"Welcome to Timber Pack, my brothers,\" Colton said.\n\nHe shook Buck's hand, then did the same with Stan.\n\nStan grabbed Buck's hand. He looked up at his mate through glassy eyes, a big, happy grin on his face. \"Thank you.\"\n\nBuck looked down at Stan in awe. \"If it gets you to look at me like that, cub, I'll do anything. Anything you want.\"\n\nJed cleared his throat. \"Uh, you do know he's a wolf pup and not a bear cub, right?\"\n\nParker nudged Jed in the ribs. \"God, you got a big mouth. Stop ruining their moment.\"\n\nParker's belly suddenly cramped and he doubled over and dropped to his knees.\n\nA grin spread across Colton's face. \"It's time, pup.\"\n\n* * *\n\nParker slumped down onto the ground and wanted to die. He was completely naked and everyone was staring at him, but he couldn't even stop to care. He itched everywhere; it felt like he had ants crawling underneath his skin. His joints and muscles ached all over, making him feel like he got hit by an eighteen-wheeler.\n\nHe rolled over onto his side and let out a pained whimper. His breathing went shallow and quickened. He was going to hyperventilate.\n\n\"Parker.\"\n\nParker looked up at his mate. Colton was standing in front of the campfire in all of his glorious nakedness, but Parker hurt so bad he couldn't even think of getting it up for his sexy alpha mate.\n\nOn either side of Colton were two large wolves: one chocolate brown, and one a dark auburn brown. Nearby, stood a big brown grizzly bear with a small grey wolf plastered by his side.\n\nParker gasped. Holy shit, a grizzly bear! Oh, wait, it was Buck. He knew that. Why couldn't he think straight?\n\n\"Parker, look at me.\"\n\nParker met Colton's dark eyes. Colton stepped forward and squatted down.\n\n\"You can do this, pup,\" he said quietly. \"I am so proud of you and I can't wait to run with you.\"\n\nParker's body was wracked with another jolt of agonizing pain. \"Hurts...\"\n\n\"You're fighting the change. Don't fight it, pup. Relax. Look up at the moon. Feel the pull.\"\n\nParker looked up past Colton at the full moon. The air was clear and the moon was big and bright as it began its rise into the sky.\n\n\"Think of my wolf,\" Colton whispered. \"Remember the first time you saw me, touched me? Remember what it was like when I changed? Think of your body doing that.\"\n\nParker closed his eyes and thought back on the first time he saw Colton change. He remembered laying with the wolf, how comforting it felt.\n\n\"There you go.\" Colton's whisper was so soothing. \"I can feel it, Parker. I can feel your wolf.\"\n\nParker felt something in the back of his consciousness pushing at him, wanting to get out. He took in a deep breath and let it out slowly. As he opened his eyes and looked up at the moon, his body relaxed and went limp.\n\nHis skin started to tingle as if a static charge covered him.\n\nThe bones in his legs snapped, making Parker scream in pain.\n\nIt was finally happening; he couldn't stop it!\n\nHis eyes flew up to Colton's face in panic and he stared into Colton's dark eyes.\n\n\"That's it, pup. Let me see you.\"\n\nParker's bones cracked and stretched. Hair pushed its way through his skin. His new teeth and fangs burst through his gums and he tasted the copper tinge of blood. His jaw, nose and ears elongated as claws pushed through his fingers. His tailbone popped as a tail grew out.\n\nSeveral seconds later, a small wolf with fur almost as white as the moon lay on the ground.\n\nColton dropped to a squat. He rubbed his hands through Parker's fur. He looked down at Parker with tears in his dark eyes, eyes full of love and pride. \"You're so beautiful, pup. Happy birthday.\" A tear slid down Colton's cheek.\n\nParker liked that Colton called today his second birthday. In a way, he really was reborn today. He swiped his tongue across Colton's hand.\n\nColton laughed quietly. \"I love you, too, pup.\"\n\nColton leaned forward onto his hands and Parker watched his change through his new eyes.\n\nThe massive black wolf nudged Parker with his muzzle. Parker awkwardly pushed to his feet, standing on four paws for the first time. Parker took his first shaky steps. He circled around the bonfire, becoming more comfortable with each step he took.\n\nMaking his way back to his mate, he leaned against Colton. The big black wolf rubbed his body all over Parker's, bathing him in the alpha's scent.\n\nColton lifted his head and howled triumphantly. Parker tipped his head back and joined in. Trey, Jed and Stan did the same while Buck let loose a grizzly roar.\n\nColton looked at each of the members of his pack in turn, then took off full speed into the forest.\n\nParker leapt forward and gave chase after his Alpha. After his mate.\n\n* * *\n\nParker rolled over and groaned. His body ached in places he didn't even know could ache. He opened his eyes and found Colton laying next to him, watching him.\n\nThey were back in their bed and the sun was shining brightly through the cabin windows.\n\n\"How do you feel?\" Colton asked. He ran his fingers over Parker's forehead, pushing his bangs to the side.\n\n\"Like I got hit by a bus.\"\n\n\"Your body is adjusting to the shift. Tonight will be much easier.\"\n\n\"Tonight?\" Parker groaned.\n\n\"Yeah, tonight. What, you thought the full moon was only one night? I promise it'll be better tonight.\"\n\n\"I hope so.\"\n\n\"You're a beautiful wolf, Parker. My wolf was very happy. He loves you.\"\n\n\"Yeah,\" Parker muttered, his face going bright red. \"I could tell.\" The pain in his backside reminded him acutely of how much Colton's wolf liked his wolf.\n\nColton laughed. \"I couldn't help myself.\"\n\n\"Jeez, Colt. You could've at least warned me beforehand that you were going to have wolf sex with me.\"\n\n\"I didn't plan on it. But my wolf wanted it, so I took it,\" he said unapologetically.\n\nParker remembered spending the night running around the forest with Colton and his pack-mates. Running as a wolf was amazing. He felt one with nature. He finally understood what Colton had told him. His pack-mates were more than just friends. They were his brothers.\n\nHe watched with fascination as they boxed in a huge buck and killed it. While he previously would have been revolted by such a display, there was something so natural about it.\n\nColton used his powerful jaws and dragged the deer over to Parker, proudly presenting his mate with the prize. Parker cringed and backed away when Colton began to eat, but watching Colton tear into the deer did something to Parker. Parker moved in and shared the animal with his mate. When they were finished, Parker did his best to drag the carcass over to the others.\n\nHe watched them feast while Colton bathed him all over with his tongue, then rubbed his fur all over Parker's body. After Colton sniffed and licked around Parker's tail, he grabbed Parker by the scuff of his neck and dragged him deeper into the woods for privacy.\n\nThe memory of Colton's wolf mounting him had Parker covering his eyes with his arm and groaning in embarrassment.\n\nColton laughed softly. The smug grin on his face made Parker nudge him in the ribs with an elbow. \"Stop thinking about that. It's not right.\"\n\n\"Your wolf submitted to me. I would have backed off if you didn't want it.\"\n\n\"Just don't tell anyone.\"\n\n\"I'm sure they knew what we were doing.\"\n\n\"Oh god.\"\n\nParker rolled onto his back and stretched his arms over his head. His back and shoulders popped and he relaxed back into the mattress. He reached up and scratched his cheek, surprised to find stubble.\n\n\"Someone needs to shave,\" Colton said.\n\n\"Really?\"\n\n\"Yup.\"\n\n\"I've never been able to grow a beard before,\" Parker said as he stroked his scratchy chin. \"I barely had peach fuzz. Maybe I'll grow a goatee.\"\n\n\"I think you'll shave it smooth.\"\n\n\"Because it's all about what you like,\" he said sarcastically.\n\n\"Yup. Thanks for figuring that out. Oh, well looky here,\" Colton said with a chuckle. The tip of his finger traced down Parker's chest to his belly button. His finger wiggled through the blond treasure trail that led down to his groin.\n\nParker sat up on his elbows and looked down. He didn't have that trail of hair before. It led down to his pubes, where his cock was half asleep, half hard, underneath Colton's caressing hand.\n\nPressure in his bladder reminded Parker he urgently needed to take care of business.\n\n\"I gotta pee.\"\n\nHe hopped out of bed and hurried to the bathroom. He stood in front of the toilet and gripped his dick. He let his head fall back between his shoulders as he sighed and relaxed his muscles. Urine streamed out and splashed everywhere, splattering his fingers and the toilet rim.\n\n\"Damn! What the hell?!\"\n\nParker looked down. The head of his penis was completely covered by a foreskin. \"Where the hell did that come from?!\"\n\nHe pulled the skin back like he had seen Colton do and got things under control, the remaining urine making it into the actual toilet bowl.\n\n\"I told you scars would heal,\" Colton said with a laugh. He was leaning in the bathroom doorway, watching Parker.\n\n\"I didn't think you meant this,\" he groused as he shook it off.\n\nWhile Parker washed his hands and around the head of his new dick, Colton cleaned the toilet and the floor.\n\n\"It feels funny,\" Parker said as he slid the skin back and forth, playing with it like it was a brand new toy.\n\n\"Let me see.\"\n\nColton took Parker's dick in his hand and started to slide his hand up and down. \"Nice and smooth. So pink and pretty.\"\n\nParker was about to protest his penis being called pretty, but he was overwhelmed by the feeling of Colton's hand. He grabbed the bathroom counter and let out a moan as he stiffened to full erection. \"Holy crap.\" The new sensations were quickly taking him to the edge. \"Oh god, Colt,\" he gasped.\n\n\"Let's see if it tastes the same,\" Colton said as he dropped down to his knees.\n\n* * *\n\nThe grey wolf watched the cabin from a distance. He could smell his enemy inside, could hear them laughing, could hear them fucking.\n\nAnd he seethed with rage.\n\nHe almost had the little bitch again, but he hadn't scented the big, dumb red-head. His injured ear twitched as a reminder of what the big one did to him. Yes, that one would die too.\n\nHe growled, dripping foamy saliva onto the ground.\n\nThe next time he would succeed.\n\nEven if it killed him."
    ],
    "authorname": "robcub32",
    "tags": [
        "gay drama",
        "gay romance",
        "gay novella",
        "paranormal",
        "werewolves",
        "high school"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/timber-pack-chronicles-ch-08"
}