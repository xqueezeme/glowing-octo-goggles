{
    "title": "On The Train Ch. 04",
    "pages": [
        "I hope I haven't made you wait too long for this, but... Samantha and Alex are back for more. \n\nAlex has dealt with Chloe. Will he fair as well with her sister?\n\nThanks for being patient. Please cast your votes when you're done, and send me your thoughts. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI gave serious consideration to declining the invitation to help that weekend. Certainly not for any reasons that included Sam, as any excuse to be with her was valid in my opinion. \n\nNo, the reason was younger. The thought of dealing with Cassie was exhausting. Sure, I'd been successful with Chloe, but she was easy. \n\nAlright, maybe 'easy' isn't the word. Easy is what she wanted to be, and it was very tempting... for about three seconds, as she stood in my apartment, blouse wide open, showing me her impressive chest... to go ahead and fuck her luscious body. Love won out, overriding hormones in the fourth second, and reminding me that I wasn't looking for a few minutes of passionate, lust fuelled sex. \n\nI had that already with Samantha, with the added attraction of an ever-deepening emotional connection and trust; I wouldn't betray that trust for a mere roll in the hay, no matter how much my dick wanted me to. \n\nOkay, so easy isn't what I meant, but 'simple' could apply. She was brutally direct, aggressive, and quick to voice her feelings. Her flirting was anything but subtle, but that made her at least predictable. In the end, I was able to guess her reactions, and use the truth to diffuse the potential explosion. \n\nCassie wasn't looking that simple. Both Sam and Chloe agreed that she was not to be trusted with our secret yet, so that option was out. She was the quiet one, and it's always the quiet ones that are the most dangerous. Reading her was difficult. \n\nThat serious consideration really didn't stand a chance when compared with the opportunity to be with Samantha again, even though I had barely recovered from last night's escapade. I couldn't let her down, even if it put my virtue at peril. Giggle. \n\nMy phone buzzed. Sam had a message for me. \n\nBe warned... Cassie will be calling. I told her if she wanted you to help, she should ask you, not me. Hope you say yes. Last night was soooo gooooood. \n\nYes it was. She'd get no argument from me. \n\nWhen I got out of the shower, there was a little blue light flashing on my phone; Missed call. Voicemail. \n\n\"Hi Alex... It's Cassie. I hope I made enough of an impression that you remember me. Mom, Chloe, and I could really use your help again today, if you're not too busy. Please call me back. Thanks. Bye.\" \n\nSounded simple enough, but I was still a little worried about Cassandra. She was the only one that didn't know... couldn't know... about us. Her reasons for wanting me there were her own ; part sibling rivalry, part modern woman who wasn't afraid to admit she wanted sex. Unfortunately, she wanted it from me, and I was trying desperately not to act like Frank. \n\nOkay. Call her back. \n\n\"Hello? I got a call from this number... from someone named Casey?\" I said as straight faced as possible, playing the wrong number card. If she was playing games, I could play back. \n\n\"Not Casey,\" she corrected. \"Cassie... Alex? Is that you?\" \n\n\"Yes, my name is Alex. Who's this again?\" \n\n\"It's Cassie. You know... Samantha's daughter?\" she clarified. \n\n\"I remember a Chloe,\" I replied, desperately holding back a snicker. \"Cassie doesn't ring a bell. You're sure we've met?\" A giggle snuck out. \n\n\"Alex! You asshole!\" she gasped, then laughed. \"You really had me worried, there. I thought I was losing my touch! Cheeky bugger!\"\n\n\"Well, you earned it. Hope you made an impression? Really?\" I asked, laughing back. \n\n\"Okay, okay... point made. Just answer the question,\" she giggled. \n\n\"There was a question?\" I prodded. \n\n\"Oh, fuck you, you prick! You know exactly what I'm talking about. Stop twisting everything!\" she hissed. \n\n\"Alright. Just relax. Tell your mother I'm on my way in a few minutes. Mad at me?\" I asked. \n\n\"No,\" she snorted. \"Just don't like being toyed with. Better not turn your back on me!\" \n\n\"I'll keep that in mind,\" I replied. \"See you soon.\" \n\nI know, I know... in addition to poking the bear with a stick, what I just did could easily be considered flirting. It's just that it suddenly occurred to me that the best way to beat her game, was to play it. \n\nSam knew I was totally committed to her, and there was nothing Cassie could do to shake that. Cassie didn't know that though, and if I was aggressive back toward her, it might give her pause. It seemed as viable a strategy as any, and it only had to last the weekend. \n\nOr, l could have just served myself up on a silver platter. I'd know soon enough. \n\n***\n\nI pulled into Sam's driveway, and turned off the car. There would be a time, hopefully soon, when that front door would be my entrance to heaven, on a daily basis. Every day that passed made me more convinced that Sam was the only woman for me. I couldn't imagine a future without her. \n\nRight now, that door scared me a bit. Cassie was in there. My strategy didn't seem quite as sound as it had an hour ago. Oh well... too late to back out now. \n\nBefore I could get out of the car, the passenger door opened abruptly. It surprised the hell out of me, but my heart started again when I realized it was Chloe, not her sister. \n\n\"Hi!\" she giggled. \"Surprise! Again!\" \n\n\"Good morning, Chloe. I see you forgot your bra again,\" I smiled. \n\n\"Yeah,\" she smiled, bouncing in the seat to jiggle her boobs at me. My eyes were inevitably drawn to them. \"Remember... We don't want Cassie to notice anything unusual, so I'm pretending to still be after you. Besides, I like the way you look at me. You're allowed. Do you like my shirt?\" \n\nIt occurred to me that her collection of novelty t-shirts was just another way to get people to check out her rack, although her prominent chest did occasionally make reading them a challenge. It certainly would work on me, as I read today's version with a grin. \"Of course I talk to myself. Sometimes I need an expert opinion\" it said. \n\n\"Cute,\" I smiled. \"On a different topic... How's your Mom this morning?\" Yes, I was teasing her. \n\n\"Listen, buddy,\" she giggled, pointing her finger at me, \"getting this crap from Mom is bad enough. You're torturing me! She came home glowing last night. I can't believe Cassie hasn't caught on yet, but I knew the reason why, of course. Did you like the lingerie?\"\n\n\"Mmmmm, yes, thank you,\" I nodded. \"Quite nice. Yours?\" \n\n\"Yes, but I'm afraid the man I bought it for is taken, so I didn't want it to go to waste,\" she said softly, batting her eyelashes. \"Too bad. He's a real dish,\" she added. \n\n\"Thank you,\" I repeated, for both the compliment and the use of the lacey garments. \"You're not so bad, yourself,\" I added. \n\n\"I know,\" she sighed. \"I'm a wonderful woman, a real catch, and sexy as hell. Apparently, though, my timing sucks. Still, losing you to my Mom takes a bit of the sting out of it. If I can't have you, I'm glad it's her. She deserves it.\"\n\n\"We'd better head inside, before Cassie finds us out here together,\" I suggested. \n\n\"Fine. We might as well, since I probably can't succeed in tempting you,\" she pouted, adding a little shake of her shoulders. Her boobs swayed enticingly, but I was locked in observer mode. No touching, kissing, or other sampling of the goods. \n\n\"Nice try, Chloe. Let's go,\" I smiled. \n\n\"Can't, blame a girl for trying,\" she shrugged. \n\n***\n\nI let her lead us inside. Her ass was a little narrower than her mother's, but that comparison wasn't a fair one. Samantha's ass was perfect, with womanly curves that I found very attractive. Chloe was younger, and would catch up to her mother soon enough. \n\nCassie materialized out of the woodwork before we made it to the kitchen. \n\n\"Hello,\" she purred, blocking my path. She was made up for effect, dressed to make an impression, and obviously serious. Showing a lot of cleavage, she stepped forward, forcing me aside, until I was cornered. I had a disconcerting flashback of Chloe stalking me in my apartment. They were sisters, all right. \n\n\"I'm not sure if we've met,\" she smiled, closing the distance with a few sultry, provocative steps. \"My name is Cassandra.\" A final stride pinned me between the hallway wall and her full, prominent chest. \n\nWell, I had started this game on the phone earlier. It's only fair that she play it back. She was testing me. \n\n\"Hello, Cassandra. It's nice to mee...\" I replied, secretly enjoying the feel of her big tits against me. I had always had a soft spot, no pun intended, for that particular sensation. Her mother knew it, and made sure my addiction was well taken care of. \n\nOf course, I hadn't intended to stop in the middle of my sentence, but I always found it difficult to speak with my mouth full. Especially when it was full of someone else's tongue, as it was now. Cassie had her lips pressed tight to mine, and was exploring every nook and cranny of my mouth. At last, she pulled away, giving my startled face a parting caress with her hand. \n\n\"I trust you'll remember me now,\" she smiled, licking her lips suggestively. She turned, and sauntered away, leaving me slumped in the corner, with a delicious aftertaste in my mouth, and a burgeoning lump in my pants. \n\nI looked up. Chloe was leaning against the wall, a few feet away, arms crossed over her own abundant breasts. \n\n\"Wow. That looked like fun. I wish I'd thought of it,\" she grinned. \"Oh wait... I did. I even showed you these,\" she glanced down at the bulging curves of her chest. \"If you're going to have second thoughts about my Mother,\" she whispered, \"I'm gonna get back in the game.\"\n\n\"No!\" I gasped. I knew she was kidding... sort of... but I had just reduced the danger by half. I didn't need her back on the hunt. \"She's just getting back at me for teasing her this morning. Your Mother is still the only woman for me.\" \n\nChloe pouted, but nodded, and walked away quietly. I gathered my thoughts, and followed. \n\nAround the corner, in the kitchen, I found Sam and Cassie working on breakfast. Cassie glanced over her shoulder, and stifled a smug smile. Sam's smile was full, and happy. \n\nI was replaying the highlights of last night's spectacular events... lingerie, my finger stuffed way up her ass, incredible sex... when she stepped over and hugged me. It was marginally more intense than her usual public hug, but felt so good, with her luscious softness in contact for interminable seconds. \n\n\"I'm so glad you decided to come,\" she smiled, trying not to crack at her obvious double entendre. I wondered if she could still feel the warmth of my semen, gushing inside her. \n\nI was still hugging Sam when I saw Chloe in the background, watching us. She had a smile of her own, presumably because she knew about us, and hopefully because she approved. \n\nBreakfast followed soon, and was full of the usual smalltalk. Cassie did most of the talking, trying to lead me down the path that led to her bed. Chloe added a few well placed jibes, but stayed on the fringes. That left Samantha to sit back and watch me dance around the sexual mines Cassie was leaving strewn in her wake. She was laughing along with us, but I knew there had to be at least a hint of concern in her mind. There were parallels that she must have been aware of, and even though I had no intention of following through on Cassie's very attractive offers, it bothered me to give that impression. \n\nI guess there's a fine line between lying for fun, and lying for real. I just hoped I could stay on the right side of the line. \n\nWith all the food safely in our bellies, Chloe and Cassandra gathered the dishes, and headed for the kitchen, leaving Sam and myself alone for a few minutes. \n\n\"That was some pretty fancy footwork,\" she giggled, walking her fingers across the tabletop to touch my hand. \"Cassie is really coming on strong, isn't she?\" \n\n\"Yeah. I thought Chloe was bad, but her sister has obviously done some planning for this final assault,\" I replied quietly. \"I may need to call her bluff the hard way. I just thought you should know in advance. Are you okay with that?\" \n\n\"I won't pretend it doesn't concern me a little,\" she whispered, \"but I trust you. Do what you need to do. They will be gone in a couple of days, and we can get back to normal when they are. Well... Normal for us, anyway.\" \n\n***\n\nSince we had done nearly all of the heavy lifting last weekend, there was less to do that required my direct attention. I became the assistant of choice for whomever decided they wanted me. \n\nThat wasn't a pun. \n\nThankfully, my presence was first requested by Samantha. She was sorting through a few boxes of small items, tying to decide which should be displayed where. Frank's former office had plenty of space for it, and things that had been resigned to boxes would now again see the light of day. Both the girls were doing similar things in another room, so we were alone, for a few minutes at least. \n\nSamantha kissed me quickly. It may have been brief, but certainly didn't lack for passion... or tongue for that matter. She pulled back. \n\n\"Mmmmm, I'd just love to continue,\" she smiled, her eyes sparkling. \"Actually, I'd love to be taken on the couch, over there, but 'you know who' might burst in unannounced. I'd rather not deal with that yet.\"\n\n\"Understood,\" I smiled back, licking my lips, and tasting her delicious flavour. I got in one quick fondle, while the getting was good, and she giggled in response. \"How many boxes of this stuff do you have?\" \n\n\"More than I care to admit,\" she shook her head. \"I'm afraid I used to have a bit of a habit, collecting this, um, shit. It all got packed away when this room became a full time office. At least now, I can enjoy them again.\" She placed the delicate figurine on a shelf, and spun it to display it properly. \"I collected trinkets. He collected trollops.\" Her face reflected the sad thought that briefly took over her mind. \n\nCassie be damned, Sam needed me right now, and I held her close, letting her vent the sadness, anger, and frustration that bubbled up from within. She cuddled deep in my embrace for a few minutes. \n\nCassie's timing was perfect, as she walked in abruptly to find us in each other's arms. \n\n\"Oh! My, um, I'm sorry,\" she gasped. \"I didn't mean to interrupt.\" \n\nSam stirred in my grasp, and preempted Cassie's conclusion. \n\n\"Settle down Cassie,\" she sniffed, lifting her head. \"I was feeling a little blue, and Alex was comforting me.\" She wiped her eyes, and turned to face her daughter. \"I assume you came in here for a reason?\" \n\n\"Um, uh... Yeah,\" Cassie stumbled, her eyes still on us. \"I needed Alex to get me another box from the attic. Are you okay, Mom?\" \n\n\"Yes, yes, yes,\" Samantha nodded, standing tall again. \"Alex, could you help her please?\" \n\nI nodded, and gestured to Cassie. \n\n\"Lead the way,\" I said, falling in behind her. Into the valley of death... \n\nCassie was still dressed the same, and her shorts were so short the lower curves of her very sexy butt were visible as it wiggled along ahead of me. She stopped at the foot of the ladder. \n\n\"I'll hold... you climb,\" she grinned. \n\nI could feel her eyes on me as I ascended, rung by rung, up through the hatch into the attic space. There were still several boxes up here in the low headspace, and I was just about to ask which one she wanted when her head popped up in the hole, followed by the rest of her. \n\n\"I thought you needed my help?\" I asked, taking a knee. \n\n\"I do. I can get up here, but I can't get down the ladder with a box,\" she smiled. \"Worried about being alone with me?\" \n\nShe was on her knees, crawling toward me. The deep neckline of her top was struggling to contain her tits, which were swinging from side to side with her movements. \n\n\"The thought crossed my mind,\" I replied, looking right at her cleavage. She glanced down at the view she was giving me, and looked back with a mischievous grin. \n\n\"I'm not mad about your call this morning,\" she giggled. \"No weapons. You're safe.\" \n\n\"No weapons? I'm not sure I'd agree,\" I laughed, still gazing at her boobs as she settled next to me. \"What calibre are those?\" I hoped the aggressive tactics would slow her down. It would appear they at least surprised her a little. \n\n\"Why Alex! Wouldn't you like to know?\" she laughed. \"Now, which boxes do I want?\" she continued, staying on task, despite the opportunity our privacy afforded her. \n\nIt was quite warm up here, and after a few minutes of sorting through containers, we both had a glow of sweat going. Her chest was adorned with tiny beads of perspiration, which seemed to make her even sexier. I always enjoyed seeing such a sheen on her Mother's breasts after lovemaking. \n\nCassie slid boxes around, making a small grouping near our exit. \n\n\"That should keep me busy for a while,\" she smiled, gazing at me softly. \"Unless you have something else in mind?\" She leaned closer. I thought for sure another kiss was coming, but she was teasing. \"Here. You go down first. I'll pass them to you.\" \n\n'Go down first'? Jeez... That was subtle. I reached down carefully with my foot, and found a rung on the ladder, taking a stance. I moved down a few steps, then looked up to where Cassie was leaning over to pass me that first box. Oh my god... what a view. \n\n\"Um, your weapons are slipping out of their holster,\" I giggled. \n\n\"Just take the box, and leave my 'weapons' out of it,\" she smiled, making no attempt to corral them. By the time she had passed me all five of the boxes, I could just make out the edges of her areolas, and when I looked up again, her ass almost hit me in the face. She stepped down between my arms, sliding her body against mine as she went. I'm sure she felt the bulge as her ass brushed my crotch. \n\nOnce safely on the floor, she adjusted herself in her bra with her back to me. When she turned with a smile, her display of cleavage had reverted to its normal level again. \n\n\"Thank you,\" she giggled. \"I'll come get you again when I need more.\"\n\nEvery word out of her mouth could be viewed as a flirt. Combined with her attire, she was really testing my resolve. It would be so easy to just go with it. It was hard to say if flirting back was actually doing anything in my favour, although it did seem to be making her think more before acting. \n\nI leaned against the wall as I entered the office again, catching my breath. Sam turned to see me and my exasperated expression, and laughed. \n\n\"That much fun, huh?\" she asked. \"My poor baby.\"\n\n\"She's relentless,\" I exhaled. \"You're sure we can't just tell her?\" \n\n\"If it comes to that, of course we can,\" Sam smiled, brushing the hair out of my face. \"Think you can make it through the weekend?\" \n\n\"I hope so. You know, when I was younger, I would have enjoyed having three gorgeous women fighting for my attention,\" I smiled. \"Funny how things change.\" \n\n\"Darling, you're making me feel old. 'When you were younger?' You're only 23!\" she gasped. \n\n\"Nearly 24,\" I laughed. \"Sorry honey. You know I love you, though, right?\" \n\n\"Of course,\" she giggled. \"Now... Help me with this top shelf. I can't quite reach.\" As if to illustrate, she put both hands on the shelf in question, over her head. Her breasts stood up even more proudly than usual. She glanced at me, knowing my eyes wouldn't have missed the obvious. \n\nI stepped behind her, placing my hands on her flanks. She sighed softly, and pushed back with her rump, making contact with my crotch. I figured I had bought a few moments free for Cassie, so I responded by kissing the side of her neck. She moaned, and ground back against me. \n\n\"Oh god, that's wonderful,\" she whispered, as I continued to nibble her nape. My right hand came up to cup her right breast. \"Mmmmm. You're making me very wet.\" ",
        "I soon had both hands full, fondling her firmly. She was squirming in my grasp, bucking her ass against my erection. \n\n\"You'd better stop, before I can't control myself any longer,\" she groaned. \"I think Cassie might notice if she came in and found me on my knees, sucking that fabulous cock of yours. She's pretty observant.\" \n\nThe noise behind us made both of us jump. Fortunately, it was just Chloe. \n\n\"I never thought I'd say this about my own Mother,\" she giggled, leaning against the door frame, arms crossed, \"but I'd actually like to see that. Care for an audience?\" \n\n\"No,\" Sam chided, \"and you'd better keep your voice down.\"\n\n\"Hey, I'm not the one who said it,\" Chloe pointed out. \"I just heard you, and thought it sounded like fun. I'll do it if you don't want to, Mom.\" \n\n\"Keep your lips to yourself,\" Samantha warned. \"I thought we had an understanding.\" \n\n\"We do, we do,\" Chloe replied. \"Just kidding.\" She turned, and walked away. \n\n\"You buy that?\" Sam asked me. \n\n\"Not really,\" I shook my head. \"I suddenly don't feel safe.\" \n\n***\n\nI left early Saturday afternoon, needing to get some space. I promised to come back Sunday, just after lunch. The girls accepted it, but Sam knew why I was making myself scarce. \n\nSunday would be the last day for both Cassie and Chloe at their mother's house. For a while, at least. \n\nEven though there wasn't much left to do, Samantha had persuaded me to come over anyway, as kind of a farewell party. \n\nNone of us knew what was about to transpire. Turns out a party was definitely called for. \n\nSince there was little to do inside, we were all sitting around on the pool deck. The girls, Sam included were dressed in their best for sunbathing. It was remarkable to see them all lined up... Three virtual carbon copies of each other, save for the efforts of hairstylists. Cassie and Chloe flanked their mother's position, like twin bookends. \n\nThe twins had nearly identical... um, 'twins'. A little less robust in the bust than Samantha, they were nonetheless endowed far more than the average woman. I guess it's all relative though; big fish in a small pond, but smallest fry in the tank. \n\nChloe caught me checking them all out in their bikinis, tipped her sunglasses down, and blew me a kiss. \n\nThat's about when the doorbell rang. We all exchanged bewildered looks, since no one was expected. It was Cassie who jumped up and went to answer it. She was pulling her shirt on over her head when she disappeared into the house. \n\n\"Do you want to send us on an errand again Mom?\" Chloe smiled. \"I'm sure you could use a little alone time with your stud muffin, here?\" She winked at me. \n\n\"Chloe Marie, I don't know what you're talking about,\" Sam giggled. \"If your sister hears you talking like that, we'll all have hell to pay.\" \n\n\"Just saying... If you need us gone for an hour... or two,\" another wistful glance in my direction, \"I can drag my sister along on a snipe hunt. I'll even message you before we come back.\"\n\n\"I appreciate the thought, honey, but today is our last day together for who knows how long. I want to spend it with my girls,\" Sam smiled. \n\n\"I'll bet Alex wants some time with your 'girls', too,\" Chloe laughed. Brazen hussy. \n\nWe were still laughing when Cassie came back in, holding a large envelope in her hand. A serious look was on her face. \n\n\"Mom... It was a courier. It's from your lawyer,\" she said, handing over the package. \n\n\"Your lawyer? On Sunday?\" I asked, voicing the question everyone had. \n\n\"Oh, that doesn't matter to him,\" Sam replied, with a dismissive wave. \"He's one of those guys that doesn't set his life by the calendar. Curious, though...I suppose I should open it, shouldn't I?\"\n\nNo one spoke as she untwisted the string closure on the folder. She reached in, and came out with a hefty handful of papers. There was a yellow page on the front, and I could see it was hand written. She turned her attention to that page. \n\nThe suspense was deafening. What did it say? Was it good? Bad? \n\nSam gasped softly, and put her hand to her chest. Ah, surprising, but not in a bad way, judging by the slight smile on her face. I can breathe again. \n\n\"Sam?\" I asked, unable to stand the suspense. \"Is everything okay?\"\n\n\"Um... yeah,\" she smiled, shrugging her shoulders. \"Everything is fine. Everything is... done. I'm divorced.\" \n\n\"Really?\" I asked, barely able to contain my glee. \"How, though? I thought it would take months... like, closer to a year. It's barely been four months.\"\n\n\"Ask and you shall receive,\" Sam giggled. \"Actually, he anticipated that question, and answered it right here,\" she said, holding the yellow paper aloft. \"It seems Frank really does have some highly placed friends, whom he does not want knowing his secrets. Through his lawyer... who was doing most of the filing... he was able to cut a few corners, jump a few lines, and generally get things done via the back channels. He has signed everything, and we are effectively done!\"\n\n\"Congratulations, Mom!\" Chloe beamed, standing to give her mother a hug. She looked at me over Sam's shoulder, and smiled. They exchanged a few whispered words, and Sam shook her head. \n\n\"Yes Mom, I'm happy for you,\" Cassie said as she joined the hug. \"Also a little sad, but at least it's over now. How does it feel to be the rich, attractive divorc\u00e9e? You'll be beating them off with sticks.\" \n\nI was standing, alone, contemplating a future that just got a lot simpler, when Chloe spoke. \n\n\"Come on Alex,\" she gestured, \"There's room for one more in this hug. Don't make me drag you over here.\"\n\nThere was a certain appeal to her suggestion. I walked over, and she pulled me in. \n\n\"I think it's time for a party! What do you say, Mom?\" Cassie offered. \n\n\"Okay. I could use a drink,\" Sam giggled. She hugged me a little tighter, and grabbed my ass. \n\nAt least I think that was Sam's hand. It could have been someone else. \n\nSeemingly within minutes, there was music playing, and a drink in everyone's hand. Still, music and alcohol do not a party make. Leave it to Chloe to supply the missing element. \n\n\"Ooooo, I love this song!\" she gasped. \"Alex? Wanna dance?\" \n\nWell, it seemed harmless enough. I felt relatively safe, but Chloe had a way of making that feeling a temporary one. I decided to risk it. \n\nThe pool deck became our dance floor. Chloe was still just wearing her bikini, so her big breasts were quite active as she gyrated in front of me. She threw in a little twirl now and then. During one of those spins, she paused and backed up against me. \n\nDanger, Will Robinson! Danger! my mind screamed, as Chloe's rump made contact with my crotch. Watching her tits wobble with her movements had resulted in a semi, and she no doubt could feel it as she ground against me. \n\nMy attention was focused on Chloe's ass, barely covered by her bikini bottom, and causing my semi to become more of a full-ie. I didn't even see Cassie approach from behind. \n\nShe put her hands on my hips, and pressed her body against my back. Oh, the soft sensation of those tits squashed between us... So tempting. Chloe finished her spin, and now I was in a tit sandwich. \n\nI cast a glance at Sam, who was smiling at my apparent discomfort. Thankfully, the song ended before my erection became too obvious, and I was able to slip away from both of them. I sat next to Sam, and watched the twins dance together. If only I was twins, too. I could be faithful to Sam, and have a threesome with her daughters on the side. \n\nMind you, Sam was easily the equal of three normal women, so I really wasn't missing anything. It's just hard to remember that when two such delicious creatures are virtually serving themselves up on a platter. \n\nSamantha looked at me. I could see the fire in her eyes, but she shook her head gently. Not yet, but as soon as they're gone, you're mine, I read her expression. \n\nAnd so the afternoon progressed. Drinks flowed. All in attendance... all four of us... became lubricated by alcohol. Oh hell, we were drunk, myself included. It was making things complicated, and a little blurry. \n\nThe girls had dragged me out of my chair again, and were taking turns rubbing their soft, luscious bodies against mine, seeing who could make me crazy first. It was dirty dancing in duplicate, and I had a major woodie going. You would too, with four yummy tits and two sumptuous asses pressing against you from both sides. \n\nThe booze was slowing my reactions, and suddenly, both Cassie and Chloe were kissing me. Hands were everywhere... my butt, my chest, my bulge... and I had somehow found someone's boob In my hand. I don't know how it happened, but I was surrounded, and powerless to stop it. \n\nSuddenly, Sam had joined the fray, and was pushing first Cassie, then Chloe, away from me. She almost dunked Cassie in the pool. The cavalry had arrived in the nick of time, but she wasn't just saving me from her daughters; she was also staking her claim. \n\n\"That's enough... back off girls,\" she smiled, eyeing me like a hungry tigress eyes a wounded deer. \"He's mine.\" \n\nI didn't say anything, unsure of what this meant with regard to our secrecy plans. Sam answered the question by jamming her tongue down my throat. \n\nI guess Cassie is being let in on the situation as of right now, I thought, wrapping Sam in an ardent embrace. Not having to hide my feelings was very liberating, and I let the passion flow freely. \n\n\"All right, Mom!\" Chloe laughed. \"Go for it!\" \n\nCassie, not having prior knowledge of our relationship, was a bit more confused. \n\n\"Um, Mom?\" she asked. \"What's going on?\" \n\nSamantha just waved her off, and kept kissing me. Her hands were roaming freely, and I reciprocated. I could hear Chloe filling in the blanks for her sister. \n\n\"What?! You knew, and you didn't tell me?!\" Cassie gasped. \"How long has this been going on?\" \n\nThat question made Samantha pull back. She levelled a stern gaze at Cassie. \n\n\"I know what you're asking, honey, and I don't like the implication,\" she said, forced to be the parent for a moment. \"I was upset about your Father's actions, and Alex was a friend whom I confided in. He made me realize that, despite your Father's opinion and decision, I was still desirable, and we fell in love. That's the only timeline that matters. As for why I didn't tell you... I didn't want you to know yet. Chloe only found out when she was hitting on Alex, and he told her to get her to stop.\"\n\nChloe had a smug smile for her sister, and marked a 'one' on her imaginary scoreboard. She had beaten Cassie to the punch, which was a small victory, but the only one she'd get today. \n\n\"Uh, isn't he a little young for you, Mom?\" Cassie asked, still trying to influence the decision. She was wasting her time. Sam and I had hashed it out long ago, and come to the conclusion that age was just a number. \n\n\"Oh no, honey,\" Samantha shook her head, as she squeezed herself against me. \"He's just perfect. He does things to me that I didn't even know were possible. I've never been happier... especially in bed.\" \n\nI could only smirk, and hold her close. \n\n\"Ew, Mom! Too much information!\" Cassie gasped. \n\n\"Speak for yourself,\" Chloe laughed. \"Tell me more, Mom. Does he have a big cock? Is he good with his tongue?\"\n\n\"Chloe!\" Sam giggled, surprised by her daughter's brazen questions. She blushed, but didn't shy away. \"Well, um... yes, he does, and he is.\"\n\nShe looked at me and licked her lips. I knew what was on her mind. \n\n\"Girls... I hope you'll excuse us for a while,\" she smiled, still looking into my eyes. \"Alex and I are going inside. Please ignore any screams you hear. I'm in no danger.\" \n\n\"Woo hoo! Yeah! Go for it, Mom!\" Chloe cheered, jumping up and down. \"Take your time, Alex, and do her right. Let us hear it!\" \n\n\"Mom? Really?\" Cassie scowled. Apparently, she didn't share her sister's enthusiasm for having me fuck her mother. \n\n\"Cassandra, you know I love you,\" Samantha replied, \"but I don't recall asking for your permission... or your opinion, for that matter. Whatever Alex and I do is between us, and no one else. If that's a problem for you, I suggest you get over it quickly, because I'm not about to give up the best thing in my life. Not for you, and not for anyone.\"\n\nCassie stood, arms crossed, looking annoyed as we walked slowly into the house. I can't believe she didn't want her mother to be happy; it had to be mostly jealousy that she had been in an unwitting competition with Sam, and lost before she started. \n\nWe were walking eagerly through the house, anxious to make it upstairs to her bedroom, when Sam paused at the first step. She put her arms around my neck, and kissed me again. I was still grinning at being called the best thing in her life. I'd never been anyone's 'best thing' before. It was very pleasing. \n\n\"Well, we're out in the open now,\" she smiled. \"I'm divorced... my daughters both know about us... How do you feel about it?\" \n\nWords were not really necessary to express my feelings. I scooped her up in my arms, and carried her up the stairs, into the room that had once been her marital bedroom... and hopefully would be again, at sometime in the not too distant future. I placed her on her back on the bed, then went back to close and lock the door. \n\nYeah, while I was sure that Chloe would be listening closely for her mother's screams, we didn't need her watching as well. \n\nAt least, not just yet. Maybe someday, if Sam was okay with it. \n\nThe blonde beauty awaiting me on the bed wasn't wearing much. She had been the meat in a busty blonde sandwich when all three women were tanning earlier, and had only covered up her bikini in the last hour or so. The lacey cover was now undone, laying open and showing me the white spandex that was cradling her big breasts. She gave me the come hither look. \n\nI was only too happy to do so, sliding into her arms. She quickly rolled atop my chest. \n\n\"When I woke up this morning, I had to get myself off,\" she smiled, looking down through the curtain of platinum blonde that hung around her face. \"Friday night was incredible, and I kept dreaming of you all night, but I didn't figure we'd get a chance until late Monday... maybe Tuesday. Now? Well, I'm happy things worked out for the better, and I'm not letting you out of my bed tonight. You're mine, baby.\"\n\nSince I had my hand on her ass, I responded by silently tugging the string on her left hip, then the right. She grinned, and sat up across my lap, discarding her cover up. She reached between her legs, and yanked the stretchy swatch of fabric away, then tossed it behind her. Only the bra portion of her bikini remained in place, blocking the view she knew I longed for. \n\nPerhaps I should start a new support group... Boob-lovers Anonymous. Hello, my name is Alex, and I just can't get enough of women with big breasts... Of course, that assumes I want to stop. \n\nI don't. Never. \n\nSamantha decided I had waited long enough, and quickly dispatched the top with two deft movements of her fingers. At last, she was naked, and in my arms. Though it had only been a day and a half, I needed a fix of her body. Cassie and Chloe had caused a hunger that only their mother could satisfy. \n\nThis time, when her lips met mine, there was no holding back. I pawed her smooth skin, and she worked on making my clothing join hers, on the floor. She soon succeeded, and took a place between my legs. \n\n\"Mmmmm, I'm going to enjoy this,\" she smiled, rubbing my stiff dick against her cheek. \"I've wanted to just drop down on my knees and suck your cock all day, especially with my girls teasing you like that. I hope this will make up for your suffering.\"\n\n\"I'm sure I'll sur-VIVE!\" I gasped, as her mouth engulfed the head of my rigid penis. \n\nIs there anything quite so luxuriously sensual as a really good blowjob? I remember seeing a joke once, where the hypothetical perfect day was designed for both men and women. The female perfect day included a massage, shopping, and a nice evening of making love. The men started with a blowjob, a nap, another blowjob, lunch, another blowjob... you get the idea. Apparently, I wasn't the only one who enjoyed it. \n\nSometimes I like to watch Sam doing her thing, but this time I just laid back and closed my eyes, letting my senses of touch and hearing take in the myriad of sensations she was able to give me. \n\nSam mumbled something. Her lack of eloquence could be forgiven, since she had my cock jammed down her throat, and was gagging on it. It sounded spectacularly slutty... like a back alley blowjob with a hooker would sound. She slurped and sucked, spat and stroked... moaning her own enjoyment in harmony with my own. \n\nI felt her soft, wet tongue snaking along the underside of my shaft, and she would occasionally pause her suction to lick the length of it, teasing my balls, and tasting my asshole. I suppose it's only fair, after I had my finger up her ass on Friday night. \n\nThen my dick would again be surrounded by the warmth and suction of her mouth. I don't know what she did with Frank in the past, but I had to assume it was similar. It made me wonder even more how much of a moron he was to have cheated on this woman... this perfect, giving, loving, busty, buxom, seductive, beautiful woman. I wouldn't make that mistake, and I wouldn't take her for granted. \n\n\"Oh god, honey,\" I groaned, \"you have no idea how good that feels.\"\n\nSam sucked harder, swirled her tongue around the head, and put a little twist in her hand motions, bringing the intensity up a notch. Now I opened my eyes to watch her, as she concentrated her efforts, focused totally on giving me pleasure. \n\nHer eyes were closed, lips stretched tight around my thick shaft, while her head bobbed aggressively up and down. Saliva coated my skin, with excess causing a shine on her cheeks, as her hands stroked and squeezed the half of my length that became visible at the top of each stroke. When her eyes opened, I could see the determination in the deep blue-green orbs. She saw me observing her, and her eyes locked onto mine. \n\n\"Fuck! That's incredible! Suck my cock, baby! You're the best ever!\" I gasped, feeling the kettle beginning to boil. After a full day of being flirted into oblivion, I was a lot more sensitive than usual. Sam's mouth had me on the verge already. I was hoping she wasn't expecting me to hold it back for long. Hmmm... do I ask for permission, or beg forgiveness? \n\nSam sucked harder still. Her eyes begged for it, and also told me how much she wanted me to feel good. I could see the love in them... with just a hint of wanton slut, who desperately anticipated getting a mouthful of hot, salty semen as a reward for her efforts. \n\n\"Mmmmm hmmm, mmmmm hmmm, mmmmmmmmm hmmmmmm,\" she moaned, jerking my dick furiously, with her lips clamped tight around the head. Her tongue doubled it's pace, writhing around my cockhead with purpose, trying to trigger the impending flood of cum. Permission given. No forgiveness required. \n\n\"Oh shit, that's it baby...\" I hissed, grabbing a handful of her platinum locks. My hips began to involuntarily thrust, fucking the tight, clamping ring of her mouth. \"Suck my cock! Suck it... Suck it... Suck it... Oh god... Gonna cum...\" I got louder. Maybe a small part of me wanted Cassie and Chloe to hear us. \"SUCK IT... OH GOD, GONNA CUM... GONNA CUM, NOWWWW!\" I yelled, as my balls erupted, sending cum racing up, through my cock, and down her throat. Over and over, I felt the euphoric surge, and gushed my thick, copious load, while Samantha moaned, milking my shaft with both hands. She gulped and swallowed, sucking hard to draw out every drop, while my hands held her head tight. My cock twitched a final time, and I was spent, left gasping for breath. \n\nI listened to Sam as she suckled gently on my withering tool, cleaning up the dregs and humming happily. From outside on the pool deck, I heard a distant giggle, and Chloe's voice. ",
        "\"Atta girl, Mom!\" she called out. \"Suck that dick!\" \n\nOkay, they could hear us. That was now confirmed, and I laughed at the idea of Sam's daughter's rooting me on in their Mother's bedroom. Sam giggled, too, and pulled my exhausted member from her lips. \n\n\"Should I take a bow?\" she asked, with a smile. \n\n\"If you like,\" I replied, rubbing my face to clear my head. \"What I really think you should do is take a place up here, and let me return the favour. It's my turn to make you scream.\" \n\n\"Oooooooooo,\" she cooed, playing innocent. \"Why Alex... You're such a gentleman!\" Within seconds, we were holding each other again, in an embrace I would never get tired of repeating. My hands caressed her from top to bottom, spending quality time on my favourite parts of her body. I was soon face to pussy with her, resting between her long legs, which were spread wide in expectation. Her eyes peeked down past the full curves of her breasts, awaiting the touch of my tongue on her most intimate folds. \n\nI was eager to taste her again, but in no hurry. The longer I took to get her off, the better it would be... although she might not share that opinion at the time. Orgasms were like wine; you can't just rush in, crush the grapes, and drink the juice. A little time improves the vintage. \n\nBesides, after that blowjob, I was going to need a few minutes. I might as well put those minutes to good use. \n\nA few months ago, in my apartment, I had done this for the first time. She had told me that her husband wasn't one to eat her pussy, his tongue having been absent from between her labia since her kids had been born. I promised her I would make it a more frequent occurrence if we stayed together. \n\nI lied, of course. Not about eating her delicious pussy; that was never going to be anything but a heavenly task for me. No, I lied about doing it for her. I was being nothing but selfish, but if she had fun as well, that was fine. \n\nI kissed the inside of one thigh, from her knee up to just below her succulent pussy. Then I did the same to the other thigh, making her squirm anxiously as I neared the top. She tried to move her juicy cunt lower, hoping to bring it into contact with my lips, but I maintained the gap, causing a whimper of frustration. \n\n\"Mmmmnnuh... Oh please, Alex,\" she groaned. \"Don't make me beg, darling.\" \n\n\"Why not?\" I asked with a cheeky lilt, rubbing my face against the soft, smooth skin of her inner thigh, while giving her pretty pussy a close inspection. She was clearly as wound up by today's events as I had been, and was getting more excited by the second. Her lips were fully engorged, nearly purple, and pouting open, so I could see her bright pink inner surfaces, all of which were shiny with her juices. She looked about ready to explode. \n\n\"Tell me what you want, my love,\" I suggested. \"Let me hear it in your voice.\"\n\nSam smiled, and took a deep breath. She knew the game I was playing, and was willing to participate. She would be vocal, and specific, for the benefit of our audience. It was highly unlikely that Chloe had closed her ears, and curiosity would keep Cassie nearby as well. \n\n\"You're a cruel, cruel man... teasing them like this,\" she whispered. \n\n\"You did see them pressing their bodies against me all day, didn't you?\" I responded quietly. \n\n\"Yes. I'm not saying they don't deserve it,\" she smiled, \"just that I'm their Mother, and I care.\" \n\n\"Care about this,\" I smirked, stabbing her dripping slit with my tongue. \n\n\"MmmmnahhhoooOOOOOOMYGOD!\" she howled in surprise. \"Oh FUCK YES! LICK MY PUSSY!\" \n\nThat should get their attention, and it's what I'm here for. \n\nShe was soaked with her natural lubricant, and as I lightly trailed my tongue across her lips, I savoured the delicious flavour. Her scent was filling my nostrils while I kissed and tasted her sex. I couldn't help wondering if the girls had inherited their Mother's highly erotic pussy, as well as her bustline. They would undoubtedly make some men very happy, but I was more than satisfied with Sam. \n\nHer clit was peeking out of its hood, and as I swirled my tongue around the sensitive, protruding pearl, she groaned and undulated her hips, continuing to play her role of narrator. \n\n\"OHHHHHHHHHHHHHHH FUUUUUUUUUUUUUUCK! YES PLEASE! SUCK MY CLIT, JUST LIKE THAT! SUCK IT! LICK IT! IT'S SO GOOOOOOOD!\" she said loudly. Her hand had found the back of my head, and was holding my face in close proximity to her yuuuuuummmmmmmy snatch. I wasn't planning on leaving anyway; at least, not until I brought her to a screaming climax. Maybe more than one. \n\nSo I took my time, tracing her curves, folds, and openings. I used my fingers when my tongue needed a small respite, or when it needed a teammate in my quest to make her shriek. My saliva was added to her own juices to coat every surface between her legs, making gentle penetrations smooth and enjoyable, if her comments were any indication. \n\n\"Mmmmm, yes... Do it, baby! My ass!\" she reminded me. I had been circling her tight little butt hole with a fingertip, and she wanted me to stop fucking around and jam it inside. My tongue was busy fluttering across her clit when I complied. \"OH GOD! OH GOD YESSSS! FINGER MY ASS, BABY! I LOVE IT!\" \n\nI could imagine Cassie and Chloe looking at each other in surprise at the news that their Mother was becoming an anal addict. Someday soon, I would be introducing my dick to that opening. I think she was going to like it. Until then, I'd just keep teasing her with fingers and tongues. \n\nI don't really know how long I was down there, feasting on her juicy cunt and probing her butt. It was quite a while; long enough that her body was begging for release. She still had a hand on my head, but her grip on my hair had become more urgent. Her thighs were vibrating, and she couldn't keep still, alternately clamping them around my head and opening them to maximum spread. Her breathing was now a staccato rhythm of short, sharp gasps and snorts, and her tummy would clench, then flutter softly as I continued to graze. \n\nOh... and she had invented a new language. It had all the same words as English, but none of the pauses between them. \n\n\"OhmyGODohmygodohmygodYESjustlikethat... YeahbabyILOVEITohyeah... LickmyclitYESsuckitohmygod...Uh huh... UhhuhTHAT'SITBABYDOITohgod... GonnacumgonnaCUMgonnacumgonna cuMMMMMMMMMM!\" \n\nShe gasped once more, and her entire body spasmed, as the long overdue orgasm hit her. Her asshole tried to break my finger off, and her pussy gushed a fresh wave of ambrosia for me to slurp up. \n\n\"FUUUUUuuuuuUUUUUUUUUUUUUUUuuuuuuuuUUUUUUUUUUUUUUUK!\" she screamed, wailing like an air raid siren. As her breath ran low, the scream petered out, and she wilted into the mattress, gasping for air. \n\nFrom the pool deck below, applause was heard. \n\n\"Bravo! Bravo! Encore!\" I heard. Still just one voice... Chloe's. \n\n\"Oh god, no... No encore!\" Samantha giggled between breaths. \"At least not yet. You'll kill me!\"\n\n\"Well, we can't have that,\" I smiled, moving up the bed to rest on the pillow beside her. She smiled. \n\n\"Looks like I drowned you,\" she laughed, wiping excess juices from my cheeks with her thumb, and licking it clean. \"Mmmmm. I'm good!\" \n\n\"And modest, too,\" I laughed. \n\n\"You know what they say... It ain't bragging if it's true,\" she grinned, fanning herself with her hand. \"God, honey... That one was incredible. You're spoiling me!\" \n\nI rolled on my side to face her, and my freshly hardened cock smacked her thigh. \n\n\"Oh shit... It's awake!\" she giggled. \n\n\"Well you screamed loud enough to wake the dead, so there it is,\" I replied, flexing it to make it bob against her leg. \n\n\"Oh well. If you gotta go, it's not such a bad way to die,\" she smiled, spreading her legs wide again. \"Fuck my brains out, baby! I'm all yours!\" \n\nIt was an offer I couldn't refuse, and within seconds I was atop her, feeling the delectable sensation of her warm, wet, pussy stretching open around my intruding shaft. She was kissing me deeply, and as the base of my thick shaft met her clit, she snorted through her nose and moaned. \n\n\"Oooooooooo that's the spot,\" she whispered, looking into my eyes from very close range. \n\n\"I agree,\" I smiled, grinding against her. She wrapped her legs around my waist, as usual, and prepared herself for the onslaught to come. I changed it up a bit, and gave it to her deep, but gently, using long, slow strokes. \n\n\"Trying to make me scream again?\" Sam asked breathlessly. \n\n\"Maybe,\" I grunted, driving my cock in fully. \"Or maybe I'm being selfish. You're a pretty good fuck, and I like it long and slow sometimes.\"\n\n\"Pretty good?\" she smirked. \"Getting tired of me already? You said I was fantastic a few weeks ago.\" \n\n\"Just testing your humility,\" I whispered, bending to kiss her hard, as I picked up the pace a little. I could feel her big breasts brushing my chest as they rolled across hers in response to my thrusts. \n\nThe playful banter between us had really grown lately, a fair indication that we were extremely comfortable with each other; people who are totally in love often are. Sam saw me watching her tits wobbling wildly as I fucked her, and smiled. \n\n\"Would you like me on top, so you can play with them?\" she asked, ever thoughtful. Of course, I knew she had ulterior motives, as well. \n\nShe wanted me to suckle her. From our first time together, she had always enjoyed my lips on her nipples. Yeah, I could do that. \n\nI rolled off silently, feeling the cool air on my juice-slicked shaft as I laid back. Sam straddled me and smoothly impaled herself again, getting comfortable before leaning forward to dangle her huge breasts over my face. \n\n\"There,\" she giggled, pressing lower to surround my face with warm, soft, pillowy flesh. I felt the stiff nubs of her erect nipples, and turned my head to collect one in my mouth. I sucked it gently, then harder. She moaned, and began to work her hips up and down. \n\nDammit! She had fooled me again. She blinded me with my insatiable need to get my hands and lips on her full, perfect breasts, then took control of the situation. From her spot in the saddle, she could tease me mercilessly if she so wanted... and it appeared she did. \n\nWhile I was gnawing on her nipples, she was doing that thing she does; the thing where she squeezes her pussy tight on the upstroke, pulling my dick out through her velvety grip. Then she relaxes that wet opening as she drops back down, letting it back inside easily. Repeat over and over. It felt like her pussy had fingers, and was giving me the ultimate hand job. It was maddeningly effective, and gave her total control over the intensity of our lovemaking. She was using it to her advantage. \n\n\"Mmmmm, that's it baby... suck Mommy's nipples,\" she groaned. \"Make Mommy cum again, and I promise to make you cum, too, honey. Oh yes, you're gonna cum like a firehose!\"\n\nI suppose I could have unseated her, and taken back control, but I didn't mind being forced to suck her tits. Yeah, that's right... Forced. As if she had to twist my arm. So I remained in place, chewing on her nipples while she skewered herself enthusiastically. Her pussy was heavenly, sliding up and down my cock in a smooth rhythm that was making me crazy. \n\nSamantha resumed her narration for the benefit of those within earshot. \n\n\"Oh fuck, baby, your cock is SO BIG AND THICK! IT FEELS SO GOOOOOOOD WAY UP INSIDE MY PUSSY! FUCK ME! YESSSS, FUCK ME!\"\n\nIt's possible the rhythmic 'slap, slap, slap' of her firm ass meeting my thighs carried beyond the room, but there's no doubt that her screams did. I remained latched onto her left breast, suckling dutifully, and wishing I was getting more out of it, literally, than the pleasure of giving her pleasure. She snapped her head back and howled as she came again, then collapsed on my chest. \n\nI let her lay there for a few seconds, catching her breath, before I rolled her off. I patted her ass, kneeling behind her, and she giggled, raising her rump higher for my access. \n\n\"Hmmm... You want to fuck me, puppy style, huh? Give it to me hard, honey. Jam that big cock up my cunt, and fill me with your hot cum!\" \n\nI nestled the head of my dick between her juicy lips, and pushed back inside her. She groaned, and rested her head on her crossed arms. \n\n\"Yeah, baby... That's it,\" she smiled. \n\nI gripped her hips, and stroked into her smoothly, pulling her back against me with each thrust. The sharp slaps were louder now as I slammed deep into her hard, mixed with her moans and my grunts to form the soundtrack of sex. As we kept going, Sam turned up the volume. \n\n\"Ooooo!... Uhn!... Uhn!... UHN!... UHHHN!... OH FUCK!... FUCK!... FUCK ME!\" she screeched. \n\n\"Oh god,\" I gritted my teeth, drilling her a final few times. \"OH FUCK! Here it CUMMMMS, HONEY! I LOVE YOU!\" My dick spewed a huge load of semen inside her, while I held on tight to her hips. She panted, and undulated her rump against me throughout. \n\n\"I love you too, baby,\" she whispered. \"I'm sure that will raise a few questions,\" she giggled.\n\n\"Yeah... Sorry,\" I laughed. \"Didn't mean to yell that out.\"\n\nAfter Sam made a trip to the bathroom, she joined me back in her bed. We cuddled together, and fell asleep in each other's arms. \n\nWe were safe now. We were 'us' now, no longer hidden from view. Life was going to be great from here on. \n\nI had no idea how right I was. \n\n***\n\nWhen I woke up, I was alone. \n\nI had a sudden chill, thinking I might have dreamt the whole weekend, but then I recognized the room as Sam's, and knew I hadn't. I got up, splashed some water on my face, and dressed, heading downstairs. \n\nThe house was unnaturally quiet. I paused at the foot of the stairs and listened carefully, finally picking up the distant sound of Samantha's soft voice, coming from out back. \n\nAs I walked outside, Sam saw me, and smiled brightly. The smile made Cassie turn to see me, and she surprised me by smiling as well. She stood, and met me as I rounded the pool. \n\n\"Alex,\" she said softly, touching my shoulder respectfully, \"I wanted to apologize for my comments earlier. I'm sorry. I was jealous, and surprised, and it came out in a way I didn't intend. If we're going to be seeing each other a lot in the future... and I believe my Mother has become rather attached to you, so it's very likely... Well, I just wanted you to know I won't be a problem.\" She stepped closer, and hugged me, then kissed me on the cheek. \"Unless you ever hurt her, that is,\" she smiled, softening the threat. \n\n\"Understood,\" I nodded, and we both joined Sam and Chloe at the table. \n\n\"Are you my new Daddy?\" Chloe giggled as we sat down. \n\n\"Alright, you two,\" Sam smiled, \"I think you should go get dressed for dinner, now. We're going out to celebrate.\" Both girls nodded, and headed inside. Sam waited a few seconds, then turned to me. \n\n\"Um, honey... I have a question. It's something I hadn't really thought about, but I've already done it. You haven't.\"\n\nI'm sure the confusion showed on my face, so she continued. \n\n\"Kids,\" she clarified. \"Obviously, I've got the girls, but you've never been a Daddy. Being one to them really won't count, since they're older than you are. We never talked about it. Do you want children?\" \n\nHmmm. That's a good question. I was so busy falling in love with you, I didn't even think about that. It's the only difficulty our age difference presents that can't be overcome by attitude. \n\n\"Off the top of my head? I don't know. I suppose I had the usual image of myself as a husband and father. That was before I put you in the picture though. I will say this; I don't want kids enough to give you up, if you don't want more.\"\n\n\"Me?\" she giggled. \"I'm afraid that ship has long since sailed, with a ligation and menopause in my past. No... If we're having kids, they're not coming out of me.\"\n\n\"So adoption?\" I asked. I had been paying attention to Sam carefully, and didn't notice that we had company. \n\n\"How about me?\" I heard from behind.\n\nI turned to find Chloe smiling at me, wearing a very nice dress. \n\n\"I'll have it for you,\" she beamed. \"I'd be honoured.\" \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThanks for reading. I hope you are enjoying this tale, which has taken on a life of its own. \n\nPlease send me some feedback on this one. I have a few ideas about where I want it to go, but I'm always open to suggestions. \n\nAnd as always, please cast your votes. \n\nThanks again."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "blonde",
        "big tits",
        "mature woman",
        "younger man",
        "romance",
        "flirting"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/on-the-train-ch-04"
}