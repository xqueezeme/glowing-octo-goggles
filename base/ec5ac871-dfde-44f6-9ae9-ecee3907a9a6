{
    "title": "Balance",
    "pages": [
        "Barbara Lovett could hardly fathom what was going on in her surroundings. It registered with her that her teenaged daughter, Linda was sitting by her at the kitchen table crying. Opposite from Barbara, at the table sat her husband, Richard; he was still talking, but, Barbara had stopped listening to him. Instead she continued to replay the words that had recently destroyed hers and her daughter's world.\n\nIt had started out so ordinary a day. Barbara was preparing breakfast as Linda came into the kitchen. Linda lazily plopped down in her chair and watched as her mom fried bacon, and then cooked eggs in the bacon grease. Warm cathead biscuits sat waiting in a basket to be buttered and spread with jelly. All that was missing was Richard.\n\nAs they waited for Richard to make an appearance, Barbara and Linda took the opportunity to talk; most of the conversation was centered on Linda's attraction to a boy that had finally noticed Linda. As Barbara amusedly listened to her daughter's scheme to have Henry finally ask her out on a date as she put the finishing touches to the breakfast.\n\nSoon she would go upstairs to wake Richard to come down to eat. Things had gotten bumpy lately between her and Richard and despite all her efforts, she didn't seem able to get them on track. She had tried to entice him for weeks into making love to her. Some nights, he would be an avid participant; on others, he would beg off. \n\nOn those nights, she would try to cuddle with him and try to get him to tell her what was bothering him. Usually, he would claim stress from work and roll over to go to sleep. She didn't have any success talking to him after work, because he was working incredibly long hours. She was beginning to feel guilty for trying to demand his time, but, more and more; she was at a loss how to show her support to her husband.\n\nShe concentrated on making sure all was well in the household. Clothes were promptly laundered, his favorite meals prepared, house all spic and span. Yet he continued to be oblivious to all her efforts. Still, she resolved to do her best and weather this storm. That was the idea behind this Sunday's breakfast. Perhaps a family meal could kickstart things to the right direction.\n\nShe heard steps coming from the stairs and drew her breath, mentally preparing herself as her husband approached. The smile on her face froze as she noticed the grim look on his face. He sat down at the table and ignored the food in front of him. He asked Linda to leave the room and something in the way he said it made Linda refuse to obey his command. Once again, he ordered her from the room and Linda resisted until she asked Linda to leave. Linda retreated from sight and then Richard delivered the words, no couple wanted to hear, \"We need to talk.\"\n\nShe sat down wondering what this conversation was going to be about. She didn't have long to find out.\n\n\"Barbara, there's no easy way to say this, but, I'm unhappy here and I've found someone who makes me happy. I want a divorce.\"\n\nNo sooner than he got these words out of his mouth, than Linda, who had been eavesdropping came screaming into the room. Barbara remained stunned from the words as she tried to process them. Linda continued to cry, asking her father why he was doing this. Richard was unsettled as he hadn't expected to be put on the defensive by his daughter.\n\nHe kept repeating that he had found someone he was in love with and wanted to spend his life with her. The answer did little to placate Linda as she demanded to know why he didn't love them anymore. Richard explained that he would always love Linda, but, sometimes people grew apart, and that was what happened to him and her mother.\n\nLinda refused to accept the answer and asked it over a number of different ways. The answer was always the same. He wasn't in love with Barbara anymore. Finally, Linda ran out of the kitchen and went upstairs and slammed the door to her bedroom shut.\n\nIn the silence that overtook the kitchen, Richard quietly explained that he would be leaving that morning. Tomorrow, when she was at work, he would come by to collect his things. In a couple of days, she would be served with the divorce papers and then it would be in the hands of the lawyers. As he got up to leave and walk out of the kitchen, Barbara spoke.\n\n\"Richard, what did I do to deserve this?\" she said to his back. He paused, and then continued to walk out of the kitchen and left in his car. Barbara remained sitting at the table as though she was in a catatonic state. Twice she heard the grandfather clock chime in a new hour and still she remained sitting.\n\nRealizing, she hadn't seen or heard from Linda in a while, she got up and went to Linda's room. She lightly tapped on the door and opened it. Linda was lying on top of her bed, facing away from Barbara, still sobbing. Barbara got on the bed and held her and consoled her as Linda continued to cry.\n\n\"Why doesn't he love you anymore, Mommy?\"\n\nBarbara hugged her daughter and told her, \"Hush Baby, everything will be all right.\" Barbara wasn't sure she convinced Linda. She certainly hadn't convinced herself. They remained on the bed for a long time until finally Barbara felt the need to occupy her time. She went downstairs and mechanically began to clean the kitchen. \n\nShe dumped all the food she had prepared this morning and then hand washed all the pans and utensils she had used. Then she decided the kitchen floor needed mopping. She wound up spending the entire day mopping the house. When she finally quit, it was nighttime and Barbara crawled into bed fully clothed and cried herself to sleep.\n\nMonday, she woke early and followed her usual routine of taking a shower and getting ready to go to school to teach her second grade class. This was the last week of class before the summer vacation began. She ate a couple of slices of toast to settle her stomach as Linda came into the kitchen and gave her a long hug. Linda left to catch a ride to school with her friend Beverly leaving Barbara all alone in the decrepit old mansion. Finally, she could put it off no longer and she left to go to work.\n\nThe cheerful, loving faces of her students were the only thing that got her through the day. During the lunch break, she broke her habit of being engaging and charming in the teacher's lounge and sat by herself staring out the window. Even though she was hypersensitive to any hint that the news of her marital breakup was circulating; she knew her behavior wasn't helping matters.\n\nShe left to go home as soon as the bell rang to end the day. True to his word, Richard had been in the house and all of his belongings were gone. Once again, she collapsed in her bed, refusing to move until Linda got home. She told Linda she didn't feel like cooking and for her to order them a pizza to be delivered. Linda went downstairs and an hour later came up to tell her the pizza had arrived. Barbara remained on the bed and told Linda to save her a couple of slices.\n\nAnother hour passed and Linda announced she was going over to see Beverly. Barbara didn't bother giving her the usual admonishments of when to be home and just told her, she would see her later.\n\nAt 3:00 a.m., she woke up and stumbled to Linda's room to assure herself that her child was at home, safe and sound. Safe and sound, that term had gained an ironic twist now as she made her way to the kitchen to make a pot of coffee and eat her overdue supper of cold pizza.\n\nAt 6:00 a.m., she began her preparations to go to work. That was how the last week passed. By the end of the week she was sure that the news had gotten out as she caught a number of her fellow teachers staring at her or having whispered conversations outside her hearing range. Barbara was still too numb to be angry or offended. All she wanted to do was to end this hellish week.\n\nHer daughter, Linda was becoming increasingly concerned for her mother's well being. But being 15-years-old she was at a loss on how to get her mother back. The weekend passed in an uneasy coexistence in the house. Linda kept out of the way of her mother so as to not add to her stress level. Barbara kept trying to find a way to reach her daughter and to comfort her, but, how could she convey a feeling she, herself did not feel.\n\nMonday morning, Barbara noticed that they had ran out of Linda's cereal. She made a mental note to go to the supermarket. Since she had to go, she made a list to go ahead and shop to cover the entire week. As she approached the market, she noticed her low fuel light appear on her car's dashboard. She decided to fill up once she had gotten through with her shopping.\n\nBarbara strolled through the market at her leisure as she comparison shopped and looked for the best bargains. When she reached the sales register, her cart was chock full of groceries. The total was close to $200 dollars. She handed the clerk her debit card and the clerk swiped the card and waited for the approval to appear. \n\nAfter 30 seconds, the clerk frowned and punched in some numbers and reswiped the card. Again, nothing happened and the clerk tried a third time. \"I'm sorry, Mrs. Lovett, but, the bank isn't letting this transaction go through.\n\nA confused Barbara asked, \"What do you mean it isn't accepting this transaction?\"\n\n\"Ma'am, I tried running this all three times and this card isn't working. Would you like to try another card?\" As Barbara fumbled open her purse, she heard the grumbles of the disgruntled shoppers waiting behind her. She gave the clerk her credit card and waited anxiously for the clerk to give her the sales receipt so she could leave the store.\n\n\"Ma'am, I'm afraid this card has been cancelled.\" the clerk announced.\n\n\"But, but, that isn't possible!\" Barbara sputtered, \"Please, try this one!\" As she handed over the third card, the shoppers behind opened into rebellion and told her to hurry up.\n\n\"I'm sorry, Mrs. Lovett, this card is showing it is cancelled as well.\"\n\nBarbara Lovett stood transfixed and mortified as someone yelled, \"Jesus Christ!\" behind her. The clerk was on the intercom requesting the manager to come to the sales counter. Behind her, the shoppers dispersed to other lines. She heard one person call her a stupid bitch. Finally, the manager arrived and the clerk explained what had happened. The manager looked to Barbara for an explanation.\n\n\"Look, I've been shopping here for over five years. I don't know what is going on, but, if you let me pay for this with my personal check, I'll make sure there will be no further problems with my cards!\"\n\nThe manager looked at her sadly and said, \"I'm sorry, Mrs. Lovett, but when we have an indication, that a customer lacks funds it is the policy of the store to refuse to accept a check. I'm afraid, we will have to restock all this.\" he said to the clerk.\n\nShe walked out in utter humiliation and as she got in her car, she reached for her cell phone which had been charging to call Richard and find out what was going on. She hit the speed dial and a foreign animated voice came on and announced that service to this number had been cancelled.\n\nShe started her car and the low fuel light reminded her of the perilous state of her vehicle. All the way home she prayed she would have enough gas to make it home. She gave a sigh of relief as she stopped the vehicle in the driveway. An unhappy Linda was waiting outside sitting on the front porch.\n\n\"Momma\" she cried, \"the utilities truck came by and turned off the power, gas, and water to the house! I tried to call you, but my phone has been turned off!\"\n\nThe final confirmation of Richard's malice sunk through to Barbara as she stood completely overwhelmed on how she and her daughter were going to survive. She saw a deputy sheriff's car pull up to the house and a man in uniform began walking to her. Perhaps she could persuade him to convince Richard to stop this torment.\n\n\"Mrs. Barbara Lovett, you have been served.\" \n\nHe placed some paperwork in her hand and walked back to his car. Listless, Barbara walked into her house, as so as she got in the hallway she dropped all the divorce paperwork to the floor and it scattered throughout the hallway.\n\nHer thought process was shutting down from the overload of stress and emotional hammer blows she had suffered. Unknowingly, she was desperate to find someway to cope as she went into her bedroom. For some reason, she found herself sorting through her closet, until she found her old pair of running shoes.\n\nBarbara began to remember the pleasure she had when she was running. Of course, that was in college, before she met Richard. So many things had happened; her marriage, giving birth to Linda, her mother passing away, moving back to her hometown of Warrenton. It seemed there was always something that was preventing her from running, but, now at this point, absolutely nothing was stopping her.\n\nShe dug out some old shorts and sweat pants and forced her body into the garb. She had put on a few pounds since the last time she had worn them. There was no way she had a sports bra big enough to contain her 38 DD's, so she would have to make do with her regular bra, as she struggled to put on a sweatshirt.\n\nShe found one last pair of thin athletic socks and she bent over to put on the shrunken, brittle leather shoes that immediately bit into her feet. She ignored the discomfort; she was so intense on trying to recapture a good memory. \n\nWithout warming up or stretching, she slowly began jogging down the street. She had a vague goal of running to Lake Warrenton, a distance of ten miles from her house. When she was young, in high school, she could run the distance with little effort. In her youth, nothing could stop her as the miles flew away beneath her feet.\n\nAs she reached the end of the block, she was breathing heavily. Still she continued to struggle onward as she limped through the old town area. Storm clouds began brewing up in the far horizon and Barbara continued onward. By the time she reached the end of the city limits, she was wheezing as the vehicles roared by her on the highway. Every fourth or fifth vehicle would be an 18-wheeler that would buff her progress as the windlash hit her.\n\nShe still stumbled on as the raindrops began to fall. At first, the rain was welcomed as it cooled off her overheated body. But then totally drenched, she shivered as the deluge from the storm continued. Then car would hit potholes, splashing her with muddy water. \n\nBarbara's pace lessened as every portion of her body ached. The shoes were torturing her feet as she tried to gingerly take steps. Her unused muscles ached and cramped, screaming at her brain to stop. Her lungs were burning from oxygen deprivation as her tits painfully slapped into the side of her torso. The rain turned into a mixture of hailstones and she felt the painful welts as they pelted her body. Then the sole of her left shoe gave way and separated from the shoe. Barbara stumbled as she tried to continue to run with the flopping of the sole against her rain soaked foot. Her motions began to work against her as she finally hit a large pothole that tripped her into falling into the gravel shoulder of the highway.\n\nShe skidded to a stop against the rough gravel, bleeding and crying, and utterly defeated. As she laid prone on the shoulder, she lifted her hand to signal to the oncoming traffic to stop and give her assistance.\n\nBut, no one stopped. Vehicle after vehicle passed her as she begged them to stop. Still the heartless traffic moved away from her on toward their destinations. She was weakening and she didn't know how long she would remain conscious. She used the last of her strength to roll over to sit up. Her dirty torn garb hung heavy, wet, and cold on her body. Still she tried to flag down a Good Samaritan. \n\nSeveral times, she could sense cars slowing down which raised her hopes needlessly as they would speed up past her. She had no idea how long she had been out there, when finally, a car slowed and stopped by her on the shoulder. She lifted her muddy face and recognized Richard's car. She reached out a beseeching arm toward the vehicle, when her attention was diverted to his passenger. An attractive brunette stared at her with a triumphant smile on her face as the car rolled away and picked up speed to merge into the traffic.\n\nShe sobbed as she lost sight of the vehicle and hung her head down. She stopped trying to flag someone down and she continued to sit and traffic sped by. She vaguely heard the sound of a motor close to her and then she felt someone lifting her and carefully putting her into the seat of a truck. Her unknown benefactor produced a warm woolen blanket and draped it around her. Then as the truck began to move, a blast of warm air came through the vent to warm up her chilled body.\n\nShe had no idea where she was, who she was with, or where she was being taken as she surrendered to the warmth and drifted off to sleep. When she woke, she was in her bed, her body cleaned and her injuries bandaged. She noticed Linda staring at her. Linda put a dinner tray on the bed and began to feed her some tasty homemade chicken noodle soup.\n\n\"Linda, what happened?\"\n\n\"Hush Momma, you just get some more soup in you, right now.\" Linda ordered as she fed another spoonful to her mother. Barbara savored the hot soup nourishing her and soon the entire bowl was finished. Satisfied, she shifted her body which caused pain from every pore on her body. \"Be careful, Momma, we don't need you bleeding again!\" Linda cautioned. \n\nBarbara groaned from the effort. She looked up at the ceiling and noticed the light was on. \"Linda, how did the lights get turned back on?\"\n\n\"Momma, it's all taken care of, you just relax and get better.\" Linda replied. As Barbara laid down in the plush bed, she heard the clatter of someone downstairs. Tomorrow, if she felt better, she would ask Linda what was going on as she drifted off to sleep.\n\nWhen she woke, it was late Tuesday afternoon and she was alone in the room. On her dresser, her cellphone was blinking that she had a text message. She opened the message and read the short message from Linda. Linda said that she was with Beverly and she would be back within an hour. \n\nAt least, she had phone service. She wondered what had changed Richard's mind. Could it have been that seeing how pathetic she was yesterday triggered some guilt feeling on his part? Who was that woman that was with him? Was she the woman Richard was replacing her with? \n\nBefore she could figure out any of the answers to her questions, she heard the sounds of power tools starting up from downstairs. She frowned, Linda was capable of doing anything, but, she doubted that would include power tools. She attempted to get up, but, the pain from her injuries quickly convinced her to lie still on the mattress.\n\nThen she noticed the strange object attached to her wall. A large flat screen TV was bracketed on the wall. Then she noticed the TV remote on her end table. This had to be an apology gift from Richard! Maybe, he had reconsidered and came back home! She turned on the TV and noticed that she had access to every station on the cable. Richard had even thought to upgrade their service, as she settled back to watch TV and fall back asleep.\n\nWhen she woke up Linda was sitting watching TV on the new set. \"Hey, Mom, are you hungry?\" Before Barbara could answer Linda jumped up and ran down stairs. She came back carrying a heavy laden food tray. She set the tray up for Barbara to eat.\n\nPork chop, mashed potatoes, green bean, corn, and homemade biscuits were piled on the plate. An ice cold glass of sweet tea completed the meal. Linda said, \"It's been staying warm in the oven. When you get through, there's peach cobbler waiting for you.\"\n\nBarbara sampled her first bite and quickly dug in to the rest of the meal. As soon as she was finished, Linda went downstairs and then came up with a bowl of homemade peach cobbler topped with ice cream. The dessert melted in her mouth and she made noises of satisfaction all the way through devouring the tasty treat.",
        "When she finished she said, \"Oh Linda, if I had known you were this good a cook, I would have made you cook years ago!\" \n\nLinda fidgeted from the complement that her mother had given her. She was ready to say something as Barbara continued. \"Linda, where is your daddy? I need to speak to him.\" Linda angrily said, \"I don't know where he is and I don't care! After what he has done to us, he can go fuck himself!\"\n\nBarbara was stunned by the hostility and profanity from her daughter. She had never heard her daughter cuss before and she was flabbergasted. \"Linda, don't use that kind of language! And remember, that he is your father and he loves you!\"\n\n\"Momma, if he loved us, then he wouldn't have done everything he did!\"\n\n\"Baby, when people break up they don't always act the way they should, but, your daddy did come to his senses and corrected all the wrong things he did.\" Barbara didn't know if she was trying to convince herself or convince Linda.\n\n\"The hel-. the heck he did, momma! Just today, I got word that he canceled paying on my class trip to New York. Yeah, he REALLY loves me!\" Linda exclaimed sarcastically. \"Too bad for him, I'm going to get to go anyway!\"\n\nNow Barbara was really confused, she could almost understand Richard's animosity to her, but, why would he do something like that to their daughter? It made no sense, especially, in light of the fact, he had at least turned the power back on.\n\n\"Honey, I don't know why he did that, but, give him a day or two and he will reconsider your trip. Look, he did the same thing about the electricity.\"\n\n\"He didn't have a damn thing to do about having the electricity turned back on, or, having the gas turned back on, or, having the water turned back on! He didn't have our phone service restored! He didn't buy us food! He didn't cook for us! And he didn't take care of me or you the last couple of days! If it had been left to him, we would be starving, without power or water!\"\n\n\"Then Linda, tell me who has been taking care of us? Who has restored all the utilities? Who is paying for our phones?\" Barbara sputtered.\n\n\"Our neighbor, John Dupree.\"\n\nOf all the possible answers, that would have been Barbara's last guess. John Dupree, has been their next door neighbor since Barbara, Richard, and Linda had moved back into her mother's house five years ago. It had been a sad time for Barbara, losing her mother and inheriting the large Victorian mansion which had been in her family for six generations.\n\nShe had met John Dupree at her mother's funeral and he offered his condolences. Barbara recalled how upset he appeared to be at his mother passing away. Two months later, when they began to move their belongings into the house, John Dupree had came over and offered to help. Richard had taken an instant disliking to John Dupree for some reason and told him they didn't need his help. John Dupree didn't seem offended by Richard's manners and limped back to his house. After that, the only interactions she ever had with him was whenever she saw him in his yard or on his front porch. They would make neighborly waves to each other, but, that was the extent of their contact.\n\nThat was due to Richard embarrassing Barbara after they had settled into the neighborhood. They found out John Dupree was in the habit of spending most of the evenings out on his spacious front porch playing his acoustic guitar. Most of the neighbors would sit out on their porches enjoying his skillful playing. \n\nRichard on the other hand, yelled over to him to quit the damn racket. John Dupree disappeared in his house and came back out with a guitar case and a small piggyback amp. He opened up the case and took out an electric guitar and plugged it into his amp. The jarring sound of the electrical guitar varied from the gentle tones of the acoustic guitar, even though it still sounded good, and the volume was the same.\n\nRichard called the police and complained about the noise. When the police arrived, they held up a small instrument while John Dupree continued playing. Then they walked up to Richard and told him, that the acoustics were well below that required for a noise abatement charge until 10 pm. As the officers walked away from a frustrated Richard, John Dupree began playing the theme from \"Dragnet.\" The officers laughed and drove off. Richard told Barbara and Linda that they were all going inside.\n\nAs soon as they got inside, they heard the soft sounds of the acoustic guitar starting to play again. Richard ordered them not to go on the front porch when John Dupree was playing. Linda argued with her father saying she wanted to take guitar lessons from their neighbor. To keep peace in the family, Barbara complied. But occasionally at night, she would open up a window and let the soothing music drift in.\n\n\"Linda, how did Mr. Dupree find out about us?\" Barbara inquired. \n\n\"Momma, don't you remember anything? Mr. Dupree is the one who rescued you the other night. He brought you home and carried you to your bedroom. When he asked why the power was off, I told him everything was off, including our telephones. When he asked me what happened, I told him about Daddy leaving us.\"\n\nLinda continued, \"The next thing I know, he is on the phone calling everyone. Then the lights, gas and water were turned back on. Then he got the phone service back. While we were waiting for the hot water heater to heat up the water for your bath, he asked how we were set financially. I told him I didn't know. He left and came back an hour later.\n\nHe said, he suspected Daddy had cleaned out all the bank accounts. He had gone to his bank and set up a joint account that we could use. He had a debit card with your name on it and he gave me a debit card as well. He told me there would always be enough in the account to take care of everything we needed.\n\nThen he picked you up and got you in the tub. He told me to go ahead and cut off your clothes after he put you in the tub. After he left the bathroom, I went ahead and did as he said. Momma, you were hurt so bad!\" Linda began crying from the memory.\n\nStill she continued, \"The hot water heater was making that horrible racket it always make as the tub was filling. Mr. Dupree asked me if we had any food so he could make us a meal. I told him you had gone to the store, but, hadn't come back with any groceries.\n\nHe said, he would go home and make us a meal after we got you taken care of. After I bathed you, the water was muddy and bloody. I pulled the plug and told him. He said to go ahead and rinse you off using the shower. I told him the shower in your bath didn't work. He told me to refill your bath and wash you again.\n\nHe told me he was going to leave, but, he would be back as soon as he could. He was gone the longest time and I was afraid of trying to move you by myself. So, I went ahead and gave you another bath. Then he came back and asked me if you were ready to get put in bed. I told him you were.\n\nHe told me to dry you off as best I could and to drape you with as many towels as I could. Then he came in and picked you up and put you to bed. He asked me where all your injuries were and then he put antiseptic on all of them and bandaged them all up. He told me that you wouldn't be walking for about a week, so you'll either have to use the bedpan he bought, or, call him to carry you to the bathroom.\n\nThen he opened the box of the flat screen TV he bought you and got it mounted to the wall. After he connected the cable and saw we only had basic cable, he called and upgraded to every channel! Finally, he went into your bathroom with a toolbox and came out and said your shower was fixed!\"\n\nBarbara was amazed at Linda's story as she continued to catch Barbara up to date. \"When we left to go to the kitchen, he had every space in the refrigerator and all our cupboard stocked with groceries. He showed me how to make chicken noodle soup and while I got that to you, he was fixing that crummy water heater to working again!\"\n\nThe one mortifying question that Barbara had to ask her daughter came out with difficulty. \"Linda, when you and Mr. Dupree were washing me and taking care of my wounds, did he...\"\n\nLinda had anticipated the question, \"Momma, he didn't see anything or touch anything that he shouldn't have!\" At least, Barbara was pleased to hear that. She wasn't so sure what she thought of Mr. Dupree's unwarranted liberties interjecting himself into her personal affairs.\n\n\"Linda, you need to tell Mr. Dupree I need to see him.\"\n\nDon't worry Mom. He said he would be here around noon to fix us lunch and to finish some projects around the house.\" Linda's reply was exasperating Barbara. While she was grateful for all his help, she would have preferred that he had asked permission before he presumed to work on her house!\n\nIn the meantime, she would try to find a way to reimburse John Dupree and not be so indebted to him for everything that he had done. I wonder if I would be a hypocrite if I continued to enjoy the TV, Barbara thought to herself. Adding her unspoken approval, Linda carefully crawled on the bed to snuggle with her mom as they both watched TV.\n\nOnce again, Barbara slept late and woke up around 11 am. She could hear clatter coming from the kitchen downstairs and a muffled animated conversation going on which had Linda laughing. The aroma of the food was heavenly and made her instantly hungry. But first, she needed to get to the bathroom.\n\nHer body still racked with pain as she swung upright sitting on the edge of the mattress. She waited for the pain to abate before she stepped on the floor. As soon as she put weight on the floor, it was like a thousand knives drove themselves into the sole of her feet. She screamed and collapsed back onto the mattress.\n\nShe heard footsteps running upstairs. \"Momma, what's wrong?\" Linda yelled, \"Did you try to walk? I told you, Mr. Dupree said it would take a week before you could start to walk again!\" Speaking of the devil, behind Linda stood John Dupree.\n\nHe stepped around Linda and looked down at the prone pajama clad figure on the bed. \"What is wrong, Mrs. Lovett?\" Barbara, felt ashamed as she admitted that she needed to go to the bathroom. Without another word, John Dupree gathered her into his arms and carried her into the bathroom and careful sat her down on the commode. \n\nHe then went outside and shut the door. Linda discovered by carefully rolling her hips, she could shift the pajama bottom off her and attend to her business. She finished and awkwardly washed her hands in the lavatory sink. When she finished, she struggled to get the pajama bottoms back up. Finally, she was ready and called for assistance.\n\nJohn Dupree, cautiously opened the door and peeked at Barbara. Seeing, she was clothed, he went over and effortlessly picked her up. As Barbara held on to him as he walked her back to the bed, she felt conflicting emotions battling within her. \n\nShe was grateful for all the help John Dupree was providing and she was upset that he had made so many decisions without her input. She was embarrassed at being so helpless that she required to be carried to her bathroom, but, she found it strangely titillating to being carried in his strong arms.\n\nAs he gently placed her on her bed he spoke to her,\" Mrs. Lovett, I'm afraid it is time to change your bandages. Miss Linda, would you mind getting all the medical supplies and assist me?\" Linda briefly left the room and brought in large plastic bags, full of all kinds of gauzes, swabs, and antiseptics. Barbara studied her neighbor as he and her daughter consulted on her wounds. He was a couple of inches taller than her. His body was lean and wiry, with no hint of a paunch. She estimated that he was about five years older than her. He had light brown hair, with light streaks of blonde hair that was turning to grey at the temples. His lean face was pleasant looking with eyes green, like hers.\n\nAs he carefully cut away the blood seeped bandages of her body, he kept a running dialogue with Linda explaining what they were seeing and what to do about each injury. He would ask her questions and compliment her for her correct answers. Barbara never thought Linda would show such an aptitude for medicine, but, she was glad to see John Dupree was encouraging her!\n\n\"Now\", he said in that enticing Southern drawl that was registering with Barbara, \"Now, we are going to go to the worst injuries, Miss Linda. When, I cut off these bandages, it may cause your mother some pain, but, I'll try to proceed slowly and be as gentle as I can. The injuries will not be pretty, so if you feel the need to leave the room I will understand.\" \n\nLinda looked at him with a focused determined stare, \"I can handle this, Mr. Dupree.\" Barbara, could only watch as they sat at the foot of the bed and handled her poor mangled feet. As he slowly unwrapped the layers of bandages, she would experience an occasional jolt of discomfort, but, no actual pain.\n\nShe caught him staring at her when she involuntarily jerked and she knew he was trying to gauge her pain and would continue to try to gently treat her feet. She saw Linda blanch and gasp as the last of the dried blooded bandages came off her feet.\n\n\"Now, Miss Linda, I know it looks bad, but, this will be the worst of it. I want you to carefully clean the wounds, like so.\" Barbara felt a gentle brushing on the soles of her feet. \"Be patient, and thorough as you clean the wound. Apply the antiseptics liberally, so we don't miss any area. That means, her soles, the top of her feet, even, between her toes must be clean and sterile before we rewrap her bandages.\"\n\nLinda nodded at the instructions as she continued to swab her mother's injured feet. While Barbara watched her teenaged daughter minister to her, she saw John Dupree raise up and walk to her.\n\n\"Mrs. Lovett, would you like a pain pill?\"\n\nThe question caused her some concerns. No one in the neighborhood was quite sure what John Dupree's occupation actually was. Since he had moved to Warrenton ten years ago, he had not shown any visible means of support. Yet, he was able to purchase the largest, most expensive home in the most expensive neighborhood without any problem.\n\nWhen her mother was living, she scoffed at the rumors that John Dupree was a drug dealer or porn director or that he was a Mafia member. After they moved to Warrenton, Richard was always too eager to hear and expound on any derogatory explanation about John Dupree. Richard ridiculed John Dupree every chance he got even to his riding in town in a 1965 Chevy pickup. Richard didn't seem to notice how pristine the truck looked. \n\nSpeculations had been running rampant in Warrenton ever since Barbara and her family moved back. John Dupree didn't seem to notice or mind all the gossip that was created from his residing in Warrenton. Actually, the only thing that ever seemed to cause a reaction with him was his dispute with the Warrenton Historical Society.\n\nThe Warrenton Historical Society consisted of the wives of the rich and powerful families of Warrenton. They maintained a deathgrip on the social and cultural scene of Warrenton and had done so for the past 100 years. Anyone foolish enough to resist them was quickly encouraged to leave town as the merchants would refuse to serve them. They had many pet projects and causes; but, none so dear, as the Fourth of July celebration.\n\nAt that time, they would decorate the county courthouse with patriotic bunting and take over decorating all the old large mansions surrounding the courthouse. All the homeowners were expected to comply with the wishes of the Society during the festivities which centered around the large expanse of the courthouse square. \n\nAt the festival, you were expected to purchase coupons to redeem for food, drinks, rides, activities, or purchases from the various artists' booths. Yet, you were not allowed to sell back any coupons you didn't use. Furthermore, all concessions, activities, and artists were required to purchase a license to be allow to set up on the courthouse. All this money found its way into the coffers of the Society.\n\nEven more egregious, the homeowners around the square were expected to allow the members of the Society free access to their homes as they decorated the entire square in patriotic colors. Free access also meant that on the Fourth, while the festivities were ongoing, the Society members and their families would set up on the lawns and porches of the homes and walk freely in and out to use the facilities, or otherwise make themselves at home.\n\nYet, they would ban the homeowners from inviting friends or family to their residences because that would interfere in the Society's enjoyment of the holiday. When Barbara was a small child she would remember being shooed away once from her own porch as she tried to watch the evening firework display.\n\nHer father, who served as the Circuit Clerk of Warrenton County would explain to Barbara every year why it was necessary for him to keep the goodwill of the Society as he ran for re-election. While Barbara understood it, that didn't mean she had to like it. She vowed once she owned the house, that she would stop that practice.\n\nAfter Barbara moved off to attend college, her father died and her mother was appointed to serve out his term. Once Barbara's mother got settled into the office, her mother found out that she liked the job, so she ran for election. She continued to be elected into office until she too passed away. But the upshot was Barbara's mother felt trapped to continue to allow the Society to run roughshod over her.\n\nIn the meantime, while Barbara and Richard lived away from Warrenton, John Dupree moved next door to her mother. When July the first rolled around, the Society member knocked on his door to announce, the Society was there to decorate his house. He asked them what they were talking about. They explained to John Dupree about the Fourth of July tradition. He looked at them and quietly informed them that he didn't celebrate the Fourth anymore and shut the door on them.\n\nThe members who were assigned to decorate John Dupree's house were shocked. Never had they been refused before. Immediately, calls were made and the entire Society met that evening to discuss the situation. They decided that the entire group would converge on Mr. John Dupree in the morning and make him reconsider. When they arrived and announced their presence, they dictated to him why it was imperative that he comply with their decision. He waited till they were through and then politely told them, that he understood their request, but, in no shape, form, or fashion would they be allowed to decorate his house or have access to his house on the Fourth. Then he closed his door on them.\n\nThis set off the biggest firestorm in the Society's history. The police chief called on John Dupree and told him he needed to let them decorate and use his house. He told the police chief to get off of his property and slammed the door on him. The wife of the police chief didn't understand why her husband didn't just arrest the miscreant and throw him in jail. Instead the Mayor had the police chief pick up John Dupree and brought to his office where he explained that it would be in Mr. Dupree's best interest to acquiesce to the Society, or else.\n\nOn July the third, the Society went ahead and invaded John Dupree's yard and festooned it with the bunting that he refused to allow. They never saw any sign of John Dupree that day and they left victoriously with the house colorfully decorated.\n\nWhen the Fourth of July finally arrived, the Society eagerly went to the Dupree house to start setting up the chairs, umbrellas, and other accouterments to enjoy the day, they found the house stripped of every sign of bunting and decorations. At the wrought iron gate, heavy chains secured by padlocks barred entry. If that wasn't enough, the gate had been welded shut to prevent access.",
        "A young man was videotaping them. When they asked what he was doing, he informed them he had been hired by the law firm representing Mr. Dupree's interests. Anyone caught trespassing would be the subject of a lawsuit. For the first and only time, the Society left in defeat. At no time, did anyone see John Dupree that day.\n\nFor the next nine years, John Dupree, stymied the wishes of the Society and refused to celebrate the Fourth. He observed all the traffic laws while being bird dogged by the police chief. Whenever a merchant informed him that his trade wasn't welcomed, he would shrug and shop out of town. He even had people stopping him on the streets and cuss him out for being unpatriotic. He really didn't care what the Society, or anyone else was saying about him.\n\nEventually, even though he did not know it, he became the rallying figure to all the people chaffing under the oppression of the Society. When Barbara first moved back, she had contemplated joining John Dupree's boycott for the holiday, but, Richard had sabotaged that by a announcing he was going to run for alderman. Once again, karma had interfered with Barbara's plan to fight the Society. But she secretly cheered on John Dupree's resistance.\n\nShaking her head out of her reverie, Barbara told John Dupree, \"No thank you, Mr. Dupree, a pain pill will not be necessary.\"\n\nA wry grin showed on John Dupree's face, \"So much for my reputation as a drug dealer.\"\n\nBarbara laughed at John Dupree's self effacing remark as he returned to the foot of the bed to supervise Linda cleansing of her feet.\n\n\"Miss Linda, you are doing an excellent job! Now, it is time to re-bandage, do you remember how I taught you to do that?\"\n\n\"Yes, Mr. Dupree, snug, but, not so tight as to cut off circulation.\" With that answer, Linda began weaving the bandage to cover her mother's feet back up. Working cautiously, but, efficiently, she soon finished her task and looked expectantly toward John Dupree.\n\n\"Miss Linda, you will make an excellent doctor.\"\n\nLinda blushed from the compliment, but was pleased by the words. \"Now, if you ladies will excuse me, I must go back downstairs to fix lunch.\" With that, John Dupree left the Lovetts' and went downstairs. It was funny how Barbara had never really noticed his limp before today's visit. Linda continued to fuss over her mother and then went to bring lunch up to her. \n\n\"Mr. Dupree said he had to go tend to some business, but, he would be back this evening to prepare supper.\" Linda said, as she settled the food tray with a prime rib au jus sandwich with large home cut french fries and a pickle spear. \"He said, tonight, he was going to teach me a lemon pepper chicken recipe.\"\n\n\"Linda, how come you never wanted to learn to cook from me? God knows, I asked you long enough!\" Barbara said with a half exasperating tone.\n\n\"I don't know, Momma, I guess with everything that has been happening, I'm just glad to do something to occupy my time. Mr. Dupree said that if I wanted, he would start teaching me carpentry, but, I think I'll hold off on that! Which reminds me, Momma, you won't believe, how the house is looking now!\" Linda said excitedly.\n\n\"I have some concerns about that, Linda. I don't appreciate a stranger coming in here and making changes to my house without my permission!\" Barbara said angrily as she remembered that she had intended to address that issue with Mr. Dupree. Now, she was kicking herself for forgetting to speak to him about that.\n\nLinda blushed and said, \"Momma, that's kinda been my fault. When, Mr. Dupree brought you home, he asked me what he could do to help out and I guess, I went overboard and told him about everything that you wanted to fix in the house, but, couldn't do yourself. I told him you would be grateful if he could fix those things. So, if you are going to get mad, get mad at me, not him.\"\n\nBarbara felt frustrated that she had lost her reason to vent to John Dupree and knew that Linda's actions brought her further in debt to her neighbor. She sat back, glumly in her pillow as Linda took the food tray away. That evening, she could tell when he came over, as she heard her daughter's laughter. Then the aroma from the kitchen was driving her crazy as the meal was being prepared.\n\nFinally, she heard the noise of them coming upstairs and they appeared with three food trays and Linda set the lemon pepper chicken dish on a bed of Louisiana dirty rice and steamed asparagus for Barbara.\n\n\"Momma, I hope you like it. Be sure, to leave room for dessert. I made us a raspberry sorbet.\" Linda announced with a smile. Barbara was enjoying the transformation from Linda being an atypical teenage junk food addict to this person enjoying cooking fine meals.\n\nLinda was pleased to hear the moans of pleasure deriving from her mother and Mr. Dupree as they enjoyed the meal Linda had prepared. Linda bounced downstairs and soon appeared with three bowls of raspberry sorbet and Barbara relished the way the dessert cleaned her palate. After she finished, Barbara, reluctantly put down her spoon. Linda collected all the dishes and said she was going to wash the dishes and clean up the kitchen.\n\nWhen Linda left, Barbara turned to John Dupree and said, \"Alright, who is that, and, what have you've done with my daughter?\" That brought a laugh from John Dupree and Barbara liked the way his face lit up from her comment.\n\n\"Mr. Dupree, I need to talk to you.\"\n\nWith that comment, an anxious look appeared on John Dupree's face. \"Mrs. Lovett, I owe you a big apology. I'm afraid, I've overstepped my bounds when I took it upon myself to start making repairs without your permission. Linda told me there were certain things that needed to be done to the house and that I had your permission to do them. When she confessed to me tonight, I became very upset at the thought of antagonizing you. Please understand, that from now on, I will refrain from doing anything to your house without your express permission. That being said, I am in the middle of finishing some projects that needs to being completed, so, if it is alright with you to do those, I'll get them finished.\"\n\n\"Actually, Mr. Dupree, it is I that owes you an apology. I have lived beside you for the past five years and I haven't been a very good neighbor to you. I haven't invited you over to my home; I haven't tried to talk to you; I haven't done any of the things that good neighbors should do for one another. I could try to excuse myself due to the circumstances of my situation, but, I won't.\n\nNow, I find myself so far in your debt. You rescued me; brought me home; took care of me and my daughter. You did all this after I treated you so horribly!\" Barbara's tears were running down her cheek. \"Somehow, someway I will repay you for everything!\"\n\nFrom somewhere, John Dupree produced a Kleenex for Barbara to wipe her face. \"Mrs. Lovett, I never told you this, but, I was with your mother, when she passed away. She made me promise to look after you, so don't think you owe me anything. I'm only repaying your mother for all the kindness she showed me when I moved here. Your mother was a kind and generous woman and I still miss not getting to have a morning coffee with her.\"\n\n\"Can I ask you a question? Every year, on the anniversary of her death, Linda and I visit her gravesite, there's always a bouquet of flowers there. That is you, isn't it?\n\nJohn Dupree hung his head and nodded. \n\nBarbara leaned back and brought up the memory of her mother's conversation on the long distance call when she told Barbara about her new neighbor. She kept going on and on about what a nice man he was. Barbara thought that was a subtle dig at Richard. That was when she was living away from home. Richard had insisted on living cross country from Warrenton, even though both of them had job offers in Warrenton. Richard had called it getting a fresh start, so Barbara was limited to phone calls and Christmas visits to seeing her mother.\n\nIt was so different back then. Barbara moved off to go to college, but, was home every other weekend to visit her mother. She would get up and do a training run every time she came home since she was going to school on a track scholarship. God, how she loved to run. The zen of having the earth speeding beneath her feet was what she lived for.\n\nThat is, until she met Richard on campus in his snazzy ROTC uniform. One thing led to another and soon they were living together. Richard and her mother never got along. She was always warning Barbara to be careful. Then Barbara came up pregnant and she and Richard eloped, went to Vegas and got married. When Barbara called her mother to tell her the news, she cried and told Barbara what a mistake she made.\n\nIt took a long time for Barbara to forgive her mother. But living away from home meant minimal interference from her mother on her relationship with Richard; or even, on how to raise Linda. After her pregnancy, Richard would enjoy her milk engorged tits. So much so, he talked her into having breast augmentation surgery to enlarge her breast.\n\nOn the next Christmas visit home, her mother stared at her, but, wisely didn't say anything. Nor, did she say anything, when Barbara became a bleached blonde at Richard's suggestion. Even though, she didn't notice, Richard was slowly chipping away at Barbara's self esteem. But, it was quite clear to Barbara's mother.\n\nThen when her mother passed away, Richard suddenly had no qualms about moving to Warrenton. All on the cross country trip to move to Warrenton, he would ask and speculate how big an estate Barbara's mother had left. It hurt Barbara that he wasn't more supportive of her during this time.\n\nWhen they went to the attorney's office for the reading of the will of her mother, it simply stated that her mother left her entire estate to Barbara. Richard was overjoyed to hear that news. But now they had to search to find out exactly what she left. Her bank account was minimal, except for a college account set aside for Linda of $50,000. She had a life insurance policy of $100,000 payable to Barbara. And there were funds in an escrow account to pay for the taxes on the house each year.\n\nRichard was upset to find out that was the extent of her mother's estate. He insisted there was more money hidden somewhere. But despite all the searching Richard did, he never came across any hidden treasure. \n\nSo for five years, they lived in the house and the house sunk in disrepair as Richard refused to put any time, money, or effort into the old house. He insisted on taking out a mortgage on the house, but Barbara was adamant not to be in debt over the house.\n\nNow in the course of a few days, someone was tending to the needs of the stately manor. It was a good thing, since Barbara didn't possess the skills and Richard was such a klutz around tools. If John Dupree could help save something her mother held so dear, then so be it.\n\n\"Mr. Dupree, there is one favor I would ask of you. Would you mind if we skipped the formality and you just call me Barbara?\"\n\nHer neighbor beamed his approval as he extended his hand for a shake. \"Hello, Barbara, my name is John.\"\n\nShe took his hand and said, \"Hello John, it is finally nice to meet you, neighbor.\"\n\nAfter that, Barbara quickly began to mend and she was mobile enough to walk to the bathroom unassisted. When she went in for the first time, she stood at the mirror looking at herself. She was appalled, when she realized that she had been seeing John without makeup or any type of cosmetic care.\n\nShe had Linda bring her a chair which she placed by the sink and told Linda to give her a shampoo. Then she forced Linda to spend the afternoon brushing the tangles out of her hair. When she finally applied her makeup, her morale went up 100% as she looked at the results. \n\nPeople had always told her she was beautiful, as she studied her lips and cheekbones. Then she focused on her green eyes peering at her in the mirror. She looked at her hair, which was overdue for another blonde bleaching and decided that she wanted to go back to her natural auburn color. Perhaps, what she wanted was just a different way to style her hair.\n\nThen she looked at her figure; her disgusting overweight figure accented by her monstrous breasts. She decided that she would go back under the knife and have the saline taken out. She no longer needed to impress Richard. She thought humorously that she had already lost some pounds.\n\nNext, she would change her diet. No more junk food until she reached her ideal weight. When her feet healed, she would begin running again. But this time, she would pace herself. She would set weekly goals which would give her the benefit of an aerobic workout. She would alternate days when she lifted weights to help firm up her muscle tone.\n\nBut, she thought that was only half the battle. She felt stagnant now that Richard had left her. She resolved to get involved in some projects that would enrich her and allow her to enjoy. Perhaps, she would start by trying to grow orchids. \n\nHer mother grew the most beautiful orchids. She thought she would like to continue that tradition. But then, she thought about the dilapidated condition of the greenhouse. She groaned as she got out of the chair to shuffle back to the bed. Baby steps, she reminded herself, baby steps.\n\nThat evening, she was treated to shrimp etouffee and Linda eagerly watched her reaction as she ate. \"Oh Linda, you and John are feeding me way too good!\" Linda's eyebrow arched as she picked up on the subtle familiarity her mother used with his name and grinned. Once again she collected the plates and went downstairs.\n\n\"Are you feeling okay, Barbara?\" John asked solicitously.\n\nBarbara mentally grinned as she recalled his reaction to seeing her with her makeup on. Time after time, she caught him staring at her during the meal. It was gratifying that she had at least got his interest.\n\n\"Yes, John, I'm fine. I heard the power tools going on today, so I'm assuming that you are finishing up on your projects.\" \n\n\"I'm almost through with the interior projects and then you should have peace and quiet, Barbara.\"\n\n'I can't wait to see the downstairs, Linda won't give me any clues on what you are doing!\" Barbara, complained.\n\nJohn laughed and said, \"Another couple of days and you should be well enough to go downstairs and see for yourself.\"\n\n\"John, you haven't told me how you know so much about treating my injuries.\"\n\n\"Barbara, lets leave that for another night's discussion. There is something important that we need to talk about. When I brought you home in my truck, Linda, as you know, brought me up to speed on what was going on. I noticed the divorce papers scattered on the floor and I picked them up and read them. You need to know that Richard is going after everything you have, including sole custody of Linda.\"\n\nThe news unsettled Barbara, \"John, I can't lose Linda! She is my entire life! I know I'm going to lose the house. I know this is a community property state and Richard is entitled to half of our jointly owned property. I can't even begin to try to buy out his interest in the house, it was last appraised at four millions dollars; I can't come up with two million dollars on a teacher salary! This house has been in my family for six generations; I wanted Linda to be the seventh!\"\n\nJohn reached over and held Barbara's hand, \"The first thing that needs to happen is you need to file an answer to the divorce complaint. In this state, you have twenty days from the date of service to file a response. The clock is ticking away on you Barbara.\n\nWith your permission, I would suggest you retain the law firm I use. I've already talked to the head of their Domestic Relation division and explained your situation. She is waiting for your call tomorrow. \n\nIf you don't feel comfortable with her or the firm, then start calling until you find someone you trust and get them to file an answer for you. But this, I promise you, you will never lose this house. I will do everything in my power to make sure that you get custody of Linda.\" \n\nSensing the firm resolve in his voice, Barbara clenched him into a hug as she began to cry. John held her as she wept; he looked up into the worried face of Linda and held his gaze on her until she slipped away, unnoticed by her mother.\n\nBy next evening, Barbara was in a better frame of mind. She had called Veronica Starr, the attorney that John had recommended and had been patched immediately through to her. \"Ms Lovett, I've been waiting for your call, let me introduce myself and tell you how I practice law and what I intend to do for you if you retain my services and that of my firm. \n\nThe attorney spent the next thirty minutes telling her of her qualifications. She explained that she was a partner in the largest, most powerful and politically connected firm in the state. \n\nShe gave her a realistic analysis of what she thought would happen in her divorce. She explained that she knew that presently Barbara was physically incapable of coming to her office, but, she would be willing to meet Barbara at her house, at her convenience. She would also have a paralegal visit with Barbara to begin preparing for the divorce. \n\nFinally, she told Barbara, that if she gave her a verbal consent to allow her to represent Barbara, that she had a law clerk standing by at the Warrenton Circuit Clerk's Office ready to file a prepared answer immediately.\n\nBarbara was impressed at the thoroughness and empathy that Veronica Starr presented to her. \"I have a question, Ms. Starr. What is this going to cost me?\" Barbara braced herself for the ungodly amount that her lawyer was going to charge. \n\nInstead, the attorney laughed, \"Mrs. Lovett, payment has already been taken care of, you won't ever owe us a penny!\"\n\nOnce again, Barbara thought on how much she owed John. \"Mrs. Lovett, what have you decided?\"\n\n\"Ms. Starr, go ahead and file the answer and thank you so much for your help.\"\n\n\"Hold on, one second Mrs. Lovett.\"\n\n\"Bill, go ahead and file the answer for Mrs. Lovett\"\n\n\"Mrs. Lovett, your answer has just been filed. I'm going to give you my secretary's direct line. Call her when you are ready for us to come visit you or when you want to set up an office visit. I have also instructed her to give you my cell phone number. Call me 24/7, if you have any questions or concerns.\"\n\nBarbara felt a great weight lifted off her shoulder as she replayed the conversation with her attorney in her mind. Minutes later, the doorbell rang and soon Linda was coming upstairs. \"Momma, there is a courier downstairs saying he brought some documents for you to sign.\" \n\nBarbara looked at them and noticed it was the written contract for Ms. Starr to represent her. She was impressed at the speed of how fast and effective her attorney was representing her. She signed them and then settled back and relaxed.\n\nThat evening, after a spicy bowl of gumbo, Linda excused herself, saying she was going to visit her friend, Beverly. As Linda left to go downstairs, John and Barbara watched her leave. \"You should feel good for yourself, Barbara. You are raising a quite extraordinary daughter.\" John complimented her.\n\n'I think I owe a big thank you to you, John. She has changed so much, and now I know that I will only have a little time left with her before she goes to live her own life. She has started talking about going to medical school now. Six months ago, the only things on her mind were boys and clothes!\" Barbara shook her head still not believing the transformation.\n\n\"You never know how people react in a crisis, Barbara. For some people, when things are at the absolute worse, they are at their absolute best.\" Barbara was disturbed by the far off stare on John's face as he made that comment. She quickly decided to change the topic.\n\n'I went ahead and hired Ms. Starr to represent me. You were correct about her and I feel secure in her representation. She gave me the bad and the good. She let me know that given Richard's initial salvo, that I should anticipate this to be a long drawn out affair. She said it was going to be painful and costly.",
        "Which brings me to my next point, I know you said I don't owe you anything, but, I can't let you go broke taking care of me. For Christ's sakes, you don't even work and you drive a fifty year old truck! I know, you promised me that I wouldn't lose my house and I don't know how you ever got Ms. Starr to say the same thing, but, the reality is this is a community property state, Richard and I did not have a prenuptial agreement at the time of my marriage. I inherited the house five years ago, he is going to get half the value of this house and barring a miracle I'm going to lose this house! \n\nIt will get sold and then I will have close to two million dollars before taxes. After that, I will repay you every dime you've spent on us. I will reimburse you for all the costly legal fees that Ms Starr will be charging. Then I will pay for medical school for Linda. After that, I'll scrap by until I get my teacher's retirement and live out the rest of my life. And you know something, I'm okay with that, just so long as none of this hurts Linda.\"\n\nJohn sat still as Barbara finished her fiery diatribe. \"Well, Barbara, it seems I can't convince you of my promise, so let's just wait and see how this whole thing plays out.\" \n\nHe sighed as he got out of the chair to go to the foot of her bed. \"I need to put some pressure on your wounds to see how you are progressing. I want you to describe the discomfort on a scale of 1 to 10, ten being the most severe.\"\n\nAs he probed, each spot, Barbara would correlate it to a numeric value. When he finished he told her that one more day of bed rest should do it and then she could make limited trips downstairs.\n\n\"I'm almost afraid to go downstairs.\" Barbara joked.\n\nJohn teased back, \"I'm not THAT bad!\" He got up to leave and wished her goodnight. As Barbara prepared to go to sleep, the thought of losing the house, once again settled in her head. Perhaps, she should just cherish each remaining day she had left living there, she thought as she closed her eyes.\n\n\"Okay, mom are you ready?\"\n\nBarbara looked all around the downstairs area, for all the racket that John Dupree had made for an entire week, it sure didn't look like much had changed. Linda walked over to the wall where a defunct light dimmer switch was located, she reached up and turned it on. Suddenly, the room was ablaze with the sparkling light of the crystal chandelier that Barbara had last seen working as a child visiting her grandparents. Seeing the room lit up by the beautiful light started bringing back pleasant memories of a much simpler time.\n\nBarbara circumnavigated the room, all the while looking up at the chandelier, holding her hands to cover her mouth. She remembered her grandparents told her the electrical wiring had gone bad on it, when she came over one day and it didn't work. For all those years it hung on the ceiling impotent, yet stately. \n\nWhen her parents moved into the house, her father had gotten an estimate to repair it and it was deemed too costly to tear up the plaster and replace the defunct knob and tube wiring then re-plaster and paint the room.\n\n'Do you like it, Momma? Mr Dupree fished a new electrical line to the light, so he wouldn't damage any of the wall. Then we removed the crystals and soaked them in white vinegar. Look how it makes the whole room sparkle!\" Linda exclaimed.\n\n\"He said, he also replaced the rheostat, which controls the dimmer so you can change the intensity of the lights. Now check out the floor, remember how the wood had all those bare spots on it? Mr. Dupree rented a floor sander and sanded down the entire first floor and then re-stained the floor. I was surprised you never smelled anything!\"\n\nNow that Linda had directed her attention to it, Barbara looked at the clean, uniform-stained, varnished floor that cast a reflection of the chandelier. She thought how much labor went into making the floor look so good.\n\nThat didn't stop Linda, \"Come here, Mom. Remember how these French doors were jammed shut?\"\n\nLinda effortlessly opened them. \"Mr. Dupree said over the years the house had settled, which put them in a bind. He took them down and said he would make the opening \"square\" again; whatever, that means. Anyway, now they work and we don't have to walk all the way around to get to these rooms!\"\n\n\"Now come here\" Linda commanded, as she led her to what was once the basement stairs entryway.\n\n\"Be careful, Linda, don't fall in!\" Barbara yelled to warn her away from the pit.\n\nInstead, Linda blithely went down the new set of stairs to the basement.\n\n\"I've been finding the neatest stuff down here about our family! Too think, its been here all along and we didn't know about it!\"\n\nBarbara had to admit she was amazed at the changes that didn't change the aesthetics of the house. She looked forward to joining her daughter in exploring expeditions into the basement, but now, she had been on her feet long enough to start bothering her and she told Linda. Linda told her they would rest on the front porch, Mr. Dupree was working in the frontyard.\n\nLinda led her outside to the porch, a shirtless John Dupree was swinging a heavy sledgehammer busting up the remaining brick foundation of what was once the house's wrought iron fence. Vandals from two Halloweens ago discovered the rusted frail fence with the crumbling bricks and mortar and had ripped it out of the foundations. \n\nBarbara and Richard had gotten an estimate to replace the fence, but, the homeowner insurance agency balked at the $30,000 price tag. Richard settled for $4,000 and the fence was hauled away.\n\n\"Mr. Dupree is going to replace the fence. He said would make a template and put precut wrought iron in it and bevel wherever the iron rods connected, then he would weld the rods, grind out the rough edges and paint the sections black enamel. He told me, we needed to decide what decoration we wanted on top of the vertical rods.\"\n\nBarbara continued to admire John Dupree's physique as he worked. His body reminded her of all the old Bruce Lee's kung fu posters, so much explosive power in a lean wiry body. She frowned as she noticed three spider-webbed shaped scars marring his pale white torso. \n\nI wonder how that happened, she thought to herself.\n\nHe finally noticed his audience and hurriedly put on his T-shirt. \"Good morning, ladies\" he began walking toward them.\n\n\"Good morning, Mr. Dupree!\" Linda responded, \"Just showing Momma your handiwork. Come sit and I'll bring us some lemonade!\" As she left to go to the kitchen, John Dupree sat on the shady porch and wiped sweat from his brow, then he grinned at Barbara and said, \"Last project.\"\n\nWhen Linda appeared with the pitcher and ice cubed filled glasses, John poured a full glass and handed it to Barbara, then one for Linda, then himself. Barbara watched as John appreciatively sipped at the tart drink.\n\n\"I should be able to finish this before the holiday.\"\n\nThat reminded Barbara how close it was for John to turn into a recluse.\n\n\"Mr. Dupree, why do you hide during the Fourth?\" Linda asked.\n\nBarbara was stunned at how John seemed to age 30 years when Linda asked the question. The incredible sadness and pain that played over his features. He remained silent and Barbara thought he was not going to answer the question.\n\n\"Miss Linda....I'm not prepared to tell you that today.\"\n\nThe easy neighborly conversation had frozen into an uncomfortable silence and John Dupree excused himself and walked back to his house.\n\n\"I didn't mean to upset him, Momma!\" Linda cried\n\n\"That's okay baby, you can apologize to him later.\"\n\nIn fact, they did not see him for the rest of the week. Like clockwork, the Warrenton Historical Society appeared at Barbara's house and began decorating it for the holiday. Barbara was so tempted to follow John Dupree's example but at the last minute kowtowed to the Society. It is a pity, that at the very last chance I would have to deny them, I would lose my courage, Barbara thought to herself.\n\nThen came the Fourth, and once again, John Dupree's house stood silent and mute as the nation celebrated its birthday. The Society's members showed up in full force to take advantage of Barbara's and Linda's hospitality. Barbara was scurrying around trying to accommodate one of the elderly ladies' request for a pillow to support her back, when she literally ran into Richard Lovett.\n\nA stunned Barbara asked, \"Richard, what are you doing here?\"\n\nHe snarled, \"Since you sicced your law firm on me, I thought I'd bring my fianc\u00e9 with me to see the house she is going to wind up living in! Kim, this is my bitch of a wife, Linda!\"\n\nA brunette with a smug smile came over to Richard's side and casually draped her arm around him. Barbara recognized her as the woman who looked at her in amusement as she laid helpless on the highway roadside.\n\n\"I'm going to have so much fun redecorating this house.\" the woman taunted Barbara. \"You might know my mother, she is the President of the Warrenton Historical Society. She has been complaining for years of how the Society needed to get control of these manors. Once, this goes up for auction after your divorce, Richard and I will snap it up!\" The brazen audacity left Barbara speechless as her attention focused on a large gold locket Kim was wearing around her neck.\n\nShe narrowed her eyes to slits and asked the intruder, \"Where did you get that locket?\"\n\nKim was thrown off by the unexpected question.\n\n\"My mother gave this to me years ago.\"\n\nWithout warning, Barbara reached and snatched the locket and broke it off the chain of the startled woman.\n\n\"You fucking bitch, I'm going to have you arrested for battery and theft of property!\" Kim yelled.\n\nBarbara yelled back, \"Listen slut, five years ago when we were hosting your precious Society, this locket was stolen from this house. It had belonged to my mother and apparently your sorry bitch of a mother stole it. Now there was a police report made; and there was a homeowner insurance report made with color photographs of this locket; including pictures of this!\"\n\nBarbara sprang the hidden catch to reveal a black and white photo of Barbara and her mother celebrating one of Barbara's victory as a track star inside the locket.\n\n\"That is a picture of me and my mother, Allison Ferrell. If that isn't proof enough for you, her full name is engraved in the locket. My father gave that to my mother when I was born. My birthdate is also engraved in the locket.\n\nSo call the police if you want to because the only person that is going to be arrested is your sorry cocksucking ass! Now, I want you off my property! As a matter of fact, I want every one of you sorry bitches off my property this fucking minute!\"\n\nA tornado of activity ensued as the members of the Society were unceremoniously ejected off the property. Barbara assisted their effort by launching their belongings from her lawn into the street before an applauding crowd. \n\nBarbara stood breathing heavily before the crowd, staring directly into the shocked face of her estranged husband and said, \"Let this be a warning, that will be the last thing you ever steal from me, Richard Lovett!\"\n\nShe went inside and called a number on her speed dial. \"Hello, Ms. Starr, this is Barbara Ferrell, that's right I'm using my maiden name from here on out. I just wanted to let you know, you are about to earn your keep.\"\n\nShe explained the entire scenario and her attorney went into damage control mode and called the prosecuting attorney in Warrenton and gave him the entire details of the dispute. \n\nShe ended the conversation this way, \"Now, I'm sure the President of the Warrenton Historical Society is going to come to you and say that Allison Ferrell gave that to her as a gift. \n\nWhat you need to remind yourself is Mrs. Ferrell has been deceased for five years. The locket is recorded and photographed in the probate records of her estate. \n\nThere is a listing and photograph of the locket in the Lovett's homeowner's insurance policy after Mrs. Ferrell passed away. Also, the police report has the photograph. So, how did Mrs. Ferrell give her the gift after she had passed away?\"\n\nAs it turned out, the prosecuting attorney did in fact have a meeting with the President of the Historical Society, and the police chief, and the mayor, and their wives, and Richard Lovett and his fiance. \n\nAll of them were screaming for the head of Barbara Lovett since the locket had been a gift from Allison Ferrell. The Prosecuting Attorney said he would look into the matter and determine whether criminal charges were warranted. When they left, he gave a silent prayer of thanks for the heads up from his law school classmate, Veronica Starr and avoided this pitfall.\n\nOn July the fifth, Barbara's house fielded a number of notes and cards from well wishers thanking her for standing up to the Society.\n\nThere was also a package with a card addressed to her. She opened it to find a new pair of New Balance running shoes in her size and several pair of thick athletic socks. There was also several pairs of running shorts and shirts. On the envelope was inscribed, \"Congratulations on your Independence Day\", the small card read, \"All things in moderation.\"\n\nOne of the things she decided to do to celebrate was to go ahead and schedule to take out the saline in her breast which she had done at Richard's behest. \n\nOn the date she had the surgery done, she came home to find her wrought iron fence up, complete with the original styled ornaments. She was halfway regretting not asking John to repair her mother's greenhouse. \n\nWhen she went into the backyard she found the greenhouse fully restored, and stocked with new tools and implements. She resolved once her compression bra was off and she had done her two weeks of recovery period she would start planting orchids.\n\nJohn came by everyday to check on her and brought her a gift of a potted orchid each visit. After showing it to her, he would go and repot the orchid in her greenhouse. Each day it would be a different variety. When she finally ended her recuperation period, she went into the greenhouse, to find out that for every one he had shown her, there were three he hadn't. \n\nThe entire greenhouse was filled with alive vibrant orchids. She gave him an impulsive hug and almost regretted moving away from him. She realized that it had been awhile since she had been with a man.\n\nWould John be interested with becoming a friend with benefits? Would she? Maybe she needed to really think about this before she mentioned this to John. Because, however you sliced it, this would be a game-changer. And how would that affect her divorce? Would Richard use the information to paint Barbara as a slut in their custody battle? Hell yes, he would! That by itself made this a very bad idea.\n\nAll John knew was one minute a beautiful lady was hugging him and the next minute had froze in his arms and pushed him away. He had no idea what he had done. Could she have felt his instant erection when she hugged him? She must have! How in the world does he apologize for that? He left a very unhappy person.\n\nMeanwhile the divorce case had gone radioactive. After Barbara had embarrassed Richard and the Society, they had vowed to burn through every dime Barbara had. They had filed deposition after deposition to drive up the legal fees. An army of expert witnesses were hired; which meant Barbara's law firm was forced to hire an opposing army of experts. That had caused the proceedings to be delayed considerably. \n\nThey even tried to get Barbara fired from her teaching job, a quick call from her attorney to the school district stopped that. All this translated into stress on Barbara, even though her attorney kept telling her to let her do the worrying, since she was being paid for it.\n\nBarbara did begin running again; this time slowly and carefully. The first run was only to the end of the block and back. It was almost ridiculous to think of all the warming up and stretching she did to run such a short distance, but, Barbara was resolved to be disciplined this time. The next run was 100 yards farther out. And the third run added another 100 yards increment. For the rest of the first week she continued to add a new 100 yard increment daily.\n\nThe second week she ran only the distance she had completed by the seventh day. So for the second week she would acclimate to that distance. On the first day of the third week, she added a 100 yards increment. Each day of the third week; she added increments. On the fourth week, she did acclimation runs. And so it went, odd weeks were increments; even weeks were acclimations.\n\nIt wasn't easy on Barbara, it took awhile for the soreness to go away and Linda and John fretted over her to make sure she didn't overdo it. But she stuck with her plan and continued to run. When she weighed herself and saw she lost that first pound, she was floating on air, but, she knew as the fat converted to muscle, she would actually gain weight for awhile. She would not let herself be discouraged.\n\nEvery night, Linda and John would bolster her spirit by praising her efforts. She reluctantly asked them if they could focus her meals to lighter fare to cut her calorie intake. They immediately complied and in a show of solidarity ate the same meal as Barbara. Linda suggested that she and John join her on the runs as well, but, John nixed that idea.\n\n\"I think your mother prefers the solitude aspect of running, besides, I wouldn't be able to keep up with either of you.\"\n\nSo Barbara continued to run alone as the days tracked on and the heat from the divorce continued to grow hotter and the running got colder. \n\nJanuary, February, March passed and Barbara continued to run, by now she had reached the city limits as her turnaround point. When April came, the weather warmed up and Barbara began to shed her cold weather running clothes. She began to notice that on every run now that she had picked up a distant guardian, as a certain 1965 Chevy truck trailed her to make sure she was okay. She never spoke to John about it.\n\nThen May came and she lengthened the increments, by now, her hair had lost every vestige of the former blonde bleach and was tied in a ponytail on every run. Her stamina had increased, while her measurements had decreased. The running shoes were well broken in and caused no problems. \n\nNow her turnaround point was where she had fallen the past June. She thought of it as a personal victory each time she hit that spot and turned around. Still her guardian followed behind her.\n\nBy the last week of May, she would be attired in a thin shirt, concealing her teacup breasts; running shorts that exposed her muscular toned legs; socks and running shoes that was how she was dressed when the trouble started.\n\nA car full of young men passed her, honking and waving at her. She paid them no mind, just as she did to the truckers who would cut loose with their airhorns. But, this vehicle made a sharp U-turn on the highway and raced to her. Barbara began to get nervous as the vehicle cut her off from running when it stopped in front of her. \n\n\"Hey Baby, you want to party?\" said the driver.\n\n\"Of course, she wants the party\" said one of the passengers as he reached to grab her. She avoided his grasp and began to back up.\n\n\"Oh Baby, don't be like that!\" said another passenger as he caught her arm and forced her close to him. She began to struggle which only made her captor laugh.\n\nThen she saw John Dupree step out of his vehicle and walk quickly to her. When she saw his visage, she shuddered, because she saw nothing that reminded her of the John Dupree she knew.\n\n\"Hey Man, get the fuck out of here! Nobody invited you!\"\n\nJohn ignored him as he continued toward Barbara. One of the passenger, much bigger than John moved to obstruct him. In a flash, John struck him three times and the young man crumpled to the ground. That caused the driver and another passenger to gang up on John. In a flurry of moves John quickly disabled them and continued toward Barbara. The passenger holding Barbara reached into his pocket and Barbara heard the snick of the switchblade as the blade locked in place.",
        "John continued to show no fear, as he stopped before the man.\n\nIn a voice that Barbara never heard before, John told the young man what he intended to do to the man that assaulted his woman. John promised him that retribution would be harsh, lingering, and final as he stared coldly at the young man. \n\nHe had one opportunity, and only one to walk away with his life. That would require the man to release Barbara and walk away; otherwise, the young man's mother would be mourning her son's death.\n\nThe man immediately released Barbara, dropped the switchblade and began running down the road. John held Barbara as she cried, he then walked her to his truck and took her home.\n\nThat didn't deter her from running as she knew that somewhere John would be close by protecting her. She never saw the young men that had tried to attack her again. So again, the only distraction was the occasional horn going off as vehicles passed by.\n\nOn one late afternoon run, she had hit a deserted area of highway surrounded by open fields. She suddenly stopped as she saw a majestic elk stepped out of the forest and wandered to a nearby pond for water. As she watched, she was aware of John pulling up to see what was wrong. He walked up to her and stood behind her as they both silently watched the animal drink.\n\nThen a herd of female elks came out of the woods, and the male elk having sated one need; went to sate a more primal need. They continued to watch the large antlered elk powerfully mount each doe of his herd, as he sought to pass along his heritage into his offsprings. Then slowly, the herd wandered back into the forest, leaving Barbara and John in the electrical air of sexual tension.\n\nBarbara knew if they remained there, that she would jump on John and have sex right there on the highway. So reluctantly, with her brain screaming no, she moved away from him and continued on her run. John watched as the enticing figure of his neighbor faded into the distance as he sighed and went back to the truck to trail her.\n\nBarbara attended her lawyer's deposition of Richard and was amazed at how she sliced him open and bleed from a thousand wounds, as revelation after revelation came forth from his mouth, in contrast, Barbara's attorney had spent hours subjecting Barbara to mock depositions from associate attorneys at Ms. Starr's law firm. They harassed Barbara with intimate questions and tried to get her to lose control so she would blurt out something damaging to her case. Then they would critique Barbara's responses and show her a more appropriate way to respond. \n\nThe day arrived for Barbara's deposition. Despite her attorney's assurance that she would do fine, Barbara was still nervous as she was sworn in. For the entire day, Richard's attorney tried to trip her up and Barbara would escape each trap. She was amazed at how many questions were the exact questions, her own attorney had asked in the mock depositions, and the responses came easily to Barbara, which frustrated Richard's attorney. Finally, the ordeal was over and Barbara met Ms. Starr in her office.\n\n\"Overall, I think you did good, Barbara. There were a few questions I would have liked you to have answered differently, but, that is the case in every deposition I had been a part of. You denied all of their serious allegations in a way they can not come back and impeach you with. I know this has been a long drawn out affair. Let me tell you what I think is going to happen\".\n\n\"This case has divided Warrenton. You are going to find out what people think of you, and some of it is going to be hurtful. The Society's members and their families are 100% against you. Richard and his business connections are likewise against you. Your neighbors are 75-25 % for you. Your fellow teachers are 80-20 % for you.\"\n\n\"I suspect they will start with all their experts. They will try to build a case that you are an unfit mother by neglecting Linda. Then they will try to shoehorn some of your neighbors and friends testimony to fit that theory. I will try to minimize as much of the damage as I can, but rest assured at the end of the trial, you will have to do some hard thinking on people you thought were friends.\"\n\nThe court date was set for July the third.\n\nOn July the second; a nervous Barbara began her last run before the trial. After completing her warmup ritual, she began her run on the cloudy storm threatening day. She followed her usual pace as she went from her block, through her neighborhood, through the downtown area, past the city limits, onto the jogger lane by the highway.\n\nThe distance passed, with only the sounds of her feet striking the pavement and her regulated effortless breathing. She started thinking what a difference a year made. She was on the cusp of losing her husband; her home; and more importantly, perhaps her daughter. The very thought fueled Barbara's rage and she increased her pace.\n\nWhen she reached her turnaround point, still two miles away from Lake Warrenton, an ominous rumble of thunder startled her. She flashbacked to all the pain and humiliation she had suffered on her first run, and instead of turning around, she continued to stride down the highway, as the rain came down.\n\nThe rain continued as the thunder growled from the sky. Instead of being intimidated, Barbara dared the weather to do its worse, as once again, she raised her pace. She thought of the pain that Richard had caused her and Linda; she thought of the loss she felt for her mother; she thought of the humiliation she had to endure, as she now flew down the highway.\n\nHer breathing quickened, her muscle signaled discomfort, her pulse raced; and still Barbara ran. She realized she had lapsed into her sprinter kick with no finish line in sight as the rain bathed her body. Still, she was a mile away from Lake Warrenton and still she refused to give up; or to slow down. Stride after stride, she sped down that last mile until she finally reached the lake and stopped.\n\nShe leaned forward with her hands on her knees gasping for breath as her legs welcomed the cessation of running. A gamut of emotions were building within her and she began sobbing as she stood up, her arms stretching to the heavens, her chest heaving. She gave a yell of rage and triumph as the rain baptized her.\n\nThen John was in her arms as she stood crying in her catharsis state. Instinctively, her mouth sought his as they expressed their mutual yearnings. Hands probed their bodies as they hugged tightly to one another. Kiss after kiss, followed as time stood still as the two shared this intimate moment.\n\nBarbara looked into his eyes and cradled his face in her hands.\n\n\"I have to finish this.\"\n\nJohn reached with his hands and held her hands as they remained on his face.\n\n\"I know.\"\n\nThey reluctantly broke apart and stared at each other. Barbara turned and began heading home in an easy jog as John prepared to follow behind her.\n\nThe next morning Richard swaggered into court escorted by Kim and the entire membership of the Warrenton Historical Society for support. As Barbara's attorney suspected, the first witnesses were the experts hired by Richard. As the first witness sat up on the stand smugly asserting his contention that Barbara had harmed Linda's developmental progress. Veronica Starr calmly and methodically eviscerated the expert until he left in a flush of embarrassment for being revealed as the quack he was.\n\nThe next witness had the same thing happen to him as Ms. Starr's preparations begin to show their rewards. After that, all the witnesses for Richard began to hedge their testimony, so as, not to face the ridicule they would be subjecting themselves in the court. Richard's attorney stood frustrated as his game plan failed to show Barbara was an unfit mother.\n\nStill, he was able to prove that Richard and Barbara were married at the time when Barbara inherited the house. Therefore, his client was entitled to half the value of the house. As they rested their case, Barbara sat glumly watching Richard flashing a victory smile to Kim.\n\nVeronica Starr calmly stood up and announced for her first witness, she wished to call John Dupree. A surprised Barbara watched as John was sworn in and stated his name and address.\n\n\"Mr. Dupree, who are your neighbors?\"\n\n\"Currently, Barbara Ferrell, and her daughter, Linda.\" John answered.\n\nThe response clearly disturbed Richard by John's use of Barbara's maiden name.\n\n\"Mr. Dupree, to your knowledge, does Ms. Barbara Ferrell have any ownership interest in her homestead?\"\n\nThe answer stunned Barbara as John calmly stated. \"No, she does not.\" That shook Barbara to her core; as her foundation, as the man she cared for, so easily betrayed her. Not again, she silently screamed as she watched John sitting placidly on the witness stand. Broad smiles broke out on Richard and all his minions faces.\n\nStill Ms. Starr continued, \"Why does Ms. Ferrell have no ownership interest in the house she is residing?\"\n\n\"Because, I purchased the house nine years ago from Ms. Ferrell's mother and have been the title owner ever since.\"\n\nThe revelation caused chaos in the courtroom as shocked and upset people tried to register what John Dupree said. Barbara slumped back trying to understand how and what was going on, as the judge furiously gaveled the court back into order.\n\n\"Mr. Dupree, I am showing you what has been marked as Exhibit No. 1 and ask you what that is?\"\n\n\"That is the warranty deed, Mrs. Allison Ferrell gave me when I purchased her house nine years ago.\"\n\nVeronica Starr picked up another piece of paper, Mr. Dupree, I am showing you what has been marked as Exhibit No. 2 and ask you what that is?\"\n\n\"That is my cancelled check for the purchase of Mrs. Allison Ferrell's house from nine years ago in the amount of four million dollars.\"\n\nA gasp came from Barbara, as she came to accept her mother had indeed sold her house, but, what had happened to the money? And how did John have the money to buy it in the first place?\n\nNext came the land registry book from the Warrenton's Circuit Clerk's office showing that the registration was indeed recorded properly.\n\nThen a video was introduced and played and Barbara watched as her mother and John were shown going through the entire transaction, even with closeups of the warranty deed and the check presented to Allison Ferrell.\n\nThe video even showed the discussion of John agreeing to put in money to the escrow account that paid the taxes on the house.\n\nAgainst Richard's attorney objections, all the exhibits were allowed into evidence. Then came the cross examination. Richard's attorney lashed out with every innuendo ever submitted against John. He was desperate to score some telling point against John. Barbara got more and more upset as he insulted John.\n\nFinally, she cried to her attorney, \"Make them stop!\"\n\nThe judge lifted an eye at her, but, didn't say anything about the outburst.\n\nRichard's attorney smiling at the pain he was finally causing Barbara then asked, \"Mr. Dupree, you expect us to believe this contrived story of you buying Mrs. Allison Ferrell's house. You, an unemployed bum, a man that doesn't even believe in this country, wants the protection from its courts! You, a man that is so despicable that you won't even celebrate the Fourth of July expects the court to believe your web of lies!?\"\n\nJohn studied the attorney before he spoke.\n\n\"I was born into a family quite wealthy. In fact, I could buy everybody in this room, five times over and never miss the money. Growing up, I was quite arrogant about that expecting my life of privilege. I was an insufferable idiot, quite like you, sir, until I met Morgan at college. \n\nI saw her at a party and knew I would soon be in her pants as soon as she found out about me. Instead, she was repulsed by my behavior and it upset my ego that I couldn't charm her. I decided that I would get her to submit to me, before I went off to find some other conquest. But nothing, I ever did worked to change her mind.\n\nWhen she refused another one of my endless request for a date, I finally asked her what she was looking for. When she answered, it was basically everything I wasn't. It was my wakeup call and I began to try to change in the person she wanted me to be.\n\nWhen I finally convinced her of my sincerity, we went out on our first date. When I got my goodnight kiss from her, I knew, she was the one.\" John smiled at the memory.\n\n\"I didn't try to rush things, we went at her pace. My family marveled at the changes in me as I tried to make up for all my mistakes in the past. We discussed our future and Morgan said she was going to med school. That, of course, made up my mind.\n\nWe both got in and completed med school, we were both scheduled to start at John Hopkins when 9-11 happened. I did a lot of soul searching and I found myself signing up for the Marines. When Morgan found out, I thought it would mean our breakup, she was that upset. \n\nI told her that because of her, I had changed; and that if she had any respect for me, as a man, that she would accept it. She cried and said that she would accept it, as long as I promised to come back to her.\n\nSo I found myself in basic training, wondering what in the hell had I got myself into as my drill instructor screamed at me. We were on a conditioning run, with full knapsacks at Camp Lejeune when I broke down. My DI came over to me and I fully expected to hear nothing but screaming from him. He squatted down and quietly said, 'Doc, when you're at the end of your rope, all you got to do is take one more step.' Somehow, I got up and kept taking all those one more steps and made it.\n\nWe got deployed to Afghanistan and we were in country for three months when it happened. A convoy had been ambushed by the Taliban and there were multiple wounded that needed care. I had been assigned to the base hospital, but, I volunteered to go out on the relief helicopter.\n\nAs we prepared to land an RPG hit us and we had a crash landing. We scrambled out of the helicopter right into the middle of the ambush. Guys were getting hit left and right as I would crawl to them and drag them to cover. I would quickly treat their wounds and go back to get another one.\n\nI would pop off rounds from my M-16 to give us a little protection then try to get them to safety. I don't even remember when I first got hit, I just knew it was harder to run when I looked down to see my bloody leg. I slapped on a bandage and limped back out there. \n\nI took another hit and fell as I saw six Talibans stripping off gear from Lance Corporal Tyree Washington's body. One of them was wielding a big sword and raised it. I knew he intended to behead Tyree, so I shot him first. That got their attention as we engaged into a firefight. I shot or chased off the rest of them and got to Tyree.\n\nI found a pulse and began working on him, all the while, having the Taliban take potshots at me. I took off my body armor to drape over Tyree to protect him. During the remainder of the fight, I was wounded three more times. I was getting weak from the loss of blood and knew I was about to die.\n\nThe only regrets I had was that I wouldn't keep my promise to Morgan and I wouldn't be able to save Tyree. Imagine, I went from being a snot nosed kid hellbent on getting drunk and crashing Corvettes to actually caring for a ghetto black kid who was my brother Marine. A guy, in my former life, I would never look twice at.\n\nI kept trying to stay alert and keep fighting as rounds were hitting all around me. I started thinking I just wanted it to stop. Then I heard my DI in my head telling me to just keep taking one more step. So I kept taking every step I could to survive and save my buddies.\n\nFor some reason, the Taliban began to charge me and I fired at them until I passed out. When I woke, I was being treated at the base hospital, being stabilized to be shipped stateside. I was told when the gunships arrived, the Taliban made one last effort to get to us, that was why they decided to charge. There were about twenty bodies next to me and Tyree, when our relief got to us.\n\nThey gave me the Navy Cross for what happened that day, but, what was important to me was Tyree and all the other guys I treated made it home.\" John smiled .\n\n\"When I got home, I was being treated at Bethesda and Morgan came into my room crying, 'You made it back!'\" \n\n\"All I could do was to hold her and tell her how much I loved her. I had a hard time readjusting. Between physical therapy; a growing dependence on painkillers; and, suffering from post traumatic stress disorder, I reverted back to a lot of bad habits.\n\nMorgan finally gave me a reality check and told me that I had to change. The thought of losing my angel was enough to get me focused again. It wasn't easy, and I had a lot of setbacks, but, I finally had a grasp on things and was looking forward to starting a family with Morgan.\n\nShe was getting a yearly checkup, when her doctor noticed some readings that disturbed him. They ran further tests and found she had pancreatic cancer. Before we could even begin to treat it with chemo, she was on her deathbed. \n\nI was begging her to stay with me, when she looked at me and smiled and said, 'You, have to let me go.'\"\n\nThe tears that had been coursing down John Dupree's cheeks began soaking his shirt. Holding himself together for a few more moments, he said, \"Do you want to know what day she died? It was the Fourth of July.\"\n\nWith that, he began sobbing before the silent courtroom. Barbara cried along with him, watching his body shaking in the memory of his loss. After a minute, the judge suggested a short recess. When they returned, John was excused from the witness stand and walked out of the courtroom. Barbara's heart went with him.\n\nMs. Starr called a bank official to testify that nine years ago Allison Ferrell had deposited four millions dollars into her account and had withdrawn it six months later. The records of the transaction were submitted into evidence.\n\nThen an agent from the IRS testified that nine years ago Allison Ferrell had filed her tax form reporting income of four millions dollars from the sale of her home. The copy of the tax form was introduced into evidence.\n\nTry as he could, Richard's attorney could only flounder the rest of the hearing. At the end of the hearing, the judge granted the divorce and ordered Richard to reimburse Barbara for 50% of the values of the accounts he had initially seized. \n\nHe ruled given the testimony that there was no marital home to consider as it was clearly the property of John Dupree. \n\nThen he ruled that sole custody of Linda would be awarded to Barbara with liberal visitation rights to Richard. Child support payments would be required of Richard, but, no alimony would be required. \n\nThen he ordered the hearing closed and Barbara and Linda both hugged Veronica Starr and thanked her for the stellar job she did. Veronica told Barbara that it was her pleasure to represent her, but, now she was going home to celebrate the holiday with her family. \n\nLinda also announced she was leaving to go to Beverly to finalize plans for tomorrow. Barbara walked out of the courthouse and began walking toward her house. As she walked, she noticed only a third of the houses around the courthouse square were decorated with the Society's decorations. \n\nAfter her public revolt last year, the large majority of the homeowners opted to deny the Society. While they would privately decorate their houses to celebrate, gone were the days where they would be ordered to comply. Nor would the Society's members receive special privileges at their houses. Let them stand in line at the Port-A-Johns like everybody else.\n\nWhen she got to her house, she looked at John's house and saw no activity. She went inside to her house and undressed from the business suit she wore to court and changed into some comfortable panties and put on a simple sundress and sandals. As she was changing, the notes from a guitar floated up to her and a smile came to her face.",
        "When she went outside, John was in a rocker on his front porch casually picking notes to thread together. The scent of ozone was heavy in the air promising rain later on. Barbara walked over to John's front porch and sat in his swing watching John play. She leaned forward and took the ice cold longneck bottle and took a swig from John's beer.\n\n\"I'm sorry if I embarrassed you today.\" he quietly spoke.\n\n\"No, John, never apologize for loving someone.\" Barbara replied.\n\nShe continued to watch and appreciate his playing as the neighbors once again came out to listen to his music.\n\n\"Do you want to hear how it came out?\" Barbara asked.\n\nA fleeting smile came out on John's face, \"I already got word from Linda.\"\n\n\"I should never allowed her to get a cellphone after Richard cutoff our service.\" she joked, \"You know, you lied to me.\"\n\nThe implication caused John to stop playing and turn to look at Barbara.\n\n\"How?\" he inquired.\n\n\"You promised me I would not lose my house. Turns out I already did and didn't even know it.\"\n\nA sly grin came to his face, \"Barbara, did you really think I was going to keep your house?\" Once, the divorce is final, I will deed the house back to you and you will find the sum of four millions dollars in your bank account. But, last time I checked the amount was closer to five millions.\n\n\"How did you and mom get away with this?\"\n\n\"Once I moved here, I became good friends with your mom. She helped me find ways to channel my grief over Morgan. She was forever talking about you. She was so proud of you, but, she was worried about you marrying Richard. She complained how it was too late to get the two of you to sign a pre nuptial agreement. When she died, you would be at his mercy.\"\n\nJohn stopped and took a swig of beer and then continued.\n\n\"One day, she came in and asked for a favor. She asked if I would buy her house. I was upset that I was losing her as a neighbor and I told her so. She told me what she had planned was to make sure Richard never got his hands on her house or her estate. We would enter into a transaction, where I would, in fact, buy the house and pay her four millions dollars.\n\nAs the Circuit Clerk, she was responsible for keeping all the records up to date. She would skip a line in the land registry book and skip on the sequence of numbers of each title being recorded. After a couple of weeks, she would go back and retroactively record the warranty deed and file it buried under all the other transactions. She did the same thing in the computer records. That is why no one ever noticed, even as you probated her estate. For all purposes, she still owned her home.\n\nAs for the four million dollars, she withdrew it in cash, so there would be no paper trail and gave it to me to invest for her. That way, Richard would never find any money linking me and her.\"\n\nBarbara, sat contemplating all the details her mother went through to find a way to save her house. If she hadn't had the gift of being able to create a plan, Barbara, could very well have been homeless today. What would she have done, if John hadn't been where he was so many times. \n\n\"When you were up there telling us how you were just taking all those steps....just to get back to the woman you love. All the steps you took when you got back to keep her love... I was thinking how I wished I had your courage.\"\n\nJohn looked at her, \"Barbara, you do have that courage. You have been fighting against the odds and you've faced everything head on. You've taken every step you needed to take.\"\n\nBarbara stared at John and quietly said, \"No, I need to take one more step.\"\n\nShe stood up and reached her hands out to John. When she got him to take his hands into hers, she pulled upward, indicating that she wanted him to stand up. Then she led him into his house, up the stairs, into his bedroom. There she softly kissed his lips and afterward softly traced the path of her kiss with her finger against his lips.\n\nThen another kiss followed. She broke it off and looked at him as she caressed his face. She leaned in for another kiss, stepping toward him, joining her body against his. Now John's arms reached around her enfolding her. Making sure she would not escape. Barbara wasn't interested in trying to escape as John held her tightly against him.\n\nShe moaned as he slid his tongue against her lips, dancing around, inviting Barbara's tongue to join. Which she did as the tongues play with each other. John broke off the kiss and moved to capture Barbara's earlobe with his teeth. She gasped as the electrical stimulation went through her body. His mouth moved southward, nuzzling her jaw, lightly nibbling on her vulnerable neck. Her hands moved against his back, softly massaging him. He moved back toward her mouth and captured a kiss from her as he forced his tongue into her. Barbara could feel his hard erection against her, and she signaled her pleasure, by gripping his ass and grinding her pussy against him.\n\nThe foreplay escalated as his hands explored her body. Tracing her measurements as he relished each new discovery made. Then his fingers were on the straps of the sundress as he moved the straps off her shoulders, and the dress slid down to the floor. \n\nBarbara was pleased with the look of lust on his face as he moved to hold her again. His powerful talented hands rubbed against her tits and he gently pinched her nipples. That elicited a groan from Barbara as he sunk to kiss the exquisite nipples standing erect. Sucking and biting them as Barbara cradled his head to her. Running her fingers through his hair, calling his name.\n\nHer overexcited loins began secreting to accommodate the organ that would be merging into her soon. The aroma wafted in the air and John subliminally picked up on it. He moved to his knees in surrender to his passion and probed her panties with his tongue. Her moans encouraged him on as he moved the panties to join the discarded dress.\n\nBarbara had expected John to continue his slow methodical conquest, but, he surprised her as he drove his face deep in her pussy and slid his tongue against her clitoris. It was a welcomed surprise as she fell across the bed to enjoy the talented invader. Seconds after seconds, she built her release, until it erupted throughout her body.\n\nThe tremors continued to shake her as John continued to explore her vagina with his mouth. Barbara interlocked her hands with John as she came again. Still John showed no sign of stopping as he began to lightly nibble on her throbbing clitoris. That triggered her third climax as her body thrashed against his face.\n\nHe remained there lightly kissing all around as he sat up and removed his shirt and pants. Barbara reached for his hard organ to return the favor of oral stimulation when he stopped her. Just as nature had hardwired the elk, so had it hardwired John.\n\nThe only goal he had was to sink his cock into her warm pussy. He rolled her to her back and moved his dick against her slick lips. Then slowly he drove in filling her with his girth. She gasped in surprise as her body adjusted to him.\n\nThen minutely, he began to rock forward slowly increasing the tempo. Barbara legs cradled against him as he stroked into her. He kissed her as she whispered endearments to him. Onward he rode closer to climax as their bodies now glisten with the sheen of sweat on this summer night. Barbara could tell she was close to another orgasm and she urged John to join her. Hearing her request, he began driving deep and hard into her and they mutually built up. \n\nThen she was screaming, scratching his back, legs kicking out as he erupted into her. The sperm drove deep in four powerful streams into her womb seeking an egg to fertilize. John was busy caressing her body as she relaxed in the warm glow. \n\nWithin an hour, he was erect again and shifted her body into doggy position. Once again his dick slid into her inviting pussy as he gripped her hips and began fucking her, minute after minute, his body slammed into her as he power fucked her.\n\nThen once again he drove deep into her as his cock deposited more of his cum in her. He collapsed into her and then carefully moved her on top of him. Barbara placed her head on his torso and passed the time listening to his heartbeat, as her hand rubbed against the scar of the old wound. And she allowed the time to drift away as they listened to the hiss of the rain.\n\n\"You know it is already the Fourth.\" she addressed the quiet room. She felt his body brace and then relax into a sigh. \n\n\"I can't compete against a ghost, John. It isn't fair to you, or me, or Morgan. She loved you for what you are, and so do I. I owe you so much, John, most of all for showing me what life can be again. If I can only have one little piece of your heart, that will be enough for me. Just remember that I love you, as you love Morgan. I don't care if you spend your life loving her as long as you love me just a little bit. So mourn the woman that you love today and tomorrow, I'll be waiting for you.\n\nShe got out of bed and silently dressed and left, all the while knowing that John was watching her.\n\nThe Fourth rose on a glorious morning and Barbara sat on her porch watching her daughter supervise the activities of the group in her yard. Linda had volunteered to be a nurse's aide at Warrenton General Hospital. In that capacity, she offered the childrens' ward the use of the house for the holiday. Now she was busy directing the doctors and nurses as they set everything up for the children's and their families. Little patients sought her out to kiss her in gratitude for making this a pleasant day. Adults smiled and hugged her for making their child happy.\n\nAnother duty that Linda undertook was to be the guardian at the gate. Whenever a member of the Society sought to gain access, Linda would meet them and let them know they were not welcomed. Several times, the member would try to catch Barbara's eye in an effort to overrule Linda. Barbara would just stare through them until they left in defeat.\n\nAs expected, there was no sign of John Dupree as the day wore on.\n\nThen like a bad dream, her now ex husband Richard was at the gate arguing with Linda to gain access to Barbara. Barbara yelled to Linda and nodded her head to allow her father entry. Reluctantly, Linda stepped aside for her father as he wore a nervous grin approaching her.\n\nRichard began a long rambling mea culpa, which Barbara was vaguely listening to. She suspected that at the end of it would be a plea to allow him to come home. She was sure that once Kim realized she would not be owning a mansion, that she ended her relationship with Richard. She just hoped he would hurry up and finish so she could say no and get it over with, but still he droned on and on.\n\nThen a movement caught her eyes. She focused on John's front porch and gasped as John Dupree stepped out in public on the Fourth of July for the first time in ten years. People began to notice and they informed an ever growing number to divert their attention to John Dupree.\n\nJohn Dupree solely focused his attention on Barbara Ferrell, tracking her every move. Barbara got up, ignoring her ex husband and made her way through her yard toward John.\n\nIt was all a matter of balance, she thought. Maybe the Beatles were right when they sang that in the end, the love you take is equal to the love you make. Perhaps one day, that magnificent elk would lose to a hunter, or predator, or even a car; but now, he lived, and he would do so on his terms. She had no idea how much time was allotted to her or what the future held, but, she was adamant that she would spend the rest of her life loving one man as she continued walking.\n\nThe nearby crowd grew silent as she walked up John Dupree's steps on to his front porch and stopping just out of arm's reach from one another. She stared into his green eyes, looking at her in lust, in anticipation, in love. The vulnerability of his soul as he waited on Barbara. She knew her eyes were giving the same signals. \n\nShe continued to gaze at him with every bit of love she had, still just out of his grasp. \n\nAnd then...she took one more step."
    ],
    "authorname": "oshaw",
    "tags": [
        "divorce",
        "mansion",
        "running",
        "rain",
        "courthouse",
        "attorney",
        "daughter",
        "trial",
        "food",
        "truck"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/balance-13"
}