{
    "title": "Surviving the Rich-Sunshine and Sir Ch. 06",
    "pages": [
        "Tony's\n\nFour in the afternoon already. Rae knew Killian was annoyed. He'd been forced to sit in on a conference call with the other partners, and it lasted for well over an hour. After that one fire after another needed to be put out, and he ended up spending the majority of the day on his phone. Those moments when he interacted with her, his expression would soften and his eyes told her very clearly what he was thinking about. Otherwise she sat at her desk working on a to do list from Stella, occasionally wincing when she shifted, which elicited a smile every time. She couldn't believe Killian managed to make her feel good, almost giddy, about having a sore ass. \n\nHer phone buzzed and Killian said, \"Rae, I need your assistance.\"\n\nWhen she walked into his office he was rolling up his sleeves. \"Yes sir?\"\n\n\"Please take a seat on the chaise.\"\n\nShe walked over to the chaise and studied it, really hoping he didn't want her to pose in some hypersexualized position. He joined her and looked at her expectantly. \n\n\"What is it exactly you're looking for here?\"\n\nHe gave her a half smile and said, \"You're my inspiration sunshine-\"\n\n\"Please,\" she said, almost rolling her eyes.\n\n\"But you are, and have been before.\"\n\n\"That sounds stalkery.\"\n\n\"Stalkery?\" he said amused. \"I don't think that's a legal term.\" She folded her arms and waited, which only made him grin ear to ear. \"I win, more often than not, and one of my tricks is to pick a person I want to win for. Someone that inspires me to succeed. You have been that person on more than one occasion.\"\n\n\"Why would you want to impress me?\" she asked doubtfully.\n\n\"Not impress, win for. It's different.\"\n\n\"So the money to pay off my debts is really mine then,\" she said. \"Considering you wouldn't have it without my inspiring personality.\"\n\nHe raised his eyebrows in surprise and looked at her appraisingly. \"You'll no longer have an issue with gifts then I take it. Since you rightfully earned them.\"\n\n\"You have a response for everything.\"\n\nHe smiled and grasped her face. \"It's what I do.\" Kissing her forehead he said, \"Just relax and lounge, and let me win for you.\" \n\n\"Ok,\" she said, and shocked him by walking out of the office. When she returned, notebook in hand, his shock turned to amusement. \"This is how I'll relax.\"\n\nShe sat on the chaise, kicked off her heels and leaned back. Crossing one ankle over the other, she started reading through her things to remember list. Killian chuckled under his breath and pulled his phone out of his pocket. He put an earpiece in and his phone rang. She focused on her notes only half listening as Killian casually paced the room sparring with another attorney. She wasn't comfortable being an object, inspirational or otherwise, so she kept her gaze on the notebook and tried to pretend his eyes weren't on her. \n\n\"So I've been told,\" Killian said. \"But we both know your proof is a mirage, disappearing every time someone gets close.\"\n\nHe circled the chaise, his barbs cutting, and fired off at lightning speed. The predator was out in full force, the coiled power rolling off him in waves. He ran a hand along her cheek, the current created in his wake hot, cold, fire and water. She shivered, the current a rod of power coursing through her. His hands dropped to her shoulders and after a gentle squeeze, his fingers drifted to her neck and back. The languid touch was hypnotic, the discomfort syphoned away with every tender stroke. He moved around the chaise, his hands wandering over her body, the current rising from her to him and back. She read and reread an item a good ten times before giving up and closing her eyes. Killian crouched down and continued to explore, while not changing his tone in the slightest. There was no urgency or roughness, no lesson to be learned. His touch was gentle and tender, soothing and arousing. He paid attention to her responses, smiling when he elicited a deeper intake of breath or a sigh. \n\nThe light swirl of his fingers on the inside of her elbow was an explosion of pleasure that lit the bonfire between her legs. Her eyes flew open, and when he moved to other she fought the shudder, but he saw it. Victory and satisfaction crossed his gaze, and then he suddenly barked a laugh. \"If anything, those emails vindicate my client.\"\n\nHe leaned over and kissed the corner of her mouth. Light and silent, his warm breath tickled her skin. He egged his opponent on while looking over her face, his dark brown pools of power, liquid chocolate bleeding into his pitch black irises. Killian kissed the other side of her mouth, and then the center, coaxing and inviting, the tip of his tongue sliding along her upper lip. Within moments her lips were grabbing his, the passion simmering quietly, making it almost forbidden, like they were on the verge of getting caught. He'd talk and kiss her, talk and kiss, talk, kiss. She ran her own hands up his chest, the current flowing through them both. It felt like her hair and skin were rising, reaching for the ceiling, and where his fingers went, lightning strikes followed. \n\nAll at once Killian took her hand and stood, pulling her up with him. His eyes clearly told her to do the same, to feel every inch of him, to explore. She licked her lips and looked over his body, feeling smaller in the shadow of the king as he decimated another with fewer and fewer words. Unbuttoning his vest, she slipped it off him, then ran her hands up his stomach, across his chest, and back. Her fingers tingled and she walked behind him, following the lines and curves of his back. She reached the top of his pants and tentatively brushed her hands over each cheek. The whole situation was so surreal she wondered briefly if she was dreaming. A sly smile spread across her face and she grabbed his ass, giving it a good squeeze. He jerked a touch, obviously surprised and she moved down to his thighs, sliding the tips of her nails up and down, inside and around. Turnabout was fair play. Feeling the small tremors moving through him was highly satisfying, and she slid her hands down to his ankles and then dragged her fingers up the outside of his thighs to his hips. Pressing herself against him she ran her hands around to his inner thighs, the tips of her fingers barely brushing his fully erect cock. He inhaled deeply, and when she did it again a soft rumble reverberated across his chest. \n\nHe laughed and said, \"Don't growl at me Nathan. You bet on the losing horse. It's as simple as that.\"\n\nKillian grasped her arm and pulled around to face him. Loosening her blouse, he exposed her red lace bra and ran his fingers along the edges. Her own breathing deepened and she brushed her hand down the stiffness in his pants. He closed his eyes and she did it again adding more pressure. When she started to move to his legs he grabbed her hands, and guided them to his belt. She raised her eyes to his and he grasped her face, planting more sweet, silent kisses on her lips. Her heart racing, she undid his belt and pants, and stroked him through his boxers. His chest heaved and his mouth overwhelmed hers evoking a tiny noise of surprise in her throat. He smiled, and briefly touched a finger to her lips. Pulling himself free, he went back to caressing the top of her bra, just letting a couple fingers slip underneath.\n\nLooking into his eyes, she stroked him from tip to base, her desire to please him a turn on. The fire within his blazed and his hand slid from the bra to her neck and face, holding her firmly. She used both hands, stroking and squeezing him into a carnal state, his voice never wavering as he pummeled the other lawyer. She moved faster, tempted to get on her knees and take him into her mouth and excited that she wanted too. \n\nHe suddenly smiled, his expression victorious. \"I'm glad we could come to agreement Nathan. I'll have my people set up the meeting.\" The phone call ended and he started pushing her down. \"I won for you sunshine,\" he said thickly, as he knees hit the floor. \"We won.\"\n\nHe wrapped a hand around hers moving fast, while the other clenched her hair and tilted her face up. All her arousal and excitement vanished. She reacted instinctively. Wrenching her hands free she smacked his legs, knocking him off balance. Surprise flashed across his face, and he stumbled back as she scrambled away, clutching her blouse closed.\n\nIt was like a cold bucket of water had been thrown at him, and his first reaction was anger, but seeing her eyes seething and filled with revulsion stopped him short. He forced himself to calm and readjusted his pants. Rolling his neck, he took out the earpiece, dropped it on his desk and turned to Rae. \"Explain.\"\n\n\"Never do that to me.\" She crossed her arms protectively, but didn't say another word.\n\n\"Not good enough,\" he said. \"Not for the way you reacted.\"\n\n\"I don't want you jacking off on my face. Some women may not have a problem with it, some may even like it. I'm not one of them. I said there's kink I won't participate in, covering my face in jizz falls into that category. And honestly? Contract or not, you should have checked with me first.\"\n\nShe was truly upset and he wondered if there was a specific reason. Then again, maybe it was an act she flat out found degrading, some did. For him there something incredibly sexy about a woman on her knees, her face upturned, a canvas for him. But now Rae's walls were going up, the intimacy they'd spent the day building crumbling before his eyes. He stepped towards her and she backed away, keeping him at arm's length.\n\n\"You're absolutely right,\" he said. \"I got caught up in the moment and didn't think. I'm sorry for betraying your trust.\" What little of it there was, he added silently. She gave him a brief nod and then walked around the chaise to pick her notebook up off the floor. She reached down to grab her shoes and he said, \"Rae, we were enjoying each other, in so many ways.\"\n\n\"I'm glad you won,\" she said. \"But it's almost five and I-\"\n\n\"Not going to fly sunshine,\" he said, grasping her shoulders before she could escape. \"You don't leave at five on Mondays and you're not running away from me. You were enjoying yourself as much as I was. I could see it in your eyes and feel it in your touch. You went down on your knees, happy to do so.\"\n\nShe finally looked at him and said, \"And?\"\n\n\"What were you expecting would happen?\"\n\nShe gave him a withering look and said, \"Gee I wonder.\"\n\n\"So coming in your mouth is a turn on, but on your face isn't. I just want to make sure I don't offend you again.\"\n\n\"Not offend jack ass,\" she said, pulling away. \"Degrade. I will not be degraded by you or anyone. There's a big difference between oral and jacking off on my face, and if you can't see that you're not as smart as you think you are.\"\n\nHe held up his hands, fighting a smile. Her calling him a jack ass, and insulting him while admitting she wanted to please him orally was an honest to God turn on. \"Alright, the jack ass understands the difference. I will not make that mistake again. I promise Rae.\"\n\nShe eyed him warily for a moment and then nodded. \"Is there anything else you need?\"\n\n\"Yes,\" he said, taking her hand and drawing her to him. \"You.\" Before she could reply he kissed her, the tenderness and hunger reflecting what her fierceness and vulnerability inspired within him. Her stiffness melted away and he crushed her to him. They weren't done enjoying each other's bodies, not yet. Pulling the notebook from her hand, he threw it towards his desk, and in soft, swirling circles he stroked her inner elbow. She shivered and he kissed his way to her ear, the two sensations making her moan. \"I want to feel the velvety pocket of your mouth sunshine. I want what you were excited to give.\" He sucked on her earlobe and ran his hand down her back to her ass. He gave it a smack and then a rough squeeze. She yelped and jumped in his grasp. \"A little tender?\"\n\n\"Just a little,\" she breathed.\n\n\"You loved it,\" he growled into her neck, the vibrations making her tremble. He grasped her face in both hands and said, \"Get on your knees and spread them as wide as your skirt allows.\" \n\nHer chest heaved, the red lace barely containing her ample bosom. The switch in his demeanor ensnared her and she slowly knelt down. The fabric of the skirt was fairly flexible but she was still forced to pull it above her knees. She spread her legs a bit, and stared at the floor. He circled her a couple times, then crouched down behind her. Sliding his hands down her hips to her knees, he pulled them just a bit further apart. \"Did you fantasize about me sunshine? And all I could do to you?\" She didn't reply and he grasped her neck, resting his lips against her ear. \"Well?\"\n\n\"Yes,\" she whispered.\n\n\"So did I,\" he said, his tongue just barely teasing her ear. \"I have to warn you though, I like to go deep. I want it all, lips, mouth, and throat. Are you ready for that?\"\n\n\"Yes,\" she breathed.\n\n\"Yes what?\"\n\n\"Yes sir.\" \n\nExhilaration and lust surged through him, making his head spin. Hearing sir right before he was about to throat fuck her almost made him come in his pants. He expected her to say yes she was ready, not yes sir. Dominating a strong woman sexually was satisfying in so many ways, and for Rae to slide so naturally into submissiveness opened up a whole realm of possibilities. He stood and looked around the office, but nothing would do. \"Stay there.\"\n\nHe went to his closet, hoping it would be there. The coat he wore to shows was in the back, and hanging from the pocket was his black satin tuxedo scarf. He pulled it free and then knelt in from of Rae. \"I'm going to blindfold you sunshine. Is that a problem?\"\n\n\"Why?\" \n\n\"Trust,\" he said. \"We need to know we can trust one another. Do you trust me?\"\n\nHer eyes darted to the scarf and she said, \"Prove to me I can't and this ends today.\"\n\nThe challenge in her gaze sent his arousal through the roof. She slipped out of submissiveness as easily as she slipped into it. His estimation of her grew with every passing day. \"If we can't trust each other then there's no point going forward. Now, put your arms behind your back, hands together.\"\n\nHer gaze never wavering, she grasped her hands behind her back. He respected that strength by keeping his eye on hers until the scarf hid them from view. After he tied it, he took hold of her face and kissed her, his tongue going deep, preparing her for what was to come. Releasing her, he rose to his feet and admired the tableau before him. Rae's curls held down by the blindfold spilled over her shoulders, looking even blonder against the red of her blouse and bra. Her pale skin glistened as the heat of arousal and apprehension coursed through her. He could see her nipples erect through the red lace and he smiled. As he'd written the contract, he'd envisioned Rae on her knees waiting upon his pleasure, and now she was. \n\nHe slid his belt off and briefly considered securing her wrists. But it was too soon. The blindfold was enough of a start. He whacked his hand with the belt and she jumped, her chest beginning to heave. He did it again and she shook, turned on and unsure. He grinned, they were going to have so much fun together. He dropped the belt on a chair and took off his tie and shirt, leaving his undershirt on. Undoing his pants, he pulled himself free and grasped the back of her head. \"Taste me sunshine,\" he said, running the head of his cock along her lips. \n\nShe opened her mouth and let her tongue flick out just a touch, her hot breath a wave of pleasure that coasted all the way to his hips. He inhaled deeply, catching the smile hovering around her lips. She rolled her tongue around him and then took the head of his cock into her mouth. Her tongue swirled around him over and over again, curling and flattening, the pressure increasing with every go around. His chest heaved and a slight groan escaped. All at once she started sucking like he was a pacifier, her tongue still swirling.\n\nA rumble moved across his chest and he clenched her hair, the pleasure shooting down his legs. \"Sunshine,\" he hissed. \"Jesus.\" \n\nSuddenly she stopped and flicked him with her tongue, making his dick jump and twitch. He wasn't going to last long if he didn't take control. He grasped the knotted scarf, tightening his grip on her hair, and slowly pushed himself into her mouth. He watched her face closely for discomfort, keeping it slow and steady to last longer, to savor her. Pulling out he rested the head of his cock against her lips. \"Are you ready sunshine?\"\n\nWithout waiting for a response he drove his cock into her mouth, moving deeper with every thrust. The sensation of her lips sliding up and down his shaft sent shockwaves of pleasure coursing through him, and when he hit the back of her throat he almost came. Tilting her head up, he drove himself deeper down her throat, the silky softness a pleasure unlike any other. The moment Rae gagged he eased up, but only a little. She was deep throating, for him. His Rae, blindfolded, on her knees, and loving his cock pounding her throat. He always got what he wanted. Always. \n\n\"How wet are you sunshine?\" he growled. \"You love this don't do? On your knees pleasuring your...\" He pumped fervently the ecstasy roaring through him. \"What was it you called me sunshine? That's right.\" He whipped the scarf off and threw it, catching her gaze with his own. \"King of the mountain.\" Her eyes widened in surprise and he erupted, the satisfaction coupled with the pleasure lifting him to a state of euphoria. When she'd taken every last drop he stopped moving, his breathing short and ragged. Tightening his grip on her hair he watched her eyes as he softened. \"Of course I knew.\"\n\nHe released her and she deflated, breathing heavily. Fixing his pants, he crouched down in front of her. \"You can release your hands.\" Brushing her hair over her shoulders, he kissed her forehead. \"King of the mountain,\" he chuckled. \"The first time I heard you say it was in reference to another, but it wasn't long before the king above all others left your lips.\"\n\n\"Was there anything you didn't hear through that wall?\" she muttered. \n\nHe grinned and said, \"I never heard how hot you were for me. I had to figure that out on my own.\"\n\nShe rolled her eyes and hung her head, then whipped it back, swinging her curls so they cascaded over her shoulders and back. He couldn't stop smiling as he twisted a curl around his finger. \"Do you know how beautiful you are?\"\n\nShe wilted before his eyes, almost folding into herself. It astounded him to see such a radical change, and it wasn't vulnerability, it was an ingrained belief that she wasn't at all beautiful. The confidence she exuded walking the gauntlet of men at the Hillcrest had been an illusion, a part she'd played, and played well. Even he'd been fooled. That protective instinct swelled, and he wanted so much for her see herself through his eyes. He scooped her up in his arms and she let out a tiny noise of surprise. He kissed her head and carried her to the chaise, her discomfort palpable. Then it hit him and he felt like such an ass. \"You've never been held like this.\"\n\nShe shook her head and tried to almost shift her weight from his arms, but there was nowhere to go. He knew she hadn't always been a size eighteen. He'd seen photos of various times in her life, her mother loved posting them on social media, and they were always public. Rae had gone up and down the scale a few times, but regardless of her success in losing the weight, she felt like the invisible fat girl afraid the man holding her would feel it too. As if the weight was still there in phantom form. \n\n\"I think I should do this at least once a day then,\" he said, cuddling her closer.\n\n\"I don't need a knight in shining armor,\" she whispered. \"So don't pick up your lance and attempt to slay my demons. You can't.\"",
        "She was wrong, he didn't have a response for everything, especially that. He'd never been anyone's knight riding to the rescue, he didn't have the time or the inclination. For the most part he kept people at arm's length, a tactic he developed as a child. He'd never been involved in sports or clubs. He didn't party in high school or college, or involve himself in anything that would deter from his goal, and that goal had nothing to do with saving, it was about destroying. He honed himself into a weapon, one of value that others needed and were willing to pay exorbitant amounts for. On occasion he affected people's lives for the better, even took on some cases pro bono, but he wasn't a save the damsel in distress kind of man. That wasn't how he saw her either, he wouldn't be attracted to her if did. \n\n\"I like holding you. So we need to make you more comfortable with it. For me.\" He'd tackle the knight in shining armor thing another time. As much as he wanted too, he couldn't ignore her discomfort, so he reluctantly sat her on the chaise. \"Now, to confirm my suspicions.\"\n\nShe looked at him curiously and he slid his hand up her thigh. She closed her legs and he said, \"Don't be a bad girl sunshine. Wasn't one lesson enough for today?\"\n\nFor a split second he thought she was going to challenge him, wanting another lesson, but then she unclenched and looked to the side. Her thighs were slick, and the lace soaked through completely. He stroked her through the lace while his other hand snapped a garter. He did it again, a little harder, and her bosom pushed against the lace of her bra. Shoving her skirt up to her hips, he started unsnapping the garter. She trembled, aroused, nervous, and a touch scared. That fear was why he refused to lay her over the chaise and fuck her, even though that was what he wanted to do. \n\nGetting a fistful of her hair he kissed her, and pressed his fingers into her flesh, making her practically writhe in his grasp. Looking into her eyes he said, \"Lay back.\" She opened her mouth to protest and he shook his head. \"Do as you're told. Now.\"\n\nShe closed her eyes and with his help, slowly laid back, leaving her hips higher than her head. With her garter loose he pulled off her soaking panties and dropped them next to the chaise. She pressed her knees together and grasped the sides of the chaise, her knuckles alternating between red and white.\n\n\"Spread your legs.\"\n\n\"I can't,\" she whispered. \"I-\"\n\n\"I said spread your legs.\" His tone of voice left no room for argument, and she slowly spread her legs. He ran his hands over her thighs, tsking at the trembling beneath his fingers. \"Are you afraid I'll hurt you?\" She shook her head and he stroked her hips. \"Are you embarrassed?\" She didn't respond, but tension rolled through her. \"We're going to have to work on that sunshine. I love your body and enjoy looking at it.\" He licked one thigh then immediately moved to the other. \"And tasting it.\"\n\nShe practically jumped out of her skin and he said, \"I'm betting you've never enjoyed oral, if you ever allowed anyone the privilege.\" While he spoke his hands moved to those erogenous spots he'd already found, titillating her body while her mind warred with itself. \"You enjoyed pleasuring me. I will not be denied the same.\"\n\nHe didn't give her a chance to think, he caressed her folds, and leaned over blowing on her clit. She inhaled sharply and he did it again. Giving her a quick lick, he let his hot breath tickle her further making her hips twitch. He smiled and took hold of her legs, forcing them open wider. \"Time to come for me sunshine, like I promised.\"\n\nHe was merciless, using his tongue in place of his fingers. Rae squirmed in his grasp, the pleasure overcoming her discomfort. Her fingers brushed his hair and he thrust his tongue inside her. She yelled, curling her hands into his hair and he tongue fucked her without restraint. Her juices flowed and he licked her deeply, then sucked her clit into his mouth.\n\n\"Ahha! Please...I can't take it!\" Her back arched up, and he sucked harder, thrusting two fingers inside her. Her hips bucked, but he held her still, which only drove her crazier. Pressing his thumb into the flesh above her clit, he made her come, her cries of ecstasy echoing off the walls. With one final thrust, he pressed harder and bit down. Her whole body tensed and she screamed, her left leg shaking uncontrollably. \n\nKissing her thighs one more time he said, \"Don't move.\"\n\nHe went to his bathroom and splashed water on his face, cooling himself down. Drying off he grabbed a towel and walked over to the chaise, his Rae draped over it just as he'd imagined. \"My sunshine,\" he murmured. \"You came for me like a good girl. Did you like it?\"\n\nHe wiped her thighs dry and she whispered, \"Yes sir.\"\n\nHe fixed her clothing and smiled. \"I knew you would. Sit up sweetheart.\" He took her hands and helped her up, then slid a leg behind her and sighed. He shifted until he was resting comfortably, both of them leaning back, his chin pressed to the side of her head. Stroking her arms and shoulders, he kissed her forehead, reveling in the day. Nothing had gone as planned, and yet it was better than he'd envisioned. \n\nWinter meant the sun disappeared early and the lights of the mall and surrounding office buildings lit up the night. They both looked outside lost in their own thoughts, the warmth of their bodies almost insulating them from the world outside his office. He wanted to hold onto it. He wanted to take her home and explore her body thoroughly, but that wasn't part of the arrangement. \n\nKissing her head one more time he sighed. \"We should go, your wardrobe is waiting.\"\n\nShe sat forward, the instant chill a stark reminder of the empty bed waiting for him. He'd have to find a way for her to spend the night. It was an odd situation. He'd been the other man before, but it was a mutual affair of convenience. They had fun together, no strings otherwise. Rae was more than that, and he wanted more of her, and from her. He watched her adjust her clothes and fluff her hair, a small smile on his face. \n\nShe caught him and said, \"What?\"\n\nIf he told her she was beautiful it would only make her uncomfortable, so he said, \"I can't wait to see you in the blue polka dot.\"\n\nHer mouth twisted in distaste. \"Polka dot? I'm not really a polka dot person.\"\n\nHe chuckled and stood. \"You will be when you see it. Trust me.\"\n\nHe put his shirt back on, but left the vest and tie on the chair. Rae walked out to her desk while he shut down his computer and grabbed his coat and briefcase. When he saw her putting on her coat he suppressed a smile. He was looking forward to throwing that coat in the nearest dumpster.\n\n\"Ready?\"\n\nRae nodded and followed him to the elevator. The normally bustling offices were much quieter and the receptionist was gone for the night. They took the elevator to the parking garage and Killian put his briefcase in the trunk, then started for her car.\n\nShe stared after him surprised. \"You want to take my car?\"\n\n\"It makes more sense,\" he said. \"Why transfer the wardrobe twice?\"\n\n\"My car is old, runs like crap, and isn't the cleanest at the moment.\"\n\nHe smiled and said, \"I'll manage.\"\n\n\"Alright,\" she said, wishing she could clean the garbage out of the doors. They got to her car and Killian followed her to the driver's side. \"What are you doing?\"\n\n\"It's easier if I drive. I know where we're going.\"\n\nAre you one of those men who always has to be in the driver's seat?\"\n\nHe pinned her against the side of the car and ran a hand through her hair. \"You've enjoyed it so far today.\"\n\n\"Please,\" she said, rolling her eyes.\n\nHe laughed and kissed her, slipping the keys from her hand. \"It's just easier.\"\n\n\"Fine.\" She sighed, and walked around to the passenger side. Getting in the car, she waited for a snide remark or look of distaste, her car wasn't trashed, but it was dusty and in desperate need of vacuuming. But Killian gave no indication of what he thought as he started the car and drove through a series of back streets. Within minutes she was completely lost. They pulled into a small lot with a single brown brick building, obviously being stocked and readied for business.\n\n\"This place isn't open yet,\" she said. \"There isn't even a sign.\"\n\nHe turned off the car and glanced at the backseat. \"How much room do you have in your trunk?\"\n\n\"Plenty,\" she said.\n\n\"Let's go then.\" He smiled and got out, forcing her to follow.\n\nThe moment they hit the door it opened, and a woman in black pants and a blue blouse smiled and held her hand out. \"Mr. Laird, it's a pleasure to meet you, and you must be Ms. Ingram. Welcome.\" The walked inside and she said, \"I'm Nora, please forgive the mess, we're opening next week and still getting the place put together.\"\n\nA few people were unpacking bags and boxes, while two others wheeled out a rack thick with garment bags and a pallet filled with boxes. Rae looked at Killian and said, \"You can't be serious.\"\n\nHe smiled and said, \"You know better by now.\"\n\n\"I cannot accept-\"\n\n\"You can and you will. I told you it's a business expense and a necessary one. Now Nora, there was another item I was told you'd be able to procure for me. Is it on the rack?\"\n\nNora smiled and one of her people grabbed a garment bag from behind the counter. \"It arrived shortly before you did.\"\n\nKillian started taking Rae's coat off and said, \"You're going to love this.\"\n\n\"Ah, I see why you knew the sizing,\" Nora said, looking at her outfit. \"These clothes were designed for women like you Ms. Ingram, they accentuate all the right lines and curves.\"\n\n\"Thank y...\" Her eye widened at the coat Killian pulled from the garment bag. Ever since she was a kid she'd been taken with poet shirts, pirate shirts, and Victorian style jackets and coats. She'd gotten her dream jacket once, and it was stolen shortly thereafter. The style she loved wasn't cheap, and she'd always intended to replace the coat but never got the chance. The one in Killian's hands brought all that love back the first time she saw it worn into the Hillcrest. Black, it had an old soldier's top, with a row of black buttons and on one side and embroidery on the other, as well as embroidery down the outside of the sleeves and on the back. The coat flared a touch at the waist and was shorter in the front, ending mid-calf in the back. She'd instantly loved it. But it was way out of her price range, so she resigned herself to admiring from afar. \"How did you know?\" she whispered. \n\nKillian undid each one of the buttons himself and then held it open for her. \"I pay attention.\"\n\nShe slipped her arms inside, the softness wrapping her up in cozy warmth. Killian buttoned her up and turned her towards a mirror. She looked over every inch of herself never wanting to take it off. \n\n\"Thank you,\" she said. \"It's gorgeous, and I...\" She didn't know what else to say, she was completely overwhelmed. \"Thank you Killian.\"\n\nHe grinned ear to ear, his eyes bright with joy, and said, \"You're welcome.\" He pulled some if her hair over her shoulder, so it draped down the front of the coat. \"You make the coat beautiful Rae. I'm so glad you like it.\" \n\nShe could see a couple employees exchanging smiling glances at the display of affection in front of them, and she didn't care. She threw her arms around Killian, surprising him quite a lot. He laughed and engulfed her in his embrace. \"So I finally did right,\" he said. \"And all it took was a coat.\"\n\nShe let him go and said, \"It's not the same. The rest makes me uncomfortable for legitimate reasons, but this...\" She ran her hand down the front of the coat, still blown away that she was wearing it. \"I watched websites, hoping the price would go down. Then everything happened with Jimmy, and...\" Tears welled up in her eyes, but she couldn't stop smiling. \"You don't know what this means to me.\"\n\nHe brushed a couple fingers down her cheek and said, \"I love making you happy.\"\n\nNora cleared her throat and said, \"Would you like to see the clothes?\"\n\n\"That won't be necessary,\" Killian said. \"With your reputation I trust everything is in order.\"\n\nNora waved her employees towards the door, and they wheeled out the garments and pallet. They fit as much as they could into the backseat and trunk. When there were still boxes on the pallet, Rae closed her eyes and shook her head.\n\n\"Please have the rest sent to the address you have on file,\" Killian said. He palmed everyone some cash and thanked Nora for going above and beyond, promising to put the word out. She was beaming as she walked back into the store. She'd learned to cater to wealthy and their whims to great benefit, Rae was impressed. \n\nKillian took hold of her shoulders and said, \"From joy to discomfort in less than a minute. Legitimate reasons aside Rae, you cannot afford the caliber of clothing necessary for your position. I can. I proposed the job, so I'm providing the clothes. I'm not trying to insult you or make you feel bad, but your clothes are worn and it shows. You'd have to max out a credit card paying for an appropriate wardrobe. It's that simple.\"\n\nShe understood where he was coming from, she really did, but it still chafed. She longed for the day she could pay for things herself without wondering how. She nodded and he opened the passenger door. She sat down and he shut it, then walked around the car whistling. He slid behind the wheel and she checked her phone, surprised at the time. \"Back to the garage?\" she asked, wondering how she was going to explain the wardrobe to Jimmy.\n\nKillian looked at her thoughtfully and then glanced at his watch. Suddenly he smiled and left the parking lot, going the opposite direction from which they'd come. \"You're mine for a couple more hours,\" he said. \"I'm taking you to dinner.\"\n\n\"Where?\" \n\n\"A treasured secret known by few.\" \n\nHe was having too much fun, so she settled back and looked out the window, trying to figure out where they were going. He drove away from restaurant row, a stretch of road crossing multiple towns with every kind of cuisine imaginable available. The Hillcrest was located on it, as well as Jimmy's restaurant, although they were separated by about three miles. The suburbs were dense, one town bleeding into another, and then back again. Wealth and poverty sometimes shared the same street, the odds and evens determining on which side you fell. Killian turned onto a street with office parks that eventually became industrial parks. They crossed train tracks twice and then he turned into a parking lot that was as much gravel as it was pavement. An old neon sign with quite a few lightbulbs out proclaimed the place, Tony's Bowl and Lounge. From the state of the sign, building, and parking lot, she assumed Tony died long ago.\n\n\"A bowling alley?\"\n\nHe smiled and turned the car off. \"You don't like bowling?\"\n\n\"I'm not really dressed for it.\"\n\n\"Well, it's a good thing we're only going in for dinner then.\"\n\nHer confusion deepened, which only added to his amusement. He got out of the car, and she watched him walk around the front and then open her door. She just looked at him, waiting for the punchline, but he offered a hand instead.\n\n\"You're serious,\" she said, placing her hand in his.\n\nHe smiled and pulled her from the car. \"I'm surprised at you Rae. Judging this fine establishment based on the exterior.\" He threw her emergency blanket over the boxes in the backseat and locked the car. \"Come on.\" \n\nShe followed him to the entrance and he opened the door. Decade's worth of cigarette smoke and spilt liquor smacked her in the face, and the swirled carpet underfoot which she assumed at one time had been green and blue, was now dull brown and grey. The bowling alley was on the left, while the bar, pool tables, and lounge were on the right.\n\n\"The interior isn't much better,\" she whispered. \n\nHe chuckled and slipped his hand around her hers. Leading her past the bowling counter to the lounge, he bypassed the bar and took her to one of seven tables on a patch of worn, old wood that crackled under foot. It had to have been a dance floor at one time, but the cheap tables and chairs had, in some place, scratched deep furrows into the wood over the years. She hid a smile when he pulled out a chair for her at a corner table, and dropped his coat on the chair in the corner. More than a few heads turned their way, which wasn't at all surprising. They stood out. \n\n\"Do you have a beer preference?\" he asked.\n\n\"You mean you don't already know?\" \n\nHe smiled and said, \"Once you tell me, I will.\"\n\nShe held back the laugh and said, \"Citrusy wheat, but otherwise something light. I have to drive.\"\n\nHe nodded, and she watched him walk up to the bar completely at ease under the gaze of so many. The bartender greeted him by name and shook his hand, smiling warmly. He spoke to her for a couple minutes, and then she handed him two bottles of beer, plastic plates, and a stack of napkins. Rae chuckled under her breath, another surprising layer of Killian revealed. He walked back the table and she took the bottles so he could put the rest on the table and settle into his chair. Taking a sip of her beer, she studied him while he checked his phone. \n\nHe grabbed his beer and caught her watching. \"Why the studied glance?\"\n\n\"It just seems odd. You, in a place like this.\"\n\n\"I thought the hostesses at the Hillcrest googled all the regulars.\"\n\nShe shook her head and said, \"Rochelle did, for very specific reasons, but the rest rarely followed suit, and I never had the desire to pry into anyone's life.\"\n\nHe took a sip of beer and said, \"For specific reasons. That's a polite way of putting it.\"\n\n\"You took Rochelle out,\" she said, pointedly. \"She liked you, and was disappointed there wasn't a second date.\"\n\n\"And do you know why there wasn't a second date?\" he asked, relaxing back in his chair.\n\nHe was looking for a straight answer, so she gave him one. \"I'm guessing you figured out quickly she wanted a rich husband, your looks and charm were just bonuses.\"\n\nHe smiled and took her hand. \"You think I'm charming sunshine?\"\n\n\"Her word, not mine,\" she said, completely straight-faced.\n\nWith mock injury he said, \"Cruel. Besides, Rochelle got what she wanted. How is she?\"\n\nRae shrugged and said, \"From her Facebook posts, living the dream. Her husband is devoted to her, and they travel extensively. I'm certain she loves him, but it was the money she loved first, everything else came after.\"\n\nSuddenly she felt like such a massive hypocrite pain spider webbed across her chest. When she was younger, she used to judge women who married for money, believing them to be gold digging whores who made all women look bad. As she got older and struggled, and then really struggled, she stopped judging them for playing a system they had no hand in creating. She remembered her economics teacher saying a capitalist society would never be one with social, racial, or gender equality, not when the acquisition of wealth was tied to masculinity and status. He was a good teacher, and the more time that passed the more his words rang true. After all, money was the reason she was there with Killian. The pain in her chest spread, and she suddenly loathed herself so much she wanted to crawl into a hole and stay there. \n\nKillian's hand tightened around hers, the warmth and strength reassuring, or it was meant to be. The self-loathing had opened the Pandora's box of awful and everything she was doing ate at her so fiercely she could barely handle being in her own skin. When she tried to pull free, he wouldn't let her. \n\n\"It's not the same Rae.\" She kept her gaze focused on the scratched surface of the table and he sat forward. She closed her eyes and he grasped the side of her face. \"Please look at me. Please Rae.\" She opened her eyes and he caught the tear that escaped with his thumb. \"This is me,\" he said, gesturing to the bowling alley.",
        "\"What do you mean?\" \n\n\"My parents weren't wealthy, lower middle class, at best. When my mother left my piece of shit father, she worked three jobs just to keep us afloat. Once, I remember her scrounging change from every cushion inside our crappy apartment and car just to buy eggs out of the back of a truck. She could stretch an egg like you wouldn't believe, turn it into a feast. I worked like hell to get where I am, and I enjoy the wealth I've accrued. But the money doesn't change the fact that I was, and always will be, blue collar baby.\" She laughed a little at that and he smiled. \"I couldn't share this place with Rochelle, she wouldn't have gotten out of the car.\"\n\n\"I almost didn't get out of the car,\" she said, fighting a smile of her own. \n\nHe kissed her and looked into her eyes. \"But you did, and you won't regret it.\"\n\nThe genuine feeling for her tripped her up, and her smile wouldn't be denied any longer. He kissed her again, holding her face tenderly to his. \"Alright you two,\" the bartender said. \"Make room. It's hot so be careful.\" \n\nA steaming hot, square cut, pizza was set between them and Killian said, \"Thank you Deb. It looks delicious, as always.\" \n\n\"You're welcome Killian,\" Deb replied, smiling. \"Enjoy.\"\n\nKillian pulled two pieces of the bubbling pizza and put them on a plate for her, and then did the same for himself. He raised his eyebrows in excitement and dug into his. The smell of cheese, sauce, and spices made Rae's mouth water. She grabbed a piece, the cheese refusing to let go without a fight, and took a bite. Heat scorched the top of her mouth, but the explosion of flavors hit all the pleasure centers giving her that warm happy feeling only delicious food could.\n\n\"Oh my God,\" she said, taking another bite. She burned the roof of her mouth, but she couldn't stop, she didn't want too. \"This is heaven.\"\n\nKillian smiled while taking a bite, and half the cheese slid off. He tried to catch it, and only ended up dropping it in his lap. She laughed and then almost the exact same thing happened to her, but she managed to deflect the cheese to her plate, saving her skirt. \n\nAround a mouthful of pizza, Killian said, \"Karma.\"\n\nShe grinned and took a huge bite, burning her mouth all over again. She was going to pay for it later, but did not care. \"How did you find out about this place?\" she asked, grabbing her beer.\n\nHe wiped his hands and said, \"A client. He was extremely paranoid. Didn't want to come to my office, didn't want me to go to his, no restaurants, no parks, nowhere anyone could possibly recognize him. So we ended up here one night, and after watching a couple pizzas go by I ordered one.\" \n\n\"What happened to the client?\"\n\n\"His paranoia was warranted.\"\n\nShe paused, reaching for another piece, and looked at him taken aback. He kept a straight face for about ten seconds then broke. She smacked his shoulder and laughed along with him, then downed the rest of her beer.\n\n\"Want another?\" Killian asked. \n\n\"Just one,\" she replied, pushing herself up to go to the bar. \"What about you?\"\n\n\"No way sunshine,\" he said, planting a kiss on her lips. \"Allow the knight to get his lady a beer.\" He gestured towards the men at the bar and deepened his voice. \"It's a man thing.\"\n\nShe laughed all over again and dug into the pizza. Killian got two more beers from Deb and paid their bill. When Deb tried to give him the change he waved it away. She couldn't stop smiling and Rae knew, he made her night. Generosity was always appreciated, and remembered. He brought the beers to the table and they ate, drank, and talked, laughing with one another until the pizza was gone. \n\nWhen they got up to leave Deb came around the bar and gave Killian a hug. Then she wrapped her arms around Rae and said, \"He's a keeper honey. Do not let this one go. You hear me?\"\n\nRae nodded and said, \"Loud and clear.\"\n\nDeb looked satisfied with that and walked back behind the bar. Killian smiled at Rae and took her hand, leading her past the other patrons and out the door. They kept up with the conversation on the drive, and she laughed so hard she was crying by the time they pulled up behind his car. Killian left the car running and got out, his eyes bright as she walked around to the driver's side. He pulled her into his arms and kissed her deeply. \n\n\"The temptation to take you up to the office and ravage you is almost too much.\" He kissed her neck and held her pressed against him, the stiffness in his pants, poking her abdomen. \n\nIt was too late for anything like that, she knew it and he knew it. He may hate having to share her with her family, but that's how it was. Suddenly she got an idea and a smile spread across her face. She ran her hand down his chest to his belt and said, \"Give me your keys.\" He raised his eyebrows intrigued, and handed over his keys. She kissed him with the same passion, promise and warning he'd overwhelmed her with earlier and then rested a hand on his chest. \"Don't move.\"\n\nHis breathing deepened and he said, \"What are you up to sunshine?\"\n\nSmiling, she opened the door and turned off her car. \"Up to?\" She shut the door, grabbed a fistful of his shirt, and dragged him over to his car. \"Which is more comfortable? Front or back?\" \n\n\"That depends,\" he said, taking hold of her.\n\n\"Not this time oh king.\" She opened the door and shoved him inside. The Bentley was the only car he owned with a backseat, and she followed, impressed. \"Roomie. Good.\"\n\nShe smiled wickedly and locked the car, then slipped the keys into her pocket. Killian looked like he was seeing her for the first time, and she kissed his ear, thoroughly enjoying throwing him off balance for a change. \"This time you're coming for me.\"\n\nShe pushed his coat down, and kissed his neck while he slipped his arms out. Running her hand down his chest, she undid his pants and stroked him. He inhaled deeply, clenching and unclenching his hands. She knew he wanted to take control, but this time she refused to let him. She slid onto the floor between his legs, her hand moving steadily up and down his shaft, squeezing every time she reached the tip. Cum was already dripping and she enveloped him in her mouth, sucking the head of his cock with the same fervency she had before. His heavy breathing broke raggedly and his hips twitched. He gathered her hair to one side so he could watch, and she sucked as hard she could then let his cock pop out of her mouth. His breath caught in his throat, and she looked him in the eyes. Giving him that wicked grin, she used her hands, tongue and lips to bring him to the brink. She had skills of her own, and she wanted to please Killian. She wanted to send him home unable to stop thinking about her, and what she could do to him. \n\nHe moaned and tightened his grip on her hair. \"My sweet sunshine.\"\n\nLicking from base to tip, she relaxed her throat and swallowed more inches than she ever had before. She'd lost count of how many firsts and never befores she'd experienced that day, but it made her excited for the next one, and the one after that. \n\nUsing her hand where her mouth couldn't reach she increased her speed, sucking every time she reached the top. He clenched her hair so tight it almost hurt, and slammed his other hand against the front seat. His grunts and groans escalated, his hips rising to meet her lips. Her mouth was already filling and she took in more and more of him. \n\n\"Sunshine!\" tore through the car and he came.\n\nShe didn't slow, she sucked him dry, the euphoria over his pleasure driving her on. All at once he stilled her movements, tremors moving through him continuously. She let him slide out of her mouth and he took in a huge gulp of air, his head falling back against the seat. \n\nKillian released her hair and laughed. \"Jesus Rae. I...I...\" He laughed again, shudders still moving through him. He smiled at her appreciatively and said, \"I am a lucky, lucky man.\" She smiled in return, feeling victorious over flipping the script on him. He fixed his pants, and then pulled her into his arms. \"You surprise me everyday sunshine. I love that about you.\" \n\nShe snuggled into his arms, enjoying the feel of his heart pounding against her cheek. The car windows were fogged over and it almost made her giggle. She felt that ecstatic recklessness of youth where responsibility didn't go beyond paying rent and the bare minimum of bills, where getting up by ten to enjoy the beach before work was adulthood goals. He kissed her head and stroked her hair, his heart slowing and breathing returning to normal. For the first time in a long time she wished she didn't have to go home. But she did. \n\nDisentangling herself, she kissed his cheek and said, \"I have to go.\" \n\nHe sighed and pulled his coat on, then followed her out. She handed over his keys and unlocked her car. He opened the door for her and shut it after she got in. Adjusting the seat, she started the car and lowered the window. \"Thank you for taking me to Tony's. It really was the best pizza I've ever had in my life.\" \n\nHe crouched down and said, \"Finding hole in the wall places with delicious food is always a treat. Let's make it a mission, find places together.\" She smiled and he kissed her one more time before standing. \"Goodnight sunshine.\"\n\nShe shook her head, still smiling. \"Goodnight. Sir.\"\n\nHe grinned in return and watched until she was out of sight. \n\n\"The king of the mountain took me out for pizza,\" she said aloud. Suddenly a smile spread across her face. \"No, Killian took me out for pizza and left the king at the office.\""
    ],
    "authorname": "LucindaPaige",
    "tags": [
        "dominant",
        "submissive",
        "games",
        "oral",
        "romance",
        "blindfold",
        "love",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/surviving-the-rich-sunshine-and-sir-ch-06"
}