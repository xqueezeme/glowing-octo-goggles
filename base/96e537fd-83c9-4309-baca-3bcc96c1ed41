{
    "title": "Mr. Right? Ch. 09",
    "pages": [
        "Let me know what you all think. :) I live for feedback.\n\n---------\n\nFinals time was the one time when Staci regretted being a student. It was the only time that she was visibly agitated. She was stressed out to the max and incredibly irritable. Writing an essay for a final was no big deal. In fact, she had finished two of the three she had to write for her class finals before the long weekend. Her fingers could fly effortlessly over the keys and she could finish a 10-page paper in a matter of hours. But, with tests, it was entirely different. Her blood pressure always seemed to fluctuate, the tiniest transgression causing her to fly off the handle and raise her pressure up to the point of her head throbbing. Then she would have to spend time calming down so that she could concentrate again. It was unhealthy, she knew, and something her mother and her doctor warned her about, but it was something that she just couldn't control. It was a far-sight better than having panic attacks during her tests like she used to, well, in her opinion. \n\nMaia had once described Staci's finals behavior as her 'Dr. Jones and Ms. Hyde moments.' It was hard to argue with that, knowing herself as she did. One moment she could be laughing and enjoying someone's company, the next she was ripping them a new asshole. Her friends had finally given up hanging around Staci at all the day before a test, knowing that as soon as the test was over, she would return to her old, fun-loving self.\n\nAt the present moment, Staci felt like tearing her hair out or jumping out of her window. She had the study guide in front of her and she knew the material like she knew her phone number, but at that moment, she couldn't recall half of the things she learned in class. \n\nStaci's hands were buried in her hair as she was trying to remember Piaget's theory of development, something she had learned in undergrad, when the sound of her cell phone startled her out of her thoughts. Staci growled and snatched up the phone, flipping it open before she gruffly answered, \"What?\" \n\nMatt could hardly contain his grin. It seemed as if what Jesse had been telling him the day before was true. His Ana was as mean as a rattlesnake when she had a big test to take. \"Is that any way to answer the phone, Ana? What if it was your mother?\" \n\nStaci could hear the smile in his voice and it irked her. \"My mother wouldn't call me today. She knows better.\" \n\nMatt laughed. \"Apparently I don't know any better, angel. Maybe you should try to teach me. Hey, I know. We should play dress up. You can be the sexy schoolmarm and I'll be the devilishly handsome pupil that you can't resist. I'll even let you spank me with your ruler.\" \n\nStaci tried to block out the mental images that bombarded her. Most of them involved Matt with his pants down, bent over her desk, his ass cheeks reddened by her hand. He really did have a beautiful behind. \"What do you want, Matt? I'm trying to study.\" \n\n\"Let me in. I'm outside your apartment and I come bearing gifts.\" \n\nStaci stood and marched to her window, not really believing him. She peered out into the parking lot, spotting him standing beside his car with a picnic basket in one hand, cell phone in the other. \"What the fuck? I thought I told you not to come until tomorrow.\" \n\n\"I missed you, angel. I didn't get to wake up to your lovely face this morning and I realized I was missing out on something incredibly beautiful. I couldn't wait to see you again, so as soon as I got off of work, I drove up.\" \n\nStaci sighed. It was hard to be mad at Matt when he was saying such things, stressed or not. \n\n\"Besides, weren't you the one who was worried about seeing enough of me? I'll only stay as long as you allow, but I think you'll like what I've got in store for you,\" Matt added. \n\n\"You do realize I have a test tomorrow that I need to study for, right? The most you'll get is five minutes.\" \n\n\"Give me ten.\" \n\n\"I'm not bargaining with you. You'll get as much as I'm willing to give you and right now that's five minutes.\" \n\nMatt caught the serious tone in Staci's voice and decided to drop it. As much as he liked riling his Ana up, he was there to help her relax, not work her into a frenzy. \"So you're going to let me up? Great. I'll be right there, my angel.\" \n\nStaci closed her phone and watched Matt stroll confidently up to her door. His sandy brown hair being tossed about by the wind, his lips quirked up into a smug smile, his broad frame making her itch to be held. She was a sucker for Matthew Rosenbloom, that fact had become obvious. Staci wasn't sure that she would have let any of her friends up but there was something about Matt that made her want to let him come up into her apartment, and let him deep into her life. She wanted to be around him and soak in his presence, his voice, and his laugh. She wanted that more than anything, and it scared her. Staci pushed the button to open the front door and waited for Matt to arrive at her doorstep. \n\nMatt walked up towards Staci's apartment, reminiscing about the first time he climbed those stairs. That was the night that things changed between him and his Ana. She opened up to him, allowing him to taste her, to run his hands up and down her curves, and he loved every second that he got to experience his Ana that night. It was a shame that Kathy interrupted. Tonight, things were different. He wasn't looking to sleep with her, he wanted to soothe her worries away. \n\nAfter talking to Jesse about his Ana's finals behavior, Matt devised a plan to help her relax. If she could relax a bit, he knew she would be able to study better and feel more confident going into the test. He had packed up the essentials, stopped by the store to pick up a few more things on his way up to campus, and by the time he had pulled into the parking lot, he was ready. \n\nWhen he reached her door, a familiar sight greeted him. Staci stood there, her arms crossed, with that same steely look of contempt on her face that had greeted him the first time he came to her apartment. In fact, she had on the same silky pajama pants with the little hearts on it and a tank top that exposed a hint of midriff. It was like d\u00e9j\u00e0 vu and as such, Matt didn't see the harm in recreating the scene a little more. \n\nStaci looked up into his smoky gray eyes and knew that she was in trouble. Before she could react, his lips were upon hers and his tongue was pleading its case for entrance. He backed her into the apartment, closing the door with his foot, before whirling them around, effectively trapping Staci between himself and the door. The basket in his hand dropped to the floor as his hands made the familiar journey, under that flimsy tank top that drove him crazy, to cup her luscious breasts and tease her chocolate brown nipples. \n\nStaci gasped as his digits began to roll her nipples, pulling and teasing, a moan escaping to be swallowed by Matt's mouth. His tongue was in her mouth, exploring every nook and cranny before inviting her own tongue to do the same. Their lips met again and again and Staci couldn't even find the willpower to break away and bitch at Matt for interrupting her studies. She would much rather be kissed senseless than study anyway and besides, she wouldn't let it go too far. She could hear the little voice inside her head laugh at that thought, but she ignored it.\n\nMatt's mouth moved lower, nipping her neck and her shoulder, before it latched onto a nipple. His hands worked her tank top off and threw it over his head. \n\n\"Matt...\" Staci's breathless plea was answered with a soft bite on the side of her breast. \n\nMatt worked her entire tit over before moving on, his tongue playing in the valley between her breasts and then encircling her other nipple. Tonight, there would be no interruptions and Matt was glad for that. His hands almost met around her waist as he picked her up and settled her against the door. Staci wrapped her legs around Matt's muscular body, locking her feet behind him. \n\n\"Mmm, Ana, the things you do to me. You make me lose my mind when I'm around you,\" Matt murmured into her hair. \n\nStaci's reply was engulfed by the squeal that she let out as Matt's jean encased cock rocked against her clit. Her hands, shoved between their bodies, frantically undid the button on his pants and worked down the zipper, while his tried to pull her pajama pants down as far as he could manage with her legs positioned as they were. Matt's frustration built quickly and he ripped Staci's pants and her panties along the sides, exposing her to his eager ministrations. Her fingers wrapped around his cock while his stroked the outside of her wetness.\n\nStaci panted, hoping she wouldn't hyperventilate as he plunged two of his fingers inside of her. He twisted his fingers, playing her like a well-tuned instrument, wringing loud cries of ecstasy from her. Copious amounts of her juices coated his fingers and made him wish that he could taste her there, with his mouth or his cock. The longer her slim digits danced along his dick, the more desperate he became until he couldn't stand it. \n\n\"Ana, please.\"\n\nStaci was pulled out of her frenzy by the sound of his pleading. Her eyes shot up to catch his gaze, watching as the blue that signaled his arousal started to overtake the gray of his eyes. Oh. Shit. \n\n\"Please...God, please, baby. Shit. I need...\" \n\nHe didn't even need to say the words. She knew what he was asking. She continued to stare into his eyes, struggling with the decision momentarily. His fingers had stopped their probing and were now gripping her thighs, subtly adjusting her body for penetration. She could feel his desperation battling with his control and she knew it was a losing battle. Part of her wanted to hold out and make him wait longer, to not give it up to him so quickly in their relationship. The other 90% of her was screaming to let him in. Her body wanted him and her heart needed him. \n\nMatt groaned as he felt Staci rubbing his hard-on through the wetness of her pussy, back and forth, teasing him. \"Ana, please.\" \n\nShe gave him a cheeky smile before answering, \"Please? What would you like me to do?\"\n\n\"Stop teasing me.\"\n\n\"Oh, is that what you want?\" Staci giggled as she moved his cock away from her naughty bits and repositioned it back between their bodies.\n\nMatt thrust up against her, his dick sliding against her clit and causing a delicious heat to rise up through her body. He spoke over Staci's moans. \"Why you little...I want my cock buried in that sweet snatch. I want to watch you dance on my cock while you scream for me.\" \n\nStaci was panting again, his movements hadn't slowed and she was on fire. \"Do it...I want it. I want that too.\" \n\nMatt hiked Staci's body up and lined his dick up with her pussy. \"You sure, Ana?\" \n\n\"Fuck me, damn it!\" \n\nMatt thrust up into her waiting hole, burying his cock deep within her depths. It felt so good, he thought he would lose it right there. He could feel her pussy contracting, squeezing his pole. He was inside of his Ana and she was coming for him. \"Baby, it's so good. God, it's so good. Fuck.\"\n\nStaci couldn't answer, she was busy trying to muffle her screams against his shoulder. In the back of her mind she remembered that she was pressed against her front door and she had neighbors. She bucked against him and he started to move, his cock finding its rhythm as he pounded her cunt into submission. There was no doubt in Staci's mind who her pussy belonged to now. It was Matt's as long as he wanted it. And she told him so. \n\nMatt reveled in the sounds of his dick bottoming out in his Ana, the smack of his balls as they slapped against her ass, the intelligible babbling that followed her loud profession of his ownership of her naughty bits, his grunts and groans, and her screams. Now that he had her, he would never leave. She was his forever. \n\n\"Ana, tell me again. Who's sweet...oh, yeah...pussy is this?\" \n\nStaci tried to gather her thoughts. Matt was saying something, but she couldn't focus on his words with his dick hitting her spot as it was. Her answer was a keening cry, she was so close, she was going to come. \n\nMatt slowed his strokes, almost coming to a complete stop, pulling a moan of pure frustration from Staci's lips. \"Tell me again, angel. Who does this pussy belong to?\" \n\n\"It's yours, Matt. My fucking pussy belongs to you. Fuck me harder. Make me come,\" Staci called out, her neighbors forgotten. \n\n\"Don't you forget it, Ana. You belong to me now.\" Matt's devilish smile was paired with his renewed thrusts up into Staci's welcoming snatch. Her screams rose in a melodious crescendo before she came apart in Matt's arms, her orgasm overtaking her. \n\nMatt tried to hold on, but he couldn't fight off the churning in his balls caused by his Ana's pussy milking him. He came, sighing her name against her hair, his head resting on the door. His pumping slowed and then stopped. He listened to his Ana's huffing breaths as she tried to regain her composure. He let her slide down his body onto shaky legs before scooping her up into his arms. Matt carried her down the hallway to her bedroom and placed her gently upon her bed. \n\nStripping off his jeans and pulling off his shirt before joining her, Matt climbed onto the bed and cuddled his Ana against his chest. He laid with her like that for long minutes before speaking, taking time to soak in the feel of her pressed against him, her nipples grazing against the hard planes of his chest. \n\n\"Mmm. You are positively irresistible, Ana,\" Matt spoke into her neck. \n\n\"Well, I could say the same thing about you. I wasn't planning on letting you ravish me like that for at least another week. But, what can I say, you're very persuasive.\" \n\n\"I'm sorry, Ana. I didn't mean to come here and take you like that. I just wanted to feed you and help you relax.\" \n\nStaci laughed. \"Well, I think this is the most relaxed I've been all day. So I guess you've achieved your goal in that respect.\" \n\nMatt chuckled. \"So, was I amazing or what?\" \n\nStaci smirked. Of course he was going back to being cocky, but he deserved his props because he had put it down right. \"I'll admit that you were pretty amazing. Keep that up and you might get lucky every time I see you.\"\n\nMatt grinned and rolled over on top of his Ana. \"I'm feeling pretty lucky right now. How about it?\" \n\nStaci stared up at him incredulously. \"Really? Now?\" \n\nMatt ground his hard-on against her still exposed pussy. \"Really. I told you before, angel, you make me crazy. Every time I think of you and your sexy little body, I get hard. I think the brothers thought I was some sort of sex fiend last weekend, as much as I jerked it.\" \n\nStaci giggled. \"You're bad.\" \n\n\"Maybe I am, but you love it. So, how about it?\"\n\n\"I have to study, Matt. As much as I would love to feel you rock my world again, I've got to get back to work or I'll fail my test.\" \n\n\"You won't fail, you're way too smart for that, but I understand. Can I still stay for awhile or are my five minutes up?\" \n\nStaci cast a glance at the clock on her dresser. \"Your five minutes were up like 40 minutes ago. I'm surprised your legs held up as long as they did.\" \n\n\"You know, I'm a little surprised I lasted as long as I did. Your snatch is heaven and the way it was working over my cock was so fucking hot. But, now that you mention it, my legs are kinda stiff.\"\n\n\"Seriously? You dumbass, why didn't you say something? And how can you want to go again if your legs are all cramped up?\" \n\nMatt grinned lecherously down at his Ana. \"A man will go to many lengths to get inside of a beautiful woman, especially one as amazing as you. I'm feeling good enough to want to bury my cock in that sweet pussy of yours, that's for sure. And, if you're really concerned about my legs, you could always ride me, Ana.\"\n\nStaci rolled her eyes. \"I could, but I'm not going to right now. I'm going to get back to studying as soon as you stop trying to persuade me to have sex and get off of me.\" \n\nStaci started squirming, trying to get some leverage so she could slip from under Matt. Matt tried to ignore the way Staci's movements made him want to flip her over and take her from behind. He really wanted to let her study before he gave in to his body's demands again, but it was so hard to restrain himself. \"I can't wait to get in you again, Ana, especially when you writhe beneath me. Wanna take another study break in an hour?\"\n\nStaci felt her face heat as she stilled her movements and took notice of the throbbing member that was pressed so intimately against her. \"Well, now I think you're a sex fiend. Get off me. You can stay, but don't distract me. That means you'll have to put some clothes on when you leave the room.\" \n\n\"You find my body distracting?\"\n\n\"Hush. You know I do. Now, move it or lose it, buster. And you know what 'it' I'm talking about.\" \n\nMatt rolled off Staci and watched as she slipped from the bed. Her pajama pants and underwear slid down her legs, causing Staci to glare at Matt as she stepped out of them. She grabbed a new pair of pajama pants and slipped on a new top. \n\n\"I know. I'm sorry. I'll replace that pair of pajama pants and the panties too,\" Matt stated sheepishly as he hid his satisfied grin behind his hair. He liked ripping Staci's clothes from her body and would probably indulge in it again soon.\n\nStaci shook her head and walked towards the bathroom in the hallway by her room. Matt willed his cock down. How had his desire for a simple kiss turned into him humping her brains out against the door? Matt rubbed his eyes with the palms of his hands. He really was going to have to learn to control himself around his Ana or they'd never make it anywhere. He'd keep her naked and in the house for years. \n\n\"Hey, angel, are you hungry or do you want to wait for your snack?\" Matt called from the bedroom as he stretched out his legs. \n\nStaci was once again perched in front of her textbooks and study guide and for some reason, she didn't care that he was interrupting her right then. \"Later, babe. I want to get through some of this while I'm feeling mellow. You won't even want to be around after I get stressed in a few hours.\" \n\nMatt thought about this. \"When you start feeling really stressed, let me know. I've got something to help with that.\" \n\nStaci shook her head. Matt really was a sweet guy when she thought about it. She wasn't going to let him know she thought so because it would go to his head. \n\nStaci worked diligently on her study guide for a few hours, pleased at the progress she was making because she was so relaxed. She took a break to eat after Matt spread a blanket out on the floor and laid out a picnic lunch. He made sure to make her laugh and kept her mind off of her studies. She even let him wring another orgasm or two from her body as he devoured her pussy after exploring her smooth skin with his lips. \n\nAfter a few more hours, when night had fallen and Staci was starting to get wound up about her final, Matt pried the pencil from her hand and pulled her from the table. Before she could fuss at him, he kissed her into submission and laid her down on the same blanket he had used for their picnic. He pulled out the massage oils and rubbed Staci down until she was nothing but a puddle of flesh. And while she was spread out, luxuriating in the feel of his fingers stroking and kneading her tense muscles, he read to her from her study guide, occasionally asking comprehension questions that Staci easily answered. \n\nAfter Staci was content with the amount of studying she had done, Matt herded her into her room and into bed. He wanted to take her again, but he knew she needed rest before her test. So, he settled for burying his fingers in her hot snatch, bringing her to orgasm quickly, and watching as she drifted off to sleep after her climax. Matt sighed, happy to be able to fall asleep with his Ana in his arms. He would have to get up early so he could drive to work, but it was worth it to be next to his angel, to hear her deep breathing and the occasional soft snore that slipped out as she slept. ",
        "He was in love. There was no doubt in his mind now. He had only known her for five days and he was already head over heels? He let out a quiet snort. His old man had ended up being right again. Matt remembered that his dad had claimed that when a Rosenbloom male met his match in every way, his feelings and heart would get tangled up almost instantaneously and the desire to claim her and keep her would overwhelm him. Matt had laughed it off because he didn't believe in love at first sight. But, now he knew, it may not have been love at first sight, but there was that need to protect her, to claim her from the very beginning that he couldn't shake off. She was his match and he was going to keep her by his side no matter what. \n\n\"Ana, you're so wonderful. My angel, my sweet, I...\"Matt began in a voice barely above a whisper.\n\n\"Matt, stop mumbling to yourself and go to sleep. This isn't family share time. Save it 'til tomorrow,\" Staci grumbled. \n\nMatt laughed. He had thought about professing his love to her sleeping form to practice for the real thing. Apparently, his Ana was either a light sleeper or very good at playing possum. \"You're right. I'm sorry. Goodnight, Ana.\"\n\n\"Night, babe. Sleep tight.\" \n\n**** \n\nStaci could barely contain her excitement as her pen flowed almost effortlessly across the test in front of her. Because of Matt's help, she had been able to relax before the test and even that morning he had woken her up with a massage to keep her loose. She walked into the test feeling confident and where as before she would freeze up sometimes during her finals, this time, she finished without hesitation. Matt had worked wonders and she hoped that he would stick around so she could take advantage of his pampering more often. \n\nShe looked over the test to make sure she hadn't forgotten anything and once she was satisfied, she gathered her materials together and stood. Staci stretched upwards, working out the muscles of her back that had tightened while she was hunched over. With a smile, she handed in her test and walked out of the room, feeling free and excited because she was meeting up with Maia to get an update on her new relationship with Jesse and divulge some juicy tidbits of her own. \n\nShe walked across campus and settled on hanging out at an outside table by the student union until it was time to meet Maia. Because she had been so confident, Staci had finished well before she thought she would and now had time to kill. She decided to work on her paper, so she could finish it quickly. Matt was coming back up later that night and she wanted to be able to focus on him. Now that they had gotten their first time out of the way, Staci was looking forward to fucking Matt into submission. She shook her head at herself. One day she's claiming that she was waiting to have sex, the next she's being drilled against a door. Oh, how she was mistaken. \n\nStaci's lips curled into a half-smile as she sat thinking about all the deliciously naughty things that she wanted to do with Matt and to Matt. She was lost in a seriously sexy fantasy where Matt was begging for release as she teased him, when a voice broke into her thoughts. \n\n\"Hey there, Ms. Anastacia Jones. Long time and all that.\" \n\nStaci looked up and into a pair of warm blue eyes that were partially hidden by a mop of red hair. \"Jeremy Carter! What are you doing here? I thought you were done.\" \n\n\"Just out roaming campus. My flight doesn't leave until tomorrow. But I'll be back in two weeks.\" \n\nStaci nodded. She felt somewhat bad. Jeremy was the guy she was supposed to attend the Alpha party with before Kathy stepped in and convinced her to change her plans. And, although it worked out for her in the long run, she couldn't help but feel a little sorry for Jeremy. They had been flirting and hanging out with a group of mutual friends for a while before Jeremy had decided to go for it and asked Staci to meet him at the Alpha party. She knew he was probably planning on making his move that night, but fate stepped in. Matt had come through and swept her off her feet before Jeremy even had a chance to run his game. \n\n\"You want to sit down? I'm meeting Maia in a few, but I have time to talk if you want to,\" Staci offered. Maybe this would give her a chance to tell him that she was off limits. \n\nJeremy took the seat across from her, sweeping his long red locks back so he could get a better look at Staci. He had heard the rumor that Matt Rosenbloom was so far gone on Staci that he was tripping over himself and that they were now an item, but he wanted to hear it straight from the source. If he gave up and the rumor proved to be wrong, he would be majorly pissed. But, then again, if the rumor was true and Staci was taken by Matt on the very weekend that he wanted to lay his claim to her wonderfully curvy body, it would be a damn shame. \n\nHis eyes took in the way her hair fell over one eye before traveling down past her shoulders and the way her breasts seemed to suck him in before he caught himself and raised his eyes back up to hers. He could feel his entire face flush as he realized that she had caught him staring as well. \n\n\"Sorry, Staci. I can't help it. You're so beautiful, you know?\" Jeremy wished he was smoother, or could ignore it, but he didn't want to come off as a complete pig to the girl who had captured his attention. \n\nStaci fought the urge to giggle. Jeremy was adorable when he blushed, his fair skin turning almost as red as his hair. If Matt hadn't barged into her life, Staci knew that there was a good chance that Jeremy would have been her boyfriend right then. She was a sucker for redheads, after all, and his muscular swimmer's build and pert little ass didn't hurt either. \n\n\"Well, you sure know how to flatter a girl.\" \n\nJeremy tried to think of something clever to say, but he felt tongue-tied. That was one of the reasons he wanted to meet up with Staci at a party. What he wouldn't give for some booze right then. \n\nStaci took pity on him and changed the subject. \"So, how was the party this weekend? Did you have fun?\" \n\nJeremy cleared his throat. \"I did. It was a lot of fun. A couple of the guys were doing keg stands and then trying to see who could spin around the longest without falling over. It was pretty entertaining. Although, I must say, I probably would have had a better time if a certain beauty were there on my arm. But, as I heard it she was off at another venue, kicking ass and taking names.\" \n\nStaci laughed. \"Hardly. More like getting mauled by drunks and having to be saved from their attacks. Apparently, some guys don't handle rejection well.\"\n\n\"So who was doing the saving? Did Jesse swoop in to save his favorite girl from sure destruction?\" \n\nStaci shook her head. \"No, actually it was a guy named Matt. He's an alum who was in town for the weekend.\" \n\n\"Matthew Rosenbloom? That old hound dog was back in town? I bet he had a girl on each arm and another few chasing after him.\" Jeremy winced internally. \n\n'Sure, go ahead and make the guy sound bad just because he might be with your curvy beauty. You sound like a jealous ass.' Jeremy continued to beat himself up mentally. \n\nStaci quirked an eyebrow at Jeremy's familiarity with her new beau. \"Yeah, that knucklehead is the one who saved me. He's a nice guy underneath that dirty frat boy exterior. And I have it on good authority that he was able to successfully repel most of the girls chasing after him. Do you know him?\" \n\nJeremy nodded. \"Not really well or anything. He was a friend of my older brother. They were the same class year and in the same program. We've only met once...when we were both incredibly drunk, but my brother had some pretty crazy stories he liked to tell about his and Matt's escapades.\" \n\nThe conversation lulled for a second, the question that was plaguing Jeremy's mind was hanging in the air. Jeremy didn't know how to ask about it tactfully and Staci wasn't really itching to tell him, but it had to come out somehow. \n\nStaci knew that Jeremy brought Matt's name into the conversation because he probably heard that they were an item from someone who was at his lake party. They could beat around the bush all day or she could just tell him what he wanted to know. \n\n\"So are you two dating or was that just some wild rumor?\" Jeremy beat her to the punch. \n\n\"Yeah, he convinced me to be his girlfriend after chasing me around like I was the last piece of tail on Earth. He was persistent, I have to give him that,\" Staci answered. \n\nJeremy's bottom lip protruded in a pout momentarily before he sucked it back in and smiled at Staci. \"So, how serious are you guys? Are you just dating or are you in it for the long haul?\" \n\nStaci was almost shocked at Jeremy's forwardness, but then she remembered that was why she had liked him in the first place. He was direct, honest, and he wasn't afraid to tell Felicia that she was full of shit, which earned him many brownie points in Staci's book. \n\n\"We're as serious as we can be for a couple who started dating two days ago. We both agreed to be exclusive and we're going to see how things turn out between us,\" Staci smiled at the thought of just who was turned out the day before. Matt sure did know how to put it down. \n\n\"Damn, he beat me to it. That sucks. I wanted to be yours, you know. But, I can see that he means a lot to you already. That little secret smile of yours is very telling,\" Jeremy commented, leaning forward as if they were sharing secrets of their own. \n\nStaci stared at him like he had grown another head. Was it that obvious? \n\n\"It's pretty obvious, Staci. But, you deserve that smile. You deserve to be happy and if Matt's the man that can make you feel that way, so be it.\" Jeremy stood up and stretched his lithe body out, hints of his auburn happy trail peeking out from under his shirt. \n\n\"But if he trips up and makes a mistake, you let me know. I'll either knock some sense into him or pick up the pieces and show you how a man is supposed to treat a lady.\" \n\nJeremy gave Staci a quick wink before turning to walk away. He turned back around and walked to Staci's side, scooping her up in a tight hug and dropping a kiss on her forehead. \"I mean it. If he does anything, you let me know and I'll straighten him out.\" \n\nStaci leaned in briefly to return his hug before breaking away. \"Will do. I'm going to hold you to it. I can't do all the ass-kicking by myself.\" \n\n\"You do that.\" Jeremy smiled again and with a deep sigh of regret, he turned and walked off. It really was a damn shame that Matt got to her first.\n\nStaci smiled after him. He was a sweet guy. She hoped he would find someone special that would be worthy of his attention. As for her, unfortunately for Jeremy, she was stuck on Matt. \n\nStaci returned to working on her paper, relishing the quiet atmosphere. It didn't last long. \n\n\"Who was that guy?\" \n\nStaci glanced up, already knowing who the voice belonged to. She looked into an incredibly handsome face that held a pair of gray eyes that, at the moment, reminded her of granite, hard and unyielding, and a scowl that conveyed just how unhappy Matt was about the situation he just witnessed. Staci fluctuated between wanting to scowl back at him and laughing at him for being so possessive. \n\nMatt flopped into the recently vacated seat across from her, trying not to cause a scene or chase after the guy and beat his ass. How dare he put his lips on Ana? \n\nStaci continued to regard him with a wary eye. Then she smiled warmly at him, remembering that he was the reason she was feeling so good that day and she wasn't about to let him ruin it. \n\n\"Hey baby, enjoying your day so far?\"\n\nMatt crossed his arms and continued to glare. \"You didn't answer my question.\" \n\n\"You didn't answer mine either, but I'm feeling generous today. That was Jeremy. Now answer my question.\" Staci tried to hide her smile. Matt was so cute when he was being all angry, jealous boyfriend. That pout was adorable.\n\n\"I was enjoying my day immensely until I left work early to be with my girlfriend and surprise her, only to find her hugged up with some guy who thinks he can put his lips on her for some reason.\"\n\n\"It was a brotherly peck on the forehead.\" \n\n\"It was a KISS. He put his lips on you and he's lucky I didn't run over and rip them off. I know a guy on the prowl when I see one.\" Matt accented his words with a jab in the direction that Jeremy walked off in.\n\nStaci sat back and shook her head. \"Matthew, you are over-reacting.\" \n\n\"I wouldn't be over-reacting if you told me who that guy was and what he thought he was doing pawing you like that.\" \n\nStaci sighed. She could see the rage building inside of Matt. She watched, amused, as his face reddened. His angry face was almost as cute as Jeremy's blush. Now she understood why he pushed her buttons. As much as she hated to, she was just going to have to give him what he was asking for before he exploded. \n\n\"That was Jeremy Carter. We've known each other for a little while now. And he was a potential suitor until about five minutes ago when I let him know that he didn't have a chance because I was falling for a sweetheart in an asshole suit. I thought you were going to take that suit off today, but I see that instead you have paired it with your 'jealous douchebag' hat and your 'I'm-a-total-dumbass' tie. It's such a lovely ensemble.\" \n\nMatt sighed and dropped his head into his hands. He was never the jealous type before and the depth of his desire to lay claim to Staci's body and fight off any man that came sniffing around her was a little frightening. It must have been the Rosenbloom possessiveness kicking in. Plus, it was hard to manage his emotions when she was around since he was using most of his self-control to fight the urge to throw her over his shoulder and take her somewhere to fuck her brains out. \n\n\"Ana, I'm really sorry that I acted like a total jerk when I came over here. It's hard, you know. I mean, I spent so much time trying to get you to be mine and the thought of some guy trying to take you from me makes me see red. It kills me to think about not being with you.\" \n\nStaci heaved a sigh. Matt had his moments, but he really was a sweetheart. \"I understand, Matt. I do. I know how I felt when I walked into your room and found that floozy crawling on your bed. I wanted to choke her out and we weren't even officially dating then. But, just as I gave you a chance to explain the situation, I expect the same courtesy. Don't jump down my throat and pout because things look a certain way. Find out the facts, trust me enough to give me the benefit of the doubt. If I'm not interested in being with you anymore and I want to move on, I'll let you know face to face, not sneak around behind your back.\" \n\nMatt nodded. \"I'm a major ass. I really am sorry for being so gruff. So, how about I take you out to lunch off-campus to make it up to you?\" \n\n\"Negative.\" \n\n\"Negative? What?\" \n\nStaci giggled. \"I'm meeting Maia for lunch today. We're going to compare notes about how good the sex has been, how many orgasms we've had, and see whose guy has the biggest equipment.\"\n\nMatt's mouth dropped open. \"You're not serious are you?\" \n\nStaci's giggles evolved into full belly laughs at the combination of Matt's flabbergasted look, complete with a gaping mouth, and his response. She could feel tears start to run down her cheeks. \n\nMatt started to pout again. \"It's not that funny,\" he grumbled. \n\n\"No, I'm not serious. And, it's really funny to me. You look like a fish with your mouth opening and closing like that,\" Staci responded in between laughs. \n\nStaci eventually calmed down and regained her composure. They agreed to meet up with Maia and both go to lunch with her. Then they would head back to her apartment and hang out or make out, whichever struck their fancy. \n\nMaia, for her part, took it in stride, letting Staci know that she was going to call her later so they could dish on their respective guys. Over lunch they chatted and had a good time. Staci and Matt walked Maia to her next final and then drove over to Staci's apartment in Matt's car. \n\nMatt felt like the sight of his Ana's jean encased ass was hypnotizing him as she walked up the stairs in front of him. He was going to bend her over the arm of her couch and enjoy the sight of her ass as he crammed his cock into that sweet pussy of hers as soon as they got in the door. No chance for her to deny him and no mercy. He was going to fuck her hard and long. \n\nStaci turned to look back at Matt as they ascended the stairs. She could see the lust burning in his eyes, the fiery orbs seeming to almost be overtaken by the blue. She knew what he was thinking and she knew that as soon as she opened her door, all bets were off. Hopefully they'd make it past the door this time before her pants were off. \n\n\"Matt...\"\n\n\"Keep going, Ana. We're almost there.\" \n\n\"You know, I do have a paper to write.\" \n\n\"I know. I also remember you saying that it was due on Friday and you had all tomorrow to work on it. No more excuses.\" \n\nStaci tried to protest one more time, for the sake of appearances. \"Matt...\" \n\nShe didn't get any more out before she was hoisted over Matt's broad shoulder and carried the rest of the way up to her apartment. He took the keys from her back pocket and opened the door. He let her close it, since most of her was behind him, before he walked over to her couch. \n\n\"Ana, I hope you realize your entire afternoon and evening are shot. You're going to be spending it naked and on multiple surfaces around your place. Starting now.\" \n\nMatt stripped her quickly, throwing her clothes over his shoulder, and then disrobed himself. Staci drank in the sight of his body and felt her juices begin to flow. Before she could blink, she was looking at the floor of her apartment, the arm of the couch digging into her stomach and Matt's hands roughly massaging her ass. \n\nHe moaned and started mumbling incoherently, caught up in his arousal and his need to take his Ana and lay claim to her body again. His eyes traveled up her body, taking in her slim waist, smooth back, and graceful neck before he leaned forward, whispering into his Ana's ear. \"You seemed to have forgotten whose pussy this is. But don't worry, I'll remind you, over and over again. I doubt you'll have problems remembering after I'm through tonight.\" \n\nStaci felt his cock rubbing against the cleft of her ass and luxuriated in the way his body covered hers before his words sunk in. Oh. Shit. And those were the last two words that made sense to Staci for the rest of the day and most of the night, as Matt slid his penis deep inside of her and showed her just who he was and how efficient he was at staking his claim. Over and over again."
    ],
    "authorname": "angelicsounds",
    "tags": [
        "interracial novella",
        "interracial romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/mr-right-ch-09"
}