{
    "title": "Life after the Lottery Ch. 63",
    "pages": [
        "I am trying to work faster, I promise! Hang in there, more to come. Copyright LATL, 2019\n\nLife after the Lottery, CH. 63\n\nWe go look at limos\n\nLori and I were having dinner in town on Wednesday night discussing our upcoming trip on Friday.\n\n\"You want to come and stay at the house tomorrow, so you don't have to drive in so early?\" I asked.\n\n\"Since we are leaving at 4:30 in the morning that may be a good idea,\" Lori said. \"Is Samantha still going?\"\n\n\"She can't wait.\"\n\n\"Good.\"\n\n\"Next week plan on staying at the house since we have to be at the airport at 6:00 Friday morning.\"\n\n\"James, last week when I was at the house, I heard Samantha talking to Dawn about the four of you being married now. What is going on?\"\n\n\"Well, the four of us married each other Labor Day.\"\n\n\"How does that work?\"\n\n\"Dawn and I consider Amy and Samantha our wives now. It's working out very well.\"\n\n\"I see. How does that work with Dawn?\"\n\n\"Lori, I think you know how it works. We all have sex with each other.\"\n\n\"Dawn...and the girls...?\"\n\n\"Yes, they have sex with each other.\"\n\n\"I see. Sounds interesting.\"\n\n\"Lori, we all love each other very much. And, we all know that we can have some fun too.\"\n\n\"Hmmm.\"\n\nWe discussed our plans for the coming weekend and the next when we would be going to California. About 8:00 we finished and Lori went home while I headed back to the house. When I got there, I found the girls out back in the pool.\n\n\"Did you two get everything set up?\" Dawn asked.\n\n\"Yes, she is going to spend the night tomorrow so we can leave early.\"\n\n\"Great,\" Samantha said.\n\n\"We will be getting up very early, Samantha, so make sure you get some sleep.\"\n\n\"I'll go to bed when I get home from my lab.\"\n\n\"Uh, huh.\"\n\n\"Join us.\"\n\nI took my clothes off and got in the pool with them until about 9:30.\n\n*****\n\nDawn and I were showering before we went to bed.\n\n\"Sam said she told you that Lori is probably more into girls,\" Dawn said.\n\n\"That's what she said.\"\n\n\"I don't think she is totally into women.\"\n\n\"We have a busy weekend ahead of us.\"\n\nWe had dried off and gotten in the bed, and I turned the lights off.\n\n\"Wait!\" I heard Amy yell from the hall.\n\nI turned the lights back on, and she came in with Samantha, and they got in bed with us.\n\n\"Okay,\" Amy said.\n\nI turned the lights off, and Samantha rolled toward me and laid her arm over my chest.\n\n\"Do you two want to sleep in here all the time?\" Dawn asked.\n\n\"Not all the time,\" Amy said.\n\n*****\n\nThursday morning we were up, and Amy was heading out to school after breakfast. Sherri and Brenda were still meeting with Linda all week.\n\n\"Is it okay if we sleep with you every night?\" Samantha asked.\n\n\"Of course, it is,\" I said. \"The bed is big enough.\"\n\n\"Dawn?\"\n\n\"Sure, you know it is, but, I think we should respect that one of us may want some alone time with each other,\" Dawn said.\n\n\"Okay,\" Samantha replied.\n\n\"What do you need to have ready for next week?\" I asked Samantha.\n\n\"I'm good. I have a biology test Wednesday.\"\n\n\"What about Monday?\"\n\n\"My afternoon class, but I can skip it.\"\n\n\"We will be back by then,\" I told her.\n\n\"How long of a drive is it?\"\n\n\"About five hours,\" I said.\n\n*****\n\nAmy came in about noon.\n\n\"This Anatomy class is killing me,\" she said as she sat at the bar.\n\n\"You have a whole year of it,\" Dawn told her.\n\n\"I know, but looking at pictures and trying to learn all the muscles and things is hard.\"\n\n\"I thought your class was going to spend time in the cadaver lab?\"\n\n\"We were supposed to, but they said it was full of med students.\"\n\n\"Oh...really,\" Dawn said.\n\n\"That is what they said.\"\n\nDawn picked up her cell phone and called someone.\n\n\"Hi, President Wells, this is Dawn Smith...\"\n\n\"I'm doing fine, thank you. I just found out that my graduate nurses are being bumped from the cadaver lab by the med students...\"\n\n\"I see...so what you are telling me is my nurses are not a priority? I see...\"\n\n\"So get some more dead bodies...\"\n\n\"I don't need your doctors to cut them up...I'll do it...\"\n\n\"Oh, I believe I can...\"\n\n\"The cadavers cost too much?...oh...I don't think they cost $100,000,000 do they, President Wells?\"\n\n\"Yes, I would...\"\n\n\"Send the bill to the med school...\"\n\n\"That will be fine as long as my nurses have their own cadavers by next week. Yes, I think two will be enough. Thank you, President Wells.\" Dawn hung up.\n\n\"Fucking, dick head.\"\n\n\"Did you just hold Linda's money over his head?\" I asked.\n\n\"No, actually, I held him by his balls.\"\n\nAmy snickered.\n\n\"Dawn...\"\n\n\"It wasn't him, he said they got two cadavers in, and the med students commandeered them. He didn't want to buy two more,\" Dawn said.\n\n\"Are you going to carve them up?\" I asked.\n\n\"Sure, why not. I don't need a doctor to do it.\"\n\n\"Yuk,\" came from Amy.\n\n\"Yuk, my ass, young lady! You and the rest of the nurses will be doing most of the cutting,\" Dawn told her. \"I'll just be pointing.\"\n\n\"What if the med students steal these?\" Amy asked.\n\n\"Then we will have some fresh bodies to practice on!\"\n\nAmy laughed.\n\n\"It won't happen, I'll make sure of that,\" Dawn said. \"Tell your class and teacher you will have a real lab from now on. If they want to catch up some nights, let me know if your teacher can't make it.\"\n\nThe washing machine buzzed and Dawn went to check on it.\n\n\"Does she really know how to cut up a dead body?\" Amy asked.\n\n\"Oh, yes. She used to go to labs in the summer where they did that.\"\n\n\"Yuk.\"\n\n\"You better be careful, or I know where you and your sister will be spending your summers.\"\n\n\"Sam would love it.\"\n\n\"You better learn to like it.\"\n\n\"I don't have a problem with a live body.\"\n\nI started fixing us some sandwiches when Samantha came in.\n\n\"Good, you can eat with us,\" I said.\n\nShe came and sat at the bar with us. Dawn came back from the laundry room and sat.\n\n\"Did you really spend your summers cutting up dead bodies?\" Amy asked.\n\n\"Sure did,\" Dawn said. \"I even worked part-time in the Medical Examiner's office.\"\n\n\"That sounds cool!\" Samantha exclaimed.\n\n\"You would say that,\" Amy said.\n\n\"Dawn, why didn't you just become a doctor?\" Samantha asked.\n\n\"Economics. If we hadn't won the lottery, I would still be paying off nursing school.\"\n\n\"Oh.\"\n\n\"But, Sam, if that is something you want to do, then do it. Money is not a problem,\" I said.\n\n\"Okay. Where did you go to cut up bodies in the summer?\" Samantha asked.\n\n\"The university has labs in the summer for med students that are falling behind.\"\n\n\"Can I go to one!?\"\n\n\"After you have had your year of Anatomy and Physiology.\"\n\n\"Rats!\"\n\n\"You're sick,\" Amy said.\n\n\"Or...you can convince me you would know what you were doing,\" Dawn told her.\n\n\"Deal!\" Samantha exclaimed. Amy frowned at her sister.\n\nWe all ate lunch for a while and talked.\n\n\"I'll be home early tonight, we have a lab test,\" Samantha said.\n\n\"Take your time,\" Dawn said.\n\n\"They let me and Rick start first, so we don't have to wait on everyone.\"\n\n\"I remember those days,\" Dawn said.\n\n\"Did you fuck up the curve too?\" Samantha asked.\n\n\"Yes!\" Dawn said, and they laughed.\n\nAmy and Samantha sat in the den and talked and studied until Samantha left at 5:30 to get an early start. Dawn and I had been washing clothes all afternoon.\n\nDawn dropped a load of clothes on the sofa next to Amy.\n\n\"You better be studying since I am washing your clothes,\" Dawn told her.\n\n\"I am. I have a test tomorrow.\"\n\n\"Come by my office after your class in the morning,\" Dawn told her. \n\n\"Are you going in early?\"\n\n\"Yes, I need to put the word out that nobody touches my bodies,\" Dawn said. \"Oh, if you want some advice, where some long underwear under your scrubs when you go to the cadaver lab, it's cold in there.\"\n\n\"I don't have any.\"\n\n\"Stop tomorrow and pick up some. Get a pair for your sister too.\"\n\n\"Where can I get them in the summer?\"\n\n\"Go to the place you get your scrubs, they will have some. A lot of nurses wear them in the operating rooms.\"\n\n*****\n\nAfter the three of us ate dinner, Amy took her computer and went upstairs.\n\n\"She seems to be having to study hard,\" I said.\n\n\"She is just getting back into the swing of things. Her instructors say she is doing very well.\"\n\n\"Are you checking up on her?\"\n\n\"Yes. It's hard starting graduate school.\"\n\n\"I talked to John yesterday, he wanted to make sure Samantha was keeping up in school since she has been in several of his surgeries,\" I told Dawn.\n\n\"Sam is fine...she is so smart.\"\n\n\"She reminds me of someone,\" I said.\n\n\"Who?\"\n\n\"You. Do you regret not going to med school?\"\n\n\"No. If I had, I couldn't be doing what I am doing now. Everything works out for a reason.\"\n\n\"I guess, but I don't have ancestors to tell me that,\" I said.\n\n\"Do you have regrets?\" Dawn asked.\n\n\"I wish I could still have a clinical practice, though I had one for a few years, now I can teach more effectively.\"\n\n\"Is that what you want to do now?\"\n\n\"As soon as things settle down I want to get back to teaching and counseling students.\"\n\n\"Any other regrets?\" Dawn asked.\n\n\"I don't guess so.\"\n\n\"Are things going to settle down soon, James?\"\n\n\"By spring the new businesses should be up and running themselves.\"\n\n\"I hope so.\"\n\n\"I'm sorry I have been so busy. I started too many projects.\"\n\n\"That's okay, they just came up. What about the men's store?\"\n\n\"As soon as we get back from the limo visits, Linda and I are going to get that underway. I think she is wanting to get involved in it.\"\n\n\"I thought you and Sam were going to go in with that guy from New York?\"\n\n\"We are, but Linda wants to make sure it is upscale like her store. I'll let her run with it if that is what she wants to do.\"\n\n\"Good. I don't want you tied up with that next year.\"\n\n\"Have you got plans for next year?\" I asked.\n\n\"I don't know.\"\n\n\"You don't know because you are waiting for an answer to something?\"\n\n\"Maybe. I don't know what this change is that is coming.\"\n\n\"Honey, is it something big?\"\n\n\"I don't know yet.\"\n\n\"I'm sure whatever it is we can handle,\" I said.\n\n\"I hope so.\"\n\nLater, Dawn went upstairs and came back with her portable and sat on the sofa while I did some reading. She was quiet as she typed until Samantha came in about 7:30.\n\n\"How did you do?\" I asked.\n\n\"I'm sure I aced it. I didn't see Lori's car?\"\n\n\"She will be here about 9:00,\" I said.\n\nSamantha sat down next to Dawn and looked over her shoulder.\n\n\"What are looking at?\" She asked Dawn.\n\n\"Just some research,\" Dawn said and closed her computer. \"How did you do on the test?\"\n\nSamantha looked at Dawn for a moment.\n\n\"I did fine.\"\n\n\"Good. Get some sleep tonight.\"\n\nDawn put her computer on the table and got up and went to the kitchen and got a glass of wine and came back a few minutes later.\n\n\"How did you do on your test?\" She asked Samantha as she sat down.\n\n\"I did fine...\"\n\nDawn sat and sipped her wine as Samantha looked up at me. I looked at Dawn and knew her mind was someplace else.\n\nA bit later Dawn picked up her computer and went upstairs.\n\n\"Is she okay?\" Samantha asked.\n\n\"I think her head is someplace else.\"\n\n\"It must be.\"\n\nAmy came down about 8:30 and joined us.\n\n\"What's Dawn doing?\" Amy asked. \"She is in her study upstairs with a bunch of books out going through them. I stopped and asked, but she acted like she didn't hear me.\"\n\n\"You two, Dawn told me her ancestors told her a change is coming. She doesn't know what it is, and I think it is troubling her.\"\n\n\"What does a change mean?\" Amy asked.\n\n\"One time when she said they told her a change was coming, we won the lottery a few months later.\"\n\n\"Did she know that was what it would be?\" Samantha asked.\n\n\"No. She told me that a few months before...before you two came into our lives, but she said that is not what it was.\"\n\n\"Is that why she needs to go back to the reservation?\" Amy asked.\n\n\"I guess. Her great-grandmother knows something.\"\n\n\"What is it?\"\n\n\"Dawn has to find that out herself. Listen, don't quiz her about this, she has enough on her mind right now,\" I said.\n\nJust before 9:00, Lori buzzed herself through the gate. Samantha went to the door and waited for her.\n\n\"Hi, Lori,\" Amy said when she came in.\n\n\"You want some wine?\" Samantha asked.\n\n\"Sure.\"\n\nSamantha got her some wine, and we all talked until about 10:00.\n\n\"Lori, I need to get Samantha and me to bed,\" I said.\n\n\"No problem.\"\n\n\"Let me show you to the bedroom down here,\" Amy said and got up and led Lori to the big bedroom.\n\nSamantha and I headed upstairs. Dawn was still in her study when I walked into it.\n\n\"What are you working on?\" I asked.\n\n\"Doing some research,\" she said as she closed her books. \"Is it time for bed?\"\n\n\"It's 10:00. I thought I would get Samantha to bed early.\"\n\n\"You too.\"\n\n\"Are you coming?\"\n\n\"Yes, I need to be at the school early before the med students have their morning lab.\"\n\nDawn got up from her desk and walked out of her study, and I followed her to our bedroom. Samantha was sitting on the bed, waiting. Dawn and I got undressed and got in the bed. Samantha got in next to Dawn. Amy came in a few minutes later and got in next to me, and I turned off the lights.\n\nAbout 15 minutes later...\n\n\"Sam, what are you doing?\" Dawn asked.\n\n\"Nothing.\"\n\n\"I know you mean well, but that is not polite,\" Dawn said.\n\n\"Sorry.\"\n\n\"Honey, being concerned about how I feel is one thing, but trying to dig deep into my feelings...you shouldn't be doing,\" Dawn said.\n\n\"Sorry.\"\n\n\"Go to sleep,\" Dawn said.\n\n*****\n\n\"Time to get up,\" I heard Dawn say.\n\nI hadn't heard the alarm go off.\n\n\"I turned the alarm off so it wouldn't wake Amy,\" Dawn said.\n\n\"Were you up all night?\"\n\n\"No. Let me wake Sam up, and you can get out on this side. Sam, wake up.\"\n\nI heard Samantha groan.\n\n\"Up.\"\n\nSamantha finally set up as I turned the lights up a little.\n\n\"Take a quick shower and wake up,\" Dawn said as she got out of the bed.\n\n\"Come on,\" I told Samantha as I got up.\n\nThe two of us took a quick shower and were drying off.\n\n\"What were you doing last night?\" I asked.\n\n\"Nothing.\"\n\n\"Sam...\"\n\n\"I was trying to see if I could tell what was going on in Dawn's head.\"\n\n\"Don't do that. I don't even do that.\"\n\n\"Sorry.\"\n\nSamantha headed to her room to get some clothes while I got dressed.\n\n\"I went and checked on Lori, she is up,\" Dawn said as she stood there naked.\n\n\"When we get back, make sure you talk to Samantha. She is concerned about you.\"\n\n\"I will. Be careful.\" Dawn kissed me and got back in bed with Amy.\n\nI got dressed and turned off the lights on my way out of the bedroom.\n\nWhen I got downstairs, the light was on in the big bedroom. I walked to the door, and Lori was packing her bag.\n\n\"You want some breakfast?\" I asked.\n\n\"Not this early.\"\n\n\"Okay, we will grab something on the road. Samantha doesn't like eating early either.\"\n\nSamantha came down a few minutes later.\n\n\"I forgot to pack my makeup bag,\" she said as she held it in her hand.\n\n\"Grab Lori's bag and take it to the Escalade.\"\n\n\"Good morning, Samantha,\" Lori said as she came out.\n\n\"Let me take your bag.\"\n\nSamantha went out the front door.\n\n\"We'll get some coffee,\" I said. \"Did you sleep okay?\"\n\n\"Yes, that bed is huge, and I love the silk sheets.\"\n\n\"Did you bring your computer?\"\n\n\"I need to get it out of my car.\"\n\n\"We are packed,\" Samantha said, coming back in.\n\n\"Do you have your computer?\"\n\n\"Do I need it?\"\n\n\"Yes.\"\n\nSamantha grabbed her computer and stuck it in her computer bag.\n\n\"Let's go,\" I said as I grabbed my computer bag.\n\n\"I'll sit in the back so you two can talk,\" Samantha said.\n\nWe all got in the Escalade and headed out and stopped at the gas station before we got on the interstate and filled up and grabbed some coffee.\n\n*****\n\nAbout 6:00, we went through a McDonald's and grabbed some breakfast and got back on the interstate.\n\n\"Samantha, look in the back, there are some rolled up papers,\" I said.\n\n\"This long roll?\"\n\n\"Yes. Hand it to Lori.\"\n\nSamantha passed the roll up to Lori.\n\n\"Lori, unroll that, it is a drawing of a stretch limo.\"\n\nShe worked at unrolling the drawing.\n\n\"I got that back from Sam, and he should have made some notes on it about where he thinks cameras should go. See what you think.\"\n\nLori looked at the drawing while Samantha looked over her shoulder.\n\n\"On this eight-passenger, he has a camera marked above the driver's glass, and one above the backseat. Are they wide angle enough to get everything?\" Lori asked.\n\n\"Yes. Where did he put the microphones?\"\n\n\"It looks like he has them next to the cameras.\"\n\n\"What is this upfront?\" Samantha asked, pointing.\n\n\"We are going to have them mount a small LCD monitor up front.\"\n\n\"So, you can watch?\" Samantha asked.\n\n\"Sure,\" I said.\n\n\"I hope the driver keeps his eyes on the road,\" Lori said.\n\n\"Once the screen is split and has both cameras showing on it, it will be pretty small. It is just to make sure the cameras are working,\" I said.\n\n\"Where is the recorder?\" Lori asked.\n\n\"In the trunk. We think the one we are going to use is a little too big to put up front. I have one in the back so we can get some ideas.\"\n\n\"James, what is the cost for the video setup?\" Lori asked.\n\n\"Sam is suggesting some high-end cameras and recorders. It will be less than $3,000 per limo. More for the party buses because they will have more cameras.\"\n\n\"Are you planning on putting a system in every vehicle?\" Lori asked.\n\n\"What's your opinion?\"\n\n\"I don't think we need it in the eight town cars.\"\n\n\"Probably not,\" I said.\n\n\"Yes for the four, eight, and stretch Hummers,\" she said.\n\n\"We need to make sure we can get blueprints for each vehicle for Sam. Make sure we tell them that several times, so they know if they are selected, we can get them.\"\n\n\"Are we planning on the manufacturer installing the video systems?\" Lori asked.\n\n\"That is something we will need to decide. If we don't think they can do it, Sam can go see them and teach them how to install the wire, and he can finish the installations here.\"\n\n\"That will take time, James. Will, it put us behind schedule?\"\n\n\"That is my concern. We need to factor into our decision how competent we think they are to do the install.\"\n\n\"Maybe Sam can teach them to install everything,\" Lori said.\n\n\"That may be best.\"\n\n\"The company in St. Louis seemed to think installing the cameras and equipment wouldn't be a problem.\"\n\n\"Good.\"\n\n\"I'm already leaning toward the St. Louis company. They have Cadillac, Lincoln, Chryslers, and Benzs for limos. The California company doesn't have Lincolns. I like the Lincoln Town Cars.\"\n\n\"I do, too, but we will need to look over the big Benzs and the Cadillacs.\"\n\n\"How big are the party buses?\" Samantha asked.\n\n\"They have a ten, fifteen, and twenty passenger ones. We will get at least one of each.\"\n\n\"Cool.\"\n\n\"James, where are your plans on getting an up-armored limo?\" Lori asked.\n\n\"That will come later. Next month we have a meeting with a security company that can provide armed drivers and security,\" I said.\n\n\"What does it cost to have an armed driver and security guard?\" Samantha asked.\n\n\"To have both, at least $2,500 for every eight hours.\"\n\n\"Wow.\"\n\n\"That's cheap,\" Lori said.\n\n\"It starts at that price. If a trailing van is needed, add about $10,000 for every eight hours.\"\n\n\"Are we just getting one van?\" Lori asked.\n\n\"For now.\"\n\nWe discussed other things as we drove for a few more hours.\n\n\"James, can we stop for a break?\" Samantha asked.\n\n\"Sure.\"\n\nWe pulled off at the next exit and took a break and got some munchies and drinks.\n\n\"This company also does an executive Escalade,\" Lori said as she got back in ours.\n\n\"I saw that. They put in two sets of facing seats.\"\n\n\"Maybe we should swap one of the town cars for one of those,\" Lori said.",
        "\"Let's look at it.\"\n\n\"You should get one of those for us,\" Samantha said.\n\n\"That may be an idea,\" I replied. \"But I am not going to be your chauffeur.\"\n\n\"Make sure it has cameras in it!\"\n\n\"We are making good time. We should be in St. Louis by lunch. What time are they expecting us?\" I asked Lori.\n\n\"2:00.\"\n\n\"Call the hotel and tell them to make sure our suite is ready by 11:00. We can stop and stretch our legs and freshen up,\" I said.\n\nLori got out her phone and called the hotel as we rode.\n\n\"They said our room would be ready by noon,\" Lori said.\n\n\"Good, we can eat lunch at the hotel and unload.\"\n\n\"The limo place is about a 15-minute drive from the hotel,\" Lori informed me.\n\n\"Did they have a problem with us spending the day with them Saturday and Sunday?\" I asked.\n\n\"None. They work on Saturdays and said we could see all the models we are interested in either finished or in production. The owner and two guys are coming in Sunday to show us around and let us take some test drives.\"\n\n\"For $2,000,000 they better show us a good time.\"\n\n\"What do you want me to do?\" Samantha asked.\n\n\"I brought the small digital camera. I want you to take plenty of pictures.\"\n\n\"I can do that.\"\n\n\"I hope we can select what we want and the options and have them get us a final quote quickly,\" Lori said. \"We need to get things going.\"\n\n\"Did you meet with Linda about the offices?\" I asked.\n\n\"Last week. Since the place was a car dealership, it has plenty of offices and cubicles already. There is not going to be much to change, just some signs.\"\n\n\"Once we get some fun videos, I would like to put up some large monitors in the showroom and let the videos play on them all the time.\"\n\n\"Good idea. Can Sam set that up?\"\n\n\"Yes, he can.\"\n\n\"Maybe you should show some of the x-rated videos!\" Samantha exclaimed and laughed.\n\n\"About the...adult content recordings, how are we going to handle those?\" Lori asked.\n\n\"This is what I am thinking. Weddings are always a package deal, so the DVD of the recording is easily included. We let the bride and groom know up front about the cameras. Same for the party buses. The others, the drivers can tell the passengers at the end of the trip there is a video, if it is warranted. We will see if that gets the driver larger tips, if it doesn't, we can sell it to them. Either way, the driver gets the money.\"\n\n\"What if someone gets upset about being recorded? Should we tell them up front so the cameras can be turned off if they request it?\"\n\n\"What are your feelings about it?\" I asked.\n\n\"I'm concerned that some people will get upset knowing they were recorded.\"\n\n\"Okay, we will have to think about it.\"\n\nWe talked until we got to the hotel about 11:00. We grabbed all of our bags, and I told the valet we would need the Escalade back at 1:30. He said he would park it out front.\n\nWe went in and checked in then left our bags with the valet and went to the restaurant for lunch. While we ate, Lori and Samantha talked about school. At 12:30 we went and made sure our room was ready then got the valet to get our bags.\n\n\"Are you in town for business or pleasure?\" The valet asked.\n\n\"We are looking to buy about 20 limousines,\" I said.\n\n\"So, business. My name is Jackson, and I will be on duty until 8:00 if you need anything,\" he said as I gave him a big tip.\n\n\"I'm not sure what time we will be back,\" I said.\n\nThe girls freshened up and were ready to leave by 1:30. We went down, and the valet got the car, and we headed to the limo place.\n\nWhen we pulled up, it was a large place. It looked like a dealership for limos. We parked and went inside. A receptionist stopped us.\n\n\"Can I help you?\"\n\n\"Yes, I'm Dr. James Smith, and this is Lori and Samantha. We are here to look at limos.\"\n\n\"Oh, yes, Dr. Smith. You are with Allure Limousines. Let me get Larry.\"\n\nShe called and told someone that Allure Limos was there. I minute later a guy came out to greet us.\n\n\"Dr. Smith, my name is Larry. I'm one of the owners. I talked to you and Lori on the phone.\"\n\n\"This is Lori, my partner, and Samantha, my wife.\"\n\n\"Nice meeting you. Come on back to the conference room, and I will get Robert.\"\n\nWe followed him to a conference room and sat while he went to get Robert. When the two of them came back, we went through introductions again.\n\n\"We have your list of proposed vehicles,\" Larry said. \"I think you will find we have a wide selection of vehicles and options.\"\n\n\"That sounds good. What we want to do is look over your inventory and options. Lori and we will try and make any changes to plug into our list.\"\n\n\"Once we have that, we want you to come up with your best offer,\" Lori said. \"We have one other manufacturer to visit next weekend, and we will be doing the same thing there. After we evaluate your quality and selections, we will then evaluate the prices and other things we need.\"\n\n\"There are several things we will be factoring into our decision. Delivery schedule, quality of the vehicles, installation of your options and some we have, plus your warranty, and then the price,\" I said.\n\n\"I think we can meet and exceed your expectations,\" Robert said.\n\n\"I have looked at your list, and we have must of the vehicles in stock. The others we will be able to deliver by the end of January,\" Larry said. \"We turn over a lot of inventory.\"\n\n\"I talked to Larry about some customization we want,\" Lori said. \"Most of the vehicles will be outfitted with a video and sound recording system. What does that do to vehicles that are already completed?\"\n\n\"From what you told me it is an easy retrofit,\" Larry said.\n\n\"We have some drawings of the planned installation. It will give you some idea of what needs to be done. If needed, I have an expert that can come and train your people on the installation and hookup of the equipment,\" I told them.\n\n\"That would be very helpful. We can always bring in a local AV expert to do the final installations if your guy can train him.\"\n\n\"I brought one of the recorders so we can see where it can be located,\" I said.\n\n\"Good. That will help.\"\n\n\"What would you like to do this afternoon?\" Robert asked.\n\n\"If you have plugged in the vehicles you think will fit our list, let's discuss them,\" Lori said.\n\n\"That sounds like a good place to start. We can give you the brochures for each vehicle, and we can discuss options,\" Robert said.\n\n\"Okay. Let us go and get our computers, and I will get the wiring plans for the audio and video,\" I told them.\n\nThe three of us went back to the Escalade.\n\n\"They seem to be organized and ready to show us what they have,\" Lori said.\n\n\"Let's see their proposal, then we can make adjustments if needed. Samantha grab your computer also.\"\n\nWe got what we needed and headed back inside. They now had coffee and sodas along with fruit and snacks in the conference room. Robert came in with a bundle of brochures.\n\n\"Let me go over the list you sent and see if anything has changed,\" Larry said. \"I have eight town cars, four four-passengers limos, four eight-passenger limos. That's 16 cars. Then you have two stretch limos for twelve passengers. Plus, one each of the party buses at 10, 15, and 20 passengers. Is there anything else?\"\n\n\"We want to look at the four-passenger custom Escalade you have,\" Lori said.\n\n\"Okay. Now for the limos you will be using for weddings, how many white ones do you need?\"\n\n\"I think 2 of the four-passenger limos and two of the town cars,\" Lori said.\n\n\"Is that enough?\" I asked Lori.\n\n\"I think so. That will allow us four weddings a night if they want white.\"\n\n\"Okay, if we need more, we will just get more white ones.\"\n\n\"We stock the white four-passenger and the white town cars,\" Robert said. \"We turn over a few a month.\"\n\n\"What about retrofitting them with the cameras?\" I asked.\n\n\"One or two days each.\"\n\n\"Is everything else black?\" Larry asked.\n\n\"What about the super stretched ones?\" I asked Lori.\n\n\"What are you proposing for those two?\" Larry asked.\n\n\"We thought one super stretch Hummer and one Escalade.\"\n\n\"You may want one of them in white for wedding parties and proms,\" Robert added.\n\n\"We will look at both,\" Lori replied.\n\nWe spent the afternoon looking over brochures for different models and different vehicles. By 6:00, we had plugged in models and colors for our new list. All the limos seemed to have all the options on them, so little needed to be added.\n\n\"I think we are at a stopping place for the evening,\" I said. \"Let us take all this back to the hotel.\"\n\n\"Good. Tomorrow we will show you the actual vehicles and our production facilities. We can get with Johnny about the wiring for the recording equipment and see what he thinks,\" Robert said. \"Then, you can update your selections if needed.\"\n\n\"Do you have party buses we can look at?\" Samantha asked.\n\n\"Oh, yes. We sell a lot of them. They go from simple to the extreme. I have plugged in prices for the middle of the road. You will have to decide how fancy you want them.\"\n\n\"Robert, what about just a plain 15 passenger bus?\" Lori asked.\n\n\"We have those too in all sizes. They have a little customization to make them nicer.\"\n\n\"James, we may want to consider one or two plain passenger buses,\" Lori said.\n\n\"Okay. We will go back to the hotel and have dinner and discuss all of this,\" I said.\n\nWe left with a box of brochures and headed back to the hotel.\n\n\"This is a lot to think about,\" Lori said.\n\n\"Lori, I will let you decide on brands and models, you know best.\"\n\n\"We can get an assortment since they have them.\"\n\n\"What did their current quote come in at?\" I asked.\n\n\"For what we have on the list now, $1,787,500. That gives us some room to add a few things.\"\n\n\"I think you are right about some plain busses. Add two 15 passengers to the list, and we will update the price.\"\n\n\"What about one fifteen and on twenty?\" Lori asked.\n\n\"Okay.\"\n\n\"I think you should get one of these,\" Samantha said.\n\nShe passed up a brochure for a 20 passenger party bus. It had neon lights, a stripper pole, mirrors in the ceiling, and leather seating down the sides.\n\n\"I think you are right, Samantha,\" Lori said. \"I actually think we should get this model for all three.\"\n\n\"What was the price difference from the middle of the road model they have on the quote?\" I asked.\n\n\"About $10,000 more for each one.\"\n\nWhen we got to the hotel, we took all of the information up to the room.\n\n\"Let's eat first,\" I said.\n\nWe cleaned up, then went down to the restaurant and had a nice dinner. By 8:00, we were in the room and making adjustments to the quote they had given us in Excel.\n\n\"Here is what we have now,\" Lori said.\n\n\"One four-passenger black Lincoln,\n\nOne four-passenger white Lincoln,\n\nOne four-passenger black Cadillac,\n\nOne four-passenger white Cadillac,\n\nOne eight-passenger black Lincoln,\n\nOne eight-passenger black Cadillac,\n\nOne eight-passenger black Benz,\n\nOne eight-passenger black Chrysler,\n\nOne super stretch Hummer in white,\n\nOne super stretch Escalade in black,\n\nTwo white Lincoln Town Cars,\n\nSix black Lincoln Town Cars,\n\nOne loaded ten-passenger black party bus,\n\nOne loaded fifteen-passenger black party bus,\n\nOne loaded twenty-passenger black party bus.\n\nWe are adding two plain twenty-passenger buses, and we are going to look at the four-passenger loaded Escalades. Anything else?\" Lori asked.\n\n\"What are we at now?\" I asked.\n\n\"$1,890,900 with the party bus upgrades. Add about $40,000 for each plain twenty passenger bus. We will have to see what the outfitted Escalade cost?\"\n\n\"Let me see the brochures for the modified Escalades,\" I asked.\n\nI looked it over. They had one model that had nice seats in the back, two sets facing each other. They had another model that they had moved the two seats back and had a console in front of them outfitted with a fax machine, fridge, printer, and a large computer monitor that would connect to a portable. Both had raised roofs for a lot of room. The back seats had pull-up lap desks. I thought it would be good for a traveling business person.\n\n\"Did you get a price on this Escalade outfitted for business?\"\n\n\"Yes, $120,000. The one with just seats is $105,000. You want to add one of them?\" Lori asked.\n\n\"Add both of them. I like this business one.\"\n\nAfter a minute Lori responded.\n\n\"That puts us a little over $2,200,000. A little over budget.\"\n\n\"That is at full price?\" I asked.\n\n\"Yes. I will expect a big discount off that price,\" Lori said.\n\n\"Wonder what they will charge for installing the recording equipment?\" I asked.\n\n\"It shouldn't be much with all this.\"\n\n\"Samantha, is there anything you can think of?\" I asked.\n\n\"Is that Hummer going to be fixed up like this picture?\" She asked Lori.\n\n\"Yes, it and the stretch Escalade will be outfitted with all the lights and everything.\"\n\nIt was 9:30 and we were tired.\n\n\"I think that is enough for today. I'm tired, I know you are Lori,\" I said.\n\n\"I think I will shower and go to bed,\" she said.\n\n\"Sounds like a good idea,\" Samantha added.\n\n\"We will eat breakfast and head back by 8:30,\" I added.\n\n\"Sounds good,\" Lori replied.\n\nSamantha and I went to our bedroom while Lori checked her email.\n\n\"Those are some nice looking cars,\" Samantha said. \"Will they be enough?\"\n\n\"I hope we get a little better price. We plan on picking up more limos from the other businesses once we put them out of business.\"\n\nSamantha took her clothes off and went into the bathroom while I got undressed. She came out a few minutes later.\n\n\"I forgot my computer. I need to check my email,\" she said and went to the door and opened it and walked out into the larger room.\n\nI went into the bathroom and cleaned up, then went back to the bed. Samantha came in a few minutes later, laughing with her computer.\n\n\"What's funny?\"\n\n\"Lori wanted to know if I always slept naked. I told her all the time.\"\n\nWe got on the bed, and Samantha pulled up her email and went through it. After that, we got in the bed, and I turned off the lamp.\n\n****\n\nWe got our wakeup call at 6:00. I got Samantha up, and we showered together then dried off.\n\n\"You want to go see if Lori is up?\" I asked.\n\n\"Sure.\"\n\nSamantha left while she was running a towel through her wet hair. I was shaving when she came back.\n\n\"She has been up, she is like you and Dawn.\"\n\n\"Get ready then.\"\n\nBy 7:30, we were in the restaurant ordering breakfast.\n\n\"Make sure you see all the models and brands today and make a final decision on what you want,\" I told Lori.\n\n\"I want to look closely at the quality of the upholstery. If it is not well made it will wear out quickly,\" Lori said.\n\n\"See if they have an eight-passenger you can take for a drive. I want to make sure it has plenty of power.\"\n\n\"I'll check out the party buses!\" Samantha exclaimed.\n\n\"Okay, that is your job.\"\n\nWe finished breakfast and went and had the valet get the Escalade. We were back at the limo place by 9:30.\n\nLori and I looked closely at the four and eight-passenger limo models. Lori was pulling on the upholstery to see how well it was made. We went and watched them building some limos and doing the upholstery work.\n\n\"Where is Samantha?\" I asked.\n\n\"She went with Robert to see the party buses,\" Larry said.\n\nLori and I went into the plant and watched as they built several eight-passenger limos. The people seemed to be taking their time and doing a good job.\n\n\"Let's find Samantha and go eat lunch,\" I said about 12:30.\n\nWe went to where the buses were parked, and Samantha and Robert had one fired up and all the lights going along with a loud stereo.\n\n\"Do you like it!!\" I shouted.\n\nRobert turned the stereo off.\n\n\"What?\" Samantha asked.\n\n\"Do you like it?\"\n\n\"Yes! It is fabulous!\"\n\n\"Come on, we are going to lunch.\"\n\nWhile we ate, we discussed what we had seen. Lori seemed impressed with the quality as she talked about a few limos she had driven in the past that had problems. Samantha was telling us about the party buses.\n\n\"Lori, are you happy with the models you picked?\"\n\n\"So far, I am.\"\n\nWe took our time eating and talking then went back. We went into the building, and Larry met us.\n\n\"What would you like to see now?\" He asked.\n\n\"I want to drive one of the eight-passenger Lincolns,\" Lori said.\n\nWe walked out to the lot full of limos and Larry opened the doors to an eight-passenger, and we looked inside for a while.\n\n\"Let's see how it drives,\" Lori said.\n\nSamantha and I got in the back while Larry got up front with Lori. Lori started it up and pulled it out and got us on the road.\n\n\"This is nice,\" Samantha said.\n\nWe checked out the insides as Lori put the car through its paces. We were finally back at the lot. We got out, and Lori checked the trunk.\n\n\"James, look up front and see if you think the recorder would go up there,\" Lori said.\n\nI looked, and there was a lot of room on the passenger's side.\n\n\"Let me go and get the recorder.\"\n\nI went to our Escalade and grabbed the recorder and walked back. The recorder was rather compact for a four channel DVR that had a DVD in it. I held it up under the dash and next to the console to see if it would leave enough leg room.\n\n\"It may go up here.\"\n\n\"I'll let Johnny see what he thinks,\" Larry said.\n\nWe got in the back with Larry and pointed out where the cameras and microphones should go. Larry had the idea to put them in a fixture that normally had a small light in it. He went and got one, and we experimented with placing it.\n\n\"We add these small lights all the time. I don't think the cable for the camera would be a problem.\"\n\n\"Do you have a super stretch Hummer built?\" Lori asked.\n\n\"We have one that is ready to go out.\"\n\n\"Let's go check it out,\" Lori said.\n\nWe walked to the other side of the lot, and there was a super stretch Hummer. Robert showed us the gullwing doors on the back; they were nice. We got in the back and looked around as Larry demonstrated the lights and the stereo. We then experimented with placing the light fixture for the cameras. There was plenty of room up front for the recorder. It would be an eight channel, but it wasn't much larger.\n\nThey were building a super stretch Escalade so we looked at it then looked at some other models.\n\nBy 4:30 we were ready to leave.\n\n\"What time would you like us to come tomorrow?\" I asked Larry and Robert.\n\n\"Let us look over the new list you have now and put some prices on it,\" Robert said.\n\n\"We can meet here for lunch about 11:30 and go over our quote,\" Larry said.\n\n\"Sounds good.\"\n\nWe left and headed back to our hotel.\n\n\"What do you think, Lori?\" I asked.\n\n\"I like what I see so far. I have driven some of their limos before, and they are nice.\"\n\n\"Maybe we can get some good prices tomorrow.\"\n\nWhen we got back to the hotel, we went to the bar. Samantha was stuck with drinking sodas. We stayed in the bar until about 6:00 talking then went and had dinner. \n\n\"I want to go to the pool after we eat,\" Samantha said. \"Lori, you want to come with me?\"\n\n\"I didn't bring a suit.\"\n\n\"There is a boutique in the hotel,\" Samantha said. \"I'm sure we can find you something. They have a nice pool.\"\n\nAfter we finished eating, I headed back to the room while Samantha and Lori went shopping.\n\nI was working on the quote when then came in about 8:15.\n\n\"Did you find a suit, Lori?\" I asked.\n\n\"I did.\"\n\n\"We are going to the pool for a while, do you want to come?\" Samantha asked.\n\n\"You two go ahead, I'm crunching some numbers.\"\n\n\"Maybe I should stay and help you,\" Lori said.\n\n\"Go swimming, I'm just going over what we have so far.\"\n\n\"Okay.\"\n\nLori went into her bedroom, and Samantha went into ours. When Samantha came out, I looked at the skimpy bikini she had on, what there was of it.\n\n\"Did Lori get a bikini as skimpy as yours?\"\n\n\"You'll see.\"\n\nA few minutes later, Lori came out with a towel around her waist. I looked at the top of the bikini, and it was pretty skimpy. She looked nice.",
        "\"Let's go,\" Samantha said.\n\nSamantha didn't wrap a towel around herself. I admired her bare ass as she left.\n\nAbout 10:00, they came back to the room laughing. Lori was carrying her towel this time. I checked out the tiny thong she had on. The two of them went to Lori's room. By 11:00, I was ready for bed. I heard Samantha and Lori laughing in the other bedroom. I went on to bed.\n\n*****\n\nWhen the phone rang at 6:00, I answered it; Samantha wasn't in bed. After I showered and shaved and got dressed, I went to Lori's room and knocked on her door.\n\n\"Are you two up?\"\n\nA minute later, Samantha opened the door; she was standing there naked.\n\n\"We are up. Can we have breakfast in the room?\"\n\n\"I'll order if you two are ready.\"\n\n\"Let us shower first.\"\n\nI left them and went and got the menu for room service. I called and ordered and told them to deliver it in about an hour. About 30 minutes later, Samantha came out wearing one of the hotel robes.\n\n\"Did you two have a good night?\"\n\n\"Oh, yes.\"\n\n\"I guess you were right,\" I said.\n\n\"Maybe. We will have to see.\"\n\nLori came out in a robe a few minutes later.\n\n\"Breakfast will be here in about 15 minutes.\"\n\nLori sat with Samantha on the sofa. Lori let her legs hang out from the robe.\n\n\"Honey, I was telling Lori last night that it's okay if I have some fun. She asked me if you got to have some fun too. I told her that was okay also.\"\n\n\"As long as you two had a good night.\"\n\n\"We did.\"\n\nThey looked at each other and smiled.\n\nOur breakfast arrived a bit later, and we sat and ate until after 8:00. \n\n\"James, did you finish going over the numbers?\" Lori asked.\n\n\"I have them on a spreadsheet. We will see what they do with a discount today.\"\n\n\"I guess we need to get dressed,\" Lori said and went to her bedroom.\n\nI watched because she didn't close her door. Samantha went to get dressed while I stayed. I kept looking at Lori's bedroom and saw her walking around in her room naked until she got dressed and came back out.\n\n\"I was talking to Robert yesterday, and he said it would be cheaper to drive the limos to us than ship them. They have drivers and a bus that would follow them to take them back,\" Lori said.\n\n\"Shipping may be a big expense with the California company.\"\n\n\"I hope we can go with the company here. Being closer will help us out,\" Lori said.\n\n\"We will have to see.\"\n\nSamantha came out and sat and checked her email for a while.\n\n\"If you two want to leave early, we can go and see the Arch,\" I said.\n\nWe left and drove to the Arch to look around. We were back at the limo lot by 11:30. They had lunch ready in the conference room, and Robert and Larry had Johnny there to discuss the installation of the video equipment. We negotiated and discussed a lot of issues until after 3:00. We had added an outfitted black van for security if needed to follow a limo.\n\n\"We want your business,\" Larry said. \"Once you visit the place in California, I think you will see we are the best choice.\"\n\n\"Now that we have your complete list, we discussed it, and we will give you 3% off the total. That includes the installation of the video equipment and delivery,\" Robert added.\n\n\"When can you deliver?\" Lori asked.\n\n\"We should be able to drive them all no later than the last Saturday of January. Will that work?\" Larry asked.\n\n\"That would be perfect. We have a huge full week event the week of Valentine's.\"\n\n\"What kind of event.\"\n\n\"I store opening in town and some visitors,\" Lori said.\n\n\"Must be big. Will you have enough cars?\"\n\n\"We should, we have some alternative plans to hire some local independents if we need.\"\n\n\"We also have some plans to buy up some limos locally from folks going out of business.\"\n\n\"Sounds like you have a good plan.\"\n\n\"The whole concept is Lori's. She wrote a marketing plan to start a limo business with a small group of investors. In our case, we have a group of law enforcement officers that are investing. They all drive for other companies locally, and this is their retirement plan,\" I told them.\n\n\"That's interesting.\"\n\n\"If it works out well, Lori and I are going to franchise the company. If we do that, we hope to open many locations. If we do that...it would be good if we already had a relationship with a vehicle provider,\" I said to tease Robert and Larry.\n\n\"I hope we can be that provider,\" Robert said.\n\n\"After we go to California next weekend, we will let you know,\" Lori replied.\n\nRobert and Larry were quiet a minute.\n\n\"Larry, do you all build armored vehicles?\" I asked. \"I may want to add one later.\"\n\n\"No, we don't. There is not enough call for them, and they are very expensive. Honestly, the place you are going to in California is probably the best place to get one. They have a branch that builds them and ships them all over the world.\"\n\n\"What are we going to find when we go there?\" Lori asked.\n\n\"They are a good company. You will find comparable vehicles and quality. However, I feel like we will come in at a lower price, they have to build all of theirs to California emission codes, and that adds a lot of costs,\" Robert said. \"Plus, the shipping cost will be high. We should be able to deliver by the end of January because of our volume.\"\n\n\"If you can have your AV guy come for a few days we have a local guy that has done some camera installs on some limos for us. He can go over the equipment you are using and how to install it,\" Johnny pitched to us.\n\n\"Okay. I think we have everything we need. Lori, is there anything else?\"\n\n\"I think we have everything.\"\n\n\"Thank you for letting us look and pick your brains,\" I said. \"Give us a few weeks.\"\n\n\"Sounds good.\"\n\nWe left and headed back to the hotel.\n\n\"If you two want, we can check out and drive back tonight,\" I said.\n\n\"I think we will be okay leaving in the morning,\" Samantha said from the backseat.\n\nOnce we were back at the hotel, we went up to the room.\n\n\"James, order some wine, please,\" Samantha asked.\n\nI ordered a bottle of wine. Samantha went into the bedroom to change clothes.\n\n\"James, I didn't do anything wrong last night, did I?\" Lori asked.\n\n\"No.\"\n\n\"Samantha said it was okay.\"\n\n\"Lori, it was okay. You two can have fun if that is what you want to do.\"\n\n\"I know, or I heard, you and the girls have some fun. I just don't want to get in trouble with your wife.\"\n\n\"Which one?\" I asked.\n\n\"Dawn.\"\n\n\"Lori, Dawn is fine with everything. But, remember, Samantha and Amy are also my wives.\"\n\n\"I know...but that is different. I'm sure Dawn wouldn't do what Samantha did last night.\"\n\n\"You would be wrong, Lori.\"\n\n\"You mean...Dawn is into things like that too?\"\n\n\"Lori, the four of us have a good time when we can. Dawn has fun with some of our friends, male and female.\"\n\n\"Really?\"\n\n\"Yes.\"\n\n\"You...mean you have an open marriage.\"\n\n\"No, we have fun. All of my wives know what they can do to have fun. I am fine with it.\"\n\n\"Does that mean you get to have some fun?\"\n\n\"Of course.\"\n\n\"And Dawn is fine with that?\"\n\n\"Dawn, Amy, and Samantha. All of my wives.\"\n\n\"Is the wine here yet?\" Samantha asked.\n\nI looked, and she had on some gym shorts and a T-shirt.\n\n\"Not yet.\"\n\n\"Lori, don't you want to get out of those clothes,\" Samantha asked.\n\n\"I guess.\"\n\nLori went to her room. There was a knock on the door. I went and let the bellman bring in the bottle of wine and glasses. He looked at Samantha in her T-shirt without a bar as he left.\n\n\"We need to go back to a hotel so you can tie me to a bed and let the bellboy fuck me,\" Samantha said as I poured her a glass of wine.\n\n\"If that is what you want to do,\" I said, handing her the glass.\n\nI poured a glass for Lori when she came out of her room. I looked, and she had on some shorts and just a T-shirt, with no bra.\n\n\"I want to do it, but I want you to video it,\" Samantha said as she sipped her wine.\n\n\"Video what?\" Lori asked.\n\n\"I want James to take me to a hotel and tie me to the bed then have one of the bellboys fuck me while he videos it.\"\n\n\"Samantha!\" Lori exclaimed, then laughed.\n\n\"I think it would be fun,\" Samantha said. \"We had fun before.\"\n\n\"What did you do?\"\n\n\"He blindfolded me and tied me to the bed and let the bellman come in and play with my tits.\"\n\n\"That might be fun, but I don't know about being fucked,\" Lori said.\n\n\"James likes to watch.\"\n\n\"That's what you said last night,\" Lori replied.\n\n\"Can he watch us?\" Samantha asked as she sipped her wine.\n\n\"I guess.\"\n\n\"After we finish our wine,\" Samantha said.\n\nOnce they finished their wine, Samantha took Lori's hand and headed to our bedroom.\n\n\"Come on, James,\" she said.\n\nI followed them into the bedroom and watched as they took off each other's clothes. Samantha got on the bed and leaned against the headboard and spread her legs. Lori crawled between them and kissed her way up until she was kissing Samantha's pussy. I sat in a chair and watched Lori go down on Samantha.\n\n\"Emmmm, that's it.\"\n\nSamantha looked at me and smiled.\n\nLori kept going and drove Samantha to several orgasms. Lori kissed her way up and kissed Samantha for a few minutes. Samantha rolled Lori onto her back and kissed her way down to her nipples and licked and sucked on them. She kissed her way down and spread Lori's legs and went to work on her pussy.\n\nLori had a cute body as I looked her over. Samantha worked on her pussy slowly as she moaned.\n\n\"Oh, yes. Eat me.\"\n\nLori put her hand on the back of Samantha's head and pushed her into her pussy as she moaned. \n\n\"Oh, yes!\"\n\nLori moaned for a long time until she came in a gush.\n\n\"Oh, yes! More, Sam!\"\n\nSamantha kept going until Lori came again.\n\n\"Ahhhh! Fuck, yes!\" Lori cried out as she came hard.\n\nSamantha kissed her way up and put her mouth over Lori's as they kissed. \n\n\"Oh, that was nice,\" Lori said as Samantha lay next to her.\n\nThey looked at each other and giggled. Samantha got up and sat on the end of the bed.\n\n\"Come here, honey,\" she said.\n\nI went to the end of the bed and stood. Samantha unbuckled my pants and pulled them down, then pulled down my underwear. My cock was standing straight out. She moved to her knees and slid her mouth over my cock and sucked for a few minutes.\n\n\"Lori, you want to join me?\"\n\nLori moved down and sat on the end of the bed as Samantha sucked. She worked her mouth for a few minutes then took all of it down her throat.\n\n\"Damn, Samantha!\" Lori exclaimed.\n\nSamantha worked my cock in and out of her throat for a long time as Lori watched. She slid her mouth off and stroked my cock as she turned to look at Lori.\n\n\"Damn, you're big,\" Lori said. \"Samantha, how do you get it all down your throat?\"\n\n\"It took some practice.\"\n\n\"I guess it did. I can't do that, I have tried.\"\n\n\"You want to try?\" Samantha asked.\n\n\"I know I can't deep throat him.\"\n\n\"Just have some fun.\"\n\nLori slid to the floor on her knees next to Samantha. She wrapped her hand around my cock as she looked and slowly stroked it for a minute.\n\n\"Go ahead, Lori,\" Samantha told her.\n\nI watched as Lori placed her mouth over the end of my cock. She sucked on the end as she stroked my cock. Samantha and I watched as she got more into it. After a few minutes, she was working her mouth up and down about half way as she stroked my cock.\n\n\"Emmmmm...\" kept coming from Lori as she worked her mouth and hand faster.\n\nI watched as she got into it and kept going.\n\n\"Emmmm!\" Came from Lori as she stroked faster as she worked her mouth more.\n\nLori was enjoying what she was doing as we watched. I let her keep going for a long time as she seemed to have forgotten what she was doing.\n\n\"Emmmm! Emmmmmmm!!\" Came from Lori as her head bobbed up and down quickly.\n\nI let go and started pumping cum into her mouth.\n\n\"Emmmmmmmmmmmm!\" She moaned as I filled her mouth.\n\nShe milked my cock dry and slid her mouth off.\n\n\"I have wanted to do that,\" she said as she looked at my cock as she kept stroking it.\n\n\"Then why didn't you?\" Samantha asked.\n\n\"I didn't know what was going on with all of you.\"\n\n\"Now you know, so we can have some more fun,\" Samantha said.\n\n\"Oh, I don't know about that, but that was fun,\" Lori said as she moved and sat on the end of the bed.\n\nSamantha moved and sat next to her, then leaned over and kissed Lori on the mouth for a minute.\n\nI got down on my knees and spread Lori's legs while Samantha kissed her. I kissed my way up the insides of her thighs then began kissing her pussy.\n\n\"Emmm...\"\n\nSoon I was licking her clit as she moaned. I watched as Samantha pushed her back onto the bed and kept kissing her. I spread her legs further apart and began to work my tongue inside of her.\n\n\"Emmmm! Oh, my, god!\"\n\nSamantha was sucking on her nipples as I tongued her pussy deeply. I slid several fingers into her pussy and searched for her spots as she moaned. I found one spot, and she tensed up on when I rubbed it.\n\n\"Ohhhh!\"\n\nI worked her pussy with my fingers and my tongue for a while as I listened to her.\n\n\"Oh, fuck!! I'm coming!!\" She screamed and began gushing over and over. \"Ahhh!!\"\n\nI kept tonguing her clit as I watched Samantha get up on the bed and straddle Lori's mouth. Lori pulled her down and worked her tongue into Samantha. I winked at Samantha as she watched me.\n\n\"Emmm...emm...emmmmmmm...\" came from Lori as she worked.\n\nI stood and lifted Lori's legs. I grabbed my cock and moved forward until the end was pressing between her dripping pussy lips. I held it and began to push.\n\n\"Emmmmmmm!!\"\n\n\"Fuck her, honey.\"\n\nI kept pushing the end of my cock into Lori's pussy.\n\n\"Emmmmm!!\"\n\nSamantha grabbed Lori's nipples and twisted them.\n\n\"Emmmmm!!\"\n\nI pushed hard into Lori's tight pussy. She moaned louder as I slid in slowly.\n\n\"All of it!\" Samantha yelled. \"Ahhh! I'm coming!!\"\n\nI watched Samantha as she forced her pussy down into Lori's mouth as she came hard.\n\nSamantha slid back off Lori's mouth and sat behind her head.\n\n\"Ahhhhh!\"\n\nI had most of my cock in Lori's tight pussy now.\n\n\"Are you okay, Lori?\" I asked.\n\n\"Oh, yes! More!\"\n\nI held her legs tightly and pushed hard.\n\n\"Ahhhhhh!!\"\n\nMy cock eased into her until I had all of it deep inside her pussy.\n\n\"Ohhhhhhhh...fuck...\" came from Lori.\n\nI slowly slid most of the way out then pushed back in.\n\n\"Ohhhhhhhhhh...\"\n\nI worked my cock slowly in and out of Lori as she moaned. Lori lay there enjoying my cock for a long time.\n\n\"Ohhhhhhhhh, fuck...I'm coming!\" Lori exclaimed and began jerking.\n\nI sped up some as she came.\n\n\"Oh, I am so full of cock! I love it!\"\n\n\"I think you will find it enjoyable,\" Samantha said as she crawled over Lori's body.\n\nI felt Samantha licking Lori's clit and my cock.\n\n\"Emmmmm...\" came from Samantha as Lori grabbed her hips and pulled her pussy down to her mouth again.\n\nSamantha pushed herself up and looked up at me. I leaned down and kissed her.\n\nI watched Samantha as she worked Lori's clit with her fingers. Lori was moaning loudly under her pussy. The two of us kept going until Lori started jerking and coming again.\n\n\"Emmmm!!\"\n\nSamantha lifted her pussy off Lori's mouth.\n\n\"Oh, fuck, you two!!\"\n\nSamantha sat behind her head and watched while she fingered her pussy. I held Lori's legs and began to thrust into her harder.\n\n\"Ahhh! Fuck, yes!\"\n\nI kept thrusting into Lori hard and fast as we listened to her moan and scream for a long time.\n\n\"Ohhhh, fuck, yes!! Oh, fuck!! I'm coming again!!\"\n\nI was thrusting into her deep and fast now.\n\n\"Ohhh!! God!!\"\n\n\"Lori, are you on the pill?\" I asked.\n\n\"No!!\"\n\nLori began to jerk as I thrust into her. When she screamed again, I pulled my cock out and grabbed it and started coming as she jerked. I shot cum all over Lori's stomach and tits.\n\n\"Oh, my...\" Lori moaned as she lay there covered in cum.\n\nSamantha moved back over her and licked all the cum from her stomach and tits for a while as I sat on the end of the bed and watched. She kissed Lori once she was finished.\n\n\"Lori, do you like your fringe benefits?\" Samantha asked.\n\n\"So far!\" She and Samantha laughed.\n\nSamantha got off the bed and pulled Lori up, and they went to shower. I picked up my clothes and took off my shirt and went and got the rest of the wine and came back to the bedroom.\n\n\"Do you two want some more wine?\" I asked as they came out of the bathroom drying off.\n\n\"Sure.\"\n\n\"We can get dressed and go down and eat dinner, or we can order room service,\" I said.\n\n\"I think room service is a good idea,\" Samantha said.\n\n\"Is that okay with you, Lori?\"\n\n\"Sure.\"\n\nWe all went back to the big room and looked over the menu. By the time we had ordered, it was well after 8:00 and Lori had gotten comfortable sitting with us naked. They finished drinking their wine after a few minutes.\n\n\"I guess we better put some clothes on,\" Lori said.\n\n\"Or not,\" Samantha said. Lori turned and looked at her.\n\n\"You are not going to put any clothes on?\" \n\n\"No, why?\"\n\n\"They will be bringing dinner.\"\n\n\"So?\"\n\nLori looked at Samantha a minute then laughed. I poured both of them another glass of wine as they sat.\n\nAbout 20 minutes later, there was a knock on the door.\n\n\"Room service!\"\n\n\"You want to get that, Lori?\" Samantha said.\n\n\"I'll be right back,\" I said and went to the bedroom.\n\n\"Room service...ohh...\" I heard.\n\n\"Bring it on in,\" I heard Lori say.\n\nI watched through the door as the young guy slowly pushed the cart into the room. He was trying not to be obvious as he looked at Samantha and Lori's naked bodies.\n\n\"Can you put it on the table?\" Samantha asked as she stood and walked to the table.\n\n\"Oh...sure...\"\n\nHe pushed the cart to the table and began to set the food out as Lori and Samantha stood close. He finally had everything on the table.\n\n\"I see dinner for three? Is there someone else here?\" He asked.\n\n\"My husband,\" Samantha said.\n\n\"Oh...uhhh...\"\n\n\"It's okay, he likes to watch.\"\n\n\"Oh.\"\n\n\"Do I need to sign something?\" Samantha asked.\n\n\"Oh...yes.\"\n\nHe handed Samantha the bill, and she signed it. She looked at his name tag when she handed it back.\n\n\"Jerry, are you working all night?\"\n\n\"Oh...no...I get off at 10:00.\"\n\n\"Well, if you will come back at 10:00, I'll see if I can help you...get off,\" Samantha said.\n\n\"Uhhh...are you sure? What about your husband?\"\n\n\"He likes to watch.\"\n\n\"Oh.\"\n\n\"See you about 10:00 then?\"\n\nHe looked up and down Samantha's body, then looked over Lori.\n\n\"Sure...I guess.\"\n\n\"See you then.\"\n\nSamantha walked him to the door, and he left. I heard Lori laughing.\n\n\"Were you serious?\" Lori asked as I walked out.\n\n\"Sure, why not?\"\n\n\"You're crazy!\"\n\nThe three of us sat and ate dinner. Samantha was telling Lori some great stories.\n\n\"How old do you think he was?\" Lori asked.\n\n\"Eighteen...I hope,\" Samantha said. \"Lori, if you want to fuck him, I can watch.\"\n\n\"Oh, I don't think so.\"\n\n\"You prefer women to men?\" Samantha asked as she ate.\n\n\"No, I just find sex with other women less of a hassle.\"\n\n\"Why is that?\" I asked.\n\n\"I haven't had time at school for a boyfriend, but I did need to have some fun.\"\n\n\"I can understand that,\" I said.\n\n\"There were other girls that felt the same way. We enjoyed being with each other without all the problems of a boyfriend.\"\n\n\"Since you are graduating soon, are you ready to be fucked more often by guys?\" Samantha asked.\n\n\"I'm not sure. It is going to be a lot of work getting this business up and going. I don't think I am ready for a boyfriend commitment.\"\n\n\"Lori, I don't want you working 60 hours a week,\" I told her. \"You get someone to help.\"\n\n\"I will.\"\n\n\"Lori, do you think James can keep you satisfied while you work so hard?\"\n\nLori smiled at me.\n\n\"If that is something that is an option...I think so!\" She said and laughed.\n\n\"I think that is possible,\" Samantha said. \"But, I think there are some other men, and women, we could introduce you to that could keep you amused.\"",
        "\"Oh?\"\n\n\"Would that be something that would interest you, Lori?\" I asked.\n\n\"I'm not sure?\"\n\n\"We can talk more about it later,\" Samantha said.\n\nWe finished eating before 10:00 and were sitting on the sofa, working on another bottle of wine.\n\n\"Do you two do this often?\" Lori asked.\n\n\"No, we just have some fun occasionally,\" Samantha said.\n\n\"It looks like it.\"\n\nThere was a knock at the door. Samantha went to the door.\n\n\"Hey, Jerry. Come on in.\"\n\nSamantha walked a young guy in that looked like he wasn't sure what to do.\n\n\"Are you finished for the night?\" She asked him.\n\n\"Uhh... yeah.\"\n\n\"Jerry, do you get many opportunities like this to look?\" Samantha asked.\n\n\"Sometimes...just look.\"\n\n\"What happenes?\" I asked.\n\n\"Uh...sometimes I will drop off dinner, and a guy and women will be having sex. Sometimes they want me to stay and watch.\"\n\n\"Do you?\" Samantha asked.\n\n\"Sure.\"\n\n\"Do you ever get to participate?\" I asked.\n\n\"No...just watch.\"\n\n\"That's too bad,\" Samantha said. \"Maybe that will change.\"\n\nAs they stood there, Samantha started rubbing his crotch. He looked at her, then looked over at Lori. Samantha kept rubbing for a minute then began unbuckling his pants.\n\n\"Are you okay if they watch?\" Samantha asked.\n\n\"Sure.\"\n\nShe kept going and soon had his pants undone and dropped to his ankles. I watched Samantha smile at him as she reached in his underwear and grabbed his cock. She worked his cock as he looked at her.\n\n\"Let's see what we have here,\" Samantha said as she moved to her knees and pulled his underwear down.\n\nHis cock popped out, and Samantha wrapped her hand around it and slowly stroked it.\n\n\"Not bad. I think you will do just fine,\" she said.\n\nSamantha kept her hand around his cock as she moved her mouth to the end. He watched as she slid it over the end of his cock. Lori and I sat and watched as Samantha worked her mouth up and down his cock for a few minutes.\n\n\"Now you are nice and hard. Are you ready?\" Samantha asked.\n\n\"Uh...ready for what?\" He asked.\n\n\"You do want to fuck me, don't you?\"\n\n\"Sure!\"\n\nShe reached down and got him to step out of his pants. Samantha stood and took his hand and walked him over to the sofa next to us. Lori watched as Samantha put her knees on the sofa and her hands on the back.\n\n\"Go ahead,\" she said.\n\nJerry looked at Lori, then at me, then he looked at Samantha's perfect ass in front of him. He turned to her and grabbed his cock and moved into her.\n\n\"Oh, that's it!\" Samantha said.\n\nJerry worked and soon had all of his cock inside of Samantha.\n\n\"Now take your time and fuck me good,\" she said.\n\nHe grabbed her ass with both hands and began to work his cock in and out of Samantha. She looked over at us and winked, Lori giggled. We sat and watched Jerry work his cock in Samantha for a while. I was sure Samantha was going to keep him from coming as long as she could. I looked at Lori, and she was watching with interest.\n\n\"You like watching?\" I asked.\n\n\"Yes...\"\n\nI reached around Lori as she sat on the edge of the sofa watching and found her tits. I rubbed her tits and played with her nipples as she watched. After a few minutes, she placed her hands on top of mine, and I kept teasing her.\n\n\"Oh, Jerry, that's it!\"\n\nI placed my hand over Lori's and moved it down between her legs and pushed her fingers to her pussy. She went to work fingering her clit as she watched.\n\n\"More, Jerry!\"\n\nI pushed Lori's fingers into her clit hard. After about 10 minutes, Lori tensed up.\n\n\"Oh!\" She exclaimed and came in a gush.\n\nJerry was working his cock in Samantha hard and fast now.\n\n\"Get in my lap,\" I told Lori.\n\nShe turned and looked at me, then stood and placed a knee on each side of my hips as I held her. She grabbed my cock and got the end started in her pussy then began to ease down. I held her ass and guided her as she worked until I had all of my cock inside of her.\n\n\"Now watch them,\" I told her.\n\nLori returned her attention to watching Samantha. I held her ass tight and worked her on my cock slowly.\n\n\"Ahhhhh!\" Kept coming from Jerry as he needed to get off.\n\n\"Keep going, Jerry! Fuck me good!\"\n\nHe was slamming into Samantha now.\n\n\"Oh! That's it, Jerry! I'm coming!!\"\n\nI heard Samantha moan as she gushed. I was working Lori on my cock hard as she watched.\n\n\"Ahhhh!!\" Came from Jerry.\n\n\"Keep going!!\" Samantha yelled at him.\n\nLori reached over and took one of Samantha's dangling tits in her hand and squeezed. I was sliding Lori on my cock as she played.\n\nWe kept this up for about ten more minutes. Poor Jerry was about to collapse.\n\n\"Oh, fuck, Jerry!! Come in me!!\" Samantha exclaimed.\n\n\"Ahhhhhh!!\" He let out as he started coming hard in Samantha.\n\n\"Oh, fuck!!\" Came from Samantha.\n\n\"Ahhhhhh!\" Came from Lori and she started jerking on my cock as I kept working her on it. \"Ohhhh, fuck!!\"\n\nJerry was standing there trembling as he held Samantha's ass. She eased forward and off his cock.\n\n\"I think you better sit,\" Samantha told him. He collapsed into a chair\n\n\"Ohhhhh, fuuuuck!!\" Lori screamed as she kept jerking on my cock. \"Oh, god!!\"\n\nI heard Lori's pussy gush several times. She was shaking, so I eased her down onto my cock and held her.\n\n\"...ahhhhhhh...\"\n\nSamantha had turned and was sitting on the sofa as Jerry watched. I kept holding Lori as she panted.\n\n\"Jerry, that was wonderful,\" Samantha told him.\n\n\"Yes...yes it was...\"\n\nI held Lori while Samantha told Jerry how good he was. Lori sat up a few minutes later as Samantha was showing Jerry to the door.\n\n\"Wow,\" Lori said.\n\nShe pushed herself up and off my cock then got on her knees in front of me and sucked my cock into her mouth. Samantha was sitting next to me as we watched Lori. Lori was working her mouth up and down my cock, taking her time and trying to get as much into her mouth as she could.\n\n\"Lori, you will just need to practice,\" Samantha told her.\n\n\"Emmm...\"\n\nShe kept trying and would gag, but kept trying. After some time she decided she wasn't going to be able to do it. She wrapped her hand around my cock and slid her mouth to the end and began stroking fast.\n\n\"Emmmm!!\"\n\nLori kept stroking my cock hard and fast for a few minutes until I was ready to come. I placed my hand on the back of her head and held her then started pumping cum into her mouth.\n\n\"Don't swallow, Lori,\" Samantha said.\n\nI kept pumping cum into her mouth. She slowly slid her mouth off my cock and looked up at Samantha. Samantha helped her stand then pulled her head down, so she was kissing her. The two of them exchanged my cum in their mouths as they moaned.\n\n\"Emmmm, I love doing that,\" Samantha said.\n\nLori smiled at her, then got down on the floor between her legs and went to work on her pussy. I watched Lori clean all the cum out of Samantha for a while.\n\n\"Oh, fuck, yes! Lori!\" Samantha exclaimed and humped her mouth.\n\nLori kissed her way back up Samantha's body, and they kissed for a minute.\n\nLori sat between Samantha and me.\n\n\"Lori, did you like watching?\" Samantha asked.\n\n\"Oddly, yes.\"\n\n\"Did you mind Jerry watching you?\"\n\n\"I don't think he was looking at me!\"\n\nWe all laughed.\n\n\"I find it very arousing watching,\" Samantha said.\n\n\"James, do you like to watch Samantha being fucked?\" Lori asked when she looked at me.\n\n\"I like watching all my wives being fucked because I know they are having a good time.\"\n\n\"Even Dawn?\"\n\n\"Even her.\"\n\n\"Lori, do you ever get to watch two women?\" Samantha asked.\n\n\"Only a few times.\"\n\n\"What did you think?\"\n\n\"It was hot. I...I got myself off while I watched.\"\n\n\"Like you did, just now?\" I asked.\n\n\"Yes.\"\n\n\"Would you like to join my sister and me at the house?\"\n\n\"Uh...you and your sister...\"\n\n\"Yes, we have a good time.\"\n\n\"Wow...sure I would.\"\n\n\"Would you be okay with Dawn and my sister watching you being fucked by my husband?\"\n\n\"I...I guess.\"\n\n\"Are you ready to go to bed?\" Samantha asked.\n\n\"Sure.\"\n\nSamantha and I took Lori to our bedroom and got her in bed with us.\n\n*****\n\nSamantha woke me up early and climbed on top and worked my cock into her. She had been riding me for a while when Lori woke up. She rolled onto her back and watched as Samantha wiggled on my cock.\n\n\"Honey, don't cum in me. I'm sure Lori wants to fuck you this morning,\" Samantha said.\n\nSamantha rode my cock for a long time until she got off. Lori had been slowly rubbing her pussy and tits as she watched.\n\n\"Emmm...I love sex in the morning. Your turn,\" Samantha said as she got off my cock. \"I'll be in the shower.\"\n\nLori watched her walk to the bathroom then turned and looked at me.\n\n\"If you want to,\" I said.\n\nLori sat up in the bed and quickly straddled my cock and worked it into her pussy. I watched her as she worked up and down until it was all inside of her.\n\n\"Oh my god.\"\n\nLori began to slowly work my cock inside her pussy. After about 10 minutes, she was going strong.\n\n\"Ahhhhh! Fuck!\" She exclaimed as she worked harder.\n\nI placed my hands on her thighs for a minute and felt. I began to feel the arousal in her body. I enjoyed experiencing arousal in a new woman; it was always different between all women.\n\n\"Emmmmm!!\"\n\nI didn't want to interfere with what she was enjoying, so I just felt her feelings.\n\nLori fucked my cock hard until she came.\n\n\"Ahhhh!!\" She screamed as she jerked.\n\n\"Keep going!\" I told her.\n\n\"Ahhhh!!\"\n\nLori kept jamming her pussy onto my cock for several more minutes.\n\n\"Ahhhh!! I'm coming again!!\"\n\nLori started jerking hard repeatedly as she screamed while she came very hard.\n\n\"Fuuuuuck!!\"\n\nShe tensed up then jerked then fell on top of me.\n\nI placed my hands on her back and felt her energy for a few minutes.\n\n\"He does have that effect,\" Samantha said, sitting on the edge of the bed toweling her hair.\n\nLori slowly pushed herself up.\n\n\"I have never come like that.\"\n\n\"I don't imagine you have,\" Samantha said. \"There are not many guys that can let you just fuck their cock.\"\n\n\"Oh...I didn't get you off.\"\n\n\"I didn't come because you are not on the pill and I am not wearing a condom,\" I told her.\n\n\"Lori, my husband lets a woman get what she needs first.\"\n\n\"Oh...my, but...\"\n\nLori moved off me and turned and slid her mouth over my cock.\n\nSamantha smiled at me as she toweled her hair, and Lori worked her mouth up and down on my cock.\n\n\"Emmm!\"\n\nLori worked her mouth on my cock fast for about 10 minutes. I let go and filled her mouth full of cum. She slid her mouth off and looked up and then swallowed.\n\n\"We better shower,\" I said.\n\nI helped Lori off the bed, and we got in the shower. Lori's hair was not as long as my girls, but I took my time washing it for her. After that, we both washed each other then rinsed off. I helped Lori out of the shower and I picked up a towel and sat down.\n\n\"Can I dry you off?\"\n\n\"Sure.\"\n\nI took my time drying off Lori's cute body. Once I finished, I handed her a dry towel to work on her hair while I dried off.\n\n\"I better go get dressed,\" Lori said.\n\nI shaved and got ready while Samantha packed our clothes.\n\n\"You think she would enjoy having a few guys for a weekend?\" I asked Samantha.\n\n\"I'll find out. What do you have in mind?\"\n\n\"I was thinking we needed to have a business meeting in a few weekends.\"\n\n\"With who?\"\n\n\"How about everyone involved in our businesses, Sherri and Brenda, Sam and Olivia, and all of us.\"\n\n\"What about Linda?\"\n\n\"I'll ask,\" I said.\n\n\"I think we need some more new blood.\"\n\n\"I told Mr. Dain and his wife at the bank we would have them over one weekend.\"\n\n\"He is not part of our businesses?\"\n\n\"He helps.\"\n\n\"Okay. Invite them,\" Samantha said and giggled.\n\n\"I think his wife would be a hot fuck.\"\n\nSamantha came to me and pulled me down and kissed me.\n\n\"You think we could convince Lori to let us tie her up in California?\" She asked.\n\n\"Honey, you know I won't do that to a woman unless she is really into it.\"\n\n\"I would love to watch someone she doesn't know fuck her while she is tied up. I have a feeling Lori may just be a little wilder than you think.\"\n\n\"That may not be a good idea,\" I told her.\n\nWe were ready to go now. We left the bedroom, and Lori was in the big room, ready to go. It was 6:30 and we needed to get on the road.\n\n\"Can we grab something to eat once we are on the road?\" I asked.\n\n\"Sure,\" Samantha said.\n\n\"I just ate,\" Lori said, and Samantha giggled.\n\n\"Let's go.\"\n\nI was standing in line, waiting to check out.\n\n\"Go get the car,\" I told Samantha. She and Lori went out of the front.\n\nI finally got up to the desk.\n\n\"How was your stay?\" The lady asked.\n\n\"Just fine. I'm sure we will be coming back.\"\n\n\"Very good.\"\n\n\"Do you have an envelope? I forgot to give Jerry a tip last night.\"\n\n\"Yes, sir.\"\n\nShe handed me an envelope, and I put $300 in and wrote Jerry's name on.\n\n'Jerry, thank you for the service. Samantha.'\n\nWhen I went out the front door, the Escalade was there. We all jumped in and headed out.\n\n*****\n\nAbout 9:00, we were back in our state and making good time. I pulled off the interstate when I saw an IHOP sign. We found it and parked and went inside and ordered.\n\n\"We will have to make some plans for next weekend,\" Samantha said as she ate.\n\n\"Like what?\" Lori asked curiously.\n\n\"I have never been to California, I wonder how the guys there fuck,\" Samantha said. Lori almost choked when she laughed.\n\n\"Sam...\"\n\n\"Don't you want to find out?\" Samantha asked.\n\n\"You're crazy!\"\n\n\"Just a bit,\" I said.\n\nThere was a guy sitting at a table next to us that looked over when he heard Samantha.\n\n\"Lori, how often do you get to watch people fucking in the back of the limos?\" Samantha asked.\n\n\"About once a month, but I don't watch.\"\n\n\"Liar,\" Samantha said, and they giggled. \"Brian has watched us fuck.\"\n\n\"Seriously?\" Lori asked.\n\n\"Several times.\"\n\n\"He never said anything.\"\n\n\"He better not,\" I said.\n\n\"My sister gave him a blowjob.\"\n\n\"What!\"\n\nThe guy next to us looked over at Samantha.\n\n\"It's been awhile. It was his tip,\" Samantha said, laughing.\n\n\"James, you are okay with strangers watching?\" Lori asked.\n\n\"We just have some fun.\"\n\n\"James, we didn't get a limo with a bed in the back,\" Samantha moaned. \"We should have.\"\n\n\"Wanna bet,\" I said.\n\n\"What?\"\n\n\"The Escalade that has the facing seats has a bed. The two back seats fold back flat,\" Lori said.\n\n\"Cool!\" Samantha exclaimed. \"Can we be first?\"\n\n\"If Lori wants to drive,\" I said.\n\nThe guy was listening closely.\n\n\"Do you all do that often in the limos?\" Lori asked.\n\n\"Usually every time we rent one,\" Samantha said. \"We have done it with other couples in the back.\"\n\n\"All of you are crazy!\"\n\n\"Have the other drivers talked about people fucking in the limos?\" Samantha asked.\n\n\"All the time.\"\n\n\"I think I want to drive a limo!\" Samantha said.\n\n\"You will be busy working part-time at the store,\" I said.\n\n\"True.\"\n\n\"You are going to work part-time?\" Lori asked.\n\n\"Well...yes...can I tell her?\" Samantha asked.\n\n\"Sure.\"\n\n\"You know we are going to be selling swimsuits and lingerie, right?\"\n\n\"Yes, and fancy women's clothes.\"\n\n\"Well, in the swimsuit and lingerie area, the sales ladies are going to be wearing the merchandise.\"\n\n\"They are going to be wearing swimsuits? That will be different,\" Lori said.\n\n\"And lingerie.\"\n\n\"They are going to be wearing lingerie?\" Lori asked.\n\n\"Yep, if we can convince them to do it.\"\n\n\"Oh. Is that why you are going to work part-time?\"\n\n\"I think it would be fun!\"\n\n\"How are you going to keep guys out that just want to look?\" Lori asked.\n\n\"I'm still working on that,\" I said.\n\nSamantha and Lori talked while they ate for about 30 minutes. Samantha was telling Lori about some of the times we had sex in the limos. The guy sitting at the table next to us was listening.\n\nWe got up to leave at the same time the guy next to us did. We walked out to the Escalade, and I saw the guy next to us walk to an 18-wheeler and get in.\n\n\"Let me get my computer out of the back,\" Lori said. \"I want to look at their numbers again.\"\n\nLori got out, and we waited while she got her computer.\n\n\"Get mine too,\" Samantha told her.\n\nI waited until they got the computers out and were ready to go. They finally had everything sorted out, and I left and stopped at a gas station to fill up. After a few minutes, we were back on the interstate.\n\n\"James, do you think this is the best they will do on the numbers?\" Lori asked as she looked at her computer.\n\n\"We will have to see after we get numbers from California.\"\n\n\"Unless there is something we really like in California, I'm good if they are a little higher.\"\n\n\"We'll see.\"\n\n\"Oh, I did talk to Larry about reconditioning any used limos we may pick up,\" Lori said.\n\n\"What did he say?\"\n\n\"He said they do a lot of that. That's another benefit if we go with them.\"\n\n\"Are you going to get some used limos?\" Samantha asked.\n\n\"We hope to pick up some from the other limo companies we hope to put out of business,\" Lori said.\n\n\"On that subject, have you worked on what we are going to pay drivers? Since we will be charging about the same to start with, what is it going to cost us to hire some of their drivers away?\"\n\n\"Right now, James, I don't think we will need but eight more part-time drivers. There are four guys retiring from the sheriff or police that will be full-time. That will take care of most of the rides during the day. With everyone that is buying in and all the officers that will go to work for us, I'm not sure we will need many more.\"\n\n\"Just make sure we are covered for all 18 cars running all day every day the week of Valentine's.\"\n\n\"That may be an issue.\"\n\n\"How much do the other companies run during the day?\"\n\n\"Not much at all. The independents hang out at the airport.\"\n\n\"Would they have drivers available during the day?\"\n\n\"Maybe, but the other companies usually won't let a driver work for more than their company.\"\n\n\"Do some quiet research into that.\"\n\n\"I think we will have more competition during the day from the owner-drivers,\" Lori said.\n\n\"I thought the bulk of them only worked part-time after their day job?\"\n\n\"They do, but there are 4 or 5 guys that are retired, and that is all they do,\" Lori said. \"They may get in on the business around Valentine's.\"\n\n\"We will be the only company providing service that week to the store,\" I told her.\n\n\"But people may be asking for limos from the hotels if there are going to be big names in town for the grand opening.\"\n\n\"Not from the hotel they will be staying at.\"\n\n\"How do you know that?\"\n\n\"Everyone coming into town will be staying at the same hotel.\"\n\n\"Which one?\"\n\n\"You know the one they are building out near the store?\"\n\n\"Yes.\"\n\n\"Everyone will be staying there because the rooms will be compted.\"\n\n\"Are you paying for all the rooms?\"\n\n\"No. Linda Williams owns most of the hotel.\"\n\n\"Oh.\"\n\n\"It is opening that week also, and she is letting everyone in town going to the fashion show and grand opening stay there for free to get some publicity.\"\n\n\"Cool!\"\n\n\"We will be providing the limo rides from the airport to the hotel and between the hotel and the store.\"\n\n\"James, who is paying for all the limo service?\"\n\n\"Linda and I will be paying out from the store.\"\n\n\"How much press will be in town?\" Lori asked.\n\n\"We will have to find out from Linda, but I suspect a lot.\"\n\n\"James is taking all the pictures though,\" Samantha said.\n\n\"Does the press know that?\"\n\n\"I'm sure they will. I will be taking all the photos at the fashion show.\"\n\n\"That is going to be two nights?\"\n\n\"Yes. So, we will be moving people around for several days before and several days after.\"\n\nIt was quiet for a while as I drove.\n\n\"James, I have an idea,\" Lori said.\n\n\"What is that?\"\n\n\"We will probably need 6 to 8 more drivers for that week that can work all day during the day. I know six guys in town that own their own limos that are retired. I have wanted a way to get them to work for us. What if we hire them to drive for us for that week? It would give them a chance to check us out.\"",
        "\"That could work.\"\n\n\"All six of them are driving limos that are three or more years old. If we could show them, they could make more money just driving for us they may be interested in selling their limos and going to work for us. Once a limo is three or more years old if it is not maintained regularly, it can become a money pit. Some or all of them may be thinking about buying a new limo.\"\n\n\"That may be a good idea. Maybe you should just reach out to all the independent drivers and see where they are on the age of their cars.\"\n\n\"I can reach out to most of them. Some I don't want.\"\n\n\"Okay. Do that. Where on you on hiring a receptionist and people to keep the limos clean?\"\n\n\"Receptionists, I can get part-time from the university, probably people to wash and clean.\"\n\n\"Okay, but, I want the drivers to take responsibility for making sure their car is spotless.\"\n\n\"I have discussed that with all of them. They understand I am going to run an upscale service.\"\n\n\"Good.\" I was happy to hear Lori say \"she\" was running things.\n\n\"Have you talked to them about what they will be wearing?\" I asked.\n\n\"Yes. Dark suits, white shirts, tie, black shoes shined.\"\n\n\"Any push back?\"\n\n\"Most the guys wear good clothes. A few pushed back because they didn't have the money right now to buy new suits.\"\n\n\"Have them call me.\"\n\n*****\n\nWe got back to the house about 12:30. Dawn wasn't home, but Amy was there. We unloaded, and Amy offered to make us all lunch, so Lori stayed so we could do some work.\n\n\"What did you do this weekend,\" I asked Amy.\n\n\"Spent some time with my wife.\"\n\n\"Where is your wife?\"\n\n\"At school. How did your trip go?\" Amy asked.\n\n\"We had a lot to look at. Now we have a lot to think about,\" I said.\n\n\"Sam, I got you some long underwear,\" Amy said.\n\n\"Thanks.\"\n\n\"For what?\" Lori asked.\n\n\"The cadaver lab we will be in is cold,\" Amy said.\n\n\"Yuk,\" Lori replied.\n\n\"The operating rooms can be cold too. We can wear it under our scrubs.\"\n\n*****\n\nSamantha left after she ate, and Amy headed out to the library about 2:00.\n\n\"I better get going. I have some research to finish for a project this week,\" Lori said.\n\n\"Lori, the trip was fun, but, I don't want you to feel pressured into anything.\"\n\n\"Oh, I don't feel that way. I had a great time.\"\n\n\"Just make sure.\"\n\nLori was packing up when Dawn came in.\n\n\"How long have you been back?\" She asked.\n\n\"We got here about 12:30. Lori and I were going over some things.\"\n\n\"Did you get to see what you wanted?\"\n\n\"Yes. Lori is already leaning toward this company.\"\n\n\"Good. I hope you didn't work all weekend.\"\n\n\"We didn't,\" I said.\n\n\"Good. Lori, did you have a good time?\" Dawn asked.\n\n\"Oh...yes.\"\n\n\"Good. You will have to tell me about it when you can.\"\n\n\"Okay. James, I'll talk to you later,\" Lori said and left.\n\n\"She seems a little apprehensive,\" Dawn said as she came and sat next to me on the sofa and kissed me.\n\n\"She is. Talk to her next time you see her.\"\n\n\"How did things go...with her?\"\n\n\"She and Samantha had some fun the first night we were there. She got more into things the next night.\"\n\n\"Did she get pleased?\"\n\n\"Very well, I believe.\"\n\n\"Good.\"\n\n\"Let me ask you something, honey. I found that I enjoyed just feeling her energy while she was aroused. I didn't push her, I just felt.\"\n\nDawn smiled at me.\n\n\"What?\"\n\n\"When I am with some guy the first time, that is what I do mostly. I find it rather enjoyable, I am happy you do.\"\n\n\"Mostly? What else do you feel?\"\n\n\"I told you, I like feeling your feelings as you watch. I find it very erotic and arousing to feel some guy's excitement the first time, plus yours.\"\n\n\"I wish I could feel your feelings like that stronger,\" I said.\n\n\"You are getting there, honey.\"\n\n\"I don't think I am changing like you are.\"\n\n\"Yes, you are.\"\n\nDawn got up and went to the kitchen.\n\n\"Amy said she just spent time with her wife this weekend.\"\n\n\"We did. We spent some good time together. She wanted me to show her some of the things I do in my room.\"\n\n\"Good, you can teach her some of your things.\"\n\nI was sending Sam some email about what we had seen when Dawn sat back down with a sandwich and a glass of wine.\n\n\"Did you get your dead body situation taken care of?\" I asked.\n\n\"Oh, yes. The med students have their lab at 7:00. I was waiting on them.\"\n\n\"What did you say?\"\n\n\"I made sure the instructor and the students knew this would be the last time they commandeered my bodies.\"\n\n\"How did you do that?\"\n\n\"I just explained to them that if they thought their work was hard now, it would be a lot harder if they didn't have any nurses that would work with them.\"\n\n\"You think that will do it?\"\n\n\"Professor Howard knows I will do it and that he better get them under control. We will have our own lab in the new building.\"\n\nDawn ate while I finished what I was working on.\n\n\"Katrina called me yesterday. She said that she and Joe had a good time with Sherri and Brenda,\" Dawn told me.\n\n\"Good.\"\n\n\"She said she was looking forward to the trip.\"\n\n\"I hope she can help them out.\"\n\n\"Are you tired from the drive?\"\n\n\"A little.\"\n\n\"Why don't we soak in the hot tub.\"\n\nDawn and I got undressed and went out and got in the hot tub. She got next to me and laid her head on my shoulder.\n\n\"You feel tired,\" Dawn said.\n\n\"A little. We did a lot of work.\"\n\n\"Make sure you recharge before this weekend. I have to be at school for most of the day tomorrow. I have meetings all day.\"\n\n\"Any more on your trip to look at other schools?\"\n\n\"We are going to try and get that done in a few weeks. Two of the architects are planning on going with us.\"\n\n\"Take the digital camera. How are the plans going for the party?\"\n\n\"Nice try. There is not going to be a party for your birthday?\"\n\n\"Promise?\"\n\n\"Yes.\"\n\n\"Have you heard any more about the media coverage?\"\n\n\"Not from anyone that is important. Dr. Kennedy called me to thank me for setting him up with Linda and Rachel.\"\n\n\"What did he have to say?\"\n\n\"You can ask him, he is coming for dinner tomorrow night.\"\n\n\"He should have something good to say. He is a thoracic surgeon, isn't he?\"\n\n\"Yes, a very successful one. I invited him to dinner so he could meet Amy. She has been leaning that way.\"\n\nDawn kissed me, then stood and straddled my legs and sat on them and held me and put her head on my shoulder. We stayed that way for a long time before we went back into the house. Dawn took me up to our bedroom and sucked my cock until it was hard. She straddled me and worked my cock into her pussy then she lay forward onto me and put her legs behind her as I wrapped my arms around her.\n\n*****\n\n\"Hey, you two,\" I heard Samantha say.\n\nWe had fallen asleep, or I had. Samantha was sitting on the edge of the bed, running her hand up and down Dawn's back.\n\n\"You two feel good,\" she said.\n\n\"We were just resting,\" Dawn said.\n\nI felt that my cock was still hard inside of Dawn.\n\n\"What time is it?\" I asked.\n\n\"Almost 5:00,\" Samantha replied. \"I'm going to change clothes.\"\n\n\"Dawn, you have been lying on me for several hours and my cock is still hard.\"\n\n\"I know. You feel so good.\" She moved and sat up as she sat on my still hard cock.\n\nDawn slowly worked her pussy on my cock as I rubbed her thighs. She placed her hands on top of mine.\n\n\"Just feel me,\" she said.\n\nI did. I closed my eyes and felt Dawn's energy while she kept going for a long time.\n\n\"Ahhhh...\" I let out as I filled her full of cum.\n\n\"Now you feel rested,\" Dawn said as she eased off my cock and walked to the bathroom.\n\nI sat up on the edge of the bed. I did feel rested. I looked at the clock and was surprised because it was a little after 6:00.\n\n\"Dawn?\"\n\n\"Yes?\" She said, walking back into the bedroom.\n\n\"It's after 6:00. What did you do?\"\n\n\"Just recharging your batteries.\"\n\nShe walked to me, and I wrapped my arms around her and held her for a few minutes.\n\nThat night, Amy and Samantha slept with us. It was good to be home.\n\n*****\n\nTuesday morning Amy and Samantha had left for school about 8:30 with Dawn. Sherri and Brenda were asking me about my trip and the limos.\n\n\"We will make sure that we have plenty of limos for picking up people from the airport and shuttling people from the new hotel to the store that week.\"\n\n\"All that will be free?\" Brenda asked.\n\n\"Yes, Linda and I are covering the expense of the limos, and she is providing free rooms at her new hotel.\"\n\n\"I hope we have a good turn out.\"\n\n\"I'm sure Linda will be inviting all the right people to the grand opening and fashion show,\" I told them.\n\n\"We have been kicking around some ideas for photos to use on the website and in the store. We are meeting with some of the women in town that have successful businesses,\" Sherri said.\n\n\"What kind of ideas are you kicking around?\"\n\n\"Both of us know a lady in town that is a very successful Realtor. She used to come in to buy bathing suits from me and lingerie from Brenda. She is a very nice looking lady in her mid-forties. I talked to her this weekend about letting us shoot some photos of her in lingerie and swimsuits. She liked one of our ideas.\"\n\n\"What was that?\"\n\n\"I asked her if she would pose for some photos in lingerie while she posted one of her signs in front of a house.\"\n\n\"What did she say!\"\n\n\"She liked the idea. Brenda and I have made a list of all the professional ladies we sold to and are thinking about asking if they would pose in swimsuits or lingerie while at their job. We have some other ideas.\"\n\n\"Like what?\"\n\n\"Well, I know a younger lady that is a dentist. We thought a shot of her working on a patient while she was in lingerie would be cute,\" Brenda said.\n\n\"Now, I like those ideas.\"\n\nThe three of us talked about more people they knew and some ideas for photo shoots for a while.\n\n\"If we are going to be doing location shoots, plan ahead,\" I told them.\n\n\"We are going to run the ideas past Linda and see what she thinks,\" Sherri said.\n\n\"I think she will like the ideas. Tell her to have her lawyers put together a release for these ladies to sign so we will be covered to use them for advertising.\"\n\n\"Will we have to pay these ladies?\" Brenda asked.\n\n\"I think if they get to keep whatever they model, they will be satisfied. That will mean you need to get sizes and orders in for these ladies.\"\n\n\"That is what we will be doing until we leave in two weeks. We will know what samples to buy while we are gone and have shipped back,\" Sherri said.\n\n\"Have the samples shipped here. Get commitments from the ladies, and we will start the photo shoots as soon as you get back in November. If you are going to have some of the ladies outside in lingerie and swimsuits, we won't have too many warm days.\"\n\n\"We will plan the outdoor shoots first,\" Sherri said.\n\n\"Have Linda talk to the owners of the fur store and see if they want to get some similar shots with their furs,\" I told them.\n\n\"Maybe wearing furs and lingerie!\" Sherri exclaimed.\n\nWe talked about some ideas until after 12:00. They went out for lunch while I grabbed a bite and worked on the limo quote.\n\nMy phone rang about 12:30, it was Linda.\n\n\"Hey, Linda.\"\n\n\"How did your trip go?\" She asked.\n\n\"It went well. We are still going to California this weekend.\"\n\n\"Are you still going to help teach that self-defense class?\"\n\n\"Yes, and you and Rachel are going to be there.\"\n\n\"We will be. I spent some time with Sherri and Brenda last week, they are really moving quickly.\"\n\n\"How are your plans going?\" I asked.\n\n\"I have people taking care of everything. Where are you on the men's store?\"\n\n\"I'm ready to go. I guess I need to contact that man in New York.\"\n\n\"Why don't you give me his contact information, and I will take care of that for you.\"\n\n\"Okay, but I was planning on splitting my half with Sam.\"\n\n\"That's okay. If the guy in New York can't come up with enough to cover the other half, I will cover it. My marketing people think adding a men's store is a good idea. With or without the guy in New York, I want to open a store in the other half of the third floor as soon as all the fashion show hardware is removed.\"\n\n\"How fast can that be done?\"\n\n\"If we can get everything in place, what about getting all the display fixtures ordered and in storage locally, along with the inventory. If we do that, we could have the store open by the first of March. I am having the third floor finished like the rest of the store.\"\n\n\"That could work. When I get back Monday, we can start moving on it.\"\n\n\"Why don't I do this, James. I'll talk to your guy in New York this week and see if he is serious and what he can put into the store. If he is serious, I will have him fly in next week and meet with us. What about Wednesday?\"\n\n\"Sounds great.\"\n\n\"My marketing people are already working on designs for the store. We can go over them, and if all of you like what you see, we can start ordering fixtures with the ones for the men's store. We can store them locally.\"\n\n\"Sherri and Brenda have been looking for indoor storage for their things. I'll have them make sure it is large enough for all of the fixtures and inventory.\"\n\n\"Probably need 5,000 to 10,000 square feet,\" Linda said.\n\n\"I'll let them take care of it. Linda if you want a piece of the men's store, I can work something out.\"\n\n\"I just want it up and running. This was your idea, it's yours. If you need money, I will cover it. Let's see what the New York guy can bring in.\"\n\n\"Okay.\"\n\n\"I have already recruited some tailors and a designer that wants to retire and get out of New York.\"\n\n\"That sounds good. Maybe the guy in New York knows some others we could bring in.\"\n\n\"I'm getting excited about everything, James. I can't wait to get everything going,\" Linda told me.\n\n\"Linda, I have already been told not over to extend myself, don't you do it either.\"\n\n\"I have already hired someone to run the store.\"\n\n\"Sherri and Brenda said you have some early marketing plans. What are they?\"\n\n\"Oh, we have some things in the works. You will start seeing them soon.\"\n\n\"They came up with some great ideas for using some local business women for marketing.\"\n\n\"Sherri ran them by me, I told her to run with them.\"\n\n\"I know one business lady I would like to see photos of in lingerie,\" I told Linda.\n\n\"We'll see.\"\n\nI gave her the contact information for the guy I had met in New York.\n\n\"I'll call you after I talk to him,\" she said.\n\n\"Okay, I'll talk to you later.\"\n\nI went back to work on the limo quote until Sherri and Brenda came back from lunch.\n\n\"What did you two find for a warehouse?\" I asked.\n\n\"We located a couple of places,\" Brenda said.\n\n\"Our needs have changed. Figure out how much storage space you will need, then add 10,000 square feet to it.\"\n\n\"Why?\"\n\n\"Linda is moving the plans for the men's store up. We will need a place to store all the fixtures and inventory until March.\"\n\n\"We can do that this week. We'll lease a place we saw that we thought was too big,\" Brenda said.\n\n\"Good. Get it for six months.\"\n\n\"We will do that tomorrow.\"\n\nI called Sam and updated him on the plans to make sure he was ready with the money and if he would be available next week.\n\n*****\n\nSherri and Brenda were ready to leave about 4:00.\n\n\"James, we have meetings with Linda and visits to the store planned. I think for the next few weeks we have everything done we can do to get ready for our trip. If it is okay, Sherri and I will work out of our houses for the next few weeks. We will be visiting and talking to the ladies we want to use in the photos.\"\n\n\"That's fine.\"\n\n\"We will keep you posted and touch base with your before we leave.\"\n\n\"Okay. If you need anything, just let me know.\"\n\n\"We'll be in contact,\" Sherri said.\n\nThey left while I finished up some work.\n\nAbout 4:30, Dawn came back.\n\n\"How did your meetings go?\" I asked.\n\n\"We are going to visit two places next week. I'll be gone Tuesday to Friday.\"\n\n\"Okay. I talked to Linda today, and she wants to move up the men's store opening to March 1st. She is going to head this up and have the guy from New York come in next week to meet with us if he can.\"\n\n\"Have you talked to Sam about all this?\"\n\n\"I did, he is ready.\"\n\n\"James, let Linda do this, and even Sam.\"\n\n\"Linda is having her people from the store plan all this. She is going to go ahead and finish out the third floor and get us to order the fixtures and inventory. All of it will be stored, and as soon as the fashion show is concluded on the third floor, she is going get the men's store open by March 1st.\"\n\n\"Wow, that will be a lot of work.\"\n\n\"It is, and if her people want to do it, I am going to let them.\"\n\n\"Good, you have enough to do.\"\n\nSamantha and Amy came in about 5:00. I found the three of them having some wine in the den when I stopped for the day.\n\n\"Join us,\" Dawn said.\n\nI grabbed a glass of wine and sat with them.\n\n\"Samantha, make sure you are ready to get up and fly out with us early Friday morning.\"\n\n\"I will be. Are we flying first class?\"\n\n\"I guess, I told Lori to get first class. I think we are catching a late flight out Sunday.\"\n\n\"Will we have time to check out the beach?\"\n\n\"Not this time, we will not be near the beach,\" I told Samantha.\n\n\"Dang.\"\n\n\"Did you like what you saw in St. Louis?\" Dawn asked.\n\n\"We did. Lori is leaning toward that company because they are close. We will just have to wait and see. The company in California does build armored vehicles though.\"\n\n\"Are you still thinking about having one of those?\" Dawn asked.\n\n\"I'm not sure, they are very expensive.\"\n\n\"How expensive?\"\n\n\"Two or three hundred thousand.\"\n\n\"Each?\"\n\n\"Yes.\"\n\n\"Wow.\"\n\n\"Even at $10,000 a day or more to rent, it is a lot of money.\"\n\n\"You will need to think about that,\" Dawn said. \"We need to get dinner ready, Dr. Kennedy will be here about 7:00.\"\n\n*****\n\nThe gate buzzed about 7:00; it was Dr. Kennedy. I met him at the front door.\n\n\"Hey, Dr. Kennedy, come on in,\" I said.\n\n\"Hey, James, how are you doing?\"\n\n\"Good.\"\n\n\"Hey, Greg,\" Dawn said as she came to see him.\n\n\"Hey. I was afraid I was going to get stuck at the hospital.\"\n\n\"Long day?\"\n\n\"Problem patient, but she is stable now.\"\n\n\"Good. Now you can have a nice dinner,\" Dawn said to him.\n\n\"What would you like to drink?\" I asked.\n\n\"Beer is fine.\"\n\nWe walked to the kitchen.\n\n\"Greg, you met Amy and Samantha at the party,\" Dawn said.\n\n\"Hi, you two.\"\n\n\"Hi. Hi\"\n\n\"Amy, Dawn said you were thinking about specializing in thoracic?\"\n\n\"I'm thinking about it.\"\n\n\"It's hard for me to find good nurses to help during surgery.\"\n\n\"Why?\"\n\n\"It is a lot to learn. I have good surgical nurses, but not one like Dawn is wanting me to have.\"\n\n\"Is it too much to learn?\" Amy asked.\n\n\"I don't think so. I just don't think most nurses want to put the effort into learning everything they need to know. They are satisfied with just assisting. If it is something you want to specialize in, you need to learn your way around that part of the body and be in on as many surgeries as you can.\"\n\n\"I told Amy that if she decided to go this way you would be happy to let her observe as much as she can work into her schedule,\" Dawn said.\n\n\"Of course,\" he said.\n\n\"I have worked with a couple of heart surgeons the past few years,\" Amy said.\n\n\"That will help, but thoracic is a bit different than just heart surgery.\"\n\n\"Maybe I can observe some soon and see what all is involved,\" Amy said.\n\n\"Let me know when you have mornings available.\"\n\n\"I have two mornings free.\"\n\n\"Good. I'll give you my scheduling nurse's phone number and tell her you will be calling. Her name is Allison.\"\n\n\"Thanks.\"\n\nDawn and the girls had made us a nice dinner. After it, we were sitting in the den sipping some wine.\n\n\"Linda said she and Rachel had a good time,\" Dawn said.\n\n\"I was pleasantly surprised by the two of them,\" Greg said.",
        "\"You didn't have any problems from being in the media, did you?\" Dawn asked.\n\n\"No. I was happy to be seen with Ms. Williams. I understand you have some problems with President Wells.\"\n\n\"We did initially, but Linda cleared it up with him.\"\n\n\"What did she do?\"\n\n\"She told him that if he had any problems with my husband and I having two more wives, she would have a problem giving him $100,000,000.\"\n\n\"I bet that shut him up.\"\n\n\"It did, very quickly.\"\n\n\"College administrators can be narrow-minded,\" Greg said.\n\n\"I think we broadened his view!\" Dawn said, laughing.\n\n\"Dawn, can I ask about that?\"\n\n\"Sure.\"\n\n\"Are they really yours and James' wives?\"\n\n\"Not legally, but yes, they are.\"\n\n\"That sounds so special.\"\n\n\"It is. Amy and Samantha are our wives now. James and I love them just like we do each other,\" Dawn told him.\n\n\"He has three, and I can't find one!\" He said. \"I need to find one like you, Dawn.\"\n\n\"You probably do, from what I hear!\"\n\n\"Don't believe everything you hear!\"\n\n\"I don't know Greg, Jennifer and Wanda have told me quite a bit.\"\n\n\"I just have some fun with them, they know that.\"\n\n\"What about Allison?\" Dawn asked.\n\n\"I'm a bit unsure about Allison.\"\n\n\"Why?\"\n\n\"She likes to go out and have a good time, and she understands my crazy hours, but I don't think she likes me fooling around with Jennifer and Wanda.\"\n\n\"Why would you think that?\" Dawn asked.\n\n\"If I take Jennifer and Wanda home for a weekend they always tell Allison about it. Then I get the brush off from Allison for a week or so. Then I'll take her out, and we have some great sex, until the next time Jennifer talks to her.\"\n\n\"Have you talked to her about how she feels when you take Wanda and Jennifer home for the weekend?\"\n\n\"Not really. She always shuts down when I try and bring it up to see how she feels. I guess threesomes are a bit much for her.\"\n\n\"Greg, have you ever asked Allison to join the three of you for the weekend?\" Dawn asked.\n\n\"She wouldn't be that open.\"\n\n\"Have you asked her, Greg?\"\n\n\"No.\"\n\n\"Maybe you are getting brushed off by her after one of your weekends because you didn't invite her.\"\n\n\"You think so?\"\n\n\"Greg, you will never find out if someone you are interested in likes the same things you like if you don't ask her.\"\n\n\"Have you talked to Allison?\" Greg asked.\n\n\"I talk to her all the time.\"\n\n\"Did she say...I mean...did she tell you she wanted to join us?\"\n\n\"I'm not going to tell you that. You are going to have to ask her, Greg.\"\n\n\"You think I should?\"\n\n\"That's up to you.\"\n\n\"I didn't think she was into other women.\"\n\n\"You don't know if you don't ask,\" Amy said. \"It's always the quiet ones.\"\n\nGreg sat and thought for a minute.\n\n\"She just seems so...straight,\" Greg said.\n\n\"Oh, she is straight enough. She told me about a few other doctors that are taking care of her when you aren't,\" Dawn said.\n\n\"What? Who?\"\n\n\"Why? Do you care, Greg?\"\n\n\"No, I just...I didn't know.\"\n\n\"I think if you are interested in Allison, you need to approach her with something that would interest her,\" Dawn told him.\n\n\"Would she be interested in joining Wanda and Jennifer?\"\n\n\"Maybe.\"\n\n\"You said she might want to join us?\"\n\n\"I'm sure she would, but maybe Allison has other interest than just being with other women,\" Dawn said.\n\n\"Like what, Dawn?\"\n\n\"Well, Greg, I'm sure you could take care of the three of them for a weekend, but Allison and even Jennifer and Wanda might like something else.\"\n\n\"Like what?\"\n\n\"The next time you are going to take Jennifer and Wanda home for the weekend, why don't you tell Allison and ask her if she and a couple of her friends would like to join you? You have a big house.\"\n\n\"Dawn, I don't think I could deal with five women at one time.\"\n\n\"I didn't say Allison's friends were women.\"\n\n\"What?\"\n\n\"Greg, while you are taking two women home for the weekend, Allison is taking two guys home with her for the weekend.\"\n\n\"Really? I would never have thought she would do something like that?\"\n\n\"Like what?\" Dawn asked.\n\n\"Let two guys do her.\"\n\n\"What's wrong with that?\" Dawn asked. \"You take two girls home?\"\n\n\"Yes, but two guys is different?\"\n\n\"No, it's not!\" Dawn exclaimed. \"How is it different?\"\n\n\"It just is.\"\n\n\"You're an ass, Greg!\" Samantha and Amy laughed. \"You get to have a great time with two women, but if she wants to have a great time with two guys, you think that is wrong.\"\n\n\"I didn't say it was wrong, it's just different.\"\n\n\"Greg, you are digging yourself a deep hole you are not going to be able to get out of,\" I told him.\n\n\"James, you don't think that is a bit too much?\" Greg asked me.\n\n\"Why would it be? You get to enjoy two women at one time, why can't a woman enjoy two guys doing her at once? I don't see how it is different.\"\n\n\"James, you get to enjoy two, even three women at once. How would you feel if one of them did two guys at the same time?\"\n\n\"I actually thought it was pretty hot,\" I told him.\n\nHe started to say something, then paused.\n\n\"You mean...you have let Dawn, or one of them, do two guys at once?\"\n\n\"That hole is getting deeper, Greg,\" Dawn said.\n\n\"Greg, let me tell you something that is not going to work for you,\" I said. \"If you think you are going to let some woman have sex with two guys, you are already going to have a big problem.\"\n\n\"What do you mean?\"\n\n\"I'll explain how it works to you, Greg. Any of my wives can have sex with two women, two guys, or more if that is what they want to do. The reason they are able to do that is because I want them to have a good time and because I know that is exactly what they are doing, having a good time. If you want to say I let them do it, I guess I do, but only because that is what they want to do.\"\n\n\"You mean...you let Dawn...I mean...Dawn has sex with other guys?\"\n\n\"If that is what she wants to do. And, she does like doing that.\"\n\n\"Damn.\"\n\n\"Greg, if you are interested in Allison for more than sex, you need to consider what you have been doing and not inviting her, as well as what she has been doing and not inviting you. You two need to discuss it,\" Dawn told him.\n\n\"I wouldn't know where to start.\"\n\n\"Greg, why don't you just talk to her,\" Dawn told him.\n\n\"You want me to ask her if me and another guy can do her?\"\n\n\"Why don't you just ask her what she likes doing. I think Allison will tell you if you can handle it,\" Dawn said.\n\n\"You don't think I can handle being with her and another guy?\"\n\n\"No.\"\n\n\"Why not?\" He asked Dawn.\n\n\"Amy, you want to tell him?\"\n\n\"Because you are insecure,\" Amy said.\n\n\"I am not.\"\n\n\"Yes, you are,\" Dawn said.\n\n\"Why do you think that?\"\n\n\"Greg, how long have you been spending weekends with two women?\"\n\n\"On and off...two or three years.\"\n\n\"Why?\" Dawn asked.\n\n\"Why? Because it is a lot of fun.\"\n\n\"For who?\" Dawn questioned him.\n\n\"For all of us.\"\n\n\"Really?\"\n\n\"You don't think Wanda and Jennifer have fun?\"\n\n\"Oh, I am sure they have fun...with each other while they wait for you to get it up again!\"\n\nAmy and Samantha giggled.\n\n\"Dawn!\" Greg exclaimed.\n\n\"Greg, what Dawn is trying to tell you is that you are the one having all the fun. Wanda and Jennifer can have about the same amount of fun with just each other,\" Amy told him.\n\n\"We have sex all weekend.\"\n\n\"Greg, when you take two ladies home for the weekend, who gets the most out of it?\" Amy asked him.\n\nHe thought a minute.\n\n\"I guess I do...\"\n\n\"Don't misunderstand me, us ladies have a good time with one guy. But if you are the one getting the most out of it, you are not thinking about how the ladies could have more fun,\" Amy said. \"We have a good time with each other and a guy, but we have a lot more fun with two guys and each other.\"\n\n\"You too?\"\n\n\"Of course. I'm sure Wanda and Jennifer have a good time, and they may not be into having two guys do them at the same time, but it sounds like Allison is, Greg. If she is, would you be okay with that?\" Amy asked.\n\n\"If she likes that I could get into me and another guy doing her.\"\n\n\"Think about what you just said, Greg,\" Dawn added.\n\n\"What? I said I could get into that.\"\n\nDawn sat, looking at him.\n\n\"What?\"\n\n\"Greg, when me and another guy are doing Dawn, it is not because I can get into it. I do it because Dawn is getting into it,\" I said. \"You need to stop thinking with your cock and start thinking with your brain and consider what the woman gets out of things, and not just you.\"\n\n\"When I am with another woman and James, I know he his having some fun too. I also know he is thinking about the fun I am having with the other woman. I am not there with her just to entertain him...well not always,\" Dawn said.\n\n\"Are Jennifer and Wanda just entertaining you, or are they having fun with each other?\" Amy asked.\n\n\"I thought they were having fun with each other.\"\n\n\"I'm sure they are, but just think about reversing things and what you can provide to them for some extra excitement,\" Dawn said.\n\n\"I think you will find that watching another guy doing someone you want to be with can be arousing,\" I said.\n\n\"I'm still having trouble believing you let...Dawn has sex with two guys.\"\n\n\"Why?\" I asked.\n\n\"Well...I mean...damn, James, she is so fucking hot.\"\n\n\"I know. All of my wives are.\"\n\n\"Oh, I didn't mean...of course, you two are absolutely smoking too!\"\n\nAmy and Samantha giggled.\n\n\"But, why?\" Greg asked.\n\n\"For them, I know Dawn and the girls are having a good time. For me, I want them to have a good time,\" I said.\n\n\"Greg, someday when you are married, I hope you want your wife to have as much excitement in her life as possible. If that is being with another woman, with or without you, or being with another man, or men, with or without you, I hope you enjoy her having some hot fun. I know my husband enjoys knowing I have a good time,\" Dawn told him.\n\n\"But...don't you have a good time with him?\"\n\n\"Of course I do...but Greg...this may be hard for you to understand right now...I know my husband gets pleasure from me getting pleased. For that matter, my wives know I get pleasure from them being pleased. I get pleasure from knowing my husband is being pleased by another woman,\" Dawn told him.\n\n\"I'm sure James knows you are having fun.\"\n\n\"I don't think I can make you understand this, Greg. Yes, we know each other is having fun. I guess we can leave it at that,\" Dawn said.\n\n\"Am I missing something?\" He asked.\n\n\"Greg, how do you feel both physically and mentally after making love to a woman?\" Dawn asked.\n\n\"I feel good.\"\n\n\"I guess since you are not in a loving relationship I can't explain it. But, do you feel more than good? Do you feel pleased? Do you feel pleased that what you and the woman just did gave both of you a...hmmm...satisfying experience...on an emotional level?\" Dawn asked. \"And, I don't mean on a male ego level that you did something good.\"\n\n\"Sure.\"\n\n\"Tell me what you feel then?\"\n\n\"I guess...even if it is someone I am not in love with...I feel some level of oneness with her. Some kind of connection for a few minutes.\"\n\n\"Yes!\" Dawn exclaimed. \"That is what I am trying to say! The four of us feel that same level of a connected oneness with each other while we are experiencing satisfaction from someone else. Does that help?\"\n\n\"I think so. And, you are right, not being in a relationship makes it hard to understand.\"\n\n\"That's fine. But, until you are in one, just enjoy what the person you are with is getting out of anything you two do,\" Dawn told him. \n\n\"Okay, but I have a feeling you four get much more out of it than you can explain.\"\n\n\"We do, and we can't fully explain it to you,\" I said.\n\n\"Maybe one day I will understand.\"\n\n\"Until you do, just learn to enjoy what your lady friends enjoy,\" Amy said. \"If you can't, you will never find someone like Dawn.\"\n\n\"Or you, or your sister.\"\n\n\"Sorry, we are taken!\" Samantha said.\n\nEveryone laughed.\n\n\"Greg, I'll make you a deal. You talk to Allison and discover what she enjoys on every level. If you are okay with it, let me know, and the two of you can come for dinner some Friday night, and we will see what happens,\" Dawn said.\n\n\"Uhh, wait...you mean...you mean you and me...\"\n\n\"Well, maybe you, me, and James.\"\n\n\"Oh, my god, Dawn...\"\n\n\"But...I'll ask Allison if she thinks you can enjoy watching her being fucked first.\"\n\n\"Oh...what about Wanda and Jennifer? If they find out they may want to bring another guy.\"\n\n\"Hey, bring them too,\" I said. \"We'll invite some other couples.\"\n\nSamantha giggled.\n\nWe got off that subject, and he talked to Amy about observing for a while then he left about 9:30.\n\n\"You know what we should do?\" Dawn said. \"If he brings Allison, we should invite Linda and Rachel.\"\n\n\"I'm not sure Linda would be comfortable with Allison being here.\"\n\n\"Oh, I think she may be getting there.\"\n\n\"Dawn, he wants to fuck you so bad he will agree to anything Allison says,\" Amy said.\n\n\"I know. I'll use that to help Allison out because she really likes him,\" Dawn said.\n\n\"He is right about one thing,\" I said.\n\n\"What?\"\n\n\"All of you are smoking hot!\"\n\nThey all laughed.\n\n\"I think it is time to go to bed,\" Dawn said.\n\nI went upstairs with all of my wives. We got undressed and got in the bed.\n\n\"James, you really do like watching me being fucked?\" Samantha asked. \"I mean, I didn't ask you this weekend.\"\n\n\"Honey, you know I do. I enjoyed you having some fun with that guy.\"\n\n\"What guy?\" Dawn asked as she got in bed.\n\n\"I got Lori to answer the door for our room service naked,\" Samantha said.\n\n\"She had already propositioned the bellboy,\" I told them.\n\n\"Did you get Lori to let him fuck her?\" Amy asked.\n\n\"Not yet, but she enjoyed watching him fuck me while she was riding James.\"\n\nAmy laughed as she got in bed.\n\n\"I told James we should tie her up in California and let some guy do her.\"\n\n\"Sam, you know better than that,\" Dawn said.\n\n\"I bet she would like it.\"\n\n\"You find out first.\"\n\nDawn moved down since I was on my back and began playing with my cock.\n\n\"Dawn, would you let James tie you up in a hotel and do that?\" Amy asked.\n\n\"Not with some stranger.\"\n\n\"You let us tie you up before.\"\n\n\"That was different.\"\n\nDawn slid her mouth down my cock.\n\n\"Did you like watching,\" Samantha asked as she moved next to me.\n\n\"Did you like me watching?\"\n\n\"Oh...I did. I made him keep fucking me and keep fucking me so that you could watch.\"\n\n\"I know you did.\"\n\nSamantha kissed me for a minute then got up on her knees. \n\n\"I want to watch you now,\" Samantha said and placed her leg over my head so I could look up at her.\n\n\"You have to help,\" I told her.\n\nSamantha rubbed her tits then slid her hand down to her pussy and rubbed it for a few minutes as I watched. She smiled at me then took her fingers and spread her pussy lips apart and moved just enough I could run the tip of my tongue up and over her clit. \n\n\"Honey, would you like to watch a strange guy doing what you are doing?\" Samantha asked.\n\n\"I would.\"\n\nSamantha kept her pussy at the right place so I could lick her. The more I licked, the wetter she got. She moved closer so I could tongue her clit more.\n\n\"Emmmm...that is so nice...\"\n\nI tongued her clit until she was dripping her juices. She moved closer, and I sucked her clit into my mouth and tongue it.\n\n\"Ahhhhhhhhh...\"\n\nShe moaned for a few minutes then started coming.\n\n\"Ahhhhhh...yes...oh...god!\"\n\nSamantha jerked then squirted in my mouth.\n\n\"Ahhh!\"\n\nI watched as she rubbed her pussy just inches from my face.\n\nSamantha moved off my head and got with Dawn so they could both suck my cock.\n\n\"You have corrupted my sister,\" Amy said.\n\n\"I'm trying.\"\n\nAmy leaned over and kissed me.\n\n\"I'm not going to be a tease,\" she said and got up and straddled my mouth and lowered her pussy down.\n\nI looked up at Amy as she smiled at me while I tongued her pussy. Samantha and Dawn were busy sucking my cock as I worked on Amy's pussy. Amy was watching me and smiling until I started pushing her over the edge.\n\n\"Ohhh...yes honey...eat me...\"\n\nAmy rubbed her tits as she pushed her pussy down hard. After a few more minutes, she was coming and gushing in my mouth.\n\n\"Ahhhhhhhhh! Yes!\"\n\nAmy looked at me and smiled.\n\n\"He is ready for you, Amy,\" Dawn said.\n\nShe looked over her shoulder then moved back and straddled my cock and worked it into her pussy.\n\n\"My turn,\" Dawn said and straddled my mouth.\n\nI looked up at Dawn, and she smiled at me and winked. I pulled her down and slid my tongue into her deep. She closed her eyes and savored the feelings.\n\nAmy was busy working her pussy on my cock as I tongued Dawn. Suddenly, I felt a rush of energy from Dawn. I kept working my tongue in Dawn's pussy as I concentrated on her energy.\n\n\"Emmmmm...\" came from Dawn...then I felt it.\n\nI stopped tonguing Dawn for a minute as I concentrated. I knew what I was feeling was Amy's sexual arousal, and it was strong.\n\n\"Wow...\" I heard Samantha mumble.\n\nI concentrated on feeling Amy's energy for a minute. It was hard to separate, but I could distinguish between what was coming directly from Amy and what Dawn was pushing into me that was Amy's energy.\n\n\"Ahhhhhhh...\" I heard Amy moan, and her energy changed.\n\nDawn wiggled her pussy on my mouth to remind me to return to what I was doing. I worked my tongue in her as I felt everything. Amy's arousal had intensified, but I was feeling it from Dawn, mixed with her energy.\n\nAmy kept moaning as I felt her working her pussy hard and slow on my cock. It took me a few minutes, but I felt Dawn doing something with Amy's energy. The more I felt I knew what Dawn was doing. She was feeding Amy's energy back to her, and to me. Dawn and Amy both moaned for a long time; then I knew Amy was about to come.\n\n\"Ahhhhh...yes!\" Came from Amy as she thrust hard on my cock. \"Ahhhhhhh!!\"\n\nAmy started coming hard; then I felt Dawn come and shiver.\n\n\"Emmmm...\" came from her and she gushed hard and jerked.\n\n\"Ohhhhhhhh...fuck...\" I heard come from Samantha.\n\nDawn looked down at me and smiled. She moved from my head and sat next to me. Amy was slumped down on my cock; Samantha was lying back slowly rubbing her pussy.\n\n\"Dawn...what did you do to me,\" Amy moaned.\n\n\"I just let you feel your own feelings, along with James'.\"\n\n\"Damn...\"\n\nSamantha sat up slowly and looked at Dawn.\n\n\"I felt all of that,\" she said.\n\n\"I know,\" Dawn replied.\n\n\"I mean, I felt sis and you coming.\"\n\nAmy slowly slid her pussy off my cock and lay next to me. Samantha moved and took her place.\n\nSamantha worked her pussy on my cock slowly as Dawn fingered herself. I could feel Dawn's energy and knew she was feeding off Samantha. This went on for a long time as I watched.\n\n\"Go ahead, Sam,\" Dawn moaned.\n\nSuddenly, I felt Samantha pushing energy into me; she wanted me to come hard in her.\n\n\"Ohhhhhh...\"\n\nSamantha worked her pussy faster.\n\n\"Oh my...oh my...\"\n\nDawn's energy changed, and I knew she was pushing Samantha, without touching her.\n\n\"Ohhhh! Ohhhhh! Ohhhhhhhhhh!!\" Samantha screamed.\n\nWhen I felt Samantha's energy change as she started to come, I was hit with something strong.\n\n\"Ahhhh!!\" Came from me and I started thrusting up into Samantha as we both came hard.\n\n\"Fuck!!\" Came from Samantha.\n\nThe two of us came hard for a long time, then we both collapsed. We heard Dawn giggling.\n\n\"What are you laughing at?\" I asked.\n\n\"I don't know! It's just funny!\"\n\nWe all started laughing for a few minutes. After that, I turned off the lights and we went to sleep.\n\n*****\n\nWhen the alarm went off at 5:30, I reached over Amy and turned it off. Dawn wasn't in bed, but I heard the shower running.\n\n\"Good morning,\" Samantha said.\n\n\"Good morning.\"\n\n\"Where is Dawn?\"\n\n\"In the shower, I think.\"\n\n\"Why are you getting up so early,\" Amy moaned.\n\n\"We get up at 5:30 every morning.\""
    ],
    "authorname": "drmac100",
    "tags": [
        "james",
        "lottery",
        "redheads",
        "sam"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/life-after-the-lottery-ch-63"
}