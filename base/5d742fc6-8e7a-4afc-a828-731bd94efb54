{
    "title": "Duplicity Ch. 11",
    "pages": [
        "\"Merle! Merle!\" Sienna hollered over the noise when she caught sight of him. \n\n\"Come and meet my mom.\" She excitedly called him over. With all the running around, she hadn't seen him for a couple days now.\n\nSurprisingly after speaking with Mikhail, Sienna felt better. She finally knew all the horrible details of what Sean had been through and she finally saw a way to help him. It was the not knowing that was slowly driving her insane. She prayed everything would go according to plan.\n\nIf they stuck to the plan, everything would be ok. \n\nIf they stuck to the plan, everything would be ok. \n\nIt was the mantra that helped her sleep at night. \n\nNow all she had to do was keep her cool. She just needed to make sure Sean was comfortable and treat him affectionately just as she normally would. She didn't want to spook him.\n\nShe smiled at him and then noticed he was toting Layla behind him. Sienna noticed his hand possessively grab hers as they walked. Layla looked a little embarrassed and her gaze seemed apologetic. Interesting... \n\nShe thought they weren't serious. Initially Sienna teased Merle about Layla but never thought anything would really happen. The Merle persona wasn't exactly a look that would necessarily attract women, let alone Layla. How did that happen? She guessed she underestimated her little brother's skills. Same old Sean. Them being together made everything that more complicated. Didn't he realize how insane their lives were right now?\n\nJust then Sienna caught sight of Merle's clenched jaw and narrowed eyes; she knew that was her clue. Fuck off... \n\nWell fine. Sienna wasn't going to argue with him, even though it was a bad idea to get into a relationship right now. She worried about him even more. How was their plan going to work now? \n\nAfter observing him for a moment she noticed he seemed... different. Even though Sean put up a good front when he first arrived, Sienna knew he was battling something heavy. It was as if he was carrying the weight of the world on his shoulders... and was getting tired of standing.\n\nBut now with Layla by his side, he looked like he was ready to take on anything. With squared shoulders and with a calculated and determined stride he walked toward them. She knew it must be so hard seeing the family again after all these years. If Layla was helping him ease out of his shell, then Sienna would welcome her with open arms. \n\nHe needed to have all the fight in him possible, especially for what was to come. \n\nSienna already really liked Layla as a friend. But in the end it would be up to her. Sienna was pretty sure Layla didn't know Merle was really Sean. But Sienna was going to take a step back and let Sean handle it. If he wanted her advice, he would come to her. Or so she hoped. \n\nSienna walked up to meet them and hugged Merle in greeting. \n\nShe looked towards Layla and smiled. \"You look so pretty.\" \n\nSienna hugged her to reassure her it was ok. \"Just be patient with him. You really are good for each other.\" She whispered in her ear. \n\nLayla wasn't expecting that, she thought she'd have to awkwardly explain how they ended up together. But Sienna seemed to welcome her right in. Layla noticed Sienna had a very protective tone as she spoke. She chalked it up to Sienna being Sienna.\n\nThe three of them walked towards the awaiting group. There was a thick silence as they waited for someone to speak.\n\n...\n\nSienna patted his shoulders, \"He's shy but this is Merle, Jason's cousin. And you've already met Layla. Merle, this is my mom Sharon and Nicole's parents Gigi and Jose.\"\n\nMerle nodded towards them but remained silent. His hand remained glued to Layla's. \n\nAt seeing him Sharon cocked her head to the side seemingly deep in thought. Her eyes perused Merle's form from the top of his head to his feet just observing him. Merle averted his eyes from hers. Layla watched Sharon and thought that was odd. Was she checking Merle out?\n\n\"Have we met before Merle?\" Sharon asked. \n\n\"I just introduced him to you for first time mom.\" Sienna rushed to answer. But it didn't seem like Sharon was hearing her.\n\nSharon slightly narrowed her eyes at Merle in confusion. She slowly approached him as if trying to get a better look. \n\nShe smiled. \"We give hugs in this family.\" \n\nSharon got on her tippy toes and wrapped her arms around the stranger. She closed her eyes and squeezed him tightly. She inhaled deeply but stepped away before he could protest.\n\nWith widened eyes Sharon stared at Merle as she held herself perfectly still at the revelation.\n\nClearly confused from scene everyone waited for her speak. But she didn't. Finally she let out a toothy smile.\n\nSharon was kind of a free-spirit in her beliefs. In that moment she believed her son's spirit was manifesting itself inside this cousin Merle. She knew it sounded crazy but she just had this strong feeling. She confirmed it with his smell. She couldn't believe it! She would have to figure out how to tell Sienna. In the meantime she'd try to get to know Merle and see what kind of a person was her son's spirit was dwelling in.\n\nLayla looked between Merle and Sharon. What the hell? Did she just smell him? She felt herself get hot with irritation. Again, was she checking out her man?! Oh hell no. Did this cougar not see they were together?\n\nMerle was taken aback at Sharon's reaction. He didn't know what to say. Did she recognize him? She had just given him a hug the same way she used to when he was little. He willed himself not to react but it was hard. \n\nJust then he glanced at Layla who was trying to hide her glare at Sharon. If it had been any other time, he would have laughed at the obvious confusion. He pulled her a little closer breaking her out of her concentration. In response Layla smiled warmly at him.\n\n\"Nice to meet you Merle. So where in New York are you from?\" Gigi tried to make light conversation. She didn't know what the hell was wrong with her friend Sharon... checking out ugly cousin Merle like that. His girlfriend Layla looked like she was about to strangle her. She would have to snap her out of it.\n\nMerle nodded impassively at Gigi's question. He didn't trust himself to speak right now. Everyone kept their eyes on him waiting for him to elaborate because the question wasn't a yes or no question. But his response never came. \n\nGigi mumbled in Spanish something about having to meet yet another one of Jason's people with special needs.\n\nMerle's eyes traveled towards Jose who was analyzing him as well. Jose was now curious at the man who'd been somewhat rude to his wife by not answering her question. They stood there giving each other hard stares, neither one of them flinching. \n\nMerle observed the man he'd come to admire so many years ago and clenched his teeth as he tampered his emotions. He looked exactly the same; he might have even looked a little stronger than he was before. Merle remembered when he used to wish he would grow up to be as tall and strong as his uncle Jose. Fucking bullshit.\n\nLayla silently observed the exchange and thought the whole thing was a bit odd. It seemed like they'd met before. With all the commotion, she never made the connection with Merle's story about his uncle and the man in front of them.\n\nFinally Sienna came up and hugged Merle's free side and broke the silence. \n\n\"Isn't he squishy? I just love this guy.\" She beamed up at Merle. \n\nSienna sensed the tension and tried to lighten up the mood. Merle's arm wrapped around Sienna and squeezed her back. He looked down at her and gave her a crooked smile. \n\n\"Squishy huh? You calling me fat?\" \n\nIt was a little inside joke between the two of them. When they were little, Suzy would call Sienna fat behind her back. As soon as Suzy was out of sight, Sienna would stick her tongue out at her and yell out, 'I'm not fat, I'm squishy!'\n\n\"No squishy like a plush teddy bear, an annoying but cute teddy bear.\"\n\nMerle chuckled and shook his head. Sienna always knew how to put him at ease. Sharon and Gigi smiled at Sienna. They really weren't surprised she warmed to Jason's cousin so quickly. That was just the way she was.\n\nBy this time, Celeste made her way around to them and stopped when she spotted Merle. She smiled and her wrinkled face followed. After wiggling her fingers at him, she winked and then blew him a kiss. \n\nEveryone noticed the exchange and started laughing... loudly. Even Jose cracked a smile. \n\n\"It seems you have an admirer, Merle.\" Sienna tried to suppress her laughter but came out in fits of giggles. She remembered clearly how poor Jason 'got to know' Abuelita Celeste the very first time he met the family. \n\nLayla joined in on the laughter and thought, great... another one she had to keep her eye on.\n\n\"Watch out, she sometimes bites.\" Gigi whispered adding to everyone's laughter.\n\nMerle shook his head, same old Abuelita. God he missed his family.\n\nSuddenly there was some commotion at the door. Rafaele and the girls from the Italian hair salon had arrived. Layla instantly recognized the lovely ladies that gave her the makeover; Abebi, Maria and Maddy. Rafaele had actually shut down his salon, stating Jason and Sienna's wedding should be treated like a holiday. Although Layla suspected Rafaele really just wanted to party.\n\nSienna walked in their direction to greet them. Layla excused herself and happily moved towards them as well. \n\n\"Rafaele!\"\n\n\"Amore! There you are. You are positively radiant.\" He said as kissed the back of her hand. \"Your skin, that dress. You look good enough to eat.\" He naughtily whispered.\n\nLayla chuckled and shook her head. Embarrassed at his words she waved him off. She soon found out by speaking to him regularly that Rafaele was the biggest flirt known to man. Even though he was gay as you can get; he still managed to make a grown woman blush. But he was harmless, a real sweetheart. Layla greeted the ladies warmly. They seemed in awe of the house and it's surroundings.\n\nLayla was excited to see what Rafaele and Nicole had planned for bachelorette party. They were just waiting for the rest of the family to arrive. Layla was strictly hands off, as they kindly reminded her when she tried to help. They didn't want her to worry about a thing. At the bachelorette party, Layla would be a guest, a close friend of the bride and nothing more. A chance to let loose, Rafaele said.\n\n\"Everything ready for tonight?\"\n\n\"Yes my dear, it's all set up. I can't wait until you see it! With all due respect, this party is bound to go down in history. You just wait and see. Would you mind helping us round up the ladies so everyone can get to hair and makeup while I go run something by Nicole?\" \n\n\"Sure, no problem.\" Layla along with Rafaele's girls went around the room and started gathering the women and led them to the spa area in the gym. That's where Rafaele set everything up for tonight and that would be most likely where most of them would get ready for the wedding. \n\nBefore she left she saw Merle at the bar drinking some concoction. She walked towards him and tapped him on the shoulder.\n\n\"I'll see you later.\"\n\nMerle turned towards her in his bar stool and gathered her to him. He held her close as his hands fell around her waist. \n\n\"You sure you don't want me to dance for the ladies tonight?\" \n\nLayla laughed. \"Uh... no. But if you're a good boy, I might give you a private dance later.\" She whispered.\n\nMerle's strong arms tightened around her. \"Mm-mm. Hurry back then.\"\n\nLittle did she know there was no way he was going to let them go alone. Surely he wouldn't be missed at the bachelor party. All those women alone, probably intoxicated, was too much of an easy target. He would protect them without them knowing it. He'd just tell Jason when he saw him.\n\nLayla leaned over and gave him a soft peck on the lips. When she was about to pull back he pulled her in for more; this time taking all the control. Cupping her face in his hands he dominated her sweet mouth. Nibbling on her bottom lip, he groaned deep in his throat. They broke away when they heard the guys whistling and hollering, encouraging them to continue. \n\n\"Well damn! If Merle over there can get fine ass Layla to kiss him; I know I still have hope!\" Billy hooted. Ana looked dreamily in his direction and slowly nodded in agreement.\n\nMerle chuckled and shot them his middle finger. Quickly ignoring them, he went in for another delicious kiss.\n\n_______\n\nThe changing room was set up with rows of garment racks with all sorts of costumes and props. From the looks of it, they looked like very naughty looking costumes indeed. By the mirrors there were white fluffy wigs like the ones parliament would wear and long feather boas were draped nearby. \n\nWhat the hell kind of party had Nicole and Rafaele planned? \n\nA big cheer erupted outside. Jason must have arrived. All the ladies she'd finally gotten to stay in the area; filed out of the room to say hello to him. \n\nLayla chuckled, oh well she tried. She was just going to go with the flow. The old her would've gone crazy with the lack of organization. Until now she hadn't realized just how much she'd changed. Nothing could ruin her mood tonight. She was on cloud nine.\n\nSomewhere off in the distance, she heard the booming of infectious Spanish music get louder. She eyed a bottle of champagne placed in an ice bucket nearby. She poured herself a drink and shot it back quickly. She smiled. Let the party begin.\n\n_____\n\nThe bachelorette party was in full swing and Layla had never seen anything like it. She doubted the men had it this good. Their plans included something with long range shooting, cigar smoking, drinking and probably strippers. Typical.\n\nLayla was little late in getting there because she had to help some people last minute with their costumes. But they said to just go straight to the front entrance and they would let her in.\n\nSecurity was tight and she had to not only give her name but also show her ID. When she was ID'd, she was quickly whisked inside. The armed guards looked intense as if they were guarding the president. Jason spared no expense in security. Layla thought it was a little over the top, but she guessed it made sense since they were in a foreign country and they were known to be very wealthy. \n\nLayla was awestruck as she walked inside to the main hall. Nicole and Rafaele really outdid themselves. She knew the extravagance had to be from Rafaele; he probably spent a small fortune on it. \n\nThe theme was Moulin Rouge. All the women were already having a good time; they were all dressed in costume. There must have been over 100 people there. \n\nThey all wore intricate lace corsets in deep darker colors like emerald green, royal blue, deep reds purples and black. They wore sexy black stockings and matching garter belts. Fluffy gray parliament wigs graced their heads. Extravagant makeup and ornate jewelry completed their look.\n\nThe hall was fairly large and the walls were painted black. The bass of the music heavily pounded the walls as the infamous DJ Kong ferociously spun the turntables. Big gaudy chandeliers hung from the ceilings. There was lush red carpeting and decorative chaise lounges at every turn. Yards and yards of fabric draped from the ceiling creating an eerie dream-like environment. Large red and black feathers littered the tables. The stage was set up like a theater with a deep red curtain and there was a throne looking chair off to the side. \n\nLayla laughed in shock and shook her head. This was awesome. She wondered what Sienna's reaction would be; she was really a low key person.\n\nThe \"grapers\" were hunky half naked men who wore tiny leather black shorts. They walked around with large plates of grapes and their sole function was to stop by the drooling patrons and feed them grapes one by one. It was obvious these women had never seen anything like this before. There were screams and giggles at every turn. \n\nLayla found Nicole and Rafaele by the stage. She had to admit they looked hot. \n\nRafaele wore a black fitted tuxedo with an embroidered vest complete with a gold chain for his pocket watch. His top hat was tall and imposing and he even carried a cane. His stride was pure confidence and he oozed sex appeal. \n\nNicole on the other hand wore a gorgeous gold corset with intricate embroidery. Her long legs seemed to go on for miles as she walked in her extremely high heals and her fishnet stockings just added to the sexy. The matching top hat was cropped to the side on her fluffy gray wig. Layla laughed, these two were too much.\n\nNicole and Rafaele excitedly waved when they saw her. She felt awkward because she didn't have a costume. They said she would get dressed at the location with Sienna. They walked her to the back and led her to a private suite where Sienna was getting ready. Sienna laughed and shook her head when she saw her. \n\n\"Isn't it crazy?\" Sienna asked in wonder. \n\nLayla chuckled. \"It's amazing.\" \n\n\"I promised I would go along with anything they did, but oh my God! I never knew they would do something like this.\" Sienna let out a laugh.\n\nRafaele walked up and said, \"Yes, yes principesca we all know I'm a genius.\" He let out a sexy grin. \"Now remember tonight is your night to let loose and have fun. Layla go get ready, we are waiting for you.\"\n\nAnd with that Layla was quickly ushered along to get her hair and makeup done.\n\nThey got dressed and Layla realized her costume was a stunning embroidered corset in baby pink with feathers and a matching top hat. Layla had to admit she looked hot in this outfit. She wished Merle was there to see her. Maybe she would snap a picture just for him.\n\nNicole's cousins Ana and Isabella also wore light colored corsets. Ana's was yellow and Isabella's was light blue. It looked like anyone in the wedding party wore light colors and the rest of the guests wore dark colors. Layla was flattered. \n\nSienna's costume was pure white. White corset and garters, white feathers, white stockings... everything was white. She looked a sinful angel. Her corset was specially made for her tiny baby bump. Her parliament wig had the same fluffy light gray hair but it was styled in an updo and tiny white top hat was set on an angle in her hair. \n\nShe looked so beautiful. They all did. Their makeup and costumes, they looked like they should be in a magazine shoot. Layla was already having so much fun dressing up and letting loose, she only guessed what else the night would bring. \n\nAs Layla stood in front of the large mirror, Rafaele walked up behind her and admired her costume. He placed his strong hands on her waist. Slowly he smoothed his hands up and down, lightly grazing the underside of her breasts. \n\nLayla immediately moved out of his uncomfortable grasp. She turned to him in confusion. That was not a friendly touch, it was something more. \n\n\"What are you doing?\"\n\n\"What? I'm just making sure your costume fits properly.\" He let out a mischievous grin. His eyes had darkened and there was something about the way he stared at Layla that unnerved her.\n\n\"Are you sure you're gay?\"\n\nRafaele let out an exasperated sigh. \"Oh amore! Gay, straight, Bi... you Americans must label everything, no? Why can't we just have a good time without all the labels?\"\n\n\"I'm sorry... but whatever you are; I just see you as a friend. Nothing more.\"\n\n\"Fine amore. Whatever you say.\" Although his words said the right thing, the glint in his eye and his smirk said something else entirely.\n\nLayla narrowed her eyes at him. Yep, it was time to go. \n\n\"Good.\" Layla forced a smile and looked around the room for any of the other girl, but they had already filed out. Without a backward glance, she turned and walked out of the room and soon found the women making their way to dinning tables.\n\nAfter enjoying a delicious Italian feast, the group was ushered onto the stage. Everyone greeted the queen and her maids. Rafaele grabbed the mic and made an embarrassed Sienna sit on the throne while Nicole, Layla, Ana and Isabella sat on chaise lounge chairs around the throne. ",
        "There was a hunky 'graper' assigned to each of the ladies, ready to feed them grapes. All they had to do, was look them in the eye and suggestively open their mouths. Ana was having a ball, she looked she was about to jump the poor guy feeding her. By contrast the guy assigned to Isabella seemed overly eager to feed her. However with one icy glare from her and pursed lips; he backed off. \n\nThe man assigned to Layla was tall, dark and handsome; his chest was finely cut ripped with muscles. His eyes were dark pools of night, devoid of any light or softness. It was odd because it didn't look like he belonged at all. Layla felt a little uncomfortable with him being so close to her and kept politely declining his grape offerings. Maybe it was the odd exchange with Rafaele but she wasn't feeling it. \n\nSoon Layla got distracted by the show. One by one Rafaele called the entertainment to the stage. It started of innocent, with a clown juggling red balls making everyone laugh. Rafaele made a raunchy joke about juggling balls. The entertainment quickly turned more and more daring. It ended up with a man breathing fire behind several men who were simultaneously stripping. The DJ's music thumped along while crowd went wild, screaming and whistling. The ladies got up from their seats and turned it into a dance floor. Some even got on the tables to dance.\n\nFrom the stage, Layla saw Sharon and Gigi wearing more conservative costumes. They were hooting and hollering with the rest of them. Everyone was having a great time. One by one the muscled strippers gave Sienna a sexy lap dance while she laughed tried to hide her face in embarrassment. After a while Sienna lost her nerve, got up and started dancing with everyone. It was all in good fun.\n\nLayla needed some fresh air and decided to sneak backstage for some water. She walked through a long darkened halfway looking for the room they changed in; there were plenty of refreshments there. After turning the corner, she kept walking. Was this corridor always this long? That room must be close somewhere.\n\nSuddenly the hairs on the back of her neck rose as she felt someone was watching her. She turned to look behind her but kept walking when she saw there was no one there. \n\nWas her mind playing tricks on her or did she just hear faint footsteps? She quickly turned around but again saw no one. Nothing but the quiet black walls surrounded her. Maybe she was being paranoid, she kept walking. \n\nIt happened again. \n\nSomething wasn't right. There was a sick feeling in the pit of her stomach. She briskly walked to the closest room. Opened it and abruptly closed it behind her. It was dark inside, probably a closet of some sort. Her chest rose erratically with each bated breath.\n\n\"Don't scream.\" A deep voice whispered behind her.\n\nJust seconds away from doing just that, but as she turned with widened eyes she realized who it was.\n\n\"Merle?! Jesus Christ!! You scared the living shit out of me!!\" Layla hissed. Running off pure adrenaline, she felt her heart pounding out of her chest. With her hand over her chest, she doubled over and heaved trying to catch her breath. It was Merle all along.\n\n\"Calm down sweetheart. It's just me.\" He rubbed his hands down her back until her breathing went back to normal. His gaze hardened as he peeked out of the door without her noticing.\n\n\"You ok?\" \n\nLayla nodded as she stood and let out a soft smile. She was so relieved to see him. Throwing her hands around his neck, she squeezed him into a hug. She was scared shitless.\n\n\"Hey, you're ok.\" He ran his hands on the side of her face. \"There's nothing to be scared about.\"\n\n\"What are you doing here? Aren't you supposed to be with the guys at the bachelor party?\"\n\n\"Jason wanted me to come by and make sure you guys were ok.\" Well, that was mostly true. Merle told Jason he was going to go check on the women and make sure they were ok and he agreed. \n\n\"Why would he ask you to do that? Of course we're ok unless... you're really here to spy on us.\" Layla gave him a suspicious look.\n\n\"Maybe just spy on you...\" His eyes traveled down her body slowly. \"And what the fuck are you wearing?\"\n\n\"A... costume?\"\n\nMerle let out a grunt. \"And this is why I obviously needed to be here.\" His tone came out harsher than she was used to.\n\n\"Well I'm glad you were the one to come.\" She pulled him into a hug trying to soften him up. He seemed to be on edge.\n\n\"Yea?\" He pulled her closer and buried his nose in the crook of her neck. He planted soft kisses there. Layla breathed a sigh of relief and felt herself relax completely.\n\n\"Why don't you go ahead back to the party? I'll meet up with you when this is finished.\" \n\nLayla wanted to protest but held her tongue. She wanted to tell him why she was all shaken up and at the bizarre exchange with Rafaele, but she held back. She remembered what he did to those men on their first date and at that time he didn't even break a sweat. \n\nPlus the fact that he already seemed tense. She didn't want her paranoia and perhaps a simple misunderstanding get Rafaele and that other guy beat up.\n\n\"Ok sounds good.\" She reluctantly said.\n\n\"I'll be around the corner checking some things out with the security team.\"\n\nShe felt so silly, she was just being paranoid. With one last smile she walked off to join the others back on stage. This time she found her way back right away. She snorted; she was obviously loosing her mind.\n\nJust as she was about to go up the small steps she heard a familiar voice.\n\n\"Hello love.\" It was Henry. He quickly whisked her up into a bear hug.\n\n\"Henry! You're back? How did you know we were here?\"\n\n\"I got back a little earlier than expected. And the people in the house told me about the bachelor and bachelorette parties tonight. They insisted I choose one to go to. And I thought this one sounded much more interesting.\" He whispered and let out a smile.\n\nIn turn Layla smiled warmly at him. It was nice to have him there. \"Well go and get some food and we'll talk later.\"\n\n\"Alright love, you come and find me.\" He turned and walked away. \n\nUnfortunately Layla didn't see how his features hardened and his teeth clenched as he glanced into the darkened hallway.\n\n___________\n\nIt was the wee hours of the morning and the Bane estate was practically empty. No one had arrived from the parties yet. And Abuelita Celeste roamed the halls looking for her Alejandro. \n\nGigi left her with a sitter while she was at the bachelorette party. They set her up in a little lounge area next to her bedroom and played several of her favorite Spanish soap opera episodes. This would ensure she'd stay put and out of trouble. \n\nUnfortunately after a couple of hours, Mona the woman in charge of watching her fell asleep on the couch after a long day of work. It didn't help that Mona didn't understand a word of what the actors were saying in Spanish. And so when all the episodes finished, Celeste was excited and wide awake.\n\nShe was obsessed with this Spanish soap opera and truly believed she was the young heroine in search for her long lost love. In her long airy nightgown, she tip-toed quietly as to not be heard. Her thoughts were only of him and finally seeing her Alejandro. She called out his name, but got no answer.\n\nShe wandered to the 4th floor and looked in every room. As she searched, she was very quiet. Finally at the end of the hall she found a room that had to be his. She crept in but found no one there. She would surprise him and wait for him in his bed. She slipped off her gown and climbed under the sheets. She let out a toothy smile and her wrinkly face followed. \n\nFinally they would consummate their undying love for each other. \n\n___ "
    ],
    "authorname": "partial2passion",
    "tags": [
        "black woman",
        "disguise",
        "suspense",
        "grandmother",
        "bachelorette party",
        "wedding guest",
        "family"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/duplicity-ch-11"
}