{
    "title": "Idle Hands Ch. 03",
    "pages": [
        "Warning for people who are new to this series:\n\nFirstly, despite the Literotica title, this is book four in this series, which tells the story of Althea, a succubus who is unwillingly transferred to the mind and body of Rachel Wainwright, a successful attorney with two children and an estranged husband. When posting the first part, I forgot about the rule that a multi-part series had to have the same main title and be divided into chapters. So you can find the first three parts under Idle Hands, Idle Hands, Chapter 1, and Idle Hands, Chapter 2. I apologize for the confusion.\n\nSecondly, this series is hard to categorize. All eight chapters, conceivably, could go into the \"Sci-Fi and Fantasy\" category. But since I want to be honest and not disturb people who are turned off by the taboo nature of the later chapters, parts four through eight will posted in the incest/taboo category.\n\nThirdly, this book is not for those who desire a quick spank. There is sex in every chapter. In fact, there's quite a bit of sex. But there is a plot and there is character building and there is quite a bit of romance. My best advice, if you want to understand the story (especially if you are new to it, since this is the first chapter posted in the taboo category) is to read the story from the beginning. It is one of the best things I have done, and I think reading the whole story will make the taboo bits burn even hotter when you get to them.\n\n*****\n\n\"Well, Mr. Fontein, what do you have for me today?\"\n\nLloyd Fontein swallowed nervously, the stink of his own terrified sweat surrounding him in a fetid reek.\n\nWhat happened to me? he thought miserably. I was a man once. Maybe not a good man. But still a man. Now I'm working for a damned monster.\n\n\"Mr. Fontein?\" The voice was lower, coated with honeyed menace.\n\n\"Yes, Mr. Kincaid,\" he said, the necessity of keeping his body and soul together outweighing his terror. He had only needed one example of what Kincaid did to those who displeased him. Only one example of what happened when he let his inner demon loose, an unholy terror which was only matched by his outer hideousness.\n\nSometimes, he managed not to scream when he thought about that night.\n\n\"I'll e-mail you the transcripts of the conversations my devices have recorded in the Wainwright household, sir,\" he said, covering his fear in a thin veneer of professionalism. \"But there have been several changes in the last several days.\"\n\n\"Go on.\"\n\n\"First of all, it seems that Rachel Wainwright has reconciled with her husband. Joshua Sunderman arrived at the residence Friday afternoon. He brought a trailer with him, so it appears he is preparing to stay for several days at least, perhaps longer. Audio pickups around the house indicate a great deal of affection between Mr. Sunderman and Ms. Wainwright.\"\n\n\"So.\" The word came out in a sibilant hiss, and Lloyd shuddered. \"The she-bitch has her mate back, and is spreading her legs for him. What else?\"\n\n\"The younger children have received their parents' permission to pursue new academic careers. The boy will be attending drama school. The daughter, culinary school.\"\n\nA hand, the nails black and clawlike, made a dismissive gesture. \"Uninteresting.\"\n\n\"Due to her husband's return, it seems Ms. Wainwright has extended an offer of full-time employment to her maid, Maria Ochoa,\" he said, thumbing through his notepad. \"There are also indications that Ms. Wainwright and Ms. Ochoa may be romantically involved, although the evidence is largely circumstantial. It is certain, however, that Ms. Wainwright has ordered Maria to wear attractive clothes around the house. This may be a personal request, or the result of a fetish of some sort.\"\n\nA low growl broke from the fanged mouth of the creature behind the desk, and Lloyd locked his knees, trying to control his terror. \"Damn her,\" the demon hissed. \"I bugged her house for six months, waiting for an opportunity like this. A chance to blackmail the lily-pure cunt and make her blow the lawsuit on purpose. And now when I have the evidence which could ruin her, the case is settled. Damn her and damn Hardin, too. That senile old fuck will pay, you can be certain of that. And Wainwright and her precious family as well.\"\n\n\"Yes, sir,\" Lloyd quavered. He wiped a sweating palm against the fabric of his cheap trousers.\n\nJust get me out of here alive, he thought. Fired from the Chicago Police Department for brutal misconduct his superiors couldn't ignore, he had been reduced to earning a meager living as an unlicensed private investigator, tailing unfaithful husbands and cheating wives. It had been that which brought him to Mort Kincaid's notice. Needing someone with Lloyd's contacts and knowledge of police procedure, he had been brought in, first as a consultant, then as a full-time employee. No means of gathering dirt were out of bounds. Extortion, bribery, breaking into houses to plant listening devices, they were all fair game. But the job and money had been a trap. The being which called itself Mortimer Kincaid was not a human, but a demon-spawn. The hellish offspring of a female demon and a mortal man.\n\nLloyd Fontein was no choir-boy. Twenty years on the force had beaten all the starry-eyed innocence out of him. But even a man as devoid of empathy as he was had a soul, scabby and corroded though it might be. And when he saw Mortimer Kincaid in his true form, undisguised by the spells he used to hide among humans, he believed, truly believed, for the first time, in the existence of evil and of Hell.\n\nBecause Kincaid could only have emerged from the depths of the Pit itself. He stood now, looming over Lloyd like a vulture over a particularly tasty piece of carrion. His huge, grotesque body was a mottled mockery of a human's form, the skin the greenish-yellow color of a livid bruise, with a strange oily sheen. Black claws gouged runnels in the wood of the desk. Poison dripped from the fangs which jutted from each corner of his mouth, sizzling like acid where they fell. Horns, curved like a goat's, erupted from his scowling forehead and ended in wickedly sharp tines near his jaw. His eyes were black and utterly without humanity.\n\nHe hunched in rage, and for a bowel-loosening moment, Lloyd was sure Kincaid was going to kill him. Jump on him like a wolf on his prey and gut him on the spot. Then he stepped back, his pose relaxing slightly.\n\n\"Well,\" he said, the cultured tones of his voice at odds with his misshapen mouth. \"Too late now, I suppose. There will be other times. And this case is over. I won't be needing any more information about Rachel Wainwright and her darling little family for now.\" He grinned menacingly. \"But there's no telling what might be useful in the future. Do you have anything else for me before we wrap this up? Or would you like to join me for lunch?\" He gestured to a cardboard box near his desk, from which scraping noises and a few pitiful mews could be heard.\n\nLloyd closed his eyes and swallowed, forcing down bile. Just for an instant, he considered sharing the salacious details he had gleaned on Saturday afternoon. The conversation between Rachel and her daughter about Joshua Sunderman could wreck the woman's career. But some fleeting spark of humanity kept his mouth closed. Instead, he chose to divulge what he considered to be an insignificant detail.\n\n\"Just one more. Apparently a friend of Ms. Wainwright was missing. She and her daughter spent a good deal of time yesterday afternoon calling police departments and hospitals, looking for a woman named Althea Carpenter. They finally located her in a hospital, but the woman is in a coma. Or at least, severely ill.\"\n\n\"What?\"\n\nThe voice was quiet, but with an intensity that jerked his head up from his scribbled notes. Kincaid was staring at him. The expression of joyous hope on his face was almost obscene.\n\n\"Carpenter? Althea Carpenter? You are sure of this?\"\n\n\"Yes, sir,\" Lloyd said. He scrolled through his iPad until he found the audio file he needed. In moments, Sarah Sunderman's clear young voice could be heard, asking for information about Althea Carpenter. As the file played, they could both hear the switchboard operator confirm her name and the news she was in a coma.\n\n\"A coma,\" Kincaid gloated. \"By the Lord of Darkness himself! Althea Carpenter has fallen into my grasp.\" Before Lloyd could react, he found himself lifted and shaken like a rat, Kincaid's terrible hands bunched in the jacket of his cheap suit. \"Where is she?\" he roared. \"Where is she?\"\n\n\"I don't know!\" he squeaked. In his terror, his bladder cut loose, a thin stream of urine soaking his pants. \"Listen to the file. No one says the name of the hospital. It could be any of the ones on the north side.\"\n\n\"You find it,\" Kincaid growled. His breath, stinking of blood and death, wafted over Lloyd's face. \"Do you hear me? You find out where she is. Hardin can wait. Wainwright and her family can wait. You find Althea Carpenter for me. And I will make her a gift to the Dark Lord himself.\n\n\"If you don't,\" he said, \"Your death will be one that she-demons use to terrify their imps until the end of time. You will curse the day your father met your mother. I will destroy you so utterly that the Almighty will look for eternity and never even find your soul.\"\n\n*****\n\nOh my fucking Christ he's gorgeous.\n\nSarah stood stock-still at the counter island in the middle of the kitchen, her hands wrist-deep in a bowl of hamburger, staring at the man her mother had just introduced as Jeremy Edwards, a law student who had been working as her intern for the past few months.\n\nIs love at first sight possible? Or am I so fucking horny any man will do?\n\nBut no. Despite the desperate itch in her lady-parts, which had been driving her to more and more intense sessions of self-pleasure over the past week, she knew what she was feeling for Jeremy was more than simple randiness. She drank him in like he was a glass of clear water on a hot day. He was taller than average, topping her by an inch or two, which was a relief, since she was tired of dating men shorter than she was. He was dressed in tan cargo shorts, loafers, and an dark blue polo shirt, untucked at the waist. His hair was a nondescript brown, and his eyes were an unusual shade of greenish hazel.\n\nBut it was his face that drew her. Clear, open, and alive with intelligence, she felt she could watch it all day and not grow tired of the sight. His mouth was mobile, his lips quirked in an easy smile, and his nose clean and straight, unlike the jutting beak her brother and father shared. The Naismith Nose, it was called, and she thanked God she had managed to avoid it.\n\nWith a start, she realized she was staring, and that her parents were looking at her expectantly.\n\n\"Sorry,\" she said with a shake of her head. \"I guess my mind was somewhere else.\"\n\nLike his pants. She fought to keep her eyes from dropping to Jeremy's crotch, not wanting to be caught checking out his package.\n\nShe wiped off her hands with a dishtowel, trying to scrub as much raw hamburger and egg yolk from herself as possible. \"Hi,\" she said, advancing with her hand outstretched. \"I'm Sarah.\"\n\n\"Jeremy,\" he replied, shaking it firmly and meeting her eyes. \"Pleased to meet you.\"\n\n\"Sarah's the cook in the family,\" Alex put in from his spot near the dining room table, one arm around his girlfriend Maria's waist. \"There isn't much she doesn't know how to make.\"\n\n\"So did I make a mistake?\" Jeremy asked, still holding her hand. She fought an urge to caress his knuckles suggestively. He cocked his head toward the counter, where a tub of potato salad and a blackberry pie was sitting. \"I'd hate to take this back home and eat it all myself,\" he said sadly, but she caught a gleam of mischief in his eyes.\n\n\"No,\" Sarah smiled. She swooped in and put the items in question into the fridge. \"There,\" she said with a grin. \"Now they have a happy home. At least until we eat.\"\n\n\"Terrible girl you have there, Miss Wainwright,\" Jeremy said mournfully, looking at his former boss. \"A man goes to the trouble to bring in food for everyone, and she hides it away.\"\n\n\"You'll get your chance later,\" she said with a twinkle. God, she hadn't had a man flirt with her in weeks. \"Dad, let me know when you and Alex are ready to fire up the grill. Jeremy, can I get you something to drink?\"\n\n\"Soda would be okay, as long as it's diet,\" he said, slapping his middle. Despite his words, his stomach was flat as a washboard. \"Beer would be better.\"\n\nShe pulled three Amstels out of the fridge, handing one to her brother and one to Jeremy. \"One for you, Dad?\"\n\n\"Alcohol and propane don't mix, Pumpkin,\" her father said with a smile. \"I'll wait until we eat.\" He picked up the tray with the brats and hot dogs and walked out of the kitchen with his wife. \"Bring me the burgers when they're ready, okay?\" he called.\n\n\"Maria?\"\n\n\"No, thank you, Sarah,\" said her brother's...what? She knew Alex had gone to bed with Maria the day before. It was difficult, though, to think of the maid as her brother's girlfriend. She held herself back, her pose strangely deferential. Sarah's lips tightened in disapproval as she took in the clothes she was wearing; shorts barely long enough to cover her ass-cheeks and a t-shirt cut so low over her chest it was a wonder her tits didn't fall right out.\n\nDon't be jealous, she told herself. You should be happy for Alex. Happy for them both, really. Look at him. He's actually smiling. And he looks so relaxed. He's been so tense the last few months. And Maria's practically glowing.\n\nShe popped the top of her beer and handed the opener to Jeremy. \"Cheers,\" she said, when his bottle was uncapped, clinking hers against it with a muted chime. She took a healthy swig, the beer pleasantly cold in the warm kitchen.\n\n\"So,\" Jeremy said, his eyes crinkling with mischief. \"I hear you're a cook.\" He leaned against the counter island and looked her over, his face openly appreciative. \"My dad told me you should never trust a skinny chef.\"\n\nShe raised her eyebrows, taking the bait. \"Your father is wrong,\" she grinned. \"To the contrary, you should never trust a fat chef.\"\n\n\"Why's that?\"\n\n\"Because a fat chef obviously doesn't trust his own skill. He is always tasting his dishes, to make sure he has the recipe right, and gains weight.\" She made a dismissive gesture. \"Not me. I know my food is awesome. So I wait until the meal is served before I eat.\"\n\n\"And it is wrong to say Sarah is skinny,\" Maria put in. \"She is just tall. Her breasts are very nice. Just as big as Senora Wainwright's. Well, almost,\" she amended, an attractive blush darkening her Honduran skin.\n\n\"And how would you know?\" Alex teased. He cocked an eyebrow at her. \"Have you seen my mother or sister with their shirts off?\"\n\n\"Not yet,\" she said, laughing throatily. Alex smiled and brushed his lips over her temple, drawing her even closer.\n\n\"Jesus, get a room,\" Sarah muttered, as Alex fell into a chair, drawing Maria down onto his lap. She bent her attention to the hamburger, slapping out patties with practiced motions and placing them on a cutting board. \"So where do you go to school?\" she asked Jeremy, hating the asinine question, but unable to think of a better conversational gambit.\n\n\"I'm at UIC for law school. One more year and I'm out,\" he said, smiling easily. \"Then the bar exam, and hopefully a good job.\"\n\n\"Do you want to stay local?\"\n\nJeremy nodded. \"Ideally, yeah. Someplace like Chihiro would be great. I want to be in environmental law, like your mom. She's been a heck of an inspiration for me.\"\n\nSarah paused, a hamburger patty still in one hand. \"Really?\" she asked, unable to keep the surprise out of her voice.\n\n\"Hell, yes,\" he replied. \"She's a freaking legend with the enviros over at UIC. Do you have any interest in the law?\" he asked. His voice wasn't condescending, simply curious. When she shook her head, he continued. \"She's done more for environmental law in fifteen years than most other people do in a lifetime. The amicus brief she wrote for the Illinois Supreme Court in the Coke Iron and Steel case is a damn masterpiece. They teach it in class as an example of an ideal brief. Soundly grounded, legally airtight, no extraneous information or wandering into side issues...\" He caught himself and grinned ruefully. \"Sorry. Didn't mean to carry on like that.\" He gestured at her bowl. \"Anything I can do to help out?\"\n\n\"All done here,\" she said, wiping off her hands and lifting the tray of burgers. \"But if you could grab the barbeque sauce and the cooking things, that would help.\"\n\nJeremy quickly complied, juggling sauce, spatula, brush, and other utensils. Her hands full, Sarah nodded him in the proper direction. As they went through the dining room, they passed Maria and Alex, who were enthusiastically making out in a chair, Maria straddling Alex's legs. Maria gave Sarah a lazy smile and a wink as she passed, her hand softly stroking the bulge in Alex's pants. She couldn't help but notice its impressive size, and the fact that Alex's hand was enthusiastically exploring the inside of Maria's t-shirt. Her pussy gave a frustrated spasm in response.\n\nI've got to get laid. I'm going crazy with all these pheromones floating around. With Mom and Dad back together, and Alex and Maria acting like a couple of cats in heat, I'm the only one who doesn't have a love life.\n\n\"Don't mind them,\" she said, trying to keep her voice nonchalant. \"Maria and my brother just got together, so they're not being very...\"\n\n\"Discreet?\"\n\n\"Right.\"\n\n*****\n\nThey joined her parents on the back deck. Her father had the grill going and was industriously scraping years of coated-on gunk off the surface.\n\n\"I know you didn't do this, Pumpkin,\" he remarked, as they opened the sliding door and walked out onto the wooden surface of the deck. \"But remind me to have a talk with you kids about proper grill maintenance.\"\n\n\"That was Alex,\" she protested. \"I told him to clean the grill every time he used it, but he said that burned-on barbeque sauce made the food taste better.\"\n\nRachel made gagging noises, and even Jeremy looked a bit green. She handed the tray of burgers to her father, and sat down in one of the chairs, looking out over the back yard and towards the forest preserve. Swallows and finches flitted through the air, chirping merrily, and squirrels scampered up the tree trunks, intent on their own mysterious tasks. \"I'm so glad spring is here,\" she said. \"This winter seemed to last forever. We had snow in April, for God's sake. Now the flowers are up, the trees have their leaves out, and the grass is actually green, instead of brown.\" She lifted her face up to the sun, slowly sinking beyond the maple trees her parents had planted when they moved in.\n\n\"I know what you mean,\" Jeremy said. He sat down beside her, his long legs stretching out underneath the glass-topped patio table. \"My dad runs a landscaping business. I've helped him put in flowers and trees and bushes for years. I always feel better when the weather warms up.\"\n\n\"I think we're tuned into it,\" her mother said. \"Humans, I mean,\" she continued, looking at them. \"We're hard-wired into the turn of the seasons. For thousands of years we literally depended on reading the weather right. When to sow, when to harvest, when to hunt. When to send your animals into the fields, and when to bring them back.\"\n\nHer father started humming an old sixties song, and Rachel wadded up a paper napkin and threw it at him. \"Cut out that hippie crap, Josh,\" she said, but her lips curved in a smile. \"You know what I'm talking about.\"",
        "\"I do,\" he said, laying burgers on the grill with a sizzle. A tantalizing aroma rose and wafted over the deck. He sat down beside his wife and leaned in for a kiss. \"It doesn't make it any less true.\"\n\n\"Miss Wainwright tells me you're an artist, sir,\" Jeremy said.\n\n\"For the love of God, Jeremy, call me Rachel. I'm not your boss anymore.\"\n\n\"I am,\" her father said, answering his question. He raised an eyebrow, inviting him to continue.\n\n\"And that you do a lot of work in...adult themes?\"\n\n\"I do,\" Joshua said. \"It's gotten me into trouble sometimes. And not just by the so-called arbiters of moral authority and good taste.\" He cast a sardonic look at Rachel, and Sarah bit her lip.\n\nOh, please, not another fight.\n\nBut her mother simply smiled and raised her wineglass, conceding the point.\n\nShit. Are they actually not going to argue about this? Wow.\n\n\"An artist...\" her father trailed off, then picked up the thread of his thought. \"Any hack can make art that doesn't offend anybody. Think about every boy-band or flash in the pan pop-star you can name. Nice catchy tunes, forgotten in six months. But there's a reason why Mozart is remembered, and Salieri isn't.\n\n\"A true artist challenges people. Makes them sit up and question what they have always been taught was true, or acceptable.\" As he became caught up in the conversation, he leaned forward, his head looming over his large hands, which were folded on the table. Sarah eyed them covetously, wondering how they would feel on her skin. \"Yes, some of what I've done is sexual in nature. But I've also done a lot that was political. I caught holy hell when I did a show after 9/11 that was critical of the government.\"\n\n\"Oh, crap, I remember that one,\" said her mother, with a shake of her head. \"I thought we were going to have to move, people were so pissed. 'How dare he criticize the President?'\" she mocked.\n\n\"And I've done religious work, as well,\" he continued. \"Some of it was to keep food on the table. I've worked for the Catholic Church. But once I was established enough to do what I wanted, I've done a lot more that was specifically designed to anger the religious establishment.\n\n\"For example,\" he said, slanting his eyes at his wife, \"A certain painting about Mary, Joseph, and Jesus.\"\n\nSarah jumped in, explaining to Jeremy's confused look, \"Daddy did a painting for a show last Christmas. It showed...\" she swallowed and continued firmly. \"It showed Mary giving Joseph a blow-job, while Baby Jesus was watching.\"\n\nRachel tightened her lips, but kept silent. \"Oh,\" Jeremy said. His lips crooked in a smile. \"Yeah, that would aggravate some people.\"\n\n\"Some people,\" Joshua said, \"Thought I was doing it just to piss people off. To stoke up outrage and controversy and get people to come to my show to see what the fuss was all about.\n\n\"That wasn't what I was doing.\" Then he caught his wife's cocked eyebrow and amended, \"Okay, that wasn't all I was doing. I also wanted to start a conversation about Mary. In some parts of the world, like South America or Spain or Italy, she has achieved a cult-like status. Almost like a goddess. But we have to remember a few things. Even if all the legends about her are true, she was still a young woman with a husband. Presumably, a husband who loved her very much, to not put her aside after she claimed to be carrying the son of God.\n\n\"I was trying to humanize her,\" he said, getting up to flip the burgers and brush on some barbeque sauce. Grease dripped and small bursts of flame sprang up where they dropped. Almost absently, Sarah noticed that Alex and Maria had joined them on the deck and were listening quietly. \"Think abut it. She must have been a very lovable person. In that time, any other woman would have been cast out and shunned for having a child out of wedlock. Joseph stood by her, even though she must have seemed to be a lunatic. I'm not saying it was because she was so good at oral sex. But she must have had some amazing qualities. I was trying to show that, in my own clumsy way. There is only so much you can do in oils and paints. A picture may be worth a thousand words, but you can't make your subjects talk.\"\n\n\"You do sculptures, too,\" her mother pointed out. \"Even cast your own bronze. Hard work, and dangerous with the forge in the workshop.\"\n\n\"I do,\" her father said, putting on the hot dogs and the brats. \"Not easy, though, as you said. That side of it never came easy for me. You're working in three dimensions, rather than just two. And you can't just prepare another canvas and start over if you screw up a sculpture. But I wanted to stretch myself.\"\n\n\"So what do you think about Mary and Joseph and Jesus, Daddy?\" Sarah asked, trying to steer the conversation back to the original subject.\n\n\"I try not to, anymore,\" he said. \"Religion is like the middle rail on the El, Sarah. You touch it, you get hurt.\"\n\n*****\n\nThe meal was over, and they were all sitting around the table, comfortably full. The last light of the sun was fading, the western sky slowly turning from orange to a dark, cobalt blue. The conversation had been good, the food fantastic, the weather delightful. During the meal, Sarah had felt Jeremy's presence like a warm touch on her skin. Even when he was talking to her father or Alex or Maria, she knew his attention was on her.\n\nAnd hers was on him. She ached to take him in her arms, to ravage his lovely mouth with a kiss, to peel his clothes off, regardless of who might be watching.\n\nShe jumped as her mother stood and tapped her fork against her wineglass, making it chime sweetly.\n\n\"Family, friends,\" she said. \"W have happy news.\" She looked around the table with a smile. \"The past few years have not been easy for us,\" she continued, looking at her children. \"For any of us, but especially you. You have had to grow up more quickly than we would have liked, because your parents couldn't be trusted to act like adults.\" Her voice held more than a tinge of self-mockery.\n\n\"Sarah, Alex, your father and I are getting back together. Permanently. I asked him to marry me. Again. And he said yes. Again.\"\n\nSarah and Maria broke into shrieks of joy, and leaped up to embrace Rachel. Alex, for his part, grinned from ear to ear and shook his father's hand. At Rachel's nod, Josh poured out a round of wine for everyone at the table.\n\n\"No, I have no idea when the ceremony is going to be,\" Rachel said, answering Maria's excited questions. \"Not too long, though.\" Her eyes were hot as they rested on her husband. \"We can't go on living in sin like this. It sets a terrible example for the youngsters.\"\n\nJeremy laughed, though it seemed more than a little forced to Sarah. \"Congratulations, Rachel. Sir,\" he said, nodding to each of them. Sarah narrowed her gaze, looking him over. His smile seemed genuine, but she caught a hint of hurt in his eyes.\n\nHe had sex with Mom. She couldn't explain how she knew, but she was instantly certain. There was no other explanation for his reaction, the slightly proprietary air. And the way he was so cautious around her father, as if he was afraid to offend him.\n\nHah. Well, good. Now that Mom is getting remarried, he'll know that she is off limits, and he'll pay more attention to me.\n\n~Really, Sarah? Have you stopped looking at your father, just because he and your mother will be remarrying?~ The voice in her head was quietly sarcastic, and Sarah flushed guiltily. In fact, while the lion's share of her attention had been on Jeremy, she had not been able to entirely keep her eyes off her handsome father, even as he and her mother had made their renewed affection for each other transparently obvious.\n\nShe stood abruptly, reaching for the plates. \"Let me start cleaning up here,\" she said. \"We should get this food in the fridge before the bugs come out.\"\n\n\"I'll help you,\" Jeremy said, standing as well. He filled his hands and followed her into the house.\n\nShe walked slowly, letting her hips sway in a seductive strut, knowing his eyes were on her ass. When they were alone in the kitchen, the food put away, he cleared his throat. \"Are you going out with anyone right now?\"\n\n\"No,\" she replied with a smile. \"Why do you ask?\" she said, stepping close to him. She could feel his male heat as she backed him against the kitchen island.\n\n\"Well,\" he said, \"I really liked talking to you tonight, and I was wondering if you might like to hang out some night. Maybe this Friday?\" he said, his voice squeaking higher as she closed the last distance between them. Her thighs brushed his, and her eyes widened slightly as she felt his hardness against her hip. She closed her eyes against a rush of desire, wanting nothing more than to pull down his shorts, hike up her skirt and pleasure herself on his pole.\n\n\"Friday's not good for me,\" she said. \"My dirtbag brother is going to be in a play at COD, and it's opening night. Of course, you can come with us if you want. But why wait?\" she murmured softly, laying a hand on his chest. Her fingers deftly undid the top button of his shirt, allowing her hand to slide inside and caress his skin. \"We both know what we want. My bedroom is upstairs, and everyone else is going to be busy down here for a while. We can go upstairs and fuck, find out if we're a good match, and be back down here before anyone knows it.\n\n\"You've got two choices,\" she said, her voice low. \"We can go out on Friday, do the whole 'dinner and a play' thing. Talk on the phone, send text messages, go for a romantic walk along Lake Michigan, yadda yadda yadda. And in three or four weeks, you can be where we are right now, with me about to drag you off to bed. Or we can start right away.\n\n\"So, what's it going to be, boy? Yes or no?\"\n\n\n\n*****\n\n\n\nAs Sarah and Jeremy left the deck, Rachel cleared her throat, drawing Maria's attention.\n\n\"I'd like to see the two of you in my office. Now.\"\n\nMaria stood immediately. Although the request was phrased politely, it held the unmistakable tone of a command. She walked to Rachel's office, aware of her master behind her, and Rachel following them both. She kept her head down, her pose obedient. Alex had promised her time to themselves this evening, if he was pleased with her behavior. Although the details had remained vague, she had caught a dark hint in his eyes which had made her shiver in happy anticipation.\n\nThey entered Rachel's office and she closed the door firmly behind her. \"Sit,\" she told Alex, pointing to a chair.\n\nHer master sat. Rachel cocked an eyebrow at him inquiringly.\n\n\"Maria,\" he said. \"Kneel. Here beside me.\"\n\nShe hastened to comply, feeling the rug under her knees. She folded her hands in her lap, her head lowered respectfully.\n\n\"So,\" she heard Rachel drawl slowly. \"I wasn't sure. She has accepted you as her master?\" The tone was politely curious.\n\nA short pause. \"She has.\" Alex's voice was just the slightest bit challenging. \"And I have accepted her as my submissive.\"\n\nRachel sighed. \"Oh, well,\" she said, settling behind her desk. Maria looked up through her lashes, hoping to catch a glimpse of her slender legs, but her view was blocked. \"You snooze, you lose. I had the chance to make Maria mine. But I hesitated, and now I find that you have taken my place in her heart.\"\n\nMaria's head snapped up. \"Mistress!\" she protested. \"That is not true! I care for Alex, my master, very much, but...\" she trailed off as they bent their eyes upon her. Alex looked surprised by the interruption, Rachel gently amused.\n\n\"You cannot have two masters, Maria,\" Rachel said. Her voice was kind but firm. \"What if our commands to you conflict? That would put you in an impossible situation. I know you claimed me as your mistress last week. But I did not, in turn, claim you. To my regret.\" She leaned back in her chair and eyed her son. \"I knew there was something you were keeping from me. I wish you would have trusted me enough to talk about it. A need for control in a relationship is nothing to be ashamed of. As I know,\" she grimaced.\n\nAlex shrugged with one shoulder, his face carefully closed. \"It's not something I wanted to discuss, Mom.\" He let his hand trail over Maria's braid, a casual sign of ownership.\n\n\"Indeed.\" Her voice was quiet. \"Still, I think I have a prior claim. And I did make her a promise,\" she said. \"You will understand soon, Alex. But my....appetites...have increased lately. Changed. Things I would have never considered before no longer seem so terrible.\" She stood and walked around the desk, then, shockingly, sat on her son's lap. She sighed contentedly as his arms came around her in startled reflex.\n\n\"Did you know, sweetheart, that your sister has the hots for your father? I'm still trying to figure out what to do about that,\" she said, as Alex shook his head in reflexive denial. \"Still,\" she said, her voice low and breathy, \"I've also realized what an attractive young man you are yourself. And why should your father be the one having all the fun?\n\n\"I would never dream of coming between what you and Maria have,\" she continued. As Maria watched, dumbfounded, she looped her arms around her son's neck, her fingers playing with his hair, her body curving against him, warm and pliant. \"But I might want to share. Share you both.\n\n\"Here is my proposal. Maria will remain your submissive. I make no claim on her personally. However, I would have you both acknowledge me as Mistress of the Household. Which means, Maria,\" she said, looking down at her, \"That while Alex will remain your master, and I will not override his wishes, I might ask you to share my bed. Or I might ask him to share mine.\"\n\n\"Mom, this is insane,\" Alex gasped. His hands were trembling where they rested on Rachel's waist, but Maria could sense his fierce arousal. And Rachel could sense it too, if the way she happily squirmed in Alex's lap was any indication. \"What if Dad comes in? Or Sarah?\"\n\n\"You worry too much,\" Rachel said, a smile playing across her lips. \"I'll talk things over with your father. Once I explain the benefits to him, I'm sure he'll come around. And poor little Sarah is so horny she's about to burst. If she doesn't get what she wants from Jeremy, she'll take it from someone else. Maybe her father. Maybe you. Why should we all settle for one lover, when we can have two or three?\n\n\"But the only question to be settled here and now is whether you accept my offer.\"\n\nAlex looked down and met her eyes. His own were adorably confused. \"Maria?\"\n\n\"I will do as you wish, Master,\" she said softly. Daring greatly, she looked Rachel in the eye. \"But I desire this. Very much. And I think you do as well.\"\n\n\"She is wise, sweetheart. If I might make a suggestion, you would do well to listen to her where matters of the heart are concerned. It seems she has no problem with this arrangement. Do you?\"\n\nSuddenly Alex grinned, the expression as beautiful as a sunrise. Maria gasped at his sudden change of mood. \"Personally, I think you're out of your mind, and I don't see how this doesn't end in an epic blowout. But I think you're both beautiful and sexy as hell. Sure. Why not? Mistress of the Household it is.\n\n\"But know this, Mom,\" his voice was suddenly hard and grim, and Maria looked at him in surprise. \"If you mistreat Maria in any way, there will be hell to pay.\"\n\n\"Mistreat a treasure like her? I would sooner take a vow of chastity. Now kiss me, dear, to seal the deal.\"\n\nShe lifted her face up to his. Maria nearly laughed to see the tiny woman, almost dwarfed by her tall son. She looked like a child in his lap. But when their lips touched, all thoughts of laughter fled her mind.\n\nDios mio, they're beautiful. And she is no child. Rachel flowed into her son, her body seeming to meld with his, until their wasn't room to slip a sheet of paper between them. Rachel's clever mouthed worked on Alex until he was red-faced and trembling. Maria watched, entranced, as Alex's muscles bunched under his shirt, and knew he was fighting with every morsel of his being to keep from exploring his mother's body even further. She felt a hand on her breast, squeezing gently, and was unsurprised to find it was her own. A wave of heat boiled down through her groin, and she clamped her lips shut on a moan as she watched them avariciously.\n\nWhen they parted, Rachel's eyes were gleaming with more than simple desire. There was pride, as well. \"Well, it seems you have learned some clever tricks along the way,\" she said, slipping out of his embrace. She held out a hand and raised Maria to her feet, unmindful of the way her t-shirt was pulled up over her breasts. \"I know. He's beautiful, isn't he? I have to say, Maria, I'm jealous of you. Not every young woman has such a handsome young man as you do.\"\n\n\"You did,\" she said, and Rachel laughed.\n\n\"True. I did. And I will again,\" she said, with a smoldering look at her son, who was unsuccessfully trying to hide a massive erection. She leaned in and kissed Maria thoroughly, although she kept her hands away from her aching breasts.\n\n\"Well,\" she said perkily. \"I think we're all done here. Maria, tomorrow is a holiday, of course, so you don't need to do any cleaning or cooking. Although if you want to visit, I am sure we'd be happy to see you.\n\n\"Alex, why don't you take her back to her apartment and make love to her two or three times? Stay the night. I am not sure if Sarah has succeeded in dragging Jeremy off to bed or not. But regardless, you'll probably be more comfortable over there.\"\n\n\"Sure, Mom. Whatever you say, Mom.\"\n\n\"Would you rather not make love to your smoking-hot girlfriend?\" Rachel said, her voice dangerously light. \"Think carefully before you answer.\"\n\nAlex scowled down at his mother. \"What I would rather do, Mom, is make my own decisions where my girlfriend is concerned. We are perfectly capable of deciding whether or not to make love.\" He took a deep breath. \"You're making us feel as if we're only doing it because you told us to.\"\n\nRachel started to reply, then caught herself. \"You're absolutely right,\" she said. \"I apologize. It was presumptuous of me. See you in the morning?\" she asked.\n\nAlex nodded. \"Probably.\" He gathered up Maria with his eyes. \"Let's go.\"\n\n*****\n\n\"So,\" Rachel asked, entering the kitchen. \"Where's Jeremy?\"\n\n\"He left,\" Sarah said shortly, wrapping the remainder of the blackberry pie and shoving it viciously into the fridge. She banged the door shut and turned, trying to keep her lips from trembling. \"But we're going out on Friday. Dinner. Then Alex's play over at COD.\"\n\n\"Well, good,\" her mother said, then paused and took a closer look at her face. \"Isn't it?\"\n\n\"Sure,\" Sarah said furiously. \"Everything is just fucking fine!\" she shouted, well and truly losing her temper at last. She threw a fistful of forks into the dishwasher and slammed it shut, glaring at her mother. \"You and Daddy are humping like rabbits in heat, and getting remarried. Alex and Maria can't keep their hands off each other. Hell, they just walked through here, so happy and caught up in themselves they couldn't even bother to say hi to me.\n\n\"And now, when I meet a man, not a boy, but a man, who's hot as hell and actually has a brain, who talks to me like I'm a real person and not a cardboard cut-out, and I invite him upstairs for a quick get-to-know-you fuck, what happens? He takes off like I threatened to castrate him, rather than screw his brains out.\n\n\"What the hell is wrong with me?\" she wailed, hot angry tears flowing down her cheeks. \"I know I'm not beautiful like you are, but is it asking too much for me to get laid every once in a while?\"\n\n\"Oh, baby,\" her mother said. Before she knew it a pair of warm arms were wrapped around her. But that just made things worse, and she bawled like a little girl, even as her mother made comforting noises and rocked her gently. Even through her tears, she knew the scene was slightly ridiculous, as her tiny mother cradled her.",
        "At last, the flood slackened. When she pulled away, her mother met her eyes firmly.\n\n\"Here is what I want you to do,\" she said. \"Go upstairs and take a quick shower. Clean yourself up. Put on something comfortable. Then come down here. You and your father and I need to have a talk and get to the bottom of where this sense of inferiority comes from.\"\n\n\"Yes, Momma,\" she whispered. She glanced around at the half-cleaned mess of the kitchen.\n\n\"Don't worry about that,\" Rachel said, her dark eyes gleaming. \"I'll take care of it. Go.\"\n\n*****\n\nAs soon as Sarah left the room, Rachel sent a text message to Alex.\n\nCome back home before noon tomorrow, and I cut your balls off. : )\n\nShe turned off her phone and walked back out to the deck, where Joshua was sitting on the swing chair with a glass of wine in his hand. His head was tipped back and for a moment she was afraid he had fallen asleep.\n\n\"Looking at the stars?\" she guessed, sitting down beside him.\n\n\"Yep,\" he replied, not moving. \"I could see them a lot better in Peru,\" he continued. \"Less light pollution. But I suppose Woodridge does have its charms.\" Without looking he reached out an arm and hooked it around her waist, pulling her close so he could give her a long, leisurely kiss.\n\n\"I just saw some headlights pull out,\" he said, when their mouths finally parted. \"Jeremy?\"\n\nShe nodded, not divulging what Sarah had told her. She wasn't sure how he would react. Would Josh be angry at Sarah for throwing herself so shamelessly at a man she barely knew, or would he be offended on his daughter's behalf?\n\nMaybe both.\n\nInstead she slid away and tugged him to his feet. \"Come on in,\" she said.\n\n\"Your daughter needs you.\"\n\n*****\n\nJosh sat in his leather armchair, shaking inside, as his daughter padded quietly into the room.\n\nYou thought you were the risk-taker in the family, huh? Good God. You don't have anything when it compares to Rachel.\n\nSarah was wearing a white terrycloth bathrobe, belted around the middle, which reached below her knees. Her brown hair was still damp from the shower, and fell in gentle waves past her shoulders.\n\nTo her father's eyes, she looked very confused and very young.\n\nAnd very, very desirable.\n\n\"Come and sit down with me, sweetheart,\" Rachel said, patting the sofa. She was tucked into one corner, dressed in jeans and a light sweater. Josh, at her explicit order, was wearing a t-shirt and a pair of flannel sleep shorts.\n\nSarah sat down warily, her body tense. It nearly broke Josh's heart to see her there, so fragile, so vulnerable. He ached to take her in his arms and tell her how much he loved her, but was warned away by Rachel's glance. She put an arm around Sarah's shoulders, squeezing her tight.\n\n\"I want to apologize, Mom,\" Sarah said, looking at her hands. \"For losing my temper earlier. It's not your fault you and Daddy are back together. And I should be happy for Alex and Maria. Although,\" she said with a quivering smile, \"I don't know what Maria sees in a dope like him.\"\n\n\"There's nothing to apologize for,\" his wife said softly. \"In fact, we should be the ones apologizing to you.\" Josh nodded his firm agreement. \"We've been so caught up in ourselves we haven't told you often enough how proud we are of you.\"\n\n\"Or how much we love you,\" Josh put in.\n\n\"It's not easy, we know, being the child of successful parents,\" Rachel continued. \"People see the life you live, the money and the car and the big house, and think everything is just fine.\n\n\"What they don't see,\" Josh went on, picking up the conversation, \"Is how hard it is to live up to that example. One parent is a successful lawyer, working high-profile cases and trying to save the planet. The other one is an artist who is always on the news, usually for pissing off the establishment.\"\n\n\"Plus,\" his wife said, her voice slightly bitter, \"Your mother acts like you're a disappointment when you decide on an unconventional career.\"\n\n\"And your father isn't around to support you,\" Josh put in, not liking the picture he was drawing.\n\n\"It's easy,\" said Rachel, \"Very, very easy, to decide the fault is in yourself. That you are somehow inferior.\" Very carefully, she started massaging the back of Sarah's neck, her hands softly kneading the tight muscles. As her daughter relaxed into her arms, she drew her back until her back was against Rachel's chest.\n\n\"That you're not smart, or that your parents' divorce was somehow your fault.\n\n\"Or that you're unattractive, and therefore undeserving of love.\n\n\"Sarah, it is not true.\" Before her daughter could resist, Rachel had reached around and unknotted the sash of the bathrobe. Once it was loose, she spread it wide, leaving her exposed from head to foot. \"Josh, do you think your daughter is pretty?\"\n\n\"No,\" he said, swallowing. \"I think Sarah is fucking gorgeous.\" He met his daughter's stunned eyes. \"It's true, Sarah. You are a lovely young woman and sexy as hell. Those long legs, your face, your eyes...\"\n\n\"My boobs aren't as big as Mom's,\" she said in a small voice.\n\n\"God!\" Rachel said, her voice uncharacteristically frustrated. \"Does every woman judge themselves by the size of their tits? Like fifteen year-old boys with their cocks? I thought you were smarter than that, Sarah. So your breasts are smaller than mine,\" she continued. \"So what? That just means they won't sag like mine do.\" She caught Josh's glance and flushed slightly. \"Well, eventually,\" she amended. \"Josh, why don't you come over here and kiss Sarah and prove to her how beautiful she is? You're okay with that, aren't you, honey?\" she said to her daughter.\n\n\"You don't have to if you don't want to,\" he added. \"Your mom tells me you're attracted to me. And I think you can tell what I think about you.\" He gestured to his shorts, where his erection was straining at the fabric. \"But this will be your choice. Not mine.\"\n\nSarah gave a nervous giggle. \"No, Daddy,\" she said firmly. \"I want you to.\"\n\nJosh stood and walked slowly over to the sofa, thinking about how carefully Rachel had set this up. Keeping him away from Sarah until explicitly invited. The way she was present as a witness and a protector, in case Sarah should get cold feet. Having this little tableau in the living room, rather than one of the bedrooms. Even keeping Alex away. Everything was designed to give his daughter as much confidence and control over the situation as possible.\n\nGod, how did I get here? he thought. The events of the past few days, when taken individually, had seemed to proceed logically, one step leading inevitably to another. But when grasped as a whole, they were completely ludicrous. How did I go from a phone call and a slim shot at a reconciliation to blow jobs in the workshop to falling in love all over again to making love with my daughter, with Rachel looking on approvingly? It's ridiculous. And dangerous. If anyone finds out, we'd be shunned at best and arrested at worst.\n\nBut he knew, looking at Sarah, he could not turn away from her. Not when doing so would hurt her so badly. He knelt at her side, letting one hand fall gently on her opposite hip, his thumb caressing her baby-soft skin.\n\n\"You're a grown woman now, Sarah,\" he said softly. \"And a lovely one. I would like for you to call me by name when we are together. My name is Joshua. Or Josh. And you are Sarah to me. Not my little Pumpkin. Not anymore.\"\n\n\"Yes, D...Josh,\" she said. Her brown eyes were glowing with love and trust.\n\n\"It's time, Josh,\" Rachel said. Her voice seemed deeper, somehow. Almost commanding. \"Take her. Make your daughter your lover.\"\n\nBefore he could even think about protesting or disobeying, Josh had leaned down, his lips brushing Sarah's gently. In an instant, she had opened her mouth wide, her arms wrapped around his head, pulling him down on top of her. Her insistent tongue forced his mouth open and rampaged inside, wrapping around his own tongue with frightening insistence.\n\n\"Whoa!\" he said, or tried to. What emerged from his mouth was actually a strangled grunt, muffled by Sarah's mouth and tongue. Gently, but firmly, he grasped her arms and pulled them away from his head, then backed away. He crooked his mouth as he looked at his daughter. \"Slow down, honey. I'm not going anywhere. You don't need to stick your tongue down my throat right away.\"\n\n\"But all the other...\" she trailed off.\n\n\"Let me guess. The boys you've been with kissed like that?\" She gave a small nod. \"Well, no wonder you weren't happy with them. Listen, sweetheart. Sometimes hard and fast is good. When you're both really excited and you don't have much time. But usually, slow is better. And when it comes to kissing, learn from an expert.\" He shot a glance at Rachel. \"I certainly did. I learned more from my first time with you mother than I had in my entire life before then.\"\n\n\"It helped that your father was a quick learner,\" Rachel added, her hands softly stroking Sarah's shoulders. \"Try it again, dear,\" she said.\n\nHe bent again, and this time Sarah let him lead. Her lips softly parted under his, and while her eager tongue did its best to investigate every nook and cranny of his mouth, the kiss was slow, sweet, and sensuous, rather than the clumsy, urgent attempt of earlier. Her hands reached up and explored his back, running up and down the length of his spine, then reached under the hem of his shirt. He shivered as he felt her warm palms on his back, the feel of her as she touched his body as a lover for the first time.\n\n\"That's very good, sweetheart,\" his wife whispered, and Joshua couldn't be sure whether she was encouraging her daughter, or himself. Sarah's insistent hands tugged at his shirt, and he raised up, letting her pull it up over his head to be carelessly discarded on the floor. He lowered his head, kissing the hollow of her neck, the curve of her shoulder, then set his sights on her delectable young breasts. He cupped one in his hand, his mouth teasing the slopes of the other, and looked up at Sarah. \"They're beautiful, darling. Just like the rest of you.\"\n\n\"You're sure?\" she asked, her eyes achingly vulnerable.\n\n\"I'm sure,\" he replied, his fingers, feather-light, stroking her velvety skin. \"No, they're not as big as your mother's. But your nipples,\" he said, dragging his thumb across one swollen bud, \"Are larger. And they stand up higher as well. Makes me want to kiss them,\" he teased, and bent his head to suckle on the straining, taut nub.\n\n\"Oh,\" she sighed, her body writhing under his touch. \"Josh, that feels...amazing. Please. More,\" she said, and he felt her hand reach down and grasp his throbbing erection trough the flannel of his shorts.\n\n\"Anything you want, darling,\" he said, and bent to her breast again. He hadn't just been assuaging Sarah's lack of self-confidence. Her aereolae were larger than Rachel's. And her nipples were nice and thick, exciting him as he dragged his lips across them and flicked them with his tongue.\n\nHe let his hand wander lower, down to her stomach, then pausing to play at the delightful strip of hair rising from her mons. Her legs parted easily under his fingers, granting him access to that most private of places, but he skipped over her nether lips to let his hand stroke the long, lean length of her thigh. She was so different than her mother, but no less beautiful. She put him in mind of a cheetah or a greyhound. A creature who was built for speed.\n\n\"Josh,\" Sarah's soft voice interrupted his thoughts. \"I'm ready now. If you want...\"\n\nHe removed his mouth from a breast and frowned up at her. \"Is that how those boys treated you? A little kissing, a little breast play, and straight to the main event?\" He snorted at her nod. \"Idiots. You might think you're ready, sweetheart,\" he said. \"But you're not. Not really.\" He let his lips curve in a wicked smile. \"When I'm done with you, though, you will be.\"\n\nHe levered himself up onto the couch, wincing and stifling a sigh as his muscles protested. \"Old bones,\" he said. \"I'm not as young as I used to be.\"\n\n\"I'm interested in only one bone, Joshua,\" his daughter said, then blushed.\n\nRachel laughed, and Josh started. Despite her position behind Sarah, he had almost forgotten she was there. She smiled at him over Sarah's shoulder, and he relaxed, full of wonder that this incredible woman could be his wife. How many other people were so completely free from jealousy that they could take part in this? Or even think about allowing it?\n\nHe sank between his daughter's thighs, inhaling her aroma. \"Now be sure to tell me,\" he said, looking up his daughter's body to meet her trusting eyes, \"What feels good. And what doesn't. My job right now is to make you happy.\" Finding the angle awkward, he gently lifted one of Sarah's legs until it rested on the back of the sofa, giving him unimpeded access to her entrance. Her lower lips were slightly parted, gleaming in the soft lamp-light.\n\n\"I will...Daddy.\"\n\nAt her words, spoken softly, his cock gave a frenzied lurch, and he had to shut his eyes against the jolt of desire. When he opened them, he found her looking at him, her lips curled knowingly.\n\n\"I am an adult, it's true. But it's also true that I want my daddy in my bed. I have for a long time. Ever since I was old enough to know what it was I wanted. But I didn't have the courage to say so. So when we make love, I am going to call you what I want. And I know you well enough to know how much it turns you on. Doesn't it?\"\n\n\"God help me, it does,\" he answered. He wanted to say more, but simply shook his head. He lay flat on his stomach, his cock an iron bar in his shorts. He could feel a dampness at his crotch, as his weeping slit soaked the fabric with pre-come. He bent his head, and tasted Sarah for the first time.\n\nHer taste exploded in his mouth, salty and sweet and completely her own. When he became aware of what he was doing, he found himself lapping at her labia, his mouth and tongue diving deeper and deeper into her with every stroke, as if he were trying to crawl inside her. Her aroma surrounded him, and he inhaled desperately, as if her smell were oxygen, and he would pass out from a lack. He gripped her young thighs, her tan young skin glowing with health, and pulled her towards him, trying desperately to pleasure his daughter.\n\nAnd by her reaction, he was succeeding. Sarah shook under his hands, her body quivering, but her hips slowly rolled her groin towards his face, then away, over and over, caught up in the ancient rhythm of desire. When he looked up at her, her face was flushed, the skin glowing. \"Oh, God, Josh. No one...no one has kissed me so good. Down there. They had no idea what they were doing.\"\n\n\"Morons,\" he said flatly, drawing his head away for a moment. He pushed her thighs apart and ran a finger up her lips, watching through hooded lids as she jerked under his touch. \"As sensitive as you are? Any man who cared for you instead of himself could make you happy. Like I am going to.\" He was torn between anger at the callow boys who had failed to please Sarah as she deserved, and gratitude that he was the one who would teach her the true joys of being a woman. He kissed her damp folds once more, then homed in on his ultimate goal: the bright pink nubbin of her clitoris.\n\nLuckily for him, his search was an easy one. Unlike some women, Sarah's clit was large and prominent. Fully engorged, it emerged from its protective hood, a tempting target. He leaned forward and fastened his lips around it, then lightly flicked it with his tongue.\n\n\"Nnrrghhgh!\" Sarah grunted, her eyes popping wide open and staring at him with shock. \"Ohhhh, fuck, Daddy. Keep that up. Right there. Please, don't stop.\" She braced one arm on the back of the couch, the other at her side, providing leverage, and raised her mound, gently humping his face. In response to his questing tongue, her labia spread wide, unfurling like the petals of a flower, giving him access to her most secret places.\n\nBut he had her clit well and truly captured, and he was not going to relinquish his sweet prisoner. He suckled on the throbbing nodule, smiling to himself as Sarah writhed and twisted under his touch. Her juices bathed his mouth and chin. Her gasps grew shorter and sharper, the pitch higher and higher, until she was all but keening under him. He felt a harsh grip in the hair at the back of his head, holding him in place, and her legs lifted and draped around his back, her heels softly drumming into his spine.\n\n\"Getting close, Daddy. Close. So close,\" she panted. \"Please, don't stop.\" Her eyes were squeezed shut, and Josh knew she was concentrating completely on her own pleasure.\n\nSuddenly, her hips snapped up in a sharp spasm, her pubic bone catching him a blow on his mouth. A high wail broke from her lips, and he watched, entranced, as the muscles of her belly rippled as her orgasm washed through her.\n\n\"Damn,\" she breathed when she recovered. Her eyes, though her mop of disheveled brown hair, were awestruck. \"My God, Josh, I've never...\"\n\n\"What?\"\n\n\"Never came with...with a guy. Ever. Either with his mouth down there,\" her brows pinched in irritation. \"Not that many tried. Or with their...with their cock. And you did it in like ten minutes.\" Recovering some of her composure, she batted her lashes winsomely. \"Can you tell me the secret. Please? So I can sell it to my girlfriends?\"\n\n\"Not much of a secret, Pumpkin,\" he said, kissing the insides of her thighs, enjoying the way the muscles quivered in the aftermath of her climax. In his shorts, his shaft raged for release, but he ruthlessly sat on his desire. Quiet, you. Some things are more important than getting your rocks off. \"All you have to do is care more about your partner's pleasure than your own. Your mother taught me that.\" He paused, then glanced around quickly. \"Shit. Where did she go?\"\n\n\"What?\" Comically, Sarah looked behind her, as if expecting Rachel to still be on the couch. I don't know. She must have slipped away when you were eating me out.\" A dimple appeared in her cheek. \"I guess she thought we could handle things on our own.\" She looked down towards his groin. \"Poor Daddy, she said. \"You're all hard and stiff. And I haven't done anything for you. Do you want to go upstairs so you can fuck my hot little pussy? You were right. Now it's ready for you,\" she said, her dirty talk causing Josh to squeeze his eyes closed as a jolt of lust tore through his body. Her hands framed her lips, softly rubbing. \"We could do it here, I suppose,\" she said, her voice softly considering. \"But the couch is awfully narrow. Wouldn't you rather be in a bed?\"\n\n\"Yes, you little minx,\" he said hoarsely. He rose up on his elbows and crawled up her body, pausing only to kiss her delectable mouth. Only iron will kept him from pulling down his shorts and burying himself in her then and there. But she deserved better than an awkward fuck in the living room. With a groan, he heaved himself upright, and held out a shaking hand to his daughter. \"Your room?\" he said.\n\n\"Well, I don't think Mom would want us in your bedroom.\"\n\n\"Don't be too sure,\" he said, unable to stop the words before they tumbled out of his mouth. Trying to recover, he helped Sarah to her feet. \"But you're probably right. This time.\"\n\n*****\n\nSarah lit three candles and set them on her bedside table. The soft yellow light cast the familiar room in a new focus. The old, comfortable bed with the handmade quilt, passed down from her grandmother; the posters on the walls; the bookcase, stuffed full of cookbooks and paperbacks, all took on new significance, draped in flickering shadows.\n\nBecause this time, her father was there. As her lover. Her heart thrilled to see him, dressed only in one of the pairs of flannel sleep shorts that he liked to wear, leaving his chest and arms and legs bare for her hungry gaze.",
        "Her body was filled with a deep lassitude. After the incredible orgasm Joshua had just given her, using only his mouth and tongue, she felt comfortably relaxed for the first time in days. A deeper part, however, wanted more. Wanted him inside her, filling her up.\n\nHow did this happen? When she had first dared to admit to herself her attraction to her father, she had felt guilty and ashamed, and had suggested to her mother that she should move away in order to keep her perverse desires from breaking the fragile truce her parents had recently achieved. Instead, her mother had accepted her needs. Not as something sinful and disgusting, which should be denied or punished. But rather, as something completely natural, the inevitable outcome of sharing living space with a man who was good-looking, intelligent, and loving. And in contravention of every taboo, she had encouraged the two of them to express their love for each other physically.\n\nShe walked over to her father, watching the way his eyes kindled in the candlelight. Inwardly, she smiled, enjoying the power she had over him. The power to make him want her. She pulled him close, her eyes almost at a level with his. Ordinarily, she preferred tall men like Jeremy. But with Joshua, she was prepared to make an exception. She could feel the heat of his erection through his shorts, a pulsing warmth against her belly, and she moaned into his mouth as she kissed him. He held her close, and she felt warm, protected, loved, and desired. The sheer fact of his arousal for her was intoxicating, and she shivered as his hands caressed the length of her back and settled on the globes of her ass.\n\nIn turn, she fingered the waistband of his shorts, pulling it away from his skin, then letting it settle back as he gave a frustrated groan. She let a hand wander around behind him and gave one of his butt-cheeks a firm squeeze. The hard muscle felt heavenly under her fingers and she fought the urge to rip his shorts off so she could finally see him naked.\n\nShe pulled slightly away, panting from the urgency of her need. She had never felt like this with another boy. Everything had been lukewarm and clumsy compared to the fiery heat she felt with Josh, and the skill of his artist's hands.\n\n\"How...\" she trailed off. \"How do you want to do this, Daddy?\" She smiled as his breath caught, the lure of the forbidden becoming apparent in that one innocent word.\n\nI should get a schoolgirl outfit. And maybe do my hair up in pigtails. Damn, I bet that would get him worked up. And pitch my voice an octave higher. I bet he would explode right there in his pants. She filed away the thought for future reference.\n\n\"I want what you want, Sarah,\" he replied. \"This is our first time. I want you to remember it.\"\n\n\"Oh, I think I will,\" she said. \"I mean, it's not every day a girl makes love to her own father.\" She backed carefully up onto the bed, than lay down, her thighs spread, her hands framing the lips of her pussy. She ran a finger up her lips, gathering some of her moisture on a fingertip, then licked it seductively. \"Come on, Daddy. Make love to me. I need you.\" She held out a hand, trying to hide the way it shook in anticipation.\n\n\"You're evil,\" Joshua smiled. His eyes were fond as he he clambered onto the bed and swooped down for a kiss. \"You remind me of someone.\"\n\n\"Mom?\"\n\n\"No,\" he said, sinking until the fabric of his shorts touched her aching cleft, teasing her with his hardness. \"Me.\"\n\nHe knelt up, pulling off the last thing separating her from what she most desired, and her eyes widened as his cock came into view. For days she had imagined it, her stomach churning in desire and shame. But now it was hers.\n\nNo. Not mine. Ours. Mine. And Mom's. But I'm willing to share for now.\n\nAlthough her father had assured her the sculpture of himself and Rachel was as close to reality as he could make it, Sarah suddenly wondered if he hadn't, perhaps, actually understated his size. His erect penis certainly seemed larger now, when it was looming in her view, than when it been simply another cold piece of bronze in her father's workshop. Red-headed and turgid, it bobbed in front of his stomach, the swollen tip seeping fluid as it brushed the sandy blond hair that surrounded his navel. She reached out hesitantly, wrapping her fingers around the shaft, wondering at the feel of it as it filled her hand. It reminded her of warm velvet over a hot, steely core. She tried a few slow pumps, and stopped, startled, as his breath escaped in a hiss.\n\n\"Sarah, you know I love you, but if you don't stop I'm going to blow all over your hand.\"\n\n\"And why would that be bad?\" she asked, batting her lashes winsomely.\n\n\"Because you would have to wait until I was ready to go again. At my age, that might take me...at least fifteen minutes. Maybe twenty.\"\n\n\"Hmph,\" she grumbled. \"Not my problem. Besides,\" she smiled, caressing the wonderful hot length of him. \"I wouldn't wait. I'd just make you eat me out again. Or play with my titties, since you like them so much.\" She cupped a breast in her hand, her thumb grazing the taut nipple.\n\n\"But if you insist,\" she sighed melodramatically, \"I'll let you fuck me. Now.\"\n\nShe pulled him closer, her hand guiding him towards her cleft. At her entrance, he paused, and for one horrified moment she thought he was going to pull away and leave her, empty and alone. But he merely used that small space of time to rub his head on her lips, coating his cock with her fluids, before entering her in one long, slow thrust.\n\nHer eyes widened and her heart pounded, her pulse throbbing in her temples. He fit. He fit as if he had been made for her. No boy she had ever been with had ever given her this sense of completion. As if they were two halves that, when joined, created a greater whole.\n\nOf course, the part of her that never stopped thinking said, it's not as if Sam or Micah ever gave me a chance. They started humping away as if they were scared I was going to change my mind.\n\nJosh kissed her mouth, then the curve of her collarbone, his tongue licking her skin, making her shiver, even as he stayed motionless inside her. \"Birth control?\" he asked.\n\n\"On it since I was fifteen,\" she replied. \"Mom wasn't taking any chances. Not after what happened with you two and Alex.\"\n\nHe raised his eyebrows at her as he slowly pulled out, then just as slowly pushed back in. Her skin broke out on gooseflesh and she sighed happily, rapturous with pleasure. \"Alex was an accident,\" he admitted. \"But a happy one. But I'm glad you're being responsible, Sarah. I don't think you're ready to be a mom yet.\"\n\n\"Oh, hell no,\" she breathed, as he continued to stroke her. Involuntarily, her thighs rose, rubbing against his flanks. She began to ease into his rhythm, her groin rising and falling in response to his wonderful strokes. \"I've got too much screwing to do first. Now that I know what it feels like with a real man.\"\n\nI wonder if Jeremy will be this good, she thought. I scared the poor guy off tonight. But I've got another chance on Friday. And I don't want Daddy to feel guilty about trying to satisfy both me and Mom.\n\nShe lifted her hands to her breasts, squeezing them, pushing them together. Her father eyed them covetously, then took up her challenge. He lowered his head, then stopped, his mouth the barest fraction of an inch away. Before she could growl out her frustration, however, his skillful tongue emerged, circling her areola before he drew the nipple into his mouth, nursing on it like a child. Over and over he did it, switching from one heaving breast to another, until she was squirming under him and fluid seeped out of her slit and down the crack of her ass.\n\nShe ran her fingers up and down his back, caressing his broad shoulders and the hard muscle under his skin as he played with her tits. Then, in an inspired moment, he opened his mouth wide, somehow managing to suck on both of her nipples at the same time. She arched her back as pleasure tore through her, the feeling sending jagged bolts of need from her tits to her belly to her throbbing clit. She dropped her hands to her pubis, pushing down on the fleshy mound, and curled her legs around Joshua, urging him to lengthen his strokes.\n\n\"Faster, baby?\" he asked.\n\nShe shook her head, feeling her hair sticking to her forehead in the warm air of the bedroom. \"No. Not faster. Deeper. All the way. As deep as you can get, Daddy.\"\n\n\"Whatever, you say,\" he said, and kissed her. She moaned as he explored her mouth. The taste of him, a combination of wine and grilled meat and summer sun, made her senses reel. Where their bodies met, his strokes grew longer, the wiry tuft of hair at the base of his shaft mashing into her groin with each thrust. The ridge of his cock scraped delightfully against the exposed flesh of her clit, and she pushed down on her mons, her fingers massaging the mound of sensitive flesh, urging it out farther. The rapturous feeling as his rod rubbed against her most sensitive organ made her thighs shake.\n\nShe closed her eyes. Her father's hands were everywhere, and she couldn't get enough. He kissed her mouth, her neck, and then breathed hot air into her ear before his tongue curled around the sensitive lobe. Braced over her on one arm, his fingers tenderly stroked the flesh of her breast, so gentle and loving she thought she would burst with desire.\n\nShe thrust up towards him, her ass and hips and thighs urging him onward, demanding his love. Daddy...oh fuck, Daddy. I'm going to come again. Please, come with me. Come in me. Now!\" she shouted. Her heels dug into his rear, pulling him deep into her. At the same time her hands splayed across his back, pulling him down to her chest. As her orgasm crested and broke, sending her into an upward spiral of joy, she buried her head in the hollow of Josh's neck, sucking his skin into her mouth. He gave a muffled groan, and she could feel it. God, she could feel the come bursting out of his beautiful cock, painting the walls of her vagina in a series of spattering bursts. The hot liquid seemed to merge into her, joining her and her father in an eternal bond.\n\nHer eyes, when they opened, were awestruck. They found their match when they met Joshua's. He shook his head in mute surprise.\n\n\"That was...\" he broke off and cleared his throat. \"That was incredible, Sarah.\" He kissed her temple. \"Thank you.\"\n\n\"Did you and-\"\n\nHe cut her off, understanding her question before she could voice it. \"Is it this way with me and your Mom?\" he asked. When she nodded, he continued, kissing her cheek. \"It was, at first. God, we were so horny for each other,\" he said in fond remembrance, his head pillowed on her shoulder. \"Even after she got pregnant with Alex. I don't know how either of us didn't flunk out, that first year we were together. We cut so many classes. If we weren't in her dorm room, we were in my apartment.\n\n\"And then, it slowly faded. Especially the last year or so before we divorced. She worked so hard, Sarah. I couldn't make her slow down. You know what it was like here at home.\"\n\nShe nodded. Her parents' unhappiness had been apparent for months before her father had left home and the divorce was finalized. She had decided to stay with her mother, unable to stomach the thought of moving away from Chicago to a little town way out in the sticks, no matter how much she loved her father.\n\n\"But we've found it again,\" he continued with a smile. \"I don't know what made your mom change. Maybe she realized that life is too short, and we should spend it reaching for happiness. But when I got here on Friday night, it was as if that girl I met at a party on Chalmers Street back in 1994 had come back.\n\n\"If a man is very lucky, he will make that connection once in a lifetime.\" He ran a gentle hand up her arm. \"I never thought I'd make it twice. I love you.\"\n\n\"I love you, too,\" she said. She wrapped her arms around him in a fierce hug, unable to believe she could be so happy. When Josh tried to move off her, she tightened her arms, keeping him captive. \"No,\" she said, wiggling her hips underneath him. \"I want you to stay inside me. And when you've had a few minutes, you're going to fuck me again.\n\n\"Or maybe not even a few minutes,\" she said, as she felt him hardening again inside her. She arched her back, offering up her breasts to his mouth. \"Oh, Joshua.\n\n\"Make me yours.\"\n\n*****\n\nRachel hummed contentedly to herself as she dried off from her shower. The evening was working out splendidly so far. With her new-found sensitivity, she had been able to track the climaxes as they occurred, almost like a geologist with a seismometer, measuring earthquakes. First one from Sarah, after she had slipped away from her and Josh downstairs. That had been the one she was waiting for. Then two, in rapid succession, from Alex and Maria, respectively, in Maria's apartment over the garage. Then, almost simultaneously, two more, from Sarah and Josh. Althea had murmured enthusiastically in her head as each one hit, sounding almost smug as her power grew.\n\nIn response to the pleasure her family felt, she had brought herself to orgasm in the shower, her fingers stroking her to a shuddering, moaning peak as the warm water sighed over her skin. Inwardly, she marveled at the changes brought on by Althea's presence. In that long-ago time before they had joined, her sessions of self-pleasure had been almost perfunctory, as if masturbation was something like brushing her teeth; something done out of necessity, but not really enjoyed. As her fingers played with her hot, slippery lips, she couldn't imagine going back to those days again.\n\nShe toweled her hair vigorously. So how much longer until you have enough power to move out?\n\nThe presence in her mind seemed to frown, as if weighing a series of variables. ~Longer than I'd like, unless we try something drastic. But not too long. I would think a few more weeks should do it, if we keep up at this rate.~\n\nThat long? She turned her head and looked over her shoulder at the mirror, investigating the 'tattoo' which Joshua had said he had seen on her back. Yes, there it was, a patch of discolored skin, bright red, just above the cleft of her buttocks. She frowned at it, wondering what strange side-effect of Althea's occupation of her mind had convinced her body to change color that way. Cursing softly at the poor angle, she squinted, trying to make out more details.\n\n~Yes, that long. Despite the heroic efforts of your family, there is only a finite amount of power I can draw off at any one time. And simply being here in your mind is a drain. I could do it earlier, I suppose. But the downside would be I would wake up in my own body all but helpless, with no power of my own. I would be as weak as a human, and have to build my reserves up all over again. I've gone through that once already in the last few weeks. I'm not going to do it twice.~\n\nMmhmm, she muttered distractedly. Was there a twisted muscle there, right above the red patch? Or some sort of knot in her back? She reached around with both hands to massage the spot. She wasn't sore, but-\n\nThe voice in her head held a note of warning. ~Rachel, maybe you should leave that-~\n\nIt was at that moment when the tail erupted from the base of her spine.\n\n*****\n\n\"What have you done to me?\"\n\nHer host looked at it with a combination of fascination and horror. She craned her head back over her shoulder, trying to get a good look, and settled for a sideways view in the mirror.\n\nRachel's tail was nearly three feet long, and when it ceased its nervous twitching, dropped all the way down to her ankles. At its base it was as thick as her two thumbs placed side by side, and the same color as her own skin, but gradually darkened from milky white to salmon pink to a fire-engine red at the end. The spade-shaped tip itself resembled an arrowhead or a tree leaf. It was broad at the base, narrowing to a sharp point, and was curled upwards.\n\nRachel fingered it nervously, her hands sliding over the silky skin, soft as a newborn. Althea could sense her confused thoughts. The inside structure did not seem to be either bone, like her arms or legs, or like Josh's cock, limp and flaccid until engorging blood brought it to its full, beautiful length, thick and hard for his lover. Instead, it seemed to be constructed of flexible cartilage, like her ears or the tip of her nose.\n\n~Something like that.~ Althea said. Her voice was regretful. ~I am sorry, darling. It seems your body is even more accepting of my spirit than I supposed. It is fashioning itself into a vessel to match its inhabitant.~ She tried to sound cheerful. ~It's a very nice-looking tail, though.~\n\nNo! Rachel shouted at her, her voice a silent scream in her mind. Take it away. Make it stop! I don't want this. I don't want to be a freak. How could you do this to me!?\n\n~It is not my doing, my handmaiden. And I cannot stop it. It is always thus, when one of our number is trapped in a mortal's shell. Our strength overwhelms them, and their bodies remake themselves to accommodate us.~\n\nAnd what else do I have to look forward to? Hooves? Horns? Bat-wings? Her mental voice trembled on the edge of hysteria, and Althea could taste her paralyzing fear. Will I...will I become a prisoner in my own body? I have already seen some of the changes. The way what was once unthinkable has become ordinary. I have sent my daughter to become my husband's lover, and have all but told my son I will sleep with him. What will I do next? What will you do next? Will you possess me? Will I be trapped inside my mind, screaming for eternity, while you take me over?\n\nAlthea formed her glade in Rachel's mind. As soon as their mental forms were clear, she took Rachel in her arms, stroking away her terror as she huddled against her. She could feel hot tears dripping onto her skin as she shook with soundless sobs.\n\n\"No,\"she said, her voice full of sympathy and affection. And love. Love for this brave woman, who was enduring what would shatter many others. \"A thousand times, no. I swear it on my life. I would never subject one of my chosen to such a horror. As long as we are one, you will never lose control of your body. Every action you take will be by your will, and yours alone. Me and my kind have suffered too much in the name of freedom to deny it to others. Only in this tiny space in your mind do I claim sovereignty.\n\n\"And you may find, child, that this gift is not without its benefits.\" A thought, and they were both naked. She turned so Rachel could see her own tail. In keeping with her greater height, it was slightly longer and thicker than Rachel's, with darker skin matching her own golden tones. As easily as she raised her arm, she willed it to stroke the flesh of her thighs, the broad tip acting almost as the palm of a hand. Another thought, and it curled up beneath her, the shaft pressing into her nether lips, the tip softly resting on the skin of her belly. \"It is very flexible. And very sensitive, especially when you are aroused,\"she said with a mysterious smile. \"You can use it to please yourself in all sorts of interesting ways. Your husband, as well. And if you should ever find him...incapable...the tip secretes a fluid which will make him ready for you in seconds.\"\n\n\"Josh!\"Rachel gasped in horror. \"I haven't told him about you yet. He'll see it when we go to bed at night. Or feel it. I'm not ready for this,\" she continued, her voice panicking. \"I need more time!\"\n\n\"Calm yourself, beloved. We have not hidden ourselves among mortals for so many centuries because we are easily identified.\"When she turned again, her tail was gone. Bending closely to look, Rachel could only see the tip, set flush with the skin at the base of her spine, just above the cleft of her buttocks. Even from only a few inches away, it seemed no more than a birthmark or a red, leaf-shaped tattoo.",
        "\"Let me show you.\"Althea laid a hand on Rachel's forehead. In moments, she blinked.\n\n\"Oh. That's easy!\" A brief focusing of will, and her tail was also gone. She rubbed her back, and suddenly shivered with pleasure as her fingers encountered the sensitive tip.\n\n\"Yes,\" Althea said, her voice darkly amused. \"You're going to find that takes some getting used to. I would recommend you wear undergarments that don't chafe for the near future. Or perhaps none at all.\"\n\n\"But how...\"\n\n\"Our bodies have a sheath where our tail can retract if needed,\"Althea replied. \"Much like how a horse's cock is kept inside its body until the time comes for it to mate. It makes little sense for such a vulnerable body part to not have a safe haven.\"\n\n\"Do you...do you think it will go away when you return to your body?\"\n\n\"Perhaps. Perhaps not. And why would you want it to?\"She shuddered delicately. \"I can't imagine anyone not wanting a tail. They are so useful. It would be like going through life without thumbs. Worse. Because thumbs don't give you nearly as much pleasure as a tail does.\"She demonstrated a function she especially enjoyed, and watched Rachel's eyes widen in sudden speculation.\n\n\"And what about the other body parts? Hooves? Wings? Horns?\"\n\nAlthea shrugged negligently, the motion causing her breasts to bounce cheerfully. \"I can give myself some of those features, certainly, if I wish. I rarely do. Hooves are terribly impractical, you know. Wings as well, although they are impressive if needed . Your body will make no attempt to fashion those for you.\n\n\"Horns?\" She let her hands roam over Rachel's head. \"Not yet. Maybe not ever. It depends on how quickly you get me back into my own body. Besides,\"she said, her voice sounding slightly hurt in her own ears. \"I always thought my horns were cute.\"\n\nRachel raised her eyes. Althea knew what she saw, now that she had removed the illusion which had hidden them. A pair of horns, white as ivory, peeking out from the tousled hair on her head. They were no longer than her middle finger, curving in a slight spiral, and resembled nothing so much as a pair of tulips emerging from spring soil. She shivered as Rachel raised her hands to let her fingers brush against them, feeling the hard surface, and smiled.\n\n\"Maybe for you,\"Rachel said, removing her hands to rub her own head warily, as if searching for mysterious lumps in her skull. \"But I would have a hard time explaining them to the kids!\"\n\n*****\n\n\"Josh, we need to talk.\"\n\nHe looked up from the canvas, a piece of charcoal in one hand, to see his wife (no, his fiance, his mind corrected him) standing in the doorway. \"Hmm?\" he asked distractedly.\n\nRachel walked into the workshop and snuggled into his side, one arm wrapping around his waist. \"A new piece?\"\n\n\"Just sketching it out,\" he replied, returning her hug. He dropped a kiss on her head, his lips brushing her hair. \"It may turn out to be nothing.\"\n\n\"Or it might not,\" she said, knowing how his mind worked. She looked the canvas over, taking in the bold lines and shadowed curves. \"Our daughter?\"\n\nHe nodded. On the white canvas, Sarah was pictured. On first glance, it seemed to be a simple portrait of a young woman. But when you looked deeper you could see the smoldering sensuality, just below the surface. It never ceased to amaze Rachel how much personality Joshua could capture in just a few strokes of a pencil or a stub of charcoal. When they first started dating, he had tried to teach her some basic rules of art; perspective and why light and shadows were important. But she had never progressed much beyond stick figures.\n\n\"It seems you had a good time last night. Both of you,\" she remarked.\n\n\"I did,\" he said, and a blush rose in his cheeks. \"We both did.\"\n\n\"Good,\" she said simply. When he looked at her in surprise, she laughed. \"Come on, Josh! I practically shoved the two of you into bed together. I'm not out here to scream at you for doing what I helped you to do. It would break Sarah's heart. And maybe yours.\n\n\"But we do have something to talk about. And I didn't want the kids to interrupt us. And I didn't want to wait until we were in bed tonight. We might be otherwise occupied,\" she said with a smirk.\n\n\"Want me to hang out the sign?\" he asked. When she nodded, he picked up a simple piece of wood hanging from a string. The words 'Go Away' were carved in large, bold letters on one side. He hung it on the outside doorknob and shut the door firmly, then turned the deadbolt for good measure. Ordinarily, he used the sign when he was working on a project and didn't want to be bothered. When it was up, the kids knew better than to knock for any emergency less pressing than 'alien invasion' or 'house on fire.'\"\n\nWhen he turned around, he saw that Rachel had taken off her skirt and was in the process of pulling down her panties. He grinned at her. \"I thought you wanted to talk? If you wanted to have some fun, all you had to do was say so.\" His smile faded as she met his eyes. They were deadly serious, and a little...afraid?\n\n\"Josh, I have something to show you. And then I have something to tell you. And I want you to keep an open mind.\"\n\nHe blinked, confused. After the last few days, now she wants me to keep an open mind? \"Sure.\"\n\nShe turned her back to him, giving him a wonderful view of her shapely rear. Despite his activities with Sarah, which had lasted so long into the night they hadn't fallen asleep until the early morning, he itched to take the firm globes into his hands. The dark red ink of her tattoo seemed to almost glow in the May sunshine coming through the windows.\n\n\"Look,\" she said. \"Look close.\"\n\nThe sound of his head hitting the wooden floor as he fainted was the last thing he heard.\n\n*****\n\nRachel managed to drag Joshua's unconscious body across the floor and heaved him into the ratty old armchair he had hauled around for the past two decades. She wrinkled her nose at the musty smell. Bought at the Goodwill in Champaign to help furnish their first apartment, he had insisted it accompany them on every move since.\n\n\"We've got to have continuity, Venus.\" She could hear his voice as the movers lugged the smelly, stained thing into the workshop.\n\nHer husband frowned, then blinked his eyes, smiling up at her woozily.\n\n\"Hey, Rachel. I just had the wildest dream. I was in here, doing a sketch of Sarah, and you came in. You told me you had something you wanted to talk about, and the next thing I know, you have a tail! Pretty crazy, huh...oh my fucking God,\" he whispered, as she pirouetted to show him her new appendage. His eyes, when she faced him again, were wide and fearful.\n\nShe could see his throat work convulsively as he swallowed. \"Rachel, what the hell is going on? What...where did that come from?\"\n\n\"I wanted to show you first,\" she said. Her stomach churned with fear at his reaction. \"If I tried explaining it from the beginning, I was afraid you'd have me taken in for a psych evaluation.\n\n\"You see, honey, I've got a strange woman in my head. She's a succubus. Her name is Althea, and she's the immortal offspring of a fallen angel and Adam's first wife.\n\n\"How it happened was this way...\"\n\n*****\n\n\n\nWhen the story was finished, Josh blinked, very slowly. His face was a dazed blank.\n\n\"Josh? Honey? Do you believe me?\"\n\nHe lowered his face into his hands and rubbed the sides of his nose. \"Do I believe you? Rachel, you have a tail. How can I not believe you?\n\n\"The bigger question is, what the hell do we do? I mean, I love you. And I love that we're back together. And it would take a better person than I am to say I didn't want to keep having awesome sex with you and Sarah.\n\n\"But how much of this is you, and how much of this is this Althea person fucking around with your head? Heck, with all of our heads. You, me, the kids, other people, too. I know I never looked at Sarah as...as a potential partner until a few days ago. And from what you tell me, you never gave Maria a second thought before. Now she's living with us, and what she's apparently doing with Alex...\" he trailed off. \"I'm not judging. Different strokes, and all that. But does Althea really have our best interests at heart?\"\n\n\"I don't think she did, at first,\" Rachel said honestly. Althea was silent in her head, as if she were afraid to interrupt. \"From what she's told me, she has been alone for a very long time. Decades. She's had lovers, but to watch them all fade away and die, while she lived...it was as if her entire life was one long goodbye. Think of it, Josh. She is thousands of years old. And for almost all that time, she has been watching her loved ones leave her. First her parents. Then friends, lovers. As soon as she meets someone she feels she may care for, she has to deal with the knowledge that she will lose him. Or her. God, can you encompass the strength of the soul who can deal with that heartbreak over and over again and still be able to love?\"\n\nShe thought back to the night before, when Althea had taken her in her arms and had sought to calm her. She could have told her soothing lies. Or attempted to seduce her. In her glade, she was in control, and there her physical impact grew more profound, not less. Rachel could not pretend she was immune to it. Instead, she had given her simple, unvarnished comfort.\n\n\"As far as I can tell, she has always told me the truth, even when it would have been to her benefit not to,\" she said. \"She's in my head, and doesn't want to be. She gets power through sexual pleasure, and has been very up-front about that. As far as where that power comes from?\" She smiled ruefully. \"She doesn't care. At all. I could arrange for an orgy tonight, and the only thing she would ask is if everyone was a willing participant. Probably not even that, since she trusts me. She thinks human customs about sex are silly. Polyamory, group sex, what you and Sarah shared last night...all love is equal in her eyes.\n\n\n\n\"She pushes, yes. But gently. I have changed, yes. We all have, under her influence. But has anyone been hurt? Are any of us less happy than we were a few weeks ago? I know I'm not. If not for her, I would still be working my way to an early grave, alienating my children, and cut off from the man I love.\" She laid her hand on his cheek. \"Now I have all the time in the world, my husband and my children are happy, and I can help those I care about, like Maria and Jeremy.\"\n\n\"So what does she have planned? For us?\"\n\nShe paused, working through the possibilities. \"In the beginning, I think she just wanted to use me to accumulate enough power for her to pull free and return to her own body. Now, I think she may want more. I have caught a few hints, here and there. She doesn't want to hurt us. I'm certain of that. She just wants us to be happy.\"\n\n~Beloved, may I speak?~\n\nOf course.\n\n~I will need to use your voice.~\n\nRachel swallowed. \"She says she wants to say something.\"\n\nJosh's eyes widened as Althea's voice emerged from Rachel's lips. Even as the measured cadences rang through the room, Rachel could not believe the words were coming from her body. The voice was stronger, deeper, with weighty undertones of power.\n\n\"My handmaiden is correct,\" Althea said. \"At the beginning, I used her as a refuge. Then, as a resource, drawing on the pleasure she received from her beautiful body. But now, I want more. From her, and from all of you.\n\n\"This is a wonderful world we live in, Joshua. But too few people are truly happy.\" She sighed. \"So many rules about who you can love. How you can love.\" An arm described an arc, seemingly encompassing the entire planet. \"It is as if you are all living in a cathedral, and no one cares enough to worship. I want to change that.\n\n\"Whether by chance or some unknowable design, we have all been brought together. When I saw the work you are capable of, I thought of you as a Michelangelo or a Raphael. One whose art could elevate the act of bodily love to a sacrament, much like their art inspired numbers beyond count.\n\n\"The others in your household are also incredibly gifted. Think of them all working together for a common purpose. Yourselves, your children. Maria and Jeremy as well. Six men and women, loving and living and serving as a catalyst for a new age of love.\"\n\n\"With you as our Goddess?\" Joshua's voice was shrewd.\n\nAlthea laughed, her voice full of amusement. \"May the Almighty forbid! I have no desire for worship. Think of me rather as a prophet. Sent to guide those who would listen. Not like some huckster on television, trying to fleece the gullible. But instead as a voice of enlightenment.\" Her voice lowered and grew suddenly intent. \"Think of what we can do, Joshua. You have been working towards this your entire life. With my vision, your art, Rachel's passion, we can lead so many away from their self-imposed darkness. She held out her hand. \"Will you aid me?\"\n\nHe took her hand. \"I have to think about it,\" he said. \"You are right on one count, though,\" he continued. \"Not enough people are happy. Do you really think seven people can make a difference in how the whole world thinks about sex?\"\n\n\"The greatest fire can start with a single spark,\" she said, then withdrew. Rachel staggered slightly as her body became her own again. She shook her head, her stomach roiling, her body feeling as if it belonged to someone else.\n\n\"Gah!\" she said. \"I'm not doing that again if I can help it.\n\n\"So, what do you think?\"\n\nJosh shook his head. \"I'm not sure. It all sounds nice, but I've learned to be careful when something sounds too good to be true.\"\n\nShe nodded. \"I understand. Think about it and let me know.\n\n\"And now that I've confessed my terrible secret,\" she said with a lopsided smile, \"I'm heading out. Althea asked me to go up to the hospital and check in on her body. To make sure they're taking good care of her and see if she can figure out how she wants to approach things. I'll take Alex and Maria with me,\" she said, grinning wickedly. \"I thought you and Sarah would appreciate some alone time.\"\n\n*****\n\n\n\n\"So what's going on again? And why are we doing this on Memorial Day?\" Alex asked.\n\nFrom the back seat, Maria smiled. She loved her master dearly, but sometimes Alex was as oblivious as a boy, caught up in his own concerns and not giving a thought to others.\n\nI'm going to have to work on that. He cares for me. That I know. But it would be well if he showed more concern for everyone else. Actors are too self-absorbed to begin with. When he is famous, I want him to be gracious and kind, not an egotistical prick.\n\n\"I just found out a friend of mine is in the hospital,\" Rachel said, as she steered the car into the parking lot at the University of Chicago Medical Center. \"She doesn't have any close family, so I thought I would check in on her and see how she is doing. And whether I could do anything for her.\"\n\nShe put the car in park and opened her door. \"As far as why we're doing this on Memorial Day, why not? I wasn't aware of any pressing engagements you had, other than screwing poor Maria here so many times you've probably rubbed all the skin off your pecker.\"\n\n\"I do not mind, Mistress,\" she said softly, climbing out of the car, as Alex flushed scarlet. \"I wish to please my master. And he pleases me in turn. Often.\" she said. Indeed, the night before had been heavenly. As soon as they had entered her apartment, Alex had ordered her to her knees, tied her hands behind her back with a silk necktie he had purchased for the occasion, and had presented his lovely cock to her. She had pleasured him with mouth and lips and tongue until he had exploded in her mouth.\n\nWhen she proved her skill by swallowing every drop of his wonderful semen, he had removed her restraints and made love to her until she was a puddle of raw sensuality. They had still been lying in a happy, tangled heap in her bed when Rachel knocked on the door the following morning and ordered them to get dressed and go with her on her errand.\n\n\"Good,\" Rachel replied, smiling at her. She smiled back, happy that her mistress was pleased. When Rachel had suggested her solution to their dilemma, with Alex remaining her master, but Rachel stepping into the role of Mistress of the Household, Maria had been worried. Would mother and son be able to find a balance? So far, it seemed, they had.\n\n\"Come on Alex,\" Rachel said. \"The sooner we're done here, the sooner you can go back to violating this sweet young woman's innocence.\"\n\n*****\n\n\n\n~Well,~ Althea said as Rachel entered the room where her body slept. ~This won't do at all.~\n\nRachel gave silent agreement. The space was pleasant enough, by the standards of hospital wards, which inevitably tended towards bleak functionality over beauty. It had a window which looked out onto the hospital campus, and the walls were bright and cheerful. A vase of cut flowers sat at the bedside, driving away some of the antiseptic odor all hospitals seemed to share.\n\nBut still, the place could not be mistaken for anything else than what it was; a holding pen where people waited to get well.\n\nAnd, sometimes, didn't.\n\nAs Alex and Maria watched sympathetically, she sat at the bedside, taking one of Althea's hands in hers. She shivered as she felt her warm flesh for the first time. Can you sense anything?\n\n~Nothing,~ the succubus said sourly. ~My body may as well be a lump of rock. All of me is in here with you, going gradually insane. Well, it's just what I thought,~ she continued. ~I just wish I could get hold of that idiot Pete Miller. I'd kill him all over again just for getting me into this mess.~\n\n\"Have you known her long, Mom?\" Alex asked.\n\nShe started, having been caught up in her silent conversation with Althea. \"Not long. But you know how it is with friendships, Alex. Every once in a while you meet someone, and it seems like you've known them forever.\"\n\nHe nodded, his hand moving to clasp Maria's. \"I get you,\" he answered.\n\n\"But this room won't do,\" she said decisively. She glanced at the other side of the small space, where an elderly man with waxy skin lay in a coma of his own. \"She needs privacy.\"\n\n\n\n\"Privacy?\" Alex's confused voice followed her out of the room. \"Why would a woman in a coma need privacy?\"\n\n*****\n\nThe question was echoed by the head nurse at the front desk of the ICU, a stern martinet with iron-grey hair and a no-nonsense attitude.\n\n\"She is in a coma, Miss Wainwright. And according to Dr. Marafi's notes, quite unlikely to recover consciousness anytime soon. Why would a woman in a coma require a private room? They're expensive as hell and hard to come by, even in a hospital this large.\n\n\"Besides,\" she said, a hint of steel entering her voice. \"You're not a member of her family or a legal guardian. You have no right to be making any requests.\"\n\nIn her mind, Althea sighed. ~This one's not going to budge, dear one.~ Rachel could almost hear Althea frown. ~I don't like doing this. But when it comes time to restore me to my body , I can't have a bunch of people interrupting us and wondering what the hell we are doing. I need a room to myself and a door that bolts shut.~\n\nRachel caught and held the nurse's eyes. In response to Althea's silent guidance, she allowed her voice to deepen, becoming almost hypnotic.\n\n\"Come on. What's the harm? The woman's insurance can pay for it. And if they won't, she can. She's rich as old King Midas. Why not have the hospital make a little money for a change? As hard as all of you work, you deserve it. And I know it would make her happy to have a room to herself. And isn't this what you got into nursing for?\" she wheedled. \"To help sick people get better?\"",
        "The faded blue eyes blinked confusedly. \"Well, maybe...\" she said.\n\nRachel smiled brightly. \"Well, then it's settled! I'll have these two helpful young people give your folks a hand,\" she said, indicating Maria and Alex. \"Thank you so much,\" she finished, taking the older woman's hand and shaking it firmly.\n\nIn just a handful of minutes, Althea's body was moved to a larger room. Technically, it was not private, as it did have another bed, but the head nurse gave a somewhat bleary-voiced guarantee that no other patients would share the space with Althea. She sat down contentedly by her friend as efficient nurses set up the equipment which monitored her health and kept her fed.\n\nShe took up her hand, her fingers playing over the too-pale skin. Unlike the form Althea showed in her glade, this body showed the signs of the trauma it had lived through. The skin was more sallow, an effect of days without sunshine. Her face was thinner, the hair losing its golden luster. The lids that covered her eyes seemed parchment-thin, almost bruised.\n\nAnd despite it all, she was still heart-stoppingly gorgeous. Her throat grew dry with desire as she drank in the sculpted bones of her face. The urge, no, the need to take her in her arms, to make love to her until they were both sticky and sated, was almost overwhelming. Her nostrils flared with the faint, indefinable scent of her musk.\n\n\"She's very beautiful, isn't she, senora?\" Maria said softly as the last nurse bustled cheerfully out of the room, closing the door behind him with a quiet click. She drifted over to stand beside her, looking down at Althea. \"You must care for her very much.\"\n\nRachel fought against a flood-tide of jealousy, bitter as gall, at the thought of another person finding Althea attractive. Ashamed of her own reaction, she took a deep breath to forestall a sharp reply. In her mind, she could sense amusement as Althea watched her struggle.\n\n\"Yes, she is. And yes, I do. I hope that someday soon you will have the chance to meet her,\" she said. \"In a very real way, she is the reason why we are all so much happier now than we were a few weeks ago.\"\n\n\"Seriously?\" Alex asked. He joined Maria at the bedside. \"She convinced you to...to...\"\n\n\"To stop being an insufferable tight-ass who was making her family miserable?\" she finished, raising her eyebrows. \"Yes. She did. The first time I took her advice was a few weeks ago, when I came home after that traffic accident. You were telling me about Othello. I was just about piss on your parade again, when I heard her voice in my head.\" She smiled at Althea's mental snort. \"And instead of ruining everyone's meal, I actually listened to you for once.\n\n\"Since then, I've taken her advice more and more often. And look where we are now. Not quite all one big, happy family,\" she said with a glance at Maria. \"But getting there.\"\n\n\"Wow,\" Alex said. He shuffled his feet uncomfortably. \"I guess we owe her a lot.\"\n\n\"We do,\" Rachel said with a nod. She sniffed, aware of a growing aroma in the air. Maria's hip was warm where it touched her shoulder.\n\nAnd she was growing warm as well. The faint scent of Althea, combined with the presence of two healthy, happy, horny young people, was beginning to turn her on, despite the cold hospital air and the decidedly unromantic setting. And she had a sneaking suspicion that merely being in Althea's presence was a potent aphrodisiac in and of itself. That would certainly explain how she had no lack of partners over the centuries.\n\nWould you mind?\n\n~Mind? Lucifer's Balls, if I hadn't thought you'd hit the roof I would have suggested it myself! What's hotter than some public three-way action?~ Althea giggled merrily. ~Plus, with my body here, maybe I can send a little power over to it, so it stays healthy. Hospitals are awful places. Full of sickness and disease. Gross.~\n\nRachel moved her arm, letting it curl around Maria's knee, then travel up the inside of her thigh. Her skin was warm and smooth under her fingers, and she smiled inwardly as she heard Maria give a cut-off moan. Her legs came together, trapping her hand in a gentle vise.\n\n\"Tell me, Maria,\" she said, letting her voice drop into a deeper register, assuming her role as Mistress of the Household. \"Are you wearing panties today?\"\n\n\"No, Mistress,\" Maria breathed.\n\n\"Good,\" she said. \"I am glad you are following my instructions. Alex,\" she continued as her fingers continued their upwards journey. \"Please close the blinds there on the door. I don't want people looking in on us.\n\n\"Now, Maria,\" she purred. \"I want you to hold very still while Alex takes your clothes off. If you satisfy me, I may allow you to make me come. And I might allow Alex to fuck you while you're doing it.\"\n\n\"Jesus, Mom!\" Alex's voice was shocked.\n\n\"What's the matter, darling? Afraid of the consequences of your actions? This is what happens when you accept my role. Either deal with it, or don't. But if you can't handle it, don't think about exploring those naughty fantasies I know you're having.\n\n\"This is the first test, Alex. Can you share Maria with me? Or not?\"\n\nAlex looked desperately between the two of them. \"Maria? Honey?\"\n\n\"Do it, mi lindo,\" Maria replied. Rachel fingers reached her nether lips, finding them hot and wet under her touch. For the first time, she felt the private areas of another woman, and she could sense what a struggle it was for Maria to hold herself still. She slowly ran her fingers along her lips, feeling them part under her touch. \"Oh, Dios mio! She feels so good! Her fingers...so skilled. Please, Alex, my love, take off my clothes as she orders. I need her. She promised me, before you became my master, she promised me, my love, that one day I might please her. I have been waiting for that day ever since.\"\n\nRachel watched the internal struggle. Alex shut his eyes, visibly torn between the need to give his lover what she so obviously desired, and his selfish yearning to keep her for himself.\n\nFinally, his eyes popped open. He gave a rueful smile, filling Rachel's heart with joy. \"Everything or nothing at all, right, Mom?\" he said quietly. 'Well, I knew what I was getting into. Or should have. And at least you're letting me participate.\"\n\n\"This time,\" she said warningly. Under the cover of Maria's skirt, she slowly inserted a finger into her hot channel. A thin moan escaped Maria's lips, but otherwise she remained motionless. Rachel slowly pushed the digit in and out of her cleft, her finger stroking the sensitive nerves of her vagina. \"Take her clothes off, Alex. I want to see her. All of her.\"\n\nHer son nodded and walked over to Maria. Lovingly, he pulled her shirt up and over her head, exposing her gorgeous breasts. Large, high, and firm, they sat proudly on her chest, capped by dark, thick nipples, already erect. A quick motion, and he had unzipped her skirt, allowing it to fall to the floor. He knelt, gently lifting Maria's feet while he gathered up the skirt and removed her shoes. He lingered there for a moment, then inhaled deeply.\n\n\"You smell good, Mom,\" he said. His eyes, when they looked up at her, glinted wickedly. \"Maybe Maria's not the only one who's going commando today?\" He placed his head between her legs, kissing the inside of each thigh before she could react. The prickle of his unshaven cheeks on her legs was surprisingly arousing.\n\nAs he moved away, she laughed. \"Clever boy! Remind me to keep you around for a while. As for you, Maria,\" she said, looking upward. \"You have done very well. As a reward, you may sit on my lap so I can kiss your beautiful breasts. As long as,\" she continued, \"You can keep my finger in your pussy while you do it.\"\n\nMaria blinked down at her. Rachel could almost read her mind. With the two of them side-by-side and facing the same direction, how could Maria turn to sit on Rachel's lap without dislodging the finger Rachel had inside her?\n\nSuddenly, Maria smiled. As gracefully as any ballerina, she lifted her right leg high and pirouetted on the left. A low groan broke from her mouth as Rachel's finger rotated inside her, caressing her most intimate places. But when she was done, she was facing Rachel, and her finger had not slipped out of its sweet prison. She sat down on Rachel's lap, her legs spread wide, her lips curving in a smile of triumph.\n\n\"Well done,\" Rachel murmured. She let her eyes devour Maria, taking her all in. For the first time, she saw the glory and splendor of her body, all at once, a sumptuous feast laid out before her. She ran her hands lightly up her sides. Then unable to restrain herself any longer, she filled her hands with Maria's breasts, their delicious weight heavy in her palms. She thumbed the nipples, feeling, for the first time, the shiver of another woman's arousal in the crinkled tips.\n\nShe raised her head, drinking in her face, sweet and beautiful and filled with longing. She opened her mouth to give voice to some silly platitude, then stopped.\n\n~Arousal is the highest compliment you can pay her, my love,~ whispered Althea's voice. ~Show her how much you want her.~\n\nWith an inarticulate cry, Rachel laced her hands around the back of Maria's head and pulled her face down to meet hers. The younger woman's mouth covered her lips, and she immediately felt her tongue enter her mouth, exploring furiously. The chair squeaked beneath them as they rocked in place, hips and thighs thrusting feverishly.\n\n\"Here,\" Rachel panted, tearing her mouth away. She hiked up her silk skirt, exposing a length of milk-pale thigh. With trembling urgency, she adjusted Maria's seat, until the hot lips of the Honduran maid's cleft were flush against her legs, allowing her to grind gently against her. \"Better?\" she asked.\n\n\"Yes, Mistress,\" Maria gasped. Her eyes were wide, the pupils dilated. The sweet scent of her musk drifted up around them like a cloud, and she was leaving a track of her fluid on Rachel's leg as she slowly rocked back and forth. Rachel thought she had never seen her so lovely. The younger woman wrapped her arms around Rachel, cuddling her close, and kissed her again, her need so innocently wonderful that Rachel wanted to wrap herself around her and protect her forever.\n\n\"Maria. Darling,\" she said, when the kiss ended and she could speak again. \"I want to kiss your breasts. Please.\"\n\n\"Of course.\" She cupped them in her hands, raising them for her, an offering on the altar of desire.\n\n\"This...is new to me,\" Rachel said, suddenly uncertain.\n\n\"And to me as well,\" her lover replied. A dimple flashed in the corner of her cheek. \"I have never had a woman kiss me there before. Or anywhere. Only you, my Mistress.\" Her voice was full of love. \"I know you would never harm me.\"\n\nRachel swallowed, suddenly feeling as if she were bearing a vast responsibility. Her eyes were caught by a flicker of motion. She turned her head to see her son unbuckling his jeans and pushing his boxers down. One hand was wrapped around his erect penis.\n\n\"What do you think you're doing?\" she asked.\n\nAlex made a helpless gesture. \"Come on, Mom. You can't expect me to watch two of the most attractive women I know make out and not do anything about it. You two are hot as hell.\" He tried to grin disarmingly. \"Shouldn't you be taking it as a compliment?\"\n\n\"Maybe,\" she said, still stroking Maria's breasts. She felt a tentative touch at the buttons of her blouse, and realized Maria was undressing her as well. She helped shrug off the restrictive garment, welcoming the touch of cool air on her fever-hot skin. \"But I am giving the orders here. You are not going to jack off while you watch us make out.\"\n\n\"Why not?\" His gaze was challenging.\n\n\"Because you need to save your erection for when I decide it is time for you to screw Maria. Pants up. Now.\" She let a hint of Command enter her voice.\n\nAlex scowled at her, but pulled his pants back up and buttoned the fly. She smiled at him. \"It's good of you to learn patience, darling. Your lovers will thank you for it, later.\"\n\n\"Lovers?\" He goggled at her. \"Not lover? Not wife?\"\n\n\"Oh,\" she said, letting her voice go mysterious as she drew Maria close, brushing her lips against her brown skin. \"Who knows what will happen in days to come, Alex? Maria is not the only woman in our house who thinks you're desirable.\"\n\nGod, she sighed, as her lips kissed the soft, yielding flesh. This is wonderful. So smooth. Not like a man, she thought, her mind dwelling on the strong, hard planes of Josh's chest. And her son, only a few feet away. Not better. Not worse. Wonderful. But in a different way. She let her lips drift over the warm skin of Maria's breast, moving towards, then away from the pebbled nipple. Her lover twisted under her touch, seeking to place her areola under her mouth.\n\n\"Please, Mistress,\" she gasped, her voice a strangled whisper in her ear. Her groin rubbed frantically on her thigh, grinding down hard with every stroke. \"I'm so close. Kiss me there.\"\n\nFor an instant, Rachel considered refusing. But Maria's frantic need woke an answering response in her. She set her palms flat across Maria's back and drew her in close. She opened her mouth wide, her tongue stroking Maria's turgid nipple in one long lick, the thick nubbin hard beneath her lips.\n\nMaria bucked in her arms, her soaking slit pushing down on her leg. She could feel the bones of her pelvis as her full weight came down on her, increasing Maria's pleasure. Even through the fog of lust which covered her mind, she was stunned. She knew how good it felt when Josh suckled her nipples. But she had never imagined how good it would feel to return that pleasure with another woman. She drew Maria's nipple into her mouth, pretending she was a nursing child, her tongue flicking over the tip. At the same time, her hand came up and played with her other breast, pinching the nipple playfully.\n\n\"Ah!\" Maria gasped, and held very still. Startled, Rachel looked up. \"Are you all right?\" she asked worriedly. Fuck. Alex will kill me if he thinks I am hurting her.\n\n\"Oh, no, Mistress,\" she breathed. \"I'm wonderful.\" She set her hand over Rachel's, moving it to her nipple. \"No one has ever done that for me before. A little pain, but the pleasure is so good. Please,\" she said, her brown eyes dark and shining, full of mystery, \"More.\"\n\nUnable to deny her lover what she desired, Rachel bent back to her task. With her mouth, she laved the nipple of one breast. With the fingers of one hand, she stroked and prodded, rolled and pinched the nipple of the other. Her free hand roamed over Maria's hot skin, from her shapely buttocks to her strong back to her trembling stomach to the drenched place between her legs, softly fingering her weeping folds and brushing her sensitive clit.\n\nSuddenly Rachel felt the weight on her legs ease. Rachel rose slightly. With long, firm strokes, she ran her labia back and forth over the muscles of her thigh. Instinctively, Rachel cupped her hand over her mound, allowing a finger to dance on the bud of her clitoris. Maria's eyes were squeezed shut, her breath coming in hard, rasping gasps as she fought to keep from screaming. She kissed her, their tongues dancing together as Maria reached for her orgasm. With a muffled groan, she collapsed in Rachel's arms, curling in a ball as her climax pulsed through her. Through her bond to Althea, Rachel could feel the thunderous echoes in her own flesh.\n\n\"Good,\" she whispered, stroking the younger woman's hair. \"Very good, darling.\" She waited a few minutes until the aftershocks had slowed, then stood, allowing Alex to take his lover in his arms.\n\n\"My turn now, I think,\" she said matter-of-factly. Not waiting for Alex's reaction, she moved to the other bed in the room, hiking up her skirt as she lay down. Her lips, puffy and engorged, spread as she settled on her back, uncovered by anything as unnecessary as a pair of panties. She grabbed the thin pillow from the top of the bed and placed in under her head, propping her up slightly.\n\nShe could feel the pressure of her son's eyes as they rested on her exposed breasts. She hefted one, her fingers splayed along the underside of its curve, teasing him. Power was heady in her heart as she saw him swallow nervously, the crotch of his jeans tented by the evidence of his desire. She looked over at Maria, still flushed from her orgasm. \"Are you ready, Maria? Are you hungry for me? My pussy is waiting for you. Why don't you come over and kiss it hello?\"\n\n\"Oh, yes, Mistress,\" she said, her voice throbbing with need. In that instant, Rachel glimpsed what made Maria the supremely lovable woman she was. All good lovers cared for their partners and their partner's pleasure. With Maria, a submissive, that caring was elevated to a sexual need. The happier her partner was, the more aroused Maria became. The joy of both lovers became entwined in a positive feedback loop, until one could not tell where one ended and the other began.\n\nHesitantly, Maria lay half-on, half-off the small hospital bed, her hips, legs, and beautiful ass hanging off the edge. The green sheets contrasted sharply with her dark complexion.\n\n\"Have you ever done this, dear?\" Rachel asked gently.\n\nMaria shook her head. \"Never. But I am ready to learn. To make you happy. Proud of me. I have been waiting for this moment since the day I first met you.\" She ran her hands over the skin of her thighs, then bent closer, kissing the insides of her legs while Rachel shivered happily. She switched from one leg to the other, slowly working her way upward.\n\n\"You have such beautiful legs, Mistress,\" she said. Her breath was hot, her mouth only inches away from her mound. \"You look like a young woman, ripe and ready for a lover's touch.\" She wormed her way forward, one pink-painted nail trailing over her entrance. \"My touch,\" she said, a hint of suppressed triumph in her tone.\n\nAs Maria drew closer and closer to her ultimate goal, Rachel looked over at her son. He stood stock-still, his hands flexing and unflexing, the muscles bunching under his shirt. Sweat beaded his upper lip and the hollow of his throat, and Rachel had to admire the iron-hard self-discipline which kept him from joining them unasked. Despite his need for control, and the fact that he and Maria had been lovers for only a few days, he still obeyed her commands.\n\n\"Alex,\" she said softly, even as Maria gave her throbbing lips a first, tentative lick. He jerked at the sound of her voice. His eyes were wide and wild when they met hers. \"You can take off your jeans, sweetheart. And your boxers. Would you like to make love to Maria as she pleasures me? Maria, would you like that as well?\"\n\nFrom between her legs came a muffled assent. \"A little higher, please, Maria,\" she ordered. She felt a brief moment of sympathy for the young woman, who did not have a succubus to guide her in the best ways to give her partner pleasure. \"Oh, yes, that's it,\" she groaned, as each lick swept deep into her hungry channel, then finished off with a glancing strike on her throbbing nodule. For an instant, she considered showing Maria how to best please her, with gentle taps of her fingers on her pearl. Regretfully, she decided against it. The poor girl is eating pussy for the first time. Best not to overload her with instructions.\n\nBesides, Alex is about to stick his gorgeous cock into her. Damn! He's better hung than Josh is. Of course, he's taller. But I know better than to think a tall man will automatically have a big pecker. Her eyes rested covetously on his jutting length, silhouetted by Maria's brown ass-cheeks. As big as he is and as small as I am, I bet he'd split me wide open!\n\n~Why does that prospect not seem to upset you, beloved?~ Althea's mind-voice practically chortled with amusement.",
        "Because it doesn't. I would never come between these two, she said, looking lovingly at Alex and Maria. But it doesn't mean I can't enjoy them. And since Josh and Sarah seem so happy together, who says I can't take my lovely son to my bed?\n\nUnaware of how two women, only one of whom existed in material form, were deciding his future, Alex lined up his cock with Maria's cleft, then entered her. Unable to see it, Rachel still knew exactly when it happened, as the young woman between her legs stiffened slightly, then purred happily, an unseen tension flowing out of her back and shoulders as her lover joined with her again. Rachel propped herself up on her elbows, the better to see Maria's head bobbing industriously at her groin. Her hair, still bound in a braid, flowed like a river of pure midnight down her back, and her well-muscled buttocks quivered with each slap of Alex's flat stomach against her. However, she was frustratingly unable to see his cock. She groaned in inner agony, her mind's eye conjuring visions of how it must appear, hard and red and wet, as it emerged from Maria's silky sheath.\n\nShe cupped her breasts, pinched her nipples, and gave herself over to the feel of Maria's tongue. New she may be to pleasing a woman orally, but she was a fast learner. Sensitive to those slight changes in tension, posture, and breathing which indicated her arousal, it was no time at all until she had Rachel on the edge of a toe-curling orgasm. As the wonderful feeling swept her higher and higher, she opened her eyes, gazing vacantly around the room.\n\nIt was then, of course, that it happened. Helplessly, she saw the door of the room open and a form enter. Dressed in green hospital scrubs and a white doctor's gown, the young woman stared disbelievingly at the three of them. She shut the door with a slam that sounded like the crack of doom.\n\n\"What the fuck do you people think you're doing?\"\n\n*****\n\nYasna stood in the small room, trembling with fury. Her rounds had started badly enough, with Althea Carpenter being moved out of her room for some reason, and the head nurse unable to give her a lucid explanation as to why. And when she finally tracked her down, to find three people rutting like dogs in her room! How dare these people profane Althea with their presence? Her small fists clenched in her pockets, and it was with difficulty that she restrained herself from physically attacking them.\n\n\"Oh,\" groaned the older woman, an attractive brunette perhaps ten years older than herself. \"Oh, God!\" she panted, trembling, and to her horror Yasna realized that the woman had just climaxed right in front of her. She rolled off the bed, standing on unsteady legs, and smoothed her expensive lime-green skirt over her slender legs. While Yasna watched in disbelief, she kissed the two young people who were bent over the bed, her mouth devouring theirs hungrily. \"Thank you, Maria,\" she heard her whisper, as she squeezed one heaving breast.\n\nAll but ignoring her, she stumbled over to a chair near Althea's bed and picked up a tasteful white blouse. Shrugging it on, she buttoned it up over her generous chest and stepped into a pair of high-heeled walking sandals. When she had finished, she finally turned to Yasna.\n\n\"You must be Dr. Marafi,\" she said politely. \"I'm Rachel Wainwright. I'm a friend of Althea's and I came over to pay her a visit, once I discovered she was here. I have to thank you for taking such good care of her.\"\n\nShe held out a well-manicured hand, and Yasna took it, ingrained good manners taking precedence over her outrage at this woman's behavior. Her eyes strayed to the other bed, where the tall young man was still thrusting urgently into the gorgeous young Latina woman. She shook her head in mute disgust. \"I don't suppose I could ask you to have them quit screwing in the presence of one of my patients?\"\n\nRachel blinked, as if confused by the suggestion. \"Why would I do that? It wouldn't be fair to the poor darlings. Especially Alex,\" she indicated the young man, her eyes lingering possessively on his well-muscled form. Her voice sank to a conspiratorial whisper. \"You would not believe how long I made him wait before I let him fuck Maria this afternoon. I thought he was going to shoot off in his pants!\"\n\nShe made her voice cold. \"And you think this is appropriate behavior?\"\n\n\"In the midst of life, there is death,\" Rachel replied serenely. \"There's nothing like a reminder of our own mortality to make you feel like challenging it with a reminder of what joys life holds.\" From the far side of the room came a matched pair of groans, and Yasna saw Alex slump over the back of his lover, kissing her neck tenderly. \"But now,\" Rachel continued, as if this was perfectly normal, \"Tell me about Althea. What is her condition?\"\n\nYasna took a deep breath, trying to calm herself. The woman might be crazy and unconventional, but she didn't appear dangerous. And it would be more trouble than it was worth to call Security. She thought about the amount of paperwork that would generate, and shuddered. She let Rachel lead her over to the bedside, where Althea slept quietly, untroubled by their concerns.\n\n\"The EMTs brought her in on May 19<sup>th</sup>, in the late afternoon,\" she said, the facts so well-fingered in her own mind she could recite them in her sleep. \"She was outside her condo in River North when she suddenly collapsed and began to convulse. The seizure stopped almost immediately, but witnesses couldn't wake her up. They called 911, and she was brought here.\n\n\"She's been unconscious ever since,\" she stated flatly, her immense frustration at her inability to diagnose Althea's illness making itself heard in her voice. \"We've run tests. They've all come back negative.\" For a moment she hesitated, wondering whether to share what she had found out late the night before, then closed her mouth firmly. No need to go stirring up trouble. And what would this weird woman say if she told her the truth?\n\n\"Now, how about you help me out a bit?\" she suggested caustically. \"You're the first person to visit Miss Carpenter, as far as I know. Can you help me fill in some gaps in her medical history?\"\n\nRachel's eyes went blank for a moment, then she nodded firmly. \"Of course.\"\n\n\"How long have you known her?\"\n\n\"Only a little while. But we've grown very close in a short time.\"\n\n\"Does she have any allergies or medical conditions that you know of? Or a family history of any sort of disease or genetic disorders?\"\n\n\"No,\" Rachel said firmly. \"As far as I can tell, she's usually disgustingly healthy.\"\n\n\"Any recent trips out of the country? Especially to tropical areas. Central America or sub-Saharan Africa?\"\n\nRachel nodded. \"You're thinking about something like the Zika virus, right? Or one of those strange fevers that come out of Africa or Asia. No,\" she said, dashing Yasna's hopes. \"I believe she went to Canada for a few weeks a couple of years ago. And she visited Europe a few years before that. But she has spent most of her time in America.\"\n\n\"Damn it,\" she muttered. Being able to talk to someone Althea knew had raised her hopes for a moment, but they had been smashed again. She let her gaze stray to her patient, her angelic face calm and serene. She frowned, and bent close.\n\nNo, she thought, straightening. It can't be. It must be a trick of the light in a different room. But the thought nagged her. Had Althea's skin lost some of its pale, sickly hue? Were her cheeks less hollow, her hair more golden?\n\n\"Thank you for coming in,\" she said, putting on her professional mask. \"But I have to ask you to leave. I have to examine Miss Carpenter. And I must ask,\" she continued, cursing the hot blood that flooded her cheeks with heat, \"That you not engage in any...activities...like those I interrupted the next time you come to visit.\" In the corner of her eye she could see the two younger members of the group slowly dressing, pausing occasionally to caress each other.\n\n\"Of course,\" Rachel said. \"It was inappropriate, and I apologize. The next time we come here we will do no such thing.\" She picked up a purse and slung it over her shoulder. \"Here,\" she said, reaching inside and pulling out a card. \"My cell number is on here. The office number is out of date, I'm afraid, as I just left my previous job. But if you have any questions about Althea, please call.\" Her eyes caught her, strangely intent. \"If you want to talk about anything about Althea, you can call me. Anytime.\n\n\"Come on, kids,\" she said, and walked out, not looking back.\n\n*****\n\nWell, your doctor seems to like you, Rachel observed silently, as they drove down the toll road towards Woodridge. Pretty, too, for all she tries to hide it. Too thin, but she's got a decent chest under those scrubs. And that face and her skin! She reminds me of Jasmine from Aladdin. What nationality do you think she is? Israeli? Jordanian?\n\nAlthea made a disgusted noise. ~She's from Iran. At least, her family is. She was born here in the States. There were a lot of Iranian families that came over here after the Ayatollah took power back in the seventies. And only you would compare a woman like that to a Disney movie,~ she said. Her voice grew pensive. ~I hope there's a happy ever after for her, though. She's been hurt. Badly. And she may be hurt worse by the time we're done.~\n\nWhat do you mean?\n\n~Did you see the way she looked at me?~\n\nNot much different from the way we all looked at you, I thought. You're gorgeous, Althea. I knew that from the first night I met you. But to see you in the flesh...shit, you're overwhelming. No wonder you never had any problems finding partners. For you, the entire human race must have been like an all-you-can-eat buffet.\n\n~Well, that's true,~ Althea allowed modestly. ~But for poor Yasna back there, it goes deeper. And that's what worries me. Elf-shot, they used to call it, back in the old days, when there were still quite a few of us around. Certain humans would fixate on us, to the exclusion of everything else. And if we weren't very careful, they would pine away without us, forgetting to eat and drink and sleep, until they died.\n\n~Humans made ballads about it. As if it were somehow glorious to die for love. How does that make any sense? Why would anyone want to leave this world? It is wonderful. I do not understand humans. Life and beauty and and the constant wonder of this good Earth, and they choose to leave it voluntarily.\n\n~I will not have that. I will not have a beautiful, intelligent young woman die of neglect or by her own hand,~ Althea grumbled, sounding like a cranky old man, and Rachel smiled. She pulled off the tollway, taking the exit towards home. In the backseat, Maria and Alex were cuddled together, talking softly. It made Rachel's heart glow to see the love between the two of them. Every day it grew deeper, stronger, and richer.\n\n~They are beautiful children, are they not?~\n\nThey are. Have you ever wondered, she asked, phrasing her question carefully. What it would be like to have children of your own?\n\n~Only every day since I was seventeen, and the Messenger of God pronounced judgment on the succubi,~ Althea replied bleakly. ~I had taken lovers before, and had never conceived. I do not know if even God knew what we would be like, my brothers and sisters and myself. On that day the Messenger came down from Heaven and told me my fate. Immortality and an eternal war against the Forsaken. And never a child.~\n\nI'm sorry, she said softly. Look, she said, trying to distract her. There's where we first met! The intersection where Pete Miller died flashed past.\n\n~Damned fool,~ Althea said darkly. ~It would almost be worth going to Hell. Just to kick his ass. Hey! Who the fuck is that, and what is he doing?~\n\nRachel drew an outraged breath as she pulled into the driveway. A large, beefy man was at her front door. From the angle it was difficult to see what he was doing, but it certainly looked like he was trying to pick the lock and gain entry. His shoulders were hunched under the jacket of his cheap suit, as if he were trying to hide his actions from prying eyes.\n\n\"Alex,\" she snapped. \"Heads up. Someone's trying to break in. Get ready to call 911, but don't actually do it until I say so. Both of you, follow me, but stay back and keep quiet.\"\n\n\"Excuse me?\" she said, climbing out of the car. Alex and Maria followed at a cautious distance. She kept her voice loud and cheerful, with only the slightest hint of concern. \"Can I help you?\"\n\nThe man turned quickly and backed away from the door, an expression of guilt replaced by a wide, cheerful smile. \"Rachel Wainwright?\"\n\n\"Yes,\" she nodded warily. \"And you are?\"\n\n\"Lloyd Fontein, Chicago PD,\" he said. He flashed a badge at her, closing the leather case and tucking it away before she could get a good look. Too quickly, she thought to herself. \"Would you mind if I came in and asked you some questions?\"\n\n\"Yes,\" she said, smiling widely.\n\n\"Great,\" he said, moving aside and allowing her to get to the door. \"Lovely house you have here. A lot better than I could afford on a detective's salary, huh?\"\n\nOh, he's good. Her admiration was tinged with disgust. Win my sympathy by implying you're underpaid. Work on my guilt. Her smile grew cold. \"I don't think you understand. Yes, I do mind if you come inside. You're not invited. And truth be told, you're more than a little off your turf, aren't you, Mr. Fontein? This is Woodridge. What's a Chicago cop doing all the way out here?\"\n\nFontein's smile grew ugly. \"Investigating a disappearance. What do you know about a woman named Althea Carpenter?\"\n\n\"Althea? She's not missing. She's-\" Too late, she caught herself. \"She's not your business.\" Shaking at her slip, she pulled out her keys.\n\n\"Oh, I'm making it my business, bitch.\" A heavy hand fell on her shoulder, spinning her around. In the back of her mind, Althea screamed in fear and rage. Fontein leaned close, his rank breath making her gag. His eyes were wide and bloodshot. \"Listen,\" he said hoarsely, and she could sense his panic. \"Tell me what you know and I'll leave. I'll never bother you again. What do you care about this cunt Carpenter, anyway?\"\n\n\"Alex, now!\" she shouted. She glared at the hulk of a man looming over her. \"My son just called the police. The real police.\"\n\n\"I am-\"\n\n\"You're not,\" she snapped. \"And I know it. Out of your jurisdiction, unmarked car, closing the badge too quickly, too fast to resort to threats and abuse.\n\n\"Now, it's possible,\" she said, \"not likely, but possible, that you're just a plainclothes detective who's having a bad day. In which case I'll apologize and we'll all have a good laugh when you prove you are who you say you are. On the other hand,\" she continued, \"If you're here when the Woodridge PD shows up and they see you're impersonating a real police officer...\" she allowed her voice to delicately trail off. \"What happens to ex-cops in prison, Lloyd?\"\n\n\"Fuck you,\" he breathed, and she could taste his fear and hate. \"Fuck you forever. Screw it,\" he said, removing his hand from her shoulder and edging away. \"I'll find the Carpenter bitch without your help. You had your chance. Remember this,\" he spat over his shoulder as he walked down the steps toward the sidewalk, \"When that monster Kincaid comes for you. You had your chance.\"\n\nKincaid? What the hell does he have to do with this? She watched suspiciously as Fontein climbed into a beat-up old Buick and pulled away from the curb. Maria and Alex walked up to her, surrounding her protectively as the car lurched away in a stinking cloud of blue exhaust.\n\n\"What was that about, Mom?\" Alex asked.\n\n\"I'm not sure,\" she said.\n\n~I am,~ Althea said. Rachel bit her lip. For the first time in their acquaintance, Althea was scared. No. Not scared. Terrified. ~That man has been touched by a demon-spawn, and he is doing his bidding. Somehow he knows, Rachel. The demon knows who I am and he knows I am incapacitated. The only thing he doesn't know is where I am. Where my body is. And where my soul is. If he finds out either, he will kill me. And by the time he is done, my death will be a welcome release.\n\n~And he knows you and I are somehow connected. Oh, God, Rachel. I am so sorry.~\n\n*****"
    ],
    "authorname": "Glaze72",
    "tags": [
        "incest",
        "milf",
        "succubus",
        "urban fantasy",
        "mom son incest",
        "father daughter incest",
        "oral",
        "older woman",
        "family incest"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/idle-hands-ch-03"
}