{
    "title": "The Twelve Vitali Ch. 35",
    "pages": [
        "Authors note: Hello everyone. Well this is the last chapter and I hope you have enjoyed this story! Thank you everyone for the positive feedback and comments they continue to mean the world to me and have brightened my days. Thank you once again to Paul who worked tirelessly on this series as my second set of eyes. ~ellie. \n\n*****\n\nCat hung from intricate ropes, panting for breath, her eyes closed and perspiration making her skin glow. She had been woken early by the insistent kissing and nuzzling of the men she loved and taken into the playroom before the sun had barely cleared the horizon.\n\nNow, as the restraints were finally being released and she was lowered to the floor, she felt the exhaustion of both last night and this morning fill her. The only saving grace was that she didn't have morning sickness for once. Maybe this was the cure, she gave a half laugh as she went to shower with Ricco and Matteo, who now treated her as if she was fragile and bathed her, towelled her dry and rubbed lotion into her marked limbs and torso. They hadn't held back, and just like the night before they had used her completely, with the addition of all the tools at their disposal in the red room.\n\nOnce dressed, they walked with her to the kitchen and sat at the small cosy table there. Lisa, Arturo and Bradbury waited for them, and Hugh came in a minute later. Matteo looked at Ricco and took a breath. He knew Cat wouldn't like what they were about to do, but Ricco had assured him it was necessary for Cat to move past her own guilt over what had occurred. She had been punishing herself, and now she needed some sort of acknowledgement, if not a real punishment from them.\n\n\"Great, we're all here then,\" Matteo started. \"New rules for our Princess,\" Matteo grinned at Cat, who looked horrified at being called a Princess. \"Mrs. Vitali, Cat, is pregnant. If she doesn't eat breakfast or only has toast, she doesn't go out until she has eaten something decent mid-morning or lunchtime. I won't have her fainting or collapsing again, regardless of the circumstances, and our baby needs more than a token mouthful of food if it is to survive and be healthy.\"\n\n\"Smoothies might be a good alternative, nutritious and filling without weighing her tummy down too much,\" Lisa suggested, not hiding her wide smile at the idea of a baby in the house.\n\n\"As long as it's sustaining. Cat let herself get run down to the point of exhaustion, and it took her from us for far too long. That won't be happening again, so, new rules where she is concerned. Any changes in her schedule must be passed through us for the next few weeks, and there will be time for resting in between events,\" Matteo continued. \"While the immediate threat to her welfare is gone, there have always been threats to people who hold a certain celebrity, so Hugh and Bradbury will remain fulltime as personal security, regardless of Mrs. Vitali's feelings that she is able to look after herself.\"\n\n\"Why are you doing this?\" Cat was shocked that they would do this to her. They had always been so careful of her feelings in front of the staff she felt awkward enough with. Now they were treating her like a naughty child in front of them.\n\n\"Because we trusted you to look after yourself while we were tending to business before the shooting and you didn't. You didn't sleep or eat properly, you weren't honest with me about how bad you were feeling, and you didn't confide in the people who would have helped you and made sure you got what you needed. You should have told me just how badly you were sleeping and sick you had become when we spoke,\" he said a little more gently. \"It wasn't until Zee spoke to me that I realised you hadn't told me the whole truth.\"\n\nCat said nothing as she acknowledged that what he was saying was true, and lowered her head in shame and guilt. She hadn't been honest with him, and she knew how much that would have hurt him.\n\n\"If we can't trust you to put your own welfare or the welfare of our child first, we will do it for you!\" Ricco said in hard tones that made her eyes widen. \"No more secrets, Cat. You are carrying the next generation of the Vitali Table, and you need to stop hiding that fact from everyone, even yourself. How would you feel if you had lost the baby after you pushed yourself to physical and mental exhaustion?\"\n\nThe thought hadn't even occurred to her at the time, and his harsh words startled her. He was angry with her, they both were, she realised. Had she really come home last night like a princess expecting them to be grateful that she had deigned to come home and not have to face any consequences? They had been happy and grateful, they had told her as much, but she didn't blame them for being angry with her. She had been angry with herself for how everything had played out on the jet. She didn't blame them for being angry with her; in fact, it was a relief that they were honest about it instead of trying to make her feel better by sweeping it away as they always had in the past. So she sat quietly while they told her how she was going to have to live her life for the next few weeks, if not months until she earned their trust back.\n\n\"You are the mother, people run around after you, not the other way around. If you want to meet with Aria or Mia, or even all of the women's circle, they come to you, either here or downstairs in the restaurant. Maryanne doesn't get to summon everyone there just because she has a baby. She has nannies, for goodness sakes, not just one, but two!\" Matteo said in a frustrated voice.\n\n\"You are a princess; your great-grandmother was a queen. You married into royalty within our family, its time to put the girl from Acacia Grove behind you and embrace being Mrs. Catriona Vitali,\" Ricco said. \"The only people you have to obey and run around after are Matteo and me. Nobody else can tell you what to do, only suggest. This week, take the time to work out properly what you want to do. Yes, you have responsibilities, but you also want to paint. You can do both if you cut out all the things you don't want to do, and certainly don't have to do. Have we made that point clear now?\" Ricco asked in the same hard voice. \"Unless, of course, you want to leave Sonya running things, including your life within the women's circle,\" he smiled as he saw Cat stiffen at that news.\n\nCat had promised herself, over the last week or so, that if she came back and faced those women again they would know just how brave Theresa had been. How loving and forgiving toward Vanessa and how utterly amazing Cat thought she was. She knew her story would hurt Mia and Aria to hear about the betrayal of Vanessa, but they needed to know that Theresa was brave. Cat itched to ask about her and when she would be home from Darwin.\n\n\"Use the software Peri gave you, Zion says it will do most of the work for you,\" Matteo said in a conciliatory tone to offset the harshness of Ricco's words. \"These people work for you, not just because they are contracted to, but because they want to, and they care about you and our family. You can tell them what to do, but for the next little while they'll be running that past us as well. Just until we are sure you are looking after yourself and our baby properly.\"\n\n\"I understand,\" Cat said softly. Cat knew she had done everything they accused her of, and more. She had gotten their mother and sister shot as well. She deserved a far greater punishment than this, and the people standing there looking at her didn't seem to be judging her, but rather looking at her with care and understanding. \"I'll do it your way, my way obviously wasn't working,\" she said contritely.\n\nYesterday, after Sava and Vedran left, she knew this is where she wanted to be. She didn't want a new life where she could start over, she wanted this life with the men she loved, and she was ready to take whatever punishment they deemed fit for what she had done. She couldn't face the self-imposed exile she had been contemplating once it was made reality and offered to her by her cousins. The idea that she could have harmed her baby by being as neglectful as her mother had been upsetting to hear, but she determined not to show it. She would get some help, maybe talk to a counsellor or therapist. She made the decision to come back, and now she had to embrace everything that came with that instead of shying away from it, including motherhood.\n\n\"Why don't we try a smoothie this morning, Mrs. Vitali,\" Lisa suggested. \"I have some lovely recipes from back in my training days.\"\n\n\"Thank you, Lisa, that would be lovely,\" Cat gave a small smile, then turned at a commotion coming from the living room.\n\n\"Don't even try and stop me, big brother!\" Aria said to Matteo as she hurried into the kitchen to embrace Cat. \"I am so glad your back, I missed you!\"\n\n\"Sorry, Matt,\" Zion shrugged. \"There was no stopping her once she knew Cat was home.\"\n\n\"Mr. Vitali,\" Knox said in a gruff voice from the doorway. \"You might want to move to the dining room. It would seem Lucca and Logan are on their way up as well.\"\n\n\"Yeah, okay,\" Matteo chuckled and looked at Lisa, who had already sent one of the kitchen hands to set the table for them. Lisa merely nodded back with a rare smile for him.\n\nBreakfast became a family affair, as most of the younger Vitali clan descended on the penthouse to the point where the large dining room table became overcrowded and people spilt out into other rooms in the penthouse.\n\nCat was overwhelmed by the fuss her home-coming incurred. These people, this family, honestly cared about her. She had barely known them more than six months, some of them much less than that, but they were all so happy to see her return to where she belonged. She knew part of that was because of Matteo and Ricco, but they genuinely seemed concerned for her as well after the trauma of what happened in the Kimberley.\n\nAria, Mia and Kari stole her away from the rest of the crowd to fill her in on what was happening in the women's circle since Theresa's injuries and Cat's absence. They sat together in a small group out on the deck in the sunshine.\n\n\"Sonya has not been good, especially because Marina was so badly injured and won't be calling her on her bullshit for a while,\" Mia said, sounding more assertive than usual.\n\n\"I'm so sorry,\" Cat said. \"The truth is that I have not been doing what I should have been for a while, I've just been so sick with the pregnancy, and I don't have anyone to ask what worked for them that might help.\"\n\n\"Oh my God! That's why Lucca was so worried about you?\" Aria asked amid the gasps of joy from the other women. \"You should have told us!\"\n\n\"I don't think we can keep a secret for much longer,\" Cat said nervously and pulled a face.\n\n\"You should have asked, this is a highly fertile family, in case you hadn't noticed,\" Mia laughed. \"The trick is to just snack all day, no large meals, so you don't have the full feeling making you sick, or the acid build up. Take all your vitamins at night, including magnesium and a good shot of ginger.\"\n\n\"How do you know this stuff?\" Cat frowned at her.\n\n\"I'm the oldest of all my siblings and cousins, I know everything about having babies, which is why I'm not planning to have any of my own,\" she laughed lightly again. \"I'll be the cool Aunty Mia who does all the fun things and hands them back when they're tired and cranky.\"\n\n\"Seriously?\" Aria asked, looking at her sister as if she had grown two heads. \"I thought you and Kalam would already be trying.\"\n\n\"No, I love this family and its traditions, but I married a warrior,\" Mia grinned. \"That means I am not responsible for populating the next table. That would be Cat and Kari's job until the other brothers find the woman of their dreams who will be happy to have a big family. Besides, you'll meet someone one day and leave us for another family.\"\n\n\"No, you're stuck with me. Even if same-sex marriage is law now, none of the families will condone it,\" Aria laughed at the look on her sister's face. \"It's more than just a phase, Mia, trust me. The only guy I have ever been into is Zion, and let's face it, that would be even worse for everyone!\"\n\nCat relaxed and let the chatter of her sisters-in-law flow around her, enjoying their banter until she was pulled back into the conversation with talk of Sonya and Angela.\n\n\"A leader is only as good as the people who follow them,\" Cat said quietly. \"Not that I am claiming that I am the leader, I would much rather have a democratic circle, because I could use all the help I can get, but...\" she took a breath and soldiered on. \"If no one does what Sonya wants she can issue as many orders as she likes, because they won't be worth anything if no one acts on them, and, seriously, it's been two weeks, there was no need for her to be doing anything.\"\n\n\"I agree with that,\" Kari spoke up when no one else did.\n\n\"Look, I know this is going to be as hard for you to hear as it is for me to tell you, and I don't know how much you were told about what happened at the Papillo airport,\" Cat began. \"But I will be telling the circle, so it's probably better that you hear it here from me when you have the people who love you close by.\"\n\n\"No real detail, just that there was a gunfight and you and Theresa were injured, and Vanessa...\" Mia couldn't say the words and closed her eyes.\n\n\"When I boarded the plane without Maria, Giovanni and Mario were angry and had been subdued by the Suebi men on board. Vanessa's last words to Theresa were \"You are not my mother\", and Theresa argued that Vanessa was her daughter in every way that counted and told her she loved her. Theresa also told the leader of the Suebi that it didn't matter if they killed her and me or all of the mothers, because there were always stronger, bolder, better women to step up. She told him that you, Mia, or Aria, could step up into the role and help the family to cope with their losses. You all think she isn't a great leader because she is a second wife, but she is. The reality is that she loves you all so much, there isn't anything she wouldn't do for you, including trying to save the daughter who had delivered her, and me, to the men who meant to kill us. Theresa was shot trying to save Vanessa, begging her to see what she had done and save herself right to the end.\"\n\nCat stopped, seeing that Mia had begun to cry and Aria had gone pale and her bottom lip trembled. Still, she continued, feeling the conviction of her words. New life, new rules starting today, Cat reminded herself. She had a shitty mother, and she wasn't about to let anyone think of Theresa that way. She would be tougher and stronger and step up and be the leader that would make Theresa proud.\n\n\"I told you that because if one woman on that table dismisses Theresa in front of me again, they will hear that story, and more. I won't put up with it ever again, regardless of what Theresa says or allows those other women to do. She has taught me so much in the last few months about loyalty and sacrifice. Honestly, what Sonya is doing is nothing of importance, and if she talked to her husband or sons, she would know that,\" Cat said decisively. \"If she challenges me she won't be welcome in the circle, it's that simple, and I will be the one talking to her husband and sons. Theresa is one of the most amazing women I know, and I have no time for people who would criticise her just because she was a second wife or a stepmother.\"\n\n\"Thank you for telling me that about my Mama,\" Aria said softly and reached out to take Cat's hand.\n\n\"It's difficult to know Vanessa betrayed us like that, but the meeting in January affected her more than the rest of us. I was just too wrapped up in my own happiness to notice,\" Mia admitted. \"I have always had a good relationship with Theresa; she never forced any of us girls to seek out relationships with the other families. She always believed in letting us live our own lives, which maybe came across as untraditional and against the family laws our Papa's lived by.\"\n\n\"Yeah,\" Aria said sadly. \"I can't imagine her being so brave after watching the other women cow her for years. I'm so proud of her.\"\n\n\"I'm the new kid on the block,\" Kari admitted, \"But it sounds like you were pretty brave as well, Cat,\" she said softly. \"It's a shame Maryanne wasn't here to hear that story, but her little one has a cold, and it's hard with a newborn to keep them settled when their little noses are running or blocked. They have trouble eating and everything. Do you mind if I fill her in on what you said?\"\n\n\"If you like, but I imagine it won't be the first time I tell people about Theresa's bravery and love of this family,\" Cat said. \"Maybe you could find out from Zachary when Theresa will be allowed to travel home for us so we can do something really nice for her.\"\n\n\"I can do that,\" Kari said with a smile. \"With pleasure.\"\n\n*****\n\n\"Do you think we were too harsh this morning?\" Matteo asked Ricco quietly as they watched Cat sitting with the three other younger women of her circle out on the deck.\n\n\"No,\" Ricco shook his head. \"Part of the reason she ran away was that she blamed herself for what happened to Theresa and Vanessa. She was unwell physically, and mentally exhausted, she had a gunshot wound, and she had just seen Theresa die, or so she thought. How could she face us thinking she caused that devastation by sending Maria away from the jet? She was prepared to sacrifice herself, not the others. The fact that she lived when others didn't was the main reason she stayed away so long. She didn't feel she deserved it. She needed us to punish her in some way to be able to put that guilt aside and atone for it in some way. What we did this morning in front of people who genuinely care about her was nothing compared to what she had been doing to herself. Now we can all move on.\"\n\n\"I hope you're right,\" Matteo said, watching Mia cry openly as Cat spoke.\n\n\"What's up out there?\" Kalam asked, concerned that Mia was crying and frowning as he spoke.\n\n\"Not sure, but neither of us is brave enough to interrupt secret women's business, so we nominate you, oh great warrior,\" Matteo said with a perfectly straight face. \"Go see what's going on.\"\n\n\"I knew there'd be a catch to this job,\" Kalum grumbled and walked slowly out onto the deck.\n\nMatteo and Ricco watched as Kalum approached the small group of women and tried not to notice when the women all turned to look at them.\n\n\"We're going to have to talk to him about not throwing us to the she-wolves,\" Ricco chuckled, watching as Kalum backed away with his hands up in front of him and came back inside.\n\n\"Cat just told them what Theresa did and said on the plane,\" Kalum said in a low voice as he came back to join them. \"She is claiming Theresa is the hero of the story, as if she wasn't the one to turn the Martino's against the Suebi and start the chaos that got them out of there alive.\"\n\n\"We probably shouldn't have tried to protect them from the reality of what Vanessa did,\" Ricco nodded as Matteo contemplated why Cat would do that.\n\n\"I think they are planning a hostile take over of the women's circle. Cat sounds pretty determined, and she has those three firmly behind her now. Whatever she did while she was away, she seems to have come back stronger and more resolute about what she wants,\" Kalum shrugged.\n\nThose words caught at Matteo. Ricco had warned him not to go to her and plead his case, and he had done what his brother suggested, although it had been the most difficult thing he had done in his life to just let her stay in that retreat alone. Ricco had said she needed to make and accept the decision to come back and all it entailed on her own. She had been forced into one situation after another by their family, this time they needed to give her a choice and be confident enough that she would choose them and their love for her. She had chosen them, and it had changed her in ways he was only just beginning to see.",
        "\"You were right,\" Matteo grumbled to Ricco. \"We did the right thing letting her work it out on her own.\"\n\n\"You were right too,\" Ricco acknowledged. \"She needed a push. I sent Sava and Vedran to her yesterday to push her to make a choice. It was risky, but it paid off.\"\n\n\"So, when were you going to bother announcing that she's pregnant?\" Kalum merely raised an eyebrow as Lucca joined them.\n\n\"I expect most people know by now, it had to come out when Isaiah flew to Cat rather than Zac,\" Matteo said, surprised by the question.\n\n\"Still, a proper announcement calls for a celebration and possibly cigars, so I think while almost everyone is here you should just do it,\" Kalum grinned.\n\n\"I'm pretty sure Cat wants to wait for Papa and Theresa to come home before any official announcement,\" Matteo grinned. He really was looking forward to becoming a Papa himself now that the worst was over and he still had the woman he loved.\n\n*****\n\nHaving the conversation with her sisters-in-law about her epiphany regarding Theresa only strengthened Cat's resolve to step up and embrace the responsibility of being the Mother and help Matteo and Ricco to lead the family after the chaos that had occurred. She found out in that first week just what had occurred in each family and what the Tater and the Tables had done in their combined efforts to shut down the organisations of their enemies.\n\nIf there was one lesson she had to take away from everything that had happened it was that the Tater was a force to be reckoned with when crossed, and she was related to them in some way. She was related to Tater Royalty, which meant she was a force to be reckoned with as well, and the older women of this family needed to know that the time of pushing around the Mother was over and they would be dealing with her now.\n\nShe had spoken with Lisa about her modified diet and new liking for flavoured iced tea rather than coffee, and then she listened to Lisa's suggestions for smaller meals and protein, heavy drinks or shakes that would sustain her between the small meals. She and Arturo had sat together and made a schedule where she had no early appointments for the foreseeable future, and that she had either the Tuesday or the Thursday of each week off to dedicate to her painting. Lastly, she sat down with Hugh and Bradbury and outlined what she would and would not put up with, regardless of her husband's concerns.\n\n\"I know it was you who got to the plane first and carried me out of there once shots started being fired,\" Cat had said to Bradbury. \"Thank you, but you promised me you would look after Matteo and Ricco, and I know they ran into that danger too!\" she said in a chastising tone.\n\n\"Your safety is my priority, I went back for him once you were clear of the danger,\" Bradbury said in a conciliatory tone.\n\n\"I'd like the truth, please. Why do you look at me the way you do? It's more than just security, and it makes me uncomfortable. It's creepy,\" she said. \"Hugh does his job, and I don't get that same weird vibe from him. Why are you like that with me? And why, when I have asked, not just Matteo and Ricco, but their fathers as well to give me anyone else, you are you still here protecting me?\" Cat pulled no punches telling him exactly how she felt.\n\n\"I am uniquely trained,\" he said easily. \"I was in the SAS and toured both wars in the Middle East before being recruited to a covert organisation. I came from a background similar to yours and understood the ties you have to that community. In the beginning, I was surprised that you didn't have the hard edges that usually accompanied women with a background similar to yours. I'm not sure I believed the persona you showed the world. You confused me, and I kept looking for flaws in the woman you portrayed. You were so meek and mild, I was waiting for this version of you,\" Bradbury explained.\n\n\"This version of me?\" Cat tilted her head.\n\n\"The one who would talk to me directly about her discomfort rather than getting others to look after the problem for her,\" his lip twitched as if suppressing a rare smile.\n\n\"So, basically, you are way over qualified for this gig, and you still want to do it?\" she frowned.\n\n\"Kalum is one of my closest friends; he got me into the Battaglia training with him. The pay and conditions here are better than the government offers, and the people I care about are close by. I won't be on the table or part of a family, but this gig is pretty good. Besides, contrary to popular belief and the job description, I like you and the Vitali men who employed me. I don't want to see any of you harmed,\" this time a small smile did crease his lips.\n\n\"I can live with that, just stop being so creepy, or I will start calling you Lurch,\" she rolled her eyes. \"I have three meetings today, brunch with Sebastian and Zion, Lunch with Matteo, Lucca, Aria and Logan, and an afternoon high tea with the Vitali ladies. The first two will be fine, but if you could stay close for the afternoon tea, I may need a couple of the ladies escorted out,\" she drew a large breath. \"It's time for the tough girl from the Grove to make herself known to people who thought the meek and mild Cat would be a pushover,\" Cat informed them both.\n\n\"It would be my pleasure,\" Bradbury's eyes dances with mirth, but he refrained from smiling.\n\n\"We will be close at hand in Knox's office,\" Hugh assured her.\n\n\"Great. Well, I better get on with my day then, thank you, gentlemen,\" Cat said in a business-like way. Then she stopped and turned back to Bradbury. \"Sincerely, thank you for getting me off that jet before I saw anyone else die.\" She meant Vanessa, but she couldn't bring herself to say it, and she was haunted by the fact she had yelled at Vanessa to run and that may well have been what got her killed.\n\nCat checked her watch and realised she had little time before Zion and Sebastian would arrive, and went into her office to turn on her laptop and get ready. She'd never had more than her phone to access anything online before, and she had to admit that her laptop lay mostly dormant, collecting dust. With Theresa not coming home until at least the end of the month, however, and then being in rehabilitation for months after, she knew she had to start getting on top of all of the information for the wider family instead of just those closest to her.\n\nAs she navigated around the sites, she knew she wondered if she should talk to Raphael about updating her media profile now that she was Catriona Vitali instead of Cat Leone. She was still contemplating that as she glanced through her largely unused Facebook account when the men she had been waiting for were shown into her office.\n\nThe program Peri had sent her worked like one huge family tree, with all its branches interlocking with various members of the family and which families they had links to, right out to now tenuous links of distant relatives that still accessed some of the benefits associated with being part of the Vitali family. Because Zion and the tech's that worked for his family in the depository had done the data input over the last few months since the software arrived, Cat did not have to think much about that until a new family member needed to be added.\n\nWhat Cat was delighted with, however, was a daily alert that would let her know of upcoming birthdays, weddings, funerals and anniversaries, as well as other important celebrations, such as graduations that she, as the mother, needed to recognise. Whether she did that in person, with a call or sending gifts or flowers, was up to her, but with the software, as long as she checked her daily alerts, she shouldn't ever miss an important event, even if it was only important to one or two people.\n\n\"It will also be great for reminding yourself about family links before you meet with someone you know will be at an event, like the fact that second cousin Trudie's daughter is on an exchange program to Eton,\" he pointed at the screen.\n\n\"So, this becomes part of the morning ritual,\" she nodded at Arturo, who had sat in on the meeting because part of his job description might include updating the software with what Zion referred to as trivial events. Zion's interest lay in tracking the births, deaths, and marriages of each member not celebrating the events. By the time were getting ready to leave, Cat had a much better idea of the sheer size of the family beyond the enormous amount of people who attended the gathering, but rather than being stressed about how she would remember everything she felt confident that, with Arturo's help, she could manage it without missing any important events.\n\n\"Not working too hard, I hope,\" Matteo said from the doorway as Sebastian and Zion were getting to their feet.\n\n\"I'm all about making life easier for people, you know that,\" Sebastian grinned.\n\n\"In this case that's true, plus my guys already did most of the work on this one, and Cat can just reap the rewards,\" Zion added.\n\n\"It's a really cool program. I'll tell you about it over lunch. Are the others here yet?\" Cat asked, moving toward Matteo and leaning up to kiss him as his arms went around her.\n\n\"No, I snuck up early for a little canoodling, but it seems you're still busy,\" he scowled at Zion and Sebastian.\n\n\"We're leaving, no need to kick us out,\" Sebastian said. \"But I'll be back this afternoon, so if you wanted me to stay for lunch, it's no problem.\"\n\n\"I'm staying,\" Zion said eagerly. \"Matt invited me because he wants me to get Frankie to loosen the purse strings a bit more, and Frankie wants to know why.\"\n\n\"You can both stay, if you like, but I need a few minutes to canoodle with my wife,\" he picked Cat up and walked away, leaving the men to their own devices for a few minutes.\n\n\"Matt, put me down!\" Cat laughed as he carried her into their bedroom and kicked the door shut. \"We can't do this with guests out there!\"\n\n\"They aren't guests, they're family. And what is it you think we are going to do, exactly?\" he raised an eyebrow at her but held a smile on his face.\n\n\"Canoodle?\" she giggled.\n\n\"I'd do that in front of them,\" he chuckled and shrugged. \"I need to ask you something, so I can make arrangements for the weekend.\"\n\n\"Oh? A weekend of canoodling?\" she asked with the giggle still in her voice.\n\n\"Sure, but in addition to that,\" he said placing her on her feet. \"We've been invited to a small ceremony honouring Nathanael's bravery, now that he is able to enjoy it himself. Ally would really like you to come with Ricco and me. I think they will probably be honouring Ricco as well for the early alert, and, if you came, it would mean he would be more inclined to accept the invitation rather than decline, as he has the others that have invited him to thank him personally.\"\n\n\"Or, rather than making him do something he really doesn't want to, like attend a ceremony where the spotlight is on him, why don't we throw him a birthday party and invite all those people here to see him? You know, if we all go to Perth the other families that had their invitations declined might get upset,\" Cat suggested, having already thought about the problem. She knew the other mothers wanted to thank him personally, and that he had wanted to stay close to home rather than flying around the country. If he accepted one, he knew he would have to accept them all.\n\n\"That's a great idea,\" Matteo said. \"I'd still like to go and see Nathanael, he was hurt pretty badly, and I'd like you to come with me. D will be there, and Phil,\" he added hopefully.\n\n\"Or rather,\" she grinned at him. \"What if you went to Perth and Ricco and I stayed here and had a date night on Saturday night, and then, next weekend, you and I can have a date night, I'll even plan it as a surprise if you like?\" she said temptingly.\n\n\"If there is a date to be had, I will be planning it,\" Matteo grumbled. He was enjoying Cat's new-found confidence, even though he found he had to compromise far too much for his liking. This compromise, however, held a lot of appeal for him. \"It will be a date weekend, and you will not try to negotiate any minute of it,\" he laid out his terms. \"And we run this whole evil plan of yours past Ricco, he may already have other plans for this weekend.\"\n\n\"Yes, Sir,\" Cat gave him a cheeky grin. \"You're the boss, after all.\"\n\n\"I wish,\" he growled and pulled her against him. \"So, this meeting, am I going to be the boss after it is done, or will you have totally taken over my job?\" he asked in a teasing tone.\n\n\"I don't want your job,\" she wrinkled her nose. \"This meeting is about you doing your job properly, so I don't have to,\" she pulled a face. \"Speaking of which, we should go back out, or I am going to be late for a meeting I called.\"\n\n\"If you insist,\" Matteo groaned and bent his head to kiss her again.\n\n\"Gosh, this looks wonderful, I'm so sorry to keep you all waiting!\" Cat gushed and kissed the cheeks of Logan and Lucca as she went to take a seat at the table, allowing Matteo the chair at the head of the table.\n\n\"This is your meeting, your seat,\" Matteo pulled the head chair out for her and waited until she came back to where he stood.\n\n\"Thank you,\" she laughed awkwardly and sat down. \"And thank you all for coming. Please start,\" she indicated the tureens of thick and hearty hot soup and baskets of crusty bread that ran the length of the table. She waited until everyone had helped themselves and started to eat before she began to speak.\n\n\"I know the last time we spoke about the house on the hill I was a little emotional and that the construction work we talk about should be moving along now,\" she began, looking at Logan, who nodded. \"I guess the timeline is a little bit urgent,\" she added.\n\n\"Considering your husband owns a construction firm, and the other two, sitting with him over there, work in that company with him, it shouldn't be a problem,\" Zion said.\n\n\"I know, right?\" Cat grinned. \"I've already told them what I want, and the rest is up to their interpretation, as far as the construction goes. This is where I need to say some things you mightn't all want to hear, but if you can just try and understand that I am coming from a good place and listen to what I have to say before making a judgement,\" she swallowed deeply and took a breath.\n\n\"No need to be nervous with us, Cat,\" Lucca frowned at her with concern.\n\n\"Okay, here goes. I would like Aria to consult on the interiors, not just the decorating, but the full interior of each room. She was amazing when we moved in here, and helped make what was a showroom of an apartment into something more than that. She made it our home with just a few extra touches here and there, and I loved that. Even Vanessa complimented her at the time. Which brings me to the awkward thing I am about to say. I think you should all consider giving Vanessa's company to Aria to run,\" Cat blurted the last sentence in a rush. The men at the table looked at her speechlessly, and then turned their attention to Aria.\n\n\"Don't look at me; I didn't know she was going to suggest any of this!\" Aria looked back with wide eyes.\n\n\"Once the construction is done on the main house I'd like you to work with Logan on the interiors. I trust you, and I have been told by two very bossy men who think they can tell me how to live my life that I can't do everything myself,\" she rolled her eyes toward Matteo.\n\n\"Tell you how to live your life?\" Matteo choked on a mouthful of soup. \"I wish!\" he chuckled and rolled his eyes at her in return.\n\n\"Aria, you know everything there is to know about art and colour, and the company Vanessa left behind is fully equipped with whatever else you need, including staff. Just think about it, okay? You could build that company into a niche boutique that caters to creative types. Vanessa found and sponsored artists, I mean, that's how I came into this family originally; painting for Vanessa, and it would be such a shame to close it down or sell it off. You could honour her memory by keeping it and making it better than before; and you can use the interiors of our house as your showcase for your skills,\" Cat said and then sighed. \"Too soon?\" she asked. \"It's the deadline that made me want to ask now rather than waiting. I can't believe Vanessa would want her business to just disappear, and, Aria, you love this work, or at least you seemed to when I asked last time.\"\n\nEveryone ate, silently thinking about what Cat had said, when Aria finally cleared her throat and sat back as if she wanted to say something but was afraid. She seemed to take in each of her brothers and cousins in turn before coming to a decision.\n\n\"I want it,\" she said quietly. \"I want to work on the house. I want the company. I want to discover new artists and old ones that may need a gig or two. Cat's right, I am good at this stuff, but it was Nessa's thing long before I knew I wanted to do it, and then I couldn't, well, not really, because Matt already had Ness doing all his interiors,\" Aria admitted.\n\n\"Why didn't you ever tell Ness?\" Zion asked. \"I wouldn't have minded if you wanted to work with her instead of at the depository.\"\n\n\"Because I would have been the baby sister who worked for her rather than with her,\" Aria sighed. \"If I took it over now though, I wouldn't just be the little sister stepping into her shoes, I would be just adding her resources to mine and probably saving the family a lot of money having to set me up in my own business.\" She grinned at her brother.\n\n\"That's true, and the managers there could keep things running smoothly until you find your feet. All of those people are probably worried about losing their jobs once we get around to looking at that business,\" Zion said, considering that disposing of his sister's company would have fallen to Frankie and himself eventually.\n\n\"I handed over all responsibility for the house to Matt and Logan, but if I have any say at all the job is yours,\" Cat smiled, giving Matteo the opportunity to say no if he wanted to.\n\n\"I'm fine to work with Ari,\" Logan shrugged. \"If she used the company as a base to start with, then it won't be as big of a shock to people when she finally takes over. I mean, even if everyone agrees, it will take time to make it all legal, right?\"\n\n\"Probably should have had Ricco here for this conversation,\" Lucca said. \"He'd know the legal ins and outs of it all.\"\n\n\"She had this conversation with both Ricco and me in a hypothetical version without saying exactly what she had planned. I think Logan is right though, and if working with Aria takes some of the pressure off both Logan and Cat, and gets the house completed quicker, I am all for it,\" Matteo said easily. \"Vanessa isn't coming back, and chances are she would have left it to Aria anyway if she had made a will.\"\n\n\"Ricco is still the best one to advise you on how to handle it,\" Lucca said, and Zion nodded. \"Both legally and from the family point of view, but you could start working on the house immediately and make sure it's what you want. It's a big step owning your own business.\"\n\n\"He's on his way up,\" Matteo said, placing his phone back on the table.\n\n\"Great!\" Cat said. \"I'll let you all work out the logistics. I need to do a few things for my meeting this afternoon, so he can have my seat.\"\n\n\"Stay a little longer, please?\" Matteo reached out and touched her hand. He knew she was nervous about facing down Sonya and Angela, and the less time she had to dwell on it the better.\n\n*****\n\nRicco and Matteo had hung around long after the others had left the apartment after lunch. Cat needed to get things done and became anxious when every time she turned around one of them was there watching her and offering support. As much as she appreciated the sentiment, she needed to have a few moments alone to marshal her thoughts and go through the agenda she had for this meeting. She was about to seize control of this family, and she knew it wasn't going to be pretty, and she could quite possibly lose the goodwill of a few people in the process.",
        "\"You wanted to see us?\" Bradbury spoke as he and Hugh appeared at the door of her office.\n\n\"Thank goodness, yes!\" Cat sighed. \"Can you help my husbands find their own office and then stand guard and not let them back in here, please, I have so much to do, and they are driving me crazy!\"\n\n\"Of course, Mrs. Vitali,\" Bradbury said with a smirk. \"This way, gentlemen.\"\n\n\"I think you have forgotten who employs you,\" Matteo grumbled, but walked toward the door anyway.\n\n\"Perhaps you have forgotten why you employed me; I do what she says, except in cases of emergency when her safety comes first. Is there an emergency I don't know about?\" Bradbury said in an equally low voice, but his eyes twinkled.\n\n\"She's out of control,\" Matteo grumbled to Ricco, who laughed.\n\n\"We have ways of fixing that. Let's go to your office and discuss some plans I've been working on!\" Ricco said loud enough for Cat to hear, and turned his head to grin at her malevolently.\n\n\"Talk to each other about the weekend too,\" she said as they were leaving, sounding unconcerned about them planning some sort of pleasurable punishment for her because she kicked them out of her office. \"In your offices downstairs, preferably,\" she called after them with a small nervous laugh in her voice.\n\nShe walked from her office to her bedroom and changed quickly without the distraction of her husbands. Then, looking around her office, she drew a deep breath. She could do this, for them and for Theresa, she could do this. She was a Princess. She wasn't the uneducated, poverty-stricken girl from Acacia Grove anymore, she was Princess Catriona Vitali, and two of the most powerful men in the country loved her.\n\nShe wore a plum coloured dress that had a depth of colour that made it seem more of a deep red than purple, expecting that Sonya would wear the red of the Vitali. It was a simple sheath dress, but had been made for her, and it flattered her figure and added to her height and stature when paired with the matching shoes. Her jewellery was simple, but gold, and she knew expensive, and her make-up was light and barely there. She had left her hair down, but pulled the front back away from her face. She wanted each of these women to have no illusions that she meant business this time.\n\nShe had a room set up for Maryanne's nanny and son to be comfortable while the meeting took place, after denying the request to have the meeting at her house again to save travelling with the baby. Matteo was right, she had two nannies to do everything, aside of breastfeeding the child for her, it was not going to inconvenience her much to bring what she needed to a meeting, and it would do her good to get out of that house for a while. Or so Cat thought, she pursed her lips and wondered if she was too hard on Maryanne, before deciding it was too late now to worry about it.\n\n\"They're starting to arrive,\" Aria said softly as she entered Cat's bedroom. \"Wow, I've never been in here before! I wondered how you all fit in the same bed, but that explains it,\" she indicated the oversized custom bed Matteo had built for them. Cat laughed and blushed. No matter how casually her relationship with both Mateo and Ricco was talked about, it still seemed so bizarre to her.\n\n\"Aria, thank you for being honest over lunch, I really thought I had made a mistake when no one said anything,\" Cat admitted.\n\n\"Hold that thought until after this meeting,\" Aria sighed. \"I've got some things to say too, and you aren't going to like all of them. Come on, it's time to face the music.\"\n\n\"Aria, you can't say something like that and just drop the conversation!\" Cat gasped.\n\n\"Sure I can, you do it all the time. You dropped that bomb on me today, as a matter of fact, so fair's fair,\" Aria grinned, showing there was nothing malicious in her thoughts.\n\n\"Great, something else to stress over! Let's go then,\" she sighed dramatically, but she knew she had everything in place that she needed to make this transition of leadership to her as smooth as possible without any melodramatics from anyone aside of her. She followed Aria out into the living room, marvelling at what a wonderful job Lisa had done in setting it up to be cosy, despite the number of chairs required.\n\nCat chatted, encouraging everyone to make themselves at home as tiered trays of treats were brought in and placed on small end tables and the coffee tables in the space. Tea and coffee, as well as iced teas, were served to order, and once everyone was settled and chatting quietly, Cat finally spoke to the group, welcoming them all to her home.\n\n\"I have a few guests coming to observe my little opening speech to kick things off, I know it is highly unusual, but once you hear what I have to say I am sure you will understand why I have invited them,\" Cat smiled politely and stood. \"I'll just be a moment.\"\n\n\"That won't be necessary!\" Sonya said in a commanding voice, stopping Cat from moving. \"We have our own agenda items for this afternoon. We didn't want to bother you with the little details, and there certainly isn't any need for a speech. So, the guests could maybe come to visit you another time. I'm sure they won't mind changing their plans for us,\" she said dismissively.\n\n\"How lovely of you, Sonya, but as I have taken these men from their busy days I think we at least owe them the courtesy of a cup of coffee and a piece of cake, don't you?\" Cat said in a sickly-sweet tone to match Sonya's.\n\n\"Hello, Mother, I have been looking forward to hearing Cat's speech, so I think I'll stay,\" Sebastian said, walking into the room, unhappy about the way his mother had just talked to Cat and understanding why she was so nervous about this meeting. His mother was a formidable woman, and it didn't surprise him that she would try to dominate proceedings, just as she dominated everything else in her life, except, perhaps, his father.\n\nHe was followed in by Thomas, Brady, Ryan and Isaiah, who all greeted their mothers and cousins with kisses to the cheek before taking seats away from the circle, but close enough to listen and observe.\n\nCat launched into her speech about Theresa, her acceptance and love, her becoming like a mother to Cat, who had never had that in her life, and the events on the jet that led to her shooting and Vanessa's death.\n\n\"I invited these men to observe my speech in case any of you doubted my version of events. They know the truth, and, of course, more of the story after I was taken from the jet by Bradbury. So, if you have any questions, now is the time to ask so I can let them get back to work, then we can do what we do best and plan the best way forward from here to support each other and the family,\" She laughed lightly and waved a hand in their direction. \"Gentlemen, anything you'd like to say to add to my story?\"\n\n\"Sure,\" Thomas shrugged, coming to his feet to address the circle of women. \"Why would you think anyone would doubt your version of events?\" He scanned the circle. \"You have no reason to lie, you are the Mother of this family now, you don't have to explain yourself to anyone, but I'll fill in the blanks for everyone, and Sebastian can correct me if I am wrong.\"\n\n\"With glee,\" Sebastian chuckled.\n\n\"What Cat failed to mention was that she was shot as well trying to save both Theresa and Vanessa. Even as she was carried from the plane, she was screaming at Vanessa to run and save herself. What didn't come across in that story is that she had gone there as a sacrificial lamb, and that she was prepared to accept that fate for the good of the family, just as Theresa was in the end,\" Thomas said, placing a hand on Cat's shoulder. \"If we are here to talk of bravery, then you all need to acknowledge hers as well as Theresa's.\"\n\n\"What Cat also failed to tell you was how sick she had been in the week prior, and that she collapsed from mental and physical exhaustion after she saved the people she could, including Lydia and another mother,\" Sebastian added. \"Did we miss anything?\" He asked Brady and Ryan.\n\n\"She has Tater royal blood, she's a long-lost princess or something,\" Ryan said, thinking about all he knew. \"She chose to stay here though, rather than take her place among them.\"\n\n\"I doubt Theresa will take up the mantle again. Her injuries are going to require a lot of rehabilitation,\" Isaiah said.\n\n\"I don't have anything to add,\" Brady said. \"I will point out, however, that we all already think of Cat as the mother. If she truly was worried that you wouldn't believe her version of events, then shame on you all,\" Brady shook his head at Anna, who said nothing and took the silent chiding from her son for not being more supportive of Cat.\n\n\"Thank you, gentlemen, we are sorry to have interrupted your day with women's business,\" Sonya said, dismissing Brady's concerns and hopefully the men from the circle. \"Of course, we believe her. Why wouldn't we?\"\n\n\"Why, indeed?\" Brady asked, frowning.\n\n\"It's a hard story to tell,and even harder to hear for some people,\" Cat said. \"Thank you for coming and being so supportive,\" Cat said, embracing them all and kissing their cheeks. \"I just needed you to agree that Theresa was heroic in the face of evil men when I told the ladies. She was so quiet and unassuming here amongst us that it would be difficult for anyone to believe. I guess it just shows that it's the quiet ones we have to watch out for,\" she gave a small laugh. \"You don't need to hear about balls and charity events and all that boring stuff,\" Cat said. \"Oh, Thomas, Lisa has little goodie baskets for Zion and Ricco. Could you drop them downstairs at the offices for me?\"\n\n\"If they make it that far,\" Thomas chuckled.\n\n\"There are goodie baskets for each of you too, if you want them,\" she grinned as if talking to little boys instead of grown men.\n\n\"I'm going over to Zion's place anyway, so I'll take his,\" Brady offered. The men jostled each other as they headed for the kitchen and Lisa's prised treats.\n\n\"Now, Ladies,\" Cat said quietly. \"Starting today, there are going to be some changes to the way we do things as a group. It is a new era, and a new generation is coming into power, and you can either get off the bus and enjoy the scenic tour or buckle up and hang on for the ride.\" Cat's voice held steely determination as she looked at Sonya, daring her to make her challenge.\n\n\"If I may,\" Kari cut into the tension before things got out of hand. \"If you challenge Cat today,\" her voice became steely, \"You will be challenging the current leaders of our family, including the Chair and the Oracle. And while Cat wouldn't be happy for them to interfere in women's business, I have no such compunction. If you challenge their authority, I will tell them that you dismissed the Mother of the table in favour of your own agenda. Let's not forget who put them and Cat in the positions they hold. Do you believe Salvatore would be happy that you went against his wishes? Or Cosimo? Or any of your husbands? Think carefully, ladies, before you speak today.\"\n\n\"So, you would threaten us to remain silent and let Catriona destroy all of our hard work?\" Sonya glared at Kari.\n\n\"Not at all, I am sure there will be a healthy and sometimes heated debate during this meeting, but I know that Cat will listen to all the points of view instead of trying to impose her own on others. Who here could say that about you?\" Kari said, not backing down.\n\n\"The matter is simple, ladies,\" Ruth stood and went to stand with her daughter-in-law. \"It is time for us to be sharing our knowledge and experience with the new generation, working with them and encouraging the things they want to do to lead our family forward. It might be a little sooner than we reckoned, but we will always have a place here, as our mothers did before us.\" She guided Kari back to her seat, concerned that Sonya may lash out at her.\n\n\"This is ridiculous, you all know it! She is an uneducated daughter of a whore who didn't even know who the father was! She cannot lead our family!\" Sonya spat disgustedly. \"I won't stand for it!\"\n\n\"Then you will stand alone,\" Angela said sadly. \"Did you not hear our sons speak? Did you not see the loyalty and love she already inspires in the next generation of our table?\"\n\n\"It's okay, Angela,\" Cat spoke softly. \"Most of what she said was true, except the part about my father. You know Aria didn't like me either when we first met because of my lack of education, but she got to know me and realised that it wasn't because I was stupid, I just didn't have the same opportunities as she did growing up. But, as I said, I learn quickly, and, as I am the one with the most recent history lesson, I will remind you of something... The original twelve men who came together to build the tables, as we know them today, were each the son of a nobleman and a whore. Everybody in this room is descended from a whore. So if you think you have insulted me, Sonya, think again.\"\n\n\"That's hardly the point here,\" Sonya said condescendingly. \"The point is that you have neither the pedigree nor the understanding of what we do to be able to lead this group.\"\n\n\"Again, you are probably right, but I have a wealth of experience to guide me, because I would like to use my new position to help girls like me, so they aren't judged so harshly because of pasts that weren't of their own making. It wasn't my fault that my education was lacking, or what my mother's occupation was, and it's unfair to judge me based on that alone,\" Cat explained part of her own agenda.\n\n\"You can take the whore out of the slum, but she is still a whore! Just look at the Kept we train!\" Sonya sneered, not hiding what she really thought of Cat and subtly calling her a whore.\n\n\"I think, perhaps, you should go, Sonya, because you aren't going to like anything else I have to say today, if that is truly how you feel,\" Cat sighed.\n\n\"I will not!\" Sonya hissed. \"You have no right to ask me to leave!\"\n\n\"Actually, I do, even though I would rather not, but I don't want to argue with you, Sonya. I truly hope that one day we can work together, but today is not that day,\" Cat remained calm in the face of Sonya's anger. \"Oh, good, you're here,\" Cat turned and spoke softly to Bradbury. \"Could you please escort Mrs. Sonya Vitali from the penthouse?\"\n\n\"Of course, Mrs. Vitali,\" Bradbury said, and moved toward Sonya, who looked at him as if he had gone mad thinking she could be thrown out of this meeting. \"Your son, Sebastian, is still here and waiting in Matteo's office, he would like to see you before you leave,\" Bradbury said when he was close enough to say the words without the whole room hearing. \"It would be better if you came with me now.\"\n\n\"This isn't over!\" Sonya spat. \"I deserve more respect than this! I have been leading this group for years without anyone challenging me! You have no idea who you are messing with, and there will be consequences!\"\n\n\"Does anyone else feel the same way?\" Cat asked. \"There won't be any hard feelings if you choose to leave today, though your experience will be missed greatly, as will Sonya's.\"\n\n\"I'd be interested to know how you will help girls from underprivileged backgrounds like your own,\" Anna said, sitting back more firmly in her chair. \"Wouldn't you, Angela?\" she asked the woman who had been Sonya's lacky for so long.\n\n\"I think I would,\" Angela nodded and picked up her teacup. \"But first I would like to know what we will be doing to help Theresa once she returns home to us.\" The story of Theresa's bravery in the face of her own imminent death had shaken Angela to her core and made her brave enough to stand up to Sonya for the first time since Maria's death.\n\n\"My thoughts exactly,\" Cat said with a wide smile for the woman.\n\n*****\n\n\"She gave you a fucking history lesson from our own history!\" Salvatore raged at his wife. \"And you fucking called her a whore!\" He was beyond angry. \"You implied the mother of our table was no better than a Kept!\"\n\n\"You have no business watching that meeting! Men are not allowed to interfere with what goes on in the Women's Circle!\" Sonya seethed in return, as if the other men were not there witnessing the argument.\n\n\"Not allowed?\" It was Ricco who raised his voice, coming to his feet. \"Show me the law that prohibits us from any woman's business! Did you learn nothing from what happened to Carmen Donati? She thought she knew better than everyone else too! We have every right to view any meeting involving our family! Are you being influenced by the Suebi too? Because I can think of no other reason for your total and absolute disregard of all our laws and traditions!\"\n\nRicco had called all of the older men to this meeting, and despite an unspoken tradition of not interfering in women's business they had sat together to watch the first meeting of the Women's Circle that Catriona would Chair. Ricco, Matteo, and the five men, including Sebastian, who had been invited to the meeting for Cat's opening speech, sat with them.\n\n\"Think carefully before opening your mouth, woman!\" Salvatore warned his wife.\n\n\"If everyone could just sit down,\" Matteo said calmly. It was rare to see Ricco so angry, and gave him a rare chance to play good cop. \"I understand finding us all here, and watching, is probably a bit of a shock, Zia,\" Matteo said, getting a spare chair and placing it at the table beside his own chair. \"Please, come and sit down and I will explain why we are here.\"\n\n\"Thank you, Matteo, at least someone has remembered their manners,\" Sonya said, also calming down.\n\n\"You understand that every man in this room acknowledges that I am the Chair of the Vitali now. Roberto is dying, Stefano is on borrowed time; and, now, whether we want to admit it or not, Theresa will never be the same and has enough to deal with without having to lead the Women's Circle, so Catriona must step up, just as I have and Ricco has. Just as your sons have too,\" Matteo began. \"It certainly wouldn't help to keep the table unified if Frankie decided, that because he had always led in Roberto's absence in the past, that he should lead for me instead of supporting me and giving me the wisdom of his advice. Can you see that?\"\n\n\"Yes, but that is different, you grew up in the family with all our laws and traditions,\" Sonya said as if talking to a small child who didn't understand the bigger situation.\n\n\"You know that Cat has had to prove herself to Stefano and Roberto, to the thirteenth table and to each man on our table, and none of them made it easy for her. Still, she has proven time and time again that she is more than able to take her place at my side. I wouldn't have been given the Chair had she not proven herself to everyone who asked it of her. You are here by birthright, you have never had to prove your love of or loyalty to our family, and judging by your actions today you have failed to prove either. Can you see that and why these men are angry with you?\" Matteo asked.\n\nSonya mulled over his words and said nothing, as she considered the type of trial Catriona would have had to go through was not some simple matter as she had done as a teenager. If the Thirteenth had demanded it, she would have had to undergo a complete trial at the hands of the Battaglia masters.\n\n\"You have tossed aside not only their judgement but the judgement of the Thirteenth Table, and insulted them by doing so. Cat has earned the right to lead, not only the Women's Circle, but this family, because she's been prepared to sacrifice so much for this family, including her own life when confronted by armed men in the Kimberly. If not for her and Ricco, far more people would have died on that day, and I doubt you will find one person amongst any of the Tables leaders who believe she is anything but the best of us,\" Matteo let his voice trail off. \"Would you have us and them believe that you are better? More capable? More loyal? When the first time you are asked to be loyal to the decisions made by the table you ignore them to further your own agenda? You see how this looks, don't you?\"",
        "\"Yes,\" Sonya admitted without further argument. She turned to the rest of the table who were listening quietly to Matteo's words, just as she had been, and then turned back to him. \"But you don't understand, she wants to change everything, and we do so much for people who would suffer without our patronage.\"\n\n\"Does she really, or did she just want to expand on what you already do?\" Matteo asked. \"You didn't even give her a chance to explain her thoughts on what she could bring to the table and what she wanted to do,\" he said sadly. \"She gave you several chances to back down and join the conversation, more than I would have given Frankie or Salvatore if they tried to take over for me without even letting me speak. Even now they probably don't agree with how I am handling this situation, but they are giving me a chance, and I will give them the chance to have their say when I'm done, now that everyone is calm and in control of their emotions. Are you ready for that?\"\n\n\"No. You can't see what she's doing, she will destroy everything I have worked towards,\" there was a hint of accusation in Sonya's voice. \"You would side with her, regardless of what I said, so it doesn't matter now anyway,\" she said bitterly, but straightened her posture and turned in her seat to face the judgement of the men gathered there, glad it was not the whole table she would be humiliated in front of.\n\n\"There are no sides here,\" Paolo said stiffly. He rarely wasted his breath on arguing, but both Kari and Ruth had come to see him about Sonya's demands in the last two weeks. \"There are the laws and traditions that bind our family to the other tables; and you have shown disregard for all of them, including our own. It's that simple. I will bow to your husband's decision here, but only because I believe his punishment will be far worse than any Matteo or Ricco would insist upon.\" Paolo rose from the table. \"For now, I am going to plan a reward for my daughter-in-law and wife who made me very proud today.\"\n\nOne by one the other men spoke similarly and left the room until only Ricco and Matteo were left with Sonya and her husband and son.\n\n\"You will be going to your family in Canberra. I will send Marcus the transcript of the women's Circle meeting, along with this one, as well as my recommendations. You can plead your case to Marcus and Marina; both know Catriona well, probably better than most of the members of this table. I will let them judge you for breaking the laws of the tables. Respect for the mother, above all else, Sonya,\" Salvatore said in a cold voice. \"I imagine the punishment for breaking that law will be harsh.\"\n\n*****\n\n\"I feel like I have been eating all day,\" Cat said as she entered the kitchen after the last of the women had gone. \"Do you think I could have something small and light for dinner rather than what you are planning for the men?\" she asked.\n\n\"They called and told me not to cook tonight,\" Lisa said softly. \"Would you like me to prepare you something anyway?\"\n\n\"No, please, have the evening off, you deserve it!\" Cat said enthusiastically. \"You were amazing today with all the meetings and food! I'm going to shower and get into something comfy, I made them both promise we could stay home tonight,\" Cat grinned and slipped her shoes off with a happy sigh. Picking them up, she padded back into the living room on her way to the bedroom.\n\n\"Hard day?\" Ricco asked.\n\n\"No, just long and tiring,\" she said, turning to look at him as Matteo followed him into the room. \"Oh my God, seriously? You bought me junk food!\"\n\n\"Told you,\" Ricco grinned. \"I know the way to our girl's heart.\"\n\n\"I really wasn't hungry, but now I'm ravenous, gimme, gimme!\" Cat laughed and held out her hand toward the thick shake Matteo held in a cardboard cup holder.\n\nThe trio sat on the floor in the living room using the coffee table as a picnic table and relaxed as they ate. Cat considered the men she loved. Something was amiss, not to mention the fact that Matteo hated junk food and never encouraged her to eat it. It was her secret indulgence with Ricco or Lucca on occasion, and the longer the meal went on, the more nervous she got.\n\n\"Can one of you just tell me what's going on before I start thinking the worst?\" she finally said.\n\n\"We watched the meeting you had this afternoon, well, some of it anyway,\" Matteo admitted.\n\n\"I would have told you what happened after dinner anyway,\" Cat said. \"I don't think Sonya is going to be very happy tonight. I half expect you will get a call from Uncle Sal,\" she said. \"If you watched, then you'll know why I did what I did and that I tried to avoid it coming down to that.\"\n\n\"Sal saw it too,\" Ricco explained. \"Not the whole table, but the older members and the men you invited to your little opening speech about Theresa. You know it's quite different reading the report to hearing your account. Not the content so much, but the emotion of the moment.\"\n\n\"I see. Well, I did try to make it work, and I'm sorry if I did the wrong thing, but I had to draw a line in the sand at that first meeting or there would have always been a power struggle. This way we get a lot more accomplished, and we can do it democratically,\" she explained.\n\n\"You're not mad that we spied on your meeting?\" Matteo asked, astonished by her easy acceptance of the fact.\n\n\"Why would I care? I'd tell you what happened anyway, we do plan to spend a lot of money next year on creating a foundation. I'm guessing you or Zee, or someone, would have to approve what we decided on anyway. I'm sure you have much better things to do than to watch my meetings every time we have them, but I get it today. You were worried about me because I was nervous, and I haven't always handled my nerves very well,\" she gave him a lop-sided smile. \"So, what did you think?\"\n\nMatteo was left speechless. He had expected that she would be mad that they had invaded her privacy by spying on her, or not trusted her to handle whatever happened in the meeting on her own. He found he hadn't been prepared at all for her easy acceptance and the question she posed.\n\n\"I think what you told them about Theresa needed to be said and heard, not just by the women, but by the men who were watching,\" Ricco said into the silence. \"I don't think she was ever given enough credit for the shit we put her through growing up and still loving Maria's children like a mother should, like her own.\"\n\n\"She really does love you,\" Cat smiled. \"I'd say I was jealous, but she and I have a pretty tight bond since the wedding ourselves. I wish I had that growing up, but it is wonderful to have her in my life now. I've been considering going to therapy to properly deal with my mother before this one comes along. I've been having bad dreams, and I think I might need some unbiased help,\" she admitted.\n\n\"You've been having bad dreams?\" Ricco asked.\n\n\"Not nightmares, just unpleasant things that I don't really want to talk to about or remember much about, except the feelings they gave me,\" she explained.\n\n\"Whatever you need,\" Matteo took her hand. \"I'll talk to Paolo; he'll know someone who understands our family dynamics.\"\n\n\"Heh,\" Ricco gave a short, derisive laugh, making them both look at him. \"I can't believe you gave Sonya a history lesson today,\" he chuckled his explanation. \"I think that shocked everyone who watched with us.\"\n\n\"Sonya didn't think it was very relevant,\" Cat said sadly.\n\n\"Which is why Sal is sending her back to school, with the Battaglia, for a little while,\" Ricco said.\n\n\"No!\" Cat exclaimed. \"Now she really will hate me, and cause problems when she comes back,\" Cat sagged as if deflated.\n\n\"I highly doubt that,\" Matteo chuckled. \"When you live in a world of privilege it's easy to forget that not everyone has the same opportunities in life. She will, no doubt, get more than a gentle reminder of what it means to be charitable in real actions, not sipping champagne at charity events. She won't be given a trial like yours, Kitten.\" Matteo reached out and pulled her to him, kissing her forehead. \"I don't think she would succeed if she were.\"\n\n\"You were amazing today, not only how you dealt with Sonya, but how you inspired the other ladies. I don't think any of us has ever heard Kari speak out before. I have no doubt she is being spoilt tonight by her husband and father-in-law for speaking out the way she did in your defence,\" Ricco acknowledged. \"What happens to Sonya has nothing to do with you; you didn't know we were watching.\"\n\n\"I suppose,\" Cat said, unconvinced and wondering if the other women would blame her or believe she hadn't asked Mateo and Ricco to intervene on her behalf because she couldn't do it on her own.\n\n\"I know I shouldn't go to bed with such a full tummy, but I am exhausted, it's been a long day,\" Cat said, getting to her feet and beginning to clean up the debris of the dinner.\n\n\"We'll help,\" Ricco said quickly, tossing a lascivious look at his brother. He got to his feet and helped with the clean up, following Cat into the kitchen and searching the fridge for a sweet treat while he was there.\n\n\"You really should try to eat better,\" Matteo grumbled at him as he followed them and saw Ricco pawing through the refrigerator.\n\n\"I can't help it if I have a high metabolism that craves sugar and fat,\" Ricco chuckled.\n\n\"Don't look at me,\" Cat said, squashing the last of the wrappers from the burgers into the bin, \"I'm pregnant, I can't help my cravings,\" she grinned.\n\n\"I give up,\" Matteo groaned. \"Let's go to bed.\" Matteo followed Cat into the bedroom and, grabbing her, pulled her back against his body with one arm wrapped around her waist. His hand went to fist her hair and turn her head so he could kiss her. It was an uncharacteristically aggressive move by him, and Cat stiffened in his hold before melting into his kiss and squirmed her ass back against his cock, which she found to be hard already.\n\nRicco pressed up against her front and lowered his lips to her exposed neck, his hands moving around her to slowly draw the zip of her dress down, his hand sliding between her body and that of Matteo. He continued to kiss her neck and shoulders as he pushed the dress down to her hips exposing a corset, to his surprise. Her breasts barely covered and bulging from the top edge. He scooped his hands below the edge of it, drawing them out to sit up on the edge, her nipples pointing out and hard with her arousal. It held them perfectly for him as his mouth descended to lick and bite the twin peaks.\n\nCat purred loudly into the kiss and felt Matteo's hand move to push her dress the rest of the way over her hips to drop to the floor, capturing her ankles and shoes in its deep red material. She gasped as she felt his fingers tug aside the flimsy satin of her thong and caress the folds of her pussy. She gasped as he found her clit and rubbed hard, then lifted the leg on the other side up to his hand to wrap around Ricco's hips, effectively sandwiching herself between the two hot hard bodies.\n\n\"Fuck!\" Matteo groaned in awe of how wet and willing she always was for them, no matter what they demanded of her. He stepped back, his eyes taking in the corset, garters and stockings above the very high heels. She was his every fantasy, and watching her arch in Ricco's arms only made him hotter for her. He wanted her chained to the ceiling of the playroom dressed just the way she was. He quickly pulled off his shirt and kicked off his pants, then he approached them again, resuming the position he had and fisting her hair to pull her back against him and away from Ricco.\n\n\"Playroom!\" he murmured hotly, and turned Cat, moving her before him, keeping his hard cock pressed against the small of her back.\n\nRicco followed him, divesting himself of his clothes as he walked, pleased that Matteo seemed to be unusually aggressive tonight. Each of them had been undergoing transformations since the events surrounding the shootout at the airport, and he was interested to see how far Matteo would go this time. He sat back and watched as Matteo wrapped soft leather cuffs around her wrists and connected them to the ceiling chains, tightening the tension until her body stretched and she danced on the high heels she wore. She was beautiful, by any man's standards, and while he was partial to the rope, he couldn't deny how sexy she looked.\n\n\"Spreader!\" Matteo said in a husky voice, and Ricco happily went to gather the equipment he asked for.\n\n\"It's your show, brother!\" Ricco said heatedly, handing him the spreader bar. Then he kissed Cat, fondling her breasts as Matteo positioned the spreader and secured it to her ankles before lowering the chain just enough to take some of the weight from her arms. \"These are so tender, it's hard not to enjoy playing with them,\" he murmured as she whimpered into his kiss.\n\n\"Let me tell you about Cat's day today,\" Matteo said, handing Ricco a soft flogger as he held a leather stinger. \"She was magnificent as she wove her spells on our poor unsuspecting family,\" he flicked his wrist, and the stinger met her ass, leaving a red welt in its wake and a cry in the air, making him smile.\n\nCat and Ricco both listened as he recounted her first meeting of the day with Bradbury and Hugh, questioning them on the backgrounds and motivation for remaining with her after the drama of the shootings. Then her meeting with Sebastian and Zion, where all the work had already been done for her, and she delegated the responsibility of the daily report to Arturo. He would then keep her informed of any event she needed to plan for. His version was very factual, but Cat could feel the stinger land at relevant moments where she had asserted herself and her position.\n\n\"All this before lunch,\" the stinger landed again on her ass as both Ricco and Matteo circled her, making strokes of both the soft flogger and the stinger as they went. \"I got both reports as I came up to meet her for lunch. Did you hear what she did at lunch?\" Matteo asked, his voice low and heated.\n\n\"She suggested that Aria take over Vanessa's company and do the interiors of the house on the hill?\" Ricco asked.\n\n\"There was no suggestion,\" Matteo gave a derisive laugh. \"She knows the men of this family are powerless to say no to her, and I am starting to think that she is beginning to understand the power of being the Mother.\" He flicked his wrist in rapid succession, marking the pale flesh above her nipples with two bright welts.\n\nCat was confused, this is what they had been asking her to do all along, embrace the position and power that came with it. She had, today, in many ways, she had gone to each meeting confident in what she wanted and how to go about getting it. She had hoped not to have to ask Sonya to leave, and was ecstatic that Angela had not backed Sonya up in anything she was saying and didn't have to remove her as well.\n\n\"I've had a freaking hard-on since midday watching her strut around in that dress and heels on a power trip!\" Matteo growled. \"Be thankful you were spared having to attend the meeting, or we could have been in this room much sooner than this! She was so fucking hot, but...\" the stinger landed again over her hip. \"Perhaps we need to revisit the rules of telling us what's going on. A hypothetical conversation is not the same as seeing how we felt about it or giving us warning of what you planned.\"\n\nCat gasped, she understood finally why he was a little more aggressive than usual. They were both dominant men, and she loved them like that in here, and she knew she had to be more respectful of the alpha male culture of this family out in the real world. It was a balancing act, and one she would have to get used to. However, if this was her punishment she wasn't so sure she wanted to. She could feel the heat and pain of the welts, along with the pleasure of their caresses and touches and softer strokes of the flogger as the two men circled her. Her breath was coming in short pants now, and she whimpered softly as they continued to tease and torment her overwrought body.\n\n\"So, fucking hot!\" Matteo growled and pressed up against her, kissing her, leaving Ricco to meld against her back and kiss her neck as he finally lowered the chain holding her arms. Seeing her dressed like she was, knowing this was what she wore underneath the tailored dress, had just about undone him when he saw her on her power trip. The meek and mild girl went, and the confident woman expecting people to do what she suggested was magnificent, and all he wanted to do was dominate her like he had always fought to dominate Nik so long ago.\n\nThe softer unsure Cat, the strong but submissive girl from the Grove he wanted to love and care for and protect from the world. But the confident, sexy, powerful woman she had been today, especially with Sonya and the other women, fed his libido like nothing else and reminded him of the feisty, confident girl he had first met in Brisbane. He hadn't ever admitted, even to himself until today, that his attraction to Nik lay the victory of dominating her. It had been heady to win those battles of will, and today, as he had watched his wife, all he had wanted to do was take her and fuck her hard, reminding her who she belonged to and who she promised to love, honour and obey. He loved her beyond reason, and she was his for all time.\n\nThe two men released her from her bonds and carried her to the fucking chair in the corner, an item of furniture they hadn't used before. Ricco sat on the edge, his feet against the front poles to anchor himself. Matteo tossed him the lube, and he nodded his understanding. Matteo then slid Cat down his body and offered her his cock, pushing it into her mouth as soon as she parted her lips.\n\nRicco raised her hips up and back by cupping her pussy and stroked her as two lubed fingers of his other hand began preparing her ass for him. She was so hot, his fingers working her pussy and ass as she sucked Matteo. She cried out her first climax around his cock, making him groan deeply and pulled from her mouth, leaving long strands of spittle between her mouth and cock as he looked down at her in needful lust.\n\nWith his hands wrapping around her slim waist, Matteo picked her up and held her over Ricco's cock as his brother fisted it toward the glistening dark star of her ass. He watched in wrapped fascination as the intense mix of painful pleasure washed over her features until she held him entirely. He held her for balance as Ricco stroked in an out, groaning deeply before he lay her back on his body, her back to his chest, and stepped forward to take her.\n\n\"Look at me!\" he growled, and when she opened her eyes and focused on him, he drove into her hard and deep, the pure pleasure of the moment radiating deep within him as he began to fuck her. He held her waist, lifting her partially with each thrust so she fucked both of them in the strange fucking chair. The pleasure fuelled moans, groans, and whimpers filled the large room until Cat came again, crying out, her body shuddering with the force of it and her muscles clamping around the two intruders in her body. \"Look at me!\" Matteo commanded again as her eyes began to shut again, and obediently they flickered open but remained unfocused as she floated on a high so big she barely remained conscious.\n\nMatteo dropped his hand to tease her clit and keep her orgasm from fading as he and Ricco raced toward their own climax. Ricco groaned and bucked below them as he came first, and finally unable to stand the pulsing pressure of his brother's cock against his, Matteo gave up the fight to hold his climax back and came with a loud roar into the room.\n\nIt took long minutes for anyone to move, and the brothers slowly regained their feet, with Mateo carrying Cat back to the bedroom to undress her properly and care for her marked body.\n\n\"Want to tell me what that was about?\" Ricco murmured sleepily as they climbed into bed beside the woman they loved. \"I hope it's not a onetime only appearance of Alpha Matt,\" he chuckled.",
        "\"Yeah, tomorrow,\" Matteo said, rolling to his side to spoon with Cat. He held her close, nuzzling her neck, knowing he was the luckiest man alive.\n\n*****\n\nEpilogue:\n\nCat smiled as she passed her six-month-old daughter, Tessa, to the nanny and left the makeshift nursery. Every fear she had ever had about being a mother had disappeared the moment she looked down into her daughter's face after giving birth to her. She was totally and utterly devoted to her daughter and the men she loved. She wanted more than anything to have more children, a huge family, if she could, and grinned as she saw Mateo and Ricco waiting for her in the living room of the townhouse they had been given for the weekend celebrations.\n\nIt was time to honour those that had done extraordinary things the year before when all twelve of the families had been attacked simultaneously, and there were many stories of bravery in the face of danger. The afternoon ceremony would be followed by dinner and a ball to celebrate a new era of cooperation and understanding between the families.\n\n\"Nervous?\" Matteo asked.\n\n\"Extremely,\" Cat grimaced. \"But I have a plan,\" she smiled.\n\n\"Do we know about this plan?\" Matteo grumbled.\n\n\"Now where would the fun be in that?\" Cat laughed and sashayed ahead of him in a deep red silk dress that had been tailored to her figure. She had learned over the last year just what brought out the true alpha male in her husband, and that thought alone steadied her nerves as she walked into the ballroom to greet their friends.\n\nSix members from each of the twelve families clustered around generous tables that allowed them all to move and face the small stage once proceedings were underway.\n\n\"Thank you all for coming all the way to the prettiest part of Australia,\" Lydia Papillo spoke into the micro as the murmur that had filled the hall died down to silence. \"It seems an aeon ago that the events that saw every mother of every table endangered occurred, and we gather here today to recognise the bravery of those who saved us all. We all know that without the early warning of Ricco Vitali the outcomes of that day could have been far different, so I hope you have all taken the time today to meet with him and thank him. His isn't the only story of heroism, of course, there were many on the day. I saw first hand Matteo Vitali charge on to that plane and heard the witness who told of how he disarmed the men who killed his sister and the two Martino men. I witnessed the bravery of Catriona and saw Theresa fall...\" her voice broke off, and she took a minute to gather herself. \"Lastly, I would like the thank Leyton, and Rick, who never once considered giving in to the Suebi demands to hand me over to them. I love you both more than I can ever express.\"\n\nLydia was replaced by Audrey Martino, who apologised for her family's part in the ordeal and the injuries to Marina, who saved not only her, but her baby too. She added her thanks to the Vitali family, who had been the focus of the Suebi attack and had risked the most to save them all.\n\nThe mother of each family spoke to the gathered audience, some having both generations attend the ceremony, most with only the younger member to speak for them. Marina came onto the stage using a walking stick, and Peri waddled onto stage heavily pregnant again and looking as if she might be having triplets again, though she claimed to just be having one this time. Ally had tears in her eyes as she spoke of Nathanael's bravery and the way he had saved her, and the stories went on until, finally, Cat took the stage.\n\nCat pushed her nerves down and tried to channel the in control, bossy Princess she knew she had within her, who knew that in this room she was safe and loved. She held her head up high, and rather than standing behind the lectern, she took the microphone and stood in front of it to make her carefully rehearsed speech.\n\n\"Gosh, you have all been so kind acknowledging the importance of that early warning that Ricco sent out, but...\" and she looked at each of Matteo's friends in turn. \"It was worth nothing if those of you who received it didn't believe it or thought it was a hoax. The real heroes of that warning are you for putting your faith, not in the friend you had known for years, but in his brother,\" she paused and took a breath as they seemed stunned by what she had said. \"You all deserve the same recognition for acting as soon as that warning came through, without hesitation, and none of you should ever underplay that moment in time. There was perhaps a time where suspicion would have outweighed the threat. I know Ricco was humbled by the fact that you all believed him and acted without hesitation, and we thank you for that.\"\n\n\"As for what happened on the plane, there is only one hero to speak of there, and although most of you have read of the events that happened, I would like you to indulge me as I tell you about the woman I am proud to call mother,\" She paused and smiled at Theresa softly. Then once again she told her story, letting the emotion of that time shine through in her voice and expression. When she was done, there was spontaneous applause for Theresa and Cat both.\n\n\"Fuck!\" Matteo groaned to Ricco, \"If she keeps walking up and down the stage like that I am going to blow a gasket here!\"\n\n\"She certainly is in Princess mode, isn't she?\" Ricco chuckled. \"She has everyone eating out of the palm of her hand, hanging on her every word. Who would have thought she had it in her to be a diva on stage as well?\"\n\n\"That's all I need, a Princess Diva to totally mess with my head,\" Matteo groaned, trying and failing to control his body from reacting to his wife's stage presence.\n\n\"I didn't think it was your head she was messing with,\" Ricco sniggered, making his parents turn and frown at him because Cat had started speaking again.\n\n\"I have so many people to thank, so please bear with me. To the Sartori family, we can never thank you enough for your swift action to save Theresa's life and the support you showed Roberto and Stefano in their time with you,\" she paused and smiled at the table. \"To the Papillo family, who went to extraordinary life-saving measures to stabilise Theresa for her flight to the Sartori. For your care and treatment of my own injuries and for everything you did. The outcome hinged on you being as truly courageous and as giving as you were on that day, and there is no way we can ever repay you for all of your support and help,\" she said, placing a hand on her chest and smiling at them all.\n\n\"There are so many others I should mention, but I'd also like to highlight one other incredibly brave person, who not only showed his courage on the day, but in the weeks following. It would have been all too easy for us to point the finger of blame at the Martino family and demand justice. It is a rare individual who can stand in the face of that sort of accusation and tell the truth and accept responsibility for the failure of a few. I can only imagine how hard it was for Theo to face his childhood friend, Matteo, knowing his family caused the grief our family suffered. Yet he did. Time and time again he faced you all and accepted the responsibility and the humiliation that caused him. You are courageous and true and deserve your seat here, Theo. We thank you for your honesty and courage in doing what needed to be done.\"\n\nThere was a low murmur as she finished speaking, but she could see the Martino family smiling at her words. She had worried she would further their suffering by mentioning his family, but she needed to put out the flames that still burnt by the betrayal of Trevino and Giovanni.\n\n\"Did I forget anyone?\" she asked, looking at Matteo and Ricco, who shrugged and held up their hands outspread. \"Great, then I'm done, sorry that took so long,\" she grinned at her audience and replaced the microphone back on the stand as Lydia returned to the stage.\n\n\"Please, everyone enjoy dinner,\" Lydia said, not wasting anymore time with speeches and hurrying after Cat. \"You were perfect, thank you so much. You do that so well. I am terrified on the stage.\"\n\n\"You mean, you didn't see me shaking like a leaf up there?\" Cat laughed. \"That was terrifying.\"\n\n\"You looked amazing up there, everyone was hanging on your every word,\" Lydia had linked arms with her to walk her back to her table.\n\n\"You did that on purpose,\" Matteo grumbled as she sat down between him and Ricco.\n\n\"I think he just had his first wet dream while wide awake,\" Ricco chuckled. \"You might have to go and ease some of that tension for him soon, or he might just combust.\"\n\n\"Well, I do have to change for the ball soon,\" Cat smiled slyly, \"And I put just as much care into choosing that dress with you in mind,\" she grinned.\n\n\"Oh, Princess, it's a dangerous game you're playing tonight,\" Ricco said with a low chuckle, \"and I am looking forward to every moment of it.\"\n\n*****\n\nAuthors note: I sincerely hope that if you have come to this note that you have enjoyed This series. As always it is difficult to wrap up every thread in a story and sometimes its fun to leave a few dangling in case I want to revisit the series in the future. For now though, this is the end. Thank you all for reading this series of The Twelve. ~ellie. "
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "brothers",
        "epilogue",
        "contol"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-35"
}