{
    "title": "Quaranteam Ch. 34",
    "pages": [
        "Uncharacteristically, Andy woke up at around 6 a.m., noticing that Fiona wasn't in the bed with all of them. He'd suspected that both she and Moira would wake up sometime in the middle of the night, but he'd hoped that they'd still sleep in some and get accustomed to local time a bit more. Fi, it seemed, couldn't do that.\n\nAs carefully as he could, Andy extricated himself from the pile of naked female bodies around him and slipped out of bed. When it had been just him, Ash, Lauren and Niko, in the early days, anyone trying to leave the bed would wake everyone up, but now, after the last month or so of constant additions, people had grown much more acclimated to people moving, sliding in and out of the bed during the night without waking up.\n\nCurrently the bed held Moira, Niko, Sarah, Emily, Tala, Sheridan, Lauren and Jade. He'd been a little surprised the night before when both Sheridan and Lauren had crawled into the bed as everyone was shutting down for the night, but both women insisted they each wanted their friend to have a familiar face nearby when they woke up in the house for the first time. He said he completely understood and respected that.\n\nHe grabbed one his big t-shirts, this one for the Chapterhouse album \"Whirlpool,\" pulled on some boxers and some sweatpants and went to go find where Fiona had gotten herself to.\n\nAndy didn't have far to look. When he pulled the shirt on, he could see motion on the covered balcony just outside of the master bedroom, and figured it had to be her.\n\nHe opened the sliding door as quietly as he possible, hearing the sound of heavy raindrops falling just feet away from the balcony, the wind not heavy enough to force them beneath the overhang. Fiona was wearing a cable knit sweater and Lululemon yoga pants, leaning against the railing, it still cool enough outside for her breath to leave a telltale cloud in the air in front of her.\n\n\"This is California,\" she said, her voice laying plain her amusement with the weather. \"I was promised sunshine and warm weather all the damn time.\"\n\n\"It's raining,\" he said, moving to stand beside her. \"And we need it, so don't jinx it and make it stop. Besides, it was raining the day you asked me and Xander to move in with you.\"\n\nShe laughed a little bit, shaking her head slightly. \"I can't believe you remember that,\" she said. \"And, for the record, I asked you to move in with me, and I knew that Xander came as part of the deal at the time, because you weren't going to leave him hanging. How's he doing, anyway? I haven't talked to him since college.\"\n\n\"You can ask him yourself when he gets here in a while.\"\n\nFi turned to look at him, arching one of her impeccably well-kept eyebrows in his direction. \"He is not moving into this house, Andrew. This isn't the old days.\"\n\nAndy laughed, shaking his head. \"I didn't mean here here, as in Rook Manor, but he's moving into New Eden, so he won't be too far away.\" He went to slide an arm around her waist, just a little hesitation in his motion, but she immediately slid in firmly against him, pressing her body against his.\n\n\"I knew that, Andy. I was fucking with you. Jesus, you're an idiot sometimes,\" she sighed with a wide smile on her face. \"So it's lucky you're so damn cute.\"\n\nHe rolled his eyes a little bit. \"Nobody thinks I'm cute but you.\"\n\n\"Bullshit. Moira thinks you're cute.\"\n\n\"Fine. Nobody but you and Moira.\"\n\n\"And Niko and Emily and...\"\n\n\"Okay, okay, I get the point,\" he laughed, leaning down to kiss her forehead. \"God, I missed you, Fi.\"\n\n\"Me too. So next time, maybe call, huh?\"\n\nHe smirked. \"You're gonna hold this over my head for a while, aren't you?\"\n\nShe giggled a little, nodding. \"Oh yeah, bigtime. But you know me. I'll get bored with it at some point, and tease you about something new, once I have something new.\" Her right hand rested on his left arm, which was folded and pressed against the railing. \"How the hell did we get to here, Andy?\"\n\n\"I mean, there's all of my life before May of this year, and then there's this year, and one of them is a lot more boring than the other, but I'll tell you all about both, given enough time. I am sorry I didn't try and find you after you cut me out, but to be fair, I didn't think you wanted me to.\"\n\nShe nodded, giving a little shrug. \"I was angry and I was dumb, Andy. It wasn't a good combination. And when I was old enough to know better, I was too scared, thinking you'd just moved on and didn't ever think about me any more.\"\n\nHe had a short bark of laughter, shaking his head. \"Yeah, get that fucking idea right out of your head now. After we split, I only had one serious girlfriend, and that was because I was comparing them to you all the time and nobody ever lived up to you.\"\n\n\"Not even the one serious girlfriend?\"\n\n\"Especially not the one serious girlfriend, but at that point, I thought maybe it was me, and I was the one doing things wrong, so I stuck with it longer than I should've. You'll end up meeting her at some point around New Eden and then you'll ask yourself how she and I ever dated as long as we did.\"\n\n\"That bad, huh?\" she said, giving his arm a squeeze. She always knew exactly the level of physical touch he needed to feel reassured or put at ease.\n\n\"That bad and a whole hell of a lot worse.\"\n\nThat hung in the air for a minute or two with nobody saying anything.\n\n\"You seem to have done alright for yourself this year, though,\" she teased. \"Two actresses, two cheerleaders, an Irish lass, an Aussie, a Native knockout, a couple of athletes, an Indian knockout and your own personal staff including an honest to god French maid. I'm shocked you could find time to pencil me and Moira in.\"\n\n\"I certainly never intended--\"\n\nShe reached a fingertip up to his lips to stop him from talking. \"I spent a great deal of time between my arrival at the base and my injection with the serum talking about you with Niko, and she assures me that you've done everything you can to be the best man anyone here can ask for, so whatever you intended, it doesn't really matter anymore, does it? What matters now is that you've got a wonderful, if a bit immense, family, and that you wanted me and Moira to be a part of it.\"\n\n\"Speaking of Moira, how long have you two been together?\"\n\nFi grinned, leaning her head against his chest. \"About four years now. It's the reason I didn't put anything about my relationship status on my Facebook page. Didn't want Mom and Dad throwing a shitfit about it. Well, mostly Mom, I think.\"\n\n\"So it's been serious for a while now.\"\n\n\"Very,\" she said. \"And she's the one who's been bitching at me to reach out to you for the last couple of years, so don't worry about her being jealous of you or anything. On our way here, she was telling me that it's felt like the entire time we've been together, there's been a part of me missing, and how she was sure that you had the missing part of me. I'm surprised you never reached out to her.\"\n\n\"I never got her contact information all those years ago,\" he chuckled. \"Hell, I didn't even get her last name. I still didn't know it until Niko told me yesterday.\"\n\n\"Oh my god, really?\" Fi giggled. \"I guess that makes sense, because I know you would've remembered it if you'd ever learned it. You loved that damn silly movie.\"\n\n\"Madam, I will not permit you to impugn 'Highlander' on these grounds.\"\n\n\"Oh hush,\" she said. \"But yes, you're going to be taking a bride from the Clan MacLeod, but there cannot only be one. You owe me a ring as well, mister.\"\n\n\"You think that'll satiate the bloodlust of Mr. &amp; Mrs. Smith?\" he said, referring to her parents.\n\n\"They already know you're back in this picture and are ecstatic,\" she said, kissing his cheek. \"I mean, Mom's a little less thrilled with how many wives you're going to have, but I told her with all the deaths, that's the way it's going to work in this country for our generation. She's still wrapping her head around it.\"\n\n\"Everyone in your family okay? All your brothers?\"\n\n\"All three were smart and locked down immediately, so everyone's okay. I'm glad you asked.\"\n\n\"And Moira's family?\"\n\n\"Her mom's all that's left, and Scotland's not had a lot of problems with DuoHalo, since they seemed to take lockdown extremely seriously in the smaller villages. You can talk to her about her mom when she's up. It'll mean a lot to her that you're asking.\"\n\n\"So how did you two hook up again?\"\n\nFiona sighed again, slumping into his body a little more. \"How much of my writing career did you follow after we split?\"\n\n\"Most of it?\" he chuckled. \"I set up a Google Alert to notify me whenever your byline appeared.\"\n\n\"You stalker,\" she giggled, waiting just the perfect beat before speaking again. \"It's okay; I had one set up on you as well. Uh, two, actually, one for your real name and one for your pen name, once I read an article about that. Thanks for making that hard on me.\"\n\n\"I didn't expect anyone to be following my fiction writing, Fi. But carry on with your story.\"\n\n\"Do you remember that story I wrote about about five years back on the Syrian civil war?\"\n\n\"I remember you wrote a whole series of them. What, seven or eight different pieces?\"\n\nShe smiled up at him. \"Gold star for robot boy,\" she said with a smirk. \"You really were paying attention. That's nice to know. Anyway, the one about the Doctors Without Borders that were crossing into the firefights to provide medical aid to civilians caught in the crossfire.\"\n\n\"Oh yeah,\" he said. \"Those people sounded amazingly brave.\"\n\n\"Moira was one of those people,\" Fi said. \"Running out into firefights, scooping up kids and pulling shrapnel out of them. One of the bravest people I'd ever met, but she's been doing it for a few years, and it was starting to take a real toll on her, so I invited her to come and visit DC. A few weeks later she'd gotten a job at a hospital in Georgetown. A couple of months later we started dating. Half a year later, she moved in with me. About two years ago, we decided we both wanted to get the fuck out of DC forever, but weren't sure where to go.\"\n\n\"Around the time you added me and Xander on Facebook.\"\n\n\"Actually, I have a confession to make -- Moira sent you the friend request from my account,\" she sighed. \"I was convinced you didn't even think about me any more, so one day when we were fighting, she just sat down at my computer, found you on Facebook and sent you the friend request before I could stop her.\"\n\n\"And then you and I played the biggest, dumbest game of virtual chicken ever, waiting for the other one to reach out first,\" he sighed. \"God, we're fucking stupid some days.\"\n\nShe giggled once more. \"I think since we were both being stupid about it, it cancels each other out. Some, anyway. But then I got this message from Captain Linda Hayes in the Air Force, telling me that a request had been put in for me to be paired up with you out here in California, if I was interested in that.\"\n\n\"Well,\" he said, teasing her back, \"you did say you wanted me to reach out...\"\n\n\"I did, and you agreed to my condition, because there was no way I was coming without bringing Moira.\"\n\n\"Thanks for that.\"\n\n\"I did my homework first, though,\" she chided. \"Even after I'd accepted, I still had about a day to change my mind, so I reached out to Xander and spent about five hours talking to him on the phone.\"\n\n\"I thought you said you hadn't talked to him?\"\n\n\"Yeah, well, I was lying, but most of the time I was talking to him, I was asking about you.\"\n\n\"Oh, and that was enough to convince you?\"\n\n\"Well, he answered a lot of questions, but the only thing I really cared about was if you were still, y'know, you. Doing good deeds without thinking too much about them in advance, trying to help every lost soul you bump into. He said of course you were still you, and probably even more you now than you'd ever been.\" She paused for a minute, then continued. \"He actually told me all about the poker game, and how you were just trying to help one of Niko's friends, and had to do your best to save nearly every damn person that you could, and the more about it he told me, the more I knew that you hadn't changed a bit. Still jumping face first into the firing line, just like Moira.\"\n\n\"I wish I could say I'd gotten a little wiser over the years, but I don't know if that's true.\"\n\n\"If Niko, Ash and Emily are to be believed, I'd say so,\" she said. \"They certainly grilled the hell out of us before they were okay letting us into the household. Emily's quite the little spitfire, considering how short of a time she's known you. Very protective of you, although maybe that's as much protective of Sarah as it is of you.\"\n\n\"Yeah, that's definitely a possibility,\" Andy admitted. \"Sarah's so insanely optimistic about things, maybe she needs Em to keep her down to earth. And the poker game caused lots of ripples out here, so everyone was a little on edge about all of it. Well, that and the fact that I just made the decision to invite you entirely on my own without talking to anyone in the household first. I mean, they'd told me to make sure I invited someone of my own choosing, but I think they thought I would've talked it out with them a little bit beforehand.\"\n\n\"And you didn't?\"\n\n\"Didn't need to.\"\n\n\"That confident, were we?\" she chuckled. \"I see we haven't entirely shed the overconfidence problem we had back in high school.\"\n\n\"It was me taking a bit of agency back in my life, Fi. And while it surprised everyone a bit around here, I don't think anyone really complained, other than they hated waiting to learn more. I just figured, if you said no, there was no reason getting everyone excited for nothing.\"\n\n\"Did you honestly think I would've said no?\"\n\nAndy shrugged a little. \"It'd been over a decade, Fi. I figured anything was possible.\"\n\n\"I suppose,\" she said. \"So what do I need to know about my new family? The short version, s'il vous pla\u00eet.\"\n\nHe smirked at her dipping into French for a moment. She tended to do that when she was feeling particularly playful, knowing he didn't speak a word of it. \"Well, there's three levels of partner here in the house, I guess. The fianc\u00e9s, the partners and the staff.\"\n\n\"How did you decide which fell into which category?\"\n\n\"I mean, I mostly didn't decide, or I suppose, basically they either chose to be partners or staff first and foremost, and from there, the ones who felt the most emotionally connected to me decided they wanted to eventually get married. I asked Aisling first, and she agreed, and then Niko asked me before I could ask her. When I announced that, Emily and Sarah both sort of insisted I accept their proposals as well.\"\n\n\"Much like I did,\" she said with a titter of laughter.\n\n\"See? Not as different as you thought. Nicolette, Jenny, Katie and Whitney all came here expressly because they wanted to be staff, and not partners.\"\n\n\"And you're okay with that?\" Her voice didn't have a tone of judgment to it, just a hint of curiosity.\n\n\"It's what they wanted, so who am I to tell them that's wrong?\"\n\n\"That's completely fair,\" she said. \"It just surprises me that you sort of made peace with that so easily. I would've thought you would've taken more time to get your head around it.\"\n\n\"After you get past the notion of the first one, it's pretty easy to make peace with the rest, and Nicolette was very good at making that clear to me early on. Katie's the weirdest of the cases, but we've made it work.\"\n\n\"How so?\"\n\n\"Oh,\" Andy said, amused in how offhandedly he mentioned it, \"she's completely a lesbian, so she gets everything secondhand.\"\n\n\"I'm sure there's a story behind that one.\"\n\n\"There is, but I was giving you an overview.\"\n\n\"Fair enough, Mr. Rook,\" she said, mirth layered in her voice. \"Do continue.\"\n\n\"Everyone who isn't a fianc\u00e9 or a staff member falls into the category of partner, but even there, there can be quite the range of attachment.\"\n\n\"How many others are there that don't fall into either category?\"\n\n\"Eight, not counting you or Moira, with one more on the way, and one more to maybe fall into staff but maybe into partner as well.\"\n\nShe giggled a little. \"You, sir, are drowning in pussy.\"\n\n\"Yeah, well, it comes with its own complications.\"\n\n\"And you know I'm going to be a fianc\u00e9, as is Moira.\"\n\n\"Well,\" Andy admitted, \"I knew you wanted to be, but I didn't want to jump to any conclusions about Moira.\"\n\n\"You were the first man she ever loved,\" Fiona sighed. \"As much as she might have tried to pretend otherwise, she never hid that very well.\"\n\n\"Well, fair's fair, Fi,\" he chuckled. \"You were the first person I ever loved, so I guess it all works out in the end.\"\n\nThe rain had actually gotten heavier rather than easier since they'd been talking, but the fog was starting to roll in a bit, so it was harder to see, wisps of clouds covering the grounds of the manor.\n\n\"What am I going to do with myself here, Andy?\" she said, leaning into him. \"I'm a reporter. It's my job to report things. I'm used to covering the White House, the Senate, the House of Representatives, even the military. Granted, I hated DC, but how is any of this ever going to compare?\"\n\nHe shifted a little bit. \"I mean, you could write a book about the whole pandemic, document the whole thing from top to bottom. I know there's going to be the 60 Minutes news story in less than a week, but they're only going to have an hour to cover so much. You could write a book like Bob Woodward, cover everything.\"\n\nShe stood quietly for a minute, then nodded. \"You're right. Maybe I could do something like that.\" She reached a hand and smoothed it across his chest through his shirt a bit. \"So, now I want to get the juiciest piece of dirt here in the house. Who's the best in bed?\"\n\n\"Oh hell no,\" he laughed. \"Even if I could make that kind of judgment, which I can't, there's no way in hell that I would. Everyone's amazing in their own way.\"\n\n\"Picked up any new fetishes I should know about, or just the ones you had back in college?\" she teased, her fingertip trailing down his sternum.\n\n\"And what old fetishes those would be?\"\n\n\"Oh come on, Andy,\" she said with a smirk. \"I haven't forgotten. Sweary wife, happy life. I bet if I started telling you that my cunt still ached from the fucking you gave it last night, you'd be getting...\" Her fingertips teased against the waistline of his sweatpants. \"See? There it is, right on cue.\"\n\n\"Tease,\" he scolded.\n\n\"No no no, love,\" she giggled. \"Tease would be if I wasn't going to do anything about it. I am, but I just want to know what else you've done with whom else.\"\n\n\"Too many things to list all at once,\" he said. \"Maybe just ask some specific questions, and you'll get your answers.\"\n\n\"Did you fuck Emily in her costume from the movie?\" she said, rubbing one of her thighs along the front of his.\n\nHe was amused by the question. \"I did, but that was her idea, not mine.\"\n\n\"Doesn't matter whose idea it was, only that you've done it. Doesn't make it any less hot. How many different girls in the house have blown you?\"\n\n\"Almost all of them?\"\n\n\"Done any of them in the ass?\"\n\n\"I think five or six of them.\"\n\n\"Was it the first time for any of them?\"\n\n\"For most of them, not that it matters.\"\n\n\"Everything matters, Andy. Everything matters.\" She slid her hand to rub against Andy's cock a bit through the sweatpants and boxers. \"Any of them as loud as I was the first time you fucked me in the ass?\"\n\n\"Only Niko,\" he said with a chuckle. \"Most of the others were loud, but Niko really howled in pleasure loud enough to shake the walls.\"\n\n\"You gonna do all of them that way?\" Her fingertips stroked his shaft just a little through the fabric, her eyes looking up at him in amusement.",
        "\"Only if they want to.\"\n\n\"Anyone said they don't want to?\"\n\n\"Piper said she wasn't too sure about it, and Sheridan said the idea scares her, which she said also turns her on a little, but she was still pretty nervous about it, so we'll see I guess. If they want to, I will, but if they don't, I won't. You know me, Fi. I'm never going to make anyone do anything they don't want to do. Ever.\"\n\n\"What about that plump Japanese teenager you've got?\"\n\n\"Hannah?\" he said with a laugh. \"Oh, she's eager for it, but she's always rushing towards new things like a cat after a laser pointer. I think if one of the girls said she wanted to have sex on a trapeze, Hannah would say she had next. \"\n\n\"Done any bondage?\"\n\n\"A little bit with Whitney, the newest staff member, but she's very much into that kind of thing, so I felt like I'd be letting her down if I didn't at least give it a go. And I suppose you could say Nicolette and I dabble at that back and forth all the time.\"\n\n\"How did it feel?\" Her hand slipped up and then pushed down beneath the waistband of his sweatpants and boxers, moving to close around his naked cock. \"Did you like being a Master for a day? Everyone doing only what you told them to?\"\n\nHe grinned, feeling her cool touch against his warm skin. \"It's a fun hat to put on from time to time, but certainly not one I want to wear too often, and definitely not one I want to get too comfortable wearing. Too many people get a little taste of power and then run away with it.\"\n\n\"Did you like our little game yesterday morning where we were all touching and kissing and sucking on you at once?\"\n\nHe nodded, maybe even a bit too quickly. \"It was intense. Overwhelming and hard to focus, but it felt so damn good. Was that your idea?\"\n\n\"Of course it was my idea,\" she giggled. \"Well, it wasn't entirely my idea, but I started coming up with the plan. Niko and Ash both helped a little bit. I'm not stepping on anyone's toes by being here, am I? It seems like you and those two are especially close.\"\n\n\"Other than Lauren, we've been together the longest. But Lauren and Taylor are a couple. They love both me, but they love each other more, which is absolutely fine. So we've all worked pretty hard to make each other happy.\"\n\n\"Where do you think Moira and I are going to fit in here?\"\n\n\"It feels like the fianc\u00e9s have their own little clique, and I expect you'll slide right in there before you know it. I know you, and you've always been one of the most adaptable people ever. You've always been the kind of person to go up and pick a fight with the biggest person in the yard, if it's what you thought you needed to do.\"\n\n\"Prison metaphors?\" she laughed softly. \"Not exactly your most romantic approach, is it, Rook? Shouldn't you aim a little higher?\"\n\n\"I actually think you and Ash are going to become the most dangerous team I've ever seen, and that's before you rope in the partnership that Emily and Niko are already building,\" he said with a little laugh. \"I'm just a guy in the background, a meat puppet for you ladies to steer me around into whatever conflict you need me to put down.\" He gave her shoulder a little squeeze. \"You're gonna love her. She reminds me a lot of you. Or you remind me a lot of her. Take your pick.\"\n\n\"Well, while redheads are an acquired taste, it's one you know I've already acquired,\" she said, her thumb teasing over the head of his cock. \"So maybe I should just tell you that I'm looking forward to get a taste of her, hm?\" Fiona smirked. \"Or maybe that I already did?\"\n\n\"You didn't,\" Andy said, tilting his head to one side.\n\n\"No, I haven't, but I will soon enough,\" she said with a laugh. \"So I don't need to worry about the fianc\u00e9s, because we're all going to get along like a house on fire. Do I need to worry about the partners? Do you think any of them aren't going to like me?\"\n\nAndy grinned. \"I don't know anyone who didn't like you the moment they met you, Fi.\"\n\n\"But Ash is the lady of the house.\"\n\n\"We don't have a lady. I thought we were an autonomous collective,\" he said to her, smugly.\n\nShe gave his cock a firm squeeze, enough to make him yelp a little. \"You're fooling yourself. And the two showing up today? Those are going to be the last ones? Or is there space for one or two more, if the right girl strolls in front of you?\"\n\n\"I mean,\" Andy said, as she begun to stroke his cock very slowly and deliberately. \"I said in the interview with 60 Minutes yesterday that if I had my say, we were definitely done adding people to the household, but Emily pointed out I really don't have the final say in these kinds of things.\"\n\n\"All I'm saying is that you shouldn't shut any doors permanently, Andy.\" Her fingertips were sliding back and forth. \"I think you're almost ready for me again.\"\n\n\"Twice in two days?\" he said, trying to shift a little bit against her cold touch. \"The other girls are going to think you're greedy.\"\n\n\"I paid close attention to the briefing when they were giving us the injections, Andy,\" she scolded. \"You can pump out a good five loads a day without any trouble, so I'm making up for lost time.\"\n\n\"I mean, I didn't say that I didn't understand.\"\n\n\"Good,\" she said, turning around, putting her back to his chest, letting go of his cock as she leaned forward, and tugged her yoga pants down to the middle of her thighs, exposing her pussy to him. \"So get to it.\"\n\nHe reached down to grab his shaft, moving to get it lined up before he pushed forward, sliding good and deep inside of her, feeling her honeyed walls clench on him even as he filled up her hungry cunt with his shaft.\n\n\"Ffffuck,\" she hissed. \"That's never going to get old, feeling you slide inside of me. God, I'd forgotten how much I fucking missed this. Promise me we'll never be that stupid again, Andy,\" she said as she started to swivel her hips a little bit, not pumping into him, just making his cock press against one side of the inside of her snatch then the other.\n\n\"I'm never going to let you go again, Fi. You have my word on that.\"\n\n\"Right now, there's only one word I give a shit about,\" she said. \"Fuck.\" Her hips slammed back against his in time with the word. \"Fuck.\" She repeated it, both the word and the motion. \"Fuck!\" The tempo and the force of her body thrusting back into his increased with the intensity of the word. \"Fuck! Fuck! FUCK!\"\n\nThey'd fallen back into their old, familiar rhythm, each of them remembering the other's personal turnons. They knew how to get each other going quickly, and while Andy had expected that Fi would want to savor their moment alone, she was hellbent on getting another orgasm from him.\n\nPatience was not on the cards.\n\nEach time he pushed forward, she whipped back, as if every second he wasn't inside of her was a second she couldn't afford, that she couldn't abide by him being anywhere else. She wanted him to be inside of her as much as she could get it.\n\n\"C'mon, Andy,\" she whispered. \"Just you and me, just like old times. Just do it already!\"\n\nThe familiarity was a heady cocktail of lust, and her body gripped his dick in just the perfect way, and before he knew it, the moment as on top of him, just as he was on top of her. His body seized and she started to spasm just as he began to unload his hot spunk inside of her body, the two shivering in one unison, a completed pair once more.\n\nA minute or two later, they were both laughing softly again, his cock having slipped out of her, both of them having tugged their clothes up, Fi having slipped back into his arms once more.\n\n\"I'm gonna love getting that regularly,\" Fiona giggled. \"Not that you weren't great at sex before, but man, the chemical life is quite a trip.\" She reached up, tipped his head down and kissed him again. \"I still love you, Andy. Always have.\"\n\n\"Me too, Fi. Me too.\"\n\nThey stood there on the balcony listening to the rain for a few minutes.\n\n\"So who's coming today? You said you've got a few more lined up?\"\n\n\"One of Em and Sarah's friends, plus my new bodyguard.\"\n\n\"Bodyguard, huh?\" Fiona smirked as they turned to walk back into the house. \"Gotta admit... sounds kinda hot.\""
    ],
    "authorname": "CorruptingPower",
    "tags": [
        "mf",
        "mind control",
        "quaranteam",
        "dirty talk"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/quaranteam-ch-34"
}