{
    "title": "Hey Nineteen",
    "pages": [
        "Notes: I am apparently incapable of writing a short story. I went into this thinking I'd write a quick-hitter set during the pandemic... maybe 3-4 pages tops... yeah, it's more than that. A lot of it is dialogue, so it does read fairly quickly. I just got very into these characters and their backstories, and I hope you do, too. There's a lot of sex, but it's not for a few pages. I've weaved a fair amount of character development into the sex scenes, so skim at your own risk. \n\nMy long-time readers know all my stories are written in what I call the Road Trip universe. The hero of this story first appeared in Ch. 10 of Brad's Road Trip, as did a couple of the other characters who are mentioned. You don't need to read that chapter to understand this one (though you should) but it tells the event in question from another angle, which you might find interesting.\n\nOne caveat: there is some light anal play. Just fingers involved, but I know some folks hate anything to do with the part of the ass that goes between the cheeks. So, fair warning. \n\nThanks to AnInsatiableReader and samuraisan for their invaluable editing and beta-reading contributions. There are a few things in this story that wouldn't be if not for them.. and there'd be a metric asston more of this story if not for them, too. Any errors that still slipped through are all me.\n\n**************************** \n\n\"Did you want your milk in the bag?\" the girl bagging the groceries asked me. The sound was a bit muffled through the God-awful Ohio State Buckeyes bandana she was using as a face covering, but I understood her just fine.\n\n\"Nah, that's ok,\" I said loudly, trying to fight through the surgical mask I wore. I grabbed the milk and stuck it in the hole I'd left for it in the back of the cart. I reached up to the counter to grab the last two 12-packs of soda, but she put my double pack of paper towels on top of them at the last second, and our hands brushed together briefly.\n\n\"Sorry,\" she said sheepishly, blushing as she pulled her hands away. Her deep blue eyes made contact with mine for a few moments before she looked back to the groceries.\n\n\"No problem,\" I said, grinning slightly, though she couldn't see it. The sodas went in the cart first, followed by the paper towels and a few other bags she'd finished. \n\n\"Same thing with your laundry soap?\" she asked. \"No bag?\"\n\n\"Yes, ma'am,\" I answered, taking the Tide directly from her and stashing it on the bottom of the cart. The cashier, a kind lady who had to be pushing 70, finished ringing me up.\n\n\"That'll be $62.32,\" she said. I punched a few buttons on the keypad, grabbing some cash out for the kids who cut my grass in the process. Lawn care was something I usually enjoyed, but work had been cutting into my free time lately, and besides, the neighbor kids needed a way to make some summer cash.\n\n\"You have a nice day, sir,\" the bag girl said. I couldn't see it, but her eyes told me she was smiling under that disgusting mask. I returned her well wishes, as well as her invisible smile, and pushed my cart toward the door. I was still holding not only my wallet, but also my debit card and the three $20 bills the cashier had handed me, so I moved out of the traffic flow to get everything put away.\n\nAs I was stuffing the cash into the billfold, I noticed two guys leave the self-checkout lanes and head toward my intended exit. They appeared to be in their mid-20s, though it was a little hard to tell, since neither seemed to know where the shaving products were located at this particular Kroger. Both wore yellow utility vests on top of slightly dingy white T-shirts, but to my dismay, neither wore a mask. I was ready to look back into my wallet, but I noticed they were both staring at me.\n\nI thought to say something, but then I realized they weren't actually looking at me. I followed their stares over my shoulder, and landed back on the cute bag girl from the lane I'd just left. There weren't a ton of people in the store on a Tuesday mid-afternoon, so she didn't have more groceries to pack up just yet. She was talking to the elderly cashier, but her eyes cut toward the two men before quickly looking away.\n\nBoth guys were grinning, looking back and forth between each other and the girl. They spent at least another 30 seconds leering at her, to the point where it started to make me uncomfortable. I couldn't hear all of what was said, but I picked up \"tag that ass,\" \"titties,\" and \"call me daddy.\" \n\nI didn't want to start anything in the store, but... what the actual fuck?\n\nThey lingered a few more seconds before finally leaving the store, and I turned around to look back at the girl in question. She was rolling her eyes and chatting with the cashier, pointing in the general direction the two guys had just left. Now that I took the time to actually look at her, I could see what interested them. Her long, jet black hair hung in a loose ponytail more than halfway down her back, reaching toward an ass that was pretty impressive, at least from this distance. Her dark blue apron rested on top of a baggy T-shirt, but she couldn't completely hide what had to be fairly large breasts. \n\nShe was also really young, though without seeing her entire face I couldn't tell for sure. I was pretty sure she wasn't a minor, but it was a close thing. I guessed 18, maybe 19 at most. \n\nThe things I could do to that body, my mind idly speculated... Yeah, and what will you talk about before and after? The latest Tik Tok trends?\n\nI just chuckled at the humorous inner monologue. I'd been looking for a few seconds, and realized I might be encroaching on the other guys' level of creepiness. Before I could turn back, though, the cashier pointed in my direction, and the girl turned and looked at me. Her face turned slightly pink, but she still managed to give me a small wave before she looked away, and I felt a grin creep onto my face under my mask. \n\nDon't get me wrong -- I'm a good-looking guy, and I'm well aware of that. I'm 6-foot-4 and weigh anywhere between 250 and 260 pounds, depending on how clean I'm eating at any given moment. I run 5 miles every other day and I spend 50-60 hours a week working at construction sites, so I'm in as good of shape as I was in my Army days. I've been told I'm \"ruggedly handsome,\" and though I have no idea what the hell that means, I've never had any complaints on my looks.\n\nI'm also a month short of 40 years old, so while I got plenty of attention from more experienced women, the younger ones usually just thought of me as old. That was fine by me, because I generally wanted more from a woman than just sex appeal and the older I got, the more difficult I found it to connect with that age group. Still, young, hot women can generally have any man they want, and this one in particular hadn't exactly been subtle about checking me out. All inner voices aside, I was gonna shut up and take the win.\n\nI returned her wave and offered up a sheepish \"what-can-you-do\" shrug as I turned and pushed my cart out of the store. Honestly, I wanted to go back and apologize for the boorish behavior of my fellow Y-chromosome owners, but I didn't see any way that wouldn't make me as creepy as them.\n\nI spotted the two bright yellow vests walking across the parking lot, and I watched them carefully as I slowly walked to my F-250. They got into a white work truck a few rows away from me, and only then did I drop my guard and load up my groceries. I climbed up into the cab and started her up to get the AC rolling. I hung my mask on the rear-view mirror and grabbed the hand sanitizer from the center console. All that done, I pulled out my phone. I'd been texting back and forth with an ex-girlfriend for a few days now. We hadn't seen each other since we called it quits six months ago, just before Christmas. Neither of us were much for casual hookups or the friends-with-benefits thing, but the pandemic had limited our abilities to meet other people and move on, and we were both starting to get lonely. We had no plans to get all the way back together -- there was a reason we'd broken up, after all -- but I was pretty sure at least certain parts of us were going to get back together sometime soon.\n\nI texted her some dirty joke that I was rather proud of and put my phone in the cup holder. I strapped my seat belt on and was just about to throw the truck in reverse when I caught something in the corner of my eye. \n\nTwo somethings, actually, and they were both yellow.\n\nI'd stopped watching when they got in their truck, but apparently they hadn't actually left the parking lot, and now they were both walking back toward the store. My Spidey sense started tingling something fierce, and I shut the truck off and opened the door. Surely they weren't dumb enough to actually do anything in the middle of the day? Alas, I trusted my instincts a lot more than I did two guys who had already proven to be douchebags. Besides, if four decades on this planet had taught me anything, it was to never, ever, underestimate a person's innate ability to be stupid.\n\nMask in hand, I quickly headed back inside. Yeah, there were at least a few customers in the store, and I'm sure they had security somewhere in here. In this day and age, though, customers were just as likely to film shit on their phones instead of actually intervening, and supermarket rent-a-cops were far from reliable. Even if security realized there was a problem and managed to get there before the guys tried to get touchy-feely, she'd still have to deal with a couple of minutes of their bullshit, and she didn't deserve that.\n\nWhen I got back into the store, my suspicions were confirmed. They stood on either side of her now, hitting her from both sides with what I was sure was high-level, intellectual conversation. Her lane had a customer in it, so she was trying to parry them off while also trying to do her job. She looked uncomfortable, but there were a large amount of groceries still on the belt, so I'm not sure the cashier even noticed.\n\nI wasn't going to just charge headlong into a confrontation. I stopped a few feet away, listening in as close as I could over the noise of the store. \n\n\"C'mon, Kat,\" I heard the bigger one say. His beard was as scraggly as it was long, with random hairs flying every which way as it reached toward his chest. He definitely seemed to be the instigator of the two. \"It'll be fun.\"\n\n\"You know I hate that damn name, Mike,\" she said, and for a fleeting second, I wondered if I had it all wrong. I thought it was just two dudes rudely hitting on a stranger. I didn't expect them to know each other's names. That thought went away pretty quickly, though, when he tried to get a handful of her ass. He made contact, but she squirmed away before he could do anything else and shot him a glare I could tell was deadly even with her bandana on.\n\n\"Don't you fucking touch me,\" she spat out, loud enough that he could hear it but not so loud that it would make a scene in front of other customers. Of course, she rolled right into the other guy, who while not the main catalyst of this whole thing, certainly wasn't shrinking away from it. His skin was darker; I guessed Hispanic, but it was hard to tell because his beard was even bushier than the first guy. He had several visible tattoos snaking up each arm and disappearing under a shirt I was fairly certain hadn't been washed in a couple days. He touched her arm just above the elbow and started sliding it toward her shoulder. \n\n\"What the fuck?\" she whisper-shouted, spinning out of the new guy's grasp, but right back into Mike's. \"Seriously guys, fuck off. I need to do my job.\"\n\n\"Aww,\" Mike said, feigning feeling hurt. \"Are you asking us to leave, Kitty Kat?\"\n\nThe customer was still loading her stuff onto the conveyor belt, and while Kat's progress had slowed some with the unwanted attention, it hadn't backed the process up enough to catch the cashier's eye yet. No one else seemed to be looking at the three of them. \n\nMike moved behind her and put one hand on her hips as he pressed into her. His other hand went around to her front, and that's when I stepped in.\n\n\"'Scuse me, ma'am,\" I drawled, walking up into the space he'd just vacated to her right and tapping her lightly on the shoulder. I got a good look at her name tag: Katrina. \"You bagged my groceries for me a few minutes ago, but I seem to be missing one of the bags.\"\n\nHer eyes told me how happy she was to see me -- not me in particular, probably, but just anyone who might help. Before she could say anything, Mike answered for her.\n\n\"You see any extra bags sitting here, asshole?\" he spat, barely looking at me before fixing his predatorial gaze back on her. \"Customer service is over there.\" He jerked his head to the left, and I guess he expected that I'd just drop it.\n\n\"Thanks, friend,\" I said, turning the natural southern in my voice up to 11. I'd given them an easy out, but they'd decided not to take it. That left the more direct approach. \"Look, y'all. I understand how critical it is to find baby oil in these troubled times. How else are you and your stud muffin boy-toy over there gonna rub each other down and get ready for what I'm sure is a very busy social agenda this evening?\"\n\nKatrina snickered under her mask, but the guys' reaction was far from humorous. Mike moved from behind her and tried to get up in my face, but I had him by at least 5 inches, and it's hard to look tough when you're looking up. His buddy joined him, though, and I could tell the backup gave Mike a false sense of confidence.\n\n\"Sadly, I think this young lady here is too busy at the moment to help you locate it. I promise, I'll let you guys get in front of me at customer service. Who am I to stand in the way of modern romance?\"\n\nNo, I'm not one of those people. I have absolutely no problem with homosexuality, bisexuality, hell... any sexuality. But I had a hunch that these two probably did, and I was gonna push whatever buttons I had to in order to draw their attention to me and away from this defenseless, innocent girl.\n\n\"Look here, motherfucker--\" Mike said. His face turned red as his nostrils flared out, but I put a hand up before he could get anything else out.\n\n\"Let me stop you right there,\" I replied. \"This ain't really somethin' you wanna do.\"\n\n\"Oh yeah?\" his friend asked. His voice was definitely Latin-accented. \"There's two of us, asshole, and only one of you.\"\n\n\"Yeah, I noticed that,\" I said. If I was still chewing tobacco like I had in my early-to-mid 20s, this would have been the time to spit out some juice for effect. \"You got anymore friends you can bring in here, maybe even up the odds a little bit?\"\n\nThe line was clich\u00e9 and corny, but I did my best to keep a serious look on my face. I had no doubt I could take them -- it had been 13 years since I'd been in an actual fistfight, but the odds had been against me then, too, with three on my side and seven on theirs. That fight -- and the whole night that followed -- had turned out pretty fucking well. Still, one or both of these fools might surprise me and have some actual skills, and I didn't wanna get cocky.\n\n\"Listen, I didn't come back in here looking for a fight,\" I said. \"Just leave this girl alone, turn around, and walk away.\"\n\nNeither Mike nor his friend moved, and I wondered if maybe they were considering my offer. We'd finally gotten the attention of the cashier and the other customer, a 20-something woman who had her phone out, no doubt filming the whole thing.\n\n\"Nah,\" Mike said. \"I don't think we will.\"\n\nI needn't have worried about his fighting skills. Yeah, he threw his punch a little more quickly than I expected, but that just meant it got a little closer to my jaw before I caught him by the wrist. I rotated his arm clockwise, forcing him to bend over or risk me tearing up his shoulder.\n\n\"C'mon, man,\" I said, trying my best to sound bored. \"Just let it go.\"\n\nHe responded by kicking his right leg back, catching me solid on the shin. It hurt a little, but thankfully he hadn't aimed a little higher. Kicking me square in the kneecap would have been a lot worse. I might have even dropped his arm.\n\nBut he didn't, and I didn't. So instead, I sighed dramatically, much like a mother would at a child who made the same mess for the 4th or 5th time. \n\nThen I punched in him the lower back, directly in his right kidney. I didn't put my full force behind it -- didn't want him peeing blood or anything -- but I hit him hard enough that he collapsed to the ground in pain.\n\nHis buddy started toward me, but suddenly he doubled over, too, clutching his nether regions as his face scrunched up comically. I saw the toe of a black boot between his legs, then watched Katrina lower it to the ground as my would-be attacker faded from the picture.\n\nOk, apparently not defenseless. With that murderous look on her face, maybe not that innocent, either. I thought she was easy on the eyes before, but it was just a pleasant non-factor in my day. Now, I had to admit... I was a little drawn to her.\n\nSame facts as before, though: small chance of a felony, and even if not, definitely too damn young for me.\n\nI heard a noise at my feet and quickly stepped back as Mike started vomiting on the floor. \n\nGuess I'd punched a little too hard. \n\nWe'd attracted a crowd, and most of them groaned and either covered their own mouths or just turned away altogether. It wasn't pleasant by any means, but I'd seen worse.\n\nTwo rent-a-cops pushed through the small gathering. I wanted to say something, but Katrina beat me to it.\n\n\"Oh, now you candyasses show up,\" she said, spitting nails at them as they approached, much to my amusement. \"He already took care of it.\" She tossed her head in my direction, her long, luscious dark ponytail swinging wildly as she did. \n\n\"I think y'all are gonna need the actual cops on this one, guys,\" I offered.\n\n\"On their way,\" one of them replied.\n\nThe next hour was a tad chaotic. The Columbus Division of Police arrived as advertised and, after taking my statement, they got one from the two asshats on the floor, Katrina, and a couple of witnesses. Once they had pictures of the \"crime scene,\" so to speak, the shift manager asked if he could clean up the mess Mike had made.\n\n\"I can do that,\" I offered, reaching for the mop.\n\n\"No, I got it,\" the man said.\n\n\"Seriously,\" I said. \"I made him puke. I don't mind cleaning it up.\"\n\nHe laughed and started cleaning. \"They told me what you did for Trina. If not for this stupid pandemic, I'd shake your hand. I'll be damned if I'm gonna let you clean up.\"\n\n\"Suit yourself,\" I said with a chuckle.\n\nFrom what I could cobble together listening to their statements, Mike used to date Katrina's older sister, but things had ended badly. When he saw her standing in the grocery store, he saw a chance to get back at his ex and have some fun at the same time. During his statement, he'd actually said the words, \"I always heard her little sister spread it around like butter on toast. Thought I'd get me some, and stick it to my frigid bitch ex at the same time.\" I was really hoping he got to spend a night in jail with some other guys who saw no need for baby oil.\n\nAfter the dust finally settled, I wasn't in any trouble. The customer whose groceries Katrina had been trying to pack up was more than happy to share her video with the police, as was another customer who'd filmed the main event. Between that and Katrina's statement, there was more than enough evidence to confirm that not only had I not thrown the first punch, but I'd given him a chance to walk away after he did, not acting in anything other than self-defense until he'd tried a second time.\n\nThey asked me if I wanted to press charges against Mike, but I hadn't decided yet. For one, I wanted both of these fuckers to get in trouble, and thanks to Katrina's wicked soccer kick, I'd never gotten a chance to defend myself from the Hispanic guy. I was pretty sure she was willing to file her own charges, but no one but me had seen the two of them feeling her up before the fight started. They had our statements, but they were going to need surveillance camera footage to have a case.",
        "At any rate, the police had my name and contact information, and they said I was free to go. I looked around for Katrina, but her manager had given her the rest of the day off and it looked like she'd promptly split, because I didn't see her anywhere. I couldn't say I blamed her, but I would have liked the chance to check on her.\n\nI knew my milk and eggs were rotting in my truck, so I headed to the front of the store and left. It had been an interesting day, but it was time to go the fuck home.\n\n\"Did you ever find that lost bag of groceries?\" a voice said from behind me. I spun around to see Katrina sitting on a picnic table off to the right of the entrance. She still wore her bandana, so I couldn't see her lips, but the tightening of her cheek muscles told me she was smiling. She'd obviously ditched the apron in the store, and with it out of the way, her T-shirt stretched a little tighter across her chest than I thought. I'd caught a few glances of her delectable ass during all the paperwork inside and it looked like the top matched the bottom -- both a touch too big for her frame, and both fucking amazing.\n\nThis girl was basically built for sex. Given the social distancing guidelines of the day, this was not the time to be thinking about such things. But facts are facts.\n\n\"Yeah,\" I said. \"Sitting in my truck, just like it was when I asked you about it.\"\n\nShe nodded, but gave me no other reply. She just looked at me for a few more moments before dropping her eyes to the ground. The cheeks had given away the smile before, but now they gave away nothing. Coupled with her mask, I couldn't really use her facial expressions to guess what she was thinking.\n\nThe cashier that had been working her lane sat at the opposite end of the table, and looked back and forth between the two of us like she was watching the Wimbledon finals. She held her mask in her hand, so the coy grin on her face was plain to see. She stood up and took a few steps toward the entrance, but when she turned back to briefly face me, the grin had morphed into a full-wattage smile.\n\n\"Thank you, young man,\" she said. \"That was very noble of you.\"\n\nI just nodded as she disappeared into the store, leaving Katrina and I alone.\n\n\"Hey, you okay?\" I asked, drawing her eyes back up to mine. She'd thanked me a few times, but with all the questioning and commotion around us, I hadn't gotten a chance to really talk to her.\n\n\"Yeah, I think so,\" she said. \"Just a little shocking, that's all.\"\n\n\"Of course,\" I said. \"But you handled yourself real well. With what I saw you do to his little buddy, hell, I dunno if I even needed to get involved.\"\n\nHer eyes danced a little at that.\n\n\"Oh, no,\" she said. \"Kicking that douchebag in the nuts was therapeutic, but seriously, I couldn't have held both of them off for long. He'd already grabbed my ass, and he was moving to my boobs when you jumped in. Who knows what they would have been able to do to me before the cops showed up? So, again, thank you. I really mean that.\"\n\nI might have blushed a little. \"You're welcome.\"\n\n\"And don't you dare say anyone else would have done the same,\" she added with a slight chuckle.\n\n\"Naw, not anyone,\" I said. \"Anyone should, mind you, but some people would rather just film others' misfortunes than actually help them. Can't say I'm sorry that woman had it on video, though. Made things easier with the cops.\"\n\n\"Well, her, I don't blame,\" she said. \"By the time she noticed something was going on, you had it well under control.\"\n\n\"Yeah, but you never know,\" I said. \"If a few more people had called him out, he mighta left without me making him lose his lunch all over the floor.\"\n\n\"I actually enjoyed that part,\" she said with a laugh. I genuinely liked that sound, and I briefly joined her.\n\n\"So, your name tag says Katrina, but your boss called you Trina,\" I said. \"You have a preference?\"\n\n\"Trina,\" she replied. \"Katrina's my full first name, but no one but my mom calls me that, and even then only when she's pissed at me.\"\n\n\"I got a hunch you don't like Kat, though,\" I said with a chuckle.\n\n\"I fucking hate it,\" she spat back. \"That asshole and his friends are the only ones who ever called me that.\"\n\n\"Trina it is, then,\" I answered. She waited for a few seconds, waiting for me to say something else, but finally, she had to ask.\n\n\"And your name is...?\"\n\n\"I guess I thought I told you at some point in there,\" I said with a laugh. \"Houston. Houston Wynn.\"\n\n\"And I'm Trina Cameron,\" she said. \"I'd shake your hand, but you know... anyway, it's nice to meet you, Houston.\"\n\n\"Likewise, on both accounts,\" I replied. \"Though, I wish the circumstances were just a bit different.\"\n\nShe laughed in agreement but didn't say anything. We just looked at one another for a long moment, her sitting at the picnic table and me standing what felt like 6 feet away. It didn't feel awkward in any way, at least not to me. I was genuinely enjoying her company, which was a new experience for me when it came to someone of her generation. I didn't know what she was thinking, but all the sudden, I had something important I really wanted to say.\n\n\"I hope this isn't too forward,\" I said, sitting down across from her but on the far end of the bench, so as to keep some distance between us. Her eyes danced wildly now. It was as if she'd been waiting for me to make the next move in the conversation, but this wasn't going to be that. \n\n\"Those guys were obviously assholes, and I sincerely doubt they'll be the last two you ever meet,\" I continued. \"There are a lot of shitheads out there that just want something, and don't mind pushing their luck if you don't want to give it. Rise above all that shit, just like you did today, and don't put up with it. It's okay to be a little rattled after what happened today, though I'm not really sure you are, to be honest. Either way, it's obvious that you're a very strong young lady, and any man worthy of your attention is going to be just as impressed with your resolve as I am. Don't let a couple of dicks throw you off of you being you.\" \n\nHer eyes glistened a little now, and she slowly reached up to take off her mask. She was smiling from ear-to-ear, and now that I could see her entire face, I was blown away by how pretty she actually was. I mean, yeah, her body was sexy, but her face was beautiful. She had the classic unblemished skin of young adulthood, with high cheek bones and slight dimples leading the way to full, kissable lips. Every so often her tongue would slip between them, and it was hard not to imagine what it would taste like tangling with mine.\n\nSnap the fuck out of it, dumbass. \n\n\"Where did that come from?\" she asked after a moment, not in an unkind way. She sounded surprised, but not offended. \n\n\"I have a seven year-old daughter,\" I answered, removing my own mask so she could at least see my face while we talked. \"I guess I was just practicing for the talk I'm gonna have to have with her in a few years.\"\n\nI chuckled as she looked down at my hands.\n\n\"No wedding ring, though?\" she asked.\n\n\"Nope,\" I replied. \"Been divorced about 4 years now.\"\n\n\"What happened?\" she inquired.\n\n\"Not worth getting into,\" I replied. \"Let's just say that women can be assholes too, sometimes.\"\n\nShe giggled, and it was honestly just as sexy as the rest of her. It was time to go before I did or said something stupid.\n\n\"Listen, Trina,\" I said. \"It really was nice meeting you, and I'm glad I could help out today. Just think about what I said, ok? I gotta get going. Take care of yourself.\"\n\nI was only a few steps away when she called out.\n\n\"Houston?\" The question in her voice made me turn around. \"This might be too much to ask, but.. my car is actually in the shop right now, so I had to take an Uber to work today. Do you think you could maybe drive me home?\"\n\nI grinned wryly. \"Aren't you a little young to be getting into cars with strange men?\"\n\n\"Hey, I'm 19!\" she exclaimed, and I couldn't help but laugh. An old, familiar tune began playing in my head, but of course, she couldn't hear it.\n\n\"I'll be 20 in August,\" she said, continuing to defend herself. \"What's so funny?\" \n\n\"The way you said it, just made me think of a song,\" I explained. \"Just a backstory there. I'm sorry.\"\n\n\"Whatever,\" she said, waving her fingertips at me. \"Besides, you just saved my ass in there. I don't think someone who would do that would do anything to hurt me.\"\n\n\"No,\" I agreed. \"I wouldn't. But there is the little matter of this pandemic... hard to stay six feet apart from me sitting in the passenger seat of my truck.\"\n\n\"You've already touched me twice,\" she said.\n\n\"Once,\" I corrected. \"I touched your shoulder to get your attention while the dipshit twins were bothering you. I think I can be forgiven for that one.\"\n\n\"Yes, but also when we were putting groceries into your cart,\" she added.\n\n\"That was you touching me,\" I laughed.\n\n\"That's not the way I remember it,\" she laughed back. \"Seriously though, they took my temperature this morning, and I've had no symptoms. I don't even leave my apartment except to come here. I'm as clean as I can be without actually being tested. You?\"\n\n\"I've actually been tested,\" I said with a grin. \"One of the guys I work with, his wife got it. So a bunch of us got tested, 'bout 10 days ago.\"\n\n\"And you're grocery shopping, so I guess you tested negative.\"\n\n\"You guess correctly.\"\n\n\"Sounds like we're both OK, then.\" She stood up and walked up next to me, destroying any pretense of a six-foot bubble and peering up into my eyes with her steely blues. \"Any other excuses?\"\n\nI could think of a million other reasons why this was a bad idea. Only one left my lips.\n\n\"Other than the fact that you might be extremely dangerous?\" I countered.\n\nShe blushed as she bit her lower lip. \"That sounds like more of a reason to do it than not to.\"\n\nI met her eyes with mine for a few seconds. I wasn't sure how far I wanted this to go, but I quickly decided I didn't want it to end just yet. \"I'm inclined to agree with you. Let's go.\"\n\nI led her to my truck and walked around to her side, opening the door and holding it for her. \n\n\"You know I can open my own door, right?\" she asked, casting an odd look at me.\n\n\"You just kicked a grown man in the nuts a bit ago,\" I laughed. \"So, yeah, I doubt you'd have much trouble with the door.\"\n\nShe climbed up into the cab and settled into the seat. I shut the door before she could answer me, but it was still waiting on her lips when I climbed into my side.\n\n\"So why, then?\" she asked.\n\n\"Maybe I just wanted to admire the view,\" I said. She blushed deeply and coughed a little at my forwardness, but she also raised her eyebrows as she gazed back at me. I had definitely admired her shapely ass and long legs a bit more than was absolutely necessary while she'd climbed in.\n\n\"You could have just asked,\" she said, poking her tongue out between her lips slightly.\n\n\"Good to know,\" I replied with a dry chuckle. \"Seriously, though, maybe chivalry died sometime between my generation and yours, but just because you don't need me to open your door for you, doesn't mean I don't want to.\"\n\nShe thought about that for a second, then just offered up a \"Huh,\" like it was genuinely something she'd never considered before. She probably hadn't.\n\n\"You want some hand sanitizer?\" I asked, pulling mine from the console again. She nodded, and I squeezed some on her palms, then watched as she rubbed her hands together. I don't know why I was entranced with that simple motion, but I couldn't tear my eyes away. Her fingertips were painted a pale blue, and a brief image of what they'd look like wrapped around my cock flashed through my mind before I could blink it away.\n\nWhen I looked back up to her face, she was watching me carefully. She just smiled, but didn't say anything.\n\n\"So, Trina, where am I going?\" I asked.\n\n\"Ummm,\" she started. \"If it's not too much trouble, could you just drive for a while? I live in an apartment just off-campus, but my roommate is gone for the summer, and I don't really feel like being alone right now.\"\n\nI nodded in understanding and pulled out of the parking lot. I merged onto the highway and set the cruise control.\n\n\"So is Houston your real name, or just a nickname?\" she asked. \"I'm no expert, but it sounds like you could be from there.\"\n\n\"Maybe you are an expert,\" I replied. \"It is my real name, and my parents named me after where I was born and raised.\"\n\n\"That southern accent of yours...\" she trailed off for a second. \"I won't lie. I thought you were hot when you started loading your groceries, but once I heard you talk...\" I raised my eyebrows a bit. \"What?\" she asked.\n\n\"Just surprised at your boldness, s'all,\" I said.\n\n\"You saw me check you out, so there's no reason to act like I didn't,\" she answered. \"Why shouldn't I be bold?\"\n\n\"A lot of younger people are just... not, I guess.\"\n\n\"Please don't make assumptions based on my age, Houston,\" she answered. \"And I promise, I won't do the same.\"\n\n\"Ouch!\" I exclaimed, but I was smiling. \"If you're gonna wound a man like that, you ought to at least offer to fix it.\"\n\n\"Aww, poor baby,\" she grinned back. \"You want me to kiss it and make it better?\"\n\n\"That'd probably do the trick,\" I replied. \"But I rather like my truck, and I'm not sure I'd be able to keep it on the road if you did.\"\n\nShe laughed out loud at that, and I just smirked. She kept smiling at me -- and I liked her smile, so I didn't want her to stop -- but after a second, her eyes lit up a little too.\n\n\"Oh! What song were you talking about? When I told you my age and you laughed?\"\n\nI grabbed my phone and pulled up the appropriate playlist. Pretty soon, the smooth tones of Steely Dan's \"Hey Nineteen\" were playing over my bluetooth. We listened to the first verse together in silence, but her face started to twitch when the chorus began.\n\nHey nineteen\n\nNo we can't dance together\n\nNo we can't talk at all\n\nPlease take me along as you slide on down\n\n\"So we can't dance together, huh?\" she asked, a coy smile now playing on her lips.\n\n\"We can't, but that's not about your age,\" I said. \"Nobody wants to see me try to dance.\"\n\n\"I bet I could teach you,\" she replied.\n\nI bet you could, I silently replied.\n\nThe second verse began, and she was quiet again.\n\nHey nineteen, that's 'Retha Franklin\n\nShe don't remember the Queen of Soul\n\nHard times have fallen on soul survivors\n\nShe thinks I'm crazy, but I'm just growin' old \n\nAs soon as Aretha Franklin's name was mentioned, Trina's face lit up a little and she fished her own phone out of her purse.\n\nHey nineteen\n\nNo we've got nothing in common\n\nNo we can't talk at all\n\nPlease take me along as you slide on down\n\n\"Oh, now it's not just dancing,\" she said, rolling her eyes a bit. \"We have nothing in common? Nothing at all?\"\n\n\"It's a song,\" I replied. \"And in general, no, I don't have a lot in common with most people your age. But... you were right. I shouldn't judge you on a number. And besides... you seem a little different.\"\n\n\"Thank you,\" she said, giving me a genuine smile now. \"And by the way, here.\"\n\nShe handed me her phone. I recognized the Spotify app -- it was what we were using to listen to Steely Dan. The playlist title was \"My Happy Place,\" and it was dotted with songs by the great Ms. Franklin herself. The classics were there, to be sure; \"Respect,\" \"You Make Me Feel Like a Natural Woman,\" \"I Say a Little Prayer\"; but there were a couple of lesser known songs like \"Chain of Fools\" and \"Freeway of Love,\" too. \n\n\"I stand corrected,\" I said. \"You win.\"\n\nShe stuck her tongue out at me -- either to remind me that she was still young despite all of that, or to tease me, or both -- then turned to look out the window.\n\n\"Can I ask you something now?\" She nodded back at me. \"Was this the first time this asshole tried to assault you at the store?\"\n\nShe shuddered a little. \"Yeah,\" she answered. \"I wasn't even supposed to be up front. I'm actually a shift manager, in charge of the produce and bakery areas, but our trucks are a day late this week. I didn't have anything else to do, so I worked check out a bit, then started bagging when my lane closed.\"\n\n\"So he just got lucky to even see you,\" I said.\n\n\"If that's the word you want to use, yeah,\" she answered. \"Hell, I'd only seen him one other time since my sister dumped his ass, at a little dive restaurant near my parents' house, and he talked a lot of crap to me, but didn't try anything. There were a ton of people around that day, though. Not as many today. God... I can't believe that happened.\"\n\n\"Remember what I told you,\" I said. \"Douchebags gonna do douchebag things, ok?\"\n\n\"I know,\" she said. \"And I know I did my best to fend them off, but...\" she trailed off.\n\n\"You were a badass, Trina,\" I said. \"Truly. But it's still a crazy thing. No one deserves to get groped in public like that.\"\n\nShe looked at me with a grateful smile, but also a mischievous twinkle in her eye.\n\n\"I dunno,\" she said. \"Under different circumstances, it could be kind of fun.\"\n\nThat, too, caught me off-guard. This girl had a habit of doing that. \n\n\"Granted,\" I answered. \"But I have this little weird thing about groping women, in public or otherwise. I'd prefer it be consensual.\"\n\n\"Oh, that's a dealbreaker for you, huh?\" she laughed.\n\n\"Yes, ma'am,\" I returned her laugh.\n\nI took an exit after a few more minutes. I didn't know when she'd want to go home, but I tried to stay relatively near the OSU campus.\n\n\"Is it my turn now? Can I ask you something?\" she asked, and I nodded. \"Why did you come back into the store? I really thought you forgot one of your bags.\"\n\nI let out a good belly laugh. \"No, that was just me trying to come up with a good way to get involved in your conversation. I spent a few years in Army intelligence, and a few more years working for various three-letter federal agencies. I'm observant, and I trust my instincts. I watched the assholes leave the store and get in their truck, and I watched them walk back in. And despite what I said in the store, I was reasonably sure they weren't going back for baby oil.\"\n\nShe laughed hard at that.\n\n\"And here I was hoping you'd come back in because you found me attractive, and just happened to find them messing with me.\"\n\n\"No,\" I replied. \"Though, I do find you attractive.\"\n\n\"So why not stay in there and talk to me, when I noticed you looking at me after they left, before they came back in? Is it my age?\"\n\n\"I mean, that might have been a little bit of it, but not really, no.\"\n\n\"Is it the age difference?\"\n\n\"Again, no, but I do think there's a bit larger age gap than you think,\" I said. \"How old do you think I am?\"\n\n\"I really don't know,\" she said. \"Maybe 33? 34?\"\n\nI laughed. \"I turn 40 next month.\"\n\n\"Holy shit!\" she exclaimed. \n\n\"Indeed,\" I said. \"I say that every time I think about my birthday coming up.\"\n\n\"Well, whatever. If it's not my age, or the age gap, then why not come talk to me? I wasn't exactly shy about checking you out.\"\n\n\"No,\" I agreed. \"You were not. I don't think I was particularly bashful about doing the same. But just because a woman looks at me doesn't mean she wants to jump in bed with me.\" \n\nShe blushed fiercely now, but she also looked deep in thought, as if that particular concept was foreign to her. Again... it probably was. As hot as Trina was, the boys she hung around in school were probably the good-looking, cocky jock types that would have no problem telling her exactly what they wanted to do with her. I knew the type, because once upon a time, I was the type. I was still confident now, but I'd learned some restraint over the past 20 years.\n\nShe still hadn't responded, so I finished off the thought.\n\n\"So, anyway, yeah. I was flattered, Trina. But there were no billboards over your head that told me you wanted me to come talk to you.\"",
        "\"Well, I did,\" she said. My right hand lay idly on the center console, and she took it in her left one. The move surprised me, but it wasn't at all unpleasant.\n\n\"And now that you know I'm more than twice your age?\"\n\n\"I--\" she started, but then began laughing instead. \"I guess that's true, yeah.\"\n\n\"It was a long time ago, sure, but I was pretty decent at math in high school. I think I can figure out what half of 40 is,\" I answered. She laughed again. \"And what's so funny?\"\n\n\"Well, for one, you're not 40 yet,\" she replied. \"And just... I just thought of something else, about our ages. Inside joke. But it doesn't matter how old you are. I still don't care. It's a number.\"\n\nI squeezed her hand now. There was definitely something to this girl, something I wanted to learn a lot more about.\n\nWe drove in comfortable silence for another 20 or so minutes, as I just looped loosely around the Ohio State campus, not really paying much attention to where I was going. We stole glances at each other, though she stared a bit more openly, while I tried to keep my looks a little more on the furtive side. It was really refreshing -- so many of the younger generation have to fill every empty gap with noise, no matter how pointless or inane. But Trina seemed happy just riding along and looking at me.\n\n\"Houston?\" she asked, her voice quiet and surprisingly, somewhat shy now. I just looked at her. \"Do you think you could take me home now?\"\n\n\"That was the point of this exercise, was it not?\" I asked, a touch of mirth seeping into my voice.\n\n\"Yes, but...\" she said, trailing off and searching for the words. \"What if I wanted you to do more than just drop me off?\"\n\nThe look on her face told me exactly what she had in mind. Her blue eyes danced wildly now. I'd come no closer to deciding how far I was going to push things, but those eyes...\n\n\"I'm not sure that's such a great idea,\" I answered. \n\n\"Oh,\" she said, her eyes dropping to her lap, but just briefly. She wasn't going to be deterred. \"Well, I'm at least going to give you my number, then, and--\"\n\n\"I said it might not be a great idea, Trina,\" I continued. \"Didn't say I wasn't going to do it.\"\n\nShe blushed again, but after a few seconds she started giving me directions to her apartment. A few minutes later, I parked on the street next to what looked like a typical college apartment building, in the midst of at least three or four blocks full of them. I jumped out of the truck, and by the time I'd made it to her side, she'd opened the door but hadn't quite climbed down yet.\n\nI cleared my throat, and when she looked the question at me, I made a shooing motion toward her legs, suggesting that she swing them back into the cab. She rolled her eyes just a little bit when she figured out what I meant, but there was a smile on her face, too. She closed the door, and I waited a couple seconds before opening it again. She took my hand as I helped her down to the sidewalk.\n\n\"Sorry, Mr. Old-Fashioned,\" she said. \"I'll try to remember next time.\"\n\n\"Oh, there's going to be a next time, huh?\" I chuckled. She just grinned and raised an eyebrow, waiting for me to offer up a challenge that never came. \n\nWe took the stairs to the third floor, and I was more than happy to follow her down the corridor. She looked back over her shoulder and caught me staring. I looked up at her eyes to return her smile, but then pointedly returned my gaze to her luscious ass. She just laughed and threw a slight shimmy into her step.\n\nThe first thing I noticed when we entered her apartment was the sheer volume of red. Everywhere.\n\n\"Ugh,\" I groaned. \"It's like Ohio State University vomited all over your apartment.\"\n\nThere were football posters on the walls, OSU blankets on the couch and magnets on the fridge. Anything that could have an OSU logo on it, did. \n\n\"That's THE Ohio State University, mister,\" she said, poking me in the chest. \"And yeah, it's almost like we're literally one minute from campus, huh?\"\n\n\"I live a couple miles from the other side of campus,\" I said. \"But I don't drink that nasty Buckeye kool-aid.\"\n\n\"Well, I do,\" she answered. \"You did notice my mask at the store, right?\" She reached into her purse, took out the repugnant bandana she'd been wearing, and tossed it on the kitchen counter.\n\n\"I did,\" I said solemnly, now standing on the other side of the counter from her. \"I was just hoping you'd come to work and realized you forgot your mask, and since you had to come up with something, you just grabbed some ratty handkerchief off the ground in the parking lot.\"\n\nShe laughed. \"No such luck. Even if I wasn't born and raised here, they're actually paying me to drink that kool-aid.\"\n\n\"What, you mean, like a scholarship?\" I asked.\n\n\"Yeah, pretty close to a full-ride,\" she said. \"Majoring in engineering.\"\n\n\"I run a construction company,\" I said. \"We work with the teachers and some of the grad students over here sometimes. That's not an easy program to get into, Miss Katrina. Consider me impressed.\"\n\nShe ate the compliment up and beamed back at me.\n\n\"Still, I think I'd rather go to a school with a lesser program and save my dignity,\" I finished, and she couldn't help but laugh again.\n\n\"Lemme guess,\" she started. \"Michigan fan?\"\n\n\"Aw, hell no,\" I said. \"Texas, remember? Hook 'em 'Horns!\" I flashed the Longhorn hand symbol.\n\n\"So you're a fan of a team that hasn't been relevant since 2011,\" she said, nodding as if she suddenly understood. \"It's jealousy. Got it.\"\n\nI grinned back. This girl could give as good she got. \n\n\"No, not really,\" I explained. \"I think if you ever left this Columbus bubble, you'd find your team is kinda like the Yankees. The only ones that don't hate you are the ones that love you.\"\n\n\"Well, we have a way to go match the Yankees' 27 rings,\" she said. \"But the Buckeyes have won 8 national titles. Almost a third of the way there.\"\n\nI'm sure my jaw dropped open.\n\n\"Ok, first off, I hate the Yankees,\" I said.\n\n\"Yeah, me too,\" she admitted. \"The Indians haven't won a title since before your parents were born. See? Jealousy. And for you... the Astros?\"\n\n\"Used to be,\" I said. \"Until this past offseason, when all that sign-stealing shit came out. I'm here for the long haul, so I switched allegiances to the Indians myself. I can't stand cheaters. Of any kind.\"\n\n\"I'll keep that in mind,\" she said, licking her lips just a little and scooting around the end of the counter until she was standing just a few feet away.\n\n\"But seriously, any woman who can just casually drop how many rings the Yankees have into a random conversation... age be damned, that woman is worth looking at a little more closely.\"\n\n\"About time you noticed,\" she said, closing the gap and trailing her fingers lightly over my forearm. \"I'm gonna run to my room and change. There's drinks in the fridge. Help yourself.\"\n\nI dutifully watched her walk away again, then turned my attention to the fridge. There was a case of Deer Park water on the bottom shelf, and I grabbed a bottle, killing half of it in one gulp.\n\nSo what the fuck was I actually doing here?\n\nAfter my last -- and only -- experience getting involved with someone Trina's age, I swore I'd never hook up with someone more than 10 years younger than me ever again. Sex simply for the sake of sex had long since lost its appeal to me, and I just couldn't connect with the younger generation. Sure, there was a time when all I cared about was brand new music, who was dating who, and what other people thought of me. That phase had ended somewhere around the time Trina was born, in the arid deserts of Afghanistan. \n\nI remembered talking to some grizzled first sergeants and older officers back in those days, and to a man, they all said sex appeal, while still important, was nowhere near the top of the list of things they'd want from a woman if they found themselves on the market again. It sounded odd to me at the time, but now, I'd become one of them.\n\nBut Trina wasn't just sex appeal. Judging by the confrontation at the store, she had a fighting spirit and she knew how to stand up for herself. Obviously she could hold her own in a verbal sparring match with me, as I'd already seen a couple of times. She made me laugh without even trying, and judging by her Aretha Franklin knowledge, she recognized that important things in pop culture had, in fact, occurred prior to her birth. I was still blown away by her sports knowledge, and if her college experience was any indication, she was smart as a whip. Yeah, she had her youthful moments -- not knowing why I'd want to open her door, and expecting me to treat her like a piece of meat -- but all in all, she seemed more mature than a lot of women I knew 10 years her senior.\n\nAnd yeah, she had sex appeal. Fucking boatloads of sex appeal.\n\nFuck it. Stop overthinking shit. \n\nTrina had an Amazon Echo plugged in next to the toaster, so I decided to fill the silence with some tunes.\n\n\"Alexa, play music by the Police.\"\n\nI watched the hockey puck turn blue. \"Playing the Police, on Amazon Music.\" One of their underrated tunes from the early 80s, \"Spirits in the Material World,\" spilled out of the speaker, and that was as good a soundtrack as any to kill off the rest of the water bottle.\n\nThe song was maybe half over when I heard a door open just past the kitchen. Trina padded into the room barefoot, with toes painted the same light blue as her fingernails. Her gray shorts only ran about halfway down her thighs, and I took my time admiring her mostly bare legs. She wore a red Ohio State T-shirt that was a size too small, so it gave me a clear outline of her constricted breasts and it left the lower half of her stomach exposed for my viewing pleasure. Her dark hair was still swept up into a ponytail that hung well past her shoulders, and her face was void of makeup except for a very pale shade of pink on her lips.\n\nShe saw me staring -- she'd have had to been blind not to -- and spun around to let me see the other side. The shorts framed her ass exquisitely, and when she looked back over her shoulder to make sure I was still paying attention, her ponytail swung back and forth. She winked at me before going to the fridge herself.\n\n\"You want some iced tea?\" she asked.\n\n\"No, I just finished a bottle of water, actually,\" I answered.\n\n\"Want another one?\"\n\n\"Sure.\" I answered before I remembered that the case of water was on the bottom shelf, meaning she had to bend over to get to it. Considering that was most likely why she offered anyway, I took another nice, long look at her ass. \n\n\"Oh!\" she exclaimed standing up and handing me the water. I wondered if it'd be too obvious if I just dumped it all over my crotch. \"This is the guy who sings \"Every Breath You Take,\" right? Sting? It sounds like him anyway.\"\n\n\"He's the one singing, yeah,\" I said, pausing as I opted for the more traditional use of the water bottle. \"Before he went solo, he led a band called the Police. This is them. Actually, \"Every Breath You Take\" was the Police, too.\"\n\n\"I still get points for recognizing the voice, right?\" she giggled.\n\n\"You do,\" I agreed, \"but you can stop worrying about all that, Trina. You already won the game, by mercy rule. I don't care about your age anymore.\"\n\n\"I'm glad to hear that,\" she said with a sincere smile. \"Why did you in the first place?\"\n\nI sighed. I wasn't sure this was really the time to bring up the past, but what the hell.\n\n\"My first time back in the dating scene, a couple years after my divorce went final,\" I said. \"I only moved here because my ex-wife did, to be near her parents, and I wanted to be as close to my daughter as possible. So I didn't know anybody here, and I'll be damned if I was gonna try to figure out that swipe-left, swipe-right shit in my late 30s.\"\n\nShe laughed heartily.\n\n\"So some of the young guys at the job site decided to set me up with one of their friends,\" I continued. \"Had me over to some keg party, where just about everyone in attendance was literally half my age, and remember, this was two years ago. The girl they wanted me to meet was this 19-year-old named Morgan. And hell, she was hot, but even when I was that age, I rarely jumped directly into bed with a girl, ya know? I tried to talk to her, get to know her a little bit first. I swear, for an hour, all we talked about was makeup, where all her high school friends were going to college, and the Jonas Brothers.\"\n\nShe giggled even harder now.\n\n\"She made it clear from the beginning that she was, as she called it, 'DTF,' though I had no fucking clue what that meant at the time,\" I said.\n\n\"Down to fuck,\" Trina nodded, still trying to get her laughter under control.\n\n\"Yeah, found that out later,\" I said. \"Told me she was into older guys, and I was hot... I guess she thought being so much younger than me, I was just happy to be in her presence.\"\n\n\"Let me guess,\" Trina said. \"You left her ass at the party.\"\n\n\"I wish I could say that I did,\" I said with a rueful smile. \"At almost any other point in my life, I would have. But it had been almost three years for me, and, like I said... she was hot. Anyway, the sex was decent, but not great, and the little bit of conversation I tried to strike up afterward fell flatter than a football at a Pats game. I decided it might be best to stick a little closer to my own age group from that point on.\"\n\nShe chuckled again. \"I can understand that, but still, it's just one encounter with one girl, right?\"\n\n\"True.\"\n\n\"And even with the negative parts, it still had to be great for your ego, right? Your first time back on the horse, and you bag a 19-year-old hottie?\"\n\n\"Also true,\" I grinned. \"I'm learning I have something of a talent for that.\"\n\nShe walked over to me and ran her fingernails lightly across my chest, through my polo shirt.\n\n\"Well, you haven't bagged me... yet.\"\n\n\"Speaking of that,\" I smirked. \"What exactly is all this about for you?\"\n\n\"I thought it was pretty obvious, Houston,\" she answered.\n\n\"I mean, if this is just about being grateful for what happened at the store...\" I trailed off.\n\n\"No,\" she said. \"I've already said thank you for that a dozen times. I won't lie... my adrenaline was pumping pretty good, and I don't think it's really stopped yet. But you had my juices flowing well before you rescued me.\"\n\nI just raised my eyebrows at that.\n\n\"You see... what was her name? Morgan?\" I nodded. \"She had the right idea. I'm into older guys, too, and you are more than just simply 'hot.'\" She put her fingers up in quotations for emphasis. \"However, I'm not so full of myself to think that you should just be happy to be near me because of our ages. And I think I've proven that I can hold my own in a conversation.\"\n\n\"You have at that,\" I agreed. \"So, older guys, huh?\"\n\nShe laughed again. \"I mean, not all of them, of course. I still want a man who looks good, and one who's active and in shape.\" She left her fingers wander across my biceps and down my forearms, and I sucked in a sharp breath when she jumped across to my abs. I no longer had the six-pack of my youth, but it was still hardened muscle. \"Mmm... no problems there.\"\n\nI gently laid my hands on the waistband of her gray shorts. \"Good to know.\"\n\n\"I heard what that jackass said at the store, and no, I did not 'spread it around like butter on toast,'\" she spat. \"But I've had my share of sex with boys my age and I wasn't impressed. Most of them didn't give a shit whether I enjoyed it or not, and even the one or two who did, they were too timid or inexperienced to really do anything about it. It didn't get much better in college, and around Christmas break last year, I decided I was done with it.\"\n\n\"Crushing the hearts and spirits of the entire Ohio State male undergraduate population, I'm sure,\" I replied, lightly stroking her waist and her lower back.\n\n\"Maybe so,\" she shrugged. \"Just after the second semester began, I hooked up with one of my friends' professors, her World History teacher. He was only 29 or 30, but even that little bit of a difference was life-changing. It stopped just short of the mind-blowing experience I've heard sex can be, but it was enough to know that I needed to be focusing all my energy and attention on more experienced guys.\"\n\n\"Just the one time with him, huh?\" Her hands were in my short brown hair now, and mine had slid onto her generous ass, lightly squeezing it through her shorts.\n\n\"Well, twice,\" she said. \"Even though he isn't my professor, he was still worried about what might happen if he got caught with any student. I managed to talk him into it one more time, but I understood his concerns, and I left him alone after that.\"\n\n\"Awfully kind of you,\" I said.\n\n\"I thought so,\" she said. \"That didn't stop me from noticing each and every older man on campus, though. The coaches, the administrators, the computer lab guys, and yes, the professors... of course, a lot of them were too old, or not in shape, or just not attractive, but it's a big campus, so I found plenty to look at. It got to where I would ask my friends to help me rate them when they walked by. That's what I was laughing about earlier.\"\n\n\"Your little inside joke?\" She'd wrapped her arms around my back and just laid her head on my shoulder as I got more aggressive with her ass, kneading it vigorously and occasionally slipping my fingertips under the waistband and grasping bare flesh before pulling back out.\n\n\"Yeah. One of my friends, Sierra, she just doesn't get my thing. Well, none of my friends do, really, but she likes to bring it up the most. Mmm...\" she moaned, pausing briefly to enjoy my fingers. \"Anyway, one day after a group of professors strolled by, she saw me looking after them, and blurted out, 'You better be careful, Trina, or you're going to end up fucking some guy twice your age.'\"\n\nI couldn't help it -- I laughed right along with her now.\n\n\"Is that what we're about to do, Trina?\" My voice was almost a growl now, yet barely louder than a whisper.\n\nShe bit her lip and moaned again. \"If you keep rubbing my ass like that, Houston, we're about to do whatever the fuck you want.\"\n\nThat sounded like an invitation if I'd ever heard one. I grabbed her ponytail and used it to tilt her head back, and while her eyes flared up in hunger at the motion, they snapped shut the instant I pressed my lips against hers. The kisses were light and tender at first, but they soon grew more intense and enthusiastic. When I sucked her lower lip between mine, she moaned into my mouth. When she forced her tongue between my lips and pressed it against mine, I moaned back.\n\nI wrapped my arms around her back and turned us around, pushing her up against the counter and trailing my lips across her cheek, down her neck and onto her collarbone. When I met resistance in the form of her T-shirt, I quickly tugged it up and over her head, leaving her in just a lacy black bra that I couldn't imagine was part of her original work attire. She cried out as I softly bit her shoulder, and she made soft, cute little noises as I continued down her left arm, not stopping until I reached her fingers. \n\nShe squirmed a little when I nipped at the soft flesh below her rib cage, and I kissed across her belly, relishing the soft curves there but pushing hard enough with my lips to feel the muscle sheathed just below. I ran my hands up her sides, stopping just short of her tits. I could see her nipples harden in anticipation.\n\nI'd tried to use caution with this girl, knowing that I really wasn't down for some kind of one-night stand roll in the hay. That would have to wait for later, though, because this young woman had officially gotten to me, and as much as I knew she wanted me, I wanted her just as much.\n\n\"I'm not shy, Trina,\" I said, my words occasionally muffled by her skin. \"Like you said, I'm going to do whatever the fuck I want to you.\" Her eyes danced wildly again, and she licked her lips. \"But I promise you, I'll stop whatever I'm doing at any time. All you have to do is tell me to, with your words, with your hands, with body language, whatever you can use. OK?\" My eyes slid up to look at her face; flushed, almost glowing, but definitely smiling.",
        "\"OK,\" she agreed. \"But I don't--\" She didn't get more than that out before my hands slid up to capture her bra-encased breasts. I took note of the way her nipples pressed desperately against the lace, straining to break free and make one-on-one contact. \"-- d-don't think that's going to be a problem.\"\n\nI grinned back, though I doubt she could see it with my face pressed against her right thigh, nibbling at the soft flesh through her shorts. I dipped down to where the shorts stopped and licked her bare thigh, then pushed the material upward with my tongue until I reached the cloth of her panties. The scent of her arousal wrapped around my face like a warm, wet blanket as I switched legs, dragging my tongue upward on the other side. I didn't let the panties stop me this time, though; the loose, flimsy cotton was more than accommodating, moving easily until my mouth was just to the left of her pussy.\n\nI gave her tits one last squeeze, then dropped my hands back onto her ass, squeezing and kneading the pliable globes as I continued to bathe her inner thighs and pelvis with my tongue and teeth. I felt her fingers thread through my hair as I caught a particularly sensitive spot.\n\n\"Such a fucking tease,\" she gasped.\n\n\"I agree,\" I mumbled. I backed off just enough to spin her around. As if she was reading my mind, she put her hands on the edge of the counter and thrust her ass out. I roughly squeezed her cheeks and buried my face between them. \"You've been taunting me with this ass for hours now.\"\n\n\"Aww,\" she mocked. \"Maybe you should punish me.\"\n\n\"Maybe I should,\" I answered. I lightly swatted her right cheek through her shorts. \"I wanted to see it way back at the store, when you were bagging my groceries.\"\n\n\"Mmmm,\" she hummed. In reality, she'd been guilty of nothing more than standing there while possessing an awesome ass, but I wasn't going to let the facts get in the way of a good spanking. \"Harder.\"\n\n\"Then you asked me for a ride, and shook this little ass at me getting into my truck,\" I continued, punctuating it with a harder swat on her left cheek.\n\n\"Oooh,\" she gasped. \"That was your fault, though. If you hadn't been such a gentleman and let me close my own door, you wouldn't have been standing there to see it.\" She looked back over her shoulder at me, and dropped her voice. \"Just a little bit harder.\"\n\n\"Then when you got out of my truck...\" Smack! \"And when you walked down the sidewalk...\" Smack! \"And up the stairs...\" Smack! \"And then in the hallway...\" Smack!\n\n\"Fuck,\" she spat out. \"You're making me so fucking wet.\"\n\n\"You knew I was watching you, all the way, didn't you?\" I asked, knowing the answer. She whimpered back a 'yes' anyway. \"And you loved it.\"\n\n\"I did,\" she admitted. \"I knew just from the way you were looking at it that you knew just how to appreciate it.\"\n\n\"Is that why you did the little spin for me, when you came back into the kitchen?\" \n\nSmack! Smack! Smack! Smack! She cried out as I landed two shots on each of her pliable cheeks.\n\n\"And then why you offered to get me a water from the fridge?\" I gave her two more swats.\n\n\"I was just trying to be nice,\" she pouted, but I could hear her stifling a giggle. She shook her ass at me, and I groaned. I used both hands to spank both cheeks at once, then slid them up the legs of her shorts and got my first handfuls of her bare ass. I could feel the warmth radiating off of her.\n\n\"Uh huh,\" I said. \"I know better. It was just all part of the tease, wasn't it?\"\n\n\"Mayyyybe,\" she said, moaning as she dragged out the word. \"I'm not teasing now, though. Nothing's stopping you from getting what you want.\"\n\n\"You're right.\" She probably expected me to continue my teasing, but I didn't -- I quickly yanked her shorts down, taking her panties with them and pushing both below her knees. \n\n\"Jesus, Trina,\" I groaned. \"You have the perfect ass.\"\n\n\"Mmm,\" she cooed. \"I'm glad you -- oh!\"\n\nI gave her a couple hard smacks on each bare cheek before she could finish her comment. I spent the next couple of minutes bathing the red spots on her cheeks with my lips and tongue, drawing appreciative gasps and giggles as I roamed around. \n\n\"You know there's -- ooh -- something in between them, right?\" she complained.\n\n\"You know you're impatient, right?\" I said with a grin.\n\nI ran my hands up and down her legs, from her thighs all the way down to her ankles, enjoying the smoothness of her skin and the firmness of her muscles under my fingers. I licked my way south from her ass down her upper thigh until I reached her knee, then slowly worked my way back up. I stopped at the junction between her thigh and left cheek and nibbled there for a few seconds, drawing a gasp from her.\n\n\"Oh my God,\" she exclaimed. \"I don't think I've ever been this turned on, Houston. I feel like I'm flooding.\"\n\nShe wasn't wrong. Her lips glistened with all the moisture, and there was a small stream oozing from her opening. Several rivulets of juice trickled down her inner thighs, and I licked up as many of them as I could.\n\n\"I can see that,\" I mumbled, barely grazing her outer lips with my tongue before dragging it slowly back up to her right cheek. I teased her opening with my middle finger, drawing out her juices and rubbing them around her outer lips before finally sinking the finger inside her.\n\n\"Fuuuuck, Houston,\" she moaned. She lifted her right foot and lightly stomped it back down on the linoleum floor. \"You're killing me here.\"\n\n\"Awww, poor baby,\" I pandered. I stood up again, slowly fingering her with my right hand but moving the left one over her ass and onto her back. Her ponytail lay neatly on her bra, and I grabbed it and tugged gently. \"I thought I told you to be patient, hon.\"\n\nShe gasped as I forced her to look up. \"I'm trying,\" she whined, \"but you're playing me like a fucking guitar.\"\n\nI tugged harder, and she moaned again. \"And you're making beautiful music, too,\" I said, my voice a little softer and a little raspier this time.\n\nI moved my finger in and out of her a bit quicker now, but kissed up her back until I reached her shoulder. Thanks to my grip on her hair, I could whisper in her ear now.\n\n\"Do you want to cum now?\" I asked. \n\n\"You know I do,\" she said breathlessly. I pulled my finger out of her, and she whimpered at the loss, but I quickly replaced it with my thumb. \n\n\"Do you want me to make you cum now?\" I asked.\n\n\"Fuck, please,\" she moaned. \"Please make me cum.\"\n\nI slid my index and middle fingers forward and gripped her clit between them, applying just the slightest pressure as I kept my thumb sawing in and out of her. My left hand dove underneath her and snaked inside her bra, firmly squeezing her left breast and pinching her nipple roughly.\n\n\"Aaaaiiiiiiiiiii--\" Trina pressed her face down, screaming into the counter as her orgasm racked through her. Her legs started to shake, and I pressed my hips against her ass to ensure she didn't slide off my fingers and hit the ground. I moved away from her clit and pushed my index finger back inside of her, pumping slowly as she rode out the waves. \n\nWhen she finally stopped spasming, I removed my fingers completely and ran my right hand up her ass and onto her back. My left hand reluctantly left her breasts and wrapped around her stomach, holding her tightly as she came back to earth. I kissed softly across her shoulder blades and up onto her neck.\n\n\"It looked like you enjoyed that,\" I said with a smile she couldn't see.\n\nShe laughed. \"Ya think?\" She slowly turned around and leaned back against the counter as much as she could with my arms around her shoulders. \"I was actually kind of hoping you'd, ya know...\"\n\nI raised my eyebrows, slightly surprised at her sudden hesitation but waiting for her to overcome it.\n\n\"I kinda wanted you to lick me down there,\" she finally said. She wasn't looking at me when she started the sentence, but she was by the time she finished it. Her lips were curled in a shy smile.\n\n\"Why was it hard to tell me that?\" I asked.\n\n\"You know... most men don't like to do that, so...\"\n\n\"Most boys might not want to do it, Trina,\" I corrected her. \"A man is usually going to be willing to do anything you want, within reason, anyway.\"\n\nI leaned down and claimed her lips with mine, sliding my hand behind her neck into her hair as I pushed my tongue into her mouth. \n\n\"And for the record,\" I said, only pulling back enough to get the words out, \"going down on a woman is one of my favorite things.\"\n\n\"So why didn't you, then?\" she asked.\n\n\"Does it look like I'm leaving?\" I chuckled. \"We'll get there. But you were already bitching and moaning about me teasing you...\" She lightly punched me in the shoulder as she giggled. \n\n\"When I get down there, I don't want to be rushed. I want to spend as much time licking that tasty little pussy as I want, and you...\" I paused to trail kisses down her jawline. \"...you weren't going to let me. You needed to cum hard and quick the first time.\"\n\n\"Mmmm, I came so damn hard,\" she agreed. \"I think it's your turn now.\"\n\nI let her push me backward until I was leaning against the sink. She pulled my orange polo shirt up and over my head, and wasted no time unbuckling my belt and lowering the zipper on my cargo shorts. My cock had basically been at full mast since she bent over at the fridge, and she rubbed it frantically through my boxers. \n\nShe kissed my chest and upper arms as she pulled my cock through the hole in my boxers and stroked it. She started slow to adjust to my length, but before she long she was pumping for all she was worth. She was going as quickly as I had gone slowly, and I grinned at her youthful enthusiasm.\n\nAlexa had continued playing songs by the Police, but a new one started now, and I couldn't help but laugh. She looked at me quizzically.\n\n\"Just the song,\" I said. \"You'll understand in a second.\"\n\nShe leaned up and kissed me again as she worked my cock. A few drops of pre-cum had escaped the tip, and she used them to glide her hand effortlessly up and down my shaft. I generally had decent staying power, but it had been a long time for me, and for all her youth, she definitely knew how to handle a cock. I put my hand on her wrist to slow her down a little bit and I could feel her smile against my lips.\n\nSting worked his way through the first verse, but when I heard him getting near the chorus, I pulled back from her lips.\n\n\"Listen.\"\n\nEvery little thing she does is magic\n\nEverything she do just turns me on\n\n\"Everything I do turns you on, huh?\" she chuckled.\n\n\"Yeah,\" I agreed. \"Even kicking the guy in the nuts... I gotta say, even that was hot.\"\n\nShe morphed to a full-blown laugh now.\n\n\"I mean, as long as you don't do it to me, and all.\"\n\n\"Don't give me a reason, and I won't,\" she grinned, then bent her head back down to my chest. She licked my left nipple and gently sucked on it as Sting kept going, and she went back to pumping my cock again. She seemed to understand that she didn't need to go at mach speed to make things enjoyable, as her pace was slightly slower than before. She kissed my other nipple then moved down my torso, licking my belly button and exploring the rest of my abs with her tongue.\n\nShe kept it up for another few minutes, until Sting was wrapping up the song. When he started shouting the word \"magic\" over and over again, she got a devilish grin on her face and licked her lips.\n\n\"I'll show you magic,\" she said, then started sinking to her knees in front of me. I grabbed her wrists -- lightly, but enough to stop her from getting to the floor.\n\n\"Pump the brakes just a bit on that, hon,\" I said. She looked a bit hurt. \"Not that I don't want you to. Of course I do. I'm not a fucking moron.\"\n\n\"So, then...\"\n\n\"I was at the job site at 5:45 this morning, and I didn't take a break until we finished around 2 o'clock,\" I said. \"It was about 97 degrees around noon. I've been sweating all day, and I'm sure I smell awful. I need a shower before you get all up close and personal with me.\"\n\n\"Those aren't construction clothes,\" she said, motioning to the pile of fabric in front of the fridge. \"You didn't shower before you changed?\"\n\n\"I wouldn't have even changed if someone hadn't spilled a bunch of red paint on my work shirt,\" I said. \"I was planning to run 5 miles when I got home from the store, so I didn't see the point in showering. Of course, someone messed all that up.\"\n\n\"Awww, poor baby,\" she said, mimicking my earlier fake sympathy. \"I think I can help you get some cardio anyway though.\"\n\n\"Oh, are you gonna come running with me?\" I jokingly asked. \n\n\"Well, I was a long-distance runner in high school, at least until the girls got in the way,\" she said, cupping her boobs for emphasis. \"So I'm pretty sure I could keep up. But I was thinking of something a little more... horizontal.\"\n\n\"Hey, I can do vertical, too,\" I said. \"Maybe even diagonal, depending on how flexible you are.\"\n\nShe giggled. \"That sounds like fun. But first, yeah, we can grab a shower. I can think of much worse things than seeing all these rippling muscles all soapy and wet.\"\n\nI followed her down the hall to the bathroom. The room itself was pretty cramped, but the shower was not what I expected for a college apartment. It was a stand-alone shower with a glass door, but it was a bit wider than usual, and included a bench seat in the corner opposite the shower head. Trina turned the water on then turned back toward me while she waited for it to warm up. She crouched down to remove my boxers, and was greeted by my angry erection, missing her chin by maybe an inch as it sprang free from confinement.\n\n\"Oh, my,\" Trina said, fulling taking in the size of my cock. I wasn't abnormally long -- maybe 7 inches at most -- but I'd been told by several women that it was the widest cock they'd even seen. \"That's gonna feel amazing.\"\n\n\"I'll make sure of it,\" I responded, pulling her in for another kiss. She let it go on for just a few seconds before she pushed me backward into the shower. I grabbed her hand and pulled her with me, even though she still had her bra on. She squealed as the hot water cascaded over both of us and splashed off of us into the bathroom behind her.\n\n\"Now who's impatient, huh?\" she said as she poked me lightly in the chest.\n\n\"Just like you,\" I started, \"I can think of much worse things than seeing your chest all wet and soapy.\"\n\n\"Gonna have to get this off, first,\" she said, plucking at the now-drenched fabric covering her tits. I'll admit that it would have been easier to take off her when it was still dry, but it was more fun this way. It took a few tries, but I got to liberally paw at her breasts each time I pushed the fabric up. Finally, both sides sprang free at once, leading to a tit drop that most porn producers would have been proud of.\n\n\"Holy shit, Trina,\" I said, admiring her free-swinging tits as she pulled the bra up over her head. \"These are fucking perfect, too.\"\n\nI didn't let her answer -- I just attacked. I'd chided her for her hastiness a few moments ago, but I was moving at breakneck speed, too, quickly capturing one nipple between my lips, sucking and biting it for a brief moment before switching to the other. I moved back and forth probably 4 or 5 times in the first minute they were on display to me.\n\n\"You really do like them, huh?\" she asked unnecessarily, pressing my face into her as if I had any intentions of pulling away. They were either large Cs or small Ds, very firm but still big and heavy enough that they hung off her chest a little. I pressed my face between them and she used her arms to squash her boobs against my cheeks, trapping me there briefly. I wasn't complaining.\n\nMy worship over for the time being, I reached over and pulled the door closed while she poured body wash onto her hands. She lathered up her boobs and used them to rub soap all over my chest, and her hand slid down between our torsos to grip my cock, getting that all soapy as well. I grabbed some suds from her chest and reached around to her perfect bubbly ass, squeezing and kneading her muscles and using them to pull her tightly against me. When she left my cock and wrapped her arms around my back, it pressed greedily against her pelvic bone, and I could feel extra heat where she lightly grinded her crotch against my upper thigh. The shower cube was a tight fit for two people, but as tightly as we were pressed together, I barely noticed.\n\nWe began making out under the hot spray, and when we were finished, the water had rinsed most of the soap from our bodies, leaving us squeaky clean -- physically at least. One look in her eyes told me just how much dirtier she wanted to get, and for my part, it was all I could do not to push her up against the wall and just claim her.\n\nI might have done just that, but she moved first, guiding me backward and pushing gently until I was sitting on the shower bench. My cock jutted up lewdly from my lap, and after she adjusted the shower head so that the water rained against the wall opposite the door, she dropped to her knees in front of me. Her legs were just a touch too long to fit, so she nudged the door open with one foot, stretching her legs a few inches into the bathroom.\n\n\"Time to pick up where you forced me to leave off,\" she said, then quickly descended onto my dick. She had no intentions of using any of the teasing foreplay I'd given her in the kitchen -- she took the first three inches into her mouth at once and swirled her tongue around them, twisting her hand around and frantically pumping the remaining 3 or 4 inches. After a minute or two of that, she tried to see how much she could fit in her mouth, but her lips were already stretched as far they could go, and she gave up after fitting maybe 5 inches inside.\n\n\"This is gonna take a little getting used to,\" she said when she pulled off, looking at my cock in awe. \"Hopefully you'll let me practice some more.\"\n\nShe took me back in her mouth and was content to just take what she could comfortably, using her hands to work on the rest. I filed her last statement away for later, and just enjoyed the sensations. After a few more minutes, though, she pulled off again.\n\n\"I guess I'm not as good at this as I thought,\" she said. \"Every guy I've done this to has popped by now.\"\n\n\"What did I tell you, young lady?\" I asked, mock-scolding her. \"I'm not like other guys. That's why we're here, right?\"\n\nShe blushed a little and nodded.\n\n\"You're doing great, Katrina,\" I said, using her full name for emphasis. \"If you couldn't tell, I'm hard enough to smash through a plate-glass window right now. It's not all about making me cum -- it's about both of us enjoying ourselves, and I am. You don't have to finish me off this way.\"\n\nShe smiled, but that look of steely determination was back on her face.\n\n\"I'm not like other girls, either,\" she stated firmly, then went back to work. Despite her insecurities, she actually was quite talented at what she was doing. I have no doubt she'd have made me cum from it eventually, but after a few more minutes, I got an idea.\n\nI slid my hand onto her shoulders, softly caressing them for a moment before slipping one further down her back. When I reached the end of her dark, wet ponytail, I wrapped it around my hand until I could pull directly on the spot where the hair tie had it all bound up. Her eyes flickered up toward mine, and when I pulled on it, they flared up excitedly. She let out a deep, guttural moan, and I felt it at the base of my cock.\n\nShe'd seemed to really enjoy every other time I pulled her hair, and this was no exception. Every time I tugged on it, she hummed, or moaned, or whimpered, and the resulting sensations brought me that much closer to the edge. She could feel me getting harder in her mouth, and that spurred her on and made her that much more enthusiastic, which in turn got me more excited, and made me pull just a touch harder. It was a tidy little circle of pleasure, and it didn't take long until I was ready to blow.",
        "\"Trina, that's... really fucking awesome,\" I managed, suddenly finding the simple act of stringing a few words together a challenge. \"Gonna make me cum.\"\n\nShe quickly pulled off my cock and grinned wickedly. She stroked me for all I was worth, leaning back just a little. It put her head closer to the streaming water, but also put her gorgeous tits on display for me, and I knew what she wanted.\n\n\"Cum for me, Houston,\" she said. \"Splatter it all over my tits.\"\n\nThe hand in her ponytail tightened, eliciting another groan from her, and that sent me over the cliff. My hips jerked up slightly and the first shot landed on her collarbone. She adjusted her aim and watched with a wide-eyed smile as shot after shot of my cum painted her tits liberally. By the time I was finished, it was dripping off both nipples and streaming between her breasts down to her bellybutton.\n\nShe scooped a fingerful off her right breast and licked it clean before grinning at me again.\n\n\"Seems like you had a little something saved up for a special occasion,\" she said.\n\n\"Not exactly,\" I said. \"Just don't spend a lot of time with self-love, if you know what I mean.\"\n\n\"You don't jerk off?\" she asked, her tone half-shocked and half-skeptical.\n\n\"Didn't say that,\" I replied. \"But I'm not one of those hormonal teenagers in your English class. I don't need to do it four times a day. Probably been a week or so.\"\n\n\"I can tell,\" she answered, releasing my cock and rubbing her breasts, massaging the cum into her skin. After a second, she leaned back, passing her head through the spray until it ran down over her shoulders and onto her chest, washing away what she hadn't already taken care of. \"I hope that was good for you.\"\n\n\"Now you're just fishin' for compliments,\" I said.\n\n\"Am I gonna catch one?\" she asked with a sly grin.\n\n\"You just caught like 6 or 7 of 'em,\" I answered with a chuckle. \"Pretty sure you tasted at least one. But that was really damn good, so I think I can give you one more.\"\n\nShe beamed as I reached down and pulled her toward me. She hopped up onto my lap, and I pulled her down for another kiss. This one wasn't patient or tender -- it was heated and hungry. I forced my tongue between her lips, and she whimpered slightly as I explored her mouth. She returned as much of the kiss as she could, but this was mostly me kissing her, and I didn't pull away until I felt I'd properly conveyed my appreciation.\n\n\"There,\" I said when I pulled back. \"That enough of a compliment for you?\"\n\nThe look she threw back at me was... odd. I couldn't really place the emotion on her face, but it wasn't there for more than a couple seconds. Another of her shy smiles crept onto her lips, and she laid her head on my shoulder.\n\n\"You gotta be careful about throwing kisses like that around,\" she said. \"That's dangerous.\"\n\n\"I told you that, way back in the parking lot.\"\n\n\"No, you said I might be dangerous,\" she corrected me as she stood up and shut off the water. \"You never said you were.\"\n\nI could feel something boiling up in my brain, but I squelched it for now. I stood up and picked her up, earning a squeal as I nudged the door open, walked through the bathroom and into the hallway.\n\n\"We need towels,\" she said, lightly punching me in the chest as I carried her. \"Dripping everywhere.\"\n\n\"Don't care,\" I shrugged. \"Which one's your bedroom?\" She pointed to the door at the end of the hall, and I headed that way. She twisted the doorknob, and I wasted very little time depositing her on the bed. \"You want dangerous, huh?\" \n\nThe return look she shot me was 90% heat, and 10% nerves. I guess my actions could have been considered a tad on the aggressive side, so I shot her the warmest, yet hungriest smile I could. She relaxed a little and smiled back.\n\n\"I think I might,\" she said, licking her lips in anticipation. \"Whatcha got?\"\n\n\"I think it's best if I show you.\"\n\nI climbed on the bed and gently pried her legs apart. I started off slow again, briefly rubbing the soles of her feet and kissing her ankles. I studiously avoided looking at the prize that lay between her legs, because I knew as soon as I did, I'd attack and miss the buildup.\n\n\"Oh God,\" she moaned. \"Are you seriously going to tease me again?\"\n\n\"Probably not for long,\" I muttered as my lips trailed up her toned, muscular calves toward her knees. \"I really enjoy playing my little human guitar, as you called it, but I am just a man.\"\n\n\"A pretty damn incredible one, at least from what I've seen so far,\" she answered.\n\n\"I dunno,\" I countered. \"I mean, you keep complaining about me teasing you...\"\n\nShe might have answered, but I planted a kiss behind her knee and she half-gasped, half-giggled instead. She tried to pull the leg away from me, so I let it go and simply switched to the other leg, doing the same thing to the other knee. I moved to the fronts of her legs, kissing her kneecap before licking lazily up her thigh. When I jumped to the other leg, Trina had apparently had enough. Her hand moved down across her pelvis, covering the small landing strip of brown hair as she moved toward her pussy.\n\n\"Mine,\" I said, playfully smacking her hand before it reached its destination. She pouted, but I moved onto her inner thighs, and her pouty frown became a grin. \"I mean, I understand... it does look reallllly damn good from down here. My hands and lips can't get enough... makes sense that your hands want some, too.\"\n\nShe giggled a little, and I moved even closer to where she wanted me, just barely tickling the junction between her thigh and her pubic area with the tip of my tongue.\n\n\"I have an idea, though,\" I said. \"Those amazing tits, they look like they need some attention, but my hands are busy down here.\" One hand was gently stroking her soft, brown hair, and the other was rubbing the other inner thigh, the one my tongue wasn't licking. \"Why don't you play with them for me?\"\n\nHer hands immediately covered the twin globes, and she gasped as she pinched both nipples and squeezed hard. It was honestly one of the most erotic sights I'd ever seen -- a beautiful woman, clearly wound up and in need, passionately rubbing her tits and oscillating her body trying to somehow will me into moving my mouth just an inch or two to the right. \n\nI'd been avoiding her pussy, not just with my hands and mouth, but also with my eyes. I finally let myself look, and it was an amazing sight to behold. Her outer lips were swollen and puffy, bookending her pink, glistening inner lips. Her clit stood out proudly just above them, and the whole area was positively soaked with anticipation.\n\nAll the sudden, the teasing and the games were over. I dove in full force, using my hands to spread her legs as wide as possible while I drove my tongue deep inside her honey hole. My nose brushed against her clit and I felt the stubble on my jaw rubbing against her skin.\n\n\"Oh FUCK!!!\" she shouted, one hand leaving her boobs and pushing my head tighter against her pussy. \"Holy... fuck, eat my pussy, Houston!\"\n\nFor the next 20 minutes or so, that's what I did. I started off like a rocket, quickly shifting up to her clit and sucking it into my mouth. It took maybe 30 seconds of tongue-lashing for her to seize up and tighten her fingers in my hair as she came, but that wasn't the only orgasm I gave her. I slowed down a little after that, making good on my promise to take my time but never letting her drift too far from the edge. I'd lazily suck and kiss both outer lips as I gently fingered her, or I'd stick my tongue just an inch or so into her pussy. I didn't focus on her clit but I didn't forget about it either, drifting back to it just often enough that she knew I could make her cum any time. Finally, I rubbed her clit fast and hard as I tongue-fucked her. She shifted her feet inward from my shoulders, locking her calves around my head and holding me in place as she gyrated through another orgasm.\n\nWhen she finally settled down, she pushed me away.\n\n\"Too sensitive,\" she said between gulps of air. \"Need a break.\"\n\n\"That's too bad,\" I said. \"Because I'm not finished with you yet.\" I laid down in the middle of the bed, with my legs hanging off the bottom, and pulled her by her arms until she was sitting on my chest, facing me. I reached up and cupped her tits, massaging them gently as I kissed around her left knee.\n\n\"When you're ready, just slide on up. You can control how much of you I can reach, at least until you're ready for me to take control.\"\n\n\"And how do I tell you that, huh?\" she asked, looking down at me dreamily.\n\n\"I'll know.\" With that, I went back to kissing around her knees and her lower thighs, all the while rubbing her breasts, her sides, and her arms. It wasn't long until she lifted herself up and planted her pussy right on my lips. She was far enough forward that I couldn't get to her clit without craning my neck, so I settled for thrusting my tongue in and out of her and licking around her lips. My hands couldn't reach higher than her stomach now, so I gripped her ass cheeks and kneaded them.\n\n\"Fuck,\" she stammered. \"I think Sting got it wrong. You have all the magic.\"\n\n\"Experience,\" I corrected. \"And you had plenty of magic yourself.\"\n\nMy hands got closer and closer to the space between her cheeks, until finally my index finger tickled the outside of her puckered asshole. I really had no intentions of doing anything more than just teasing, but she surprised me.\n\n\"Oh my God,\" she muttered. \"I wanted to ask, but thought that might be too kinky.\"\n\n\"You like that, huh?\" I said when she wasn't muffling me.\n\n\"I really don't know,\" she said. \"I've only ever touched myself there. But I want you to.\"\n\nI replaced my tongue in her pussy with a finger for just a second, then pressed against her ass with the wet digit. I rubbed around and around in tight circles, not quite penetrating her but applying gentle pressure, as if I would at any time.\n\n\"Yesss,\" she hissed. \"That feels awesome.\"\n\nI kept up my attention on her pussy, doing my best to keep up with the copious juices flowing out of her. I could feel them dripping down onto my chin and my cheeks, and she tasted so good -- tangy, yet slightly sweet -- that I couldn't get enough.\n\n\"You taste so fuckin' good,\" I said, directly into her pussy. I have no idea what she heard, or if she even heard anything, but she definitely responded to the vibrations from my voice, because she moaned and slid back just slightly, putting her clit in easy reach of my lips now.\n\n\"Oh, fuck,\" she gasped. \"Please.\"\n\nPlease what, I didn't know. But I took that as my cue to finish things off. \n\nI wrapped my free arm around her lower back to hold her in place. I pulled my tongue from her pussy and slid it up to her clit, spelling all kinds of words as I flicked back and forth, up and down, and all over her pleasure button. Simultaneously, I slid my wet finger past the tight ring of her ass, stopping halfway between the first and second knuckle.\n\nHer body tensed up as she tried to sit up straight, with my arm around her waist the only thing stopping her from taking my finger with her. She screamed out at the double stimulation, and when she realized she couldn't sit up, she fell forward instead. I felt her lower abdomen resting on my forehead, but it didn't slow me down. I pushed the finger in and out of her ass -- not rapidly, but fast enough to establish a good rhythm -- as I sucked her clit into my mouth.\n\n\"FUUUUUCK!!!\" she shouted, mostly into the pillow behind me, but still loudly enough that I'm sure the neighbors heard. \"Oh my God, Houston... ohmigod, ohmi....\" She kept talking, but the rest was just gibberish. This one wracked her body hard and for the better part of a minute, and it liberally drenched my face, my neck, and the sheets below us as her juice flooded out of her. It wasn't until I finally dislodged my finger that she started to relax a little, but she was still laying with her pussy directly over my lips. I squeezed her around the waist with both arms, then gently rolled over so she was on the bottom.\n\nI looked up to see an expression of.. well.. shock was the closest word I could come up with. Surprised shock? I wasn't sure, but it was part deer-in-the-headlights and part Oh-my-God! Her eyes were fluttering rapidly, and her lips were frozen in the classic \"O\" position. Her cheeks were the color of a fire engine, and she was breathing so hard that her tits were putting on a show all by themselves.\n\n\"You ok?\" I asked, half-amused and half-concerned. I pulled myself up, planting soft kisses along her stomach and her rib cage before jumping over to her right shoulder and finally, her right cheek. \n\n\"Mmmm...\" was all I got in response, at least for a minute or two. I lay down next to her, and she quickly curled herself into me, dropping her limp left arm across my chest.\n\nI quietly stroked her hair for a minute as I waited.\n\n\"That was...\" she started, but didn't finish the thought.\n\n\"I'm glad.\"\n\nBefore long, her breathing evened out, and I realized she'd dozed off. I smiled and slid out from under her. She whimpered a little at the loss of contact, but she was smiling now. I made my way to the bathroom and washed my face and hands, then stopped off in the kitchen to grab my clothes. When I walked back into the bedroom, her eyes fluttered open.\n\n\"What are you doing?\" she asked, looking forlornly at me now. \"Where are you going?\"\n\n\"Uh... nowhere?\" I replied, wondering briefly why she'd asked such a question, until I realized I was holding my pants. \"Ah. I just needed to get something.\"\n\nShe threw on a fake pouty frown. \"And what was so important that you had to leave me here all by myself?\" \n\nI reached into my pants and grabbed my wallet, then drew a couple of small, square packets from the billfold area. \"Well, I had some ideas...\" I trailed off, dropping two condoms onto the nightstand.\n\n\"Hmmm... I think I like your ideas,\" she giggled. \"You didn't have to leave though.\" She pulled open the drawer on the nightstand, revealing a box of condoms. \"Never know when you might need them. I'm on birth control, too.\"\n\n\"Well, had I known that, I'd never have left at all.\" She smiled and kissed me again. \"So, Ms. Cameron,\" I drawled, knowing how much she liked the accent and laying it on a touch thick for her benefit. \"We seem to be room-hopping a lot.\"\n\n\"Yeah?\" she asked, not sure where I was going.\n\n\"I fingered this sweet, tight little pussy in the kitchen,\" I said, emphasizing my point by cupping her pussy and quickly dipping a finger inside. She moaned at the contact. \n\n\"Then you gave me a blowjob in the shower.\"\n\n\"That I did,\" she agreed, rubbing my rock-hard cock. \"And you blew your cum all over my tits.\"\n\n\"Mmm hmm,\" I hummed. \"And then you just drenched me, made me all sticky and wet with your girl juices, right here in your bedroom.\"\n\n\"I didn't hear you complaining,\" she giggled.\n\n\"Oh, I'm not,\" I said. \"You taste amazing.\"\n\n\"I'll have to take your word for it,\" she said.\n\n\"You could...\" I started, but then dipped my finger back inside her, pushing in and out of her wetness a few times then offering my finger to her. \"...or you can see for yourself right now.\"\n\nShe greedily sucked my finger into her mouth, moaning as she licked all her juices off. I'd been hard since going down on her, but this simple act made me throb a little extra.\n\n\"You didn't lie,\" she said. \"Though, I think I like the way you taste just a little bit better.\"\n\n\"Glad to hear that,\" I chuckled.\n\n\"So what's next?\" she asked.\n\n\"Well, we've used three rooms so far,\" I said. \"I was wondering if there are any other rooms or places in this house you'd like to christen?\"\n\nShe blushed again, but nodded firmly. \"You're going to think I'm naughty.\"\n\n\"I already know that,\" I smirked. \"One of your most endearing qualities.\"\n\n\"Glad you think so,\" she grinned back. \"So, like I said, my roommate is gone for the summer. But when she's here, her bedroom is like Grand Central Station. I swear, she has a different guy over every night, at least 3 or 4 nights a week. Even once the pandemic shut down on-campus classes, she still had a couple of guys she brought over, guys she already knew and who had stayed over before. I swear, the noises coming out of that bedroom... it's like she has a magic bed or something.\"\n\nShe blushed again, and I knew what she wanted.\n\n\"And lemme guess,\" I said. \"You wanted to know if she really does have a magic bed, or if your roommate is just...\" I had to choose my words carefully here. If they were roommates, they were probably friends, too. \"...a very promiscuous young woman.\"\n\n\"I was going to go with 'gigantic slut,' but yours works, too,\" she laughed.\n\n\"Say no more,\" I said. I grabbed the condoms from the nightstand, then quickly scooped her up off the bed.\n\n\"You have something against me walking?\" she giggled.\n\n\"In theory, no,\" I said. \"But you have an amazing body. So what if I want it pressed as close to me as possible at all times?\" I shrugged.\n\n\"I can't argue with that logic,\" she smoldered, leaning in to kiss me again. I walked into the hallway. \"It's across the hall from the bathroom.\"\n\nShe grabbed the knob for me again. It looked just like Trina's room, and I didn't spend a lot of time looking around in here, either. Instead of just dumping her on the bed like before, though, I gently laid her down in the middle and knelt in between her spread legs.\n\n\"I can't deal with you teasing this time, Houston,\" she said, gasping as I kissed her bellybutton. \"I just want you inside me.\"\n\n\"Aww,\" I faux-complained as I tore one of the packets open and slid the condom onto my raging hard cock. \"I was gonna eat your tasty little pussy again...\"\n\n\"Oh, Lord, no,\" she said. \"If you do that to me again, I'm going to pass the fuck out, for real this time.\"\n\n\"And who says you won't pass out after I fuck your sweet little pussy, with my cock still inside you?\" I nibbled a little lower, just an inch or two north of her strip of soft, brown pubic hair.\n\n\"I'm sure I will,\" she moaned. \"But then I'll pass out with your cock inside of me.\"\n\n\"Hmm,\" I teased. \"That does sound like something I'd enjoy seeing. But...\" I lightly rubbed my nose through her hair, softly grazing the skin on the other side with my tongue. \"...are you sure I can't have just a little taste first?\"\n\n\"You already -- oh, FUCK!\" She was going to try to deny me again, but I licked her clit first, and the rest of her objection faded away. I didn't stay long, instead inserting a finger into her and licking all around it, teasing her lips and the soft pink skin just beneath them when my finger wasn't in the way.\n\n\"Oh God, baby,\" she moaned. It sounded almost like she was in tears. \"Oh God. Your tongue...\"\n\n\"Mmmmmm,\" I hummed into her pussy, letting her know how much I enjoyed the taste, and how much I enjoyed giving her pleasure. \"Taste so good...\"\n\nI did it for another minute, but I wanted to be inside of her just as much as she wanted me there. I straightened back up to a kneeling position, and I was staring at her when she opened her eyes.\n\n\"You're fucking evil, you know that?\"\n\n\"A second ago, you were callin' out for God,\" I joked, rubbing the rubber-encased head of my cock against her dripping opening. \"Now you're talking about evil. I guess I got you all confused and jumbled up, huh?\"\n\n\"You do,\" she said with a small nod. \"Think you can simplify things for me a little bit?\"\n\n\"I think maybe,\" I said, pushing forward until there was something to push against. She looked up at me with wild, dancing eyes.\n\n\"You're so thick,\" she said, shooting her gaze down at my cock before looking back up at me. \"You don't have to go slow, but...\"\n\n\"Relax, hon,\" I said, then pushed forward. She gasped as the head of my cock slipped inside her. She was very, very wet, so it went fairly easily, but still, I knew it would be a tight fit. \"I'm gonna take care of you, OK?\"",
        "She smiled, but quickly rolled her eyes back as I eased another inch or two into her.\n\n\"It's like all my nerves are on fire,\" Trina said.\n\n\"You're very tight,\" I said with a groan. \"So very, very tight.\"\n\n\"Or you're just very, very big,\" she replied. I pulled out until just the head was still in, then slid back in slowly, letting her get used to me a little at a time. Eventually I worked in an extra quarter- or half-inch with every thrust, until I was more than halfway inside. \n\n\"OK,\" she said after a minute or two. \"I think I can go a little faster and harder now.\"\n\nI increased my pace a bit, stroking her faster but still not giving her everything I had. I looked down to where we were joined together, and the sight of her juices bubbling up around my cock on every downward stroke would be seared into my memory for a long time.\n\n\"So, so good,\" she muttered. \"So, so, so, so good.\" She was spitting out a new word with every stroke.\n\n\"Agreed,\" I said. Her pussy was hot like a volcano, but was holding onto me like vise grips. It was one of the most exquisite feelings I'd ever had.\n\n\"Are you all the way in now?\" she asked, and I chuckled.\n\n\"About halfway,\" I said. \"Maybe a little more.\"\n\nHer eyes widened. \"That's it?\" I nodded. \"It's time to rip the band-aid off, then. Give it to me.\"\n\n\"Are you sure?\"\n\nShe pushed her heels into my asscheeks and started pulling me forward. \"Please. I need it. I need allllll of it.\" This time, I didn't stop pushing forward until I felt my pelvis come into contact with hers.\n\n\"That's all of it, baby girl,\" I said. \"You did great. You OK?\"\n\n\"Supposed to use... your cock,\" she grunted, rolling her hips slightly to get used to the pressure. \"Not a fucking... baseball bat.\"\n\nI had no choice but to chuckle at that. \"Shh,\" I said, covering her lips with mine for a brief kiss. \"Your pussy feels so amazing, Katrina. As good as it feels for you, believe me that it feels just that spectacular for me.\"\n\nShe smiled at that. \"Well... fucking fantastic, so I'll take... compliment. Now... please... fuck me.\"\n\n\"Yeah?\"\n\n\"Yes,\" she said. \"Pull it all the way out...\" she trailed off, waiting for me to do just that. When I had, she continued. \"... and then shove it all the way back in. One stroke. One hard, deep stroke.\"\n\nI focused on her eyes for a second, and they met mine with the same steel I'd seen in the parking lot earlier. She was determined to do this.\n\nSo I gave it to her.\n\n\"FUUUU---\" she started to scream, but I captured her mouth with mine and sucked on her tongue as she finished the scream into me. I pulled out about halfway, then pushed in again, and kept doing that as I set up a rhythm where I could easily fuck her but still look at her beautiful face and kiss her full, pouty lips.\n\n\"Oh, oh, ohohohoh,\" she blurted out when I let her mouth free. \"What're you doin' t'me?\"\n\n\"Giving you what you wanted, honey,\" I said.\n\n\"Oh, I want it so bad,\" she mewled. \"So bad.\"\n\nHer legs were just long enough for her heels to lock together behind my large torso, and every time I pulled out, she used them to quickly guide me back in, forcing me to speed up a little. I was actually glad to have the condom on now, because without it, I'd have been a goner. It had been half a year since I'd been inside a woman, and much, much longer than that since I'd experienced anything that felt nearly this good. The latex was the only thing keeping me in check.\n\nNothing was keeping Trina in check, though. She wrapped her arms around my neck and pulled me down, holding my head against her shoulders as she cried out in the largest orgasm she'd had yet. Unless she was the only one who'd stayed in her building for the summer, I was sure we'd get some noise complaints. \n\nAlmost as sure as I was that I didn't give a fuck.\n\n\"Fuck, yes, baby,\" I muttered, figuring I was close enough to her ear that she could hear me. \"Cum for me, Katrina. Cum on my cock. Cum over and over and over again. For me.\"\n\nShe cried out once more as she rolled right into another one, and this time I pulled my head free and sucked on the first skin I could get to, the base of her neck where her collar bone started. She threaded her fingers through my hair and tugged sharply, drawing a groan from me. I moved down her body, nipping at her neck and her upper chest before sucking a nipple between my lips and biting down gently.\n\n\"HOUSTON!\" she screamed out again, but then quickly buried her face in my shoulder. Her fingers clawed at my upper back, and I knew she'd leave a few marks. I just kept increasing the pace of my hips as she flowed seamlessly from one orgasm to the next, and I was careening dangerously close to my own cliff.\n\n\"Houston, I can't stop cumming,\" she moaned, kissing the top of my head. \"I can't stop.\"\n\n\"Don't want you to,\" I spat out. \"I want more.\" I jumped over to the other nipple, and that seemed to trigger another orgasm for her. \n\n\"Oh, please,\" she pleaded. \"So amazing, but... dunno how much more...\"\n\nI took that as my cue to wrap it up. I pulled back, and once she unlocked her heels, I pulled almost all the way out of her, leaving just the head inside her. Even the simple motion of pulling out made her moan and squirm, and I knew she had to be feeling pretty sensitive by now. \n\n\"Just a little bit more?\" I asked, knowing her answer, but smiling at her nod anyway. I lifted her legs up and placed them on my shoulders, then slowly pushed back inside of her as I lowered myself back down.\n\n\"Fuck, yes,\" she hissed. \"Your cock.. now that I'm used to it... just need it inside me.\"\n\n\"It really likes you, too,\" I grinned. \"All of you.\"\n\nI planted my hands on either side of her face and kept lowering myself down. I didn't know how far she'd let me go, but she never stopped me, and before long her knees were pressed against her chest.\n\n\"Mmm, your cock got a little harder when my knees flattened my little nipples,\" she said, a sexy, sultry tone seeping into her voice now that I'd given her a second to catch her breath. \"You like this young, tight, flexible little body, don't you?\"\n\nI grunted in agreement. \n\n\"But not too tight, though, right?\" she licked her lips as she grinned. \"You seem to like all my little curves... and not so little curves...\"\n\nShe was driving me crazy with her voice. I was quickly sawing back into her every bit as fast as I had been before.\n\n\"But my pussy... that's just tight enough, isn't it?\" she asked, knowing I wouldn't answer. My face was just low enough that she could reach, and she kissed my lower jaw. \"I mean, it was super tight, but... it stretched to let you and... your magnificent... fucking cock...\"\n\nShe couldn't keep the coherent sentences going now that I'd picked my pace up even more.\n\n\"Great... fucking... cock,\" she said. \"Stretching my little pussy...\"\n\n\"Fuck, Trina. You're such a dirty little girl.\"\n\nHer eyes danced.\n\n\"I am, for you, right now,\" she said. \"I want to get even dirtier. Can you help?\"\n\nI didn't think it was possible, but I fucked her even harder. I kissed the back of her ankle, right on her Achilles tendon, and she gasped in shock. Then she gasped in something else, because the new sensation seemed to push her over the edge yet again.\n\n\"Oh, baby, oh, fuck....\" She didn't scream out like before, but her mouth tightened in a silent 'O' and I felt her legs tense up underneath me. I actually felt her pussy get even juicier, the pressure of my constant strokes forcing her juices to bubble up and flow down around my balls. \n\n\"Cum for me, Trina... Gonna be right there with you in a sec...\"\n\nHer eyes grew even wilder with that. \"You better be. Fuck my tight little pussy. Pound it. Pound me, and cum in me. Cum in my tight little teenage pussy, Houston.\"\n\nShe just had to throw the teenage thing in there... but to my surprise, it made me even hotter. In fact, it's what pushed me over the edge.\n\n\"Fuck, yes, Trina!\" I exclaimed. I took a few more short, quick stabs, then bottomed out in her pussy as I quickly filled the condom. I closed my eyes so tightly I saw stars, but I felt her arms circle around my neck and hold me in place so I didn't lose my balance. \n\n\"I can feel you, even though,\" she said, and I knew what she meant. I'd been happy about the condom earlier, but now I hated it. I would have loved to feel myself shooting off deep inside her. \n\nMy orgasm finally subsided, and I pulled my softening cock out of her. I had just enough energy left to pull off the abused condom and set it on the nightstand next to its unused counterpart, before I collapsed onto the bed, laying on my back to Trina's left. She quickly curled up into me, and when I looked down at her, her eyes were already closed. I knew the multiple orgasms had taken a lot out of her, so I wasn't surprised at how quickly she crashed. \n\nI wasn't particularly drained by the encounter, but I had been up since 4 a.m., so I closed my eyes as well.\n\n*************************\n\nHer roommate's bedroom didn't have windows, so I had no idea how much time had passed when I woke up. Trina was still asleep, tucked safely under my right arm. Her warm breath tickled my right nipple, and I could feel the gentle rise and fall of her chest against my rib cage. \n\nI lazily stroked her back and right hip with my right hand, and I inhaled deeply, getting a good whiff of her natural scent mixed in with her body wash and whatever shampoo she'd used last. She wasn't really short -- I'd guess she stood somewhere around 5'-5\" or 5'-6\" -- but I had nearly a foot on her. Her head fit neatly under my chin, and I could see her baby blue-painted toes laying against my ankles. From this vantage point, she looked so small and dainty, and I had a strong desire to wrap her up in my arms and just protect her. \n\nI chided myself for my old-school way of thinking -- I actually thought of myself as pretty \"with it\" when it came to women's empowerment and equal rights, and I knew from the events of the day that Trina didn't need my protection, or that of any other man. Still, the sight of her appealed to my basic chivalrous nature. Just like with the truck door... just because she didn't need me to take care of her didn't mean I didn't want to.\n\nThis whole line of thinking made me chuckle silently anyway. \n\nTake care of her? Protect her? \n\nI'd stopped thinking about it right around the time I started rubbing her ass in the kitchen, but I knew I was likely setting myself up for disappointment. I'd lost interest in casual, simple hook-ups a long, long time ago. At my age, and with a daughter to think about, I wanted more than that. I wasn't sure how that would work with a woman 20 years my junior anyway, but I doubted it would matter, because a casual fling was likely all she was interested in. No, she might not ditch me after just one night -- she had teased about practicing her blowjob technique on me, after all -- but the novelty would wear off sooner rather than later. Just because she was attracted to older men didn't mean she wanted a real relationship with one.\n\nWhat's worse was I knew all that from the moment she'd asked me for a ride, but I was unable to resist the raw, animal attraction I felt toward her. So, I'd jumped in anyway, letting little Houston have his short-term fun even though it would probably lead to long-term trouble for big Houston.\n\nStill, it'll be one hell of a story to tell down on the job sites, right? \n\nI chuckled aloud at my inner voice, knowing full well that kiss-and-tell was never my style. I'd probably share the less intimate details with my closest friends eventually, and one of the forewomen on my crew might pry the full story out of me over a few beers at some point. But Trina Cameron would never be just another notch on my bedpost.\n\nThankfully, I didn't have to spend too much time thinking about it. Trina made a cute little noise, and her hand lazily stroked my chest and upper abdomen as she slowly stirred awake. I planted a kiss on top of her head and gave her ass a tiny squeeze.\n\n\"Holy shit.\" The words came out in the middle of a yawn, and she stretched her right arm up and over her head before dropping it back to my chest.\n\n\"Welcome back,\" I joked.\n\n\"For a few minutes there, I thought I might not make it back,\" she said with a tiny giggle. \"No one's ever done that to me before.\" She slid her arm over my side and hugged me tight. \"That was fucking amazing, Houston. I'm serious.\"\n\n\"I do aim to please.\"\n\n\"In fact, I think I'm going to need your ex-wife's name and address.\"\n\n\"Uh.\" I knew there had to be a punchline here, but I couldn't find it. \"Why?\"\n\n\"You said she's the reason you're here, right?\" she laughed, and I joined her. \"So I need to send her some flowers. Hell, I might even throw in a box of chocolates and a gift card, to thank her for being dumb enough to let you go in the first place.\"\n\nI laughed harder now. \"You know, I might actually let you do that.\"\n\n\"Things are still pretty bad, huh?\"\n\n\"Actually, not really, not anymore,\" I said. \"They were until a few months ago, but I think we've mostly buried the hatchet. Mostly for Avery's sake -- my daughter -- but also, we hashed out things on a personal level. I'm always going to be angry about the way things ended, though, so if someone were to remind her of what she once had... no, I wouldn't be upset about that.\"\n\nTrina giggled. She tilted her head up and planted a slow, passionate kiss on my lips, and thus began the resurgence of my erection.\n\n\"Can I ask what ended your marriage?\"\n\n\"Same thing that ends a lot of marriages, I'd guess. Cheating.\"\n\n\"You called her an asshole earlier, so I'm guessing it was her.\"\n\nI nodded. \"Was a bit more complicated than that, but yeah.\"\n\n\"How complicated does it have to be?\" she asked. \"Cheating is cheating.\"\n\n\"Well, I guess I'd have to tell you about how we met, and that's not a short story.\"\n\nShe traced her fingertips up my jawline before gently laying her palm on my cheek. \"You're crazy if you think I'm through with you, Houston, but I'm in no rush. Besides... I've told you what your voice does to me, and it's pretty much the same thing the rest of you does to me. It'll be like extended foreplay.\"\n\n\"Eh, maybe at first,\" I said, \"but as with most divorce tales, it gets bloodier at the end.\"\n\n\"I've got my own share of bloody stories to tell,\" she said, momentarily sounding older than her years. \"I can take it. So how did you meet?\"\n\nI decided to just go for it.\n\n\"An orgy,\" I said. If she'd been drinking anything, she'd have spit it all over my chest and her roommate's bed. \n\n\"Come again?\" she sputtered.\n\n\"Yes, that happened plenty,\" I laughed, and she smacked me lightly on the chest. \n\n\"You're an asshole,\" she joked, still trying to catch her breath from her faux-choking.\n\n\"She said that a lot, too, but that comes later in the story.\"\n\nTrina let out a heavy sigh. \"So, when was this orgy, Mr. Wynn?\"\n\n\"Back in the summer of 2007,\" I said. \"You were, what, 6?\"\n\n\"You're focusing on numbers again, hon,\" she said, lightly pinching my nipple now. \"But for the record, I turned 7 that summer.\" She paused, then I saw her cheeks tighten in a grin. \"Right about the time you were having your orgy, I was getting school supplies for second grade.\"\n\n\"Ouch,\" I moaned, grabbing my chest in fake pain. \"You're one of those salt-in-the-wound types. I see that now.\"\n\n\"Aww,\" she said, her voice turning sultry now. \"You're not driving this time, so I think I should kiss it and make it all better.\" She licked my nipple and sucked it between her lips for a moment before letting it go with a kiss.\n\n\"That's better,\" I said. \"But I did try to steal a year from you, so let me give it back.\" I playfully swatted her on the ass.\n\n\"Oooh,\" she said. \"Don't start things you can't finish.\"\n\n\"Oh, I'll finish it all right,\" I replied, squeezing the same ass cheek now. \"You're the one that wants to hear this story.\"\n\n\"And I still do. Get on with it.\"\n\n\"Alright. I was overseas working for a contractor in Iraq, but a few of us were back stateside for R&R before going back over. I was heading home to Texas, but one of the guys was from Indianapolis and had tickets to a big country music festival out there the day after we got back, so I stopped there for a couple days to go with him. Between shows, I wandered off by myself to buy beer, and a bunch of dumbasses tried to start a fight over some girl. Me and a couple other guys tried to break it up before anyone else got hurt, but we ended up having to fight all of 'em. They got a few shots in, but the three of us were all former military types, so we won. In case you're wondering, that was the last fight I got into, outside of war stuff, until a few hours ago.\"\n\n\"So you only get in fights to protect people,\" she said. \"Very noble of you.\"\n\n\"Anyway, one of the guys, Brad, had a group of girls he was meeting up with after the shows ended, and he invited myself and Sam, the other guy, to hang out with them at the post-concert parking lot party. I made my excuses to my contractor buddies and met up with them. To make a long story short, the thing turned into a huge deal at Brad's hotel, right down the street. I think there were 9 or 10 girls there, and just us 3 guys. I had a lot of fun that night.\"\n\n\"Yeah, I bet you did,\" she said, pinching that same nipple now. Playing with my nipples had never really done anything for me, but Trina was doing something different, apparently. \"I thought that kind of stuff only happened in porn.\"\n\n\"Yeah, I did too, until that night. Anyway, Jessica was one of the girls there, and I was smitten with her immediately. Her face was Asian, but she had the kind of thick, stacked body you don't normally see on an Asian girl. I found out later her mom was Japanese, but her dad was a big 'ol grain-fed Ohio boy. We both bounced off a couple other people first, but I knew from the first moment we fell into bed that Jessica and I would be together. There were a dozen people packed into those 3 hotel rooms, all young, attractive, and horny... and the moment our lips touched, we might as well have been the only two people on a deserted tropical island. She felt it, too. I'll spare you the details, but needless to say, we made a connection.\" \n\nTrina's hands had been making circles on my torso, and they were dipping ever closer to my rapidly hardening cock.\n\n\"Mmmm,\" Trina said, as her fingertips brushed lightly over the tip. \"Somebody likes remembering that night.\"\n\n\"That might be a little of it,\" I said. I ran my fingers through her hair and massaged her scalp. \"Most of it has nothing to do with that, and everything to do with you.\" My other hand trailed down her back, stopping at the top of her ass, which was far as I could reach. \"Scoot up on me some. I want more.\"\n\nTrina slid up until her head laid on my left shoulder, with most of her upper body draped across mine. I had much easier access to her now, and I lightly rubbed her pussy as she teased my cock.\n\n\"So, keep going,\" she said. \"You and Jessica paired off for the night?\"\n\n\"No, actually,\" I said. \"One of the other girls, Kristen, who had probably the biggest tits you've ever seen... she was still a virgin, and she wanted to get rid of that in the worst way. They asked Brad first, but he had a girlfriend, Kelly, waiting back home, so he didn't want to, and--\"\n\n\"Wait,\" Trina said. \"Brad had a girlfriend, but was in an orgy?\"\n\n\"It's complicated, but yeah,\" I laughed. \"Believe it or not, she was fine with everything that happened. Brad was on a road trip to celebrate getting out of the Marines, and apparently he had a lot of fun all over the country. All his girlfriend wanted was to hear all the details of everything he did.\"\n\n\"Wow,\" she said. \"That's incredibly open-minded. Not sure I could do that.\"\n\n\"Most people couldn't. But they're not most people. They're still together now. I see them sometimes. I can tell you all about them later. But yeah, he was having his fun, but he knew taking a girl's virginity might be going a little too far, so he wasn't comfortable with it.\"",
        "\"You were?\" she asked.\n\n\"Only because Jessica wanted me to,\" I said. \"Her and Kristen went to middle school together. Most of the girls there were all at the concert together, which makes sense, because they did everything together.\"\n\n\"Everything?\"\n\n\"Yep,\" I said. \"They were all into girls, but most were into guys, too. Most had been friends for a long time, with a couple joining the clique in college, but there were six of them. Anyway, Kristen wanted the whole group to be involved in her losing it, but Jessica was the one holding her hand when I finally got inside.\"\n\n\"That's... I dunno, it's really kinda sweet, in an only-happens-on-Literotica kind of way,\" Trina mused.\n\n\"Why am I not surprised that you know what Literotica is?\" I chuckled.\n\n\"Why am I not surprised that you do?\" she retorted.\n\n\"Hey, it's been lonely since this started,\" I offered. \"I broke up with my last girlfriend over Christmas, and you can't meet anyone with all this shit going on.\" I paused, as I considered who I was with now. I kissed her shoulder. \"At least, I didn't think I could.\"\n\nShe purred happily. \"I didn't think so, either. But yes, I read porn. I didn't get many chances to explore my fascination with older men in person before this whole pandemic thing hit. They have a whole category for that.\"\n\n\"And just about everything else,\" I agreed. \"So, yeah, it might seem crazy, but that's how we met. I got her number, and I never actually made it down to Texas on my break. We dated long distance for the rest of my contract in Iraq, and I decided I didn't want to be apart from her anymore, so I took a job working for the NSA. I could work from home mostly, and live wherever I wanted. So, I moved to Indy. We got married a couple years later.\n\n\"The first five years were great,\" I said. \"She got her degree and landed a job with a graphic design firm, designing business logos and products, that sort of thing. She loved her job, I liked mine well enough, and we had a ton of friends. Avery came along in '13, and we talked about having at least one more, and maybe two.\"\n\n\"So what happened?\" Trina had started stroking my cock, but she could sense that this was where the roller coaster stopped going up, so she just tenderly held it while her other hand stroked my wrist.\n\n\"Well, she'd never stopped sleeping with her group of friends, and she had my blessing for that,\" I said. \"They'd all been friends for years, so I didn't care if she kept going with them. Besides, most of the time I was involved.\"\n\n\"Did you ever sleep with the others again?\"\n\n\"Occasionally,\" I said. \"But it was always with Jessica's encouragement and involvement -- she had some kind of fetish, where she got off extra hard watching me have sex with other women. But usually my role was doing stuff to Jessica while she played with the other girls... I'd fuck her while she ate one of them out, or something like that. Sometimes I just watched. Honestly, I didn't need anything besides what we did together, which was amazing... but the extra variety was nice. It was a fun, deeply fulfilling sex life.\n\n\"I guess after a while, though, Jessica wanted more. It started with her picking up a girl at the gym, then at the airport after a business trip. The agreement was that she was only supposed to sleep with that specific group of five other women, but I didn't argue too much about the new women, as long as she told me about it. I guess I should have, though, because eventually...\" I trailed off.\n\n\"Eventually, it wasn't just women?\" Trina said, voicing what I apparently didn't want to. She slid her hand off my cock and up onto my stomach.\n\n\"Yeah,\" I said. \"First it was a drummer for some cover band she saw at a bar. Then, it was a guy who worked in her building. The last one I knew about was a threesome, with the girl from the gym and her husband.\"\n\nShe sucked in a sharp breath. \"Fuck.\"\n\n\"I'm looking forward to it,\" I said, with a hollow laugh. I was over it now, but it would always sting a little. I squeezed her ass reasonably hard, if only to remind myself that I was just retelling old nightmares, and that the present held much better things for me.\n\n\"Doesn't seem like the appropriate time, but you know how much playing with my ass gets me going, Houston. If you keep it up, I'm gonna hop on your cock and start riding you while you tell me the rest of the details about your divorce.\"\n\nNow the laugh had more substance behind it.\n\n\"Don't threaten me with a good time,\" I said, swatting her ass one more time and earning a sexy little moan.\n\n\"Anyway, I finally found out because one of the girl's husbands, Mario, told me,\" I said. \"He came home from a late night at the office and heard Dana, his wife, and Jessica talking. Jessica was clearly upset about something, and he listened as she told Dana all about what she'd been doing, and worried about how to tell me about it.\n\n\"After Jessica left, he asked Dana if she was planning to tell me, or if he was going to have to... she begged him not to, to let Jessica figure out how to tell me on her own. He agreed, but told her to tell Jessica she had till the end of the week to tell me, or he would. She didn't -- I guess she thought he wouldn't go through with it. So he did.\n\n\"When I called her out on it, she broke down in tears. Real tears, not the fake ones. I could tell she knew she'd fucked up, and I knew she was sorry. I told her I wanted a divorce, right away... but she begged me to go to marriage counseling, so I did. And I really tried, mostly for the sake of our daughter, but... I just couldn't get over it. I could have forgiven one time, if she told me about it, but multiple times, and having to hear it from someone else... I just couldn't.\"\n\nTrina lifted her head up and kissed me on the lips. It was gentle and tender, and God help me, it sent a feeling of warmth buzzing throughout my chest. It made me feel a hundred times better. I took her left hand in mine, and she squeezed.\n\n\"The really shitty thing about it is, she never even talked to me about it,\" I continued. \"I mean, I'm not at all one of those guys that gets off on seeing another man fuck my wife, but... I loved her. I would have tried anything once for her, and probably even twice. If she wanted something else, she could have asked me. I mean, yeah, if I tried it a couple times and decided I couldn't do it, we might have run into another roadblock eventually, but I just couldn't accept the betrayal.\"\n\nTrina just nodded, her cheek feeling warm and a little slick -- tears, maybe? -- against my upper arm.\n\n\"Anyway, I thought maybe our split would be amicable, but I was wrong,\" I continued. \"Once she realized I was serious, she got mean. She called me a hypocrite, talking about how I gladly fucked her friends but didn't give her the same opportunity, and was going to try to use that to claim she was the wronged spouse and take me for everything. Never mind that it was her idea every single time. It got to the point that my lawyer considered serving all of her friends with subpoenas, asking that they testify that it was her idea, and not a case of me cheating first and her getting even. I don't think any of them would have lied for her under oath. They eventually convinced her to back off, and we agreed to split everything equally, including every other week with Avery. She got primary custody, though -- she's a great mom, so I would never have challenged her on that -- and when she moved here, I either had to follow her or I'd only see Avery on holidays and during the summer.\"\n\n\"Wow,\" Trina said. \"That's pretty awful. I mean, I'm glad you're here, of course, but...\"\n\nI stroked her back lazily. \"Yeah, me too.\"\n\n\"Do you still talk to any of her friends?\" she asked. \"I mean, I know they started off as hers, but you were together a long time. They kinda became mutual friends, right?\"\n\n\"I do now, but that's a recent development,\" I said. \"They all shut me out once the papers got served. Mario talked to me throughout, over Dana's objections, but none of the girls said a word to me. Through Mario, I heard that all of them were sympathetic toward me and felt Jessica was in the wrong, but they were going to have their best friend's back. Kristen sent me a couple of Facebook messages over the past couple years, just checking up on me, but that was it. When Jessica moved back here to live near her parents, there wasn't really much keeping me in Indy.\"\n\n\"So what changed?\"\n\n\"Dana got Covid-19.\"\n\n\"Oh, shit!\"\n\n\"Yeah, it was pretty nasty for a while,\" I agreed. \"She was on a ventilator for two weeks, and of course, neither Mario or their kids could get in to see her. He was a wreck. Like I said, he was the only one who stuck by me when the shit hit the fan, so I drove out there to be there for him. He's a big golfer, so we played 4 rounds of golf in one day, at his four favorite courses around Indy. I fucking hate golf, by the way.\" She chuckled. \"He'd taken the kids to his parents' house, and when we went by to get them after, Jessica's car was in the driveway.\"\n\n\"She convinced me to go out for a late dinner, and we had a long heart-to-heart,\" I said. \"We'd been icy toward each other ever since I moved here, only talking about Avery and even that only when necessary. But at the time, we didn't know whether Dana was gonna make it... it made me not care so much about what happened in the past. She finally apologized, and I did, too, for whatever shortcomings I had that made her feel like she had to go elsewhere. She tried to explain, but I didn't really want her to. It'll never be like it was -- in fact, she's engaged to a woman out here now -- but we're back on good terms. Hell, this was supposed to be my week with Avery, but Jess has to go out of town for work next week, so we swapped weeks. That kind of stuff never would have happened until recently.\"\n\n\"That's great,\" Trina said, lightly tickling my chest hair. \"What about the others? Did Dana make it?\"\n\n\"She pulled through, yeah,\" I said. \"And yeah, the others are talking to me again. I mean, they all live in Indy still, so we're just Facebook friends. I haven't seen any of them except Dana since I moved, and even that was just a Zoom call while she was still in the hospital.\"\n\n\"Not even Kristen with her ginormous titties?\" Trina sensed that the serious shit was over, so her hand went back to my cock.\n\n\"Not even her,\" I said.\n\n\"You said she messaged you a couple times,\" Trina tried. \"Don't tell me she didn't throw in a couple of pics of her boobs, for good ol' time's sake.\"\n\n\"She did not,\" I chuckled. \"Though, there were a couple years there where I couldn't bring myself to try dating again. Those were lonely times, so I think I could have put those pictures to good use, if she'd sent them.\"\n\n\"But surely you remembered them,\" Trina said. My cock had deflated while talking about the divorce, but she was quickly bringing it back to life. \"How they looked, how they tasted... how her nipples crinkled up when you sucked them... how they felt wrapped around your dick... I'm guessing you made at least a few messes thinking about them.\"\n\n\"Maybe one or two,\" I said. \"And maybe if I'd known you back then, I wouldn't have had to take care of things myself.\"\n\n\"Silly boy,\" she said. \"Two years ago, I was jailbait.\"\n\n\"True,\" I said, running my hands back down to her ass and squeezing again, harder than I had before. \"Not jailbait now, though.\"\n\n\"And thank God for that,\" she moaned. \"God, I love what you do to my ass.\"\n\n\"Well, I love your ass,\" I said, giving it a light smack. \"So, we're even.\"\n\nShe rotated her ass away from me and slid between my legs. She put her forearms on my thighs and descended on my cock, sucking as much as she could into her mouth and bathing it with her tongue. When she pulled off, a string of saliva stretched out between my cock and her lips, and she quickly captured it and dove back down. It was much noisier and wetter than her earlier blowjob, almost as if she was trying to be as sloppy as possible. A few seconds later, I found out why.\n\n\"Nobody's ever called my boobs 'ginormous,'\" she started, sliding upward a little until my cock was nestled snugly between them. \"But I think they're pretty great. Maybe you can take them for a test drive, hmm?\"\n\nShe pressed her boobs against either side of my cock, and slowly lifted herself up and down, watching with rapt fascination as my cock peeked out over the top of her self-made cleavage. \n\n\"Not just great,\" I said. \"They're perfect, Trina, and I'm not just sayin' that because, ya know...\"\n\n\"Because I'm letting you fuck them?\" she said with a giggle.\n\n\"Yeah,\" I answered. \"Though, not gonna lie... this is pretty amazing.\"\n\nNo, Trina's tits were nowhere near the size of Kristen's, but as long as she kept them pressed together, they were plenty big enough for my cock to stay safely tucked between them. After a few minutes, I slid my hands over her shoulders and held her in place so I could control the motion. I was still plenty lubed up from her blowjob, and she just bent forward and let me take over. She couldn't look down at the action anymore, and while I still could, I decided looking back into those icy blue eyes was an even better view.\n\n\"You like that, huh?\" she asked. \"You like fucking these young, firm tits?\"\n\nI grunted in agreement.\n\n\"They kinda like it, too,\" she said. \"They'd like it even better if you were the one holding them in place.\"\n\nSo, I obliged, squeezing the twin orbs and kneading the tender flesh as I kept up my pace. Occasionally I pinched one nipple or the other, enjoying her sharp gasps each time I did. Her eyes hooded over with pleasure, which was amazing to me since she was the one giving me all the pleasure.\n\n\"I love it when you take control,\" she cooed. \"When you squeeze my tits... when you smack my ass... when you pull my hair... when you put me in the position you want so you can just take what you want... But you know what I don't want?\" she asked. \"I don't want you to cum this way.\"\n\nSuddenly, she pulled away and stood up. My hands felt empty without something to hold, and my wet cock waved lewdly in the open air.\n\n\"My little pussy is throbbing, Houston,\" she said, stepping toward the door. \"I need you back inside me, as soon as possible. You're going to have to show me how much you need it.\"\n\nI heard her giggle as she took off, running down the hallway. I just smiled as I leapt up off the bed, taking care to grab the extra condom from the nightstand. I rushed down the hallway and into the main living area, but she was nowhere in sight. I heard a giggle from the living room, so I moved in there and saw her laying flat on the ground in front of the couch.\n\n\"Not a very imaginative hiding spot, Katrina,\" I said with mock condescension in my voice. \"Almost like you want me to catch you.\"\n\nShe grinned up at me with wild eyes, but before I could reach her, she scrambled to her feet and took off for the kitchen. I chased her around the island a couple of times, knowing what it must sound like to the downstairs neighbors to have a 250-pound man running wild on their ceiling. She stopped on one end of the island, with me on the other staring back at her. Her cheeks were flushed, but she was smiling as widely as I'd seen her smile, genuinely happy that I was willing to play her game. \n\n\"But do you want to catch me?\" she asked, licking her lips. She sprinted off for the living room again, and I followed, figuring it wouldn't be long before she led me wherever she wanted to go. Instead of stopping in the living room, though, she headed into the dining room, and we soon found ourselves on opposite sides of the small, rectangular dinner table. \n\n\"Oh, I'm gonna catch you, little girl,\" I said. I'd tried the term out earlier, and she didn't mind. She didn't mind this time, either.\n\n\"You think so, huh?\" She'd no sooner finished the line than she broke to my right. I started to go left to chase her around the table again, but quickly faked back to my right, and we collided at the end of the table, my arms hooking under her shoulders to break her fall. \n\n\"Got ya,\" I said, then quickly crushed her lips against mine. I pushed her up against the table and mauled her tits as we feverishly made out, feeling her fingernails dig into my back as she panted into my mouth. I broke the kiss off only long enough to use my teeth to tear open the condom wrapper, then forced my tongue back into her mouth as I slid the rubber over my cock. Finally, I spun her around and bent her over the table.\n\n\"Yes,\" she moaned. \"Now fucking taking me.\" \n\nI was not in the mood for any teasing or foreplay this time, so she didn't have to tell me twice. I slammed my cock into her from behind in one smooth stroke, enjoying the sound my hips made slapping against her ass, but really digging the ripple that rolled across her supple cheeks at the contact. She screamed out into her forearm at the sudden intrusion, but that turned into an insistent, babbling moan as I thrusted in and out of her.\n\n\"Fuck me, fuck me, please, please, fuckyes, fuck... God, Houston, poundmeplease...\" Those were just a few things that streamed from Trina's lips as I plowed into her. She came quickly, crying out my name and a few other unintelligible things, but that just spurred me on and made me thrust even harder.\n\nHer upper body collapsed against the table, pushing her arms directly in front of her head and squashing her tits against the cold gray formica. There was a fake plant and a pair of salt-and-pepper shakers on the table, but they clattered to the floor under the vibrations from my pounding.\n\nSMACK!\n\n\"Ohmigod!\" she shrieked as my open palm made contact with her right ass cheek. I knew this angle was going to set my thighs on fire soon, so I wanted to make sure I made this as heated and passionate as possible.\n\nSMACK!\n\nThis time my palm landed heavily on her left cheek, and she turned her face to the side, laying her left cheek -- the one on her face -- on the table and looking back and up at me. \"Treating me like a guitar again, huh?\"\n\nSMACK SMACK!\n\nEach cheek got one this time, and she cried out again, this time slapping her hand over her mouth so as not to attract the attention of local law enforcement for the second time today. \n\n\"Can you...\" she was breathing so rapidly that it was hard to even get those two words out.\n\n\"Can I what?\" I asked gleefully. \"Can I spank you again? Why, Trina, I thought you'd never ask.\"\n\nSMACK!\n\n\"Ooooh... oh fuck,\" she panted. \"My ass.\"\n\n\"I just did, but if you insist...\" I smacked each cheek again. \n\n\"Gaaaahhh...\" she spluttered. \"No, my...\" It sounded as if she'd finally given up trying to talk. I really didn't know what she wanted, but I was having a lot of fun listening to her try to tell me.\n\nI gripped her hips hard and really pounded into her now, but she managed to slither her arms backward and grip her ass cheeks, spreading them open wide for me. That allowed me to plunge just the slightest bit deeper into her, but then her right pinky finger drifted out toward her tight, puckered asshole, coming up just short of actually applying any pressure. \n\n\"Ah, that's what you wanted,\" I said. \"Haven't you learned anything tonight though, Trina? Keep your hands off my stuff.\"\n\n\"Yours?\" she gasped as I pushed her hands out of the way.\n\n\"Mine.\" She whimpered when I pulled out of her, but that quickly changed into moans as I knelt behind her and licked all over her bright red ass cheeks. She seemed to enjoy my spanking, but her ass really did look angry, so I figured it was time to add a little sugar to the spice, so to speak. \n\nI thought briefly about giving her a rim job -- I'd done it to a couple other girls, and they'd done it to me, as well, and everyone had always loved it -- but I figured that might be something to discuss with her first. I knew she had no problem with my fingers, though, so I lubed up my pointer finger with her copious pussy juices and gently slid it into her ass. I moved slowly this time, but I didn't stop until the entire finger was buried inside her.",
        "\"Uuunggggghh...\" she groaned. My tongue left the fierce, fiery flesh of her cheeks and dipped below my finger, licking up her juices and occasionally thrusting inside of her. \"Gonna... fuckin'... kill me...\"\n\nI chuckled as I stood back up, being careful not to dislodge the finger in her ass. I shoved my cock back into her pussy once again, relishing the extra tightness provided by the extra pressure.\n\n\"God, yes,\" she shouted now, apparently no longer caring about who could hear. \"Fuck, that's so amazing... fuck me... finger me... fuck me...\"\n\nAs I thought, my thighs were really starting to burn, but I had one more thing I wanted to do. Her chest was still resting on the table, but I grabbed her ponytail and yanked back on it, forcing her back up onto her hands. She shrieked at the new sensation, but quickly pushed her ass back against me violently.\n\n\"You're gonna cum for me again, aren't you?\" I asked, growling into her ear.\n\n\"Not sure...\" she managed.\n\n\"You're not sure?!\" I exclaimed.\n\nShe frantically shook her head back and forth, pulling on her ponytail in the process. \"Not sure... I ever stopped cumming.\"\n\n\"Ah,\" I said, letting her hair go and reaching around to cup her right boob in my palm. \"Well then, keep cumming for me, but do it loudly...\"\n\nI bit down on her earlobe as I moved my finger faster, sawing in and out of her ass almost as rapidly as my cock moved in and out of her pussy.\n\n\"...and do it now.\"\n\nShe screamed, but I was ready, moving my hand from her chest over her mouth after she'd had a second or two to let loose. She licked and sucked at the skin on my palm wildly, brushing her teeth against the inside of my wrist as she spasmed all over my cock. I pushed her back down onto the table and slowly removed my finger from her ass, smiling as she moaned at the loss.\n\n\"What the...\" she started, but either couldn't finish or just decided not to.\n\n\"Easy, baby,\" I soothed, running my hand from her neck down to the top of her ass, then back again. \"Easy.\"\n\nIt took more than just a few seconds, but eventually I felt her get her breathing under control.\n\n\"Did you cum?\" she asked.\n\n\"I did not,\" I replied. \"And I am not complaining, because what I just watched you do... honey, that was awesome.\"\n\n\"I didn't do anything,\" she said, breathlessly. \"You did all that to me.\"\n\n\"No, no,\" I said, lightly petting her ass. \"You opened yourself up to me. Gave me access. You allowed me to pleasure you. It was amazing.\"\n\nI backed up and pulled out of her, and she quickly spun around to face me, though she looked a little pale. \"You, Mr. Wynn, say the nicest things.\" She kissed me hard before sagging back and letting the table support her weight.\n\n\"I'd like to move into the living room,\" I said. \"Can I carry you again, or would you rather walk?\"\n\n\"Oh, you're asking now?\" she asked playfully.\n\n\"Well, you gave me crap the last time I carried you,\" I reasoned.\n\n\"Doesn't mean I didn't like it.\" So, I scooped her up in my arms and kissed her back as I carried her into the living room. I sat her down on the couch before laying down on the floor. \n\n\"Care to go for a ride?\" I asked.\n\n\"Don't mind if I do,\" she answered. \"Which way do you want me?\"\n\n\"Ladies' choice,\" I said. \"The view is pretty damn amazing either way.\"\n\nShe smiled at me and straddled my waist, facing toward me. She held my still-granite-hard cock in her hand and slowly sank down on it. \n\n\"Gahhh, you feel so good inside me,\" she moaned. \"Fill me so full.\"\n\n\"Fuck,\" was my brilliant response.\n\nShe squatted up and down on me for a few strokes, but her legs were just as tired as mine, and she moved onto her knees after that. Her breasts bounced magnificently in front of me, and I massaged them and pinched her nipples lightly as she gyrated on me.\n\nSuddenly, I had a flash of inspiration, and pulled her down to kiss me. I don't know if she felt my hands working on the back of her head, but when we broke off the kiss, she sat back up shrouded by a curtain of jet black hair. She seemed surprised, but I showed her the pink hair tie I now held in my hand.\n\n\"One of the first things I noticed about you at the store,\" I explained. \"Lovely, long, beautiful black hair, hanging loosely down your back. Don't get me wrong -- I loved the ponytail, and I loved pulling on the ponytail. But this is just... gorgeous.\"\n\nShe beamed at me and dropped down for another kiss. Her hair fell around us, and it sort of served as a barrier to the outside world. All the crazy shit that had happened at the store, and all the stuff we'd talked about... it all just seemed to fade away. It was just me and this beautiful, sexy woman in here, under the protection of these dark curtains.\n\nShe eventually sat back up, but her tractor-beam stare never left my eyes. After another five minutes of that, she leaned down again and fed me one of her tits. I greedily sucked and nibbled on the nipple, and she started bouncing a little faster, throwing in a little extra grind for good measure. I thought about snaking my hand in between us to toy with her clit, but before I could, she squeezed the back of my neck and cried out again.\n\n\"Gah,\" she scoffed when she was done. \"I've never cum this much in one day.\"\n\n\"Glad I could help,\" I smiled. \"Three times in a day was pretty common for me back in my 20s, but it's not a place I've visited in quite some time. I do believe I'm not far off, though.\"\n\n\"Oooh, you're gonna cum for me again?\" she asked rhetorically. \"I mean, it's only fair, you sexy man... you've made me cum about 33 times today. So I should at least get 3 back from you.\"\n\n\"C'mere.\" Sweat covered both our bodies, so I flattened her against me and pulled her forward on my body, sliding her up my torso until my cock just about slipped out of her. I planted my feet flat on the floor and bent my knees, giving me the leverage I needed to fuck up into her. I locked my arms around her lower back and hammered into her as fast my thighs would let me.\n\n\"Oh, Jesus, Houston,\" she stammered, her head falling onto my shoulder. \"Oh, God... this was supposed to be for you, but... holy shit, where did you learn this?\"\n\nI grinned. \"This is what you wanted, right?\" I asked her. \"You were looking for experience. You're getting experience.\"\n\n\"I'm getting an experience, is more like it,\" she said. \"But I don't know if this is going to be enough. I might need it again, and again, and...\"\n\nShe didn't stop making noise, but her noises stopped making sense. She started chanting something, but even though her lips were inches from my ear, I couldn't make it out at first. \n\n\"Can you?\" That was clear enough, but I guess my look of confusion was obvious. \"Can you cum with me?\"\n\nI just nodded and worked my hips faster.\n\n\"Oh, I want to feel it, Houston,\" she said. \"You're going to make me cum again, and you're going to shoot off inside me...\"\n\nShe peppered my shoulder, my collarbone, my jawline, with hot, wet kisses, licking and nibbling on my chin as she talked.\n\n\"I can't wait to see how that feels... first thing tomorrow, we're going somewhere to get tested, Houston... I need these damn condoms out of the way. I need to know what it feels like to have you cum inside me.\"\n\n\"Fuck, Katrina,\" I stammered. I knew she preferred the shortened version, but the longer version just seemed right, at least in this moment. \"You're so fucking sexy, and tight, and...\"\n\n\"I can't hold out anymore, Houston,\" she whispered now. \"I have to cum. You're gonna make me, and I want to feel you--\"\n\nShe cried out into my neck, and I let out several loud grunts as I gave one final thrust and let loose, filling that insipid condom with my third orgasm of the night. I saw stars again, and the only things that made sense were to pull out and slam back in again, and to hold on tight to this crazy, amazing creature on top of me.\n\nIt took 3 or 4 more thrusts before I felt like everything was out, and I slowly softened and slid out of her pussy. I tugged the condom off and let it fall to the ground. Trina tried to move off me, but I tightened my grip and wouldn't let her go.\n\n\"I don't want to crush you,\" she said, and I laughed.\n\n\"You're tiny,\" I said.\n\n\"I weigh like 130 pounds,\" she said. My eyebrows raised at that -- not because I had any problem with that number, but because she was a woman who didn't have a problem telling me her weight. \n\n\"And I weigh twice that,\" I said. \"Just shut up and let me hold you.\"\n\nShe did just that, at least for the next 5 or 10 minutes. We just lay there on her living room floor, her draped on top of me and me clasping on to her just in case she had the crazy idea to try to move again. I loved the way I could feel her chest rising and falling on mine. We smelled like sweat and sex, but I could still detect her very distinct, very feminine scent. I buried my nose in her neck and took several deep breaths to drink it all in.\n\n\"God, you are sexy,\" she said with a smile when she pulled back a little bit. \"I mean, I thought I had an idea back at the store, but... I had no idea, actually.\"\n\n\"And you're a very gorgeous, very sexy, very incredible young woman.\" She seemed satisfied with that comment. She slid off me, but quickly curled up against my right side, and I wrapped my arm around her shoulders. \n\nI was content to lay there for at least the next few hours and just hold her, and she lasted for at least 20 minutes. Finally, she broke the silence.\n\n\"You don't seem to have any issues with confidence or self-image, so you probably don't need me to even tell you this,\" she started. \"But I'm going to anyway. Your ex-wife is a fucking nutjob, ok?\"\n\nI didn't know what to expect, but it wasn't that. I laughed. Hard.\n\n\"I'm serious. I mean, you said she's marrying a woman now, so maybe that's why. But to think there's a man out there who can do... well, any-fucking-thing... like you just did it... she's crazy. I know I'm just 19, and I'm naive and inexperienced and all that, blah blah... but what the fuck else did she want? I know you probably questioned yourself a lot when everything was happening, and I'm sure self-doubt played a least a small role in why it took 2 years to start dating again, but... at the end of the day, she didn't deserve you. You're a great fucking guy.\"\n\n\"Well, I appreciate that, Trina, but you've only known me about 5 hours.\"\n\n\"Yeah, and all I've learned about you over those 5 hours is that you look out for other people, even when you don't know them. You know how to handle yourself under pressure. You can match wits with me and keep up with me in a conversation. Your weird sense of humor matches mine, and you can make me laugh whenever you want. You have strong opinions about things, but you're not too stuck in your ways to modify them when presented with new information. You take incredibly good care of your body -- I mean, you just kept up with a teenager for the past 4 or 5 hours. You're old enough to have experience, but still young enough at heart to chase me around the house. Last, but most definitely not least, you're an incredibly thoughtful, giving, caring lover whose main focus is your partner and their pleasure, and only after they're completely satisfied do you start to think about yourself. That about sum it up?\"\n\n\"Well, when you put it that way...\"\n\n\"I mean, your only obvious character flaw is that you don't want your fucking life partner to fuck other people. How fucking stupid is that? I mean, that only makes you the same as... oh, I dunno... 99% of the rest of the world. And hell, from what you said earlier, even that's negotiable. So I guess I can add 'flexible and open-minded to new experiences' to that other list.\"\n\n\"You know,\" I said, kissing her forehead. \"You're not like any other 19-year-old I've ever met.\"\n\n\"I told you,\" she said. \"I'm almost 20.\"\n\nHer giggle was infectious, and after a few seconds I was laughing right along with her. We settled down after a little bit, though, and the silence hung in the air for a while. It was probably time for me to go, but there were still some things I needed to get settled.\n\n\"Wow,\" she said. \"No idea what time it is, but it is pitch-fucking-black outside. You literally fucked me all afternoon.\"\n\nNormally, I'd have a clever reply to that. Instead, I just blurted out what was on my mind.\n\n\"Trina?\" I asked. She lifted her head onto my stomach and looked up at me expectantly. \"You've said a few things today... talking about the next time when we got out of my truck... teasing about getting more blowjob practice with me... and then just now, talking about getting tested tomorrow so we don't have to use condoms...\"\n\n\"Are you building up to a question?\" she grinned.\n\n\"What do you want out of all of this?\" I asked. \"I mean, I know it's crazy to even ask that after being together one time, but... I figured I knew how this whole thing was going to go, but now I'm honestly confused.\"\n\n\"Yeah, I had my own ideas about that, but I'm not sure if I was right, either,\" she admitted. \"What did you think was going to happen?\"\n\nHow much of this did I really want to say here? How much of myself was I willing to lay out?\n\nAll of it. All of you.\n\n\"Well, I figured you'd get to scratch your 'older man' itch,\" I said. \"You were right before -- I am pretty damn confident, and I know I blew your mind today. You blew mine, too, among other things.\"\n\nShe was patiently listening, but she snickered.\n\n\"So, I thought maybe we'd meet up a few more times. But after that... well, I didn't think a young, intelligent woman who had the whole world waiting for her would really want to hang around with a guy who's life is already half over.\" \n\n\"Your life's not half-over, asshole,\" she said, slugging me in the bicep. It actually hurt, if only a little.\n\n\"No, no, I don't mean it that way,\" I said. \"I've got a lot left to give, and there's a lot I've never done that I damn sure intend to do. Just numerically -- the average life expectancy of an American male these days is 77 or 78. So, I'm a little over halfway there.\"\n\n\"You were really fucking outstanding at math in school, weren't you?\" I nodded, and she grumbled. \"Because you're obsessed with numbers!\"\n\nI laughed out loud, but instinctively, I pulled her a little tighter. \"What were you thinking was going to happen?\" I asked.\n\n\"Well, you had a sexy girl half your age throwing herself at you, and you're no dummy,\" she said, tracing her fingertips across my chest. \"Like you said, I know I definitely showed you a good time, so I was pretty sure you'd be up for meeting me again. But beyond that... and stop me if you've heard this before... what would an older, wiser, extremely well-put-together man in the prime of his life want with a dumb little teenager who's barely halfway through college?\"\n\n\"Trina,\" I growled a little, grabbing her hair and tugging just a little. \"You're not dumb, you're not little, and you're only a teenager for two more months, remember? You have so much to offer.\"\n\n\"I know, Houston,\" she said, boring into my eyes with hers. \"I know that, but the same goes for you. So forget what you thought I wanted, or what you thought was going to happen. The question is... what do you want?\"\n\nHere we go.\n\n\"It's been a long, long time since I was into one-night stands, or even two-week stands, Trina,\" I said. \"I didn't make it much past 24 or 25 before I was done with the casual bar pickups and having sex just for the sake of it. Hell, even the one night I gave in and just tried to have fun and let loose after a year in a war zone... I jumped into an orgy and left with a girlfriend. Don't get me wrong -- I love sex, and I want to have as much of it as possible. But I want a relationship to go along with it. I want someone to go shopping with, go hiking with, and go to football games with, even if it's Ohio fucking State. I want someone to take vacations with, someone to watch thunderstorms with. Someone to experience the day-to-day ups and downs with. Someone who can lean on me, and someone I can lean on. I know, I know, it's sickly romantic, but that's what I--\"\n\nShe leaned down and kissed me then, and while it wasn't the longest or most passionate kiss we'd shared all afternoon, it was definitely the deepest.\n\n\"That makes me happy,\" she said, pulling away just an inch or two and licking her lips.\n\n\"It does, huh?\" I asked, still not really sure what was going on, but thinking she could have reacted much worse to my little manifesto.\n\n\"Houston, I heard you call it my 'older man itch,' a minute ago,\" she said. \"You're right, I've pretty much decided it's only going to be older men for me from here on out. You basically cemented that for me today, by the way. But I'm not just looking for any older man, Houston. I'm looking for the older man.\"\n\n\"Well, that makes me happy, too,\" I said. \"But at the risk of self-sabotage, I gotta ask... why? I know at 19 years old, long-term relationships were the last thing on my mind.\"\n\n\"That's probably how it is for most people my age,\" she said. \"But most 19-year-olds haven't lived my life. My dad was a hardcore alcoholic and died of liver failure when I was 10. We couldn't keep our house, so we were in and out of trailer parks for the rest of my childhood. My mom had a different guy at the trailer every other week, and she was always either on or detoxing off of some drug or another. My older brother took over the parent role, but he got fed up with my mom's shit and moved to Cincinnati when I was 13. My older sister has a little boy who'll never know his father because she doesn't know who it is, and she's dated a constant string of losers ever since my dad died. Believe it or not, Mike, the guy from the store today? A model citizen compared to most of Katie's boyfriends.\n\n\"So yeah, I lost my virginity at 14, and I've probably been around a little bit more than most girls, but I knew from an early age that I somehow managed to get most of the brains in the family. All my teachers and guidance counselors told me that if I was disciplined enough to harness them, my smarts were my way out. So I studied my ass off, graduated with a 4.0 and earned a pretty big scholarship, and I'm on my way to getting what I want in my professional life.\n\n\"I see my mom three times a year, maybe less. The only reason I see my sister as much as I do is because of Jackson, my nephew. I see my brother whenever I can, but he's a long-haul truck driver based out of Kentucky now, so that's every other month, at most. I had to ditch most of my high school friends because they were content to stay in dead-end jobs and dead-end lives, and I don't want that. I have a few friends at school, but only one or two that I could really count on if shit hits the fan. \n\n\"I want stability, Houston. No, I don't want to get married tomorrow, or even anytime soon. But I also don't feel the need to fuck-and-run. I feel like I've been living on the fucking run for years now. I know I have a lot to offer, and I want to find someone who has a lot to offer me back.\"\n\n\"And you think I'm him, huh?\"\n\n\"After just one afternoon?\" she asked. \"Of course, I have no idea. But I don't think we could have possibly gotten off to a better start, do you? I mean, I guess you could have saved me from three guys trying to harass me, or given me 34 orgasms, but...\"\n\nShe was smiling from ear-to-ear now, and so was I. I stood up and pulled her to her feet as well, then drew her in for a long, languid kiss. My hands ran generously up her back and over her shoulders, and she decided to squeeze my butt, for a change.\n\n\"So we just see how it goes, then?\" I asked.\n\n\"That sounds wonderful, Houston,\" she said, giving my cock a little squeeze before giving me another kiss. I didn't let it go at that, and I pulled her down to the couch, where we made out for another 20 minutes, our hands eagerly roaming over our naked bodies.",
        "\"I've always heard stories about older men needing time to recover,\" Trina said, as her hand grasped my rejuvenated cock. \"You don't seem to have that problem.\"\n\n\"It's all about the company you keep,\" I said, standing up and pulling her with me again. I licked one nipple while playfully pinching the other, and she gasped. \"Unfortunately, though, it is late, and I have another early morning tomorrow. I need to be heading home.\"\n\n\"Yeah, about that...\" Trina trailed off, and a sheepish look crept onto her face. \"Can you do me one more favor?\"\n\n\"Anything,\" I said, and I meant it.\n\n\"Could you give me a ride back to the store?\" she asked. \"I... um... kinda left my car there today.\"\n\nMy jaw fell open a little. \"But you said...\"\n\n\"I know, I told you my car was in the shop,\" she stammered, \"but you were walking away and I had to come up with a reason to make you spend more time with me, and--\"\n\nI shut her up with another kiss. \"You're so incredibly sexy when you're flustered. You're going to make me crazy, forcing me to drive you around town with this hard-on.\"\n\n\"Well...\" she started. \"I could help you out with that in the truck...\" she said, but made it clear there was more.\n\n\"And?\" I asked after waiting a few seconds.\n\n\"And... well, do you remember the first question I asked you at the store today? If you wanted your milk in a bag?\"\n\n\"Yeah,\" I said, then immediately realized something. \"And it's still sitting in my truck outside, along with my eggs. I forgot to bring them in when we got here.\"\n\nShe was smiling and giggling a little.\n\n\"I believe you were focused on something else when we pulled up,\" she recalled, and I grabbed twin handfuls of her ass, just to remind her exactly what it was I was focused on. \"I mean, that makes it my fault, right? So, if you take me to the store, I can run in and buy you more milk and eggs, and then...\"\n\n\"And then...?\" I said, nuzzling her neck. I had no intentions of letting her buy me anything, but--\n\n\"And then, I could follow you home, carry them into your house for you, put them in your fridge, and see if there are any drinks I can get you off the bottom shelf...\"\n\nShe squealed as I scooped her back up into my arms. \"Carrying me again?\" she asked.\n\n\"Quickest way to get you back to your bedroom,\" I said. \"I can't believe I'm saying this, but... you need to get dressed.\"\n\n***********************\n\nThanks for reading. Let me know what you think. Comments, votes, and feedback are very appreciated! I have ideas for these two, but any sequel is on the backburner for now... unless you force me to move it up with your feedback.\n\n \n"
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "houston",
        "nineteen",
        "older man",
        "shower",
        "spanking",
        "trina",
        "younger woman"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/hey-nineteen"
}