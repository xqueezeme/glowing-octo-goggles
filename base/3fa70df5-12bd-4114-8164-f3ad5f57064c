{
    "title": "Path of the Chosen Pt. 01",
    "pages": [
        "Of all the horrors, torments, and plagues visited upon man, none can be greater than love. For the sake of love, man will betray his gods, his nations, his friends. For the sake of love, man will betray himself even unto the hands of death. -- Oracle of Thrace\n\nA cheer went up as she grabbed the girls head and kissed her. It was a long kiss and I was sure there was some tongue in there. She looked over at me and smiled. As I looked into her brown eyes from across the room, I raised my glass in salute. She laughed as someone poured another shot of tequila into the girl's navel. I took a sip of my whiskey. Yeah, life was good. Weird but good. For now anyway. It wasn't always. I had gone through a lot of complications to get here. Nick tapped my shoulder and pointed towards the door. The man coming through had a badge from the local PD clipped to his belt. Nick looked at me and I gave him a nod. For the first time that night, he left my side to escort the man back to the VIP section.\n\nLieutenant James McCoy. The Old Dog they called him. Once he got his teeth into something, he never let it go. And I was proof of that. He had been keeping track of me for years now, more than a decade. All the way from patrolman to Lieutenant, he had kept his eyes out there, looking, watching. He had retired two months ago and had reached out. He wanted to understand, even if he couldn't slap the cuffs on me, he wanted to know that he hadn't been wrong. At least, that's the reason he gave. In truth, I didn't know if anything I did was wrong or not. I no longer cared.\n\nI had long since moved beyond such things.\n\n\"Aaron,\" he said by way of greeting.\n\nNick walked to stand behind me, but a wave of my hand dismissed him. Instead, he went and took a seat at one of the couches.\n\n\"Lieu,\" I answered as a waitress poured him a glass.\n\nHe took a sip. \"Good stuff. Tastes expensive.\"\n\n\"The bottle costs about 3 months of your old salary,\" I stated as I raised my own glass.\n\n\"So, how you been kid?\"\n\nI smiled, so I was still kid, huh? \"Good, really good. You? How's retirement treating you? Turning the game over to the new kids.\"\n\n\"Eh, I got to raise a few pups that know how to keep the place running.\"\n\nI smiled. We sat and chatted for a while, almost an hour, until Diana came back to the VIP section.\n\n\"Ready to go,\" I asked her. We only met here because of her. I gave her as much time as I could, and this is what she chose for tonight. Personally, I hated clubs. Loud music, too many people, and most of them drunk. It was a cacophony of noise and stupidity and hormones. Although, strangely enough, I was very proud to be the owner, even if I hated coming here.\n\nDiane smiled at me. \"I'm tired now. And drunk.\" She looked at the women sitting at my side. I waved my hand and dismissed them.\n\nI looked at the Lieutenant. \"We agreed to some truth right?\" He nodded at me. \"Come with me then, and we can really talk.\" He stood up. Goddess that man had a presence. Nick led the way out. The security team at the club helped him, like they were trained to. We walked out, not slowing our pace at all. Anyone that had the misfortune to be in our way was shoved aside. A few made protestations. They were quickly dragged away by members of the security team. They would be taken to the back door and beaten. Its what they deserved for standing in my way.\n\nWe made it back to my place, a penthouse suite in downtown. As we walked in, Kim was kneeling inside just past the doorway. \"Prepare us some drinks and bring them to the living room.\" Nick was inoculated. Working for me, he had become accustomed to such a sight, but McCoy... I smiled as he stood stock still, watching Kim's naked, beautifully formed rear-end walk away from us. I was quite proud of Kim. She was my original work. I had fine-tuned my talents by working on her.\n\nAs she turned the corner, McCoy realized he had been staring. I spared him a quick smirk over my shoulder before leading the way to the living room. Nick sat down in his usual recliner, placing his gun in the cushion. I sat on one of the couches, wrapping my arm around Diana as she sat beside me. She leaned against me, her head on my shoulder, as I snaked my hand under her shirt to play with her breasts. I waved my hand towards the other couch, \"James, please have a seat.\"\n\nI couldn't help but smile as he did. \"As much as this furniture cost, I know you can't be that uncomfortable. Relax, James.\" Kim chose that moment to come in with a tray of drinks. She passed them out, slowly revealing more of her perfect tits as she did, and then knelt on the floor beside me. I slowly ran my fingers through her hair, taking pleasure in feeling those silken threads flow through my fingers.\n\nJames took a sip from the glass, looking at the picture in front of him in wonderment. \"How,\" he asked. \"Why? Why is she doing that? Why is she naked? Why aren't any of you bothered by this? How the fuck can you afford any of this? How have I never caught you?\"\n\n\"That's a lot of questions, James. I promised I'd explain it, but you'll have to suspend a lot of your disbelief if you want to understand it. You sure you want the answers?\"\n\n\"You know, you've gone from calling me Officer, to Sergeant, to Lieutenant, and now its just James. I've always known you had things too good, too easy. There are still nights when I wake up and can't get back to sleep, all because of you. I may not be able to put the cuffs on you, but I need to know.\"\n\nSo, we're going to actually play this thing out huh? Okay then. \"Well, relax. Sit back, James. It's a long story.\"\n\nIn all honesty, people should have to get a license to be a parent. I mean, you need a license for all kinds of things, right? To get a gun, to drive a car, even some jobs require them. Parenthood should be one of them. I'm not sure what the test would look like, but I really think they need to come up with it. It couldn't be any worse than the standardized state tests we give to kids. It would lower the stupid decisions of self-certified parents. Idiot, hormone-driven breeders. The current state of parenting, where no one gets licensed and anyone can put their hand into the cookie pot of the future, led to one night of foolish stupidity. And on that one night, in the back seat of a worn out Cadillac, I was conceived. Mom lifted up her skirt and spread her legs, and my father dove right in.\n\nMom was an nineteen year old about to graduate high school. Dad was a twenty year old high school drop out turned drug dealer. He and Mom had been dating for a while, so it wasn't like she just gave it up to anyone. And he had some grandiose ideas about taking care of his girl and his first born son, yet no intentions of being married. Sadly, it didn't work out that way. Two months into her pregnancy, Matthew Course was arrested. Charged with Possession with Intent and facing 20 years, he pled guilty to Possession and 10 years. He didn't even serve two.\n\nI was barely a year old when Sally Henderson was asked to step outside to take a break from her part-time job by a local Sheriff's Deputy. Matt Course was killed by another inmate. The DA had decided not to accept charges. The inmate was already serving a life sentence without parole. There was nothing more they could do to the man.\n\nAs such, I was initiated to life as a fatherless child, born to a mother that still wanted to be a single woman. I was often abandoned to my aunt as my mother made her way to the latest club in hopes of attracting another man willing to step into my father's shoes. She never did. The only men she attracted were the ones looking for a hot roll and way out. Still, becoming a mother changes a woman, whether she's ready for it or not. I was three when my aunt finally had it out with her.\n\nOnce again, my mother tried to pawn me off on her, but, only being two years older and not having any kids, she had her own plans for the night. Auntie refused to cancel those plans again for the gazillionth time. It started a huge shouting match, which started me to crying, which made them shout all the louder. My aunt grabbed my bassinet, with me in it, shoved it into my mother's arms, and shoved her out the door. Mom was pissed. She didn't talk to my aunt for a whole three months.\n\nMom spent the first years of my life bouncing from job to job. She usually got fired for cursing at customers, sometimes at her bosses, or just not showing up. Only once did she get fired for showing up drunk. Not that it really mattered. There were a million of the low-level jobs she qualified for, and another minimum wage job was always just around the corner. I'll say that for my mother. She was a hustler, and never unemployed for long.\n\nWhen I was seven, Mom got a new job as a receptionist at a dentist office and moved us out of the hood to an apartment in the suburbs. It was different. Too different. I had grown use to crackheads in the alleys and drug dealers on the corners. I couldn't even sleep the first few nights because it was too quiet. The hood is never quiet. There's loud music and sirens and gunshots. Out here, it was just too quiet. It unnerved me. Quiet in the hood meant something was about to happen. So, in the silence of the suburbs, I was constantly waiting for the car to peel around the corner, AK-47's hanging out the window. It never happened. Eventually, slowly, I relaxed, and I got use to peace.\n\nThe move was probably for the best, but I still found ways to get in trouble. The dumbest thing me and a few friends came up with was Snake Chicken. There was a small creek that ran behind our complex. During the summer, it wasn't too hard to find yourself a snake or two down by the water. We decided to prove our boyish manhood by playing Snake Chicken.\n\nIt's a simple game. We would surround the snake and poke at it until it would stop trying to run away and coil up. That's when the game began. One step at a time, we would approach,. The snake would hiss and snap and strike out with each step. The point of the game was to get as close as you dared. There was always an argument about who won.\n\nWhen I was twelve, hormones began amongst me and my friends. Girls were still a foreign concept, but manliness was a consistent challenge amongst us. It proved to be my downfall. It came down to Billy and myself as the last two man-boys walking. Someone called out \"Step\" and I did. Billy didn't. The snake struck out. I barely felt it, but I knew it had happened. I fell back, screaming, and started scooting away. Raising up my pants leg, blood flowed from two small wounds.\n\nIt burned. I felt it burning its way up and down my leg. Spreading. Spreading. Deep. Through me. My heart raced, my blood surged. Adrenaline carried the poison faster and harder.\n\nIt was then that I realized the quality of my friends and my would-be girlfriend. They all ran. Everyone one of them. They didn't even think to call for help, or try to get me out of there. They just ran. I was scared.\n\nChildren are immortal in their own minds. But I had just felt the cold hands of fate take ahold of the threads of my life. I knew I was going to die. I didn't know what that meant, but I was sure it was bad. It was an adult thing. And all adult things were bad. Like spinach. I thought about all the burned ants and crushed beetles that had crossed my path and felt surprisingly regretful. I felt myself becoming lightheaded, dizzy. I started seeing spots in front of my eyes. And then... laughter.\n\nEverything was dark and light and bright and foggy. I was too hot and too cold at the same time. I felt everything, but I couldn't feel anything. And then... laughter. It was strange and light and beautiful and hurtful. Why was she laughing at me? I was hurt. I was dying. Why would she be laughing at me?\n\nSuddenly I was falling, the ground rushing up at me. I wasn't laying on grass though, it was sand, soft beneath me. As the fog started to clear away, I realized something was standing over me. It snorted it at me.\n\n\"Stand up, boy,\" it said. I rubbed my eyes, trying to blink away the fog and mist. It took a few seconds before I recognized it was a man sitting on a horse. The horse was magnificent. A glossy midnight coat sprinkled with stars. As I came to my senses, I realized the man riding it wasn't just a man, it was a knight. He was clad in black and silver shining armor, a sword hung at his side. \"I said get up.\" His voice was deep, hard.\n\n\"Um, I-I can't. I got bit.\"\n\n\"You look fine to me. Now get up. I won't say it again. You need to get going.\" I looked down at my leg where I had pulled my pants up where I had seen the result of the serpents fangs. It was fine. No gaping holes, no bleeding. It didn't even hurt. I stood up slowly, scared that any pressure would suddenly remind death that he my name had come up on his list.\n\nDeath.\n\nMaybe he didn't forget me. Maybe I was dead. I looked around me for the beetles and ants, but I didn't see any.\n\n\"Get going boy. You don't want to keep her waiting,\" the knight said.\n\n\"Keep who waiting,\" I asked as I looked up at him. I couldn't see his face beyond his horned helm. That's not what knights are supposed to look like. The armor should be silver and steel, not black. And knights didn't wear horns, that was vikings. And where was his lance and shield? All he had was the sword at his side.\n\nHis gauntlet ed hand pointed off in the distance. I followed his hand to see a large castle sitting on the horizon. I turned around as I heard the horse snort. Its hooves sounded strong and hard as the knight turned it around. \"Get going boy,\" he said as he started to trot off.\n\nI looked back towards the castle. It was a long way off. I looked around me. I could see nothing but sand and trees. It was a desert. With a forest. Deserts weren't supposed to have forests in them but this one did. There was nothing but sand and trees as far as I could see. All the way to the castle. I jumped as I heard something howl in the distance and started running. It quickly became apparent that I wasn't going anywhere. I was moving. I was running pretty fast. I was one of the fastest boys in school. But nothing around me was moving. I came to a stop, bewildered. What was going on?\n\nI started walking, but this time I did move. And quickly. Walking was like running. Running was standing still. And standing still was, well, standing still. So I walked. And walked. And walked. And walked some more. Kept on walking.\n\nFor some reason I was never tired. And I liked it here. It was very pretty. There were all kinds of strange plants and flowers. Weird looking fruit hung from some of the trees. Sweet scents floated through the air. The sky was weird too. The sun was high, so it was at least midday, but I could still see the stars past the clouds. It was interesting, and pretty, and strangely calming. There were interesting animals too. Like none I had ever seen. Birds that looked like hooded priests. White fox-like creatures with several tails and horns. All of them would stop as I came upon them. They would stop whatever it was they were doing and look at me.\n\nI chalked it up to being dead.\n\nSo I walked.\n\nThe forest along the path had suddenly given way to a meadow. Sand changed to dirt. Dirt gave way to grass. I came upon them suddenly. Two angels were sitting in the meadow, talking to each other. Except they didn't have any wings, or halos, or the fancy, white togas. One of them was a properly blonde angel with a lyrical laughter. She was dressed simply in a green and orange blouse with a light, yellow dress that flowed down to her shoes. She was perfect there, sitting among the sunflowers, smiling and laughing. I imagine that the birds had just flown off from talking to her.\n\nThe other one, less so.\n\nShe was still beautiful. But, dressed in a full length, golden white gown that literally glowed in the sunlight, she was so out of place. In a ballroom, dancing with Prince Charming, she would have been magnificent. But here in the meadow, that woman, in that dress... The dress itself was a dream made imperfect simply by being tangible. The woman, her raven black hair, her porcelain skin... The sun itself didn't deserve to lay hands on her.\n\nAs I saw them, they saw me. I froze. Halfway into my next step. Foot still in the air. As did they. Their laughter stopped as they caught sight of me. \"Is that,\" the blonde asked.\n\n\"It can't be,\" the raven said.\n\n\"It-it has to be.\"\n\n\"By the golden-\"\n\n\"It is!\"\n\n\"But it's so little!\"\n\n\"Shush. She chose it. It's fine.\"\n\nAnnoyed. I sat my foot down. I was growing tired of being referred to as an \"it\".\n\n\"It can't be real,\" raven stated.\n\n\"Boy,\" blonde called out to me.\n\n\"Yes, ma'am.\" My mother had taught me manners, after all. Being dead was no excuse for being disrespectful.\n\n\"See,\" blonde said to raven, \"it is real.\"\n\n\"But look at it!\"\n\n\"Exactly. Look at it. She chose it. It's perfect.\" Blonde turned her attention towards me. \"You should get going boy. She hates to be kept waiting.\"\n\n\"Um, yes, ma'am.\"\n\nI immediately regretted my decision to start walking. I could have sat with them, asked them questions, gotten some advise. Hindsight and all that. Of course, hindsight means having the knowledge I have now. They'd have laughed and sent me on my way.\n\nThe meadow quickly disappeared behind me as I dove back into the forest. To imagine that angels were only steps behind me, and I died for the chance to beat Billy. Fuck Billy. But, far too quickly, the sound of their hushed chatter was left behind me. Still, the castle was much much closer now.\n\nI walked for a long time. The sun never moved. It seemed like an eternity before I finally came to the gates. I stood in front of them frozen. There was something horrible beyond those gates. Amazingly, terrifyingly horrible. They opened for me. No one opened them, they just moved. Not slow, not sudden. Just. And they were open.\n\nThe path forward was straight. My heart pounded with every step. Strange. I was dead but I still had a heart beat. That wasn't in any of the movies. None of this was. I came to the doors of the castle. They were so tall. Just short of the sky. I didn't even know how I knew it. But, somewhere deep inside, something about those large wooden doors begged me to turn back. But when I looked behind me, I had nowhere to go back to. The gate was closed, but the path was still there. If I walked back, those gates would open for me, one last time. But I didn't know where else that path might lead. It didn't lead to anywhere. And I was here. I was lost, somewhere in Oz, and a long way from home. So, with Snake Chicken on my mind, I gathered up my courage and stepped forward.\n\nThe doors swung open for me. There was no one there behind them, just a long, open, grand hallway. The ceilings were impossibly high. The white stones I had seen from the outside were replaced with black marble, solid and streaked with white marble lightning. The floors were pink marble streaked with gold. And every inch of it was pristine. There was no grout. These weren't tiles. This palace had been grown through eternity, and I had no right to take a single step. Something in me made me take off my shoes. I was on sacred ground. Both blessed and cursed. The floor was warm beneath my feet.\n\nThe doors at the end of the hall opened as the wooden one's behind me closed. I took another deep breath and walked into the gaping maw of blessed damnation.\n\nAnd into a grand throne room. It was a stark contrast. The walls were pure white marble with not a crack to be found. The floors as well. If it wasn't for that irresistible force drawing me forward, the room would have been to pure for me to enter.\n\nShe sat there on a gray marble throne. The slightest smile on her face. She was dressed in a deep red toga, almost like what the other angels should have been wearing, except for the color. She leaned on her hand, golden eyes glittered as she watched me approach. She was made of smoke, ethereal, swirling in and out of reality.",
        "\"Finally,\" she said. As I looked at her, I couldn't help but think of the snake. She was exactly like it. Even a person who had no idea about what a snake was would see it for it's beauty and its danger. She was the very allure of destruction. The beauty of the grave. Graceful suffering. Painful pleasure. She was skydiving and roller coasters. And every exciting thing that creeps in the night. \"Come child.\"\n\nHer voice was sweet cream on silken winds. I didn't have control of myself anymore. I didn't even think about it. Mesmerized, I blindly walked towards her, my bare feet silent on the floors, and knelt before her throne. I don't even know why I knelt, but I did.\n\nAs I looked up at her, she vanished from the throne and reappeared in front of me, smoke showing her erratic trail. Her hand was suddenly under my chin, raising my head. She was soft and cool to the touch. Of all the angels I could have come across, I couldn't imagine anyone more beautiful. I was twelve years old and absolutely in love. Beyond love. Words had not been imagined to describe what I felt for the being before me. And I was absolutely terrified of her. I saw love and beauty in her eyes, and blood and death on her lips. She whispered my torment a thousand times with every word she never spoke. But her every breath was a guarantee of endless pleasures.\n\n\"He's wonderful,\" blonde said.\n\n\"Stand up boy.\" I looked over to see the knight standing beside her throne. Somehow, they had all come out of nowhere to be here. I stood.\n\n\"He's so small,\" raven said.\n\n\"He's perfect,\" the knight said.\n\n\"Look at him.\"\n\n\"I am. Are you saying she chose wrong?\"\n\n\"What?!\" Raven's eyes darted towards the throne.\n\n\"She chose him. You're questioning that choice. That means you're questioning her.\"\n\n\"Of course not! I would never!\"\n\n\"Then he's perfect,\" the knight said, definitively.\n\n\"Oh my,\" throne said to blonde. She had disappeared without me even noticing. How could I not notice. \"How interesting.\"\n\n\"When was the last time you heard them argue like that,\" blonde asked.\n\n\"His very presence sets fire to my own court.\" She smiled at me. And, between an instant and moment, she vanished inside of that ethereal smoke she was made of, only to appear right in front of me. Her hand caressed my face again as she walked past me. \"Aaron, come.\" I turned and followed her. I could feel the others fall in line behind me.\n\n\"What kind of name is Aaron,\" Raven demanded.\n\nBetween one step and the next, the walls of the castle disappeared and suddenly we were in the meadow, then a grand ballroom. Every two or three steps brought us somewhere new. Mountain top, arctic forest, desert jungle. When she stopped, we were in the ruins of what once had been a monumental palace. All that was left though were a few ruined pillars and a broken throne. She sat down upon it. \"Do you know who I am? Who they are?\"\n\n\"No ma'am.\"\n\n\"I'm definitely not 'ma'am',\" she smiled at me.\n\n\"This is Eris, Goddess of Discord,\" the knight said.\n\n\"Go on,\" Eris said with a wave of her hand, \"introduce yourselves.\"\n\nThe knight drew his sword, \"I am Claude Valric, Champion of Chaos.\" He had removed his helm, but I recognized the armor. This was the knight I had first met when I died.\n\n\"That's not the name he'll recognize. Go on, tell him what they really called you,\" blonde said.\n\nHe glanced at her from the side of his eyes with annoyance, \"The Black Knight.\"\n\nBlonde smiled at him. \"And I'm Lysande, the Mistress of the Dark Garden. You haven't heard of me at all. I'm not that famous.\"\n\n\"Oh,\" Claude said, raising an eyebrow. \"Don't be modest. Every fairy godmother the boy has ever heard of is based on you.\"\n\nRaven laughed at the exchange. \"Me you've heard of. Morgana Faiye. Although the stories usually call me , Morgan Lefaye.\" She looked down at me, disapproval still in her eyes. \"And you are?\"\n\n\"No one of any significance, as of yet,\" Eris answered for me. \"Much like you all were before I chose you. But time changes many things. You should explain those things to him, Morgana.\"\n\nMorgana's eyes narrowed as she began speaking. \"Do you remember that feeling you had before you entered the castle?\" I nodded my head. \"That was God. He was trying to stop you. As a of right now, you are beyond judgment. When you die, you will go to neither heaven nor hell. Look around you boy. This is where you will be spending eternity. Here, on the Chaos Plains.\"\n\n\"So I am dead.\"\n\n\"No, child, not yet,\" Eris spoke. She waved her hand and a pond appeared between us. When I looked into it, it was like seeing a bird's eye view of the world. \"Its stagnating. They all stand still, waiting for the next cellphone or computer. Even with wars and disease and all the dysfunction, they've stopped moving. Completely. They're not even moving backwards. So, I need to get them started again. That's why I've chosen you. Your very presence in the world will be the impetus that makes them move. You will be the spear that forces them to walk.\"\n\n\"Um, h-how,\" I asked her, bewildered.\n\n\"I'm going to empower you, just like I did them,\" she smiled. \"I'm bored, child. And mankind isn't doing anything interesting. You will change that. Go on, children. Give your brother his gifts.\"\n\nClaude took a seat in a chair that came from nowhere. \"I've already gifted you. Invulnerability. No weapon made by man will prosper against you. No sword will pierce you. No spear will slay you. No arrow will stop you. And no need for thanks, little brother.\"\n\nLysande knelt to look at me at my own eye level. She smiled. I liked her smile. \"Hmmm, what should I give you? Such a handsome boy. And wasn't it for a girl that you played your little game? Hmm. I'll give you a gift, but I'm not letting you open it just yet, okay? But I promise you'll love it.\" She grabbed my chin, turned my head, and kissed me on the cheek. Then she stepped away to sit on her own magical seat.\n\nI inadvertently rubbed my cheek where she had kissed me. Her slight giggle and the laughter in Eris's eyes told me I was blushing. Morgana turned her disapproving gaze from Lysande to me. \"Fine,\" she said. \"Fine. She chose you. Nothing else needs to be said, I suppose. I'll give you...something only wisdom will teach you to use properly. I'll give you this.\" She waved her hand in the air around us. \"The Chaos Plane. I'll allow your spirit to leave your body and come here at will. Even though you're still alive.\" She smiled at me. \"One warning, child. Every gift bears its own curse. Remember that.\"\n\nThey all looked at her shocked, except for Eris. She simply seemed amused. \"Well, a mighty gift indeed. I'll have to match it.\" She turned her gaze to me. \"I gift you with power. Power over your world.\" The bones in my arms started to burn. \"Power over man.\" My head started to ache. \"And a body to contain it.\" I fell to the floor grabbing my head. My arms were on fire, my brain felt like it was about to explode. Every bone and fiber in my body felt like they were being stretched beyond their limits. The pain was beyond what my twelve-year-old mind could comprehend. Even now, years later, I wouldn't wish that pain on any one. Any one. I don't think even the prisoners of Hell have ever experienced such torment. Of course, their torment is eternal, so it's all relative really.\n\nI don't know how long it lasted. A forever moment. At any rate, it felt like eternity. But, unlike Hell, my torment ended. Wearily, I stood back up. Eris smiled at me. \"There's no use for you to be here with me anymore. You need to be in the world now. Though, I'll see you soon, I'm sure.\" Claude walked over behind me. He grabbed me by the nape of my shirt and lifted me up. I was far too tired to struggle. I was barely more than limp in his arms. He tossed me into the water. Instead of getting wet, I was suddenly falling. Falling from the sky. Past the stars. Past the clouds. I fell right down into the depth of my life.\n\nThe sun was barely setting when I opened my eyes. I sat up, bolt straight. I was... I was...\n\nI was fine. Better even.\n\nI felt perfect. I looked down at my leg. There was a small trickle of dried blood, but no wound where it came from. I stood up slowly and started patting my body down, making sure everything was there. I looked up at the sky, amazed, and wondered if she was looking down at me.\n\nAssured that I was whole, I started on my way home. None of my friends could be found. They had all safely absconded into the depths of their apartments, waiting for the news that my body had been found. Wondering if I had told on them.\n\nMcCoy held up his hand. \"Wait. Are you serious?\"\n\nI smiled at him. \"I know. It sounds insane. But you did agree to set aside your preconceived notions. I promise, it's worth letting me get to the good parts. Hell, you haven't even showed up in my story yet.\"\n\nHe was a happily married man. With a naked woman sitting on his lap. A proud, retired policeman. With a sex slave's tit in one had, and an overly expensive glass of whiskey in the other. I smiled at him. His pants were undone. His cock was sliding in and out of her mouth. She was sexy. His pants were down by his shoes. She held his cock with one hand while fingering herself with the other. He could hear the tightness of her as she sucked his cock. He wasn't even sure how his cock ended up in her mouth. He didn't notice it until just now.\n\n\"Trust me, the story gets even more unbelievable. Wait until then to protest.\"\n\nHe didn't protest. He didn't take her mouth off his cock. He let the other slave lift the glass to his lips and he took a sip.\n\nMy world was different now. Colors were brighter. Sounds were clearer. I couldn't wait to get my hands on some ice cream. I was walking home without a care in the world when I first heard him. Luke was sitting outside on the steps that led to his upstairs apartment. 'If I had only taken three more steps!' I heard him as clear as day. Except, his lips never moved. I couldn't believe it. He never spoke. He was thinking it! I was reading his mind!\n\nIt was wonderful, at first. I was hearing all kinds of secret little hidden things. I walked all the way to my home, to my room, in daze. I sat on my couch, listening. I was in a hundred different conversations, in my own world.\n\nMy bedroom door flew open. \"Aaron, I've called you three times. It's dinner time, now go wash up.\"\n\nI looked up, surprised to see my mother standing in my doorway. I could barely hear her through the thoughts. All through dinner, I had to focus extra hard when I saw her lips move to figure out if she was talking to me. Trying to go to sleep... nope. I didn't sleep for three days. Straight. And even then, it wasn't because of any mastery on my part. It was pure exhaustion.\n\nA lot of things about my life changed over the next few years. My grades went up, not a hard thing to do when you can listen to not only the teacher's thoughts, but the smart kids thought's too. The number of friends I had drastically dropped. I refused to talk to anyone that had left me bleeding and bitten that day.\n\n\"Why aren't you out with your friends,\"my mother asked. I gave my excuses. \"Maybe you should make some new friends, honey.\"\n\nThe other kids. I was usually so lost in all the thoughts I was hearing that I didn't even pay attention to them. It was slow going, but I was learned to focus my mind. At first it took all my concentration to block out other people. It was at least three months before it was only an afterthought. I had trouble sleeping, thinking, talking. Everything. Still, by the time I entered high school, I was pinpointing which minds I was invading.\n\nThree months later, I wasn't just reading minds, I was leaving things in them. It was delicate work. Depending on what I wanted the person to do. Did I want them to know they were doing it, how often did I want them doing it? Most of it depended on dropping ideas into their subconscious. I would only make them aware of thoughts if I needed something done immediately. And that was hard.\n\nMom was my first project. It's a immensely damaging thing when you're reading your mom's mind and find out she regrets having you. She loved me, I had no doubts about that. I'd seen it. But she constantly thought about what her life would be like without me. The positive part was that her regret was because she couldn't provide for me. Which led to why she couldn't provide for me. Which led her back to wishing she'd gotten that abortion. I started pushing those thoughts out more and more. Then I started dropping thoughts about going back to school, furthering her career.\n\nThe orders had to be in her own words. It had to sound like her own self-talk. Otherwise, when I left her mind, her own thoughts would push my orders to the side. I had to guide her mind down the path I wanted. It taught me a lot of patience. It took me a year and a half to get it down. But once I did...\n\nI won a lot of money playing chess with old guys outside of the book store. They considered me something along the lines of their own street player prodigy, and they were rather proud of me. I wasn't of course. I was just pushing their minds into the choices I wanted them to take, or reading what moves they didn't want me to make. Still, that got me invited to poker games. Eventually, no one wanted to play against me in anything.\n\nI was 16, I had about 100 kids in the school walking by and dropping off 20 bucks into my locker. The principal dropped off $100 a week. And when a teacher would piss me off, I made them donate to my charity as well. My chemistry teacher pissed me off so bad, I made him give me his whole check. Whether I showed up to class or not, teachers would mark me present. Detention slips never got turned in for me. And I was constantly reading my teacher's minds when test time came around. I was smart though. I never scored perfect. I did at first, but that got me too much attention, and had me trying to answer questions I didn't even want people to ask.\n\nI was sitting in Spanish class, a subject I cared nothing about since I had lifted the lexicon out of the teacher's mind on day one, when I started playing with my pencil. As it fell off my desk, I reached for it. It froze in the air, levitating. Defying the laws of gravity, physics, and pure common sense. As I reached for it, it came to me. As it sat it on my desk, I stared at it, amazed.\n\nSure, I knew Eris had empowered me, but l thought the whole mind reading thing was the extent, and that was almost too much. Now this?\n\nIt was like finding a muscle group. I had to work it out. I started moving more and more things. Unbelieving at first, and then playing, and then really giving a damn. Moving multiple things at once. Larger. It got to the point where I had my school books revolving around me like the solar system. Each subject in its proper orbit. When I got really good, I made them rotate, gave them moons, put dust around my history book to make the rings of Saturn. It was really cool, until my mom walked in and I dropped the whole damn thing.\n\n\"Baby, I'm proud of how hard you work, but clean this room up. I won't have my little genius living like a pig.\" She set forty dollars on my dresser. \"I'm going out tonight with Jacob, are you going to be okay by yourself.\"\n\n\"Aren't I always,\" I smiled at her. I liked Jacob. He wasn't trying to be a father to me, it was too late for that, but he didn't mind being the man in my life. He was like a manhood consultant. Plus, he really cared about my mom. I was dropping thoughts into both their minds about him moving in once his lease was up.\n\nBesides, Jacob couldn't be a father-figure to me. I had Claude for that.\n\nIt was a year after I had perfected my mind reading that I discovered my spirit flight. I had accidentally slipped the leash one night while I was asleep and ended up in the Chaos Plains. Claude was the first to stumble onto me. We talked, he offered to teach me the points of knighthood.\n\nSo, every few nights, I would scooch on up to the Chaos Plains. I learned to fight bare-fisted, sword fight, how to ride, how to care for a stead, use an ax, a mace, a shield, throw a dagger. I learned even more surprising subjects. I learned poetry, dancing, public speaking. Claude was a true knight, even if he did fight for chaos. When Lysande came by, she thought my education was imbalanced. She taught me how to dance properly, how sing, write real poetry. Morgana, determined to prove them both as useless, taught me psychology, politics, economics, government. I was getting an entire second education, one I actually had to study since I couldn't seem to read their minds.\n\nThe problem came when the wind blew Eris our way. \"And what are we studying today,\" she asked.\n\nI was only 14 at the time. And I had never seen the wrong side of Eris's temper. I didn't even know she had a bad side. So I didn't understand why everyone had gotten so tense. \"Oh, Lysande was about to start teaching me astrology,\" I answered.\n\n\"Dear one,\" she said as she caressed my face. In less than an instant, that gentle caress became a vice on my neck. Her voice never changed its tone as she strangled the life from me. She lifted me from my feet and dangled me in the air by my throat. \"You are meant to be my entertainment in the mortal realm. If you spend all your time up here, who's entertaining me?\"\n\nWhen she let go, I fell to the ground. \"I-I only come at night,\" I gasped out.\n\nHer eyes narrowed as she looked at all of us. \"Yes, at night, every night. Don't you understand? Even your presence in world throws it into chaos. But you're not there. You're here. So, from now on you won't have free reign of that little talent until you've reached the age of majority. You may visit the planes once every two weeks. That's it. I won't have you forcing me to watch commercials so you all can study.\" She dropped me to sand. Her voice softened, \"Now, get on with your astrology lesson.\"\n\nHonestly, Claude was more like a big brother. Lysande and Morgana were my older sisters. I never thought to test Eris's restrictions on my spirit travel. That would have been far too foolish for me to even dare. I had learned my lesson.\n\nBy the summer of my 18<sup>th</sup> year on this earth, Mom was engaged to Jacob, I had graduated from high school, and I was a social pariah for anyone my age who knew me. The kids called me BLA, Bad Luck Aaron. Anytime someone seemed to fuck with me or someone else around me, karma always seemed to get back with them. Sooner rather than later. Honestly, I was surpised anyone had put the connection together.\n\nBilly, yeah, that Billy, had become something of a bully. I started forcing him to donate his proceeds to me, and at the same time, piss his pants every time a teacher called on him. When he gave one of the chess geeks a super wedgie, I made him shit himself in the middle of the hallway. Bruce Williams, the varsity quarterback, decided to fuck with a special ed kid. It costed him his ticket to the state championship. He did set a record though. For the most interceptions thrown in a single game. A record he broke the very next week.\n\nEvery time I pass by the stadium on my way to Mom's place, I still smile at the memory. The games were fun to watch.\n\nIt was during that summer between high school and college, that Lysande's gift kicked in. I had long ago discovered what \"Mistress of the Dark Garden\" meant. Lysande made living plants. Living, man-eating plants. She took me once to see her favorite.\n\n\"It's my masterpiece,\" she said. We never got closer than 50 yards to the thing. \"Do you smell that? Isn't that fragrance so relaxing. If you walked over there and sat down, you'd see how soft the bark was. And those flowers, those pale pink petals. They only grow around the fruit. See how low they are? You could reach up and pluck one. They would be the sweetest thing you ever ate.\"",
        "She smiled at me. Her voice was so soft, so sweet. I loved when she talked to me. \"The scent is a pheromone that causes a euphoric feeling. The fruit is a paralytic. The more you eat... The longer you sit. The bark is so soft because that's where sprouts grow through. They'll take root inside your body. Leech you of all your nutrients until all that's left is your bones. Take a closer look at the base.\"\n\nI did. It was surrounded by fresh grown grass. That had grown on top of a human skeleton. I was happy I hadn't received her gift yet. That tree was a kindness compared to some of the others I had seen. I had seen Morgana's death spells and Claude's torture chamber, and Lysande was the one who scared me the most after visiting the Dark Garden.\n\nI was a month past my eighteenth birthday when Lysande's gift kicked in. Suddenly, women, and a surprising number of men, would turn their heads to me every time I walked by. I didn't like it. I had spent a lot of time avoiding attention while I was honing my gifts. This was a lot more attention than I wanted.\n\nIt took me four months to learn this new trick. I had to learn to use my power on my own body to turn my pheromones on and off. It made my telekinesis even more... what's the word. Not powerful. Precise, maybe. I was able to manipulate things on a cellular level. It was cool. When my mom got a cold, I removed the virus cells from her body. It took me about 4 hours to do, but it was worth it for the training.\n\nA week before a I was set to head off to university, Mom took me back to the old neighborhood. I'll admit, I wasn't the little hoodling that I was born to be. The suburbs had softened me up quite a bit. But Mom never forgot her roots. We were from here, we still had family here, friends.\n\nIt was strange though. I knew the new generation of corner boys and the burgeoning crack heads. I grew up with them. I played hide and seek and basketball with them. I knew the only time most of them would leave the city limits was to head up to the state prison. It was a sad fate.\n\nAs we were getting into the car to head home, Mom turned and looked at me. \"Aaron, I want you to know how proud of you I am. But don't you ever forget where we came from. And thank God we got out. But don't you ever forget. Because it just takes one wrong turn, one bad decision, and you could end up right back here, or worse. You understand me? I love you, and I'm proud of you. I want you to have so much more than this.\"\n\nHelp us. Save us. They cried. They screamed. I turned away from them. They begged me. They pleaded. They swore their unborn children. Still I would not hear them. They swore. They cursed. They railed against me. I turned to face them. I drew my blade and gave them the only mercy they deserved. --The Book of Ares\n\nThe thing about power is that it separates you. I was a loner. I knew what people thought of me, when they thought of me. I knew what they thought of everything.\n\nIt was move-in day. I had gotten to the room first and chosen my bed. The room was barely larger than a jail cell. I was setting up my laptop when my new roommate walked in.\n\nAs an only child, I longed for roommate. Only childdom was a lonely existence. As a goddess-blessed super-being, it was even more isolating. He walked in, too large, smelling like tobacco, and loud as fuck.\n\n\"Whats up, man! Names Nick, Nick Fields. This you? Cools, I guess I'll set up over here. Man its good to be here! Been looking forward to this shit. Man I am gonna get soooo much tail. Did you see some of the girls they got in this place!\"\n\nOh my Eris. He literally went on talking to me, without me giving any kind of response, for the next ten minutes. Strangely, I liked him. He was great background noise. And his mind was so blessedly blank! He said whatever popped into his head and that was that.\n\n\"So what's your major,\" he asked. It was the first time in our conversation he actually required input from me.\n\n\"Psychology. You?\"\n\n\"Computer Science.\"\n\nI looked at him. No way someone that big, and brainless, was a computer geek.\n\n\"Yeah I know right. Shouldn't I be a jock or something. Nope. Computers. Dad got me into 'em.\" He went on all the way as we walked across the campus to the cafeteria about his history with computers. He had actually gotten into major trouble by hacking and changing his own SAT scores. He was here on a scholarship from the government, and was already enlisted to serve 10 years in the military. Instead of ten years in prison. He smoked a cigarette on the way there. He was one of those guys who could smoke and talk with a cig in his mouth. It was weird. I didn't like it. I also didn't like the smell.\n\nI dived into his mind and body. I removed the nicotine from his cells. His next step was a bit unsteady, but he caught himself and walked on. I altered his taste buds, he wouldn't like the taste anymore. I altered his mind state. He didn't want to smoke anymore. He didn't need to.\n\nNick would probably backslide once or twice, but I was sure my changes would hold. It wasn't my first time taking cigarettes from a smoker.\n\nHe was weird. A smart, brainless, muscle-headed computer geek. Nick saw a group of girls and split off that way. I put in my headphones and sat down to my slices of pizza. I saw her walking away from the salad bar. She was lovely. Long legs, nice rack, pretty face. I reached into my mind and turned on my pheromones. I smiled as she walked past me and got a whiff.\n\nShe stopped and looked around. When she realized where that delightful scent was coming from, she walked over to my table. \"Mind if I sit?\"\n\nI took off my headphones. \"Sure.\"\n\n\"I'm Kimberly Answorth,\" she introduced herself. She had a beautiful smile.\n\n\"Aaron Course.\"\n\n\"Freshman?\"\n\n\"Yep, where you from?\"\n\n\"Vains City, you?\"\n\n\"Same,\" I smiled.\n\n\"Oh, what part?\"\n\n\"Southside. Down by Patrick Street.\"\n\n\"Oh.\" You're one of them, she thought. I think we're done here.\n\nI could feel her attraction being blocked off in her mind. What the hell? I reached into her mind.\n\nDaddy's girl. And Daddy was loaded. He was the owner of A+ Energy. Billionaire. Multi-billionaire actually. She grew up being denied nothing. She was damn near royalty, as elite as elite could be. She wasn't in college for an education. She'd never have to work a day in her grandkids lives. She just wanted something to do. But what she refused to do, was associate with lowlife peasants. Like me.\n\nThe FUCK!\n\nPEASANT!\n\nThat was actually the word her mind now assigned to me. How dare this bitch! I've been chosen by a goddess! How dare she even attempt to look down her nose at me. I briefly flipped though some of her memories. They were horrendous. She considered herself a goddess among insects. She had no idea how real people lived. But I knew a real goddess and she was no where close. I was insulted on Eris's behalf.\n\nAlways before, I had reached out and dropped thoughts into people's minds. This was different. I didn't drop anything. I took ahold of her. I gripped her as my rage gripped me. I surrounded her mind inside my own, pouring my power against her. I stood up and began to walk back to the dorm. I forced her to follow me. I could feel her confusion, bewilderment. She tried to stop herself from following me, but she couldn't. And she couldn't understand why. I applauded her attempt though. She fought with every step.\n\nIt was like walking a dog on a leash. I smiled as I walked my little bitch all the way back to my room. I made her close and lock the door behind her. Her mind screamed out in fear, in rebellion. I sat down at the chair at my desk. I forced her to stand in front of me.\n\nShe was really nice to look at. Long black hair, nice curves, elegant but casual about it. \"Strip. Slowly.\"\n\nI watched as that elegant dress slipped off her shoulders and fell to a puddle at her high-heeled feet. She slipped her arms through the straps of her bra. Her breasts were glorious. Cherry pink nipples capped off those full, luscious orbs. Her mind fought me with every movement. She hesitated when she hooked her fingers through her panties. Her hesitation was for effect though, in response to my own desires, not from any will of her own, and she knew it. I could feel her knowledge. Her struggle. She slid her panties down her legs and stepped out of them, still wearing her black heels. There was no denying me. Her pubic hair was trimmed into a sexy little landing strip that led me down a guaranteed path to pleasure.\n\nI was already hard inside of my jeans just from looking her.\n\nI made a motion with my hand and she obeyed. She spread her arms out and slowly turned on those high heels. Displaying her bare flesh to me. I smiled. A huge part of me wanted to grip my own hard cock in my hand, but that's what I had her for.\n\nI will forever regret what I did next. That was the moment I became a true monster. Where God truly gave up all hope of me.\n\nWhat I did next was done out of pure greed. I wanted her. I wanted to lay my claim to her. To own her. To possess her. I had only encased her mind, but now I wrapped my mind around hers, twisted it against itself, warped it to one single thought, one purpose. I defined her to a single design.\n\n\"Please me.\"\n\nA better man would have never done it. Her mind screamed against me, cursed me, damned me a thousand times. She pushed against the pathways, but every way her mind turned led to one destination. She walked over and straddled my lap. As her arms wrapped around me, her breasts pressed against my chest, and her lips found mine. I could felt her tongue against my lips a moment before she slipped past them.\n\nThe taste of her, the smell, the heat.\n\nEris!\n\nDark gray eyes, wet with unshed tears, looked into my own. She wanted to cry, she begged to cry, but that would not please me. \"Stop this, please!\"\n\nShit, my hold on her mind had slipped, she could talk now. But the loop still seemed to be in place. She leaned in and kissed me again, sliding her tongue into my mouth, her hands massaged the back of my head, pulling me to her. My hands gripped her ass when started grinding herself onto me. Her hands moved to my sides. Her lips left mine as she pulled my shirt over my head and threw it across the room. She stood up and pulled me to my feet. Her mind struggled as she sank down to her knees.\n\nI was a virgin. I hadn't even really thought about using my powers for sex... Okay, well, maybe a few times. But it was useless since Eris had taken away my ability to get hard. Even when the curse had died, I still had all the self-conscientiousness of a virgin 18 year old. Sure, I was superhuman, but I had never dared to take a person's mind this way. And yet, day one of college, and I was beyond nervous as she undid my belt. My cock strained against my underwear. She pulled them down along with my pants, revealing me. It flopped out, demanding, cajoling, begging. She looked up at me, eyes still wet with unshed tears.\n\nI was too far gone. I cared nothing for her. I hated her. She deserved this. She tried to force me to be lower than her, but I was a child of Eris. Chosen. She needed to know her place.\n\n\"No no no no,\" kept running through her mind as she took a hold of me and leaned forward, taking me into her mouth. Until that moment, I had no idea what kind of pleasure my body could endure. I stumbled back and braced myself against the desk as she attacked me. She cupped and toyed with my balls. Saliva coated and dripped from my cock as she bobbed her head up and down my shaft. Her hand snaked its way between her legs and she played with herself as she sucked me. On every up stroke, her tongue would twirl around my head.\n\nI don't know how long she did, but in no time at all I felt myself shooting into her mouth. She never stopped. She only slowed down to a sensuous pace. She sucked me all the way through, swallowing my seed, and sucking still. Sucking and licking. Looking up at me. Begging me. She sucked me until I was hard again. I smiled at her as she looked up at me from down on her knees. \"Why,\" she pleaded.\n\nShe couldn't stop herself, as much as she wanted. As much as she tried. She walked over and bent over the bed. Her pussy gleamed with her juices. I didn't hesitate. I stepped up behind her, grabbed her hips, and slipped myself inside her.\n\nI had never felt something so wondrous. Her pussy was tight and wet and warm. I pulled out and slammed myself back into her. Over and over. I was a man possessed. Her hands clenched the sheets as she moaned in pleasure despite herself. I could feel her. She didn't want this. She didn't want to feel it, any of it. She wanted to scream for help. To be saved from me. But that wasn't her choice. She got pleasure. She took pleasure. Her cunt convulsed against me, milking me, devouring me, begging me for all I could give her. She hated it. She hated me. She hated herself.\n\n\"NO! STOP! NO! NO MORE! NO MORE!!!\"\n\nI still don't know what it was that was driving me, but I loved it. I heard her mind screaming at me, harder and louder with each thrust I made into her. But I didn't care. No, that wasn't true. I cared.\n\nI liked it.\n\nI pushed myself into her harder and harder, faster, more demanding.\n\n\"Yes! Fuck me! Fuck me!!!\" Anyone walking down the hallway could hear her.\n\nI reveled in my power. I loved my control over her. I wasn't just twisting her mind anymore. It was already twisted against itself. I was weaving my own will and desire inside of her. Separating her from herself, sewing her servitude to my will.\n\nIt was amazing. That velvety soft flesh glided along my shaft. The scent of our sex filled the air.\n\nI pulled out and rolled her on her back. Her legs wrapped around me as I slipped inside her again. She came. Oh my Eris. Her pussy clamped down on me over and over. It milked me of my own release and I shot off inside her.\n\nI collapsed on top of her with my manhood still inside her.\n\nAs I caught my breath, I rolled onto my back and she laid her head on my shoulder. The submission of Kimberly Answorth, heiress to an energy empire, daughter of a billionaire tycoon, was now mine. \"Why,\" she asked. \"Why are you doing this to me?\"\n\nI didn't answer her for a long time. It wasn't a simple question. There were all kinds of morality and ethical boundaries that I had completely jumped across. And, honestly, I didn't care. She had dared to look down her nose at me, and I had taught her where her place really was in the world. In truth, the answer was really simple. \"Because I can.\"\n\nAs I laid there, with my conquest in my arms, I wondered what the Chaos Plains would think of this. It was going to be at least a week before I could go and visit again. Eris, or course, would just find it amusing. And Claude wouldn't give a damn. Not like he hadn't done worse. He'd probably give me a high five. The same went for Morgana. Well, except for the high five. Lysande... I had no idea what Analysandwould say. Actually, Lysande would probably wonder what took me so long. She'd forced many a prince to marry her godchild.\n\nAt least, I hoped she'd see it that way. I don't think any of her unions were as... indelicate... as mine.\n\nI woke up the next morning feeling absolutely amazing. Something was wonderful. My hands went down to where that wonderful thing was. I wrapped my hands into her hair as she sucked me down into her throat. I triggered a round of endorphins in her body. She moaned in pleasure around me, which added entirely new, and very welcome, sensations.\n\nI could feel her hatred projecting at me. It was an omnipotent thing. Almost entertaining. Like watching a mouse attack a cat. I could feel something else, someone else, focusing on me. As I turned my head, I found myself looking straight into Nick's eyes. He smirked, gave me a thumbs up, and rolled over, pretending to be asleep.\n\nAs I had researched, it was good roommate etiquette.\n\n(Yes, I Googled it. I'm an only child and I wanted to make a good impression without my powers.)\n\nI chose not to worry about it and let Kim keep doing what she was doing. And she was doing it wonderfully well. I came in her mouth, again, for the second time in less than 24 hours. I loved the feeling of her body as she slid against me to lay in my arms. Her breasts against my chest, the warmth of her body against mine, her head lying on my shoulder.\n\n\"I'm going to kill you,\" she whispered, just loud enough for me to hear. I smiled at her as I turned her in my arms, and took her tit into my palm, toying with her nipple. \"I don't know how you're doing this, but I'm going to figure it out. And I'm going to kill you.\"\n\nI kissed her on her forehead. \"That is so cute.\"\n\n\"Just let me go,\" she said.\n\n\"No. You're my new favorite toy. Now, go on back to your dorm and go about your day.\" Almost as an afterthought, I dropped an interrupt into her mind, preventing her from telling anyone about my power. If she spoke about me at all, it would be as her boyfriend. I laughed as she got dressed. We were dating now.\n\nShe leaned over and kissed me before she walked out of the door. \"Fuck you,\" she mouthed.\n\nThe door had barely closed. \"Dude! Way to fucking go! I mean, that is one hot piece of ass! And you nailed her on the first day! Fuck yeah, Man!\" He walked over and held his and up for a high five. As juvenile as it was, I obliged him. \"I guess I gotta catch up!\"\n\nKimberly left right before seven. I didn't have my first class until eleven. Nick had his an hour before that. So I laid in bed after she left.\n\nI didn't think about it at first. I just languished in the pleasure that I had enjoyed. Just thinking about her made my cock hard. I could still feel her tongue against my cock in her mouth. Eris that was good. It sent shivers through my body.\n\nMaybe it was just because she was my first.\n\nMaybe it was my power enhancing my pleasure.\n\nMaybe... my power...\n\nMy power....\n\nMy power....\n\nOh Eris...\n\nOh Eris...\n\nEris help me....\n\nI made her...\n\nOh Eris, I made her...\n\nNone of that was her...\n\nI made her.\n\nThat was my power. I made her do everything.\n\nShe wouldn't have even taken notice of me. But I made her.\n\nShe followed me here. Because I made her.\n\nAnd everything that followed only happened, because I made her.\n\nShe wanted me dead. She said as much. And I had even taken pleasure from that.\n\nI didn't go to the two classes I had that day. I stayed in my room. I got dressed at noon, and sat at my desk. When Nick came in, I smiled at him like nothing was wrong. But everything was wrong. I had raped a woman. I had forced myself on her. \"Later bro!\" I sat at my desk. I didn't go to dinner. I was in bed when Nick came back. I tried to sleep, and couldn't. I needed to go to the Plains, I needed help. But I couldn't. And I couldn't sleep.\n\nAnd, what was worse, I could feel her. I could feel her approaching me. Coming closer. I could feel her fighting every step. Trying to resist me, and failing. Failing with every red, high-heeled step. She had showered, for me. Changed clothes, for me. And, now, she was coming, for me. Even though I didn't want her to. Not conscientiously.\n\nI tried to push her back. I felt her feel that. But it was meaningless. The truth of my mind demanded her. As hard as I pushed, she walked into our room when Nick opened the door.\n\n\"Um, do I need to go.\"\n\n\"No,\" she said. This one percenter, daughter of energy, elite of mankind, she didn't even look at him. \"Just do what you do, and we'll do what we do.\" She closed the door herself and locked it.\n\nNick sat down at his computer, but he couldn't even pretend not to notice when she started stripping out of her clothes. He tried though, and gave it a valiant effort.\n\nHe paid attention to his screen when Kimberly sat on my bed and took off her heels. He only glanced when she took off her shirt, and barely stared when she took off her bra. But he gave her a good hard look when she bent over and slid her skirt and panties off at the same time. Kimberly walked over and flipped the switch, turning off the lights. \"Can you see,\" she asked demurely.",
        "There was no doubt in his mind that she would have left the lights on if he asked her to. \"Yeah, I'm good.\"\n\nShe didn't smile. She just nodded at him and slid underneath the sheets of my bed.\n\nI was in his mind. Kimberly's arms braced her as she laid over me and looked me in my eyes. I wasn't trying. I wasn't pressing my power onto her. I didn't want her to do this. But I could see that she didn't either, and she was still doing it. I couldn't stop her, not with Nick there. It would just be too weird.\n\nNo, that was an excuse. The truth is, deep down, I didn't want to. I had seen her body. I had experienced the pleasures of it. And... I wanted more. I wanted all of it... And I hated myself for it.\n\nI pushed against her again, sending her mental commands to stop, go home, be herself. She kissed me while her hands slipped under the covers and pulled my boxers down. Her tongue toyed with me, excited me against myself, while she laid her body against me. The heat of her soaked into me.\n\n\"I hate you. I hate you. I hate you. I hate you. I hate you. I hate you,\" she thought at me.\n\nHer hand gripped my cock, I moaned into her mouth as she stroked me to hardness. I was ready to wipe the memory of this from Nick. And then I forgot all about him. She kissed my cheek and worked her way up to my ear. Her hot breath stirred against my skin as she kissed her way down my chin. Her hand worked my cock, pushing me, driving me. With her other hand, Kimberly interlaced her own fingers with mine and held it above my head.\n\n\"Stop. Go home. Stop this,\" I ordered her, mentally.\n\nShe didn't. She was responding to something deeper in me. Harder.\n\nHer lips found my neck. Worked their way to my throat, down my chest, her right hand still worked my cock, her left hand immobilized me, kept me prisoner. As if I had any right to the word. My stomach tightened as her tongue worked its way down its paths.\n\n\"Kimb---\"\n\nHer tongue slid along the lines of my genitals. Between my cock and him, beneath my sack, sucking me into her mouth, suckling me.\n\nOh fuck.\n\nOh Eris!\n\nHer hand still worked me. I couldn't talk, I could barely think. And the entirety of my mind was given over to the pleasure she gave me. She slid her tongue along the underside of my cock and took me into her mouth.\n\nI heard myself moan as her left hand still held mine. I felt her tongue and mouth working me as she moved along my shaft. It didn't last long. My cock came out of her mouth with a \"pop\". I felt her body purposefully slide against it as she drew her face back up to mine. She let go of my hand and reached behind her, grabbing my cock. She looked me right in the eyes. I saw her hatred of me. It was behind lust and desire and order and command. But I saw it, true, pure, raging hatred, and I couldn't deny it.\n\nShe grabbed my cock and slid onto me.\n\nI gasped at the pleasure. She moaned. He gasped.\n\nWait.... What--\n\nShe slid back down and I forgot. FUCK! ERIS! SHIT!\n\nI cursed with every movement she made along my shaft.\n\nI brought my head forward for just a moment. And it was only out of the corner of my eye that I saw him. Nick sat at his desk, watching us, jacking his dick.\n\nI was ashamed. Not for me, but for her. For her lack of shame. Because I had taken that from her.\n\nFUCK. She slid down along me again and again. Her hand reached down and turned my head back to her. She stared down her pleasure and her hatred into me. Her pussy slid up and down along the shaft of my dick.\n\nI was planning on wiping Nick's mind. And I still had no idea what I had done to hers. My powers were useless to me. Eris! I thought as her pussy tightened against me. Her hand snaked around my neck, pulling me into her kiss. I couldn't resist her.\n\nI heard Nick coming on his own stomach. I felt sorry for him. Because I came. I came inside her. Her pussy milked the entirety of my cock, from root to stem. I came. I felt her coming with me. I heard her moaning into my mouth.\n\nKimberly collapsed onto me. Without my cock ever sliding out of her, she turned the two of us, me lying on top of her, and we drifted off to sleep.\n\n\"I hate you. I hate you. I hate you. I hate you.\"\n\nIt was my lullaby.\n\nShe sang it to me as I drifted off to sleep.\n\nIt was horribly amazing. Her mind was tethered to mind. The moment I felt myself getting hard, I would feel her turning towards me. I delved into her mind. I didn't keep track of her, but she always knew where I was, down to the millisecond of longitude and latitude. I was forced to keep track of her out of necessarily. I figured that out on that second day, when I decided to go to my classes.\n\nShe came to find me. It was ten in the morning. She came to me and dropped to her knees. There was a girl in my creative writing class. She was cute. She had written an amazingly erotic story. Thank Eris she decided to read towards the end of class. I felt Kimberly's approach.\n\nI left the class. Kimberly found me in the hallway. She fell to her knees and grabbed my belt buckle. I grabbed her hand and pulled her into the bathroom. I threw her in behind me and locked the door.\n\n\"You don't want to do this,\" I told her.\n\n\"You're making me!\"\n\nShe pushed me against the door and fell to her knees again. She sucked me. I dived into her mind, trying to find what I had fucked up, trying to fix it. I could feel her humiliation. The cold tile on her knees. She had even dressed thinking of what I would find attractive.\n\n\"I- I don't- I don't want you to-\"\n\nI came in her mouth. She looked up at me. My cum dripping from the corner of her mouth. She looked up at me. Her tongue darted out and licked up the last of me. She looked up at me, and swallowed. She looked up at me. And I saw nothing but her hatred.\n\nThat night at dinner, I thought I'd do my worst. Nick sat with me. Nick seemed to attract more girls than the jocks or the frat bro's. And none of them seemed to mind. I sat with him. Cute and fat and weird girls seemed to surround us. Conversation flowed. The cutest sat right at Nick's right hand. I was just getting ready to make a pass at her.\n\n\"Hey,\" she said. She pushed at my chair, turning me, and sat down in my lap, her arm draped around me. She stabbed her fork into a salad and shoved it into my mouth. \"No way I let you do this to them.\" Her other hand guided my hand under the table.\n\nShe wasn't wearing panties.\n\nShe wasn't wearing panties.\n\nShe wasn't wearing pantes!\n\nSh wasw't wanre pnets!\n\nOH MY ERIS!\n\nSHE WASN'T WEARING PANTIES!!!!\n\nMy fingers slid under her skirt, into her, pure her, pure Kimberly.\n\nShe gasped.\n\nThe others at the table looked over at us, but we were in our own world.\n\nShe didn't pay them any attention. \"Make me,\" she whispered as she shoved her salad into my mouth again.\n\nI worked my fingers inside her while she kept up conversation around us. Nick winked at me. He clearly knew what was going on. How, I had no idea. Then again, it had been a long time since I had kept a friend's secret, or had any need to honor bro code. My fingers delved into her, looking for her pleasures, and the odyssey inspired me. I dived in and out of her, searching her, exploring her. I heard her breath hitch here and where I touched there. Nick covered with a smile and smart-ass comment.\n\nWe were the VIP's of a private party.\n\nFinally, she turned and dived into my shoulder, biting me to keep from screaming out. Her pussy convulsed on my fingers. Girl cum ran down my hand. She breathed hard I stood the both of us up. E walked away from the table without saying anything.\n\nI thought about sex and she came to me. Now, I was as hard as I had ever been.\n\nI didn't say anything as I pulled her away with me.\n\n\"I'm going to fuck you,\" I said.\n\n\"I know.\"\n\n\"Do you want me to,\" I asked.\n\n\"No.\"\n\n\"Will you stop me,\" I asked her.\n\nShe pulled me to a stop just outside the meal hall. Kimberly reached into her purse and placed something into my hand. It was soft and silky and tender. \"No.\" I opened it up and realized.\n\nI couldn't wait anymore. I pulled her to the side of the science building. The evening sunset bore witness to our coupling. I slid myself inside of her with no courtesy or foreplay. Her arms wrapped around my neck. Her legs pulled me even deeper into her. And her pussy.\n\nEris, her pussy!\n\nIt invited me deeper and deeper with every thrust. She kissed me and sucked at my neck. I pushed myself deeper and deeper into her, while her tongue played with mine.\n\nHer melody played in my head. \"I hate you. I hate you. I hate you. I hate you.\" I felt her cunt tighten against me. She was coming. She was coming on my dick. Where anyone could see us. \"I hate you. I hate you. I hate you. I hate you.\" She bit into my shoulder, again, to keep from screaming out. Her pussy milked me, but I pulled out. I wasn't done. I felt her mind scream out at the lack of me. I turned her around and, of her own volition, she poked her ass out towards me. I smiled and sent the image of it to her. She hated me even deeper. She hated me for the pleasure she felt. She hated me for the pleasure I gave her. She hated me for her own pleasure. She hated herself.\n\nBut I was gone. All that was left of me was power and force. And I did as I would. I had no control. I pulled my cock out of her and turned her, holding both of her hands above her body with one of my own. Her ass poked out towards me, offering herself to my pleasure. People were still walking by us on the main street, but none of them seemed to notice us. I didn't care either way.\n\nIf I needed them, I'd deal with their minds when the time came. If I didn't... Fuck 'em.\n\nI slid my cock underneath her, into her, and I started. I fucked her. This wasn't the slow, gentle fucking we had back in my room. I didn't care today. She had started this. I was hard. My cock was hard. I was powerful. And I had a powerful cock. I fucked her. I thrust myself in and out of her with no care. She drove me to this point. She had done this to herself. I could have had any girl, but she had volunteered. So I fucked her. Hard. Fast. Deep. And meaningfully.\n\nIf I had only known.\n\nIt wasn't conscientious, but I was pushing other minds away from us. And, at the same time, I was digging deeper into her mind. I already owned her. Now, I was taking possession of her. Her cunt tightened on me, but I didn't stop. I held her there, even as she tried to push herself onto me. I held her there, and fucked her. I fucked her for my pleasure. I didn't care that she came. I fucked her. I heard her yell in pleasure. I didn't care. I forced my cock past her pleasure. And I fucked her. I fucked her until I felt my balls tighten. I fucked her until my legs wobbled. I pushed myself into her one last time.\n\nAnd I came. And she came. She came for me. Her cunt milked my cock. Draining me. Begging me.\n\nI let her go. \"Clean me,\" I said. I don't know where it came from. But I won't deny that I enjoyed the results.\n\nKimberly knelt and took my cock into her mouth. She didn't even use her hands. She kept them by her sides. I linked my mind to her. \"Damn him. Damn him. Damn him. Damn him. Damn him.\" The dirt was hard against her knees, but my cock slid gracefully into her mouth. She grabbed me and lifted me up. She was starting to like the taste of her off my balls. She jacked me, hoping I wouldn't hard again. And still hoping I would. A part of her wanted me to fuck her.\n\nShe didn't love me. There was no doubt of that.\n\nBut she liked how I fucked her.\n\nAnd that was confusing.\n\nDid she like it because she liked it.\n\nOr because I made her like it.\n\nShit.\n\nFor the last few nights, she had stayed over. She came. Nick opened the door. Once he left to spend the night at another girls room, so he said. She came, and she would make me come, usually more than once. I kept trying to stop her. I did my best. I put all my power behind it.\n\nIt didn't work. Not once. It didn't even slow her down. There was a part of her now that didn't want this to happen to anyone else. She was sacrificing her self, and unwilling martyr. She died every second she was on my cock. Driven to it my my will. Forced by my power.\n\nThe night finally came. She finally came. I finally came. In her mouth. She had sucked me off to finish me. Her hand stroked me, her tongue licked at me, her mouth suckled me. And I came. She swallowed every drop. I felt her silky skin slide against mine as she wrapped her body against mine.\n\nI hated to admit it. But this was my favorite part. Kimberly laid her head on my shoulder, entwined her legs with mine, and fell asleep.\n\nI held her there.\n\nI ignored Nick as he cleaned himself up.\n\nFocus.\n\nConcentrate.\n\nFocus.\n\nConcentrate.\n\nMy spirit began to lift itself away from me.\n\nFocus.\n\nConcentrate.\n\nFocus.\n\nI felt the last of me lift away. I was free. Free of me.\n\nI wasn't done.\n\nFocus.\n\nConcentrate.\n\nFocus.\n\nConcentrate.\n\nI held onto the last thread. Life to life. My safety thread. Binding soul to body if either should be threatened.\n\nFocus.\n\nConcentrate.\n\nFocus.\n\nConcentrate.\n\nFocus.\n\nI gathered my power, balanced my spirit, waiting for the moment I aligned with the universe.\n\nNOW!\n\nI sent myself flying, through reality, through truth, though everything.\n\nI walked. Eris only knew where I would find them. But I did know I would find them together. The worse part was wondering if I would find them at all. The Chaotic Plains. They were always shifting, no place was ever in the same place. They could sit still from the moment I left until the moment I returned and be somewhere completely different.\n\nI walked, hoping I would find someone. If I could find one of them, besides Eris, they could call for the others, except for Eris. Eris knows, if I stumbled my way upon her, she'd send me right back down, with no answers.\n\nI walked. A Scribe owl found me and began to follow me. I smiled. He was hoping to steal some secret and horde it over his brothers and sisters. It would never leave the plains, but that wasn't their concern. Scribe owls horded knowledge. And mice. They wouldn't share their knowledge freely, but they would trade it. It was one of the reason's I was so powerful. Eris had loaned a few of them to me for a few months. And they had found secrets that, when added to my own knowledge, had unlocked unknown potential inside of me.\n\n\"Younger Brother!\" I heard her and stopped. I placed my raised foot next to my settled one. I had learned better. Moving even an inch could transport me miles. I looked around and saw Lysande. She smiled and walked over towards me.\n\nI still didn't understand how they navigated this realm. I assumed it was because they were already apart of it. I was still living.\n\nLysande snapped her fingers and the others appeared.\n\nIncluding Eris.\n\nShit, we weren't in the forest where I found her anymore. We were in the broken throne room. I had long since learned it was Eris's favorite place. She had drawn us to her.\n\n\"I have to set her free,\" I blurted out.\n\nEris laughed. She didn't need an explanation. She had been watching me. Hell, she had probably pushed me to do it.\n\nNo one else did.\n\nMorgana walked over and set a hand on my shoulder. \"For me, it was Merlin.\"\n\nClaude came next. \"You wouldn't know her name. But she was the great granddaughter of Arthur, King of Camelot.\"\n\n\"The daughter of Puck,\" Lysande smiled at me. \"And, since you're a magic user, she won't be the last, or the only. She's only the first.\"\n\nSurprisingly, Morgana took me into her arms and hugged me to her. \"I'm so sorry.\" She didn't let me go.\n\nClaude sat down cross legged. \"We had hoped you wouldn't endure this. We know you're soft-hearted, bred for softer times. More humane. We hoped. So we didn't warn you.\"\n\nI felt Morgana's tears running through my hair, down my head, down my neck. \"I'm so sorry,\" she cried. \"I hoped so hard!\"\n\nMy arms wrapped around her, forgiving her, beseeching her. \"Can I-.\" I sucked in air, trying to speak. \"Can I free her?\" It wasn't really a question. It was. But it wasn't. Because I knew the answer. Because I could see the result. It was there. In front of me. Holding me.\n\nMorgana's eyes were closed against me, her head resting on mine. Claude sat, his face turned away from me. Lysande also turned her face away from me, but I could still see the trail of tears tracing their way away from the truth in her eyes.\n\nEris didn't choose cruel servants. She chose those who power would conflict with. And they cried with me. Every eye was wet, even Eris's.\n\nAt least she was entertained. I didn't think that in the moment. I only say it now. Honestly though, that's the only thing that moves her. Its her only motivation. The quest for novelty and entertainment.\n\nIn that moment, I only thought that my goddess loved me. \"Eris,\" I beseeched her, \"Free her from me! Please!\"\n\nThe truth came to me in an instant. Her tears were gone and I watched a smile spread across her face. She was truly beautiful. And in that moment, I realized something else. We weren't in the ruined palace anymore. We were in her Perfect Palace. Eris sat on her throne, her scrying pool between us. She turned and draped her leg over the arm of the throne and smiled at me, her chin resting on her hand. She was so terrifyingly beautiful. \"Absolutely not.\"\n\nI was shocked. I couldn't believe it. I was sure this was some kind of test. \"I'll give anything! Anything! Just tell me what I need to do!\"\n\nEris's smile only spread. \"I said absolutely not.\" I could feel her pleasure. We all could. The room warmed with her denial.\n\n\"Please Goddess! I don't want her! I promise I don't want her!\"\n\nEris smiled. An image of Kimberly blossomed in my mind. At her will, my pants were gone. Eris blossomed as I hardened in front of them all. I tried to move to cover myself, but her will held me still. The women held their own expressions behind their hands. Claude's head was facing down as he began to stand. \"Truly,\" she smiled at me. Her head tilted back against her throne as she laughed in her cruel, beautiful tone.\n\nI heard his sword slide into it's sheath as he spoke, \"Allow me to speak with him, Goddess.\" It was a demand. Only We, her chosen, could make demands upon her.\n\n\"Do so. And see that he understands.\"\n\nClaude bowed low.\n\nWe ran. Well, I ran. His horse trotted. \"You fool,\" he finally said.\n\n\"But she's my Goddess,\" I protested.\n\n\"So. She's still a goddess.\"\n\n\"She should care about how I feel!\" I was starting to get winded. We were a good distance from the palace.\n\n\"She's a goddess. One of the few who survived the Christ. She didn't give a damn about her chosen before his birth, what the hell makes you think she'd give a damn after?\"\n\n\"I follow her,\" I yelled at him. \"I'm one of the few! ONE OF THE CHOSEN!\"\n\nHe turned his stead and stared down at me, his face hardening against me. \"THE CHOSEN OF CHAOS! Of ERIS!\"\n\nI fell to my knees, from the force of his words as much as from my own exasperation. \"I serve,\" I said.\n\nClaude drew his sword and threw it down to the ground between us, the point sank into the ground. \"Many a man has said that and ended up on the wrong side of that blade. Even those who served her.\" He stepped down and knelt before me. \"You heard. We each have a story of how our powers overwhelmed us. She's a victim of your power. All you can do from this point is to try, TRY, not to make any more victims. Because we all have multiples.\" He stepped down from his steed and stood in front of me. \"Fourteen people fell victim to my power. And I don't mean they died. Against their will, and their honor, they served me. Even against my will. They served.\"\n\nHe grabbed me and pulled me to him. I wrapped my arms around him. \"I'm so sorry, brother.\"\n\nI cried into his armored shoulder. I felt the others wrap their arms around us. \"I'm so sorry, brother.\" \"I'm so sorry.\" As I cried into Claude, they cried into me.",
        "And, the entire time, I could feel Eris gloating above us. Watching from the clouds. Soaking in our misery. Enjoying our pain.\n\nShe was crying. Her tear were hot against my skin as they ran down my shoulder and onto my chest, pooling on my bedside.\n\n\"I felt you,\" she said. My arm was wrapped around her, holding her naked body next to mine. \"You tried so hard. And I felt you.\"\n\nI drew my other arm up and pulled her even deeper into me. I don't know if it helped her, but I definitely didn't help me. It was just the only thing I knew to do. \"I felt you try. And I felt you fail.\" I was hardening.\n\nShe was desperate, and naked, against me. She was crying, and wet. Her breasts pressed against me, her legs spread for me. She hated me. And I was getting hard.\n\nShe reached down and shifted my cock, angling it to slide into her. \"This is forever, isn't it?\"\n\nThere was something in my siblings' eyes that I didn't understand until this moment. \"No. For you, its just for a lifetime.\" She slid down onto my cock, moaning the whole way down. My hands rose to find her breasts, to play with her nipples.\n\nI wanted to give her as much pleasure as I could.\n\nIt was only a lifetime for her.\n\nBut she would haunt me for an eternity.\n\nAs I felt the lips of her pussy slide along my dick, up and down, up and down. As I felt her move along the length of me, impaling herself onto me. As her hands interlaced with mine above me, her tits bouncing along with her cunt. As her face descended upon mine, and her tongue wound itself in my mouth, I knew as she knew.\n\nI owned her.\n\nCompletely.\n\nShe came on my cock, and collapsed against me. And I pitied her. Because I was still hard inside of her.\n\nShe was done. She had her fill. But I was still hard. And my cock, despite what I told it, was still demanding more. She was done, but she felt me. She felt my cock, still hard in her. She felt my mind, still driving her, against her will, against my own.\n\nShe raised herself up, lifting her body off mine, and looked down into my eyes. \"Really,\" she said. She sounded tired.\n\nI looked away from her, ashamed. Unfortunately, I looked towards Nick's bed. He was facing his own wall, but I could tell from the movement of his sheets he was jacking off.\n\nI couldn't take it. I put him to sleep. She didn't need that. She didn't deserve it. Sure, Kimberly was a bitch, I had seen her mind. Her memories. She didn't want me, but I wanted her. I don't deny that. No heterosexual man could. She was beautiful. I could, and had, scanned the minds of any man around her and they would be picturing her sucking on their cocks. The more confident men imagined her screaming with pleasure as they fucked her. But she only screamed for me.\n\nNight after night, she screamed. In pleasure. That she didn't want.\n\nI was raping her.\n\nShe didn't deserve this. I pushed her away from me and went and sat at my desk.\n\nKimberly threw the covers off her body. Her hand snaked its way down her body. A finger slid into her pussy. She didn't want to. I could feel her mind trying to stop her. It was useless. She was a slave. Nothing in her mattered, not when it came to me.\n\nI put her mind to sleep. It took more power than it should have. I was working against myself. I did it though. She didn't deserve this.\n\nBut she had angered me, a greater being.\n\nI was Chosen of Eris.\n\nShe was just some little rich girl.\n\nThis was her punishment.\n\nAnd witnessing it was mine.\n\nI sat there for hours. Lost in my thoughts. Steeling my mind. One thing bothered me. She said she felt me.\n\nI drove my mind into hers. I looked at it. Eris... I was everywhere. Inside her mind looked like pink marble, and I was the white lace inside. And I was everywhere. I was shocked she was even able to think of anything beside me. I had turned myself into an obsession for her. I was webbed into her, I was ivy on her gates, weeds in her garden. I owned her. She would never be rid of me. I was her constant thought. And there were so many threads that led back to me...\n\nEris...\n\nSo many threads. I owned her. I tried to break them. I tried to starve them of my power. I tried to flood them with power. Nothing worked. I owned her...\n\nMy very mind called to her. She couldn't read me, but she would respond to me. Against her will, even against my own. It was useless.\n\nNick sat up, wiping the sleep from his eyes. I smiled as I inhabited his mind. I was leaning back in my desk chair. Kimberly was on her knees, my cock in her mouth, sucking down my morning wood. Nick stood and walked over to his own chair, watching us. He sat down and pulled his boxers down to his feet.\n\nI came down her throat.\n\nShe swallowed every drop.\n\nKimberly looked at me, pleading. Hadn't she done enough?\n\nI smiled at her. Servant. Slave. She could never do enough. I had steeled myself against her. It was the only way I could keep my own sanity. Eris had given her to me, and she was mine to do with as I pleased. As I pleased. Her pleasure was not in the equation.\n\nHer head fell as she turned and crawled across the room. I smiled to myself as I felt her useless resistance. She reached him and grabbed his dick. I let his mind go. I smiled to feel his shock. I smiled even harder feeling his pleasure as she took the head of his cock into her mouth. She sucked him like she sucked me. We owed him. He had stayed silent. He hadn't spread any rumors. He hadn't even confirmed any. And I didn't think he wanted me sucking his dick, not that I would.\n\nI slid into his mind, \"If you want more of this, you'll have to serve me. WILL YOU SERVE?\"\n\nI asked the entirety of his mind, and it answered. \"I serve.\"\n\n\"WILL YOU SERVE\"\n\n\"I SERVE.\"\n\nKim hated it. She also hated that I called her Kim. But calling her Kim also gave her a sense of self, even if it was a hated self. So I constantly called her Kim. And Kimberly hated it. She fucked me at the moment I noticed a cute girl. If my dick started to get hard, I made my way to somewhere private and waited for her. When she came over for the night, I fucked her. And she loved it. Even though she hated it, she loved it. And if she stayed the night, she sucked Nick's dick in the morning.\n\nI felt okay about Nick. I bought his mind with a blow job. But at least I asked him.\n\nKimberly didn't get that privileged. I fucked her, and she fucked me, completely against her will. And she'd never be free again. I fingered her during lunch. She jacked me off in her chemistry class, while I used my powers to make sure no noticed I was there. I even kept her partner happy to do all the work. (He's a chemist now, so it worked out.)\n\nI let her have a boyfriend. I let her chose. I even let her fuck him. And she was happy to do so. I let them be together. I won't lie though. I was jealous. I didn't let her come. I owned her, and I could deny her. And I did. Her pleasure was mine. I possessed it. I owned it. And Kyle could have none of it.\n\nI would sit around his table when I could. I heard him tell his boy-tales about him and his hot girlfriend. And I would insinuate all kinds of insecurities into him. He was supposed to be a basketball star. Who couldn't fuck worth a damn.\n\nBy that time, Kim and I were on amicable terms. After all, who else could she confide in more completely than me.\n\n\"I mean, his dick is a bit bigger than yours, but he doesn't last nearly as long, and I never come.\"\n\n\"Think about it, who has he ever needed to please?\"\n\nShe looked at me. \"And who have you needed to please?\"\n\n\"I've told you. I wasn't born with powers. He was. With talent I mean.\"\n\n\"So,\" she said. \"What does that have to do with anything?\"\n\n\"Bodies respond to environment. His was completely relaxed. He's always been a star. He's just looking for a hot body that likes his dick.\"\n\n\"And I do! I like his dick,\" she said as she slid her panties off.\n\n\"Clearly you don't, or you'd be coming,\" I lied.\n\nKimberly flipped my sheets off me. Neither of us gave a damn about Nick jacking off to us any more. Neither did Nick. He didn't even try to pretend to be sleeping anymore. I didn't care because I had placed an intercept in his mind.\n\n\"I- oh shit- I still- yes, yes- oh fuck- yesss- I still like- fuck yes, fuck me, just like that- I still like -- fuck! Harder! FUCK ME HARDER! I still like him! I li- oh fuck YES! FUCK ME! USE ME!\"\n\nWas it perverse? Maybe. But it doesn't really matter. I found it stimulating for us to be fucking while she talked about trying to have a normal life. And it was her normal life that brought my power to bear.\n\n\"Bro, you gotta wing man me tonight.\"\n\n\"Why,\" I asked as I typed. I was working on a paper on \"The Alchemist\" that was due on Monday. I didn't 'actually have to write the paper, but I liked the book. I wanted an honest evaluation on my thoughts of it.\n\n\"Bro, I know you're weird. Your girl sucks my dick most mornings. And swallows, cause I like that shit. And she got a whole boyfriend, who hasn't fucked her. And I can't talk about any of it, not that would, but I did try, that's how I found out I couldn't. So, I figured you could get me my own girl. You know, if you wing manned for me.\"\n\nInteresting, it thought. It was the first time he admitted to my power. I felt pretty good about it. \"She won't be as devoted as Kimberly is.\" Because I wasn't going to devote that kind of power to it. I wasn't even sure if I could. Actually, I knew I couldn't. After all, Kimberly was an accident. And I wasn't going to turn Nick into a rapist. Everything Kimberly endured was on me.\n\nI made a choice at that point. \"Kimberly is mine. Because it's my power. I won't make anyone yours. I'll just give you the night.\"\n\nMy chair twisted with a sudden might. \"DUDE,\" his arms were on my shoulders. He had turned me away from my laptop. \"Are you serious?\"\n\n\"Um, yeah.\"\n\n\"DUDE. YOU ARE SO MY BRO.\" He enunciated every syllable. Wait, what? Then I realized what I had just agreed to. Shit. My power was so casual to me. Around him, I forgot how powerful I really was. I had floated Pop Tarts to us, made sandwiches with my mind, planted English papers in his mind. All with the lightest of touches. I deserved a friend after all. And I was going to have one. What was the big deal about getting my friend a chance at a girlfriend.\n\nAt least he'd have a hot fuck for the night. \"It's no big deal.\"\n\nNine o'clock arrived faster than I thought it would. We were dressed and arrived. Both of us had a cup in our hands. \"Don't drink anything,\" I told him.\n\n\"What? Why?\"\n\n\"Do you want to remember the chick you wanna fuck?\"\n\n\"Gotcha, bro,\" he said. A minute later he took a sip from his cup. Eris damn him. It was actually harder to work with an alcohol soaked mind. They were so slippery.\n\nKimberly stood beside me, holding onto my hand, until the girls started to show up. Nick was picking every other girl that walked through the frat house doors. \"That one. Oh, that one. Fuck, she's hot. Oh, THAT ONE for sure. Shit, she needs my dick.\"\n\nI could feel Kimberly's annoyance. I whispered into her mind, \"Do you have a pick for him?\"\n\n\"Would it matter,\" she thought to me.\n\n\"It matters to me.\"\n\n\"Her.\" I followed her gaze.\n\nI looked at the girl. I didn't know her. Short hair, skinny, a depth of mind that I could feel, cute in that girl-next-door kind of way. I liked her. More for me than for Nick.\n\n\"I know her. She wants to be fucked. It'll be her first time. And Nick wouldn't be a bad first,\" Kimberly thought to me.\n\n\"He's kind of over-enthusiastic don't you think,\" I asked.\n\n\"Yeah, but he'll give a damn about her opinion of him,\" she said. \"And that matters to an amateur male of the human species. You wouldn't know anything about that. But Nick does.\"\n\nI felt the sting of her barb. \"Wait, why don't I count?\"\n\nShe thought at me. Nothing in particular. Just thought at me.\n\n\"Oh, okay, I can see where you're coming from,\" I thought back.\n\n\"I thought you might. Hook him up with her. And get her to relax. It'll make it better for both of them.\" I frowned. I moved everyone off the couch and the two of us sat down and stretched out. I wrapped her into my arms and she laid down against me. I moved them.\n\nI slid him into her sight. I pushed him onto her radar. I slowly maneuvered them together. Slowly, gently. Inch by inch. Just a bit more. AAND...\n\n\"Hey, how's it going?\"\n\n\"Well, its a party, and no one's fighting, so, you know.\"\n\nHe smiled. \"Well, that's cause you haven't told me who I have to fight for you.\"\n\nShe giggled.\n\nI snapped them together. Kind of how I did my mom and Greg. It just wasn't permanent. They'd fuck, but there wouldn't be anything left of my power between them after that.\n\n\"I'm Nick.\"\n\n\"I'm Diane.\"\n\nSmall talk ensued. She playfully pushed him as he made another stupid joke. She leaned against him. I felt her feel my power. How close were they? I felt her ask herself the same question as she smiled at him. Then, the worse question came. Dare she?\n\nKimberly smiled at my work. I found that kind of strange. She was my work.\n\nKyle walked up to us. \"Dude, what the fuck you doing with my girl?\"\n\nWe were laid down, her on top of me. My hands had gravitated under her shirt and had started playing with her breasts. I was sharing my vision with her, we were mentally watching Nick and Diane flirting and playing with one another. It was something we would never have.\n\nI looked up at him. I was surprised. I had never seen him before. He was tall, kind of lanky. A good body for basketball. Movable muscle.\n\nBLA.\n\nB-L-A.\n\nBad Luck Aaron.\n\nI guess it was about time I started making my name known.\n\n\"No, please,\" Kimberly begged silently to my mind. \"He's a good guy. Please don't.\"\n\nI was a bit shocked. She knew what I was thinking. She felt my rage. And it was rage. Who was this fool to challenge me. I was Chosen. He was nothing but a mortal. I was favored by a goddess. His God probably didn't even know his name. He would be punished. Of that, there was no question. \"It's either going to be public or private. The choice is yours,\" I told her mind\n\n\"Private. Please.\"\n\n\"That will only make it worse for him,\" I told her mind. I snatched my hands away from her. \"Bro, my bad. I had no idea she was your chick. My bad bro. Like, I'm so sorry!\"\n\n\"Get lost,\" he said. I scampered away. He was a total Kyle. He didn't say shit, he just filled in my spot. He thought she was drunk and horny. And his dick was hard. As far as he was concerned, I had done all the work for him. The weird thing was the disgust of him wasn't all mine. I felt her own disappointment aimed at him.\n\nKimberly wanted him to be a hero. To take her away from me. But he didn't. He wasn't. He didn't save her. He didn't take her away. The crazy thing was, he could have. I would have let him. I would have let her. She could have chosen him.\n\nIt wouldn't have cut our own ties. But it was at that moment that I decided to give her that freedom. But, the truth was, I owned her. And that was a truth neither of us could ever deny.\n\n\"How about we get out of here,\" Nick said to Diane.\n\nDiane was hesitant. But I guided her thoughts. Nick was rough. Nick was odd. This wasn't the romantic situation she wanted. But it was real. And so was he. And he liked her. He was sweet. He cared. He fetched her drinks. He smiled at her. He listened to her. She wanted to leave. They would stop by the gazebo. He'd still be the same. Goofy. Smiling. Honest. Cute. She saw his half-hard cock through his pants. And she liked him all the more for it. He was getting hard for her. Why make him wait? She like him. She wanted him. They wanted each other.\n\n\"Hey, send your roommate a message,\" she whispered into his ear.\n\n\"Huh?\"\n\n\"Trust me, you're going to need the room tonight,\" I told him.\n\nA smile bloomed onto his lips as he pulled her into his arms. She stood with her back against his body, watching as he sent the text message. \"Bro, I needs the room. U good\"\n\nA second later, \"U got it\" pinged on his cell. He showed it to her. She smiled and turned in his arms.\n\n\"Any reason we need to stay here,\" she asked him.\n\nHe smiled at her, \"None at all.\"\n\nI leaned against the wall and watched them walk out. There. Good deed done. Now, time to put someone in his place.\n\n\"Take him home,\" I told her. The word triggered an image of a luxury apartment. Kyle didn't live on campus. I watched as they left and followed them. They got into his car and started to drive off.\n\nDamn. I snatched the closest mind to me. He walked over and handed me his keys. A Volkswagen. It didn't matter. I hopped in and began to follow them. It was only a five minute ride. I sat in my borrowed car, steeling myself for what I was about to do.\n\nThey were making out on the recliner. \"Let me in,\" I told her.\n\nShe smiled at him. \"Stay right there,\" she said as she stood up. I was in his mind as well. I felt his disappointment and excitement. He was enjoying the lead up, but he hated the stop. But what was she doing?\n\nKimberly walked to the door of the apartment. She opened it.\n\nOh shit! Oh FUCK! Was there another girl coming?! A menage-a-whatever! FUCK!\n\nI smiled at him as he saw me walk in.\n\nThe fuck. Who the hell- Is that that geek that was feeling her---\n\nI took his mind into my hands as he started to rise. \"Actually,\" I moved him, from the chair to the couch. Kimberly closed and locked the door behind me.\n\nI enjoyed his mind's confusion. It was like a fine wine or a good whiskey. It was meant to be savored. And I did, as only a Child of Eris could. I dived into his mind. It was a whirlpool. Who was I? Was I hear to rob him? She let me in? Why can't he move?\n\nHe was delicious. You might think it would calm my rage, but his thoughts only stoked the fire. This... This fool had dared to pass judgment on me. ME! It did nothing to calm me, it only sharpened me. From sword to razor's edge. I didn't just hate him, I disdained him, despised him, abhored. And, in the name of the Goddess who had blessed me, I would smite him.\n\nMy first smiting.\n\nI sat down in a comfortable chair. It was nice and plush. Not quite a throne, but I sat like a king. I had him sit up on the couch. Kimberly came and knelt at my feet. \"Do you know who I am,\" I asked him.\n\nI released his mind enough for him to speak, not scream, just speak. Softly. I focused him on me. I narrowed his world. No help as coming. None. There was no help to call for. Only him. Only me.\n\n\"You're the fuck-face that was groping my girl,\" he said.\n\nI smiled. \"Insolence. I like it.\" It unnerved him. I reached down and began petting Kimberly's head. \"You even dare to lay claim to my own property.\" As she knelt with her hands in her laps, she leaned her head against my leg while I ran my fingers through her hair. She luxuriated in the touch. Deep in her, I could still feel her rebellion. She was learning my mind. She knew what was coming. She hated me for it, but her body craved me. As the truth of her resisted me, the rest of her obeyed. She wanted to serve me. She had to.\n\nSure, part of me felt bad for her, I was even somewhat ashamed. But I was the Chosen of Eris. A Goddess had looked down and her eye had fallen on me. And She had found me worthy. I had been tutored at the feet of actual legends. The Black Knight. Morgana, rival of Merlin. His better in my opinion. And Lysande. Goddess knows she polished my every technique.\n\nAnd Kyle thought he was my better? Tonight, I would lay him low.\n\n\"Foolishness, but worry not. I will educate you. You will learn the consequences of daring to raise yourself against your betters.\" I took my hand away from her. \"Stand.\" She stood. \"Strip.\"\n\nShe knew what I wanted. She didn't just take off her clothes. She seduced us. A silent strip show.\n\n\"Babe... no.\" I smiled to hear him. He tried to close his eyes. I them open. Her shirt slowly revealed her upper body. Flat tummy. Breast encased in lace. Her long slender arms. Her beautiful face. Her hair fell down, framing the picture.",
        "He tried to look away. I forced him to watch.\n\nShe turned away as she tossed her shirt to the side.\n\nWe heard the button pop on her jeans. She bent over and wiggled her panty-clad ass at us as she worked her pants down her legs. She stepped out of them slowly. Her foot slid them to the side as she turned around to face us.\n\n\"Babe, stop, you don't have to do this.\"\n\nHer hand reached behind her and undid her bra. She held it in place with one hand at time as she slipped each loop over her arms. \"Yes I do,\" she said softly. \"He told me to. So I have to.\" My secrets were mine. Just like she was. So she kept them.\n\nHer bra dropped and her breast hung free. Time was a long way from ravishing her. Her tits sat up nice and pert, hard nipples poked out, demanding attention.\n\nWhy was he watching this? Why couldn't he move? Eris, I was enjoying his mind. \"Why,\" he asked. I could tell he was asking me. But I heard him asking the world as well.\n\n\"Because you dared,\" I answered him.\n\nKimberly bent over, her tits hung free and swayed sweetly with her movement. She slid those barely-there panties down her legs and stepped out of them. As she stood, she was revealed in all her beauty. It was a glory, dedicated to me, to Eris. She was her gift to me.\n\nI stood up and she came to me. I didn't even command her. The bond between us made my demands for me. And she answered. Even though she didn't want to. She knelt and untied my shoes. I stepped out of them as I took off my shirt. I was a bit eager.\n\nKimberly unbuttoned my pants as I stepped out of my shoes. She slid both my pants and boxers down my legs, exposing me. My hard cock swung out, freed, to stare her in the face. I stepped out of my pants bringing me closer to her. Her hand came up and her fingers wrapped around my manhood. I felt her mind's rebellion. She fought so hard. So hard. And it was so useless. But I respected her struggle.\n\nShe didn't want to do this. She wanted no part of it. I was weaponizing her, and aiming her at the heart of someone she thought she could learn to love, even in the midst of all that we were going through. She could have loved him. She could have balanced us. She could have had her own life. She could have still been her.\n\nYet and still, she was up against the will of a Chosen. How could she win? She was my Goddess's gift to me. And Eris denied me nothing. I felt her last bit of will, the last ember of self, burn out. She was mine. \"Master, please,\" she said softly.\n\nI didn't even bother to look at her. Instead, I looked at him. \"What do you think,\" I asked. \"Should I let her. She wants to so bad.\"\n\nHe couldn't believe what he was seeing. Kimberly, his girlfriend, was on her knees, in his home, with him watching, naked, on her knees, stripped by my command, asking to suck my dick, in front of him.\n\n\"Please don't. Please DON'T DO THIS.\" I wasn't sure which of us he was begging. He wasn't either.\n\n\"That wasn't a no,\" I smiled at him. I turned my gaze down to her. My servant. My slave. \"Please me.\"\n\nEris she did.\n\nGod.\n\nI've actually gotten my cock sucked by a few girls. I've even gotten a one of my professors to suck me off. It was nothing like what she did.\n\nKimberly didn't suck my dick. She made love to it.\n\nShe looked up at me, straight into my eyes. I saw her resignation, her submission. And then her eyes closed. She had failed. She had given up. She was mine. All mine. Whole. Complete. Entirely. She looked so beautifully demure as her lips parted and her mouth opened. She took me in. The warmth of her surrounded me, her tongue danced beneath me, around me. Deeper and deeper she took me.\n\nEven to this day, I count that as a rare pleasure.\n\nShe didn't make a sound, but I felt her gagging on me. On purpose. As she pulled away, her saliva dripped down the length of me. My ball were slick in her hands, it was like velvet on cream as she massaged me.\n\nShe took me in again.\n\nFuck.\n\nYes.\n\nMy hand found the top of her head. But I gave her no pressure. I didn't need to. Everything she did was a pleasure to me. She pulled away, licking the length of me. She lifted me up and suckled on my testicles. Taking one. Rolling it in her mouth. Her tongue toyed and played with me. Then the other. Her warm breath rolled out over me. Her hand had moved to my shaft. Stroking me. My head was tilted back in pleasure. Back to the first. Then she licked her way up me and took me deep into her mouth again.\n\nEris!\n\nAs she sucked on me, it felt like the entirety of my being had been drawn down to my cock. It was pure pleasure, each ounce distilled to a drop. And I was drinking the entire bottle. Her tongue was always right where I would feel it the most, she applied the perfect pressure. So wet. So warm. She pulled back, her teeth gently scraping against my skin, until on the head of my cock was in her mouth. Her tongue swirled around me. Both of her hands came up and began stroking me as she sucked at the tip of my dick. Fuck. FuCK! FUCK!\n\nI grabbed her head and shoved myself down her throat.\n\nAnd I came. Eris, I came. I fired shot after shot down her throat. My entire body tensed. I felt her struggling to breathe, and it only added more pleasure to me. I came even harder.\n\nI was finished. Wave after wave of pleasure had washed through me. She had thrown me to the tides and the oceans of her servitude had drowned me. I stepped away from her. Her fingers caressed my cock as I sat down on the chair. She leaned forward and the tip of her tongue licked away a bead of semen that was left to form at the head of my dick. I shivered at her touch.\n\nI tilted my head back. Still swimming in the pleasure of her. My victory over her. I felt my mind inside her own. I felt her pleasure at pleasing me. I felt her hatred of it.\n\nAnd then I felt him.\n\nKyle's cock strained in his pants. He was completely jealous. He couldn't even comprehend his hatred of me. Her betrayel of him... I felt him struggle against my will. He wanted to move. He wanted to kill me. He wanted to strangle her. He wanted to run away.\n\nAnd he couldn't do any of it.\n\nA smile slowly spread across my face. I wasn't done.\n\nShe crawled over to me on her hands and knees. She bent down and kissed my foot. Anger flared in her. She, the daughter of a multi-billionaire, was made to kiss the feet of some hood-rat's son. I smiled at the same thought. I made her kiss the other.\n\nHer hands slid up my legs. The feel of her had me hardening again.\n\n\"No,\" he said. \"No, please, PLEASE, STOP THIS! I'm sorry! I'm SORRY! PLEASE!!!\"\n\nKimberly slid herself along by body until she sat in my lap. I could feel the heat of her pussy against my cock. Her arms wrapped around my neck and she pulled me to her. Her lips met mine and she kissed me. Her tongue danced inside my mouth. My hands gripped her ass and she ground herself against me.\n\n\"STOOPPPPP!\" It was the quietest scream I had ever heard. He choked on his own voice. I smiled into her kiss. She felt my pleasure and moaned into my mouth.\n\nAs she rose, I felt her body shift. I slid into her.\n\nOHHHH FUCKKKK MEEEE\n\nSo soft. So warm. So yes\n\nMore. More. MORE!!!\n\nI gripped her ass and tried to force her onto me. But she would not be moved. She ground me into her. And rose from me slowly. I wanted to lean my head back and scream, but her arms held me prisoner to her kiss.\n\nI saw through his mind. Her perfect ass. In my hands. Her luscious lips. Kissing me. Her marvelous pussy. Sliding on my dick. And he couldn't move. His cock strained and strained. And he couldn't touch it. He wanted to turn his head, close his eyes, deny all of it. But here he sat, bound, and bearing witness.\n\n\"Now,\" I heard in my mind. I knew what I wanted. And I would have it. All of it.\n\nI pushed her off me and she fell to the floor. She laid there and looked up at me, afraid she had done something wrong. I stood up and grabbed her by her hair. \"Master, I'm sorry! I'm sorry!\" She didn't even know what she had done wrong.\n\nI drug her over to him. Her hands spread in front of her, one on each side of him. I had closed my mind to her.\n\nI had her complete submission. I knew what that meant. I had been taught it's meaning. She needed that connection, she was almost addicted to it. Eventually she would be, if Morgana could be believed. And I knew she could be.\n\nI pulled her head up by her hair. \"Look at him,\" I ordered her. My power gave weight to my words on her mind. She was grasping for it. She craved our connection. I felt her latch onto it the least of it. My bare power on her mind. She looked straight into his eyes.\n\n\"Please,\" he whispered. It was barely a word. Hardly a sound. He was about to break.\n\nI didn't even pretend. I didn't hold anything back. I didn't wait for the right moment. I grabbed her waist and slammed my cock into her, down to the base. The warm, velvet softness of her surrounded me.\n\n\"Yes,\" she moaned. I felt her warm breath on his face. I saw her tits sway as I thrust into her through his eyes. I saw him see the relief on her face to have me back inside of her. \"Thank you, Master.\"\n\nHis heart broke. He heard her, and his heart broke. I smiled as I pulled back. His heart was broken. I slid into her again. His heart broke again.\n\nI fucked her. There was no nicety to it. I fucked her. She was inches away from him. I fucked her. He saw the pleasure swimming in her eyes. She cared nothing for him, not while I was inside of her. He knew what she felt like. He knew what I was feeling. The tightness of her. The satin silk of her pussy sliding on my dick.\n\n\"Oh! Master Yes! MASTER! FUCK ME!\" I was her god. I owned her. She was mine. And he watched me take her. I fucked her on top of him.\n\nHis heart broke into smaller and smaller pieces with every stroke of my cock. And he broke with it. Tears rolled down his eyes. Her head tilted back in pleasure. She pushed back against me with every thrust, demanding all of me. I fucked her, and she took all of me, and begged for more. She looked Kyle dead in his eyes, and begged for me.\n\nAnd he felt that.\n\nI fucked her. I was relentless. With each thrust, I drove myself into her as far as I could. Her submission had done something to me. Now that I had it, it wasn't enough. I wanted more. I wanted to drive myself even deeper into her. Into her body. Into her mind.\n\nInto her soul.\n\nI fucked her for every resistance. I fucked her for every defiance. I fucked her for every moment of her life that she had without me. I felt her come. I felt her pussy tighten on me. I felt the walls of her cunt trying to milk me. And I fucked her. I fucked her through and beyond that.\n\nHow dare she! I cared nothing for her pleasure. She was mine. Her mind. Her pleasure. Her everything belonged to me.\n\nI fucked her.\n\nShe moaned.\n\nShe screamed.\n\nI fucked her.\n\nThis was not for her. This was for me. She was for me. She was mine. Completely mine. My fingers dug into her hips, pulling her onto me. I fucked her. I shoved my cock as deep as I could into her. I made her take me.\n\n\"MASTER! MASTER!!! MASTER!!!\"\n\nShe came again.\n\nTears rolled freely from his eyes. He tried as hard as he could, he put the entirety of his being behind it. His entire lifeforce bent to that one action. He tried to look away. And he failed. What was his will to mine? He spoke. His voice was soft, broken. \"I'm sorry. I'm so so sorry.\" He wasn't talking to her. He wasn't even talking to me. He was speaking to the world. He was done. He was over.\n\nI came. I shoved my cock as deep as I could into her. And I came. And she came. Her pussy tightened around me for the third time. She milked me for all I was worth. I was a Chosen of Eris, and worth a lot. And she took all of me. She collapsed on top of him, slick with pleasure and sweat.\n\nI slid out of her slowly, my cock was over-sensitive.\n\nI wasn't done.\n\nI grabbed her hair and threw her to the ground, she didn't fight me. She barely registered the impact. \"Clean her,\" I told him. I grabbed his mind, and I was surprised.\n\nI didn't need to.\n\nHe was already moving.\n\nI turned off her body. She was overstimulated as it was, and this wasn't supposed to be a punishment for her. I walked over to the chair and collapsed into it. Breathless. Sweaty. The air was soaked with our sex.\n\nHe licked her cunt. His tongue reached out and lapped up my cum inside of her. He was so broken. His arms wrapped around her legs and pulled her to him. Pulled him into her. And he swallowed my seed.\n\nI looked down at them. \"You will join her. You will serve me. I own you now. Because you tried to steal from me. So I steal from you. For your penance, I take your pleasure.\"\n\nHe blinked. He lifted his glass to his lips. I looked at him. Disbelief. A lack of understanding. I smiled at him. \"Don't worry, Lieutenant. The story isn't finished. Hell, I haven't even told you about your part in it.\"\n\n\"You're telling me some ancient goddess gave you mind control powers and you've used them for sex and money.\"\n\n\"No. I'm telling you Eris gave me power to entertain her. Power, money, sex, convenience, those are just by-products. The true purpose of all I do is chaos. Even when it's not my goal, it's always my result,\" I said, taking a sip from my whiskey.\n\nHe reached into his pocket and pulled out a pack of cigarettes. I reached into his mind. He looked at them and put them back into his pocket.\n\nI smiled at him. \"You'll never smoke again. Tell your wife she's welcome.\" He looked at me, wide-eyed. Then his eyes narrowed. His arm began to move. \"Go on. Reach for them. I bet they never leave your pocket. I bet you go home and throw them away.\"\n\nHe reached out for his drink. I smiled. 'Told you,' I said to myself. Kim smiled at my feet. Leah sat naked at his. His cum dripped down her chin. Her arm rested on his knee and she leaned against him. He didn't know how much he enjoyed it. He liked it. He didn't like that he liked it. He liked her. He was a married man. He wasn't suppose to like her. He was too old for her. He didn't like liking her. But he liked her.\n\nDiane was sucking Nick's dick behind me. He could see her. And neither of them cared. They'd be fucking soon. I smiled. I wondered how his mind would handle that.\n\nEnding of Book 1.\n\n--\n\nOh God! What have I done?! So, I'm nervous as fuck. I have three chapters planned for this story, but I've never written chapters as long as this. Add to that, this is my first time venturing out into this category. Please leave comments! Please! Otherwise, who knows what will happen to this cute, little duckling. He's soooo cute! He's wearing a sailor's hat! COMMENT! LOL!\n\nAnyway, thanks for reading. I hope you enjoyed it. And yes, more is coming. I'm excited to write it. Like I said, I plan for three chapters, but I'm starting to think four will be necessary. Maybe. Possibly. I hope not. LOL.\n\n-Shaide-\n\n \n"
    ],
    "authorname": "shaide87",
    "tags": [
        "forced",
        "goddess",
        "mind control",
        "mythology",
        "reluctance",
        "revenge",
        "witness"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/path-of-the-chosen-pt-01"
}