{
    "title": "Triumph",
    "pages": [
        " This one has been a work in progress for a while, buried behind other projects.\n\nI wasn't sure I would ever finish it, and perhaps I haven't as well as I could have. But I hate starting things and not finishing them, and Heather needed to tell her story.\n\nW. ---\n\nThe mournful cries of the passing gulls seemed strangely out of place in the morning sunlight, silver on the distant waves. I sat on the weathered boulder I now thought of as mine, watching the stately waltz of the ferries as they rounded the headland and eased into the harbour below. The breeze carried the faint sound of the bells of Saint Margaret's up to my perch, and I sighed out the breath I'd been holding.\n\nA gull glided past on the updraft, wings flicking in and out as he evaluated the chances I'd feed him. He banked and came back, then tucked his wings slightly and soared off downslope towards the distant beach, dismissing me.\n\nI brushed a strand of hair back from my face, and the movement brought me back into the present.\n\nTen am. Another Tuesday, passing like all the others before it.\n\nI pulled my jacket closed, then zipped it up. I took a last deep breath, then climbed down from my boulder and walked slowly back up to the parking lot.\n\nBonnie squatted where I'd left her; black and weathered silver, smelling slightly of petrol and chain lubricant. I ran my fingers lightly along the tank, remembering. \n\nI pulled on my helmet, clinched the strap under my chin, and swung my right leg over the saddle. One or two attempts and she coughed to life. I let her idle as I settled myself. Then I kicked her into gear, gave her a small bit of throttle, and arced back out to reality.\n\n--\n\nTraffic was light, and I eased Bonnie gently down the winding road into town. Past the big traffic circle, past the hardware store. Past the new office park, then onto the B road back towards the hill; towards home. But first, my ritual called for one more stop.\n\nI turned off into the Beachcomber's gravel driveway, and pulled up close to the door. No need to lock Bonnie here; not like down south where an unattended motorcycle would disappear before you could blink. I hung my helmet over a mirror and slipped inside. Janice had heard me coming, and was already brewing my cafe latte for me.\n\n\"Morning, Heather,\" she smiled.\n\n\"Hi, Janice.\"\n\n\"You been up at the overlook again, sweetie?\"\n\n\"Yeah.\"\n\n\"Lovely morning for it. Feeling better?\"\n\n\"I'm still breathing.\"\n\nShe reached out to gently squeeze my hand; I snatched it back, startled by the touch.\n\n\"Sorry,\" we both said, and I fumbled the pound and shrapnel onto the countertop. \"Sorry,\" I repeated, softer. \"I can't talk today.\" I couldn't meet her eyes; too scared of what I'd see there. \n\n\"You go ride some more, my girl. Go blow those shadows out your head. Just be careful, ok?\"\n\n\"I will. Jan?\"\n\n\"Yeah?\"\n\n\"Thanks.\"\n\n--\n\nI sat on Bonnie's saddle, staring at my front door from the shade of the ash tree. Every minute I spent outside was a minute more I was behind on my contracts. But it was also a minute more away from my demons. If I had the choice I'd probably shutter the place and just leave. Leave here, leave the United Kingdom... go somewhere new, somewhere... free.\n\nBut I couldn't. Deadlines. Rent. Debt. Obligations weighing me down like a rock. Anchoring me to my life in some ways, perhaps. Such as it was. \n\nI sighed, climbed down and pulled the cover over the Bonneville. Last night's dew still glittered on the grass; I drew unheeding brush-strokes through it as I slouched the middling distance to my door.\n\nAs always, the silence inside settled like fog around me. I hung the keys behind the door and turned on the radio to try to banish it. Then I lit a fresh candle beside the two photos and reflected quietly for a few moments.\n\nFor once I managed to work productively for a couple of hours, and I'd finished two small sets of documentation before I took my first break.\n\nI made a cup of coffee and took it out back. I sat on the section of log he'd found; the one he'd planned to turn into a child's table and chairs. I sipped slowly, watching small breaths of wind gathering the wheat into undulating waves that slanted across the field. \n\nTwo crows gamed and circled above the distant treeline, and I watched them till they disappeared.\n\nI went back inside to try to work some more.\n\n--\n\nGrief is the silent killer. Grief, that gaunt, sunken-eyed hag, squatting on your heart, day in and day out, never ceasing, without pity.\n\nI knew the bitch all too well.\n\nOur beautiful daughter, Kirsty, stillborn at seven months following a nightmare two-in-the-morning dash to the A&E when I realised she hadn't kicked in hours. A statistic, Ms McNaught. One in two hundred chance in the modern United Kingdom. Ten times more frequent than cot death. And her number had come up.\n\nWeeks, then months had passed in dazed greyness. Peter had held us together; had kept me eating and talking and seeing a therapist despite my rage. And in time I'd started to heal; had been able to look at the ultrasound of her. I'd still cry, of course, but I'd still be standing afterwards.\n\nThen the call. The call that had ended Heather McNaught and created me, this ghost drifting through the days. Waiting till it was my turn, too, to die.\n\nIt was sunny when we'd scattered Kirsty, and it had been sunny when I'd scattered Peter with her, up there, with the bay beneath us. I'd had no more tears to cry, and since that day I'd existed but no longer really lived. \n\nSo now I moved through this shuttered, dusty monument to the life and dreams I'd had, keeping it for the day they found me, took me, and scattered me up in the hills where my heart already was.\n\n--\n\nTwilight. I rubbed at my eyes and turned on the desk lamp. I'd managed to finish a large review, and rolled my shoulders as I leaned back into Peter's battered leather chair. A bowl of half-eaten salad pushed into the corner of the desk stood mute tribute to my lack of appetite. I'd gone from what Peter had once drunkenly labeled \"voluptuous\" to what I'd have called \"famine victim\" in earlier times - but food had no real savour for me any more. So I ate sparingly and drank mechanically - mostly wine, often something harder when it was darkest. Fuel for my body, not for my soul.\n\nAn owl hooted and I stood to refill my coffee mug.\n\nI leaned against the worn kitchen counter, staring out at the Triumph under its cover. Peter had loved the bike, and I'd loved riding pillion behind him; my arms wrapped around him. When I'd emerged from my chrysalis following his death, I'd considered selling it. But instead I'd done my basic training and my license and had taken to riding it as a way to remember him. And little by little I'd found what peace there was that remained to me. Riding brought me closer to him and made the horror of the last years seem somehow less present, less important.\n\nI heard the sound of a motorcycle - the roar of a large bike at full song, winding its way through the bends. Building to a scream as the rider exited each corner, then easing back down for the entry to the next. \n\nI raised my coffee in silent benediction and wished him or her well.\n\n--\n\nDappled sunlight woke me, and for a few blessed moments I lay there, feeling warm and safe. Then I remembered, breathed once, twice, and stood up. The smell of last night's vodka nauseated me, and I carried the tumbler to the kitchen to throw the dregs away.\n\nI dealt with some emails from clients while I nursed a coffee. Then I watered my small herb garden and topped up the bird feeder. I pulled out some weeds, then stretched the kinks out of my back. I felt old; far older than my true age of twenty nine. I looked up, checking the weather, then stepped back inside. I stripped out of my pyjamas and pulled on some of my tattered underwear. My jeans, a long-sleeve cotton vest and my riding boots followed. I reached down, adjusting the chain so that Peter's ring wouldn't pinch my breasts. Then I grabbed my jacket, helmet and gloves, locked my door, and walked over to Bonnie.\n\nSlowly, the wind and the road blew away the cobwebs. I amused myself by pushing the Bonneville through the curves; thinking of the biker I'd heard the previous night. It was fun for a while, and I felt myself grinning despite everything. \n\nEventually, of course, I found my way back to my lookout point. I parked, left my helmet and gloves on the bike, and wandered down to my boulder where I stood watching the wind dappling the surface of the ocean. Flecks of white showed here and there; the wind was building and it looked like a front was moving through. \n\nBehind me, the growing growl of a motorcycle. I half-turned, and saw a rider guiding a scarlet and white sports bike into the parking area. He parked up next to Bonnie, and spent a few moments looking at her. I turned back to the ocean, disinterested. Likely another middle-aged man in his too-tight leathers. \n\nFaintly I heard St Margarets ringing the hour, and I glanced at my watch. I cursed; it was ten. My play on the curves had cost me my time with my memories. \n\nI stepped down from the boulder, zipping up my jacket as I walked.\n\nThe sports-bike rider was leaning against the fence, watching the ocean. I noticed in passing that his hair was peppered with grey at the temples, but he looked younger and more attractive than I'd thought he would be. \n\nHe gave me a nod and a wave as I passed, and I answered him with a small smile of recognition in return. I pulled on my helmet and gloves, and shot him a quick glance - he'd turned around to watch me as I walked. I started Bonnie, climbed on, and gave the biker a small wave as I eased back to the road. \n\nThen, uncharacteristically, I gunned the throttle and accelerated hard down the hill towards town.\n\n--\n\nShadows danced over my visor, and I felt almost alive as I leaned into each corner. Bonnie sang, deep-throated, and I exulted as we curled through one sweeping hairpin. I opened the throttle further and we roared down the straight, wind whistling over us. I eased on the brakes, leaned into the corner, and was laughing to myself when the white van flashed into view ahead, well over the centreline, barreling straight towards me.\n\n\"Christ!\"\n\nI did the instinctive, stupid thing and grabbed as much brake as I could. The front wheel locked, Bonnie lowsided, and she and I slid ignominiously off into the bushes at speed, screaming all the way.\n\n--\n\n\"Fuck. Fuck. Oh God. Fuck.\"\n\nSlowly the ringing in my ears receded. I lay on my back, staring up through the brambles at the clouds; tasting the dust in my mouth. A minute, two minutes, five... I lay, just breathing, thankful that I hadn't collided with the van. I took stock of my condition as my heart-rate slowed. I could wiggle my toes, and my arms seemed ok. My neck seemed ok too - no real pain. \n\nFatalistically, I decided to sit up. If my neck was broken, at least I'd die quickly. Probably.\n\nI removed my helmet and stared around. I'd slid some distance down a gentle slope into the brambles, but I seemed to have somehow come through surprisingly well. I blessed Peter and his insistence that I have a proper armoured jacket, though the thorns had torn the leather up quite badly. Small spots of blood dappled my thighs and I could feel them stinging; clearly my jeans hadn't done as well.\n\nI staggered to my feet, then fought my way out of the thorns. I found Bonnie on her side a bit further down the slope, and I retrieved my keys and turned off the ignition. Fuel was leaking out of her and the last thing I wanted was for her to burn. I climbed slowly back up to the road, and sat down. I pulled off my gloves and put them and my helmet down next to me.\n\nThen I simply sat, eyes closed, breathing, feeling the wind on my skin.\n\nThere was no sign of the van, and for a while all I could hear was the rustling of the grass around me and the distant bleating of sheep. Then in the distance I heard the song of a motorcycle. It grew in volume, and I was somehow unsurprised to see the red and white sports-bike flash into view around the corner.\n\nThe rider saw me and sat upright, braking hard, but he was carrying too much speed and overshot me; I watched as he swung round further downhill to come back and pull off the road next to me. \n\nI squinted up at him.\n\n\"Are you ok?\"\n\n\"I think so,\" I answered. \n\nHe put his bike onto its side stand and climbed off. \"Where's your Triumph?\"\n\n\"She got tired and decided to lie down for a while.\"\n\nHe pulled off his helmet and squatted down to my level. \"Hi. I'm Alan,\" he said. \"You're bleeding,\" he added helpfully.\n\n\"I took a nap in the brambles.\"\n\nHe grinned. \"You can't be too badly hurt if you're still able to laugh about a crash.\"\n\n\"Laughter is all I have left at this point.\" \n\n\"Here\", he said, handing me a small roll of glucose sweets. \"Eat one of two of these; it will help with the shock. Do you need me to call an ambulance?\"\n\n\"No... I don't think you need to. But I have no idea how I'm going to get my bike back home.\"\n\n\"Where is it?\"\n\nI pointed. \"About twenty yards down. You can't miss her. Follow the smell of fuel.\" \n\nHe winced, then stood and peered down the slope. \"It doesn't look too bad from here. Let me go check.\"\n\nI listened as he forced his way down through the bushes. \"Your bike looks more or less intact,\" he called. I heard him grunt. \"Your clutch and gear lever are shagged, but everything else looks ok.\"\n\n\"What are you doing?\" I called.\n\n\"Getting you your bike back,\" he huffed in return.\n\n\"Don't be silly, you'll hurt yourself!\"\n\n\"I am... nothing... if not... stubborn...\" followed by various muffled words, likely curses.\n\nI levered myself up to my feet, and stood watching as he grunted and struggled. \"Here, wait,\" I called, and I picked my way slowly down to him. \"Let me help.\"\n\nBetween the two of us we managed to manhandle my bike back up to the road. He got her up onto her stand, and I watched as he inspected her. Then he stood and wiped the sweat off his face. \"Amazing. It's hardly damaged\"\n\n\"It rained the other night,\" I said. \"That and the engine guards probably helped. Do you think she will start?\"\n\n\"Probably best not to try; she may have some internal damage.\"\n\n\"Well, bollocks... how'm I going to get home then?\"\n\n\"Got a phone?\"\n\nI reached into my pocket, then pulled out a collection of smashed electronics that had once been my phone. \"Uh... make that a no.\" \n\n\"Hang on.\" \n\nHe undid his jacket and hopped around, swearing under his breath. \"Here,\" he said, handing a battered iPhone to me. \"Do you have any sort of breakdown cover?\"\n\n\"No,\" I said, laughing softly. \"Never had the budget for a crash.\"\n\nHe grinned sympathetically. \"Got a friend with a van?\"\n\n\"Yeah.\"\n\n\"Give him a call and ask him to bring some planks and ratchet straps so we can get your Triumph into the back.\"\n\n--\n\n\"Janice?\"\n\n\"Heather? What number is this?\"\n\n\"Emergency phone. Jan, I need help. I crashed Bonnie.\"\n\n\"Christ. Are you ok?\"\n\n\"I'm midway down the road from the lookout point. I've got someone here who reckons that all we need is a van and some straps to get her back to the house.\"\n\n\"Tell her they don't need to be ratchet straps but it will make things easier if they are,\" Alan interjected. \n\n\"Who's that?\" said Janice.\n\n\"My leather-clad white-knight,\" I answered.\n\n\"Your what?\" said Alan, laughing.\n\n\"Put him on,\" demanded Janice.\n\nI wordlessly handed the phone to Alan, watching his half of the interrogation with amusement.\n\n\"Yes, hi.\"\n\n\"My name's Alan.\"\n\n\"No, she seems fine. No sign of injuries bar some battle damage from brambles. A little bit of panel beating and she'll be right as rain.\"\n\n\"No, she's not delusional, I am indeed wearing leather.\"\n\n\"No, I'm not telling you what I'm wearing underneath it.\"\n\n\"Yes, I'll wait till you get here.\"\n\nHe shook his head, laughing softly as he hung up. \"Looks like you're stuck with me for a bit. She said she's going to get someone to mind her shop and then come rescue you from my clutches.\"\n\n\"Oh woe. My adventure is ending already.\"\n\n\"So what happened?\"\n\n\"A white van man came round the corner in my lane. I grabbed a fistful of brake and bit the dust.\"\n\n\"Christ, you're lucky. That could have been far worse. I'm amazed you got off so lightly given the speed you were probably going.\"\n\n\"I think I slid more than bounced... though I can tell I'm going to have some interesting bruises.\"\n\n\"Battle scars.\"\n\n\"I have more than enough of those already.\"\n\nHe shot me a glance, but didn't press for information. \"Well, for what it's worth I'm glad I followed you.\"\n\n\"Oh, is that what you were doing?\" I said, archly.\n\n\"I could hear you pushing hard downhill and decided to do the same.\" He shrugged. \"It was clearly a good idea.\"\n\n\"Pity I ran out of skill.\"\n\n\"I've done what you did twice,\" he said. \"You got off lightly; I've still got metal pins in my ankle.\"\n\n\"Ugh,\" I shuddered. \"Must make air travel interesting. Setting off metal detectors all the time.\"\n\nHe grinned. \"It gets old after a while. Hang on, let me just let my assistant know I won't be making it in.\" \n\nHe dialed a number. \"Abby? Alan. I won't be in this morning; please tell Ray and Vic. No, no, nothing serious, just helping a friend move some furniture.\" He winked at me. \"Yeah, yeah, I know... it was kind of last minute. Please tender my apologies. Tell them the world's smallest violin etcetera etcetera. Package it up like you always do for them. Thanks. Thanks, you're a star. Ciao.\"\n\nHe hung up. \"I'm all yours for the morning.\"\n\nHis smile was boyish, despite the grey hairs. \n\nAnd I couldn't help but smile back.\n\n--\n\nI watched Alan wheel Bonnie under the tree and cover her, trying to ignore the sting of the alcohol Janice was using to clean my wounds. \n\n\"Just breathe, honey,\" she said softly. \"Almost done.\"\n\n\"I didn't realise there were as many holes in me as that,\" I hissed, as she dabbed at the cut on my thigh.\n\n\"You did a good job on yourself here, I'll give you that.\"\n\n\"Stupid thing to do. And now I've fucked Bonnie up too. Peter would be so angry.\"\n\n\"Nonsense. He'd have been glad you got out ok. He'd have enjoyed fixing her, too. You know he loved working with his hands.\"\n\n\"I miss him, Jan.\"\n\n\"So do I, my girl. I miss my baby boy every day. But you know he wouldn't want you living like this.\" She fetched me a clean shirt. \"Here. It's an old one in case you bleed some more.\"\n\n\"It's not fair,\" I whispered. \"He should be here, not me.\"\n\n\"All of you should be here,\" she returned, as softly. \"But they aren't and you are and you owe it to them to live the years they didn't get.\"\n\n\"I can't.\" I swallowed, crying now. \"I can't. There's a hole where my heart was and it's never going to heal.\"\n\n\"Then go faster next time,\" she said, hard and level.\n\nI took a shuddering breath.\n\n\"Oh, excuse me!\" Alan ducked back through the doorway to the kitchen. \"Sorry, I didn't... I was just checking everything was ok.\"\n\n\"Everything's fine,\" Janice called. Then, gently, \"Pull yourself together, Heather. I'll make the nice boy some tea.\" She paused. \"They're gone, we're not. Life is largely cruel. But it doesn't always have to be.\"\n\n--\n\nAlan had studiously avoided mentioning my red eyes and nose. I'd sensed his embarrassment at having seen me in my underwear, but I'd felt too self-conscious to try to put him at ease. And anyway, we'd both looked ridiculous; me in my shorts that were blossoming with little bloody bramble flowers and him in a high-tech wicking vest and leather motorcycle trousers, sipping tea as if he were in a box at Lords.\n\nJanice had kept us talking, bless her, and slowly the stilted conversation had eased. And as it had I had scrutinised my unlikely hero; noting the laugh lines that crinkled the corners of his eyes and the deep furrows when he frowned. ",
        "I'd sipped my tea, listening more than I'd talked, leaving it to Janice to winkle out that Alan was a medical-school drop-out who'd decided that he far preferred writing to dissection, and had from there somehow bootstrapped his own company that specialised in lifestyle product reviews. As he had put it, it did well enough for him to roam around looking for hapless women to rescue from killer vegetation, and I'd flushed at the way Janice had laughed at that.\n\nHe'd stayed a while, then regretfully left to 'Go and placate the boss,' as he called his assistant. I'd waved as he'd climbed onto his Yamaha and steered it slowly back down to the road. \n\nThen I'd helped Janice clean up, thanked her again, accepted with good grace the hug and kiss and concerned demands that I phone if I started feeling unwell, and waved her goodbye as well.\n\nAnd then I'd just sat, staring at the photos, remembering.\n\nAt dusk I'd eaten some bread and peanut butter, washed it down with a double vodka, had an abbreviated shower, and then fallen asleep on the couch to a rerun of \"Love Actually\". \n\n--\n\nA car door slammed, waking me. I sat up, bleary eyed, and limped to the kitchen counter.\n\nA green Volkswagen was parked next to my Triumph with its hatch open. Then Alan appeared, carrying a tool box. \n\nHe'd set up a stool and an array of tools by the time I'd crossed the distance to my bike. \n\n\"Good morning,\" he said.\n\n\"Uh... hi. What are you doing here?\"\n\n\"I have a friend who's massively into Bonnevilles; I went to beg some parts and advice off him, then came here to see whether you've got anything planned for the morning.\"\n\n\"It's seven am.\"\n\n\"I'm an early riser when I have a good reason to be.\"\n\n\"You're certainly a pushy person,\" I replied. \"Most normal people would ask for permission before assuming I'd be ok with this.\"\n\nHe shrugged. \"Way I see it is that if you're not ok with it you'll tell me, and if that's the case I'll pack up and get out of your space. But I could see that you care deeply for this bike, and I can help fix it. If you want my help, that is.\"\n\nI brushed a strand of hair out of my eyes. \"What do you get out of this?\" I asked.\n\n\"Time not in an office, working on a bike, talking to someone new,\" he answered, candidly. \"I like working with my hands but don't get to do it much. So this is me being selfish. \"\n\nHis smile gave the lie to his words.\n\n\"I'll make coffee,\" I said. \"Don't start without me.\"\n\n--\n\nHe torqued the last bolt down. \"There. Done.\"\n\n\"You think she's ok to start?\"\n\n\"Climb on and give it a try. There's no petrol leaking, so no risk of fire.\"\n\nI swung my leg over, clicked Bonnie into neutral, turned the key and pressed the starter button. She coughed once or twice, belched a bit of smoke, then settled down into her normal slightly lumpy rumble.\n\n\"Brilliant!\" I said. \"Thank you so much!\"\n\nHe smiled. \"Glad to be of service. I'm still amazed you got away with so little damage.\"\n\n\"I'm just relieved what I did was fixable. This bike is my life.\"\n\n\"Then I'm glad I was able to help. Take it for a quick ride, I'll wait here for you.\"\n\n\"I don't have time,\" I sighed. \"I'm behind on work.\"\n\n\"If you're already behind, another fifteen minutes won't kill you.\"\n\n\"You're a bad influence,\" I said, softly.\n\nHe grinned but said nothing to deny it as he started to clean up. \n\n--\n\nI sat, staring out over the fields, coffee growing cold beside me. Alan had left hours earlier and yet here I still sat, musing instead of doing the work I should be.\n\nIt had been a long, long time since I'd had more than a passing conversation with anyone other than Janice. And he was different. Gentle, polite, and yet decisive. And his gentle banter had hinted at a playfulness that ran counter to his grey hairs. \n\nHe'd stayed long enough to ensure Bonnie was running fine, and had then left, excusing himself with the explanation that he needed to make up the time he'd spent loitering with me the day before.\n\n\"Call me if you want to go for a ride sometime,\" he'd said, handing me his business card. The digits of his mobile phone number slanted neatly across the back; I'd tapped it thoughtfully to my chin as I'd watched him drive off.\n\nThe thought of seeing him again had made me feel a strange flutter of interest. \n\nAnd that had brought the feelings of guilt. So I'd sat here, doing nothing, as the sun swung up to noon. \n\nEventually I summoned the energy to climb to my feet. I found my old Samsung in a drawer, put in my simcard, and put the phone on to charge. I did a load of laundry. I answered an email or two. Then I pulled on my jacket, grabbed my kit, and took Bonnie down to the Beachcomber.\n\nJanice looked up from her newspaper as I walked in. \n\n\"Bike alright then, I take it?\"\n\nI nodded. \"Alan came around this morning and fixed her for me.\"\n\n\"You're kidding.\" She put her paper aside and leaned forward onto the counter.\n\n\"No, I'm as surprised as you are. Woke up this morning with him parked outside, unpacking tools.\"\n\n\"I hope you at least made him some coffee by way of thanks.\"\n\n\"Of course I did,\" I protested. \"I'm not socially inept, Jan.\"\n\n\"Could have fooled me,\" she said, eyes twinkling. \"He's a nice boy. I like him. Very polite,\" she continued with a grin. \"If I were younger I'd give you a run for your money.\"\n\n\"What are you talking about?\"\n\n\"Oh come on, Heather. He clearly likes you.\"\n\n\"He was just being a decent person, Jan. He found me on the side of the road and probably just wanted to make sure I was alright.\"\n\n\"He drove to your house at sparrow-fart to fix your bike. He likes you.\"\n\n\"You're delusional.\"\n\nShe rolled her eyes, still grinning.\n\n\"Anyway,\" I continued softly, \"Peter.\"\n\n\"Peter's dead and gone, Heather. We scattered him up there in the hills, and if he's looking down on us right now the last thing he'd want is for you to be alone.\"\n\n\"How do you know that?\"\n\n\"I raised him. I know my boy. He'd want you to be happy.\"\n\nWe sat together, two lonely women united for a moment by our memories. Then I sighed. \n\n\"I need to go. I need to go do some work.\"\n\n\"Don't close yourself off from the possibility of happiness, Heather.\"\n\nI shrugged, then stood and turned for the door. \n\n\"Here, wait,\" she said. She made me a latte, and clipped the plastic lid onto the cup. \"Here. Go think about what I said, girl. If it helps, you have my approval to move on from my boy. I'll never love you less for it.\"\n\nI lifted the counter gate, stepped round it, and hugged her hard. \"I know that, I know that,\" I whispered. \"And you have to know how much that means. But I don't think I'm ready. How can I be with someone if I haven't even come to peace with me?\"\n\n\"Time and tide wait for nobody, my girl. Don't wait too long or you'll miss yours.\"\n\n--\n\nDusk found me walking slowly along the sand, dodging the odd wave thrown up by the ebbing tide. I felt confused, unsure of what to do. Janice's words chased themselves around my head; followed by thoughts of Alan. Contact with him, however brief, had left me aware of how desperately lonely I was - Janice my only real physical tie to the world; all my others as ephemeral as an dream.\n\nDeep down I knew Janice was right. I knew Peter would not have wished this solitude on me.\n\nBut I knew, too, that I'd chosen this. Perhaps forgivably - my loss was still raw. Even now, even after the three long years, it sometimes seemed like I only needed to blink and Peter would appear; roaring around the corner in his mad, wild-haired way with some new project with which he could drive me to distraction. \n\nI kicked some sand at a wave.\n\nMy old life was ashes on the wind, bar the memories. Would drawing a line under it and trying to start over be such a betrayal?\n\nWould getting to know Alan better be denying my old life? Would staying as I was bring Peter or Kirsty back? \n\nNo.\n\nI sighed.\n\nNot much of a base to build on. But I'd made a decision, and that was something. I'd reach out, be as open as I was capable of, and see what happened. \n\nIt would be good to have another friend, after all.\n\n--\n\n\"Alan speaking.\"\n\n\"Hi, it's me.\" I said.\n\n\"Hello, who's this?\"\n\n\"Oh. Right. It's Heather. Your rescue case.\"\n\n\"Heather! Of course! Hello, it's good to hear from you. The Bonneville still ok?\"\n\nI smiled. \"Yeah, thanks. Bonnie is still right as rain. I was calling... well... I was calling to take you up on that offer for a ride sometime.\"\n\n\"You got a sometime in mind?\"\n\n\"Well. Do you work Saturdays?\"\n\n\"Not generally no.\"\n\n\"So tomorrow then?\"\n\n\"Sounds perfect. What time and where shall I meet you?\"\n\n\"Any time. I'm a free agent. You ok to meet me at my place?\"\n\n\"No problem at all. I'll see you tomorrow. Seven in the morning?\"\n\n\"Seven thirty, \" I replied. \"Gives me a half hour to get ready. I need panelbeating before I'm allowed outside.\"\n\n\"I sincerely doubt that. But ok. See you tomorrow, Heather.\"\n\n\"See ya.\"\n\nI hung up. Then for the first time in as long as I could remember I cooked myself a proper meal, and ate it outside under the stars.\n\n--\n\n\"You're late,\" I said, as he pulled off his helmet.\n\n\"Traffic,\" he offered by way of apology.\n\n\"Uh huh. Traffic he says, straddling his supersport.\"\n\n\"I was being well-behaved.\"\n\n\"I find that impossible to believe.\"\n\nHis answering smile crinkled his eyes, and once more he looked much younger than he was. \"It's a lovely day,\" he said, glancing upwards. \"Anywhere specific you want to go?\"\n\n\"No. You?\"\n\n\"No. We could head up the coast road a ways, see what we find?\"\n\n\"That sounds nice, actually. I haven't been up that way since... well, in a long while.\"\n\n\"There's supposed to be a nice gastropub up that way. We could look in and see what the menu's like.\"\n\nI stood, reaching for my helmet. \"Let's get going then. Would hate to waste the day.\"\n\n--\n\nShadows flickering on visor. Rushing of the wind in my ears. The bob and weave of the bike under me. The burbling roar as I opened the throttle at each apex. And always, the narrow nose of the Yamaha, tucked in behind me, keeping station through the sweeping turns up and over the pass.\n\nWe pushed the pace as the road straightened and emptied out, and I laughed as Alan screamed past me, pretending to slap his bike's seat like a deranged cowboy. I tried to stick to him, but I ran out of courage long before Bonnie ran out of will, and I eased off and sat up, letting Bonnie coast back down to a responsible speed. After a moment Alan copied me and dropped back to beside me. I glanced over at him, and laughed again at the cheeky thumbs up he gave me.\n\nIt was bliss. Innocent bliss, not a care in the world. Just Bonnie and me and someone to share the ride with again. \n\nWhich was good, considering that our intended destination was closed for renovation. We perched on our bikes for a moment, staring morosely at the hand-painted sign that blocked the stairs and torpedoed our brunch.\n\n\"We could always go back to my place,\" I offered, after some momentary misgivings. \"I probably have enough to at least make us some sandwiches. And it's not that far back.\"\n\n\"Sounds like a good option to me,\" Alan said. \"I don't think there's much else around here.\"\n\nSo back we looped, back out onto the road. A slower trip back this time; I felt no need to hurry and to be honest I almost regretted the offer. But it would be extremely rude to change my mind now, and it was a lovely day. I would regret not spending more of it with him.\n\n--\n\nI idled Bonnie slowly over to the tree, kicked down the kickstand, and set her gently over onto it. I swung my leg off the saddle and leaned back against Bonnie as I waited for Alan to park up. \n\nNerves made me clumsy with my keys, and I gave a flustered \"Fuck\" or two as I struggled to open my door.\n\n\"Well... welcome,\" I offered, sheepish.\n\nAlan smiled. \"Thanks for having me over, Heather. It's very kind of you to let me impose like this.\"\n\n\"It's no imposition,\" I lied. \"But it's not much of a kindness either, I think we may be eating rabbit food for lunch.\"\n\nI dug into my fridge, and managed to find some passable cucumber and tomato. A half-empty jar of mayonnaise and one of my emergency cans meant that we could at least eat tuna mayonnaise. I turned, and saw Alan inspecting the photos. He looked up, saw me watching him, and glanced aside. \n\nI closed my eyes for a moment, breathing. \"So...\" I managed. \"I can offer you something better than lettuce at least.\"\n\n\"Can I help at all, Heather?\"\n\nI pushed a cutting board towards him and plonked the tomatoes down on it. \"Here. Cut these.\"\n\n\"Sorry for being nosey,\" he said, softly.\n\n\"You don't need to apologise. I'm just prickly sometimes,\" I demurred. \"Feel free to snoop around if you like.\"\n\n\"Maybe after lunch,\" he replied.\n\nWe assembled our sandwiches, and I poured us both glasses of water. Then I shouldered open the back door and lead him out to my table. \"Umbrella?\" I asked.\n\n\"Nah\" he returned as he took a seat. \"It's nice to sit in the sun for once. Most days I get out of work too late to see much of it.\"\n\n\"And weekends?\" I asked.\n\n\"Outdoors. My son rock climbs, so I often tag along after him.\"\n\n\"You have a son?\"\n\n\"Yeah. His mother didn't feel like staying married to a workaholic, so I didn't see him much before he turned sixteen. He's twenty three now.\"\n\n\"And you are...\" I fished.\n\n\"Forty one. And yes, he wasn't planned, and no, I do not regret him at all,\" he continued. \"Best mistake I ever made in my life. Second perhaps being buying a supersport motorcycle.\" He sipped his water. \"And you, Heather?\"\n\n\"And me, what?\"\n\n\"Age, sex, language,\" he said, deadpan.\n\n\"Hah. Age, ancient, sex, indeterminate, language, well... Ich spreche kein Deutsch.\"\n\n\"Ancient?\"\n\n\"Withered,\" I retorted, curling my fingers into claws and rolling my eyes. \n\nHe snorted. \"Not so ancient you don't still know how to have fun.\"\n\n\"Today's an exception.\"\n\nHe leaned back, grinning. \"Well, thank you for making an exception for me, then.\"\n\n\"So isn't your son missing you today?\" \n\nHe shook his head, still grinning. \"Chasing a girl this weekend. He's at a music festival. Dad plays second fiddle to a pretty face.\"\n\n\"I suppose I should thank him for giving you time off.\"\n\n\"It makes a nice change of pace. I don't get to ride much over weekends for obvious reasons. So getting out today with you was a rare treat.\"\n\n\"Now you're flattering me,\" I answered, softly.\n\nHe took a drink of water. Then he leaned forward.\n\n\"Whatever hurt you was awful. It's not hard to see the scars.\"\n\n\"I...\"\n\n\"I don't know what it was, and while I have a pretty good idea I'm not going to pry. You'll tell me if you're ever good and ready. But grief doesn't define you, Heather. It bends you, wrecks parts of you. Sometimes you might wish it finished the job. But you're still alive, still breathing.\"\n\nHe picked at a knot in the table top. \"You break yourself down,\" he continued, eventually. \"You may not even realise you do it, but you belittle and diminish yourself through your choice of words. Calling yourself old. Pah,\" he snorted. \"Old is in the mind until you're my age. Then, maybe, you earn the right to start bitching about it.\"\n\nHis small, sympathetic smile took the sting out of his words.\n\n\"Penny for your thoughts?\" he asked as the silence stretched out.\n\nI shook my head, not trusting myself to speak just yet.\n\n\"I'm sorry,\" he sighed. \"But I'm not good at keeping quiet when things are wrong.\"\n\n\"I just... I can't talk about it,\" I gulped. \"I can't. Please don't ask me about it. I can't,\" I started to sob. \"I can't I can't I can't!\"\n\nAnd just like that, my walls were down, and it was Tuesday, and Janice was phoning me, voice almost unrecognisable, to tell me that my Peter was gone.\n\n--\n\n\"Thank you,\" I whispered.\n\nAlan held me for a few seconds more, then released me. He got up out of his crouch, wincing as his knee clicked. \"Here,\" he said gently, passing me my glass. I clutched it, knuckles white, willing myself not to cry anymore.\n\n\"Sorry,\" he said, again. \"I feel like a real dick now.\"\n\n\"Don't,\" I managed. \"Don't. This isn't your fault. You didn't do this to me.\"\n\n\"But I reminded you of it.\"\n\n\"You took me out of it for a few brief happy moments. It never leaves me. It's always here.\"\n\n\"Why don't you leave this place then?\" he asked, softly.\n\n\"Too many memories. I can't leave them behind. They're all I have left now.\"\n\nHe pulled his chair around next to mine, and sat down in it. Then, gently, he reached out and pulled me against him. \n\nI closed my eyes, fighting back the tears.\n\nAnd then, quietly, he began to sing. Softly, almost sotto voce. And slowly I calmed. Slowly I breathed. Slowly I was able to push the black wave of grief back down into the casket I kept it in.\n\n\"I need a drink,\" I whispered.\n\n\"I won't judge you.\"\n\n\"Means I have to get up though. And this is the first... the first hug I've had in a long time. And I need it more than I need alcohol.\"\n\n\"I take back some of what I said. You've earned your scars. I won't belittle them again.\"\n\n\"Thank you.\" I shivered, exhausted. \"Sorry for disintegrating on you.\"\n\n\"Again, you've earned those scars.\"\n\nWe sat for a while, silent, watching the wind on the wheatfields, lunch mostly forgotten.\n\n--\n\nI poured myself a large tumbler of vodka, and then scrounged some of my remaining bourbon for Alan. Outside, I could hear the muffled, repetitive thock as he chopped firewood. \n\nHe'd spent his afternoon distracting me with amusing stories and the antics of his son, and I'd mostly recovered myself. Dusk had come, and Alan had offered to build a fire in my disused fire pit. I'd been unwilling to end our day; having him around was a comfort, and so I'd agreed. \n\nI picked up the two tumblers and ducked out through the back door.\n\nThen stopped, nonplussed, staring at the stark musculature etched across Alan's back. \n\nPale scars criss-crossed his left shoulder, and his ribs showed under the ridges of his lats when he bent over to pick up the split sections of ash. His biceps moved like snakes in oil as he raised the axe. With a single, smooth blow he sectioned another log.\n\nI swallowed, then cleared my throat.\n\nHe set the axe down, then turned, wiping sweat from his forehead. \"Hi,\" he smiled.\n\n\"I brought you some whisky,\" I squeaked, trying not to stare.\n\n\"Thanks, I'm nearly done.\"\n\n\"You planning to stay for winter?\" I teased, looking at the pile of split logs he'd assembled.\n\n\"You had lots of wood in your store, but none ready for burning. I like this sort of stuff. Good stress relief,\" he added.\n\n\"I should start a business for busy execs. 30 minutes of firewood chopping twice a week, in your boardroom.\"\n\nHe laughed. \"I've heard of crazier ideas.\" He reached for his shirt, and pulled it on. \n\nI probably enjoyed the show far more than I should have, considering. \n\n--\n\nI leaned back in my chair, watching him as he prepared and lit the fire. \"You're quite the outdoorsman,\" I observed.\n\n\"If I won the lottery I'd move into a coppice and never come out,\" he replied. \"If it had a river for swimming and a cliff for climbing... well, that would be near as could be my idea of heaven.\"\n\n\"Where would you ride, then?\"\n\nHe pondered. \"Grocery and alcohol runs.\"\n\n\"And where would your son and his girlfriend stay when they visited?\"\n\n\"He's a big boy, he could have the tent.\"\n\nI laughed quietly. \"He's a lucky boy to have you as a dad.\"\n\nAlan glanced at me. \"That's kind of you to say. I'm not sure he's always agreed... we butt heads occasionally, but it seems to have worked out ok.\"\n\n\"You're a good man,\" I said. \"You do things right. I can see you take pride in what you do. Many kids don't get that sort of role model.\"\n\n\"Pity I didn't get to show it much for most of his childhood,\" he sighed. He slumped back into his chair. \"Lots of wasted years, that story.\"",
        "\"You got him in the end, at least. I never had that chance.\"\n\nWe listened to the crack and hiss of the fire as it took hold. Behind us, a crow cawed once, twice in the twilight. I knew he was watching me, and I tried not to return the glance.\n\n\"Stars are coming out,\" he said, after a while.\n\n\"I used to love sitting out here and watching them.\"\n\n\"Used to?\"\n\n\"It's been a while since I've done... many things.\" I took a gulp of vodka. \"Sometimes I feel like I'm a ghost, counting down the days till the end of things.\"\n\n\"You're too warm to be a ghost. There's some life in you yet.\"\n\n\"Mm.\" I raised a bony arm, letting my hand dangle. \"Not much.\"\n\n\"True, you do need to be force fed some ice cream.\" \n\n\"And you don't?\"\n\n\"I'll have you know that it's a firm part of my diet.\"\n\n\"How do you manage to look as good as you do, then?\" \n\nI suddenly realised what I'd said. \"Sorry. Mouth was on autopilot.\" \n\nI could feel the embarrassment creeping up over my scalp; I knew I was blushing guiltily.\n\n\"I'll take that in the spirit it was intended,\" he grinned. \"I climb a bit with Ross, obviously. And I run. And I don't eat all that much, really. So I've always been skinny.\"\n\n\"Buff.\"\n\n\"Skinny with mooscles,\" he drawled. We laughed softly together. \n\n\"You, on the other hand,\" he continued, \"look like you're just not eating much.\"\n\nI shrugged. \"Food hasn't had much savour for me recently. I eat when I'm hungry. Mostly I just drink,\" I added, to see his reaction.\n\n\"Not the healthiest diet, but excusable sometimes. I did it a lot at first when Ross got taken away.\"\n\n\"And then?\"\n\n\"I woke up in hospital after ragging the tits off of a 600cc superbike on the M1, drunk out of my mind. It... let's just say I had a religious conversion at that point and realised I was circling the drain. So I cleaned up, registered for medical school as a mature student, decided I hated it, and started my own company.\"\n\n\"And now look at you. Stuck here talking to me.\"\n\n\"Exactly. No place I'd rather be,\" he returned.\n\n\"Uh... ok, wow, that kind of took the wind out of my sails.\"\n\n\"It was intended to. I've had a nice day,\" he added. \"I've enjoyed talking to you.\"\n\n\"Surely you're not thinking of leaving now?\" I said, aghast.\n\n\"Nope, but I was thinking of raiding your kitchen and seeing what we could cook.\"\n\n\"Oh thank god,\" I murmured. \"The roads here are deadly at night.\"\n\n\"Then it's an even better idea that I go nowhere.\" He stood, wincing again as his knee clicked. \"Damn thing. I need a robotic one.\"\n\n\"Does it hurt much?\"\n\n\"Nah, it's just irritating more than anything else. Goes with the territory of being a moron on a motorcycle. I learned my lesson... eventually.\" \n\nHe reached out to me, and after a moment I took his hand. He pulled me to my feet.\n\n\"Let's go see what you have by way of vittles.\"\n\n\"I wouldn't get your hopes up,\" I smiled. \"We may be living on the smell of some onions tonight.\"\n\n\"We could always trap and spatchcock one of those crows,\" he muttered. \n\nI laughed.\n\n--\n\nIt wasn't quite the smell of onions, but I couldn't in all honesty call the long-frozen chicken and potatoes a spread. Alan foraged in my small garden and managed to find some passable herbs to garnish with, but it was still less than I'd have liked to serve him.\n\nHe was amusingly cavalier about it, and the faint tinge of alcohol also helped to lessen my own sense of inadequacy as a hostess.\n\nAnd the night was warm and clear at least. So we set our table outside by candlelight, and watched the sky for satellites. \n\n\"I've missed this,\" I said quietly. \"I've missed having something as simple as having someone to share a meal with.\"\n\n\"You've been alone a long time, haven't you?\"\n\nI sighed. \"Three years, more or less. Feels like most of my life, to be honest. Peter was... everything to me. He gave my world a frame of reference. I've been... lost, I guess. Since then.\"\n\n\"Makes what I've been through pale a bit.\"\n\n\"We all have our scars,\" I said quietly. \"I'm still breathing. And... at least I had that time. I guess... I guess some people don't ever get to experience what I had.\"\n\nI looked away, unable for the moment to bear the sympathy in his eyes.\n\n\"Shooting star,\" I said quietly. \n\nHe swung round to look. \"Bright one. Good catch.\"\n\n\"This was one of my favourite things to do at night. Sit outside and listen to the world and dream of what the next day would bring.\"\n\n\"You should start doing it again.\"\n\n\"I know. But... it's really hard. I'm sorry,\" I said softly. \"I don't want to moan about myself anymore, these are my issues and it's unfair to lay them on you.\"\n\n\"Consider this my 'I can handle it' face,\" he replied gently. \"You look like you haven't been able to unload for a long time.\"\n\n\"It's difficult with Janice. She tries, but she's always going to be a reminder of what I used to have. It's not her fault, it's just how it is.\"\n\nHe nodded. \"I get that. Hard enough when it's friends; when it's a parent...\"\n\nI sighed. \"Yeah. I feel like... like I betrayed her. First her granddaughter and then her son...\"\n\n\"Well for what it's worth, this stranger didn't see any bitterness there.\"\n\n\"You're not so much of a stranger anymore. We've shared a meal and you seem to be a decent guy. Janice likes you.\"\n\nAlan grinned. \"So I've schmoozed the chaperone then?\"\n\nI laughed at him. \"I don't need a chaperone. I don't do anything that needs chaperoning.\"\n\n\"Touche,\" he responded, smiling. Then, \"I've really enjoyed today, Heather.\"\n\n\"How so?\"\n\n\"I don't get to socialise much out of work or Ross and his entourage. It's nice to spend time just being around someone different. Someone interesting.\"\n\n\"Interesting? Me?\"\n\n\"Very,\" he said, softly. \"You're an attractive girl... sorry, woman, who rides a motorcycle. That's a fairly small population. And you're outdoorsy and self-sufficient. Maybe not always through choice but it's clearly part of who you are. I like talking to you.\"\n\n\"You're not so bad yourself,\" I returned, flushing. \"You've... these past few days have been better than many I can remember recently.\"\n\n\"Mm. So I'm doing something right then.\"\n\n\"You are.\"\n\nI watched him a moment, then stood and dragged my chair alongside his. I sat and, heart thumping, leaned my head against his shoulder. The faint smell of leather and aftershave clung to him.\n\nI closed my eyes. And shivered as he wrapped an arm around me.\n\n\"You ok?\"\n\n\"No. Yes. I don't know.\"\n\n\"Do you need me to move?\"\n\n\"No... don't... just... don't do anything right now.\"\n\n\"Not even this?\" He gently trailed his hand down my shoulder. \n\n\"You... you can do that,\" I breathed. \"That's... that's really nice. Really, really nice.\"\n\n\"Mm.\" I felt him shift slightly. \"You feel like someone who needs a bit of TLC.\"\n\n\"This just in - the Pope is Catholic\", I whispered, squirming. His voice, so soft in my ear, was lighting fires deep inside me. I leaned into him, tucking my face into his neck, enjoying the soft sound of his breathing.\n\n\"Can I stay here forever?\"\n\n\"We might get cold in a bit,\" he answered softly.\n\n\"Good point.\" I sat up, and breathed. Then I stood and, taking his hand, pulled him up after me. I stepped into him, pulled him to me, and held myself against him. After a moment I felt him embrace me, and the gentle sigh he let out set the butterflies loose in my stomach in a way that I had forgotten I knew.\n\n--\n\n\"Heather?\"\n\n\"Mm?\" I answered, languid, enjoying the soft pressure of his hands on my back. I lay face down on my bed, head pillowed on my arms, with Alan kneeling alongside me.\n\n\"You need to tell me if you want me to stop at any time.\"\n\nI sighed. \"I will, Alan. Trust me... if you go too far you'll know. Right now... oh god, right now... just please don't stop what you're doing because it is so fucking good.\"\n\n\"You've been a recluse for a long time,\" he said softly. \"I'm not surprised my poor attempt at this is giving you goosebumps.\"\n\n\"I've got goosebumps? I hadn't noticed,\" I managed, shivering.\n\n\"All the way along your neck,\" he added, helpfully.\n\n\"Your hands are amazing. So strong,\" I breathed. \"You should do this as work. You'd corner the market in any woman over the age of twenty...\"\n\n\"Really?\"\n\n\"Dashing, hot mature guy with a body to die for and the ability to turn women to jelly? Of course.\"\n\n\"Hot?\"\n\n\"Very,\" I managed to whimper. \n\n\"Thank you, that means a lot coming from you.\"\n\n\"A... broken little... girl who's currently... powerless to resist you...\"\n\n\"Mm. I was going more with slim but beautiful woman who's for some reason known only to herself let me touch her.\"\n\n\"That's the... whisky talking,\" I managed, blushing fiercely.\n\n\"Maybe. But you are beautiful.\"\n\n\"I'm skinny and moussy.\"\n\n\"Nonsense,\" he said, as he shifted his hands down my back and started to massage the small of my back. \"You're your own harshest critic. On your tummy like this you're at least an eight.\"\n\n\"An eight?\"\n\n\"Maybe an eight point five.\" \n\n\"On what scale?\"\n\n\"The Richter scale.\"\n\nI couldn't help it, I started to laugh. I curled into a ball, holding myself, tears rolling down my cheeks. Gasping for breath, each time only descending into yet more uncontrollable whoops.\n\nEventually I managed to regain control. Shaking, worn out, still giggling a bit, I got to my knees and wrapped my arms around him.\n\nThe kiss, when it happened, felt as natural as sunrise. \n\n--\n\nI lay half on him, head pillowed on his chest, enjoying the way each breath lifted me and pressed him against my breasts. I could feel the heat between my legs, and for the first time in forever I wanted someone there. Wanted him there.\n\n\"Penny for your thoughts?\"\n\nHe breathed out. \"Just thinking.\"\n\n\"Of?\"\n\n\"How to avoid messing this up.\"\n\nI lifted myself onto an elbow, and smiled down at him. \"Explain.\"\n\nHe laughed softly. \"I'm with a girl I like, who seems to like me. I'm waiting for the shoe to drop.\"\n\n\"Mm,\" I answered, wriggling up so that I could look down at him. \"You're doing things to me I'd forgotten about. I don't think a shoe is going to drop. My panties might though.\"\n\n\"Oh really?\" \n\n\"Really really,' I breathed. \"You've got me thinking things...\"\n\n\"Such as?\" he said as he brushed my hair back from my face.\n\n\"You know what.\" I demurred, blushing.\n\n\"Heather.\"\n\n\"Mm?\"\n\n\"You need to tell me if I go to far.\"\n\nI smiled, then caught his hand in mine and kissed his palm. \"I will, Alan. Right now... I'm in a moment I'd thought I'd lost and I want to be lost in it.\"\n\nHe took a breath, and I squeaked as he suddenly pulled me down to him.\n\nI could taste the whisky on his lips and the woodsmoke on his skin. I could hear the pounding of my pulse in my ears. I could feel the little sparks of electricity running down the small of my back as he held me to him and slowly forced his leg up between mine.\n\n\"Oh god,\" I moaned, as I broke to pant for breath. I ground down against his thigh, whimpering as I felt the need ramping up in me. I arched against him, hunting his earlobe, nibbling it and gasping at the way he ground up against me. I curled my fingers into his ribs, clawing him, pulling myself down. I felt his hands slide up under my vest, up along my lats to my shoulders.\n\n\"Wait... wait...\" I gasped. I pushed myself up, and in one movement pulled the vest up and off me. Then I reached up behind me to unclip my bra, which joined the vest in an unceremonious heap on the floor.\n\n\"Christ,\" I heard him breathe. \n\nI paused, grinning, shifting my hips in small circles on his belly. \"You like?\"\n\n\"I like. Very much.\"\n\n\"Then kiss them,\" I breathed, leaning forward and bringing my breasts to his lips.\n\nHis tongue sent little jolts down to the small of my back, and I hissed out something unintelligble. I felt him curl his arm over me, and in one smooth movement he rolled me onto my back. I writhed as he pinched my left nipple between thumb and forefinger, and moaned as he tongued and gently bit the right.\n\n\"Alan, oh, oh god...\" I cried. I felt his hand fumbling at the button of my jeans, and almost without thinking I lifted my hips and pulled them down my thighs. Then I flailed, grasped his hand, and guided it down to me.\n\nAnd groaned, deep in my throat, as he slipped a finger under the crotch-band of my underwear and stroked it along my soaked, engorged lips.\n\n\"That feels so good,\" I whimpered. \"Stroke me, stroke me, tease my pussy, I've missed this so much.\"\n\nHe took my nipple in his mouth, tonguing it as he slowly parted me. I ached, I burned, and I cried out as he slipped a finger into me. I clutched his hand, pressing it hard against my mons as I ground myself against his palm. \n\n\"Heather,\" I heard him moan.\n\n\"Do me, do me,\" I begged, grinding. \"Do me.\"\n\nHe curled his finger over in me, pressing on the front of my vagina, and I felt him start to shift his hand up and down against me, driving himself millimeters in and out of my aching body. I felt my muscles spasming, legs shaking, and I knew that it wouldn't take much of this to make me come.\n\nIt didn't.\n\n--\n\n\"Oh, oh, oh,\" I whimpered through the aftershocks, curled up against him, leg thrown over him as he gently stroked a fingertip against my clit.\n\n\"That felt amazing,\" he breathed.\n\nI nodded, fiercely, still gasping for breath. \"Oh fuck, Alan, it has been so long. So long since I felt that.\"\n\n\"Well... I'm glad you enjoyed that so much,\" he chuckled softly. \"Major ego boost for me, you know.\"\n\n\"Good,\" I panted. \"Good. That means I'll get more.\"\n\n\"You're damn right you will. Holy God,woman, you are distracting.\"\n\n\"Distracting? Me? I do protest,\" I whispered.\n\n\"I've been thinking about little else since I met you.\"\n\n\"Little else other than...\"\n\n\"Maybe, just maybe, getting a kiss from you.\"\n\n\"You aimed low,\" I murmured. \"But here you are.\"\n\nI lifted myself up onto my elbow and leaned over him, gasping slightly as the underside my bare breasts brushed against his teeshirt. The kiss I gave him was slow and lingering, and I sighed out a deep breath as we broke for air.\n\n\"So tell me what else you were dreaming of,\" I murmured into his ear as I wormed in closer to him.\n\n\"Seeing your boobs,\" he returned.\n\n\"And...\" I fished.\n\n\"And you... naked.\"\n\n\"Mm... I'm already good as, you know.\"\n\n\"Let me help you with that, then,\" he offered. I rolled onto my back, grinning, and obliged him by lifting my legs so that he could slip my jeans and patched woolen socks off of them.\n\n\"Panties too,\" I breathed.\n\n\"Are you sure?\"\n\nI laughed. \"I'm functionally naked here, Alan. They're soaked. Because of you. And I want you to see me... to see all of me.\"\n\nI hooked my fingers under the waistband of my underwear, and then shimmied them down my thighs, then off one leg and then with a kick free of the other.\n\nI spread myself slightly for him, flushing, enjoying the way he stared and then tried not to stare.\n\n\"See how wet I am for you?\" I asked, softly.\n\n\"Uh huh,\" he managed.\n\n\"That's a good thing,\" I continued. \"That's a great thing. I want more. Of you.\"\n\n\"Heather...\"\n\n\"Yeah?\"\n\n\"Can I... can I taste you?\"\n\n\"Mm. I'm not clean. Maybe after I've showered.\"\n\n\"Now there's an image.\"\n\nI glanced down pointedly at the bulge under his own jeans. \"Maybe if you give me a good reason to have that shower, you'll get your wish.\"\n\nI reached out, and slowly stroked down along his crotch. He took a ragged breath. \n\n\"I don't have any protection on me.\"\n\n\"I don't care. I want you.\"\n\n\"You are making it really hard to behave,\" he groaned, as I squeezed him gently.\n\n\"Mm. No sympathy,\" I purred. I slowly unzipped him and slipped a hand inside. \"Oh wow,\" I breathed, and he echoed me. \"Alan, you're so hard.\"\n\n\"You should feel it from this side... I've been rock-hard for you since you leaned against me earlier.\"\n\n\"That long?\"\n\n\"Uh huh.\"\n\nI felt for the waistband of his underwear, then, with a frustrated \"For fuck sakes\" I popped his waistband button and pulled his pants and underwear down. Then I pushed against his chest so that he fell backwards onto the bed, and raised myself onto my haunches so that I could get a proper look at him. \n\n\"That is a delicious penis,\" I informed him seriously, after I'd given it the respect it deserved. I shot him a smile, then leaned down to take him in my mouth. I was amused at the strangled noises he let out, but they faded into the background against the feeling of a cock, his cock, against my tongue. He was hard, and hot, and ready, and I needed him. I took as much of him as I could in me, let him thrust once, twice, then before I could think it through or get cold feet I slipped him out, clambered up onto him, and nestled him against my dripping, aching slit.\n\n\"Heather,\" he protested weakly. I felt him throb against me, felt him part me.\n\n\"Shh, shh, I want it,' I groaned, as I slowly, achingly slowly, lowered myself onto him. \n\nIt was blissful. \n\n\"Oh... oh...\" I moaned. \"Oh god, oh baby, that is so amazing.\" I tried to slowly slip him deeper. But as his head passed my entrance my legs spasmed, and with a yelped \"Oh fuck...\" I fell forward onto him, crying out as he slid all the way into me in one unplanned, unexpected stroke.\n\n\"Fuck fuck fuck oh god fuck,\" I panted. \"That is so fucking deep in me, I wasn't... I wasn't expecting... oh... fucking... oh...\" I added as he pulled back and drove himself into me.\n\n\"You are so tight,\" he groaned, as he pulled out slammed himself into me again. He grasped my shoulders and forced me down onto him, spreading me wide over his thrusting hips.\n\n\"Oh... oh god... fuck me Alan... fuck... me,\" I wailed, burying my head in his neck and clasping myself to him.\n\nEvery push of his cock felt like it was splitting me down the middle. I was so unready for this, stretched drum-tight over his engorged penis and yet so desperate for him sunk to the hilt in me that I could not even conceive of telling him to stop. It hurt, hurt like hell, but mixed with the pain was the fire of need, the primal urge to have his head deep in me. To have him possess me. \n\nI could feel another orgasm building.\n\nI squeezed my eyes tight against the tears, gasping, sobbing maybe, as he panted and laboured between my legs, his rock-hard penis pistoning hard, fast, deep in my pussy. I heard his ragged breaths in my ear, the way he moaned my name, and I felt my belly tighten and my muscles squeeze him in sympathy.\n\nIt seemed to only take moments, and I felt him start to throb. I ground hard down against him, burying him in me as I felt him start to come. And that was the push, the nudge I needed to push me over the edge into my own wailing petit mort, cheeks still wet with tears I hadn't been able to stop.\n\n--\n\n\"Are you ok?\"\n\nHis voice, so soft and gentle, and his arms clasping me to him.\n\nI swallowed, then nodded. \"Yeah. Yeah. I'm ok.\"\n\n\"You should have told me to stop. I would have.\"\n\n\"I didn't want you to. It just happened faster than my body was ready for.\"\n\n\"Are you sure?\"\n\nI felt him shift, felt his cock move in me and I grabbed hold of him. \"Don't you dare. Don't you dare pull out of me. Not yet. I need you close like this, all of you. Don't you dare pull out.\"\n\nHe took a breath, then sighed it out. I could feel his cock softening slowly, and as it did I could feel his cum leaking out between him and me.\n\n\"Talk to me,\" I breathed. \"Tell me how good I was. Tell me that was as good as you thought it would be.\"\n\n\"Can't you feel?\" he whispered in response. \"It was better.\"\n\n\"Did I meet your fantasies of me?\"\n\n\"Heather,\" he said softly. \"You just gave me the best sex of my life.\"\n\n\"Mm. Good,\" I whispered. Then I scrubbed at my face with the back of my arm. \"I'm ok, Alan. Just... took me a little by surprise how much I needed that is all.\"\n\nI closed my eyes as he gathered me to him, and for a moment we lay there, me spread over him, the damp heat of our lovemaking on our skin.",
        "Then his penis twitched in me, and I snorted. And from there, the laughter took us both and healed the moment.\n\n\"Best sex ever,\" I murmured as I lifted myself up. \"You liar,\" I added, smiling.\n\n\"Honest truth, Heather,\" he said softly. \"You're the hottest girl I've been with, and that... well, that was amazing.\"\n\n\"Mm. Flatterer,\" I answered, amused at how his eyes dropped down to my breasts again. \"But flattery seems to have got you everywhere tonight.\"\n\nHe met my eyes, and smiled a small smile of his own. I leaned forward to kiss him, then, groaning softly, lifted myself off him and watched his semen flow in a rush out of me. \"Oh well. I needed to change these sheets anyway.\"\n\nI rolled off him and then lay down next to him on the bed. After a moment he took my hand in his, and held it gently.\n\n\"So,\" I said softly. \"Now that you've got what you wanted, are you up for that shower?\"\n\nHe laughed. \"Heather, I haven't even got the smallest part of what I wanted.\"\n\n\"Mm. You've had your cock in my pussy, and that wasn't enough? Greedy are we?\" I teased.\n\nHe rolled onto his elbow, and I tried to concentrate on his face rather than his musculature.\n\n\"I followed the girl on the motorcycle because of her smile,\" he said. \"The body was... is... an amazing bonus. The fact that she's a long-legged goddess who is by the way amazing in bed is a massive win for me. But it was the smile that captivated me.\"\n\n\"Liar. You were just following a pretty ass on a motorcycle,\" I replied, blushing.\n\n\"Mm. But she smiled beautifully,\" he retorted, stroking his fingertip over my right nipple.\n\n\"Stop that,\" I breathed. \"You are going to get yourself into trouble.\"\n\n\"Promises promises,\" he returned, planting the gentlest of kisses on my breast.\n\n\"Mm. Ok. If you're going to be like that I'm going to go shower and then seduce you again,\" I said, arching my back.\n\n\"I thought I was the seducer.\"\n\nI grinned at him, then sat up. \"Come,\" I said. \"Solar heater. If we don't use it soon it will be cold.\"\n\nHe kicked his jeans and underwear clear of his legs, then took my hand.\n\nI felt like I couldn't catch a proper breath as I lead him to my battered bathroom, and the way he kissed me there as we waited for the hot water to come didn't help matters.\n\n--\n\n\"Pass me the soap, please,\" I managed.\n\n\"Mm?\"\n\n\"Soap. Behind. You. In the... container,\" I continued, trying very hard to concentrate despite his hands on my breasts and his semi-erect penis against my bum.\n\n\"This?\"\n\n\"That,\" I moaned, pushing slightly back against him. \"Need it. To clean. myself.\"\n\n\"We're in a shower,\" he pointed out helpfully.\n\n\"Hadn't... noticed...\" I panted. \"Alan, put that thing elsewhere, it's making it very hard to concentrate...\"\n\n\"This thing?\"\n\n\"That... thing...\" I whimpered.\n\n\"This harmless thing?\"\n\n\"Alaaaan...\" I groaned as I felt him tease it against my inner thighs.\n\n\"You liked it enough... earlier.\"\n\nI felt him rubbing himself against me.\n\n\"I did... I do... oh god you have no idea how... that is making me feel.\"\n\n\"I think I do,\" he breathed hoarsely into my ear.\n\n\"Alaaaaaaaaan,\" I groaned again as I felt his fingers teasing me.\n\n\"Can't help it. You're doing my head in. Both heads in.\"\n\n\"You want it in me again, don't you?\"\n\n\"Don't you?\"\n\n\"Desperately,\" I whimpered. \"But I'm trying to clean myself. Before the hot water... runs... oh god... out... Alan... oh god.\"\n\nI felt his fingers on me, teasing my entrance, hot and slick now with water and us. I felt his hard head nestling against my lips. I could feel him throbbing.\n\n\"Say stop and I'll stop.\"\n\nThe soft words, breathed into my ear. I shook my head, wordless now, dropping the soap, reaching downwards, spreading my legs and guiding him to me.\n\nA long, ragged, moan as I felt him slip slowly into my aching pussy. I'm not sure if it was him or me who made it.\n\nI leaned forward, panting, unbearably aroused again, bracing myself against the shower wall as he slid into me. I pushed back against him, then took over, pulling away and pushing back, building a rhythm, half-blind from water and soaked hair but not caring, consumed only by the panting, the slap of his body against me, and the fire his cock spread in my belly with each deep thrust I took into me.\n\n\"Oh god, Heather,\" he managed.\n\n\"So... good... so... good...\" I whimpered, taking him as deep as I could. \n\nHe gripped my hips, pulling me back onto him with each thrust. I could hear him gasping for breath. I heard him start to moan, and then I felt him convulse, yanking me hard back against him, grunting, moaning, shaking as he emptied himself into me again.\n\nHe held me there for some unmeasurable duration of time, before with an almost pained gasp he slowly pulled out of me. I spun round in his arms, flushed and laughing, loving the power my body had over his, loving the taste of salt on his skin, loving the harlot he had awoken in me.\n\n--\n\n\"You're still dripping out of me. What the fuck, Alan.\"\n\n\"Sorry,\" he managed, flushing.\n\n\"You clearly had a lot saved up,\" I grinned, as I dried myself again with a towel and pulled on some tatty old tracksuit paints.\n\n\"Mm. It had been a while,\" he answered. \n\n\"How long?\"\n\n\"Well over a year.\"\n\n\"Mm. Well, you clearly haven't lost your skills.\" I pulled a vest over my head. \"What?\" I asked, straightening.\n\n\"Just enjoying the view,\" he replied. I looked down, then laughed again. \"I guess this doesn't do much to cover me does it?\"\n\n\"I like it,\" he said softly. \"I love your body. Those breasts of yours... Christ, they're amazing.\"\n\n\"Not as big as they were once,\" I said ruefully.\n\n\"I like them,\" he replied firmly. \"They're beautiful. Just like you.\"\n\n\"You're post-sex-talking.\" I was blushing again. \"How the fuck do you make me blush like this? You've been in me. Twice. I'm like a fucking schoolgirl all over again.\"\n\n\"I'll take that as a compliment,\" he grinned.\n\n\"Oh god, please do,\" I said, distracted for a moment by his eyes.\n\nA brief silence, not awkward, just present. \n\n\"I'd like to go back outside,\" he said softly. \"It's a lovely night, and I don't get to be under the sky much with such good company.\"\n\n\"I'll fetch the blankets,\" I offered.\n\nWe set ourselves up on our deck chairs, side by side under the stars. I spread a blanket over both chairs, and another over us once we'd both sat back. \n\nAlan's hand found mine once more.\n\nI smiled, and leaned over against him.\n\n\"This feels familiar,\" I whispered.\n\n\"This feels like being home,\" he returned with a smile.\n\n\"It feels good, whatever it is.\"\n\n\"What do you want it to be?\"\n\nI sighed. \"I don't know. I'm still fucked up, Alan. Very, very badly fucked up. I don't know what I can offer you.\"\n\n\"Friendship. Companionship. Time with you, away from my own boring life.\"\n\n\"Your life doesn't sound or feel boring.\"\n\n\"Mm,\" he said softly. \"These days with you have been the best thing to happen to me in a long time, Heather. Ross has his own life, and outside of work, all I have is gym and books and the Yamaha.\"\n\n\"You have me now, too, if you're willing to put up with the broken bits,\" I offered softly.\n\nHis smile was all the answer I needed.\n\n\"Shooting star\", he said after a while.\n\n\"Again?\"\n\n\"Seems a good night for it.\"\n\n\"It's a good night for a lot of things,\" I said. I turned my face into his neck, nuzzling him. \"You make me extremely horny,\" I whispered.\n\n\"Extremely?\"\n\n\"You make my stomach cramp with need. Almost all I can think about now is having you between my legs again.\"\n\nHe slid his hand gently down over my inner thigh. \"Well... to be fair... the feeling is mutual.\"\n\n\"I used to have more meat on me. Fewer sharp edges.\"\n\n\"You're still soft where it counts,\" he breathed, stroking the vee of my crotch with a finger. \"I imagine the rest will come in time.\"\n\n\"Uh huh,\" I whispered, shivering. I parted my legs for him, and he obliged me by teasing his finger lower again.\n\n\"How are you doing this to me? How are you making me so wet for you?\"\n\n\"I don't know, but I love that I'm doing it. I love that I'm here with you, right now, and that you want me to touch you as much as I want to touch you.\"\n\n\"I want you to do more than touch me. I want you to possess me. I want you to worship my body.\"\n\nHe slowly slipped his finger lower. I moaned; my clit and pussy were still incredibly sensitive from the shower, and it almost unbearable to have him there again. Almost. I caught his hand, then helped him slip it under the tracksuit pants, down to me. I could feel how slick I was, and I spread myself wide for him, leaning my knee against his lap and sliding down on the chair to open myself for him.\n\nI arched, involuntarily, as he slipped the tip of his finger into me.\n\n\"Oh god,\" I breathed. \"Oh god I am so ready for you. You just touch me and I need you sunk in me.\"\n\nI reached for him, needing to feel him. He guided my hand, grinding gently against it as I clasped him.\n\n\"You're hard again,\" I whimpered. \"So... nice.\"\n\n\"It's you who... does it,\" he hissed. \"You. Your voice. Your scent. The memory of how tight you are. The heat of you. Those breasts. The slickness of your skin against me in the shower.\"\n\n\"I loved... that... when you... took me,\" I moaned, writhing as he pushed a finger into me. \"I loved... that you... just took me like... that...\"\n\n\"Always... been a fantasy... of mine...\" he agreed. \"Love that... I could get it... with you.\"\n\nA second finger joined the first, and he spread them slightly, stretching me. I arched again, my stomach muscles spasming, my abused pussy clamping down on him.\n\n\"Alan,\" I whimpered. \"Alan, stop. Stop. Not here. In... inside.\"\n\n\"Why...\"\n\n\"Because I want... us both... naked so... my next orgasm... is with you on... top of me...\"\n\n\"Your wish is my command...\"\n\nI squeaked as he pulled free of me, then again as I felt him place his strong arms under me. In one smooth movement he lifted me up.\n\nFor a moment I stared up at him. \"Make me yours,\" I breathed.\n\n--\n\nHe laid me down gently on my bed, and supported me with one arm as he slowly freed me from my vest. He flung it aside, and planted butterfly kisses over my breasts and ribs. I arched my back, eyes squeezed closed, hands knotted in the sheets.\n\n\"I love your breasts,\" he reiterated.\n\n\"I love you lips and tongue on them,\" I whimpered in answer. \"It's like sparks down my spine when you do that.\"\n\nHe kissed slowly down over my belly, past my bellybutton. He let me down onto the pillows, then braced himself on his forearms as he kissed down to the waistband of my pants. He shot me a smile, and I lifted my bum for him. He slid them off my hips and down and off my legs, then sent them off to be with the discarded vest.\n\nGently, he parted my legs, and after a moment spent staring at my lips, he dropped his mouth to me.\n\n\"Oh... oh god,\" I cried out, as his tongue darted against me. He grasped my hips in his strong hands and slowly licked up along my soaked slit to my clit, already engorged and almost too sensitive for this.\n\nSlowly. One, aching, torturous lick at a time, he teased me. I could feel the sweat breaking out on my skin, feel the sheets starting to stick to my back. I fought the urge to grind against him, to grab his head and force him hard against me.\n\n\"Oh baby,\" I moaned. \"Oh wow, that feels so good...\"\n\nHe lifted his head and shot me a smile. \"Just want to let you know that you're delicious.\"\n\n\"Oh. Oh. Good. I'm glad to hear that,\" I panted. \"Would hate to think this was hard labour...\"\n\n\"Oh trust me, I could do this all night.\"\n\n\"Don't joke, I'll make you, your tongue is amazing...\"\n\nHe laughed, then sat up. He pulled his shirt up over his head, then reached down and unbuttoned his jeans. He struggled out of them, while I amused myself watching him. Finally he managed to free himself, and kicked his clothes aside.\n\n\"That cock of yours looks like it wants to be somewhere,\" I said softly.\n\n\"Oh it does,\" he answered, leaning forward over me. He kissed me, and I arched hard against him as I tasted myself on him.\n\n\"Put it in me, please,\" I whimpered. \"I am begging you.\"\n\nHe slipped a knee between my legs, then lifted the other over. I raised my knees, opening myself for him, angling myself perfectly for him to thrust into me. \n\nAlan set the tip of himself to me, and slowly moved his engorged head along me.\n\n\"Do you... need me... to cry for it?\" I wailed, arching up spasmodically.\n\n\"Kiss me,\" he demanded.\n\nI reached for him. I pulled him down to me. I ground against him, biting his lip, tasting me once more. And as I did so, he shifted slightly, and pushed, and in pushing, entered, and in entering, made me break for breath and cry out his name.\n\nHe felt perfect in me. Filling me how I desperately needed to be filled. His hard stomach pressing against my belly, his chest brushing my nipples with each movement, his narrow hips hard against the inside of my thighs. \n\nI clawed at his back, almost unable to catch my breath, groaning deep in my throat as he pulled back and thrust, gasping, into me again, spreading me over him. \n\nSlowly he built a rhythm. I could feel the muscles bunching in his shoulders as I clasped myself to him. I could feel the sweat on his skin. I could taste it on his lips as he kissed me. I arched under him, closing my legs over him to hold him deeper, a hoarse \"More... deeper...\" all I could manage against the overwhelming pleasure of having him sunk in me. He responded, pulling back and thrusting hard and deep into me, making me gasp and whimper with every delicious thrust of his hard penis into me.\n\n\"Not... gonna... last...\" he panted.\n\n\"Don't... care...\" I cried.\n\nHe buried his face in my neck, and I cried out again as he forced his arms under me, crushing me to him as he took me for himself. \n\n\"Gonna...\"\n\n\"Come in me,\" I whimpered. \"Come in me, baby.\"\n\n\"Gonna...\"\n\nAnd then I felt him tense, and thrust, and grind his belly against me as he groaned, shivering with the force of his climax. \n\nFeeling him throbbing, deep in me, filling me, was everything I had hoped it would be. Everything I had needed it to be. The pounding of my pulse in my ears, the almost burning ache in my belly, so unused to this. The tremors that wracked me as he pushed himself even further into me till the base of his penis rested against my hypersensitised lips, sending electric jolts through my clit and spine with every tense and throb of his muscles. And then, as he softened slightly, I felt his fingers on me again. \n\nI whimpered, begged, pleaded, but he ignored me. He kissed me, kissed my breasts, tongued my nipples, held me firm, prevented me from wriggling free, and with his cock still sunk in me teased me to my own, shuddering orgasm.\n\nAnd then held me tight through the tears that followed, and kept me close and warm until I finally, exhaustedly, fell asleep.\n\nI woke next to him, in dappled morning sunlight, and for the first time in as long as I could remember I felt at peace.\n\n--\n\nThe last faint echoes of the bells of Saint Margaret's hung on the air. A gull soared past, called out to me, then dipped his wings in salute and sailed off down the slope towards the distant breakers.\n\nI looked out over the ocean, and sighed out a breath. \"Goodbye for now,\" I said softly, thinking of them. \"I'll look in from time to time. Thank you for being mine for a while.\"\n\nI turned and climbed back up the slope to the parking lot. \n\nAlan was waiting for me, leaning on the fence, giving me my room but still being close enough for me to derive strength from him.\n\n\"You ok?\" he asked gently.\n\nI looked up at him, thinking. \"Yes but no but yes.\"\n\nHe nodded, then took my hand.\n\n\"I don't want to replace them,\" he said.\n\n\"I know. And I don't want you to. But I do want you to give me something new.\"\n\n\"That, I can do.\"\n\nHe pulled me into a hug, and I sighed as I held myself against him. \"Thank you for being so understanding.\"\n\n\"They're part of you, Heather, and always will be. And it's you I want. All of you.\"\n\nHe held me a moment longer, then let me go. I stood up straight and took a long, deep breath of cool air. \"So.\"\n\n\"Where shall we go?\"\n\n\"Up the coast a while? Maybe we'll find a pub that's open this time.\"\n\nHe smiled. \"Sounds like a good idea to me.\"\n\n\"So lets go then,\" I said, smiling back at him. I picked up my helmet and pulled it over my head. I zipped up my jacket, pulled on my gloves, and threw a leg over Bonnie. I turned her on, and listened to her lumpy growl while I waited for Alan to get ready.\n\nThen I lead us out onto the road and down the hill, the nose of the Yamaha tucked in behind me where I hoped it would always henceforth be. "
    ],
    "authorname": "onehitwanda",
    "tags": [
        "loss",
        "dialog",
        "rediscovery",
        "healing"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/triumph-1"
}