{
    "title": "Cheryl's Big Tits Ch. 02",
    "pages": [
        "In Chapter 1, I went to college and met Cheryl, a super sexy blonde with big tits that gave me a blowjob and let me titty fuck her. I ended up breaking up with my girlfriend back home so that I could be with Cheryl.\n\nIn the weeks that followed, Cheryl and I took our relationship to the next level. Our friends had suspected that we were into each other and now we didn't need to hide it anymore. And I was proud to not hide it. I was with the hot girl with the big tits. I couldn't believe it. I loved walking around showing off that I was with her.\n\nI already knew that she was great at sucking cock, but we quickly graduated to intercourse, and that was another mind blowing experience. Cheryl was a cheerleader in high school so her whole body was lean and tight, and her pussy was even tighter. Oh my God when I fucked her it was like her pussy was a vice grip. It might be because she was a small girl overall, or maybe because her previous boyfriend had a small cock (according to her), but her pussy was smoking hot and I couldn't get enough of sliding my rock hard cock inside her.\n\nI also really enjoyed going down on her. Her pussy tasted so good and her clit would get like a hard, pointy nub when I flicked my tongue across it. I would put her on her back and spread her legs wide and eat her pussy like there was no tomorrow. She loved it when I would suck her clit while I put a finger inside her, followed by two fingers, until eventually I would feel her pussy clamp down on my fingers as she came while I sucked on her hard clit. Then I would climb on top of her and fuck her as deep as she could take it. She said I hit places in her that she had never felt before. I would then finish by either cumming inside her pussy, or between those big, firm tits of hers. I couldn't decide which way felt better. As long as she made me cum.\n\nFinding some privacy to have sex was always a problem. The college we attended required first year students to live in the dorms. Their stated rationale was living on campus encouraged new students to become more engaged with college clubs and activities. I'm pretty sure they just wanted our room and board money. Some students were lucky enough to have single rooms but Cheryl had a roommate and so did I. My roommate Brian was there almost constantly, so we spent most of our time at Cheryl's dorm. But the privacy situation in Cheryl's room with her roommate, Kim, was not much better so we really struggled.\n\nCheryl and I preferred to study in the library when her room wasn't free. Although the library was a public place, it offered more privacy than her room. One day after class I went to the library knowing that Cheryl would be there studying. She had a few favorite spots there to study so I checked each one before I eventually found her on the second floor at a desk near the back of one of the book stacks. She was wearing a black skirt and a snug fitting red top that was cut low in the front and really accentuated her curves. I snuck up behind her and reached underneath her arms and cupped her huge breasts from behind. She gasped loudly and jumped, grabbing my hands and turning around. She laughed when she saw it was me.\n\n\"Oh my God you scared me! Don't do that!\"\n\n\"I thought I'd surprise you. What are you working on?\"\n\n\"Ugh. English. I don't like this course.\" She was so cute when she pouted.\n\nI sat next to her and started kissing her and running my fingers through her hair. \"Well maybe you could use a study break?\" I put my hand up the inside of her thigh, eventually grazing her panty covered pussy and she jumped again.\n\n\"Mmmmm. Maybe I do\".\n\nWe kissed some more and I started feeling up her tits again over her shirt. Then she grabbed my hands and giggled. \"We can't do it here. There's too many people.\"\n\nShe grabbed me by the hand and led me down to other end of the stacks where there some private study cubicles. They were small but each one had its own door. I didn't see anyone's feet under any of the doors so we ducked into the one at the end.\n\nAs we closed the door we started kissing again and our hands were all over each other. I reached down the front of her shirt and felt her left breast, her nipple getting hard at the touch of my hand. My other hand was on her left ass cheek as I pressed her against the side of the cubicle. Her hand went right to my crotch and felt my raging hardon thorough my jeans.\n\n\"Somebody is already hard.\" She said between gasps.\n\nI didn't say a word and continued undressing her. First lifting her top and the DD cups of her bra up to expose her breasts to my view. They were so beautiful that they stopped me in my tracks every time. I took her right nipple in my mouth and started sucking while my fingers teased her other nipple. She moaned softly and put her hand on the back of my head, pressing my mouth tightly against her breast as I sucked and nibbled lightly on the hardening tip of her nipple.\n\nI reached under her skirt and ran my finger over her panty clad pussy. I could feel the heat and the wetness right through the fabric. I put her on the desk and reached under her skirt, pulling her black thong down. She raised her ass off the desk to allow the fabric to move down her ass and legs, finally passing over her ankles. I sat in the chair facing her and threw her legs over my shoulders and leaned forward to lick her pussy. At the first lick she gasped loudly and I was worried someone heard us.\n\n\"Wow I wasn't expecting this!\" She writhed on the table as I ducked her hard clit.\n\n\"Well you seemed a little stressed so I thought I'd give you a study break.\"\n\nI licked circles around her clit and then licked down between her lips, putting my tongue inside her. Then I returned to her clit and slid a finger inside her, massaging her insides as I sucked on her clit.\n\n\"Don't make me cum yet. Fuck me.\"\n\nI stood up and pulled my jeans down to let my rock hard cock out and lined it up with her seeping pussy. She held her skirt above her navel and I slapped my dick against her shaved pussy lips a few times to tease her a little bit. She responded by grabbing my ass and pulling me to her.\n\n\"Come on. Fuck me. Fuck my pussy.\"\n\nI slid my cock inside her and she gasped loudly again, the walls of her cunt gripping the familiar invader of her vagina tightly as if to welcome it home. I started sliding my cock into her again and again, getting a good rhythm going. The desk started to squeak with each thrust as I continued to fuck her, her big tits bouncing with each thrust. She pressed her mouth into my shoulder as I held her legs apart and continued fucking her.\n\nThe squeaking desk was definitely going to get us caught so I took my dick out of her and stood her up. There was a big wet spot on the desk where her pussy had been. I turned her around and bent her over the chair, forcing her head down until it was almost touching the desk. Cheryl liked it a little rough and I knew what her limit was and how to satisfy her. II lifted her skirt up over her beautiful ass checks and bunched it above her hips as I drove my 9 inch dick inside her with one hard thrust.\n\n\"Oohhhh....fuck yeah..\". She gasped as I slid my cock deep inside her. I gave her a few seconds to adjust to it and then continued fucking her. I held her nice hourglass hips and picked up and pace, watching her ass cheeks bounce and ripple with each thrust. I could feel her going up on her toes and her body starting to convulse as I sensed she was nearing orgasm. I grabbed her hair with one hand and pulled her head back while keeping the other hand on her left hip. I pounded her pussy hard and deep, going so hard the chair was starting to make a rhythmic creaking noise. I was just about to slow down when she gasped.\n\n\"Oh my God. I'm cumming!\"\n\nHer whole body went ridged as I pumped her pussy through her orgasm. She squealed as the first throes of her climax ripped through her. I reached around and covered her mouth as she continued to cum on my piston like cock slamming into her from behind again and again. She came at least twice before I finally pulled out of her and she sat in the chair, her hair disheveled and a satisfied look with flushed cheeks on her face that said \"I just got fucked\".\n\n\"Oh my God that was amazing. I soooo needed that. Thank you.\"\n\n\"No problem. I'm here to help. I just want to maintain my position as your favorite study partner.\"\n\nShe laughed and gave me that cute smile. She looked at my cock, still glistening wet with her pussy juices. She licked her lips.\n\n\"Let me clean that off for you.\" She moved her face close to the head of my cock and licked her lips again. Before she could take it in her mouth I stopped her.\n\n\"No leave it. It's good lubricant. I want to fuck your tits.\"\n\n\"Here? I don't know if that's a good idea. I don't want to walk out of here with cum all over my neck and face.\"\n\nShe had a point but I didn't listen. Her tits looked so good I had to have them. I pulled her top and her black bra off in one motion so all she was wearing was her skirt and a smile. I removed my jeans and and straddled her torso as she sat in the chair. I put my cock meat in between her tits and she squeezed those big jugs around my cock and I started fucking them.\n\nI was in heaven. \"Damn that feels good.\"\n\nThe pussy juice on my cock allowed it to slide easily in the cavernous cleavage between her breasts. I continued fucking them, picking up the pace as I could feel the cum rushing from my balls up the shaft of my cock. I tried to prolong it and keep from cumming but I just couldn't hold out much longer. Her tits were just so big and firm and warm and the site of them wrapped around my thrusting cock was just too much.\n\nShe could sense that I was getting close.\n\n\"Try to cum in my mouth.\" I don't want to walk out of here with it on my face and hair like in \"There's Something About Mary\".\n\nI smiled. \"Ok I'll do my best. No promises.\"\n\nAs I continued to titty fuck her I passed the point of no return.\n\n\"Shit I'm cumming!!!\".\n\n\"Shoot it in my mouth!\" She exclaimed, looking up at me and touching her chin to her chest and sticking out her tongue to catch my seed.\" I erupted all over her tongue. Gobs of spunk shooting one after another into her mouth and down her throat.\n\nShe closed her mouth and I saw her neck and throat contract as she swallowed.\n\n\"Mmmmm. Good boy.\" She said and winked at me.\n\nWe got dressed and headed out, trying our best not to look like we had just fucked in the library.\n\nCheryl's roommate was Kim. She was very nice and nice to talk to, and we got along great but she must have felt like a third wheel from time to time. She had just broken up with her boyfriend but we figured it wouldn't be long before Kim was in a relationship again. She had shoulder length brown hair and a really great smile. She had a different build then Cheryl but still very pretty. Thin with maybe B or C cup breasts, but she did have a nice bubble butt that looked great in a pair of tight jeans.\n\nAlthough we liked Kim, she did make it hard for Cheryl and I to have alone time. Kim studied in her room a lot and didn't socialize much so she was often there when she wasn't in class or occasionally gone for the weekend. Since she was single we tried to include her in a lot of things we did. We often ate together and went to college functions and parties together. We sometimes would watch movies together in the dorm room or at a theatre.\n\nWhen the three of us hung out in the dorm I would sometimes give Cheryl a shoulder massage, and when I was done I would sometimes give one to Kim. Her shoulders were always so tense and she loved those massages. I think any physical touch was welcomed by her since she was single. She would also like me to massage her scalp which really got her swooning. She would sit on the floor with her legs crossed while I sat on the bed and massaged her, and I would watch her sitting there with her eyes closed and her nipples would always get hard. Cheryl didn't mind because it was only a massage and it was always done while she was in the room with us.\n\nAs much as we liked Kim, sometimes Cheryl and I could not wait for her to go when we wanted to have sex. During the day we would sometimes fuck while she was at class. We started to learn when her classes were and time it just right, but a couple of times she would walk in on us and we'd have to stop mid fuck, which was very frustrating. Kim would always apologize and offer to leave the room but we never let her do that. We didn't want to put her out of her own room.\n\nA few times after being interrupted I would still have a raging boner and Cheryl would reach finish me off under the covers with a handjob. One time she did it while having a conversation with Kim! On that day, I was on top of Cheri giving her a good pounding with my hard cock, watching her big tits flopping and the whole bed creaking when we heard the door unlock.\n\n\"Oh shit!\" We both exclaimed at the same time as I pulled out of Cheryl's tight pussy and got off her. Kim came into the room and we were both naked and exposed. Kim paused like a deer in headlights and pretended to cover her eyes briefly as Cheryl threw the covers over us.\n\n\"Sorry guys. So sorry. I'll wait outside.\"\n\nCheryl quickly replied. \"No no no no no...we just finished. You don't have to go!\"\n\n\"Are you sure?\"\n\n\"Yes absolutely. How was class?\"\n\nKim and Cheryl started making small talk while we lay under the covers. I was behind Cheryl spooning her as she talked with Kim. My 9 inch boner was rock hard and pulsing against Cheryl's lower back. A couple of times I slapped her ass with my dick meat as she talked with Kim. She gave me a playful slap on the hip, feigning protest but I knew she wasn't mad. Then I felt her little hand reach behind her and start rubbing my cock and balls. She continued talking to Kim and didn't miss a beat as her little fingers encircled my cock and started stroking. Omg it felt so good since I was very close to cumming from being in her tight pussy. I started involuntarily bucking my hips and my breathing got erratic.\n\nAs Kim was talking and turned her back briefly Cheryl whispered in my ear. \"You need to be quiet.\" And she smiled at me.\n\nI nodded and she continued stroking as Kim turned towards us again. She continued talking but I'm pretty sure she could see the repetitive motion of Cheryl's hand working my cock under the covers. The expression on my face despite my best efforts to hide it also didn't help. From time to time Kim would look at me and seemed to stammer. I think she knew what was going on.\n\nIt wasn't long before the feeling of Cheryl's hand stroking my cock and the head of my dick grazing repeatedly against the skin of her firm ass cheek pushed me over the edge. Cheryl sensed this and increased the speed of her stroking. I couldn't hold it anymore and I squeezed Cheryl's shoulder and came hard, shooting my spunk all over Cheryl's ass and the back of her thighs. Cheryl was perfectly quiet, but she flinched slightly when the first salvo landed on her left ass cheek and lower back.\n\nTry as I might, I couldn't conceal the pleasure and relief I was feeling as that orgasm flowed through me, finally emptying my balls all over Cheryl's ass. But as I came, my face got flushed and beet red and as hard as I tried to keep quiet, I exhaled deeply and it must have been louder than I thought because it attracted Kim's attention and she stopped talking and stared at me, watching me struggle. At first the three of us said nothing. The awkward silence was broken when Kim looked looked at Cheryl and said \"Did he just..\"\n\nKnowing that we'd been found out and cool as a cucumber, Cheryl said \"Oh yeah. Don't worry he'll be fine. He's done.\"\n\nWe all burst out laughing. All of our faces were now flushed, including Kim's. Cheryl brought her hand out from under the covers and licked each finger, then made her hand in the shape of a gun and pretended to blow on the barrel, which I thought was cute.\n\nWe continued laughing and Cheryl asked Kim \"Can you hand me some tissues?\" She pointed to the tissue box on the shelf. \" It's a real mess under here. He totally hosed down my butt\".\n\nKim laughed and handed her the tissues.\n\nI realized something about myself after that incident. I liked the idea of being watched by someone during sex. Later that day I talked to Cheryl about it and she said that it turned her on a little, too. She said that's also probably why we like to fuck in the library. The whole 'fear of getting caught' thing was kind of a rush.\n\nAlthough sex during the day was great, most of the time we would have sex at night when Kim was asleep. Of course we'd have to be quiet so she didn't hear us. Her bed wasn't right next to ours but she could see us from her bed and I thought I caught her watching us more than once. I think she enjoyed watching us but it was never spoken about. Although we continued to try and hide it, I know I didn't mind her watching and I don't think Cheryl did either, but she still wanted us to try and not wake up Kim.\n\nOne Saturday night, Cheryl and I went to a party and we were excited to get home afterwards because Kim was gone for the weekend and we had the dorm room to ourselves. Consequently we were horny the whole night at the party and Cheryl was feeling me up every chance she got. We were both really drunk when we left the party and headed back to the dorm.\n\nWhen we got back Cheryl was all over me even before we got in the room. She was grabbing my dick in the hallway through my pants as I struggled to unlock the door. As soon as we got inside I closed the door and grabbed her and started kissing her. I didn't bother to lock the door. I just pressed Cheryl up against the inside of the door and continued kissing her and grinding my bulging erection into her.\n\nI pulled her big tits out of her low cut blouse and started sucking on them. She moaned and ran her fingers through my hair as I sucked her nipples and put my hand down the front of her jeans and felt how wet she was while grabbing her ass with the other hand. She dropped to her knees and fished my cock out of my pants. She licked it from the balls up the shaft to the tip, staring me in the eye the whole time. Then she took it into her mouth and slid it all the way to the back of her throat and then started bobbing her head on my cock.\n\nThis continued for a minute but then she pulled down my jeans and I stepped out of them. We moved towards her bed, undressing each other as we went until we were on the bed naked leaving a trail of jeans, blouse, shirt, bra, boxer shorts and panties in our wake. We didn't bother to turn a light on or get under the covers. Cheryl just pushed me down on the bed on my back and straddled my legs and resumed sucking my hard cock. It was really throbbing and it pulsed in her mouth as her lips wrapped around it with a sensuous pressure. Her long, blonde hair cascaded around my hips as her head bobbed up and down. She was moaning as she sucked my cock and the resulting vibrations added to the pleasure. Pretty soon we were both moaning. Damn she sucked a good dick.\n\nI was enjoying the moment when I heard a faint nose outside the door. At first I dismissed it as someone just passing in the hallway but after a few seconds I saw the door slowly open. From the little bit of light coming in from the hallway I could see it was Kim. She had come back early for some reason and I thought to myself \"Damn there goes our hot sex-a-paloosa weekend.\"\n\nI was about to warn Cheryl but Kim just stood frozen in the doorway. She was completely silent, with just her head sticking in the doorway. I quickly realized that Cheryl was not aware that Kim was there. The foot of the bed faced the door so from Cheryl's position on top of me her back was to the door and she kept sucking me off despite us not being alone anymore. Perhaps she was too drunk and distracted to hear the door open. And perhaps I was too drunk to use good judgement because in that instant, I decided not to tell Cheryl that Kim had just come in. I just lay motionless as Cheryl's head continued to bob up and down on my cock, with Kim watching us and Cheryl making slurping and moaning sounds as she continued the awesome blowjob.",
        "Kim continued her voyeuristic behavior, taking in the scene. She seemed mesmerized watching the back of Cheryl's head going up and down in my lap. I decided I should at least acknowledge her so she knew I saw her and that it was ok she was watching. So I quietly waved at her. Kim hesitated a minute and then silently waved back. In that instant I realized that Kim and I had communicated more than just a greeting. I was letting her know that it was ok for her to watch, and she was letting me know that she wanted to watch us.\n\nI motioned to her with my hand for her to keep quiet by putting my index finger over my lips as if silently say \"Shhhhhh\". I saw a slight smile appear on Kim's face and she nodded to me. Cheryl continued sucking and moaning as I motioned again for Kim to come inside. For a good minute Kim and I just held eye contact as Cheryl continued to go down on me. Kim had not taken her eyes off us since she arrived but as I waved she understood and snapped out of her trance and came inside and quietly put her bag down. She stared at us again for a few seconds before finally tearing her eyes away to turn towards the door and slowly and quietly close it without making a sound. She then turned back towards us and watched us while she quietly took her coat off and slowly sat down on her bed so as to not make a sound. She just sat there and watched us.\n\nFrom Kim's vantage point she could probably only see me from the waist up and Cheryl from the back. Cheryl was on all fours on top of me giving me head so Kim could only see the back of Cheryl's bobbing head but also must have had a great view of Cheryl's ass which unbeknownst to Cheryl was pointing straight at Kim. I wondered which Kim was looking at. Me or her? Or both?\n\nSoon Cheryl took my cock out of her mouth and climbed on top of me, bringing her lips to mine. She kissed me for a moment before reaching underneath and lining up my cock with her steaming hot cunt. As she rose to place her pussy lips at the tip of my cock I heard a barely perceptible gasp from Kim as my cock came into her view. That's when I truly realized that this was different than the handjob from a few weeks prior. In that previous incident she couldn't see us because we were under the covers. She didn't even know what we were doing until it was over. Now Kim knew exactly what we were doing and it was in full view. I thought it was hot that she was watching us. I could feel her eyes on my cock as Cheryl slowly slid herself down upon it.\n\nCheryl's wet pussy expanded to adjust to the size of my cock as it slid deeper into her. As it reached her depths she stopped and just held me inside her. Her vagina was squeezing me hard, and I could feel how wet she was. Cheryl raised up on her knees slightly and started riding my cock, getting a nice rhythm going as she started to bounce on my hard shaft. She would mix it up by sometimes riding me on her knees, and occasionally getting up on her feet and squatting up and down on my cock, which she could do because she was so flexible and her legs were fairly short.\n\nShe threw her head back as she rode me, jutting her tits out, her hair hanging down her shoulders and her back as the sensations of me filling her again and again began to overwhelm her. It was so sexy watching her fuck me this way. Her big tits bounced rhythmically each time she slammed her pussy down on my hard shaft. I reached up and took her huge breasts in my hands as she rode me.\n\nI looked over Cheryl's left shoulder towards Kim's bed, and saw Kim had propped some pillows up and was leaning back against them watching us. She was wearing a t shirt and a pair of jeans. She noticed me looking back at her and we made eye contact again. I saw her squirming a little on her bed and I wondered if she was getting wet watching us. Those thoughts were confirmed when her left hand dropped down between her legs and rubbed her pussy over her jeans. She then looked back at Cheryl as she impaled herself again and again on my hard pole. I grabbed Cheryl's hips and and started thrusting up into her, taking over the job of fucking from below her. I wanted to make Cheryl feel good, but also wanted Kim to see my thick cock moving in and out of Cheryl and my heavy balls bouncing with each thrust.\n\nI started pinching Cheryl's hard nipples to increase the stimulation. She moaned loudly in response and started grinding down hard on my cock as I slowed my thrusts. I could feel the tip massaging the opening to her cervix. She started doing circular motions with her hips on my pelvis and thrusting her hips while keeping me deep inside her. I could feel her orgasm approaching as I raised my pelvis up off the mattress but I let her control the depth.\n\nCheryl's moans started to get longer and more intense as she ground on me.\n\n\"Oh baby I'm gonna cum all over your cock!!\"\n\nAs Cheryl started cumming and convulsing on top of me, her hips bucking. I looked back at Kim. She had untucked her t shirt and her right hand was underneath her shirt and bra, playing with her left nipple She had also unbuttoned the front of her jeans and her right hand was inside her panties. I could see her hand making circular motions on her clit as she masturbated. Kim watched us with a glazed over look in her eyes and her mouth slightly open. Her hard nipples prominent underneath the her t shirt as her hand manipulated them, and her legs slightly spread.\n\nAt this point I was close to cumming but I wasn't done yet. Plus I wanted to be able to better see Kim as I fucked Cheryl indulging in my exhibitionist behavior. I sat up and with one motion put Cheryl on her back and climbed on top of her toned body, her amazing tits pointing straight up at me. I spread her legs and slid my hard cock back inside her. I leaned forward and started kissing her again, then started pumping her tight pussy. I occasionally looked up at Kim as she continued to fondle herself.\n\nI couldn't continue in good conscience not tell Cheryl that Kim was there. It didn't seem right. I spoke in her ear as I fucked her, loud enough for Kim to hear.\n\n\"Babe\"\n\n\"Yes?\"\n\n\"Kim is here.\"\n\nShe didn't say anything for a couple seconds and then said, \"I know. I saw the light from the hallway as she came in.\" She looked over towards Kim's bed and smiled. \"Hi Kim.\"\n\nA feeling of relief came over me as I realized she wasn't mad. She wanted to be watched, too.\n\nKim managed a weak \"hi\" to acknowledge she heard Cheryl but it was more like a moan. She was obviously as close to climaxing as I was. I thought that was so hot.\n\n\"Well, you are a naughty girl, aren't you?\" I said to Cheryl as I started pounding her pussy in earnest with my hard cock. I took both her wrists and held them in my hand above her head, pinning her to the bed.\n\n\"This is what happens to naughty girls.\" I said as I started to fuck her hard and deep. I held her in place as I picked up the pace, the sound of my balls slapping against her ass again and again and the bed creaking and Cheryl's moans filling the room. Her big tits flopped back and forth with each thrust, almost hitting her in the face each time.\n\n\"Yes!!! Fuck me. Fuck that pussy. Give it to me. Ohhh. I'm cumming again!!!.\" Cheryl cried as she nutted again all over my thrusting cock.\n\nI pounded her hard, holding her down and restraining her the way I knew she liked it. I looked over at Kim. She was gyrating on the bed rubbing herself faster with her ass lifting off the mattress to meet her rapidly moving hand. She still had her unzipped jeans on but I could just make out her cleanly shaved pussy lips between her fingers.\n\nAll this was too hot for me.\n\n\"Oh shit. I can't hold it anymore. Your pussy feels too good. I'm gonna cum!\" I was going to cum inside Cheryl but I wanted to give Kim a good show. At the last second I pulled my cock out of Cheryl's cunt and stroked it fast as the first shot of cum spewed from my cock landing in Cheryl's tits and stomach. The next two shots followed the same course, with a few drops actually hitting her in the face. My cock pulsed as wave after wave of my hot load erupted from me and covered Cheryl's chest and stomach with cum as my orgasm continued.\n\nSuddenly we heard a loud, sustained moan from Kim as I looked up and saw Kim bucking her hips against her rapidly moving hand as it rubbed her clit feverishly. She moaned again and again as she brought herself off. Her eyes closed and her mouth open.\n\nThe last few drops from me landed on Cheryl's stomach and pussy lips as my orgasm finally subsided. Finally, all you could hear was heavy breathing from all three of us. We didn't say a word and just drifted off to sleep.\n\nFrom that point on, we used the room to fuck a lot more than we used to. We weren't worried about Kim walking in on us anymore. And we realized that we shared a an exhibitionist fantasy that brought us even closer together. I hoped that we could explore it further in the future."
    ],
    "authorname": "brett9",
    "tags": [
        "big tits",
        "tittyfuck",
        "titty fuck",
        "college",
        "voyeur",
        "exhibitionist",
        "public"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/cheryls-big-tits-ch-02"
}