{
    "title": "Time Rider Ch. 03",
    "pages": [
        "Disclaimer: All characters portrayed engaging in sexual activity are 18 years of age or older. Actual historical figures or living people represented are done strictly for context and humour, I lay no claim to them. If you had trouble following the plots of Pulp Fiction or Four Rooms because of the back-and-forth timelines, just turn around and leave now, as this fic will make you angry. As always, critiques and reviews all welcome, illiterate flames will be snickered at. Enjoy! \n\n***** \n\nChapter 3- Ain't Nobody Got Time For That Shit! \n\nMark and Becky sat in the small cottage, looking around in wonder. They were still in Seventeenth Century France, but found themselves surrounded by technologies that they hadn't even heard of. The walls were lined with clocks, some of which were mechanical, some seemed to be digital or binary, while others told time in ways they couldn't fathom. Sitting across from them at the stout, round oaken table, Chester Edgerton smoked a pipe and observed them casually. \n\n\"How... how can you have this all out on display?\" Mark asked, still gaping. \"I mean, isn't it against the rules to have this sort of tech from the future lying around where the locals might bump into it?\" \n\n\"That's the beauty of it, m'boy,\" he said cheerfully, exhaling a cloud of smoke. \"They can't see it.\" \n\n\"Well, I get it if you try to restrict entry to your house,\" Mark pressed, wanting to understand. \"But what if you're gone and bandits break in? Becks and I can account for banditry in this day and age, for sure.\" \n\n\"Mayhap,\" the man replied. \"But I brought you through the door that leads to my actual house. The front door, the one the local peasantry sees, leads into a simple cottage, typical of the period, and owned by a pudgy man of indeterminate nationality.\" \n\n\"Your... house is in two places at once?\" Mark asked, trying to understand. \n\n\"No, it's the same place,\" Chester answered simply. \"Two different times, however. We're sitting in my actual abode, Twenty-First Century.\" \n\nMark shook his head. \"That's some weird Tardis shit right there.\" \n\n\"Only at first.\" Chester allowed. \n\n\"I notice you have all your windows shut,\" Becky remarked. \"You said we're in the Twenty-First Century, but I take from further ahead than Mark and I are from, so you're not showing us?\" \n\n\"Clever girl,\" mused the man, smiling. \"While I won't absolutely stop you from looking or even going outside, I would warn you that if you do and see something you don't like, you're committing yourself to that future, no matter how hard you try to undo it.\" \n\n\"We'll stay put then,\" she said readily. \"You were kind enough to bring us here and sort of explain how we might acquire goods in the timestream?\" \n\nHe nodded. \"I know it might seem counter-intuitive, but the simple fact of the matter is that if people are going to insist on time travelling, the least they can do is be well-prepared for it so they don't hurt themselves or others.\" \n\nHe leaned forward. \"The first question you need to ask yourself is, why are you so intent on time-travelling to begin with? Is it simple curiosity? Are you planning to make a living somehow? Are you just trying to get laid?\" \n\nHe looked at Mark during this last question and the young man blushed, while Becky giggled and patted his hand. \"Mark was a dud in Physics in his last year of high school,\" she explained. \"Come to think of it, he was in little or no danger of getting into any post-secondary education facility.\" \n\n\"Thanks.\" Mark muttered. \n\n\"But, then he found his time machine, something called a Holmes Field Device, and he resolve to go back in time a few months and convince me to give him an A in Physics with the promise of earth-shaking sex.\" \n\n\"This story sounds worse every time I hear it.\" Mark complained. \n\n\"Fortunately, I acquiesced, rather than disemboweling him for breaking into my home, and not only did we become lovers, but now we're adventuring the timestream together.\" \n\n\"Hmmm, a teacher and a student, eh?\" mused the man, smiling at them as he smoked. \"Teachers and students are plentiful, of course, but they're usually from the far, far future and on very strictly-controlled excursions into the past. Hands-on history classes, if you will.\" \n\n\"That makes history sound kinda fun.\" Mark said. \n\n\"Oh, I daresay it is,\" agreed Chester. \"Nothing quite as exciting as going back to the Cretaceous Period and taking a ride on the back of a trained Styracosaurus. Or watching Dromer races.\" \n\n\"Isn't that screwing with the timeline?\" Becky inquired. \"I mean, humans weren't around for another sixty-three million years following the demise of the dinosaurs.\" \n\n\"It's all very carefully regulated on remote islands,\" Chester explained. \"It does nothing to mess with the ecosystem and the specimens are trained to interact with humans, for the most part.\" \n\n\"Riding one of those big horned dinosaurs would be a kick.\" Mark mused, grinning. \n\n\"You've already got a perfectly good horn I like to ride,\" Becky giggled, squeezing his hand again. \"Besides, this is where our host tells us that it won't be possible for us any time soon.\" \n\n\"You're a very perceptive young lady,\" he allowed. \"We can't have just anyone mucking up the timestream, you know. It's especially difficult when people who lived before time travel was commonly accepted try to get involved. They inevitably get exposed to technologies they shouldn't be aware of, or events that weren't known during their own time...\" \n\n\"I'll give you a tiny example,\" he said, leaning forward now, as if he was confiding a secret. \"Have you heard of the Tunguska Incident?\" \n\n\"Sure, the Tunguska region in Siberia, 1908,\" Becky answered, nodding. \"A large meteor slammed into the ground, creating a blast equal to sixty megatons and flattening everything for nearly a hundred miles around.\" \n\n\"No, that's what you need to think,\" he corrected, pointing the stem of his pipe toward them. \"It was, in fact, an advanced weapon that was stolen from a future date, and before temporal agents could recover it, the thieves blew it up to cover their escape. Granted, there are people in your time who have conspiracy theories about nuclear blast, nearly forty years before the first atomic tests, but they're wrong as well. It wasn't a nuclear device, simply a weapon with an incredibly high conventional yield by your age's standards.\" \n\n\"So... why can you tell us this now?\" Becky asked. \n\nHe grinned and spread out his arms in a gesture of farce. \"Who would believe you?\" \n\n*** \n\n\"So how did you know that we were time travellers?\" Mark asked as they followed their host and guide through the woods. \n\n\"Well, I heard snippets of your conversation,\" Chester said as he led the way. \"But to be honest, even though your outfits might pass with locals for 'reasonably authentic', you couldn't possibly hide your origins from a fellow time-traveller. Mark claimed to be Spanish, he doesn't look at all Spanish, certainly not from this era. Miss Rebecca is remarkably tall for a woman.\" \n\n\"Well there's something I don't hear very often back home!\" she giggled. \n\n\"And you're both in strangely good health, with unblemished skin and full heads of hair,\" Chester added. \"I was relatively certain, and then I heard you discussing your relative inexperience, so I sought to introduce myself.\" \n\n\"I'd've thought that you wouldn't introduce yourself to newbies,\" Mark stated, helping Becky over a log. \"Isn't it safer to keep your chatter to people who know what they're doing?\" \n\n\"It's actually the exact opposite,\" replied Chester. \"The best thing you can do around veteran time travellers you don't need to talk to is to not talk to them. Their timelines are probably very intricate and you don't want yours getting snarled up with them. Newbies, as you call them, probably still have linear experiences that are simple to understand and educating them about what awaits is the simplest way to keep things from getting weird.\" \n\n\"So this device the time cops gave me,\" Mark stated, holding up his chronometer. \"It's actually pretty useful then, because it warns me when I'm getting too close to myself or something I've affected.\" \n\n\"That was very generous of them,\" Chester said in a serious tone. \"They don't do that for just everyone who shows up suddenly in the timestream. Sometimes they let matters work themselves out, if you know what I mean.\" \n\nThey reached a small clearing in the forest they'd been tromping through and stopped for a bit. Chester looked at them both and slapped his hands on his thighs. \"Now then, I've brought you here so that you can witness a casual event that is due to happen just outside the woods. Nothing major, but it will give you a taste of what can await you. I have something to attend to and should be back in a few hours. Just stay out of sight and don't leave the treeline.\" \n\n\"You're leaving?\" Mark protested. Chester turned to look at him. \n\n\"It might be that the events you will see unfold work better for me if I am nowhere near them,\" the man replied. \"Fear not, I shall return. Enjoy yourselves.\" \n\nAnd then he walked into the words and was gone. Mark looked around and finally sighed. \"Helluva way to mentor someone,\" he muttered. \"Take 'em somewhere and then just fuck off? Nice.\" \n\n\"He not your mentor, Mark,\" Becky chided, sitting on a log and smiling at him. \"He's a fellow time traveller who is doing you a favour. He's given you plenty of valuable information free of charge already, something I doubt he does frequently.\" \n\n\"Well, okay,\" Mark allowed. \"So, we just wait until we see something happen?\" \n\n\"No idea when that'll be, he didn't really tell us, did he?\" Becky pointed out. \n\n\"Yup,\" Mark sighed. \"So, now what?\" \n\nBecky tilted her head slightly as she looked at him, like there was something wrong with his brain. \"Here's an idea. How about you come over here and fuck me?\" \n\nMark was so determined to be bent out of shape for having no instructions that he'd overlooked the completely obvious. He laughed and stepped forward, pulling Becky to her feet. They were holding their hands between them and staring into one another's eyes, smiling. \n\n\"Now this is what time travel is all about,\" she purred, her eyes shining with delight. \"You're going to fuck me in the woods in Louis the Sun King's France, Mark. For all we know, this is some sort of royal ground and we're trespassing. How many people can say they've done that?\" \n\n\"Just the lucky ones...\" he replied, beginning to unfasten the clasps on her dress, freeing her chest from its confines. As the dress fell away, she was left standing on in a low-cut, blouse-like shirt and some panties, having chosen to forego the usual layers of buntlings and knickers. She bit her lip as he pulled her blouse over her head, exposing her glorious breasts. Kneeling now, he slowly slid her panties down, feeling a thrill as her hairless, smooth pussy came into view. She stepped out of the tiny thong panties, letting him drink in the sight of her. Yes, he'd been with her for over a week now in France, but he never tired of seeing her beautiful body. \n\n\"Your turn now, my lord.\" Becky whispered as she began removing his clothing, peeling away the layers until he was as naked as herself. She stood up again and moved close, her nipples gently kissing against his chest. Unable to hold back any more, Mark pulled his teacher to him and kissed her deeply, making Becky moan into his mouth. Their hands wandered over one another's now-familiar forms, seeking to stimulate, tease and pleasure. His hands found her pert ass cheeks and he squeezed them, causing her to moan again. \n\n\"Mmmm, can't wait to get some grass stains on this dress,\" she murmured, looking up into his eyes. \"And maybe a few on my knees.\" \n\nShe slowly knelt in front of Mark, kissing and nipping at his skin on the way down. His swelling member was in front of her face now and she licked her lips hungrily before taking gentle hold and kissing it. Mark closed his eyes and shivered, loving the feel of her lips on him. Everything about his teacher was incredible. He was just sorry it had taken so long to realize it. \n\nBecky now had the head of his cock inside her warm, wet mouth, swirling her tongue around flicking the tip of her tongue against him. She giggled as his rod throbbed and grew longer and harder. She loved how turned on he could get by her, it made her feel so primal and sexual. She then slid her mouth a little further down his shaft before pulling back, shivering in delight at the sight of his glistening skin. \n\nMark's fingers were in her hair and flexing gently as she began to bob back and forth, taking more and more of him into her mouth. She hummed lightly, vibrating her lips around him and making him groan. Her hand rested on the shaft, pumping as it followed her lips, making a gentle twisting motion on the sensitive skin. Becky loved sucking cock, and Mark's was ridiculously perfect for her in just about every possible way. She hoped that wouldn't be a problem down the road. \n\nShe took gentle hold of his hips with both hands and moved back and forth along his length, breathing through her nose as she deep-throated him. Mark groaned in pleasure, his fingers flexing into her scalp and tugging her hair. She looked up at him, maintaining eye contact, which she knew he found so erotic. \n\nShe could feel his skin growing warm and knew now was the time to stop and change things up if she intended to have his cock inside her. There was indeed one good thing about them being out of sync, with her current self three months behind him- they already knew she wasn't pregnant in his current timeline, so he could cum deep inside her as much as they liked. She pulled her mouth off his with a wet 'pop!' and smiling seductively. \n\n\"I'm thinking maybe my girl wants to say hello too...\" she purred. Mark nodded and spread out her dress before lying down on it, his rock-hard cock standing straight up and throbbing. Becky crawled over him, straddling his face, her creamy, wet pussy mere inches from his mouth. She faced down his body, giggling and he snaked his tongue out to taste her, but she kept her prize just out of reach. \n\n\"So that's how it is, eh?\" he said from below her before suddenly wrapping his arms around her thighs and pulling down on them and causing her to lurch unexpectedly (for her) onto his eager mouth. Becky shuddered and moaned loudly as his tongue snaked along and massaged her netherlips, before flickering against her throbbing clit to make her gasp and almost double over. \n\n\"No fair...\" she panted, trying to regain control of herself, but Mark seemed inclined to cheat. He kept her pinned to him, leaving her to squirm helplessly above him while he lashed her with his tongue. \"Gnnnnn, you bastard... yes, right there... Oh, God, Mark...\" \n\nHer pleas exhorted him to even greater measures. He was determined to make her cum on his mouth at least once before they fucked. And he seemed to be pretty damned good at making her cum with oral sex, he had to say. \n\nBecky squirmed on top of him, playing wither breasts, pinching and pulling on her pink nipples, her eyes squeezed shut, because it almost felt too good if she was looking at him. His eager tongue snaked deep inside her hungry pussy, making her wetter still. He had this maddening technique where he formed shapes or letters inside her with his tongue, reaching almost every nook and cranny of her. She whimpered, knowing he intended to make her cum and she was more than happy to oblige. \n\nShe leaned forward while sitting on his face, reaching out to his twitching cock, caressing and massaging it gently- she didn't want him to cum, she just wanted to keep him stimulated. She felt the thrill of anticipation, knowing it would soon be inside her, pumping in and out, throbbing and finally releasing his creamy essence into her, something she accepted gladly because of the temporal mechanics between them. \n\nMark sucked her clit into his mouth, rolling it around and making her shudder, groaning deeply as something started to build within her. She pushed down onto his face with her hips, grinding eagerly, while her clit throbbed. Then her released it and pushed his tongue deep inside her again, probing and lashing her until she was writhing and panting heavily. \n\n\"Oh, God, Mark...\" she gasped, sweat streaming from her sensual form. \"Oh, fuck, yes, please... gnnnnnnnn, so close, baby...\" \n\nHe pushed into her as hard as he could and she jerked and squeaked arching her back. Her whole frame was wracked with pleasure as she cried out loudly, the orgasm crashing through her until she almost couldn't breathe. She shook violently, her eyes rolling into her head before she collapsed on top of him, her body limp and her chest heaving. Her limbs felt like tingling lead, but she managed to lift one to find his cock, determined to keep him hard until she had recovered. She stroked him gently while he kissed at her gooey netherlips, his face glistening with her cum. \n\nFortunately, Becky was insatiable and recovered quickly, slowly rising and then sidling forward down his body so she could look back at him and smirk. \n\n\"How about it, big boy?\" she asked coyly. \"You ready for the main event?\" \n\nMark grinned and nodded while she slithered down his body, finally hovering over his hips while facing his feet. She took hold of his throbbing member and teased it against her slippery entrance before sinking down, making them both sigh in relief. \n\n\"Haaaaaaaaaaallelujah...\" she moaned as her bottomed out inside her, filling her completely. \"Ohhhhhh, that's exactly what the doctor ordered.\" \n\nMark nodded and took hold of her silken, pert ass cheeks and gripped them firmly, making his teacher purr. Becky loved having her ass played with, and while she began to sink up and down slowly on his cock, he massaged the peach-like orbs, eliciting moans from her when he spread them wide, giving her a delicious stretch. \n\n\"Mmmmm, get me nice and ready back there,\" she cooed as she moved up and down on him. \"Because once you're done in my pussy, I want you in my ass and I want to feel your cum in it.\" \n\nMark nodded eagerly, because he loved fucking Becky's ass. Her pussy was incredibly tight, but even that couldn't match her exquisite back passage, which gripped him so strongly and always made him cum so hard he thought he might faint. His fingers teased against her little puckered, pink knot, sending the most divine tingles through her luscious body. \n\nBecky undulated on him, picking up the pace and counting on Mark to control himself until her was in her ass. She bit her lower lip, working herself on that thick, throbbing tool, pulling up until it was almost out of her and then sinking back down in one long stroke, filling her completely. Her heart was strumming in her chest as she thrilled to the notion of the oncoming climax. She was hissing now, struggling to hold on just a few seconds longer, to draw out this wonderful pleasure for them both. But then she felt the point of no return and willingly stepped over it, moaning loudly as her pussy fluttered and she began to cum, hard. She wailed and rocked on her lover, bathing his middle with her excitement. \n\nHer head lolled for several seconds as she came down from her orgasm, but she remembered that she still had Mark inside her and needed him, promised him, that he would be cumming in her ass. Slowly, lethargically, she raised herself until his cock fell out of her, still rock-hard and yearning for more. For such a young man, he had exceptional control. \n\nShe inched forward, until she felt his pulsing head teasing against her notch. She reached underneath herself and took hold of the shaft, holding him steady while she pressed down, slowly but surely. She heard him groan as the head popped through her tight ring suddenly and then he was sliding inside her. It was Heaven. She sat still for several seconds, just reveling in the feel of him filling her ass. ",
        "She felt the need to be sensual, and she leaned backward, until she was resting her back on his torso, her head next to his. But her knees were still bent and she groaned like she was going to burst, the angle of his penetration in this position more than she could bear. Whispering for him to wait patiently, she slowly, sinuously slid her legs out from beneath herself and straightened them, relaxing in pleasure as they rested on Mark's thighs. \n\n\"Sorry, that would've downright killed me right now,\" she whispered to him, her glassy, heavily-lidded eyes looking into his. \"And I wanted to be down her to kiss you and let you fondle me as you fucked me and came in me.\" \n\n\"Sounds like a plan,\" he agreed readily, his strong, but gentle hands coming up to rest on her opulent breasts. Her began caressing and massaging them in circles while Becky started moving her ass on top of his cock, squeezing him inside her tight confines. \"God, I love your ass, Becky.\" \n\n\"Mmmmmm, it loves your cock, Mark,\" she purred, undulating on him, the throb of his tool being felt through her whole body like another heartbeat. \"You always make me cum so hard...\" \n\nThey squirmed and ground together, with Mark tilting his hips up to push inside her while Becky squeezed him, the lovers shuddering as they kissed feverishly. His hands were squeezing her breasts now, pinching and pulling on the nipples again to make her groan with the delicious sting. \n\nBut Mark felt his climax approach and he knew it wouldn't be long before he was pumping his cum inside her. Becky moaned into his mouth as she felt his cock swelling and twitching erratically, a sure sign he was about to cum. She squeezed him tighter, feeling the buildup inside herself, yearning to share that unreal ecstasy. \n\nThe groaned into one another mouths at first, but then the kiss was broken as they panted, fighting for air, their voices carrying around the woods they were in. He pushed up hard inside her, pulling down on her breasts while she squeezed with all her might, his cum almost searing hot inside her, filling her up. \n\nMark went limp, breathing heavily and clearly spent, not that he minded. Becky could barely move, bound in ropes of silken bliss that kissed every nerve in her body. Her own heartbeat plus the relentless throb of Mark's rigid cock, still oozing inside her, almost meant she didn't know how to center herself. \n\nBut they relaxed together finally, kissing gently, eyes closed while they clasped hand on top of her breasts. Tongues softly tangled, tasting one another while they let their rapture slowly ebb. Minutes passed and they lay silently, waiting for Mark's member to soften so Becky could sit up. Finally, she giggled, squeezing his hands. \n\n\"Feels like somebody doesn't wanna go to sleep,\" she said cutely, wiggling her butt on him, feeling her ass refusing to relinquish its hard-earned prize. \"What're we gonna do?\" \n\n\"Iono,\" he said drowsily. \"We just wait, I guess. If I try to have another orgasm right now, I'm pretty sure he'd just spontaneously combust inside you.\" \n\n\"Alas, poor cock,\" she cooed, stroking his cheek. \"I guess we happily wait, then.\" \n\nThey closed their eyes and relaxed, waiting for Mark's erection to subside so that they could get up without difficulty. Their hands remained at rest on her breasts while they nuzzled their cheeks together. \n\nThen there was a 'click!' sound. \n\nBecky's eyes snapped open and she goggled up at a man dressed in rather colourful and opulent period clothing, staring down at them as he pointed a flintlock rifle at their face. Looking around, she now saw they were surrounded by men carrying pikes and muskets, all of whom stared at the naked couple with varying level of interest. \n\nThe man directly over them moved his musket muzzle, indicating they should sit up. Mark's eyes were open by now and he glanced around in confusion as well, clearly not understanding what had happened. \n\nThe man's eyes narrowed and he moved the musket muzzle again. Becky, sensing the danger they were suddenly in, tried to move, but shivered- she was still impaled on Mark's solid cock, which had shown no signs of softening and kept her pinned against him. She couldn't get up. \n\n\"Great time to develop priapism, Mark...\" she said sourly. \n\n*** \n\n\"Maybe Louis the Sun King's France just isn't for us after all,\" Mark sighed as he hiked along behind Becky, who had been stuffed hurriedly back into her dress while he was allowed to put on his breeches again. Neither of them even had shoes on as they followed the soldiers. Their hands were tied behind their backs. \"This is twice now that we've-\" \n\n\"I know, Mark, I was there,\" Becky said somewhat tersely, wondering if Chester Edgeworth was now someone she had to add to her shit list. She hated adding names to the shit list. \"I guess we were so busy fucking that the event our host meant for us to witness has found us.\" \n\n\"Tais-tois!\" one of the men guarding them said as he walked nearby with a musket. \"Vou ne pouvez-pas parler!\" \n\nBecky scowled at the man and continued trudging. She wasn't really embarrassed about being caught fucking, it wasn't the first time it had happened to them here in France. But at least this lot had the decency to let her have an orgasm first before taking them prisoner. She couldn't even enjoy the grass stains on her clothes! \n\nThey had exited the woods and were now tromping through a field, heading toward a much larger cluster of soldiers. Mark couldn't help but notice that a lot of them were wearing red. \n\n\"Shit...\" Becky muttered as she saw them as well. \"That's all we need.\" \n\n\"Huh?\" Mark asked, but he was silenced when a soldier shoved him roughly from behind with his musket, indicating he was to stay quiet. \n\nThey approached the encampment and Mark soon realized there were several hundred soldiers. The tents were spread out around one rather illustrious red tent of grand size. He then saw a cluster of cavaliers milling about and they seemed to be headed in that direction. Soldiers stared at them as they entered the perimeter of the camp, usually at Becky. \n\nMark and Becky found themselves hauled in front of the cavaliers, who parted, making way for a single man on horseback. He was at least middle-aged, with a somewhat grey pallor to his skin and thin, hawk-like features. His expression was a rather lemony one, as if he felt inconvenienced by this entire incident. For all that, though, his dark eyes glinted with intelligence. He was wearing the flowing red habits of a high-ranking member of the Catholic church, although he had a burnished breastplate on his chest as well. \n\n\"You stand in the presence of his Eminence, the Cardinal Richelieu,\" announced the captain of the troops that had taken them prisoner. Mark's eyes went wide. He didn't speak French, but he'd seen enough Three Musketeers movie reboots to know who Cardinal Richelieu was and exactly what sort of deep shit they were suddenly in. \"Show respect!\" \n\nBecky dropped to one knee and bowed her head, looking at the ground. Mark rapidly followed suit, since she probably had a better grasp of the situation than he did. He could feel everyone's eyes and on them and it was beginning to weigh heavily, like a yoke around his neck. His face flushed, but he said nothing. \n\n\"Who are these persons?\" the cardinal asked finally. \"Your names, my children.\" \n\n\"My name is Rebecca, your Eminence,\" Becky said humbly, still not looking up. \n\n\"And you, good sir?\" the Cardinal asked, looking over at Mark now. \n\n\"M- me llamo Marco del strade, tu Eminencia.\" Mark stammered. \n\n\"A Spaniard,\" mused the Cardinal, pursing his lips. \"In the presence of a peasant girl. And you both have unusual accents, I admit.\" \n\n\"Your Eminence,\" said one of the captains, looking at them suspiciously. \"This man, why is he here traipsing about Champagne like this? With this peasant girl? We found them in the woods, doing unspeakable carnal acts to one another.\" \n\nThe Cardinal's eyebrow arched and he looked on in seeming distaste. \"You don't say.\" \n\n\"Very likely he is a spy for King Phillip, your Eminence!\" said the captain, almost sneering. \n\n\"No, your Eminence,\" Becky said suddenly, her voice full of concern. \"I assure you, he is no spy!\" Mark hadn't heard or understood everything the Frenchmen were saying to one another, but he understood 'espion' and his teacher's reaction indicated that he was in some kind of trouble. Go figure. \n\n\"And what grounds can you give me to believe you, child?\" the Cardinal asked with feigned interest. \n\n\"Please,\" she begged, her head still bowed. \"You have my utmost assurances he is no spy, he's an idiot!\" \n\nThis made the men around them laughed and even Richelieu grunted in amusement. \"Both of you rise.\" \n\nMark saw Becky get to her feet and he did they same. All around them, men with pikes and muskets were watching them warily, some of them levelling weapons at the pair. Clearly they took the Cardinal's safety seriously. \n\nRichelieu observed them with interest. \"The girl is very unusual,\" he mused. \"Tall, very healthy and very beautiful. Very, very beautiful. I know only one other of such unmatched attractiveness.\" \n\nMark wasn't sure where this was going, but he doubted it was good. The Cardinal's interest in him was waning. \n\n\"And yet you say you found her acting in a most carnal and un-ladylike manner in the woods, hm?\" Richelieu continued. \"Well, it certainly won't do for her to be out here alone in the countryside, rutting like a nymph, would it? Perhaps her majesty could make use of the girl, once we fix her atrocious accent.\" \n\n\"My what?!\" Becky snapped, looking offended now. \n\n\"Put her in the cart, we'll bring her to the capital, with regards to the Queen.\" Richelieu declared, turning his horse about and riding off. Men began to try and wrangle Becky into one of the carts, many of them laughing and leering as they took the opportunity to grope her. \n\n\"Hey, stop that!\" Mark said angrily, surging forward, but he suddenly found himself confronted by a captain, who stared at him impassively. \n\nThere was a sudden and frightfully loud 'crack!' sound and Mark halted suddenly, his eyes wide. Becky's head snapped around at the noise and her eyes went wide. Blinking, Mark slowly looked down and saw there was a very red puncture hole in his abdomen. Sounds slowed down, taking on an almost syrupy quality and he started to feel confused. Becky screamed and tried to force her way to him, but she was being hustled away by many guards. \n\nThe man who had shot him wandered off, sliding his flintlock pistol back into a holster, clearly no longer caring about Mark. Everyone seemed to be wandering off now. He felt cold, and vaguely nauseous. The ugly red wound in his stomach pulsed, blood welling from it slowly. \n\nHe felt himself toppling over, white light bathing the field around him. He could still see things, but they seemed distant. He tried to focus on something, finally identifying Becky's voice as she screamed for him. He could just make out the soldiers wrestling her into a cart while she struggled and kicked savagely, her face contorted in rage. \n\n\"I'LL GET YOU FOR THIS, RICHELIEU!\" she roared as Mark's world was absorbed by the soft white light. \"YOU JUST MADE THE SHIT LIST OF HIGH DOOM!! SEE IF I EVER DANCE A SARABANDE FOR YOU, PAL!!\" \n\n*** \n\nMark bolted upright suddenly, gasping. His eyes were wide and he was covered in sweat. His heart thundered in his chest and he fought to control his panic. The white light was slowly replaced by close walls of grey stone. He squeezed his eyes shut and tried to control his breathing. His hands bunched against sheets that were covering him. \n\nFinally, he could breathe normally and he tried to organize his thoughts. He still felt confused, everything a total jumble. \n\n\"Calm yourself. Think!\" \n\nHe'd been fucking Becky in the woods. Apparently they were waiting for Cardinal Richelieu to go by, which he guessed passed for a historical event, seeing the man. But the Cardinal's soldiers heard the two of them and took them prisoner. Then they took Becky and Mark tried to stop them and got shot in the stomach... \n\nHis eyes snapped open and he was frozen in place. He forced himself to look down at his middle, seeing that he was still covered in a sheet. His hand was trembling as he moved it slowly toward the heavy, dun-coloured blanket, sweat trickling from his brow as he felt fear rise in his throat. \n\nHe flung away the sheet suddenly, unable to bear not knowing. \n\nHe wasn't bleeding. There was no puncture wound, only a strange, round scar about two inches in diameter. \n\nEyes wide, he slowly lifted his head and looked around, now noticing his environs- he was indeed in a small bedroom, the curtains drawn to keep out the light and very little in the way of d\u00e9cor. Just a chair and a table in one corner, some other surfaces with candles spaced around the room. His bed was solid and comfortable. \n\n\"Ah, there you are,\" Chester Edgerton said as he came through the door. \"I was beginning to think you had no intentions of waking up.\" \n\n\"Where...\" Mark said somewhat feebly. \n\n\"Back at my place,\" Chester answered, sitting down in the chair and settling in for what was no doubt going to be a long and perhaps trying conversation. \"I found you lying in the middle of the field nearly a kilometer from where I'd left you and you were very close to dead.\" \n\n\"How did I...\" \n\n\"You should have died,\" Chester continued. \"But ultimately you wouldn't have, due to a timelock, I'm assuming. You weren't meant to die there in that field. Luckily for you, there are still plenty of ways to get yourself killed for doing absurd things.\" \n\n\"Why did you leave us in the first place?\" Mark asked. \n\n\"I've been around Richelieu and several of his captains at various points in the timestream, and it's getting difficult to manage,\" Chest replied, shrugging. \"Best way to deal with that issue is to simply not be present.\" \n\n\"So why leave us there?\" \n\n\"To see Richeleu, of course,\" the man said simply. \"One of history's truly great men, certainly more so than that twit of a king he serves. I was just trying to ease you into the idea of witnessing historical events. It never occurred to me that you'd be found because you made your teacher yodel like a Swiss Miss when you flagranting the delicto with her. I admit I hadn't planned for that nonsense.\" \n\nMark blushed. \"So, what, I wasn't meant to die here, so my body just healed itself?\" \n\nChester laughed. \"Oh, no, dear boy, nothing of the sort. I came back to the woods, as promised, as when you weren't there, I began noticing the tracks of many solid shoes and boots in the vicinity. Not to mention the clothes you left behind.\" \n\n\"Yeah, sorry, I was kinda tied up at the moment.\" Mark muttered. \n\n\"In any event, I followed the tracks, noticed that Richelieu had broken camp and then found you. You'd been lying there for nearly three hours, you should have been dead from blood loss, but you weren't. I brought you back here, removed the ball from your stomach and then healed you.\" \n\n\"You can do that?\" Mark asked. \"I thought you said you were a dealer in chroniques.\" \n\n\"It helps to have a few irons in the fire and some hidden talents if you're going to mess around in the timestream,\" Chester replied. \"But I was under no obligation to complicate my life and save you.\" \n\n\"I guess I'm glad you did,\" Mark sighed. \"Thanks. But wouldn't I have healed anyway?\" \n\n\"Yes, but maybe not fully,\" replied the enigmatic dealer. \"You might've been found by some local peasants, brought back to their hovel and spent life as a weakened vegetable until you died of the Plague. People die in the past all the time, Mark, and everyone in their own era thinks they just disappeared and mourns them. It's frightfully common.\" \n\n\"Can I... can I see the tools you used to heal me?\" Mark asked hopefully. \n\n\"Nope,\" Chester replied, shaking his head. \"They're from your future by a few hundred years, the only reason I used them at all was because you were out cold.\" \n\n\"Uhhhh, how long was I out, anyway?\" \n\n\"Almost a month,\" Chester answered, smoothing a corner of his pencil moustache. \"I had you fully healed and ready for action by the next day, to be honest, but you just refused to come to. So, I just left you to it, figuring you would wake up when you felt like it.\" \n\n\"Oh, shit,\" Mark breathed, realizing something. \"Where's Becky?\" \n\nChester raised his hands. \"Why would I know? I wasn't there. What do you remember?\" \n\nMark tried to concentrate while Chester got up and poured a glass of water. Mark drank it thirstily and placed the glass on the table. He found himself wishing that he'd taken French instead of Spanish in school. He'd thought Spanish might be more useful, but all it did was get him shot. Fuck that. \n\n\"I don't really speak French, so this is hard. Ummm... they thought I was a spy because they thought I was Spanish.\" \n\n\"Because you've been presenting yourself as Spanish while you're here,\" Chester mused. \"In spite of your outrageous accent. France has been at war with Spain on and off for some time now.\" \n\n\"Whatever,\" Mark grumbled. \"They seemed really interested in Becky.\" \n\n\"To be expected, she is quite lovely. I dare say I've only known one woman in this entire era to match her beauty.\" \n\n\"Well, I think I heard them say 'capital', and then I think 'la reigne', which means queen, right?\" \n\n\"Indeed it does,\" Chester agreed. \"My bet, then, is that your teacher has been taken by the Cardinal to be presented as a gift to her majesty, Queen Anne, to serve as one of her ladies-in-waiting.\" \n\n\"Why would he do that?\" Mark asked, frowning. \"I've seen enough Three Musketeers movies to know that the Cardinal and the Queen hate each other.\" \n\nChester smiled. \"It's a game he plays with her. As the years go on, Anne is, sadly, getting 'a little long in the tooth', to borrow a phrase. She remains dignified and regal, but her best days are behind here, where attractiveness is concerned. Richelieu now takes great delight in surrounding her with women of magnificent beauty, seemingly a gesture of devotion, but really meant to hurt the queen's feelings.\" \n\n\"What a dick.\" Mark muttered. \n\n\"You have no idea,\" Chester said dryly. \"If they got her back to the city roughly a week after she was taken, then she's been with the royal court for three.\" \n\n\"Meaning that she's either loving life as a lady-in-waiting, or she's killed and eaten them all,\" Mark said heavily. \"I guess I have to go get her.\" \n\n\"I can't imagine this not being amusing,\" Chester said, smirking. \"But out of morbid curiosity, how, exactly, will affect this rescue?' \n\n\"I dunno,\" Mark said, shrugging. \"But I can't leave her. She'd kill me.\" \n\n\"She probably thinks you're dead, I feel obliged to point out.\" Chester mentioned. \"She saw you suffer a mortal wound at point-blank range. You should be dead and only an as-yet undetermined temporal snarl has kept you alive. I wouldn't count on that again if I were you.\" \n\n\"Well I can't do nothing!\" Mark insisted in frustration. \n\nChester tilted his head, observing his guest for a moment. \"Do you love this woman?\" \n\nMark blushed furiously. \"I... no, I don't love her, or if I do, then I'm not in love with her. There's a difference, y'know.\" \n\n\"Well and truly said, Boccaccio,\" Chester chuckled. \"Well, if there's no stopping you, then I'll see what I can do to discretely help you.\" \n\n\"Why?\" Mark queried. \"I've got a friggin' time machine. All I need to do is get there, zip in and zip out.\" ",
        "\"Correct me if I am wrong,\" interjected his host. \"But did you not tell me, early on in our association, that your current self is from three months in the future of the Miss Rebecca that I know.\" \n\nMark nodded. \n\n\"And you plan to add another layer of temporal travel on top of that wedding cake of disaster?\" Chester mused. \"Rebecca could be subtly altering the timelines in Paris now with her very presence, involuntary as it might be. Your oh-so-carefully laid plan could simply not work because of a slight temporal consideration.\" \n\n\"So you're saying no time machine.\" Mark stated flatly, not impressed. \n\n\"I'm saying the idea is bad. Atari Jaguar bad,\" Chester replied. \"If you intend to do this hare-brained thing, allow me to assist you in what moderate ways I can.\" \n\n\"What, you've got some funky tech or weapons you can loan me?\" \n\n\"We'll see about that, but more importantly, I guess I'll call in a favour. A certain person who moves in the circle of the royal court owes me a small boon, and I can use it to assist you. They happen to be an accomplished master of intrigue and getting out of sticky situations, with a blade if necessary.\" \n\nMark's eyes lit up. \"Is it D'Artagnan?\" \n\n\"Only if you want to get Clock-Hammered out of existence,\" Chester laughed, shaking his head. \"Everybody wants to meet Charles de Batz, thinking they're going to see D'Artagnan of Three Mustkeers fame, and then it just turns out he's a bad-tempered Gascon who loves to punch people who bother him. He's punched more time-travellers than Jesus, I'm pretty sure.\" \n\nChester then went over to a drawer and rummaged around inside it, finally pulling out a yellowing envelope that was sealed with wax. \"I assure you, the agent I am referring you to will be much more effective than D'Artagnan. I will send you with instructions about where in Paris to meet them and offer them this envelope. Warning, though, if they see it is opened, they will simply refuse to help and go away to where you cannot find them. Are you strong enough to keep from opening the letter?\" \n\nMark nodded. \n\n\"Well, then,\" Chester announced, opening a bottle of wine and pouring two cups. \"Shall we drink a toast to your success, o Macro del Strade of Seville?\" \n\n*** \n\nMark was sitting on the back of a hay wagon, wondering if he could really pull this insane plan off. In addition to the letter, Chester Edgeworth had indeed furnished him with a few small devices and curious that hopefully would help him, though it cost him almost all the rest of his money. Chester pointed out he was a businessman and didn't intend to take a loss just because some idiot created a time crisis for himself. \n\nFair enough. \n\nMark tried not to play with the little bud that sat deep in his ear- Chester had sold it to him, saying that it could translate languages, speaking into Mark's ear whatever he was focusing on. It could also possibly formulate phrases- if he spoke in English, it could tell him the closest translation to what he was saying. \n\nThis model was old, though, and only spoke the French of this period. Chester didn't want him getting any clever ideas with a more powered-up version, since if something bad happened, it might come back on him. \n\nThe reasoning initially annoyed Mark, but the more he thought about it, he reminded himself that he was here to rescue Becky. Nothing else. \n\nHe thought about the conversation he'd had with their host while drinking wine and planning his initial move, heading to Paris. \n\n\"So why did you begin time-travelling at all?\" the man had asked. \n\n\"Well, I...\" Mark started saying, unsure of how to answer. \"I found a time machine. Seems perfectly logical to use it.\" \n\n\"Granted, but what's your personal motivation, Mark?\" he asked. \"Is it to see glorious historical events, are you a treasure hunter, a thrill-seeker who wants to run with the Dromaesaurs?\" \n\nMark blushed now. \"Honest? I thought it'd be cool to have sex with women from history.\" \n\nTo his amazement, Chester didn't laugh uproariously, he simply smiled and shrugged. \"More common than you would think, especially amongst men your age, who are full of hormones. Let me ask, then- was getting laid in your own time-period difficult?\" \n\n\"Not really, no.\" \n\n\"Well it's not any easier in the timestream, just so you know,\" Chester pointed out. \"In some periods of history, it can be even harder, where religious fervour runs rampant and sexual repression is the law of the land. I assume you wouldn't go as far as to rape a girl.\" \n\nMark shook his head. \n\n\"Lots of men do when they find out that having sex in the past is harder than they anticipated,\" Chester said almost sadly, shaking his head. \"You're one of the better ones. But for all that, the problem remains- getting into bed or a rug with Cleopatra is pretty much next to impossible. You might as well hope to seduce Scarlett Johansson when you're no one in particular.\" \n\n\"Hey, I got Becky, didn't I?\" Mark had protested. \n\n\"Dumb luck, really, and she's a remarkable woman. Have you had sex with any women aside from Becky since you came to the Sun King's France?\" \n\nHe shrugged. \"A few, I shared 'em with Becky.\" \n\n\"Peasants, I assume?\" \n\n\"Mostly, yeah,\" Mark admitted. \"There was one sophisto girl, but Becky did the talking and charmed the knickers off her for us.\" \n\n\"If it weren't for Becky, you'd be completely out of your league here, boyo,\" Chester said simply. \"And trust me, it won't get easier. Even history buffs who think they know everything get caught and pay the price. There's the history you know, the history you don't know, and the history that you don't know that you don't know.\" \n\n\"What?\" \n\n\"What year did World War Two end?\" Chester asked. \n\n\"Simple. 1945.\" \n\n\"So you know that. What year did the Crimean War start?\" \n\n\"I've heard of it, but I don't know anything about it.\" \n\n\"Something you know that you don't know. Okay, tell me about the League of Ages Twelfth Nicean Temporal Council.\" \n\n\"The what?\" \n\n\"Exactly,\" Chester had said emphatically, leaning forward and pointing with his wine glass to make a point. \"An incredibly important historic event that you've never even heard of, but it happened all the same. Can you imagine trying to do something that conflicted with that? You wouldn't even know what clock-hammered you or why, because only a practiced temporal traveller would be aware of the event at all. Time travel can be tedious.\" \n\n\"It's certainly becoming less and less fun by the moment.\" Mark grumbled. \n\n\"Probably the smartest thing you've said since you found that Holmes-Field Device,\" Chester agreed. \"Life would be a lot easier if casual nitwits like yourself walked the other way when a time machine appeared in their path.\" \n\n\"But don't you make a living selling to people like me?\" Mark asked. \n\n\"Hardly,\" Chester almost snorted. \"Nitwits like you rarely have anything to even pay me with and usually require drastic amounts of assistance. \"No, my friend, the majority of my income is derived from customers who hail from the far future where time travel is an established industry and carefully regulated. Now those people are my bread and butter.\" \n\n\"Did Becky and I really stand out?\" Mark asked somewhat dully. \n\n\"More and more with each passing moment,\" Chester answered. \"You're too tall, too healthy, you have all your teeth, and your accents are absurd.\" \n\nMark said nothing. \n\n\"And by the way,\" added his host. \"Those little packets of Airborne that you both carry in your pockets? The little Vitamin C boost things to ward off the sniffles? I can guarantee you that those will in no way, shape or form protect you from illnesses in this era. Only thing it'll do is turn your piss such a bright yellow that people will think you're possessed and the Inquisition will burn you.\" \n\nMark ended up leaving the packets as a curio that Chester could sell to people from the future who wanted to snicker at how dumb people from the turn-of-the-millennium were. \n\nHe had arranged transport to Paris with the wagon he was now on, making sure the farmer put some extra perk in his horse's step by offering him twice as many sou as was normal. The journey, which would normally take a week, with good weather, was promised to six days because of the extra money. \n\nWhatever the difference was between six-day speed and seven-day speed, Mark sure couldn't tell it. His communication with the farmer had been sluggish, certainly, mostly on his end, because he would try to say exactly what his little translator bud told him and he probably sounded like he'd had a stroke when he was speaking. The farmer laughed at his speech, but still did as he was asked. \n\nMostly they slept at the side of the road in the piled hay, but one night they stayed in a roadside inn. Mark's funds were running out fast, even though the food he ate was paltry and rather unappetizing. He had to reach Paris. \n\nThey then trundled through the town Mark and Becky had first come to and Mark hid himself in the straw, figuring it was best to not be seen by people whom he might be familiar with. Even if the inkeeper's two daughters would no doubt readily fuck him again. He fought the temptation to ignore Chester's instructions and simply go get his Holmes-Field Device and use it to rescue his teacher. But he disciplined himself and refrained, he was in enough trouble as it is. \n\nKnown knowns. \n\nKnown unknowns. \n\nUnknown unknowns. \n\nFuck. \n\nThe days and nights passed with Mark trying to keep himself from growing crazy by practicing his French and thinking of his plan. He had no idea whatsoever about what to do once he reached Paris. Get inside the royal palace? He couldn't exactly Google the plans for it, could he? \n\n\"Regardez la!\" the farmer said finally, calling back to mark and pointing toward the west. As the sun was rising behind them, he could make out a sprawling sea of darkness in the distance, the silhouette of which prickled the sky. Endless plumes of smoke hung over the city as deep grey gave way to dawn behind them. He thought it might actually be pretty. \n\nAnd then the wind wafted over them from the west, bringing the unique scent of fabled Paris. \n\n\"Jesus!\" Mark croaked as he turned green, leaning over the side of the wagon and puking his guts out while the farmer roared with laughter. \n\n*** \n\nMark wandered through the choking maze of streets, gaping at the chaos of architecture around him- houses seemed to almost be built on top of houses, to the place where some of them were leaning over almost drunkenly. The cobblestones of the road were wet and sticky with effluence, there was no way to avoid it. The stench was beyond belief. How had people ever lived like this? \n\nHe had asked on repeated occasions where he could find La Rue de Grenuie, the place Chester had told him he would find the agent he'd referred to. Mark was reasonably certain most people were being helpful, even if they stared at him like he was an alien. He might as well have been, he was a head taller than just about everyone, clearly well-fed and had all his teeth. Mark had seen jack-o-lanterns with more teeth than most of the denizens of Paris' infamous streets. \n\nHe took many wrong turns, because where he thought people had told him to go was often a dead end. Eventually, by divine providence, he found himself on the street he'd been asking for, evidenced by an ancient, worn rectangle of wood that said the name in faded green letters. Certain he was on the right track, he headed down the crowded street, stuffing his purse into the front of his breeches, since Chester had told him Paris was home to countless scoundrels who could remove his wealth without him even noticing. \n\nThe crowds began to thin out somewhat, and the street got narrower, as if that was possible. The cobblestones were also surprisingly dry, not sticky or running with the sewage of the city behind him. Before long, it was barely wide enough to accommodate one person and he felt very uneasy about the rickety buildings that loomed over his head, almost blocking the sky. He then stopped in front of a black iron fence, pitted with age and with a chain wrapped around it. He tilted his head and unwrapped the chain, finding that the gate now swung open freely and with decidedly little noise. He stepped in, closed it behind himself and then fixed the chain back in place as best he could. \n\nHe found himself walking through a tunnel, the buildings about him now made of stone. Dank and foreboding, he resisted the urge to run, not knowing what lay ahead. Eventually, he came to a small, bare courtyard. It might have been thirty feet by thirty feet and was devoid of almost all decoration. High brick and stone walls concealed it from the chaos of Paris. It was surprisingly quiet, as if the city dared not disturb the austere serenity. \n\nThere was a single, grey stone bench in the middle of the courtyard. Facing away from him, clad in a great cloak, was a person, the hood thrown over their head to keep the merciless sun off them. \n\nMark swallowed and took a deep breath before beginning to move forward. Was this Chester's agent? If he was, Mark had to be careful, because he'd been told the man was dangerous. He approached slowly, finally coming to a stop some five paces away, still facing the stranger's back. \n\n\"Hello,\" he said faltering French. \"My name is Mark. I have... sent... to you... today... for big help. I is need big help.\" \n\n\"That you do, my friend,\" replied the person in a strangely lyrical voice. They closed a small book of devotionals they had clearly been reading and stood, still facing away. \"That much is obvious, because your French is painful.\" \n\nMark blushed in embarrassment as the translator bud told him what the person had said. Still concealed beneath their voluminous midnight-blue cloak, the person turned around and approached him. He resisted the urge to take a step back as they stood right in front of him. He couldn't help but notice the person was on the taller side, strange for a Parisian. \n\nGloved hands pulled down the hood and Mark's eyes widened in amazement. Shining golden hair spilled in luxurious tresses down the person's back. The eyes were a dazzling blue, glinting with intelligence. The smile was serene, the teeth within white and perfect. \n\n\"Je m'appelle Alexandra D'Assaut,\" the woman said warmly, her voice sending chills through him. \"And I am lady-in-waiting to her royal majesty, Queen Anne of wide fame across Christendom.\" \n\nMark's lips moved soundlessly as he gaped down at her. He didn't think it was possible, but she might have been even more beautiful than Becky. He'd never seen such an angelic face in his life. Deep from within, he summoned the will to speak. \n\n\"J-je m'appelle... uhhh, Mark.\" \n\nThe woman tilted her head slightly and then reached up hand touched his ear. Her touch was almost electric, but a split second later, his ear felt empty as she withdrew her hand and gazed at the translator bud she had removed from his ear canal. \n\n\"What is your native language?\" she asked curiously. \"Anglais? Espanol? Allemand?\" \n\n\"Oh, uh... English.\" Mark replied, rubbing the back of his head. \n\n\"And you are not from around here, either.\" Alexandra said in perfect English with an erection-causing accent as she put the translator bud back in his hand and looked up at him. \"More than that, you are not from my era.\" \n\n\"That obvious, eh?\" Mark said, beginning to feel like a total flop at time travel. \n\n\"Your accent is not that of the English throne, so you either come from the New World with an accent I have not heard yet, or you are from days yet untold, my friend. That and you are ridiculously tall. I know of only three men who exceed you in height, one of the them being my elder brother, another that lout Porthos of Les Mousquetaires Gris, and the Duke of Buckingham. You are none of these three.\" \n\n\"Yeah, uh, guilty.\" Mark said somewhat sheepishly. He hadn't been this tongue-tied since he'd invaded Becky's home and she'd threatened to kill him a lot. At least this woman hadn't yet. \n\n\"So, what brings you to my little sanctuary?\" she asked, observing him. \n\nHe thought about that for a moment and then fumbled about hastily in his pants while she looked on in amusement. He finally fished out the envelope from Chester and handed it to Alexandra. She examined it curiously for a moment and then broke the wax seal, taking out the small folded bit of paper and reading it. Her eyes betrayed nothing, but she sighed. \n\n\"Merde,\" she muttered as she folded the paper up and slipped it into a pocket of her great cloak and clasped it shut. She then looked up at him. \"Very well, then, I am indebted to assist you with whatever your quandary is, since my friend Chester Edgeworth has asked for the boon. Shall we retire to my apartments?\" \n\nShe turned and walked toward another tunnel in a swish of cloak. Mark looked around as he followed her. \n\n\"Y'said this is your sanctuary?\" he asked. \n\n\"It is.\" \n\n\"No offence, but... kinda dull for a lady-in-waiting, isn't it?\" \n\n\"The way it should be, as long as the people of Paris suffer in their untold thousands at the hands of the nobility.\" Alexandra replied grimly, her blue eyes glinting in the darkness of the tunnel that swallowed them. \n\n*** \n\nThe network of tunnels and narrow alleys had bewildered Mark, but his guide navigated them with ease, seeming to glide over the stone pavement. This place also had little or none of the stench he had quickly come to associate with Paris. She moved swiftly and she seemed confident he'd keep up, although sometimes he momentarily lost track of her in the darkness because of the midnight blue she was wearing. \n\nTheir sojourn took them slowly up, as in on a winding incline. With the houses and buildings sagging overhead, Mark had rapidly lost track of which direction they were headed in. He almost felt claustrophobic, something he never did. Turn after turn, up a short flight of stone steps, more alleyways, more steps and more turns. Eventually, they reached a large, solid wooden door, bolted with iron. She fished out an almost comically-oversized key and inserted it into the lock, which opened with a 'clank!'. She then led him into a dark foyer, where she removed her cloak, hanging it on a peg after removing his letter and her devotional book. In the almost near dark, it was difficult to tell what she was wearing. \n\n\"Come!\" she said simply as she began to climb a flight of stairs. He followed behind her while the staircase wound upward. Finally, another door, much simpler and smaller in design, but still having a strong lock. She opened the door and whisked into the room beyond, moving around to several tables and lighting candles to give them some illumination. Finally, she turned to him and he got to see what she actually looked like when she wasn't wrapped in enough velvet to cover a cathedral. \n\nHe'd been right. She was utterly glorious. Tall for a woman of the day, easily Becky's height, with alabaster skin, a large, first bust, a tiny waist and statuesque legs. She was, oddly enough, wearing tan breeches and had a cr\u00e8me-coloured blouse on top that did nothing to hide the size of her chest. She saw him gaping and smirked. \n\n\"Do not worry, Mark, I get this reaction from men all the time.\" Alexandra said, her voice kind. \n\n\"You sure don't look like anyone else I've seen in Paris,\" he breathed. \"No lie.\" ",
        "\"Well, thank you,\" she said cheerfully as she found a bottle of wine and opened it. \"I think you will like this wine, the vintner made several bottles for me personally.\" \n\n\"Uh, yeah, thanks.\" Mark said, moving over to a chair she gestured to and sitting in it. She sat in the other one, across the small, ornate table from him. He couldn't identify why, but she felt... sensuously close to him. \n\n\"So now,\" she began, taking a sip of her wine but looking at him over her goblet. \"What is so important that dear Chester has called in a favour?\" \n\n\"Whoah, uh...\" Mark faltered, rubbing the back of his head again. \"I... I hardly know where to begin.\" \n\n\"To quote another associate of mine from a time beyond this one,\" she lilted, still looking at him. \"Just give it to me fast and dirty.\" \n\nMark hadn't been aware of the erection in his pants until she said that, which caused his hard-on to throb so suddenly it almost shocked him. He pursed his lips as he fought to control himself. All the while, Alexandra looked on in amusement. \n\n\"Okay,\" he said finally. \"My teacher and I are lovers.\" \n\n\"Bien,\" she said easily, taking another sip. \"The best way for our youth to be trained is if their professeurs are readily involved with them.\" \n\nMark ignored that logic for the moment (not that he objected to it) and continued. \"Before that, I found a time machine. You... you know what I mean by that?\" \n\nShe nodded. \n\n\"We came back to the Sun King's France to have some fun. Chester was attempting to educate us about how to safely observe history and led us to a small event.\" \n\n\"And this is where everything, as New Worlders from tomorrow will say, 'went south'.\" \n\n\"Yeah,\" he said heavily. \"Becky and I got tired of waiting for the event and figured we were hiding, so we started, y'know...\" \n\n\"Fucking?\" Alexandra posited. \n\nMark nodded, hopefully concealing the shiver that raced through him when she said that word. \"I guess we got a little too loud, because suddenly we were surrounded by men with guns and pikes and they took us to an encampment not far away, one dominated by red tents.\" \n\nThe blonde woman's eyes narrowed almost imperceptibly. \"Richelieu.\" \n\nMark nodded. \"He decided that Becky would be-\" \n\n\"Excuse,\" she interrupted, apparently wanting to clarify something. \"Becky?\" \n\n\"Yeah, uh, my teacher, Rebecca.\" Mark confirmed. \n\n\"Becky,\" Alexandra repeated quietly to herself, as if trying to get a taste for the word. \"What a delightful diminutive. Women named Rebecca in this day are not so blessed. Please, continue.\" \n\n\"Uh... anyhoo, I-\" \n\n\"Who?\" Alexandra asked, confused. \n\nMark screwed his face up for a moment. He was getting so comfortable talking to this woman, it was difficult to remember he knew absolutely nothing about her. \"It's... a slang term from my time, meaning anyhow.\" \n\nShe tilted her head. \"Anyhow?\" \n\nMark paused. \"Anyway?\" \n\n\"Yes, that one I know,\" she said, smiling. \"Anyhoo, please continue, my friend.\" \n\nMark nodded, happy to be back on course. \"Richelieu took Becky and one of his captains shot me in the stomach with a pistol and they all left me for dead.\" \n\n\"And yet, tabernac, here you are, hale and hardy.\" Alexandra mused. \"I may assume that our mutual associate Chester is the one that healed you?\" \n\n\"That's what I'm told.\" Mark agreed. \"Wasn't really conscious for it.\" \n\n\"Now I understand that you had been shot and were in the process of dying, but did you happen to hear anything the Cardinal or his men said about their plans for your Becky?\" \n\nMark nodded grimly. \"They were gonna make a gift of her to the queen. Like, turn her into a lady-in-waiting?\" \n\n\"And that is where I fit into this,\" Alexandra said gravely, her voice deeper than it had been. \"He is asking me to help you rescue your teacher, so that you may return to your own age.\" \n\nMark nodded again. \"He didn't say it, but it sounded like he was calling in a big deal.\" \n\nAlexandra rolled her eyes and hook her head, smiling lightly. \"No, he just doesn't want this to come back on him somehow, since he sent you into harm's way with Richelieu, whom he has several... 'entanglements' with. I'm not quite sure what he was thinking, he despises the Cardinal.\" \n\n\"Good to know he didn't do it on purpose,\" Mark muttered. \"The last guy in your time who tried to dick us around, Becky was not kind to him.\" \n\nThe hostess raised an eyebrow. \"Oh? Might one inquire?\" \n\n\"He recommended an inn to us, in a small town, then sent thugs to rob us. Becky... took that very personally.\" \n\n\"I can understand,\" she said lightly. \"Please, do go on.\" \n\nMark blushed again. \"We were having sex in our bathing tub in our room when the thugs burst in just as she was about to... well...\" \n\n\"L'orgasme.\" Alexandra said helpfully. \n\n\"Yeah, that. Becky was really pissed about it and she pretty much beat the living shit out of all of them.\" \n\n\"I like the sound of her already,\" she mused, smiling. \"Mais, where were you?\" \n\n\"Oh, I helped, don't worry,\" he replied, allaying her apparent fears that he'd been hiding in a corner. \"It's just that... well, she was kind of a whirlwind of violence and it didn't last long. After that, she made the ringleader confess who'd sent him when she jammed his pistol up his ass.\" \n\n\"Sang-Dieu, she sounds quite terrifying.\" Alexandra breathed, fanning herself for effect before pouring another cup of wine. \"Then what?\" \n\n\"Well, we spent a full week at the inn, without charge because the inkeeper let it happen, and we got all our food and wine for free, and he let us fuck his daughters all week too, provided we didn't tell anyone about the incident.\" \n\nAlexandra tittered behind her hand. \"Ma'amselle Becky, elle est bisexuelle, oui? Quelle merveilleuse! Do go on, Mark.\" \n\n\"Well, after a week of debauchery, the trail led back to the man who recommended the inn, knowing we'd be attacked. Becky got her hands on him, roughed him up a bit, then we left him tied naked on his hands and knees in the woods, with olive oil dripping off his ass. I think Becky was hoping a bunch of wolves would have their way with him, y'know?\" \n\n\"I am sure I do not, but all the same, your Becky sounds like a very strong woman.\" \n\n\"Actually,\" Mark said, blushing again. \"She reminds me of you, or you remind me of her. You actually look quite a bit alike.\" \n\nShe smiled sweetly and reached forward to touch his knee. \"High praise for me indeed, then. Am I right in assuming that she speaks French since you do not?\" \n\nMark nodded. \n\n\"Then she should be safe inside the Louvre, which is where my mistress the queen is currently staying,\" Alexandra concluded. \"So his Eminence is playing another little game, to make my mistress feel bad by bringing beautiful women into her service? We shall see to this, Mark, I promise you.\" \n\n\"Thanks,\" he said. \"I really, really appreciate this. You have no idea.\" \n\n\"She must be very special to you.\" Alexandra said slyly. \n\n\"Well, we're not in love, or anything,\" he said hastily, wishing he didn't have to keep explaining this. \"But yeah, I guess you could say we're fond of one another, and she's the only person I time travel with.\" \n\n\"Were I you,\" Alexandra said, sitting back now and taking another sip of one while crossing one leg over the other. \"I would try to keep it that way. It has been explained to me, and it seems perfectly logical, that things just get more complicated when you involve other people or try to do too many things?\" \n\n\"You don't look at all like you're from this time,\" Mark admitted. \"Are you actually from the Sun King's France?\" \n\nShe nodded. \"That I am, to a noble family of ancient lineage, going even back to the reign of Charlemagne. But in service to my queen, I take very good care of myself and am in the peak of health.\" \n\n\"No kidding,\" Mark breathed, earning a smirk from Alexandra. \"Chester said you're good with a sword?\" \n\nShe shrugged in a non-committal manner. \"Suffice to say that I am not afraid to take on Les Troi Inseparables.\" \n\nMark assumed that she meant Athos, Porthos and Aramis. \"D'Artagnan too?\" \n\nShe laughed, a beautiful, crystalline sound. \"Aye, even the irascible Gascon. Nor do I cringe before the Duke of Buckingham, who is said to be the greatest swordsman in Christendom, barring possibly my brother.\" \n\n\"No recognition for you?\" \n\nShe shook her head. \"I dare not, my service to the queen would be compromised. I am not driven by fame, Mark, but devotion and duty. Secrecy is all that allows me to continue in my task.\" \n\n\"You're like Wonder Woman.\" Mark laughed. \n\nShe looked at him and tilted her head. \"Comment?\" \n\n\"A fictional heroine from my own time,\" he said, waving it off. \"She's powerful, she's brilliant, she can fight, she can fly, she's compassionate. They've been writing and drawing stories about her for about seventy years now.\" \n\n\"It sounds fun,\" she sighed. \"But I do not wish to be ensnared in these time troubles, and I do everything I can to avoid them. The less I know, the better. Protecting my queen is enough.\" \n\nHe nodded. \"I promise to try and not add to your troubles in this, and I'm sorry.\" \n\n\"You needn't be,\" she said easily, draining her glass. \"The debt I owe Chester for this is many years old, I am surprised that he has not called it in before now, to be honest. How long has Becky been at the Louvre?\" \n\nMark thought about that. \"Uhhhh... a week to get to the palace from where we were... then three weeks... and then it took me a week to get here, so best guess is four weeks.\" \n\nAlexandra nodded and considered. \"The initial intense scrutiny she would have been under will be relaxing after a month. They are no doubt still training her, but she sounds very bright, so they will be eager to move her into the court.\" \n\nMark nodded. \"Alright, what do we do? Run in with pistols blazing and swords unsheathed?\" \n\nShe paused in her ruminations and looked at him for a moment before shaking her head slowly, saying nothing. She poured herself another glass of wine and nocked it back before sighing and returning to her thoughts. \n\n\"Uh, may I ask a question?\" Mark said somewhat meekly. \n\nAlexandra looked at him and waited. \n\n\"If... you're one of the queen's ladies-in-waiting,\" Mark said somewhat awkwardly. \"Shouldn't you have at least seen or have heard of Becky by now? I gotta admit, she's like you, she's really hard to miss.\" \n\nThe French woman smiled prettily. \"I have been away some two months now on a delicate errand for my queen, one that took me south to Spain.\" \n\n\"Pretending I was from Spain got me shot.\" Mark grumbled. \n\nAlexandra raised her eyebrows. \"Ah, tu hablas espa\u00f1ol?\" \n\n\"Nooooooope,\" Mark said, holding up his hands. \"Not goin' through this again. So, what do we do, Miss... uh, Miss...\" \n\n\"Just call me Alexandra, cher,\" she said easily. \"And if we become friends, you may call me Alexa.\" \n\nHe nodded. \"Okay, Alexandra. What is our plan?\" \n\n\"I shall think on that,\" she replied. \"We will not be doing anything until at least tomorrow, I assure you. I only returned this morning and even the queen does not know I am back yet. That being said, you will be my guest here in my private apartments.\" \n\n\"Uh, okay,\" he said. \"That doesn't sound too bad, I guess.\" \n\n\"It is convenient, for one thing, but another is perhaps a bit more personal and selfish on my part,\" Alexandra added. \"Be honest with me, Mark.\" \n\n\"Okay.\" \n\n\"Would your Becky be hurt or jealous if you and I were to fuck?\" she asked plainly. \n\nMark thought about that for a moment and then shook his head. \"She'd probably think there was something wrong with me if I didn't to be honest. Besides, if she thinks I'm dead, what's the harm?\" \n\n\"Bien,\" the woman stated, nodding and standing. \"Tonight, you and I shall, oh, what is that English saying... ride below the crupper.\" \n\n\"Never heard that, but I'm in,\" he said, chuckling. \n\n\"And do not worry, unlike most people of this day and age, I bathe daily, so you should not find my closeness offensive.\" Alexandra added. \n\n\"I'm pretty sure you could smell like a Republican healthcare bill and I wouldn't notice,\" he laughed. \"Don't you have quarters at the Louvre?\" \n\nShe nodded. \"Oui, but my mistress allows me to stay here when possible, since I am closer to the people of Paris this way. I can look out my window, see them and remind myself of my duty to them.\" \n\n\"You're pretty complicated for a noblewoman.\" Mark admitted. \"History doesn't think much of your class of people.\" \n\n\"A deserved indictment, no doubt,\" she sighed. \"Alors, I did not keep you here to bore you with such ephemera, I intend to pleasure you before making you risk your life again in the days ahead.\" \n\nHe watched from his chair as she slowly turned around and began to remove the rather poofy blouse she was wearing, revealing her shapely back. She was beautiful, but now he could see the lines of athleticism in her shoulders and torso, and still somehow with the affectation of being delicate and womanly. Alexandra then lifted one leg and removed her short boot deftly, followed by the other. Her feet were surprisingly dainty, but they seemed to be planted firmly on the floor. \n\nUndoing the tie of her breeches, she wiggled them down over her lovely hips, exposing her incredible behind. She bent over to push the article of clothing down the rest of her statuesque legs and in spite of the dim light, he could almost see her pussy just below those temping cheeks. \n\nShe stood up straight and stepped elegantly out of the pool of her breeches, putting her hands over her bust as she turned her head to smile at him coyly. As he watched, she slowly came around so she was facing him now. If Mark's jaw could have literally fallen off, it would have. In the flickering candlelight, she was bewitching to behold. Her skin was creamy and flawless, fair and yearning to be kissed. Her womanly hips carried strength, melting into her glorious legs. Her womanhood was hairless, something he didn't associate at all with the period. \n\n\"So, do you like what you see?\" she purred, enjoying his reaction. He nodded dumbly and she allowed her hands to fall away from her breasts, revealing them. Large and perfectly shaped, sitting high no doubt because of her strong back and shoulders, and crowned with small, pink nipples that made his mouth water. \n\n\"Now perhaps it is time for you to show me,\" Alexandra said softly, smiling. \"Stand up and let me see you, Mark.\" \n\nHe couldn't do a thing about his hard-on, so he didn't even bother trying to conceal it. Still sitting, he removed his boots and socks before standing. Without any of the grace displayed by his new lover, Mark fumbled off his shirt, revealing his chest. He wasn't overly muscular, of course, but he had more than enough tone and definition because of the sports he'd played. She smiled and just watched quietly. \n\nHe undid the tie of his breeches and bent over to pull them off. When he stood back up, his cock sprang to full attention, wobbling in front of him slightly. Alexandra nodded, apparently in approval. \n\n\"Men of days to come seem to be gifted.\" Alexandra stated in a sultry voice as she stepped forward, moving toward him. Mark could feel his heart thundering in his chest as the blonde goddess got closer and closer to him. She was then standing directly in front of him, her glorious body almost touching the tip of his pulsing erection. He thought he might cum right on the spot. \n\nHer perfect hand slowly reached out to take hold of him, the fingers wrapping around gently and giving him the lightest of squeezes. \n\n\"And now,\" she said in a whisper. \"We shall-\" \n\nThe lock on the door clunked before it flew open and in stepped a young woman with wavy dark hair and eyes, apparently not noticing the activity within. \n\n\"I am back, mistress,\" the girl chirped as she shut the door and locked it again. She seemed cheerful and energetic, her green dress twirling about her prettily. \"I bought some wine and also the soap packets that you- oh! My apologies, mistress, I did not know you were busy!\" \n\n\"Do not worry, Lisette,\" Alexandra said easily, clearly not at all surprised to see the girl while Mark just gaped. Her hand was still on his cock and stroking gently as she acknowledged the newcomer. \"You're just in time to share dessert with me...\" \n\n*** \n\nAuthor's Notes: Yup, surprisingly little sex this time around, and lots of temporal stuff. If you have complaints or tantrums, they'll be handled by the fire-breathing dragon in the next booth over. Buh-bye. \n\nI have a weakness for intimate detail. And where I give it to such things, I try to keep the mood and reading relatively light, so that it isn't drudgery. I wanted to establish some temporal things early on, rather than later. Don't worry your thirsty selves, there's plenty of depraved sex to come. \n\nAlexandra is not a spin-off story I'm publishing here, but rather an erotic novel I'm legit publishing. I know I'm not allowed to promote my stuff, so I ain't gonna, I simply wanted to straighten that out and I just felt like using her as an incidental character. It'll be fun. \n\nMark getting shot by Richelieu's men is hopefully unexpected and took at least a few people by surprise. He's still something of a doughhead when it comes to temporal mechanics (okay, a LOT of a doughhead), who spends half his time thinking the universe is trying to cock-block him and the other half, trying to learn before he gets his ass killed. And he ain't happy about it. \n\nBecky, as you may have noticed, has an irascible side to her. Her rant at Richelieu about not dancing a Sarabande for him refers to an incident in Dumas' Three Musketeers novel where the Cardinal embarrassed himself by dancing a Sarabande for a woman he wanted to impress and she laughed at him. Since Becky couldn't physically reach him, that was probably the best she could do. \n\nIt amused me to add the little Airborne dig in there. Ironically, these modern voodoos won't save you from Medieval illnesses, but the Bubonic Plague apparently kills the HIV virus, as does malaria. Go figure, eh? \n\nLooking at my handy-dandy publishing schedule, it sez that Twin Cities Tryst is up next. Janie and I continue to light up the town, drink-by-drink, and stripper-by-stripper. Hope to see you there. \n\nKeep your stick on the ice! \n\nManagement."
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "humour",
        "time travel",
        "historical fiction",
        "mild violence",
        "anal",
        "public sex"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/time-rider-ch-03"
}