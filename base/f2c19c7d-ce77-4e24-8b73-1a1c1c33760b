{
    "title": "Dragonborn Rising Ch. 08",
    "pages": [
        "Chapter 8 - Revenge and Rebuild\n\n*****\n\nMy body ached. I'm sure I'd smacked my head on something as my vision was still blurry. But I felt a presence next to me. \"When Brynjolf brought you before me, I could feel a sudden shift in the wind. And at that moment, I knew it would end with one of us at the end of a blade.\"\n\n\"Tell you what, Mercer. Just give me the Skeleton Key and I'll forget about everything else you've done. But you'll have to leave Skyrim. Can't have you hanging around here.\"\n\nThat made him laugh at me. I was hoping to distract him, but Karliah nor Brynjolf were not attacking. I wondered why. Then my vision finally cleared and I could see the blade he was holding, ready to strike. His eyes were only for mine though. I thought I'd seen hatred, but his? He thoroughly despised me. \"What's Karliah been filling your head with? Tales of thieves with honour? Oaths rife with falsehoods and broken promises? Nocturnal doesn't care about you, the Key or anything having to do with the Guild.\"\n\n\"Okay, I'll answer each question. Karliah told me the truth about you, the fact you're a conniving cunt. I do believe in honour amongst thieves. And the oath I've taken in regards to Nocturnal will ensure the success of the Guild once we return the Skeleton Key. It is all your fault, Mercer. You caused the influence of the Guild to slowly but surely ebb away.\"\n\n\"t's clear you'll never see the Skeleton Key as I do. Don't you see, it's an instrument of limitless wealth. Instead you've chosen to fall over your own foolish code.\"\n\n\"Don't you read the stories, Mercer? The bad guy never wins! I'll take pleasure putting a sword into your gut.\"\n\nBefore he could react, I rolled out of the way, unsheathing my sword at the same time, so that by the time I was on my feet, I had sword and shield in hand. \"Getting slow in your old age, Mercer. A young warrior wouldn't have wasted time talking. He would have put a sword in me immediately. That's your problem. You're full of hot air.\"\n\n\"Then the die is cast, and once again my blade will taste Nightingale blood! Karliah, I'll deal with you after I deal with your irksome companions. In the meantime, perhaps you and Brynjolf should get better acquainted.\"\n\nI glanced to see the pair of them start to fight each other, so figured Mercer had used some sort of spell. I knew next to nothing about magic, so simply ignored them. My eyes were for Mercer. Remembering he wielded dual blades, and he was fast, I remained circumspect to begin with, confident in my own talents, and in the fact my new armour would protect me.\n\nHe was fast, I'll give him that, and I was on the back foot for quite a while, but I had plenty of experience myself despite my youth, and I had been the most trusted lieutenant of Guild Master Corvus of Cheydinhal. I knew how to fight, but sometimes a better defence was worth more than a good offense. So I let Mercer attack me, believing he was gaining the upper hand. Don't get me wrong. Constantly defending was tiring, but I was waiting for the first mistake, just a moment where he left an opening that would allow me to strike.\n\nMost fighting is not only about how you swung a blade. It was about how you positioned your body, and perhaps the most important facet of swordplay was actually footwork. So I watched his blades while judging where he would place each foot. And what I always remember was that, in a fight to the death, things like honour are quite quickly forgotten. If you had to, use anything to your advantage, and don't worry about fighting dirty.\n\nWhat didn't help us was the fact there was that the very ground started to shake, and one of the pipes high above us burst, pouring water down, and I knew that the chamber was slowly but surely going to flood. I moved backwards onto dry ground, and with the higher ground, I started to use that to my advantage. I managed to put a boot into Mercer's face, leaving blood pouring from his nose, and a minute later, finally managed to disarm him with a perfectly timed parry and swipe that sent his sword clattering into water.\n\nNow with only one sword, I could finally get on the front foot, and with sword, shield, elbows and kicks, I wore down his defences. I wasn't going for a killing blow immediately, I wanted to disarm him, then give him the coup de gr\u00e2ce. Once I realised he was starting to tire, I pressed home my advantage, and when his second sword was sent flying, he was probably expecting an immediate killing blow. He wasn't going to get that just yet as I grabbed him by the hair and dragged him up the stairs to the top the statue. Pushing him onto the head, I kicked out his legs, forcing him to his knees. Looking past him, I could see Brynjolf and Karliah no longer fighting.\n\n\"Do it, Ragnar!\" Karliah called.\n\n\"What about you?\"\n\n\"As long as he dies.\"\n\nI placed the blade to his neck. \"Feel that, Mercer? That is death on your shoulder. You fucked with the wrong man.\"\n\n\"You're just another stooge for Nocturnal.\"\n\n\"No, I'm about to make all of us very rich, Mercer. I'm going to help rebuild the Guild and restore our reputation and influence. You will lie in this chamber, quickly and quietly forgotten by all.\"\n\nThere was no time to waste as I could see the water continuing to flood the chamber, and I took his head with one clean strike, his head simply falling to the ground. I searched his body, finding the Skeleton Key in one of his pockets, putting that in one of my own. Karliah and Brynjolf joined me, both carrying an Eye of the Falmer. Wondering how the hell we were going to get out, we were saved as the roof caved in, exposing a hidden cave. I liked to think it was Nocturnal looking after us, aware we'd retrieved the Key.\n\nWe walked towards the entrance of the cave without exchanging a word, realising we were going to have to walk back to find our horses. We'd been in the ruin for quite a while as it was now rather dark too. As it was warmer in the cave, we headed back inside and Karliah managed to get a small campfire going. We would go hungry as we had no supplies otherwise.\n\nSitting down, she finally said, \"I can't believe it's over. After twenty-five years in exile and just like that, it's done. All that remains is to ensure the safe return of the Skeleton Key.\" She paused before adding, \"I'm actually glad you killed him. I would have tortured him first, given him just a taste of what I'd been through for a quarter of a century.\"\n\n\"How do you feel?\" Brynjolf wondered.\n\n\"Relieved that it's over. Justified at the measures taken. Sad because I think about what might have been otherwise...\"\n\nThere wasn't a whole lot else to say and the three of us eventually just leaned back against the cave wall and slowly drifted off, Karliah ensuring she was close enough to have her head rested against me. I had no doubt she still had love in her heart for Gallus, so what would actually realistically happen between us was what she eventually decided.\n\nWe were further away from the entrance to Irkngthand than we realised, so the three of us were rather cold and miserable, in addition to very hungry, by the time we made it back to our horses. Karliah suggested we head back to Riften first before we discuss the next and hopefully last stage of what was required to complete the agreement with Nocturnal. I thought that was a sound idea, and we agreed that we would keep riding until we made Riften stables. It took longer than a day, but riding at night wasn't such a problem, one of us dozing as the other two kept a look out.\n\nAt least it was daylight by the time we made it back to Riften, but the three of us were exhausted. Brynjolf and Karliah headed to the Flagon, and we agreed to meet the next morning. I headed into the Bunkhouse. Haelga was cleaning one of the dining tables, and once I'd removed my hood and mask, she burst into tears and ran towards me. I held her tightly as she wept. \"I'm okay. It's over,\" I whispered.\n\n\"I was confident in whatever you were doing, but so worried at the same time.\" She leaned back and looked down. \"New armour?\"\n\n\"It's a long story and slightly unbelievable. But the new armour is excellent.\" I couldn't help the sigh that followed. \"Mostly I'm just exhausted, hungry and really want a wash.\"\n\nShe gave me a soft kiss on the lips. \"Head upstairs and I'll bring up a little food and some hot water for you.\"\n\nOnce up in her bedroom, I immediately stripped off my new armour, laying down on the soft bed and near enough falling straight to sleep, only woken when shaken awake by Haelga. \"Tired?\"\n\n\"Exhausted. Had a quick nap on horseback but otherwise been awake for longer than a day.\"\n\nGetting up, I removed my underwear before she asked me to sit down. She then stripped herself nude before grabbing the bucket of hot water, and after adding a little oil, she used a cloth to start washing me. She enjoyed running it over my arms and shoulders, spending plenty of time scrubbing my chest and back, and went so far as to clean my legs and feet. All this touching made me quite hard, and after she towelled me down, she kneeled between my legs and eagerly took my cock in her mouth.\n\nI could only let my head roll back and groin as she quickly took my entire length, her head bobbing up and down. Like always, it felt wonderful, proving her skills with her mouth and tongue time and again. But while I would have loved nothing more than finishing in her mouth, I wanted something else. Suggesting what I did want, she happily removed her mouth and positioned herself over my cock, lowering herself down without stopping until my entire length was inside her pussy.\n\n\"I'm not going to last long,\" I warned, \"And I'll want a nap afterwards.\"\n\n\"That's fine,\" she said softly, wasting no time bouncing up and down. I moved my lips to her neck, immediately giving that a hard enough bite to leave another mark before she arched her back so I could lick and suck at her breasts. \n\nHaelga was soon making a lot of noise as always, while I was just trying not to cum too quickly. But all the washing, the blowjob, and now her tight, wet pussy was just too much for me, and I held her tight as I thrust up and came, groaning loudly enough that I'm sure Svana heard downstairs, though I'm sure she probably knew what we were doing anyway. Haelga settled down on my lap as we continued to make out, our kisses now soft but still full of passion and desire. Eventually it was my turn to rest my head on her chest.\n\nShe eventually stood up and, after a quick clean up, helped me into bed. Leaning down to kiss me again, she whispered that she still had work to do, but as soon as she was finished, she'd be up to join me. I said I'd probably sleep until the next morning. \"What if I woke you up offering you my arse?\"\n\n\"Well, maybe... But I am really tired!\"\n\nThat made her giggle, she kissed me a last time, and I was probably asleep by the time she was out the door.\n\nShe came in quite a bit later, waking me up with her offer. I'd had enough sleep to at least rise to the occasion, and thankfully she was happy enough to just ride me, shoving her toy in her pussy at the same time, and she had quite the orgasm once I blasted in her arse. We both slept like logs a little later\n\n.\n\n*****\n\nMy hand was sore from all the handshakes I'd received since entering the Flagon. Everyone was delighted to hear that Mercer Frey was dead, and more importantly, that the Guild was on the verge of being restored to what it once was. Karliah and Brynjolf were waiting in the cistern, where we would discuss the final part of the rebuild.\n\n\"Sleep well, Ragnar?\" Brynjolf asked.\n\n\"I don't know about you, but I was bloody exhausted.\"\n\n\"Aye, we slept like logs too.\" Then he cleared his throat. \"Look, before we get down to the returning of the Skeleton Key, we've actually got something we need to discuss.\"\n\nI glanced at Karliah before asking carefully, \"What?\"\n\n\"The leadership of the Guild.\"\n\n\"Well, clearly it should either be yourself or Karliah. Frankly, it should be Karliah, as recompense for everything she's been through.\"\n\n\"I've been at this game a long time, my friend. A long time. I've stolen trinkets from nobles and framed priests for murder. I'm good at what I do, maybe even one of the best. But it's all I know. I've never been one to lead. Never desired it, never cared for it. Don't want it.\"\n\nI looked at Karliah and she added her thoughts. \"There's only one man who we agree should lead the Guild, Ragnar. Delvin and Vex agree too. Thanks to your efforts, Mercer's treachery has been exposed, and once we've returned the Key, all we need to do is ensure our influence spreads across Skyrim once again. As a result, we both feel that you have the potential of replacing Mercer as leader of the Thieves Guild.\"\n\nI ran a hand through my long hair. \"Seriously?\"\n\nBrynjolf laid a hand on my shoulder. \"Look, lad. Everyone in the Guild admires what you've done. Maybe they won't come out and simply tell you, but I promise you it's true. And now they know Mercer never genuinely cared about the Guild. He lacked the loyalty you obviously possess. I can't think of anyone better.\"\n\nI looked at Karliah. \"What he says is one hundred percent correct, Ragnar. And in Brynjolf and I, you will have people who can guide you as we rebuild the Guild.\"\n\n\"I'll think about it. Let's return the Key and start spreading our influence again. All being well, I'll accept.\"\n\n\"Good,\" Karliah stated, \"So that means we can discuss what we need to do next. And, unfortunately, it's not going to be simple. When the Skeleton Key was stolen from the Twilight Sepulcher, our access to the inner sanctum was removed. The only way to bring it back will be through the Pilgrim's Path.\"\n\n\"And that is?\" I wondered.\n\n\"To be honest, I'm not sure. It wasn't created for the Nightingales. It was created to test those who wished to serve Nocturnal in other ways. As a consequence, I have no knowledge of what you'll be facing.\"\n\n\"Will you come with me at least?\"\n\n\"I can't, Ragnar. I've been a Nightingale for a very long time. I sold my allegiance to Nocturnal in exchange for many profitable years of thieving. Falling in love with Gallus was wrong. It was a distraction that allowed the Sepulcher to be desecrated and it likely cost him his life. Until the Key is returned, I will never set foot inside that place again.\"\n\n\"Okay, will you at least make the journey with me? Brynjolf, you're welcome to join us too.\"\n\n\"I'll stay here, lad,\" he replied, before turning to Karliah, \"But you should go with him, Karliah. Keep him company.\" His tone was slightly suggestive, something both Karliah and I heard. With her face uncovered, the blush was noticeable. She looked rather shy and very cute when looking away.\n\nBut she immediately agreed, and we didn't really need to make any plans except gather some supplies and head to the stables. Karliah knew the way.\n\nWe made it to Falkreath as the sun was setting, Karliah suggesting we head into the woods to make camp. I liked the idea, and we rode for another twenty or so minutes, tying our horses to a tree, and as Karliah set up the tent, I went to find wood for a fire. I managed to get that lit rather quickly, and with the supplies we'd brought, we managed to sate our hunger, at least for something regarding our stomachs.\n\nSitting side by side on a log, the moon now out and stars twinkling above us, Karliah cuddled into me as it was rather cool around Falkreath. \"Were you intimate with your woman last night?\" she finally asked.\n\n\"I was. Why do you ask?\"\n\n\"Just wondering.\" She paused, before adding, \"I wasn't lying about falling in love being a mistake. I was a distraction to Gallus. I'm not saying I got him killed, but he was so enamoured by me that he failed to see what Mercer was doing right under his nose.\"\n\n\"Did you see it? What Mercer was doing?\"\n\n\"I never trusted him completely, but he and Gallus had been friends for years, so I think Gallus gave him wiggle room and enough rope to finally hang himself. I don't think he ever imagined Mercer would have ever turned on him in such a manner.\"\n\n\"Don't blame yourself, for Mercer or Gallus. Mercer had everyone fooled, most importantly Gallus. And there's nothing wrong with falling in love.\" I paused before adding, \"Though I guess certain acts don't require love, just an attraction...\"\n\nShe burst into laughter. \"Smooth, Ragnar. Very smooth.\" She cuddled into me. \"When we return to Riften, I think we should discuss it. No, scratch that. There's nothing to discuss. You should just carry me to a bed, strip me off and do what we both want.\"\n\n\"I'm going to need my own place...\"\n\n\"Why not Riftweald Manor? Mercer is dead and it's better in your hands than someone else's.\"\n\n\"Hmmm. Not a bad idea. I'll have a chat with Maven, as I believe she still owns the land itself. Considering I have a decent relationship with her, I'm sure she won't mind handing it over to me.\" I paused before asking, \"I assume that is a subtle hint that we won't be getting naked tonight?\"\n\n\"Part of me really wants to, Ragnar. It's been twenty-five years since I felt the touch of a man. But another few days won't make a real difference. I want a warm room and a soft bed for the first time we make love.\"\n\n\"Make love?\"\n\n\"You will have to be gentle with me, Ragnar. Firstly, because it's been so long. And, secondly, because I know you're gifted.\" I groaned, causing her to giggle. \"I'm sure I'll still be surprised.\"\n\nWe snuggled under the furs at little later, and it didn't take long under our kisses turned hot, heavy and suggestive of what we both really wanted. When she ended up straddling my lap, she definitely felt the erection, unable to stop herself grinding against it despite being clothed. My hands were on her arse, enjoying how firm it was. I had a very good idea of how she was going to look naked. I immediately had a thought of Jenassa and figured Karliah was going to be even fitter.\n\nShe eventually had to stop, stating if we kept going, she would give into temptation. So she slid off me and cuddled into me instead. She apologised for apparently teasing me, though I didn't mind. She was a great kisser, and sometimes a make out session could be just as much fun as anything else.\n\nThe Twilight Sepulcher was hidden away a section of forest probably rarely if ever visited, though was no doubt likely protected by magics and whatnot. Karliah was with me as far as the entrance before she insisted that she would go no further until I'd returned the Key. She hugged me and wished me good luck before I wandered inside.\n\nIt was rather dark and the entrance was nothing grand. In fact, it looked rather abandoned, as if unvisited in decades. Figuring there was little time to waste, I headed straight to the set of stairs ahead, though my progress was halted when a spirit, or perhaps it was a ghost, approached me in return.\n\nAfter a short conversation, I realised it was Gallus. I told him what happened and that I was returning the Skeleton Key. But when I told him Karliah was still alive, the joy in his voice told me everything I needed to know. Even as a spirit, his heart was still full of love for her. He couldn't tell me much about the Pilgrim's Path, but he admitted that he was slowly dying, the longer the link between us and the Ebonmere remained broken. It was a subtle suggestion for me to hurry.\n\nThere were five tests in all. The first room was guarded with Nightingale spirits, and I had to sneak by them. Despite my size and bulk, I could be surprisingly fleet of foot, and using the shadows to my advantage, sneaking by them wasn't particularly difficult. In the second room, I discovered quite quickly that the light burned, and I had to be careful where I stepped, otherwise I'd find myself shot by poison darts. Sticking to shadows, I took my time getting past all the traps, as though in a hurry, I didn't particularly want to be burned or shot.",
        "The third room was a simple test. Pull a couple of chains, extinguish the flames, darkness restored. The fourth test was where I had to take a choice of path. Both were difficult, and I eventually took the right path, where I had to time my run to avoid swinging axes and spears that would have skewered me. It took a light step, speed and a dive over a pressure plate to get through safely.\n\nWhoever designed these tests should be found and made to do it themselves.\n\nThere was nowhere else to go at the end except to drop down into what looked like a dry well. I could see a pile of bones at the bottom, so figured the poor bastard had dropped down and slowly starved to death, but with no other option, I dropped down. After a few minutes, I thought I'd made one hell of a bad decision, but as quickly as I thought that, the well disappeared, nothing more than an illusion, as I found myself dropped into what appeared to be a shrine. Taking the Skeleton Key from my pocket, it had a glow, and stepping forward, I inserted it into the lock.\n\nI stepped back, briefly blinded by bright light, and it was then that Nightingale herself appeared in front of me. She gave a long speech, suggesting I was now her 'Champion', which sounded good, but she also suggested that the luck that had deserted the Guild would return, and that our hands would once again be guided by the forces at her disposal. It ended with a subtle suggestion, if not warning, for the Key not to be stolen again. And as quickly as she had appeared, she disappeared.\n\nKarliah must have realised that I'd returned the Key, as she appeared at my side, and it was there that she could enjoy a final goodbye with Gallus. They spoke of the love they had once shared, and hoped to be reunited in the Evergloam once Karliah passed from the world too. After sharing a fond goodbye, Gallus disappeared, though Karliah assured me that he would be waiting for her once her debt was repaid.\n\nWith the link restored, there was a portal that led us back to the entrance and exiting out into the bright light, I heard the sigh Karliah gave. Then she turned towards and hugged me, and it was little surprise her entire body shuddered as she wept, I think releasing all the pent up emotions she'd been hiding since I first met her at Snow Veil Sanctum.\n\n\"Thank you,\" she said once she'd expelled all her tears.\n\n\"For what?\"\n\n\"For everything, Ragnar. For helping and believing me. For helping me bring Mercer to justice. Everything you've done allowed me to say goodbye.\"\n\n\"I guess you never got to say it,\" I said quietly.\n\n\"No, and now that I have, I can properly move on with my life.\"\n\nLifting her chin with my finger, I asked, \"Before we make that leap, you are aware...\"\n\n\"I am, Ragnar. I'm not expecting you to change. Besides, we'll be busy working, won't we? But it would nice to return to Riften and know you might be there waiting for me.\"\n\n\"Like me, eh?\"\n\n\"I do.\"\n\n\"Good. As I've already let you know what I think.\"\n\nWe mounted our horses and began our journey back to Riften. We camped halfway between Falkreath and Riften, stopping as the sun began to set, and Karliah proved rather sneaky as she unveiled a bottle of wine that she'd hidden away. We made a series of toasts and a couple of drinks helped us finally relax completely, and Karliah asked me plenty of questions about my previous life. I'm generally an open book, probably not always the best thing considering my line of work, but I'm usually honest about most things.\n\n\"You escaped the life. Why did you return?\"\n\n\"Because I never lost my skills. Even when working with the Fighter's Guild, I could be walking through a crowd and I could pick a dozen marks, knowing exactly what I'd have to do to nick a coin purse, jewellery or anything else I wanted. I never lost the desire. The only reason I stopped was that I was nearly killed, so thought I should change the road I was on.\"\n\n\"There is certainly a thrill to what we do.\"\n\n\"Aye. I enjoyed working as a fighter. I'd happily do it again. But I was raised a thief, I'm bloody good at it, and what I know now is that we're all going to make a lot of coin. But I will be instituting some changes before we get to work.\"\n\n\"What sort of changes?\"\n\n\"I'll let you know when the time comes. But we're not just going to be about gold and wealth.\"\n\nKarliah gave me a look, and I think she understood what I might mean. I knew what I meant, as the idea had been in my head since Brynjolf suggested I should be the new Guild Master. I'm sure some might not like the idea, but while I was a thief and warrior at heart, I also tried to do the right thing, as a balance for the things I knew I was doing wrong.\n\nReturning to Riften by early afternoon the next day, Karliah went straight to the Flagon while I made a beeline for Maven's house. She was home and we sat at her dining table as I began to explain everything that happened. She knew about Goldenglow and Honningbew, but knew nothing about anything Mercer had been up to and his complete betrayal of the Guild. That took her completely and utterly by surprise. \"I had absolutely no idea he was capable of something like that,\" she admitted.\n\n\"And that's why he is now dead and the Guild will be restored.\"\n\nShe smirked. \"So... I take it you are the new Guild Master? I can assume you are from the way you're talking, and the fact it is you here now.\"\n\n\"It's not official yet, but yes, I will be.\"\n\n\"Then we will have a rather close relationship going forward, Ragnar.\"\n\n\"How close, Maven?\"\n\nI felt a foot run up my leg and it eventually nestled in my crotch. All she did was look at me in the eyes. \"Depends on you really, Ragnar.\"\n\nI had to be blunt. \"You're serious? What about Ingun?\"\n\n\"What she won't know won't hurt her. I'm a flesh and blood woman. And I think you'll be rather intrigued by some of my desires.\"\n\n\"Are you married?\"\n\n\"I'm widowed. The men you see in this house are my sons.\"\n\n\"Let me think about it.\" To be fair, she was simply an older version of Ingun. Seeing them walk side by side in town, they looking remarkably similar. \"What I did want to ask about is Riftweald Manor. Now that Mercer is dead, the house will be empty. Can I have it please?\"\n\nShe laughed. \"I don't get to make that choice, Ragnar. It's up to you as Mercer owned the house and land. I gave I all to him, so if you find the deeds somewhere, take them to the jarl and the steward will ensure the place is now in your name. You might have to pay some taxes, but I'm sure you can afford it.\"\n\nMaven thanked me for informing her of everything that happened, and I headed to Riftweald Manor. The front door was still unlocked, and I headed upstairs, looking for the deeds to the house. It took a little investigating, but I found the deeds and immediately headed to the Keep. I was pointed in the direction of her steward, and after answering a series of questions, explaining that Mercer had left Riften for pastures new, the steward didn't seem to really actually care. I handed over a bag of coin and I received new titles for the house. Riftweald Manor was now mine.\n\nAfter catching up with Brynjolf and everyone else, letting them know I'd spoken to Maven and sorted everything out, I spent a week getting Riftweald Manor in order. I practically emptied the place out of the furniture Mercer had left behind and bought everything new, making it a real home to live in, as I was not going to spend any more time living down in the cistern. I wanted a more comfortable life when not sleeping on the road. I did brick up the hidden entrance, as I didn't think that was necessary, and made sure all the windows were unlocked so I could let in plenty of fresh air.\n\nI let Haelga know I had my own place, but I sat down and explained the friendship I'd struck up with Karliah. She smiled, mentioning that I'd explained it all before leaving for Irkngthand, so she wasn't offended when I said we had been waiting for me to find a place for us to be intimate for the first time. It probably sounded pathetic when I thanked her for understanding. All she did was kiss my cheek, told me to enjoy myself and that she hoped to be my next guest. I promised she would be a welcome guest more often than not... And that I had Shrine of Dibella waiting for her in a separate room, which had certain features she might enjoy. She knew exactly what I meant, earning the most beautiful of smiles before receiving whispers in my ear of such an erotic nature, I near enough dragged her upstairs.\n\nKarliah was to be my first guest, wandering outside the gates of Riften, back towards Nightingale Hall. She had mentioned that she would now live there instead of the Guild, finding comfort in solitude, though she hoped one or two might eventually join here there. She'd been as busy as I, the bedroom she would call home already full of colour and a feel that suggested she would be rather happy there. What made her happier was the invitation to my house, with an offer of dinner too.\n\nKnocking on the door of my house later that day, I opened it and felt my jaw drop wide. Gone was the Nightingale armour she'd worn since the day we'd met. Instead, she wore a beautiful purple dress, tight to her body, flowing down to just above her ankles. Her raven hair was in a pattern she immediately explained was something all Dunmer women would wear when being courted. \n\n\"Courted?\" I asked once we'd sat down, eating the meal I'd prepared. I'm not the best cook, but I haven't killed myself yet.\n\n\"Well, I haven't just jumped into bed with you, Ragnar. We've got to know each other first. But I am also going to be honest with myself. While I will likely develop feelings as we go along, I will not make the same mistake as I did with Gallus.\" She held up a hand to halt what I was going to say before reaching across to grab my hand. \"We will be intimate, Ragnar, and I hope it will be often, because as I've already told you, I do like you. Quite a bit, to be honest. But we will remain only very good friends. That will suit both of us, yes?\"\n\n\"Actually, it would. I'm glad you said it though.\"\n\nFinishing dinner, on which I received a rather nice compliment, not that it was much to cook - meat, potato, vegetables - we retired to my sitting room, where a fire was burning and I'd bought a nice lounge where we could relax in front of it, enjoying another bottle of wine. It took all of five minutes for us to be making out. I have no doubt we desired each other completely, but I could sense we were taking our time. I didn't want to rush it with Karliah, and while I think part of wanted me to simply pick her up, dump her on my bed and just ravish her, she was enjoying the fact I just wanted to kiss her, in between sips of wine and occasional conversation.\n\nI waited for her to suggest we head to the bedroom. Once she did, I took her by the hand and led her upstairs. I received more compliments for the decoration, ensuring that there was a fusion of Dibella, though most of that was in another room for when Haelga visited, and also a hint of Nocturnal, primarily with the colours I used.\n\n\"You have nice taste, Ragnar,\" Karliah stated as we stood at the foot of the bed.\n\n\"Well, I now worship an aedra and have submitted to a daedra.\"\n\n\"Aedra?\"\n\n\"Dibella! I thought that would have been obvious.\"\n\n\"So your other woman...?\"\n\n\"Takes her Dibellan worship very seriously!\"\n\nShe turned towards me as she laughed for a moment, wrapping her arms around my neck as I rested mine on her lower back. \"So what about me, Ragnar?\" she asked softly.\n\nI sensed a trap, so asked, \"How do you mean?\"\n\n\"Well, be honest. Do you love this other woman?\"\n\nI nodded. \"In a way, I do. I know that must sound...\"\n\nShe shut me up by placing a hand over my mouth. \"I understand. You enjoy the relationship you've built with her?\" I nodded silently. \"But you also enjoy the time you spend together, not just physically?\"\n\n\"Yes.\"\n\n\"Well, as I said on the way back from the Sepulcher, is that we will be friends, close friends, who may also occasionally... Well, more than occasionally have sex. Is that what you would like?\"\n\n\"Definitely.\"\n\n\"So would I.\"\n\nThe kiss we shared next was a sigh of things to come, and I wasted no time taking off her dress, leaving her in just an exquisite pair of bra and panties, once she'd kicked off her shoes, standing around four inches shorter than me. Taking great delight in undressing me, her hands definitely wandered over my body, running a couple of fingers over the scars remaining after what happened at Snow Veil Sanctum.\n\n\"I'm sorry,\" she whispered before kissed both of them.\n\n\"Nothing to be sorry for. The fault was Mercer's.\"\n\nOnce I was naked, she stood back to appreciate my physique. I could see it excited her, and once her eyes fell to my now rather erect cock, there was the usual quiet exclamation of, \"Oh my!\"\n\nPulling her towards me, I kissed her again as my hands moved to undo her bra. I'd undone enough of those over the years that I could do it once handed, taking a moment to look at her breasts. They were small, but absolute perfect for her, a hand immediately moving to them and her very hard nipple. Running a hand down her flat, toned stomach, I ran my hand under her panties towards her pussy, unsurprised to feel she was very, very wet already. She helped me by lowering her panties and flinging those somewhere with a foot.\n\n\"Play with me,\" she whispered, breaking our kiss for a moment.\n\n\"Lie down?\"\n\nShe smirked. \"No, make me cum standing.\"\n\n\"You're confident that's going to happen.\"\n\n\"Ragnar, first of all, it's you. I mean, look at you. No wonder I've heard rumours of all these women wanting to be with you. Second of all, it's been twenty-five years. Just knowing you're going to touch me will be enough.\"\n\nShe wasn't lying, as after briefing teasing her entrance, I slid a couple of fingers inside her. It was a little awkward, but Karliah lifted a leg and wrapped around me, able to balance on just one as I fucked her with my fingers. \"Told you,\" she whispered before resuming our kiss.\n\nIt took all of five minutes before she had to break the kiss and held onto me tight, her breathing suggesting she was already very excited. I eventually had to pick her up and carry her to the bed, where after laying her down, I crouched and used my mouth on her instead. She cried out loudly when she felt my tongue on her for the first time, a hand immediately grabbing my hair to hold me in placed, noticing her legs spread wide so I had full access to her.\n\nHer orgasm arrived very quickly, far quicker than I expected. She was loud as she cried out my name, and begged for me to continue. I'm fairly sure she was crying as she did, though assured me it was simply the sheer relief of having finally had someone else make her cum after all these years. So I quite happily kept eating her out until she had a second one, that one arriving a little later. Once she'd come down from a second high, she let go of my hair and asked me to stop for the moment. So I kissed up her body, enjoying the feeling of her skin against my lips. She shuffled back so I could hover above her.\n\n\"Gods, Ragnar, where did you...\"\n\n\"Lots of practice.\"\n\n\"I think I should return the favour.\"\n\nI couldn't help smile as I leaned down to her ear. \"I only want my cock one place tonight, Karliah.\"\n\nReaching down between us, I felt her rather delicate hand grasp my length. \"Ragnar, I can't get my hand around it,\" she whispered.\n\n\"Maybe you just small hands?\"\n\nThat made her giggle. \"Well, small hands get into tight places.\"\n\nShe positioned me at her entrance before removing her hand, wrapping her arms around my neck. Ever so slowly, I pushed forward to enter her. Gods, was she ever so tight. My face must have been a picture as she said, \"So I feel good, yes?\"\n\n\"Wait until I'm all the way inside you, then I'll ask the same question.\"\n\nHer arms tightened around me the more I inserted, almost feeling her stretch to accommodate me. She breathed my name more than once, desperate to kiss me. By the time our groins touched, her face was one of utter bliss. I'm sure I look rather pleased myself. She asked me not to move for a few moments, stating she simply wanted to enjoy the thrill of having a man inside her once again. To be honest, I could have stayed like that most of the night. I'm not sure if all Dunmer were the same, but the two I'd been with had the tightest pussies around.\n\nI slowly started to move, and she asked me immediately not to do it too hard. To be honest, I didn't need to. The feel of sliding inside that tight, wet pussy of hers was going to be more than enough to get me off, letting her know I probably wasn't going to last long at all. She didn't mind whatsoever, hoping this would simply be the first of many times we would make love that night.\n\nFeeling those lithe legs of hers wrap around me almost set me off. It changed the angle of how I entered her, and she cried out. I thought I hurt her, but she said it simply felt even better, before she kissed me deeply again, the sort of kiss that would only ever make me harder.\n\nBreaking the kiss, she pulled my head gently next to hers. \"You feel wonderful, Ragnar. Why have I waited so long?\"\n\n\"I didn't mind, Karliah. You know that.\"\n\n\"Good things come to those who wait, right?\" It felt like only five minutes, perhaps it was longer, but I eventually had to warn her I was about to cum. She heard the hidden question in the statement, and gave me no indication that I was finishing anywhere except inside her. \"I've prepared,\" she admitted, \"I have more than enough potions.\"\n\nAs I neared climax, I upped the tempo more and she still thoroughly enjoyed it, as it was nothing like the hard fucking I did with Haelga. I don't think Karliah could handle that... yet, if she was ever interested. But it was still a heavenly climax as I buried myself a final time, and she held onto me for a while, her hands stroking my back as I recovered.\n\nAfter a quick clean up, we lay together, our heads now on the soft pillows, Karliah cuddling into my side, an arm of mine wrapped around hers. \"This is going to sound like a stupid question, but can you get pregnant? I mean, you said you're older than me, quite a bit older...\"\n\nShe shrugged. \"I'm not sure, to be honest, but I'd rather not take that chance.\"\n\n\"Sensible, but I was just curious.\"\n\nShe had offered to blow me earlier, and she was still tempted, as she quickly kissed me again, before moving down my body. Once down near my groin, my cock was already starting to harden, and it was near enough at full mast one she had her mouth around it. I'll be honest, she obviously hadn't given a blowjob in a while, but she was desperate to please me, knowing the one thing many loved was that she should maintain eye contact. I couldn't help smile as I watched her head bob up and down.\n\nI'm not sure if she was waiting for me to cum in her mouth or not, but I eventually gestured for her stop and instead straddle me. She didn't sit straight down on my cock, instead laying it flat against me and running her pussy along it. That gave me the perfect opportunity to look at her body. There were a few scars, as expected, but she was near enough flawless.\n\n\"You think I'm beautiful?\" she asked, sounding a little unsure.\n\n\"Gods yes. Never had a Dunmer like you before.\"\n\n\"How many have you had?\"\n\n\"Three before you.\" I pulled her down for a moment to whisper in her ear, \"But your pussy is by far the best.\"\n\nThat made her laugh before she sat back up, continuing to rub herself along my length. I'm sure it was teasing herself as much as it did me, but I could have watched that body of hers all night doing it. But I think it eventually got too much for her, as she finally sat up, grabbed my cock, and placed it at her entrance. I usually loved to watch my cock disappear inside a woman, but for once I watched her face. Gods, her face lit up as she slowly took my length, crying out rather loudly at times as she adjusted to my size again.",
        "She shuddered once she'd settled on my crotch, smiling away as she admitted, \"I think I nearly came just then.\"\n\n\"That good?\"\n\n\"It's certainly hitting the right spots. Now, just let me control it this time, Ragnar. You just lie back and provide the cock.\"\n\nDespite the confident tone, she didn't last long, her first orgasm arriving very quickly. She rode her way through it, barely, starting to ride a little harder and faster as she became ever more accustomed to what was inside her. Wondering if she was going to have another one soon, she could barely put three words together, leaning forward with both hands on my chest as she properly started to ride me. That sent sensations up and down my cock, and my body, and I knew I was going to cum again quite soon myself.\n\nClimaxing a second time, that's when she had to cry enough, at least for the moment, collapsing on my chest, feeling hers rise and fall as she murmured how good she felt. I really needed to cum, so she lifted herself up, and suggested I just cum on her, so I left a load on her arse and lower back, suggesting we'd just clean it off later.\n\nWe both had a little nap, Karliah not moving off me at all. Waking up a little later, I grabbed a little water and cloth to clean her back, and we made love again, our appetites for each other still not quite sated for the moment. Apart from Karliah being on her back and me between her legs, there was only endless amounts of kissing and caressing, with plenty of romantic words shared between us too. I wasn't quite falling for her, but I knew we would be very close going forward. I was left thinking she just wanted a man who she could trust and know that would treat her right.\n\nCuddling under the covers later, Karliah spooned against me, we lay in silence and conversed quietly about nothing particularly important, until she said, \"Thank you for tonight, Ragnar.\"\n\n\"You don't have to thank me.\"\n\n\"I know, but the entire evening, since I walked in the door, your focus has been on making me... happy. I've had a near constant grin since you opened the door. I can't remember the last time I felt remotely happy.\" She paused before adding, \"Promise me one thing, Ragnar.\"\n\n\"Of course.\"\n\n\"Never say you love me, or you're in love with me. Even if you do. And I promise to do the same.\"\n\nI could understand why she said that, so I agreed. I won't say wholeheartedly, because if we did fall in love, we'd be denying ourselves possible happiness. I had no idea what was going to happen with Haelga. Or Ingun. Or any other woman I met. But I understand why she said it, and to be honest, it was probably the best course of action. Work alongside each other. Enjoy the other's company. Enjoy some really hot sex. But don't let feelings cloud our judgement.\n\nI did have to say, \"You say that like you expect to fall in love with me, Karliah.\"\n\nShe turned around to face me. \"Because I know I will. But I can't repeat history, Ragnar. My heart won't be able to take it.\"\n\nI was about to say 'I won't end up like Gallus', but who was I to make that sort of promise? I could die tomorrow if a mission went wrong. So I promised her that, if I did fall for her completely, I'd keep it to myself.\n\nIt would probably end up being a hard promise to keep."
    ],
    "authorname": "unknownauthor29",
    "tags": [
        "fantasy",
        "fan fiction",
        "skyrim",
        "dragonborn",
        "elder scrolls",
        "celebrities"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/dragonborn-rising-ch-08"
}