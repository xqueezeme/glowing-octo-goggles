{
    "title": "He Let Them Have Me #02",
    "pages": [
        "We got up early the next morning to head home. Kyle had bought a luggage rack. I went to get on his bike but Gray told me to ride with him. I looked at Kyle, shrugged, and climbed on Gray's bike. \n\nWe rode for a ways in silence. \n\nFinally, I asked, \"Now what?\"\n\nHe repeated, \"Now what?\" As if he didn't understand the question. \n\n\"Yes, now what?\" I asked. \"You've fucked me, your friends fucked me. I've been slutty. Now are we done?\" \n\n\"You tell me, have we reached your limit?\" he responded. \"I told you, my fantasy is pushing limits to see how far a woman will go.\" \n\n\"Limit? How would I know, I've never done anything like this before. How do I even know what my limit is. I'm not even sure what my fantasy is,\" I said\n\n\"Your fantasy is being used and exposed as a slut.\"\n\nI wanted to protest, but he was right. Just hearing it made my stomach flutter. \n\n\"How will I know when I've reached my limit?\" I asked.\n\n\"Easy,\" he replied. \"You'll say no.\"\n\n\"How do you know? How will I know when to say no?\" I asked quietly. \n\n\"You just will,\" he said.\n\n\"What if the woman is crazy? What if they would do anything? What if they'd kill?\"\n\n\"We've known each other awhile,\" he said. \"I'm pretty sure you won't kill. \n\nI thought about that for a while. A second thought came to me. \"Are there others?\" I asked. I didn't really want to know the answer. \n\n\"Not really,\" he said.\n\n\"Not really?\" I repeated. \"What does that mean?\" \n\n\"I can't satisfy you, my wife, and another woman. So right now, you are my slut. I am pushing your limits till you say stop.\" He explained. \"But, if you said 'stop' tomorrow, I already know who the next woman would be.\" \n\n\"How many have there been?\" I asked. \n\n\"I won't tell you, but enough so that my wife knew about this before we got married.\" \n\nI knew this was a second marriage for him. He'd lost his first family in a car accident. \n\n\"Why does your wife let you do this?\" I was full of questions.\n\n\"She thinks my slut's are hot. She also wants to see how naughty they can be. Sometimes she hits it off with one. She's bi and often enjoys liaisons with them.\" \n\n\"How do these women feel when you end it?\" I asked. \n\n\"I don't know,\" he answered\n\n\"Why? Do you stop talking to them after you're done with them?\" I was getting mad. \n\n\"Of course not. You've met many of them. I don't know because I've never ended it. They have,\" he explained. \n\nHe went on. \"I like to push a woman to her limits. When I've reached her limits, she says no. She realizes it's over. She doesn't want to end her marriage. She's done everything she's going to do. She and her husband figure out what's next. Sometimes, we might fuck again, but it's not the intense experience of exploring your limits.\"\n\n\"Don't their marriages collapse? They can't all be like Kyle and me. I didn't know Kyle would let this happen. I still worry he'll leave me.\" \n\n\"No,\" he said. \"Kyle won't leave you. I don't want to ruin anyone's marriage. I test the men as much as the women. Think about it. We started off with jokes, then light touches. Then longer more intimate touches. There are lots of steps as we get to know each other. As much as I wanted you, I wanted to know Kyle was ok with it. We've known each other 10 months. This didn't happen overnight.\" \n\n\"There are more people like Kyle and you than you think,\" he said. \n\n\"Wait. You chose me for this 10 months ago? Why me?\"\n\n\"It wasn't quite like that. I met your husband and you and thought you were attractive, fun, and intelligent. I watched the way you interacted with your husband. Were you very touchy, kissy? Or were you more like people working together in a nice workplace? Old comfortable friends. I look where there's no passion. As we talked I saw there was passion in you, but not in your relationship. As I became more familiar with you, I watched for Kyle's objections. There weren't any. He wants this as much as you do.\" \n\n\"What will my marriage be like when we're done?\" I asked. \n\n\"I don't know. You and Kyle will redefine it. You truly love each other. You know more about each other than you did a week ago. So who knows. Do you want to leave Kyle?\"\n\nHe was right. In some ways Kyle and I were closer than we had been a week before. We'd been more physical with each other, and more honest about what we wanted or felt. It didn't make any sense but, he was right. It had been a great weekend for both of us. I had no desire to leave Kyle. \n\nI rode quietly. Along the way, the most haunting thought was 'What will it take to make me say no?'\n\nIt was a nice ride home. I had a lot to think about. I rode a lot of the way with my arms around Gray and just listening to music. During breaks Gray wasn't as possessive. It was like he was letting Kyle and I re-establish a balance. Gray didn't ignore me, and still let Kyle know I'd do what he asked me to, but somehow he reminded us we were still husband and wife. For one thing, on the trip home, he almost stopped calling me slut and when talking to Kyle he addressed me as 'Your wife.'\n\nWe stopped at our house first. I noticed that the girls were home. They came out to greet us when they heard the bikes. The first thing the girls asked was about why I was riding with Gray. \n\nI said that I'd split the ride. That Gray's bike was more comfortable and it was a long ride. \n\nWe invited them in for for coffee. Everyone else took off, but Gray came in. The girls were excited to see him and he made small talk and made them laugh. I was a little annoyed. I did not realize it then that I was a bit jealous of him paying attention to them. \n\nThey asked what the rally was like. We told them all about the vendors and the entertainment. Then they asked for pictures. We took a lot of pictures. I wanted to go through them first but Gray said he and his friends had uploaded most of them and told them to get a PC or iPad or something. They got the PC and using the TV for display Gray started showing the pics. \n\nHe patted the couch and made me sit next to him. The girls on the other side. Kyle sat in the chair. Gray rested his hand on my thigh. \n\nIn the first ones I was dressed in my jeans, boots, and tank top that I'd worn to the rally. \n\nCammy, my youngest, said, \"Whoa, hot biker chick mom,\" and high fived me. \n\nThey hadn't noticed yet but in most of the pictures I was standing next to Gray and he'd usually have his arm around me. \n\nThe next set was after we bought my jeans and leather halter.\n\nMy other girl, Tam, short for Tammy, commented this time, \"Wow, you went all out biker babe.\"\n\nCammy added, \"Sure showing a lot of skin there,\" and laughed. \n\nWhenever Gray and I were in a picture he had his arm around me. There were even a few his friends had taken from behind where he had his hand in the waistband of my pants. \n\nWhen we were through with those pics I suggested we stop. The girls wanted to see more. Kyle didn't object. I didn't know what to say. \n\nNext shot found me in the short torn denim cutoffs and the cut tank top with no bra. Actually a few before we cut the tank top but most after. It was obvious we had cut the tank top on purpose. This time you could definitely see Gray's hand down my shorts. \n\n\"Mom,\" Cammy said. \"Looks like you really got into the biker babe role. You look hot. I bet dad enjoyed seeing all the jealous guys. \n\n\"Well,\" I said. \"It's kind of like Halloween or Mardi Gras. You're dressing up in a costume and everyone makes them a bit sexy. Look at some of the other women.\"\n\nIn the next pic, behind me, was an overweight woman in pasties. The girls laughed and said that I was dressed like a slut to keep the world in balance. I'm not sure if it bothered me or I liked the fact they'd used the word 'slut.'\n\nGray laughed and said, \"Well, she was one of the hottest biker slut's there.\" He patted my thigh. I think that time it was noticed. \n\nI nearly spit up my coffee. The girls howled. \"Biker slut,\" they repeated. \"Our mom the biker slut,\" and laughed. \n\nAs Gray showed the pictures and talked about the show, the girls would look for other girls in the pics. They would make comments like. \"Look, mom looks better as a biker slut than she does\" or, \"Gee mom, seems you make a great biker slut.\" They thought it was hilarious \n\nIt was also becoming clear that Kyle was not in many of them and that Gray had his hands on me a lot. Tam pointed it out. \n\n\"Too bad dad took most of these pics,\" she said to no one in particular. \"He's hardly in any. Kind of looks like mom is Gray's biker slut.\"\n\nCammy jumped in, \"Gray and mom do make a hot couple though.\"\n\nGray put his arm around me and pulled me into him, \"We do, don't we?\"\n\nShe, Gray, and Tam laughed. \n\nWe finished looking at the pics. Gray's wife called and invited us for an end of the ride dinner. I declined at first but the girls insisted we go. They were having friends over and, they laughed, if their friends saw what a hot biker slut their mom had become they'd all ignore them and just hang with me.\n\nI was getting uncomfortable with them using 'Biker slut' so much. I wish it had been in a bad way, but I was enjoying the label and it was making me a little wet. \n\nI told the guys I was going to clean up, then we could go over. I quickly showered and dressed. No need to take the bike so I pulled on a short denim skirt I got at the rally. I added a denim bustier top that snapped down the front. No bra, but I did put on a light blue thong. \n\nWhen I was ready I stepped into the room. \n\n\"Awesome mom,\" said Cammy. \"Did you get that at the show?\" \n\n\"Yeah, I liked it.\" I said. \"Not sure where I could wear it though, so this seems the perfect opportunity.\" \n\n\"Well,\" laughed Tam. \"If you like being a biker slut, you can wear it anywhere. Although I can't really picture dad with a biker slut. Maybe only when you hang out with Gray.\"\n\nThe girls and Gray all laughed. \n\nGray walked up to me. \"That's not true biker slut,\" he said. He unsnapped the top 2 buttons of my bustier and the bottom one. Luckily it was laced up tight enough on the sides not to fall off. \n\nI just let him. Not even a word of protest. \n\n\"There,\" said Gray to the girls, \"Now she looks biker slut.\" \n\nTam laughed and said, \"Totally.\"\n\nCammy giggled, \"Looking slutty mom.\" \n\nI was not sure what to say. \n\nThen Gray dropped another bombshell. \"Cammy? Isn't it your birthday soon?\"\n\n\"Yes, this Tuesday,\" she answered. \n\n\"Are you having a party?\" He asked.\n\n\"Of course silly. Next weekend. It's my 18th birthday.\" \n\n\"Well, I have a pool if you want to have it at my place,\" he said.\n\nI was really uncomfortable with the thought of my daughters in bikinis in front of Gray. In fact, I was a little jealous. How would I compete with those 18 year old bodies. \n\n\"Oh Gray,\" I said. \"That's very kind if you, but you don't want a bunch of kids screaming in your backyard.\"\n\n\"Not really,\" he replied. \"But if that comes with a bunch of hot young girls in bikinis, I think I can suffer through.\" \n\nThe girls giggled. \n\n\"Well,\" said Cammy. \"Pretty sure we can supply girls in bikinis. \n\n\"Cool,\" said Gray. \"You and mom can come check it out during the week. See if it works for you. In fact, bring bathing suits and hang at the pool for the day.\"\n\n\"Oh thank you Gray,\" said Cammy. \"That sounds great.\" \n\n\"We'll see,\" I said.\n\nWe all left for Grays house. Kyle and I took the car and Gray took his bike. They only lived 5 minutes away. When we got there Grays wife, Amber, greeted us at the door. She gave Gray a huge kiss. \n\nThen she to me, \"Mmmm. Well there's the little slut that kept my husband happy while he was gone. I love the outfit. Did you get it at the Rally?\" \n\nAs she said it she played with the snaps and undid one more. The sides of my breasts were completely exposed. \n\n\"Yeah, we found it in one of the booths,\" I said in a soft voice. \n\n\"Well you look hot,\" she said. \n\nAs she did she put her arms around my neck and kissed me on the lips. Her tongue explored my lips. I parted my mouth to kiss her back. As I did I realized that Gray had never kissed me. \n\nNext she greeted Kyle. She took his arm and pulled him very close beside her. In a very soft voice, and practically breathing in his ear, she said, \"There's the little cuck boy. Did you have fun watching my husband fuck your wife?\" \n\nKyle nodded.\n\nShe kissed him on the cheek, \"Good boy,\" she said. \n\nShe was wearing a very small pair of white shorts and a small red tank top that came down a little above her naval. She took Gray and me by the hand and led us to the couch. She unbuttoned her shorts and pushed her shorts and panties to the ground. Then she leaned over the back of the couch. I had no idea what to do. \n\nThen she said to Gray, \"It's been too long I need that big cock of yours.\" \n\nI didn't move. I was just standing there next to them. \n\nAs Gray unzipped his pants she took my hand and said, \"tell me everything that happened.\" \n\nI watched as Gray ran his fingers up and down her pussy. She moaned. He slid 2 fingers into her. She pushed back and ground her ass into him. When he pulled his fingers out her pussy and his fingers were glistening with her juices. He held his fingers up to my mouth. I knew he wanted me to lick them clean. \n\nI had never tasted another woman's pussy before. I had masturbated and then licked my fingers, but never someone else's. I wondered if this should be my limit. Should I say no? I also knew I wanted to taste those fingers. I took them in my mouth and sucked them clean. \n\nAmber moaned as I did. Gray's cock was now out and hard as a rock. I had the urge to get on my knees and suck it. Amber had other ideas.\n\n\"Grab his cock and stick it in me,\" she said. \n\nIt was not a request. She was telling me what to do. I could have said no. I didn't want to. I took his cock and lined it up with her pussy. Rubbed the tip on her lips to get it wet. Then she pushed back and I watched the whole thing disappear into her. \n\nI was jealous, fascinated, and turned on all at the same time. \n\nAmber still holding my hand said, \"Tell me everything.\" \n\nI started with the scene in the bedroom. \n\n\"No,\" she said. \"Start with the ride up. Tell me everything.\"\n\nI did, I started with the ride up, the conversations I could remember. Gray's arm around me. As I retold the story, and watched Gray fuck her, I was getting horny.\n\nUp till now Kyle had been standing by the door. He'd been there a while, not sure what to do. Amber, between getting fucked and moaning, told him to come over to us. \n\n\"Take off your wife's skirt and panties,\" she told him. \n\nHe unzipped my skirt and pushed it and my panties to the floor.\n\nShe looked at me and said, \"Make yourself cum.\"\n\nI didn't have to be told twice. My pussy was dripping and I was hot as hell from watching Gray fuck Amber. It was hot the way she just bent over the back of the couch. I was wishing it was me bent over the couch. I started playing with myself. \n\nAmber made me continue my story. I did. \n\nAt some point she looked at Kyle. I did when she did. His cock was hard and he was rubbing it through his pants. \n\n\"I'm sorry Kyle,\" she said. \"I forgot all about you. Feel free to jack off and cum on your wife's ass or legs.\" \n\nHe wasted no time in pulling his cock out and jacking off. \n\nAmber reminded me to go on with my story. We were now at the first night in Gray's room. \n\nAll through this Amber was moaning and encouraging Gray to fuck her. She was telling me how hot the story was and calling me slut. \n\nAs I recounted being fucked by the two guys I came on my fingers. I had to reach out a hand and steadied myself on the couch. As I came Amber let let out a moan and her body shuddered she came too. \n\nI went on with my story about Gray cumming in me, swallowing my first load of cum, the other guys cumming in me and how messy I felt. Amber came again. As she did I felt Kyle's hot cum hit me in the ass. I had forgotten he was there. Feeling him spurt on my ass made me cum again. \n\nI continued my story to Saturday night and Gray fucking me and sending me back to Kyle covered in cum. Amber came again. \n\nAmber starting begging Gray to cum. \"Baby, cum in me. Fill me up like you did your little slut. Give me your cum. In the end all your cum is mine. Give it to me. \n\nI continued my story about going back to my room, covered with cum, and reading a cuckold story to Kyle. Amber let out a \"Fuck yes\" and came. As she did I watched Gray stiffen up and I could tell he was cumming in her pussy. That set me off. I was wishing he was cumming in me and remembering how it felt when he did. I pressed my fingers against my clit and came. Hard. My knees buckled. Again, I was surprised when a load of hot cum hit my ass. Kyle had cum again. As he did I had one more orgasm . \n\nI asked Amber where I could wash up. She told me I couldn't. That a cumslut like me should get used to cum on her body. I could feel it drying on my ass. She took my hand and sat on the couch legs spread. \n\n\"On your knees,\" she said. \n\nI got on my knees between her legs. \n\n\"I've got a cuntload of Gray's cum in me. I hate to waste it. Why don't you clean me out?\" she said. \n\nIt really wasn't an offer. It was an order. I'd never eaten a woman before. Again I wondered if I should say no, but my pussy was so hot from being made to be so slutty, I didn't want to say no. I lowered my lips to her pussy. I had no experience. Kyle had tried eating me but it was just awful. I tried to do what I thought would feel good to me. Amber stopped me. \n\nShe pulled my head away. She lowered her hand to her pussy. \"Lick me here, and here, lightly. Suck here lightly, then a little bit harder. Don't do it in the same order each time. Don't be so tense. Enjoy it.\" \n\nI tried again. This time she moaned. The encouragement made me feel more at ease. I started to like it. I could taste Gray's cum mixed with her pussy juice. I loved the taste. I got it smeared on my lips and face. \n\nAmber was moaning. She then looked at Kyle. \"Finger your wife's pussy. Make her cum.\"\n\nKyle knelt down beside me and started fingering me. The feeling was intense. Amber moaning in front of me. My mouth full of pussy and cum, Kyle's fingers in my cunt, I came. As I did I sucked on Amber's clit a bit harder. \n\n\"Oh my fucking God,\" she screamed as she came. \n\nI came again knowing that I had made her cum. \n\nI just sat there on my knees, half naked, my juices dripping down my leg, cum drying on my ass, and my face a mess from Amber and Grey's cum. I was breathing heavy and my senses were reeling. Amber pulled my face to hers and started kissing me. I kissed back. As she kissed me she licked my face clean. I could taste it all again on her tongue.\n\nWhen she was done. She looked at me and said, seriously, like nothing had happened, \"Dinners ready.\"\n\nI laughed. She took my hand and guided me to the table. I asked if I could help. Kyle and Gray sat down. There was all this weird normal going on in this totally abnormal situation. \n\nShe served dinner and we all sat down to eat. Amber and I were still half naked. I had dry cum on my face and ass. She started passing food around. \n\n\"So Kyle,\" she said. \"How do you feel about your wife being such a slut?\" \n\nFunny, it was the first time I remember anyone asking Kyle how he felt. \n\nKyle answered. \"I feel like I am punched in the stomach each time I think of it or watch her.\" \n\nThat answer surprised me.\n\n\"Then why do you let her?\" she asked.\n\nHe looked at the ground. \"I can't help it. It's so hot, the conflict turns me on. I want to say no, but I want her to do it. I like when people know she's a slut and I can't stop her. \n\n\"Do you want it to stop?\" \n\nHe paused. \"No, I don't. I don't know why. I want her to be as slutty as she wants.\" \n\nShe went on, \"Do you think there's a point you'll stop her?\"\n\n\"I don't want to lose her,\" he said. \"If I could, and it came to the point that she was leaving me, I'd beg her to stay. I love her and I want her as my wife even if she's someone else's slut.\" ",
        "She looked at me. \"Are you going to leave him?\"\n\n\"Never,\" I replied. \"When this is over, we'll figure out what's next.\"\n\nTo both of us she continued, \"You know Gray will push your limits. See how far you are willing to go. Find out what turns you on that you haven't faced yet.\"\n\n\"Yes,\" I think we replied in unison. \n\n\"Well good,\" she said. \"It's been awhile since we had any fun around here.\" \n\nWe all laughed. For a while dinner conversation was normal. She asked about the rally, the bikes. The booths. What we enjoyed about it. We discussed some of the politics of the bigger riding group and how annoying it was. \n\nThen Gray brought up Cammy's birthday. Amber was interested. She'd met the girls at a group event. She thought it was a great idea for them to have the party at there place.\n\n\"Why don't you and Cammy come over tuesday and use the pool,\" she said. \"I have to work, but Gray will be here.\"\n\nI started to protest. \n\n\"Bring her Tuesday and you wear that string bikini,\" Gray said.\n\n\"She's going to start to think I really am a slut,\" I said softly. \n\n\"You are,\" said Gray. \n\nI looked at Kyle he looked down. I noticed his hand was in his lap. His cock was hard. \n\n\"Ok,Tuesday,\" I said. \"We better wash up.\" Thinking of the cum dripping down and drying on my thighs. \"It's time to get going.\"\n\nGray said, \"You don't need to clean up, you can clean up at home. Just put on your skirt and throw your panties in your purse.\"\n\nI did as I was told. \n\n\"See you tomorrow,\" said Gray. \n\nIt wasn't until we were driving home I realized he said tomorrow. We didn't have plans. What was he thinking. \n\nOn the way home I was anxious. \"What if the girls recognize the cum on my legs. How will I explain it.\"\n\nKyle gave a nervous laugh. \"You could just tell them you're a slut.\" \n\nI hit him, \"It's almost like you want them to know.\"\n\nHe didn't respond. \n\nWhen I got home the girls stopped me at the door. \n\n\"So can we use the pool?\" \n\n\"Yes, he said we could go over Tuesday and check it out.\" I told them. \n\nTam jumped in. \"Oh cool, I'm off too. I'll join you.\" \n\n\"Ummmmm.... Ok. Sounds good,\" I was not convinced. \n\nCammy looked at me. \"Mom, you've got something dried up and stuck on your thigh.\"\n\nI looked. \"I must have spilled something,\" I said. \n\nCammy laughed, \"Well you better clean it up, I'd hate to tell you what it looks like.\"\n\nOh my god I thought. Cammy is 18 Tuesday. Does she know what dried cum looks like? I felt a heat in my pussy at the thought of being caught, exposed. \n\nThat night in bed I snuggled up to Kyle. \"I don't really know my limits,\" I said. \n\n\"Me either,\" he replied. \n\n\"Ummm... How do you feel about him checking out our girls in bikinis?\" I asked. \n\n\"How do you feel about it?\" he responded. \n\n\"Well, since neither of us jumped right in. I'm assuming both of us are feeling the wrong thing,\" I said.\n\n\"God help me, I want him to see how hot they look in their bathing suits. It's like they're a part of me and if he wants it, he can have it,\" I said. \n\n\"I understand,\" he said. \"To me it's one more thing he can take from me. Let me know he can have it. I feel like you're all too good for me and I deserve to have you taken by a better man. At the same time I feel proud that you are all mine and he wants you so badly.\" \n\nI laughed and kissed him. \"This is going to get weird, my little cuck,\" I said.\n\n\"Yup,\" he replied. We ended up making love. It lasted a few minutes. He fell asleep. I masturbated myself to 3 orgasms. I pictured myself naked in front of him and the girls. \n\nMonday I received a package from Gray. It had a card. 'I'm coming over tonight after dinner. Wear this.'\n\nI texted him when I got it.\n\nThe girls will be home\n\nSo? Was his response. \n\nI wondered was this my limit? I pulled the clothes out of the package. It was a nighty and panties set. Silver/black with lace trim. The panties were bikini style. The material soft polyester. The top was a tank style top. Made of the same material. It covered far more than my bikini but felt more exposed. \n\nI showed it to Kyle when he got home and told him what it was for. Kyle said, \"Really?' \n\n\"Do you want me wearing this? In front of him? In front of the girls?\" I asked. \n\n\"Well try it on,\" he said. \n\nI took it to the bedroom, I was holding the 2 pieces. I was thinking. I can't wear this in front of the girls. Another part of me couldn't wait to try it on. When I got to my room I took off all my clothes. I pulled on the top. I looked at Kyle. \n\n\"Can I wear this in front of the girls?\" I asked.\n\nKyle already had his cock out. He was jacking off. \n\nI put on the bottoms. \"I'm going to be wearing this when Gray comes over later. I'll be wearing it in front of the girls.\" \n\nKyle grabbed some tissues and came into them. \n\nWearing my nightie, I patted his cheek and said, \"Seems our girls may find out their moms a slut.\" \n\nHe just moaned. \n\nCammy and Tam got home the same time. Cammy was the first to ask, \"Hey mom, what's with the nightie? \" \n\n\"Do you like it? \" I asked \n\n\"Yeah it's cute,\" said Tam. And to Kyle, \"Dad you have good taste.\"\n\nOk, here it comes I thought.\n\n\"Oh, your dad didn't get this for me. Gray did, \" I explained.\n\nAs I did I could feel that heat growing in my pussy. I looked at Kyle. He was standing behind the couch. I'm sure he didn't want the girls to see his hard on. \n\nThe girls looked at each other. They weren't sure what to make of it. \n\nTam asked, \"Why did Gray get you that?\" \n\n\"Well, I guess he thought it would look good on me,\" I answered. \n\n\"You do look hot in it,\" Cammy said. \n\nThe doorbell rang. Tam was closest and answered it. She looked at me and then opened the door.\n\n\"Hey Gray,\" she said. \"What's up?\" \n\nGray looked at me and smirked. \"I knew you'd look great in that.\"\n\nThen, to Kyle, \"Gotta admit she looks hot.\" \n\nKyle nodded. \n\nGray said. \"No thank you?\"\n\nThe girls looked at me, then to Kyle. \n\nKyle said, \"You're right, I'm sorry, thank you so much, it looks great on her. \n\nGray looked at me.\n\n\"Yes, thank you,\" I said. \"It makes me feel sexy.\"\n\nGray put his arm around me. Right above the panties under the top. \n\n\"Girls? Do you think mom looks sexy in this?\" he asked.\n\nNot sure what was going on, Cammy said, \"I'm yeah, um, I guess.\" \n\nTam was more straight forward, \"It's very sexy. Seems weird you bought it for her.\"\n\n\"What can I say, hot women should have hot things.\" Laughed Gray. \"Your dad doesn't mind. Do you Kyle?\"\n\n\"Not at all,\" Kyle said. \"She looks great in it. Plus,\" he motioned to Gray's arm around me, \"Your mom seems to like it.\"\n\nWow, I thought, what did the girls think of that. He pretty much just told them Gray can manhandle me. \n\nThen he went one step further. \"They're probably just jealous you didn't get them anything.\" \n\nTam thought a moment, \"Well, I do like pretty things.\" She mused. \n\n\"Hey,\" said Cammy to Gray. \"What did you stop by for? Mom didn't say you were coming.\" \n\n\"I offered to help her with a problem with her computer,\" he told her. \n\nI didn't have any problem I knew of. \n\nGray said, \"Let's go look at it.\" \n\nMy PC was in my guest room/home office. He followed me to the office. When we walked in he locked the door behind us. \n\n\"Get those panties off,\" he said. \n\nNow? In my house? With the kids home? I hesitated. \n\n\"Is that a no?\" he asked. \n\nI knew I wanted to do what he said, my pussy had been wet since he walked in. I wondered what Kyle and the girls were thinking. I dropped my panties. \n\nHe unzipped his pants and pulled out his cock. It wasn't quite hard yet. \n\n\"Get on your knees on the bed,\" he ordered. \"Ass in the air.\" \n\nI did it. \n\nHe slid his cock up and down my pussy lips. I was wet. He was getting his cock hard as well as making sure I was ready. I was. My nerves were all tingling. I was going to be fucked by a man, not my husband, in my home, with the girls home. God that was slutty and I loved it. I wanted it. \n\nHis cock slid right in. It only took a few thrusts until I was cumming. I tried to keep quiet, but I know I let out a few moans as he thrust his cock in me. He was pounding me with it. Pushing my shoulders into the bed. I grabbed a pillow and held it to my face. I tried to muffle my voice. \n\n\"God yes, take me, fuck me, give that cock to me, god I'm a slut, fuck your slut, make me cum.\" \n\nThe words were just tumbling out of me. I was hoping the pillow absorbed them. \n\nHe fucked me for about 15 minutes. I came at least 3 times. I was exhausted. \n\nWhen he finally came, I had a massive orgasm. My whole body shook as I let out a loud, \"Oh my god.\"\n\nHe zipped up his pants. I grabbed a cloth to clean up. He stopped me.\n\n\"Put your panties on.\" \n\nI did as I was told. As we walked back in the living room everyone was very focused on the TV. Kyle asked if we got everything we needed done. I assured him we did. The girls were just staring at us. I turned to thank Gray for helping me with the computer. It was then I noticed a huge wet spot surrounding the zipper of his pants. \n\nI then looked in the hall mirror. It was obvious the crotch of my panties were wet and I had cum stuck to both my thighs. I felt scared. Feeling scared excited me. I wanted rip off my clothes and show them my freshly fucked pussy. At the same time I wanted to run away and hide.\n\nKyle got up from the couch to say good bye. He shook Gray's hand and said, \"Thanks for coming over and helping with her problem. I'm sure we'll see you soon.\"\n\nI kissed him lightly on the lips and said, \"Thank you.\"\n\nHe said goodnight and then, \"You girls still coming over to go swimming tomorrow?\"\n\nTam and Cammy looked at each other. They seemed unsure. \"Umm.. Sure, uh, see you then.\" \n\nThen Gray said, \"If you like what I bought your mom, I can get you some too.\"\n\nGod, I thought, he really does like pushing things. I couldn't believe he asked that. I could not even imagine what they'd say. Especially if they heard us in the office. Probably tell him to fuck off. \n\nCammy answered. \"I love presents, although I think that's little to... Um....grown up style for me.\" \n\nTam just said, \"Sure.\"\n\nI was stunned.\n\n\"Ok, see you tomorrow,\" Gray waved and walked out the door.\n\nI told the kids I was going to clean up the kitchen. I was in there a few minutes when Cammy came in. \n\n\"Mom?\" She asked. \"Is everything ok with you and dad?\"\n\nMy first thought was I must have been a sight. I could feel the cum drying on the back of my thighs and against the material of my panties. It just made me wetter, probably adding to the mess. \n\nPoor baby. I had no way of explaining. \"Of course dear, we are doing great. Actually, since you guys are older, we've been able to connect more. We are both loving it.\" \n\n\"Oh,\" said Cammy. \"I love you and dad. I know I'm young, but if you ever needed to talk to someone, I'd be here for you.\" \n\nI touched her cheek. \"You and your sister are amazing young women. If there were problems with dad and I, I would tell you. Actually this weekend we had an amazing experience. It got us talking about our marriage. We both realized how much we sometimes took each other for granted and that there were things about each other that we didn't know. We talked about those. \n\n\"The subject of would we ever want to be divorced came up. We both felt very strongly that we love each other and want to be together. We're past the stage where most couples would get divorced. We are at the stage where we are more committed than ever.\" \n\nShe hugged me, \"I love you mom. I'd do anything for you.\" \n\nWhen she said anything I felt my ears burn with embarrassment for the thought that went through my mind. \n\n\"Dad and I would do anything for you too,\" I said. \n\nShe started to leave. Then she said, \"You guys really like Gray.\"\n\n\"We had a great time with him this weekend,\" I said. \"We really enjoy spending time with him and his wife. Either together or alone.\"\n\n\"Well cool,\" she laughed. \"Then I hope he buys me a nice present.\"\n\nTuesday, the girls and I called Gray and asked what time was good. Gray said anytime. He was just puttering around the house. Then he told me to wear the string bikini. Funny, I would have worn it anyway. \n\nI told the girls we'd go whenever they were ready. I put on the bikini and a semi sheer beach wrap. It didn't hide anything. \n\nCammy saw me first. \"Oh my god mom. When did you get that suit?\" she asked. \n\nTam heard her and came to look. \n\n\"Wow mom, that suit really shows off the goods, doesn't it?\" she joked. \n\n\"Gray likes it,\" I said. Did I mean to say that or was it some subconscious blip.\n\n\"He's seen it?\" Cammy asked. \n\n\"Yeah, I bought it for a pool and hot tub party at his house,\" I explained. \n\nTam laughed, \"Well there were lots of biker sluts in bikinis in the pictures,\" she said.\n\n\"Stop calling me a biker slut! The name's going to stick,\" I said in mock frustration. \n\nThey both laughed. \"Ya know what they say mom, if the high heeled leather boot fits...,\" said Tam letting the sentence drop off. \n\nThey both laughed and went to change. They definitely took after Kyle's side of the family. If not for their hair color they could easily be mistaken for twins. Tam was 19, 5'3\" and 110. She had a tight ass and pert tits. Her hair was a dark auburn. Cammy just turned 18. She was an inch taller and weighed about the same. They must have had the same bust size as they shared all their clothes including bras. Cammy's hair was a dark blonde. They were gorgeous. \n\nThey both came down in bathing suits I suspect they'd had a while but were hiding from me. The bottoms were tight and barely covered their asses. One the top looked like 2 triangles. The other a bandeau across her tits. They looked cute with that sexiness of youth. The thought hit me that in those suits, they must shave their pussies like I do. I chastised myself for thinks about their pussies, but in the back of my mind I kind of wanted to see. \n\nI felt a ping of jealousy that Gray would be checking them out and also a ping of pride that he would find them worth checking out. \n\nI couldn't be a mom without commenting on their suits. \"Umm... Where have you been hiding those suits,\" I asked. \"And calling me a slut? Why even wear a suit?\"\n\nI couldn't help but think back to the times I wore a small suit to the beach and stood on my blanket undressing so everyone could see me strip down to my suit. Did my girls get the same urges? \n\nCammy laughed, \"When ya got it, flaunt it, and the 3 of us, we got it.\"\n\nWe all laughed and headed to Gray's. \n\nGray was glad to see us. He offered us drinks and sandwiches. We had some ice tea and went out back. Gray had his arm around me almost constantly since we walked in. He took my wrap as soon as we came in. \n\n\"Let me take that,\" he said. \"You don't need to cover that body.\" Then he gave me a pat on the ass. \"Damn your mom has a tight ass,\" he said to the girls. \n\nWhen we got outside Gray looked at the girls. They had both worn T shirts over their suits. \n\n\"Well \" he said. \"You going to let your mother's hot body show you up or are you going to take off those T shirts.\" \n\nCammy spoke first. \"Well, we admit the biker slut has a hot body, but so do we,\" she said as she pulled her shirt off. \n\n\"Dammit, stop calling me biker slut,\" I said. People are going to get the wrong idea. The girls just laughed. \n\n\"I don't know mom,\" said Tam. \"I've seen T shirts online with that printed on them.\" \n\nThey both laughed again. \n\nGray looked at Cammy. \"You're right, you do hold your own. Turn around and let me see.\" \n\nCammy did a slow turn. Inside I wanted to stop her and make her get dressed and I also wanted to strip her in front of him. \n\n\"Nice,\" he said.\n\nShe wiggled her ass at him and said, \"Thanks.\" \n\nWe all looked at Tam. \"Damn, I feel like I'm putting on a show,\" she said. Then she laughed and said, \"I kinda like it.\" \n\nShe took off the T shirt and did a slow turn. Then legs apart, hands in the air, she struck a pose, \"Everyone approve?\" \n\nGray laughed, \"Well, if you have to wear a suit, I guess that one will do.\" \n\nThe girls laughed grabbed their drinks and a lounge chair and relaxed. \n\nThe whole time we had been talking, Gray had his arm around me. His hand would slide under the string on the side of my bikini. I know the girls saw. I was embarrassed and turned on. \n\nGray asked me to help him in the kitchen. I followed him. When he was behind the counter he pulled his cock out from the fly of his surf shorts. \"Suck my cock,\" he said.\n\nI could see the girls from where I stood. I looked at them and then at him. \n\n\"I'll watch out for the girls,\" he said. \"You suck my cock.\" \n\nI wanted to suck his cock. The thrill of getting caught by the girls made it more exciting. I got on my knees and took his cock in my mouth. I knew Gray. I knew he was not going to cum from a simple blow job, but I tried my best. \n\nOne of the girls called from the back and asked if she could have a diet soda. Gray answered, \"Just a minute, I'll bring one.\" \n\nShe looked and only saw Gray. \"Where'd mom go?\" she asked. \n\n\"Oh, she's doing something for me,\" he responded\n\nI snorted a bit and was afraid they'd heard me. Later Gray told me that they may have heard it, but not recognizing it, ignored it. \n\nWhen the girls weren't looking Gray pulled me to my feet. He adjusted my bathing suit bottoms so more of my ass showed and sent me out with a round of drinks. Gray said that as I headed back to the kitchen both girls looked at my ass and then said something to each other. \n\nI stood next to Gray in the kitchen. The counter was between us and the girls. Gray slid his hand into my suit and started playing with my pussy. The whole day so far had me wet. Now I was creaming. He pulled my bottoms aside and fingered me from the bottom. The juices from my pussy were all over his hand and down my leg. \n\nHe left the bottom not fitting right. One of my pussy lips was outside the suit. He held up his wet fingers for me to lick them clean. I did. As I did I think one of the girls saw me. That just got me wetter. \n\nWhen I went out to join the girls Tam noticed my suit. \"Geesh mom, you need to adjust your suit. Your falling out of it.\" \n\nCammy giggled. She must have noticed the wetness down my leg. \n\nGray jumped in the pool. Cammy jumped in with him. She swam up to him and kind of hung on him talking. All of a sudden she splashed him. He grabbed her and tossed her into the air and back into the pool. Tammy saw this and dived in splashing Gray to save her sister. A lot of splashing, throwing, and giggling ensued. \n\nI am sure that Gray's hands landed on most parts of their bodies. One time he grabbed Tam by the waistband of her bikini bottoms. As he dragged her to him her whole ass was on display. I was enjoying watching the horseplay. I wanted to jump in and get Gray to grab me and throw me with those powerful arms. I wanted to wrap my legs around him like I'd seen the girls do. Instead I just watched. \n\nThen, with one throw, Tam hit the water. When she did her bandeau top came off. Cammy laughed. She grabbed it and threw it to the other end of the pool. Tam retrieved it and then started chasing her sister. She caught Cammy, there was a flurry of wrestling and then a pair of bathing suit bottoms came flying out of the pool. \n\nCammy shrieked. \"A little help here mom?\"\n\nI could see her in the water. From Gray's position I knew he had a perfect view of her ass. \n\n\"Thank you, but no,\" I said. \"I'm not getting involved in anything where I might lose my bathing suit.\" \n\nTam laughed. \"Better go get it. Unless you're not done showing Gray your ass,\" she said. \n\nCammy turned and saw Gray right behind her. \"Well Gray, have you seen enough of it?\" she asked. \n\n\"No such thing,\" replied Gray.\n\nCammy laughed, jumped out of the pool and retrieved her bottoms. She put them on but not before doing a turn to make sure everyone saw everything.",
        "Maybe she was my little girl.\n\nWhen it was time to leave Gray asked me to stay and help him with something. I told the girls to take the car and I was going to stay and help Gray. They gave each other a look. I told them that their dad could pick me up on his way home. The girls took the car and left. \n\n\"What was Cammy talking to you so intently about,\" I asked. \n\n\"Well, first she wanted to know if I was really going to buy her something. I told her if she wanted me to I would. She laughed and said, 'Not too slutty.'\n\n\"Then she asked if you and Kyle seemed OK. I told her that from my conversations with both of you, you loved each other deeply.\" \n\n\"That was it?\" I asked. \n\n\"Yup, then she splashed me and I threw her.\"\n\n\"Did you have fun?\" I asked.\n\n\"You mean grabbing your daughters sexy little bodies a few throwing them? With a bonus view of Cammy's ass?\" he smirked. \n\n\"Yeah that,\" I said.\n\n\"Yes I did. They have tight little very fuckable bodies,\" he said. \"You tell me, did you get turned on watching them? Knowing that I set it up, just so I could see them in bikinis?\" \n\nI didn't answer. I didn't want to tell him I did. I was embarrassed. What kind of parent does that. But when Cammy had to come out of the pool to get her suit, and knowing Gray was watching. I almost came without touching myself. \n\nGray let it go. He went inside to his bedroom. I followed. \n\n\"Get out of that suit,\" he said. \n\nAs I did he facetimed Kyle. \"Your wife is over here giving me a blowjob. Can you come get her on the way home?\"\n\nI started sucking his cock. He turned the phone camera towards me. \n\n\"Show hubby what a good slut you're being.\"\n\nI took his cock and rubbed it all over my face and tits. Then I sucked it again. \n\n\"So what are you up to?\" Gray asked Kyle. \n\n\"I have a vendor here in my office,\" Kyle replied. \n\nWhat!? I thought. This was a FaceTime call. What did the vendor see it hear?\n\n\"Oh cool,\" Gray said. \"Is he local?\"\n\nKyle told Gray that the guy was not local but had a few clients in the area so he usually stayed overnight. \n\n\"That's great,\" said Gray. \"He's heard most of this conversation. Why don't you bring him with your when you come to get your wife.\"\n\n\"Ok,\" said Kyle. \"We're almost done. See you soon.\" \n\n\"What was that!\" I asked. \n\n\"Oh, your husband is going to bring some guy home from work to fuck you,\" \n\nHe said it a little too nonchalantly for my tastes. \"But he works with Kyle. What if he tells others at Kyle's office?\"\n\n\"Actually, he's a vendor. If his company found out he'd slept with a client's wife, they'd fire him right away.\" \n\n\"Get back to my cock,\" he then continued, \"That doesn't mean at some point people you guys work with, family, or friends won't find out. That depends on whether or not I think they can keep the secret.\"\n\nGray explained, \"I have no desire to ruin your lives. Since you can say no at any time, whatever you give me is a gift. I have to respect that.\" \n\nIn a way it made sense. Here I was, sucking Gray's cock, waiting for my husband to bring over a stranger who is most likely going to fuck me, and the reality is, I am in charge. I can stop any time. The excitement is that I don't want to stop. \n\nI continued sucking Gray's cock. The doorbell rang.\n\n\"Go answer the door,\" he said. \n\nI was naked, it was most likely Kyle and his friend, but I didn't know for sure. I walked to the door and opened it. It wasn't Kyle. \n\nHe looked at me and the spoke to Gray, \"New toy?\"\n\nGray got up came to the door and said hi to the man. He invited the man in and had me close the door. \n\nHe introduced me. Funny, I thought later, I was standing there naked, as his slut, and Gray, always the gentleman, introduces me first. Now it makes me laugh. \n\nAt that time he introduced me to Sean, a neighbor. Obviously the neighbor knew about Gray's habits. I wondered if his other neighbors did. \n\nI was completely embarrassed. I felt just like I did that day in college. Strangers looking at me naked. I felt my pussy get hot. I was wondering if I would fuck this man too. I knew Kyle was still bringing over the guy from the office. I wondered if this guy would want my pussy or mouth first. \n\nI caught myself thinking that and thought, God, I am a slut. I'm not embarrassed about being here naked in front of one of Gray's neighbors. I'm just wondering what hole he's going to fuck me in. \n\nGray asked Sean if he had time to fuck me. \n\nTime? That's it? Not desire? no isn't she pretty? just did he have time. \n\nGray explained that my husband was on his way over with another man to fuck me. \n\nSean asked, \"Her husband's going to fuck her?\" \n\nGray laughed, \"Of course not. He'd have to watch. But if you have time, you could help the other guy out. \n\nThe guy looked me over. \"Is she any good?\" he asked. \n\n\"She's learning,\" Gray responded.\n\nLearning I thought? What does that mean, learning? Maybe he read my mind. Maybe he was explaining it to his friend. I'm not sure, but he went on.\n\n\"Sex is sex, the act itself, for anyone who has sex regularly is repetitious and boring. Since most men don't get sex often, they're just happy when they get it. For me, I need more. Pushing a woman to see her limits is part of it, but seeing her transformation from doing it to wanting it is what I'm looking for. \n\n\"It's easy to just do what you're told. It in itself can be a turn on, but when a woman starts asking for it, and while doing it expresses how much and what she wants. That's when its amazing. When she wants something new and she brings it up first, asking if she can. That's when it's delicious.\"\n\nThe other guy laughed. He took my hand and said, \"So, what do you want?\" \n\nHe was right. I was here, I was naked, I obviously wanted something. What was it? \n\n\"I don't want to be a good girl anymore. I want more than wife, mother, PTA, social groups. I've always been the good girl, I don't want to be in control. I'm tired of telling my kids, my husband, anyone else what to do.\"\n\n\"What else,\" said Gray. \"Don't stop.\" \n\n\"I want to be a slut. It's opposite of what I've been. I want to be wanton. But I want someone to make me, to take control.\" \n\n\"You could just cheat on your husband,\" Gray said. \n\nI thought about it. That's true, but I wouldn't be satisfied. There was another piece. I knew what is was. I was afraid where it would lead.\"\n\nIn a soft voice I said, \"I want others to know I'm no longer in charge. I also want Kyle to know that he is not in control, and people who Kyle knows to know he's not in control.\"\n\nI felt awful saying it. What kind of person was I? Who would do such a thing. At the same time every nerve in my body was tingling. I didn't even realize it, but I was playing with my pussy. \n\nGray smiled, \"Good girl. Now tell him what you want, right now.\" \n\nI looked at the neighbor. \"I want you to be using me when my husband arrives. I want him and his friend to know that my husband is not in charge. I don't want his friend to just come here and fuck me thinking it was my husband's idea. I want him to see that my husband has no control. \n\n\"Think of it. I'll be servicing someone my husband doesn't know when he walks in. My husband will have to be introduced to you. What will his friend think of him.\"\n\nAll the time I was talking my hand was on my pussy. I had been playing with myself. As I said those final words, I came. My knees buckled and I had to grab onto the neighbor for support. \n\nI was a little embarrassed, I gave him a shy smile and said, \"I need to be fucked.\"\n\nI put my arms around his neck and rested a hand on his crotch I could feel him start to get hard through his jeans. I looked up at his face, \"So what do you want? My pussy? My mouth? Do you want me on my back? On my knees? I just want your cock in me. What do you want?\" \n\nThe neighbor sat on the couch and pulled out his cock. He motioned me over and turned me with my back towards him. I spread my legs and he lowered me to sit on his cock. I felt the tip of it against my pussy. I was soaked already but his cock was dry. I took one hand and wrapped it around his cock. I then slid the tip up and down my pussy to get it wet. Once it was wet I positioned it to enter me. \n\nAs I lowered myself on his cock I sighed. It felt so good to be fucked. I had become almost obsessed with cock, and any time I had one in me, I was happy. \n\nHe used his strong hands on my ass to push me forward and I would fall back on his cock. I looked at Gray. He wasn't even watching he was checking his phone. For some reason that made me hot. I was such a commonplace slut. \n\nThe cock in me was getting to me. I started to just concentrate on it. I tried to remember the guy's name. The fact that I couldn't, turned me on even more. I felt his hands on my tits as he reached around and pulled me down on his cock. I loved the way my nipples felt under his hand. \n\n\"Oh god. Yes. I love to fuck, give me that cock. Fuck me.\" \n\nIn my position on his lap he had complete access to my ass. As he fucked me his fingers played around my asshole. No one had ever done that before. I let out a loud moan. I felt his thumb at the opening of my ass. I came. \n\nI didn't even hear the door open. When I opened my eyes there were 2 men in front of me. It took me a minute to realize one was Kyle. \n\nGray was talking. \n\n\"Hi Kyle,\" he said. \"This is my neighbor Sean. He had a few minutes so I didn't think you'd mind him fucking your wife.\" \n\nKyle mumbled, \"No that's fine.\" \n\nI was feeling naughty. \"Hi honey. Where's my kiss.\"\n\nImpaled on Sean's cock I held my arms out. Kyle accepted my embrace and kiss. \n\nThen I said, \"Well, aren't you going to introduce me to your friend.\" \n\nJust then Sean poked his thumb tip in my ass. I squealed. \n\nKyle introduced the guy as someone he worked with. I must have looked strange sitting naked on a man's lap with his cock in me as I extended my hand and introduced myself. I thought about the image it made and just as I did Sean slid his thumb in my ass. No one had ever done that before. I loved it. I came. \n\nAs the guy took my hand, my body shuddered and I let out an, \"Oh my god Sean. That fucking made me cum.\" \n\nI looked at Kyle's friend. \"Sorry,\" I said, \"Sean just stuck his thumb in my ass and it made me cum.\"\n\nThen to Kyle I said, \"Funny, I'd never let you touch my ass before and this stranger, who did it the first time, made me cum. \n\nI returned my attention to Kyle's coworker. I reached out and stroked his cock through his pants. \"I'm sorry, I'm being rude. I've paid no attention to your cock.\" I unzipped his pants and pulled it out. \n\n\"Oh look honey,\" I said to Kyle. \"It's a little longer than your's.\"\n\nIt really wasn't anything great. It was a little longer and average in thickness, but it was fun to say. I looked at Kyle. The hard on in his pants was hard to miss. \n\nGray was just watching, amused, and smiling. The smile assured me he was proud of me. That made me want to do more. \n\nI apologized to Sean and got off his lap. I told him I needed to greet our new guest. I got down on my knees and started sucking the guys cock. \n\nSean actually said, \"That's Ok, I got to get going anyway.\" He patted me on the head and said, \"Nice fuck. We'll have to do that again sometime. \n\nI giggled.\n\nI looked at the new guy, \"Anything special you want?\" I purred while handling his cock. I looked him in the eye and said, \"Anything, anything at all.\" \n\nHe looked at Kyle, then he looked at Gray. Gray shrugged and smiled. \n\nThe guy not knowing what to do said, \"Can I cum in your mouth?\" \n\n\"Mmmm,\" I said. \"I love a guy who cums in my mouth. Sit down. Let me suck you.\" \n\nThe guy sat on the couch. I wrapped my mouth around it and started sucking. Every once in awhile I'd stop. \"How big a load do I get. I love the taste of cum.\" \n\nIt only took a few minutes before his cock started to throb. It wasn't a big load and I swallowed it all. \n\nGray looked at Kyle, \"Why don't you take care of your friend. I'll drive your wife home.\" \n\nKyle left and I was standing there naked staring at Gray. \n\nHe laughed, \"There's a toothbrush and mouthwash in the bathroom, go take a shower.\" \n\nThe shower felt good. I felt restored, I felt clean, and I felt pretty. \n\nGray took me in his arms, \"You little slut, you did good today.\" \n\n\"Thank you,\" I said. I laid my head on his chest. \n\nHe put a finger under my chin, lifted my face, and kissed me. He'd never kissed me before. I actually started to tear up. \n\n\"Anything wrong.\" Gray asked. \n\n\"No, it's just you've never kissed me before, Kyle loves me. He'll kiss me even if I am a slut. Other guys don't think about it, but their kisses don't mean anything. You kissed me knowing I'm a slut. It's nice.\" \n\n\"Well, if you liked that. I think you'll like this.\" \n\nHe picked me up and carried me to his bed. He was tender with me. Treated me more like a lover than his slut. I came twice. At the end I begged him to cum in me. He did. I could feel it as it sprayed inside of me. \n\nGray said, \"I'd better get you home.\" \n\nI went looking for my suit. I went to put it on and Gray stopped me. \n\n\"I can't go home in just my wrap,\" I said.\n\nIt looked like Gray was thinking. \"No, I suppose not he said.\" \n\nHe pulled a wrap from Ambers closet. It barely covered anything. \n\n\"Here, put this on.\"\n\nThe whole drive home I was hoping the girls were already in their rooms and wouldn't see me. Part of me hoped they weren't. \n\nWhen we got home, Kyle was already there. Tam was still up with him. Gray said his hellos. \n\nTam looked at me and said, \"That's not the wrap you were wearing when you left.\"\n\nI explained the other stuff was wet and Gray lent me this out of Amber's closet.\n\n\"So,\" Tam said. \"You're naked under that?\"\n\nI nodded. \n\nTam looked at Kyle, then me, and then Gray. Kyle looked red faced. \n\n\"Hmmm, Gray, I'm beginning to think you see a lot of naked women,\" she laughed.Then she started walking to her room. She stopped, turned and said, \"I'm waiting for my present.\""
    ],
    "authorname": "Imstillfun",
    "tags": [
        "cuckold",
        "mff",
        "slut wife",
        "ffm",
        "two women one man",
        "threesome"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/he-let-them-have-me-02"
}