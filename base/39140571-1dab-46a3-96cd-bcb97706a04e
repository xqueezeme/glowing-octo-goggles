{
    "title": "Waiting in Line for the New iPad",
    "pages": [
        "It was about 10 o'clock that Dylan started feeling he'd bitten off more than he could chew with this whole waiting in line overnight thing.\n\nHe'd never done it before, and as he had rocked up outside the Apple Store just after dinner that evening, around 6pm, he'd seen all the hardcore techy geeks already camping out there, and he was given the distinct impression that he was packing rather light for the night's wait. \n\nBut it was the summer, school was out for good - until they headed off to college in the autumn - so where was the need to stress about anything? He had his kindle packed full of books he could quiet happily bury his head in for hours and hours on end, it was wonderfully warm out, without a cloud in the sky.\n\nWhat did he need sleeping bags or tents or camping stoves for?\n\nHe got quite a good position in the line, considering - just around the corner from the store entrance, and the speed the line was forming, in no time he could consider himself toward the front of the queue. \n\nHe settled down just behind a gaggle of lively, talkative girls, and ahead of a gloomy bunch of black-haired emo types.\n\nThe girls all seemed to be close friends that had overlooked the possibility of one of them waiting in line for all of their purchasing needs when the next iPad officially went on sale. Well, on the news that morning they'd been saying there would be limited supplies - the Apple guys would probably restrict it to one iPad per buyer.\n\nIt wasn't the most comfortable place to hang out - sitting cross-legged with only a backpack holding a paltry few snacks and drinks to keep him comfortable. But hey, he'd waited in airports in worse places for longer periods before. And having the gentle scent of perfume wafting past his nose every now and again from a group of undeniably attractive girls was mildly pleasant.\n\nGazing back on the great long line, it seemed that those waiting there were all circling into their own little cliques to wait out the night. It made Dylan feel very much on his own.\n\nHe found some distraction in flicking surreptitious glances over to the girls if he started feeling solitary. There were five of them - two blondes, an Asian girl and two brunettes - all pretty and smiley and bouncy and perky. Behind, the emo crowd was less entertaining - sullen, moody, and difficult to tell even what gender many of them were. Those nearest to him turned their backs on him as they focused on their own little world of depressing ipod tracks, black clothing and random piercings.\n\nEach to their own, however. Dylan had always been a little envious of those students who'd found their own sense of identity - he was just an average guy who really had nothing special to write home about. \n\nPerhaps college would be a chance to shine.\n\nSure, he did regret failing to check whether any of his friends might have wanted to come along, keep him company in the line. Isaac was never going to vacate a warm bed for even one night, of course, but Clyde and Justin were always able to find a hint of adventure in even the most unfortunate of circumstances. \n\nBut, they'd probably cackle at him for being a big geek, waiting all night just to get his hands on a new iPad. Why can't you just wait until the next day, or the next week, when the rush will be over? They'd probably say something similar, anyway. Even if he told them it was his sister's birthday was the following day, and it was seriously important that he get her desperately-desired tablet before then, they probably wouldn't understand.\n\nFor the first couple of hours he tried to focus on his book - a chunky Stephen King tome he hadn't gotten around to reading yet, even though it had been out for a while.\n\n\"Hey, how's it going?\" his mom called at about eight o'clock, worried about her little man.\n\n\"Oh, fine, yeah. I got a good place in line.\"\n\n\"Are you warm enough? Do you want me to bring some more clothing?\"\n\n\"It's sunny out.\"\n\n\"It won't be for much longer. It gets cold at night when there's no clouds, Dylan.\"\n\n\"I'll be fine.\"\n\nHe talked quietly into his iPhone, not wanting to be overheard, especially by the girls up ahead. He didn't think they'd be listening in - they had their own constant stream of conversation about this album or that album or the latest relationship status of friends not currently present to protect themselves from gossip. Even so, he didn't want them knowing the only person who knew he was here was his mother.\n\nA little later, as the sun started to drop rapidly drop the other stores of this open-air mall, and the breeze took on a slight chill, he started to regret not asking his mother to bring something warm. He had a thin sweatshirt he could put on - but he'd been using that as a cushion the past couple of hours, after his butt went to sleep on that hard concrete sidewalk, and he was loathed to go back to bare ground.\n\nBut seriously, when he glanced over and saw how attractive those girls were, and how much more stylishly they were dressed - and clearly more popular than him at whichever school they attended, you could tell from their bounding self-confidence levels - there was no way he could have faced a visit from his mom in front of them. How humiliating that would be. \n\nSo he'd suffer in silence.\n\nThe light faded, and the light of his kindle came on. Stephen King was always good for passing time - his conversational style had never failed to comfort Constant Reader Dylan, even if it was supposed to be horror fiction.\n\nWhile he did his best to respect their privacy, some of the girls' conversation did catch his ears from time to time.\n\nAbout 10 o'clock, a group of three guys turned up to say hello to the girls, and Dylan found himself trying to work out if any of them were actually dating. The girls were batting their eyelids like crazy as the guys were standing above them, hurling out gentle taunts about waiting in line all night with a bunch of tech geeks, the guys pushing out their chests like big pidgeons to flaunt their athleticism, and Dylan had no doubt the three of them had been on the school football team or whatever. Probably had sports scholarships to somewhere impressive. \n\nDylan had never had particular ambitions in the field of sports, but he did find himself envious of the easy way in which the guys just walked on over here and started up a conversation with these girls.\n\nHe'd been sitting here for hours, and hadn't even introduced himself. Well, their backs were facing him. They hadn't exactly invited it. Probably would have thought it pretty weird.\n\nThe guys weren't going to stick around too long, however, after they discovered that nothing they could say would persuade the girls to bring their queueing ambitions to a halt and come hang out. They certainly weren't going to join the girls and risk being mistaken for geeks - as if that could ever happen.\n\nWhat made Dylan actively stop reading was the conversation after the guys withdrew.\n\nThe girls started gossiping about one of the guys having dated a girl they knew from Spanish class, and how he supposedly had the biggest cock, like, ever. Dylan was mildly shocked at how dirty the conversation went all of a sudden. He was a little surprised at how easily the girls discussed such things, that they were so apparently involved with sex, that it was so easy to talk about for them. Well, they were college girls now, pretty much.\n\nA few of them seemed to be envious of the girl from Spanish class, but then the brunette in the turquoise top caught Dylan's attention when she dismissed all of the guys out of hand.\n\n\"You're insane!\" her friends were of the same opinion about her.\n\n\"Are you kidding? They're so much hard work!\" she laughed. \"Give me a vibrator and a pack of double-A batteries any day.\"\n\nThe whole group had a good squealing laugh about that.\n\n\"Guys are so useless,\" the brunette said. Dylan had already figured out from earlier conversation that she was called Noelle. There was something about her that made his heart tighten a little when he laid eyes on her, his breath catch, his pulse quicken a little.\n\n\"But they're so nice-looking,\" countered one of her friends - a blonde named Chrissy.\n\n\"Sure, but they just lie there and look nice and expect you to get all hot and sweaty until they're ready to fuck - and then they're in and out so quick. Where's the reward?\"\n\nThe other of her blonde friends, Sasha, added: \"Yeah, and when they're done, they really aren't interested in anything. Except maybe sleep or a cigarette.\"\n\n\"You just need to learn to get yourself going while you're getting all hot and sweaty with them,\" the Asian girl, Ellie, said.\n\n\"I guess so,\" Noelle flashed her eyes. \"But that kind of gets me back to the point that you're better off with a Pocket Rocket.\"\n\nDylan found himself gasping, blushing furiously, actually shocked at what these girls were talking about - especially Noelle. He couldn't help but find himself heating up inside at their startling frankness, particularly when the pretty brunette in the turquoise top was talking about her own desires and experiences.\n\nIt did make him feel like a bit of a loser that he'd never really done anything with a girl before. Strange - he'd never been bothered by that before, figuring he was young, there was plenty of time at college to go looking for that kind of thing.\n\nHe found himself envious of whichever boys had been lucky enough to be with Noelle - and actually baffled that they wouldn't want to be more careful about making sure she was satisfied in bed. God, if it was Dylan, he'd want to spend hours exploring her, finding out how to make her moan and shake and come like crazy. Putting his illicit after-dark reading into practice. \n\n\"Josie Bannister said she had an orgasm when she slept with her piano teacher,\" Ellie said.\n\n\"Yeah, but he's like 42. I mean, ewww.\"\n\n\"35, she said.\"\n\n\"Still. I've seen him - he looks like he's 50.\"\n\n\"So you're gonna wait until you're 35 to get an orgasm?\" Sasha nudged Noelle with an elbow.\n\n\"Did you not hear me when I said I'm quite happy with my little Rocket?\" Noelle replied.\n\nOh God, the thought of Noelle lying back in some bed, touching herself with some little piece of vibrating magic - Dylan had to change his position a little to give himself some room inside his pants.\n\nHe shook his head, knowing he was only setting himself up for disappointment by listening into their conversation. He fixed his eyes back on the continuing narrative of Stephen King, and the tale of a small town in Maine that is cut off from the outside world by a strange invisible forcefield.\n\nBut then Noelle's words just cut through the air, \"They're all just lazy - they don't care. They know as soon as they're inside you, that's it, they've scored another notch on their bedpost, and they don't need to worry about anything else.\"\n\nDylan ducked down, trying to stop himself from eavesdropping. Yet he was beginning to feel like sticking up for his gender - or at least, the members of his gender that attractive girls like these would never ever think to date. \n\n\"So you're not going to ask Bobby Marrs out, then? You know he's after you.\" Another voice - Marie, one of the brunettes.\n\nNoelle said: \"I guess we can hang out before college. He's probably just as pathetic as the rest of them.\"\n\n\"He can bench 400 pounds apparently. You don't want a piece of that?\"\n\nNoelle sighed. \"I don't really have any choice, huh?\"\n\n\"If you don't, people will say you're frigid\u2026\" Ellie with a sing-song warning.\n\n\"I guess. He's going to suck just like the rest of them.\"\n\nDylan was again surprised. That someone as attractive as Noelle should have no other option than to go for the gym rat who was pursuing her, because otherwise her peers would think her some kind of loser.\n\nHe said: \"Why don't you just tell him how to make you feel good?\"\n\nSilence. Dylan felt his insides go into total nuclear meltdown. His inner temperature must have soared into the millions of degrees, his stomach was bubbling as the flesh boiled, his kidneys were merging with his liver and his heart was having seizures. Any moment the President was going to have to call FEMA, evacuate the area, declare a state of emergency.\n\nHad he really just said that out loud?\n\nHad he really said it loud enough for them to hear?\n\nOh. My. God.\n\n\n*\n\n\nHe felt five pairs of female eyes slowly descend on his slight, cowering form. The air was thick with the tension of unrestrained anger and venom. How dare this stranger listen in on their conversation? How dare this loser geek infringe on their own private gathering! What a complete freak for butting in! \n\nHe could imagine all the insults flying his way, the squeals of horror, the cutting criticism.\n\nBut there was only silence.\n\nThen Noelle said: \"Uh\u2026 I don't think so. Guys do not want to hear a girl telling them what to do. Especially when it comes to that.\"\n\nIt was as though being right was far more important to Noelle than pointing out what a complete loser Dylan was for eavesdropping and butting in.\n\nDylan again found his mouth betraying him. \"You ever try it?\" he asked.\n\nHaving been sitting side-on to him, the pretty brunette turned her head to him now, her gaze fixing right on him. He felt a burst of searing energy jolt through his heart as her stunning blue eyes latched on his face, and she was actually looking at him.\n\n\"I don't need to try it to know they can't handle it,\" she said.\n\n\"And you can't force them to deal with it? To do what you want?\"\n\n\"Uh, no. I do want to have a social life.\" \n\n\"What's the point in sleeping with them if they don't satisfy you?\"\n\nHe could not believe he was talking to such a gorgeous girl about sleeping with someone.\n\n\"Because let's face it, we're not going to get better elsewhere,\" she said.\n\nHer friends were silent, not quite knowing what was going on. Who was this stranger? Why was he arguing with Noelle? Was he nuts? Was he drunk? Was he abusing his prescription?\n\n\"Sure you are,\" Dylan said, then felt his mouth really running out of control again as the words just seemed to fall out: \"Someone as attractive as you could get better anywhere.\"\n\nHe saw Noelle's cheeks flush slightly, and suddenly felt bad, that he'd embarrassed her in front of her friends. He didn't mean to do that, not at all.\n\nBut she seemed to brush past it, re-asserting herself to regain the high ground, insisting: \"If a girl tells a guy what to do, it's like demeaning his masculinity.\"\n\n\"And that's based on what evidence? Gossip Girl?\"\n\nNoelle rolled her eyes, and Dylan heard one of her friends chuckle. She said: \"You have no idea.\"\n\nHe felt his insides cooling down a little, but they were still fluttering full of butterflies. Jeez, he was being bold. This was actually fun. Talking back to a member of the opposite sex like this - who would have thought?\n\nDylan got the feeling he'd never see these girls again - so what the hell if he made a fool out of himself in front of them?\n\nHe said: \"Because I'm a guy, I have no idea what guys think?\"\n\n\"That's not what I said,\" she huffed. \n\n\"That's what it sounded like.\"\n\nShe rolled her eyes. \"Now you're just pissed because you know you're completely replaceable in the bedroom by a piece of vibrating plastic you can get for $9.99 on Amazon.\"\n\n\"Oh, I can do more than just vibrate,\" he said, surprising himself again with his own boldness.\n\nHe heard Noelle quietly gasp at that, and look away mild outrage at one of her friends. It made him feel all tingly inside to provoke her - had he really meant to sound quite that dirty and suggestive?\n\nNoelle tried to conceal her reaction by taking the argument back a point or two. She said: \"Guys feel all small and pathetic if girls tell them what to do. They can't handle girls who know what they want.\"\n\n\"You're obviously not hanging out with the right guys,\" Dylan said.\n\nShe shook her head, insisting she had it right. She said: \"We shouldn't even have to tell guys how to do it. They should know. Girls spend all their time reading magazines and stuff about how to please their man - and guys just look at the pictures and jack off.\"\n\n\"That's not true - plenty of guys read up on how to do it.\"\n\n\"I've never met any.\"\n\n\"You have now.\"\n\nNoelle sniffed, and then turned away from him, back to her circle of friends, ignoring him again. Somehow, he could tell he'd irritated her, that he'd infuriated her, that she hated not having the last word. Dylan felt a little pang of regret that he hadn't done better at keeping her onside. It had made him feel all warm and creamy inside when he was talking with her.\n\nBut now her friends were talking about going to get food, and Noelle seemed just as eager to get something to eat.\n\nDylan felt his stomach rumble - the thought of the packet of chips and can of diet Coke in his backpack, along with a measly Hershey bar, did not particularly appeal to him. The girls looked as though they were preparing to leave the line entirely to go hit the McDonalds around the corner. Surely they wouldn't risk losing their spot in the line?\n\nSomebody piped up - he didn't hear who - about the very issue he was currently pondering, and there was a discussion about one of them needing to stay behind to protect their precious place in the queue.\n\nDylan felt his chest warm up a degree or two as Noelle volunteered for the job, so long as they brought her back a Chicken McNugget meal. For however long those girls spent getting their fast food, Dylan would be sitting alone with Noelle. Why had it been her that volunteered to stay behind?\n\nNerves flickered in his belly, but he tried to settle them by telling himself he'd got it wrong - there was no way Noelle had volunteered to wait in line for everyone else.\n\nYet the other girls all stood and gathered their things and at their leisure departed, leaving the feisty brunette there sitting no more than five feet away from him, all cute and curvy.\n\nHe tried not to look, tried to focus on his Kindle. She'd think he was some kind of pervert if he stared now that her friends weren't around to shield his gaze from her. Oh, but she was so sweet on the eye, with those big blue eyes, flowing figure and long legs revealed by her summery skirt.\n\n\"So who are you, anyway?\"\n\nHe almost missed it - almost dismissed it as his imagination. She was looking at him. She'd said something to him. She'd asked him who he was.\n\n\"I've never seen you around school,\" she added, and Dylan felt his heart do a little somersault.\n\n\"Dylan Winfield. I go to St Joseph's,\" he said. \"You guys are from Marchmont, right?\"\n\nShe nodded. \"But you live around here?\"\n\n\"My Mom does. She split from my Dad maybe six, seven years ago?\"\n\n\"Oh, I'm sorry,\" she said, and sounded genuine.\n\nHe shrugged. \"Best thing that could have happened to them - now they're actually kind of friends again.\"\n\n\"But you live with your Dad most of the time?\"\n\n\"They didn't want me to change schools.\"\n\nShe nodded. \"Sometimes I wonder if my parents will split up some day - they seem to argue all the time.\"\n\nThere was a slight pause, Dylan didn't know what to say about Noelle's parental strife. Oh, but he didn't want the pause becoming awkward. He was talking to an attractive girl one-on-one! Okay, so it shouldn't have been a big deal for someone of his age, but he had to concede that he was shy, that was his nature. Now he was worried she was going to think he was dull, he'd run out of things to say.\n\nHe opened his mouth and just said the first thing that came to his mind: \"Hey, look, I'm sorry I interrupted your conversation with your friends.\"\n\n\"Oh, no, that's okay,\" Noelle said, and actually smiled. \"Oh, I'm Noelle, by the way. Noelle Shaw.\"\n\nAnd then he nearly jumped out of his skin as she suddenly picked herself up and moved closer to him, so she was sitting right next to him, leaning up against the wall of the store as he was.",
        "\"It's kind of nice talking to someone different for a change,\" she said. \"I feel like I say the same things to the same people all the time.\"\n\nHe caught a hint of her fragrance on the breeze, and couldn't help but melt a little inside. She was so gorgeous. She had a girl-next-door freshness, a small-town sweetness, but the confidence of a glamorous catwalk model.\n\nDylan felt she'd mistaken his own reckless bravado for a similar innate confidence. Women liked confidence in a guy - he'd read that often enough - and yet the irony of it was, most really confident guys their age were the kind of selfish idiots that would never bother to please anyone but themselves, even if they had a goddess like this interested in them. \n\nOh, he felt all weak in the knees to have Noelle sitting so close to him, but he knew he had to attempt to portray some kind of confidence if he was going to maintain this veneer that had somehow enticed this princess from the school across town to come talk to a lowly frog.\n\n\"So it sounds as though girls at Marchmont are being hard done by when it comes to the guys,\" he said, trying to sound casually headstrong.\n\n\"I guess we are,\" she said, smiling broadly. \"So are St Josephs guys so different?\"\n\nDylan shrugged. \"I think we probably have our own fair share of idiot jocks interested in noone but themselves.\"\n\n\"But there's also guys who could\u2026 you know\u2026 out-compete a vibrator?\"\n\nWas she being flirty with him?\n\n\"I should imagine there's a few of us,\" he said, once again surprising himself at how brazen he could be.\n\n\"And wait,\" she said, \"Are you saying that's because you guys hace read up on how to do it, or are you saying St Josephs men can actually handle a girl telling them what she wants?\"\n\n\"Both, I've no doubt at all.\"\n\nShe flashed her eyes at him. \"Intriguing,\" she said. He saw her fingers fidgeting with the hem of her skirt, drawing his eyes down to the alluring sight of her thighs. \"You guys must have girls queuing up for dates, huh?\"\n\n\"Not especially,\" Dylan said, his mind scrabbling for some kind of explanation other than - well, most guys who know how the biology of the female body works are so shy and socially awkward they won't manage to even talk to a girl until at least college graduation.\n\nInstead, he said: \"Trouble, I think a lot of girls don't seem to know what they want.\"\n\nThere was another pause. Dylan wondered if he'd offended her by suggesting girls didn't know what they wanted in a guy. That all their problems were their own fault.\n\nBut she broke the pause by saying: \"I know what I want.\"\n\n\"That's good. I like a girl who knows what she wants.\n\nJumping Jehoshaphat - where did that come from? That was flirting, wasn't it? Class-A, triple-distilled. Where on Earth did that come from?\n\nNoelle said: \"So Dylan, do you like it when a girl tells you what she wants?\"\n\nDylan felt all aflutter - so light, he could have floated away if there had been any kind of breeze. Doing his utmost to keep calm and collected, maintain the pretense that he had some kind of confidence going on, he answered: \"I can't think of anything better. It usually means I can give her exactly what she wants - and then everyone's happy.\"\n\nOh, that wasn't good. A white lie - making her think he was actually experienced. But she wouldn't want to keep flirting with him if she knew he was a virgin, would she?\n\nShe nodded, buying his lie. \"It doesn't damage your manly reputation?\"\n\n\"Of course not. If I know what a girl wants, I can make her feel amazing, and surely that makes me more of a man?\"\n\nShe gave him a mock swoon, fanning her face with a hand like a Southern lady. \"Lord have mercy,\" she said. \"Where do I sign up for whatever college St Joseph's boys go to?\"\n\nDylan smiled, feeling so warm inside, he didn't even need an extra sweater now. \"This time of year? Good luck.\"\n\nShe laughed.\n\nThen he looked up to see Noelle's friends all returning bearing brown paper bags stuffed full of fast food, and his heart sank. Was that it? Now that her friends had returned, she wasn't going to want to be seen talking to someone who looked like him, a guy with no puffed-out chest or anything - just unkempt black hair and old clothes that were kind of fraying at the edges.\n\nBut as the other girls approached, she didn't move an inch, remaining sitting right where she was beside him.\n\n\"Guys, this is Dylan,\" she called out. \"He's cool.\"\n\n\"Hey, Dylan!\" Dylan flushed a little, though he tried not too.\n\n\"And Dylan, this is Ellie, Chrissy, Sasha and Marie.\n\n\"Hey, how's it going?\"\n\n\"We had the feeling you might be joining us, Dylan,\" Chrissy said, and to his utter surprise handed a brown paper bag to him. \"Quarter-pounder okay? We figured if you're man enough to stand up to Noelle here, you probably wouldn't want anything less.\"\n\n\"Seriously?\" he asked, but felt overjoyed at being included in the meal.\n\n\n*\n\n\nAs proper darkness came, Dylan was surprised to find people in the queue actually bedding down in sleeping bags and - a few - in tents. It seemed ripe for some unscrupulous types to find ways to jump the line, but he supposed that everyone knew well who was in front and behind them in the queue, so it would be easy to self-police the line.\n\nOver a pleasant supper, Dylan found himself fitting into his new circle of adopted friends comfortably. They seemed to make certain social assumptions about him based on the fact that he was hanging out with them - that he liked certain bands, that he must be a regular party-goer and all round social alpha-male at St Josephs.\n\nHe did his best not to lie, but saw no reason to correct their views of him, either.\n\nHe found out more about Noelle and her friends - they seemed so normal to him, even though they were all like minor deities to him. They didn't seem to talk much about the whole reason they were all there - the upcoming iPad launch - and he began to suspect that only Chrissy was anything close to being an Apple geek. \n\nThey seemed quite impressed that he was queuing through the night on behalf of his sister - that got him some brownie points, and a lovely smile from the enchanting Noelle.\n\nConversation was easier when there were more people to share in it, and Dylan found that although he was grilled quite a bit as the newcomer to the group, he was able to leave the talking to the others when the subject came round to areas in which he was not an expert. \n\nCompared to everyone else in the line, their group seemed to stay up much later - into the small hours. Until midnight came and went, the girls' conversation appeared to steer clear of the kind of dirty subjects they had been talking about before Dylan came along. But as they passed into the day on which the mighty iPad would be launched, things began to loosen up a little again.\n\nAll through the evening since he'd joined them, Dylan had been given the strange sense that the other girls were trying to get him interested in Noelle. He thought at first that it was just his ego going nuts because a pretty girl had actually shown him a tiny bit of attention that night. \n\nBut as things drew on, it was hard to mistake it. \n\nThere were the unabashed attempts to impress him with something about her.\n\nEllie saying at one point, \"You know, Noelle's, like, one of the best swimmers in the Marchmont team?\" \n\nChrissy telling him: \"Noelle's going to get into law school, you know that, Dylan? She's so brainy. She's Ivy League brainy.\"\n\nOr the fact that she'd once been on Good Morning America as a seven-year-old, or the fact that she used to be the best gymnast in middle school before she took up swimming because it was less traumatic on the joints. \n\nThere was the way that every now and then when some small detail about Dylan emerged - his passion for travel, for example, or his love of movies - they tried to point out how his interests fit so well with Noelle's.\n\n\"Noelle drags us to the movies, like, all the time.\"\n\n\"Hey, haven't you been to Italy, Noelle?\"\n\nNoelle seemed to be good at fending off the more obvious attempts, and Dylan just found himself ignoring it in order to protect himself from blushing. What was going on?\n\nAfter midnight, and a lot the queue-goers around them seemed to be fast asleep, all bedded down and blanketed up, and the girls' voices might have gotten a little quieter out of respect for the sleepers around them, but their conversation topic took a distinct turn for the filthy again.\n\n\n *\n\n\nSomebody had said there was a rumor that St Josephs people had regular rainbow parties, or at least that's what Chrissy had asked Dylan about once things started getting more relaxed and there were less concerns about the queuers around them overhearing.\n\nDylan wasn't entirely up to speed on what rainbow parties were, but he had five faces eagerly after information on whether he could substantiate or deny these rumors. \n\nHe was a little put out that they should assume a normal guy would know what one of these 'rainbow parties' was. Was he so sheltered? Did normal guys know all about this?\n\nHe assumed it was some kind of drug thing. Psychedelic drug-taking, perhaps. People seeing rainbows as they hallucinate. Or maybe it was a gay thing - wasn't a rainbow flag a symbol for the gay community?\n\n\"Sure, I've heard they happen,\" he said dismissively. \"It's not really for me.\"\n\n\"Not for you? You ever been invited?\" Chrissy pushed him.\n\n\"Sure.\"\n\n\"So what, you said 'no'?\"\n\n\"It's not really for me.\"\n\nThere were a few eyebrows at that. Noelle gave him a funny look, and he couldn't quite work out whether she was somehow impressed at him - no doubt for keeping his nose out of drugs - or baffled as to why he should pass up such an opportunity.\n\nOr maybe she could tell he'd told a white lie hoping they'd just drop the subject.\n\nShe said: \"I thought you said guys from St Josephs were above all that demeaning stuff.\"\n\nHe was a little confused himself. Maybe he'd got the meaning of the term 'rainbow party' wrong. He said: \"I didn't say all of us, did I?\"\n\nShe said, with a skeptical note: \"And you're seriously telling us you turned down a whole night of free blow jobs?\"\n\nHis ears burned. A whole evening of what-what? Now he suddenly found himself wanting a quiet corner where he could consult Google via his iPhone. \n\n\"I don't know, sounds like a weird thing to me,\" he said.  \n\nShe said: \"Doesn't it?\"\n\nHe felt a sudden drop in tension in the air - he did not like lying to this girl. It really was not worth it. Ellie said: \"Robbie Fallon and Archie Settler have been trying to talk girls in our school to throw one for ages.\"\n\n\"It's an urban myth,\" Sasha said. \"Nobody really does that.\" \n\n\"But they do at St Josephs?\"\n\n\"Well, I've never actually seen one,\" Dylan said, feeling himself hot under the collar, really wanting them to drop this subject.\n\n\"I bet you have,\" Ellie said. Were they taking the wrong interpretation of his blushing?\n\nNoelle looked at him and gasped, putting her hands to her mouth - was she kidding around again? She said: \"You have, haven't you?\"\n\n\"No, I - \"\n\nShe said: \"I thought you said you were all read up on, you know, how to please a girl in bed. You're all in tune with how to make them\u2026 you know. And you've been to a rainbow party?\"\n\nDylan felt sick. Maybe he had been wrong to think Noelle had ever really liked him, and that this group of girls was simply setting him up for a fall. Toying with him. He was disappointed in the revelation that he was an idiot, though.\n\nHe said, pointlessly, \"Maybe some of those girls like it.\"\n\nJesus, he was defending an urban myth now.\n\n\"Like it? A whole evening of giving guys blow jobs? And what do they get for their trouble other than a face full of jizz?\" Noelle huffed again. She said: \"That's the thing, isn't it? Girls will do that sort of thing to make guys happy, but guys won't do it for girls.\"\n\n\"Sure they will,\" he said. Well, he didn't have the experience to back it up, but he read around the subject enough. There were plenty of male authors of erotic fiction writing about that kind of thing for him to know there were some guys out there who liked it. \n\nThe whole idea thrilled Dylan himself no end - if only some willing girl would let him.\n\n\"They will? Can I quote you on that, Rainbow Boy?\" Noelle's friends laughed at that, at her new nickname for him.\n\nHe wasn't sure why they called it 'rainbow', but he was sure it probably wasn't the best nickname someone could have. \n\nDylan felt awkward, he felt cornered. He let his mouth wander again, and that was always dangerous. It said: \"Here's the thing - a lot of guys love doing that, but there's no way any of them can if girls won't ask them to.\"\n\nNoelle rolled her eyes. \"Here we go again,\" she said, seeming to coil herself up ready for a return to the earlier argument.\n\n\"No, hear me out,\" he insisted. \"Girls can assume if they offer a guy a blow job, he's never going to say 'no'. But girls have all kinds of paranoid fears of letting a guy do it for them, that he won't like it, that he won't like how it tastes or smells, that he'll never want to see her again. So they never seem happy to let guys do it, so guys figure they don't like it anyway, so they don't offer to do it. It's a vicious circle.\"\n\n\"You're saying it's our fault?\" Noelle was irritated at him again.\n\nDylan heaved a sigh. He didn't know what to say now, every word that left his mouth seemed to be the wrong thing.\n\nHe said: \"Look, you know what the teachers told all the guys in St Josephs when they were freshmen?\"\n\n\"I don't know, what?\"\n\n\"They took all the guys aside, and sat us down and explained to us that we might be starting to like the look of the girls right now, and that we might find ourselves tempted to do something about that, but that if we laid a single finger on any of them, there was a chance we might be accused of rape.\"\n\nDylan spoke the truth. St Josephs might not be like most high schools out there, with its strong Catholic traditions, but that particular 'sex ed' class had certainly left an impression on its male students. \n\n\"Seriously?\" someone said.\n\nNoelle remained quiet, one eyebrow raised skeptically.\n\nDylan said: \"We were told fairly clearly that if we touched a girl on the god damn ankle, and she wasn't happy about it, she'd be capable of going to the authorities - and that would be the end of our hope to get into college, the end of our future careers, everything.\"\n\n\"Jesus.\"\n\n\"So you know what?\" he said, \"For the guys I know, if a girl doesn't explicitly ask him to do something to her, they're pretty nervous about doing anything with her.\"\n\n\"Wow.\"\n\nThat was Noelle. Dylan looked up, and he could tell she'd believed his story - why shouldn't he? He'd sounded as earnest and truthful as he was. \n\nShe said: \"And that's why guys at St Josephs like girls to tell them what to do?\"\n\n\"I guess.\"\n\n\"Sounds kind of nice,\" one of the other girls said. Sasha, Dylan thought.\n\n\"Nice? Those poor guys! Probably scared out of their heads!\" That was Ellie.\n\n\"Not about the sex ed class - about liking girls telling them how to do it.\"\n\n\"But it probably got the message through their heads about assaulting girls, though, huh?\" Noelle said. But then she looked at Dylan, and her expression seemed to soften. \"So what would you do if a girl asked you to?\"\n\nHe felt his insides turn to molten led, his manhood thickening up quite suddenly in his pants. Somehow, everything seemed to have gone quiet, yet his ears were ringing. Nothing quite seemed real. \n\nHe heard himself say: \"Anything she wanted me to do, if it was the right girl.\"\n\nNoelle's friends seemed to have gone deathly quiet. \n\n\n*\n\n\nHe felt a little stupid when Noelle finally unrolled her sleeping bag, and it was quite clear that he was the only person in this part of the line who was going to be without any form of bedding to help him through the night. \n\nShe was the last of them - by the time she'd got her sleeping bag in place, her friends were already bedded down, Ellie and Sasha already asleep.\n\n\"You're going to be cold,\" she said, looking over at his modest little place between her sleeping bag and the nearest emo.\n\nThere was a distinct chill in the air - his mother had been entirely correct about the heat suddenly evaporating after the sun went down. He was shivering a little already, though trying not to show Noelle.\n\n\"I'll be okay - the sun'll come up in a few hours.\"\n\n\"You're insane.\"\n\nThen suddenly she seemed to make a decision, silently to herself, looking at him and standing up, saying: \"I have some emergency blankets in my car.\"\n\n\"Huh?\"\n\n\"I have them in case I ever break down, you know? If I have to wait for roadside assistance in the cold. Come on, let's go get them.\"\n\n\"Oh, really, you don't have to - \" He protested, but she flashed her eyes at him.\n\n\"I thought you were okay about the whole girl telling you what she wants,\" she said, tapping her feet. Dylan heard a stifled giggle from one of her friends. \n\n\"Sure, of course I am.\"\n\n\"So come on, then.\"\n\nAnother soft giggle from somewhere over toward Chrissy's sleeping bag.\n\nShe held out her hand for him, and for the first time he touched her. \n\nHe tried not to show it affected him, though it was hard not to. It wasn't just that her hand was so delicate and soft - somehow the touch made her real to him. The evening had taken on a magical quality ever since he'd intruded on the girls' conversation, and Noelle hadn't turned her back on him. \n\nAs an ordinary run-of-the-mill guy without any kind of lofty position in the school social hierarchy, he had been frankly astonished that these girls would give him the time of day, let alone share a meal and spend all night allowing him in their circle.\n\nNow, the prettiest girl he'd ever laid eyes on was helping him up, ushering him away from her friends, out toward a dark parking lot to fetch a blanket so he could sleep beside her. \n\nHe felt so nervous walking away from the Apple Store with her - it wasn't that he might lose his place in the line, he was fairly confident that was safe, it was that now they were rounding the corner and heading away from the actual mall, into the parking lot, he didn't quite know what to say.\n\nNoelle stifled a giggle. \n\n\"What?\" he asked, worried he was supposed to have done something.\n\n\"You really do do what you're asked, don't you?\" she smiled at him - and now took hold of his hand again. Even in the low light of the street lamps, she looked so beautiful it made his chest tighten up so it was hard to breathe.\n\nShe was holding his hand.\n\nOh, it felt so incredibly right - but what did it mean? She really was interested in him? There was a storm of butterflies now howling inside his stomach. He felt a curious mixture of sheer excitement and a slight tinge of nausea from his jangling nerves. \n\n \"Of course,\" he said, and then as he was going about the process of closing his mouth, it suddenly went off on its own accord again: \"For you, I'd do anything at all.\"\n\nThat secured another of her incredible smiles - dazzling, even in the half light.\n\n\"Most guys would have sat there and probably grunted at me that they were all right, they'd be okay even though it's freezing cold,\" she said. \"The guys I know, anyway.\"\n\n\"I think your friends were amused that we've gone off together,\" Dylan said, thinking he might make her smile again at the thought that her friends were already making baseless assumptions that this whole trek to the car to find blankets was some kind of pretext for some kind of romantic - \n\n\"They've been trying to set me up with various guys for months,\" she interrupted his thoughts. \"I think they're just excited I actually found someone worth talking to.\"\n\nDylan had to conceal a gasp. \n\nFound someone worth talking to?\n\nWhat was going on? He felt as though he was walking on clouds, somehow. Were his ears deceiving him now? She was excited about being with him?",
        "He tried to change the subject, if anything to distract himself from all the confused feelings he had, to calm himself down and prevent himself from misunderstanding this situation.\n\nHe said: \"So are you actually excited about this new iPad?\"\n\nShe gave him a blank look, and nearly dropped his hand.\n\n\"Only, I'm sitting there in the line trying to mind my own business\u2026\"\n\n\"And not doing so great at that, huh?\" she flashed him a grin.\n\nHe shrugged, \"Kind of hard to keep my ears to myself when you're talking about vibrators and stuff like that.\"\n\n\"I guess it must be. Pervert.\"\n\n\"Hey, it wasn't me talking about sex toys in a queue for the new iPad.\" She smiled and rolled her eyes, and he said: \"The emos sitting behind me in the line were talking about iPads the whole time - you can't blame me for trying to distract myself from that.\"\n\nShe laughed. \"That doesn't get you horny, talking about 4G and Retina display?\"\n\nHe couldn't quite tell whether it was going to turn her off that he wasn't completely obsessed with Apple products like his sister, or whether it was a good thing.\n\n\"Well, I mean they're handy to have\u2026\"\n\nShe laughed, \"You're worried we're all geeky girls and I'll find you boring because you're not in the waiting list to work on the Genius Bar?\"\n\nTo be honest, he'd never thought any of them might be termed 'geeky'.\n\nShe said: \"It's Chrissy. She's a total tech geek. And she has to have the latest new anything the minute it's out.\"\n\n\"Oh, right, I see. My sister's just the same.\"\n\n\"Only it kind of sucks waiting in line on your own all night - so we all came along for the ride.\"\n\n\"That's very nice of you.\"\n\n\"Hey - it's the summer. Not like we have to do anything else tomorrow,\" she said. \"Your friends didn't feel the same way, then?\"\n\n\"I didn't really tell them. Don't think they'd be quite so understanding about the whole sitting around all night for an iPad kind of thing.\"\n\n\"You're very sweet to do it for your sister.\"\n\n\"If it gets me in her good books for a few weeks, it's a price worth paying.\"\n\n\"Hey,\" she said, as came to a halt between two SUVs. There weren't too many cars in the parking lot, but Noelle had pulled them over to a cluster that he'd assumed belonged to her and her friends. \n\nShe stopped him, pulling him back to her. \n\n\"Are you still up for letting me tell you what to do?\"\n\n\"Letting you?\" he joked. \"I don't think you get how to do this.\"\n\nShe rolled her eyes again, but then she said: \"Fine. Then I'll just tell you.\" \n\n\"Sure.\"\n\n\"Kiss me. Now.\"\n\nSomething like a small hand grenade went off inside his upper chest. He couldn't hear it, but the burst of intense heat and shock from the blast was quite clearly detectable.\n\nWhat did she just say?\n\nBut he hardly had a moment to process what she'd demanded of him as she pushed him back against the black four-by-four vehicle, launching herself at him. Complete surprise and overwhelming confusion made him putty in her hands.\n\n\"Okay\u2026\" he said as she pulled him down to her level, placing her hands on his chest.\n\nHis chest filled with her sweet perfume, and his whole body trembled with pent up desire and shock. She was so close to him, he could see her individual freckles, even in this low light. Her eyes, highlighted by mascara and eyeliner, were astonishingly beautiful - so bright and sparkling with intelligence. \n\nThen suddenly he felt the heat of her face on his, and her soft breath dancing on his skin, and then her lips were nudging against his, so he could feel the slight waxy texture of her lipstick.\n\nShe was kissing him. The most attractive girl he'd ever met. Kissing. Him.\n\nIt wasn't quite his first kiss, but it might as well have been. \n\nShe sucked gently on his lips, and then he found his hands moving up to hold her head, almost checking to see if she was real, solid, not some kind of wonderful dream as he lay sleeping crumpled in a queue outside the Apple store.\n\nMore than a little insecure in his inexperience, he took his cues from her, he tried to learn from her, he mirrored her moves, gently sucking on her sweet lips, nudging his nose against hers, reveling in the velvet softness of her cheeks against his, inhaling her tantalizing scent with every fathomless breath.\n\nTime just seemed to slow down and stop, as they entered a little world of their own.\n\nNoelle smiled at him even while they continued kissing, and it sent his temperature skyrocketing. He felt her press against him, and to his horror realized she must be able to feel the massive erection that her incredible attention was causing. Yet she didn't seem horrified by it - she actively pressed herself tighter against him, and suddenly as her kiss lingered, he felt her tongue delving between his lips - oh God, she was so hot.\n\n\"Oh my God\u2026\" she said, breathless like she'd just run the 100 metres in the Olympics, her eyes flickering all over his, her brow creased as though in confusion. \"How did you learn to kiss like that?\"\n\nShe didn't give him a chance to answer - thankfully, since he didn't know what exactly to say. Probably not a good idea to tell her he'd only really ever learned anything from her. She was kissing him, pressing herself up against him, her tongue sliding inside his mouth, now, not holding back. \n\nHe tried to give as good as he got, but her passionate energy was intense, and like lying under a refreshing waterfall, he just had to let the incredible power flow over him.\n\nAs she kissed him, he found he did really enjoy her taking control. Ever since his blundering fumblings in eighth grade, the few times he'd been lucky enough to find another girl interested in a little smooching, the girl had always pretty much opened her mouth and sat there. \n\nThis was electric. And now as he found himself  sucking on her tongue, Noelle was grabbing his hands, and forcing them up her chest, demanding he touch her breasts. \n\n\"Just there\u2026\" she breathed as his fingers closed around the sensational shape of her cleavage.\n\nOh God in Heaven, he was actually holding her beautiful round breasts, and she actually wanted him to. He could feel the stiffness of her nipples, even through her bra and top. \n\nDylan took direction from her, and at first she seemed to find it strange, leading him. Putting his hands where she wanted them, guiding the speed and intensity of their kiss. For a moment, she looked at him, her eyes open, trying to figure him out. Perhaps check whether he was only allowing her to lead as some kind of lame follow-up to his earlier suggestions, all one long strategy to get her interested in him.\n\nBut he could see her come to believe that this was wonderful for him - he didn't feel any sleight against his masculinity, how could he? He was entangled in the most beautiful girl he'd ever seen.\n\nHe touched her tenderly, and she seemed to respond to his gentle coaxing of her sensationally soft breasts, writhing and emitting the sexiest moans. But with the incredible sweetness of her kiss, he found himself slipping into a strange kind of dream state, lulled into a strange calm by the exquisite dance of the senses, and somehow he was losing himself in her.\n\nWhen he realized her shirt had ridden up, and her bra had slipped down, and his hands were sprawling over her smooth, soft bare flesh, grazing over her hard nipples without hindrance, he was surprised and a touch confused about how they'd got to that state. Noelle appeared ecstatic that he was touching her like that, however.\n\n\"Kiss me down here,\" she said softly, almost a whisper, and he found himself kissing down her soft neck, breathing in the gentle sweet scent from her skin as he moved down.\n\nAnd then he was taking her nipple inside his hot mouth, tasting her soft flesh, brushing his tongue over her sensitive bud, drawing out a deep long sigh as he began sucking on her.\n\n\"Oh, that's it\u2026 just like that\u2026\"\n\nCaressing her hot flesh with his lips, teasing her with his tongue, sucking with increasing intensity, her sighs turned to moans, and Dylan found that confirmation of her pleasure the hottest thing he could remember.\n\n\"Oh, don't stop\u2026\"\n\nWhy should it somehow demean a guy's manhood to make the girl's pleasure his priority? Surely succeeding in achieving this genuine delight should be taken as demonstrating real and proven manhood. \n\nAfter a while, her moans were almost yelps, and Noelle furiously pulled his face to hers, kissing him with wild abandon, her hands closing over his to force him to virtually crush her cleavage in his fingers.\n\nAt last, she let out a big long groan, her body seeming to shudder as he held her, as though someone had switched on an electric current to flow through her shapely frame. \n\n\"Oh my God,\" she said, completely struggling for breath. \"Oh. My. God.\"\n\n\"Are you okay?\" he asked her, a little confused at the apparent look of shock in her face. Had he hurt her somehow? Had he gone too far? \n\nWas he in trouble for touching her breasts like that?\n\nGod, all those warnings from his teachers at St Josephs came flooding back - he heard the words of some imagined judge somewhere: inappropriate touching, forcing himself upon her, non-consensual molestation\u2026\n\nBut then her pretty face broke out into the most enchanting smile, her big blue eyes so wide and filled with joy, and she looked at him as though he'd just given her the most amazing gift ever.\n\n\"That's not supposed to happen,\" she breathed, her voice full of wonder. \n\n\"I'm sorry\u2026\" he said, still not understanding.\n\nShe shook her head. \"It's a myth, an urban myth,\" she said. \"You're not supposed to actually be able to do that.\"\n\n\"I kind of got carried away, I guess\u2026\" he said, beginning to see that he wasn't in trouble, even finding it amusing how apparently slow his brain was being after being so doped up on the extraordinary experience of kissing Noelle.\n\n\"I mean, I never did that before, not with a guy,\" she said, then kissed his lips briefly again. \"And you did it just by kissing me and touching me.\"\n\nHe felt incredibly warm inside. And how was it that making this girl feel this way felt more of a satisfying achievement to him than getting into Stanford?\n\n\"We should get back to the line,\" Noelle said, pulling up her bra and pulling down her top. \"They'll all be talking about us, I bet.\"\n\n\"We haven't been gone that long,\" he said, but fishing his iPhone out of his pocket was rather startled to find they'd been gone nearly an hour.\n\n\"I wish we could, but I will never live it down if those guys knew you just made me come, and we haven't even had a first date yet.\"\n\nOh wow. He felt himself blush all the shades of scarlet as she took his hand and showed him over to where her car was parked. The undeniable confirmation he'd made her come seemed to set off fireworks inside his whole body - and her use of the word 'yet', suggesting that they would be having a first date at some point in the near future, that just made him fizz all over.\n\nHe was vaguely disappointed that they couldn't just abandon the whole idea of waiting in line for an iPad. Go off and try a little more kissing, a little more touching. Only his mother knew he was there at the Apple store anyway - he'd just tell her the competition for iPads had been so intense, there hadn't even been enough for all the people in the queue.\n\n He'd think of an alternative present for his sister - sure it wouldn't be as great, but hey. \n\nHe knew that was a selfish feeling, and his head was able to override his heart even before Noelle grabbed his hand and led him on to a tiny little beaten-up Volkswagen that seemed like a very down-to-earth car for a girl as hot as Noelle to drive. \n\n\"It's my baby,\" she said, proudly patting the roof. \"Say 'hi' to Rowena.\"\n\n\"Hi, Rowena,\" he said, and made her giggle.\n\n\"The others tease me about her,\" she said. \"But she's the most reliable old girl you've ever seen.\"\n\n\"Reliability's so much more important than anything else,\" he said, being nice about her car.\n\n\"Completely. Having something that'll do what I want is so much better than something flashy that conks out after two minutes,\" she grinned, and he wasn't sure she was talking about her car any more.\n\n\n*\n\n\nWalking back, Dylan already felt better - and not only because of the most incredible kiss of his life. Holding those blankets made him feel so much better about how the rest of the night was going - it was getting seriously cold by now.\n\nThey stopped off at the McDonalds on the way back to use the bathrooms, thankful the place was open 24 hours. \n\nBack in the queue, almost nobody was awake. Dylan found himself feeling a little down-hearted all of a sudden. They were going to find their places in the queue again, and then most likely get some sleep - and that would be it for the night. \n\n\"That's horsecrap - guys don't like doing it.\"\n\n\"Some do. I read about it in a magazine.\"\n\n\"What, like you read about Sasquatch being seen in Tempersfield?\"\n\nAs they found their places, although Ellie and Sasha were still asleep, it was hard to miss the fact that Chrissy and Marie were still awake - Chrissy because she was so excited about getting hold of the new iPad, Marie because Chrissy couldn't shut up.\n\n\"It was in New Look.\"\n\n\"Well I think it would be weird. I'm not sure I want them that close up.\"\n\n\"Are you kidding? It's supposed to be amazing.\"\n\nHeavens knew what the two girls were talking about, but they brightened as soon as they saw Noelle and Dylan making a return.\n\n\"Hey, you two!\" Chrissy said, quietly, although it didn't look as though even shouting was going to wake up Ellie and Sasha.\n\n\"What are you guys talking about?\" Noelle said, affecting a tone of mock-exasperation as she set about laying out the blankets for Dylan directly alongside her sleeping bag - one for him to sleep on, two to go over him.\n\nMarie nudged Chrissy, and the two of them giggled, then the blonde said: \"So Dylan, Chrissy really wants to know if St Josephs girls give head.\"\n\n\"Marie!\" Chrissy and Noelle hissed in unison. \n\nMarie only chuckled.\n\nDylan tried his utmost not to look embarrassed. \"Sure,\" he said.\n\n\"No!\" Chrissy and Marie said together. Noelle busied herself getting into her sleeping bag.\n\nMarie said: \"They don't really, do they? Nobody I know has ever been with a guy that did. Guys don't do it until they're married and they have to.\"\n\nThat made him laugh. He wasn't particularly experienced, but there was no way if he had the choice in the matter that he'd refuse it until marriage.\n\nHe said: \"Why should we wait until marriage?\"\n\n\"Because you don't like doing it,\" Marie said.\n\n\"That's not true,' Dylan said categorically, and then suddenly felt rather embarrassed, having opened up a little too much in front of the girl he was hoping might agree to a first date. And it wasn't as though he was opening up about his own experience.\n\nHe caught Marie flashing a look of - what, envy? surprise? congratulations? - directed at Noelle, who rolled her eyes, but then cast a curious glance Dylan's way.\n\n\"So why don't guys just do it?\" Marie asked.\n\n\"Half of them think they're probably not allowed to, because girls have so many hang-ups about it.\"\n\n\"There are some guys that don't like doing it.\"\n\n\"Sure, there probably are.\"\n\n\"You like it?\"\n\n\"Chrissy!\" That was Noelle, chiding her friend, but now looking at Dylan with the kind of expression that stated clearly she wanted him to answer.\n\n\"What could be better?\" he said simply. \n\nNoelle seemed to catch her breath, but Dylan tried not to look at her, worried he'd be caught out in another half-truth. He wasn't telling a lie that he would be very keen to try it, but hinting that he enjoyed it was getting ahead of himself - he wanted to enjoy it. The idea of going down on a girl was so sexy, it made him tremble with lust. But he'd never had first hand experience.\n\nChrissy gave a loud yawn that made them all laugh, and seemed to suitably distract from the awkward zone the conversation was heading toward. Telling the others that she was going to rest her eyes for a little while, she asked Dylan: \"Have you got any gorgeous friends that are just like you, Dylan? Can you give them my number?\"\n\nNoelle grinned at him, seemingly with pride. It made his ears burn a little, but in a good way.\n\n\"Night!\"\n\n\"Night!\"\n\n\"Night, Dylan!\"\n\n\"Night, Chrissy.\"\n\nHe made himself comfortable, and tried his best to relax enough to allow sleep to overcome him. He could hope that when the morning came, he might get Noelle's number, and perhaps the most unlikely of nights would lead to the most unlikely of first dates for an ordinary guy from the other end of town.\n\nBut maybe when the Apple Store opened its doors, and the line surged ahead, he'd lose track of her in the scramble - and that would be it.\n\n\n*\n\n\nIt was a little later that he heard the whisper: \"You awake?\"\n\nHe hadn't been able to get to sleep - not even slightly. He was so incredibly buzzed by his evening with Noelle - and could not get that kiss out of his head. He'd just been lying there on his back, staring up at the stars.\n\nNow he could detect her perfume again, and then he was startled by a hand snaking over his chest.\n\n\"Yeah, I'm awake,\" he said. \n\n\"Come here,\" she said. \n\nHe was a little unsure what she meant - she was right there, after all, right next to him. It wasn't as though he had to walk anywhere to be with him. \n\nBut then her arm was across his chest, and she was pulling him over toward her sleeping bag - which was unfastened to allow him entry, the cold air kept out by the way she appeared to have draped the blanket over them both now. When had that happened?\n\nHe found his hand brushing over a sensationally smooth thigh, and the apparent fact she wasn't wearing her skirt any more made his heart-rate soar. \n\nIt was much darker here in the line than it had been in the flood-lit parking lot, but the mall's stream lamps were still enough to shed light on her pretty face as she pulled him in for another powerful kiss.\n\nOh how incredible she was - he felt he could have been happy just to be allowed to kiss her for the rest of his life, it was so exhilarating.\n\n\"You'll wake the others,\" he warned as they eventually came up for air, concerned that her little sighs as they kissed would become louder as she lost herself in their embrace.\n\n\"I won't,\" she said. \"Promise.\"\n\nThen as they continued taking it in turns to gently suck on each others' lips, and tangle their tongues together, Noelle brought the hand that wasn't cradling her head up underneath her top once again, brushing over her smooth stomach, and then gliding up over the scintillating slopes of her bare breasts - she'd removed her bra, and now he was completely free to caress her shapely breasts, tease her hard nipples between thumb and fingers, drawing out soft little moans despite her promise to be silent.\n\n\"Will you really do whatever I want you to?\" she whispered as they came up for air again.\n\n\"Anything.\" \n\n\"Even\u2026 what we were talking about with Chrissy and Marie?\"\n\n\"Your wish is my command.\"\n\nShe flashed her eyes at him, a little shocked, a little hopeful, a little disbelieving. \n\n\"Do it,\" she said with a devilish grin. He felt a fireball overcome his insides.\n\nIt was warm beneath the sleeping bag, but felt safe from the outside - he was concealed from prying eyes, secure to pursue the dream of kissing his way down her chest, her top pushed up and then gone entirely, leaving this divine nymph in nothing but a pair of panties, lying there for him and only him. \n\nTaking her nipples inside his mouth for a moment or two, before he felt her writhe, her breathing so deep it made her entire body rise and fall like the surface of the ocean, he tried to pause, calm himself, though everything inside him felt as though it was alight. \n\nHe needed to calm himself - his heart was pounding in his chest, he was going to drop dead if he wasn't careful. He couldn't believe she actually wanted him to go down on her.",
        "It was like a dream.\n\nHe almost missed his moment - he felt the cover lifted, and then Noelle was subtly patting him on the head to encourage him to continue.\n\nShe wanted to experience it as much as he did.\n\nCompliant with her wishes, he was soon gliding down her velvet stomach, planting little kisses around her navel, down her abdomen, the scent of her sex growing all the time as he approached the edge of her pink cotton underwear.\n\nThe real spicy scent of female sexual arousal.\n\nDylan settled between her thighs, a little dazed by the prospect of what she was wanting him to do. Noelle was lying at the top end of the sleeping bag, now, pushing herself up so that as her turquoise halter top now slipped back down in place over her breasts and stomach, the sleeping bag only covering her from the waist down. It gave him some room to reside in the bottom of the sleeping bag, his own body curling out the open end. \n\nCovered, he could not see her face, while he really didn't have much light to navigate between her legs - though just enough. She eased her thighs apart as much as she was able, and he was presented with the enticing aroma of her sex even through the pink cotton of her underwear. Briefly, he kissed his way along the hemline of her panties, his fingers brushing over the thin material to feel the heat and dampness of her pussy beneath. \n\nHe saw her lift the sleeping bag again to peer down on him, checking on him, reassuring herself that he was truly all right about this. While she watched, he buried his face in her panties, pushing his mouth and nose into her heat, his tongue sneaking out between his lips to touch down against the sopping fabric, tasting her salty juices as he inhaled her scent with a breath loud enough for her to hear how much he loved it.\n\nThen he was nudging aside her panties, and revealing her carefully shaved pussy, making quiet moans he hoped could only be heard by Noelle as he caressed her bare mound with his lips, ran his nose along her outer lips.\n\nIt was really happening - he was being blessed with the most intimate contact possible, with a goddess of unparalleled beauty.\n\nAnd he loved it.\n\nHe loved the way she tasted, he loved the earthy scent   accented by her perfume, he loved the softness of her shaved pussy, the furious heat of her body.\n\nHe adored the way she responded to him.\n\nHow could any red-blooded male refuse to go down on a girl if it was this pleasurable? \n\nDylan started slow - licking and kissing her tender lips gently, nudging his nose against her clit, but not devoting too much attention to it as he indulged himself in coursing his tongue through her searing groove, lapping up her copious tangy juices. \n\nThen he was covering her slit with his hot mouth, penetrating her with his tongue, sucking on her as he wedged himself into her, his nose crushing up against her sensitive button. His fingers brushed her thighs, traced the irresistible feminine shape between her legs, and when she was ready, found their way inside her pussy.\n\nShe was doing a good job at keeping herself quiet, but the way she moved her hips as he ate her, he was certain she was enjoying it. Down there between her thighs, he almost forgot himself that they were just a few feet away from a whole load of other people.\n\nNoelle had to pat his head in warning whenever he lost himself in it too much, and began to quietly moan as he responded to the joy of fucking her sweet pussy with his mouth.\n\nAfter a while, he came to recognize her movements, so he could translate her body language, he could tell exactly what got her going most, when things were getting a little intense and needed to ease back, and when she was itching for more, stronger, harder.\n\nWhen things got a little too much for her, he softened his approach, dwelled on languorous licks of the tongue over her soft folds. He teased her with her panties, pulling them tight so the sodden cotton sank into her slit, and gently sawing against her pussy lips as he licked her, adding a different texture to his treatment of her. \n\nShe was so wet, so sticky, so hot. How could any heterosexual guy offered the chance to worship the sensational beauty of the female sex turn it down?   \n\nWhy did girls, who were perfectly willing to stretch their lips around a swollen male member and sop up any semen oozing out, imagine that guys would somehow shrink from the heavenly experience that lay between female thighs? \n\nSo many mysteries, and mistaken assumptions. \n\n\n*\n\n\nDylan had no idea how long he was given between Noelle's shapely thighs, though a few times he glimpsed her peeking, lifting up the edge of the sleeping bag to check in on him - and each time he did his best to show that he was loving every minute of this, to persuade her to continue, not to call a halt on his account.\n\nHaving removed her panties, leaving her a little more easy to access, he got into a rhythm where he could spare a hand to spread over her smooth belly, and then reach up to cup her breasts and pinch her stiff nipples, but then as he came to focus a little more on her clit, licking her around it, pressing his hot mouth down, sucking as much as she could stand - she started to take charge again.\n\nHer hands moved over his head, her fingers initially stroking him, coursing through his hair to encourage him, to guide him to follow the pace she needed, match her own innate rhythm.\n\nAnd then she was holding him, pulling him in, crushing his face against her smoldering, soaking sex as her hips writhed underneath him, and it got so that she was furiously fucking his face, and he was almost a bystander.\n\nIt wasn't much longer before she was furiously humping his face, and then shuddering and bolting and bucking all around him, her wetness suddenly everywhere - hot and sticky and salty and tangy, and so very sexy, so very her.\n\nEventually, as he moved up beside her, having cleaned her up with his tongue as best as he was able, she was still out of breath, though eager to kiss him, to find a silent way to express her wonder and gratitude and joy at the experience he'd just given her.\n\n\"Who are you?\" she whispered when she finally allowed him to breathe. \"Are you real?\"\n\nHe whispered: \"I'm real, I promise.\"\n\nHe lay behind her, spooned against her back now as she moved down further inside the sleeping bag so that it covered her shoulders. His head tucked over her shoulder so he could kiss her cheek. He could still smell the scent of her sex along with her sweet perfume, and it thrilled him. \n\nNoelle felt his hardness throb, and now pushed her behind back against him, wanting more, wiggling her hips a little so she could feel it against her, check out his shape. \n\n\"You should take off your pants,\" she whispered in the darkness. \n\nDylan had been still a few moments, checking to see if they'd been heard or seen, assessing the people nearby to watch for eavesdroppers. Everyone appeared to be sound asleep. \n\nHe ran his hand down over her bare hip and thigh, astounded at just how the curves of her body was so perfectly designed to illicit strong feelings of desire in him. She was so very naked, other than her top, and it did seem a touch inappropriate now that he still had all his clothes firmly in place. \n\nHe unfastened the buckle on his belt, and popped the button on his fly, but then Noelle suddenly disappeared - slipping down into the sleeping bag and the extension formed by their blankets. \n\nDylan was feeling rather slow after the intensity of his experience going down on a goddess like Noelle, and he didn't quite know what she was doing until he suddenly felt her hands slipping into the waistband of his pants, to haul them down over his hips and down his legs - then off completely.\n\n\"Wha - \" he said, before stifling himself, remembering to keep quiet.\n\nHe felt her hands slide up his thighs and then she was touching him through his boxer shorts, feeling him out, checking the goods. \n\nNow it was his turn to lift the hem of the sleeping bag to see what she was doing down there. Strange to see such a pretty girl lying between his thighs, her face so close to his crotch, and she was smiling as though it was her birthday. Did she like what she saw down there?\n\nThen he had to be careful not to give the game away as she suddenly pressed her mouth to his stiff manhood - the heat so intense, even through the cotton barrier of his underwear. \n\nHe was just beginning to get used to her being down there when she took him by surprise yet again by pulling his underwear down as well - leaving him completely exposed and a little vulnerable.\n\nHer hands closed around the base of his shaft, and before he had a chance to look down again and see what she was doing, how she was responding to the appearance of his unconcealed erection - he felt his sensitive staff enveloped by her soft, wet, hot mouth.\n\nFeeling her tongue swirling around his pulsing cock, he couldn't keep a low groan from escaping his mouth, sealing his lips too late for the sound to slip out. He paused - and Noelle paused - but there didn't seem to be any obvious signs that they'd disturbed anyone. \n\nNoelle lifted up the covering now, so that he caught the incredibly sexy but somehow surreal sight of the beautiful brunette lying over him, his hardness dimly clasped in her hands, poised to suck him into her mouth again. She looked up at him, smiling, but giving him a brief shuffle of the eyebrows to warn him against future noise.\n\nHe nodded a promise to her, but for some reason it wasn't enough for her. She flashed him an impish grin, and her hand shot up to cover his mouth with a palmful of soft pink cotton. Dylan breathed in, and shuddered as he inhaled the strong, spicy scent of her arousal from her damp underwear. \n\nWith her lips stretching around his full girth, gliding down to sink as far as she could down his shaft, her wet panties were an effective gag for him, as it turned out - the irresistible aroma of her sex incentive enough to keep them clamped firmly over his mouth and nose, controlling his noise as she sucked on his cock.\n\nLicking him, caressing his shaft with her velvet cheeks,  running her lips down his length - he got the impression she'd done this plenty times before. At first, it caused flickers of jealousy to fan up inside him, though he knew he could hardly expect her to be a virgin.\n\nShe was so good, though. If she had been with plenty of guys before, then he had something to be thankful for in how she now knew exactly how to please him. The way her lips lingered around the tip of his cock, the way her hands gripped his shaft tight, but not too tight. The way she moaned as she sucked on him, the vibrations of her voice adding to the sensations she was giving him, but more importantly making him feel she was enjoying the experience as well as he was. The way she pulled him out and just seemed to revel in contact with his rigid manhood, rubbing it against her pretty face, indulging in the obscene contact she was permitted.\n\nThe way she slipped his hardness between her breasts, so he felt his full length gliding up and down the oh-so-soft flesh of her cleavage.\n\nHe really had to press her wet panties to his mouth quite hard to prevent the natural response to her sensational ministrations from waking the neighbors in the line. \n\nAnd then just as he was beginning to get to that key question - should he warn her he was about to come, or should he just let go? Would she want to swallow or prefer if he held back? - she stopped, and he now felt a new sensation he couldn't quite understand.\n\nShe was rolling a condom down his cock.\n\nHe was a little startled as her head now popped up out of the sleeping back over him, all flushed with the shine of perspiration across her forehead, her body now covering his, her knees sliding along by his hips as she straddled him.\n\nWas she really going to do what he thought she was?\n\nHer face was all lit up by her pretty smile, her eyes dancing with the flames of overwhelming lust. She brought a finger up to her lips to remind him to keep quiet, and then she was taking her underwear from his grip, pressing it against his mouth herself as he now felt the unbelievable heat of her body slide down on his - his rock-hard cock suddenly engulfed by the most exquisite heat and vice-like tightness.\n\nHe was inside Noelle. \n\nShe was showing great skill in keeping herself quiet as she rode him, though her face was so very expressive in revealing to him exactly how intense the sensations were for her as she gyrated her hips to rise and fall on his shaft. \n\nShe was also doing well at keeping flat against his body in an attempt to minimize how obvious it would look to any witnesses that she was on top of Dylan, fucking him raw.\n\nHe wasn't sure how long he was going to be able to cope with this, the energy flowing through his body was just intense, her tight pussy squeezing him so tight he could feel the end beginning to build.\n\nBut she stopped, and now moved to encourage him to spoon her once again - only this time, they were both naked from the waist down, and Noelle engineered their positions so that Dylan could slide back inside her from behind.\n\nIt was slower this way, but no less intense. She could no longer gag him herself any more, so he had to take care to control his urges to moan, but he found himself concentrating to delay his climax, which put paid to his noise. \n\nAs he held her, driving into her from behind, it seemed such an intimate position, allowing him to be so close to her - really, just wiggling his hips a little to move within her tight pussy, rather than having to pound her. HIs hand slipped around to touch her breasts, and now she grabbed it, redirecting it down between her legs, where he could seek out her little clit even while he continued to penetrate her.\n\nThen subtly, so well-controlled, she leaned back against his shoulder, her cheek nudging up against his, and she was whispering: \"I'm coming again, Dylan!   You're making me come again\u2026\"\n\nIt wasn't quite as strong as her previous ones, but just as beautiful, and the way her thighs clamped together, squeezing his manhood within her tight pussy, there was no way he could hold back this time.\n\nAs she shivered and shook, doing incredibly well to remain silent as the forceful climax washed over her, Dylan let himself go, his hot seed bubbling up and erupting deep within her.\n\n \n *\n\nDylan awoke with the arrival of the first signs of sunlight, finding that Noelle was still sleeping beside him, snuggly spooned against him so that every breath was accented by her sweet perfume.\n\nAs the sun brought with it the new day, Dylan had the strangest feeling that he was waking up in a whole new world, as though at some point the previous night he had crossed over into a completely different universe, and now here he was in a place where he was no longer socially an average nobody.\n\nIn this new universe, he was the guy who had somehow forged the most unbelievable connection with the most beautiful girl from Marchmont High, and come to know what it must feel like to be truly in love.\n\nIn this place, he felt as though his eyes were truly open for the first time ever, so he could appreciate the wonder of the world and everything in it.\n\nYet in this world, he also had the slightly unnerving feeling that he was now vulnerable - that as magical as  his experience with Noelle had been the previous night, there was no guarantee that by the cold light of day, she would want to see him again. Perhaps she acted that way with all the guys she dated - made them feel special, made them believe they were the only ones ever to make her come. Maybe he had only ever been a distraction for her, to keep her warm and occupied during the long wait in line for the Apple store.\n\nHe nuzzled gently into her, trying to hold out hope that everything had been genuine, that talk of a proper first date might actually turn into one.\n\nThen, as he started to hear the occasional stirring from other people in the line, further away, Dylan realized that it might not look too good to other people if he was found lying virtually naked with Noelle in her sleeping bag. It wasn't his own reputation he was worried about - he didn't want Noelle to continue sleeping only to wake to pointing fingers and laughter at what she'd been up to overnight.\n\nQuietly, gently, he eased his way out from her sleeping bag, and managed to both dress himself fully and fold up the blankets that were supposed to have been his personal bed for the night.\n\nNoelle stirred a little as he extricated himself from her side, and screwed up her face at the sudden loss of his warmth. But as she slowly emerged from slumber, seeing what he was up to, she quickly understood the need to separate.\n\n\"What time is it?\" she whispered, now squirming inside her sleeping bag to pull on her own clothes.\n\n\"Six.\"\n\n\"Breakfast?\"\n\n\"Love to.\"\n\nThere was a cool three hours before the Apple store was due to open - plenty of time to grab something at McDonalds, and Dylan was starving.\n\nBut picking up the blankets as Noelle now rolled up her sleeping bag, Dylan actually found himself becoming quite nervous. Would they talk about last night while having breakfast? What if she suddenly came to the conclusion that it had all been a mistake, that now it was light, and she could see him properly, she wasn't actually attracted to Dylan at all? What if the magic dust wore off, and she saw that he really wasn't anybody at all, far less worthy of her attentions?\n\nThis breakfast could be a first date, or it could be a break-up.\n\nStepping out of the queue and wandering down through the mall toward the parking lot, they walked without conversation - both of them keeping quiet to avoid waking the people in the line still out for the count.\n\nThen they were around the corner, and quite suddenly he felt Noelle shove him bodily against the outer wall of the Gap, launching herself at him.\n\nHow was it that she felt made for embracing him, perfectly sized to fit with him as they kissed? His heart was pounding in his chest as he matched her passion, his cock thickening as her feisty frame pressed against him, her hands squeezing his butt so his manhood was crushed against her body.\n\n\"You have to do whatever I want, remember?\" she said, breathless, glowing after their kiss.\n\n\"Always,\" he said, returning her smile, ecstatic about the prospect. \"What do you want first?\"\n\nShe grinned, as though drunk on her new-found power. \"Okay,\" she said, pausing a moment. \"First some breakfast... then we have iPads to buy...\"\n\n\"Of course! I knew there was a reason I camped out by the Apple store all night!\" he joked.\n\nShe rolled her eyes at him playfully.\n\n\"And then?\" he asked her.\n\n\"And then we're going to drive somewhere private, and you're going to make me come with your sweet lips again,\" she said, and he allowed her to put a finger in his mouth, only to find it was coated in her slick, heavenly wetness.\n\n\"And then?\"\n\n\"And then I'm going to roll another condom down that perfect cock of yours, and you're going to fuck me until at least the end of the summer.\"\n\n\"At least,\" he said, trying not to burst with lust and excitement."
    ],
    "authorname": "MaxSebastian",
    "tags": [
        "18-year-old",
        "college",
        "virgin",
        "cunnilingus",
        "blow job",
        "outside",
        "public sex",
        "student",
        "romance",
        "first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/waiting-in-line-for-the-new-ipad"
}