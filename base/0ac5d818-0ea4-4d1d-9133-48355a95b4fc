{
    "title": "Fire Queen Ch. 02",
    "pages": [
        "A/N: First of all, thank you so much for the sheer amount of positive reaction to the first part in this story. I woke with it in my head and just wrote it and posted it in a day without really reading or editing anything. So it wasn't my normal standard of edited.\n\nI wasn't expecting there to be a sequel, it was written as deliberately open ended so I could come back if I desired. What I didn't expect was the very many messages encouraging me to continue, so this is dedicated to those who begged for 'more'.\n\nSecondly and finally, a disclaimer: because this was a dream, almost everything in it is fictionalised. The names are real, but the people I've attributed them to are not. The festival is a thing, but the ceremony involved is my own. But as I'm writing about people who lived 5000 years ago, who knows? Maybe these aren't stories, but memories passed from another time... Haha.\n\nWhatever you think, don't over analyse, just sit back and enjoy the story for what it is... A story.\n\n------------\n\nMy favourite part of the past few weeks had always been waking to him.\n\nUsually I was treated to the sight of him rising from our bed in all his glory, his shoulders tensing as he pulled himself up, and then his lean golden back, his butt which I normally grabbed at as it still held the marks from my nails the night before, and then as he turned I was able to see his toned chest, stomach and leading down to that part of him which made my insides curl deliciously to see.\n\nHis slaves would be there to dress him in the mornings. They'd wrap his linen shendyt around his waist, making sure to pleat it in the proper and fashionable places, and belted it with gold, jade, ornamental woods, and malachite.\n\nThe chest piece he wore was slung around his shoulders, in the centre over his heart was a scarab beetle in turquoise and peridot, and wings of gold fan outward across his chest, reaching up to his shoulders.\n\nThey plaited his natural hair tightly against his head. I was always sad to see those dark brown waves of strong hair be tamed and tucked away. A formal black-hair wig was then fixed to his head. The sharp black fringe cut severely across his brow, accentuating his already hard, regal features.\n\nOther ornaments such as the uraeus which denoted his royal blood, were placed in the hair of the wig, to match the jewels in his belt.\n\nThis was the last step the slaves were permitted to take part in, as his make-up was only to be touched by royal hands.\n\nThe gold dust he used was real gold, I learned, ground down into a fine powder. He used a small brush to lightly dust it on his skin, his stomach, shoulders and face. Then he took a stick of kohl and drew those straight black lines on his eyes and brows.\n\nThe final result was fearsome. I held the covers to me as he looked back to me for approval. I know it didn't make any difference if I gave it or not, but I liked the gesture that he cared.\n\nSome mornings I woke in his arms, wrapped in a robe against the chill, as he carried me down to the warm waters deep beneath the palace.\n\nHe would slowly wake me there, with his hands on my skin, brushing, stroking me awake in mind and in body. My consciousness would return me to the world after he'd brought me to breaking at least twice.\n\nSome mornings, too early for the dressing slaves, too early even for the birds, he would wake me when already inside me. His body would raise above mine, lit by the moon streaming in through the windows. He would sink himself slowly, slowly into me. His eyes would search mine out, and he'd lean down on his arms to kiss me, stilling himself inside to concentrate on running his tongue against mine until I moaned in frustration. Then he would begin.\n\nI always slept more on those mornings, after he'd sought completion too.\n\nWhat I experienced with him was beautiful. It was everything I could ever want from a man. My grandfather had once told me that my fire would only allow me to love in one of two ways. Either as an incendiary explosion of heat and passion that would engulf and destroy whomever was caught in it, or as a slow burn that would seem unlikely to succeed, but would heat my heart and hearth for decades, fulfilling my every need.\n\nI didn't know what I hoped this would be.\n\nEven on the days where I was happiest, where I could have everything I could ever want and Rahotep was sweet and gentle and kind with me, I still was reminded by his existence of all that had been stolen from me.\n\nAs far as a slave was concerned, I had far more than I could ever hope for. A powerful owner who was loyal to me, kind and generous. If this had been the life I'd been born to then I would have been overjoyed.\n\nBut instead I was the only daughter of my mother, and my birthright was to be Queen of my tribe, ruling over all the subjects and lands that my nomadic peoples herded thousands of sheep over every year.\n\nThe night before my coronation, an attack was brought upon the gathered tribes which decimated us, and lead to the capture and enslavement of many of my family and friends.\n\nI still didn't know the truth, or the extent of the attack. I had no idea if any of my family lived and if they did, where they were.\n\nI had already found a few of my closest allies serving in this very palace. Ankhet, the girl who had once served me faithfully as a handmaiden, worked in the cruel kitchens, waiting on men and women who she would rather stab. Rahotep, once he'd found out her identity, had bidden that she would be brought to be my companion, as I wasn't permitted to leave his chambers except for very short periods of time.\n\nThrough Ankhet, I found out that at least five others from my tribe had been brought here, though the only other one I was able to see was a young boy who was the son of my father's most trusted manservant. He now worked in the gardens Rahotep and I walked in often. He was taller than I last saw him.\n\nRahotep barely knew any of my past, though he had asked several times. I didn't want to inform him of too much, because even though we now were getting close, I still was aware that I was a slave and he was my owner. It was uncomfortable.\n\nWhen Rahotep was gone every day, Ankhet and I spoke in our language, in hushed tones just in case there were ears which could understand without us knowing.\n\nEven though it hurt to think of leaving Rahotep, we plotted escape.\n\nI knew if we were unsuccessful on our first attempt, Rahotep's trust in me would be irrevocably damaged, and my position within the palace would be forever changed and suspect. We could not fail.\n\nSo we were patient, but we always looked for opportunity.\n\nThe most important part of our plans had actually been suggested by Rahotep himself; no one knew that I spoke the common language, let alone others which floated around the palace.\n\nI fed important pieces of information to Rahotep from advisors and ambassadors who met with him and spoke freely between themselves about their true motives. Each time Rahotep was able to skilfully outmanoeuvre them without their being able to guess how he knew. No one saw the slaves and servants around them, no one even thought that they were anything more than the dumb, ignorant chattel, there purely for convenience.\n\nOther information I kept to myself. We discovered a number of useful -- and not so useful -- secret passages leading from the Prince's chambers. Obviously built at different times for various reasons, some had obviously been forgotten, or become redundant, or been rendered useless by the constant reconstruction of the palace.\n\nStill, it was fun exploring, and no one knew we'd even left the chambers.\n\nIt was coming up to the Opet festival, where we'd be treated to a month of feasting, dancing and wine. The sun was high in the sky, as it was getting on to be the dry season.\n\nMore and more people poured into the city from all over the world it seemed. The palace was soon filled to bursting with every kind of emissary and courtier. Ankhet and I had to be more and more careful that we weren't understood.\n\nJust before the festival began, the Pharaoh, Rahotep's father, celebrated his name day. Due to the closeness of the festival, he didn't celebrate it publicly, but instead he had a very small private gathering with his sons, and some lesser royals.\n\nThere were about forty of us seated around the table in the Pharaoh's private dining room. I had been invited specifically by the Pharaoh himself, as he had heard about me from Rahotep, yet hadn't met me bar that first mortifying introduction at Rahotep's name day celebrations.\n\nI wore the red wig that Djet had gifted me, as well as a dress which was a dark green linen. It was pleated from a design delicately embroidered in an ankh hanging between my shoulder blades, the symbol for life, and stretched over my shoulders into a shallow vee between my breasts. The rest of the dress was loose and flowing down my figure.\n\nRahotep had helped me lightly kohl my eyes for the occasion, and he had worn his formal evening robes as well as his finest shendyt and jewels.\n\nAs we sat, Rahotep to the right hand of the Pharaoh, I saw the old man's eyes sweep over me with interest. I knew the evening would be quite dull as I still was maintaining the ruse of being unable to understand any of the conversation going on around me, but as the courses of the meal progressed I could feel eyes on me more and more. I looked up, straight into the eyes of Djet, Rahotep's brother. I hated him.\n\n\"It's such a shame you keep this viper like a trained pet even in the presence of our father.\" I carefully made sure my features didn't react to his words, and forced my gaze down to the food on my plate.\n\n\"Must I remind you, my son, that you gave this woman you call viper as a gift to your brother? It doesn't bode well that you would insult that which you would bestow on your Prince Regent.\" The Pharaoh spoke slowly, but clearly.\n\n\"Forgive me, father. I did not think on the implications of my words.\"\n\n\"No, Djet. You rarely do.\" At his words, Djet flicked his eyes to his father, and in them I saw a moment of rage, though it was gone as quickly as it came. \"Personally, I believe she is one of the loveliest creatures I've ever seen. The colour of her skin alone makes her a rarity in these parts. I think you were foolish to give up such a magnificent being, Djet, even if it was in reverence to your brother.\"\n\nThe Pharaoh was studying me closely, and when I raised my eyes to him, he smiled kindly.\n\n\"It's such a pity though, that she must be particularly slow of mind if she has not yet learned at least some of our language and still uses that barbaric tongue.\" The Pharaoh clicked his long nails on the table, holding my gaze.\n\n\"She has learned some, though it's not much to hold a conversation. I just didn't want to over stretch her abilities before she was ready.\" Rahotep squeezed my hand, bringing my attention back to him.\n\n\"I would be interested to know what she is able to say.\" Djet wasn't going to let this go.\n\nRahotep nodded to me in encouragement. We were so close to being found out. I cleared my throat and tried to put on my thickest accent.\n\n\"Hello, my name is Amenia. I like flowers and walking. My master is the Prince Regent Rahotep. He is a kind and handsome man.\" The table was silent as I finished, my false accent making some words garbled and barely recognisable. I could feel Rahotep beside me holding very still as we made sure the ruse was believed.\n\n\"Well done, child. I hope your lessons continue, you seem to be progressing well.\" The Pharaoh waved for the next course.\n\nThe conversation turned and I began breathing again. I hadn't realised my heart was racing until the attention turned from me. Only Djet kept his eyes on me after that.\n\nAs the meal ended, the entertainment for the evening began. For the men, beautiful women danced provocatively with simple peasant music. Wine flowed free as snake charmers, contortionists and fire breathers stunned small groups of people. The pharaoh lounged on a cushioned plinth, flanked by his two sons, while sat back from the group on a green cushion, Ankhet by my side. We ate sweet figs as the entertainers each came up to the plinth to showcase their talents to the royal family in turn.\n\nAll were impressive, and wowed us in turn. Ankhet and I barely paid attention as we chatted in our own language about the displays. As slaves, none of the acts really paid attention to us in favour of the Pharaoh and Princes.\n\n\"Goodness, look at that woman. She must be a hundred summers old.\" Ankhet nudged me to look at a woman who approached the plinth. She was dressed in thick peasant clothes of the south, and carried nothing. I wondered what she would present to the Pharaoh.\n\n\"She must be very blessed by the Gods to be so old.\" I picked out a tart citrus fruit from the platter we had been presented with.\n\nAs she approached, she cast her eye over the two of us, which was odd as every other performer hadn't even glanced in our direction.\n\n\"My Pharaoh, your highnesses.\" She bowed low to the three regal men before her. \"I am a FarSeer from the West. We travel through the sands of the Great Sahara in search of truths and meanings. I have been proven capable enough to entertain your guests this eve. Though I must request that I be excused from reading your path, Great Pharaoh.\"\n\n\"Oh? Your powers aren't great enough to see the future of a demi-god?\" Djet snorted.\n\n\"Quite, but also it is a taboo in my culture to read the future of one on their name-day. It would be a great insult and curse to you. I would gladly read the futures of your esteemed sons, however.\"\n\nThe Pharaoh gestured welcome to the old woman, and bade her to sit before them. She drew out a deep blue cloth from a pocket, so light it fluttered in the air. In her other hand she held something I could not see.\n\n\"Who would like to go first?\" She proffered her closed fist in turn to both the men flanking their father.\n\n\"I'm interested to see what's in store for me.\" Rahotep held out his up-turned hand toward the old woman. She quickly placed the cloth in it.\n\n\"Drop this.\" Rahotep did as she told him. \"And then these.\" Seconds later four white, misshapen stones tumbled from his hand. As they settled, the woman's sharp eyes followed their every fall.\n\nThere was silence as she studied the stones and the cloth.\n\n\"You are a peaceful man, very much like your mother in your heart, but in your soul the power of your father creeps through.\" She said clearly. \"You have the gifts of Ra about you. But your life has been touched by such sadness recently. Did they ever capture the person who murdered your wife and child?\"\n\nShe looked up into Rahotep's face, who was utterly speechless with shock. It took him a moment to recover his voice to speak.\n\n\"They weren't murdered.\"\n\n\"No?\" The woman frowned, looking at her stones again. \"But it was unexpected?\"\n\n\"Yes. It was an illness. Anubis took them quickly.\"\n\n\"Hm. Very unexpected. As for the future I see that your heart swells anew, and with this new love will come a great prosperous time, if you are able to stay with her. If not, well. Anubis may be working through someone close, but not that you trust.\"\n\n\"Enough of this.\" Pharaoh brought the flat of his hand down on the settle he lounged on. He looked furious. \"Crone, this is a day for celebration, not for doom. Peddle your twisted futures and barbed prophecies elsewhere than here. I have heard enough.\" He waved her away, and she rose with a bow as she swiftly collected her items.\n\n\"Excuse me sire, I have one last question.\"\n\n\"Proceed, but do not anger me further.\"\n\n\"I had heard that there was a slave brought here with hair like flame. I wondered if this was true, and if so, may I see her?\" The woman spoke to the floor, not daring raise her eyes to the dais again. Pharaoh looked to his youngest son.\n\n\"Yes, but not while you are entertaining our guests. See to them first and once they are sated I will grant your request.\"\n\nThe old woman nodded once more, and bowed away to be replaced by six beautiful women who were able to climb and balance on each other. The rest of the parade lost my interest as I watched the woman around the room. Every now and then she looked up at me, as if she knew I was staring at her. I didn't look away from her though. I didn't want to.\n\n----\n\nThe night was dark as the moon waned. Even at its zenith the watery light barely filtered through the lands. I stood on the balcony overlooking the extensive gardens. I looked toward the North, to where my homelands were calling to me once again.\n\nRahotep's strong arms came to me, circling me and pulled me close to him. I could tell from the heat radiating off of him that he had already stripped for bed, while I had only removed my wig and braids.\n\nHe lifted my hair from my neck and twisted it above my head, to better access my shoulders. His lips dropped a hundred tiny kisses across my shoulder blades and collarbones like dew drops falling from the petals of a scented flower. I tilted my head to assist his access.\n\n\"You are so lovely.\" He murmured against my skin. \"Ra himself must have crafted you.\"\n\n\"Oh? Then why do you dress me in Osiris' colours if I am Ra's creature?\" I closed my eyes against the flutter his lips were creating deep in my stomach. He paused a moment as he pondered my words.\n\n\"I don't quite know. Maybe you are of them both. Ra made your head and Osiris your body. Both came together to craft a gift just for me.\"\n\n\"Just for you, eh?\" I turned in his arms. \"What makes you so special?\"\n\n\"Well,\" he smirked as he brought my front to be flush with his. I could feel all his muscles tensing and moving through the thin linen of my dress -- a dress he appeared intent on removing. \"I am, after all, the Prince Regent of Egypt, next in line to be Pharaoh and King Over the Nile.\" He pushed the dress off my left shoulder. \"He Who Commands the Rains to Fall, the Sun to Rise and Set, the Lands to Grow Lush and Green.\" The other shoulder was similarly disrobed, and I allowed the loose dress to flutter to my feet. \"All this shall be mine.\" The lust in his eyes was unmistakable as he gazed upon my form. My stomach was in knots in response to the desire.\n\nRahotep's mouth latched on to my nipple, and the gentle pull of my lips shot brands of lightening through me.\n\n\"That is who you will be, though. Who are you now?\" My head fell back, a smile playing on my lips as I rested backward on to the railing, uncaring that we stood on an overhang far above the hard stone floor below.\n\n\"Who am I now?\" He pondered the question as he moved across my body, using his hands to encourage and manipulate me so I partially sat, with a leg slung over his shoulder. Looking down from this angle with him knelt before me like I was the royalty and he was the slave paying fealty, his heavy testicles swung beneath him and his long hard cock stood rigid against his stomach. His face was level with my belly button now, and he drew back for a second to answer me.\n\n\"I am yours.\" He rocked forward with the words, and laid his tongue on me, licking deep and hard. My breath was gone already from the power of his words, so the resulting moan from his actions came out more like a strangled cry.\n\nAs he buried his face to me, I wasn't aware of the noises I made. My body simply sang to the tune of his touch. His mouth always did this to me. I had never heard of a man doing this before, so I wondered how and where he'd learned his tricks.\n\nWhen I began begging him, barely able to call him by his full name for the want of him, he stood before me, burying himself in me with a speed that made me arch to him.\n\nOur frantic pace slowed then as we readjusted. His legs were wide, bringing our balance toward the building rather than over the ledge. I gripped his shoulders, leaving marks from my nails. We stared as we breathed each other in. His voice was low as he spoke to me, his eyes never leaving mine, the intensity burning into me.",
        "\"I am yours. I swear to you now, Amenia, when I am Pharaoh, I will do everything I can to assist you regaining your throne and your peoples. If you stay with me until then. I will be always yours.\" On this last word, and pulled almost all the way out of me and pushed back in slowly, so slowly. I could feel every detail of his cock feeding into me.\n\nMy head fell back and I moaned softly to Khonsu, the Traveller. I stared deep into the abyss that made Newet's fabled dress, the stars that clothed her blinked at me in approval. Rahotep moved within me again, anchoring my hips with his hands. As he came to me he moved faster and faster within, as he had that first night. I sensed he wanted something from me, but I could barely think to guess at what.\n\nHis hands moved over me, rubbing, soothing and plucking my skin. I wrapped my arms around his shoulders, lifting myself slightly, pulling my body all along his, and moaned into his ear. This seemed to please him and throw him off course, as his thrusts became erratic. The tightening knot in my stomach burst open, and all together I felt as though the secrets of the God were just within my fingertips.\n\nAs I arched, lost in my own release, Rahotep took his too. His teeth sunk into my shoulder as he buried himself deep in me.\n\nOur hearts beat together as the air returned to our lungs. He kissed me deeply, still inside me.\n\n\"Er, sire?\" Ankhet's quiet voice called from beyond the doors leading to the balcony. \"The woman is here to see Amenia.\"\n\n\"The woman?\" Rahotep creased his brow at me.\n\n\"The FarSeer, you gave her permission to see Amenia.\" Ankhet's hands came through the doors, holding pieces of clothing out for us while maintaining out modesty.\n\nRahotep pulled on the short dhoti, and I wrapped myself in the robe. We both had kohl sweat-smeared on our faces, but this woman was a mere performer, not someone we needed to worry about the opinion of.\n\nWhen we entered into the room again, the woman bowed low. I was still surprised at how supple the woman was given her age, and the grace with which she moved.\n\n\"Sire, I hope I don't intrude.\"\n\n\"You wished to see this slave, here she is. Now tell me why.\" Rahotep was sharp, I could see that the reading of the stones had upset him.\n\n\"I have seen another like her, many years ago. They may be related. May I speak with her?\"\n\n\"She doesn't speak this tongue, only that of the Northern sheep tribes.\"\n\n\"Oh? Then she almost definitely is related to my old friend. I speak some of the word of the North, may I?\" She was persistent. Rahotep finally nodded his consent.\n\n\"Red one.\" She began in my tongue. \"I knew one like you so long ago. A tall man with skin the colour of the sun blinding off the sand in the deepest desert, and hair like the heart of a fire. He wed a woman in the North by the name of Keminub who was at the time the Regent of one of the Great Sheep Tribes, do you know this name?\"\n\nI looked to Ankhet, whose eyes were widening as she spoke. We both knew the people she spoke of.\n\n\"Keminub was my mother's mother. Her blood passes to me. His fire is mine too.\"\n\n\"Good Lord, I thought so. How strange that you are here, so far from your herd. I don't have time to ask how it can be, your master is suspicious of me already. I felt drawn to you the moment I saw you in that room. You need to be careful.\"\n\n\"Are you going to read my path, old woman?\" I tilted my head curiously.\n\n\"Yes, but not with the tricks I use on the chaff for show. I can tell enough just by your face. You love him.\"\n\nI guarded my eyes and my words.\n\n\"As much as a slave can love their master. How can I be sure you're loyal to me and that your words will help more than harm. Not all paths are meant to be wandered with knowledge, you understand.\"\n\n\"Yes, of course. But there are things which will change the course of everything again. As for loyalty, I delivered your mother from her mother's womb. I held the first life blood of she who gave you life. I am blood tied by your ancient ritual to the thread of your destiny.\"\n\nI was still wary, but she spoke true. In my peoples, the link between new mother and midwife was one of the strongest bonds you could have. It was similar to sisterhood in other cultures. Joined by the process of childbirth, these two women who brought forth the life of another would be bound into each other's fates forever. This woman had held the life-giving blood of my mother in her fingertips. She was bound to me only just less than the woman who had done the same for my mother at my time of birth.\n\n\"What is it you feel compelled to tell me?\"\n\n\"May we sit?\" I gestured for her to take the other end of the chaise longue in the seating area. Rahotep sat on an ornamental stool, stiff backed as he was unsure of the words we spoke to each other which he couldn't understand.\n\n\"How long have you been here?\" Her full attention was on me now.\n\n\"About a moon cycle.\"\n\n\"You wish to leave?\"\n\nMy eyes flicked to Rahotep and then to Ankhet before answering truthfully.\n\n\"In most ways, yes, but as time passes I forget why.\"\n\n\"There is something rotten in this palace. It sets my teeth on edge. My stones don't lie. His wife and child were murdered. I can't be sure, but I think it's related. There is something evil going on under the surface here.\"\n\n\"How can you know this?\"\n\n\"I just do, but I wanted to make sure you knew. When the time comes, and the fire calls to you, you will have a choice. If you run, take him with you.\" She flicked a long, gnarled finger at Rahotep. \"If you separate from him now, he will die, this kingdom will fall, and you will never see your home again. If you stay together, and truly bond to each other as the women of your peoples do to the men they deem worthy, then both your kingdoms will prosper.\"\n\n\"If I stay, I will see my home? This makes no sense.\"\n\n\"I cannot know more, just that when he threw his stones, I saw your path too. When the fire comes, if you pull him through it, both your paths are crisp and solid. If you don't, both paths fade and fracture. This is all I can see for now.\"\n\nI chewed the inside of my lip, staring at Rahotep with such an expression of pain that he returned it, ringing his hands in worry at the words he did not understand.\n\n\"Thank you for going out of your way to bring me this seeing.\"\n\n\"It is no problem. I will leave this place now, before dawn. I cannot stand the smell of it much longer.\" She shook her hands in a familiar gesture of shaking evil from oneself, and bowed low to Rahotep before leaving silently through a door.\n\nIn the common language I dismissed Ankhet for the night, saying that we'd put out the oil fires ourselves. She looked dubious, but sure enough retired to the room that once would have been mine.\n\n\"What was that about?\" Rahotep was anxious.\n\n\"The woman wanted to give me a reading.\"\n\n\"She seemed serious, and you seemed to be worried. What's wrong? I don't want to believe her words but-\" he looked down at his hands, his jaw working. I went to his feet, and rested my head on his knee.\n\n\"Tell me.\" I said as he began stroking my hair.\n\n\"In the night all things seem possible, even that which we heartily laugh at in daylight.\"\n\nWe were silent as he brushed his hands through my hair.\n\n\"I meant what I said when I was inside you, Amenia. They weren't just honeyed words to open you to me.\"\n\nFor a moment I hadn't a clue what he was saying. I raised my head in confusion. Hurt crossed his eyes as he gently reminded me.\n\n\"I am yours.\" I rose to my knees and kissed him deeply.\n\n\"You are mine.\" I spoke back to him. \"And I am yours.\"\n\nThe smile that flooded his face made me choke back my unsaid 'for now' addendum. He rose, and picked me up bodily, cupping my rear and carried me to the bed. He laid me among the furs and removed every bit of my clothing. He came to me slowly then, so sweetly it made my heart break. He stared deep into my eyes as we joined together, repeating the words over and over.\n\n\"I am yours, and you are mine.\" When he said it each time it sounded like a greeting, but each time it was a death knell on my heart.\n\nThe coil within us broke once more, filling the night with my cries and his growls against my skin. We lay together after in the dimming oil fires, and as his breathing deepened into sleep, the woman's words came to me once more.\n\n\"When the fire comes, you must pull him through, or both paths fade and fracture.\"\n\nI fell asleep with the flickering of my fiery hair consuming my head.\n\n-------\n\nThe next day was filled with more preparation for the Opet festival, which was now only a few nights away. It would begin with the New Moon, on the darkest night. Then the palace would be lit everywhere with hundreds of flames and lamps. Then the feasting would begin. It seemed as though everyone was moving in the palace these days.\n\nFour days before the festival, Rahotep, Djet and the Pharaoh dressed in nothing but simple white linen dhotis and boarded a ceremonial boat on a canal that carried them to the Nile. There, with the help of two priests, they prayed for six hours under the face of Ra for a good growing season and a good harvest.\n\nAnkhet and I, like many others from the palace, went down to sit among the reeds and watch the ceremony as it took place. We sat under a canopy, and on soft cushions as noble women would do, despite the fact we were both slaves. We were the slaves of the Prince Regent, which set us apart. We were too royal for normal slaves and too owned for nobility.\n\nI watched Rahotep's every movement, still playing dumb to the words around me, but my ears buzzed with hushed chatter as people grew bold from the lack of any reaction.\n\n\"I hear she's a witch from the north, she eats the souls of every man who lays with her and it's their blood that colours her hair, not fire.\" A young woman muttered to the group she stood with. They were washer women from the palace, I knew them in passing.\n\n\"Cha, you foolish imp.\" The older woman by her side chided her. \"No, you're wrong, as usual. She eats the souls of any man who lays with her while she's unwilling. That's why our Prince still lives. She has accepted his dominance over her.\"\n\nThe others nodded sagely.\n\n\"What about his brother? I heard before the Forgotten Prince gave her to the Prince Regent, he laid with her and she tried to kill him.\" I twitched my head at this, my back growing stiff. They used Djet's informal nickname, but it was so close to the truth I found it tough to not react and stare down the women.\n\n\"What a stupid thing! I've never heard anything so -- If she tried to kill the brother, why would he gift her to the Prince? There is no sense there!\"\n\n\"What if he is trying to kill the Prince?\"\n\nAll the women in the group rounded on the one who spoke and shushed her.\n\n\"Don't speak of such things. It was dangerous enough last year with the Prince's wife and son - \" At this moment the crowd shifted, and the voices again were drowned out.\n\nI had often wondered why Djet chose to pass me to Rahotep, considering what had happened.\n\nI hadn't been in Djet's harem long before I found out more about the man than I'd ever willingly want to know. He kept unusual women, which he called his 'Treasures'. He wanted to add me to his collection. His particular enjoyment was hurting them, to see that they were indeed human, or if they were some kind of over formed animal or element. He was particularly interested, he said, to see whether the fire of my hair would protect my body from normal fire.\n\nHe hadn't had a chance to.\n\nThe first time he tried to force himself on me I was compliant, encouraging almost, until his dick was deep in my mouth and then I bit down. Like a rabid animal I held on even though he beat me. By the time he stunned me enough to force me to let go, he almost killed me. But one of his priests stopped him. Reminded him of the upcoming name-day, and they hoped I'd perform similarly with Rahotep.\n\nInstead it had gone so differently. He would never forgive me for not treating Rahotep like I treated him. But in all honesty, if Djet had treated me as Rahotep had, maybe everything would be different again. Trust is precious and hard won.\n\nOnce the ceremony was done, the three men entered into a fast of dried bread and water. The whole city joined them, in deference to the Gods.\n\nAs the sun set, Rahotep drank deep of water to stave off the first pangs of hunger. I also was fasting, but as I hadn't been out in the hot sun I didn't feel so desperate for water. He barely had any energy that night so we slept early. The next day was more ceremony for him, while I was permitted to go about my leisure, as long as I wore white linen. I spent most of the day in the cool and secluded courtyards within the older parts of the palace, as the terrace I usually walked with Rahotep was too busy with all the visiting officials.\n\nThe day passed slowly and quietly, with everyone busy praying to the Gods and settling into the coming fast. I had my morning and evening flat bread in silence alongside Ankhet. At sunset we went back to Rahotep's rooms.\n\nI stretched out alongside Rahotep, who was sat at his desk. In this time, personal hygiene beyond the basic cloth wash was prohibited. All beautifying, fakery, jewels, wigs and anything that wasn't pure white linen was taboo among anyone within the palace walls. In the city beyond, the daily life continued almost as normal, but in the evenings the more religious citizens also observed the rituals.\n\nI rubbed Rahotep's back and scratched my nails down his scalp. It was nice to see his wild, naturally curly hair tumble all about the place. He was a truly magnificent man. His forehead was high and his nose was long with a slight crook. His olive skin glowed in the firelight.\n\nRahotep sighed and leaned against me.\n\n\"It's only the first day, yet I feel like it's the fiftieth. I always hate this part.\" His voice rumbled in the darkness. There was only one oil lamp lit, as even this was restricted now.\n\nThe main door banged open, startling us.\n\n\"Your highness, my apologies, your father -- he's very sick!\" The man I recognised as Minmose, the Pharaoh's most trusted manservant, struggled to get his breath. Rahotep rushed to the man and they both disappeared into the darkness of the corridor. I was left to worry over them both.\n\nA couple hours later I was sat in the windowsill overlooking the Northern side of the palace. One of the smaller secret doors opened, revealing Metmotek, the boy I had known from my tribe who now worked in the gardens.\n\n\"Miss Amenia, you must get your things. You must leave.\"\n\n\"Metmotek! What on earth are you doing here?\" Ankhet began to shoo him from the chambers.\n\n\"No! You both must leave, now! There's something going on in the palace, there are screams heading this way. The forgotten prince! He's making his move. Please Amenia, Ankhet, you must go now! They will kill you both.\"\n\nAt that moment we heard the yelling, and heavy footfalls of men coming this way. I stared at Ankhet dumbly, frozen for a second. Then as one we moved.\n\nShe ran for the furs, for warmth, and I grabbed the jewels and the kohl. We'd spoken at length about this moment. It was most important that I hide my identity, and with my skin colour and hair colour that would be very difficult. My eyes were too light for normal around here, but hopefully if I kept my hair blackened, my skin dirtied and my eyes downcast it would be far easier to move from the city.\n\nWe left through one of the secret doors from the chambers, and we hadn't gone very far before we heard the main doors slam open and many feet pour into the chambers, searching for us. We picked up pace and ran.\n\nIt was almost total darkness in the secret passages of the palace, only a few shafts of light every now and again where normal corridors intersected and were lit by lamps. The three of us were very careful.\n\nWe had to go through the throne room to another servant's door which would take us to the kitchens, and from there to the city proper beyond the walls. We slipped out into the open space of the throne room, and everything was silent. No one would believe this night was any more bloody than any other, except there were no guards to be seen anywhere.\n\nUntil, of course, we made it halfway across the room and Ankhet let out a yelp, which she quickly stifled.\n\nAt her feet was the partially decapitated body of one of the guards, still gripping his spear. He hadn't had a chance. I wondered if the man who normally stood by his side had been the one to betray him.\n\nWe didn't have a moment to step around him before there was a commotion at the entrance of the room. Luckily the same column that concealed the body of the guard also leant us cover.\n\nDjet entered, flanked by two of his priests, all of them laughing. Their white ceremonial robes were splattered with blood. Behind them were two guards -- royal guards, sworn loyal to the Pharaoh. My heart boiled. Between them was Rahotep. He was unharmed, though seemed dazed as if they'd hit him on the head.\n\n\"Dearest brother!\" Djet announced to the nearly empty room. \"I'm afraid to inform you that our father has died!\" There was jeering and cheering from the few people nearby.\n\nI motioned Ankhet and Metmotek toward another secret door, not the one we wanted, but one which would lead us away from here. When they were safely inside, I palmed Ankhet some jewels, and she nodded forlornly at me and handed me one of the warm robes she carried. We embraced silently, Djet still commanding the attention of the men in the main part of the room. I silently closed the door behind her. Unless you knew it was there, it was totally invisible.\n\nThere were three passages from this room, and as Djet crowed his victory, the guards unknowingly stood by the third and final exit.\n\nFade and fracture. The fire.\n\nThe fire. Pull him through the fire.\n\nA plan formed in my head quickly, but I would need to watch for my moment. I stayed where I was.\n\n\"My brother, won't you celebrate the end of a tyrant with me?\" Djet lifted Rahotep's head by his hair, but it just lolled and he groaned. My throat constricted with worry.\n\n\"It is unfortunate that you won't celebrate, seeing as you don't have much time left to celebrate anyway. I plan to keep you alive long enough for you to witness me extinguishing that little flame of yours. Why she took to you, but not to me I'll never know. But this time there won't be much of an option, will there? They won't be long now, I sent them to bring her to me.\"\n\nDjet sniffed, and ascended the dais. Slowly, reverently, regally, he turned and sat on the throne, mere feet from where I stood. I had a wild moment where I wanted to jump up behind him and strangle him. But I was neither strong enough nor quick enough, the guards would be on me in an instant. I crouched back into the shadows and crept slowly toward where Rahotep lolled.\n\n\"Don't you think it fits me? Eh, brother? Far better than it would ever fit you.\"\n\n\"You aren't worthy.\" The whisper was barely audible.\n\n\"What? What's that, not worthy?\" Djet let out a laugh that echoed through the chamber, making me jump slightly. The bigger man leapt from the throne and down the stairs in one movement, landing a swift kick into the ribs of Rahotep.\n\n\"Not worthy, you little shit! I was worthy before you! Six years before you were even born, it was supposed to be me! You weren't even in the running until you were ten.\" Spittle flew from his mouth, his head growing redder and redder with rage. Finally he straightened and wiped his face of errant spit.\n\nThe room was silent for a moment as Djet paced in front of Rahotep, still muttering his anger. A guard entered the room.\n\n\"Sire, the slave is no longer in the chambers. We think she's escaped. A couple other slaves are missing, and some jewels have been stolen from the Regent's personal selection.\"",
        "\"Well. Maybe she wasn't so loyal to you after all. No matter, I can skip the step where I make her pay for what she did. I'll just make sure you get the message instead.\" Djet nodded to the guards flanking Rahotep, and they moved swiftly. One took his arms behind his back, and the other drew a blade.\n\nI acted just as quickly. I had positioned myself behind one of the huge podiums which was topped by a pan of oil, burning bright and lighting the dark room. This was the only light in the room, so as it toppled and poured burning oil over the floor, all the men jumped away, except Rahotep who was still kneeling.\n\nUp on its end, the oil pan rolled down the length of the room, directly in front of Rahotep. As the burning oil leaked over the floor, I ran behind it, tugging on him to follow me.\n\nIn the confusion I managed to open the servant's door, get us both through, and close it behind us again. I encouraged him to run with me, getting us both to the kitchens in record time. As we passed through the deserted servants areas, I took some grubby clothing hung up alongside the door, which was obviously used by the outdoor staff.\n\nI wiped my hands around the dead fireplace, gathering ashes and dirt in my hands, and I began smearing it on my face, arms and hands. We dressed with the fine warm clothes beneath the rags tied on to us over the top. I wrapped my hair in the wash rags, as best I could, and Rahotep gained enough of his senses to help me tuck in errant hairs.\n\nOne last moment in the palace before we fled into the night, Rahotep held my hand, and kissed me softly.\n\n\"Thank you for not leaving me.\"\n\nI couldn't respond, shouts from further down the servant's passage signalled that our getaway had been discovered.\n\nThe door from the kitchens opened directly on to a gutter, which opened out into a busy street. Because of the fasting ceremonies, almost every citizen was out of their house this evening, praising Amon, Mut and Khons. We blended straight into the crowds in our ragged garb.\n\nAs we reached the end of the street, the cacophony of righteous murmurs ringing through my ears, I looked back to the alley we'd emerged from. Three kings guard stood at the entrance, staring hopelessly into the faces of the crowd around them, knowing we'd made good on our escape. I spat in their direction, and pulled Rahotep further from the palace walls. "
    ],
    "authorname": "Tsania",
    "tags": [
        "drama",
        "romance novella",
        "oral",
        "slave",
        "slavery",
        "princess",
        "prince",
        "pharaoh",
        "historical romance",
        "historical"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/fire-queen-ch-02"
}